uint64_t sub_240978C34()
{
  void *v0;
  uint64_t result;
  id v2;
  uint64_t v3;
  id v4[2];

  v4[1] = *(id *)MEMORY[0x263EF8340];
  if (sub_240A02F28())
  {
    v0 = self;
    if (objc_msgSend(v0, sel_isHeadphoneExposureNotificationsSupportedOnActiveWatch))
    {
      v4[0] = 0;
      result = (uint64_t)objc_msgSend(v0, sel_isHeadphoneExposureNotificationsEnabledOnActiveWatchWithError_, v4);
      if (!v4[0]) {
        return result;
      }
      v2 = v4[0];
      swift_willThrow();
      if (qword_26AFD49D0 != -1) {
        swift_once();
      }
      v3 = sub_240A04018();
      sub_240979894(v3, (uint64_t)qword_26AFD6440);
      sub_2409C8E6C(v2);
    }
  }
  return 2;
}

BOOL sub_240978D60()
{
  v0 = self;
  if (!objc_msgSend(v0, sel_isHeadphoneExposureNotificationsEnabled))
  {
    if (sub_240978C34() != 2) {
      sub_2409C93F8();
    }
    goto LABEL_8;
  }
  unsigned __int8 v1 = objc_msgSend(v0, sel_isHeadphoneExposureMeasureLevelsEnabled);
  char v2 = sub_240978C34();
  if (v2 == 2 || (char v3 = v2, v4 = sub_2409C93F8(), v4 == 2))
  {
    if ((v1 & 1) == 0)
    {
      BOOL v5 = 1;
      return !v5;
    }
LABEL_8:
    BOOL v5 = 0;
    return !v5;
  }
  if (!v3) {
    goto LABEL_8;
  }
  BOOL v5 = v4 == 0;
  if (v1) {
    goto LABEL_8;
  }
  return !v5;
}

uint64_t sub_240978E1C()
{
  uint64_t v1 = *v0;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return v1;
}

uint64_t sub_240978E4C()
{
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void *)(v0 + 16);
  }
  else
  {
    uint64_t v1 = sub_24097A100();
    *(void *)(v0 + 16) = v1;
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    swift_bridgeObjectRelease();
  }
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return v1;
}

uint64_t sub_240978EA8@<X0>(uint64_t a1@<X8>)
{
  char v3 = (void *)MEMORY[0x263F8EED0];
  if ((*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v1) + 0xF8))())
  {
    if ((*(uint64_t (**)(void))((*v3 & *v1) + 0x108))())
    {
      if (qword_26AFD4988 != -1) {
        swift_once();
      }
      char v4 = (void *)qword_26AFD63C8;
      if (objc_msgSend((id)qword_26AFD63C8, sel_noiseEnabled)
        && (objc_msgSend(v4, sel_notificationsEnabled) & 1) != 0)
      {
        BOOL v5 = (unsigned int *)MEMORY[0x263F435C8];
      }
      else
      {
        BOOL v5 = (unsigned int *)MEMORY[0x263F435D0];
      }
    }
    else
    {
      BOOL v5 = (unsigned int *)MEMORY[0x263F435B8];
    }
    uint64_t v11 = *v5;
    uint64_t v12 = sub_240A02E88();
    uint64_t v14 = *(void *)(v12 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 104))(a1, v11, v12);
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    uint64_t v9 = a1;
    uint64_t v10 = 0;
    uint64_t v8 = v12;
  }
  else
  {
    uint64_t v6 = sub_240A02E88();
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
    uint64_t v8 = v6;
    uint64_t v9 = a1;
    uint64_t v10 = 1;
  }

  return v7(v9, v10, 1, v8);
}

uint64_t sub_2409790A0()
{
  uint64_t result = sub_240A04018();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_24097913C(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  char v3 = sub_240979488(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[6 * v9 + 4];
  if (a1 + 32 < v10 + 48 * v8 && v10 < a1 + 32 + 48 * v8) {
    goto LABEL_24;
  }
  sub_240983210(0, (unint64_t *)&qword_26AFD4998);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_240A052E8();
  __break(1u);
  return result;
}

unint64_t sub_2409792C8()
{
  sub_24097FCF8(0, &qword_26AFD4938, (uint64_t (*)(uint64_t))sub_240994BC8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240A06930;
  *(void *)(inited + 32) = 0xD000000000000013;
  *(void *)(inited + 40) = 0x8000000240A0AB40;
  *(void *)(inited + 48) = sel_onboardingCompleted;
  if (qword_26AFD3EE0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)algn_26AFD3F18;
  *(void *)(inited + 56) = qword_26AFD3F10;
  *(void *)(inited + 64) = v1;
  *(void *)(inited + 72) = sel_noiseEnabled;
  *(void *)(inited + 80) = 0xD000000000000014;
  *(void *)(inited + 88) = 0x8000000240A0AB60;
  *(void *)(inited + 96) = sel_notificationsEnabled;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return sub_24097B044(inited);
}

uint64_t sub_2409793DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 28);
  uint64_t v5 = sub_240A02B08();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t destroy for HearingTestPromotionFeedItemProvider()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_240979488(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_2409826E4(0, (unint64_t *)&unk_26AFD49C0, (unint64_t *)&qword_26AFD4998);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_240993CE8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2409795CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_240A04018();
  sub_2409825B0(v3, a2);
  sub_240979894(v3, (uint64_t)a2);
  if (qword_26AFD49D8 != -1) {
    swift_once();
  }
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_240A04CB8();
  return sub_240A04008();
}

unint64_t sub_240979684()
{
  sub_240A051F8();
  swift_bridgeObjectRelease();
  uint64_t v0 = (void *)sub_240A02C98();
  sub_240A02B28();

  sub_240A04CA8();
  swift_bridgeObjectRelease();
  return 0xD00000000000003DLL;
}

unint64_t sub_240979724()
{
  sub_240A051F8();
  swift_bridgeObjectRelease();
  uint64_t v0 = (void *)sub_240A02C98();
  sub_240A02B28();

  sub_240A04CA8();
  swift_bridgeObjectRelease();
  return 0xD000000000000041;
}

uint64_t sub_2409797C4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for HearingAppPluginDelegate();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  uint64_t v3 = OBJC_IVAR____TtC16HearingAppPlugin24HearingAppPluginDelegate_logger;
  if (qword_26AFD49D0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_240A04018();
  uint64_t v5 = sub_240979894(v4, (uint64_t)qword_26AFD6440);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v2 + v3, v5, v4);
  *a1 = v2;
  return result;
}

uint64_t sub_240979894(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t type metadata accessor for HearingAppPluginDelegate()
{
  uint64_t result = qword_26AFD4490;
  if (!qword_26AFD4490) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240979918()
{
  if ((*((unsigned char *)v0 + OBJC_IVAR____TtC16HearingAppPlugin17NoiseAvailability_promoteIfOnboarded) & 1) == 0)
  {
    if (qword_26AFD4988 != -1) {
      swift_once();
    }
    objc_msgSend((id)qword_26AFD63C8, sel_onboardingCompleted);
  }
  uint64_t v1 = (void *)MEMORY[0x263F8EED0];
  if ((*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF8))()) {
    (*(uint64_t (**)(void))((*v1 & *v0) + 0x108))();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v2 = v0;
  return sub_240A045D8();
}

uint64_t *sub_240979A54(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    a1[4] = a2[4];
    uint64_t v10 = sub_240A02B08();
    size_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    v11(v8, v9, v10);
  }
  return v3;
}

void *_s16HearingAppPlugin36HearingTestPromotionFeedItemProviderVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return a1;
}

uint64_t sub_240979BA4()
{
  sub_24097FDC0(0);
  uint64_t v0 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v0);
  int v4 = (char *)&v12 - v3;
  if (!sub_240978D60())
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x263F435C0];
    goto LABEL_11;
  }
  unsigned int v5 = objc_msgSend(self, sel_isHeadphoneExposureNotificationsEnabled);
  char v6 = sub_240978C34();
  if (v6 != 2)
  {
    if (v6) {
      char v8 = 1;
    }
    else {
      char v8 = v5;
    }
    if ((v8 & 1) == 0) {
      goto LABEL_4;
    }
LABEL_10:
    uint64_t v7 = (unsigned int *)MEMORY[0x263F435C8];
    goto LABEL_11;
  }
  if (v5) {
    goto LABEL_10;
  }
LABEL_4:
  uint64_t v7 = (unsigned int *)MEMORY[0x263F435D0];
LABEL_11:
  uint64_t v9 = *v7;
  uint64_t v10 = sub_240A02E88();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v4, v9, v10);
  sub_240A02E88();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 0, 1, v10);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24097FC94((uint64_t)v4, (uint64_t)v2);
  swift_retain();
  sub_240A045D8();
  return sub_24097FC38((uint64_t)v4);
}

uint64_t sub_240979D68()
{
  uint64_t v1 = (uint64_t (*)(void, uint64_t))MEMORY[0x263EFDE58];
  sub_24097FD5C(0, &qword_26AFD4860, (uint64_t (*)(uint64_t))sub_24097FDC0, MEMORY[0x263EFDE58]);
  uint64_t v26 = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unsigned int v5 = (char *)v25 - v4;
  sub_24097FDC0(0);
  v25[1] = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  size_t v11 = (char *)v25 - v10;
  sub_24098295C(0, (unint64_t *)&qword_26AFD4868, MEMORY[0x263F8D4F8], v1);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  v16 = (char *)v25 - v15;
  uint64_t v17 = v0 + OBJC_IVAR____TtC16HearingAppPlugin34HeadphoneNotificationsAvailability__promotionVisibility;
  char v28 = 0;
  sub_240A045A8();
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v17, v16, v13);
  uint64_t v18 = v0 + OBJC_IVAR____TtC16HearingAppPlugin34HeadphoneNotificationsAvailability__featureStatus;
  uint64_t v19 = sub_240A02E88();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v11, 1, 1, v19);
  sub_24097FC94((uint64_t)v11, (uint64_t)v9);
  sub_240A045A8();
  sub_24097FC38((uint64_t)v11);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v18, v5, v26);
  uint64_t v20 = OBJC_IVAR____TtC16HearingAppPlugin34HeadphoneNotificationsAvailability_logger;
  if (qword_26AFD49D0 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_240A04018();
  uint64_t v22 = sub_240979894(v21, (uint64_t)qword_26AFD6440);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v0 + v20, v22, v21);
  *(void *)(v0 + OBJC_IVAR____TtC16HearingAppPlugin34HeadphoneNotificationsAvailability_notificationsCancellable) = 0;
  sub_240979BA4();
  BOOL v23 = sub_24097DD7C();
  swift_getKeyPath();
  swift_getKeyPath();
  BOOL v27 = v23;
  swift_retain();
  sub_240A045D8();
  sub_24097CB54();
  return v0;
}

uint64_t sub_24097A100()
{
  sub_2409807D0(0, (unint64_t *)&unk_26AFD49C0, (uint64_t (*)(uint64_t))sub_24099CF58, MEMORY[0x263F8E0F8]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_240A06930;
  *(void *)(v0 + 56) = &type metadata for HearingHealthArticleDataProvider;
  *(void *)(v0 + 64) = sub_240983E88();
  *(void *)(v0 + 72) = sub_240983E34();
  *(void *)(v0 + 104) = &type metadata for AudiogramArticleDataProvider;
  *(void *)(v0 + 112) = sub_240983AA4();
  *(void *)(v0 + 120) = sub_240983A50();
  *(void *)(v0 + 152) = &type metadata for HeadphoneListeningArticleDataProvider;
  *(void *)(v0 + 160) = sub_240983684();
  *(void *)(v0 + 168) = sub_240983630();
  id v1 = objc_msgSend(self, sel_sharedBehavior);
  if (!v1)
  {
    __break(1u);
LABEL_7:
    __break(1u);
  }
  uint64_t v2 = v1;
  id v3 = objc_msgSend(v1, sel_features);

  if (!v3) {
    goto LABEL_7;
  }
  unsigned int v4 = objc_msgSend(v3, sel_yodel);

  if (v4)
  {
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_240A06870;
    *(void *)(inited + 56) = &type metadata for HearingAidsArticleDataProvider;
    *(void *)(inited + 64) = sub_240983F30();
    *(void *)(inited + 72) = sub_240983EDC();
    sub_24097913C(inited);
  }
  return v0;
}

void sub_24097A2C0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_240A02CA8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(self, sel_sharedBehavior);
  if (!v8)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v9 = v8;
  id v10 = objc_msgSend(v8, sel_features);

  if (!v10)
  {
LABEL_9:
    __break(1u);
    return;
  }
  unsigned int v11 = objc_msgSend(v10, sel_yodel);

  if (v11)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    uint64_t v12 = qword_26AFD42D8;
    id v13 = (id)*MEMORY[0x263F09768];
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v14 = qword_26AFD6378;
    v18[4] = &type metadata for HearingTestPromotionFeedItemProvider;
    unint64_t v15 = sub_240983D24();
    v18[1] = v14;
    v18[2] = 0xD00000000000001ELL;
    v18[5] = v15;
    v18[3] = 0x8000000240A0A500;
    uint64_t v16 = sub_240A02D48();
    uint64_t v17 = MEMORY[0x263F459B0];
    *(void *)(a2 + 24) = v16;
    *(void *)(a2 + 32) = v17;
    sub_24097F464((uint64_t *)a2);
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_240A02D38();
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
}

uint64_t sub_24097A4D0(uint64_t a1)
{
  uint64_t v2 = sub_240A02CA8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2);
  sub_2409824F4(0, (unint64_t *)&unk_26AFD4850, MEMORY[0x263F8D4F8], MEMORY[0x263EFDE48]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v20 - v8;
  sub_240982FD8(0, &qword_26AFD47A8, (void (*)(uint64_t))sub_240982BFC, (void (*)(void))sub_240982C64);
  uint64_t v20 = *(void *)(v10 - 8);
  uint64_t v21 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v20 - v11;
  swift_beginAccess();
  sub_2409824F4(0, (unint64_t *)&qword_26AFD4868, MEMORY[0x263F8D4F8], MEMORY[0x263EFDE58]);
  sub_240A045B8();
  swift_endAccess();
  sub_240982A00();
  uint64_t v13 = sub_240A045F8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v23 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v14 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v15 + v14, (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  *(void *)(v15 + ((v4 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = v22;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_2409834C8;
  *(void *)(v16 + 24) = v15;
  sub_240982BFC();
  sub_240983FAC();
  sub_240982C64();
  sub_240A04638();
  swift_release();
  swift_release();
  sub_240983060();
  uint64_t v17 = v21;
  uint64_t v18 = sub_240A04628();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v12, v17);
  return v18;
}

uint64_t sub_24097A89C(uint64_t a1)
{
  uint64_t v2 = sub_240A02CA8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2);
  sub_2409824F4(0, (unint64_t *)&unk_26AFD4850, MEMORY[0x263F8D4F8], MEMORY[0x263EFDE48]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v20 - v8;
  sub_240982FD8(0, &qword_26AFD47A8, (void (*)(uint64_t))sub_240982BFC, (void (*)(void))sub_240982C64);
  uint64_t v20 = *(void *)(v10 - 8);
  uint64_t v21 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v20 - v11;
  swift_beginAccess();
  sub_2409824F4(0, (unint64_t *)&qword_26AFD4868, MEMORY[0x263F8D4F8], MEMORY[0x263EFDE58]);
  sub_240A045B8();
  swift_endAccess();
  sub_240982A00();
  uint64_t v13 = sub_240A045F8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v23 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v14 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v15 + v14, (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  *(void *)(v15 + ((v4 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = v22;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_2409838A4;
  *(void *)(v16 + 24) = v15;
  sub_240982BFC();
  sub_240983FAC();
  sub_240982C64();
  sub_240A04638();
  swift_release();
  swift_release();
  sub_240983060();
  uint64_t v17 = v21;
  uint64_t v18 = sub_240A04628();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v12, v17);
  return v18;
}

uint64_t sub_24097AC68(uint64_t a1)
{
  uint64_t v25 = a1;
  uint64_t v1 = sub_240A02CA8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24097E96C(0, &qword_26AFD4840, (uint64_t (*)(uint64_t))sub_24097FDC0, MEMORY[0x263EFDE48]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v24 - v8;
  sub_240982FD8(0, &qword_26AFD4798, sub_240982D24, (void (*)(void))sub_240982D44);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v27 = v10;
  uint64_t v28 = v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v24 - v12;
  swift_beginAccess();
  sub_24097E96C(0, &qword_26AFD4860, (uint64_t (*)(uint64_t))sub_24097FDC0, MEMORY[0x263EFDE58]);
  sub_240A045B8();
  swift_endAccess();
  sub_240982A7C();
  uint64_t v14 = v25;
  uint64_t v15 = sub_240A045F8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v29 = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v14, v1);
  unint64_t v16 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v17 = (v3 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = v26;
  *(void *)(v18 + 16) = v26;
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v18 + v16, v4, v1);
  *(void *)(v18 + v17) = v19;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_240983950;
  *(void *)(v20 + 24) = v18;
  sub_240982D24(0);
  sub_240983FAC();
  sub_240982D44();
  sub_240A04638();
  swift_release();
  swift_release();
  sub_2409830E8();
  uint64_t v21 = v27;
  uint64_t v22 = sub_240A04628();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v21);
  return v22;
}

unint64_t sub_24097B044(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_240982740(0, &qword_26AFD48F8);
  uint64_t v2 = (void *)sub_240A052C8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    unint64_t result = sub_24097B164(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24097B164(uint64_t a1, uint64_t a2)
{
  sub_240A053F8();
  sub_240A04C98();
  uint64_t v4 = sub_240A05418();

  return sub_24097B1DC(a1, a2, v4);
}

unint64_t sub_24097B1DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_240A05368() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_240A05368() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_24097B2C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v56 = a3;
  sub_24097FDC0(0);
  uint64_t v53 = *(void *)(v4 - 8);
  uint64_t v52 = *(void *)(v53 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v51 = (uint64_t)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240A02C58();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240A02C78();
  MEMORY[0x270FA5388](v9 - 8);
  v58 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_240A02CA8();
  uint64_t v44 = v11;
  uint64_t v46 = *(void *)(v11 - 8);
  uint64_t v12 = v46;
  uint64_t v13 = *(void *)(v46 + 64);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  v47 = (char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  unint64_t v16 = (char *)v41 - v15;
  v50 = (char *)v41 - v15;
  unint64_t v43 = sub_240979684();
  unint64_t v57 = v17;
  v45 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v45(v16, a1, v11);
  uint64_t v18 = (void *)sub_240A02C98();
  sub_24097E96C(0, &qword_26AFD4900, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v19 = sub_240A02B08();
  uint64_t v20 = *(void *)(v19 - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_240A06870;
  (*(void (**)(unint64_t, void, uint64_t))(v20 + 104))(v22 + v21, *MEMORY[0x263F454E0], v19);
  id v23 = v18;
  sub_24097E9D0(v22);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v24 = sub_240982204();
  sub_240981A48(v24);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v48 + 104))(v8, *MEMORY[0x263F45688], v49);
  sub_240A02C68();

  unint64_t v25 = v43;
  uint64_t v26 = sub_240A02CD8();
  uint64_t v48 = v27;
  uint64_t v49 = v26;
  uint64_t v42 = v28;
  v41[1] = v29;
  uint64_t v30 = v51;
  sub_24097FC94(v54, v51);
  v31 = v47;
  uint64_t v32 = v44;
  v45(v47, a1, v44);
  unint64_t v33 = (*(unsigned __int8 *)(v53 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  unint64_t v34 = (v52 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = v46;
  unint64_t v36 = (*(unsigned __int8 *)(v46 + 80) + v34 + 16) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  uint64_t v37 = swift_allocObject();
  sub_24097F7DC(v30, v37 + v33);
  v38 = (unint64_t *)(v37 + v34);
  unint64_t v39 = v57;
  unint64_t *v38 = v25;
  v38[1] = v39;
  (*(void (**)(unint64_t, char *, uint64_t))(v35 + 32))(v37 + v36, v31, v32);
  *(void *)(v37 + ((v13 + v36 + 7) & 0xFFFFFFFFFFFFFFF8)) = v55;
  return sub_240A02CB8();
}

uint64_t sub_24097B7B0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v26 = sub_240A02C58();
  uint64_t v4 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240A02C78();
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v27 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v2 + OBJC_IVAR____TtC16HearingAppPlugin36NoiseNotificationsPromotionGenerator_deviceConfigurationProvider;
  if (qword_26AFD4990 != -1) {
    swift_once();
  }
  sub_240983BC8((uint64_t)&unk_26AFD63D0, v9);
  uint64_t v10 = OBJC_IVAR____TtC16HearingAppPlugin36NoiseNotificationsPromotionGenerator_managedOnboardingExperiences;
  sub_240982614(0, &qword_26AFD4920, (unint64_t *)&qword_26AFD45B0, (uint64_t)&protocol descriptor for OnboardingExperienceDataProviding, MEMORY[0x263F8E0F8]);
  uint64_t v11 = swift_allocObject();
  long long v25 = xmmword_240A06870;
  *(_OWORD *)(v11 + 16) = xmmword_240A06870;
  *(void *)(v11 + 56) = type metadata accessor for EnvironmentAudioNotificationOnboardingDataProvider();
  *(void *)(v11 + 64) = &off_26F4FAD60;
  uint64_t v12 = sub_24097F464((uint64_t *)(v11 + 32));
  if (qword_26AFD49D0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_240A04018();
  uint64_t v14 = sub_240979894(v13, (uint64_t)qword_26AFD6440);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v12, v14, v13);
  *(void *)(v2 + v10) = v11;
  *(void *)(v2 + OBJC_IVAR____TtC16HearingAppPlugin36NoiseNotificationsPromotionGenerator____lazy_storage___publisher) = 0;
  sub_240A02C88();
  sub_240980754(&v30, v2 + OBJC_IVAR____TtC16HearingAppPlugin36NoiseNotificationsPromotionGenerator_context);
  uint64_t v15 = (void *)sub_240A02C98();
  sub_240982B98(0, &qword_26AFD4900, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v16 = sub_240A02B08();
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = v25;
  (*(void (**)(unint64_t, void, uint64_t))(v17 + 104))(v19 + v18, *MEMORY[0x263F45580], v16);
  id v20 = v15;
  sub_24097E9D0(v19);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v21 = sub_240983C24();
  sub_240981A48(v21);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F45688], v26);
  uint64_t v22 = v27;
  sub_240A02C68();

  uint64_t v23 = sub_240A02CA8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(a1, v23);
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v2 + OBJC_IVAR____TtC16HearingAppPlugin36NoiseNotificationsPromotionGenerator_domain, v22, v29);
  return v2;
}

uint64_t sub_24097BC3C(uint64_t a1, void *a2)
{
  uint64_t v39 = a1;
  uint64_t v48 = *v2;
  uint64_t v49 = a2;
  uint64_t v46 = sub_240A02CA8();
  uint64_t v43 = *(void *)(v46 - 8);
  uint64_t v45 = *(void *)(v43 + 64);
  MEMORY[0x270FA5388](v46);
  uint64_t v42 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263EFDE30];
  sub_24097EE10(0, &qword_26AFD4820, MEMORY[0x263EFDE30]);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v51 = v4;
  uint64_t v52 = v5;
  MEMORY[0x270FA5388](v4);
  v47 = (char *)&v37 - v6;
  uint64_t v40 = sub_240A02C58();
  uint64_t v7 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_240A02C78();
  uint64_t v38 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)sub_240A02C98();
  sub_24097E96C(0, &qword_26AFD4900, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v13 = sub_240A02B08();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_240A06800;
  unint64_t v18 = v17 + v16;
  uint64_t v19 = *(void (**)(unint64_t, void, uint64_t))(v14 + 104);
  v19(v18, *MEMORY[0x263F454E0], v13);
  v19(v18 + v15, *MEMORY[0x263F45580], v13);
  id v20 = v12;
  sub_24097E9D0(v17);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v21 = sub_240982204();
  sub_240981A48(v21);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F45688], v40);
  sub_240A02C68();

  uint64_t v22 = v44;
  (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v44 + OBJC_IVAR____TtC16HearingAppPlugin35NoiseNotificationsGeneratorPipeline_domain, v11, v41);
  uint64_t v24 = v42;
  uint64_t v23 = v43;
  uint64_t v25 = v39;
  uint64_t v26 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v42, v39, v46);
  unint64_t v27 = (*(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  unint64_t v28 = (v45 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v23 + 32))(v29 + v27, v24, v26);
  uint64_t v30 = v48;
  v31 = v49;
  *(void *)(v29 + v28) = v49;
  *(void *)(v29 + ((v28 + 15) & 0xFFFFFFFFFFFFFFF8)) = v30;
  sub_240982DDC(0);
  sub_24097ED2C(&qword_26AFD47C0, sub_240982DDC);
  id v32 = v31;
  unint64_t v33 = v47;
  sub_240A04588();
  sub_240982EA8(&qword_26AFD4818, &qword_26AFD4820, v50);
  uint64_t v34 = v51;
  uint64_t v35 = sub_240A04628();
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v26);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v33, v34);
  uint64_t result = v22;
  *(void *)(v22 + OBJC_IVAR____TtC16HearingAppPlugin35NoiseNotificationsGeneratorPipeline_publisher) = v35;
  return result;
}

uint64_t sub_24097C214(uint64_t a1, int a2)
{
  int v44 = a2;
  uint64_t v34 = a1;
  uint64_t v43 = *v2;
  uint64_t v41 = sub_240A02CA8();
  uint64_t v38 = *(void *)(v41 - 8);
  uint64_t v40 = *(void *)(v38 + 64);
  MEMORY[0x270FA5388](v41);
  uint64_t v37 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240982B04();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v45 = v4;
  uint64_t v46 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v42 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_240A02C58();
  uint64_t v7 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_240A02C78();
  uint64_t v10 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)sub_240A02C98();
  sub_24097E908(0, &qword_26AFD4900, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v14 = sub_240A02B08();
  uint64_t v15 = *(void *)(v14 - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_240A06870;
  (*(void (**)(unint64_t, void, uint64_t))(v15 + 104))(v17 + v16, *MEMORY[0x263F45580], v14);
  id v18 = v13;
  sub_24097E9D0(v17);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v19 = sub_240983A4C();
  sub_240981A48(v19);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F45688], v35);
  sub_240A02C68();

  uint64_t v20 = v39;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v39 + OBJC_IVAR____TtC16HearingAppPlugin40HeadphoneNotificationsPromotionGenerator_domain, v12, v36);
  uint64_t v22 = v37;
  uint64_t v21 = v38;
  uint64_t v23 = v34;
  uint64_t v24 = v41;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v37, v34, v41);
  unint64_t v25 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v26 = v25 + v40;
  unint64_t v27 = (v25 + v40) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v21 + 32))(v28 + v25, v22, v24);
  *(unsigned char *)(v28 + v26) = v44;
  *(void *)(v27 + v28 + 8) = v43;
  sub_240982C98();
  sub_24097C7AC(&qword_26AFD47E0, (void (*)(uint64_t))sub_240982C98);
  uint64_t v29 = v42;
  sub_240A04588();
  sub_24097C7AC(&qword_26AFD4828, (void (*)(uint64_t))sub_240982B04);
  uint64_t v30 = v45;
  uint64_t v31 = sub_240A04628();
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v24);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v29, v30);
  uint64_t result = v20;
  *(void *)(v20 + OBJC_IVAR____TtC16HearingAppPlugin40HeadphoneNotificationsPromotionGenerator_publisher) = v31;
  return result;
}

uint64_t sub_24097C7AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24097C7F4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2409F5BE4(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24097C838@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v5 = sub_240A02CA8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240A04018();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A03FE8();
  uint64_t v13 = sub_240A03FF8();
  os_log_type_t v14 = sub_240A04EC8();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v29 = a1;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v27 = v6;
    unint64_t v16 = (uint8_t *)v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v30 = a3;
    uint64_t v18 = v17;
    uint64_t v33 = v17;
    uint64_t v26 = v9;
    *(_DWORD *)unint64_t v16 = 136315138;
    uint64_t v28 = v5;
    uint64_t v19 = sub_240A05478();
    uint64_t v32 = sub_240981440(v19, v20, &v33);
    uint64_t v5 = v28;
    sub_240A050D8();
    a1 = v29;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240976000, v13, v14, "%s Creating feed item generator for promotion", v16, 0xCu);
    swift_arrayDestroy();
    uint64_t v21 = v18;
    a3 = v30;
    MEMORY[0x2456058A0](v21, -1, -1);
    uint64_t v22 = v16;
    uint64_t v6 = v27;
    MEMORY[0x2456058A0](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v26);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  uint64_t v23 = type metadata accessor for NoiseNotificationsPromotionGenerator();
  swift_allocObject();
  uint64_t v24 = sub_24097B7B0((uint64_t)v8);
  a3[3] = v23;
  uint64_t result = sub_24097ED2C(&qword_26AFD4050, (void (*)(uint64_t))type metadata accessor for NoiseNotificationsPromotionGenerator);
  a3[4] = result;
  *a3 = v24;
  return result;
}

uint64_t sub_24097CB54()
{
  uint64_t v1 = v0;
  sub_240982EEC();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v19 = v2;
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240A04F78();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v18 - v11;
  sub_24097CF14(&qword_26AFD3CF8, (void (*)(uint64_t))type metadata accessor for HeadphoneNotificationsAvailability);
  uint64_t v13 = sub_240A03008();
  objc_msgSend(self, sel_startObservingForChanges);
  id v14 = objc_msgSend(self, sel_defaultCenter);
  sub_240A04F88();

  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  uint64_t v21 = v13;
  sub_240982DFC();
  sub_24097CF14((unint64_t *)&unk_26AFD3ED0, MEMORY[0x263F07CB0]);
  sub_24097CF14(&qword_26AFD3EC0, (void (*)(uint64_t))sub_240982DFC);
  swift_retain();
  sub_240A044C8();
  swift_allocObject();
  swift_weakInit();
  sub_24097CF14(&qword_26AFD3EB0, (void (*)(uint64_t))sub_240982EEC);
  uint64_t v15 = v19;
  uint64_t v16 = sub_240A046A8();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  *(void *)(v1 + OBJC_IVAR____TtC16HearingAppPlugin34HeadphoneNotificationsAvailability_notificationsCancellable) = v16;
  return swift_release();
}

uint64_t sub_24097CF14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24097CF5C(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = a1;
  uint64_t v46 = *v2;
  uint64_t v47 = a2;
  uint64_t v44 = sub_240A02CA8();
  uint64_t v41 = *(void *)(v44 - 8);
  uint64_t v43 = *(void *)(v41 + 64);
  MEMORY[0x270FA5388](v44);
  uint64_t v40 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263EFDE30];
  sub_24097ED74(0, &qword_26AFD4820, MEMORY[0x263EFDE30]);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v49 = v4;
  uint64_t v50 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v45 = (char *)&v35 - v6;
  uint64_t v38 = sub_240A02C58();
  uint64_t v7 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_240A02C78();
  uint64_t v36 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)sub_240A02C98();
  sub_24097E96C(0, &qword_26AFD4900, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v13 = sub_240A02B08();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_240A06800;
  unint64_t v18 = v17 + v16;
  uint64_t v19 = *(void (**)(unint64_t, void, uint64_t))(v14 + 104);
  v19(v18, *MEMORY[0x263F454E0], v13);
  v19(v18 + v15, *MEMORY[0x263F45580], v13);
  id v20 = v12;
  sub_24097E9D0(v17);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v21 = sub_240982370();
  sub_240981A48(v21);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F45688], v38);
  sub_240A02C68();

  uint64_t v22 = v42;
  (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v42 + OBJC_IVAR____TtC16HearingAppPlugin39HeadphoneNotificationsGeneratorPipeline_domain, v11, v39);
  uint64_t v24 = v40;
  uint64_t v23 = v41;
  uint64_t v25 = v37;
  uint64_t v26 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v40, v37, v44);
  unint64_t v27 = (*(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  unint64_t v28 = (v43 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v23 + 32))(v29 + v27, v24, v26);
  uint64_t v30 = v46;
  *(void *)(v29 + v28) = v47;
  *(void *)(v29 + ((v28 + 15) & 0xFFFFFFFFFFFFFFF8)) = v30;
  sub_240982DDC(0);
  sub_24097ECE4(&qword_26AFD47C0, sub_240982DDC);
  swift_retain();
  uint64_t v31 = v45;
  sub_240A04588();
  sub_240982E64(&qword_26AFD4818, &qword_26AFD4820, v48);
  uint64_t v32 = v49;
  uint64_t v33 = sub_240A04628();
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v26);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v31, v32);
  uint64_t result = v22;
  *(void *)(v22 + OBJC_IVAR____TtC16HearingAppPlugin39HeadphoneNotificationsGeneratorPipeline_publisher) = v33;
  return result;
}

uint64_t sub_24097D538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v60 = a3;
  uint64_t v59 = a2;
  uint64_t v47 = a1;
  uint64_t v62 = a4;
  sub_24097FDC0(0);
  uint64_t v58 = *(void *)(v5 - 8);
  uint64_t v57 = *(void *)(v58 + 64);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v56 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240A02C58();
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v54 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v52 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240A02C78();
  MEMORY[0x270FA5388](v9 - 8);
  v63 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_240A02CA8();
  uint64_t v48 = v11;
  uint64_t v50 = *(void *)(v11 - 8);
  uint64_t v12 = v50;
  uint64_t v13 = *(void *)(v50 + 64);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v51 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  unint64_t v16 = (char *)&v43 - v15;
  uint64_t v55 = (char *)&v43 - v15;
  unint64_t v17 = sub_240979724();
  unint64_t v44 = v18;
  unint64_t v45 = v17;
  uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v49(v16, a1, v11);
  uint64_t v19 = (void *)sub_240A02C98();
  sub_24097E96C(0, &qword_26AFD4900, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v20 = sub_240A02B08();
  uint64_t v21 = *(void *)(v20 - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_240A06870;
  (*(void (**)(unint64_t, void, uint64_t))(v21 + 104))(v23 + v22, *MEMORY[0x263F454E0], v20);
  id v24 = v19;
  sub_24097E9D0(v23);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v25 = sub_240982370();
  sub_240981A48(v25);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v53 + 104))(v52, *MEMORY[0x263F45688], v54);
  sub_240A02C68();

  uint64_t v26 = sub_240A02CD8();
  uint64_t v53 = v27;
  uint64_t v54 = v26;
  uint64_t v52 = v28;
  int v46 = v29;
  uint64_t v30 = v56;
  sub_24097FC94(v59, v56);
  uint64_t v31 = v51;
  uint64_t v32 = v48;
  v49(v51, v47, v48);
  unint64_t v33 = (*(unsigned __int8 *)(v58 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  unint64_t v34 = (v57 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = v50;
  unint64_t v36 = (*(unsigned __int8 *)(v50 + 80) + v34 + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  unint64_t v37 = (v13 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v38 = swift_allocObject();
  sub_24097F7DC(v30, v38 + v33);
  uint64_t v39 = (unint64_t *)(v38 + v34);
  unint64_t v40 = v44;
  *uint64_t v39 = v45;
  v39[1] = v40;
  (*(void (**)(unint64_t, char *, uint64_t))(v35 + 32))(v38 + v36, v31, v32);
  uint64_t v41 = v61;
  *(void *)(v38 + v37) = v60;
  *(void *)(v38 + ((v37 + 15) & 0xFFFFFFFFFFFFFFF8)) = v41;
  swift_retain();
  return sub_240A02CB8();
}

uint64_t sub_24097DA44@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v29 = a3;
  uint64_t v7 = sub_240A02CA8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_240A04018();
  uint64_t v11 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A03FE8();
  uint64_t v14 = sub_240A03FF8();
  os_log_type_t v15 = sub_240A04EC8();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v27 = v8;
    uint64_t v17 = v16;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v32 = v26;
    *(_DWORD *)uint64_t v17 = 136315394;
    unint64_t v28 = v10;
    uint64_t v18 = sub_240A05478();
    uint64_t v29 = v7;
    uint64_t v31 = sub_240981440(v18, v19, &v32);
    uint64_t v10 = v28;
    sub_240A050D8();
    uint64_t v7 = v29;
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 1024;
    LODWORD(v31) = a1 & 1;
    sub_240A050D8();
    _os_log_impl(&dword_240976000, v14, v15, "%s Creating feed item generator for promotion isPromotionVisible: %{BOOL}d", (uint8_t *)v17, 0x12u);
    uint64_t v20 = v26;
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v20, -1, -1);
    uint64_t v21 = v17;
    uint64_t v8 = v27;
    MEMORY[0x2456058A0](v21, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v30);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  uint64_t v22 = type metadata accessor for HeadphoneNotificationsPromotionGenerator();
  swift_allocObject();
  uint64_t v23 = sub_24097C214((uint64_t)v10, a1 & 1);
  a4[3] = v22;
  uint64_t result = sub_24097ECE4(&qword_26AFD46A0, (void (*)(uint64_t))type metadata accessor for HeadphoneNotificationsPromotionGenerator);
  a4[4] = result;
  *a4 = v23;
  return result;
}

BOOL sub_24097DD7C()
{
  uint64_t v1 = sub_240A04018();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v5 = objc_msgSend(self, sel_isHeadphoneExposureNotificationsEnabled);
  char v6 = sub_240978C34();
  if (v6 == 2)
  {
    if (!v5)
    {
      BOOL v7 = 0;
      goto LABEL_6;
    }
  }
  else
  {
    BOOL v7 = v6 != 0;
    if ((v5 & 1) == 0) {
      goto LABEL_6;
    }
  }
  BOOL v7 = 1;
LABEL_6:
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0 + OBJC_IVAR____TtC16HearingAppPlugin34HeadphoneNotificationsAvailability_logger, v1);
  uint64_t v8 = sub_240A03FF8();
  os_log_type_t v9 = sub_240A04EC8();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v20 = v11;
    *(_DWORD *)uint64_t v10 = 136446722;
    uint64_t v12 = sub_240A05478();
    uint64_t v14 = sub_240981440(v12, v13, &v20);
    uint64_t v18 = v1;
    uint64_t v19 = v14;
    sub_240A050D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 1024;
    LODWORD(v19) = v7;
    sub_240A050D8();
    *(_WORD *)(v10 + 18) = 1024;
    BOOL v15 = !v7;
    LODWORD(v19) = !v7;
    sub_240A050D8();
    _os_log_impl(&dword_240976000, v8, v9, "[%{public}s] Feature Enabled %{BOOL}d. Promotion Visble: %{BOOL}d", (uint8_t *)v10, 0x18u);
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v11, -1, -1);
    MEMORY[0x2456058A0](v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v18);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return !v7;
  }
  return v15;
}

uint64_t sub_24097E048(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = a2;
  uint64_t v28 = a1;
  uint64_t v29 = sub_240A02CA8();
  uint64_t v2 = *(void *)(v29 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x270FA5388](v29);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24097E96C(0, &qword_26AFD4840, (uint64_t (*)(uint64_t))sub_24097FDC0, MEMORY[0x263EFDE48]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  os_log_type_t v9 = (char *)&v26 - v8;
  sub_240982FD8(0, &qword_26AFD4798, sub_240982D24, (void (*)(void))sub_240982D44);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v31 = v10;
  uint64_t v32 = v11;
  MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)&v26 - v12;
  swift_beginAccess();
  sub_24097E96C(0, &qword_26AFD4860, (uint64_t (*)(uint64_t))sub_24097FDC0, MEMORY[0x263EFDE58]);
  sub_240A045B8();
  swift_endAccess();
  sub_240982A7C();
  uint64_t v14 = v28;
  uint64_t v15 = sub_240A045F8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v33 = v15;
  uint64_t v16 = v14;
  uint64_t v17 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v16, v29);
  unint64_t v18 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v19 = (v3 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = v30;
  *(void *)(v20 + 16) = v30;
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v20 + v18, v4, v17);
  *(void *)(v20 + v19) = v27;
  *(void *)(v20 + ((v19 + 15) & 0xFFFFFFFFFFFFFFF8)) = v21;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_240983574;
  *(void *)(v22 + 24) = v20;
  sub_240982D24(0);
  sub_240983FAC();
  sub_240982D44();
  swift_retain();
  sub_240A04638();
  swift_release();
  swift_release();
  sub_2409830E8();
  uint64_t v23 = v31;
  uint64_t v24 = sub_240A04628();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v23);
  return v24;
}

uint64_t sub_24097E448@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263EFDC90];
  sub_24097EE10(0, &qword_26AFD47B8, MEMORY[0x263EFDC90]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  os_log_type_t v9 = (char *)v13 - v8;
  sub_24097E96C(0, &qword_26AFD4928, (uint64_t (*)(uint64_t))sub_240982DDC, MEMORY[0x263F8E0F8]);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_240A06800;
  *(void *)(v10 + 32) = sub_24097AC68(a1);
  *(void *)(v10 + 40) = sub_24097A89C(a1);
  v13[1] = v10;
  sub_240A04D38();
  sub_240982DDC(0);
  sub_24097E96C(0, &qword_26AFD4888, (uint64_t (*)(uint64_t))sub_240982DDC, MEMORY[0x263F8D488]);
  sub_24097ED2C(&qword_26AFD47C0, sub_240982DDC);
  sub_2409828D4();
  sub_240A044E8();
  sub_240982EA8(&qword_26AFD47B0, &qword_26AFD47B8, v4);
  uint64_t v11 = sub_240A04628();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *a2 = v11;
  return result;
}

uint64_t sub_24097E6A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263EFDC90];
  sub_24097ED74(0, &qword_26AFD47B8, MEMORY[0x263EFDC90]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v15 - v10;
  sub_24097E96C(0, &qword_26AFD4928, (uint64_t (*)(uint64_t))sub_240982DDC, MEMORY[0x263F8E0F8]);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_240A06800;
  *(void *)(v12 + 32) = sub_24097E048(a1, a2);
  *(void *)(v12 + 40) = sub_24097A4D0(a1);
  v15[1] = v12;
  sub_240A04D38();
  sub_240982DDC(0);
  sub_24097E96C(0, &qword_26AFD4888, (uint64_t (*)(uint64_t))sub_240982DDC, MEMORY[0x263F8D488]);
  sub_24097ECE4(&qword_26AFD47C0, sub_240982DDC);
  sub_2409828D4();
  sub_240A044E8();
  sub_240982E64(&qword_26AFD47B0, &qword_26AFD47B8, v6);
  uint64_t v13 = sub_240A04628();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *a3 = v13;
  return result;
}

void sub_24097E908(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24097E96C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_24097E9D0(uint64_t a1)
{
  uint64_t v2 = sub_240A02B08();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  unint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_2409E48A0();
    uint64_t v9 = sub_240A051C8();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_2409E49C8(&qword_26AFD4568, MEMORY[0x263F45588]);
      uint64_t v16 = sub_240A04BC8();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_2409E49C8(&qword_26AFD3CD0, MEMORY[0x263F45588]);
          char v23 = sub_240A04C08();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_24097ECE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24097ED2C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24097ED74(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_240982DDC(255);
    uint64_t v7 = v6;
    uint64_t v8 = sub_24097ECE4(&qword_26AFD47C0, sub_240982DDC);
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_24097EE10(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_240982DDC(255);
    uint64_t v7 = v6;
    uint64_t v8 = sub_24097ED2C(&qword_26AFD47C0, sub_240982DDC);
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_24097EEAC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_240A02CA8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v24[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(self, sel_sharedBehavior);
  if (!v8)
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v9 = v8;
  id v10 = objc_msgSend(v8, sel_features);

  if (!v10)
  {
LABEL_11:
    __break(1u);
    return;
  }
  unsigned int v11 = objc_msgSend(v10, sel_yodel);

  if (v11)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    uint64_t v12 = (void *)*MEMORY[0x263F09768];
    uint64_t v13 = type metadata accessor for HearingTestPromptFeedItemProvider();
    v24[3] = v13;
    v24[4] = sub_240980C50(&qword_26AFD4408, (void (*)(uint64_t))type metadata accessor for HearingTestPromptFeedItemProvider);
    uint64_t v14 = sub_24097F464(v24);
    *uint64_t v14 = 0xD00000000000001BLL;
    v14[1] = 0x8000000240A0ACC0;
    uint64_t v15 = qword_26AFD42D8;
    id v16 = v12;
    if (v15 != -1) {
      swift_once();
    }
    v14[2] = qword_26AFD6378;
    v14[3] = 0xD00000000000001BLL;
    v14[4] = 0x8000000240A0ACC0;
    uint64_t v17 = (char *)v14 + *(int *)(v13 + 28);
    uint64_t v18 = qword_26AFD4400;
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    if (v18 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_240A02B08();
    uint64_t v20 = sub_240979894(v19, (uint64_t)qword_26AFD6380);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v20, v19);
    uint64_t v21 = sub_240A02D48();
    uint64_t v22 = MEMORY[0x263F459B0];
    *(void *)(a2 + 24) = v21;
    *(void *)(a2 + 32) = v22;
    sub_24097F464((uint64_t *)a2);
    sub_240A02D38();
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
}

void sub_24097F17C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_240A02CA8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v24[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(self, sel_sharedBehavior);
  if (!v8)
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v9 = v8;
  id v10 = objc_msgSend(v8, sel_features);

  if (!v10)
  {
LABEL_11:
    __break(1u);
    return;
  }
  unsigned int v11 = objc_msgSend(v10, sel_yodel);

  if (v11)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    uint64_t v12 = (void *)*MEMORY[0x263F09768];
    uint64_t v13 = type metadata accessor for HearingTestRescindedFeedItemProvider();
    v24[3] = v13;
    v24[4] = sub_240980C50(&qword_26AFD4448, (void (*)(uint64_t))type metadata accessor for HearingTestRescindedFeedItemProvider);
    uint64_t v14 = sub_24097F464(v24);
    *uint64_t v14 = 0xD00000000000001ELL;
    v14[1] = 0x8000000240A0B4F0;
    uint64_t v15 = qword_26AFD4430;
    id v16 = v12;
    if (v15 != -1) {
      swift_once();
    }
    v14[2] = qword_26AFD63B0;
    v14[3] = 0xD000000000000014;
    v14[4] = 0x8000000240A0B510;
    uint64_t v17 = (char *)v14 + *(int *)(v13 + 28);
    uint64_t v18 = qword_26AFD4428;
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    if (v18 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_240A02B08();
    uint64_t v20 = sub_240979894(v19, (uint64_t)qword_26AFD6398);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v20, v19);
    uint64_t v21 = sub_240A02D48();
    uint64_t v22 = MEMORY[0x263F459B0];
    *(void *)(a2 + 24) = v21;
    *(void *)(a2 + 32) = v22;
    sub_24097F464((uint64_t *)a2);
    sub_240A02D38();
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
}

uint64_t *sub_24097F464(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_24097F4C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v36 = a4;
  sub_24097FDC0(0);
  uint64_t v37 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v31 - v13;
  uint64_t v38 = sub_240A04018();
  uint64_t v15 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A03FE8();
  sub_24097FC94(a1, (uint64_t)v14);
  uint64_t v18 = sub_240A03FF8();
  os_log_type_t v19 = sub_240A04EC8();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v35 = a2;
    uint64_t v21 = v20;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v40 = v32;
    *(_DWORD *)uint64_t v21 = 136315395;
    uint64_t v34 = a1;
    uint64_t v22 = sub_240A05478();
    uint64_t v36 = a3;
    uint64_t v39 = sub_240981440(v22, v23, &v40);
    uint64_t v33 = a5;
    sub_240A050D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2081;
    sub_24097FC94((uint64_t)v14, (uint64_t)v12);
    uint64_t v24 = sub_240A04C78();
    uint64_t v39 = sub_240981440(v24, v25, &v40);
    a5 = v33;
    a3 = v36;
    sub_240A050D8();
    a1 = v34;
    swift_bridgeObjectRelease();
    sub_24097FC38((uint64_t)v14);
    _os_log_impl(&dword_240976000, v18, v19, "%s Received featureStatus %{private}s", (uint8_t *)v21, 0x16u);
    uint64_t v26 = v32;
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v26, -1, -1);
    MEMORY[0x2456058A0](v21, -1, -1);
  }
  else
  {
    sub_24097FC38((uint64_t)v14);
  }

  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v38);
  uint64_t v27 = sub_240A02CC8();
  uint64_t v28 = MEMORY[0x263F456B8];
  a5[3] = v27;
  a5[4] = v28;
  uint64_t v29 = sub_24097F464(a5);
  return sub_24097B2C0(a3, a1, (uint64_t)v29);
}

uint64_t sub_24097F7DC(uint64_t a1, uint64_t a2)
{
  sub_24097FDC0(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_24097F840(int a1)
{
  int v30 = a1;
  sub_2409829A8();
  uint64_t v29 = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24097FCF8(0, &qword_26AFD4860, (uint64_t (*)(uint64_t))sub_24097FDC0, MEMORY[0x263EFDE58]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v29 - v9;
  sub_24097FDC0(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = &v1[OBJC_IVAR____TtC16HearingAppPlugin17NoiseAvailability__featureStatus];
  uint64_t v18 = sub_240A02E88();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v16, 1, 1, v18);
  sub_24097FC94((uint64_t)v16, (uint64_t)v14);
  os_log_type_t v19 = v1;
  sub_240A045A8();
  sub_24097FC38((uint64_t)v16);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v17, v10, v7);
  uint64_t v20 = &v19[OBJC_IVAR____TtC16HearingAppPlugin17NoiseAvailability__promotionVisibility];
  char v33 = 0;
  sub_240A045A8();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v20, v5, v29);
  v19[OBJC_IVAR____TtC16HearingAppPlugin17NoiseAvailability_promoteIfOnboarded] = v30;

  uint64_t v21 = (objc_class *)type metadata accessor for NoiseAvailability();
  v32.receiver = v19;
  v32.super_class = v21;
  id v22 = objc_msgSendSuper2(&v32, sel_init);
  sub_240978EA8((uint64_t)v16);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24097FC94((uint64_t)v16, (uint64_t)v14);
  id v23 = v22;
  sub_240A045D8();
  sub_24097FC38((uint64_t)v16);
  sub_240979918();
  unint64_t v24 = sub_2409792C8();
  id v31 = v23;
  sub_24097FDF4(v24, sub_24097FF84);
  swift_bridgeObjectRelease();
  id v25 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v26 = *MEMORY[0x263F576C8];
  id v27 = objc_msgSend(self, sel_sharedInstance);
  objc_msgSend(v25, sel_addObserver_selector_name_object_, v23, sel_pairedDevicesDidUpdate, v26, v27);

  return v23;
}

uint64_t sub_24097FC38(uint64_t a1)
{
  sub_24097FDC0(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24097FC94(uint64_t a1, uint64_t a2)
{
  sub_24097FDC0(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_24097FCF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24097FD5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24097FDC0(uint64_t a1)
{
}

uint64_t sub_24097FDF4(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v8) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v4 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v8) {
        return swift_release();
      }
      unint64_t v18 = *(void *)(v4 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v8) {
          return swift_release();
        }
        unint64_t v18 = *(void *)(v4 + 8 * v10);
        if (!v18)
        {
          int64_t v10 = v17 + 3;
          if (v17 + 3 >= v8) {
            return swift_release();
          }
          unint64_t v18 = *(void *)(v4 + 8 * v10);
          if (!v18) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v12 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_5:
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 8 * v12);
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    a2(v14, v15, v16);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v19 = v17 + 4;
  if (v19 >= v8) {
    return swift_release();
  }
  unint64_t v18 = *(void *)(v4 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v4 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_24097FF84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24097FF8C(a1, a2, a3, *(const void **)(v3 + 16));
}

void sub_24097FF8C(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  unint64_t v7 = CFNotificationCenterGetDarwinNotifyCenter();
  sub_240980180(0, (unint64_t *)&qword_26AFD4940, (unint64_t *)&qword_26AFD4950, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_240A06800;
  uint64_t v9 = MEMORY[0x263F8D310];
  *(void *)(v8 + 56) = MEMORY[0x263F8D310];
  unint64_t v10 = sub_2409800D4();
  *(void *)(v8 + 32) = 0xD000000000000010;
  *(void *)(v8 + 40) = 0x8000000240A0AB20;
  *(void *)(v8 + 96) = v9;
  *(void *)(v8 + 104) = v10;
  *(void *)(v8 + 64) = v10;
  *(void *)(v8 + 72) = a1;
  *(void *)(v8 + 80) = a2;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_240A04C68();
  name = (__CFString *)sub_240A04C18();
  swift_bridgeObjectRelease();
  CFNotificationCenterAddObserver(v7, a4, (CFNotificationCallback)sub_2409945EC, name, 0, CFNotificationSuspensionBehaviorDeliverImmediately);
}

unint64_t sub_2409800D4()
{
  unint64_t result = qword_26AFD4870;
  if (!qword_26AFD4870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD4870);
  }
  return result;
}

void sub_240980128(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_240983260(255, a3);
    unint64_t v4 = sub_240A050C8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_240980180(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_240983260(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_2409801E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24098024C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void *sub_2409802B0(uint64_t a1)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_240A02CA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (void *)sub_240A02C98();
  uint64_t v7 = (void *)sub_240A02B58();
  char v8 = sub_240A02B48();

  if ((v8 & 1) == 0) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_2409807D0(0, (unint64_t *)&qword_26AFD42A0, (uint64_t (*)(uint64_t))sub_240980834, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240A06800;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v10(v5, a1, v2);
  id v11 = objc_allocWithZone((Class)type metadata accessor for NoiseAvailability());
  id v12 = sub_24097F840(0);
  uint64_t v13 = type metadata accessor for NoiseNotificationsGeneratorPipeline();
  swift_allocObject();
  uint64_t v14 = sub_24097BC3C((uint64_t)v5, v12);

  *(void *)(inited + 56) = v13;
  *(void *)(inited + 64) = sub_240980C50(&qword_26AFD3F88, (void (*)(uint64_t))type metadata accessor for NoiseNotificationsGeneratorPipeline);
  *(void *)(inited + 32) = v14;
  v10(v5, a1, v2);
  type metadata accessor for HeadphoneNotificationsAvailability();
  swift_allocObject();
  uint64_t v15 = sub_240979D68();
  uint64_t v16 = type metadata accessor for HeadphoneNotificationsGeneratorPipeline();
  swift_allocObject();
  uint64_t v17 = sub_24097CF5C((uint64_t)v5, v15);
  swift_release();
  *(void *)(inited + 96) = v16;
  *(void *)(inited + 104) = sub_240980C50(&qword_26AFD45E0, (void (*)(uint64_t))type metadata accessor for HeadphoneNotificationsGeneratorPipeline);
  *(void *)(inited + 72) = v17;
  sub_24097A2C0(a1, (uint64_t)v32);
  unint64_t v18 = sub_240980AAC((void *)1, 3, 1, (void *)inited);
  v18[2] = 3;
  sub_24098076C((uint64_t)v32, (uint64_t)(v18 + 14));
  sub_24097EEAC(a1, (uint64_t)v32);
  unint64_t v20 = v18[2];
  unint64_t v19 = v18[3];
  if (v20 >= v19 >> 1) {
    unint64_t v18 = sub_240980AAC((void *)(v19 > 1), v20 + 1, 1, v18);
  }
  v18[2] = v20 + 1;
  sub_24098076C((uint64_t)v32, (uint64_t)&v18[5 * v20 + 4]);
  sub_24097F17C(a1, (uint64_t)v32);
  unint64_t v22 = v18[2];
  unint64_t v21 = v18[3];
  if (v22 >= v21 >> 1) {
    unint64_t v18 = sub_240980AAC((void *)(v21 > 1), v22 + 1, 1, v18);
  }
  v18[2] = v22 + 1;
  uint64_t v23 = (uint64_t)(v18 + 4);
  sub_24098076C((uint64_t)v32, (uint64_t)&v18[5 * v22 + 4]);
  uint64_t v24 = v18[2];
  if (!v24)
  {
    swift_bridgeObjectRelease();
    return (void *)MEMORY[0x263F8EE78];
  }
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  id v25 = (void *)MEMORY[0x263F8EE78];
  do
  {
    sub_240980A48(v23, (uint64_t)v32);
    sub_24098076C((uint64_t)v32, (uint64_t)&v29);
    if (v30)
    {
      sub_240980754(&v29, (uint64_t)v31);
      sub_240980754(v31, (uint64_t)&v29);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v25 = sub_240980A2C(0, v25[2] + 1, 1, v25);
      }
      unint64_t v27 = v25[2];
      unint64_t v26 = v25[3];
      if (v27 >= v26 >> 1) {
        id v25 = sub_240980A2C((void *)(v26 > 1), v27 + 1, 1, v25);
      }
      void v25[2] = v27 + 1;
      sub_240980754(&v29, (uint64_t)&v25[5 * v27 + 4]);
    }
    else
    {
      sub_2409A656C((uint64_t)&v29);
    }
    v23 += 40;
    --v24;
  }
  while (v24);
  swift_bridgeObjectRelease_n();
  return v25;
}

uint64_t sub_240980754(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_24098076C(uint64_t a1, uint64_t a2)
{
  sub_240980834(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2409807D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_240980834(uint64_t a1)
{
}

void *sub_240980868(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, unint64_t *a6, uint64_t a7)
{
  char v9 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v11 = a2;
    goto LABEL_8;
  }
  unint64_t v10 = a4[3];
  uint64_t v11 = v10 >> 1;
  if ((uint64_t)(v10 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v11 + 0x4000000000000000 >= 0)
  {
    uint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v11 = a2;
    }
LABEL_8:
    uint64_t v12 = a4[2];
    if (v11 <= v12) {
      uint64_t v13 = a4[2];
    }
    else {
      uint64_t v13 = v11;
    }
    if (v13)
    {
      sub_2409809C4(0, a5, a6, a7, MEMORY[0x263F8E0F8]);
      uint64_t v14 = (void *)swift_allocObject();
      size_t v15 = j__malloc_size(v14);
      v14[2] = v12;
      v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
      uint64_t v16 = v14 + 4;
      if (v9)
      {
LABEL_13:
        if (v14 != a4 || v16 >= &a4[5 * v12 + 4]) {
          memmove(v16, a4 + 4, 40 * v12);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v14 = (void *)MEMORY[0x263F8EE78];
      uint64_t v16 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_240982794(0, v12, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v14;
  }
  __break(1u);
  return result;
}

void sub_2409809C4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_240983260(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void *sub_240980A2C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_240980868(a1, a2, a3, a4, &qword_26AFD4918, (unint64_t *)&qword_26AFD4578, MEMORY[0x263F456E8]);
}

uint64_t sub_240980A48(uint64_t a1, uint64_t a2)
{
  sub_240980834(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_240980AAC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_240980BCC();
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_240993E0C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void sub_240980BCC()
{
  if (!qword_26AFD42A0)
  {
    sub_2409809C4(255, &qword_26AFD4298, (unint64_t *)&qword_26AFD4578, MEMORY[0x263F456E8], MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_240A05358();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD42A0);
    }
  }
}

uint64_t sub_240980C50(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240980C98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v39 = a5;
  sub_24097FDC0(0);
  uint64_t v41 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v40 = (uint64_t)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  size_t v15 = (char *)&v34 - v14;
  uint64_t v16 = sub_240A04018();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  unint64_t v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A03FE8();
  sub_24097FC94(a1, (uint64_t)v15);
  unint64_t v20 = sub_240A03FF8();
  os_log_type_t v21 = sub_240A04EC8();
  int v38 = v21;
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v37 = a4;
    uint64_t v23 = v22;
    uint64_t v35 = swift_slowAlloc();
    uint64_t v43 = v35;
    *(_DWORD *)uint64_t v23 = 136315395;
    uint64_t v36 = v16;
    uint64_t v24 = sub_240A05478();
    uint64_t v39 = a2;
    uint64_t v42 = sub_240981440(v24, v25, &v43);
    uint64_t v34 = v17;
    sub_240A050D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2081;
    sub_24097FC94((uint64_t)v15, v40);
    uint64_t v26 = sub_240A04C78();
    uint64_t v42 = sub_240981440(v26, v27, &v43);
    sub_240A050D8();
    swift_bridgeObjectRelease();
    sub_24097FC38((uint64_t)v15);
    _os_log_impl(&dword_240976000, v20, (os_log_type_t)v38, "%s Received featureStatus %{private}s", (uint8_t *)v23, 0x16u);
    uint64_t v28 = v35;
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v28, -1, -1);
    uint64_t v29 = v23;
    a4 = v37;
    MEMORY[0x2456058A0](v29, -1, -1);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v36);
  }
  else
  {
    sub_24097FC38((uint64_t)v15);

    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  uint64_t v30 = sub_240A02CC8();
  uint64_t v31 = MEMORY[0x263F456B8];
  a6[3] = v30;
  a6[4] = v31;
  objc_super v32 = sub_24097F464(a6);
  return sub_24097D538(a3, a1, a4, (uint64_t)v32);
}

void *sub_240980FEC(uint64_t a1)
{
  return sub_240981010(a1);
}

void *sub_240981010(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_240A02CA8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v37 - v9;
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)v37 - v9, a1, v4);
  uint64_t v12 = sub_240A03FF8();
  os_log_type_t v13 = sub_240A04EC8();
  int v43 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v42 = v2;
    uint64_t v15 = v14;
    uint64_t v39 = swift_slowAlloc();
    uint64_t v45 = v39;
    *(_DWORD *)uint64_t v15 = 136446466;
    os_log_t v38 = v12;
    uint64_t v16 = sub_240A05478();
    uint64_t v44 = sub_240981440(v16, v17, &v45);
    uint64_t v41 = v5 + 16;
    sub_240A050D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2082;
    v37[1] = v15 + 14;
    uint64_t v18 = (void *)sub_240A02C98();
    unint64_t v19 = v8;
    uint64_t v20 = a1;
    uint64_t v21 = sub_240A02B38();
    uint64_t v40 = v11;
    uint64_t v22 = v4;
    unint64_t v24 = v23;

    uint64_t v25 = v21;
    a1 = v20;
    uint64_t v8 = v19;
    uint64_t v44 = sub_240981440(v25, v24, &v45);
    sub_240A050D8();
    uint64_t v4 = v22;
    uint64_t v11 = v40;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    os_log_t v26 = v38;
    _os_log_impl(&dword_240976000, v38, (os_log_type_t)v43, "[%{public}s] Creating generator pipelines for %{public}s profile", (uint8_t *)v15, 0x16u);
    uint64_t v27 = v39;
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v27, -1, -1);
    MEMORY[0x2456058A0](v15, -1, -1);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  uint64_t v28 = sub_240A02C98();
  if (v28)
  {
    uint64_t v29 = (void *)v28;
    uint64_t v30 = (void *)sub_240A02B58();
    char v31 = sub_240A02B48();

    if (v31) {
      return sub_2409802B0(a1);
    }
    else {
      return (void *)MEMORY[0x263F8EE78];
    }
  }
  else
  {
    sub_2409807D0(0, &qword_26AFD4918, (uint64_t (*)(uint64_t))sub_2409A6514, MEMORY[0x263F8E0F8]);
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_240A06870;
    v11(v8, a1, v4);
    sub_240978E4C();
    sub_2409831B4();
    uint64_t v34 = v33;
    swift_allocObject();
    uint64_t v35 = sub_240A03F78();
    *(void *)(v32 + 56) = v34;
    *(void *)(v32 + 64) = sub_240980C50(&qword_26AFD4268, (void (*)(uint64_t))sub_2409831B4);
    *(void *)(v32 + 32) = v35;
  }
  return (void *)v32;
}

uint64_t sub_240981440(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_2409815C0(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_240981564((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_240981564((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  }
  sub_240981514((uint64_t)v12);
  return v7;
}

uint64_t sub_240981514(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_240981564(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2409815C0(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_240A050E8();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_24098177C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_240A05238();
  if (!v8)
  {
    sub_240A05248();
    __break(1u);
LABEL_17:
    uint64_t result = sub_240A052E8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_24098177C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_240981814(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_2409F0F8C(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_2409F0F8C(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_240981814(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_24098198C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_240A05208();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_240A05248();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_240A04CC8();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_240A052E8();
    __break(1u);
LABEL_14:
    uint64_t result = sub_240A05248();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_24098198C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_2409819F0();
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

void sub_2409819F0()
{
  if (!qword_26AFD4280)
  {
    unint64_t v0 = sub_240A05358();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD4280);
    }
  }
}

uint64_t sub_240981A48(uint64_t a1)
{
  uint64_t v1 = a1;
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_240A05168()) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v3 = MEMORY[0x263F8EE88];
    if (v2) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v8 = -1 << *(unsigned char *)(v1 + 32);
    uint64_t v29 = v1 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(v1 + 56);
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t result = swift_retain();
    uint64_t v6 = 0;
    goto LABEL_11;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_6;
  }
LABEL_3:
  sub_2409A6384();
  uint64_t v3 = sub_240A051C8();
  if (!v2) {
    goto LABEL_7;
  }
LABEL_4:
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_retain();
  sub_240A05158();
  sub_2409824B8(0, (unint64_t *)&qword_26AFD48A8);
  sub_2409A6418((unint64_t *)&unk_26AFD48B0, (unint64_t *)&qword_26AFD48A8);
  uint64_t result = sub_240A04DD8();
  uint64_t v1 = v31;
  uint64_t v29 = v32;
  uint64_t v5 = v33;
  uint64_t v6 = v34;
  unint64_t v7 = v35;
LABEL_11:
  int64_t v11 = (unint64_t)(v5 + 64) >> 6;
  uint64_t v12 = v3 + 56;
  while (v1 < 0)
  {
    if (!sub_240A05188()) {
      goto LABEL_45;
    }
    sub_2409824B8(0, (unint64_t *)&qword_26AFD48A8);
    swift_dynamicCast();
    uint64_t v16 = v30;
LABEL_36:
    uint64_t result = sub_240A04FF8();
    uint64_t v22 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v13 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v3 + 48) + 8 * v13) = v16;
    ++*(void *)(v3 + 16);
  }
  if (v7)
  {
    unint64_t v14 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v15 = v14 | (v6 << 6);
LABEL_35:
    uint64_t v16 = *(void **)(*(void *)(v1 + 48) + 8 * v15);
    uint64_t v30 = v16;
    id v21 = v16;
    goto LABEL_36;
  }
  int64_t v17 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v17 >= v11) {
      goto LABEL_45;
    }
    unint64_t v18 = *(void *)(v29 + 8 * v17);
    uint64_t v19 = v6 + 1;
    if (!v18)
    {
      uint64_t v19 = v6 + 2;
      if (v6 + 2 >= v11) {
        goto LABEL_45;
      }
      unint64_t v18 = *(void *)(v29 + 8 * v19);
      if (!v18)
      {
        uint64_t v19 = v6 + 3;
        if (v6 + 3 >= v11) {
          goto LABEL_45;
        }
        unint64_t v18 = *(void *)(v29 + 8 * v19);
        if (!v18)
        {
          uint64_t v19 = v6 + 4;
          if (v6 + 4 >= v11) {
            goto LABEL_45;
          }
          unint64_t v18 = *(void *)(v29 + 8 * v19);
          if (!v18)
          {
            uint64_t v19 = v6 + 5;
            if (v6 + 5 >= v11) {
              goto LABEL_45;
            }
            unint64_t v18 = *(void *)(v29 + 8 * v19);
            if (!v18)
            {
              uint64_t v20 = v6 + 6;
              while (v11 != v20)
              {
                unint64_t v18 = *(void *)(v29 + 8 * v20++);
                if (v18)
                {
                  uint64_t v19 = v20 - 1;
                  goto LABEL_34;
                }
              }
LABEL_45:
              swift_release();
              sub_240981DFC();
              return v3;
            }
          }
        }
      }
    }
LABEL_34:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v19 << 6);
    uint64_t v6 = v19;
    goto LABEL_35;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_240981DFC()
{
  return swift_release();
}

void sub_240981E04(unint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7 = a1;
  unint64_t v8 = a1 >> 62;
  if (a1 >> 62)
  {
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v12 = sub_240A05288();
    swift_bridgeObjectRelease();
    if (v12)
    {
LABEL_3:
      sub_240982178(0, a2, a3, a4, a5);
      uint64_t v9 = sub_240A051C8();
      uint64_t v10 = v7 & 0xFFFFFFFFFFFFFF8;
      if (!v8) {
        goto LABEL_4;
      }
LABEL_8:
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v11 = sub_240A05288();
      swift_bridgeObjectRelease();
      if (!v11) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v9 = MEMORY[0x263F8EE88];
  uint64_t v10 = v7 & 0xFFFFFFFFFFFFFF8;
  if (v8) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v11 = *(void *)(v10 + 16);
  if (!v11) {
    return;
  }
LABEL_9:
  uint64_t v13 = v9 + 56;
  uint64_t v50 = v11;
  if ((v7 & 0xC000000000000001) != 0)
  {
    uint64_t v14 = 0;
    unint64_t v46 = v7;
    while (1)
    {
      uint64_t v15 = MEMORY[0x245604E50](v14, v7);
      BOOL v16 = __OFADD__(v14++, 1);
      if (v16)
      {
        __break(1u);
        goto LABEL_37;
      }
      uint64_t v17 = v15;
      uint64_t v18 = sub_240A04FF8();
      uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      uint64_t v22 = *(void *)(v13 + 8 * (v20 >> 6));
      uint64_t v23 = 1 << v20;
      if (((1 << v20) & v22) != 0)
      {
        sub_2409824B8(0, a3);
        id v24 = *(id *)(*(void *)(v9 + 48) + 8 * v20);
        char v25 = sub_240A05008();

        if (v25)
        {
LABEL_11:
          sub_240A03B98();
          unint64_t v7 = v46;
          goto LABEL_12;
        }
        uint64_t v26 = ~v19;
        while (1)
        {
          unint64_t v20 = (v20 + 1) & v26;
          unint64_t v21 = v20 >> 6;
          uint64_t v22 = *(void *)(v13 + 8 * (v20 >> 6));
          uint64_t v23 = 1 << v20;
          if ((v22 & (1 << v20)) == 0) {
            break;
          }
          id v27 = *(id *)(*(void *)(v9 + 48) + 8 * v20);
          char v28 = sub_240A05008();

          if (v28) {
            goto LABEL_11;
          }
        }
        unint64_t v7 = v46;
      }
      *(void *)(v13 + 8 * v21) = v23 | v22;
      *(void *)(*(void *)(v9 + 48) + 8 * v20) = v17;
      uint64_t v29 = *(void *)(v9 + 16);
      BOOL v16 = __OFADD__(v29, 1);
      uint64_t v30 = v29 + 1;
      if (v16) {
        goto LABEL_38;
      }
      *(void *)(v9 + 16) = v30;
LABEL_12:
      if (v14 == v50) {
        return;
      }
    }
  }
  uint64_t v31 = 0;
  uint64_t v47 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v31 != v47)
  {
    id v32 = *(id *)(v7 + 32 + 8 * v31);
    uint64_t v33 = sub_240A04FF8();
    uint64_t v34 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v35 = v33 & ~v34;
    unint64_t v36 = v35 >> 6;
    uint64_t v37 = *(void *)(v13 + 8 * (v35 >> 6));
    uint64_t v38 = 1 << v35;
    if (((1 << v35) & v37) != 0)
    {
      sub_2409824B8(0, a3);
      id v39 = *(id *)(*(void *)(v9 + 48) + 8 * v35);
      char v40 = sub_240A05008();

      if (v40) {
        goto LABEL_24;
      }
      uint64_t v41 = ~v34;
      unint64_t v35 = (v35 + 1) & v41;
      unint64_t v36 = v35 >> 6;
      uint64_t v37 = *(void *)(v13 + 8 * (v35 >> 6));
      uint64_t v38 = 1 << v35;
      if ((v37 & (1 << v35)) != 0)
      {
        while (1)
        {
          id v42 = *(id *)(*(void *)(v9 + 48) + 8 * v35);
          char v43 = sub_240A05008();

          if (v43) {
            break;
          }
          unint64_t v35 = (v35 + 1) & v41;
          unint64_t v36 = v35 >> 6;
          uint64_t v37 = *(void *)(v13 + 8 * (v35 >> 6));
          uint64_t v38 = 1 << v35;
          if ((v37 & (1 << v35)) == 0) {
            goto LABEL_32;
          }
        }
LABEL_24:

        uint64_t v11 = v50;
        goto LABEL_25;
      }
LABEL_32:
      uint64_t v11 = v50;
    }
    *(void *)(v13 + 8 * v36) = v38 | v37;
    *(void *)(*(void *)(v9 + 48) + 8 * v35) = v32;
    uint64_t v44 = *(void *)(v9 + 16);
    BOOL v16 = __OFADD__(v44, 1);
    uint64_t v45 = v44 + 1;
    if (v16) {
      goto LABEL_39;
    }
    *(void *)(v9 + 16) = v45;
LABEL_25:
    if (++v31 == v11) {
      return;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

void sub_240982178(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  if (!*a2)
  {
    sub_2409824B8(255, a3);
    sub_2409A6418(a5, a3);
    unint64_t v8 = sub_240A051D8();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_240982204()
{
  sub_2409824F4(0, (unint64_t *)&qword_26AFD4290, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240A073E0;
  sub_2409824B8(0, (unint64_t *)&qword_26AFD48C8);
  *(void *)(inited + 32) = MEMORY[0x245604B20]((id)*MEMORY[0x263F09DF8]);
  sub_2409824B8(0, (unint64_t *)&qword_26AFD48C0);
  *(void *)(inited + 40) = MEMORY[0x245604B10]((id)*MEMORY[0x263F092C0]);
  sub_240A04D38();
  if (inited >> 62)
  {
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v3 = sub_240A05288();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v2 = MEMORY[0x263F8EE88];
    goto LABEL_6;
  }
  if (!*(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  sub_24098234C(inited);
  uint64_t v2 = v1;
LABEL_6:
  swift_bridgeObjectRelease();
  return v2;
}

void sub_24098234C(unint64_t a1)
{
}

uint64_t sub_240982370()
{
  sub_2409824F4(0, (unint64_t *)&qword_26AFD4290, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240A073E0;
  sub_2409824B8(0, (unint64_t *)&qword_26AFD48C0);
  *(void *)(inited + 32) = MEMORY[0x245604B10]((id)*MEMORY[0x263F09300]);
  sub_2409824B8(0, (unint64_t *)&qword_26AFD48C8);
  *(void *)(inited + 40) = MEMORY[0x245604B20]((id)*MEMORY[0x263F09E28]);
  sub_240A04D38();
  if (inited >> 62)
  {
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v3 = sub_240A05288();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v2 = MEMORY[0x263F8EE88];
    goto LABEL_6;
  }
  if (!*(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  sub_24098234C(inited);
  uint64_t v2 = v1;
LABEL_6:
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_2409824B8(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_2409824F4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_240982544(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_240982570(unsigned __int8 *a1)
{
  return sub_2409828A8(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_240982578()
{
  return _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
}

uint64_t sub_240982580()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_2409825A8(uint64_t a1)
{
  return sub_240983F84(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t *sub_2409825B0(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void sub_240982614(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_240983260(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_24098267C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_240983260(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_2409826E4(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_240983210(255, a3);
    unint64_t v4 = sub_240A05358();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_240982740(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_240A052D8();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_240982794(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      sub_240983260(0, a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_240A052E8();
  __break(1u);
  return result;
}

uint64_t sub_2409828A8(unsigned __int8 *a1, uint64_t (*a2)(void))
{
  return a2(*a1);
}

unint64_t sub_2409828D4()
{
  unint64_t result = qword_26AFD4890;
  if (!qword_26AFD4890)
  {
    sub_24097E96C(255, &qword_26AFD4888, (uint64_t (*)(uint64_t))sub_240982DDC, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD4890);
  }
  return result;
}

void sub_24098295C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_2409829A8()
{
  if (!qword_26AFD4868)
  {
    unint64_t v0 = sub_240A045E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD4868);
    }
  }
}

unint64_t sub_240982A00()
{
  unint64_t result = qword_26AFD4848;
  if (!qword_26AFD4848)
  {
    sub_2409824F4(255, (unint64_t *)&unk_26AFD4850, MEMORY[0x263F8D4F8], MEMORY[0x263EFDE48]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD4848);
  }
  return result;
}

unint64_t sub_240982A7C()
{
  unint64_t result = qword_26AFD4838;
  if (!qword_26AFD4838)
  {
    sub_24097E96C(255, &qword_26AFD4840, (uint64_t (*)(uint64_t))sub_24097FDC0, MEMORY[0x263EFDE48]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD4838);
  }
  return result;
}

void sub_240982B04()
{
  if (!qword_26AFD4830)
  {
    sub_240982C98();
    sub_24097C7AC(&qword_26AFD47E0, (void (*)(uint64_t))sub_240982C98);
    unint64_t v0 = sub_240A04598();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD4830);
    }
  }
}

void sub_240982B98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_240982BFC()
{
  if (!qword_26AFD47F8)
  {
    unint64_t v0 = sub_240A04508();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD47F8);
    }
  }
}

uint64_t sub_240982C64()
{
  return sub_24097ECE4(&qword_26AFD47F0, (void (*)(uint64_t))sub_240982BFC);
}

void sub_240982C98()
{
  if (!qword_26AFD47E8)
  {
    sub_24099C130(255, (unint64_t *)&qword_26AFD4880, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
    unint64_t v0 = sub_240A04508();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD47E8);
    }
  }
}

void sub_240982D24(uint64_t a1)
{
}

uint64_t sub_240982D44()
{
  return sub_24097ECE4(&qword_26AFD47D0, sub_240982D24);
}

void sub_240982D78(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240A04508();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_240982DDC(uint64_t a1)
{
}

void sub_240982DFC()
{
  if (!qword_26AFD3EC8)
  {
    sub_240A02768();
    unint64_t v0 = sub_240A04508();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD3EC8);
    }
  }
}

uint64_t sub_240982E64(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24097ED74(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240982EA8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24097EE10(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240982EEC()
{
  if (!qword_26AFD3EB8)
  {
    sub_240A04F78();
    sub_240982DFC();
    sub_24097CF14((unint64_t *)&unk_26AFD3ED0, MEMORY[0x263F07CB0]);
    sub_24097CF14(&qword_26AFD3EC0, (void (*)(uint64_t))sub_240982DFC);
    unint64_t v0 = sub_240A044B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD3EB8);
    }
  }
}

void sub_240982FD8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_240983FAC();
    a4();
    unint64_t v6 = sub_240A04448();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_240983060()
{
  unint64_t result = qword_26AFD47A0;
  if (!qword_26AFD47A0)
  {
    sub_240982FD8(255, &qword_26AFD47A8, (void (*)(uint64_t))sub_240982BFC, (void (*)(void))sub_240982C64);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD47A0);
  }
  return result;
}

unint64_t sub_2409830E8()
{
  unint64_t result = qword_26AFD4790;
  if (!qword_26AFD4790)
  {
    sub_240982FD8(255, &qword_26AFD4798, sub_240982D24, (void (*)(void))sub_240982D44);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD4790);
  }
  return result;
}

uint64_t sub_240983170()
{
  uint64_t result = sub_240A04CB8();
  qword_26AFD6458 = result;
  unk_26AFD6460 = v1;
  return result;
}

uint64_t sub_2409831A0(uint64_t a1)
{
  return sub_2409795CC(a1, qword_26AFD6440);
}

void sub_2409831B4()
{
  if (!qword_26AFD4270)
  {
    sub_2409A65C8();
    unint64_t v0 = sub_240A03F88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD4270);
    }
  }
}

uint64_t sub_240983210(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_240983260(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t type metadata accessor for EnvironmentAudioNotificationOnboardingDataProvider()
{
  uint64_t result = qword_26AFD4170;
  if (!qword_26AFD4170) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for HeadphoneNotificationsPromotionGenerator()
{
  uint64_t result = qword_26AFD46A8;
  if (!qword_26AFD46A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for HeadphoneNotificationsGeneratorPipeline()
{
  uint64_t result = qword_26AFD45E8;
  if (!qword_26AFD45E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240983394@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_240A02CA8() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24097E6A8(v1 + v4, v5, a1);
}

uint64_t sub_24098343C()
{
  return swift_retain();
}

uint64_t sub_240983450@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC16HearingAppPlugin39HeadphoneNotificationsGeneratorPipeline_domain;
  uint64_t v4 = sub_240A02C78();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_2409834C8@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_240A02CA8() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24097DA44(a1, v2 + v6, v7, a2);
}

uint64_t sub_240983574@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_240A02CA8() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v2 + 16);
  uint64_t v9 = *(void *)(v2 + v7);
  uint64_t v10 = *(void *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_240980C98(a1, v8, v2 + v6, v9, v10, a2);
}

unint64_t sub_240983630()
{
  unint64_t result = qword_26AFD49B8;
  if (!qword_26AFD49B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD49B8);
  }
  return result;
}

unint64_t sub_240983684()
{
  unint64_t result = qword_26AFD49B0;
  if (!qword_26AFD49B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD49B0);
  }
  return result;
}

uint64_t type metadata accessor for NoiseNotificationsPromotionGenerator()
{
  uint64_t result = qword_26AFD4058;
  if (!qword_26AFD4058) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for NoiseNotificationsGeneratorPipeline()
{
  uint64_t result = qword_26AFD3F90;
  if (!qword_26AFD3F90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240983770@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_240A02CA8() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_24097E448(v4, a1);
}

uint64_t sub_240983818()
{
  return swift_retain();
}

uint64_t sub_24098382C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC16HearingAppPlugin35NoiseNotificationsGeneratorPipeline_domain;
  uint64_t v4 = sub_240A02C78();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_2409838A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_240A02CA8() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24097C838(v1 + v4, v5, a1);
}

uint64_t sub_240983950@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_240A02CA8() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24097F4C8(a1, v7, v2 + v6, v8, a2);
}

uint64_t type metadata accessor for HeadphoneNotificationsAvailability()
{
  uint64_t result = qword_26AFD45C0;
  if (!qword_26AFD45C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_240983A50()
{
  unint64_t result = qword_26AFD49A8;
  if (!qword_26AFD49A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD49A8);
  }
  return result;
}

unint64_t sub_240983AA4()
{
  unint64_t result = qword_26AFD49A0;
  if (!qword_26AFD49A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD49A0);
  }
  return result;
}

uint64_t initializeWithCopy for DeviceConfigurationProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  uint64_t v7 = (_OWORD *)(a1 + 40);
  uint64_t v8 = (_OWORD *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 64);
  if (v9)
  {
    uint64_t v10 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v9;
    *(void *)(a1 + 72) = v10;
    (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 56);
    *uint64_t v7 = *v8;
    *(_OWORD *)(a1 + 56) = v11;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
  }
  return a1;
}

uint64_t sub_240983BC8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t type metadata accessor for NoiseAvailability()
{
  uint64_t result = qword_26AFD45A0;
  if (!qword_26AFD45A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240983C78()
{
  return type metadata accessor for HearingAppPluginDelegate();
}

uint64_t type metadata accessor for HearingTestRescindedFeedItemProvider()
{
  uint64_t result = qword_26AFD4450;
  if (!qword_26AFD4450) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_240983CD0()
{
  unint64_t result = qword_26AFD4440;
  if (!qword_26AFD4440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD4440);
  }
  return result;
}

unint64_t sub_240983D24()
{
  unint64_t result = qword_26AFD4438;
  if (!qword_26AFD4438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD4438);
  }
  return result;
}

uint64_t sub_240983D78()
{
  return _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
}

uint64_t sub_240983D80(uint64_t a1)
{
  unint64_t v2 = sub_240983CD0();

  return MEMORY[0x270F34878](a1, v2);
}

unint64_t sub_240983DCC()
{
  return 0xD00000000000001ELL;
}

uint64_t type metadata accessor for HearingTestPromptFeedItemProvider()
{
  uint64_t result = qword_26AFD4410;
  if (!qword_26AFD4410) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_240983E34()
{
  unint64_t result = qword_26AFD49E8;
  if (!qword_26AFD49E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD49E8);
  }
  return result;
}

unint64_t sub_240983E88()
{
  unint64_t result = qword_26AFD49E0;
  if (!qword_26AFD49E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD49E0);
  }
  return result;
}

unint64_t sub_240983EDC()
{
  unint64_t result = qword_26AFD43F0;
  if (!qword_26AFD43F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD43F0);
  }
  return result;
}

unint64_t sub_240983F30()
{
  unint64_t result = qword_26AFD43E8;
  if (!qword_26AFD43E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD43E8);
  }
  return result;
}

uint64_t sub_240983F84(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

unint64_t sub_240983FAC()
{
  unint64_t result = qword_26AFD4580;
  if (!qword_26AFD4580)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD4580);
  }
  return result;
}

void sub_24098411C(void *a1)
{
  if (objc_msgSend(self, sel_isAppleInternalInstall))
  {
    uint64_t v3 = objc_msgSend(a1, sel_resolvedHealthStore);
    if (v3)
    {
      oslog = v3;
      sub_24098431C((uint64_t)v3, a1);
    }
    else
    {
      uint64_t v4 = v1;
      oslog = sub_240A03FF8();
      os_log_type_t v5 = sub_240A04EA8();
      if (os_log_type_enabled(oslog, v5))
      {
        long long v6 = (uint8_t *)swift_slowAlloc();
        uint64_t v7 = (void *)swift_slowAlloc();
        *(_DWORD *)long long v6 = 138412290;
        uint64_t v10 = *(void **)&v4[OBJC_IVAR____TtC16HearingAppPlugin53HeadphoneNotificationsDataDetailConfigurationProvider_dataType];
        id v8 = v10;
        sub_240A050D8();
        *uint64_t v7 = v10;

        _os_log_impl(&dword_240976000, oslog, v5, "Unable to present debug menu for %@ without a resolvedHealthStore", v6, 0xCu);
        sub_2409879F8(0, (unint64_t *)&qword_26AFD3F40, (unint64_t *)&qword_26AFD3F30, 0x263F8C6D0, MEMORY[0x263F8D8F0]);
        swift_arrayDestroy();
        MEMORY[0x2456058A0](v7, -1, -1);
        MEMORY[0x2456058A0](v6, -1, -1);

        return;
      }
    }
  }
}

void sub_24098431C(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_240A049E8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (void *)((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2409824B8(0, (unint64_t *)&qword_268C993E8);
  *uint64_t v9 = sub_240A04F38();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F8F0E0], v6);
  char v10 = sub_240A049F8();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    if (objc_msgSend(self, sel_isAppleInternalInstall))
    {
      id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F44970]), sel_initWithHealthStore_, a1);
      uint64_t v12 = (void *)swift_allocObject();
      v12[2] = v3;
      uint64_t v12[3] = v11;
      v12[4] = a2;
      aBlock[4] = sub_2409876E8;
      aBlock[5] = v12;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_240985030;
      aBlock[3] = &unk_26F4F9F90;
      uint64_t v13 = _Block_copy(aBlock);
      id v14 = v3;
      id v15 = v11;
      id v16 = a2;
      swift_release();
      objc_msgSend(v15, sel_fetchDoseLimitInfoWithCompletion_, v13);
      _Block_release(v13);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_24098454C(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v8 = (void *)sub_240A04C18();
  uint64_t v9 = (void *)sub_240A04C18();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v8, v9, 1);

  id v11 = (void *)sub_240A04C18();
  uint64_t v12 = self;
  id v13 = objc_msgSend(v12, sel_actionWithTitle_style_handler_, v11, 1, 0);

  objc_msgSend(v10, sel_addAction_, v13);
  id v14 = (void *)swift_allocObject();
  v14[2] = a4;
  v14[3] = a5;
  v14[4] = a3;
  id v15 = a4;
  id v16 = a5;
  id v17 = a3;
  uint64_t v18 = (void *)sub_240A04C18();
  id v32 = sub_2409877BC;
  uint64_t v33 = v14;
  uint64_t v28 = MEMORY[0x263EF8330];
  uint64_t v29 = 1107296256;
  uint64_t v30 = sub_240985514;
  uint64_t v31 = &unk_26F4FA030;
  uint64_t v19 = _Block_copy(&v28);
  swift_release();
  id v20 = objc_msgSend(v12, (SEL)&off_2650DA1C8, v18, 2, v19);
  _Block_release(v19);

  objc_msgSend(v10, sel_addAction_, v20);
  unint64_t v21 = (void *)swift_allocObject();
  v21[2] = v15;
  v21[3] = v16;
  v21[4] = v17;
  id v22 = v15;
  id v23 = v16;
  id v24 = v17;
  char v25 = (void *)sub_240A04C18();
  id v32 = sub_240987814;
  uint64_t v33 = v21;
  uint64_t v28 = MEMORY[0x263EF8330];
  uint64_t v29 = 1107296256;
  uint64_t v30 = sub_240985514;
  uint64_t v31 = &unk_26F4FA080;
  uint64_t v26 = _Block_copy(&v28);
  swift_release();
  id v27 = objc_msgSend(v12, sel_actionWithTitle_style_handler_, v25, 0, v26);
  _Block_release(v26);

  objc_msgSend(v10, sel_addAction_, v27);
  objc_msgSend(v24, sel_presentViewController_animated_completion_, v10, 1, 0);
}

void sub_2409848A0(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v7 = sub_240A04018();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(self, sel_isAppleInternalInstall))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)a2 + OBJC_IVAR____TtC16HearingAppPlugin53HeadphoneNotificationsDataDetailConfigurationProvider_logger, v7);
    unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    unint64_t v12 = (v9 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = 0;
    *(void *)(v13 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v11, v10, v7);
    *(void *)(v13 + v12) = a2;
    *(void *)(v13 + ((v12 + 15) & 0xFFFFFFFFFFFFFFF8)) = a4;
    aBlock[4] = sub_2409874B4;
    aBlock[5] = v13;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_240986360;
    aBlock[3] = &unk_26F4FA0D0;
    id v14 = _Block_copy(aBlock);
    id v15 = a2;
    id v16 = a4;
    swift_release();
    objc_msgSend(a3, sel_overrideDoseLimit_completion_, 0, v14);
    _Block_release(v14);
  }
}

void sub_240984AA4(void *a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6)
{
  uint64_t v50 = a6;
  uint64_t v51 = a4;
  uint64_t v49 = a1;
  uint64_t v9 = sub_240A049B8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_240A049D8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  id v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409876F4();
  uint64_t v17 = swift_allocError();
  uint64_t v18 = (void *)v17;
  if (a3)
  {
    id v19 = a3;

    uint64_t v18 = a3;
  }
  else
  {
    uint64_t v44 = v16;
    uint64_t v45 = v12;
    uint64_t v30 = v50;
    uint64_t v46 = v13;
    uint64_t v47 = v14;
    uint64_t v48 = v10;
    if (a2)
    {
      uint64_t v31 = a2;
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();

      sub_2409824B8(0, (unint64_t *)&qword_268C993E8);
      id v32 = v49;
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v33 = (void *)sub_240A04F38();
      uint64_t v34 = (void *)swift_allocObject();
      unint64_t v35 = v51;
      v34[2] = v51;
      v34[3] = a5;
      v34[4] = v32;
      v34[5] = a2;
      unint64_t v36 = v30;
      v34[6] = v30;
      aBlock[4] = (uint64_t)sub_2409877A8;
      aBlock[5] = (uint64_t)v34;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_2409B4FA8;
      aBlock[3] = (uint64_t)&unk_26F4F9FE0;
      uint64_t v37 = _Block_copy(aBlock);
      id v38 = v35;
      id v39 = a5;
      id v40 = v36;
      swift_release();
      uint64_t v41 = v44;
      sub_240A049C8();
      aBlock[0] = MEMORY[0x263F8EE78];
      sub_240986FA4(&qword_268C993F8, MEMORY[0x263F8F030]);
      sub_2409875F8();
      sub_240986FA4((unint64_t *)&qword_268C99408, (void (*)(uint64_t))sub_2409875F8);
      id v42 = v45;
      sub_240A05138();
      MEMORY[0x245604B80](0, v41, v42, v37);
      _Block_release(v37);

      sub_240987748(v32, v31, 0);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v42, v9);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v41, v46);
      return;
    }
    a3 = (void *)v17;
  }
  aBlock[0] = (uint64_t)v18;
  id v20 = v18;
  sub_240983260(0, (unint64_t *)&qword_268C993F0);
  swift_willThrowTypedImpl();
  id v21 = v18;
  id v22 = v18;
  id v23 = sub_240A03FF8();
  os_log_type_t v24 = sub_240A04EC8();
  if (os_log_type_enabled(v23, v24))
  {
    char v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    aBlock[0] = v26;
    *(_DWORD *)char v25 = 136315138;
    uint64_t v53 = (uint64_t)v18;
    id v27 = v18;
    uint64_t v28 = sub_240A04C78();
    uint64_t v53 = sub_240981440(v28, v29, aBlock);
    sub_240A050D8();
    swift_bridgeObjectRelease();
    sub_240987748(a3, 0, 1);
    sub_240987748(a3, 0, 1);
    _os_log_impl(&dword_240976000, v23, v24, "Unable to fetch doseLimitOverride: %s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v26, -1, -1);
    MEMORY[0x2456058A0](v25, -1, -1);
    sub_240987748(a3, 0, 1);
    sub_240987748(a3, 0, 1);
  }
  else
  {
    sub_240987748(a3, 0, 1);
    sub_240987748(a3, 0, 1);

    sub_240987748(a3, 0, 1);
    sub_240987748(a3, 0, 1);
  }
}

uint64_t sub_240985030(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    uint64_t v5 = sub_240A04C58();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  swift_retain();
  id v8 = a3;
  v4(v5, v7, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_2409850C8(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_240A049E8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (uint64_t *)((char *)&aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2409824B8(0, (unint64_t *)&qword_268C993E8);
  *uint64_t v9 = sub_240A04F38();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F8F0E0], v6);
  char v10 = sub_240A049F8();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    if (objc_msgSend(self, sel_isAppleInternalInstall))
    {
      uint64_t v11 = (void *)sub_240A04C18();
      unint64_t v12 = (void *)sub_240A04C18();
      id v13 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v11, v12, 1);

      uint64_t v30 = sub_2409854B0;
      uint64_t v31 = 0;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v27 = 1107296256;
      uint64_t v28 = sub_240985514;
      unint64_t v29 = &unk_26F4F9EC8;
      uint64_t v14 = _Block_copy(&aBlock);
      objc_msgSend(v13, sel_addTextFieldWithConfigurationHandler_, v14);
      _Block_release(v14);
      uint64_t v15 = (void *)sub_240A04C18();
      id v16 = self;
      id v17 = objc_msgSend(v16, sel_actionWithTitle_style_handler_, v15, 1, 0);

      objc_msgSend(v13, sel_addAction_, v17);
      uint64_t v18 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v19 = (void *)swift_allocObject();
      v19[2] = v18;
      v19[3] = v3;
      v19[4] = a1;
      v19[5] = a2;
      swift_retain();
      id v20 = v3;
      id v21 = a1;
      id v22 = a2;
      id v23 = (void *)sub_240A04C18();
      uint64_t v30 = sub_2409876D8;
      uint64_t v31 = v19;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v27 = 1107296256;
      uint64_t v28 = sub_240985514;
      unint64_t v29 = &unk_26F4F9F40;
      os_log_type_t v24 = _Block_copy(&aBlock);
      swift_release();
      id v25 = objc_msgSend(v16, sel_actionWithTitle_style_handler_, v23, 0, v24);
      _Block_release(v24);
      swift_release();

      objc_msgSend(v13, sel_addAction_, v25);
      objc_msgSend(v22, sel_presentViewController_animated_completion_, v13, 1, 0);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_2409854B0(void *a1)
{
  id v2 = (id)sub_240A04C18();
  objc_msgSend(a1, sel_setPlaceholder_, v2);
}

void sub_240985514(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_24098557C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v7 = a2 + 16;
  swift_beginAccess();
  uint64_t v8 = (void *)MEMORY[0x245605950](v7);
  uint64_t v9 = v8;
  if (!v8)
  {
    id v10 = 0;
    goto LABEL_15;
  }
  id v10 = objc_msgSend(v8, sel_textFields);

  if (!v10)
  {
LABEL_14:
    uint64_t v9 = 0;
    goto LABEL_15;
  }
  sub_2409824B8(0, &qword_268C99410);
  unint64_t v11 = sub_240A04D18();

  if (!(v11 >> 62))
  {
    id v10 = *(id *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10) {
      goto LABEL_5;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  id v10 = (id)sub_240A05288();
  swift_bridgeObjectRelease();
  if (!v10) {
    goto LABEL_13;
  }
LABEL_5:
  if ((v11 & 0xC000000000000001) != 0)
  {
    id v12 = (id)MEMORY[0x245604E50](0, v11);
    goto LABEL_8;
  }
  if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v12 = *(id *)(v11 + 32);
LABEL_8:
    id v13 = v12;
    swift_bridgeObjectRelease();
    id v14 = objc_msgSend(v13, sel_text);

    if (v14)
    {
      id v10 = (id)sub_240A04C58();
      uint64_t v9 = v15;

LABEL_15:
      sub_240985724((uint64_t)v10, (uint64_t)v9, a4, a5);
      swift_bridgeObjectRelease();
      return;
    }
    id v10 = 0;
    goto LABEL_14;
  }
  __break(1u);
}

id sub_240985724(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v42 = a1;
  uint64_t v8 = sub_240A04018();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  id v12 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)v37 - v13;
  id result = objc_msgSend(self, sel_isAppleInternalInstall);
  if (result)
  {
    id v39 = v4;
    uint64_t v16 = (uint64_t)v4 + OBJC_IVAR____TtC16HearingAppPlugin53HeadphoneNotificationsDataDetailConfigurationProvider_logger;
    id v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16);
    uint64_t v18 = v17(v14, v16, v8);
    id v40 = a4;
    id v41 = a3;
    if (!a2) {
      goto LABEL_14;
    }
    v37[1] = v37;
    id v38 = v17;
    uint64_t v44 = 0;
    uint64_t v19 = MEMORY[0x270FA5388](v18);
    v37[-2] = &v44;
    uint64_t v20 = v42;
    if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | v42 & 0x1000000000000000))
    {
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      sub_240A051E8();
      swift_bridgeObjectRelease();
      id v17 = v38;
      if ((v43 & 1) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      v37[0] = v37;
      MEMORY[0x270FA5388](v19);
      v37[-2] = sub_2409874D0;
      v37[-1] = &v37[-4];
      if ((a2 & 0x2000000000000000) == 0)
      {
        if ((v20 & 0x1000000000000000) != 0)
        {
          uint64_t v21 = v20 & 0xFFFFFFFFFFFFLL;
          uint64_t v22 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        }
        else
        {
          uint64_t v22 = sub_240A05238();
          uint64_t v21 = v36;
        }
        _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        char v23 = sub_240987450(v22, v21, (void (*)(uint64_t *__return_ptr))sub_240987540);
        swift_bridgeObjectRelease();
        id v17 = v38;
        if (v23) {
          goto LABEL_9;
        }
LABEL_14:
        os_log_type_t v24 = 0;
        goto LABEL_15;
      }
      uint64_t aBlock = v20;
      uint64_t v46 = a2 & 0xFFFFFFFFFFFFFFLL;
      if (v20 <= 0x20u && ((1 << v20) & 0x100003E01) != 0)
      {
        _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
LABEL_13:
        swift_bridgeObjectRelease();
        id v17 = v38;
        goto LABEL_14;
      }
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v34 = (unsigned __int8 *)_swift_stdlib_strtod_clocale();
      if (!v34) {
        goto LABEL_13;
      }
      int v35 = *v34;
      swift_bridgeObjectRelease();
      id v17 = v38;
      if (v35) {
        goto LABEL_14;
      }
    }
LABEL_9:
    os_log_type_t v24 = (void *)sub_240A04D98();
LABEL_15:
    v17(v12, (uint64_t)v14, v8);
    unint64_t v25 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    unint64_t v26 = (v10 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v42;
    *(void *)(v27 + 24) = a2;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v27 + v25, v12, v8);
    uint64_t v42 = v8;
    uint64_t v28 = v14;
    unint64_t v29 = v39;
    uint64_t v30 = v40;
    *(void *)(v27 + v26) = v39;
    *(void *)(v27 + ((v26 + 15) & 0xFFFFFFFFFFFFFFF8)) = v30;
    uint64_t v49 = sub_2409874B4;
    uint64_t v50 = v27;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v46 = 1107296256;
    uint64_t v47 = sub_240986360;
    uint64_t v48 = &unk_26F4F9E50;
    uint64_t v31 = _Block_copy(&aBlock);
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    id v32 = v29;
    id v33 = v30;
    swift_release();
    objc_msgSend(v41, sel_overrideDoseLimit_completion_, v24, v31);
    _Block_release(v31);

    return (id)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v28, v42);
  }
  return result;
}

void sub_240985BB4(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  uint64_t v12 = sub_240A049B8();
  uint64_t v13 = *(NSObject **)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_240A049D8();
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  if (a4) {
    unint64_t v20 = 0xE800000000000000;
  }
  else {
    unint64_t v20 = 0xE500000000000000;
  }
  if ((a1 & 1) == 0)
  {
    uint64_t v51 = v12;
    uint64_t v52 = v15;
    uint64_t v53 = a7;
    uint64_t v54 = v19;
    if (a4) {
      uint64_t v25 = 0x656469727265766FLL;
    }
    else {
      uint64_t v25 = 0x7465736572;
    }
    uint64_t v55 = v17;
    uint64_t v56 = v13;
    unint64_t v26 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      id v27 = a2;
      id v28 = a2;
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      id v29 = a2;
      uint64_t v30 = sub_240A03FF8();
      os_log_type_t v31 = sub_240A04EC8();
      if (!os_log_type_enabled(v30, v31))
      {

        swift_bridgeObjectRelease_n();
LABEL_24:
        sub_2409824B8(0, (unint64_t *)&qword_268C993E8);
        id v41 = (void *)sub_240A04F38();
        uint64_t v42 = (void *)swift_allocObject();
        v42[2] = a6;
        v42[3] = a2;
        char v43 = v53;
        v42[4] = v53;
        aBlock[4] = (uint64_t)sub_2409875CC;
        aBlock[5] = (uint64_t)v42;
        aBlock[0] = MEMORY[0x263EF8330];
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_2409B4FA8;
        aBlock[3] = (uint64_t)&unk_26F4F9EA0;
        uint64_t v44 = _Block_copy(aBlock);
        id v45 = a2;
        id v46 = a6;
        id v47 = v43;
        swift_release();
        sub_240A049C8();
        aBlock[0] = MEMORY[0x263F8EE78];
        sub_240986FA4(&qword_268C993F8, MEMORY[0x263F8F030]);
        sub_2409875F8();
        sub_240986FA4((unint64_t *)&qword_268C99408, (void (*)(uint64_t))sub_2409875F8);
        uint64_t v48 = v51;
        uint64_t v49 = v52;
        sub_240A05138();
        MEMORY[0x245604B80](0, v26, v49, v44);
        _Block_release(v44);

        ((void (*)(char *, uint64_t))v56[1].isa)(v49, v48);
        (*(void (**)(char *, uint64_t))(v54 + 8))(v26, v55);
        return;
      }
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      aBlock[0] = v33;
      *(_DWORD *)uint64_t v32 = 136446466;
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v57 = sub_240981440(v25, v20, aBlock);
      sub_240A050D8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v32 + 12) = 2080;
      uint64_t v57 = (uint64_t)a2;
      id v34 = a2;
      sub_240983260(0, (unint64_t *)&qword_268C993F0);
      uint64_t v35 = sub_240A04C78();
      uint64_t v57 = sub_240981440(v35, v36, aBlock);
      sub_240A050D8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_240976000, v30, v31, "Failed to %{public}s doseLimit with error: %s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v33, -1, -1);
      MEMORY[0x2456058A0](v32, -1, -1);
    }
    else
    {
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v30 = sub_240A03FF8();
      os_log_type_t v38 = sub_240A04EC8();
      if (os_log_type_enabled(v30, v38))
      {
        id v39 = (uint8_t *)swift_slowAlloc();
        uint64_t v40 = swift_slowAlloc();
        aBlock[0] = v40;
        *(_DWORD *)id v39 = 136446210;
        uint64_t v50 = v39 + 4;
        _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        uint64_t v57 = sub_240981440(v25, v20, aBlock);
        sub_240A050D8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_240976000, v30, v38, "Failed to  %{public}s doseLimit with unknown error.", v39, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2456058A0](v40, -1, -1);
        MEMORY[0x2456058A0](v39, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }

    goto LABEL_24;
  }
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v56 = sub_240A03FF8();
  os_log_type_t v21 = sub_240A04EC8();
  if (os_log_type_enabled(v56, v21))
  {
    if (a4) {
      uint64_t v22 = 0x65646F727265766FLL;
    }
    else {
      uint64_t v22 = 0x7465736572;
    }
    char v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    aBlock[0] = v24;
    *(_DWORD *)char v23 = 136446210;
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v57 = sub_240981440(v22, v20, aBlock);
    sub_240A050D8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_240976000, v56, v21, "Successfully %{public}s doseLimit.", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v24, -1, -1);
    MEMORY[0x2456058A0](v23, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    uint64_t v37 = v56;
  }
}

void sub_240986360(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_2409863D8(void *a1, void *a2)
{
  swift_getObjectType();
  uint64_t v4 = sub_240A049E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2409824B8(0, (unint64_t *)&qword_268C993E8);
  *uint64_t v7 = sub_240A04F38();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F0E0], v4);
  char v8 = sub_240A049F8();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    id v9 = a1;
    id v10 = a1;
    uint64_t v11 = sub_240A03FF8();
    os_log_type_t v12 = sub_240A04EC8();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v27 = v14;
      *(_DWORD *)uint64_t v13 = 136446466;
      uint64_t v15 = sub_240A05478();
      uint64_t v26 = sub_240981440(v15, v16, &v27);
      sub_240A050D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2080;
      if (a1)
      {
        uint64_t v26 = (uint64_t)a1;
        id v17 = a1;
        sub_240983260(0, (unint64_t *)&qword_268C993F0);
        uint64_t v18 = sub_240A04C78();
        unint64_t v20 = v19;
      }
      else
      {
        unint64_t v20 = 0xE300000000000000;
        uint64_t v18 = 7104878;
      }
      uint64_t v26 = sub_240981440(v18, v20, &v27);
      sub_240A050D8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_240976000, v11, v12, "[%{public}s] presenting alert for error: %s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v14, -1, -1);
      MEMORY[0x2456058A0](v13, -1, -1);
    }
    else
    {
    }
    if (objc_msgSend(self, sel_isAppleInternalInstall))
    {
      if (a1)
      {
        swift_getErrorValue();
        sub_240A053A8();
      }
      os_log_type_t v21 = (void *)sub_240A04C18();
      uint64_t v22 = (void *)sub_240A04C18();
      swift_bridgeObjectRelease();
      id v23 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v21, v22, 1);

      uint64_t v24 = (void *)sub_240A04C18();
      id v25 = objc_msgSend(self, sel_actionWithTitle_style_handler_, v24, 1, 0);

      objc_msgSend(v23, sel_addAction_, v25);
      objc_msgSend(a2, sel_presentViewController_animated_completion_, v23, 1, 0);
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_240986838()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HeadphoneNotificationsDataDetailConfigurationProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2409868F0()
{
  sub_240A03948();
  sub_240A03938();
  sub_240A039A8();
  memset(v1, 0, sizeof(v1));
  uint64_t v2 = 0;
  sub_240A03C78();
  swift_bridgeObjectRelease();
  return sub_240987034((uint64_t)v1);
}

id sub_240986990()
{
  return objc_retain(*(id *)(*v0
                           + OBJC_IVAR____TtC16HearingAppPlugin53HeadphoneNotificationsDataDetailConfigurationProvider_dataType));
}

void sub_2409869A4(void *a1)
{
}

uint64_t variable initialization expression of AudiogramAllDataViewModel.audiogramSampleSubject()
{
  return sub_240A04538();
}

void sub_240986A18()
{
  if (!qword_268C99378)
  {
    sub_2409879F8(255, &qword_268C99380, (unint64_t *)&unk_268C99388, 0x263F0A0F0, MEMORY[0x263F8D488]);
    unint64_t v0 = sub_240A04528();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99378);
    }
  }
}

uint64_t variable initialization expression of AudiogramAllDataViewModel.cancellable()
{
  return 0;
}

uint64_t variable initialization expression of AudiogramAllDataViewModel.capturedInitialQueryAnalytics()
{
  return 0;
}

uint64_t variable initialization expression of AudiogramAllDataViewModel.unitTest_didPublishAudiograms()
{
  return 0;
}

uint64_t variable initialization expression of OnboardingTileActionHandler.logger@<X0>(uint64_t a1@<X8>)
{
  if (qword_268C99318 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_240A04018();
  uint64_t v3 = sub_240979894(v2, (uint64_t)qword_268C9AA58);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t variable initialization expression of AudiogramPDFAsyncConfigurationDataSource.selectedConfiguration()
{
  return 0;
}

uint64_t variable initialization expression of AudiogramPDFAsyncConfigurationDataSource.debounceForSelectedItemInSeconds()
{
  return 0x3FF8000000000000;
}

uint64_t variable initialization expression of SoundLevelView.headerStackView()
{
  return 0;
}

uint64_t variable initialization expression of HorizontalMeterView.foregroundViewOffset()
{
  return 0;
}

uint64_t variable initialization expression of HorizontalMeterView.foregroundViewWidth()
{
  return 0;
}

uint64_t sub_240986BA0()
{
  return type metadata accessor for HeadphoneNotificationsDataDetailConfigurationProvider();
}

uint64_t type metadata accessor for HeadphoneNotificationsDataDetailConfigurationProvider()
{
  uint64_t result = qword_268C99398;
  if (!qword_268C99398) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240986BF4()
{
  uint64_t result = sub_240A04018();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void type metadata accessor for Key(uint64_t a1)
{
}

uint64_t sub_240986CA4(uint64_t a1, uint64_t a2)
{
  return sub_2409872B8(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_240986CC8(uint64_t a1, uint64_t a2)
{
  return sub_2409872B8(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_240986CE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_240A04C58();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_240986D14(uint64_t a1, id *a2)
{
  uint64_t result = sub_240A04C38();
  *a2 = 0;
  return result;
}

uint64_t sub_240986D8C(uint64_t a1, id *a2)
{
  char v3 = sub_240A04C48();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_240986E0C@<X0>(uint64_t *a1@<X8>)
{
  sub_240A04C58();
  uint64_t v2 = sub_240A04C18();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_240986E58(uint64_t a1)
{
  uint64_t v2 = sub_240986FA4((unint64_t *)&qword_268C993D8, type metadata accessor for Key);
  uint64_t v3 = sub_240986FA4(&qword_268C993E0, type metadata accessor for Key);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_240986F14()
{
  return sub_240986FA4(&qword_268C993B0, type metadata accessor for Key);
}

uint64_t sub_240986F5C()
{
  return sub_240986FA4(&qword_268C993B8, type metadata accessor for Key);
}

uint64_t sub_240986FA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240986FEC()
{
  return sub_240986FA4(&qword_268C993C0, type metadata accessor for Key);
}

uint64_t sub_240987034(uint64_t a1)
{
  sub_240987090();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_240987090()
{
  if (!qword_268C993C8)
  {
    sub_240983260(255, (unint64_t *)&qword_268C993D0);
    unint64_t v0 = sub_240A050C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C993C8);
    }
  }
}

uint64_t sub_2409870F8(uint64_t a1)
{
  uint64_t v2 = sub_240986FA4(&qword_268C99458, type metadata accessor for ImageInitializationOption);
  uint64_t v3 = sub_240986FA4(&qword_268C99460, type metadata accessor for ImageInitializationOption);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_2409871B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_240A04C18();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2409871FC(uint64_t a1)
{
  uint64_t v2 = sub_240986FA4(&qword_268C99488, type metadata accessor for HKFeatureAvailabilityRequirementIdentifier);
  uint64_t v3 = sub_240986FA4(&qword_268C99490, type metadata accessor for HKFeatureAvailabilityRequirementIdentifier);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_2409872B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_240A04C58();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_2409872FC()
{
  sub_240A04C58();
  sub_240A04C98();

  return swift_bridgeObjectRelease();
}

uint64_t sub_240987350()
{
  sub_240A04C58();
  sub_240A053F8();
  sub_240A04C98();
  uint64_t v0 = sub_240A05418();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2409873C4()
{
  uint64_t v0 = sub_240A04C58();
  uint64_t v2 = v1;
  if (v0 == sub_240A04C58() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_240A05368();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_240987450(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

uint64_t sub_2409874B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2409874C8()
{
  return swift_release();
}

unsigned char *sub_2409874D0@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  v7 = v6 && (uint64_t result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

void *sub_240987540@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_240987584()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_2409875CC()
{
  sub_2409863D8(*(void **)(v0 + 24), *(void **)(v0 + 32));
}

void sub_2409875F8()
{
  if (!qword_268C99400)
  {
    sub_240A049B8();
    unint64_t v0 = sub_240A04D78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99400);
    }
  }
}

uint64_t sub_240987650()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240987688()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_2409876D8(uint64_t a1)
{
  sub_24098557C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40));
}

void sub_2409876E8(void *a1, uint64_t a2, void *a3)
{
  sub_240984AA4(a1, a2, a3, v3[2], v3[3], v3[4]);
}

unint64_t sub_2409876F4()
{
  unint64_t result = qword_268C99418;
  if (!qword_268C99418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99418);
  }
  return result;
}

void sub_240987748(void *a1, uint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_240987758()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_2409877A8()
{
  sub_24098454C(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48), *(void **)(v0 + 16), *(void **)(v0 + 24));
}

void sub_2409877BC(uint64_t a1)
{
  sub_2409848A0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_2409877CC()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_240987814()
{
  sub_2409850C8(*(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_240987844()
{
  uint64_t v1 = sub_240A04018();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v7 + 8, v5);
}

void sub_24098793C(char a1, void *a2)
{
  uint64_t v5 = *(void *)(sub_240A04018() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v2 + 16);
  uint64_t v9 = *(void *)(v2 + 24);
  id v10 = *(void **)(v2 + v7);
  uint64_t v11 = *(void **)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_240985BB4(a1, a2, v8, v9, v2 + v6, v10, v11);
}

void sub_2409879F8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_2409824B8(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void type metadata accessor for ImageInitializationOption(uint64_t a1)
{
}

void type metadata accessor for AccessoryType(uint64_t a1)
{
}

void type metadata accessor for SelectionStyle(uint64_t a1)
{
}

uint64_t sub_240987A9C()
{
  return sub_240986FA4(&qword_268C99440, type metadata accessor for ImageInitializationOption);
}

uint64_t sub_240987AE4()
{
  return sub_240986FA4(&qword_268C99448, type metadata accessor for ImageInitializationOption);
}

uint64_t sub_240987B2C()
{
  return sub_240986FA4(&qword_268C99450, type metadata accessor for ImageInitializationOption);
}

void type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(uint64_t a1)
{
}

uint64_t sub_240987B88()
{
  return sub_240986FA4(&qword_268C99470, type metadata accessor for HKFeatureAvailabilityRequirementIdentifier);
}

uint64_t sub_240987BD0()
{
  return sub_240986FA4(&qword_268C99478, type metadata accessor for HKFeatureAvailabilityRequirementIdentifier);
}

uint64_t sub_240987C18()
{
  return sub_240986FA4(&qword_268C99480, type metadata accessor for HKFeatureAvailabilityRequirementIdentifier);
}

void type metadata accessor for HKHearingLevelClassification(uint64_t a1)
{
}

void sub_240987C74(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

char *sub_240987D04(char *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *(void *)a2;
    *(void *)uint64_t v4 = *(void *)a2;
    uint64_t v4 = (char *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v7;
    uint64_t v8 = a3[5];
    unint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_240A02978();
    os_log_type_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    v12(v9, v10, v11);
    v12(&v4[a3[6]], &a2[a3[6]], v11);
    uint64_t v13 = a3[7];
    uint64_t v14 = a3[8];
    uint64_t v15 = &v4[v13];
    unint64_t v16 = &a2[v13];
    long long v17 = *((_OWORD *)v16 + 1);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v17;
    long long v18 = *(_OWORD *)(v16 + 43);
    *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
    *(_OWORD *)(v15 + 43) = v18;
    unint64_t v19 = &v4[v14];
    unint64_t v20 = &a2[v14];
    long long v21 = *((_OWORD *)v20 + 1);
    *(_OWORD *)unint64_t v19 = *(_OWORD *)v20;
    *((_OWORD *)v19 + 1) = v21;
    v19[32] = v20[32];
    *(void *)&v4[a3[9]] = *(void *)&a2[a3[9]];
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  }
  return v4;
}

uint64_t sub_240987E64(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_240A02978();
  unint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + *(int *)(a2 + 24), v5);

  return swift_bridgeObjectRelease();
}

char *sub_240987F14(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  unint64_t v9 = &a2[v7];
  uint64_t v10 = sub_240A02978();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = &a1[v12];
  uint64_t v15 = &a2[v12];
  long long v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  long long v17 = *(_OWORD *)(v15 + 43);
  *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
  *(_OWORD *)(v14 + 43) = v17;
  long long v18 = &a1[v13];
  unint64_t v19 = &a2[v13];
  long long v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)long long v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v20;
  v18[32] = v19[32];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return a1;
}

char *sub_240988024(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_240A02978();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  long long v14 = *(_OWORD *)(v13 + 11);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 11) = v14;
  long long v15 = *(_OWORD *)(v13 + 43);
  *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
  *(_OWORD *)(v12 + 43) = v15;
  uint64_t v16 = a3[8];
  long long v17 = &a1[v16];
  long long v18 = &a2[v16];
  char v19 = v18[32];
  long long v20 = *((_OWORD *)v18 + 1);
  *(_OWORD *)long long v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v20;
  v17[32] = v19;
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_240988154(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_240A02978();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = &a1[v11];
  long long v14 = &a2[v11];
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  long long v16 = *(_OWORD *)(v14 + 43);
  *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
  *(_OWORD *)(v13 + 43) = v16;
  long long v17 = &a1[v12];
  long long v18 = &a2[v12];
  long long v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)long long v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  v17[32] = v18[32];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  return a1;
}

char *sub_240988250(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_240A02978();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  long long v14 = &a1[v12];
  long long v15 = &a2[v12];
  *(_OWORD *)long long v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 11) = *(_OWORD *)(v15 + 11);
  *(_OWORD *)(v14 + 43) = *(_OWORD *)(v15 + 43);
  *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
  long long v16 = &a1[v13];
  long long v17 = &a2[v13];
  v16[32] = v17[32];
  long long v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)long long v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_240988364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240988378);
}

uint64_t sub_240988378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_240A02978();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_240988428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24098843C);
}

uint64_t sub_24098843C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_240A02978();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for AudiogramPDFChartData()
{
  uint64_t result = qword_268C99500;
  if (!qword_268C99500) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240988530()
{
  uint64_t result = sub_240A02978();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2409885EC()
{
  return MEMORY[0x263F8D320];
}

BOOL sub_2409885F8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_240988610()
{
  return sub_240A05418();
}

uint64_t sub_240988658()
{
  return sub_240A05408();
}

uint64_t sub_240988684()
{
  return sub_240A05418();
}

double sub_2409886C8@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

uint64_t sub_2409886D4(uint64_t result, __int16 a2)
{
  if (a2) {
    return 0;
  }
  if ((~result & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (*(double *)&result <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (*(double *)&result < 9.22337204e18)
  {
    sub_240A05348();
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46A40]), sel_init);
    id v4 = objc_msgSend(self, sel_decibelHearingLevelUnit);
    id v5 = objc_msgSend(v3, sel_localizedDisplayNameForUnit_value_, v4, 0);

    uint64_t v6 = v5;
    uint64_t v7 = v5;
    if (v5)
    {
      id v8 = v5;
      if ((a2 & 0x100) == 0) {
        goto LABEL_7;
      }
    }
    else
    {
      sub_240A04C58();
      uint64_t v7 = (void *)sub_240A04C18();
      swift_bridgeObjectRelease();
      sub_240A04C58();
      uint64_t v6 = (void *)sub_240A04C18();
      swift_bridgeObjectRelease();
      id v12 = 0;
      if ((a2 & 0x100) == 0)
      {
LABEL_7:

        uint64_t v9 = (void *)sub_240A04C18();
        swift_bridgeObjectRelease();
        id v10 = (id)HKFormatValueAndUnit();

        if (!v10) {
          return 0;
        }
LABEL_11:
        uint64_t v11 = sub_240A04C58();

        return v11;
      }
    }

    uint64_t v13 = (void *)sub_240A04C18();
    swift_bridgeObjectRelease();
    id v10 = (id)HKLocalizedStringForUpperClampedValueAndUnit();

    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_2409888E4(void *a1, SEL *a2, uint64_t a3)
{
  id v6 = objc_msgSend(a1, sel_hearingLevelSummary);
  id v7 = [v6 *a2];

  if (!v7) {
    return 0;
  }
  objc_msgSend(a1, sel_isAverageSensitivityUpperClampedForSide_, a3);
  objc_msgSend(a1, sel_containSensitivityPointsIsMasked_forSide_, 1, a3);
  objc_msgSend(a1, sel_containSensitivityPointsIsMasked_forSide_, 0, a3);
  id v8 = objc_msgSend(v7, sel_averageSensitivity);
  if (v8)
  {
    uint64_t v9 = self;
    id v10 = v8;
    id v11 = objc_msgSend(v9, sel_decibelHearingLevelUnit);
    objc_msgSend(v10, sel_doubleValueForUnit_, v11);
    uint64_t v13 = v12;

    uint64_t v14 = v13;
  }
  else
  {
    uint64_t v14 = 0;
  }
  HKHearingLevelClassificationForSensitivity();

  return v14;
}

uint64_t sub_240988A8C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_sampleType);
  id v5 = objc_msgSend(v4, sel_identifier);

  uint64_t v6 = sub_240A04C58();
  uint64_t v8 = v7;

  *a2 = v6;
  a2[1] = v8;
  id v9 = objc_msgSend(a1, sel_startDate);
  uint64_t v10 = type metadata accessor for AudiogramPDFChartData();
  v76 = a2;
  sub_240A02948();

  id v11 = objc_msgSend(a1, sel_endDate);
  sub_240A02948();

  id v12 = a1;
  uint64_t v13 = sub_2409888E4(v12, (SEL *)&selRef_rightEarMetrics, 1);
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  LODWORD(v8) = v18;
  uint64_t v19 = sub_2409888E4(v12, (SEL *)&selRef_leftEarMetrics, 0);
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  int v25 = v24;

  id v74 = v12;
  uint64_t v75 = v10;
  uint64_t v26 = (char *)v76 + *(int *)(v10 + 28);
  *(void *)uint64_t v26 = v13;
  *((void *)v26 + 1) = v15;
  *((void *)v26 + 2) = v17;
  v26[26] = BYTE2(v8);
  *((_WORD *)v26 + 12) = v8;
  *((void *)v26 + 4) = v19;
  *((void *)v26 + 5) = v21;
  *((void *)v26 + 6) = v23;
  v26[58] = BYTE2(v25);
  *((_WORD *)v26 + 28) = v25;
  id v27 = objc_msgSend(v12, sel_metadata);
  if (v27)
  {
    uint64_t v28 = sub_240A04BA8();

    unsigned __int8 v29 = sub_24098944C(v28);
    unsigned __int8 v30 = sub_24098944C(v28);
    id v27 = sub_240989530(v28);
    uint64_t v32 = v31 & 1;
    id v33 = sub_240989530(v28);
    char v35 = v34;
    swift_bridgeObjectRelease();
    char v36 = v35 & 1;
    unint64_t v37 = v29 | ((unint64_t)v30 << 8);
  }
  else
  {
    uint64_t v32 = 0;
    id v33 = 0;
    char v36 = 0;
    unint64_t v37 = 3;
  }
  os_log_type_t v38 = (char *)v76 + *(int *)(v10 + 32);
  *(void *)os_log_type_t v38 = v37;
  *((void *)v38 + 1) = v27;
  *((void *)v38 + 2) = v32;
  *((void *)v38 + 3) = v33;
  v38[32] = v36;
  id v39 = objc_msgSend(v12, sel_sensitivityPoints);
  sub_2409824B8(0, &qword_268C99510);
  unint64_t v40 = sub_240A04D18();

  if (v40 >> 62) {
    goto LABEL_46;
  }
  uint64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  for (; v41; uint64_t v41 = sub_240A05288())
  {
    uint64_t v42 = 0;
    id v80 = self;
    unint64_t v81 = v40 & 0xC000000000000001;
    unint64_t v77 = v40 + 32;
    char v43 = (void *)MEMORY[0x263F8EE78];
    unint64_t v78 = v40;
    uint64_t v79 = v41;
    while (1)
    {
      id v44 = v81 ? (id)MEMORY[0x245604E50](v42, v40) : *(id *)(v77 + 8 * v42);
      id v45 = v44;
      if (__OFADD__(v42++, 1)) {
        break;
      }
      v83 = v43;
      id v47 = objc_msgSend(v44, sel_frequency);
      id v48 = objc_msgSend(v80, sel_hertzUnit);
      objc_msgSend(v47, sel_doubleValueForUnit_, v48);
      uint64_t v50 = v49;

      id v51 = objc_msgSend(v45, sel_tests);
      sub_2409824B8(0, &qword_268C99518);
      unint64_t v52 = sub_240A04D18();

      if (v52 >> 62)
      {
        _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        uint64_t v53 = sub_240A05288();
        if (v53)
        {
LABEL_13:
          unint64_t v40 = 4;
          while (1)
          {
            id v54 = (v52 & 0xC000000000000001) != 0
                ? (id)MEMORY[0x245604E50](v40 - 4, v52)
                : *(id *)(v52 + 8 * v40);
            uint64_t v55 = v54;
            unint64_t v56 = v40 - 3;
            if (__OFADD__(v40 - 4, 1)) {
              break;
            }
            if (!objc_msgSend(v54, sel_side))
            {
              swift_bridgeObjectRelease_n();
              double v57 = sub_24098932C(v55);
              __int16 v82 = v58 & 0xFF01;
              unint64_t v40 = v78;
              goto LABEL_24;
            }

            ++v40;
            if (v56 == v53)
            {
              __int16 v82 = 2;
              swift_bridgeObjectRelease_n();
              double v57 = 0.0;
              unint64_t v40 = v78;
              goto LABEL_24;
            }
          }
          __break(1u);
          goto LABEL_44;
        }
      }
      else
      {
        uint64_t v53 = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
        _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        if (v53) {
          goto LABEL_13;
        }
      }
      __int16 v82 = 2;
      swift_bridgeObjectRelease_n();
      double v57 = 0.0;
LABEL_24:
      id v59 = objc_msgSend(v45, sel_tests);
      unint64_t v60 = sub_240A04D18();

      if (v60 >> 62)
      {
        _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        uint64_t v61 = sub_240A05288();
        if (v61)
        {
LABEL_26:
          uint64_t v62 = 4;
          while (1)
          {
            id v63 = (v60 & 0xC000000000000001) != 0
                ? (id)MEMORY[0x245604E50](v62 - 4, v60)
                : *(id *)(v60 + 8 * v62);
            v64 = v63;
            uint64_t v65 = v62 - 3;
            if (__OFADD__(v62 - 4, 1)) {
              break;
            }
            if (objc_msgSend(v63, sel_side) == (id)1)
            {
              swift_bridgeObjectRelease_n();
              double v67 = sub_24098932C(v64);
              __int16 v69 = v68;

              __int16 v66 = v69 & 0xFF01;
              goto LABEL_35;
            }

            ++v62;
            if (v65 == v61) {
              goto LABEL_33;
            }
          }
LABEL_44:
          __break(1u);
          break;
        }
      }
      else
      {
        uint64_t v61 = *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10);
        _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        if (v61) {
          goto LABEL_26;
        }
      }
LABEL_33:
      __int16 v66 = 2;
      swift_bridgeObjectRelease_n();

      double v67 = 0.0;
LABEL_35:
      char v43 = v83;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v43 = sub_240992470(0, v83[2] + 1, 1, v83);
      }
      unint64_t v71 = v43[2];
      unint64_t v70 = v43[3];
      if (v71 >= v70 >> 1) {
        char v43 = sub_240992470((void *)(v70 > 1), v71 + 1, 1, v43);
      }
      v43[2] = v71 + 1;
      v72 = (double *)&v43[5 * v71];
      *((void *)v72 + 4) = v50;
      v72[5] = v57;
      *((_WORD *)v72 + 24) = v82;
      v72[7] = v67;
      *((_WORD *)v72 + 32) = v66;
      if (v42 == v79) {
        goto LABEL_48;
      }
    }
    __break(1u);
LABEL_46:
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  }
  char v43 = (void *)MEMORY[0x263F8EE78];
LABEL_48:

  uint64_t result = swift_bridgeObjectRelease_n();
  *(uint64_t *)((char *)v76 + *(int *)(v75 + 36)) = (uint64_t)v43;
  return result;
}

uint64_t sub_24098915C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
}

uint64_t sub_240989168(void *a1, void *a2)
{
  if (!a1 || !a2) {
    return 2;
  }
  id v3 = a2;
  id v4 = a1;
  id v5 = objc_msgSend(v3, sel_lowerBound);
  if (!v5) {
    goto LABEL_5;
  }
  uint64_t v6 = v5;
  uint64_t v7 = self;
  id v8 = objc_msgSend(v7, sel_decibelHearingLevelUnit);
  objc_msgSend(v4, sel_doubleValueForUnit_, v8);
  double v10 = v9;

  id v11 = objc_msgSend(v7, sel_decibelHearingLevelUnit);
  objc_msgSend(v6, sel_doubleValueForUnit_, v11);
  double v13 = v12;

  if (v10 <= v13)
  {

    return 1;
  }
  else
  {
LABEL_5:
    id v14 = objc_msgSend(v3, sel_upperBound);
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v16 = self;
      id v17 = objc_msgSend(v16, sel_decibelHearingLevelUnit);
      objc_msgSend(v4, sel_doubleValueForUnit_, v17);
      double v19 = v18;

      id v20 = objc_msgSend(v16, sel_decibelHearingLevelUnit);
      objc_msgSend(v15, sel_doubleValueForUnit_, v20);
      double v22 = v21;

      if (v22 <= v19) {
        return 0;
      }
    }
    else
    {
    }
    return 2;
  }
}

double sub_24098932C(void *a1)
{
  id v2 = objc_msgSend(a1, sel_clampedSensitivity);
  if (!v2) {
    id v2 = objc_msgSend(a1, sel_sensitivity);
  }
  id v3 = objc_msgSend(self, sel_decibelHearingLevelUnit);
  objc_msgSend(v2, sel_doubleValueForUnit_, v3);
  double v5 = v4;

  id v6 = objc_msgSend(a1, sel_clampedSensitivity);
  id v7 = objc_msgSend(a1, sel_clampingRange);
  sub_240989168(v6, v7);

  objc_msgSend(a1, sel_masked);
  return v5;
}

uint64_t sub_24098944C(uint64_t a1)
{
  uint64_t v2 = sub_240A04C58();
  if (!*(void *)(a1 + 16) || (unint64_t v4 = sub_24097B164(v2, v3), (v5 & 1) == 0))
  {
    long long v9 = 0u;
    long long v10 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_240981564(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v9);
  swift_bridgeObjectRelease();
  if (!*((void *)&v10 + 1))
  {
LABEL_7:
    sub_24098961C((uint64_t)&v9);
    return 2;
  }
  sub_2409824B8(0, &qword_268C99528);
  if ((swift_dynamicCast() & 1) == 0) {
    return 2;
  }
  id v6 = objc_msgSend(v8, sel_BOOLValue);

  return (uint64_t)v6;
}

id sub_240989530(uint64_t a1)
{
  uint64_t v2 = sub_240A04C58();
  if (!*(void *)(a1 + 16) || (unint64_t v4 = sub_24097B164(v2, v3), (v5 & 1) == 0))
  {
    long long v9 = 0u;
    long long v10 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_240981564(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v9);
  swift_bridgeObjectRelease();
  if (!*((void *)&v10 + 1))
  {
LABEL_7:
    sub_24098961C((uint64_t)&v9);
    return 0;
  }
  sub_2409824B8(0, &qword_268C99528);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  id v6 = objc_msgSend(v8, sel_integerValue);

  return v6;
}

uint64_t sub_24098961C(uint64_t a1)
{
  sub_240989678();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_240989678()
{
  if (!qword_268C99520)
  {
    unint64_t v0 = sub_240A050C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99520);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for AudiogramPDFChartData.SensitivityTest(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for AudiogramPDFChartData.SensitivityTest(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AudiogramPDFChartData.SensitivityTest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 10) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudiogramPDFChartData.SensitivityTest()
{
  return &type metadata for AudiogramPDFChartData.SensitivityTest;
}

uint64_t initializeBufferWithCopyOfBuffer for AudiogramPDFChartData.ChartPoint(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 initializeWithCopy for AudiogramPDFChartData.ChartPoint(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for AudiogramPDFChartData.ChartPoint(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 34)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 >= 2) {
    int v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v4 = -2;
  }
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AudiogramPDFChartData.ChartPoint(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 34) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudiogramPDFChartData.ChartPoint()
{
  return &type metadata for AudiogramPDFChartData.ChartPoint;
}

__n128 initializeWithCopy for AudiogramPDFChartData.Metadata(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for AudiogramPDFChartData.Metadata(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && a1[33]) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *a1;
  if (v3 >= 2) {
    int v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v4 = -2;
  }
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AudiogramPDFChartData.Metadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudiogramPDFChartData.Metadata()
{
  return &type metadata for AudiogramPDFChartData.Metadata;
}

__n128 initializeWithCopy for AudiogramPDFChartData.Summary(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 43) = *(_OWORD *)(a2 + 43);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for AudiogramPDFChartData.Summary(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 59)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 9);
  if (v3 >= 2) {
    int v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v4 = -2;
  }
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AudiogramPDFChartData.Summary(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 58) = 0;
    *(_WORD *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 59) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 59) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 9) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudiogramPDFChartData.Summary()
{
  return &type metadata for AudiogramPDFChartData.Summary;
}

uint64_t sub_240989A44()
{
  return MEMORY[0x263F8D558];
}

unsigned char *initializeBufferWithCopyOfBuffer for AudiogramPDFChartData.SensitivityTest.ClampingType(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for AudiogramPDFChartData.SensitivityTest.ClampingType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AudiogramPDFChartData.SensitivityTest.ClampingType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240989BB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_240989BE0(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_240989BEC(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AudiogramPDFChartData.SensitivityTest.ClampingType()
{
  return &type metadata for AudiogramPDFChartData.SensitivityTest.ClampingType;
}

__n128 initializeWithCopy for AudiogramPDFChartData.Summary.Metric(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for AudiogramPDFChartData.Summary.Metric(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 27)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 9);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AudiogramPDFChartData.Summary.Metric(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 26) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 27) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 27) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 9) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudiogramPDFChartData.Summary.Metric()
{
  return &type metadata for AudiogramPDFChartData.Summary.Metric;
}

unint64_t sub_240989CD0()
{
  unint64_t result = qword_268C99530;
  if (!qword_268C99530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99530);
  }
  return result;
}

id sub_240989D28()
{
  type metadata accessor for HearingAppPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  qword_26AFD6468 = (uint64_t)result;
  return result;
}

uint64_t type metadata accessor for HearingTestRescindedTileActionHandler()
{
  uint64_t result = qword_268C99538;
  if (!qword_268C99538) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240989DCC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_240989E0C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_240A04018();
  uint64_t v42 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  BOOL v4 = &v36[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24098AB8C();
  MEMORY[0x270FA5388](v5 - 8);
  BOOL v7 = &v36[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_240A028A8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  double v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  id v14 = &v36[-v13];
  sub_240A02898();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_24098ABE4((uint64_t)v7);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32))(v14, v7, v8);
  id v16 = objc_msgSend(self, sel_defaultWorkspace);
  if (v16)
  {
    id v17 = v16;
    uint64_t v40 = v1;
    double v18 = v4;
    double v19 = (void *)sub_240A02878();
    sub_24098A374(MEMORY[0x263F8EE78]);
    id v20 = (void *)sub_240A04B98();
    swift_bridgeObjectRelease();
    unsigned int v41 = objc_msgSend(v17, sel_openSensitiveURL_withOptions_, v19, v20);

    BOOL v4 = v18;
  }
  else
  {
    unsigned int v41 = 0;
  }
  sub_240A03FE8();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v12, v14, v8);
  double v21 = sub_240A03FF8();
  os_log_type_t v22 = sub_240A04EC8();
  int v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v40 = v2;
    uint64_t v25 = v24;
    uint64_t v38 = swift_slowAlloc();
    uint64_t v44 = v38;
    *(_DWORD *)uint64_t v25 = 136315650;
    uint64_t v26 = sub_240A05478();
    id v39 = v4;
    int v37 = v23;
    uint64_t v43 = sub_240981440(v26, v27, &v44);
    sub_240A050D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    sub_24098B1F8(&qword_268C99560, MEMORY[0x263F06EA8]);
    uint64_t v28 = sub_240A05348();
    uint64_t v43 = sub_240981440(v28, v29, &v44);
    sub_240A050D8();
    swift_bridgeObjectRelease();
    unsigned __int8 v30 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
    v30(v12, v8);
    *(_WORD *)(v25 + 22) = 2080;
    LOBYTE(v43) = v41;
    uint64_t v31 = sub_240A04C78();
    uint64_t v43 = sub_240981440(v31, v32, &v44);
    sub_240A050D8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240976000, v21, (os_log_type_t)v37, "[%s]: Opening %s, success: %s", (uint8_t *)v25, 0x20u);
    uint64_t v33 = v38;
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v33, -1, -1);
    MEMORY[0x2456058A0](v25, -1, -1);

    (*(void (**)(unsigned char *, uint64_t))(v42 + 8))(v39, v40);
    return ((uint64_t (*)(unsigned char *, uint64_t))v30)(v14, v8);
  }
  else
  {

    uint64_t v34 = v42;
    char v35 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
    v35(v12, v8);
    (*(void (**)(unsigned char *, uint64_t))(v34 + 8))(v4, v2);
    return ((uint64_t (*)(unsigned char *, uint64_t))v35)(v14, v8);
  }
}

unint64_t sub_24098A374(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_240982740(0, &qword_268C99568);
  uint64_t v2 = sub_240A052C8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_24098AC40(v6, (uint64_t)&v15);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_24097B164(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_24098AD10(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24098A4B0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_24098B158();
  uint64_t v2 = (void *)sub_240A052C8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_unknownObjectRetain();
    unint64_t result = sub_24098AD20((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24098A5B8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_240982740(0, (unint64_t *)&qword_268C99580);
  uint64_t v2 = (void *)sub_240A052C8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    unint64_t result = sub_24097B164(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24098A6D8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_24098B0BC();
  uint64_t v2 = (void *)sub_240A052C8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    unint64_t result = sub_24098ADB4((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v4 += 2;
    v2[2] = v12;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_24098A7D4(uint64_t a1)
{
  uint64_t v2 = sub_240A03BC8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v6 = sub_240A03A38();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v6;
}

uint64_t sub_24098A8DC()
{
  sub_240A03A48();

  return swift_deallocClassInstance();
}

uint64_t sub_24098A90C()
{
  return type metadata accessor for HearingTestRescindedTileActionHandler();
}

uint64_t sub_24098A914()
{
  return sub_24098B1F8(&qword_268C99548, (void (*)(uint64_t))type metadata accessor for HearingTestRescindedTileActionHandler);
}

uint64_t sub_24098A95C()
{
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  sub_240A02828();
  sub_240989E0C();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24098AA20()
{
  return MEMORY[0x270F34780](*v0);
}

uint64_t sub_24098AA4C()
{
  return MEMORY[0x270F34788](*v0);
}

uint64_t sub_24098AA78()
{
  return MEMORY[0x270F34790](*v0);
}

uint64_t sub_24098AAA4()
{
  return MEMORY[0x270F347C0](*v0);
}

uint64_t sub_24098AAD0()
{
  return MEMORY[0x270F347B8](*v0);
}

uint64_t sub_24098AAFC()
{
  return sub_24098B1F8(&qword_268C99550, (void (*)(uint64_t))type metadata accessor for HearingTestRescindedTileActionHandler);
}

uint64_t sub_24098AB44()
{
  return sub_24098B1F8(&qword_268C99558, (void (*)(uint64_t))type metadata accessor for HearingTestRescindedTileActionHandler);
}

void sub_24098AB8C()
{
  if (!qword_26AFD3F48)
  {
    sub_240A028A8();
    unint64_t v0 = sub_240A050C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD3F48);
    }
  }
}

uint64_t sub_24098ABE4(uint64_t a1)
{
  sub_24098AB8C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24098AC40(uint64_t a1, uint64_t a2)
{
  sub_24098ACA4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_24098ACA4()
{
  if (!qword_268C99570)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C99570);
    }
  }
}

_OWORD *sub_24098AD10(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_24098AD20(uint64_t a1)
{
  sub_240A04C58();
  sub_240A053F8();
  sub_240A04C98();
  uint64_t v2 = sub_240A05418();
  swift_bridgeObjectRelease();

  return sub_24098ADF8(a1, v2);
}

unint64_t sub_24098ADB4(uint64_t a1)
{
  uint64_t v2 = sub_240A04FF8();

  return sub_24098AF70(a1, v2);
}

unint64_t sub_24098ADF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_240A04C58();
    uint64_t v8 = v7;
    if (v6 == sub_240A04C58() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_240A05368();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_240A04C58();
          uint64_t v15 = v14;
          if (v13 == sub_240A04C58() && v15 == v16) {
            break;
          }
          char v18 = sub_240A05368();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_24098AF70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_24098B07C();
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_240A05008();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_240A05008();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_24098B07C()
{
  unint64_t result = qword_26AFD48A8;
  if (!qword_26AFD48A8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD48A8);
  }
  return result;
}

void sub_24098B0BC()
{
  if (!qword_268C99578)
  {
    sub_24098B07C();
    sub_24098B1F8((unint64_t *)&unk_26AFD48B0, (void (*)(uint64_t))sub_24098B07C);
    unint64_t v0 = sub_240A052D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99578);
    }
  }
}

void sub_24098B158()
{
  if (!qword_268C99588)
  {
    type metadata accessor for Key(255);
    sub_24098B1F8((unint64_t *)&qword_268C993D8, type metadata accessor for Key);
    unint64_t v0 = sub_240A052D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99588);
    }
  }
}

uint64_t sub_24098B1F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24098B240(void *a1, uint64_t a2)
{
  uint64_t v50 = a2;
  uint64_t v47 = sub_240A04018();
  uint64_t v46 = *(void *)(v47 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v47);
  id v48 = (char *)v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  v45[0] = (char *)v45 - v5;
  uint64_t v6 = sub_240A03998();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_240A039A8();
  uint64_t v10 = *(void *)(v49 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v49);
  uint64_t v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v45 - v14;
  uint64_t v16 = a1;
  id v17 = objc_msgSend(a1, sel_identifier);
  uint64_t v18 = sub_240A04C58();
  uint64_t v20 = v19;

  if (v18 == 0xD00000000000002ALL && v20 == 0x8000000240A0A3B0 || (sub_240A05368() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    id v21 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NoiseNotificationsDataTypeDetailConfigurationProvider()), sel_init);
    sub_240A03948();

    uint64_t v22 = v50;
    sub_240A03858();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v22, v6);
    id v23 = objc_allocWithZone((Class)sub_240A03A08());
    id v24 = v16;
    uint64_t v25 = sub_240A039E8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v49);
    return v25;
  }
  if (v18 == 0xD000000000000033 && v20 == 0x8000000240A0A3E0 || (sub_240A05368() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return sub_24099F21C(v16, v50);
  }
  if (v18 == 0xD00000000000001DLL && v20 == 0x8000000240A0A420 || (sub_240A05368() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v28 = self;
    uint64_t v29 = v50;
    unsigned __int8 v30 = (void *)sub_240A03978();
    id v31 = objc_msgSend(v28, sel_sharedInstanceForHealthStore_, v30);

    id v32 = objc_msgSend(v31, sel_createHKUnitPreferenceController);
    type metadata accessor for AudiogramDataTypeDetailConfigurationProvider();
    swift_initStackObject();
    sub_24098BE30(v16, (uint64_t)v15);
    uint64_t v33 = sub_240A03858();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v49);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v29, v6);
    id v34 = objc_allocWithZone((Class)type metadata accessor for AudiogramDataTypeDetailViewController());
    uint64_t v25 = (uint64_t)sub_2409A4F2C(v33, (uint64_t)v9, v32);
    swift_release();

    return v25;
  }
  if (v18 == 0xD000000000000032 && v20 == 0x8000000240A0A440
    || (sub_240A05368() & 1) != 0
    || v18 == 0xD00000000000002ELL && v20 == 0x8000000240A0A480)
  {
    swift_bridgeObjectRelease();
    return sub_24099E4D4(v16, v50);
  }
  char v35 = sub_240A05368();
  swift_bridgeObjectRelease();
  if (v35) {
    return sub_24099E4D4(v16, v50);
  }
  uint64_t v55 = 0;
  memset(v54, 0, sizeof(v54));
  sub_24098BC00((uint64_t)v54, (uint64_t)&v51);
  if (v52)
  {
    sub_240980754(&v51, (uint64_t)v53);
    sub_24098BDC0(v53, v53[3]);
    sub_240A03C08();
    uint64_t v43 = v50;
    sub_240A03858();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v43, v6);
    objc_allocWithZone((Class)sub_240A03A08());
    id v44 = v16;
    uint64_t v25 = sub_240A039E8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v49);
    sub_24098BCCC((uint64_t)v54);
    sub_240981514((uint64_t)v53);
  }
  else
  {
    sub_24098BCCC((uint64_t)&v51);
    uint64_t v36 = v45[0];
    sub_240A03FD8();
    id v37 = v16;
    uint64_t v38 = sub_240A03FF8();
    os_log_type_t v39 = sub_240A04EA8();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      unsigned int v41 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 138412290;
      v53[0] = v37;
      id v42 = v37;
      sub_240A050D8();
      *unsigned int v41 = v37;

      _os_log_impl(&dword_240976000, v38, v39, "[HearingAppPluginAppDelegate] No custom detail view controller or configuration provided for %@", v40, 0xCu);
      sub_24098BD28();
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v41, -1, -1);
      MEMORY[0x2456058A0](v40, -1, -1);
    }
    else
    {
    }
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v36, v47);
    sub_24098BCCC((uint64_t)v54);
    return 0;
  }
  return v25;
}

uint64_t sub_24098BBDC(void *a1, uint64_t a2)
{
  return sub_24098B240(a1, a2);
}

uint64_t sub_24098BC00(uint64_t a1, uint64_t a2)
{
  sub_24098BC64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_24098BC64()
{
  if (!qword_268C99590)
  {
    sub_240983260(255, &qword_268C99598);
    unint64_t v0 = sub_240A050C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99590);
    }
  }
}

uint64_t sub_24098BCCC(uint64_t a1)
{
  sub_24098BC64();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_24098BD28()
{
  if (!qword_26AFD3F40)
  {
    sub_24098BD80();
    unint64_t v0 = sub_240A050C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD3F40);
    }
  }
}

unint64_t sub_24098BD80()
{
  unint64_t result = qword_26AFD3F30;
  if (!qword_26AFD3F30)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD3F30);
  }
  return result;
}

void *sub_24098BDC0(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

void sub_24098BE04()
{
  unk_268C9A9A5 = 0;
  unk_268C9A9A6 = -5120;
}

void sub_24098BE30(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v3 = sub_240A03D48();
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  MEMORY[0x270FA5388](v3);
  id v48 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_240A03D58();
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v47 = (uint64_t *)((char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_240A03968();
  uint64_t v52 = *(void *)(v7 - 8);
  uint64_t v53 = (ValueMetadata *)v7;
  MEMORY[0x270FA5388](v7);
  long long v51 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_240A038D8();
  uint64_t v9 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v43 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DataTypeDetailConfiguration.InlineChartComponent();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (uint64_t *)((char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_240A039A8();
  uint64_t v55 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A038E8();
  id v17 = a1;
  sub_240A03908();
  __int16 v58 = &type metadata for AudiogramDataManagementComponent;
  unint64_t v59 = sub_24098C7C0();
  uint64_t v56 = (uint64_t)v17;
  char v57 = 1;
  id v18 = v17;
  sub_240A03C78();
  swift_bridgeObjectRelease();
  sub_240987034((uint64_t)&v56);
  id v19 = objc_msgSend(self, sel_sharedBehavior);
  if (!v19)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v20 = v19;
  id v21 = objc_msgSend(v19, sel_features);

  if (!v21)
  {
LABEL_8:
    __break(1u);
    return;
  }
  unsigned int v22 = objc_msgSend(v21, sel_yodel);

  if (v22)
  {
    *uint64_t v13 = v18;
    id v42 = v13;
    id v41 = v18;
    sub_240A03898();
    _s18HealthExperienceUI27DataTypeDetailConfigurationV16HearingAppPluginE20InlineChartComponentV10identifierSSvg_0();
    __int16 v58 = (ValueMetadata *)v11;
    unint64_t v59 = sub_24098C878(&qword_268C995B0, (void (*)(uint64_t))type metadata accessor for DataTypeDetailConfiguration.InlineChartComponent);
    id v23 = sub_24097F464(&v56);
    sub_24098C814((uint64_t)v13, (uint64_t)v23);
    uint64_t v40 = v14;
    sub_240A03C78();
    swift_bridgeObjectRelease();
    sub_240987034((uint64_t)&v56);
    uint64_t v24 = type metadata accessor for AudiogramShowAllComponent();
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = 0xD000000000000019;
    *(void *)(v25 + 24) = 0x8000000240A0A520;
    __int16 v58 = (ValueMetadata *)v24;
    unint64_t v59 = sub_24098C878(&qword_268C995B8, (void (*)(uint64_t))type metadata accessor for AudiogramShowAllComponent);
    uint64_t v56 = v25;
    _s18HealthExperienceUI27DataTypeDetailConfigurationV16HearingAppPluginE20InlineChartComponentV10identifierSSvg_0();
    uint64_t v26 = *MEMORY[0x263F44380];
    unint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
    uint64_t v28 = v43;
    uint64_t v29 = v44;
    v27(v43, v26, v44);
    sub_240A03C68();
    swift_bridgeObjectRelease();
    unsigned __int8 v30 = *(void (**)(char *, uint64_t))(v9 + 8);
    v30(v28, v29);
    sub_240981514((uint64_t)&v56);
    __int16 v58 = &type metadata for AudiogramPDFComponent;
    unint64_t v59 = sub_24098C8C0();
    uint64_t v56 = 0;
    sub_240A038F8();
    v27(v28, v26, v29);
    uint64_t v31 = v40;
    sub_240A03C68();
    swift_bridgeObjectRelease();
    v30(v28, v29);
    sub_240981514((uint64_t)&v56);
    uint64_t v32 = v46;
    uint64_t v33 = v47;
    id v34 = v41;
    void *v47 = v41;
    (*(void (**)(void *, void, uint64_t))(v45 + 104))(v33, *MEMORY[0x263F44778], v32);
    id v35 = v34;
    sub_240A038C8();
    (*(void (**)(char *, void, uint64_t))(v49 + 104))(v48, *MEMORY[0x263F44768], v50);
    uint64_t v36 = v51;
    sub_240A03958();
    sub_240A03928();
    id v37 = v53;
    __int16 v58 = v53;
    unint64_t v59 = MEMORY[0x263F443D0];
    uint64_t v38 = sub_24097F464(&v56);
    uint64_t v39 = v52;
    (*(void (**)(uint64_t *, char *, ValueMetadata *))(v52 + 16))(v38, v36, v37);
    sub_240A03C78();
    swift_bridgeObjectRelease();
    sub_240987034((uint64_t)&v56);
    sub_240A03938();
    sub_24098C5E0(v35, &v56);
    sub_240A03C78();

    swift_bridgeObjectRelease();
    sub_240987034((uint64_t)&v56);
    (*(void (**)(char *, ValueMetadata *))(v39 + 8))(v36, v37);
    sub_24098C914((uint64_t)v42);
    (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(v54, v16, v31);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(v54, v16, v14);
  }
}

uint64_t sub_24098C5E0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24098C780();
  sub_240982614(0, (unint64_t *)&qword_26AFD4940, (unint64_t *)&qword_26AFD4950, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_240A06800;
  sub_240A02D68();
  uint64_t v5 = sub_240A02D58();
  uint64_t v7 = v6;
  uint64_t v8 = MEMORY[0x263F8D310];
  *(void *)(v4 + 56) = MEMORY[0x263F8D310];
  unint64_t v9 = sub_2409800D4();
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = v7;
  *(void *)(v4 + 96) = v8;
  *(void *)(v4 + 104) = v9;
  *(void *)(v4 + 64) = v9;
  *(void *)(v4 + 72) = 0xD00000000000001ELL;
  *(void *)(v4 + 80) = 0x8000000240A0A500;
  sub_240A04E08();
  uint64_t v10 = sub_240A03848();
  uint64_t v11 = MEMORY[0x263F44350];
  a2[3] = v10;
  a2[4] = v11;
  sub_24097F464(a2);
  id v12 = a1;
  return sub_240A03838();
}

uint64_t sub_24098C720()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AudiogramDataTypeDetailConfigurationProvider()
{
  return self;
}

void sub_24098C754(void *a1@<X0>, uint64_t a2@<X8>)
{
}

unint64_t sub_24098C780()
{
  unint64_t result = qword_268C995A0;
  if (!qword_268C995A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268C995A0);
  }
  return result;
}

unint64_t sub_24098C7C0()
{
  unint64_t result = qword_268C995A8;
  if (!qword_268C995A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C995A8);
  }
  return result;
}

uint64_t sub_24098C814(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DataTypeDetailConfiguration.InlineChartComponent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24098C878(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24098C8C0()
{
  unint64_t result = qword_268C995C0;
  if (!qword_268C995C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C995C0);
  }
  return result;
}

uint64_t sub_24098C914(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DataTypeDetailConfiguration.InlineChartComponent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24098C970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v45 = a4;
  uint64_t v7 = sub_240A02FA8();
  uint64_t v48 = *(void *)(v7 - 8);
  uint64_t v49 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v47 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_240A02B08();
  uint64_t v9 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  id v42 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24098EA04(0, &qword_26AFD3F60, MEMORY[0x263F437D8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v37 - v12;
  uint64_t v14 = type metadata accessor for HeadphoneNotificationsFeatureStatusActionHandlerData(0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_240A02FF8();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = a1;
  unint64_t v39 = sub_240979724();
  uint64_t v40 = v21;
  sub_24098CFC4(a2, a3, (uint64_t)v20);
  uint64_t v22 = sub_240A02E88();
  id v23 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16);
  uint64_t v46 = a2;
  v23(v16, a2, v22);
  sub_240A026F8();
  swift_allocObject();
  sub_240A026E8();
  sub_24098E8F0(&qword_26AFD41F0, (void (*)(uint64_t))type metadata accessor for HeadphoneNotificationsFeatureStatusActionHandlerData);
  uint64_t v50 = sub_240A026D8();
  unint64_t v25 = v24;
  sub_24098E894((uint64_t)v16);
  swift_release();
  sub_240A03B68();
  type metadata accessor for HeadphoneNotificationsFeatureStatusActionHandler(0);
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  uint64_t v41 = v17;
  v26(v13, v20, v17);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v13, 0, 1, v17);
  uint64_t v28 = v42;
  uint64_t v27 = v43;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v42, *MEMORY[0x263F454E0], v43);
  uint64_t v29 = (void *)sub_240A02C98();
  sub_24098E8F0(&qword_26AFD4158, (void (*)(uint64_t))type metadata accessor for HeadphoneNotificationsFeatureStatusActionHandler);
  uint64_t v44 = v18;
  unint64_t v38 = v25;
  sub_240A02B88();
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v9 + 8))(v28, v27);
  sub_24098E938((uint64_t)v13, (uint64_t)&qword_26AFD3F60, MEMORY[0x263F437D8], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_24098EA04);
  sub_240A02FE8();
  sub_240A02BC8();
  sub_24098EAC0(0, (unint64_t *)&qword_26AFD4930, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240A06870;
  *(void *)(inited + 32) = sub_240A02FB8();
  *(void *)(inited + 40) = v31;
  sub_2409E38BC(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_240A02BF8();
  uint64_t v33 = v47;
  uint64_t v32 = v48;
  uint64_t v34 = v49;
  (*(void (**)(char *, void, uint64_t))(v48 + 104))(v47, *MEMORY[0x263F43760], v49);
  sub_240A02F98();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
  sub_240A02C08();
  sub_240A02BB8();
  uint64_t v35 = sub_240983A4C();
  sub_240981A48(v35);
  swift_bridgeObjectRelease();
  sub_240A02BD8();
  sub_24098E998(v50, v38);
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v20, v41);
}

uint64_t sub_24098CFC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v47 = a3;
  uint64_t v48 = a2;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24098EA04(0, &qword_26AFD3F58, MEMORY[0x263F43658], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v46 = (char *)v39 - v6;
  sub_24098EA04(0, (unint64_t *)&qword_26AFD3F48, MEMORY[0x263F06EA8], v4);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v45 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v39 - v10;
  uint64_t v12 = sub_240A028A8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v44 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_240A02E88();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v43 = (char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v39 - v19;
  uint64_t v21 = self;
  char v22 = objc_msgSend(v21, sel_isHeadphoneExposureNotificationsEnabled);
  char v23 = objc_msgSend(v21, sel_isHeadphoneExposureNotificationsSupportedOnActiveWatch);
  char v24 = sub_240978C34();
  uint64_t v48 = sub_24098D5A4(a1, v22, v23, v24 & 1);
  uint64_t v25 = sub_240A02F68();
  uint64_t v41 = v26;
  uint64_t v42 = v25;
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v40(v20, a1, v15);
  if ((*(unsigned int (**)(char *, uint64_t))(v16 + 88))(v20, v15) != *MEMORY[0x263F435B8]) {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v15);
  }
  uint64_t v27 = sub_240A02F88();
  uint64_t v29 = v28;
  sub_24098DE1C((uint64_t)v11);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    v39[3] = v29;
    v39[4] = v27;
    uint64_t v31 = v44;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v44, v11, v12);
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    uint64_t v32 = (void *)qword_26AFD6468;
    uint64_t v33 = sub_240A02828();
    v39[1] = v34;
    v39[2] = v33;
    v40(v43, a1, v15);
    id v35 = v32;
    uint64_t v36 = v46;
    sub_240A02ED8();
    uint64_t v37 = sub_240A02EE8();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v36, 0, 1, v37);
    sub_240A02F38();
    sub_240A02F78();
    unint64_t v38 = v45;
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v45, v31, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v38, 0, 1, v12);
    sub_240A02FD8();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v31, v12);
  }
  return result;
}

uint64_t sub_24098D5A4(uint64_t a1, char a2, char a3, char a4)
{
  uint64_t v8 = sub_240A04018();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_240A02E88();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  int v16 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  if (v16 == *MEMORY[0x263F435C8])
  {
    *(void *)&long long v39 = v9;
    sub_24098EAC0(0, (unint64_t *)&qword_26AFD4930, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
    uint64_t v17 = swift_allocObject();
    long long v38 = xmmword_240A06870;
    *(_OWORD *)(v17 + 16) = xmmword_240A06870;
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    *(void *)(v17 + 32) = sub_240A02828();
    *(void *)(v17 + 40) = v18;
    if (a2)
    {
      if ((a4 & 1) != 0 || (a3 & 1) == 0)
      {
        uint64_t v30 = sub_240A02828();
        uint64_t v32 = v31;
        uint64_t v19 = swift_allocObject();
        *(_OWORD *)(v19 + 16) = v38;
        *(void *)(v19 + 32) = v30;
        *(void *)(v19 + 40) = v32;
      }
      else
      {
        uint64_t v19 = sub_24098E1A4();
      }
      goto LABEL_19;
    }
    if (a4)
    {
      uint64_t v19 = sub_24098E530();
LABEL_19:
      uint64_t v41 = v19;
      sub_240991DBC(v17);
      return v41;
    }
    sub_240A03FE8();
    uint64_t v33 = sub_240A03FF8();
    os_log_type_t v34 = sub_240A04EA8();
    if (os_log_type_enabled(v33, v34))
    {
      id v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v41 = v36;
      *(_DWORD *)id v35 = 136446210;
      uint64_t v40 = sub_240981440(0xD000000000000032, 0x8000000240A0A610, &v41);
      sub_240A050D8();
      _os_log_impl(&dword_240976000, v33, v34, "[[%{public}s] Feature is active but no devices return active.", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v36, -1, -1);
      MEMORY[0x2456058A0](v35, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v39 + 8))(v11, v8);
  }
  else if (v16 == *MEMORY[0x263F435D0])
  {
    sub_24098EAC0(0, (unint64_t *)&qword_26AFD4930, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_240A06800;
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    *(void *)(v17 + 32) = sub_240A02828();
    *(void *)(v17 + 40) = v20;
    *(void *)(v17 + 48) = sub_240A02828();
    *(void *)(v17 + 56) = v21;
  }
  else if (v16 == *MEMORY[0x263F435C0])
  {
    uint64_t v22 = sub_240A02F78();
    uint64_t v24 = v23;
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    sub_240A02828();
    uint64_t v25 = MEMORY[0x263F8D310];
    sub_24098EAC0(0, (unint64_t *)&qword_26AFD4930, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
    uint64_t v17 = swift_allocObject();
    long long v39 = xmmword_240A06870;
    *(_OWORD *)(v17 + 16) = xmmword_240A06870;
    sub_24098EA04(0, (unint64_t *)&qword_26AFD4940, (uint64_t (*)(uint64_t))sub_24098EA68, MEMORY[0x263F8E0F8]);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = v39;
    *(void *)(v26 + 56) = v25;
    *(void *)(v26 + 64) = sub_2409800D4();
    *(void *)(v26 + 32) = v22;
    *(void *)(v26 + 40) = v24;
    uint64_t v27 = sub_240A04C28();
    uint64_t v29 = v28;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v17 + 32) = v27;
    *(void *)(v17 + 40) = v29;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return MEMORY[0x263F8EE78];
  }
  return v17;
}

uint64_t sub_24098DCC0()
{
  id v0 = objc_msgSend(self, sel_sharedInstance);
  id v1 = objc_msgSend(v0, sel_getActivePairedDevice);

  if (!v1)
  {
    long long v4 = 0u;
    long long v5 = 0u;
LABEL_11:
    sub_24098E938((uint64_t)&v4, (uint64_t)&qword_268C99520, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_24098EAC0);
    return 0;
  }
  if (objc_msgSend(v1, sel_valueForProperty_, *MEMORY[0x263F57610]))
  {
    sub_240A05128();
    sub_240A03B98();
  }
  else
  {

    memset(v3, 0, sizeof(v3));
  }
  sub_24098EB0C((uint64_t)v3, (uint64_t)&v4);
  if (!*((void *)&v5 + 1)) {
    goto LABEL_11;
  }
  if (swift_dynamicCast()) {
    return *(void *)&v3[0];
  }
  else {
    return 0;
  }
}

uint64_t sub_24098DE1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_240A04018();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  long long v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24098EA04(0, (unint64_t *)&qword_26AFD3F48, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v19 - v7;
  sub_240A02898();
  uint64_t v9 = sub_240A028A8();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_24098E938((uint64_t)v8, (uint64_t)&qword_26AFD3F48, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_24098EA04);
    sub_240A03FE8();
    uint64_t v11 = sub_240A03FF8();
    os_log_type_t v12 = sub_240A04EB8();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v20 = a1;
      uint64_t v15 = v14;
      uint64_t v22 = v14;
      uint64_t v19 = v2;
      *(_DWORD *)uint64_t v13 = 136446210;
      uint64_t v21 = sub_240981440(0xD000000000000032, 0x8000000240A0A610, &v22);
      sub_240A050D8();
      _os_log_impl(&dword_240976000, v11, v12, "[%{public}s]: Invalid URL.", v13, 0xCu);
      uint64_t v16 = 1;
      swift_arrayDestroy();
      uint64_t v17 = v15;
      a1 = v20;
      MEMORY[0x2456058A0](v17, -1, -1);
      MEMORY[0x2456058A0](v13, -1, -1);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v19);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      uint64_t v16 = 1;
    }
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v8, v9);
    uint64_t v16 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, v16, 1, v9);
}

uint64_t sub_24098E1A4()
{
  uint64_t v0 = sub_240A04018();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(self, sel_currentDeviceDisplayName);
  if (v4)
  {
    long long v5 = v4;
    uint64_t v6 = sub_240A04C58();
    uint64_t v8 = v7;

    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    sub_240A02828();
    uint64_t v9 = MEMORY[0x263F8D310];
    sub_24098EAC0(0, (unint64_t *)&qword_26AFD4930, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
    uint64_t v10 = swift_allocObject();
    long long v20 = xmmword_240A06870;
    *(_OWORD *)(v10 + 16) = xmmword_240A06870;
    sub_24098EA04(0, (unint64_t *)&qword_26AFD4940, (uint64_t (*)(uint64_t))sub_24098EA68, MEMORY[0x263F8E0F8]);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = v20;
    *(void *)(v11 + 56) = v9;
    *(void *)(v11 + 64) = sub_2409800D4();
    *(void *)(v11 + 32) = v6;
    *(void *)(v11 + 40) = v8;
    uint64_t v12 = sub_240A04C28();
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v10 + 32) = v12;
    *(void *)(v10 + 40) = v14;
  }
  else
  {
    sub_240A03FE8();
    uint64_t v15 = sub_240A03FF8();
    os_log_type_t v16 = sub_240A04EA8();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v22 = v18;
      *(_DWORD *)uint64_t v17 = 136446210;
      uint64_t v21 = sub_240981440(0xD000000000000032, 0x8000000240A0A610, &v22);
      sub_240A050D8();
      _os_log_impl(&dword_240976000, v15, v16, "[[%{public}s] Could not fetch device display name.", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v18, -1, -1);
      MEMORY[0x2456058A0](v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return MEMORY[0x263F8EE78];
  }
  return v10;
}

uint64_t sub_24098E530()
{
  uint64_t v0 = sub_240A04018();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24098DCC0();
  if (v5)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v5;
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    sub_240A02828();
    uint64_t v8 = MEMORY[0x263F8D310];
    sub_24098EAC0(0, (unint64_t *)&qword_26AFD4930, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
    uint64_t v9 = swift_allocObject();
    long long v19 = xmmword_240A06870;
    *(_OWORD *)(v9 + 16) = xmmword_240A06870;
    sub_24098EA04(0, (unint64_t *)&qword_26AFD4940, (uint64_t (*)(uint64_t))sub_24098EA68, MEMORY[0x263F8E0F8]);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = v19;
    *(void *)(v10 + 56) = v8;
    *(void *)(v10 + 64) = sub_2409800D4();
    *(void *)(v10 + 32) = v6;
    *(void *)(v10 + 40) = v7;
    uint64_t v11 = sub_240A04C28();
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v9 + 32) = v11;
    *(void *)(v9 + 40) = v13;
  }
  else
  {
    sub_240A03FE8();
    uint64_t v14 = sub_240A03FF8();
    os_log_type_t v15 = sub_240A04EA8();
    if (os_log_type_enabled(v14, v15))
    {
      os_log_type_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v21 = v17;
      *(_DWORD *)os_log_type_t v16 = 136446210;
      uint64_t v20 = sub_240981440(0xD000000000000032, 0x8000000240A0A610, &v21);
      sub_240A050D8();
      _os_log_impl(&dword_240976000, v14, v15, "[[%{public}s] Could not fetch watch display name.", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v17, -1, -1);
      MEMORY[0x2456058A0](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return MEMORY[0x263F8EE78];
  }
  return v9;
}

uint64_t sub_24098E894(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HeadphoneNotificationsFeatureStatusActionHandlerData(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24098E8F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24098E938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_24098E998(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_24098E9AC(a1, a2);
  }
  return a1;
}

uint64_t sub_24098E9AC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

void sub_24098EA04(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_24098EA68()
{
  unint64_t result = qword_26AFD4950;
  if (!qword_26AFD4950)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD4950);
  }
  return result;
}

void sub_24098EAC0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_24098EB0C(uint64_t a1, uint64_t a2)
{
  sub_24098EAC0(0, (unint64_t *)&qword_268C99520, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for DeviceConfigurationProvider(uint64_t result)
{
  uint64_t v1 = result;
  if (*(void *)(result + 24)) {
    unint64_t result = sub_240981514(result);
  }
  if (*(void *)(v1 + 64))
  {
    return sub_240981514(v1 + 40);
  }
  return result;
}

uint64_t assignWithCopy for DeviceConfigurationProvider(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24))
  {
    if (v4)
    {
      sub_24098ED1C((uint64_t *)a1, (uint64_t *)a2);
      goto LABEL_8;
    }
    sub_240981514(a1);
  }
  else if (v4)
  {
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
    goto LABEL_8;
  }
  long long v5 = *a2;
  long long v6 = a2[1];
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(_OWORD *)a1 = v5;
  *(_OWORD *)(a1 + 16) = v6;
LABEL_8:
  uint64_t v7 = *((void *)a2 + 8);
  if (!*(void *)(a1 + 64))
  {
    if (v7)
    {
      *(void *)(a1 + 64) = v7;
      *(void *)(a1 + 72) = *((void *)a2 + 9);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, (uint64_t)a2 + 40);
      return a1;
    }
LABEL_14:
    long long v8 = *(long long *)((char *)a2 + 40);
    long long v9 = *(long long *)((char *)a2 + 56);
    *(void *)(a1 + 72) = *((void *)a2 + 9);
    *(_OWORD *)(a1 + 40) = v8;
    *(_OWORD *)(a1 + 56) = v9;
    return a1;
  }
  if (!v7)
  {
    sub_240981514(a1 + 40);
    goto LABEL_14;
  }
  sub_24098ED1C((uint64_t *)(a1 + 40), (uint64_t *)a2 + 5);
  return a1;
}

uint64_t *sub_24098ED1C(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 initializeWithTake for DeviceConfigurationProvider(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for DeviceConfigurationProvider(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    sub_240981514(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (*(void *)(a1 + 64)) {
    sub_240981514(a1 + 40);
  }
  long long v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v5;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceConfigurationProvider(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceConfigurationProvider(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceConfigurationProvider()
{
  return &type metadata for DeviceConfigurationProvider;
}

id sub_24098F0B4()
{
  uint64_t v1 = sub_240A029C8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  int v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(*v0, sel_getActivePairedDevice);
  if (!v5) {
    return 0;
  }
  uint64_t v6 = v5;
  id v7 = (id)HKNRDeviceCapabilityEnvironmentalDosimetry();
  sub_240A029A8();

  uint64_t v8 = (void *)sub_240A02998();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  id v9 = objc_msgSend(v6, sel_supportsCapability_, v8);

  return v9;
}

id sub_24098F1E8()
{
  return sub_24098F1F4((uint64_t)&unk_26AFD63D0);
}

id sub_24098F1F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v11 = 0;
  memset(v10, 0, sizeof(v10));
  uint64_t v9 = 0;
  memset(v8, 0, sizeof(v8));
  if (qword_26AFD4988 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_26AFD63C8;
  uint64_t v6 = (ValueMetadata *)sub_24098F508();
  id v7 = &protocol witness table for HUNoiseSettings;
  v5[0] = v2;
  id v3 = v2;
  sub_24098F548((uint64_t)v10, &qword_26AFD3F78, &qword_26AFD3F70);
  sub_24098F5A4((uint64_t)v5, (uint64_t)v10, &qword_26AFD3F78, &qword_26AFD3F70);
  id result = objc_msgSend(self, sel_sharedInstance);
  if (result)
  {
    uint64_t v6 = &type metadata for NanoRegistryCapabilityProvider;
    id v7 = &off_26F4FA5A8;
    v5[0] = result;
    sub_24098F548((uint64_t)v8, &qword_26AFD3F28, &qword_26AFD3F20);
    sub_24098F5A4((uint64_t)v5, (uint64_t)v8, &qword_26AFD3F28, &qword_26AFD3F20);
    sub_24098F5A4((uint64_t)v8, a1, &qword_26AFD3F28, &qword_26AFD3F20);
    return (id)sub_24098F5A4((uint64_t)v10, a1 + 40, &qword_26AFD3F78, &qword_26AFD3F70);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24098F390()
{
  sub_24098F614(v0, (uint64_t)v4, &qword_26AFD3F28, &qword_26AFD3F20);
  uint64_t v1 = v5;
  if (v5)
  {
    uint64_t v2 = v6;
    sub_24098BDC0(v4, v5);
    LOBYTE(v1) = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
    sub_240981514((uint64_t)v4);
  }
  else
  {
    sub_24098F548((uint64_t)v4, &qword_26AFD3F28, &qword_26AFD3F20);
  }
  return v1 & 1;
}

uint64_t sub_24098F44C()
{
  sub_24098F614(v0 + 40, (uint64_t)v4, &qword_26AFD3F78, &qword_26AFD3F70);
  uint64_t v1 = v5;
  if (v5)
  {
    uint64_t v2 = v6;
    sub_24098BDC0(v4, v5);
    LOBYTE(v1) = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
    sub_240981514((uint64_t)v4);
  }
  else
  {
    sub_24098F548((uint64_t)v4, &qword_26AFD3F78, &qword_26AFD3F70);
  }
  return v1 & 1;
}

unint64_t sub_24098F508()
{
  unint64_t result = qword_26AFD48D0;
  if (!qword_26AFD48D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD48D0);
  }
  return result;
}

uint64_t sub_24098F548(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  sub_240980128(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_24098F5A4(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  sub_240980128(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_24098F614(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  sub_240980128(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

ValueMetadata *type metadata accessor for NanoRegistryCapabilityProvider()
{
  return &type metadata for NanoRegistryCapabilityProvider;
}

uint64_t sub_24098F694(uint64_t a1)
{
  v2[12] = a1;
  v2[13] = v1;
  sub_240994168(0, &qword_268C995D8, MEMORY[0x263F43AC8], MEMORY[0x263F8D8F0]);
  v2[14] = swift_task_alloc();
  type metadata accessor for AudiogramPDFLongitudinalChart.Model(0);
  v2[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24098F780, 0, 0);
}

uint64_t sub_24098F780()
{
  sub_240991BD4(v0[13] + 32, (uint64_t)(v0 + 2));
  uint64_t v1 = v0[5];
  if (v1)
  {
    uint64_t v2 = v0[6];
    sub_24098BDC0(v0 + 2, v0[5]);
    id v3 = (void *)swift_task_alloc();
    v0[16] = v3;
    *id v3 = v0;
    v3[1] = sub_24098F964;
    uint64_t v4 = v1;
    uint64_t v5 = v2;
LABEL_5:
    return MEMORY[0x270F33470](v4, v5);
  }
  sub_240991C64((uint64_t)(v0 + 2));
  v0[19] = 0;
  sub_240991BD4(v0[13] + 72, (uint64_t)(v0 + 7));
  uint64_t v6 = v0[10];
  if (v6)
  {
    uint64_t v7 = v0[11];
    sub_24098BDC0(v0 + 7, v0[10]);
    uint64_t v8 = (void *)swift_task_alloc();
    v0[20] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_24098FBF0;
    uint64_t v4 = v6;
    uint64_t v5 = v7;
    goto LABEL_5;
  }
  sub_240991C64((uint64_t)(v0 + 7));
  v0[23] = 0;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[24] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_24098FDCC;
  uint64_t v10 = v0[15];
  return sub_240994DA4(v10);
}

uint64_t sub_24098F964(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 136) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_240990124;
  }
  else
  {
    *(void *)(v4 + 144) = a1;
    uint64_t v5 = sub_24098FA8C;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24098FA8C()
{
  sub_240981514((uint64_t)(v0 + 2));
  v0[19] = v0[18];
  sub_240991BD4(v0[13] + 72, (uint64_t)(v0 + 7));
  uint64_t v1 = v0[10];
  if (v1)
  {
    uint64_t v2 = v0[11];
    sub_24098BDC0(v0 + 7, v0[10]);
    id v3 = (void *)swift_task_alloc();
    v0[20] = v3;
    *id v3 = v0;
    v3[1] = sub_24098FBF0;
    return MEMORY[0x270F33470](v1, v2);
  }
  else
  {
    sub_240991C64((uint64_t)(v0 + 7));
    v0[23] = 0;
    uint64_t v4 = (void *)swift_task_alloc();
    v0[24] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_24098FDCC;
    uint64_t v5 = v0[15];
    return sub_240994DA4(v5);
  }
}

uint64_t sub_24098FBF0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 168) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_240990198;
  }
  else
  {
    *(void *)(v4 + 176) = a1;
    uint64_t v5 = sub_24098FD20;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24098FD20()
{
  sub_240981514((uint64_t)(v0 + 7));
  v0[23] = v0[22];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[24] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24098FDCC;
  uint64_t v2 = v0[15];
  return sub_240994DA4(v2);
}

uint64_t sub_24098FDCC()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_24099020C;
  }
  else
  {
    uint64_t v2 = sub_24098FEF4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24098FEF4()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[12];
  uint64_t v5 = sub_240A030F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
  sub_2409809C4(0, &qword_268C995F0, (unint64_t *)&qword_268C995F8, MEMORY[0x263F43C48], MEMORY[0x263F8E0F8]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_240A06800;
  uint64_t v7 = sub_240A033A8();
  uint64_t v8 = MEMORY[0x263F43E08];
  *(void *)(v6 + 56) = v7;
  *(void *)(v6 + 64) = v8;
  sub_24097F464((uint64_t *)(v6 + 32));
  sub_240A033B8();
  uint64_t v9 = sub_240A036E8();
  uint64_t v10 = MEMORY[0x263F44130];
  *(void *)(v6 + 96) = v9;
  *(void *)(v6 + 104) = v10;
  sub_24097F464((uint64_t *)(v6 + 72));
  sub_240A036D8();
  sub_240990754(v3, v1);
  swift_bridgeObjectRelease();
  sub_240A03188();
  sub_240991CF4(v3);
  uint64_t v11 = sub_240A03198();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 0, 1, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_240990124()
{
  sub_240981514(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_240990198()
{
  sub_240981514(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24099020C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_240990278()
{
  sub_24099035C(v6);
  uint64_t v0 = sub_240A035A8();
  sub_240981514((uint64_t)v6);
  v6[3] = sub_240A033A8();
  v6[4] = MEMORY[0x263F43E08];
  sub_24097F464(v6);
  sub_240A033B8();
  uint64_t v1 = sub_240A035A8();
  sub_240981514((uint64_t)v6);
  sub_240990554(v6);
  uint64_t v2 = sub_240A035A8();
  sub_240981514((uint64_t)v6);
  sub_24099390C();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_240A06930;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = MEMORY[0x2456031B0]();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_24099035C@<X0>(uint64_t *a1@<X8>)
{
  sub_240994168(0, &qword_268C99620, MEMORY[0x263F44888], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v10 - v3;
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  sub_240A02828();
  sub_240A032A8();
  uint64_t v5 = sub_240A03E58();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = sub_240A031F8();
  MEMORY[0x245602E70](v6);
  sub_240A031E8();
  uint64_t v7 = sub_240A030B8();
  uint64_t v8 = MEMORY[0x263F43AC0];
  a1[3] = v7;
  a1[4] = v8;
  sub_24097F464(a1);
  return sub_240A030A8();
}

uint64_t sub_240990554@<X0>(uint64_t *a1@<X8>)
{
  sub_240994168(0, &qword_268C99620, MEMORY[0x263F44888], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v10 - v3;
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  sub_240A02828();
  sub_240A032A8();
  uint64_t v5 = sub_240A03E58();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = sub_240A031F8();
  MEMORY[0x245602E70](v6);
  sub_240A031E8();
  uint64_t v7 = sub_240A030B8();
  uint64_t v8 = MEMORY[0x263F43AC0];
  a1[3] = v7;
  a1[4] = v8;
  sub_24097F464(a1);
  return sub_240A030A8();
}

uint64_t sub_240990754(uint64_t a1, uint64_t a2)
{
  v8[3] = sub_240A03EE8();
  v8[4] = MEMORY[0x263F448B8];
  sub_24097F464(v8);
  sub_240A03ED8();
  if (a2) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = MEMORY[0x263F8EE78];
  }
  sub_2409809C4(0, &qword_268C995F0, (unint64_t *)&qword_268C995F8, MEMORY[0x263F43C48], MEMORY[0x263F8E0F8]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_240A06800;
  sub_240991D58((uint64_t)v8, v4 + 32);
  uint64_t v5 = sub_240A033A8();
  uint64_t v6 = MEMORY[0x263F43E08];
  *(void *)(v4 + 96) = v5;
  *(void *)(v4 + 104) = v6;
  sub_24097F464((uint64_t *)(v4 + 72));
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_240A033B8();
  sub_240991F14(v3);
  sub_240981514((uint64_t)v8);
  return v4;
}

uint64_t sub_24099088C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for AudiogramPDFLongitudinalChart.Model(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240990A60((uint64_t)v18);
  uint64_t v6 = sub_240A035A8();
  sub_240981514((uint64_t)v18);
  uint64_t v19 = sub_240A033A8();
  unint64_t v20 = MEMORY[0x263F43E08];
  sub_24097F464(v18);
  sub_240A033B8();
  uint64_t v7 = sub_240A035A8();
  sub_240981514((uint64_t)v18);
  sub_240993850(a2, (uint64_t)v5);
  uint64_t v8 = type metadata accessor for AudiogramPDFLongitudinalChart(0);
  swift_allocObject();
  uint64_t v9 = sub_2409D99CC((uint64_t)v5);
  uint64_t v19 = v8;
  unint64_t v10 = sub_2409938B4();
  unint64_t v20 = v10;
  v18[0] = v9;
  uint64_t v11 = sub_24098BDC0(v18, v8);
  v17[3] = v8;
  v17[4] = *(void *)(v10 + 8);
  uint64_t v12 = sub_24097F464(v17);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v12, v11, v8);
  uint64_t v13 = sub_240A035A8();
  sub_240981514((uint64_t)v17);
  sub_240981514((uint64_t)v18);
  sub_24099390C();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_240A06930;
  *(void *)(v14 + 32) = v6;
  *(void *)(v14 + 40) = v7;
  *(void *)(v14 + 48) = v13;
  uint64_t v15 = MEMORY[0x2456031B0]();
  swift_bridgeObjectRelease();
  return v15;
}

double sub_240990A60@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_240A03E78();
  MEMORY[0x270FA5388](v2 - 8);
  sub_240A03E68();
  v7[3] = sub_240A03E98();
  v7[4] = MEMORY[0x263F448A0];
  sub_24097F464(v7);
  sub_240A03E88();
  uint64_t v3 = sub_240A035A8();
  sub_240981514((uint64_t)v7);
  sub_24099390C();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_240A06870;
  *(void *)(v4 + 32) = v3;
  uint64_t v5 = MEMORY[0x2456031B0]();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = &type metadata for PDFVStackWithReducedWidth;
  *(void *)(a1 + 32) = sub_240993998();
  *(void *)a1 = v5;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_240A06940;
  return result;
}

uint64_t sub_240990B98()
{
  uint64_t v0 = sub_240A03398();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_240A03E18();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  sub_240A02828();
  MEMORY[0x245602ED0]();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F43D88], v0);
  sub_240A03E08();
  sub_2409826E4(0, &qword_268C99628, (unint64_t *)&qword_268C99630);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_240A06870;
  uint64_t v9 = MEMORY[0x263F44838];
  *(void *)(v8 + 56) = v4;
  *(void *)(v8 + 64) = v9;
  *(void *)(v8 + 72) = MEMORY[0x263F44830];
  unint64_t v10 = sub_24097F464((uint64_t *)(v8 + 32));
  (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 16))(v10, v7, v4);
  uint64_t v11 = _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v11;
}

uint64_t sub_240990E4C()
{
  uint64_t v0 = sub_240A03398();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_240A031A8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409939F4();
  MEMORY[0x245602ED0]();
  sub_240A032B8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F43D88], v0);
  sub_240A031B8();
  sub_2409826E4(0, &qword_268C99628, (unint64_t *)&qword_268C99630);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_240A06870;
  uint64_t v9 = MEMORY[0x263F43B30];
  *(void *)(v8 + 56) = v4;
  *(void *)(v8 + 64) = v9;
  *(void *)(v8 + 72) = MEMORY[0x263F43B28];
  unint64_t v10 = sub_24097F464((uint64_t *)(v8 + 32));
  (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 16))(v10, v7, v4);
  uint64_t v11 = _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v11;
}

uint64_t sub_240991088(uint64_t a1)
{
  uint64_t v24 = MEMORY[0x263F8EE78];
  sub_240992AC0(0, 0, 0);
  uint64_t v2 = v24;
  uint64_t v3 = *(void *)(a1 + 16);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v21 = v3;
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v6 = *v5;
      uint64_t v22 = *(v5 - 1);
      uint64_t v23 = v2;
      uint64_t v7 = qword_26AFD4A20;
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      if (v7 != -1) {
        swift_once();
      }
      ++v4;
      sub_240A02828();
      sub_2409809C4(0, (unint64_t *)&qword_26AFD4940, (unint64_t *)&qword_26AFD4950, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_240A06800;
      sub_240993C94();
      uint64_t v9 = sub_240A05118();
      uint64_t v11 = v10;
      uint64_t v12 = MEMORY[0x263F8D310];
      *(void *)(v8 + 56) = MEMORY[0x263F8D310];
      unint64_t v13 = sub_2409800D4();
      *(void *)(v8 + 32) = v9;
      *(void *)(v8 + 40) = v11;
      *(void *)(v8 + 96) = v12;
      *(void *)(v8 + 104) = v13;
      *(void *)(v8 + 64) = v13;
      *(void *)(v8 + 72) = v22;
      *(void *)(v8 + 80) = v6;
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v14 = sub_240A04C68();
      uint64_t v16 = v15;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v2 = v23;
      unint64_t v18 = *(void *)(v23 + 16);
      unint64_t v17 = *(void *)(v23 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_240992AC0(v17 > 1, v18 + 1, 1);
        uint64_t v2 = v23;
      }
      v5 += 2;
      *(void *)(v2 + 16) = v18 + 1;
      uint64_t v19 = v2 + 16 * v18;
      *(void *)(v19 + 32) = v14;
      *(void *)(v19 + 40) = v16;
    }
    while (v21 != v4);
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_2409912F8(uint64_t a1, uint64_t a2)
{
  uint64_t v56 = a2;
  uint64_t v63 = sub_240A02A58();
  uint64_t v59 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  uint64_t v3 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_240A02A78();
  uint64_t v61 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  __int16 v58 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_240A02978();
  uint64_t v60 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v62 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240A03398();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_240A02828();
  uint64_t v12 = v11;
  uint64_t v13 = *MEMORY[0x263F43D88];
  uint64_t v14 = *(void (**)(char *, void, uint64_t))(v7 + 104);
  uint64_t v54 = v7 + 104;
  uint64_t v55 = v14;
  uint64_t v53 = v6;
  v14(v9, v13, v6);
  uint64_t v15 = sub_240A03208();
  long long v51 = v9;
  uint64_t v16 = v15;
  uint64_t v52 = sub_240A03E28();
  uint64_t v67 = v52;
  uint64_t v68 = MEMORY[0x263F44850];
  sub_24097F464(v66);
  MEMORY[0x245603A70](v10, v12, v9, v16);
  uint64_t v57 = sub_240A035A8();
  sub_240981514((uint64_t)v66);
  uint64_t v49 = sub_240A02828();
  uint64_t v48 = v17;
  sub_2409809C4(0, (unint64_t *)&qword_26AFD4940, (unint64_t *)&qword_26AFD4950, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
  uint64_t v18 = swift_allocObject();
  long long v50 = xmmword_240A06800;
  *(_OWORD *)(v18 + 16) = xmmword_240A06800;
  v56 += *(int *)(type metadata accessor for AudiogramPDFLongitudinalChart.Model(0) + 20);
  sub_240A02748();
  uint64_t v19 = v58;
  sub_240A02A48();
  unsigned int v47 = *MEMORY[0x263F078A0];
  uint64_t v20 = v59;
  uint64_t v46 = *(void (**)(char *))(v59 + 104);
  uint64_t v21 = v63;
  v46(v3);
  uint64_t v22 = sub_240A02A68();
  uint64_t v59 = *(void *)(v20 + 8);
  ((void (*)(char *, uint64_t))v59)(v3, v21);
  uint64_t v61 = *(void *)(v61 + 8);
  ((void (*)(char *, uint64_t))v61)(v19, v65);
  v66[0] = v22;
  uint64_t v23 = sub_240A05348();
  uint64_t v25 = v24;
  uint64_t v60 = *(void *)(v60 + 8);
  uint64_t v26 = v62;
  ((void (*)(char *, uint64_t))v60)(v62, v64);
  *(void *)(v18 + 56) = MEMORY[0x263F8D310];
  unint64_t v45 = sub_2409800D4();
  *(void *)(v18 + 64) = v45;
  *(void *)(v18 + 32) = v23;
  *(void *)(v18 + 40) = v25;
  uint64_t v27 = v26;
  sub_240A02728();
  sub_240A02A48();
  uint64_t v28 = v63;
  ((void (*)(char *, void, uint64_t))v46)(v3, v47, v63);
  uint64_t v29 = v27;
  uint64_t v30 = sub_240A02A68();
  ((void (*)(char *, uint64_t))v59)(v3, v28);
  ((void (*)(char *, uint64_t))v61)(v19, v65);
  v66[0] = v30;
  uint64_t v31 = sub_240A05348();
  uint64_t v33 = v32;
  ((void (*)(char *, uint64_t))v60)(v29, v64);
  unint64_t v34 = v45;
  *(void *)(v18 + 96) = MEMORY[0x263F8D310];
  *(void *)(v18 + 104) = v34;
  *(void *)(v18 + 72) = v31;
  *(void *)(v18 + 80) = v33;
  uint64_t v35 = sub_240A04C68();
  uint64_t v37 = v36;
  swift_bridgeObjectRelease();
  long long v38 = v51;
  v55(v51, *MEMORY[0x263F43D90], v53);
  uint64_t v39 = sub_240A03248();
  uint64_t v67 = v52;
  uint64_t v68 = MEMORY[0x263F44850];
  sub_24097F464(v66);
  MEMORY[0x245603A70](v35, v37, v38, v39);
  uint64_t v40 = sub_240A035A8();
  sub_240981514((uint64_t)v66);
  sub_24099390C();
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = v50;
  *(void *)(v41 + 32) = v57;
  *(void *)(v41 + 40) = v40;
  uint64_t v42 = MEMORY[0x2456031B0]();
  swift_bridgeObjectRelease();
  return v42;
}

uint64_t sub_2409919D0()
{
  swift_release();

  sub_240991C64(v0 + 32);
  sub_240991C64(v0 + 72);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AudiogramPDFOverviewSectionProvider()
{
  return self;
}

uint64_t sub_240991A44(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_240991AE0;
  return sub_24098F694(a1);
}

uint64_t sub_240991AE0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_240991BD4(uint64_t a1, uint64_t a2)
{
  sub_2409809C4(0, &qword_268C995E0, &qword_268C995E8, MEMORY[0x263F44030], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240991C64(uint64_t a1)
{
  sub_2409809C4(0, &qword_268C995E0, &qword_268C995E8, MEMORY[0x263F44030], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240991CEC()
{
  return sub_240990278();
}

uint64_t sub_240991CF4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AudiogramPDFLongitudinalChart.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240991D50()
{
  return sub_24099088C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_240991D58(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_240991DBC(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_2409925B0(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v8 && v10 < a1 + 32 + 16 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    _OWORD v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_240A052E8();
  __break(1u);
  return result;
}

uint64_t sub_240991F14(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_240980868(isUniquelyReferenced_nonNull_native, v15, 1, v3, &qword_268C995F0, (unint64_t *)&qword_268C995F8, MEMORY[0x263F43C48]);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8) {
    goto LABEL_24;
  }
  sub_240983260(0, (unint64_t *)&qword_268C995F8);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    _OWORD v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_240A052E8();
  __break(1u);
  return result;
}

uint64_t sub_2409920B0(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v23 = v4 + v2;
  }
  else {
    int64_t v23 = v4;
  }
  unint64_t v3 = sub_240992744(isUniquelyReferenced_nonNull_native, v23, 1, v3, &qword_268C99670, MEMORY[0x263F42AE8], MEMORY[0x263F42AE8], MEMORY[0x263F42AE8]);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = (*(void *)(v3 + 24) >> 1) - v9;
  uint64_t v11 = *(void *)(sub_240A02D88() - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = v3 + v13 + v12 * v9;
  unint64_t v15 = a1 + v13;
  uint64_t v16 = v12 * v8;
  unint64_t v17 = v14 + v16;
  unint64_t v18 = v15 + v16;
  if (v15 < v17 && v14 < v18) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v20 = *(void *)(v3 + 16);
  BOOL v21 = __OFADD__(v20, v8);
  uint64_t v22 = v20 + v8;
  if (!v21)
  {
    *(void *)(v3 + 16) = v22;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_240A052E8();
  __break(1u);
  return result;
}

uint64_t sub_2409922A4(unint64_t a1)
{
  if (a1 >> 62)
  {
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v3 = sub_240A05288();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v5 = sub_240A05288();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    unint64_t v4 = MEMORY[0x245604E60](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *uint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_24099343C(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v9 = sub_240A05288();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return sub_240A04D38();
}

void *sub_240992470(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_2409941CC(0, &qword_268C99658, (uint64_t)&type metadata for AudiogramPDFChartData.ChartPoint, MEMORY[0x263F8E0F8]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24099366C(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2409925B0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_2409941CC(0, (unint64_t *)&qword_26AFD4930, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      BOOL v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      BOOL v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24099375C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2409926E0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_240980868(a1, a2, a3, a4, &qword_268C995F0, (unint64_t *)&qword_268C995F8, MEMORY[0x263F43C48]);
}

uint64_t sub_2409926FC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_240992744(a1, a2, a3, a4, &qword_26AFD4908, MEMORY[0x263F45630], MEMORY[0x263F45630], MEMORY[0x263F45630]);
}

uint64_t sub_240992744(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  if (a3)
  {
    unint64_t v12 = *(void *)(a4 + 24);
    uint64_t v13 = v12 >> 1;
    if ((uint64_t)(v12 >> 1) < a2)
    {
      if (v13 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v12 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v13 = a2;
      }
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v13 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v13;
  }
  if (!v15)
  {
    uint64_t v19 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_240994168(0, a5, a6, MEMORY[0x263F8E0F8]);
  uint64_t v16 = *(void *)(a7(0) - 8);
  uint64_t v17 = *(void *)(v16 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = (void *)swift_allocObject();
  size_t v20 = j__malloc_size(v19);
  if (!v17 || (v20 - v18 == 0x8000000000000000 ? (BOOL v21 = v17 == -1) : (BOOL v21 = 0), v21))
  {
LABEL_29:
    uint64_t result = sub_240A05248();
    __break(1u);
    return result;
  }
  v19[2] = v14;
  v19[3] = 2 * ((uint64_t)(v20 - v18) / v17);
LABEL_19:
  uint64_t v22 = *(void *)(a7(0) - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v24 = (unint64_t)v19 + v23;
  if (a1)
  {
    if ((unint64_t)v19 < a4 || v24 >= a4 + v23 + *(void *)(v22 + 72) * v14)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v19 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_240993F44(0, v14, v24, a4, a8);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v19;
}

uint64_t sub_2409929E0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_240992744(a1, a2, a3, a4, &qword_268C99668, MEMORY[0x263F07490], MEMORY[0x263F07490], MEMORY[0x263F07490]);
}

uint64_t sub_240992A28(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_240992744(a1, a2, a3, a4, &qword_268C996A0, MEMORY[0x263F441F0], MEMORY[0x263F441F0], MEMORY[0x263F441F0]);
}

uint64_t sub_240992A70(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_240992ECC(a1, a2, a3, (void *)*v3, &qword_268C99650, (uint64_t (*)(uint64_t))type metadata accessor for AudiogramLongitudinalPDFChartData, (uint64_t (*)(void))type metadata accessor for AudiogramLongitudinalPDFChartData);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_240992AC0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_240992BC0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_240992AE0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_240992D4C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_240992B00(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_240992ECC(a1, a2, a3, (void *)*v3, &qword_268C99660, type metadata accessor for AudiogramPDFAudiogramChart.Model, type metadata accessor for AudiogramPDFAudiogramChart.Model);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_240992B50(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_240993130(a1, a2, a3, (void *)*v3, &qword_268C995F0, (unint64_t *)&qword_268C995F8, MEMORY[0x263F43C48]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_240992B88(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_240993130(a1, a2, a3, (void *)*v3, (unint64_t *)&qword_268C99690, (unint64_t *)&qword_268C99698, MEMORY[0x263F437A0]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_240992BC0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2409941CC(0, (unint64_t *)&qword_26AFD4930, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_240A052E8();
  __break(1u);
  return result;
}

uint64_t sub_240992D4C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2409941CC(0, &qword_268C996A8, MEMORY[0x263F8EF38], MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_240A052E8();
  __break(1u);
  return result;
}

uint64_t sub_240992ECC(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v10 = a4[3];
    int64_t v11 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) < a2)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v11 = a2;
      }
    }
  }
  else
  {
    int64_t v11 = a2;
  }
  uint64_t v12 = a4[2];
  if (v11 <= v12) {
    uint64_t v13 = a4[2];
  }
  else {
    uint64_t v13 = v11;
  }
  if (!v13)
  {
    uint64_t v17 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_240994168(0, a5, a6, MEMORY[0x263F8E0F8]);
  uint64_t v14 = *(void *)(a7(0) - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = (void *)swift_allocObject();
  size_t v18 = j__malloc_size(v17);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v18 - v16 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_34;
  }
  v17[2] = v12;
  v17[3] = 2 * ((uint64_t)(v18 - v16) / v15);
LABEL_19:
  uint64_t v20 = *(void *)(a7(0) - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = (char *)v17 + v21;
  unint64_t v23 = (char *)a4 + v21;
  if (a1)
  {
    if (v17 < a4 || v22 >= &v23[*(void *)(v20 + 72) * v12])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v17 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v24 = *(void *)(v20 + 72) * v12;
  uint64_t v25 = &v22[v24];
  unint64_t v26 = (unint64_t)&v23[v24];
  if (v23 >= v25 || (unint64_t)v22 >= v26)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v17;
  }
LABEL_36:
  uint64_t result = sub_240A052E8();
  __break(1u);
  return result;
}

uint64_t sub_240993130(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, unint64_t *a6, uint64_t a7)
{
  if (a3)
  {
    unint64_t v10 = a4[3];
    int64_t v11 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) < a2)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v11 = a2;
      }
    }
  }
  else
  {
    int64_t v11 = a2;
  }
  uint64_t v12 = a4[2];
  if (v11 <= v12) {
    uint64_t v13 = a4[2];
  }
  else {
    uint64_t v13 = v11;
  }
  if (v13)
  {
    sub_2409809C4(0, a5, a6, a7, MEMORY[0x263F8E0F8]);
    uint64_t v14 = (void *)swift_allocObject();
    size_t v15 = j__malloc_size(v14);
    v14[2] = v12;
    v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
  }
  else
  {
    uint64_t v14 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v16 = (unint64_t)(v14 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v14 != a4 || v16 >= v17 + 40 * v12) {
      memmove(v14 + 4, a4 + 4, 40 * v12);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v17 >= v16 + 40 * v12 || v16 >= v17 + 40 * v12)
  {
    sub_240983260(0, a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_30:
  uint64_t result = sub_240A052E8();
  __break(1u);
  return result;
}

void (*sub_240993304(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *a1)
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_2409933B4(v6, a2, a3);
  return sub_24099336C;
}

void sub_24099336C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_2409933B4(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x245604E50](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return destroy for AudiogramDataManagementComponent;
  }
  __break(1u);
  return result;
}

void destroy for AudiogramDataManagementComponent(id *a1)
{
}

uint64_t sub_24099343C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v7 = sub_240A05288();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v10 = sub_240A05288();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_240994168(0, &qword_268C99680, (uint64_t (*)(uint64_t))sub_2409940A0, MEMORY[0x263F8D488]);
        sub_2409940E0();
        _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_240993304(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_2409940A0();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_240A052E8();
  __break(1u);
  return result;
}

char *sub_24099366C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 40 * a1 + 32);
    size_t v6 = 40 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_240A052E8();
  __break(1u);
  return result;
}

uint64_t sub_24099375C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_240A052E8();
  __break(1u);
  return result;
}

uint64_t sub_240993850(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudiogramPDFLongitudinalChart.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2409938B4()
{
  unint64_t result = qword_268C99600;
  if (!qword_268C99600)
  {
    type metadata accessor for AudiogramPDFLongitudinalChart(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99600);
  }
  return result;
}

void sub_24099390C()
{
  if (!qword_268C99608)
  {
    sub_2409809C4(255, &qword_268C99610, (unint64_t *)&qword_268C995F8, MEMORY[0x263F43C48], MEMORY[0x263F8D488]);
    unint64_t v0 = sub_240A05358();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99608);
    }
  }
}

uint64_t sub_240993990()
{
  return sub_2409912F8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_240993998()
{
  unint64_t result = qword_268C99618;
  if (!qword_268C99618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99618);
  }
  return result;
}

uint64_t sub_2409939EC()
{
  return sub_240990E4C();
}

uint64_t sub_2409939F4()
{
  sub_2409941CC(0, (unint64_t *)&qword_26AFD4930, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240A06930;
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  *(void *)(inited + 32) = sub_240A02828();
  *(void *)(inited + 40) = v1;
  *(void *)(inited + 48) = sub_240A02828();
  *(void *)(inited + 56) = v2;
  *(void *)(inited + 64) = sub_240A02828();
  *(void *)(inited + 72) = v3;
  sub_240991088(inited);
  swift_setDeallocating();
  uint64_t v4 = MEMORY[0x263F8D310];
  swift_arrayDestroy();
  sub_2409941CC(0, &qword_268C99638, v4, MEMORY[0x263F8D488]);
  sub_240993C18();
  uint64_t v5 = sub_240A04BD8();
  swift_bridgeObjectRelease();
  return v5;
}

unint64_t sub_240993C18()
{
  unint64_t result = qword_268C99640;
  if (!qword_268C99640)
  {
    sub_2409941CC(255, &qword_268C99638, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99640);
  }
  return result;
}

unint64_t sub_240993C94()
{
  unint64_t result = qword_268C99648;
  if (!qword_268C99648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99648);
  }
  return result;
}

uint64_t sub_240993CE8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      sub_240983210(0, (unint64_t *)&qword_26AFD4998);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_240A052E8();
  __break(1u);
  return result;
}

uint64_t sub_240993E0C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_2409809C4(0, &qword_26AFD4298, (unint64_t *)&qword_26AFD4578, MEMORY[0x263F456E8], MEMORY[0x263F8D8F0]);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_240A052E8();
  __break(1u);
  return result;
}

uint64_t sub_240993F44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_240A052E8();
  __break(1u);
  return result;
}

unint64_t sub_2409940A0()
{
  unint64_t result = qword_268C99678;
  if (!qword_268C99678)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268C99678);
  }
  return result;
}

unint64_t sub_2409940E0()
{
  unint64_t result = qword_268C99688;
  if (!qword_268C99688)
  {
    sub_240994168(255, &qword_268C99680, (uint64_t (*)(uint64_t))sub_2409940A0, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99688);
  }
  return result;
}

void sub_240994168(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2409941CC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_240994218()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_240A045C8();
  swift_release();

  return swift_release();
}

id sub_240994290()
{
  id result = objc_msgSend(self, sel_sharedInstance);
  qword_26AFD63C8 = (uint64_t)result;
  return result;
}

uint64_t sub_2409942CC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_240A045C8();
  swift_release();
  swift_release();
  return v1;
}

id sub_240994340()
{
  unsigned __int8 v1 = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterRemoveEveryObserver(v1, v0);

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for NoiseAvailability();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_2409944E4()
{
  return type metadata accessor for NoiseAvailability();
}

uint64_t sub_2409944EC()
{
  if (qword_26AFD4990 != -1) {
    swift_once();
  }
  sub_240983BC8((uint64_t)&unk_26AFD63D0, (uint64_t)v6);
  sub_240994C38((uint64_t)v6, (uint64_t)v3);
  uint64_t v0 = v4;
  if (v4)
  {
    uint64_t v1 = v5;
    sub_24098BDC0(v3, v4);
    LOBYTE(v0) = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v1);
    sub_240981514((uint64_t)v3);
  }
  else
  {
    sub_240994CC8((uint64_t)v3);
  }
  sub_240994D50((uint64_t)v6);
  return v0 & 1;
}

void sub_2409945C0()
{
  algn_26AFD3F18[5] = 0;
  *(_WORD *)&algn_26AFD3F18[6] = -5120;
}

void sub_2409945EC(void *a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  sub_24097FDC0(0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  unint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  id v14 = (char *)&v20 - v13;
  if (a2)
  {
    id v15 = a1;
    id v16 = a3;
    id v17 = a5;
    id v18 = a2;
    sub_240978EA8((uint64_t)v14);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24097FC94((uint64_t)v14, (uint64_t)v12);
    id v19 = v18;
    sub_240A045D8();
    sub_24097FC38((uint64_t)v14);
    sub_240979918();
  }
}

void sub_240994858()
{
  sub_24097FCF8(319, &qword_26AFD4860, (uint64_t (*)(uint64_t))sub_24097FDC0, MEMORY[0x263EFDE58]);
  if (v0 <= 0x3F)
  {
    sub_2409829A8();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_24099495C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_240A045C8();
  swift_release();

  return swift_release();
}

uint64_t sub_2409949DC(uint64_t a1, void **a2)
{
  sub_24097FDC0(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v13 - v8;
  sub_24097FC94(a1, (uint64_t)&v13 - v8);
  uint64_t v10 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24097FC94((uint64_t)v9, (uint64_t)v7);
  id v11 = v10;
  sub_240A045D8();
  return sub_24097FC38((uint64_t)v9);
}

uint64_t sub_240994AD8@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_240A045C8();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_240994B58(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return sub_240A045D8();
}

void sub_240994BC8()
{
  if (!qword_26AFD4878)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AFD4878);
    }
  }
}

uint64_t sub_240994C38(uint64_t a1, uint64_t a2)
{
  sub_240980180(0, &qword_26AFD3F28, &qword_26AFD3F20, (uint64_t)&protocol descriptor for NoiseMonitoringCapabilityProviding, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240994CC8(uint64_t a1)
{
  sub_240980180(0, &qword_26AFD3F28, &qword_26AFD3F20, (uint64_t)&protocol descriptor for NoiseMonitoringCapabilityProviding, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240994D50(uint64_t a1)
{
  return a1;
}

uint64_t sub_240994DA4(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for AudiogramLongitudinalPDFChartData();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  uint64_t v4 = sub_240A02758();
  v2[7] = v4;
  v2[8] = *(void *)(v4 - 8);
  v2[9] = swift_task_alloc();
  uint64_t v5 = sub_240A029E8();
  v2[10] = v5;
  v2[11] = *(void *)(v5 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v6 = sub_240A02A78();
  v2[13] = v6;
  v2[14] = *(void *)(v6 - 8);
  v2[15] = swift_task_alloc();
  uint64_t v7 = sub_240A04A08();
  v2[16] = v7;
  v2[17] = *(void *)(v7 - 8);
  v2[18] = swift_task_alloc();
  v2[19] = type metadata accessor for AudiogramPDFProviderRequest(0);
  v2[20] = swift_task_alloc();
  uint64_t v8 = sub_240A02978();
  v2[21] = v8;
  v2[22] = *(void *)(v8 - 8);
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_240995088, 0, 0);
}

uint64_t sub_240995088()
{
  uint64_t v2 = v0[25];
  uint64_t v1 = v0[26];
  uint64_t v3 = v0[21];
  uint64_t v4 = v0[22];
  uint64_t v6 = v0[19];
  uint64_t v5 = (void *)v0[20];
  sub_240A02958();
  sub_2409959D8(v1, v2);
  uint64_t v7 = (char *)v5 + *(int *)(v6 + 20);
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v0[27] = v8;
  v0[28] = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v8(v7, v2, v3);
  uint64_t v9 = *(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56);
  v9(v7, 0, 1, v3);
  uint64_t v10 = (char *)v5 + *(int *)(v6 + 24);
  v8(v10, v1, v3);
  v9(v10, 0, 1, v3);
  *uint64_t v5 = 0;
  id v14 = (uint64_t (*)(uint64_t))((char *)&dword_268C996B8 + dword_268C996B8);
  id v11 = (void *)swift_task_alloc();
  v0[29] = v11;
  *id v11 = v0;
  v11[1] = sub_24099520C;
  uint64_t v12 = v0[20];
  return v14(v12);
}

uint64_t sub_24099520C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 240) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_240995898;
  }
  else
  {
    *(void *)(v4 + 248) = a1;
    uint64_t v5 = sub_240995334;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_240995334()
{
  uint64_t v1 = v0[31];
  uint64_t v3 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[16];
  uint64_t v6 = v0[14];
  uint64_t v54 = v0[13];
  uint64_t v8 = v0[11];
  uint64_t v7 = v0[12];
  uint64_t v9 = v0[10];
  sub_240A04B58();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v2, *MEMORY[0x263F46280], v5);
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v7, *MEMORY[0x263F07740], v9);
  sub_240A029F8();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  unint64_t v10 = MEMORY[0x245604760](v1, v2, v4);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v54);
  uint64_t v11 = v2;
  unint64_t v12 = v10;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v5);
  if (v10 >> 62)
  {
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v13 = sub_240A05288();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_3;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    uint64_t v18 = MEMORY[0x263F8EE78];
    goto LABEL_22;
  }
  uint64_t v13 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v13) {
    goto LABEL_21;
  }
LABEL_3:
  uint64_t v56 = MEMORY[0x263F8EE78];
  uint64_t result = sub_240992A70(0, v13 & ~(v13 >> 63), 0);
  if (v13 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v15 = 0;
  uint64_t v16 = v0[5];
  uint64_t v17 = v0[6];
  unint64_t v53 = v10 & 0xC000000000000001;
  uint64_t v18 = v56;
  unint64_t v55 = v10;
  do
  {
    if (v53) {
      id v19 = (id)MEMORY[0x245604E50](v15, v12);
    }
    else {
      id v19 = *(id *)(v12 + 8 * v15 + 32);
    }
    uint64_t v20 = v19;
    unint64_t v21 = (void *)sub_240A04B38();
    id v22 = objc_msgSend(v21, sel_leftEarMetrics);

    uint64_t v23 = 0;
    if (v22
      && (id v24 = objc_msgSend(v22, sel_averageSensitivity), v22, v24))
    {
      id v25 = objc_msgSend(self, sel_decibelHearingLevelUnit);
      objc_msgSend(v24, sel_doubleValueForUnit_, v25);
      uint64_t v27 = v26;

      char v28 = 0;
    }
    else
    {
      char v28 = 1;
      uint64_t v27 = 0;
    }
    uint64_t v29 = (void *)sub_240A04B38();
    id v30 = objc_msgSend(v29, sel_rightEarMetrics);

    if (v30
      && (id v31 = objc_msgSend(v30, sel_averageSensitivity), v30, v31))
    {
      id v32 = objc_msgSend(self, sel_decibelHearingLevelUnit);
      objc_msgSend(v31, sel_doubleValueForUnit_, v32);
      uint64_t v23 = v33;

      char v34 = 0;
    }
    else
    {
      char v34 = 1;
    }
    uint64_t v35 = (void *)v0[6];
    sub_240A04B48();

    *uint64_t v35 = v27;
    *(unsigned char *)(v17 + 8) = v28;
    *(void *)(v17 + 16) = v23;
    *(unsigned char *)(v17 + 24) = v34;
    unint64_t v37 = *(void *)(v56 + 16);
    unint64_t v36 = *(void *)(v56 + 24);
    if (v37 >= v36 >> 1) {
      sub_240992A70(v36 > 1, v37 + 1, 1);
    }
    uint64_t v38 = v0[6];
    ++v15;
    *(void *)(v56 + 16) = v37 + 1;
    sub_2409971D0(v38, v56+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v37);
    unint64_t v12 = v55;
  }
  while (v13 != v15);
  swift_bridgeObjectRelease();
LABEL_22:
  uint64_t v39 = (void (*)(uint64_t, uint64_t, uint64_t))v0[27];
  uint64_t v40 = v0[26];
  uint64_t v41 = v0[23];
  uint64_t v42 = v0[21];
  uint64_t v43 = v0[22];
  uint64_t v44 = v0[20];
  uint64_t v48 = v0[9];
  uint64_t v49 = v0[25];
  uint64_t v52 = v0[7];
  long long v50 = (char *)v0[2];
  uint64_t v51 = v0[8];
  ((void (*)(void))v39)(v0[24]);
  v39(v41, v40, v42);
  sub_240A02738();
  sub_240997424(v44, type metadata accessor for AudiogramPDFProviderRequest);
  unint64_t v45 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
  v45(v49, v42);
  v45(v40, v42);
  *(void *)long long v50 = v18;
  uint64_t v46 = type metadata accessor for AudiogramPDFLongitudinalChart.Model(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(&v50[*(int *)(v46 + 20)], v48, v52);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unsigned int v47 = (uint64_t (*)(void))v0[1];
  return v47();
}

uint64_t sub_240995898()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[26];
  uint64_t v3 = v0[21];
  uint64_t v4 = v0[22];
  sub_240997424(v0[20], type metadata accessor for AudiogramPDFProviderRequest);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(v1, v3);
  v5(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_2409959D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v42 = a1;
  v34[1] = *v2;
  uint64_t v3 = sub_240A04018();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v38 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_240A02A58();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240A02A78();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409972A4();
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v35 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v34 - v16;
  uint64_t v18 = sub_240A02978();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  unint64_t v21 = (char *)v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A02A48();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F078A0], v5);
  sub_240A02A38();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  id v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v36 = v9;
  v22(v12, v9);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v24 = v23(v17, 1, v18);
  uint64_t v37 = v19;
  if (v24 != 1)
  {
    v34[0] = *(void *)(v19 + 32);
    ((void (*)(char *, char *, uint64_t))v34[0])(v21, v17, v18);
    sub_240A02A48();
    uint64_t v17 = v35;
    sub_240A02A18();
    v22(v12, v36);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    if (v23(v17, 1, v18) != 1) {
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v34[0])(v41, v17, v18);
    }
  }
  uint64_t v25 = v41;
  sub_240997424((uint64_t)v17, (uint64_t (*)(void))sub_2409972A4);
  uint64_t v26 = v38;
  sub_240A03FE8();
  uint64_t v27 = sub_240A03FF8();
  os_log_type_t v28 = sub_240A04EA8();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    uint64_t v44 = v30;
    *(_DWORD *)uint64_t v29 = 136446210;
    uint64_t v31 = sub_240A05478();
    uint64_t v43 = sub_240981440(v31, v32, &v44);
    sub_240A050D8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240976000, v27, v28, "[%{public}s] PDF Configuration cannot determine first date of ten years ago", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v30, -1, -1);
    MEMORY[0x2456058A0](v29, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v40);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v25, v42, v18);
}

uint64_t sub_240995F44(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_240997234(0, &qword_268C996C0, MEMORY[0x263F09010]);
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  sub_240997234(0, &qword_268C996C8, MEMORY[0x263F08FD0]);
  v2[7] = v4;
  v2[8] = *(void *)(v4 - 8);
  v2[9] = swift_task_alloc();
  sub_2409972A4();
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  sub_240997234(0, &qword_268C996D8, MEMORY[0x263F06408]);
  v2[12] = v5;
  v2[13] = *(void *)(v5 - 8);
  v2[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24099614C, 0, 0);
}

uint64_t sub_24099614C()
{
  uint64_t v1 = (void **)v0[2];
  uint64_t v2 = *v1;
  if ((unint64_t)*v1 >= 2)
  {
    sub_2409973C8();
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_240A06A80;
    *(void *)(v13 + 32) = v2;
    uint64_t v35 = v13;
    sub_240A04D38();
    id v14 = v2;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = (uint64_t (*)(uint64_t))v0[1];
    return v15(v35);
  }
  else
  {
    uint64_t v3 = v0[11];
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x245602410](KeyPath, 1);
    uint64_t v5 = type metadata accessor for AudiogramPDFProviderRequest(0);
    sub_24099730C((uint64_t)v1 + *(int *)(v5 + 20), v3);
    uint64_t v6 = sub_240A02978();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v9 = 0;
    if (v8(v3, 1, v6) != 1)
    {
      uint64_t v10 = v0[11];
      uint64_t v9 = (void *)sub_240A02938();
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
    }
    uint64_t v11 = v0[10];
    sub_24099730C(v0[2] + *(int *)(v5 + 24), v11);
    if (v8(v11, 1, v6) == 1)
    {
      unint64_t v12 = 0;
    }
    else
    {
      uint64_t v17 = v0[10];
      unint64_t v12 = (void *)sub_240A02938();
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v17, v6);
    }
    uint64_t v18 = v0[13];
    uint64_t v19 = v0[12];
    uint64_t v20 = v0[8];
    uint64_t v21 = v0[9];
    uint64_t v22 = v0[7];
    uint64_t v33 = v0[14];
    uint64_t v34 = v0[3];
    id v23 = objc_msgSend(self, sel_predicateForSamplesWithStartDate_endDate_options_, v9, v12, 0);
    v0[15] = v23;

    sub_2409824B8(0, &qword_268C996E0);
    id v24 = v23;
    sub_240A04B68();

    sub_240997370(0, &qword_268C996E8, &qword_268C996C8, MEMORY[0x263F08FD0]);
    unint64_t v25 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_240A06870;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v20 + 16))(v26 + v25, v21, v22);
    sub_240997370(0, &qword_268C996F0, &qword_268C996D8, MEMORY[0x263F06408]);
    unint64_t v27 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_240A06870;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v18 + 16))(v28 + v27, v33, v19);
    sub_2409824B8(0, (unint64_t *)&unk_268C99388);
    sub_240A04B78();
    uint64_t v29 = *(void **)(v34 + 16);
    v0[16] = v29;
    id v30 = v29;
    uint64_t v31 = (void *)swift_task_alloc();
    v0[17] = v31;
    void *v31 = v0;
    v31[1] = sub_2409965D0;
    uint64_t v32 = v0[4];
    return MEMORY[0x270EF3200](v30, v32);
  }
}

uint64_t sub_2409965D0(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void **)(*v2 + 128);
  *(void *)(*v2 + 144) = v1;
  swift_task_dealloc();

  if (v1)
  {
    uint64_t v6 = sub_240997484;
  }
  else
  {
    *(void *)(v4 + 152) = a1;
    uint64_t v6 = sub_240997488;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_240996718(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_240997234(0, &qword_268C996C0, MEMORY[0x263F09010]);
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  sub_240997234(0, &qword_268C996C8, MEMORY[0x263F08FD0]);
  v2[7] = v4;
  v2[8] = *(void *)(v4 - 8);
  v2[9] = swift_task_alloc();
  sub_2409972A4();
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  sub_240997234(0, &qword_268C996D8, MEMORY[0x263F06408]);
  v2[12] = v5;
  v2[13] = *(void *)(v5 - 8);
  v2[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_240996920, 0, 0);
}

uint64_t sub_240996920()
{
  uint64_t v1 = (void **)v0[2];
  uint64_t v2 = *v1;
  if ((unint64_t)*v1 >= 2)
  {
    sub_2409973C8();
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_240A06A80;
    *(void *)(v13 + 32) = v2;
    uint64_t v35 = v13;
    sub_240A04D38();
    id v14 = v2;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = (uint64_t (*)(uint64_t))v0[1];
    return v15(v35);
  }
  else
  {
    uint64_t v3 = v0[11];
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x245602410](KeyPath, 1);
    uint64_t v5 = type metadata accessor for AudiogramPDFProviderRequest(0);
    sub_24099730C((uint64_t)v1 + *(int *)(v5 + 20), v3);
    uint64_t v6 = sub_240A02978();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v9 = 0;
    if (v8(v3, 1, v6) != 1)
    {
      uint64_t v10 = v0[11];
      uint64_t v9 = (void *)sub_240A02938();
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
    }
    uint64_t v11 = v0[10];
    sub_24099730C(v0[2] + *(int *)(v5 + 24), v11);
    if (v8(v11, 1, v6) == 1)
    {
      unint64_t v12 = 0;
    }
    else
    {
      uint64_t v17 = v0[10];
      unint64_t v12 = (void *)sub_240A02938();
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v17, v6);
    }
    uint64_t v18 = v0[13];
    uint64_t v19 = v0[12];
    uint64_t v20 = v0[8];
    uint64_t v21 = v0[9];
    uint64_t v22 = v0[7];
    uint64_t v33 = v0[14];
    uint64_t v34 = v0[3];
    id v23 = objc_msgSend(self, sel_predicateForSamplesWithStartDate_endDate_options_, v9, v12, 0);
    v0[15] = v23;

    sub_2409824B8(0, &qword_268C996E0);
    id v24 = v23;
    sub_240A04B68();

    sub_240997370(0, &qword_268C996E8, &qword_268C996C8, MEMORY[0x263F08FD0]);
    unint64_t v25 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_240A06870;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v20 + 16))(v26 + v25, v21, v22);
    sub_240997370(0, &qword_268C996F0, &qword_268C996D8, MEMORY[0x263F06408]);
    unint64_t v27 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_240A06870;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v18 + 16))(v28 + v27, v33, v19);
    sub_2409824B8(0, (unint64_t *)&unk_268C99388);
    sub_240A04B78();
    uint64_t v29 = *(void **)(v34 + 16);
    v0[16] = v29;
    id v30 = v29;
    uint64_t v31 = (void *)swift_task_alloc();
    v0[17] = v31;
    void *v31 = v0;
    v31[1] = sub_240996DA4;
    uint64_t v32 = v0[4];
    return MEMORY[0x270EF3200](v30, v32);
  }
}

uint64_t sub_240996DA4(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void **)(*v2 + 128);
  *(void *)(*v2 + 144) = v1;
  swift_task_dealloc();

  if (v1)
  {
    uint64_t v6 = sub_240997004;
  }
  else
  {
    *(void *)(v4 + 152) = a1;
    uint64_t v6 = sub_240996EEC;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_240996EEC()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v7 = *(void *)(v0 + 48);
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v8 = *(void *)(v0 + 32);
  uint64_t v9 = *(void *)(v0 + 40);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v10 = *(void *)(v0 + 152);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v11(v10);
}

uint64_t sub_240997004()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v7 = *(void *)(v0 + 40);
  uint64_t v8 = *(void *)(v0 + 48);
  uint64_t v9 = *(void *)(v0 + 32);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_240997114()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AudiogramPDFLongitudinalChartDataSource()
{
  return self;
}

void sub_240997170(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_startDate);
  sub_240A02948();
}

uint64_t sub_2409971D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudiogramLongitudinalPDFChartData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_240997234(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_2409824B8(255, (unint64_t *)&unk_268C99388);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_2409972A4()
{
  if (!qword_268C996D0)
  {
    sub_240A02978();
    unint64_t v0 = sub_240A050C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C996D0);
    }
  }
}

char *sub_2409972FC()
{
  return sel_startDate;
}

uint64_t sub_24099730C(uint64_t a1, uint64_t a2)
{
  sub_2409972A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_240997370(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_240997234(255, a3, a4);
    unint64_t v5 = sub_240A05358();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_2409973C8()
{
  if (!qword_26AFD4290)
  {
    unint64_t v0 = sub_240A05358();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD4290);
    }
  }
}

uint64_t sub_240997424(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24099748C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*MEMORY[0x263F81500];
  unint64_t v4 = sub_240997540();
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  id v5 = v3;
  swift_retain();
  unint64_t v10 = v4;
  *(void *)&long long v9 = sub_240A04FD8();
  sub_24098AD10(&v9, v8);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_2409D1C38(v8, v5, isUniquelyReferenced_nonNull_native);

  swift_bridgeObjectRelease();
  return a2;
}

unint64_t sub_240997540()
{
  unint64_t result = qword_268C99700;
  if (!qword_268C99700)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268C99700);
  }
  return result;
}

uint64_t type metadata accessor for HeadphoneNotificationsPromotionTileActionHandler()
{
  uint64_t result = qword_268C99718;
  if (!qword_268C99718) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2409975CC()
{
  uint64_t result = sub_240A04018();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_240997670()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v34 = sub_240A03098();
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v33 = (char *)&v30 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1 = sub_240A032D8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  id v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  unint64_t v7 = (char *)&v30 - v6;
  uint64_t v8 = sub_240A03AD8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  id v30 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v30 - v12;
  sub_240A03C48();
  sub_240A03AA8();
  id v14 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v31 = v13;
  v14(v13, v8);
  sub_24098BDC0(v36, v36[3]);
  sub_240A03A68();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v5, *MEMORY[0x263F43BD8], v1);
  sub_240997F20((unint64_t *)&qword_268C99730, MEMORY[0x263F43C08]);
  char v15 = sub_240A04C08();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v2 + 8);
  v16(v5, v1);
  uint64_t v17 = v1;
  uint64_t v18 = v14;
  v16(v7, v17);
  sub_240981514((uint64_t)v36);
  if ((v15 & 1) == 0)
  {
    type metadata accessor for HeadphoneNotificationsPromotionTileActionHandler();
    sub_240997F20(&qword_268C99738, (void (*)(uint64_t))type metadata accessor for HeadphoneNotificationsPromotionTileActionHandler);
    uint64_t v19 = sub_240A03BD8();
    if (v19)
    {
      uint64_t v20 = (void *)v19;
      uint64_t v21 = v30;
      sub_240A03C48();
      uint64_t v22 = (void *)sub_240A03AB8();
      v14(v21, v8);
      id v23 = objc_msgSend(v22, sel_navigationController);

      if (v23)
      {
        objc_msgSend(v23, sel_pushViewController_animated_, v20, 1);
      }
    }
  }
  uint64_t v24 = (uint64_t)v33;
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v33, *MEMORY[0x263F43A88], v34);
  id v25 = objc_allocWithZone((Class)type metadata accessor for HeadphoneNotificationsSettingsViewController(0));
  uint64_t v26 = sub_2409B1B04(v24);
  sub_240A03A88();
  sub_2409FC6CC();
  id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v26);
  uint64_t v28 = v31;
  sub_240A03C48();
  uint64_t v29 = (void *)sub_240A03AB8();
  v18(v28, v8);
  objc_msgSend(v29, sel_presentViewController_animated_completion_, v27, 1, 0);
}

uint64_t sub_240997B40(uint64_t a1)
{
  uint64_t v3 = sub_240A03AD8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_allocWithZone(v1);
  uint64_t v8 = qword_268C99708;
  uint64_t v9 = qword_268C99318;
  uint64_t v10 = (char *)v7;
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_240A04018();
  uint64_t v12 = sub_240979894(v11, (uint64_t)qword_268C9AA58);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(&v10[v8], v12, v11);
  uint64_t v13 = qword_268C99710;
  sub_240997EE0();
  *(void *)&v10[v13] = MEMORY[0x245604B20]((id)*MEMORY[0x263F09E28]);

  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t v14 = sub_240A03C58();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v14;
}

void sub_240997D08()
{
  uint64_t v1 = v0 + qword_268C99708;
  uint64_t v2 = sub_240A04018();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(void **)(v0 + qword_268C99710);
}

id sub_240997D84()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HeadphoneNotificationsPromotionTileActionHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_240997DBC(uint64_t a1)
{
  uint64_t v2 = a1 + qword_268C99708;
  uint64_t v3 = sub_240A04018();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = *(void **)(a1 + qword_268C99710);
}

uint64_t sub_240997E3C()
{
  return type metadata accessor for HeadphoneNotificationsPromotionTileActionHandler();
}

uint64_t sub_240997E44()
{
  return sub_240997F20(&qword_26AFD4478, MEMORY[0x263F43E20]);
}

uint64_t sub_240997E8C()
{
  return sub_240997F20(&qword_268C99728, (void (*)(uint64_t))type metadata accessor for HeadphoneNotificationsPromotionTileActionHandler);
}

unint64_t sub_240997EE0()
{
  unint64_t result = qword_26AFD48C8;
  if (!qword_26AFD48C8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD48C8);
  }
  return result;
}

uint64_t sub_240997F20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240997F68()
{
  sub_24099A3D0(0, (unint64_t *)&qword_26AFD4290);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240A06A80;
  *(void *)(inited + 32) = objc_msgSend(self, sel_audiogramSampleType);
  sub_240A04D38();
  uint64_t v1 = sub_2409EE7A8(inited);
  uint64_t result = swift_bridgeObjectRelease();
  qword_26AFD6378 = v1;
  return result;
}

uint64_t sub_240998010()
{
  uint64_t v0 = sub_240A02B08();
  sub_2409825B0(v0, qword_26AFD6380);
  uint64_t v1 = sub_240979894(v0, (uint64_t)qword_26AFD6380);
  uint64_t v2 = *MEMORY[0x263F45540];
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t sub_240998098()
{
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  uint64_t result = sub_240A02828();
  qword_268C99740 = result;
  *(void *)algn_268C99748 = v1;
  return result;
}

uint64_t sub_240998144()
{
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  uint64_t result = sub_240A02828();
  qword_268C99750 = result;
  *(void *)algn_268C99758 = v1;
  return result;
}

uint64_t sub_2409981EC()
{
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  uint64_t result = sub_240A02828();
  qword_268C99760 = result;
  *(void *)algn_268C99768 = v1;
  return result;
}

uint64_t sub_240998294@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v64 = sub_240A04018();
  uint64_t v61 = *(void *)(v64 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v64);
  uint64_t v60 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v52 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v52 - v9;
  uint64_t v59 = sub_240A034E8();
  uint64_t v58 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v56 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_240A02C18();
  uint64_t v62 = *(void *)(v12 - 8);
  uint64_t v63 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v57 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_240A03F48();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v52 - v19;
  uint64_t v21 = (void *)sub_240A02B58();
  char v22 = sub_240A02B48();

  if ((v22 & 1) == 0)
  {
    sub_240A03FE8();
    uint64_t v31 = sub_240A03FF8();
    os_log_type_t v32 = sub_240A04EC8();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      v65[0] = v34;
      *(_DWORD *)uint64_t v33 = 136315394;
      uint64_t v66 = sub_240981440(0xD00000000000001ELL, 0x8000000240A0AC60, v65);
      sub_240A050D8();
      *(_WORD *)(v33 + 12) = 2080;
      uint64_t v66 = sub_240981440(0xD000000000000030, 0x8000000240A0AC80, v65);
      sub_240A050D8();
      _os_log_impl(&dword_240976000, v31, v32, "[%s.%s]: Non-primary source", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v34, -1, -1);
      MEMORY[0x2456058A0](v33, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v61 + 8))(v8, v64);
    goto LABEL_19;
  }
  if ((sub_240999E48(a1, MEMORY[0x263F44948], 0xD000000000000015, 0x8000000240A0AD90, "[%{public}s.%{public}s]: Hearing Test prompt tile requirement was not met for feature status %{public}s") & 1) == 0)
  {
    sub_240A03FE8();
    uint64_t v35 = sub_240A03FF8();
    os_log_type_t v36 = sub_240A04EC8();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      v65[0] = v38;
      *(_DWORD *)uint64_t v37 = 136315394;
      uint64_t v66 = sub_240981440(0xD00000000000001ELL, 0x8000000240A0AC60, v65);
      sub_240A050D8();
      *(_WORD *)(v37 + 12) = 2080;
      uint64_t v66 = sub_240981440(0xD000000000000030, 0x8000000240A0AC80, v65);
      sub_240A050D8();
      _os_log_impl(&dword_240976000, v35, v36, "[%s.%s]: Feed item will be marked for deletion given no unavailability reasons", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v38, -1, -1);
      MEMORY[0x2456058A0](v37, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v61 + 8))(v10, v64);
LABEL_19:
    uint64_t v50 = 1;
    uint64_t v49 = v62;
    uint64_t v48 = v63;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56))(a2, v50, 1, v48);
  }
  uint64_t v55 = a2;
  if (qword_26AFD49D0 != -1) {
    swift_once();
  }
  sub_240979894(v64, (uint64_t)qword_26AFD6440);
  id v23 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v23(v20, a1, v14);
  uint64_t v24 = sub_240A03FF8();
  os_log_type_t v25 = sub_240A04EC8();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    unint64_t v53 = (void (*)(char *, char *, uint64_t))v23;
    uint64_t v27 = v26;
    uint64_t v54 = swift_slowAlloc();
    v65[0] = v54;
    *(_DWORD *)uint64_t v27 = 136446722;
    uint64_t v66 = sub_240981440(0xD00000000000001ELL, 0x8000000240A0AC60, v65);
    sub_240A050D8();
    *(_WORD *)(v27 + 12) = 2082;
    uint64_t v66 = sub_240981440(0xD000000000000030, 0x8000000240A0AC80, v65);
    sub_240A050D8();
    *(_WORD *)(v27 + 22) = 2082;
    v53(v18, v20, v14);
    uint64_t v28 = sub_240A04C78();
    uint64_t v66 = sub_240981440(v28, v29, v65);
    sub_240A050D8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    _os_log_impl(&dword_240976000, v24, v25, "[%{public}s.%{public}s]: Creating prompt tile configuration for feature status %{public}s", (uint8_t *)v27, 0x20u);
    uint64_t v30 = v54;
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v30, -1, -1);
    MEMORY[0x2456058A0](v27, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  }

  uint64_t v39 = v57;
  uint64_t v40 = (uint64_t)v56;
  a2 = v55;
  if (qword_26AFD42D8 != -1) {
    swift_once();
  }
  sub_24099A390();
  uint64_t v41 = sub_240A04DC8();
  sub_24099A3D0(0, (unint64_t *)&qword_26AFD4930);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240A06870;
  *(void *)(inited + 32) = sub_240A02CF8();
  *(void *)(inited + 40) = v43;
  uint64_t v44 = sub_2409EE91C(inited, v41);
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_24099A418();
  sub_240998F10(v40);
  if (qword_26AFD4400 != -1) {
    swift_once();
  }
  uint64_t v45 = sub_240A02B08();
  sub_240979894(v45, (uint64_t)qword_26AFD6380);
  uint64_t v46 = (void *)sub_240A02B58();
  sub_24099A4AC(&qword_268C99780, (void (*)(uint64_t))sub_24099A418);
  sub_240A02B78();

  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v40, v59);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_240A02BD8();
  sub_240A02BA8();
  unsigned int v47 = (void (*)(uint64_t *, void))sub_240A02BE8();
  sub_2409EB6BC(v44);
  v47(v65, 0);
  uint64_t v49 = v62;
  uint64_t v48 = v63;
  (*(void (**)(uint64_t, char *, uint64_t))(v62 + 32))(a2, v39, v63);
  uint64_t v50 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56))(a2, v50, 1, v48);
}

uint64_t sub_240998F10@<X0>(uint64_t a1@<X8>)
{
  v32[4] = a1;
  uint64_t v1 = sub_240A034D8();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24099A57C(0, &qword_26AFD3F58, MEMORY[0x263F43658], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v32 - v4;
  uint64_t v6 = sub_240A037F8();
  MEMORY[0x270FA5388](v6);
  sub_24099A57C(0, &qword_268C99788, MEMORY[0x263F43640], v2);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v32 - v8;
  sub_24099A57C(0, &qword_268C99790, MEMORY[0x263F43F20], v2);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v32 - v11;
  uint64_t v13 = sub_240A03508();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = sub_240A02EA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 1, 1, v14);
  uint64_t v15 = (uint64_t (*)(uint64_t))MEMORY[0x263F44328];
  sub_24099A57C(0, &qword_268C99798, MEMORY[0x263F44328], MEMORY[0x263F8E0F8]);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_240A06800;
  sub_240A037E8();
  sub_240A037D8();
  v32[5] = v16;
  sub_24099A4AC(&qword_268C997A0, MEMORY[0x263F44328]);
  sub_24099A57C(0, &qword_268C997A8, v15, MEMORY[0x263F8D488]);
  sub_24099A4F4();
  sub_240A05138();
  sub_240A03758();
  swift_allocObject();
  v32[3] = sub_240A03748();
  if (qword_268C992E8 != -1) {
    swift_once();
  }
  v32[2] = qword_268C99740;
  uint64_t v17 = qword_268C992F0;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  if (v17 != -1) {
    swift_once();
  }
  v32[1] = qword_268C99750;
  uint64_t v18 = qword_268C992F8;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  if (v18 != -1) {
    swift_once();
  }
  v32[0] = qword_268C99760;
  uint64_t v19 = self;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  id v20 = objc_msgSend(v19, sel_configurationWithPointSize_, 45.0);
  uint64_t v21 = self;
  id v22 = v20;
  id v23 = objc_msgSend(v21, sel_tintColor);
  id v24 = objc_msgSend(v19, sel_configurationWithHierarchicalColor_, v23);

  id v25 = objc_msgSend(v22, sel_configurationByApplyingConfiguration_, v24);
  sub_240A02EC8();
  uint64_t v26 = sub_240A02EE8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v5, 0, 1, v26);
  sub_240A034B8();
  sub_24099A57C(0, &qword_268C997B8, MEMORY[0x263F43C08], MEMORY[0x263F8E0F8]);
  uint64_t v27 = sub_240A032D8();
  uint64_t v28 = *(void *)(v27 - 8);
  unint64_t v29 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_240A06870;
  (*(void (**)(unint64_t, void, uint64_t))(v28 + 104))(v30 + v29, *MEMORY[0x263F43BD8], v27);
  return sub_240A034A8();
}

uint64_t sub_240999648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_240A04018();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_240A02EE8();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v46 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_240A03F48();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v43 - v15;
  if (sub_240999E48(a1, MEMORY[0x263F09600], 0xD000000000000018, 0x8000000240A0ADE0, "[%{public}s.%{public}s]: Hearing Test promotion tile requirement was not met for feature status %{public}s"))
  {
    if (qword_26AFD49D0 != -1) {
      swift_once();
    }
    sub_240979894(v4, (uint64_t)qword_26AFD6440);
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v17(v16, a1, v10);
    uint64_t v18 = sub_240A03FF8();
    os_log_type_t v19 = sub_240A04EC8();
    BOOL v20 = os_log_type_enabled(v18, v19);
    uint64_t v45 = a2;
    if (v20)
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v43 = (void (*)(char *, char *, uint64_t))v17;
      uint64_t v22 = v21;
      uint64_t v44 = swift_slowAlloc();
      uint64_t v48 = v44;
      *(_DWORD *)uint64_t v22 = 136446722;
      uint64_t v47 = sub_240981440(0xD00000000000001ELL, 0x8000000240A0AC60, &v48);
      sub_240A050D8();
      *(_WORD *)(v22 + 12) = 2082;
      uint64_t v47 = sub_240981440(0xD000000000000025, 0x8000000240A0ADB0, &v48);
      sub_240A050D8();
      *(_WORD *)(v22 + 22) = 2082;
      v43(v14, v16, v10);
      uint64_t v23 = sub_240A04C78();
      uint64_t v47 = sub_240981440(v23, v24, &v48);
      sub_240A050D8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      _os_log_impl(&dword_240976000, v18, v19, "[%{public}s.%{public}s]: Creating promo tile configuration for feature status %{public}s", (uint8_t *)v22, 0x20u);
      uint64_t v25 = v44;
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v25, -1, -1);
      MEMORY[0x2456058A0](v22, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    }

    os_log_type_t v32 = self;
    id v33 = objc_msgSend(v32, sel_configurationWithPointSize_, 65.0);
    uint64_t v34 = self;
    id v35 = v33;
    id v36 = objc_msgSend(v34, sel_tintColor);
    id v37 = objc_msgSend(v32, sel_configurationWithHierarchicalColor_, v36);

    id v38 = objc_msgSend(v35, sel_configurationByApplyingConfiguration_, v37);
    sub_240A02EC8();
    if (qword_268C992E8 != -1) {
      swift_once();
    }
    uint64_t v39 = qword_268C992F0;
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    if (v39 != -1) {
      swift_once();
    }
    uint64_t v40 = qword_268C992F8;
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    if (v40 != -1) {
      swift_once();
    }
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v41 = v45;
    sub_240A03018();
    uint64_t v42 = sub_240A03028();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v41, 0, 1, v42);
  }
  else
  {
    sub_240A03FE8();
    uint64_t v26 = sub_240A03FF8();
    os_log_type_t v27 = sub_240A04EC8();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v48 = v29;
      *(_DWORD *)uint64_t v28 = 136315394;
      uint64_t v47 = sub_240981440(0xD00000000000001ELL, 0x8000000240A0AC60, &v48);
      sub_240A050D8();
      *(_WORD *)(v28 + 12) = 2080;
      uint64_t v47 = sub_240981440(0xD000000000000025, 0x8000000240A0ADB0, &v48);
      sub_240A050D8();
      _os_log_impl(&dword_240976000, v26, v27, "[%s.%s]: Feed item will be marked for deletion given no unavailability reasons", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v29, -1, -1);
      MEMORY[0x2456058A0](v28, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v30 = sub_240A03028();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(a2, 1, 1, v30);
  }
}

uint64_t sub_240999E48(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, const char *a5)
{
  unint64_t v36 = a4;
  id v37 = a5;
  uint64_t v35 = a3;
  uint64_t v38 = a2;
  uint64_t v39 = sub_240A03F18();
  uint64_t v6 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240A03F48();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v34 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v41 = (char *)&v33 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v33 - v15;
  uint64_t v17 = sub_240A03F08();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  BOOL v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v40 = a1;
  uint64_t v42 = v21;
  v21(v16, a1, v9);
  if ((*(unsigned int (**)(char *, uint64_t))(v10 + 88))(v16, v9) == *MEMORY[0x263F44990])
  {
    (*(void (**)(char *, uint64_t))(v10 + 96))(v16, v9);
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    sub_240A03EF8();
    uint64_t v22 = (void *)sub_240A03F28();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v39);
    unsigned __int8 v23 = objc_msgSend(v22, sel_areAllRequirementsSatisfied);

    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    if (v23) {
      return 1;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
  }
  if (qword_26AFD49D0 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_240A04018();
  sub_240979894(v25, (uint64_t)qword_26AFD6440);
  uint64_t v26 = v41;
  v42(v41, v40, v9);
  os_log_type_t v27 = sub_240A03FF8();
  os_log_type_t v28 = sub_240A04EC8();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    uint64_t v44 = v40;
    *(_DWORD *)uint64_t v29 = 136446722;
    uint64_t v43 = sub_240981440(0xD00000000000001ELL, 0x8000000240A0AC60, &v44);
    sub_240A050D8();
    *(_WORD *)(v29 + 12) = 2082;
    uint64_t v43 = sub_240981440(v35, v36, &v44);
    sub_240A050D8();
    *(_WORD *)(v29 + 22) = 2082;
    v42(v34, (uint64_t)v26, v9);
    uint64_t v30 = sub_240A04C78();
    uint64_t v43 = sub_240981440(v30, v31, &v44);
    sub_240A050D8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v26, v9);
    _os_log_impl(&dword_240976000, v27, v28, v37, (uint8_t *)v29, 0x20u);
    uint64_t v32 = v40;
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v32, -1, -1);
    MEMORY[0x2456058A0](v29, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v26, v9);
  }

  return 0;
}

unint64_t sub_24099A390()
{
  unint64_t result = qword_26AFD4898;
  if (!qword_26AFD4898)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD4898);
  }
  return result;
}

void sub_24099A3D0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_240A05358();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_24099A418()
{
  if (!qword_268C99770)
  {
    type metadata accessor for HearingTestPromptTileActionHandler();
    sub_24099A4AC(&qword_268C99778, (void (*)(uint64_t))type metadata accessor for HearingTestPromptTileActionHandler);
    unint64_t v0 = sub_240A03538();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99770);
    }
  }
}

uint64_t sub_24099A4AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24099A4F4()
{
  unint64_t result = qword_268C997B0;
  if (!qword_268C997B0)
  {
    sub_24099A57C(255, &qword_268C997A8, MEMORY[0x263F44328], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C997B0);
  }
  return result;
}

void sub_24099A57C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_24099A5E0@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  sub_24099BF5C();
  uint64_t v36 = *(void *)(v6 - 8);
  uint64_t v37 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v35 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_240A02CA8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24099AA60(a1, a2);
  if (qword_26AFD49D0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_240A04018();
  sub_240979894(v13, (uint64_t)qword_26AFD6440);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  swift_bridgeObjectRetain_n();
  uint64_t v14 = sub_240A03FF8();
  os_log_type_t v15 = sub_240A04EC8();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v34 = a3;
    uint64_t v17 = v16;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v39 = v33;
    *(_DWORD *)uint64_t v17 = 136446722;
    uint64_t v18 = sub_240A05478();
    uint64_t v38 = sub_240981440(v18, v19, &v39);
    sub_240A050D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2082;
    uint64_t v38 = sub_240A02C98();
    uint64_t v20 = sub_240A04C88();
    uint64_t v38 = sub_240981440(v20, v21, &v39);
    sub_240A050D8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    *(_WORD *)(v17 + 22) = 2082;
    uint64_t v22 = _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v23 = MEMORY[0x245604960](v22, MEMORY[0x263F45828]);
    unint64_t v25 = v24;
    swift_bridgeObjectRelease();
    uint64_t v38 = sub_240981440(v23, v25, &v39);
    sub_240A050D8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240976000, v14, v15, "[%{public}s] Returning changes for profile %{public}s: %{public}s", (uint8_t *)v17, 0x20u);
    uint64_t v26 = v33;
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v26, -1, -1);
    uint64_t v27 = v17;
    a3 = v34;
    MEMORY[0x2456058A0](v27, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

    swift_bridgeObjectRelease_n();
  }
  uint64_t v39 = v12;
  sub_24099C130(0, (unint64_t *)&qword_26AFD4880, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
  os_log_type_t v28 = v35;
  sub_240A04558();
  sub_24097C7AC((unint64_t *)&qword_26AFD4800, (void (*)(uint64_t))sub_24099BF5C);
  uint64_t v29 = v37;
  uint64_t v30 = sub_240A04628();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v28, v29);
  *a3 = v30;
  return result;
}

uint64_t sub_24099AA60(uint64_t a1, int a2)
{
  int v61 = a2;
  uint64_t v4 = sub_240A02C18();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v58 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v57 = (char *)&v56 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v56 - v10;
  sub_24099BFD8(0);
  uint64_t v64 = v12;
  uint64_t v60 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  os_log_type_t v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v62 = (uint64_t)&v56 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v66 = (uint64_t)&v56 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v56 - v21;
  MEMORY[0x270FA5388](v20);
  unint64_t v24 = (char *)&v56 - v23;
  uint64_t v25 = sub_24097C7AC(&qword_26AFD46A0, (void (*)(uint64_t))type metadata accessor for HeadphoneNotificationsPromotionGenerator);
  uint64_t v65 = v2;
  sub_24099BC50(v2, v25);
  uint64_t v56 = a1;
  sub_240A02C88();
  sub_24098BDC0(v69, v69[3]);
  sub_240A02C28();
  swift_bridgeObjectRelease();
  sub_24099C00C((uint64_t)v24, (uint64_t)v22);
  uint64_t v59 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  int v26 = v59(v22, 1, v4);
  uint64_t v67 = v5;
  if (v26 == 1)
  {
    sub_24099C070((uint64_t)v24);
    sub_240981514((uint64_t)v69);
    uint64_t v63 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v27(v11, v22, v4);
    sub_24097E908(0, &qword_26AFD4908, MEMORY[0x263F45630], MEMORY[0x263F8E0F8]);
    unint64_t v28 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_240A06870;
    uint64_t v63 = v29;
    v27((char *)(v29 + v28), v11, v4);
    sub_24099C070((uint64_t)v24);
    sub_240981514((uint64_t)v69);
  }
  uint64_t v30 = v66;
  if (v61)
  {
    sub_24099B458(v56, v66);
    uint64_t v31 = 0;
  }
  else
  {
    uint64_t v31 = 1;
  }
  uint64_t v32 = v67;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56))(v30, v31, 1, v4);
  sub_24097E908(0, &qword_26AFD4910, (uint64_t (*)(uint64_t))sub_24099BFD8, MEMORY[0x263F8E0F8]);
  unint64_t v33 = (*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_240A06870;
  uint64_t v35 = v34 + v33;
  sub_24099C00C(v30, v35);
  uint64_t v36 = v62;
  sub_24099C00C(v35, v62);
  sub_24099C0CC(v36, (uint64_t)v15);
  if (v59(v15, 1, v4) == 1)
  {
    sub_24099C070((uint64_t)v15);
  }
  else
  {
    uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
    uint64_t v38 = v57;
    v37(v57, v15, v4);
    uint64_t v39 = v58;
    v37(v58, v38, v4);
    unint64_t v40 = MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v40 = sub_2409926FC(0, *(void *)(v40 + 16) + 1, 1, v40);
    }
    unint64_t v42 = *(void *)(v40 + 16);
    unint64_t v41 = *(void *)(v40 + 24);
    if (v42 >= v41 >> 1) {
      unint64_t v40 = sub_2409926FC(v41 > 1, v42 + 1, 1, v40);
    }
    *(void *)(v40 + 16) = v42 + 1;
    v37((char *)(v40+ ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80))+ *(void *)(v67 + 72) * v42), v39, v4);
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v43 = sub_240A04D48();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_26AFD49D0 != -1) {
    swift_once();
  }
  uint64_t v44 = sub_240A04018();
  sub_240979894(v44, (uint64_t)qword_26AFD6440);
  swift_bridgeObjectRetain_n();
  uint64_t v45 = sub_240A03FF8();
  os_log_type_t v46 = sub_240A04EC8();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v47 = swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    v69[0] = v48;
    *(_DWORD *)uint64_t v47 = 136446466;
    uint64_t v49 = sub_240A05478();
    uint64_t v68 = sub_240981440(v49, v50, v69);
    sub_240A050D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 12) = 2082;
    uint64_t v51 = _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v52 = MEMORY[0x245604960](v51, MEMORY[0x263F45828]);
    unint64_t v54 = v53;
    swift_bridgeObjectRelease();
    uint64_t v68 = sub_240981440(v52, v54, v69);
    sub_240A050D8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240976000, v45, v46, "[%{public}s] Computed needed PluginFeedItemChanges: %{public}s", (uint8_t *)v47, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v48, -1, -1);
    MEMORY[0x2456058A0](v47, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_24099C070(v30);
  return v43;
}

uint64_t sub_24099B458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v33 = a2;
  uint64_t v30 = sub_240A02D08();
  uint64_t v28 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  int v26 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_240A02D18();
  uint64_t v27 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v25 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240A02EE8();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = sub_240A03028();
  uint64_t v31 = *(void *)(v8 - 8);
  uint64_t v32 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v34 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24097C7AC(&qword_26AFD46A0, (void (*)(uint64_t))type metadata accessor for HeadphoneNotificationsPromotionGenerator);
  uint64_t v23 = v3;
  uint64_t v24 = a1;
  uint64_t v11 = sub_24099BC50(v3, v10);
  v22[1] = v12;
  v22[2] = v11;
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  id v13 = (id)qword_26AFD6468;
  sub_240A02ED8();
  sub_240A02828();
  sub_240A02828();
  sub_240A02828();
  sub_240A03018();
  sub_24099BC50(v23, v10);
  uint64_t v14 = (void *)sub_240A02B58();
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_240A05288()) {
    sub_2409F5F70(MEMORY[0x263F8EE78]);
  }
  type metadata accessor for HeadphoneNotificationsPromotionTileActionHandler();
  sub_24097C7AC(&qword_268C99738, (void (*)(uint64_t))type metadata accessor for HeadphoneNotificationsPromotionTileActionHandler);
  os_log_type_t v15 = v34;
  sub_240A02B68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v26, *MEMORY[0x263F45700], v30);
  uint64_t v16 = v25;
  sub_240A02D28();
  uint64_t v17 = v29;
  sub_240A02B98();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v17);
  sub_24099C130(0, (unint64_t *)&qword_26AFD4930, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240A06870;
  *(void *)(inited + 32) = sub_240A02CE8();
  *(void *)(inited + 40) = v19;
  sub_2409E38BC(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_240A02BF8();
  uint64_t v20 = sub_240983A4C();
  sub_240981A48(v20);
  swift_bridgeObjectRelease();
  sub_240A02BD8();
  sub_240A02BB8();
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v15, v32);
}

uint64_t sub_24099BA70()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16HearingAppPlugin40HeadphoneNotificationsPromotionGenerator_domain;
  uint64_t v2 = sub_240A02C78();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_24099BB20()
{
  return type metadata accessor for HeadphoneNotificationsPromotionGenerator();
}

uint64_t sub_24099BB28()
{
  uint64_t result = sub_240A02C78();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_24099BBC4()
{
  return swift_retain();
}

uint64_t sub_24099BBD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC16HearingAppPlugin40HeadphoneNotificationsPromotionGenerator_domain;
  uint64_t v4 = sub_240A02C78();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_24099BC50(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_240A029C8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&MetatypeMetadata - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
  uint64_t v15 = a2;
  sub_24099C19C(0, &qword_26AFD4590, (void (*)(uint64_t))sub_24099C17C);
  uint64_t v7 = sub_240A04C78();
  uint64_t v9 = v8;
  uint64_t v10 = (void *)sub_240A02C98();
  uint64_t v11 = (void *)sub_240A02B18();

  if (v11)
  {
    id v12 = objc_msgSend(v11, sel_identifier);

    sub_240A029A8();
    sub_240A02988();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  uint64_t MetatypeMetadata = v7;
  uint64_t v15 = v9;
  sub_240A04CA8();
  sub_240A04CA8();
  sub_240A04CA8();
  sub_240A04CA8();
  swift_bridgeObjectRelease();
  return MetatypeMetadata;
}

uint64_t sub_24099BE24()
{
  uint64_t v1 = sub_240A02CA8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((v4 + *(void *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_24099BEBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_240A02CA8() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  int v5 = *(unsigned __int8 *)(v1 + v4 + *(void *)(v3 + 64));

  return sub_24099A5E0(v1 + v4, v5, a1);
}

void sub_24099BF5C()
{
  if (!qword_26AFD4808)
  {
    sub_24099C130(255, (unint64_t *)&qword_26AFD4880, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
    unint64_t v0 = sub_240A04548();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD4808);
    }
  }
}

void sub_24099BFD8(uint64_t a1)
{
}

uint64_t sub_24099C00C(uint64_t a1, uint64_t a2)
{
  sub_24099BFD8(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24099C070(uint64_t a1)
{
  sub_24099BFD8(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24099C0CC(uint64_t a1, uint64_t a2)
{
  sub_24099BFD8(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_24099C130(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_24099C17C(uint64_t a1)
{
  return sub_24099C19C(a1, &qword_26AFD4588, (void (*)(uint64_t))sub_240983FAC);
}

uint64_t sub_24099C19C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a2;
  if (!*a2)
  {
    a3(255);
    uint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ArticleIdentifiers(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ArticleIdentifiers(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24099C338);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

unsigned char *sub_24099C360(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ArticleIdentifiers()
{
  return &type metadata for ArticleIdentifiers;
}

unint64_t sub_24099C37C()
{
  unint64_t result = qword_268C997C0;
  if (!qword_268C997C0)
  {
    sub_24099C3D4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C997C0);
  }
  return result;
}

void sub_24099C3D4()
{
  if (!qword_268C997C8)
  {
    unint64_t v0 = sub_240A04D78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C997C8);
    }
  }
}

unint64_t sub_24099C42C(char a1)
{
  unint64_t result = 0xD000000000000028;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000024;
      break;
    case 2:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000026;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24099C4C4(char *a1, char *a2)
{
  return sub_2409A9858(*a1, *a2);
}

uint64_t sub_24099C4D0()
{
  return sub_24099C4D8();
}

uint64_t sub_24099C4D8()
{
  return sub_240A05418();
}

uint64_t sub_24099C5C0()
{
  return sub_240A05418();
}

uint64_t sub_24099C62C()
{
  return sub_24099C634();
}

uint64_t sub_24099C634()
{
  sub_240A04C98();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24099C700()
{
  sub_240A04C98();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24099C754()
{
  return sub_24099C7C4();
}

uint64_t sub_24099C75C()
{
  return sub_240A05418();
}

uint64_t sub_24099C7C4()
{
  return sub_240A05418();
}

uint64_t sub_24099C8A8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24099CF0C();
  *a1 = result;
  return result;
}

unint64_t sub_24099C8D8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_24099C42C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_24099C904(void *a1@<X8>)
{
  *a1 = &unk_26F4F9C40;
}

unint64_t sub_24099C918()
{
  unint64_t result = qword_268C997D0;
  if (!qword_268C997D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C997D0);
  }
  return result;
}

uint64_t sub_24099C96C(char a1)
{
  switch(a1)
  {
    case 1:
      id v13 = &type metadata for AudiogramArticleDataProvider;
      uint64_t v14 = (_UNKNOWN **)sub_240983AA4();
      unint64_t v2 = sub_240983A50();
      break;
    case 2:
      id v13 = &type metadata for HeadphoneListeningArticleDataProvider;
      uint64_t v14 = (_UNKNOWN **)sub_240983684();
      unint64_t v2 = sub_240983630();
      break;
    case 3:
      id v13 = &type metadata for HearingAidsArticleDataProvider;
      uint64_t v14 = (_UNKNOWN **)sub_240983F30();
      unint64_t v2 = sub_240983EDC();
      break;
    default:
      id v13 = &type metadata for HearingHealthArticleDataProvider;
      uint64_t v14 = (_UNKNOWN **)sub_240983E88();
      unint64_t v2 = sub_240983E34();
      break;
  }
  uint64_t v15 = (_UNKNOWN **)v2;
  sub_24099CF58();
  sub_24099CFB8();
  if (swift_dynamicCast())
  {
    sub_240980754(v10, (uint64_t)v16);
    uint64_t v3 = v17;
    uint64_t v4 = v18;
    sub_24098BDC0(v16, v17);
    if (qword_26AFD4990 != -1) {
      swift_once();
    }
    id v13 = &type metadata for DeviceConfigurationProvider;
    uint64_t v14 = &off_26F4FA570;
    uint64_t v15 = &off_26F4FA560;
    v12[0] = swift_allocObject();
    sub_240983BC8((uint64_t)&unk_26AFD63D0, v12[0] + 16);
    uint64_t v5 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v4 + 8))(v12, v3, v4);
    sub_240981514((uint64_t)v12);
    unsigned int v6 = v16;
  }
  else
  {
    uint64_t v11 = 0;
    memset(v10, 0, sizeof(v10));
    sub_24099D010((uint64_t)v10);
    switch(a1)
    {
      case 0:
        BOOL v7 = &type metadata for HearingHealthArticleDataProvider;
        id v13 = &type metadata for HearingHealthArticleDataProvider;
        uint64_t v14 = (_UNKNOWN **)sub_240983E88();
        unint64_t v8 = sub_240983E34();
        break;
      case 1:
        BOOL v7 = &type metadata for AudiogramArticleDataProvider;
        id v13 = &type metadata for AudiogramArticleDataProvider;
        uint64_t v14 = (_UNKNOWN **)sub_240983AA4();
        unint64_t v8 = sub_240983A50();
        break;
      case 2:
        BOOL v7 = &type metadata for HeadphoneListeningArticleDataProvider;
        id v13 = &type metadata for HeadphoneListeningArticleDataProvider;
        uint64_t v14 = (_UNKNOWN **)sub_240983684();
        unint64_t v8 = sub_240983630();
        break;
      case 3:
        BOOL v7 = &type metadata for HearingAidsArticleDataProvider;
        id v13 = &type metadata for HearingAidsArticleDataProvider;
        uint64_t v14 = (_UNKNOWN **)sub_240983F30();
        unint64_t v8 = sub_240983EDC();
        break;
      default:
        JUMPOUT(0);
    }
    uint64_t v15 = (_UNKNOWN **)v8;
    sub_24098BDC0(v12, (uint64_t)v7);
    uint64_t v5 = sub_240A02DB8();
    unsigned int v6 = v12;
  }
  sub_240981514((uint64_t)v6);
  return v5;
}

double sub_24099CC34@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  switch(sub_24099CF0C())
  {
    case 1u:
      *(void *)(a3 + 24) = &type metadata for AudiogramArticleDataProvider;
      *(void *)(a3 + 32) = sub_240983AA4();
      *(void *)(a3 + 40) = sub_240983A50();
      break;
    case 2u:
      *(void *)(a3 + 24) = &type metadata for HeadphoneListeningArticleDataProvider;
      *(void *)(a3 + 32) = sub_240983684();
      *(void *)(a3 + 40) = sub_240983630();
      break;
    case 3u:
      *(void *)(a3 + 24) = &type metadata for HearingAidsArticleDataProvider;
      *(void *)(a3 + 32) = sub_240983F30();
      *(void *)(a3 + 40) = sub_240983EDC();
      break;
    case 4u:
      if (qword_268C99318 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_240A04018();
      sub_240979894(v7, (uint64_t)qword_268C9AA58);
      swift_bridgeObjectRetain_n();
      unint64_t v8 = sub_240A03FF8();
      os_log_type_t v9 = sub_240A04EA8();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = swift_slowAlloc();
        uint64_t v11 = swift_slowAlloc();
        uint64_t v12 = v11;
        *(_DWORD *)uint64_t v10 = 136446466;
        sub_240981440(0xD000000000000022, 0x8000000240A06D20, &v12);
        sub_240A050D8();
        *(_WORD *)(v10 + 12) = 2082;
        _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        sub_240981440(a1, a2, &v12);
        sub_240A050D8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_240976000, v8, v9, "[%{public}s] Article identifier %{public}s could not be found", (uint8_t *)v10, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2456058A0](v11, -1, -1);
        MEMORY[0x2456058A0](v10, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      double result = 0.0;
      *(_OWORD *)(a3 + 16) = 0u;
      *(_OWORD *)(a3 + 32) = 0u;
      *(_OWORD *)a3 = 0u;
      break;
    default:
      *(void *)(a3 + 24) = &type metadata for HearingHealthArticleDataProvider;
      *(void *)(a3 + 32) = sub_240983E88();
      *(void *)(a3 + 40) = sub_240983E34();
      break;
  }
  return result;
}

uint64_t sub_24099CF0C()
{
  unint64_t v0 = sub_240A05308();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_24099CF58()
{
  unint64_t result = qword_26AFD4998;
  if (!qword_26AFD4998)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD4998);
  }
  return result;
}

unint64_t sub_24099CFB8()
{
  unint64_t result = qword_268C997D8;
  if (!qword_268C997D8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C997D8);
  }
  return result;
}

uint64_t sub_24099D010(uint64_t a1)
{
  sub_24099D06C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_24099D06C()
{
  if (!qword_268C997E0)
  {
    sub_24099CFB8();
    unint64_t v0 = sub_240A050C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C997E0);
    }
  }
}

uint64_t sub_24099D0C4()
{
  if (*(void *)(v0 + 40)) {
    sub_240981514(v0 + 16);
  }
  if (*(void *)(v0 + 80)) {
    sub_240981514(v0 + 56);
  }

  return MEMORY[0x270FA0238](v0, 96, 7);
}

ValueMetadata *type metadata accessor for EducationArticleTileDataController()
{
  return &type metadata for EducationArticleTileDataController;
}

uint64_t sub_24099D124(uint64_t a1, unint64_t a2)
{
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  char v4 = sub_24099CF0C();
  if (v4 != 4) {
    return sub_24099C96C(v4);
  }
  if (qword_268C99318 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_240A04018();
  sub_240979894(v5, (uint64_t)qword_268C9AA58);
  swift_bridgeObjectRetain_n();
  unsigned int v6 = sub_240A03FF8();
  os_log_type_t v7 = sub_240A04EA8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v11 = v9;
    *(_DWORD *)uint64_t v8 = 136446466;
    sub_240981440(0xD000000000000022, 0x8000000240A06D20, &v11);
    sub_240A050D8();
    *(_WORD *)(v8 + 12) = 2082;
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_240981440(a1, a2, &v11);
    sub_240A050D8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_240976000, v6, v7, "[%{public}s] Article identifier %{public}s could not be found", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v9, -1, -1);
    MEMORY[0x2456058A0](v8, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return 0;
}

void *sub_24099D338()
{
  uint64_t v1 = *(void **)(v0
                  + OBJC_IVAR____TtC16HearingAppPlugin27HearingAppPluginAppDelegate____lazy_storage___articleIdentifiersByUrl);
  if (!v1)
  {
    uint64_t v21 = OBJC_IVAR____TtC16HearingAppPlugin27HearingAppPluginAppDelegate____lazy_storage___articleIdentifiersByUrl;
    uint64_t v1 = (void *)sub_24098A5B8(MEMORY[0x263F8EE78]);
    uint64_t v2 = 0;
    while (1)
    {
      uint64_t v3 = byte_26F4F9C68[v2++ + 32];
      uint64_t v4 = 0xD000000000000017;
      unint64_t v5 = 0x8000000240A0B020;
      switch(v3)
      {
        case 1:
          uint64_t v4 = 0xD000000000000018;
          unsigned int v6 = "SafeHeadphoneListening";
          goto LABEL_10;
        case 2:
          unint64_t v5 = 0x8000000240A0AFE0;
          uint64_t v4 = 0xD000000000000016;
          break;
        case 3:
          uint64_t v4 = 0xD000000000000022;
          unsigned int v6 = "$_articleIdentifiersByUrl";
LABEL_10:
          unint64_t v5 = (unint64_t)v6 | 0x8000000000000000;
          break;
        default:
          break;
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v9 = sub_24097B164(v4, v5);
      uint64_t v10 = v1[2];
      BOOL v11 = (v8 & 1) == 0;
      uint64_t v12 = v10 + v11;
      if (__OFADD__(v10, v11))
      {
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        sub_240A05398();
        __break(1u);
        JUMPOUT(0x24099D5A8);
      }
      char v13 = v8;
      if (v1[3] >= v12)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if ((v8 & 1) == 0) {
            goto LABEL_18;
          }
        }
        else
        {
          sub_2409D1FA8();
          if ((v13 & 1) == 0) {
            goto LABEL_18;
          }
        }
      }
      else
      {
        sub_2409D1930(v12, isUniquelyReferenced_nonNull_native);
        unint64_t v14 = sub_24097B164(v4, v5);
        if ((v13 & 1) != (v15 & 1)) {
          goto LABEL_26;
        }
        unint64_t v9 = v14;
        if ((v13 & 1) == 0)
        {
LABEL_18:
          v1[(v9 >> 6) + 8] |= 1 << v9;
          uint64_t v16 = (uint64_t *)(v1[6] + 16 * v9);
          uint64_t *v16 = v4;
          v16[1] = v5;
          *(unsigned char *)(v1[7] + v9) = v3;
          uint64_t v17 = v1[2];
          BOOL v18 = __OFADD__(v17, 1);
          uint64_t v19 = v17 + 1;
          if (v18) {
            goto LABEL_25;
          }
          _OWORD v1[2] = v19;
          _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
          goto LABEL_5;
        }
      }
      *(unsigned char *)(v1[7] + v9) = v3;
LABEL_5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v2 == 4)
      {
        *(void *)(v0 + v21) = v1;
        _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        swift_bridgeObjectRelease();
        return v1;
      }
    }
  }
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return v1;
}

uint64_t sub_24099D6A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v48 = a2;
  swift_getObjectType();
  sub_24099F52C(0, &qword_268C99820, MEMORY[0x263F06370]);
  MEMORY[0x270FA5388](v6 - 8);
  char v8 = (char *)&v43 - v7;
  uint64_t v9 = sub_240A02798();
  uint64_t v50 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v49 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_240A028A8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = v3;
  uint64_t v47 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  char v15 = sub_240A03FF8();
  os_log_type_t v16 = sub_240A04EC8();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v44 = v9;
    uint64_t v18 = v17;
    uint64_t v43 = swift_slowAlloc();
    uint64_t v52 = v43;
    *(_DWORD *)uint64_t v18 = 136446466;
    uint64_t v19 = sub_240A05478();
    uint64_t v51 = sub_240981440(v19, v20, &v52);
    uint64_t v45 = a3;
    sub_240A050D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    sub_24099F580(&qword_268C99560, MEMORY[0x263F06EA8]);
    uint64_t v21 = sub_240A05348();
    uint64_t v51 = sub_240981440(v21, v22, &v52);
    a3 = v45;
    sub_240A050D8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    _os_log_impl(&dword_240976000, v15, v16, "[%{public}s] Received request to open URL: %{public}s", (uint8_t *)v18, 0x16u);
    uint64_t v23 = v43;
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v23, -1, -1);
    uint64_t v24 = v18;
    uint64_t v9 = v44;
    MEMORY[0x2456058A0](v24, -1, -1);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  int v26 = v49;
  uint64_t v25 = v50;
  sub_240A02778();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v8, 1, v9) == 1)
  {
    sub_24099F4B8((uint64_t)v8, &qword_268C99820, MEMORY[0x263F06370]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v26, v8, v9);
    sub_240A02788();
    uint64_t v27 = (void *)sub_240A04C18();
    swift_bridgeObjectRelease();
    id v28 = objc_msgSend(v27, sel_pathComponents);

    uint64_t v29 = (void *)sub_240A04D18();
    char v30 = sub_24099DCDC(v29);
    if (v30 == 4)
    {
      uint64_t v31 = v9;
      id v32 = (id)*MEMORY[0x263F09768];
      uint64_t v33 = sub_240A03728();
      id v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3D0]), sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v32, v33, 0);

      id v35 = v34;
      LOBYTE(v33) = sub_24099EC24(v29, v35);

      swift_bridgeObjectRelease();
      if (v33)
      {
        uint64_t v36 = (void *)sub_240A03738();
        sub_240A02AB8();
        uint64_t v37 = (void *)sub_240A03728();
        sub_240A02AE8();
        uint64_t v38 = (void *)sub_240A02AD8();
        uint64_t v39 = (void *)sub_240A02AA8();

        objc_msgSend(v36, sel_presentViewController_animated_completion_, v39, 1, 0);
        (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v31);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v31);
      }
    }
    else
    {
      char v40 = v30;
      swift_bridgeObjectRelease();
      sub_24099DF54(v40);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v9);
    }
  }
  uint64_t v41 = sub_240A03AE8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(a3, 1, 1, v41);
}

uint64_t sub_24099DCDC(void *a1)
{
  swift_getObjectType();
  if (a1[2] == 2)
  {
    BOOL v2 = a1[4] == 47 && a1[5] == 0xE100000000000000;
    if (v2 || (sub_240A05368() & 1) != 0)
    {
      uint64_t v4 = a1[6];
      uint64_t v3 = a1[7];
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      unint64_t v5 = sub_24099D338();
      if (v5[2])
      {
        unint64_t v6 = sub_24097B164(v4, v3);
        if (v7)
        {
          uint64_t v8 = *(unsigned __int8 *)(v5[7] + v6);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v8;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRetain_n();
  uint64_t v9 = sub_240A03FF8();
  os_log_type_t v10 = sub_240A04EA8();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v20 = v12;
    *(_DWORD *)uint64_t v11 = 136446466;
    uint64_t v13 = sub_240A05478();
    sub_240981440(v13, v14, &v20);
    sub_240A050D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    uint64_t v15 = _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v16 = MEMORY[0x245604960](v15, MEMORY[0x263F8D310]);
    unint64_t v18 = v17;
    swift_bridgeObjectRelease();
    sub_240981440(v16, v18, &v20);
    sub_240A050D8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240976000, v9, v10, "[[%{public}s] Received request for invalid article: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v12, -1, -1);
    MEMORY[0x2456058A0](v11, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  return 4;
}

void sub_24099DF54(char a1)
{
  uint64_t v2 = sub_240A03998();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 1:
      unint64_t v6 = &type metadata for AudiogramArticleDataProvider;
      int v26 = &type metadata for AudiogramArticleDataProvider;
      unint64_t v27 = sub_240983AA4();
      unint64_t v7 = sub_240983A50();
      break;
    case 2:
      unint64_t v6 = &type metadata for HeadphoneListeningArticleDataProvider;
      int v26 = &type metadata for HeadphoneListeningArticleDataProvider;
      unint64_t v27 = sub_240983684();
      unint64_t v7 = sub_240983630();
      break;
    case 3:
      unint64_t v6 = &type metadata for HearingAidsArticleDataProvider;
      int v26 = &type metadata for HearingAidsArticleDataProvider;
      unint64_t v27 = sub_240983F30();
      unint64_t v7 = sub_240983EDC();
      break;
    default:
      unint64_t v6 = &type metadata for HearingHealthArticleDataProvider;
      int v26 = &type metadata for HearingHealthArticleDataProvider;
      unint64_t v27 = sub_240983E88();
      unint64_t v7 = sub_240983E34();
      break;
  }
  unint64_t v28 = v7;
  sub_24098BDC0(v25, (uint64_t)v6);
  sub_240A02DC8();
  sub_240981514((uint64_t)v25);
  sub_24099C96C(a1);
  id v8 = objc_allocWithZone((Class)sub_240A02DA8());
  uint64_t v9 = (void *)sub_240A02D98();
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46848]), sel_initWithRootViewController_, v9);
  uint64_t v11 = (void *)sub_240A03738();
  id v12 = objc_msgSend(v11, sel_navigationController);

  if (!v12)
  {
    id v12 = (id)sub_240A03738();
    objc_msgSend(v12, sel_presentViewController_animated_completion_, v10, 0, 0, v25[0]);
    goto LABEL_28;
  }
  switch(a1)
  {
    case 0:
    case 1:
    case 3:
      char v13 = sub_240A05368();
      swift_bridgeObjectRelease();
      if (v13) {
        goto LABEL_11;
      }
      goto LABEL_27;
    case 2:
      swift_bridgeObjectRelease();
LABEL_11:
      sub_2409824B8(0, (unint64_t *)&qword_26AFD48C8);
      unint64_t v14 = (void *)MEMORY[0x245604B20]((id)*MEMORY[0x263F09E28]);
      sub_240A03718();
      uint64_t v15 = (void *)sub_24098B240(v14, (uint64_t)v5);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      id v16 = objc_msgSend(v12, sel_viewControllers);
      sub_2409824B8(0, &qword_268C99818);
      unint64_t v17 = sub_240A04D18();

      if (!(v17 >> 62))
      {
        id v18 = *(id *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v18) {
          goto LABEL_13;
        }
LABEL_22:
        swift_bridgeObjectRelease();
        v25[0] = MEMORY[0x263F8EE78];
LABEL_23:
        id v22 = v15;
        id v18 = 0;
        if (!v15) {
          goto LABEL_26;
        }
LABEL_24:
        id v23 = v15;
        MEMORY[0x245604930]();
        if (*(void *)((v25[0] & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v25[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        {
LABEL_25:
          sub_240A04D68();
          sub_240A04D38();
          goto LABEL_26;
        }
LABEL_31:
        sub_240A04D58();
        goto LABEL_25;
      }
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      id v18 = (id)sub_240A05288();
      swift_bridgeObjectRelease();
      if (!v18) {
        goto LABEL_22;
      }
LABEL_13:
      if ((v17 & 0xC000000000000001) != 0)
      {
        id v19 = (id)MEMORY[0x245604E50](0, v17);
      }
      else
      {
        if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_31;
        }
        id v19 = *(id *)(v17 + 32);
      }
      uint64_t v20 = v19;
      swift_bridgeObjectRelease();
      v25[0] = MEMORY[0x263F8EE78];
      if (!v20) {
        goto LABEL_23;
      }
      id v21 = v15;
      id v18 = v20;
      MEMORY[0x245604930]();
      if (*(void *)((v25[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_240A04D58();
      }
      sub_240A04D68();
      sub_240A04D38();
      if (v15) {
        goto LABEL_24;
      }
LABEL_26:

      uint64_t v24 = (void *)sub_240A04D08();
      swift_bridgeObjectRelease();
      objc_msgSend(v12, sel_setViewControllers_animated_, v24, 0);

LABEL_27:
      objc_msgSend(v12, sel_presentViewController_animated_completion_, v10, 0, 0, v25[0]);
LABEL_28:

      return;
    default:
      JUMPOUT(0);
  }
}

uint64_t sub_24099E4D4(void *a1, uint64_t a2)
{
  sub_24099F52C(0, &qword_268C99808, MEMORY[0x263F44790]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v29 = (char *)v28 - v5;
  uint64_t v6 = sub_240A03998();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_240A039A8();
  uint64_t v30 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A038E8();
  sub_240A03858();
  char v13 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v28[1] = a2;
  v13(v9, a2, v6);
  id v14 = objc_allocWithZone((Class)sub_240A03DC8());
  id v15 = a1;
  uint64_t v16 = sub_240A03DB8();
  self;
  uint64_t v17 = swift_dynamicCastObjCClass();
  if (v17)
  {
    id v18 = (void *)v17;
    uint64_t v19 = v30;
    uint64_t v20 = v10;
    id v21 = v15;
    sub_24099E870(v18, (uint64_t)&v31);
    if (v32)
    {
      sub_24099F514(&v31, v33);
      uint64_t v22 = v16;
      id v23 = objc_msgSend(v21, sel_identifier);
      sub_240A04C58();

      uint64_t v24 = (void *)sub_240A03978();
      uint64_t v25 = v29;
      sub_240A03D88();
      swift_bridgeObjectRelease();

      uint64_t v16 = v22;
      uint64_t v26 = sub_240A03D98();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 0, 1, v26);
      sub_240A03DA8();

      sub_240981514((uint64_t)v33);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v20);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v10);

      sub_24099F4B8((uint64_t)&v31, &qword_268C99810, (void (*)(uint64_t))sub_24099CF58);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v10);
  }
  return v16;
}

unint64_t sub_24099E870@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(a1, sel_identifier);
  if (!v3)
  {
    sub_240A04C58();
    id v3 = (id)sub_240A04C18();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = sub_240A04C58();
  uint64_t v6 = v5;
  if (v4 == sub_240A04C58() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  char v9 = sub_240A05368();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9)
  {
LABEL_15:

    *(void *)(a2 + 24) = &type metadata for HearingHealthArticleDataProvider;
    *(void *)(a2 + 32) = sub_240983E88();
    unint64_t result = sub_240983E34();
    goto LABEL_16;
  }
  uint64_t v10 = sub_240A04C58();
  uint64_t v12 = v11;
  if (v10 == sub_240A04C58() && v12 == v13)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = sub_240A05368();

    swift_bridgeObjectRelease();
    unint64_t result = swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      *(_OWORD *)(a2 + 16) = 0u;
      *(_OWORD *)(a2 + 32) = 0u;
      *(_OWORD *)a2 = 0u;
      return result;
    }
  }
  *(void *)(a2 + 24) = &type metadata for HeadphoneListeningArticleDataProvider;
  *(void *)(a2 + 32) = sub_240983684();
  unint64_t result = sub_240983630();
LABEL_16:
  *(void *)(a2 + 40) = result;
  return result;
}

id sub_24099EA00()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HearingAppPluginAppDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24099EAB8()
{
  return type metadata accessor for HearingAppPluginAppDelegate();
}

uint64_t type metadata accessor for HearingAppPluginAppDelegate()
{
  uint64_t result = qword_268C997F0;
  if (!qword_268C997F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24099EB0C()
{
  uint64_t result = sub_240A04018();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_24099EBA4()
{
  return sub_24099F580(&qword_268C99800, (void (*)(uint64_t))type metadata accessor for HearingAppPluginAppDelegate);
}

id sub_24099EBEC()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id sub_24099EC24(void *a1, void *a2)
{
  swift_getObjectType();
  uint64_t v4 = sub_240A04018();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = sub_240A03F48();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1[2] == 2
    && (a1[4] == 47 && a1[5] == 0xE100000000000000 || (sub_240A05368() & 1) != 0)
    && (a1[6] == 0x54676E6972616548 && a1[7] == 0xEB00000000747365 || (sub_240A05368() & 1) != 0))
  {
    void v25[2] = v5;
    sub_2409824B8(0, &qword_268C999C0);
    id v10 = a2;
    sub_240A03F68();
    id v23 = (void *)sub_240A03F58();
    id v24 = objc_msgSend(v23, sel_areAllRequirementsSatisfied);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    id v11 = a2;
    uint64_t v12 = sub_240A03FF8();
    os_log_type_t v13 = sub_240A04EA8();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v27 = v15;
      *(_DWORD *)uint64_t v14 = 136446466;
      uint64_t v16 = sub_240A05478();
      uint64_t v26 = sub_240981440(v16, v17, &v27);
      sub_240A050D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2082;
      uint64_t v18 = _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v19 = MEMORY[0x245604960](v18, MEMORY[0x263F8D310]);
      unint64_t v21 = v20;
      swift_bridgeObjectRelease();
      uint64_t v26 = sub_240981440(v19, v21, &v27);
      sub_240A050D8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240976000, v12, v13, "[[%{public}s] Cannot open hearing test with path components: %{public}s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v15, -1, -1);
      MEMORY[0x2456058A0](v14, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }

    return 0;
  }
  return v24;
}

uint64_t sub_24099F21C(void *a1, uint64_t a2)
{
  uint64_t v16 = a2;
  id v17 = a1;
  uint64_t v2 = sub_240A03998();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240A039A8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for HeadphoneNotificationsDataDetailConfigurationProvider()), sel_init);
  sub_240A03948();
  sub_240A03938();
  uint64_t v19 = 0;
  memset(v18, 0, sizeof(v18));
  sub_240A03C78();
  swift_bridgeObjectRelease();
  sub_24099F4B8((uint64_t)v18, (unint64_t *)&qword_268C993C8, (void (*)(uint64_t))sub_24099F460);

  uint64_t v11 = v16;
  sub_240A03858();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v11, v2);
  id v12 = objc_allocWithZone((Class)sub_240A03A08());
  id v13 = v17;
  uint64_t v14 = sub_240A039E8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v14;
}

unint64_t sub_24099F460()
{
  unint64_t result = qword_268C993D0;
  if (!qword_268C993D0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C993D0);
  }
  return result;
}

uint64_t sub_24099F4B8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_24099F52C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

_OWORD *sub_24099F514(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

void sub_24099F52C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240A050C8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_24099F580(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for NoiseNotificationsFeatureStatusActionHandler(uint64_t a1)
{
  return sub_2409A1004(a1, (uint64_t *)&unk_268C99830);
}

uint64_t sub_24099F5E8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24099F638()
{
  return 1;
}

uint64_t sub_24099F640()
{
  return sub_240A05418();
}

uint64_t sub_24099F684()
{
  return sub_240A05408();
}

uint64_t sub_24099F6AC()
{
  return sub_240A05418();
}

unint64_t sub_24099F6EC()
{
  return 0xD000000000000011;
}

uint64_t sub_24099F708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2409A189C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24099F734()
{
  return 0;
}

void sub_24099F740(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_24099F74C(uint64_t a1)
{
  unint64_t v2 = sub_2409A15AC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24099F788(uint64_t a1)
{
  unint64_t v2 = sub_2409A15AC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24099F7C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = sub_240A02E88();
  uint64_t v19 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v20 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409A1600(0, &qword_268C99880, MEMORY[0x263F8E040]);
  uint64_t v7 = v6;
  uint64_t v18 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v9 = (char *)&v16 - v8;
  uint64_t v10 = type metadata accessor for NoiseNotificationsFeatureStatusActionHandlerData(0);
  MEMORY[0x270FA5388](v10 - 8);
  id v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24098BDC0(a1, a1[3]);
  sub_2409A15AC();
  sub_240A05438();
  if (!v2)
  {
    uint64_t v13 = v18;
    uint64_t v14 = v19;
    sub_2409A0F44(&qword_268C99888, MEMORY[0x263F435D8]);
    sub_240A05318();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v7);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v20, v4);
    sub_2409A103C((uint64_t)v12, v17);
  }
  return sub_240981514((uint64_t)a1);
}

uint64_t sub_24099FA70@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24099F7C4(a1, a2);
}

uint64_t sub_24099FA88(void *a1)
{
  sub_2409A1600(0, &qword_268C99870, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - v5;
  sub_24098BDC0(a1, a1[3]);
  sub_2409A15AC();
  sub_240A05448();
  sub_240A02E88();
  sub_2409A0F44(&qword_26AFD3F50, MEMORY[0x263F435D8]);
  sub_240A05328();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_24099FC10()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v1 = sub_240A02E78();
  uint64_t v125 = *(void *)(v1 - 8);
  uint64_t v126 = v1;
  MEMORY[0x270FA5388](v1);
  v124 = &v117[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2409A0F90(0, (unint64_t *)&qword_26AFD3F48, MEMORY[0x263F06EA8]);
  MEMORY[0x270FA5388](v3 - 8);
  v121 = &v117[-v4];
  uint64_t v5 = sub_240A03098();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v132 = v5;
  uint64_t v133 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  v129 = &v117[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  v137 = &v117[-v9];
  uint64_t v134 = sub_240A02E88();
  uint64_t v140 = *(void *)(v134 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v134);
  v122 = &v117[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  v135 = &v117[-v13];
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  v143 = &v117[-v15];
  MEMORY[0x270FA5388](v14);
  v127 = &v117[-v16];
  uint64_t v17 = sub_240A04018();
  uint64_t v141 = *(void *)(v17 - 8);
  uint64_t v142 = v17;
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  v130 = &v117[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  v123 = &v117[-v21];
  MEMORY[0x270FA5388](v20);
  v139 = &v117[-v22];
  uint64_t v23 = sub_240A03AD8();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = &v117[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2409A0F90(0, &qword_268C99848, (void (*)(uint64_t))type metadata accessor for NoiseNotificationsFeatureStatusActionHandlerData);
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v29 = &v117[-v28];
  uint64_t v30 = type metadata accessor for NoiseNotificationsFeatureStatusActionHandlerData(0);
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  id v34 = &v117[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v32);
  uint64_t v36 = &v117[-v35];
  uint64_t v138 = v0;
  sub_240A03C48();
  sub_2409A0F44(&qword_268C99850, (void (*)(uint64_t))type metadata accessor for NoiseNotificationsFeatureStatusActionHandlerData);
  sub_2409A0F44(&qword_268C99858, (void (*)(uint64_t))type metadata accessor for NoiseNotificationsFeatureStatusActionHandlerData);
  sub_240A03AC8();
  uint64_t v39 = *(unsigned char **)(v24 + 8);
  uint64_t v38 = v24 + 8;
  uint64_t v37 = v39;
  uint64_t v131 = v23;
  ((void (*)(unsigned char *, uint64_t))v39)(v26, v23);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30) == 1)
  {
    sub_2409A1160((uint64_t)v29, &qword_268C99848, (void (*)(uint64_t))type metadata accessor for NoiseNotificationsFeatureStatusActionHandlerData);
    char v40 = v130;
    sub_240A03FD8();
    uint64_t v41 = sub_240A03FF8();
    os_log_type_t v42 = sub_240A04EB8();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      v145[0] = v44;
      *(_DWORD *)uint64_t v43 = 136315138;
      uint64_t v45 = sub_240A05478();
      uint64_t v144 = sub_240981440(v45, v46, v145);
      sub_240A050D8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240976000, v41, v42, "%s Could not access action handler user data!", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v44, -1, -1);
      MEMORY[0x2456058A0](v43, -1, -1);
    }

    return (*(uint64_t (**)(unsigned char *, uint64_t))(v141 + 8))(v40, v142);
  }
  v130 = v37;
  sub_2409A103C((uint64_t)v29, (uint64_t)v36);
  sub_240A03FE8();
  sub_2409A10A0((uint64_t)v36, (uint64_t)v34);
  uint64_t v48 = sub_240A03FF8();
  os_log_type_t v49 = sub_240A04EC8();
  int v50 = v49;
  BOOL v51 = os_log_type_enabled(v48, v49);
  v128 = v36;
  uint64_t v120 = v38;
  if (v51)
  {
    uint64_t v52 = swift_slowAlloc();
    v119 = (void (*)(void, void))swift_slowAlloc();
    v145[0] = (uint64_t)v119;
    *(_DWORD *)uint64_t v52 = 136315394;
    int v118 = v50;
    uint64_t v53 = sub_240A05478();
    uint64_t v144 = sub_240981440(v53, v54, v145);
    sub_240A050D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v52 + 12) = 2080;
    uint64_t v55 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v140 + 16);
    unint64_t v56 = (v140 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v57 = v134;
    v55(v127, v34, v134);
    uint64_t v58 = sub_240A04C78();
    uint64_t v144 = sub_240981440(v58, v59, v145);
    uint64_t v60 = (uint64_t)v128;
    sub_240A050D8();
    int v61 = (unsigned char *)v60;
    swift_bridgeObjectRelease();
    sub_2409A1104((uint64_t)v34);
    _os_log_impl(&dword_240976000, v48, (os_log_type_t)v118, "%s Did select cell with feature status %s", (uint8_t *)v52, 0x16u);
    uint64_t v62 = v119;
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v62, -1, -1);
    MEMORY[0x2456058A0](v52, -1, -1);

    v119 = *(void (**)(void, void))(v141 + 8);
    v119(v139, v142);
  }
  else
  {
    int v61 = v36;
    sub_2409A1104((uint64_t)v34);

    v119 = *(void (**)(void, void))(v141 + 8);
    v119(v139, v142);
    uint64_t v55 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v140 + 16);
    unint64_t v56 = (v140 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v57 = v134;
  }
  uint64_t v63 = v138;
  uint64_t v64 = v143;
  v55(v143, v61, v57);
  sub_240A03C48();
  v139 = (unsigned char *)sub_240A03AB8();
  uint64_t v66 = (void (*)(unsigned char *, uint64_t))v130;
  uint64_t v65 = v131;
  ((void (*)(unsigned char *, uint64_t))v130)(v26, v131);
  sub_240A03C48();
  uint64_t v67 = v137;
  sub_240A02F18();
  v66(v26, v65);
  uint64_t v68 = v63;
  __int16 v69 = v135;
  unint64_t v70 = v55;
  v55(v135, v64, v57);
  uint64_t v71 = v140;
  int v72 = (*(uint64_t (**)(unsigned char *, uint64_t))(v140 + 88))(v69, v57);
  if (v72 == *MEMORY[0x263F435C8])
  {
    v73 = *(void **)(v68 + qword_268C99828);
    uint64_t v75 = v132;
    uint64_t v74 = v133;
    uint64_t v76 = (uint64_t)v129;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v133 + 16))(v129, v67, v132);
    id v77 = objc_allocWithZone((Class)type metadata accessor for NoiseNotificationsSettingsViewController(0));
    unint64_t v78 = v67;
    id v79 = sub_2409BF4E8(v73, v76, 0);
    id v80 = v139;
    id v81 = objc_msgSend(v139, sel_navigationController);
    if (v81)
    {
      __int16 v82 = v81;
      objc_msgSend(v81, sel_pushViewController_animated_, v79, 1);
    }
    else
    {
    }
    (*(void (**)(unsigned char *, uint64_t))(v74 + 8))(v78, v75);
    (*(void (**)(unsigned char *, uint64_t))(v71 + 8))(v143, v57);
    uint64_t v95 = (uint64_t)v128;
    return sub_2409A1104(v95);
  }
  uint64_t v83 = (uint64_t)v128;
  if (v72 == *MEMORY[0x263F435D0])
  {
    uint64_t v84 = (uint64_t)v128;
    v85 = *(void **)(v138 + qword_268C99828);
    uint64_t v87 = v132;
    uint64_t v86 = v133;
    uint64_t v88 = (uint64_t)v129;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v133 + 16))(v129, v67, v132);
    id v89 = objc_allocWithZone((Class)type metadata accessor for NoiseNotificationsSettingsViewController(0));
    v90 = v67;
    id v91 = v85;
    id v92 = sub_2409BF4E8(v91, v88, 1);
    sub_240A03A88();
    objc_msgSend(v91, sel_setOnboardingCompleted_, 1);
    objc_msgSend(v91, sel_setNoiseEnabled_, 1);
    objc_msgSend(v91, sel_setNotificationsEnabled_, 1);
    objc_msgSend(v91, sel_setNotificationThreshold_, 90);
    id v93 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v92);
    id v94 = v139;
    objc_msgSend(v139, sel_presentViewController_animated_completion_, v93, 1, 0);

    (*(void (**)(unsigned char *, uint64_t))(v86 + 8))(v90, v87);
    (*(void (**)(unsigned char *, uint64_t))(v71 + 8))(v143, v57);
    uint64_t v95 = v84;
    return sub_2409A1104(v95);
  }
  if (v72 == *MEMORY[0x263F435C0])
  {
    uint64_t v97 = v125;
    uint64_t v96 = v126;
    v98 = v124;
    (*(void (**)(unsigned char *, void, uint64_t))(v125 + 104))(v124, *MEMORY[0x263F43588], v126);
    sub_240A02E68();

    (*(void (**)(unsigned char *, uint64_t))(v97 + 8))(v98, v96);
    (*(void (**)(unsigned char *, uint64_t))(v133 + 8))(v67, v132);
    (*(void (**)(unsigned char *, uint64_t))(v71 + 8))(v143, v57);
    uint64_t v95 = v83;
    return sub_2409A1104(v95);
  }
  if (v72 == *MEMORY[0x263F435B8])
  {
    uint64_t v99 = (uint64_t)v128;
    v100 = v121;
    sub_2409A661C((uint64_t)v121);
    uint64_t v101 = sub_240A028A8();
    uint64_t v102 = *(void *)(v101 - 8);
    int v103 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v102 + 48))(v100, 1, v101);
    id v104 = v139;
    if (v103 == 1)
    {

      (*(void (**)(unsigned char *, uint64_t))(v133 + 8))(v137, v132);
      (*(void (**)(unsigned char *, uint64_t))(v71 + 8))(v143, v57);
      sub_2409A1104(v99);
      return sub_2409A1160((uint64_t)v100, (unint64_t *)&qword_26AFD3F48, MEMORY[0x263F06EA8]);
    }
    else
    {
      sub_240A02868();

      (*(void (**)(unsigned char *, uint64_t))(v133 + 8))(v137, v132);
      (*(void (**)(unsigned char *, uint64_t))(v71 + 8))(v143, v57);
      sub_2409A1104(v99);
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v102 + 8))(v100, v101);
    }
  }
  else
  {
    v105 = v123;
    sub_240A03FE8();
    v106 = v122;
    v55(v122, v143, v57);
    v107 = sub_240A03FF8();
    os_log_type_t v108 = sub_240A04EA8();
    if (os_log_type_enabled(v107, v108))
    {
      uint64_t v109 = swift_slowAlloc();
      uint64_t v138 = swift_slowAlloc();
      v145[0] = v138;
      *(_DWORD *)uint64_t v109 = 136315650;
      uint64_t v110 = sub_240A05478();
      uint64_t v144 = sub_240981440(v110, v111, v145);
      uint64_t ObjectType = v56;
      sub_240A050D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v109 + 12) = 2080;
      uint64_t v144 = sub_240981440(0x63656C6553646964, 0xEB00000000292874, v145);
      sub_240A050D8();
      *(_WORD *)(v109 + 22) = 2080;
      v70(v127, v106, v57);
      uint64_t v112 = sub_240A04C78();
      uint64_t v144 = sub_240981440(v112, v113, v145);
      sub_240A050D8();
      swift_bridgeObjectRelease();
      v114 = *(void (**)(unsigned char *, uint64_t))(v71 + 8);
      v114(v106, v57);
      _os_log_impl(&dword_240976000, v107, v108, "%s.%s Unhandled feature status %s", (uint8_t *)v109, 0x20u);
      uint64_t v115 = v138;
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v115, -1, -1);
      MEMORY[0x2456058A0](v109, -1, -1);

      v116 = v123;
    }
    else
    {

      v114 = *(void (**)(unsigned char *, uint64_t))(v71 + 8);
      v114(v106, v57);
      v116 = v105;
    }
    v119(v116, v142);
    (*(void (**)(unsigned char *, uint64_t))(v133 + 8))(v137, v132);
    v114(v143, v57);
    sub_2409A1104((uint64_t)v128);
    return ((uint64_t (*)(unsigned char *, uint64_t))v114)(v135, v57);
  }
}

uint64_t sub_2409A0CF4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_240A03AD8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_allocWithZone(v2);
  uint64_t v9 = qword_268C99828;
  uint64_t v10 = qword_26AFD4988;
  uint64_t v11 = (char *)v8;
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v12 = (void *)qword_26AFD63C8;
  *(void *)&v11[v9] = qword_26AFD63C8;
  id v13 = v12;

  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v14 = sub_240A03C58();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return v14;
}

void sub_2409A0E54()
{
}

id sub_2409A0E64()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NoiseNotificationsFeatureStatusActionHandler(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_2409A0E9C(uint64_t a1)
{
}

uint64_t sub_2409A0EAC()
{
  return type metadata accessor for NoiseNotificationsFeatureStatusActionHandler(0);
}

uint64_t sub_2409A0EB4()
{
  return sub_2409A0F44(&qword_26AFD4260, MEMORY[0x263F445D8]);
}

uint64_t sub_2409A0EFC()
{
  return sub_2409A0F44(&qword_268C99840, (void (*)(uint64_t))type metadata accessor for NoiseNotificationsFeatureStatusActionHandler);
}

uint64_t sub_2409A0F44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2409A0F90(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240A050C8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for NoiseNotificationsFeatureStatusActionHandlerData(uint64_t a1)
{
  return sub_2409A1004(a1, (uint64_t *)&unk_268C99860);
}

uint64_t sub_2409A1004(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2409A103C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NoiseNotificationsFeatureStatusActionHandlerData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2409A10A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NoiseNotificationsFeatureStatusActionHandlerData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2409A1104(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NoiseNotificationsFeatureStatusActionHandlerData(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2409A1160(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_2409A0F90(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2409A11BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240A02E88();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_2409A1228(uint64_t a1)
{
  uint64_t v2 = sub_240A02E88();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_2409A128C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240A02E88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_2409A12F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240A02E88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_2409A1354(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240A02E88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_2409A13B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240A02E88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_2409A141C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2409A1430);
}

uint64_t sub_2409A1430(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240A02E88();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_2409A149C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2409A14B0);
}

uint64_t sub_2409A14B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240A02E88();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_2409A1520()
{
  uint64_t result = sub_240A02E88();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_2409A15AC()
{
  unint64_t result = qword_268C99878;
  if (!qword_268C99878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99878);
  }
  return result;
}

void sub_2409A1600(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_2409A15AC();
    unint64_t v7 = a3(a1, &type metadata for NoiseNotificationsFeatureStatusActionHandlerData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for NoiseNotificationsFeatureStatusActionHandlerData.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for NoiseNotificationsFeatureStatusActionHandlerData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2409A1754);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2409A177C()
{
  return 0;
}

ValueMetadata *type metadata accessor for NoiseNotificationsFeatureStatusActionHandlerData.CodingKeys()
{
  return &type metadata for NoiseNotificationsFeatureStatusActionHandlerData.CodingKeys;
}

unint64_t sub_2409A1798()
{
  unint64_t result = qword_268C99890;
  if (!qword_268C99890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99890);
  }
  return result;
}

unint64_t sub_2409A17F0()
{
  unint64_t result = qword_268C99898;
  if (!qword_268C99898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99898);
  }
  return result;
}

unint64_t sub_2409A1848()
{
  unint64_t result = qword_268C998A0;
  if (!qword_268C998A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C998A0);
  }
  return result;
}

uint64_t sub_2409A189C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x8000000240A0B0A0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_240A05368();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_2409A1924(uint64_t a1)
{
  uint64_t v1 = sub_2409A2438(a1);
  swift_release();
  return v1;
}

double PDFHStackWithEqualWidth.Config.minimumColumnWidth.getter(double a1, double a2)
{
  return a2;
}

double PDFHStackWithEqualWidth.numberOfColumns.getter(uint64_t a1)
{
  return (double)*(uint64_t *)(a1 + 16);
}

double PDFHStackWithEqualWidth.init(config:_:)(void (*a1)(void), double a2)
{
  return a2;
}

uint64_t PDFHStackWithEqualWidth.render(context:document:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5 = sub_240A030C8();
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v18 = a3;
  if (v5) {
    uint64_t v18 = sub_2409A1CE0(a3);
  }
  sub_240A030D8();
  CGRectGetWidth(v26);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_retain();
  uint64_t v6 = sub_2409A2438(a3);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    double v8 = *(double *)(v6 + 32);
    uint64_t v9 = v7 - 1;
    if (v9)
    {
      uint64_t v10 = (double *)(v6 + 40);
      do
      {
        double v11 = *v10++;
        double v12 = v11;
        if (v8 < v11) {
          double v8 = v12;
        }
        --v9;
      }
      while (v9);
    }
  }
  swift_bridgeObjectRelease();
  PDFHStackWithEqualWidth.boundingRectForContent(in:)(a2, a3);
  uint64_t result = sub_240A03158();
  unint64_t v14 = 0;
  unint64_t v15 = *(void *)(v18 + 16);
  double v16 = 0.0;
  if (v15) {
    goto LABEL_11;
  }
LABEL_10:
  long long v21 = 0u;
  long long v22 = 0u;
  unint64_t v14 = v15;
  long long v20 = 0u;
  while (1)
  {
    sub_2409A2558((uint64_t)&v20, (uint64_t)&v23);
    if (!v25)
    {
      swift_bridgeObjectRelease();
      return sub_240A03148();
    }
    sub_240980754(&v24, (uint64_t)&v20);
    sub_240A03168();
    sub_240A030D8();
    CGRectGetMinX(v27);
    sub_240A030D8();
    CGRectGetMinY(v28);
    sub_240A030D8();
    CGRectGetHeight(v29);
    sub_240A030E8();
    sub_24098BDC0(&v20, *((uint64_t *)&v21 + 1));
    sub_240A03338();
    sub_24098BDC0(&v20, *((uint64_t *)&v21 + 1));
    sub_240A03328();
    double Height = CGRectGetHeight(v30);
    swift_release();
    if (v16 < Height) {
      double v16 = Height;
    }
    uint64_t result = sub_240981514((uint64_t)&v20);
    if (v14 == v15) {
      goto LABEL_10;
    }
LABEL_11:
    if (v14 >= *(void *)(v18 + 16)) {
      break;
    }
    sub_240991D58(v18 + 32 + 40 * v14, (uint64_t)v19);
    *(void *)&long long v20 = v14;
    sub_240980754(v19, (uint64_t)&v20 + 8);
    ++v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_2409A1CE0(uint64_t result)
{
  uint64_t v1 = (void *)result;
  unint64_t v2 = *(void *)(result + 16);
  if (v2 < 2) {
    return (uint64_t)v1;
  }
  unint64_t v3 = 0;
  unint64_t v4 = v2 >> 1;
  unint64_t v5 = v2 - 1;
  uint64_t v6 = 40 * v2 - 8;
  for (uint64_t i = 4; ; i += 5)
  {
    if (v3 == v5) {
      goto LABEL_4;
    }
    unint64_t v8 = v1[2];
    if (v3 >= v8) {
      break;
    }
    uint64_t result = sub_240991D58((uint64_t)&v1[i], (uint64_t)v10);
    if (v5 >= v8) {
      goto LABEL_14;
    }
    sub_240991D58((uint64_t)v1 + v6, (uint64_t)v9);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_2409A2424(v1);
      uint64_t v1 = (void *)result;
    }
    if (v3 >= v1[2]) {
      goto LABEL_15;
    }
    sub_240981514((uint64_t)&v1[i]);
    uint64_t result = sub_240980754(v9, (uint64_t)&v1[i]);
    if (v5 >= v1[2]) {
      goto LABEL_16;
    }
    sub_240981514((uint64_t)v1 + v6);
    uint64_t result = sub_240980754(v10, (uint64_t)v1 + v6);
LABEL_4:
    ++v3;
    --v5;
    v6 -= 40;
    if (v4 == v3) {
      return (uint64_t)v1;
    }
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

double PDFHStackWithEqualWidth.maximumColumnWidth(in:)(double a1, double a2, uint64_t a3, uint64_t a4)
{
  sub_240A030D8();
  double v7 = (CGRectGetWidth(v18) - ((double)*(uint64_t *)(a4 + 16) + -1.0) * a1) / (double)*(uint64_t *)(a4 + 16);
  swift_retain();
  uint64_t v8 = _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v9 = sub_2409A2438(v8);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    double v11 = *(double *)(v9 + 32);
    uint64_t v12 = v10 - 1;
    if (v12)
    {
      id v13 = (double *)(v9 + 40);
      do
      {
        double v14 = *v13++;
        double v15 = v14;
        if (v11 < v14) {
          double v11 = v15;
        }
        --v12;
      }
      while (v12);
    }
    swift_bridgeObjectRelease();
    if (v11 > a2) {
      double v16 = v11;
    }
    else {
      double v16 = a2;
    }
    if (v16 < v7) {
      return v16;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t PDFHStackWithEqualWidth.boundingRectForContent(in:)(uint64_t a1, uint64_t a2)
{
  char v3 = sub_240A030C8();
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v16 = a2;
  if (v3) {
    uint64_t v16 = sub_2409A1CE0(a2);
  }
  sub_240A030D8();
  CGRectGetWidth(v24);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_retain();
  uint64_t v4 = sub_2409A1924(a2);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    double v6 = *(double *)(v4 + 32);
    uint64_t v7 = v5 - 1;
    if (v7)
    {
      uint64_t v8 = (double *)(v4 + 40);
      do
      {
        double v9 = *v8++;
        double v10 = v9;
        if (v6 < v9) {
          double v6 = v10;
        }
        --v7;
      }
      while (v7);
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v12 = 0;
  unint64_t v13 = *(void *)(v16 + 16);
  double v14 = 0.0;
  if (v13) {
    goto LABEL_11;
  }
LABEL_10:
  long long v19 = 0u;
  long long v20 = 0u;
  unint64_t v12 = v13;
  long long v18 = 0u;
  while (1)
  {
    sub_2409A2558((uint64_t)&v18, (uint64_t)&v21);
    if (!v23)
    {
      swift_bridgeObjectRelease();
      return sub_240A030D8();
    }
    sub_240980754(&v22, (uint64_t)&v18);
    sub_240A03168();
    sub_240A030D8();
    CGRectGetMinX(v25);
    sub_240A030D8();
    CGRectGetMinY(v26);
    sub_240A030D8();
    CGRectGetHeight(v27);
    sub_240A030E8();
    sub_24098BDC0(&v18, *((uint64_t *)&v19 + 1));
    sub_240A03318();
    double Height = CGRectGetHeight(v28);
    swift_release();
    if (v14 < Height) {
      double v14 = Height;
    }
    uint64_t result = sub_240981514((uint64_t)&v18);
    if (v12 == v13) {
      goto LABEL_10;
    }
LABEL_11:
    if (v12 >= *(void *)(v16 + 16)) {
      break;
    }
    sub_240991D58(v16 + 32 + 40 * v12, (uint64_t)v17);
    *(void *)&long long v18 = v12;
    sub_240980754(v17, (uint64_t)&v18 + 8);
    ++v12;
  }
  __break(1u);
  return result;
}

uint64_t PDFHStackWithEqualWidth.documentForColumn(_:columnWidth:in:)()
{
  uint64_t v0 = sub_240A03168();
  sub_240A030D8();
  CGRectGetMinX(v2);
  sub_240A030D8();
  CGRectGetMinY(v3);
  sub_240A030D8();
  CGRectGetHeight(v4);
  sub_240A030E8();
  return v0;
}

uint64_t sub_2409A2260(uint64_t a1, uint64_t a2)
{
  return PDFHStackWithEqualWidth.render(context:document:)(a1, a2, *v2);
}

uint64_t sub_2409A226C(uint64_t a1)
{
  return PDFHStackWithEqualWidth.boundingRectForContent(in:)(a1, *v1);
}

uint64_t sub_2409A2278(uint64_t a1)
{
  CGRect v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  unint64_t v4 = sub_2409A2918();
  *CGRect v3 = v1;
  v3[1] = sub_2409A2324;
  return MEMORY[0x270F33478](a1, v4);
}

uint64_t sub_2409A2324(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

void *sub_2409A2424(void *a1)
{
  return sub_2409926E0(0, a1[2], 0, a1);
}

uint64_t sub_2409A2438(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
    sub_240992AE0(0, v1, 0);
    uint64_t v2 = v10;
    uint64_t v4 = (void *)(a1 + 32);
    do
    {
      sub_24098BDC0(v4, v4[3]);
      sub_240A03328();
      uint64_t v6 = v5;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_240992AE0(0, *(void *)(v10 + 16) + 1, 1);
      }
      unint64_t v8 = *(void *)(v10 + 16);
      unint64_t v7 = *(void *)(v10 + 24);
      if (v8 >= v7 >> 1) {
        sub_240992AE0(v7 > 1, v8 + 1, 1);
      }
      *(void *)(v10 + 16) = v8 + 1;
      *(void *)(v10 + 8 * v8 + 32) = v6;
      v4 += 5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2409A2558(uint64_t a1, uint64_t a2)
{
  sub_2409A25BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2409A25BC()
{
  if (!qword_268C998A8)
  {
    sub_2409A2614();
    unint64_t v0 = sub_240A050C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C998A8);
    }
  }
}

void sub_2409A2614()
{
  if (!qword_268C998B0)
  {
    sub_2409A2680();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C998B0);
    }
  }
}

unint64_t sub_2409A2680()
{
  unint64_t result = qword_268C995F8;
  if (!qword_268C995F8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C995F8);
  }
  return result;
}

unint64_t sub_2409A26DC()
{
  unint64_t result = qword_268C998B8;
  if (!qword_268C998B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C998B8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for PDFHStackWithEqualWidth(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return a1;
}

uint64_t destroy for PDFHStackWithEqualWidth()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for PDFHStackWithEqualWidth(void *a1, void *a2)
{
  *a1 = *a2;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

__n128 initializeWithTake for PDFHStackWithEqualWidth(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for PDFHStackWithEqualWidth(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for PDFHStackWithEqualWidth(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PDFHStackWithEqualWidth(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PDFHStackWithEqualWidth()
{
  return &type metadata for PDFHStackWithEqualWidth;
}

__n128 initializeBufferWithCopyOfBuffer for PDFHStackWithEqualWidth.Config(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for PDFHStackWithEqualWidth.Config(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PDFHStackWithEqualWidth.Config(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PDFHStackWithEqualWidth.Config()
{
  return &type metadata for PDFHStackWithEqualWidth.Config;
}

unint64_t sub_2409A2918()
{
  unint64_t result = qword_268C998C8;
  if (!qword_268C998C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C998C8);
  }
  return result;
}

void *sub_2409A2970(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  char v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *char v3 = *a2;
    char v3 = (void *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = (uint64_t)a2 + v5;
    uint64_t v8 = sub_240A02978();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_2409A2A54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_240A02978();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

uint64_t sub_2409A2ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_240A02978();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t sub_2409A2B50(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  uint64_t v5 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = (uint64_t)a2 + v6;
  uint64_t v9 = sub_240A02978();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_2409A2BE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_240A02978();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_2409A2C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_240A02978();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_2409A2D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2409A2D20);
}

uint64_t sub_2409A2D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 24);
  uint64_t v5 = sub_240A02978();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_2409A2D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2409A2DA4);
}

uint64_t sub_2409A2DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 24);
  uint64_t v6 = sub_240A02978();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t type metadata accessor for AudiogramLongitudinalPDFChartData()
{
  uint64_t result = qword_268C998D0;
  if (!qword_268C998D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2409A2E64()
{
  uint64_t result = sub_240A02978();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2409A2EFC@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_240A028B8();
  *a1 = v3;
  return result;
}

uint64_t sub_2409A2F2C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_240A02B08();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_2409A2FB4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_240A02B08();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  v10(v7, v8, v9);
  return a1;
}

void *sub_2409A3074(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_240A02B08();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_2409A3148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_240A02B08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_2409A31D4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[4];
  a1[3] = a2[3];
  a1[4] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_240A02B08();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_2409A3280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2409A3294);
}

uint64_t sub_2409A3294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_240A02B08();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_2409A3344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2409A3358);
}

uint64_t sub_2409A3358(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_240A02B08();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2409A3400()
{
  uint64_t result = sub_240A02B08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2409A34A8(uint64_t a1, uint64_t a2)
{
  sub_2409A3698(0, &qword_26AFD4488, (uint64_t (*)(uint64_t))sub_24099BFD8, MEMORY[0x263EFDDF8]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v17 - v6;
  sub_24099BFD8(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unint64_t v13 = (char *)&v17 - v12;
  double v14 = (void *)sub_240A02C98();
  sub_240998294(a2, (uint64_t)v13);

  sub_24099C00C((uint64_t)v13, (uint64_t)v11);
  sub_240A04558();
  sub_2409A36FC();
  uint64_t v15 = sub_240A04628();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_24099C070((uint64_t)v13);
  return v15;
}

uint64_t sub_2409A3668()
{
  uint64_t v1 = *(void *)(v0 + 24);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return v1;
}

void sub_2409A3698(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_2409A36FC()
{
  unint64_t result = qword_26AFD4480;
  if (!qword_26AFD4480)
  {
    sub_2409A3698(255, &qword_26AFD4488, (uint64_t (*)(uint64_t))sub_24099BFD8, MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD4480);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for AudiogramPDFComponent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for AudiogramPDFComponent()
{
  return swift_release();
}

void *assignWithCopy for AudiogramPDFComponent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *initializeWithTake for AudiogramPDFComponent(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

void *assignWithTake for AudiogramPDFComponent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AudiogramPDFComponent(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AudiogramPDFComponent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudiogramPDFComponent()
{
  return &type metadata for AudiogramPDFComponent;
}

uint64_t sub_2409A38F4()
{
  return sub_240A04F08();
}

uint64_t sub_2409A392C()
{
  uint64_t v0 = sub_240A036C8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A036A8();
  uint64_t v4 = sub_240A036B8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_2409A3A00()
{
  if (qword_268C992D8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_268C9A998;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return v0;
}

uint64_t sub_2409A3A6C()
{
  sub_2409A3F7C(0);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_240A029C8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A03988();
  uint64_t v9 = sub_240A033C8();
  uint64_t v11 = v10;
  if (v9 == sub_240A033C8() && v11 == v12)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v13 = sub_240A05368();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0) {
      return 0;
    }
  }
  double v14 = (void *)sub_240A03978();
  sub_240A03D78();
  uint64_t v15 = sub_240A032E8();
  uint64_t v27 = v5;
  uint64_t v17 = v16;
  uint64_t v18 = v6;
  long long v19 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_2409A3FE4(0, &qword_268C998F0, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
  sub_240A03638();
  uint64_t v29 = v1;
  uint64_t v20 = swift_allocObject();
  long long v28 = xmmword_240A06870;
  *(_OWORD *)(v20 + 16) = xmmword_240A06870;
  sub_2409A3FE4(0, (unint64_t *)&qword_268C99690, (uint64_t (*)(uint64_t))sub_2409A4048, v19);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = v28;
  *(void *)(v21 + 56) = &type metadata for AudiogramPDFItem;
  *(void *)(v21 + 64) = sub_2409A40A0();
  long long v22 = (void *)swift_allocObject();
  *(void *)(v21 + 32) = v22;
  v22[2] = v15;
  void v22[3] = v17;
  uint64_t v30 = v17;
  v22[4] = 0xD000000000000010;
  v22[5] = 0x8000000240A0B0C0;
  v22[6] = v14;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  *(void *)&long long v28 = v14;
  sub_240A029B8();
  sub_240A02988();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v27);
  sub_240A03628();
  uint64_t v31 = v20;
  sub_2409A3FB0(0);
  sub_240A04558();
  sub_2409A419C(&qword_268C99900, sub_2409A3F7C);
  uint64_t v23 = v29;
  sub_240A04618();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v23);
  sub_240A039D8();
  sub_240A033D8();
  swift_release();
  sub_2409A413C();
  sub_2409A419C(&qword_268C99910, (void (*)(uint64_t))sub_2409A413C);
  uint64_t v24 = sub_240A033E8();
  swift_release();

  swift_bridgeObjectRelease();
  sub_2409A419C(&qword_268C99918, (void (*)(uint64_t))sub_2409A41E4);
  return v24;
}

void sub_2409A3F7C(uint64_t a1)
{
}

void sub_2409A3FB0(uint64_t a1)
{
}

void sub_2409A3FE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_2409A4048()
{
  unint64_t result = qword_268C99698;
  if (!qword_268C99698)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C99698);
  }
  return result;
}

unint64_t sub_2409A40A0()
{
  unint64_t result = qword_268C998F8;
  if (!qword_268C998F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C998F8);
  }
  return result;
}

uint64_t sub_2409A40F4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_2409A413C()
{
  if (!qword_268C99908)
  {
    sub_240A039D8();
    unint64_t v0 = sub_240A03358();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99908);
    }
  }
}

uint64_t sub_2409A419C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2409A41E4()
{
  if (!qword_268C99920)
  {
    sub_2409A413C();
    sub_2409A419C(&qword_268C99910, (void (*)(uint64_t))sub_2409A413C);
    unint64_t v0 = sub_240A03518();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99920);
    }
  }
}

uint64_t type metadata accessor for AudiogramDataTypeDetailViewController()
{
  uint64_t result = qword_268C99950;
  if (!qword_268C99950) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2409A42C8()
{
  return swift_initClassMetadata2();
}

void sub_2409A432C(char *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = &a1[qword_268C99948];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  id v5 = a3;

  sub_240A05258();
  __break(1u);
}

id sub_2409A43A8(void *a1)
{
  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for AudiogramDataTypeDetailViewController();
  return objc_msgSendSuper2(&v2, sel_viewDidLoad);
}

void sub_2409A43EC()
{
  id v0 = objc_msgSend(self, sel_sharedBehavior);
  if (!v0)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_features);

  if (!v2)
  {
LABEL_11:
    __break(1u);
    return;
  }
  unsigned int v3 = objc_msgSend(v2, sel_yodel);

  if (v3)
  {
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    sub_240A02828();
  }
  else
  {
    sub_240A03A08();
    uint64_t v4 = (void (*)(void))sub_240A03A18();
    v4();
  }
}

void sub_2409A4550(char a1)
{
  if (sub_2409A47DC())
  {
    sub_240A02AB8();
    sub_240A02AE8();
    unsigned int v3 = (void *)sub_240A02AC8();
    type metadata accessor for HearingTestArticleProvider();
    swift_allocObject();
    id v4 = (id)sub_240A02AA8();

    swift_release();
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F28EC0]), sel_initWithDelegate_, v1);
    objc_msgSend(v4, sel_setAnalyticsClient_, 2);
    objc_msgSend(v4, sel_setHealthStore_unitPreferenceController_initialDate_, *(void *)&v1[qword_268C99930], *(void *)&v1[qword_268C99938], 0);
  }
  objc_msgSend(v1, sel_presentViewController_animated_completion_, v4, a1 & 1, 0);
}

void sub_2409A469C()
{
  id v0 = objc_msgSend(self, sel_sharedBehavior);
  if (!v0)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_features);

  if (!v2)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    MEMORY[0x270F34020](v0);
    return;
  }
  unsigned int v3 = objc_msgSend(v2, sel_yodel);

  if (v3)
  {
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    id v0 = (id)sub_240A02828();
    goto LABEL_12;
  }
}

id sub_2409A47DC()
{
  swift_getObjectType();
  uint64_t v0 = sub_240A04018();
  MEMORY[0x270FA5388](v0);
  uint64_t v1 = sub_240A03F48();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  id v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409824B8(0, &qword_268C999C0);
  sub_240A03F68();
  id v5 = (void *)sub_240A03F58();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  id v6 = objc_msgSend(v5, sel_areAllRequirementsSatisfied);

  return v6;
}

void sub_2409A4BA0()
{
}

uint64_t sub_2409A4BD0()
{
  uint64_t v1 = *(void *)(v0 + qword_268C99948);

  return sub_2409A5128(v1);
}

id sub_2409A4C34()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudiogramDataTypeDetailViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2409A4C6C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + qword_268C99948);

  return sub_2409A5128(v2);
}

uint64_t sub_2409A4CDC()
{
  return type metadata accessor for AudiogramDataTypeDetailViewController();
}

void sub_2409A4CE4(void *a1, uint64_t a2, uint64_t a3)
{
  id v5 = (void *)(v3 + qword_268C99948);
  uint64_t v6 = *(void *)(v3 + qword_268C99948);
  *id v5 = a2;
  v5[1] = a3;
  swift_retain();
  sub_2409A5128(v6);
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F28EC0]), sel_initWithDelegate_, v3);
  objc_msgSend(v7, sel_setAnalyticsClient_, 2);
  objc_msgSend(v7, sel_setHealthStore_unitPreferenceController_initialDate_, *(void *)(v3 + qword_268C99930), *(void *)(v3 + qword_268C99938), 0);
  objc_msgSend(a1, sel_presentViewController_animated_completion_, v7, 1, 0);
}

uint64_t sub_2409A4DC8(void *a1, int a2, void *a3, void *aBlock)
{
  uint64_t v6 = _Block_copy(aBlock);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  id v8 = a3;
  id v9 = a1;
  sub_2409A4CE4(v8, (uint64_t)sub_2409A5170, v7);

  return swift_release();
}

void sub_2409A4E68(char *a1, uint64_t a2, void *a3)
{
  id v4 = (uint64_t *)&a1[qword_268C99948];
  id v5 = *(void (**)(id))&a1[qword_268C99948];
  if (v5)
  {
    id v6 = a3;
    uint64_t v7 = a1;
    sub_2409A5118((uint64_t)v5);
    v5(v6);
    sub_2409A5128((uint64_t)v5);
    uint64_t v8 = *v4;
  }
  else
  {
    id v9 = a3;
    uint64_t v10 = a1;
    uint64_t v8 = 0;
  }
  *id v4 = 0;
  v4[1] = 0;
  sub_2409A5128(v8);
}

id sub_2409A4F2C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_240A03998();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = &v3[qword_268C99948];
  *(void *)uint64_t v10 = 0;
  *((void *)v10 + 1) = 0;
  uint64_t v11 = v3;
  *(void *)&v11[qword_268C99930] = sub_240A03978();
  *(void *)&v11[qword_268C99938] = a3;
  uint64_t v12 = (void *)*MEMORY[0x263F09768];
  id v13 = a3;
  id v14 = v12;
  uint64_t v15 = (void *)sub_240A03978();
  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3D0]), sel_initWithFeatureIdentifier_healthStore_, v14, v15);

  *(void *)&v11[qword_268C99940] = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t v17 = self;
  swift_retain();
  id v18 = objc_msgSend(v17, sel_audiogramSampleType);
  id v19 = (id)sub_240A039E8();
  sub_2409A469C();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
  return v19;
}

uint64_t sub_2409A5118(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_2409A5128(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_2409A5138()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2409A5170()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t type metadata accessor for HearingAdvertisableFeatureSourceProvider()
{
  return self;
}

uint64_t sub_2409A51A8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for HearingAdvertisableFeatureSourceProvider();
  uint64_t result = swift_allocObject();
  *a1 = result;
  return result;
}

BOOL sub_2409A51E0()
{
  sub_2409A7520();
  uint64_t v1 = v0;
  if (v0) {

  }
  return v1 != 0;
}

uint64_t sub_2409A5220()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16HearingAppPlugin36AdvertisableFeatureNoiseAvailability_activeDeviceSource;
  uint64_t v2 = sub_240A03068();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

id sub_2409A528C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AdvertisableFeatureNoiseAvailability();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2409A5330()
{
  return type metadata accessor for AdvertisableFeatureNoiseAvailability();
}

uint64_t type metadata accessor for AdvertisableFeatureNoiseAvailability()
{
  uint64_t result = qword_268C999C8;
  if (!qword_268C999C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2409A5384()
{
  uint64_t result = sub_240A03068();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_2409A5414()
{
  uint64_t v0 = sub_240A03068();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409A55A8();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_240A06870;
  sub_240A03058();
  id v5 = (char *)objc_allocWithZone((Class)type metadata accessor for AdvertisableFeatureNoiseAvailability());
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(&v5[OBJC_IVAR____TtC16HearingAppPlugin36AdvertisableFeatureNoiseAvailability_activeDeviceSource], v3, v0);
  id v6 = sub_24097F840(1);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v7 = sub_240A03078();
  type metadata accessor for HearingEnvironmentNotificationAdvertisableFeatureSource();
  uint64_t v8 = (void *)swift_allocObject();
  v8[8] = 0;
  uint64_t v8[5] = 0;
  v8[6] = 0;
  swift_unknownObjectWeakInit();
  _OWORD v8[2] = v6;
  v8[3] = &off_26F4FACE0;
  v8[4] = v7;
  unint64_t v9 = sub_2409A5614();
  *(void *)(v4 + 32) = v8;
  *(void *)(v4 + 40) = v9;
  return v4;
}

void sub_2409A55A8()
{
  if (!qword_268C999D8)
  {
    sub_2409A566C(255, &qword_268C999E0);
    unint64_t v0 = sub_240A05358();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C999D8);
    }
  }
}

unint64_t sub_2409A5614()
{
  unint64_t result = qword_268C999E8;
  if (!qword_268C999E8)
  {
    type metadata accessor for HearingEnvironmentNotificationAdvertisableFeatureSource();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C999E8);
  }
  return result;
}

uint64_t sub_2409A566C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_2409A56BC(uint64_t a1, void (*a2)(char *, char *, uint64_t), char *a3, NSObject *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v57 = a3;
  uint64_t v58 = a6;
  os_log_t v55 = a4;
  uint64_t v56 = a5;
  unint64_t v54 = a2;
  uint64_t v7 = sub_240A02C18();
  uint64_t v59 = *(void *)(v7 - 8);
  uint64_t v60 = v7;
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_240A04018();
  uint64_t v61 = *(void *)(v10 - 8);
  uint64_t v62 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  id v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v53 - v14;
  sub_24097FDC0(0);
  MEMORY[0x270FA5388](v16 - 8);
  id v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_240A02E88();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v26 = (char *)&v53 - v25;
  MEMORY[0x270FA5388](v24);
  long long v28 = (char *)&v53 - v27;
  sub_24097FC94(a1, (uint64_t)v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_24097FC38((uint64_t)v18);
    sub_240A03FE8();
    unint64_t v29 = (unint64_t)v57;
    swift_bridgeObjectRetain_n();
    uint64_t v30 = sub_240A03FF8();
    os_log_type_t v31 = sub_240A04EC8();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v64 = v33;
      *(_DWORD *)uint64_t v32 = 136315394;
      uint64_t v34 = sub_240A05478();
      uint64_t v63 = sub_240981440(v34, v35, &v64);
      sub_240A050D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2080;
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v63 = sub_240981440((uint64_t)v54, v29, &v64);
      sub_240A050D8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_240976000, v30, v31, "%s Creating no feed items with identifier %s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v33, -1, -1);
      MEMORY[0x2456058A0](v32, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v61 + 8))(v15, v62);
    return MEMORY[0x263F8EE78];
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v28, v18, v19);
    uint64_t v57 = v9;
    sub_24098C970((uint64_t)v55, (uint64_t)v28, v56, (uint64_t)v9);
    sub_240A03FE8();
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
    v36(v26, v28, v19);
    uint64_t v37 = sub_240A03FF8();
    os_log_type_t v38 = sub_240A04EC8();
    int v39 = v38;
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v40 = swift_slowAlloc();
      os_log_t v55 = v37;
      uint64_t v41 = v40;
      uint64_t v56 = swift_slowAlloc();
      uint64_t v64 = v56;
      *(_DWORD *)uint64_t v41 = 136315395;
      uint64_t v53 = v41 + 4;
      uint64_t v42 = sub_240A05478();
      unint64_t v54 = v36;
      uint64_t v63 = sub_240981440(v42, v43, &v64);
      LODWORD(v58) = v39;
      sub_240A050D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2081;
      v54(v23, v26, v19);
      uint64_t v44 = sub_240A04C78();
      uint64_t v63 = sub_240981440(v44, v45, &v64);
      sub_240A050D8();
      swift_bridgeObjectRelease();
      unint64_t v46 = *(void (**)(char *, uint64_t))(v20 + 8);
      v46(v26, v19);
      os_log_t v47 = v55;
      _os_log_impl(&dword_240976000, v55, (os_log_type_t)v58, "%s Creating feed item generator for featureStatus %{private}s", (uint8_t *)v41, 0x16u);
      uint64_t v48 = v56;
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v48, -1, -1);
      MEMORY[0x2456058A0](v41, -1, -1);
    }
    else
    {
      unint64_t v46 = *(void (**)(char *, uint64_t))(v20 + 8);
      v46(v26, v19);
    }
    (*(void (**)(char *, uint64_t))(v61 + 8))(v13, v62);
    sub_24097E96C(0, &qword_26AFD4908, MEMORY[0x263F45630], MEMORY[0x263F8E0F8]);
    uint64_t v50 = v59;
    unint64_t v51 = (*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
    uint64_t v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = xmmword_240A06870;
    (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v49 + v51, v57, v60);
    v46(v28, v19);
  }
  return v49;
}

uint64_t sub_2409A5D9C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16HearingAppPlugin39HeadphoneNotificationsGeneratorPipeline_domain;
  uint64_t v2 = sub_240A02C78();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_2409A5E4C()
{
  return type metadata accessor for HeadphoneNotificationsGeneratorPipeline();
}

uint64_t sub_2409A5E54()
{
  uint64_t v1 = sub_240A02CA8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_2409A5F00()
{
  uint64_t v1 = sub_240A02CA8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_2409A5F9C()
{
  uint64_t v1 = sub_240A02CA8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_2409A6048()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2409A6080()
{
  sub_24097FDC0(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v12 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = sub_240A02CA8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = sub_240A02E88();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v0 + v3, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v3, v8);
  }
  unint64_t v10 = (((v12 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + v6 + 16) & ~v6;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v10, v4);
  swift_release();

  return MEMORY[0x270FA0238](v0, ((((v7 + v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | v6 | 7);
}

uint64_t sub_2409A626C()
{
  sub_24097FDC0(0);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  unint64_t v3 = (*(void *)(*(void *)(v1 - 8) + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(sub_240A02CA8() - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void (**)(char *, char *, uint64_t))(v0 + v3);
  uint64_t v8 = *(char **)(v0 + v3 + 8);
  uint64_t v9 = *(void *)(v0 + v6);
  uint64_t v10 = *(void *)(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_2409A56BC(v0 + v2, v7, v8, (v0 + v5), v9, v10);
}

void sub_2409A6384()
{
  if (!qword_26AFD48E8)
  {
    sub_2409824B8(255, (unint64_t *)&qword_26AFD4898);
    sub_2409A6418(&qword_26AFD48A0, (unint64_t *)&qword_26AFD4898);
    unint64_t v0 = sub_240A051D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD48E8);
    }
  }
}

uint64_t sub_2409A6418(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2409824B8(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2409A646C()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16HearingAppPlugin24HearingAppPluginDelegate_logger;
  uint64_t v2 = sub_240A04018();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

unint64_t sub_2409A6514()
{
  unint64_t result = qword_26AFD4578;
  if (!qword_26AFD4578)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD4578);
  }
  return result;
}

uint64_t sub_2409A656C(uint64_t a1)
{
  sub_240980834(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2409A65C8()
{
  unint64_t result = qword_26AFD3F80;
  if (!qword_26AFD3F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD3F80);
  }
  return result;
}

uint64_t sub_2409A661C@<X0>(uint64_t a1@<X8>)
{
  if (qword_26AFD4988 != -1) {
    swift_once();
  }
  id v2 = objc_msgSend((id)qword_26AFD63C8, sel_noiseThresholdFooterLinkURL);
  sub_240A02888();

  uint64_t v3 = sub_240A028A8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(a1, 0, 1, v3);
}

uint64_t sub_2409A66E4()
{
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  return sub_240A02828();
}

unint64_t sub_2409A6784()
{
  return 0xD000000000000013;
}

uint64_t sub_2409A67A0()
{
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  id v0 = (id)qword_26AFD6468;

  return sub_240A02ED8();
}

uint64_t sub_2409A682C(uint64_t a1)
{
  uint64_t v2 = sub_240A02E88();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x263F435C8])
  {
    if (qword_26AFD4988 != -1) {
      swift_once();
    }
    uint64_t v7 = (void *)qword_26AFD63C8;
    id v8 = objc_msgSend((id)qword_26AFD63C8, sel_localizedNoiseThresholdValue_, objc_msgSend((id)qword_26AFD63C8, sel_noiseThresholdCurrentValue));
    uint64_t v9 = sub_240A04C58();
    uint64_t v11 = v10;

    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    sub_240A02828();
    sub_2409A6FA8();
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_240A06870;
    *(void *)(v12 + 56) = MEMORY[0x263F8D310];
    unint64_t v13 = sub_2409800D4();
    *(void *)(v12 + 64) = v13;
    *(void *)(v12 + 32) = v9;
    *(void *)(v12 + 40) = v11;
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v14 = sub_240A04C28();
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v17 = objc_msgSend(v7, sel_noiseThresholdMinutesThreshold);
    sub_240A02828();
    uint64_t v18 = swift_allocObject();
    long long v37 = xmmword_240A06800;
    *(_OWORD *)(v18 + 16) = xmmword_240A06800;
    *(void *)(v18 + 56) = MEMORY[0x263F8D310];
    *(void *)(v18 + 64) = v13;
    uint64_t v19 = MEMORY[0x263F8D6C8];
    *(void *)(v18 + 32) = v9;
    *(void *)(v18 + 40) = v11;
    uint64_t v20 = MEMORY[0x263F8D750];
    *(void *)(v18 + 96) = v19;
    *(void *)(v18 + 104) = v20;
    *(void *)(v18 + 72) = v17;
    uint64_t v21 = sub_240A04C28();
    uint64_t v23 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2409A6F50();
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = v37;
    *(void *)(v24 + 32) = v14;
    *(void *)(v24 + 40) = v16;
    *(void *)(v24 + 48) = v21;
    *(void *)(v24 + 56) = v23;
  }
  else if (v6 == *MEMORY[0x263F435D0])
  {
    sub_2409A6F50();
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_240A06800;
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    *(void *)(v24 + 32) = sub_240A02828();
    *(void *)(v24 + 40) = v25;
    *(void *)(v24 + 48) = sub_240A02828();
    *(void *)(v24 + 56) = v26;
  }
  else if (v6 == *MEMORY[0x263F435C0])
  {
    uint64_t v27 = sub_240A02F78();
    uint64_t v29 = v28;
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    sub_240A02828();
    sub_2409A6F50();
    uint64_t v24 = swift_allocObject();
    long long v37 = xmmword_240A06870;
    *(_OWORD *)(v24 + 16) = xmmword_240A06870;
    sub_2409A6FA8();
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = v37;
    *(void *)(v30 + 56) = MEMORY[0x263F8D310];
    *(void *)(v30 + 64) = sub_2409800D4();
    *(void *)(v30 + 32) = v27;
    *(void *)(v30 + 40) = v29;
    uint64_t v31 = sub_240A04C28();
    uint64_t v33 = v32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v24 + 32) = v31;
    *(void *)(v24 + 40) = v33;
  }
  else if (v6 == *MEMORY[0x263F435B8])
  {
    char v34 = sub_240A02F48();
    sub_2409A6F50();
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_240A06870;
    if (v34)
    {
      if (qword_26AFD4A20 != -1) {
        swift_once();
      }
    }
    else if (qword_26AFD4A20 != -1)
    {
      swift_once();
    }
    *(void *)(v24 + 32) = sub_240A02828();
    *(void *)(v24 + 40) = v35;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return MEMORY[0x263F8EE78];
  }
  return v24;
}

void sub_2409A6F50()
{
  if (!qword_26AFD4930)
  {
    unint64_t v0 = sub_240A05358();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD4930);
    }
  }
}

void sub_2409A6FA8()
{
  if (!qword_26AFD4940)
  {
    sub_24098EA68();
    unint64_t v0 = sub_240A05358();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD4940);
    }
  }
}

ValueMetadata *type metadata accessor for AudiogramPDFPage()
{
  return &type metadata for AudiogramPDFPage;
}

void sub_2409A7010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_240A04018();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a3 + 16);
  if (v8)
  {
    uint64_t v16 = v5;
    uint64_t v17 = v4;
    uint64_t v9 = (void *)(a3 + 32);
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    double v10 = 0.0;
    uint64_t v11 = v8;
    do
    {
      sub_24098BDC0(v9, v9[3]);
      sub_240A03318();
      double v10 = v10 + CGRectGetHeight(v19);
      v9 += 5;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    uint64_t v5 = v16;
    uint64_t v4 = v17;
  }
  else
  {
    double v10 = 0.0;
  }
  sub_240A03178();
  if (CGRectGetHeight(v20) - v10 >= 0.0)
  {
    if (v8)
    {
      uint64_t v15 = (void *)(a3 + 32);
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      do
      {
        sub_24098BDC0(v15, v15[3]);
        sub_240A03318();
        CGRectGetHeight(v21);
        sub_24098BDC0(v15, v15[3]);
        sub_240A03338();
        sub_240A03148();
        v15 += 5;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_240A03FE8();
    uint64_t v12 = sub_240A03FF8();
    os_log_type_t v13 = sub_240A04EB8();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_240976000, v12, v13, "PDF page is too small to render all elements. Elements will be clipped.", v14, 2u);
      MEMORY[0x2456058A0](v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

double sub_2409A72B8(uint64_t a1, uint64_t a2)
{
  sub_240A03178();
  double v4 = v3;
  sub_240A03178();
  CGRectGetWidth(v9);
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5)
  {
    uint64_t v6 = (void *)(a2 + 32);
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    double v7 = 0.0;
    do
    {
      sub_24098BDC0(v6, v6[3]);
      sub_240A03318();
      double v7 = v7 + CGRectGetHeight(v10);
      v6 += 5;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  return v4;
}

void sub_2409A7394(uint64_t a1, uint64_t a2)
{
  sub_2409A7010(a1, a2, *v2);
}

uint64_t sub_2409A739C()
{
  return sub_240A03178();
}

double sub_2409A73C0(uint64_t a1)
{
  return sub_2409A72B8(a1, *v1);
}

uint64_t sub_2409A73C8(uint64_t a1)
{
  double v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  unint64_t v4 = sub_2409A74CC();
  *double v3 = v1;
  v3[1] = sub_2409A2324;
  return MEMORY[0x270F33478](a1, v4);
}

unint64_t sub_2409A7478()
{
  unint64_t result = qword_268C999F8;
  if (!qword_268C999F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C999F8);
  }
  return result;
}

unint64_t sub_2409A74CC()
{
  unint64_t result = qword_268C99A00;
  if (!qword_268C99A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99A00);
  }
  return result;
}

void sub_2409A7520()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_240A03068();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x263F43958])
  {
    double v7 = self;
    id v8 = objc_msgSend(v7, sel_sharedInstance);
    if (!v8)
    {
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    CGRect v9 = v8;
    CGRect v10 = (uint64_t (*)())objc_msgSend(v7, sel_activePairedDeviceSelectorBlock);
    if (v10)
    {
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v10;
      uint64_t v12 = swift_allocObject();
      CGRect v10 = sub_2409A7A84;
      *(void *)(v12 + 16) = sub_2409A7A84;
      *(void *)(v12 + 24) = v11;
      uint64_t v29 = sub_2409A7ABC;
      uint64_t v30 = v12;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v26 = 1107296256;
      uint64_t v27 = sub_2409A7AE8;
      uint64_t v28 = &unk_26F4FAAB8;
      os_log_type_t v13 = _Block_copy(&aBlock);
      swift_release();
    }
    else
    {
      os_log_type_t v13 = 0;
    }
    id v20 = objc_msgSend(v9, sel_getAllDevicesWithArchivedDevicesMatching_, v13);
    sub_2409A5128((uint64_t)v10);
    _Block_release(v13);

    if (!v20) {
      goto LABEL_32;
    }
    sub_2409A7A0C();
    unint64_t v16 = sub_240A04D18();

    if (v16 >> 62)
    {
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v23 = sub_240A05288();
      swift_bridgeObjectRelease();
      if (!v23) {
        goto LABEL_24;
      }
    }
    else if (!*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_24;
    }
    if ((v16 & 0xC000000000000001) != 0) {
      goto LABEL_27;
    }
    if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_23:
      id v22 = *(id *)(v16 + 32);
      goto LABEL_24;
    }
    __break(1u);
  }
  else
  {
    if (v6 != *MEMORY[0x263F43960])
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return;
    }
    uint64_t v14 = self;
    uint64_t v15 = (id *)objc_msgSend(v14, sel_sharedInstance);
    if (!v15) {
      goto LABEL_33;
    }
    unint64_t v16 = (unint64_t)v15;
    CGRect v10 = (uint64_t (*)())objc_msgSend(v14, sel_activeDeviceSelectorBlock);
    if (v10)
    {
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = v10;
      uint64_t v18 = swift_allocObject();
      CGRect v10 = sub_2409A7B68;
      *(void *)(v18 + 16) = sub_2409A7B68;
      *(void *)(v18 + 24) = v17;
      uint64_t v29 = sub_2409A7B6C;
      uint64_t v30 = v18;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v26 = 1107296256;
      uint64_t v27 = sub_2409A7AE8;
      uint64_t v28 = &unk_26F4FAB30;
      CGRect v19 = _Block_copy(&aBlock);
      swift_release();
      goto LABEL_18;
    }
  }
  CGRect v19 = 0;
LABEL_18:
  id v21 = objc_msgSend((id)v16, sel_getAllDevicesWithArchivedDevicesMatching_, v19);
  sub_2409A5128((uint64_t)v10);
  _Block_release(v19);

  if (v21)
  {
    sub_2409A7A0C();
    unint64_t v16 = sub_240A04D18();

    if (v16 >> 62)
    {
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v24 = sub_240A05288();
      swift_bridgeObjectRelease();
      if (!v24) {
        goto LABEL_24;
      }
LABEL_21:
      if ((v16 & 0xC000000000000001) == 0)
      {
        if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_23;
        }
        __break(1u);
        goto LABEL_31;
      }
LABEL_27:
      MEMORY[0x245604E50](0, v16);
      goto LABEL_24;
    }
    if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_21;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_34:
  __break(1u);
}

unint64_t sub_2409A7A0C()
{
  unint64_t result = qword_268C99A08;
  if (!qword_268C99A08)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268C99A08);
  }
  return result;
}

uint64_t sub_2409A7A4C()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2409A7A84()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_2409A7AAC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2409A7ABC()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_2409A7AE8(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = *(uint64_t (**)(void *))(a1 + 32);
  id v4 = a2;
  LOBYTE(v2) = v3(v2);

  return v2 & 1;
}

uint64_t sub_2409A7B34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2409A7B44()
{
  return swift_release();
}

uint64_t sub_2409A7B4C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2409A7B70(char a1)
{
  if (a1)
  {
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
  }
  else if (qword_26AFD4A20 != -1)
  {
    swift_once();
  }
  return sub_240A02828();
}

id sub_2409A7C7C()
{
  return *v0;
}

uint64_t sub_2409A7C84@<X0>(uint64_t a1@<X8>)
{
  return sub_2409A7CC4(MEMORY[0x263F43D88], MEMORY[0x263F43D98], a1);
}

uint64_t sub_2409A7CA4@<X0>(uint64_t a1@<X8>)
{
  return sub_2409A7CC4(MEMORY[0x263F448F8], MEMORY[0x263F44900], a1);
}

uint64_t sub_2409A7CC4@<X0>(unsigned int *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a2(0);
  int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(a3, v4, v5);
}

uint64_t sub_2409A7D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_2409A8904();

  return MEMORY[0x270F32C88](a1, a2, a3, v8, a4);
}

uint64_t sub_2409A7D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2409A7DC8(a1, a2, a3, MEMORY[0x263F43C60]);
}

uint64_t sub_2409A7DB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2409A7DC8(a1, a2, a3, MEMORY[0x263F43C68]);
}

uint64_t sub_2409A7DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, unint64_t, uint64_t))
{
  unint64_t v7 = sub_2409A8904();

  return a4(a1, a2, v7, a3);
}

uint64_t sub_2409A7E30(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  unint64_t v4 = sub_2409A8958();
  *uint64_t v3 = v1;
  v3[1] = sub_2409A2324;
  return MEMORY[0x270F33478](a1, v4);
}

uint64_t sub_2409A7EDC(char a1, int a2, char a3)
{
  uint64_t v6 = sub_240A04A88();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_240A04A98();
  uint64_t v27 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  CGRect v10 = &v23[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v23[-v11];
  os_log_type_t v13 = self;
  uint64_t v14 = 1;
  if (a3) {
    uint64_t v14 = 2;
  }
  uint64_t v26 = v14;
  uint64_t v15 = &selRef_hk_hearingHealthAudiogramLeftEarLineColor;
  if (a3) {
    uint64_t v15 = &selRef_hk_hearingHealthAudiogramRightEarLineColor;
  }
  MEMORY[0x245604520]([v13 *v15]);
  sub_240997540();
  unint64_t v16 = (void *)sub_240A04FD8();
  uint64_t v29 = MEMORY[0x263F8EE78];
  if (a1)
  {
    int v24 = a2;
    uint64_t v25 = v7;
    sub_2409A87C8(0, &qword_268C99A10, MEMORY[0x263F8E0F8]);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_240A06800;
    id v18 = v16;
    sub_240A04A68();
    sub_240A04A58();
    uint64_t v28 = v17;
    sub_2409A8780((unint64_t *)&qword_268C99A18, MEMORY[0x263F46290]);
    sub_2409A87C8(0, &qword_268C99A20, MEMORY[0x263F8D488]);
    sub_2409A8828();
    sub_240A05138();
    sub_240A04A48();
    sub_240A04A18();
    MEMORY[0x245604930]();
    if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_240A04D58();
    }
    sub_240A04D68();
    sub_240A04D38();
    uint64_t v7 = v25;
    (*(void (**)(unsigned char *, uint64_t))(v27 + 8))(v12, v25);
    LOBYTE(a2) = v24;
  }
  if (a2)
  {
    sub_2409A87C8(0, &qword_268C99A10, MEMORY[0x263F8E0F8]);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_240A06870;
    id v20 = v16;
    sub_240A04A58();
    uint64_t v28 = v19;
    sub_2409A8780((unint64_t *)&qword_268C99A18, MEMORY[0x263F46290]);
    sub_2409A87C8(0, &qword_268C99A20, MEMORY[0x263F8D488]);
    sub_2409A8828();
    sub_240A05138();
    sub_240A04A48();
    sub_240A04A18();
    MEMORY[0x245604930]();
    if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_240A04D58();
    }
    sub_240A04D68();
    sub_240A04D38();
    (*(void (**)(unsigned char *, uint64_t))(v27 + 8))(v10, v7);
  }
  uint64_t v21 = MEMORY[0x245604660](v29);
  swift_bridgeObjectRelease();

  return v21;
}

id sub_2409A83EC(uint64_t a1, __int16 a2, uint64_t a3, unsigned int a4, char a5)
{
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F089B8]), sel_init);
  uint64_t v9 = MEMORY[0x245602EC0]();
  CGRect v10 = self;
  char v11 = a5 & 1;
  uint64_t v12 = &selRef_hk_hearingHealthAudiogramLeftEarLineColor;
  if (a5) {
    uint64_t v12 = &selRef_hk_hearingHealthAudiogramRightEarLineColor;
  }
  uint64_t v13 = MEMORY[0x245604520]([v10 *v12]);
  sub_24099748C(v13, v9);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v14 = &off_2650DA000;
  if ((a2 & 0xFF00) != 0x200)
  {
    uint64_t v15 = (void *)sub_2409A7EDC(BYTE1(a4) & 1, HIWORD(a4) & 1, v11);
    id v16 = objc_msgSend(self, sel_textAttachmentWithImage_, v15);
    uint64_t v17 = (void *)sub_240A03268();
    objc_msgSend(v17, sel_capHeight);
    objc_msgSend(v15, sel_size);
    objc_msgSend(v15, sel_size);
    objc_msgSend(v15, sel_size);
    objc_msgSend(v16, sel_setBounds_, sub_2409A876C());
    id v18 = objc_msgSend(self, sel_attributedStringWithAttachment_, v16);
    objc_msgSend(v8, sel_appendAttributedString_, v18);

    id v19 = objc_allocWithZone(MEMORY[0x263F086A0]);
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    id v20 = (void *)sub_240A04C18();
    type metadata accessor for Key(0);
    sub_2409A8780((unint64_t *)&qword_268C993D8, type metadata accessor for Key);
    uint64_t v21 = (void *)sub_240A04B98();
    swift_bridgeObjectRelease();
    id v22 = objc_msgSend(v19, sel_initWithString_attributes_, v20, v21);

    objc_msgSend(v8, sel_appendAttributedString_, v22);
    uint64_t v14 = &off_2650DA000;
  }
  sub_2409A7B70(v11);
  id v23 = objc_allocWithZone(MEMORY[0x263F086A0]);
  int v24 = (void *)sub_240A04C18();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_2409A8780((unint64_t *)&qword_268C993D8, type metadata accessor for Key);
  uint64_t v25 = (void *)sub_240A04B98();
  swift_bridgeObjectRelease();
  id v26 = objc_msgSend(v23, (SEL)v14[280], v24, v25);

  objc_msgSend(v8, sel_appendAttributedString_, v26);
  return v8;
}

double sub_2409A876C()
{
  return 0.0;
}

uint64_t sub_2409A8780(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2409A87C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_240A04A88();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_2409A8828()
{
  unint64_t result = qword_268C99A28;
  if (!qword_268C99A28)
  {
    sub_2409A87C8(255, &qword_268C99A20, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99A28);
  }
  return result;
}

ValueMetadata *type metadata accessor for AudiogramPDFOverlayContextPillTitleText()
{
  return &type metadata for AudiogramPDFOverlayContextPillTitleText;
}

unint64_t sub_2409A88B0()
{
  unint64_t result = qword_268C99A38;
  if (!qword_268C99A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99A38);
  }
  return result;
}

unint64_t sub_2409A8904()
{
  unint64_t result = qword_268C99A40;
  if (!qword_268C99A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99A40);
  }
  return result;
}

unint64_t sub_2409A8958()
{
  unint64_t result = qword_268C99A48;
  if (!qword_268C99A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99A48);
  }
  return result;
}

uint64_t type metadata accessor for AudiogramPDFJapanDisclaimerPageNumberedPage()
{
  uint64_t result = qword_268C99A50;
  if (!qword_268C99A50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2409A89F8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2409A8A38()
{
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  uint64_t result = sub_240A02828();
  qword_268C9A9E8 = result;
  unk_268C9A9F0 = v1;
  return result;
}

uint64_t sub_2409A8AE4()
{
  uint64_t result = MEMORY[0x245602EB0]();
  qword_268C9A9F8 = result;
  return result;
}

id sub_2409A8B04()
{
  if (qword_268C99300 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_268C99308;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  if (v0 != -1) {
    swift_once();
  }
  id v1 = objc_allocWithZone(MEMORY[0x263F086A0]);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v2 = (void *)sub_240A04C18();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_2409A8DFC((unint64_t *)&qword_268C993D8, type metadata accessor for Key);
  uint64_t v3 = (void *)sub_240A04B98();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v1, sel_initWithString_attributes_, v2, v3);

  return v4;
}

id sub_2409A8C64(void *a1)
{
  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for AudiogramPDFJapanDisclaimerPageNumberedPage();
  return objc_msgSendSuper2(&v2, sel_init);
}

id sub_2409A8CA8(void *a1, uint64_t a2, void *a3)
{
  type metadata accessor for ImageInitializationOption(0);
  sub_2409A8DFC(&qword_268C99458, type metadata accessor for ImageInitializationOption);
  sub_240A04BA8();
  id v5 = a3;
  uint64_t v6 = (void *)sub_240A04B98();
  swift_bridgeObjectRelease();
  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for AudiogramPDFJapanDisclaimerPageNumberedPage();
  id v7 = objc_msgSendSuper2(&v10, sel_initWithImage_options_, v5, v6);

  id v8 = v7;
  if (v8) {

  }
  return v8;
}

id sub_2409A8DBC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudiogramPDFJapanDisclaimerPageNumberedPage();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2409A8DF4()
{
  return type metadata accessor for AudiogramPDFJapanDisclaimerPageNumberedPage();
}

uint64_t sub_2409A8DFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PDFVStackWithMinimumWidth.allowsMultiplePages.getter(uint64_t a1, char a2)
{
  return a2 & 1;
}

double PDFVStackWithMinimumWidth.init(spacing:allowsMultiplePages:_:)(double a1, uint64_t a2, void (*a3)(void))
{
  return a1;
}

uint64_t PDFVStackWithMinimumWidth.init(spacing:allowsMultiplePages:_:)(uint64_t a1, uint64_t a2)
{
  return a2;
}

void PDFVStackWithMinimumWidth.render(context:document:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *(void *)(a3 + 16);
  if (v4)
  {
    uint64_t v7 = a3 + 32;
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    unint64_t v5 = 0;
    while (1)
    {
      if (v5 == v4)
      {
        long long v11 = 0u;
        long long v12 = 0u;
        unint64_t v5 = v4;
        long long v10 = 0u;
      }
      else
      {
        if (v5 >= v4)
        {
          __break(1u);
          return;
        }
        sub_240991D58(v7 + 40 * v5, (uint64_t)v9);
        *(void *)&long long v10 = v5;
        sub_240980754(v9, (uint64_t)&v10 + 8);
        ++v5;
      }
      sub_2409A2558((uint64_t)&v10, (uint64_t)&v13);
      if (!v15)
      {
        swift_bridgeObjectRelease();
        return;
      }
      uint64_t v6 = v13;
      sub_240980754(&v14, (uint64_t)&v10);
      if (a4)
      {
        sub_24098BDC0(&v10, *((uint64_t *)&v11 + 1));
        sub_240A03328();
        if (sub_240A03118() & 1) == 0 && (sub_240A03108()) {
          sub_240A03138();
        }
      }
      sub_24098BDC0(&v10, *((uint64_t *)&v11 + 1));
      sub_240A03338();
      if (v6 < (uint64_t)(v4 - 1)) {
        sub_240A03148();
      }
      sub_240981514((uint64_t)&v10);
    }
  }
}

double PDFVStackWithMinimumWidth.boundingRectForContent(in:)(uint64_t a1, uint64_t a2, char a3, double a4)
{
  if ((a3 & 1) == 0) {
    return PDFVStackWithMinimumWidth.minimumBoundingRectForAllContent(in:)(a4, a1, a2);
  }
  if (*(void *)(a2 + 16))
  {
    unint64_t v5 = (void *)(a2 + 32);
    sub_240A03168();
    sub_24098BDC0(v5, *(void *)(a2 + 56));
    sub_240A03328();
    sub_240A030D8();
    double v7 = v6;
    swift_release();
  }
  else
  {
    sub_240A030D8();
    return v8;
  }
  return v7;
}

double PDFVStackWithMinimumWidth.minimumBoundingRectForContent(in:)(uint64_t a1, uint64_t a2, char a3, double a4)
{
  if ((a3 & 1) == 0) {
    return PDFVStackWithMinimumWidth.minimumBoundingRectForAllContent(in:)(a4, a1, a2);
  }
  if (*(void *)(a2 + 16))
  {
    unint64_t v5 = (void *)(a2 + 32);
    sub_240A03168();
    sub_24098BDC0(v5, *(void *)(a2 + 56));
    sub_240A03328();
    sub_240A030D8();
    double v7 = v6;
    swift_release();
  }
  else
  {
    sub_240A030D8();
    return v8;
  }
  return v7;
}

double sub_2409A9244(uint64_t a1, void *a2)
{
  if (a2[2])
  {
    uint64_t v3 = a2 + 4;
    sub_240A03168();
    sub_24098BDC0(v3, a2[7]);
    sub_240A03328();
    sub_240A030D8();
    double v5 = v4;
    swift_release();
  }
  else
  {
    sub_240A030D8();
    return v6;
  }
  return v5;
}

double PDFVStackWithMinimumWidth.minimumBoundingRectForAllContent(in:)(double a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (v3)
  {
    sub_240A03168();
    unint64_t v6 = *(void *)(a3 + 16);
    uint64_t v7 = (v6 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    double v8 = 0.0;
    BOOL v9 = v6 < 2 || v7 == 0;
    double v10 = 0.0;
    if (!v9)
    {
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v11 = a3 + 32;
      do
      {
        sub_240991D58(v11, (uint64_t)v26);
        sub_24098BDC0(v26, v26[3]);
        sub_240A03328();
        CGFloat x = v27.origin.x;
        CGFloat y = v27.origin.y;
        CGFloat width = v27.size.width;
        CGFloat height = v27.size.height;
        double v16 = v10 + CGRectGetHeight(v27);
        v28.origin.CGFloat x = x;
        v28.origin.CGFloat y = y;
        v28.size.CGFloat width = width;
        v28.size.CGFloat height = height;
        CGRectGetHeight(v28);
        sub_240A03148();
        sub_240A03148();
        double v10 = v16 + a1;
        v29.origin.CGFloat x = x;
        v29.origin.CGFloat y = y;
        v29.size.CGFloat width = width;
        v29.size.CGFloat height = height;
        double v17 = CGRectGetWidth(v29);
        if (v8 <= v17) {
          double v8 = v17;
        }
        sub_240981514((uint64_t)v26);
        v11 += 40;
        --v7;
      }
      while (v7);
      sub_240A03B98();
    }
    sub_24098BDC0((void *)(a3 + 32 + 40 * v3 - 40), *(void *)(a3 + 32 + 40 * v3 - 16));
    sub_240A03328();
    CGFloat v18 = v30.origin.x;
    CGFloat v19 = v30.origin.y;
    CGFloat v20 = v30.size.width;
    CGFloat v21 = v30.size.height;
    CGRectGetHeight(v30);
    v31.origin.CGFloat x = v18;
    v31.origin.CGFloat y = v19;
    v31.size.CGFloat width = v20;
    v31.size.CGFloat height = v21;
    CGRectGetWidth(v31);
    sub_240A030D8();
    CGRectGetWidth(v32);
    sub_240A030D8();
    double v23 = v22;
    swift_release();
  }
  else
  {
    sub_240A030D8();
    return v24;
  }
  return v23;
}

unint64_t sub_2409A952C()
{
  unint64_t result = qword_268C99A60;
  if (!qword_268C99A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99A60);
  }
  return result;
}

void sub_2409A9580(uint64_t a1, uint64_t a2)
{
  PDFVStackWithMinimumWidth.render(context:document:)(a1, a2, *(void *)v2, *(unsigned char *)(v2 + 16));
}

double sub_2409A9590(uint64_t a1)
{
  uint64_t v2 = *(void **)v1;
  if (*(unsigned char *)(v1 + 16) == 1) {
    return sub_2409A9244(a1, v2);
  }
  else {
    return PDFVStackWithMinimumWidth.minimumBoundingRectForAllContent(in:)(*(double *)(v1 + 8), a1, (uint64_t)v2);
  }
}

uint64_t sub_2409A95D0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  unint64_t v4 = sub_2409A9804();
  *uint64_t v3 = v1;
  v3[1] = sub_2409A2324;
  return MEMORY[0x270F33478](a1, v4);
}

uint64_t sub_2409A9680(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return a1;
}

uint64_t assignWithCopy for PDFVStackWithMinimumWidth(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for PDFVStackWithMinimumWidth(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for PDFVStackWithMinimumWidth(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for PDFVStackWithMinimumWidth(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PDFVStackWithMinimumWidth(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PDFVStackWithMinimumWidth()
{
  return &type metadata for PDFVStackWithMinimumWidth;
}

unint64_t sub_2409A9804()
{
  unint64_t result = qword_268C99A70;
  if (!qword_268C99A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99A70);
  }
  return result;
}

uint64_t sub_2409A9858(char a1, char a2)
{
  unint64_t v3 = 0xD000000000000028;
  unint64_t v4 = 0x8000000240A0A0A0;
  switch(a1)
  {
    case 1:
      unint64_t v4 = 0x8000000240A0A0D0;
      unint64_t v3 = 0xD000000000000024;
      break;
    case 2:
      unint64_t v3 = 0xD00000000000002DLL;
      double v5 = "com.apple.health.Education.HeadphoneListening";
      goto LABEL_5;
    case 3:
      unint64_t v3 = 0xD000000000000026;
      double v5 = "com.apple.health.Education.HearingAids";
LABEL_5:
      unint64_t v4 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xD000000000000028;
  unint64_t v7 = 0x8000000240A0A0A0;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0x8000000240A0A0D0;
      unint64_t v6 = 0xD000000000000024;
      break;
    case 2:
      unint64_t v6 = 0xD00000000000002DLL;
      double v8 = "com.apple.health.Education.HeadphoneListening";
      goto LABEL_10;
    case 3:
      unint64_t v6 = 0xD000000000000026;
      double v8 = "com.apple.health.Education.HearingAids";
LABEL_10:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v3 == v6 && v4 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_240A05368();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_2409A99D0(char a1, char a2)
{
  if (*(void *)&aNone_2[8 * a1] == *(void *)&aNone_2[8 * a2]
    && *(void *)&aRemotediseedex_1[8 * a1 + 24] == *(void *)&aRemotediseedex_1[8 * a2 + 24])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_240A05368();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_2409A9A58@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  v12[0] = a2;
  uint64_t v3 = sub_240A04A88();
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = sub_240A04A98();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    sub_240A05368();
    swift_bridgeObjectRelease();
    double v8 = &selRef_hk_hearingHealthAudiogramRightEarLineColor;
  }
  else
  {
    swift_bridgeObjectRelease();
    double v8 = &selRef_hk_hearingHealthAudiogramLeftEarLineColor;
  }
  id v9 = objc_msgSend(self, *v8, v12[0]);
  MEMORY[0x245604520](v9);
  sub_240997540();
  sub_240A04FD8();
  id v10 = objc_msgSend(self, sel_whiteColor);
  v12[1] = MEMORY[0x263F8EE78];
  sub_2409AA238();
  sub_2409AA290(0, &qword_268C99A20, MEMORY[0x263F8D488]);
  sub_2409A8828();
  sub_240A05138();
  sub_240A04A48();
  sub_240A04A38();
  sub_240A02818();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2409A9CE4(char a1, char a2)
{
  uint64_t v20 = sub_240A04A98();
  uint64_t v4 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240A04A88();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v19 - v12;
  if (a2)
  {
    sub_240A05368();
    swift_bridgeObjectRelease();
    long long v14 = &selRef_hk_hearingHealthAudiogramRightEarLineColor;
  }
  else
  {
    swift_bridgeObjectRelease();
    long long v14 = &selRef_hk_hearingHealthAudiogramLeftEarLineColor;
  }
  sub_2409A9FC0(a1 & 1);
  id v15 = [self *v14];
  MEMORY[0x245604520](v15);
  sub_240997540();
  sub_240A04FD8();
  id v16 = objc_msgSend(self, sel_whiteColor);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  sub_240A04A48();
  uint64_t v17 = sub_240A04A18();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v20);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  return v17;
}

uint64_t sub_2409A9FC0(char a1)
{
  uint64_t v2 = sub_240A04A88();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    sub_2409AA290(0, &qword_268C99A10, MEMORY[0x263F8E0F8]);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_240A06870;
    sub_240A04A68();
    uint64_t v11 = v6;
  }
  else
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
  }
  sub_2409AA238();
  sub_2409AA290(0, &qword_268C99A20, MEMORY[0x263F8D488]);
  sub_2409A8828();
  sub_240A05138();
  sub_2409AA290(0, &qword_268C99A10, MEMORY[0x263F8E0F8]);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_240A06930;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 16))(v8 + v7, v5, v2);
  sub_240A04A58();
  sub_240A04A78();
  uint64_t v11 = v8;
  sub_2409AA238();
  sub_2409AA290(0, &qword_268C99A20, MEMORY[0x263F8D488]);
  sub_2409A8828();
  sub_240A05138();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_2409AA238()
{
  unint64_t result = qword_268C99A18;
  if (!qword_268C99A18)
  {
    sub_240A04A88();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99A18);
  }
  return result;
}

void sub_2409AA290(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_240A04A88();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

double PDFVStackWithReducedWidth.init(subtractingWidth:spacing:_:)(void (*a1)(void), double a2, double a3)
{
  return a3;
}

double PDFVStackWithReducedWidth.subtractingWidth.getter(double a1, double a2)
{
  return a2;
}

uint64_t PDFVStackWithReducedWidth.render(context:document:)()
{
  uint64_t v0 = sub_240A03EE8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A03168();
  sub_240A030D8();
  CGRectGetWidth(v15);
  sub_240A03128();
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_240A03EC8();
  sub_240A03EB8();
  uint64_t v4 = *(void (**)(char *, uint64_t))(v1 + 8);
  v4(v3, v0);
  sub_240A03168();
  sub_240A030D8();
  CGRectGetWidth(v16);
  sub_240A03128();
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_240A03EC8();
  sub_240A03EA8();
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  swift_release();
  v4(v3, v0);
  v17.origin.CGFloat x = v6;
  v17.origin.CGFloat y = v8;
  v17.size.CGFloat width = v10;
  v17.size.CGFloat height = v12;
  CGRectGetHeight(v17);
  sub_240A03148();
  return swift_release();
}

double PDFVStackWithReducedWidth.boundingRectForContent(in:)(uint64_t a1, uint64_t a2)
{
  return sub_2409AA578(a1, a2, MEMORY[0x263F448A8]);
}

double PDFVStackWithReducedWidth.minimumBoundingRectForContent(in:)(uint64_t a1, uint64_t a2)
{
  return sub_2409AA578(a1, a2, MEMORY[0x263F448B0]);
}

double sub_2409AA578(uint64_t a1, uint64_t a2, double (*a3)(uint64_t))
{
  uint64_t v4 = sub_240A03EE8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  double v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_240A03168();
  sub_240A030D8();
  CGRectGetWidth(v12);
  sub_240A03128();
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_240A03EC8();
  double v9 = a3(v8);
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v9;
}

unint64_t sub_2409AA6F0()
{
  unint64_t result = qword_268C99A78;
  if (!qword_268C99A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99A78);
  }
  return result;
}

uint64_t sub_2409AA744()
{
  return PDFVStackWithReducedWidth.render(context:document:)();
}

double sub_2409AA750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2409AA780(a1, a2, a3, MEMORY[0x263F448A8]);
}

double sub_2409AA768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2409AA780(a1, a2, a3, MEMORY[0x263F448B0]);
}

double sub_2409AA780(uint64_t a1, uint64_t a2, uint64_t a3, double (*a4)(uint64_t))
{
  uint64_t v5 = sub_240A03EE8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240A03168();
  sub_240A030D8();
  CGRectGetWidth(v13);
  sub_240A03128();
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_240A03EC8();
  double v10 = a4(v9);
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10;
}

uint64_t sub_2409AA8F4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  unint64_t v4 = sub_240993998();
  *uint64_t v3 = v1;
  v3[1] = sub_2409A2324;
  return MEMORY[0x270F33478](a1, v4);
}

ValueMetadata *type metadata accessor for PDFVStackWithReducedWidth()
{
  return &type metadata for PDFVStackWithReducedWidth;
}

id sub_2409AAA38()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NoiseNotificationsDataTypeDetailConfigurationProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for NoiseNotificationsDataTypeDetailConfigurationProvider()
{
  return self;
}

uint64_t sub_2409AAAA0()
{
  return sub_240A03948();
}

id sub_2409AAAD8()
{
  return objc_retain(*(id *)(*v0
                           + OBJC_IVAR____TtC16HearingAppPlugin53NoiseNotificationsDataTypeDetailConfigurationProvider_dataType));
}

id sub_2409AAAEC()
{
  if (qword_26AFD4988 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26AFD63C8;
  objc_msgSend((id)qword_26AFD63C8, sel_setNoiseEnabled_, 0);
  objc_msgSend(v0, sel_setNotificationsEnabled_, 0);

  return objc_msgSend(v0, sel_setOnboardingCompleted_, 0);
}

void sub_2409AAB8C(void *a1)
{
  if (objc_msgSend(self, sel_isAppleInternalInstall))
  {
    objc_super v2 = (void *)sub_240A04C18();
    uint64_t v3 = (void *)sub_240A04C18();
    id v4 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v2, v3, 1);

    uint64_t v5 = (void *)sub_240A04C18();
    uint64_t v6 = self;
    id v7 = objc_msgSend(v6, sel_actionWithTitle_style_handler_, v5, 1, 0);

    objc_msgSend(v4, sel_addAction_, v7);
    uint64_t v8 = (void *)sub_240A04C18();
    objc_msgSend(v4, sel_setMessage_, v8);

    if (sub_240A02F28())
    {
      if (qword_26AFD4990 != -1) {
        swift_once();
      }
      sub_240983BC8((uint64_t)&unk_26AFD63D0, (uint64_t)aBlock);
      sub_240994C38((uint64_t)aBlock, (uint64_t)v16);
      uint64_t v9 = v17;
      if (v17)
      {
        uint64_t v10 = v18;
        sub_24098BDC0(v16, v17);
        char v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
        sub_240981514((uint64_t)v16);
        sub_240994D50((uint64_t)aBlock);
        if (v11)
        {
          uint64_t v12 = (void *)sub_240A04C18();
          objc_msgSend(v4, sel_setMessage_, v12);

          CGRect v13 = (void *)sub_240A04C18();
          aBlock[4] = sub_2409AAAEC;
          aBlock[5] = 0;
          aBlock[0] = MEMORY[0x263EF8330];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_240985514;
          aBlock[3] = &unk_26F4FAC90;
          uint64_t v14 = _Block_copy(aBlock);
          swift_release();
          id v15 = objc_msgSend(v6, sel_actionWithTitle_style_handler_, v13, 2, v14);
          _Block_release(v14);

          objc_msgSend(v4, sel_addAction_, v15);
        }
      }
      else
      {
        sub_240994CC8((uint64_t)v16);
        sub_240994D50((uint64_t)aBlock);
      }
    }
    objc_msgSend(a1, sel_presentViewController_animated_completion_, v4, 1, 0);
  }
}

uint64_t sub_2409AAECC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2409AAEDC()
{
  return swift_release();
}

unint64_t sub_2409AAEE4()
{
  unint64_t result = qword_26AFD48C0;
  if (!qword_26AFD48C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD48C0);
  }
  return result;
}

uint64_t sub_2409AAF24@<X0>(uint64_t a1@<X8>)
{
  v17[1] = a1;
  uint64_t v2 = sub_240A02EE8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409AB220();
  uint64_t v6 = *(void **)(v1 + 40);
  if (v6)
  {
    id v7 = *(id *)(v1 + 40);
  }
  else
  {
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    id v7 = (id)qword_26AFD6468;
    uint64_t v6 = 0;
  }
  id v8 = v6;
  sub_240A02828();

  uint64_t v9 = *(void **)(v1 + 40);
  if (v9)
  {
    id v10 = *(id *)(v1 + 40);
  }
  else
  {
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    id v10 = (id)qword_26AFD6468;
    uint64_t v9 = 0;
  }
  id v11 = v9;
  sub_240A02828();

  uint64_t v12 = *(void **)(v1 + 40);
  if (v12)
  {
    id v13 = v12;
  }
  else
  {
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    id v13 = (id)qword_26AFD6468;
    uint64_t v12 = 0;
  }
  id v14 = v13;
  id v15 = v12;
  sub_240A02ED8();
  if (!sub_240A02EB8()) {
    objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_240A03038();
}

uint64_t sub_2409AB220()
{
  uint64_t v1 = v0;
  sub_2409AC610(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409AC644(0);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409AC6DC();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409AC774();
  uint64_t result = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v1[6])
  {
    uint64_t v27 = v12;
    uint64_t v28 = result;
    uint64_t v20 = v1[3];
    uint64_t v29 = v17;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v20 + 16))(ObjectType, v20);
    sub_2409AC948((unint64_t *)&qword_26AFD4838, 255, sub_2409AC644);
    sub_240A04688();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    id v30 = (id)v1[4];
    id v22 = v30;
    uint64_t v23 = sub_240A04F28();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v4, 1, 1, v23);
    sub_2409AC868();
    sub_2409AC948((unint64_t *)&unk_268C99C50, 255, (void (*)(uint64_t))sub_2409AC6DC);
    sub_2409AC948((unint64_t *)&qword_268C99AC0, 255, (void (*)(uint64_t))sub_2409AC868);
    id v24 = v22;
    sub_240A04678();
    sub_2409AC8A8((uint64_t)v4, (uint64_t (*)(void))sub_2409AC610);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v11);
    swift_allocObject();
    swift_weakInit();
    sub_2409AC948(&qword_268C99AC8, 255, (void (*)(uint64_t))sub_2409AC774);
    uint64_t v25 = v28;
    uint64_t v26 = sub_240A046A8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v19, v25);
    v1[6] = v26;
    return swift_release();
  }
  return result;
}

uint64_t sub_2409AB6A0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result + 56;
    swift_beginAccess();
    if (MEMORY[0x245605950](v1))
    {
      swift_getObjectType();
      sub_2409AC948((unint64_t *)&qword_268C999E8, v2, (void (*)(uint64_t))type metadata accessor for HearingEnvironmentNotificationAdvertisableFeatureSource);
      sub_2409AB7A8();
      sub_240A03048();
      swift_release();
      return sub_240A03B98();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_2409AB7A8()
{
  uint64_t v49 = *v0;
  uint64_t v1 = sub_240A04018();
  uint64_t v50 = *(void *)(v1 - 8);
  uint64_t v51 = v1;
  MEMORY[0x270FA5388](v1);
  unint64_t v54 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_240A02E88();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v46 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409AC5AC();
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24097FDC0(0);
  uint64_t v48 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v47 = (uint64_t)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v53 = (char *)&v45 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v45 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v45 - v19;
  MEMORY[0x270FA5388](v18);
  id v22 = (char *)&v45 - v21;
  uint64_t v23 = v0[3];
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(ObjectType, v23);
  int v52 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 24))(ObjectType, v23);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v20, *MEMORY[0x263F435D0], v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v20, 0, 1, v3);
  uint64_t v25 = (uint64_t)&v9[*(int *)(v7 + 56)];
  sub_24097FC94((uint64_t)v22, (uint64_t)v9);
  sub_24097FC94((uint64_t)v20, v25);
  uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v26((uint64_t)v9, 1, v3) == 1)
  {
    sub_2409AC8A8((uint64_t)v20, (uint64_t (*)(void))sub_24097FDC0);
    if (v26(v25, 1, v3) == 1)
    {
      sub_2409AC8A8((uint64_t)v9, (uint64_t (*)(void))sub_24097FDC0);
      uint64_t v27 = (uint64_t)v53;
      uint64_t v28 = v54;
      if ((v52 & 1) == 0) {
        goto LABEL_10;
      }
LABEL_9:
      sub_2409AC8A8((uint64_t)v22, (uint64_t (*)(void))sub_24097FDC0);
      return 1;
    }
    goto LABEL_7;
  }
  sub_24097FC94((uint64_t)v9, (uint64_t)v17);
  if (v26(v25, 1, v3) == 1)
  {
    sub_2409AC8A8((uint64_t)v20, (uint64_t (*)(void))sub_24097FDC0);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v17, v3);
LABEL_7:
    sub_2409AC8A8((uint64_t)v9, (uint64_t (*)(void))sub_2409AC5AC);
    uint64_t v27 = (uint64_t)v53;
    uint64_t v28 = v54;
    goto LABEL_10;
  }
  uint64_t v29 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v46, v25, v3);
  sub_2409AC948(&qword_268C99AB0, 255, MEMORY[0x263F435D8]);
  int v30 = sub_240A04C08();
  CGRect v31 = *(void (**)(char *, uint64_t))(v4 + 8);
  v31(v29, v3);
  sub_2409AC8A8((uint64_t)v20, (uint64_t (*)(void))sub_24097FDC0);
  v31(v17, v3);
  sub_2409AC8A8((uint64_t)v9, (uint64_t (*)(void))sub_24097FDC0);
  uint64_t v27 = (uint64_t)v53;
  uint64_t v28 = v54;
  if (v30 & v52) {
    goto LABEL_9;
  }
LABEL_10:
  sub_240A03FB8();
  sub_24097FC94((uint64_t)v22, v27);
  uint64_t v33 = sub_240A03FF8();
  os_log_type_t v34 = sub_240A04EC8();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v56 = v36;
    *(_DWORD *)uint64_t v35 = 136315906;
    uint64_t v37 = sub_240A05478();
    uint64_t v39 = sub_240981440(v37, v38, &v56);
    unint64_t v54 = v22;
    uint64_t v55 = v39;
    sub_240A050D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 12) = 2080;
    uint64_t v55 = sub_240981440(0xD000000000000011, 0x8000000240A0B980, &v56);
    sub_240A050D8();
    *(_WORD *)(v35 + 22) = 2080;
    sub_24097FC94(v27, v47);
    uint64_t v40 = sub_240A04C78();
    uint64_t v55 = sub_240981440(v40, v41, &v56);
    sub_240A050D8();
    swift_bridgeObjectRelease();
    sub_2409AC8A8(v27, (uint64_t (*)(void))sub_24097FDC0);
    *(_WORD *)(v35 + 32) = 2080;
    if (v52) {
      uint64_t v42 = 1702195828;
    }
    else {
      uint64_t v42 = 0x65736C6166;
    }
    if (v52) {
      unint64_t v43 = 0xE400000000000000;
    }
    else {
      unint64_t v43 = 0xE500000000000000;
    }
    uint64_t v55 = sub_240981440(v42, v43, &v56);
    sub_240A050D8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240976000, v33, v34, "[%s] %s -> false: featureStatus (%s), promotion visiblity (%s)", (uint8_t *)v35, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v36, -1, -1);
    MEMORY[0x2456058A0](v35, -1, -1);

    (*(void (**)(char *, uint64_t))(v50 + 8))(v28, v51);
    uint64_t v44 = (uint64_t)v54;
  }
  else
  {

    sub_2409AC8A8(v27, (uint64_t (*)(void))sub_24097FDC0);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v28, v51);
    uint64_t v44 = (uint64_t)v22;
  }
  sub_2409AC8A8(v44, (uint64_t (*)(void))sub_24097FDC0);
  return 0;
}

uint64_t sub_2409ABF8C()
{
  sub_240A03B98();

  swift_release();
  sub_2409AC990(v0 + 56);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HearingEnvironmentNotificationAdvertisableFeatureSource()
{
  return self;
}

uint64_t sub_2409AC008@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F43618];
  uint64_t v3 = sub_240A02E98();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_2409AC07C()
{
  swift_beginAccess();
  return MEMORY[0x245605950](v0 + 56);
}

uint64_t sub_2409AC0C4(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 64) = a2;
  swift_unknownObjectWeakAssign();
  return sub_240A03B98();
}

void (*sub_2409AC128(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x245605950](v1 + 56);
  uint64_t v5 = *(void *)(v1 + 64);
  void v3[3] = v4;
  v3[4] = v5;
  return sub_2409AC1A8;
}

void sub_2409AC1A8(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + 64) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    sub_240A03B98();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    sub_240A03B98();
  }

  free(v3);
}

uint64_t sub_2409AC230(void (*a1)(unsigned char *))
{
  sub_2409AC4F8(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409AB220();
  *uint64_t v4 = sub_2409AB7A8() & 1;
  swift_storeEnumTagMultiPayload();
  a1(v4);
  return sub_2409AC8A8((uint64_t)v4, (uint64_t (*)(void))sub_2409AC4F8);
}

uint64_t sub_2409AC300(void (*a1)(char *))
{
  sub_2409AC4E0(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_storeEnumTagMultiPayload();
  a1(v4);
  return sub_2409AC8A8((uint64_t)v4, (uint64_t (*)(void))sub_2409AC4E0);
}

uint64_t sub_2409AC3B0(uint64_t a1, void (*a2)(char *))
{
  sub_2409AC4E0(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409AB220();
  uint64_t v8 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v8 + 88))(ObjectType, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, ObjectType, v8);
  swift_storeEnumTagMultiPayload();
  a2(v7);
  return sub_2409AC8A8((uint64_t)v7, (uint64_t (*)(void))sub_2409AC4E0);
}

uint64_t sub_2409AC4D4()
{
  return MEMORY[0x263F8EE78];
}

void sub_2409AC4E0(uint64_t a1)
{
}

void sub_2409AC4F8(uint64_t a1)
{
}

void sub_2409AC50C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    sub_240A02FC8();
    sub_2409AC948(&qword_268C99A98, 255, MEMORY[0x263F437A8]);
    unint64_t v3 = sub_240A05428();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_2409AC5AC()
{
  if (!qword_268C99AA8)
  {
    sub_24097FDC0(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C99AA8);
    }
  }
}

void sub_2409AC610(uint64_t a1)
{
}

void sub_2409AC644(uint64_t a1)
{
}

void sub_2409AC678(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2409AC6DC()
{
  if (!qword_268C99C30)
  {
    sub_2409AC644(255);
    sub_2409AC948((unint64_t *)&qword_26AFD4838, 255, sub_2409AC644);
    unint64_t v0 = sub_240A04498();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99C30);
    }
  }
}

void sub_2409AC774()
{
  if (!qword_268C99C40)
  {
    sub_2409AC6DC();
    sub_2409AC868();
    sub_2409AC948((unint64_t *)&unk_268C99C50, 255, (void (*)(uint64_t))sub_2409AC6DC);
    sub_2409AC948((unint64_t *)&qword_268C99AC0, 255, (void (*)(uint64_t))sub_2409AC868);
    unint64_t v0 = sub_240A044F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99C40);
    }
  }
}

unint64_t sub_2409AC868()
{
  unint64_t result = qword_268C993E8;
  if (!qword_268C993E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268C993E8);
  }
  return result;
}

uint64_t sub_2409AC8A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2409AC908()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2409AC940()
{
  return sub_2409AB6A0();
}

uint64_t sub_2409AC948(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2409AC990(uint64_t a1)
{
  return a1;
}

uint64_t sub_2409AC9B8()
{
  return swift_endAccess();
}

id sub_2409ACA48(char a1)
{
  if (qword_26AFD4988 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_26AFD63C8;

  return objc_msgSend(v2, sel_setNoiseEnabled_, a1 & 1);
}

id sub_2409ACABC()
{
  if (qword_26AFD4988 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26AFD63C8;
  objc_msgSend((id)qword_26AFD63C8, sel_setOnboardingCompleted_, 1);
  objc_msgSend(v0, sel_setNoiseEnabled_, 1);
  objc_msgSend(v0, sel_setNotificationsEnabled_, 1);

  return objc_msgSend(v0, sel_setNotificationThreshold_, 90);
}

uint64_t sub_2409ACB6C()
{
  sub_2409973C8();
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240A073E0;
  sub_2409824B8(0, (unint64_t *)&qword_26AFD48C8);
  *(void *)(inited + 32) = MEMORY[0x245604B20]((id)*MEMORY[0x263F09DF8]);
  sub_2409824B8(0, (unint64_t *)&qword_26AFD48C0);
  *(void *)(inited + 40) = MEMORY[0x245604B10]((id)*MEMORY[0x263F092C0]);
  sub_240A04D38();
  if (inited >> 62)
  {
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v3 = sub_240A05288();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v2 = MEMORY[0x263F8EE88];
    goto LABEL_6;
  }
  if (!*(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  sub_2409E3A88(inited);
  uint64_t v2 = v1;
LABEL_6:
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_2409ACC8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1 = sub_240A02EE8();
  MEMORY[0x270FA5388](v1 - 8);
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  id v2 = (id)qword_26AFD6468;
  sub_240A02ED8();
  type metadata accessor for HearingAppPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v4 = self;
  id v5 = objc_msgSend(v4, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v9 = sub_240A02828();

  id v6 = objc_msgSend(v4, sel_bundleForClass_, ObjCClassFromMetadata, v9, a1);
  sub_240A02828();

  id v7 = objc_msgSend(v4, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_240A02828();

  return sub_240A03018();
}

void sub_2409ACF34(uint64_t a1)
{
  uint64_t v2 = sub_240A04018();
  uint64_t v49 = *(void *)(v2 - 8);
  uint64_t v50 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_240A03098();
  uint64_t v51 = *(void *)(v5 - 8);
  uint64_t v52 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v53 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240A032D8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v45 - v12;
  uint64_t v14 = sub_240A03AD8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  unint64_t v46 = (char *)v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v45 - v18;
  swift_unknownObjectRetain();
  swift_getObjectType();
  uint64_t v20 = swift_conformsToProtocol2();
  if (v20) {
    uint64_t v21 = v20;
  }
  else {
    uint64_t v21 = 0;
  }
  if (v20) {
    uint64_t v22 = a1;
  }
  else {
    uint64_t v22 = 0;
  }
  if (v22)
  {
    v45[1] = v21;
    sub_2409824B8(0, (unint64_t *)&qword_26AFD48C8);
    uint64_t v47 = MEMORY[0x245604B20]((id)*MEMORY[0x263F09DF8]);
    v45[0] = swift_getObjectType();
    swift_unknownObjectRetain();
    sub_240A03C48();
    sub_240A03B98();
    sub_240A03AA8();
    uint64_t v23 = *(void (**)(char *, uint64_t))(v15 + 8);
    uint64_t v49 = v15 + 8;
    uint64_t v50 = v14;
    uint64_t v48 = v23;
    v23(v19, v14);
    sub_24098BDC0(v54, v54[3]);
    sub_240A03A68();
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v11, *MEMORY[0x263F43BD8], v7);
    sub_2409ADE7C();
    char v24 = sub_240A04C08();
    uint64_t v25 = *(void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v26 = v11;
    uint64_t v27 = (void *)v47;
    v25(v26, v7);
    v25(v13, v7);
    sub_240981514((uint64_t)v54);
    if ((v24 & 1) == 0)
    {
      uint64_t v28 = sub_240A03BD8();
      if (v28)
      {
        uint64_t v29 = (void *)v28;
        swift_unknownObjectRetain();
        int v30 = v46;
        sub_240A03C48();
        sub_240A03B98();
        CGRect v31 = (void *)sub_240A03AB8();
        v48(v30, v50);
        id v32 = objc_msgSend(v31, sel_navigationController);

        if (v32)
        {
          objc_msgSend(v32, sel_pushViewController_animated_, v29, 1);
        }
      }
    }
    if (qword_26AFD4988 != -1) {
      swift_once();
    }
    uint64_t v33 = (void *)qword_26AFD63C8;
    objc_msgSend((id)qword_26AFD63C8, sel_setOnboardingCompleted_, 1);
    objc_msgSend(v33, sel_setNoiseEnabled_, 1);
    objc_msgSend(v33, sel_setNotificationsEnabled_, 1);
    objc_msgSend(v33, sel_setNotificationThreshold_, 90);
    uint64_t v34 = (uint64_t)v53;
    (*(void (**)(char *, void, uint64_t))(v51 + 104))(v53, *MEMORY[0x263F43A88], v52);
    id v35 = objc_allocWithZone((Class)type metadata accessor for NoiseNotificationsSettingsViewController(0));
    id v36 = sub_2409BF4E8(v33, v34, 1);
    sub_240A03A88();
    id v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v36);
    swift_unknownObjectRetain();
    sub_240A03C48();
    sub_240A03B98();
    unint64_t v38 = (void *)sub_240A03AB8();
    v48(v19, v50);
    objc_msgSend(v38, sel_presentViewController_animated_completion_, v37, 1, 0);

    sub_240A03B98();
  }
  else
  {
    sub_240A03B98();
    uint64_t v39 = v49;
    uint64_t v40 = v50;
    (*(void (**)(char *, void (*)(char *, uint64_t), uint64_t))(v49 + 16))(v4, v48, v50);
    unint64_t v41 = sub_240A03FF8();
    os_log_type_t v42 = sub_240A04EA8();
    if (os_log_type_enabled(v41, v42))
    {
      unint64_t v43 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      v54[0] = v44;
      *(_DWORD *)unint64_t v43 = 136446210;
      v54[5] = sub_240981440(0xD000000000000032, 0x8000000240A079B0, v54);
      sub_240A050D8();
      _os_log_impl(&dword_240976000, v41, v42, "[%{public}s] Could not perform onboarding action; invalid sender",
        v43,
        0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v44, -1, -1);
      MEMORY[0x2456058A0](v43, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v39 + 8))(v4, v40);
  }
}

uint64_t sub_2409AD660(uint64_t a1)
{
  uint64_t v3 = sub_240A04018();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24098F614(a1, (uint64_t)v20, &qword_26AFD3F28, &qword_26AFD3F20);
  uint64_t v7 = v21;
  if (v21)
  {
    uint64_t v8 = v22;
    sub_24098BDC0(v20, v21);
    LODWORD(v7) = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
    sub_240981514((uint64_t)v20);
  }
  else
  {
    sub_24098F548((uint64_t)v20, &qword_26AFD3F28, &qword_26AFD3F20);
  }
  sub_24098F614(a1 + 40, (uint64_t)v20, &qword_26AFD3F78, &qword_26AFD3F70);
  uint64_t v9 = v21;
  if (v21)
  {
    uint64_t v10 = v22;
    sub_24098BDC0(v20, v21);
    LODWORD(v9) = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
    sub_240981514((uint64_t)v20);
  }
  else
  {
    sub_24098F548((uint64_t)v20, &qword_26AFD3F78, &qword_26AFD3F70);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1, v3);
  uint64_t v11 = sub_240A03FF8();
  os_log_type_t v12 = sub_240A04E88();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v18 = v3;
    uint64_t v15 = v14;
    v20[0] = v14;
    *(_DWORD *)uint64_t v13 = 136446978;
    uint64_t v19 = sub_240981440(0xD000000000000032, 0x8000000240A079B0, v20);
    sub_240A050D8();
    *(_WORD *)(v13 + 12) = 2080;
    uint64_t v19 = sub_240981440(0xD00000000000004BLL, 0x8000000240A0A190, v20);
    sub_240A050D8();
    *(_WORD *)(v13 + 22) = 1026;
    LODWORD(v19) = v7 & 1;
    sub_240A050D8();
    *(_WORD *)(v13 + 28) = 1026;
    LODWORD(v19) = v9 & 1;
    sub_240A050D8();
    _os_log_impl(&dword_240976000, v11, v12, "[%{public}s] %s: Feature supported: %{BOOL,public}d. Feature onboarded: %{BOOL,public}d.", (uint8_t *)v13, 0x22u);
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v15, -1, -1);
    MEMORY[0x2456058A0](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v18);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v7 & ~v9 & 1;
}

unint64_t sub_2409ADA20()
{
  return 0xD00000000000004BLL;
}

uint64_t sub_2409ADA3C()
{
  return sub_2409ACB6C();
}

uint64_t sub_2409ADA54@<X0>(uint64_t a1@<X8>)
{
  return sub_2409ACC8C(a1);
}

unint64_t sub_2409ADA6C()
{
  return 0xD000000000000017;
}

uint64_t sub_2409ADA8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240A04018();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_2409ADAF8(uint64_t a1)
{
  uint64_t v2 = sub_240A04018();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_2409ADB5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240A04018();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_2409ADBC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240A04018();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_2409ADC24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240A04018();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_2409ADC88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240A04018();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_2409ADCEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2409ADD00);
}

uint64_t sub_2409ADD00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240A04018();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_2409ADD6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2409ADD80);
}

uint64_t sub_2409ADD80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240A04018();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_2409ADDF0()
{
  uint64_t result = sub_240A04018();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_2409ADE7C()
{
  unint64_t result = qword_268C99730;
  if (!qword_268C99730)
  {
    sub_240A032D8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99730);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for AudiogramDataManagementComponent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for AudiogramDataManagementComponent(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t initializeWithTake for AudiogramDataManagementComponent(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for AudiogramDataManagementComponent(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudiogramDataManagementComponent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 9)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AudiogramDataManagementComponent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudiogramDataManagementComponent()
{
  return &type metadata for AudiogramDataManagementComponent;
}

void sub_2409AE044()
{
  id v0 = objc_msgSend(self, sel_sharedBehavior);
  if (!v0)
  {
    __break(1u);
    goto LABEL_7;
  }
  unint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_features);

  if (!v2)
  {
LABEL_7:
    __break(1u);
    return;
  }
  unsigned int v3 = objc_msgSend(v2, sel_yodel);

  if (v3)
  {
    sub_2409AE294();
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_240A06870;
    uint64_t v5 = sub_240A03978();
    sub_2409BB4DC(v5, v10);
    *(void *)(v4 + 56) = &type metadata for HearingTestAboutItem;
    *(void *)(v4 + 64) = sub_2409AE3C4();
    uint64_t v6 = swift_allocObject();
    *(void *)(v4 + 32) = v6;
    long long v7 = v10[1];
    *(_OWORD *)(v6 + 16) = v10[0];
    *(_OWORD *)(v6 + 32) = v7;
    *(_OWORD *)(v6 + 48) = v10[2];
    *(void *)(v6 + 64) = v11;
    uint64_t v8 = sub_240A03D78();
    uint64_t v9 = MEMORY[0x263F44788];
    *(void *)(v4 + 72) = v8;
    *(void *)(v4 + 80) = v9;
  }
}

uint64_t sub_2409AE180()
{
  uint64_t v1 = sub_240A03888();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = *v0;
  sub_240A03868();
  uint64_t v6 = sub_240A03878();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6;
}

void sub_2409AE294()
{
  if (!qword_268C99AD0)
  {
    sub_2409AE2EC();
    unint64_t v0 = sub_240A05358();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99AD0);
    }
  }
}

void sub_2409AE2EC()
{
  if (!qword_268C99AD8)
  {
    sub_2409A566C(255, (unint64_t *)&qword_268C99698);
    sub_2409AE374();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C99AD8);
    }
  }
}

unint64_t sub_2409AE374()
{
  unint64_t result = qword_268C99AE0;
  if (!qword_268C99AE0)
  {
    sub_2409A566C(255, &qword_268C99AE8);
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C99AE0);
  }
  return result;
}

unint64_t sub_2409AE3C4()
{
  unint64_t result = qword_268C99AF0;
  if (!qword_268C99AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99AF0);
  }
  return result;
}

uint64_t sub_2409AE418()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t type metadata accessor for HeadphoneNotificationsSpecifierDataSource(uint64_t a1)
{
  return sub_2409A1004(a1, (uint64_t *)&unk_268C99B50);
}

uint64_t sub_2409AE48C()
{
  return swift_initClassMetadata2();
}

id sub_2409AE510(uint64_t a1)
{
  swift_getObjectType();
  sub_2409B2E48(0, (unint64_t *)&unk_268C99B88, MEMORY[0x263F43A90], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  id v5 = (char *)&v17 - v4;
  uint64_t v6 = &v1[qword_268C99B00];
  *(void *)uint64_t v6 = 0xD000000000000014;
  *((void *)v6 + 1) = 0x8000000240A0BCE0;
  long long v7 = &v1[qword_268C99B08];
  *(void *)long long v7 = 0xD000000000000015;
  *((void *)v7 + 1) = 0x8000000240A0BD00;
  uint64_t v8 = &v1[qword_268C99B10];
  *(void *)uint64_t v8 = 0xD000000000000013;
  *((void *)v8 + 1) = 0x8000000240A0BD20;
  uint64_t v9 = &v1[qword_268C99B18];
  *(void *)uint64_t v9 = 0xD000000000000014;
  *((void *)v9 + 1) = 0x8000000240A0BD40;
  uint64_t v10 = &v1[qword_268C99B20];
  *(void *)uint64_t v10 = 0xD000000000000016;
  *((void *)v10 + 1) = 0x8000000240A0BD60;
  *(void *)&v1[qword_268C99B28] = MEMORY[0x263F8EE78];
  *(void *)&v1[qword_268C99B30 + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[qword_268C99B38 + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v11 = qword_268C99B40;
  type metadata accessor for HeadphoneNotificationsAvailability();
  swift_allocObject();
  os_log_type_t v12 = v1;
  *(void *)&v1[v11] = sub_240979D68();
  *(void *)&v12[qword_268C99B48] = 0;

  sub_2409FC624();
  uint64_t v13 = sub_240A03098();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v5, a1, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v5, 0, 1, v13);
  id v15 = (id)sub_240A03088();
  sub_2409B10A8();

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v13);
  return v15;
}

uint64_t sub_2409AE7E0@<X0>(uint64_t a1@<X8>)
{
  if ((objc_msgSend(self, sel_isHeadphoneExposureNotificationsEnabled) & 1) != 0
    || (sub_2409B21A0() & 1) != 0)
  {
    uint64_t v2 = (unsigned int *)MEMORY[0x263F435C8];
  }
  else
  {
    uint64_t v2 = (unsigned int *)MEMORY[0x263F435D0];
  }
  uint64_t v3 = *v2;
  uint64_t v4 = sub_240A02E88();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 104);

  return v5(a1, v3, v4);
}

uint64_t sub_2409AE884@<X0>(uint64_t a1@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_240A02E88();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240A02EE8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409FC640();
  uint64_t v11 = sub_240A02EB8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (v11)
  {
    uint64_t v22 = a1;
    os_log_type_t v12 = self;
    id v13 = objc_msgSend(v12, sel_isHeadphoneExposureNotificationsEnabled);
    id v14 = objc_msgSend(v12, sel_isHeadphoneExposureNotificationsSupportedOnActiveWatch);
    unsigned __int8 v15 = sub_2409B21A0();
    if ((objc_msgSend(v12, sel_isHeadphoneExposureNotificationsEnabled) & 1) != 0
      || (sub_2409B21A0() & 1) != 0)
    {
      uint64_t v16 = (unsigned int *)MEMORY[0x263F435C8];
    }
    else
    {
      uint64_t v16 = (unsigned int *)MEMORY[0x263F435D0];
    }
    uint64_t v19 = v22;
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *v16, v3);
    sub_2409FBE38((uint64_t)v6, (char)v13, (char)v14, v15 & 1, ObjectType, (uint64_t)&off_26F4FAE50);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    MEMORY[0x245602B30](1, v13, v14, v15 & 1);
    sub_240A03B38();
    uint64_t v20 = sub_240A03B48();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 0, 1, v20);
  }
  else
  {
    uint64_t v17 = sub_240A03B48();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 1, 1, v17);
  }
}

uint64_t sub_2409AEB7C()
{
  unint64_t v9 = MEMORY[0x263F8EE78];
  sub_2409AECB8();
  sub_2409922A4(v1);
  if (objc_msgSend(self, sel_isHeadphoneExposureNotificationsSupportedOnActiveWatch))
  {
    *(void *)(v0 + qword_268C99B28) = sub_2409AF474();
    swift_bridgeObjectRelease();
    unint64_t v2 = _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_2409922A4(v2);
  }
  unint64_t v3 = v9;
  if (v9 >> 62)
  {
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v8 = sub_240A05278();
    swift_bridgeObjectRelease_n();
    return v8;
  }
  else
  {
    uint64_t v4 = v9 & 0xFFFFFFFFFFFFFF8;
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_240A05378();
    if (swift_dynamicCastMetatype() || (uint64_t v6 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_5:
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v7 = (void *)(v4 + 32);
      while (*v7)
      {
        ++v7;
        if (!--v6) {
          goto LABEL_5;
        }
      }
      swift_bridgeObjectRelease();
      return v4 | 1;
    }
    return v3;
  }
}

void sub_2409AECB8()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_240A04018();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = MEMORY[0x263F8EE78];
  id v6 = objc_msgSend(self, sel_currentDeviceDisplayName);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v49 = v1;
    uint64_t v8 = sub_240A04C58();
    uint64_t v10 = v9;

    uint64_t v11 = self;
    char v12 = objc_msgSend(v11, sel_areHeadphoneExposureNotificationsMandatory);
    unsigned int v48 = objc_msgSend(v11, sel_isHeadphoneExposureNotificationsEnabled);
    unsigned int v13 = objc_msgSend(v11, sel_isHeadphoneExposureMeasureLevelsEnabled);
    uint64_t v14 = sub_2409FD38C(v12, v13 ^ 1);
    uint64_t v16 = v15;
    uint64_t v17 = sub_2409FD4D0(v13 ^ 1);
    uint64_t v18 = &selRef_openDevicePrivacySettings;
    if (v13) {
      uint64_t v18 = &selRef_openLearnMoreLink;
    }
    uint64_t v19 = *v18;
    if (v12)
    {
      id v20 = sub_2409AFB4C(*(void *)(v49 + qword_268C99B00), *(void *)(v49 + qword_268C99B00 + 8), v8, v10, v14, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v21 = v48;
      if (v20)
      {
        id v22 = v20;
        MEMORY[0x245604930]();
        if (*(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_240A04D58();
        }
        sub_240A04D68();
        sub_240A04D38();
      }
      id v23 = sub_2409AFF28(*(void *)(v49 + qword_268C99B08), *(void *)(v49 + qword_268C99B08 + 8), 1, v21, 1, sel_headphoneNotificationsDeviceEnabled, (uint64_t)sel_setHeadphoneNotificationsDeviceEnabledWithValue_);
      if (!v23) {
        return;
      }
LABEL_31:
      id v46 = v23;
      MEMORY[0x245604930]();
      if (*(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_240A04D58();
      }
      sub_240A04D68();
      sub_240A04D38();

      return;
    }
    v47[0] = v8;
    v47[2] = v19;
    int v30 = self;
    CGRect v31 = (void *)sub_240A04C18();
    id v32 = objc_msgSend(v30, sel_modelSpecificLocalizedStringKeyForKey_, v31);

    if (!v32)
    {
      __break(1u);
      return;
    }
    v47[1] = v17;
    sub_240A04C58();

    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    sub_240A02828();
    swift_bridgeObjectRelease();
    uint64_t v33 = v49;
    uint64_t v34 = self;
    id v35 = (void *)sub_240A04C18();
    id v36 = objc_msgSend(v34, sel_groupSpecifierWithID_, v35);

    if (v36)
    {
      id v37 = (void *)sub_240A04C18();
      objc_msgSend(v36, sel_setName_, v37);

      unint64_t v38 = (void *)sub_240A04C18();
      objc_msgSend(v36, sel_setProperty_forKey_, v38, *MEMORY[0x263F600F8]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      id v39 = v36;
      MEMORY[0x245604930]();
      uint64_t v40 = v14;
      if (*(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_240A04D58();
      }
      sub_240A04D68();
      sub_240A04D38();

      char v41 = v48;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v41 = v48;
      uint64_t v40 = v14;
    }
    id v42 = sub_2409AFD5C(*(void *)(v33 + qword_268C99B20), *(void *)(v33 + qword_268C99B20 + 8), (uint64_t)sel_isHeadphoneMeasureAudioLevelEnabled, (uint64_t)sel_setHeadphoneMeasureAudioLevelsEnabledWithValue_);
    if (v42)
    {
      id v43 = v42;
      MEMORY[0x245604930]();
      if (*(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_240A04D58();
      }
      sub_240A04D68();
      sub_240A04D38();
    }
    id v44 = sub_2409AFB4C(0xD000000000000012, 0x8000000240A0C000, 0, 0, v40, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v44)
    {
      id v45 = v44;
      MEMORY[0x245604930]();
      if (*(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_240A04D58();
      }
      sub_240A04D68();
      sub_240A04D38();
    }
    id v23 = sub_2409AFF28(*(void *)(v33 + qword_268C99B08), *(void *)(v33 + qword_268C99B08 + 8), 0, v41, 1, sel_headphoneNotificationsDeviceEnabled, (uint64_t)sel_setHeadphoneNotificationsDeviceEnabledWithValue_);
    if (v23) {
      goto LABEL_31;
    }
  }
  else
  {
    sub_240A03FE8();
    char v24 = sub_240A03FF8();
    os_log_type_t v25 = sub_240A04EA8();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v51 = v27;
      *(_DWORD *)uint64_t v26 = 136446210;
      uint64_t v28 = sub_240A05478();
      uint64_t v50 = sub_240981440(v28, v29, &v51);
      sub_240A050D8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240976000, v24, v25, "[%{public}s] Could not get device display name", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v27, -1, -1);
      MEMORY[0x2456058A0](v26, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_2409AF474()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_240A04018();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x263F8EE78];
  uint64_t v6 = sub_2409FD584();
  if (v7)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v7;
    unsigned __int8 v10 = sub_2409AF860((SEL *)&selRef_areHeadphoneExposureNotificationsMandatoryOnActiveWatchWithError_, "[%{public}s] Could not access areHeadphoneExposureNotificationsMandatoryOnActiveWatch. Error: %{public}s");
    unsigned int v28 = sub_2409B21A0();
    unsigned __int8 v11 = sub_2409AF860((SEL *)&selRef_isHeadphoneExposureMeasureLevelsEnabledOnActiveWatchWithError_, "[%{public}s] Could not access isHeadphoneExposureMeasureLevelsEnabledOnActiveWatch. Error: %{public}s");
    char v12 = (v11 & 1) == 0;
    int v27 = v10 & 1;
    uint64_t v13 = sub_2409FD6CC(v10 & 1, v12);
    uint64_t v15 = v14;
    sub_2409FD4D0(v12);
    id v16 = sub_2409AFB4C(*(void *)(v0 + qword_268C99B10), *(void *)(v0 + qword_268C99B10 + 8), v8, v9, v13, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v16)
    {
      id v17 = v16;
      MEMORY[0x245604930]();
      if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_240A04D58();
      }
      sub_240A04D68();
      sub_240A04D38();
    }
    id v18 = sub_2409AFF28(*(void *)(v1 + qword_268C99B18), *(void *)(v1 + qword_268C99B18 + 8), v27, v28 & 1, v11 & 1, sel_headphoneNotificationsWatchEnabled, (uint64_t)sel_setHeadphoneNotificationsWatchEnabledWithValue_);
    if (v18)
    {
      id v19 = v18;
      MEMORY[0x245604930]();
      if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_240A04D58();
      }
      sub_240A04D68();
      sub_240A04D38();
    }
  }
  else
  {
    sub_240A03FE8();
    id v20 = sub_240A03FF8();
    os_log_type_t v21 = sub_240A04EA8();
    if (os_log_type_enabled(v20, v21))
    {
      id v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v30 = v23;
      *(_DWORD *)id v22 = 136446210;
      uint64_t v24 = sub_240A05478();
      uint64_t v29 = sub_240981440(v24, v25, &v30);
      sub_240A050D8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240976000, v20, v21, "[%{public}s] Could not get watch display name", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v23, -1, -1);
      MEMORY[0x2456058A0](v22, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v31;
}

id sub_2409AF860(SEL *a1, const char *a2)
{
  v24[1] = *(id *)MEMORY[0x263EF8340];
  swift_getObjectType();
  uint64_t v4 = sub_240A04018();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_240A02F28() & 1) == 0) {
    return 0;
  }
  uint64_t v8 = self;
  id result = objc_msgSend(v8, sel_isHeadphoneExposureNotificationsSupportedOnActiveWatch);
  if (result)
  {
    v24[0] = 0;
    id result = objc_msgSend(v8, *a1, v24);
    if (v24[0])
    {
      id v10 = v24[0];
      swift_willThrow();
      sub_240A03FE8();
      id v11 = v10;
      char v12 = sub_240A03FF8();
      os_log_type_t v13 = sub_240A04EB8();
      int v14 = v13;
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v15 = swift_slowAlloc();
        id v22 = (void *)swift_slowAlloc();
        v24[0] = v22;
        *(_DWORD *)uint64_t v15 = 136446466;
        HIDWORD(v21) = v14;
        uint64_t v16 = sub_240A05478();
        uint64_t v23 = sub_240981440(v16, v17, (uint64_t *)v24);
        sub_240A050D8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v15 + 12) = 2082;
        swift_getErrorValue();
        uint64_t v18 = sub_240A053A8();
        uint64_t v23 = sub_240981440(v18, v19, (uint64_t *)v24);
        sub_240A050D8();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240976000, v12, BYTE4(v21), a2, (uint8_t *)v15, 0x16u);
        id v20 = v22;
        swift_arrayDestroy();
        MEMORY[0x2456058A0](v20, -1, -1);
        MEMORY[0x2456058A0](v15, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return 0;
    }
  }
  return result;
}

id sub_2409AFB4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = (void *)a4;
  id v8 = sub_2409B22B0(a1, a2, a5, a6, a3, a4, 1);
  if (v8)
  {
    if (v7) {
      uint64_t v7 = (void *)sub_240A04C18();
    }
    objc_msgSend(v8, sel_setName_, v7);

    id v9 = objc_allocWithZone(NSString);
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    id v10 = (void *)sub_240A04C18();
    swift_bridgeObjectRelease();
    id v11 = objc_msgSend(v9, sel_initWithString_, v10);

    char v12 = (void *)sub_240A04C18();
    id v13 = objc_msgSend(v11, sel_localizedStandardRangeOfString_, v12);
    NSUInteger v15 = v14;

    sub_240A02A98();
    v20.location = (NSUInteger)v13;
    v20.length = v15;
    uint64_t v16 = NSStringFromRange(v20);
    if (!v16)
    {
      sub_240A04C58();
      uint64_t v16 = (NSString *)sub_240A04C18();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v8, sel_setProperty_forKey_, v16, *MEMORY[0x263F600D0]);

    id v17 = objc_msgSend(self, sel_valueWithNonretainedObject_, v6);
    objc_msgSend(v8, sel_setProperty_forKey_, v17, *MEMORY[0x263F600E0]);
    uint64_t v18 = (void *)sub_240A04C18();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setProperty_forKey_, v18, *MEMORY[0x263F600C8]);
  }
  return v8;
}

id sub_2409AFD5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  sub_240A02828();
  uint64_t v7 = self;
  id v8 = (void *)sub_240A04C18();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v7, sel_preferenceSpecifierNamed_target_set_get_detail_cell_edit_, v8, v4, a4, a3, 0, 6, 0);

  if (v9)
  {
    id v10 = (void *)sub_240A04C18();
    objc_msgSend(v9, sel_setIdentifier_, v10);

    id v11 = (void *)sub_240A04D88();
    objc_msgSend(v9, sel_setProperty_forKey_, v11, *MEMORY[0x263F600A8]);

    char v12 = (void *)sub_240A04D88();
    objc_msgSend(v9, sel_setProperty_forKey_, v12, *MEMORY[0x263F5FEF8]);
  }
  return v9;
}

id sub_2409AFF28(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, char *a6, uint64_t a7)
{
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  sub_240A02828();
  if (a3)
  {
    a7 = 0;
    char v12 = &selRef_headphoneNotificationsIsHeadphoneNotificationsMandatoryDisabledValueText;
    if (a4) {
      char v12 = &selRef_headphoneNotificationsIsHeadphoneNotificationsMandatoryEnabledValueText;
    }
    a6 = *v12;
    uint64_t v13 = 4;
  }
  else
  {
    uint64_t v13 = 6;
  }
  NSUInteger v14 = self;
  NSUInteger v15 = (void *)sub_240A04C18();
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(v14, sel_preferenceSpecifierNamed_target_set_get_detail_cell_edit_, v15, v7, a7, a6, 0, v13, 0);

  if (v16)
  {
    id v17 = (void *)sub_240A04C18();
    objc_msgSend(v16, sel_setIdentifier_, v17);

    uint64_t v18 = (void *)sub_240A04D88();
    objc_msgSend(v16, sel_setProperty_forKey_, v18, *MEMORY[0x263F600A8]);

    unint64_t v19 = (void *)sub_240A04D88();
    objc_msgSend(v16, sel_setProperty_forKey_, v19, *MEMORY[0x263F5FEF8]);
  }
  return v16;
}

id sub_2409B013C(void *a1)
{
  uint64_t v1 = qword_26AFD4A20;
  id v2 = a1;
  if (v1 != -1) {
    swift_once();
  }
  sub_240A02828();

  uint64_t v3 = (void *)sub_240A04C18();
  swift_bridgeObjectRelease();

  return v3;
}

id sub_2409B022C(void *a1)
{
  uint64_t v1 = qword_26AFD4A20;
  id v2 = a1;
  if (v1 != -1) {
    swift_once();
  }
  sub_240A02828();

  uint64_t v3 = (void *)sub_240A04C18();
  swift_bridgeObjectRelease();

  return v3;
}

void sub_2409B031C()
{
  uint64_t v1 = v0;
  sub_2409973C8();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_240A073E0;
  *(void *)(v2 + 32) = sub_2409B2424();
  *(void *)(v2 + 40) = sub_2409B1EB8();
  sub_240A04D38();
  id v3 = objc_allocWithZone(MEMORY[0x263F467C8]);
  sub_2409B2C48();
  uint64_t v4 = (void *)sub_240A04D08();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithItems_, v4);

  uint64_t v6 = qword_26AFD4A20;
  id v7 = v5;
  if (v6 != -1) {
    swift_once();
  }
  sub_240A02828();
  id v8 = (void *)sub_240A04C18();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setTitle_, v8, 0xE000000000000000);

  id v9 = *(void **)&v1[qword_268C99B68];
  *(void *)&v1[qword_268C99B68] = v7;
  id v10 = v7;

  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46848]), sel_initWithRootViewController_, v10);
  objc_msgSend(v1, sel_presentViewController_animated_completion_, v11, 1, 0);
}

void sub_2409B0508(char *a1)
{
  uint64_t v2 = MEMORY[0x245605950](&a1[qword_268C99B38]);
  if (v2)
  {
    id v4 = (id)v2;
    id v3 = a1;
    sub_2409B031C();
  }
}

id sub_2409B0580(void *a1, uint64_t a2)
{
  return sub_2409B09A4(a1, a2, (SEL *)&selRef_isHeadphoneExposureNotificationsEnabled);
}

id sub_2409B058C(void *a1)
{
  v26[1] = *(id *)MEMORY[0x263EF8340];
  swift_getObjectType();
  uint64_t v2 = sub_240A04018();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = self;
  if ((objc_msgSend(v6, sel_isHeadphoneExposureMeasureLevelsEnabled) & 1) == 0
    && objc_msgSend(a1, sel_BOOLValue))
  {
    sub_2409B0A30(a1);
  }
  id v7 = objc_msgSend(a1, sel_BOOLValue);
  v26[0] = 0;
  unsigned int v8 = objc_msgSend(v6, sel__setHeadphoneExposureNotificationsEnabled_error_, v7, v26);
  id v9 = v26[0];
  if (v8)
  {
    return v9;
  }
  else
  {
    id v24 = v26[0];
    id v11 = v26[0];
    char v12 = (void *)sub_240A02858();

    swift_willThrow();
    sub_240A03FE8();
    id v13 = v12;
    id v14 = v12;
    NSUInteger v15 = sub_240A03FF8();
    os_log_type_t v16 = sub_240A04EB8();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      id v24 = (id)swift_slowAlloc();
      v26[0] = v24;
      *(_DWORD *)uint64_t v17 = 136446466;
      uint64_t v18 = sub_240A05478();
      uint64_t v25 = sub_240981440(v18, v19, (uint64_t *)v26);
      sub_240A050D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2082;
      swift_getErrorValue();
      uint64_t v20 = sub_240A053A8();
      uint64_t v25 = sub_240981440(v20, v21, (uint64_t *)v26);
      sub_240A050D8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_240976000, v15, v16, "[%{public}s] Could not set device headphone notifications. %{public}s", (uint8_t *)v17, 0x16u);
      id v22 = v24;
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v22, -1, -1);
      MEMORY[0x2456058A0](v17, -1, -1);
    }
    else
    {
    }
    return (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

void sub_2409B0918(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_2409B058C(v4);
}

void sub_2409B0980(void *a1, uint64_t a2)
{
}

id sub_2409B0998(void *a1, uint64_t a2)
{
  return sub_2409B09A4(a1, a2, (SEL *)&selRef_isHeadphoneExposureMeasureLevelsEnabled);
}

id sub_2409B09A4(void *a1, uint64_t a2, SEL *a3)
{
  id v5 = self;
  id v6 = a1;
  id v7 = [v5 *a3];
  id v8 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, v7);

  return v8;
}

id sub_2409B0A30(void *a1)
{
  return sub_2409B0BBC(a1, (SEL *)&selRef__setHeadphoneExposureMeasureLevelsEnabled_error_);
}

void sub_2409B0A90(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_2409B0A30(v4);
}

id sub_2409B0AF8(void *a1)
{
  id v1 = a1;
  id v2 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, (unint64_t)sub_2409B21A0() & 1);

  return v2;
}

id sub_2409B0B5C(void *a1)
{
  return sub_2409B0BBC(a1, (SEL *)&selRef__setHeadphoneExposureNotificationsEnabledOnActiveWatch_error_);
}

id sub_2409B0BBC(void *a1, SEL *a2)
{
  v28[1] = *(id *)MEMORY[0x263EF8340];
  swift_getObjectType();
  uint64_t v4 = sub_240A04018();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = self;
  id v9 = objc_msgSend(a1, sel_BOOLValue);
  v28[0] = 0;
  unsigned int v10 = objc_msgSend(v8, *a2, v9, v28);
  id v11 = v28[0];
  if (v10)
  {
    return v11;
  }
  else
  {
    id v26 = v28[0];
    id v13 = v28[0];
    id v14 = (void *)sub_240A02858();

    swift_willThrow();
    sub_240A03FE8();
    id v15 = v14;
    id v16 = v14;
    uint64_t v17 = sub_240A03FF8();
    os_log_type_t v18 = sub_240A04EB8();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      id v26 = (id)swift_slowAlloc();
      v28[0] = v26;
      *(_DWORD *)uint64_t v19 = 136446466;
      uint64_t v20 = sub_240A05478();
      uint64_t v27 = sub_240981440(v20, v21, (uint64_t *)v28);
      sub_240A050D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2082;
      swift_getErrorValue();
      uint64_t v22 = sub_240A053A8();
      uint64_t v27 = sub_240981440(v22, v23, (uint64_t *)v28);
      sub_240A050D8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_240976000, v17, v18, "[%{public}s] Could not set watch headphone notifications. %{public}s", (uint8_t *)v19, 0x16u);
      id v24 = v26;
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v24, -1, -1);
      MEMORY[0x2456058A0](v19, -1, -1);
    }
    else
    {
    }
    return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

void sub_2409B0F20(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_2409B0B5C(v4);
}

void sub_2409B0F88(void *a1, uint64_t a2)
{
}

void sub_2409B0FA0(void *a1, uint64_t a2, void (*a3)(uint64_t, _UNKNOWN **))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = sub_240A028A8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = a1;
  a3(ObjectType, &off_26F4FAE50);
  sub_240A02868();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_2409B10A8()
{
  sub_2409AC610(0);
  MEMORY[0x270FA5388](v0 - 8);
  id v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409AC644(0);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409AC6DC();
  uint64_t v23 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409AC774();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v25 = v12;
  uint64_t v26 = v13;
  MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_2409B2E48(0, &qword_26AFD4860, (uint64_t (*)(uint64_t))sub_24097FDC0, MEMORY[0x263EFDE58]);
  swift_retain();
  sub_240A045B8();
  swift_endAccess();
  swift_release();
  sub_2409B2F14((unint64_t *)&qword_26AFD4838, sub_2409AC644);
  sub_240A04688();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_2409824B8(0, (unint64_t *)&qword_268C993E8);
  id v27 = (id)sub_240A04F38();
  uint64_t v16 = sub_240A04F28();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v2, 1, 1, v16);
  sub_2409B2F14((unint64_t *)&unk_268C99C50, (void (*)(uint64_t))sub_2409AC6DC);
  sub_2409B2DE0();
  uint64_t v17 = v23;
  sub_240A04678();
  sub_2409B2EAC((uint64_t)v2, (uint64_t (*)(void))sub_2409AC610);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v17);
  swift_allocObject();
  uint64_t v18 = v24;
  swift_unknownObjectWeakInit();
  sub_2409B2F14(&qword_268C99AC8, (void (*)(uint64_t))sub_2409AC774);
  uint64_t v19 = v25;
  uint64_t v20 = sub_240A046A8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v15, v19);
  *(void *)(v18 + qword_268C99B48) = v20;
  return swift_release();
}

void sub_2409B1550(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x245605950](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    uint64_t v5 = v3 + qword_268C99B30;
    swift_beginAccess();
    uint64_t v6 = MEMORY[0x245605950](v5);

    if (v6)
    {
      swift_getObjectType();
      sub_240A03B28();
      sub_240A03B98();
    }
  }
}

void sub_2409B15F4()
{
}

uint64_t sub_2409B1624()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2409AC990(v0 + qword_268C99B30);
  sub_2409AC990(v0 + qword_268C99B38);
  swift_release();

  return swift_release();
}

id sub_2409B16F8()
{
  return sub_2409B1E24(type metadata accessor for HeadphoneNotificationsSpecifierDataSource);
}

uint64_t sub_2409B1710(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2409AC990(a1 + qword_268C99B30);
  sub_2409AC990(a1 + qword_268C99B38);
  swift_release();

  return swift_release();
}

uint64_t sub_2409B17F0()
{
  return type metadata accessor for HeadphoneNotificationsSpecifierDataSource(0);
}

uint64_t type metadata accessor for HeadphoneNotificationsSettingsViewController(uint64_t a1)
{
  return sub_2409A1004(a1, (uint64_t *)&unk_268C99B70);
}

uint64_t sub_2409B1818()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2409B1870()
{
  uint64_t v1 = v0 + qword_268C99B30;
  swift_beginAccess();
  return MEMORY[0x245605950](v1);
}

uint64_t sub_2409B18C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + qword_268C99B30;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return sub_240A03B98();
}

void (*sub_2409B192C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = qword_268C99B30;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x245605950](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  void v3[3] = v6;
  v3[4] = v7;
  return sub_2409B19B4;
}

void sub_2409B19B4(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + *(void *)(*(void *)a1 + 48) + 8) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    sub_240A03B98();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    sub_240A03B98();
  }

  free(v3);
}

void (*sub_2409B1A44(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_240A03B78();
  return sub_2409B1AB4;
}

void sub_2409B1AB4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

char *sub_2409B1B04(uint64_t a1)
{
  swift_getObjectType();
  uint64_t v3 = sub_240A03098();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v1[qword_268C99B68] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  id v7 = objc_allocWithZone((Class)type metadata accessor for HeadphoneNotificationsSpecifierDataSource(0));
  uint64_t v8 = v1;
  id v9 = sub_2409AE510((uint64_t)v6);
  uint64_t v10 = qword_268C99B60;
  *(void *)&v8[qword_268C99B60] = v9;

  uint64_t v11 = *(void **)&v8[v10];
  sub_2409B2F14(&qword_268C99B80, (void (*)(uint64_t))type metadata accessor for HeadphoneNotificationsSpecifierDataSource);
  id v12 = v11;
  uint64_t v13 = (char *)sub_240A03A98();
  *(void *)(*(void *)&v13[qword_268C99B60] + qword_268C99B38 + 8) = &off_26F4FAE38;
  swift_unknownObjectWeakAssign();
  uint64_t v14 = v13;
  sub_2409FC584();
  id v15 = (void *)sub_240A04C18();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setTitle_, v15);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v14;
}

void sub_2409B1D24(char *a1, uint64_t a2, void *a3)
{
  *(void *)&a1[qword_268C99B68] = 0;
  id v4 = a3;

  sub_240A05258();
  __break(1u);
}

void sub_2409B1D9C()
{
}

void sub_2409B1DCC()
{
  uint64_t v1 = *(void **)(v0 + qword_268C99B68);
}

id sub_2409B1E0C()
{
  return sub_2409B1E24(type metadata accessor for HeadphoneNotificationsSettingsViewController);
}

id sub_2409B1E24(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

void sub_2409B1E64(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + qword_268C99B68);
}

uint64_t sub_2409B1EB0()
{
  return type metadata accessor for HeadphoneNotificationsSettingsViewController(0);
}

id sub_2409B1EB8()
{
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  sub_240A02828();
  id v0 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v1 = (void *)sub_240A04C18();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithString_, v1, 0xE000000000000000);

  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v4 = objc_allocWithZone(MEMORY[0x263F467B0]);
  aBlock[4] = sub_2409B2CD8;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2409B4FA8;
  aBlock[3] = &unk_26F4FAE80;
  uint64_t v5 = _Block_copy(aBlock);
  swift_retain();
  id v6 = objc_msgSend(v4, sel_initWithDescription_didTapLinkedText_, v2, v5);

  _Block_release(v5);
  swift_release();
  swift_release();
  return v6;
}

void sub_2409B209C(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x245605950](v1);
  if (v2)
  {
    uint64_t v3 = (char *)v2;
    sub_2409F77F0();
    sub_24099C96C(2);
    id v4 = objc_allocWithZone((Class)sub_240A02DA8());
    uint64_t v5 = (void *)sub_240A02D98();
    id v6 = *(void **)&v3[qword_268C99B68];
    if (v6)
    {
      id v7 = (char *)objc_msgSend(v6, sel_navigationController);
      if (v7)
      {
        uint64_t v8 = v7;
        objc_msgSend(v7, sel_pushViewController_animated_, v5, 1);

        uint64_t v3 = v8;
      }
    }
  }
}

id sub_2409B21A0()
{
  v4[1] = *(id *)MEMORY[0x263EF8340];
  if ((sub_240A02F28() & 1) == 0) {
    return 0;
  }
  id v0 = self;
  id result = objc_msgSend(v0, sel_isHeadphoneExposureNotificationsSupportedOnActiveWatch);
  if (result)
  {
    v4[0] = 0;
    id result = objc_msgSend(v0, sel_isHeadphoneExposureNotificationsEnabledOnActiveWatchWithError_, v4);
    if (v4[0])
    {
      id v2 = v4[0];
      swift_willThrow();
      type metadata accessor for HeadphoneNotificationsAvailability();
      if (qword_268C99318 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_240A04018();
      sub_240979894(v3, (uint64_t)qword_268C9AA58);
      sub_2409C8E6C(v2);

      return 0;
    }
  }
  return result;
}

id sub_2409B22B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  id v9 = self;
  uint64_t v10 = (void *)sub_240A04C18();
  id v11 = objc_msgSend(v9, sel_groupSpecifierWithID_, v10);

  if (v11)
  {
    if (a6)
    {
      id v12 = (void *)sub_240A04C18();
      objc_msgSend(v11, sel_setName_, v12);
    }
    if (a7)
    {
      sub_2409824B8(0, (unint64_t *)&unk_268C99C60);
      uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
      uint64_t v14 = NSStringFromClass(ObjCClassFromMetadata);
      if (!v14)
      {
        sub_240A04C58();
        uint64_t v14 = (NSString *)sub_240A04C18();
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v11, sel_setProperty_forKey_, v14, *MEMORY[0x263F600C0]);

      id v15 = (void *)MEMORY[0x263F600E8];
    }
    else
    {
      id v15 = (void *)MEMORY[0x263F600F8];
    }
    uint64_t v16 = (void *)sub_240A04C18();
    objc_msgSend(v11, sel_setProperty_forKey_, v16, *v15);
  }
  return v11;
}

id sub_2409B2424()
{
  sub_2409B2CF8(0);
  MEMORY[0x270FA5388](v0 - 8);
  id v2 = (char *)&v68 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_240A02828();
  uint64_t v5 = v4;
  uint64_t v6 = sub_240A02828();
  uint64_t v8 = v7;
  sub_240A02828();
  sub_2409B2E48(0, (unint64_t *)&qword_26AFD4940, (uint64_t (*)(uint64_t))sub_24098EA68, MEMORY[0x263F8E0F8]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_240A06800;
  uint64_t v10 = MEMORY[0x263F8D310];
  *(void *)(v9 + 56) = MEMORY[0x263F8D310];
  unint64_t v11 = sub_2409800D4();
  *(void *)(v9 + 32) = v3;
  *(void *)(v9 + 40) = v5;
  *(void *)(v9 + 96) = v10;
  *(void *)(v9 + 104) = v11;
  *(void *)(v9 + 64) = v11;
  *(void *)(v9 + 72) = v6;
  uint64_t v72 = v6;
  *(void *)(v9 + 80) = v8;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v73 = v8;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_240A04C28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v12 = objc_allocWithZone(MEMORY[0x263F089B8]);
  uint64_t v13 = (void *)sub_240A04C18();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v12, sel_initWithString_, v13);

  id v15 = objc_allocWithZone(MEMORY[0x263F089B8]);
  id v16 = v14;
  id v17 = objc_msgSend(v15, sel_initWithAttributedString_, v16);
  id v18 = objc_msgSend(v17, sel_string);
  uint64_t v19 = sub_240A04C58();
  uint64_t v21 = v20;

  uint64_t v76 = v19;
  uint64_t v77 = v21;
  uint64_t v74 = v3;
  uint64_t v75 = v5;
  uint64_t v22 = sub_240A029D8();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
  uint64_t v70 = v23 + 56;
  uint64_t v71 = v24;
  v24(v2, 1, 1, v22);
  sub_2409B2D2C();
  uint64_t v25 = sub_240A05108();
  uint64_t v27 = v26;
  LOBYTE(v3) = v28;
  sub_2409B2EAC((uint64_t)v2, (uint64_t (*)(void))sub_2409B2CF8);
  swift_bridgeObjectRelease();
  id v29 = v16;
  if ((v3 & 1) == 0)
  {
    id v30 = objc_msgSend(self, sel_preferredFontDescriptorWithTextStyle_, *MEMORY[0x263F83610]);
    id v31 = objc_msgSend(v30, sel_fontDescriptorWithSymbolicTraits_, 2);

    id v29 = v16;
    if (v31)
    {
      uint64_t v76 = v25;
      uint64_t v77 = v27;
      id v32 = objc_msgSend(v17, sel_string);
      uint64_t v33 = sub_240A04C58();
      uint64_t v35 = v34;

      uint64_t v74 = v33;
      uint64_t v75 = v35;
      sub_2409B2D80();
      sub_2409B2F14((unint64_t *)&unk_268C99C20, (void (*)(uint64_t))sub_2409B2D80);
      uint64_t v69 = sub_240A050B8();
      uint64_t v37 = v36;
      uint64_t v38 = *MEMORY[0x263F814F0];
      id v29 = objc_msgSend(self, sel_fontWithDescriptor_size_, v31, 0.0);
      objc_msgSend(v17, sel_addAttribute_value_range_, v38, v29, v69, v37);
    }
  }

  swift_bridgeObjectRelease();
  id v39 = objc_allocWithZone(MEMORY[0x263F089B8]);
  id v40 = v17;
  id v41 = objc_msgSend(v39, sel_initWithAttributedString_, v40);
  id v42 = objc_msgSend(v41, sel_string);
  uint64_t v43 = sub_240A04C58();
  uint64_t v45 = v44;

  uint64_t v76 = v43;
  uint64_t v77 = v45;
  uint64_t v74 = v72;
  uint64_t v75 = v73;
  v71(v2, 1, 1, v22);
  uint64_t v46 = sub_240A05108();
  uint64_t v48 = v47;
  LOBYTE(v43) = v49;
  sub_2409B2EAC((uint64_t)v2, (uint64_t (*)(void))sub_2409B2CF8);
  swift_bridgeObjectRelease();
  id v50 = v40;
  if ((v43 & 1) == 0)
  {
    id v51 = objc_msgSend(self, sel_preferredFontDescriptorWithTextStyle_, *MEMORY[0x263F83570]);
    id v52 = objc_msgSend(v51, sel_fontDescriptorWithSymbolicTraits_, 2);

    id v50 = v40;
    if (v52)
    {
      uint64_t v76 = v46;
      uint64_t v77 = v48;
      id v53 = objc_msgSend(v41, (SEL)&off_2650DA498);
      uint64_t v54 = sub_240A04C58();
      uint64_t v56 = v55;

      uint64_t v74 = v54;
      uint64_t v75 = v56;
      sub_2409B2D80();
      sub_2409B2F14((unint64_t *)&unk_268C99C20, (void (*)(uint64_t))sub_2409B2D80);
      uint64_t v57 = sub_240A050B8();
      uint64_t v59 = v58;
      uint64_t v60 = *MEMORY[0x263F814F0];
      id v50 = objc_msgSend(self, sel_fontWithDescriptor_size_, v52, 0.0);
      objc_msgSend(v41, sel_addAttribute_value_range_, v60, v50, v57, v59);
    }
  }

  swift_bridgeObjectRelease();
  id v61 = objc_allocWithZone(MEMORY[0x263F81650]);
  id v62 = v41;
  id v63 = objc_msgSend(v61, sel_init);
  LODWORD(v64) = 1008981770;
  objc_msgSend(v63, sel_setHyphenationFactor_, v64);
  id v65 = objc_msgSend(v62, sel_length);
  objc_msgSend(v62, sel_addAttribute_value_range_, *MEMORY[0x263F81540], v63, 0, v65);
  id v66 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F467B8]), sel_initWithDescription_, v62);

  return v66;
}

unint64_t sub_2409B2C48()
{
  unint64_t result = qword_268C99B98;
  if (!qword_268C99B98)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C99B98);
  }
  return result;
}

uint64_t sub_2409B2CA0()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_2409B2CD8()
{
  sub_2409B209C(v0);
}

uint64_t sub_2409B2CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2409B2CF0()
{
  return swift_release();
}

void sub_2409B2CF8(uint64_t a1)
{
}

unint64_t sub_2409B2D2C()
{
  unint64_t result = qword_268C99C10;
  if (!qword_268C99C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99C10);
  }
  return result;
}

void sub_2409B2D80()
{
  if (!qword_268C99C18)
  {
    unint64_t v0 = sub_240A04DF8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99C18);
    }
  }
}

unint64_t sub_2409B2DE0()
{
  unint64_t result = qword_268C99AC0;
  if (!qword_268C99AC0)
  {
    sub_2409824B8(255, (unint64_t *)&qword_268C993E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99AC0);
  }
  return result;
}

void sub_2409B2E48(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2409B2EAC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_2409B2F0C(uint64_t a1)
{
  sub_2409B1550(a1, v1);
}

uint64_t sub_2409B2F14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2409B2F60(char a1@<W0>, void *a2@<X8>)
{
  sub_2409B4C94(0, (unint64_t *)&qword_26AFD3F48, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v33 - v5;
  id v7 = objc_msgSend(self, sel_sharedBehavior);
  if (!v7)
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v8 = v7;
  id v9 = objc_msgSend(v7, sel_features);

  if (!v9)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    return;
  }
  objc_msgSend(v9, sel_yodel);

  if (a1)
  {
    uint64_t v33 = 0x314E4F4954434553;
    unint64_t v34 = 0xE90000000000005FLL;
    sub_240A04CA8();
    sub_2409F7688();
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    *a2 = v11;
    a2[1] = v13;
    uint64_t v33 = 0;
    unint64_t v34 = 0xE000000000000000;
    sub_240A051F8();
    swift_bridgeObjectRelease();
    uint64_t v33 = 0x314E4F4954434553;
    unint64_t v34 = 0xE90000000000005FLL;
    sub_240A04CA8();
    swift_bridgeObjectRelease();
    sub_240A04CA8();
    sub_2409F7688();
    uint64_t v15 = v14;
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    a2[2] = v15;
    a2[3] = v17;
    sub_240A02898();
    uint64_t v18 = sub_240A028A8();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v6, 1, v18) != 1)
    {
      sub_2409B4CF8();
      uint64_t v21 = (char *)a2 + *(int *)(v20 + 64);
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v6, v18);
      uint64_t v22 = *MEMORY[0x263F42A70];
      uint64_t v23 = sub_240A02D78();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v21, v22, v23);
      uint64_t v24 = *MEMORY[0x263F42A98];
      uint64_t v25 = sub_240A02D88();
      (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(a2, v24, v25);
      return;
    }
    goto LABEL_11;
  }
  uint64_t v33 = 0x314E4F4954434553;
  unint64_t v34 = 0xE90000000000005FLL;
  sub_240A04CA8();
  swift_bridgeObjectRelease();
  sub_2409F7688();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  *a2 = v27;
  a2[1] = v29;
  *((unsigned char *)a2 + 16) = 0;
  uint64_t v30 = *MEMORY[0x263F42AE0];
  uint64_t v31 = sub_240A02D88();
  id v32 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 104);

  v32(a2, v30, v31);
}

unint64_t sub_2409B33A4()
{
  return 0xD000000000000024;
}

void sub_2409B33C8()
{
}

uint64_t sub_2409B3400(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  uint64_t v3 = sub_24098BDC0(a1, v1);

  return sub_2409B3450((uint64_t)v3, v1, v2);
}

uint64_t sub_2409B3450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2;
  uint64_t v118 = *MEMORY[0x263EF8340];
  uint64_t v5 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  id v7 = (char *)v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  id v8 = objc_msgSend(self, sel_sharedBehavior);
  if (!v8)
  {
    __break(1u);
LABEL_14:
    __break(1u);
  }
  id v9 = v8;
  id v10 = objc_msgSend(v8, sel_features);

  if (!v10) {
    goto LABEL_14;
  }
  unsigned int v11 = objc_msgSend(v10, sel_yodel);

  if (v11)
  {
    unint64_t v113 = v7;
    uint64_t v114 = v5;
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 8);
    uint64_t v115 = v4;
    LODWORD(v104) = v12(v4, a3);
    uint64_t v117 = MEMORY[0x263F8EE78];
    sub_2409B4C94(0, &qword_268C99670, MEMORY[0x263F42AE8], MEMORY[0x263F8E0F8]);
    uint64_t v14 = v13;
    uint64_t v15 = sub_240A02D88();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = *(void *)(v16 + 72);
    uint64_t v18 = *(unsigned __int8 *)(v16 + 80);
    uint64_t v19 = (v18 + 32) & ~v18;
    uint64_t v112 = v14;
    uint64_t v110 = v18 | 7;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_240A07C30;
    uint64_t v111 = v19;
    uint64_t v109 = v20;
    uint64_t v21 = v20 + v19;
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    id v22 = (id)qword_26AFD6468;
    uint64_t v23 = (void *)sub_240A04C18();
    id v103 = self;
    id v24 = objc_msgSend(v103, sel_imageNamed_inBundle_, v23, v22);

    if (!v24) {
      id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init);
    }
    *(void *)uint64_t v21 = v24;
    *(unsigned char *)(v21 + 8) = 0;
    uint64_t v25 = *(void (**)(uint64_t))(v16 + 104);
    v102[1] = *MEMORY[0x263F42AB8];
    v25(v21);
    uint64_t v26 = (void *)(v21 + v17);
    sub_2409F7688();
    *uint64_t v26 = v27;
    v26[1] = v28;
    ((void (*)(uint64_t, void, uint64_t))v25)(v21 + v17, *MEMORY[0x263F42AC0], v15);
    uint64_t v29 = v21 + 2 * v17;
    sub_2409F7688();
    *(void *)uint64_t v29 = v30;
    *(void *)(v29 + 8) = v31;
    *(unsigned char *)(v29 + 16) = 0;
    uint64_t v32 = *MEMORY[0x263F42AE0];
    ((void (*)(uint64_t, uint64_t, uint64_t))v25)(v29, v32, v15);
    uint64_t v33 = v15;
    uint64_t v107 = 3 * v17;
    uint64_t v108 = 2 * v17;
    unint64_t v34 = (void *)(v21 + 3 * v17);
    sub_2409F7688();
    *unint64_t v34 = v35;
    v34[1] = v36;
    void v34[2] = 0;
    unsigned int v106 = *MEMORY[0x263F42A80];
    v25((uint64_t)v34);
    uint64_t v37 = v21 + 4 * v17;
    sub_2409F7688();
    *(void *)uint64_t v37 = v38;
    *(void *)(v37 + 8) = v39;
    *(unsigned char *)(v37 + 16) = 0;
    ((void (*)(uint64_t, uint64_t, uint64_t))v25)(v37, v32, v33);
    uint64_t v105 = 4 * v17;
    uint64_t v40 = v21 + 5 * v17;
    sub_2409F7688();
    *(void *)uint64_t v40 = v41;
    *(void *)(v40 + 8) = v42;
    *(unsigned char *)(v40 + 16) = 0;
    unsigned int v116 = v32;
    ((void (*)(uint64_t, uint64_t, uint64_t))v25)(v40, v32, v33);
    sub_2409B2F60(v104 & 1, (void *)(v21 + 6 * v17));
    id v43 = (id)qword_26AFD6468;
    unint64_t v104 = 0xD000000000000016;
    uint64_t v44 = (void *)sub_240A04C18();
    id v45 = objc_msgSend(v103, sel_imageNamed_inBundle_, v44, v43);

    if (!v45) {
      id v45 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init);
    }
    uint64_t v46 = v21 + 7 * v17;
    *(void *)uint64_t v46 = v45;
    *(unsigned char *)(v46 + 8) = 1;
    ((void (*)(void))v25)();
    uint64_t v47 = (void *)(v21 + 8 * v17);
    sub_2409F7688();
    void *v47 = v48;
    v47[1] = v49;
    v47[2] = 0;
    uint64_t v50 = v106;
    ((void (*)(void *, void, uint64_t))v25)(v47, v106, v33);
    uint64_t v51 = v21 + 9 * v17;
    sub_2409F7688();
    *(void *)uint64_t v51 = v52;
    *(void *)(v51 + 8) = v53;
    *(unsigned char *)(v51 + 16) = 0;
    uint64_t v54 = v116;
    ((void (*)(uint64_t, void, uint64_t))v25)(v51, v116, v33);
    uint64_t v55 = v21 + 10 * v17;
    sub_2409F7688();
    *(void *)uint64_t v55 = v56;
    *(void *)(v55 + 8) = v57;
    *(unsigned char *)(v55 + 16) = 0;
    ((void (*)(uint64_t, uint64_t, uint64_t))v25)(v55, v54, v33);
    uint64_t v58 = (void *)(v21 + 11 * v17);
    sub_2409F7688();
    void *v58 = v59;
    v58[1] = v60;
    v58[2] = 0;
    ((void (*)(void *, uint64_t, uint64_t))v25)(v58, v50, v33);
    uint64_t v61 = v21 + 12 * v17;
    *(void *)uint64_t v61 = sub_2409B48DC(1, 0.0, 0.25);
    *(unsigned char *)(v61 + 8) = 1;
    uint64_t v62 = *MEMORY[0x263F42A58];
    ((void (*)(uint64_t, uint64_t, uint64_t))v25)(v61, v62, v33);
    uint64_t v63 = v21 + 13 * v17;
    *(void *)uint64_t v63 = sub_2409B48DC(2, 0.25, 0.15);
    *(unsigned char *)(v63 + 8) = 1;
    ((void (*)(uint64_t, uint64_t, uint64_t))v25)(v63, v62, v33);
    uint64_t v64 = v21 + 14 * v17;
    *(void *)uint64_t v64 = sub_2409B48DC(3, 0.4, 0.2);
    *(unsigned char *)(v64 + 8) = 1;
    ((void (*)(uint64_t, uint64_t, uint64_t))v25)(v64, v62, v33);
    uint64_t v65 = v21 + 15 * v17;
    *(void *)uint64_t v65 = sub_2409B48DC(4, 0.6, 0.2);
    *(unsigned char *)(v65 + 8) = 1;
    ((void (*)(uint64_t, uint64_t, uint64_t))v25)(v65, v62, v33);
    uint64_t v66 = v21 + 16 * v17;
    *(void *)uint64_t v66 = sub_2409B48DC(5, 0.8, 0.2);
    *(unsigned char *)(v66 + 8) = 1;
    ((void (*)(uint64_t, uint64_t, uint64_t))v25)(v66, v62, v33);
    uint64_t v67 = (void *)(v21 + 17 * v17);
    sub_2409F7688();
    *uint64_t v67 = v68;
    v67[1] = v69;
    ((void (*)(void *, void, uint64_t))v25)(v67, *MEMORY[0x263F42AD0], v33);
    sub_2409920B0(v109);
    sub_2409B49F0();
    sub_2409920B0(v70);
    uint64_t v71 = v111;
    uint64_t v72 = swift_allocObject();
    *(_OWORD *)(v72 + 16) = xmmword_240A07C40;
    uint64_t v73 = (void *)(v72 + v71);
    sub_2409F7688();
    void *v73 = v74;
    v73[1] = v75;
    v73[2] = 0;
    ((void (*)(uint64_t, uint64_t, uint64_t))v25)(v72 + v71, v50, v33);
    uint64_t v76 = v72 + v71 + v17;
    sub_2409F7688();
    *(void *)uint64_t v76 = v77;
    *(void *)(v76 + 8) = v78;
    *(unsigned char *)(v76 + 16) = 0;
    ((void (*)(char *, void, uint64_t))v25)((char *)v73 + v17, v116, v33);
    id v79 = (void *)((char *)v73 + v108);
    sub_2409F7688();
    *id v79 = v80;
    v79[1] = v81;
    v79[2] = 0;
    ((void (*)(void *, uint64_t, uint64_t))v25)(v79, v50, v33);
    __int16 v82 = (void *)((char *)v73 + v107);
    sub_24099A3D0(0, (unint64_t *)&qword_26AFD4930);
    uint64_t v83 = swift_allocObject();
    *(_OWORD *)(v83 + 16) = xmmword_240A07C50;
    sub_2409F7688();
    *(void *)(v83 + 32) = v84;
    *(void *)(v83 + 40) = v85;
    sub_2409F7688();
    *(void *)(v83 + 48) = v86;
    *(void *)(v83 + 56) = v87;
    sub_2409F7688();
    *(void *)(v83 + 64) = v88;
    *(void *)(v83 + 72) = v89;
    sub_2409F7688();
    *(void *)(v83 + 80) = v90;
    *(void *)(v83 + 88) = v91;
    sub_2409F7688();
    *(void *)(v83 + 96) = v92;
    *(void *)(v83 + 104) = v93;
    sub_2409F7688();
    *(void *)(v83 + 112) = v94;
    *(void *)(v83 + 120) = v95;
    sub_2409F7688();
    *(void *)(v83 + 128) = v96;
    *(void *)(v83 + 136) = v97;
    sub_2409F7688();
    *(void *)(v83 + 144) = v98;
    *(void *)(v83 + 152) = v99;
    *__int16 v82 = v83;
    ((void (*)(uint64_t *, void, uint64_t))v25)(v82, *MEMORY[0x263F42A88], v33);
    sub_2409920B0(v72);
    uint64_t v100 = v117;
    uint64_t v5 = v114;
    uint64_t v4 = v115;
    id v7 = v113;
  }
  else
  {
    uint64_t v100 = sub_2409B4010((uint64_t)v7, v4, a3);
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v100;
}

uint64_t sub_2409B4010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  LODWORD(v47) = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  uint64_t v49 = MEMORY[0x263F8EE78];
  sub_2409B4C94(0, &qword_268C99670, MEMORY[0x263F42AE8], MEMORY[0x263F8E0F8]);
  uint64_t v3 = sub_240A02D88();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 72);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_240A07C60;
  uint64_t v48 = v7;
  unint64_t v8 = v7 + v6;
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  id v9 = (id)qword_26AFD6468;
  id v10 = (void *)sub_240A04C18();
  unsigned int v11 = self;
  id v12 = objc_msgSend(v11, sel_imageNamed_inBundle_, v10, v9);

  if (!v12) {
    id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init, v47, v48);
  }
  *(void *)unint64_t v8 = v12;
  *(unsigned char *)(v8 + 8) = 0;
  uint64_t v13 = *(void (**)(void))(v4 + 104);
  ((void (*)(unint64_t, void, uint64_t))v13)(v8, *MEMORY[0x263F42AB8], v3);
  uint64_t v14 = (void *)(v8 + v5);
  sub_2409F7688();
  *uint64_t v14 = v15;
  v14[1] = v16;
  ((void (*)(unint64_t, void, uint64_t))v13)(v8 + v5, *MEMORY[0x263F42AC0], v3);
  unint64_t v17 = v8 + 2 * v5;
  sub_2409F7688();
  *(void *)unint64_t v17 = v18;
  *(void *)(v17 + 8) = v19;
  *(unsigned char *)(v17 + 16) = 0;
  uint64_t v20 = *MEMORY[0x263F42AE0];
  ((void (*)(unint64_t, uint64_t, uint64_t))v13)(v17, v20, v3);
  unint64_t v21 = v8 + 3 * v5;
  sub_2409F7688();
  *(void *)unint64_t v21 = v22;
  *(void *)(v21 + 8) = v23;
  *(unsigned char *)(v21 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v13)(v21, v20, v3);
  sub_2409B2F60(v47 & 1, (void *)(v8 + 4 * v5));
  id v24 = (id)qword_26AFD6468;
  uint64_t v25 = (void *)sub_240A04C18();
  id v26 = objc_msgSend(v11, sel_imageNamed_inBundle_, v25, v24);

  if (!v26) {
    id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init);
  }
  unint64_t v27 = v8 + 5 * v5;
  *(void *)unint64_t v27 = v26;
  *(unsigned char *)(v27 + 8) = 1;
  v13();
  unint64_t v28 = v8 + 6 * v5;
  sub_2409F7688();
  *(void *)unint64_t v28 = v29;
  *(void *)(v28 + 8) = v30;
  *(unsigned char *)(v28 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v13)(v28, v20, v3);
  unint64_t v31 = v8 + 7 * v5;
  sub_2409F7688();
  *(void *)unint64_t v31 = v32;
  *(void *)(v31 + 8) = v33;
  *(unsigned char *)(v31 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v13)(v31, v20, v3);
  unint64_t v34 = (void *)(v8 + 8 * v5);
  sub_2409F7688();
  *unint64_t v34 = v35;
  v34[1] = v36;
  void v34[2] = 0;
  ((void (*)(void *, void, uint64_t))v13)(v34, *MEMORY[0x263F42A80], v3);
  unint64_t v37 = v8 + 9 * v5;
  *(void *)unint64_t v37 = sub_2409B48DC(1, 0.0, 0.25);
  *(unsigned char *)(v37 + 8) = 1;
  uint64_t v38 = *MEMORY[0x263F42A58];
  ((void (*)(unint64_t, uint64_t, uint64_t))v13)(v37, v38, v3);
  unint64_t v39 = v8 + 10 * v5;
  *(void *)unint64_t v39 = sub_2409B48DC(2, 0.25, 0.15);
  *(unsigned char *)(v39 + 8) = 1;
  ((void (*)(unint64_t, uint64_t, uint64_t))v13)(v39, v38, v3);
  unint64_t v40 = v8 + 11 * v5;
  *(void *)unint64_t v40 = sub_2409B48DC(3, 0.4, 0.2);
  *(unsigned char *)(v40 + 8) = 1;
  ((void (*)(unint64_t, uint64_t, uint64_t))v13)(v40, v38, v3);
  unint64_t v41 = v8 + 12 * v5;
  *(void *)unint64_t v41 = sub_2409B48DC(4, 0.6, 0.2);
  *(unsigned char *)(v41 + 8) = 1;
  ((void (*)(unint64_t, uint64_t, uint64_t))v13)(v41, v38, v3);
  unint64_t v42 = v8 + 13 * v5;
  *(void *)unint64_t v42 = sub_2409B48DC(5, 0.8, 0.2);
  *(unsigned char *)(v42 + 8) = 1;
  ((void (*)(unint64_t, uint64_t, uint64_t))v13)(v42, v38, v3);
  id v43 = (void *)(v8 + 14 * v5);
  sub_2409F7688();
  *id v43 = v44;
  v43[1] = v45;
  ((void (*)(void *, void, uint64_t))v13)(v43, *MEMORY[0x263F42AD0], v3);
  sub_2409920B0(v48);
  return v49;
}

uint64_t sub_2409B46B4(uint64_t a1)
{
  id v2 = objc_msgSend(self, sel_sharedBehavior);
  if (!v2)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v3 = v2;
  id v4 = objc_msgSend(v2, sel_features);

  if (!v4)
  {
LABEL_11:
    __break(1u);
    JUMPOUT(0x2409B4810);
  }
  unsigned int v5 = objc_msgSend(v4, sel_yodel);

  if (v5)
  {
    id v6 = (id)HKLocalizedStringForHearingLevelClassification();
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = sub_240A04C58();
    }
    else
    {
      return 0;
    }
  }
  else
  {
    switch(a1)
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        sub_2409F7688();
        uint64_t v8 = v9;
        break;
      default:
        return 0;
    }
  }
  return v8;
}

void sub_2409B4824(uint64_t a1)
{
  switch(a1)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      sub_2409F7688();
      break;
    default:
      return;
  }
}

char *sub_2409B48DC(uint64_t a1, float a2, float a3)
{
  uint64_t v6 = sub_2409B46B4(a1);
  uint64_t v8 = v7;
  sub_2409B4824(a1);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = self;
  id v14 = objc_msgSend(v13, sel_hk_hearingHealthKeyColor);
  id v15 = objc_msgSend(v13, sel_secondarySystemBackgroundColor);
  float v16 = 0.0;
  if (a2 > 0.0) {
    float v17 = a2;
  }
  else {
    float v17 = 0.0;
  }
  if (v17 > 1.0) {
    float v17 = 1.0;
  }
  if (a3 > 0.0) {
    float v16 = a3;
  }
  if (v16 > 1.0) {
    float v16 = 1.0;
  }
  v20[0] = v6;
  v20[1] = v8;
  v20[2] = v10;
  uint64_t v20[3] = v12;
  v20[4] = 0;
  v20[5] = 0;
  char v21 = 1;
  if ((float)(1.0 - v17) < v16) {
    float v16 = 1.0 - v17;
  }
  float v22 = v17;
  float v23 = v16;
  id v24 = v14;
  id v25 = v15;
  uint64_t v26 = 0x4010000000000000;
  id v18 = objc_allocWithZone((Class)type metadata accessor for SoundLevelView());
  return SoundLevelView.init(model:)((uint64_t)v20);
}

void sub_2409B49F0()
{
  id v0 = (id)HKCurrentLocaleCountryCodeIfUnknown();
  uint64_t v1 = sub_240A04C58();
  uint64_t v3 = v2;
  if (v1 == sub_240A04C58() && v3 == v4)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v6 = sub_240A05368();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0) {
      return;
    }
  }
  id v7 = objc_msgSend(self, sel_sharedBehavior);
  if (!v7)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v8 = v7;
  id v9 = objc_msgSend(v7, sel_features);

  if (!v9)
  {
LABEL_16:
    __break(1u);
    return;
  }
  unsigned int v10 = objc_msgSend(v9, sel_yodel);

  if (v10)
  {
    sub_2409B4C94(0, &qword_268C99670, MEMORY[0x263F42AE8], MEMORY[0x263F8E0F8]);
    uint64_t v11 = sub_240A02D88();
    uint64_t v12 = *(void *)(v11 - 8);
    unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_240A06870;
    id v15 = (uint64_t *)(v14 + v13);
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    *id v15 = sub_240A02828();
    v15[1] = v16;
    (*(void (**)(uint64_t *, void, uint64_t))(v12 + 104))(v15, *MEMORY[0x263F42AD0], v11);
  }
}

void sub_2409B4C94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2409B4CF8()
{
  if (!qword_268C99C70)
  {
    sub_240A02D78();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268C99C70);
    }
  }
}

ValueMetadata *type metadata accessor for AudiogramArticleDataProvider()
{
  return &type metadata for AudiogramArticleDataProvider;
}

void sub_2409B4D78()
{
}

void sub_2409B4D9C()
{
}

id sub_2409B4DC8()
{
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  id v0 = (id)qword_26AFD6468;
  uint64_t v1 = (void *)sub_240A04C18();
  id v2 = objc_msgSend(self, sel_imageNamed_inBundle_, v1, v0);

  if (v2) {
    return v2;
  }
  id v4 = objc_allocWithZone(MEMORY[0x263F827E8]);

  return objc_msgSend(v4, sel_init);
}

uint64_t sub_2409B4EB8()
{
  sub_24099A3D0(0, (unint64_t *)&qword_26AFD4290);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240A06A80;
  *(void *)(inited + 32) = objc_msgSend(self, sel_audiogramSampleType);
  sub_240A04D38();
  if (inited >> 62)
  {
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v3 = sub_240A05288();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v2 = MEMORY[0x263F8EE88];
    goto LABEL_6;
  }
  if (!*(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  sub_2409E3A88(inited);
  uint64_t v2 = v1;
LABEL_6:
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_2409B4FA8(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_2409B4FEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_240A040F8();
  uint64_t v3 = MEMORY[0x263F81F20];
  a1[3] = v2;
  a1[4] = v3;
  sub_24097F464(a1);
  sub_240A040C8();
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  sub_240A02828();
  sub_240A040D8();
  id v4 = objc_msgSend(self, sel_hk_appTintColor, 0xE000000000000000);
  unsigned int v5 = (uint64_t (*)(unsigned char *, void))sub_240A040B8();
  sub_240A040A8();
  return v5(v7, 0);
}

uint64_t sub_2409B5120@<X0>(uint64_t *a1@<X8>)
{
  return sub_2409B4FEC(a1);
}

uint64_t sub_2409B513C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return v1;
}

uint64_t sub_2409B516C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return 1;
  }
  else {
    return sub_240A05368();
  }
}

uint64_t sub_2409B519C()
{
  return sub_240A05418();
}

uint64_t sub_2409B51F8()
{
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_240A04C98();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2409B5250()
{
  return sub_240A05418();
}

uint64_t sub_2409B52AC()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2409B52B4(uint64_t *a1))()
{
  *a1 = sub_2409B5600();
  a1[1] = v2;
  return destroy for AudiogramPDFAsyncConfigurationDataSource.Item;
}

uint64_t destroy for AudiogramPDFAsyncConfigurationDataSource.Item()
{
  return swift_bridgeObjectRelease();
}

id sub_2409B5300@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v4 = v2[1];
  uint64_t v7 = v2[2];
  uint64_t v6 = v2[3];
  id v10 = (id)v2[4];
  a2[3] = a1;
  a2[4] = sub_2409B56EC();
  unint64_t v8 = (void *)swift_allocObject();
  *a2 = v8;
  _OWORD v8[2] = v5;
  v8[3] = v4;
  v8[4] = v7;
  uint64_t v8[5] = v6;
  v8[6] = v10;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();

  return v10;
}

void sub_2409B53A0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  type metadata accessor for AudiogramPDFAsyncConfigurationDataSource();
  swift_allocObject();
  id v4 = v3;
  sub_2409F1E9C(v4);

  sub_2409B5B30(&qword_268C99C88, (void (*)(uint64_t))type metadata accessor for AudiogramPDFAsyncConfigurationDataSource);
  id v5 = objc_allocWithZone((Class)sub_240A03C38());
  swift_retain();
  uint64_t v6 = (void *)sub_240A03C28();
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v6);
  objc_msgSend(v7, sel_setModalPresentationStyle_, 2);
  objc_msgSend(a2, sel_presentViewController_animated_completion_, v7, 1, 0);
  swift_release();
}

uint64_t sub_2409B54E0(uint64_t a1, void *a2)
{
  return sub_2409B5788(a2);
}

uint64_t sub_2409B5520@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 1;
  uint64_t v2 = *MEMORY[0x263F440D8];
  uint64_t v3 = sub_240A03698();
  id v4 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

unint64_t sub_2409B55AC()
{
  unint64_t result = qword_268C99C78;
  if (!qword_268C99C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99C78);
  }
  return result;
}

uint64_t sub_2409B5600()
{
  sub_2409A6F50();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_240A06930;
  *(void *)(v0 + 32) = 0x6172676F69647541;
  *(void *)(v0 + 40) = 0xE90000000000006DLL;
  *(void *)(v0 + 48) = 0x445074726F707845;
  *(void *)(v0 + 56) = 0xE900000000000046;
  *(void *)(v0 + 64) = 0x6E6F74747542;
  *(void *)(v0 + 72) = 0xE600000000000000;
  uint64_t v1 = (void *)sub_240A04D08();
  swift_bridgeObjectRelease();
  id v2 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_240A04C58();

  return v3;
}

unint64_t sub_2409B56EC()
{
  unint64_t result = qword_268C99C80;
  if (!qword_268C99C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99C80);
  }
  return result;
}

uint64_t sub_2409B5740()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_2409B5788(void *a1)
{
  uint64_t v3 = sub_240A049B8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_240A049D8();
  uint64_t v7 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409AC868();
  id v10 = (void *)sub_240A04F38();
  long long v11 = *v1;
  long long v22 = v1[1];
  long long v23 = v11;
  uint64_t v12 = (void *)*((void *)v1 + 4);
  uint64_t v13 = swift_allocObject();
  long long v14 = v1[1];
  *(_OWORD *)(v13 + 16) = *v1;
  *(_OWORD *)(v13 + 32) = v14;
  *(void *)(v13 + 48) = *((void *)v1 + 4);
  *(void *)(v13 + 56) = a1;
  aBlock[4] = sub_2409B5AE0;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2409B4FA8;
  aBlock[3] = &unk_26F4FAF60;
  id v15 = _Block_copy(aBlock);
  sub_2409B5B04((uint64_t)&v23);
  sub_2409B5B04((uint64_t)&v22);
  id v16 = v12;
  id v17 = a1;
  swift_release();
  sub_240A049C8();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_2409B5B30(&qword_268C993F8, MEMORY[0x263F8F030]);
  sub_2409875F8();
  sub_2409B5B30((unint64_t *)&qword_268C99408, (void (*)(uint64_t))sub_2409875F8);
  sub_240A05138();
  MEMORY[0x245604B80](0, v9, v6, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v20);
}

uint64_t sub_2409B5A90()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

void sub_2409B5AE0()
{
  sub_2409B53A0(v0 + 16, *(void **)(v0 + 56));
}

uint64_t sub_2409B5AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2409B5AFC()
{
  return swift_release();
}

uint64_t sub_2409B5B04(uint64_t a1)
{
  return a1;
}

uint64_t sub_2409B5B30(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void destroy for AudiogramPDFItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 32);
}

void *initializeWithCopy for AudiogramPDFItem(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = (void *)a2[4];
  a1[4] = v5;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  id v6 = v5;
  return a1;
}

void *assignWithCopy for AudiogramPDFItem(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[4];
  uint64_t v5 = (void *)a1[4];
  a1[4] = v4;
  id v6 = v4;

  return a1;
}

__n128 initializeWithTake for AudiogramPDFItem(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AudiogramPDFItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for AudiogramPDFItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AudiogramPDFItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudiogramPDFItem()
{
  return &type metadata for AudiogramPDFItem;
}

uint64_t type metadata accessor for HearingTestPromptTileActionHandler()
{
  uint64_t result = qword_268C99C90;
  if (!qword_268C99C90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2409B5DEC()
{
  return swift_initClassMetadata2();
}

void sub_2409B5E2C()
{
  uint64_t v0 = sub_240A03BC8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  long long v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFD49D0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_240A04018();
  sub_240979894(v4, (uint64_t)qword_26AFD6440);
  uint64_t v5 = sub_240A03FF8();
  os_log_type_t v6 = sub_240A04E98();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v17 = v0;
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v19 = v8;
    *(_DWORD *)uint64_t v7 = 136446210;
    uint64_t v9 = sub_240A05478();
    uint64_t v18 = sub_240981440(v9, v10, &v19);
    uint64_t v0 = v17;
    sub_240A050D8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240976000, v5, v6, "[%{public}s] Presenting Hearing Test.", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v8, -1, -1);
    MEMORY[0x2456058A0](v7, -1, -1);
  }

  sub_240A02AB8();
  sub_240A03A28();
  sub_240A03BA8();
  long long v11 = *(void (**)(char *, uint64_t))(v1 + 8);
  v11(v3, v0);
  uint64_t v12 = (void *)sub_240A034F8();
  swift_release();
  sub_240A02AE8();
  uint64_t v13 = (void *)sub_240A02AD8();
  type metadata accessor for HearingTestArticleProvider();
  swift_allocObject();
  long long v14 = (void *)sub_240A02AA8();

  swift_release();
  sub_240A03A28();
  id v15 = (void *)sub_240A03BB8();
  v11(v3, v0);
  objc_msgSend(v15, sel_presentViewController_animated_completion_, v14, 1, 0);
}

uint64_t sub_2409B6154(uint64_t a1)
{
  uint64_t v2 = sub_240A03BC8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v6 = sub_240A03A38();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v6;
}

uint64_t sub_2409B625C()
{
  return type metadata accessor for HearingTestPromptTileActionHandler();
}

uint64_t sub_2409B6264()
{
  return sub_2409B6304(&qword_268C99CA0);
}

uint64_t sub_2409B629C()
{
  return sub_2409B6304(&qword_268C99CA8);
}

uint64_t sub_2409B62D0()
{
  return sub_2409B6304(&qword_268C99CB0);
}

uint64_t sub_2409B6304(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for HearingTestPromptTileActionHandler();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2409B6348(void *a1)
{
  sub_2409F7688();
  sub_24099C96C(1);
  id v2 = objc_allocWithZone((Class)sub_240A02DA8());
  id v5 = (id)sub_240A02D98();
  id v3 = objc_msgSend(a1, sel_navigationController);
  if (v3)
  {
    uint64_t v4 = v3;
    objc_msgSend(v3, sel_pushViewController_animated_, v5, 1);
  }
}

unint64_t sub_2409B6428()
{
  return 0xD00000000000002DLL;
}

void sub_2409B644C()
{
}

uint64_t sub_2409B6478(uint64_t a1)
{
  return sub_2409B687C(a1, (uint64_t (*)(uint64_t, unint64_t, void, unint64_t))sub_2409F7520, (uint64_t (*)(uint64_t, unint64_t, void, unint64_t))sub_2409F7520);
}

char *sub_2409B6494(float a1, float a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, unint64_t, void, unint64_t))
{
  sub_240A051F8();
  swift_bridgeObjectRelease();
  sub_240A05348();
  sub_240A04CA8();
  swift_bridgeObjectRelease();
  sub_240A04CA8();
  sub_240A05348();
  sub_240A04CA8();
  swift_bridgeObjectRelease();
  sub_240A04CA8();
  uint64_t v8 = a5(0x4E4F4954434553, 0xE700000000000000, 0, 0xE000000000000000);
  uint64_t v24 = v9;
  uint64_t v25 = v8;
  swift_bridgeObjectRelease();
  sub_240A051F8();
  swift_bridgeObjectRelease();
  sub_240A05348();
  sub_240A04CA8();
  swift_bridgeObjectRelease();
  sub_240A04CA8();
  sub_240A05348();
  sub_240A04CA8();
  swift_bridgeObjectRelease();
  sub_240A04CA8();
  uint64_t v10 = a5(0x4E4F4954434553, 0xE700000000000000, 0, 0xE000000000000000);
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  sub_240A051F8();
  swift_bridgeObjectRelease();
  sub_240A05348();
  sub_240A04CA8();
  swift_bridgeObjectRelease();
  sub_240A04CA8();
  sub_240A05348();
  sub_240A04CA8();
  swift_bridgeObjectRelease();
  sub_240A04CA8();
  uint64_t v14 = a5(0x4E4F4954434553, 0xE700000000000000, 0, 0xE000000000000000);
  uint64_t v15 = v13;
  if (v14 == 0x4E4F4954434553 && v13 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v16 = sub_240A05368();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0) {
      goto LABEL_7;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = 0;
  uint64_t v15 = 0;
LABEL_7:
  uint64_t v17 = self;
  id v18 = objc_msgSend(v17, sel_hk_hearingHealthKeyColor);
  id v19 = objc_msgSend(v17, sel_secondarySystemBackgroundColor);
  float v20 = 0.0;
  if (a1 > 0.0) {
    float v21 = a1;
  }
  else {
    float v21 = 0.0;
  }
  if (v21 > 1.0) {
    float v21 = 1.0;
  }
  if (a2 > 0.0) {
    float v20 = a2;
  }
  if (v20 > 1.0) {
    float v20 = 1.0;
  }
  v26[0] = v25;
  v26[1] = v24;
  id v26[2] = v10;
  v26[3] = v12;
  void v26[4] = v14;
  v26[5] = v15;
  char v27 = 1;
  if ((float)(1.0 - v21) < v20) {
    float v20 = 1.0 - v21;
  }
  float v28 = v21;
  float v29 = v20;
  id v30 = v18;
  id v31 = v19;
  uint64_t v32 = 0x4010000000000000;
  id v22 = objc_allocWithZone((Class)type metadata accessor for SoundLevelView());
  return SoundLevelView.init(model:)((uint64_t)v26);
}

uint64_t sub_2409B687C(uint64_t a1, uint64_t (*a2)(uint64_t, unint64_t, void, unint64_t), uint64_t (*a3)(uint64_t, unint64_t, void, unint64_t))
{
  sub_2409B763C(0, &qword_268C99670, MEMORY[0x263F42AE8], MEMORY[0x263F8E0F8]);
  uint64_t v6 = sub_240A02D88();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 72);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_240A08020;
  uint64_t v10 = (uint64_t *)(v32 + v9);
  sub_240A051F8();
  swift_bridgeObjectRelease();
  sub_240A05348();
  sub_240A04CA8();
  swift_bridgeObjectRelease();
  sub_240A04CA8();
  uint64_t v11 = a2(0x4E4F4954434553, 0xE700000000000000, 0, 0xE000000000000000);
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  *uint64_t v10 = v11;
  v10[1] = v13;
  long long v10[2] = 0;
  uint64_t v14 = *(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 104);
  v14(v32 + v9, *MEMORY[0x263F42A80], v6);
  unint64_t v15 = v32 + v9 + v8;
  *(void *)unint64_t v15 = sub_2409B6494(0.0, 0.1, a1, 1, a3);
  *(unsigned char *)(v15 + 8) = 1;
  uint64_t v16 = *MEMORY[0x263F42A58];
  v14(v15, v16, v6);
  uint64_t v17 = v32 + v9 + 2 * v8;
  *(void *)uint64_t v17 = sub_2409B6494(0.1, 0.1, a1, 2, a3);
  *(unsigned char *)(v17 + 8) = 1;
  v14(v17, v16, v6);
  uint64_t v18 = v32 + v9 + 3 * v8;
  *(void *)uint64_t v18 = sub_2409B6494(0.2, 0.1, a1, 3, a3);
  *(unsigned char *)(v18 + 8) = 1;
  v14(v18, v16, v6);
  uint64_t v19 = v32 + v9 + 4 * v8;
  *(void *)uint64_t v19 = sub_2409B6494(0.3, 0.1, a1, 4, a3);
  *(unsigned char *)(v19 + 8) = 1;
  v14(v19, v16, v6);
  uint64_t v20 = v32 + v9 + 5 * v8;
  *(void *)uint64_t v20 = sub_2409B6494(0.4, 0.1, a1, 5, a3);
  *(unsigned char *)(v20 + 8) = 1;
  v14(v20, v16, v6);
  uint64_t v21 = v32 + v9 + 6 * v8;
  *(void *)uint64_t v21 = sub_2409B6494(0.5, 0.1, a1, 6, a3);
  *(unsigned char *)(v21 + 8) = 1;
  v14(v21, v16, v6);
  uint64_t v22 = v32 + v9 + 7 * v8;
  *(void *)uint64_t v22 = sub_2409B6494(0.6, 0.1, a1, 7, a3);
  *(unsigned char *)(v22 + 8) = 1;
  v14(v22, v16, v6);
  uint64_t v23 = v32 + v9 + 8 * v8;
  *(void *)uint64_t v23 = sub_2409B6494(0.7, 0.1, a1, 8, a3);
  *(unsigned char *)(v23 + 8) = 1;
  v14(v23, v16, v6);
  uint64_t v24 = v32 + v9 + 9 * v8;
  *(void *)uint64_t v24 = sub_2409B6494(0.8, 0.1, a1, 9, a3);
  *(unsigned char *)(v24 + 8) = 1;
  v14(v24, v16, v6);
  uint64_t v25 = v32 + v9 + 10 * v8;
  *(void *)uint64_t v25 = sub_2409B6494(0.9, 0.1, a1, 10, a3);
  *(unsigned char *)(v25 + 8) = 1;
  v14(v25, v16, v6);
  sub_240A051F8();
  swift_bridgeObjectRelease();
  sub_240A05348();
  sub_240A04CA8();
  swift_bridgeObjectRelease();
  uint64_t v26 = (uint64_t *)(v32 + v9 + 11 * v8);
  sub_240A04CA8();
  uint64_t v27 = a2(0x4E4F4954434553, 0xE700000000000000, 0, 0xE000000000000000);
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  *uint64_t v26 = v27;
  v26[1] = v29;
  v14((unint64_t)v26, *MEMORY[0x263F42AD0], v6);
  return v32;
}

uint64_t sub_2409B6E40()
{
  uint64_t v80 = *MEMORY[0x263EF8340];
  sub_2409B763C(0, (unint64_t *)&qword_26AFD3F48, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v78 = (char *)&v67 - v1;
  sub_2409B763C(0, &qword_268C99670, MEMORY[0x263F42AE8], MEMORY[0x263F8E0F8]);
  uint64_t v3 = v2;
  uint64_t v4 = sub_240A02D88();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 72);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = (v7 + 32) & ~v7;
  uint64_t v76 = v7 | 7;
  uint64_t v77 = v3;
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_240A07C50;
  uint64_t v10 = v8;
  uint64_t v11 = v9 + v8;
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  id v12 = (id)qword_26AFD6468;
  unint64_t v75 = 0xD00000000000001ELL;
  uint64_t v13 = (void *)sub_240A04C18();
  id v14 = objc_msgSend(self, sel_imageNamed_inBundle_, v13, v12);

  if (!v14) {
    id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init);
  }
  uint64_t v74 = v10;
  *(void *)(v9 + v10) = v14;
  *(unsigned char *)(v11 + 8) = 0;
  unint64_t v15 = *(void (**)(void))(v5 + 104);
  ((void (*)(uint64_t, void, uint64_t))v15)(v11, *MEMORY[0x263F42AB8], v4);
  uint64_t v16 = (void *)(v11 + v6);
  sub_2409F77F0();
  void *v16 = v17;
  v16[1] = v18;
  ((void (*)(uint64_t, void, uint64_t))v15)(v11 + v6, *MEMORY[0x263F42AC0], v4);
  uint64_t v19 = v11 + 2 * v6;
  sub_2409F77F0();
  *(void *)uint64_t v19 = v20;
  *(void *)(v19 + 8) = v21;
  *(unsigned char *)(v19 + 16) = 0;
  uint64_t v22 = *MEMORY[0x263F42AE0];
  ((void (*)(uint64_t, uint64_t, uint64_t))v15)(v19, v22, v4);
  uint64_t v71 = 2 * v6;
  uint64_t v73 = 3 * v6;
  uint64_t v23 = (void *)(v11 + 3 * v6);
  sub_2409F77F0();
  *uint64_t v23 = v24;
  v23[1] = v25;
  v23[2] = 0;
  uint64_t v26 = *MEMORY[0x263F42A80];
  ((void (*)(void *, uint64_t, uint64_t))v15)(v23, v26, v4);
  uint64_t v27 = v11 + 4 * v6;
  sub_2409F77F0();
  *(void *)uint64_t v27 = v28;
  *(void *)(v27 + 8) = v29;
  *(unsigned char *)(v27 + 16) = 0;
  ((void (*)(uint64_t, uint64_t, uint64_t))v15)(v27, v22, v4);
  id v30 = (void *)(v11 + 5 * v6);
  sub_2409F77F0();
  *id v30 = v31;
  v30[1] = v32;
  v30[2] = 0;
  ((void (*)(void *, uint64_t, uint64_t))v15)(v30, v26, v4);
  uint64_t v33 = v11 + 6 * v6;
  sub_2409F77F0();
  *(void *)uint64_t v33 = v34;
  *(void *)(v33 + 8) = v35;
  *(unsigned char *)(v33 + 16) = 0;
  unsigned int v72 = v22;
  ((void (*)(uint64_t, uint64_t, uint64_t))v15)(v33, v22, v4);
  uint64_t v36 = (void *)(v11 - v6 + 8 * v6);
  sub_2409B4CF8();
  uint64_t v38 = v37;
  unint64_t v39 = (void (**)(void *))((char *)v36 + *(int *)(v37 + 64));
  sub_2409F77F0();
  *uint64_t v36 = v40;
  v36[1] = v41;
  sub_2409F77F0();
  v36[2] = v42;
  v36[3] = v43;
  *unint64_t v39 = sub_2409B6348;
  v39[1] = 0;
  uint64_t v44 = *MEMORY[0x263F42A68];
  uint64_t v45 = sub_240A02D78();
  uint64_t v46 = *(void *)(v45 - 8);
  uint64_t v47 = *(void (**)(char *, void, unint64_t))(v46 + 104);
  unint64_t v75 = v45;
  uint64_t v69 = v46 + 104;
  uint64_t v70 = v47;
  ((void (*)(void (**)(void *), uint64_t))v47)(v39, v44);
  HIDWORD(v67) = *MEMORY[0x263F42A98];
  v15(v36);
  uint64_t v48 = sub_2409B687C(4, (uint64_t (*)(uint64_t, unint64_t, void, unint64_t))sub_2409F77F0, (uint64_t (*)(uint64_t, unint64_t, void, unint64_t))sub_2409F77F0);
  uint64_t v79 = v9;
  sub_2409920B0(v48);
  uint64_t v68 = v79;
  uint64_t v49 = v74;
  uint64_t v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_240A06930;
  uint64_t v51 = (void *)(v50 + v49);
  sub_2409F77F0();
  *uint64_t v51 = v52;
  v51[1] = v53;
  v51[2] = 0;
  ((void (*)(void *, uint64_t, uint64_t))v15)(v51, v26, v4);
  uint64_t v54 = (void *)((char *)v51 + v6);
  sub_2409F77F0();
  *uint64_t v54 = v55;
  v54[1] = v56;
  sub_2409F77F0();
  _OWORD v54[2] = v57;
  v54[3] = v58;
  uint64_t v59 = v78;
  sub_240A02898();
  uint64_t v60 = sub_240A028A8();
  uint64_t v61 = *(void *)(v60 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60) == 1) {
    __break(1u);
  }
  uint64_t v62 = (char *)v54 + *(int *)(v38 + 64);
  (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v62, v59, v60);
  v70(v62, *MEMORY[0x263F42A70], v75);
  ((void (*)(void *, void, uint64_t))v15)(v54, HIDWORD(v67), v4);
  uint64_t v63 = (char *)v51 + v71;
  sub_2409F77F0();
  *(void *)uint64_t v63 = v64;
  *((void *)v63 + 1) = v65;
  v63[16] = 0;
  ((void (*)(char *, void, uint64_t))v15)(v63, v72, v4);
  uint64_t v79 = v68;
  sub_2409920B0(v50);
  return v79;
}

void sub_2409B7608()
{
}

ValueMetadata *type metadata accessor for HeadphoneListeningArticleDataProvider()
{
  return &type metadata for HeadphoneListeningArticleDataProvider;
}

void sub_2409B763C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2409B76A0()
{
}

id sub_2409B76CC()
{
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  id v0 = (id)qword_26AFD6468;
  uint64_t v1 = (void *)sub_240A04C18();
  id v2 = objc_msgSend(self, sel_imageNamed_inBundle_, v1, v0);

  if (v2) {
    return v2;
  }
  id v4 = objc_allocWithZone(MEMORY[0x263F827E8]);

  return objc_msgSend(v4, sel_init);
}

uint64_t sub_2409B77BC()
{
  sub_2409973C8();
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240A06A80;
  sub_240997EE0();
  *(void *)(inited + 32) = MEMORY[0x245604B20]((id)*MEMORY[0x263F09E28]);
  sub_240A04D38();
  if (inited >> 62)
  {
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v3 = sub_240A05288();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v2 = MEMORY[0x263F8EE88];
    goto LABEL_6;
  }
  if (!*(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  sub_2409E3A88(inited);
  uint64_t v2 = v1;
LABEL_6:
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_2409B7898(uint64_t a1)
{
  uint64_t v87 = *v1;
  sub_2409BA088(0, &qword_268C99AB8, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v83 = (char *)&v60 - v4;
  uint64_t v5 = sub_240A03998();
  uint64_t v85 = *(void *)(v5 - 8);
  uint64_t v86 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v68 = v6;
  uint64_t v84 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240A04E58();
  uint64_t v64 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409B9A88();
  uint64_t v11 = v10;
  uint64_t v65 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409B9C5C();
  uint64_t v67 = v14;
  uint64_t v66 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409B9D38();
  uint64_t v69 = *(void *)(v17 - 8);
  uint64_t v70 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409B9DE4();
  uint64_t v72 = *(void *)(v20 - 8);
  uint64_t v73 = v20;
  MEMORY[0x270FA5388](v20);
  uint64_t v71 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409B9F9C();
  uint64_t v75 = *(void *)(v22 - 8);
  uint64_t v76 = v22;
  MEMORY[0x270FA5388](v22);
  uint64_t v74 = (char *)&v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409BA268();
  uint64_t v81 = v24;
  uint64_t v79 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v77 = (char *)&v60 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409BA368();
  uint64_t v82 = v26;
  uint64_t v80 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v78 = (char *)&v60 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = a1;
  sub_240A03988();
  uint64_t v29 = sub_240A033C8();
  uint64_t v31 = v30;
  if (v29 == sub_240A033C8() && v31 == v32)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v33 = sub_240A05368();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v33 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v34 = v28;
  uint64_t v35 = v19;
  uint64_t v36 = v34;
  uint64_t v63 = v34;
  uint64_t v37 = (void *)sub_240A03978();
  sub_2409973C8();
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_240A06A80;
  sub_2409824B8(0, (unint64_t *)&qword_26AFD48A8);
  *(void *)(v38 + 32) = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_audiogramSampleType);
  id v88 = (id)v38;
  sub_240A04D38();
  sub_240A04E78();

  swift_bridgeObjectRelease();
  *(void *)(swift_allocObject() + 16) = v87;
  sub_2409B9B74();
  sub_2409BA774(&qword_268C99CD0, MEMORY[0x263F44B10]);
  sub_2409BA774(&qword_268C99CD8, (void (*)(uint64_t))sub_2409B9B74);
  sub_240A04658();
  swift_release();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v9, v7);
  sub_240A04E48();
  sub_240983260(0, (unint64_t *)&qword_268C993F0);
  uint64_t v60 = MEMORY[0x263EFDB68];
  sub_2409BA774(&qword_268C99CE8, (void (*)(uint64_t))sub_2409B9A88);
  sub_240A04608();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v13, v11);
  uint64_t v39 = v85;
  uint64_t v65 = *(void *)(v85 + 16);
  uint64_t v40 = v84;
  uint64_t v41 = v86;
  ((void (*)(char *, uint64_t, uint64_t))v65)(v84, v36, v86);
  uint64_t v42 = *(unsigned __int8 *)(v39 + 80);
  v68 += (v42 + 16) & ~v42;
  uint64_t v43 = (v42 + 16) & ~v42;
  uint64_t v64 = v43;
  uint64_t v62 = v42 | 7;
  uint64_t v44 = swift_allocObject();
  uint64_t v61 = *(void (**)(uint64_t, char *, uint64_t))(v39 + 32);
  v61(v44 + v43, v40, v41);
  sub_240A04E38();
  sub_2409BA774(&qword_268C99CF8, (void (*)(uint64_t))sub_2409B9C5C);
  uint64_t v45 = v67;
  sub_240A04648();
  swift_release();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v16, v45);
  uint64_t v85 = MEMORY[0x263EFDB30];
  sub_2409BA774(&qword_268C99D10, (void (*)(uint64_t))sub_2409B9D38);
  sub_2409BA774(&qword_268C99D18, MEMORY[0x263F44AC8]);
  uint64_t v47 = v70;
  uint64_t v46 = v71;
  sub_240A04698();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v35, v47);
  *(void *)(swift_allocObject() + 16) = v87;
  sub_2409BA088(0, &qword_268C99D30, (uint64_t (*)(uint64_t))sub_2409BA0EC, MEMORY[0x263EFDDF8]);
  sub_2409BA774(&qword_268C99D40, (void (*)(uint64_t))sub_2409B9DE4);
  sub_2409BA1E0();
  uint64_t v48 = v73;
  uint64_t v49 = v74;
  sub_240A04658();
  swift_release();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v46, v48);
  sub_2409824B8(0, (unint64_t *)&qword_268C993E8);
  id v88 = (id)sub_240A04F38();
  uint64_t v50 = sub_240A04F28();
  uint64_t v51 = (uint64_t)v83;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v83, 1, 1, v50);
  sub_2409BA774(&qword_268C99D58, (void (*)(uint64_t))sub_2409B9F9C);
  sub_2409BA19C((unint64_t *)&qword_268C99AC0, (unint64_t *)&qword_268C993E8);
  uint64_t v52 = v76;
  uint64_t v53 = v77;
  sub_240A04678();
  sub_2409BA4F8(v51);

  (*(void (**)(char *, uint64_t))(v75 + 8))(v49, v52);
  ((void (*)(char *, uint64_t, uint64_t))v65)(v40, v63, v41);
  uint64_t v54 = swift_allocObject();
  v61(v54 + v64, v40, v41);
  sub_2409BA088(0, &qword_268C998E8, MEMORY[0x263F44068], MEMORY[0x263F8D488]);
  sub_2409BA774(&qword_268C99D68, (void (*)(uint64_t))sub_2409BA268);
  uint64_t v55 = v78;
  uint64_t v56 = v81;
  sub_240A04648();
  swift_release();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v53, v56);
  sub_2409BA774(&qword_268C99D70, (void (*)(uint64_t))sub_2409BA368);
  uint64_t v57 = v82;
  sub_240A04618();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v55, v57);
  sub_240A039D8();
  sub_240A033D8();
  swift_release();
  sub_2409A413C();
  sub_2409BA774(&qword_268C99910, (void (*)(uint64_t))sub_2409A413C);
  uint64_t v58 = sub_240A033E8();
  swift_release();
  sub_2409BA774(&qword_268C99918, (void (*)(uint64_t))sub_2409A41E4);
  return v58;
}

uint64_t sub_2409B8700@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_240A04018();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  sub_240A03F98();
  id v9 = v8;
  id v10 = v8;
  uint64_t v11 = sub_240A03FF8();
  os_log_type_t v12 = sub_240A04EA8();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    v22[1] = a2;
    uint64_t v14 = v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v24 = v15;
    *(_DWORD *)uint64_t v14 = 136446466;
    uint64_t v16 = sub_240A05478();
    uint64_t v23 = sub_240981440(v16, v17, &v24);
    sub_240A050D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2082;
    uint64_t v23 = (uint64_t)v8;
    id v18 = v8;
    sub_240983260(0, (unint64_t *)&qword_268C993F0);
    uint64_t v19 = sub_240A04C78();
    uint64_t v23 = sub_240981440(v19, v20, &v24);
    sub_240A050D8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240976000, v11, v12, "[%{public}s] Error fetching db changes: %{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v15, -1, -1);
    MEMORY[0x2456058A0](v14, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_2409B9BDC();
  return sub_240A04568();
}

uint64_t sub_2409B89AC()
{
  id v0 = (void *)sub_240A03978();
  sub_2409973C8();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_240A06A80;
  sub_2409824B8(0, (unint64_t *)&qword_26AFD48A8);
  *(void *)(v1 + 32) = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_audiogramSampleType);
  sub_240A04D38();
  sub_240A04E68();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2409B8A84@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_240A04018();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  sub_240A03F98();
  id v9 = v8;
  id v10 = v8;
  uint64_t v11 = sub_240A03FF8();
  os_log_type_t v12 = sub_240A04EA8();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    v22[1] = a2;
    uint64_t v14 = v13;
    uint64_t v15 = swift_slowAlloc();
    unint64_t v24 = v15;
    *(_DWORD *)uint64_t v14 = 136446466;
    uint64_t v16 = sub_240A05478();
    uint64_t v23 = sub_240981440(v16, v17, (uint64_t *)&v24);
    sub_240A050D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2082;
    uint64_t v23 = (uint64_t)v8;
    id v18 = v8;
    sub_240983260(0, (unint64_t *)&qword_268C993F0);
    uint64_t v19 = sub_240A04C78();
    uint64_t v23 = sub_240981440(v19, v20, (uint64_t *)&v24);
    sub_240A050D8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240976000, v11, v12, "[%{public}s] Error fetching sample counts: %{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v15, -1, -1);
    MEMORY[0x2456058A0](v14, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  unint64_t v24 = sub_24098A6D8(MEMORY[0x263F8EE78]);
  sub_2409BA0EC();
  return sub_240A04558();
}

void sub_2409B8D30(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v64 = a2;
  uint64_t v74 = sub_240A03C88();
  uint64_t v72 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  uint64_t v73 = (char *)v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_240A03698();
  uint64_t v68 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v71 = (char *)v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2409BA088(0, &qword_268C99D78, MEMORY[0x263F81EE0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v66 = (char *)v55 - v9;
  uint64_t v10 = sub_240A03998();
  uint64_t v62 = *(void *)(v10 - 8);
  uint64_t v63 = v10;
  uint64_t v11 = *(void *)(v62 + 64);
  MEMORY[0x270FA5388](v10);
  uint64_t v61 = (char *)v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409BA088(0, &qword_268C99D80, MEMORY[0x263F81DF8], v7);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v55 - v13;
  uint64_t v15 = sub_240A04068();
  uint64_t v60 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  unint64_t v17 = (char *)v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_240A04028();
  uint64_t v59 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  unint64_t v20 = (char *)v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_240A03708();
  uint64_t v67 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v65 = (char *)v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_240A040F8();
  uint64_t v75 = *(void *)(v22 - 8);
  uint64_t v76 = v22;
  MEMORY[0x270FA5388](v22);
  unint64_t v24 = (char *)v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *a1;
  sub_2409824B8(0, (unint64_t *)&qword_26AFD48A8);
  id v26 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_audiogramSampleType);
  uint64_t v27 = v26;
  if (*(void *)(v25 + 16) && (unint64_t v28 = sub_24098ADB4((uint64_t)v26), (v29 & 1) != 0))
  {
    uint64_t v58 = a3;
    uint64_t v30 = *(void *)(*(void *)(v25 + 56) + 8 * v28);

    if (v30 <= 0)
    {
      uint64_t v37 = MEMORY[0x263F8EE78];
    }
    else
    {
      *(void *)&long long v57 = v15;
      id v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
      objc_msgSend(v31, sel_setNumberStyle_, 1);
      objc_msgSend(v31, sel_setMaximumFractionDigits_, 0);
      sub_240A040E8();
      if (qword_26AFD4A20 != -1) {
        swift_once();
      }
      uint64_t v32 = (uint64_t (*)(uint64_t, uint64_t))sub_240A02828();
      uint64_t v34 = v33;
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      v55[2] = v32;
      v55[1] = v34;
      sub_240A040D8();
      uint64_t v35 = (void *)sub_240A04DE8();
      id v56 = v31;
      id v36 = objc_msgSend(v31, sel_stringFromNumber_, v35);

      if (v36)
      {
        sub_240A04C58();
      }
      uint64_t v38 = v57;
      sub_240A04098();
      uint64_t v39 = v76;
      v77[3] = v76;
      v77[4] = MEMORY[0x263F81F20];
      uint64_t v40 = sub_24097F464(v77);
      (*(void (**)(uint64_t *, char *, uint64_t))(v75 + 16))(v40, v24, v39);
      v55[0] = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
      sub_2409BA088(0, &qword_268C99D88, MEMORY[0x263F81E08], MEMORY[0x263F8E0F8]);
      sub_240A04078();
      uint64_t v41 = swift_allocObject();
      long long v57 = xmmword_240A06870;
      *(_OWORD *)(v41 + 16) = xmmword_240A06870;
      uint64_t v42 = v59;
      (*(void (**)(char *, void, uint64_t))(v59 + 104))(v20, *MEMORY[0x263F81DE8], v18);
      uint64_t v43 = sub_240A04038();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v14, 1, 1, v43);
      sub_240A04058();
      sub_240A04048();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v17, v38);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v20, v18);
      uint64_t v45 = v61;
      uint64_t v44 = v62;
      uint64_t v46 = v63;
      (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v61, v64, v63);
      unint64_t v47 = (*(unsigned __int8 *)(v44 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
      uint64_t v48 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v44 + 32))(v48 + v47, v45, v46);
      uint64_t v49 = sub_240A04088();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v66, 1, 1, v49);
      (*(void (**)(char *, void, uint64_t))(v68 + 104))(v71, *MEMORY[0x263F440E0], v70);
      (*(void (**)(char *, void, uint64_t))(v72 + 104))(v73, *MEMORY[0x263F446D0], v74);
      uint64_t v50 = v65;
      sub_240A036F8();
      sub_2409BA088(0, &qword_268C998F0, MEMORY[0x263F44068], v55[0]);
      sub_240A03638();
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = v57;
      sub_2409BA70C();
      uint64_t v51 = swift_allocObject();
      *(_OWORD *)(v51 + 16) = v57;
      uint64_t v52 = v69;
      *(void *)(v51 + 56) = v69;
      *(void *)(v51 + 64) = sub_2409BA774(&qword_268C99D90, MEMORY[0x263F441F0]);
      uint64_t v53 = sub_24097F464((uint64_t *)(v51 + 32));
      uint64_t v54 = v67;
      (*(void (**)(uint64_t *, char *, uint64_t))(v67 + 16))(v53, v50, v52);
      sub_240A03618();

      (*(void (**)(char *, uint64_t))(v54 + 8))(v50, v52);
      (*(void (**)(char *, uint64_t))(v75 + 8))(v24, v76);
    }
    a3 = v58;
  }
  else
  {

    uint64_t v37 = MEMORY[0x263F8EE78];
  }
  *a3 = v37;
}

void sub_2409B9860(void *a1)
{
  uint64_t v2 = (void *)sub_240A03978();
  id v3 = objc_allocWithZone((Class)type metadata accessor for AudiogramAllDataViewController());
  id v6 = sub_2409D7234(v2);
  id v4 = objc_msgSend(a1, sel_navigationController);
  if (v4)
  {
    uint64_t v5 = v4;
    objc_msgSend(v4, sel_pushViewController_animated_, v6, 1);
  }
}

uint64_t sub_2409B9900()
{
  uint64_t v0 = sub_240A036C8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A036A8();
  uint64_t v4 = sub_240A036B8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_2409B99D4()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AudiogramShowAllComponent()
{
  return self;
}

uint64_t sub_2409B9A30()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return v1;
}

uint64_t sub_2409B9A64(uint64_t a1)
{
  return sub_2409B7898(a1);
}

void sub_2409B9A88()
{
  if (!qword_268C99CB8)
  {
    sub_240A04E58();
    sub_2409B9B74();
    sub_2409BA774(&qword_268C99CD0, MEMORY[0x263F44B10]);
    sub_2409BA774(&qword_268C99CD8, (void (*)(uint64_t))sub_2409B9B74);
    unint64_t v0 = sub_240A044A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99CB8);
    }
  }
}

void sub_2409B9B74()
{
  if (!qword_268C99CC0)
  {
    sub_2409B9BDC();
    unint64_t v0 = sub_240A04578();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99CC0);
    }
  }
}

void sub_2409B9BDC()
{
  if (!qword_268C99CC8)
  {
    sub_240A04E48();
    sub_240983260(255, (unint64_t *)&qword_268C993F0);
    unint64_t v0 = sub_240A05428();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99CC8);
    }
  }
}

void sub_2409B9C5C()
{
  if (!qword_268C99CE0)
  {
    sub_2409B9A88();
    sub_240A04E48();
    sub_240983260(255, (unint64_t *)&qword_268C993F0);
    sub_2409BA774(&qword_268C99CE8, (void (*)(uint64_t))sub_2409B9A88);
    unint64_t v0 = sub_240A04478();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99CE0);
    }
  }
}

void sub_2409B9D38()
{
  if (!qword_268C99CF0)
  {
    sub_2409B9C5C();
    sub_240A04E38();
    sub_2409BA774(&qword_268C99CF8, (void (*)(uint64_t))sub_2409B9C5C);
    unint64_t v0 = sub_240A04488();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99CF0);
    }
  }
}

void sub_2409B9DE4()
{
  if (!qword_268C99D00)
  {
    sub_240A04E38();
    sub_2409B9ED0();
    sub_2409BA774(&qword_268C99D18, MEMORY[0x263F44AC8]);
    sub_2409BA774(&qword_268C99D20, (void (*)(uint64_t))sub_2409B9ED0);
    unint64_t v0 = sub_240A04468();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99D00);
    }
  }
}

void sub_2409B9ED0()
{
  if (!qword_268C99D08)
  {
    sub_2409B9D38();
    sub_240983260(255, (unint64_t *)&qword_268C993F0);
    sub_2409BA774(&qword_268C99D10, (void (*)(uint64_t))sub_2409B9D38);
    unint64_t v0 = sub_240A04458();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99D08);
    }
  }
}

void sub_2409B9F9C()
{
  if (!qword_268C99D28)
  {
    sub_2409B9DE4();
    sub_2409BA088(255, &qword_268C99D30, (uint64_t (*)(uint64_t))sub_2409BA0EC, MEMORY[0x263EFDDF8]);
    sub_2409BA774(&qword_268C99D40, (void (*)(uint64_t))sub_2409B9DE4);
    sub_2409BA1E0();
    unint64_t v0 = sub_240A044A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99D28);
    }
  }
}

void sub_2409BA088(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2409BA0EC()
{
  if (!qword_268C99D38)
  {
    sub_2409824B8(255, (unint64_t *)&qword_26AFD48A8);
    sub_2409BA19C((unint64_t *)&unk_26AFD48B0, (unint64_t *)&qword_26AFD48A8);
    unint64_t v0 = sub_240A04BB8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99D38);
    }
  }
}

uint64_t sub_2409BA19C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2409824B8(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2409BA1E0()
{
  unint64_t result = qword_268C99D48;
  if (!qword_268C99D48)
  {
    sub_2409BA088(255, &qword_268C99D30, (uint64_t (*)(uint64_t))sub_2409BA0EC, MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99D48);
  }
  return result;
}

void sub_2409BA268()
{
  if (!qword_268C99D50)
  {
    sub_2409B9F9C();
    sub_2409824B8(255, (unint64_t *)&qword_268C993E8);
    sub_2409BA774(&qword_268C99D58, (void (*)(uint64_t))sub_2409B9F9C);
    sub_2409BA19C((unint64_t *)&qword_268C99AC0, (unint64_t *)&qword_268C993E8);
    unint64_t v0 = sub_240A044F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99D50);
    }
  }
}

void sub_2409BA368()
{
  if (!qword_268C99D60)
  {
    sub_2409BA268();
    sub_2409BA088(255, &qword_268C998E8, MEMORY[0x263F44068], MEMORY[0x263F8D488]);
    sub_2409BA774(&qword_268C99D68, (void (*)(uint64_t))sub_2409BA268);
    unint64_t v0 = sub_240A04488();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99D60);
    }
  }
}

uint64_t sub_2409BA444()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2409BA454@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2409B8700(a1, a2);
}

uint64_t sub_2409BA460()
{
  sub_240A03998();

  return sub_2409B89AC();
}

uint64_t sub_2409BA4E0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2409BA4F0@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2409B8A84(a1, a2);
}

uint64_t sub_2409BA4F8(uint64_t a1)
{
  sub_2409BA088(0, &qword_268C99AB8, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2409BA588(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_240A03998() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_2409B8D30(a1, v6, a2);
}

uint64_t sub_2409BA60C()
{
  uint64_t v1 = sub_240A03998();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

void sub_2409BA69C(void *a1)
{
  sub_240A03998();

  sub_2409B9860(a1);
}

void sub_2409BA70C()
{
  if (!qword_268C99690)
  {
    sub_240983260(255, (unint64_t *)&qword_268C99698);
    unint64_t v0 = sub_240A05358();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99690);
    }
  }
}

uint64_t sub_2409BA774(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2409BA7BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_240A040F8();
  uint64_t v3 = MEMORY[0x263F81F20];
  a1[3] = v2;
  a1[4] = v3;
  sub_24097F464(a1);
  sub_240A040C8();
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return sub_240A040D8();
}

uint64_t sub_2409BA828()
{
  uint64_t v1 = *(void *)(v0 + 8);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return v1;
}

uint64_t sub_2409BA858(void *a1, void *a2)
{
  uint64_t v2 = a1[5];
  uint64_t v3 = a1[6];
  uint64_t v4 = a2[5];
  uint64_t v5 = a2[6];
  BOOL v6 = a1[3] == a2[3] && a1[4] == a2[4];
  if (v6 || (v7 = sub_240A05368(), uint64_t result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_240A05368();
    }
  }
  return result;
}

uint64_t sub_2409BA8FC()
{
  return sub_240A05418();
}

uint64_t sub_2409BA984()
{
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_240A04C98();
  swift_bridgeObjectRelease();
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_240A04C98();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2409BAA08()
{
  return sub_240A05418();
}

uint64_t sub_2409BAA8C()
{
  sub_2409BB098(0, &qword_268C99D80, MEMORY[0x263F81DF8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v14 - v1;
  uint64_t v3 = sub_240A04068();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  BOOL v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240A04028();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409BB098(0, &qword_268C99D88, MEMORY[0x263F81E08], MEMORY[0x263F8E0F8]);
  sub_240A04078();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_240A06870;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F81DE8], v7);
  uint64_t v12 = sub_240A04038();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v2, 1, 1, v12);
  sub_240A04058();
  sub_240A04048();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v11;
}

uint64_t sub_2409BADA0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = *(void *)(v2 + 32);
  uint64_t v9 = *(void *)(v2 + 40);
  uint64_t v10 = *(void *)(v2 + 48);
  a2[3] = a1;
  a2[4] = sub_2409BB0FC();
  uint64_t v11 = (void *)swift_allocObject();
  *a2 = v11;
  v11[2] = v4;
  v11[3] = v5;
  v11[4] = v6;
  v11[5] = v7;
  v11[6] = v8;
  v11[7] = v9;
  v11[8] = v10;
  id v12 = v4;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();

  return _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
}

uint64_t sub_2409BAE44(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_240A04018();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240A04AF8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v18 - v12;
  sub_240A03FE8();
  sub_240A04AE8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  sub_2409BB1A0();
  id v15 = objc_allocWithZone(v14);
  uint64_t v16 = (void *)sub_240A047C8();
  objc_msgSend(a2, sel_showViewController_sender_, v16, 0);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
}

unint64_t sub_2409BB044()
{
  unint64_t result = qword_268C99D98;
  if (!qword_268C99D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99D98);
  }
  return result;
}

void sub_2409BB098(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_2409BB0FC()
{
  unint64_t result = qword_268C99DA0;
  if (!qword_268C99DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99DA0);
  }
  return result;
}

uint64_t sub_2409BB150()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

void sub_2409BB1A0()
{
  if (!qword_268C99DA8)
  {
    sub_240A04AF8();
    sub_2409BB204();
    unint64_t v0 = sub_240A047D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99DA8);
    }
  }
}

unint64_t sub_2409BB204()
{
  unint64_t result = qword_268C99DB0;
  if (!qword_268C99DB0)
  {
    sub_240A04AF8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99DB0);
  }
  return result;
}

uint64_t destroy for HearingTestAboutItem(id *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for HearingTestAboutItem(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v6;
  a1[6] = *(void *)(a2 + 48);
  id v7 = v3;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return a1;
}

uint64_t assignWithCopy for HearingTestAboutItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for HearingTestAboutItem(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for HearingTestAboutItem(uint64_t a1, void *a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[6];
  *(void *)(a1 + 40) = a2[5];
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HearingTestAboutItem(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HearingTestAboutItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HearingTestAboutItem()
{
  return &type metadata for HearingTestAboutItem;
}

uint64_t sub_2409BB4DC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_240A03D78();
  uint64_t v4 = sub_240A032E8();
  uint64_t v6 = v5;
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  uint64_t result = sub_240A02828();
  *a2 = a1;
  a2[1] = v4;
  a2[2] = v6;
  a2[3] = 0xD000000000000014;
  a2[4] = 0x8000000240A08280;
  a2[5] = result;
  a2[6] = v8;
  return result;
}

uint64_t sub_2409BB5DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2409BB5F0);
}

uint64_t sub_2409BB5F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_240A02B08();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_2409BB6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2409BB6B4);
}

uint64_t sub_2409BB6B4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_240A02B08();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2409BB75C()
{
  uint64_t result = sub_240A02B08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2409BB804()
{
  sub_2409A3698(0, &qword_26AFD4488, (uint64_t (*)(uint64_t))sub_24099BFD8, MEMORY[0x263EFDDF8]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  unint64_t v4 = (char *)&v15 - v3;
  sub_24099BFD8(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v15 - v9;
  uint64_t v11 = (void *)sub_240A02C98();
  char v12 = sub_2409EEA30();
  sub_2409EB83C(v12, (uint64_t)v10);

  sub_24099C00C((uint64_t)v10, (uint64_t)v8);
  sub_240A04558();
  sub_2409A36FC();
  uint64_t v13 = sub_240A04628();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_24099C070((uint64_t)v10);
  return v13;
}

ValueMetadata *type metadata accessor for HearingAidsArticleDataProvider()
{
  return &type metadata for HearingAidsArticleDataProvider;
}

uint64_t sub_2409BB9E0@<X0>(uint64_t a1@<X8>)
{
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_26AFD6468;
  uint64_t v3 = (void *)sub_240A04C18();
  unint64_t v4 = (void *)sub_240A04C18();
  id v5 = objc_msgSend(v2, sel_URLForResource_withExtension_, v3, v4);

  if (v5)
  {
    sub_240A02888();

    uint64_t v6 = sub_240A028A8();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
    uint64_t v8 = v6;
    uint64_t v9 = a1;
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v11 = sub_240A028A8();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v8 = v11;
    uint64_t v9 = a1;
    uint64_t v10 = 1;
  }

  return v7(v9, v10, 1, v8);
}

uint64_t sub_2409BBB34()
{
  uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_2409BCF1C(0, &qword_268C99670, MEMORY[0x263F42AE8], MEMORY[0x263F8E0F8]);
  uint64_t v137 = sub_240A02D88();
  uint64_t v141 = *(void *)(v137 - 8);
  uint64_t v139 = *(void *)(v141 + 72);
  unint64_t v1 = (*(unsigned __int8 *)(v141 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v141 + 80);
  uint64_t v130 = swift_allocObject();
  *(_OWORD *)(v130 + 16) = xmmword_240A07C30;
  sub_2409BCD50();
  uint64_t v2 = v130 + v1;
  unint64_t v4 = (void *)(v130 + v1 + v3[16]);
  id v5 = (void *)(v130 + v1 + v3[20]);
  unint64_t v6 = v130 + v1 + v3[24];
  uint64_t v7 = v2;
  sub_2409BB9E0(v2);
  uint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x263F42B00];
  sub_2409BCF1C(0, &qword_268C99DD0, MEMORY[0x263F42B00], v0);
  sub_240A02E28();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_240A06800;
  sub_240A02E08();
  sub_240A02E18();
  sub_2409BCEC4();
  sub_2409BCF1C(0, &qword_268C99DE0, v8, MEMORY[0x263F8D488]);
  sub_2409BCF80();
  sub_240A05138();
  *unint64_t v4 = 0;
  v4[1] = 0;
  *id v5 = 0;
  v5[1] = 0;
  *(void *)unint64_t v6 = 0x3FD3333333333333;
  *(unsigned char *)(v6 + 8) = 0;
  uint64_t v9 = *(void (**)(void))(v141 + 104);
  ((void (*)(uint64_t, void, uint64_t))v9)(v7, *MEMORY[0x263F42AC8], v137);
  uint64_t v138 = v9;
  uint64_t v10 = (uint64_t *)(v7 + v139);
  type metadata accessor for HearingAppPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v133 = self;
  id v11 = objc_msgSend(v133, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v12 = sub_240A02828();
  uint64_t v14 = v13;

  *uint64_t v10 = v12;
  v10[1] = v14;
  ((void (*)(uint64_t, void, uint64_t))v9)(v7 + v139, *MEMORY[0x263F42AC0], v137);
  uint64_t v15 = v7 + 2 * v139;
  id v16 = objc_msgSend(v133, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v17 = sub_240A02828();
  uint64_t v19 = v18;

  *(void *)uint64_t v15 = v17;
  *(void *)(v15 + 8) = v19;
  *(unsigned char *)(v15 + 16) = 0;
  unsigned int v135 = *MEMORY[0x263F42AE0];
  v138(v15);
  uint64_t v20 = v7 + 3 * v139;
  id v21 = objc_msgSend(v133, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v22 = sub_240A02828();
  uint64_t v24 = v23;

  *(void *)uint64_t v20 = v22;
  *(void *)(v20 + 8) = v24;
  *(unsigned char *)(v20 + 16) = 0;
  ((void (*)(uint64_t, void, uint64_t))v138)(v20, v135, v137);
  uint64_t v25 = v7 + 4 * v139;
  id v26 = objc_msgSend(v133, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v27 = sub_240A02828();
  uint64_t v29 = v28;

  *(void *)uint64_t v25 = v27;
  *(void *)(v25 + 8) = v29;
  *(unsigned char *)(v25 + 16) = 0;
  ((void (*)(uint64_t, void, uint64_t))v138)(v25, v135, v137);
  uint64_t v30 = (uint64_t *)(v7 + 5 * v139);
  id v31 = objc_msgSend(v133, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v32 = sub_240A02828();
  uint64_t v34 = v33;

  *uint64_t v30 = v32;
  v30[1] = v34;
  v30[2] = 0;
  unsigned int v131 = *MEMORY[0x263F42A80];
  v138((uint64_t)v30);
  uint64_t v35 = v7 + 6 * v139;
  id v36 = objc_msgSend(v133, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v37 = sub_240A02828();
  uint64_t v39 = v38;

  *(void *)uint64_t v35 = v37;
  *(void *)(v35 + 8) = v39;
  *(unsigned char *)(v35 + 16) = 0;
  ((void (*)(uint64_t, void, uint64_t))v138)(v35, v135, v137);
  uint64_t v40 = v7 + 7 * v139;
  id v41 = objc_msgSend(v133, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v42 = sub_240A02828();
  uint64_t v44 = v43;

  *(void *)uint64_t v40 = v42;
  *(void *)(v40 + 8) = v44;
  *(unsigned char *)(v40 + 16) = 0;
  ((void (*)(uint64_t, void, uint64_t))v138)(v40, v135, v137);
  uint64_t v45 = v7 + 8 * v139;
  id v46 = objc_msgSend(v133, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v47 = sub_240A02828();
  uint64_t v49 = v48;

  *(void *)uint64_t v45 = v47;
  *(void *)(v45 + 8) = v49;
  *(unsigned char *)(v45 + 16) = 0;
  ((void (*)(uint64_t, void, uint64_t))v138)(v45, v135, v137);
  uint64_t v50 = v7 + 9 * v139;
  id v51 = objc_msgSend(v133, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v52 = sub_240A02828();
  uint64_t v54 = v53;

  *(void *)uint64_t v50 = v52;
  *(void *)(v50 + 8) = v54;
  *(unsigned char *)(v50 + 16) = 0;
  ((void (*)(uint64_t, void, uint64_t))v138)(v50, v135, v137);
  uint64_t v55 = (uint64_t *)(v7 + 10 * v139);
  id v56 = objc_msgSend(v133, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v57 = sub_240A02828();
  uint64_t v59 = v58;

  *uint64_t v55 = v57;
  v55[1] = v59;
  v55[2] = 0;
  ((void (*)(uint64_t *, void, uint64_t))v138)(v55, v131, v137);
  uint64_t v60 = v7 + 11 * v139;
  id v61 = objc_msgSend(v133, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v62 = sub_240A02828();
  uint64_t v64 = v63;

  *(void *)uint64_t v60 = v62;
  *(void *)(v60 + 8) = v64;
  *(unsigned char *)(v60 + 16) = 0;
  ((void (*)(uint64_t, void, uint64_t))v138)(v60, v135, v137);
  uint64_t v65 = v7 + 12 * v139;
  id v66 = objc_msgSend(v133, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v67 = sub_240A02828();
  uint64_t v69 = v68;

  *(void *)uint64_t v65 = v67;
  *(void *)(v65 + 8) = v69;
  *(unsigned char *)(v65 + 16) = 0;
  ((void (*)(uint64_t, void, uint64_t))v138)(v65, v135, v137);
  uint64_t v70 = v7 + 13 * v139;
  id v71 = objc_msgSend(v133, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v72 = sub_240A02828();
  uint64_t v74 = v73;

  *(void *)uint64_t v70 = v72;
  *(void *)(v70 + 8) = v74;
  *(unsigned char *)(v70 + 16) = 0;
  ((void (*)(uint64_t, void, uint64_t))v138)(v70, v135, v137);
  uint64_t v75 = v7 + 14 * v139;
  id v76 = objc_msgSend(v133, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v77 = sub_240A02828();
  uint64_t v79 = v78;

  *(void *)uint64_t v75 = v77;
  *(void *)(v75 + 8) = v79;
  *(unsigned char *)(v75 + 16) = 0;
  ((void (*)(uint64_t, void, uint64_t))v138)(v75, v135, v137);
  uint64_t v80 = (uint64_t *)(v7 + 15 * v139);
  id v81 = objc_msgSend(v133, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v82 = sub_240A02828();
  uint64_t v84 = v83;

  *uint64_t v80 = v82;
  v80[1] = v84;
  v80[2] = 0;
  ((void (*)(uint64_t *, void, uint64_t))v138)(v80, v131, v137);
  uint64_t v85 = v7 + 16 * v139;
  id v86 = objc_msgSend(v133, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v87 = sub_240A02828();
  uint64_t v89 = v88;

  *(void *)uint64_t v85 = v87;
  *(void *)(v85 + 8) = v89;
  *(unsigned char *)(v85 + 16) = 0;
  ((void (*)(uint64_t, void, uint64_t))v138)(v85, v135, v137);
  uint64_t v140 = (uint64_t *)(v7 + 17 * v139);
  id v90 = objc_msgSend(v133, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v136 = sub_240A02828();
  uint64_t v132 = v91;

  sub_2409BD454(0, (unint64_t *)&qword_26AFD4930, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
  uint64_t v92 = swift_allocObject();
  *(_OWORD *)(v92 + 16) = xmmword_240A083A0;
  id v93 = objc_msgSend(v133, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v94 = sub_240A02828();
  uint64_t v96 = v95;

  *(void *)(v92 + 32) = v94;
  *(void *)(v92 + 40) = v96;
  id v97 = objc_msgSend(v133, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v98 = sub_240A02828();
  uint64_t v100 = v99;

  *(void *)(v92 + 48) = v98;
  *(void *)(v92 + 56) = v100;
  id v101 = objc_msgSend(v133, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v102 = sub_240A02828();
  uint64_t v104 = v103;

  *(void *)(v92 + 64) = v102;
  *(void *)(v92 + 72) = v104;
  id v105 = objc_msgSend(v133, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v106 = sub_240A02828();
  uint64_t v108 = v107;

  *(void *)(v92 + 80) = v106;
  *(void *)(v92 + 88) = v108;
  id v109 = objc_msgSend(v133, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v110 = sub_240A02828();
  uint64_t v112 = v111;

  *(void *)(v92 + 96) = v110;
  *(void *)(v92 + 104) = v112;
  id v113 = objc_msgSend(v133, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v114 = sub_240A02828();
  uint64_t v116 = v115;

  *(void *)(v92 + 112) = v114;
  *(void *)(v92 + 120) = v116;
  id v117 = objc_msgSend(v133, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v118 = sub_240A02828();
  uint64_t v120 = v119;

  *(void *)(v92 + 128) = v118;
  *(void *)(v92 + 136) = v120;
  id v121 = objc_msgSend(v133, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v122 = sub_240A02828();
  uint64_t v124 = v123;

  *(void *)(v92 + 144) = v122;
  *(void *)(v92 + 152) = v124;
  id v125 = objc_msgSend(v133, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v126 = sub_240A02828();
  uint64_t v128 = v127;

  *(void *)(v92 + 160) = v126;
  *(void *)(v92 + 168) = v128;
  *uint64_t v140 = v136;
  v140[1] = v132;
  v140[2] = v92;
  v138((uint64_t)v140);
  return v130;
}

unint64_t sub_2409BCD20()
{
  return 0xD000000000000026;
}

void sub_2409BCD50()
{
  if (!qword_268C99DB8)
  {
    MEMORY[0x270FA5388](0);
    sub_2409BCF1C(255, (unint64_t *)&qword_26AFD3F48, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    sub_240A02E28();
    uint64_t v0 = (uint64_t (*)(void, uint64_t))MEMORY[0x263F8D8F0];
    sub_2409BD454(255, &qword_268C99DC0, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
    sub_2409BD454(255, &qword_268C99DC8, MEMORY[0x263F8D538], v0);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v2) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_268C99DB8);
    }
  }
}

unint64_t sub_2409BCEC4()
{
  unint64_t result = qword_268C99DD8;
  if (!qword_268C99DD8)
  {
    sub_240A02E28();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99DD8);
  }
  return result;
}

void sub_2409BCF1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_2409BCF80()
{
  unint64_t result = qword_268C99DE8;
  if (!qword_268C99DE8)
  {
    sub_2409BCF1C(255, &qword_268C99DE0, MEMORY[0x263F42B00], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99DE8);
  }
  return result;
}

uint64_t sub_2409BD008()
{
  type metadata accessor for HearingAppPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_240A02828();

  return v2;
}

uint64_t sub_2409BD0CC()
{
  type metadata accessor for HearingAppPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_240A02828();

  return v2;
}

uint64_t sub_2409BD198()
{
  type metadata accessor for HearingAppPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_240A02828();

  return v2;
}

id sub_2409BD260()
{
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  id v0 = (id)qword_26AFD6468;
  id v1 = (void *)sub_240A04C18();
  id v2 = objc_msgSend(self, sel_imageNamed_inBundle_, v1, v0);

  if (v2) {
    return v2;
  }
  id v4 = objc_allocWithZone(MEMORY[0x263F827E8]);

  return objc_msgSend(v4, sel_init);
}

uint64_t sub_2409BD350()
{
  sub_2409BD454(0, (unint64_t *)&qword_26AFD4290, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240A06A80;
  sub_24098B07C();
  *(void *)(inited + 32) = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_audiogramSampleType);
  sub_240A04D38();
  if (inited >> 62)
  {
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v3 = sub_240A05288();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v2 = MEMORY[0x263F8EE88];
    goto LABEL_6;
  }
  if (!*(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  sub_2409E3A88(inited);
  uint64_t v2 = v1;
LABEL_6:
  swift_bridgeObjectRelease();
  return v2;
}

void sub_2409BD454(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t type metadata accessor for NoiseNotificationsSpecifierDataSource(uint64_t a1)
{
  return sub_2409A1004(a1, (uint64_t *)&unk_268C99E58);
}

uint64_t sub_2409BD4C0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2409BD550@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = qword_26AFD4988;
  id v4 = *(id *)(v1 + qword_268C99E18);
  if (v3 != -1) {
    swift_once();
  }
  unsigned int v5 = objc_msgSend((id)qword_26AFD63C8, sel_noiseEnabled);

  unsigned int v6 = objc_msgSend((id)qword_26AFD63C8, sel_notificationsEnabled);
  uint64_t v7 = sub_240A02E88();
  unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);
  uint64_t v9 = (unsigned int *)MEMORY[0x263F435C8];
  if ((v5 & v6) == 0) {
    uint64_t v9 = (unsigned int *)MEMORY[0x263F435D0];
  }
  uint64_t v10 = *v9;

  return v8(a1, v10, v7);
}

uint64_t sub_2409BD64C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  uint64_t v4 = sub_240A02E88();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v34 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v32 - v8;
  uint64_t v10 = sub_240A02EE8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409A67A0();
  uint64_t v14 = sub_240A02EB8();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (v14)
  {
    v32[1] = v14;
    uint64_t v33 = a1;
    uint64_t v15 = qword_26AFD4988;
    id v16 = *(id *)(v2 + qword_268C99E18);
    if (v15 != -1) {
      swift_once();
    }
    unsigned int v17 = objc_msgSend((id)qword_26AFD63C8, sel_noiseEnabled);

    unsigned int v18 = objc_msgSend((id)qword_26AFD63C8, sel_notificationsEnabled);
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
    unsigned int v20 = *MEMORY[0x263F435C8];
    unsigned int v21 = *MEMORY[0x263F435D0];
    if ((v17 & v18) != 0) {
      uint64_t v22 = v20;
    }
    else {
      uint64_t v22 = v21;
    }
    v19(v9, v22, v4);
    sub_2409A682C((uint64_t)v9);
    uint64_t v23 = *(void (**)(char *, uint64_t))(v5 + 8);
    v23(v9, v4);
    uint64_t v24 = (void *)qword_26AFD63C8;
    unsigned int v25 = objc_msgSend((id)qword_26AFD63C8, sel_noiseEnabled);
    if ((v25 & objc_msgSend(v24, sel_notificationsEnabled)) != 0) {
      uint64_t v26 = v20;
    }
    else {
      uint64_t v26 = v21;
    }
    uint64_t v27 = v34;
    v19(v34, v26, v4);
    sub_240A02F28();
    sub_240A02F08();
    v23(v27, v4);
    uint64_t v28 = v33;
    sub_240A03B38();
    uint64_t v29 = sub_240A03B48();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 0, 1, v29);
  }
  else
  {
    uint64_t v31 = sub_240A03B48();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(a1, 1, 1, v31);
  }
}

uint64_t sub_2409BD9EC()
{
  uint64_t v1 = v0;
  unint64_t v13 = MEMORY[0x263F8EE78];
  unint64_t v2 = sub_2409BDB78();
  sub_2409922A4(v2);
  uint64_t v3 = qword_26AFD4988;
  id v4 = *(id *)(v0 + qword_268C99E18);
  if (v3 != -1) {
    swift_once();
  }
  unsigned int v5 = objc_msgSend((id)qword_26AFD63C8, sel_noiseEnabled);

  if (v5)
  {
    *(void *)(v1 + qword_268C99E30) = sub_2409BDE20();
    swift_bridgeObjectRelease();
    unint64_t v6 = _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_2409922A4(v6);
  }
  unint64_t v7 = v13;
  if (v13 >> 62)
  {
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v12 = sub_240A05278();
    swift_bridgeObjectRelease_n();
    return v12;
  }
  else
  {
    uint64_t v8 = v13 & 0xFFFFFFFFFFFFFF8;
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_240A05378();
    if (swift_dynamicCastMetatype() || (uint64_t v10 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v11 = (void *)(v8 + 32);
      while (*v11)
      {
        ++v11;
        if (!--v10) {
          goto LABEL_7;
        }
      }
      swift_bridgeObjectRelease();
      return v8 | 1;
    }
    return v7;
  }
}

uint64_t sub_2409BDB78()
{
  uint64_t v1 = v0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  uint64_t v15 = MEMORY[0x263F8EE78];
  uint64_t v3 = self;
  id v4 = (void *)sub_240A04C18();
  id v5 = objc_msgSend(v3, sel_groupSpecifierWithID_, v4);

  if (v5)
  {
    uint64_t v6 = qword_268C99E10;
    id v7 = objc_msgSend(*(id *)(v1 + qword_268C99E10), sel_environmentalMeasurementsFooterDescription);
    if (!v7)
    {
      sub_240A04C58();
      id v7 = (id)sub_240A04C18();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v5, sel_setProperty_forKey_, v7, *MEMORY[0x263F600F8]);

    id v8 = v5;
    MEMORY[0x245604930]();
    if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_240A04D58();
    }
    sub_240A04D68();
    sub_240A04D38();
    id v9 = objc_msgSend(*(id *)(v1 + v6), sel_environmentalMeasurementsTitleDescription);
    if (!v9)
    {
      sub_240A04C58();
      id v9 = (id)sub_240A04C18();
      swift_bridgeObjectRelease();
    }
    id v10 = objc_msgSend(v3, sel_preferenceSpecifierNamed_target_set_get_detail_cell_edit_, v9, v1, sel_setEnvironmentalSoundMeasurementsWithValue_, sel_environmentalSoundMeasurements, 0, 6, 0);

    if (v10)
    {
      uint64_t v11 = (void *)sub_240A04C18();
      objc_msgSend(v10, sel_setIdentifier_, v11);

      uint64_t v12 = (void *)sub_240A04D88();
      objc_msgSend(v10, sel_setProperty_forKey_, v12, *MEMORY[0x263F5FEF8]);

      id v13 = v10;
      MEMORY[0x245604930]();
      if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_240A04D58();
      }
      sub_240A04D68();
      sub_240A04D38();

      return v15;
    }
    else
    {
      uint64_t v2 = v15;
    }
  }
  return v2;
}

uint64_t sub_2409BDE20()
{
  uint64_t v1 = v0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  uint64_t v26 = MEMORY[0x263F8EE78];
  uint64_t v3 = self;
  id v4 = (void *)sub_240A04C18();
  id v5 = objc_msgSend(v3, sel_groupSpecifierWithID_, v4);

  if (v5)
  {
    uint64_t v6 = qword_268C99E10;
    id v7 = objc_msgSend(*(id *)(v1 + qword_268C99E10), sel_noiseThresholdSectionTitle);
    if (!v7)
    {
      sub_240A04C58();
      id v7 = (id)sub_240A04C18();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v5, sel_setName_, v7);

    id v8 = objc_msgSend(*(id *)(v1 + v6), sel_noiseThresholdFooterDescription);
    if (!v8)
    {
      sub_240A04C58();
      id v8 = (id)sub_240A04C18();
      swift_bridgeObjectRelease();
    }
    sub_240A04C58();
    id v9 = objc_msgSend(*(id *)(v1 + v6), sel_noiseThresholdFooterLinkTitle);
    if (!v9)
    {
      sub_240A04C58();
      id v9 = (id)sub_240A04C18();
      swift_bridgeObjectRelease();
    }
    id v10 = objc_allocWithZone(NSString);
    uint64_t v11 = (void *)sub_240A04C18();
    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(v10, sel_initWithString_, v11);

    id v13 = objc_msgSend(v12, sel_localizedStandardRangeOfString_, v9);
    NSUInteger v15 = v14;

    sub_240A02A98();
    id v16 = (void *)sub_240A04C18();
    objc_msgSend(v5, sel_setProperty_forKey_, v16, *MEMORY[0x263F600C0]);

    objc_msgSend(v5, sel_setProperty_forKey_, v8, *MEMORY[0x263F600E8]);
    v27.location = (NSUInteger)v13;
    v27.length = v15;
    unsigned int v17 = NSStringFromRange(v27);
    if (!v17)
    {
      sub_240A04C58();
      unsigned int v17 = (NSString *)sub_240A04C18();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v5, sel_setProperty_forKey_, v17, *MEMORY[0x263F600D0]);

    id v18 = objc_msgSend(self, sel_valueWithNonretainedObject_, v1);
    objc_msgSend(v5, sel_setProperty_forKey_, v18, *MEMORY[0x263F600E0]);
    uint64_t v19 = (void *)sub_240A04C18();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setProperty_forKey_, v19, *MEMORY[0x263F600C8]);

    id v20 = v5;
    MEMORY[0x245604930]();
    if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_240A04D58();
    }
    sub_240A04D68();
    sub_240A04D38();
    id v21 = objc_msgSend(*(id *)(v1 + v6), sel_noiseThresholdTitleDescription);
    if (!v21)
    {
      sub_240A04C58();
      id v21 = (id)sub_240A04C18();
      swift_bridgeObjectRelease();
    }
    type metadata accessor for NoiseThresholdSpecifierViewController(0);
    id v22 = objc_msgSend(v3, sel_preferenceSpecifierNamed_target_set_get_detail_cell_edit_, v21, v1, 0, sel_getNoiseThresholdValue, swift_getObjCClassFromMetadata(), 2, 0);

    if (v22)
    {
      uint64_t v23 = (void *)sub_240A04C18();
      objc_msgSend(v22, sel_setIdentifier_, v23);

      objc_msgSend(v22, sel_setButtonAction_, sel_didSelectNoiseThreshold);
      id v24 = v22;
      MEMORY[0x245604930]();
      if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_240A04D58();
      }
      sub_240A04D68();
      sub_240A04D38();

      return v26;
    }
    else
    {
      uint64_t v2 = v26;
    }
  }
  return v2;
}

uint64_t sub_2409BE300()
{
  sub_2409AC610(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409AC644(0);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409AC6DC();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v31 = v9;
  uint64_t v32 = v10;
  MEMORY[0x270FA5388](v9);
  id v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409AC774();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v33 = v13;
  uint64_t v34 = v14;
  MEMORY[0x270FA5388](v13);
  id v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409BF9D0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v35 = v17;
  uint64_t v36 = v18;
  MEMORY[0x270FA5388](v17);
  id v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v21 = *(void **)(v0 + qword_268C99E18);
  swift_beginAccess();
  sub_2409BFE08(0, &qword_26AFD4860, (uint64_t (*)(uint64_t))sub_24097FDC0, MEMORY[0x263EFDE58]);
  id v22 = v21;
  sub_240A045B8();
  swift_endAccess();

  sub_2409BFDC0((unint64_t *)&qword_26AFD4838, sub_2409AC644);
  sub_240A04688();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_2409AC868();
  id v37 = (id)sub_240A04F38();
  uint64_t v23 = sub_240A04F28();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v3, 1, 1, v23);
  sub_2409BFDC0((unint64_t *)&unk_268C99C50, (void (*)(uint64_t))sub_2409AC6DC);
  sub_2409BFDC0((unint64_t *)&qword_268C99AC0, (void (*)(uint64_t))sub_2409AC868);
  uint64_t v24 = v31;
  sub_240A04678();
  sub_2409BFA64((uint64_t)v3, (uint64_t (*)(void))sub_2409AC610);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v24);
  swift_allocObject();
  uint64_t v25 = v30;
  swift_unknownObjectWeakInit();
  sub_2409BFDC0(&qword_268C99AC8, (void (*)(uint64_t))sub_2409AC774);
  uint64_t v26 = v33;
  sub_240A04668();
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v16, v26);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_2409BFDC0(&qword_268C99E90, (void (*)(uint64_t))sub_2409BF9D0);
  uint64_t v27 = v35;
  uint64_t v28 = sub_240A046A8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v20, v27);
  *(void *)(v25 + qword_268C99E20) = v28;
  return swift_release();
}

uint64_t sub_2409BE8E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = (unsigned char *)MEMORY[0x245605950](v2);
  if (v3)
  {
    char v4 = v3[qword_268C99E28] ^ 1;
    v3[qword_268C99E28] = 0;
  }
  else
  {
    char v4 = 0;
  }
  return v4 & 1;
}

void sub_2409BE954(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x245605950](v2);
  if (v3)
  {
    char v4 = (void *)v3;
    uint64_t v5 = v3 + qword_268C99E38;
    swift_beginAccess();
    uint64_t v6 = MEMORY[0x245605950](v5);

    if (v6)
    {
      swift_getObjectType();
      sub_240A03B28();
      sub_240A03B98();
    }
  }
}

void sub_2409BE9F8(void *a1)
{
  swift_getObjectType();
  sub_24098AB8C();
  MEMORY[0x270FA5388](v2 - 8);
  char v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = a1;
  sub_2409A661C((uint64_t)v4);
  uint64_t v6 = sub_240A028A8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_2409BFA64((uint64_t)v4, (uint64_t (*)(void))sub_24098AB8C);
  }
  else
  {
    sub_240A02868();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
}

id sub_2409BEB38(char *a1)
{
  uint64_t v1 = *(void **)&a1[qword_268C99E18];
  uint64_t v2 = qword_26AFD4988;
  uint64_t v3 = a1;
  id v4 = v1;
  if (v2 != -1) {
    swift_once();
  }
  id v5 = objc_msgSend((id)qword_26AFD63C8, sel_noiseEnabled);

  id v6 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, v5);

  return v6;
}

uint64_t sub_2409BEBFC(void *a1)
{
  uint64_t v2 = v1;
  *(unsigned char *)(v2 + qword_268C99E28) = 1;
  id v4 = *(id *)(v2 + qword_268C99E10);
  objc_msgSend(v4, sel_setNoiseEnabled_, objc_msgSend(a1, sel_BOOLValue));

  if (objc_msgSend(a1, sel_BOOLValue))
  {
    uint64_t v5 = v2 + qword_268C99E38;
    swift_beginAccess();
    if (MEMORY[0x245605950](v5))
    {
      swift_getObjectType();
      sub_240A03B08();
      sub_240A03B98();
    }
    uint64_t v6 = sub_2409BDE20();
    uint64_t v7 = qword_268C99E30;
    *(void *)(v2 + qword_268C99E30) = v6;
    swift_bridgeObjectRelease();
    uint64_t result = MEMORY[0x245605950](v5);
    if (result)
    {
      unint64_t v9 = *(void *)(v2 + v7);
      if (v9 >> 62)
      {
        _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        sub_240A05278();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain_n();
        sub_240A05378();
        if (!swift_dynamicCastMetatype())
        {
          uint64_t v12 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v12)
          {
            uint64_t v13 = (void *)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
            do
            {
              if (!*v13) {
                break;
              }
              ++v13;
              --v12;
            }
            while (v12);
          }
        }
        swift_bridgeObjectRelease();
      }
      swift_getObjectType();
      sub_240A03AF8();
      swift_bridgeObjectRelease();
      return sub_240A03B98();
    }
  }
  else
  {
    unint64_t v10 = *(void *)(v2 + qword_268C99E30);
    *(void *)(v2 + qword_268C99E30) = MEMORY[0x263F8EE78];
    uint64_t v11 = v2 + qword_268C99E38;
    swift_beginAccess();
    if (MEMORY[0x245605950](v11))
    {
      if (v10 >> 62)
      {
        _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        sub_240A05278();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        sub_240A05378();
        if (!swift_dynamicCastMetatype())
        {
          uint64_t v14 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v14)
          {
            uint64_t v15 = (void *)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
            do
            {
              if (!*v15) {
                break;
              }
              ++v15;
              --v14;
            }
            while (v14);
          }
        }
        swift_bridgeObjectRelease();
      }
      swift_getObjectType();
      sub_240A03B18();
      swift_bridgeObjectRelease();
      sub_240A03B98();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t result = MEMORY[0x245605950](v11);
    if (result)
    {
      swift_getObjectType();
      sub_240A03B08();
      return sub_240A03B98();
    }
  }
  return result;
}

void sub_2409BEF4C(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_2409BEBFC(v4);
}

id sub_2409BEFB4(char *a1)
{
  uint64_t v2 = qword_268C99E10;
  uint64_t v3 = *(void **)&a1[qword_268C99E10];
  id v4 = a1;
  id v5 = objc_msgSend(*(id *)&a1[v2], sel_localizedNoiseThresholdValue_, objc_msgSend(v3, sel_noiseThresholdCurrentValue));
  sub_240A04C58();

  uint64_t v6 = (void *)sub_240A04C18();
  swift_bridgeObjectRelease();

  return v6;
}

void sub_2409BF060(char *a1)
{
  uint64_t v2 = (void *)MEMORY[0x245605950](&a1[qword_268C99E40]);
  if (v2)
  {
    uint64_t v3 = *(void (**)(void))(qword_268C9AA40 + (*MEMORY[0x263F8EED0] & *v2) + 72);
    id v5 = v2;
    id v4 = a1;
    v3();
  }
}

void sub_2409BF130()
{
}

uint64_t sub_2409BF160()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  sub_2409AC990(v0 + qword_268C99E38);
  uint64_t v1 = v0 + qword_268C99E40;

  return sub_2409AC990(v1);
}

id sub_2409BF230()
{
  return sub_2409BF93C(type metadata accessor for NoiseNotificationsSpecifierDataSource);
}

uint64_t sub_2409BF248(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  sub_2409AC990(a1 + qword_268C99E38);
  uint64_t v2 = a1 + qword_268C99E40;

  return sub_2409AC990(v2);
}

uint64_t sub_2409BF324()
{
  return type metadata accessor for NoiseNotificationsSpecifierDataSource(0);
}

uint64_t type metadata accessor for NoiseNotificationsSettingsViewController(uint64_t a1)
{
  return sub_2409A1004(a1, (uint64_t *)&unk_268C99E78);
}

uint64_t sub_2409BF34C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2409BF39C()
{
  uint64_t v1 = v0 + qword_268C99E38;
  swift_beginAccess();
  return MEMORY[0x245605950](v1);
}

uint64_t sub_2409BF3EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + qword_268C99E38;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return sub_240A03B98();
}

void (*sub_2409BF458(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = qword_268C99E38;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x245605950](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  void v3[3] = v6;
  v3[4] = v7;
  return sub_2409B19B4;
}

id sub_2409BF4E8(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = v3;
  v23[1] = a3;
  uint64_t v24 = a2;
  swift_getObjectType();
  uint64_t v7 = sub_240A03098();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = qword_268C99E70;
  id v12 = objc_allocWithZone((Class)type metadata accessor for NoiseAvailability());
  uint64_t v13 = v3;
  id v14 = sub_24097F840(0);
  *(void *)&v4[v11] = v14;
  *(void *)&v13[qword_268C99E68] = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  objc_allocWithZone((Class)type metadata accessor for NoiseNotificationsSpecifierDataSource(0));
  id v15 = a1;
  id v16 = v14;
  id v17 = sub_2409BFB0C(v15, v16, (uint64_t)v10);

  sub_2409BFDC0(&qword_268C99E98, (void (*)(uint64_t))type metadata accessor for NoiseNotificationsSpecifierDataSource);
  uint64_t v18 = (char *)v17;
  uint64_t v19 = (void *)sub_240A03A98();
  *(void *)&v18[qword_268C99E40 + 8] = &off_26F4FB1F0;
  swift_unknownObjectWeakAssign();
  id v20 = v19;
  sub_2409A66E4();
  id v21 = (void *)sub_240A04C18();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_setTitle_, v21);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v24, v7);
  return v20;
}

void sub_2409BF754(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = qword_268C99E70;
  id v6 = objc_allocWithZone((Class)type metadata accessor for NoiseAvailability());
  id v7 = a3;
  *(void *)&a1[v5] = sub_24097F840(0);

  sub_240A05258();
  __break(1u);
}

void sub_2409BF7EC()
{
  sub_240A03A88();
  uint64_t v1 = *(void **)&v0[qword_268C99E68];
  uint64_t v2 = *(void **)&v0[qword_268C99E70];
  id v3 = objc_allocWithZone((Class)type metadata accessor for NoiseThresholdSpecifierViewController(0));
  id v6 = sub_2409F4124(v1, v2);
  id v4 = objc_msgSend(v0, sel_navigationController);
  if (v4)
  {
    uint64_t v5 = v4;
    objc_msgSend(v4, sel_pushViewController_animated_, v6, 1);
  }
}

void sub_2409BF8B4()
{
}

void sub_2409BF8E4()
{
  uint64_t v1 = *(void **)(v0 + qword_268C99E70);
}

id sub_2409BF924()
{
  return sub_2409BF93C(type metadata accessor for NoiseNotificationsSettingsViewController);
}

id sub_2409BF93C(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

void sub_2409BF97C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + qword_268C99E70);
}

uint64_t sub_2409BF9C8()
{
  return type metadata accessor for NoiseNotificationsSettingsViewController(0);
}

void sub_2409BF9D0()
{
  if (!qword_268C99E88)
  {
    sub_2409AC774();
    sub_2409BFDC0(&qword_268C99AC8, (void (*)(uint64_t))sub_2409AC774);
    unint64_t v0 = sub_240A044D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99E88);
    }
  }
}

uint64_t sub_2409BFA64(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2409BFAC4()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2409BFAFC(uint64_t a1)
{
  return sub_2409BE8E4(a1, v1);
}

void sub_2409BFB04(uint64_t a1)
{
  sub_2409BE954(a1, v1);
}

id sub_2409BFB0C(void *a1, void *a2, uint64_t a3)
{
  swift_getObjectType();
  sub_2409BFE08(0, (unint64_t *)&unk_268C99B88, MEMORY[0x263F43A90], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v20 - v8;
  unint64_t v10 = (void *)(v3 + qword_268C99DF0);
  *unint64_t v10 = 0xD000000000000029;
  v10[1] = 0x8000000240A0CB90;
  uint64_t v11 = (void *)(v3 + qword_268C99DF8);
  *uint64_t v11 = 0xD00000000000002ALL;
  v11[1] = 0x8000000240A0CBC0;
  id v12 = (void *)(v3 + qword_268C99E00);
  *id v12 = 0xD000000000000018;
  v12[1] = 0x8000000240A0CBF0;
  uint64_t v13 = (void *)(v3 + qword_268C99E08);
  *uint64_t v13 = 0xD00000000000001CLL;
  v13[1] = 0x8000000240A0CC10;
  *(void *)(v3 + qword_268C99E20) = 0;
  *(unsigned char *)(v3 + qword_268C99E28) = 0;
  *(void *)(v3 + qword_268C99E30) = MEMORY[0x263F8EE78];
  *(void *)(v3 + qword_268C99E38 + 8) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v3 + qword_268C99E40 + 8) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v3 + qword_268C99E10) = a1;
  *(void *)(v3 + qword_268C99E18) = a2;
  sub_2409A6784();
  uint64_t v14 = sub_240A03098();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v9, a3, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v9, 0, 1, v14);
  id v16 = a1;
  id v17 = a2;
  id v18 = (id)sub_240A03088();
  sub_2409BE300();

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a3, v14);
  return v18;
}

uint64_t sub_2409BFDC0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2409BFE08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

double sub_2409BFE6C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(a1, sel_identifier);
  uint64_t v4 = sub_240A04C58();
  uint64_t v6 = v5;

  if (v4 == 0xD00000000000002ALL && v6 == 0x8000000240A0A3B0 || (sub_240A05368() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = (objc_class *)type metadata accessor for NoiseNotificationsDataTypeDetailConfigurationProvider();
    id v8 = objc_msgSend(objc_allocWithZone(v7), sel_init);
    *(void *)(a2 + 24) = v7;
    uint64_t v9 = (unint64_t *)&unk_268C99EA8;
    unint64_t v10 = type metadata accessor for NoiseNotificationsDataTypeDetailConfigurationProvider;
LABEL_5:
    *(void *)(a2 + 32) = sub_2409C004C(v9, (void (*)(uint64_t))v10);
    *(void *)a2 = v8;
    return result;
  }
  if (v4 == 0xD000000000000033 && v6 == 0x8000000240A0A3E0)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    uint64_t v13 = (objc_class *)type metadata accessor for HeadphoneNotificationsDataDetailConfigurationProvider();
    id v8 = objc_msgSend(objc_allocWithZone(v13), sel_init);
    *(void *)(a2 + 24) = v13;
    uint64_t v9 = (unint64_t *)&unk_268C99EA0;
    unint64_t v10 = type metadata accessor for HeadphoneNotificationsDataDetailConfigurationProvider;
    goto LABEL_5;
  }
  char v12 = sub_240A05368();
  swift_bridgeObjectRelease();
  if (v12) {
    goto LABEL_10;
  }
  *(void *)(a2 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

double sub_2409C0034@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2409BFE6C(a1, a2);
}

uint64_t sub_2409C004C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2409C0094(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for AudiogramPDFAudiogramChart.Model(0);
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v2[7] = type metadata accessor for AudiogramPDFProviderRequest(0);
  v2[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2409C0184, 0, 0);
}

uint64_t sub_2409C0184()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = (void *)v0[8];
  uint64_t v3 = (void *)v0[2];
  uint64_t v4 = (char *)v1 + *(int *)(v2 + 20);
  uint64_t v5 = sub_240A02978();
  uint64_t v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  uint64_t v7 = (char *)v1 + *(int *)(v2 + 24);
  sub_2409C0B70(v3);
  sub_240A02958();
  v6(v7, 0, 1, v5);
  *uint64_t v1 = v3;
  uint64_t v11 = (uint64_t (*)(uint64_t))((char *)&dword_268C996F8 + dword_268C996F8);
  id v8 = (void *)swift_task_alloc();
  v0[9] = v8;
  *id v8 = v0;
  v8[1] = sub_2409C02D4;
  uint64_t v9 = v0[8];
  return v11(v9);
}

uint64_t sub_2409C02D4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 80) = a1;
  *(void *)(v3 + 88) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_2409C0AD0;
  }
  else {
    uint64_t v4 = sub_2409C03E8;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2409C03E8()
{
  unint64_t v1 = v0[10];
  if (v1 >> 62) {
    goto LABEL_107;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v99 = MEMORY[0x263F8EE78];
    uint64_t result = sub_240992B00(0, v2 & ~(v2 >> 63), 0);
    if ((v2 & 0x8000000000000000) == 0)
    {
      uint64_t v5 = 0;
      uint64_t v0 = v90;
      uint64_t v94 = (int *)v90[4];
      uint64_t v3 = v99;
      uint64_t v88 = v2;
      unint64_t v89 = v1 & 0xC000000000000001;
      uint64_t v86 = v90[10] + 32;
      uint64_t v87 = v90[5];
      while (1)
      {
        uint64_t v92 = v5;
        uint64_t v93 = v3;
        id v6 = v89 ? (id)MEMORY[0x245604E50](v5, v0[10]) : *(id *)(v86 + 8 * v5);
        uint64_t v7 = (uint64_t *)v0[6];
        id v91 = v6;
        sub_240988A8C(v91, v7);
        uint64_t v8 = *(uint64_t *)((char *)v7 + *(int *)(type metadata accessor for AudiogramPDFChartData() + 36));
        uint64_t v98 = *(void *)(v8 + 16);
        uint64_t v95 = v8;
        if (v98) {
          break;
        }
        uint64_t v13 = (void *)MEMORY[0x263F8EE78];
        uint64_t v34 = *(void *)(MEMORY[0x263F8EE78] + 16);
        if (!v34) {
          goto LABEL_55;
        }
LABEL_39:
        uint64_t v35 = (__int16 *)(v13 + 8);
        while (1)
        {
          __int16 v36 = *(v35 - 8);
          __int16 v37 = *v35;
          if (v36 != 2)
          {
            int v38 = v36 & 0xFF00;
            int v39 = v36 & 0x100;
            if (v38 != 512 && v39 == 0) {
              break;
            }
          }
          if (*v35 != 2)
          {
            int v41 = v37 & 0xFF00;
            int v42 = v37 & 0x100;
            if (v41 != 512 && v42 == 0) {
              break;
            }
          }
          v35 += 20;
          if (!--v34) {
            goto LABEL_55;
          }
        }
        uint64_t v44 = v0[6];
        swift_bridgeObjectRelease();
        *(unsigned char *)(v44 + v94[5]) = 1;
        if (v98)
        {
LABEL_56:
          uint64_t v48 = qword_268C99320;
          _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
          if (v48 != -1) {
            swift_once();
          }
          uint64_t v49 = 0;
          uint64_t v97 = v8 + 32;
          uint64_t v50 = qword_268C9AA70;
          uint64_t v51 = qword_268C9AA70 + 40;
          uint64_t v45 = (void *)MEMORY[0x263F8EE78];
          while (1)
          {
            uint64_t v53 = v49 + 1;
            if (__OFADD__(v49, 1)) {
              break;
            }
            uint64_t v54 = v97 + 40 * v49;
            double v55 = *(double *)v54;
            uint64_t v56 = *(void *)(v54 + 8);
            unint64_t v1 = *(unsigned __int16 *)(v54 + 16);
            uint64_t v57 = *(void *)(v54 + 24);
            __int16 v58 = *(_WORD *)(v54 + 32);
            uint64_t v59 = *(void *)(v50 + 16);
            if (!v59) {
              goto LABEL_78;
            }
            double v60 = *(double *)(v50 + 32);
            uint64_t v61 = v59 - 1;
            if (v61)
            {
              uint64_t v63 = 0;
              double v62 = *(double *)(v50 + 32);
              do
              {
                if (v62 < *(double *)(v51 + 8 * v63)) {
                  double v62 = *(double *)(v51 + 8 * v63);
                }
                ++v63;
              }
              while (v61 != v63);
              uint64_t v64 = (double *)v51;
              do
              {
                double v65 = *v64++;
                double v66 = v65;
                if (v65 < v60) {
                  double v60 = v66;
                }
                --v61;
              }
              while (v61);
            }
            else
            {
              double v62 = *(double *)(v50 + 32);
            }
            double v67 = round(v62);
            double v68 = round(v60);
            if (v68 > v67) {
              goto LABEL_106;
            }
            if (v55 <= v67 && v68 <= v55)
            {
LABEL_78:
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v45 = sub_240992470(0, v45[2] + 1, 1, v45);
              }
              unint64_t v71 = v45[2];
              unint64_t v70 = v45[3];
              if (v71 >= v70 >> 1) {
                uint64_t v45 = sub_240992470((void *)(v70 > 1), v71 + 1, 1, v45);
              }
              void v45[2] = v71 + 1;
              uint64_t v52 = (double *)&v45[5 * v71];
              v52[4] = v55;
              *((void *)v52 + 5) = v56;
              *((_WORD *)v52 + 24) = v1;
              *((void *)v52 + 7) = v57;
              *((_WORD *)v52 + 32) = v58;
            }
            uint64_t v49 = v53;
            if (v53 == v98)
            {
              swift_bridgeObjectRelease();
              uint64_t v46 = v45[2];
              if (!v46) {
                goto LABEL_95;
              }
              goto LABEL_83;
            }
          }
LABEL_104:
          __break(1u);
LABEL_105:
          __break(1u);
LABEL_106:
          __break(1u);
LABEL_107:
          _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
          uint64_t v0 = v90;
          uint64_t v2 = sub_240A05288();
          swift_bridgeObjectRelease();
          goto LABEL_3;
        }
LABEL_53:
        uint64_t v45 = (void *)MEMORY[0x263F8EE78];
        uint64_t v46 = *(void *)(MEMORY[0x263F8EE78] + 16);
        if (v46)
        {
LABEL_83:
          uint64_t v72 = v45 + 8;
          while (*(v72 - 8) == 2 || (*(v72 - 8) & 0x100) == 0)
          {
            if (*v72 != 2 && (*v72 & 0x100) != 0) {
              break;
            }
            v72 += 20;
            if (!--v46) {
              goto LABEL_95;
            }
          }
          char v75 = 1;
        }
        else
        {
LABEL_95:
          char v75 = 0;
        }
        uint64_t v76 = v90[6];
        swift_bridgeObjectRelease();
        *(unsigned char *)(v76 + v94[6]) = v75;
        *(unsigned char *)(v76 + v94[7]) = sub_2409D271C(v91) & 1;
        id v77 = objc_msgSend(v91, sel_localizedIngestionSource);
        uint64_t v78 = sub_240A04C58();
        uint64_t v80 = v79;

        id v81 = (uint64_t *)(v76 + v94[8]);
        *id v81 = v78;
        v81[1] = v80;
        uint64_t v3 = v93;
        unint64_t v83 = *(void *)(v93 + 16);
        unint64_t v82 = *(void *)(v93 + 24);
        if (v83 >= v82 >> 1)
        {
          sub_240992B00(v82 > 1, v83 + 1, 1);
          uint64_t v3 = v93;
        }
        uint64_t v5 = v92 + 1;
        uint64_t v84 = v90[6];
        *(void *)(v3 + 16) = v83 + 1;
        sub_2409C0BDC(v84, v3+ ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80))+ *(void *)(v87 + 72) * v83);
        uint64_t v0 = v90;
        if (v92 + 1 == v88) {
          goto LABEL_100;
        }
      }
      uint64_t v9 = qword_268C99320;
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      if (v9 != -1) {
        swift_once();
      }
      uint64_t v10 = 0;
      uint64_t v96 = v8 + 32;
      uint64_t v11 = qword_268C9AA70;
      uint64_t v12 = qword_268C9AA70 + 40;
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      do
      {
        uint64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
          goto LABEL_104;
        }
        uint64_t v16 = v96 + 40 * v10;
        double v17 = *(double *)v16;
        uint64_t v18 = *(void *)(v16 + 8);
        __int16 v19 = *(_WORD *)(v16 + 16);
        unint64_t v1 = *(void *)(v16 + 24);
        __int16 v20 = *(_WORD *)(v16 + 32);
        uint64_t v21 = *(void *)(v11 + 16);
        if (!v21) {
          goto LABEL_32;
        }
        double v22 = *(double *)(v11 + 32);
        uint64_t v23 = v21 - 1;
        if (v23)
        {
          uint64_t v25 = 0;
          double v24 = *(double *)(v11 + 32);
          do
          {
            if (v24 < *(double *)(v12 + 8 * v25)) {
              double v24 = *(double *)(v12 + 8 * v25);
            }
            ++v25;
          }
          while (v23 != v25);
          uint64_t v26 = (double *)v12;
          do
          {
            double v27 = *v26++;
            double v28 = v27;
            if (v27 < v22) {
              double v22 = v28;
            }
            --v23;
          }
          while (v23);
        }
        else
        {
          double v24 = *(double *)(v11 + 32);
        }
        double v29 = round(v24);
        double v30 = round(v22);
        if (v30 > v29) {
          goto LABEL_105;
        }
        if (v17 <= v29 && v30 <= v17)
        {
LABEL_32:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v13 = sub_240992470(0, v13[2] + 1, 1, v13);
          }
          unint64_t v33 = v13[2];
          unint64_t v32 = v13[3];
          if (v33 >= v32 >> 1) {
            uint64_t v13 = sub_240992470((void *)(v32 > 1), v33 + 1, 1, v13);
          }
          void v13[2] = v33 + 1;
          uint64_t v14 = (double *)&v13[5 * v33];
          v14[4] = v17;
          *((void *)v14 + 5) = v18;
          *((_WORD *)v14 + 24) = v19;
          *((void *)v14 + 7) = v1;
          *((_WORD *)v14 + 32) = v20;
        }
        uint64_t v10 = v15;
      }
      while (v15 != v98);
      uint64_t v8 = v95;
      swift_bridgeObjectRelease();
      uint64_t v0 = v90;
      uint64_t v34 = v13[2];
      if (v34) {
        goto LABEL_39;
      }
LABEL_55:
      uint64_t v47 = v0[6];
      swift_bridgeObjectRelease();
      *(unsigned char *)(v47 + v94[5]) = 0;
      if (v98) {
        goto LABEL_56;
      }
      goto LABEL_53;
    }
    __break(1u);
  }
  else
  {
LABEL_100:
    sub_2409C0B80(v0[8]);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v85 = (uint64_t (*)(uint64_t))v0[1];
    return v85(v3);
  }
  return result;
}

uint64_t sub_2409C0AD0()
{
  sub_2409C0B80(*(void *)(v0 + 64));
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for AudiogramPDFChartDataSource()
{
  return self;
}

id sub_2409C0B70(id result)
{
  if ((unint64_t)result >= 2) {
    return result;
  }
  return result;
}

uint64_t sub_2409C0B80(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AudiogramPDFProviderRequest(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2409C0BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudiogramPDFAudiogramChart.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for HearingHealthArticleDataProvider()
{
  return &type metadata for HearingHealthArticleDataProvider;
}

uint64_t sub_2409C0C50@<X0>(char a1@<W0>, void *a2@<X8>)
{
  sub_2409801E8(0, (unint64_t *)&qword_26AFD3F48, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  id v6 = (char *)&v25 - v5;
  if (a1)
  {
    sub_2409F7520();
    *a2 = v7;
    a2[1] = v8;
    sub_2409F7520();
    a2[2] = v9;
    a2[3] = v10;
    sub_240A02898();
    uint64_t v11 = sub_240A028A8();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11);
    if (result == 1)
    {
      __break(1u);
    }
    else
    {
      sub_2409B4CF8();
      uint64_t v15 = (char *)a2 + *(int *)(v14 + 64);
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v6, v11);
      uint64_t v16 = *MEMORY[0x263F42A70];
      uint64_t v17 = sub_240A02D78();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v15, v16, v17);
      uint64_t v18 = *MEMORY[0x263F42A98];
      uint64_t v19 = sub_240A02D88();
      return (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(a2, v18, v19);
    }
  }
  else
  {
    sub_2409F7520();
    *a2 = v20;
    a2[1] = v21;
    *((unsigned char *)a2 + 16) = 0;
    uint64_t v22 = *MEMORY[0x263F42AE0];
    uint64_t v23 = sub_240A02D88();
    double v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104);
    return v24(a2, v22, v23);
  }
  return result;
}

void sub_2409C0F14(void *a1)
{
  sub_2409F77F0();
  sub_24099C96C(2);
  id v2 = objc_allocWithZone((Class)sub_240A02DA8());
  id v5 = (id)sub_240A02D98();
  id v3 = objc_msgSend(a1, sel_navigationController);
  if (v3)
  {
    uint64_t v4 = v3;
    objc_msgSend(v3, sel_pushViewController_animated_, v5, 1);
  }
}

uint64_t sub_2409C0FF0()
{
  if (qword_26AFD4990 != -1) {
    swift_once();
  }

  return sub_2409C10EC((uint64_t)&unk_26AFD63D0);
}

unint64_t sub_2409C104C()
{
  return 0xD000000000000028;
}

void sub_2409C1070()
{
}

uint64_t sub_2409C109C(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  id v3 = sub_24098BDC0(a1, v1);

  return sub_2409C18E4((uint64_t)v3, v1, v2);
}

uint64_t sub_2409C10EC(uint64_t a1)
{
  uint64_t v74 = *MEMORY[0x263EF8340];
  sub_240983BC8(a1, (uint64_t)v73);
  id v1 = objc_msgSend(self, sel_sharedBehavior);
  if (!v1)
  {
    __break(1u);
LABEL_17:
    __break(1u);
  }
  uint64_t v2 = v1;
  id v3 = objc_msgSend(v1, sel_features);

  if (!v3) {
    goto LABEL_17;
  }
  unsigned int v4 = objc_msgSend(v3, sel_yodel);

  if (v4)
  {
    sub_240994C38((uint64_t)v73, (uint64_t)v70);
    uint64_t v5 = v71;
    if (v71)
    {
      uint64_t v6 = v72;
      sub_24098BDC0(v70, v71);
      char v66 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
      sub_240981514((uint64_t)v70);
    }
    else
    {
      sub_240994CC8((uint64_t)v70);
      char v66 = 0;
    }
    sub_2409801E8(0, &qword_268C99670, MEMORY[0x263F42AE8], MEMORY[0x263F8E0F8]);
    uint64_t v8 = sub_240A02D88();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(void *)(v9 + 72);
    unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_240A08680;
    unint64_t v69 = v11;
    uint64_t v67 = v12;
    unint64_t v13 = v12 + v11;
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    id v14 = (id)qword_26AFD6468;
    uint64_t v15 = (void *)sub_240A04C18();
    id v64 = self;
    id v16 = objc_msgSend(v64, sel_imageNamed_inBundle_, v15, v14);

    if (!v16) {
      id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init);
    }
    *(void *)unint64_t v13 = v16;
    *(unsigned char *)(v13 + 8) = 0;
    uint64_t v17 = *(void (**)(void))(v9 + 104);
    ((void (*)(unint64_t, void, uint64_t))v17)(v13, *MEMORY[0x263F42AB8], v8);
    uint64_t v18 = (void *)(v13 + v10);
    sub_2409F7520();
    *uint64_t v18 = v19;
    v18[1] = v20;
    ((void (*)(unint64_t, void, uint64_t))v17)(v13 + v10, *MEMORY[0x263F42AC0], v8);
    uint64_t v21 = (void *)(v13 + 2 * v10);
    sub_2409F7520();
    *uint64_t v21 = v22;
    v21[1] = v23;
    v21[2] = 0;
    uint64_t v24 = *MEMORY[0x263F42A80];
    ((void (*)(void *, uint64_t, uint64_t))v17)(v21, v24, v8);
    uint64_t v25 = v8;
    unint64_t v26 = v13 + 3 * v10;
    sub_2409F7520();
    *(void *)unint64_t v26 = v27;
    *(void *)(v26 + 8) = v28;
    *(unsigned char *)(v26 + 16) = 0;
    uint64_t v29 = *MEMORY[0x263F42AE0];
    ((void (*)(unint64_t, uint64_t, uint64_t))v17)(v26, v29, v8);
    unint64_t v30 = v13 + 4 * v10;
    sub_2409F7520();
    *(void *)unint64_t v30 = v31;
    *(void *)(v30 + 8) = v32;
    *(unsigned char *)(v30 + 16) = 0;
    ((void (*)(unint64_t, uint64_t, uint64_t))v17)(v30, v29, v8);
    unint64_t v33 = (void *)(v13 + 5 * v10);
    sub_2409F7520();
    *unint64_t v33 = v34;
    v33[1] = v35;
    v33[2] = 0;
    unsigned int v65 = v24;
    ((void (*)(void *, uint64_t, uint64_t))v17)(v33, v24, v8);
    unint64_t v36 = v13 + 6 * v10;
    sub_2409F7520();
    *(void *)unint64_t v36 = v37;
    *(void *)(v36 + 8) = v38;
    *(unsigned char *)(v36 + 16) = 0;
    ((void (*)(unint64_t, uint64_t, uint64_t))v17)(v36, v29, v8);
    sub_2409C0C50(v66 & 1, (void *)(v13 - v10 + 8 * v10));
    id v39 = (id)qword_26AFD6468;
    uint64_t v40 = (void *)sub_240A04C18();
    id v41 = objc_msgSend(v64, sel_imageNamed_inBundle_, v40, v39);

    if (!v41) {
      id v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init);
    }
    unint64_t v42 = v13 + 8 * v10;
    *(void *)unint64_t v42 = v41;
    *(unsigned char *)(v42 + 8) = 1;
    v17();
    unint64_t v43 = v13 + 9 * v10;
    sub_2409F7520();
    *(void *)unint64_t v43 = v44;
    *(void *)(v43 + 8) = v45;
    *(unsigned char *)(v43 + 16) = 0;
    ((void (*)(unint64_t, uint64_t, uint64_t))v17)(v43, v29, v25);
    uint64_t v46 = sub_2409B6478(3);
    v70[0] = v67;
    sub_2409920B0(v46);
    uint64_t v68 = v70[0];
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_240A06930;
    uint64_t v48 = (void *)(v47 + v69);
    sub_2409F7520();
    *uint64_t v48 = v49;
    v48[1] = v50;
    v48[2] = 0;
    ((void (*)(unint64_t, void, uint64_t))v17)(v47 + v69, v65, v25);
    uint64_t v51 = (void *)(v47 + v69 + v10);
    sub_2409B4CF8();
    uint64_t v53 = (void (**)(void *))((char *)v51 + *(int *)(v52 + 64));
    sub_2409F7520();
    *uint64_t v51 = v54;
    v51[1] = v55;
    sub_2409F7520();
    v51[2] = v56;
    v51[3] = v57;
    *uint64_t v53 = sub_2409C0F14;
    v53[1] = 0;
    uint64_t v58 = *MEMORY[0x263F42A68];
    uint64_t v59 = sub_240A02D78();
    (*(void (**)(void (**)(void *), uint64_t, uint64_t))(*(void *)(v59 - 8) + 104))(v53, v58, v59);
    ((void (*)(void *, void, uint64_t))v17)(v51, *MEMORY[0x263F42A98], v25);
    uint64_t v60 = v47 + v69 + 2 * v10;
    sub_2409F7520();
    *(void *)uint64_t v60 = v61;
    *(void *)(v60 + 8) = v62;
    *(unsigned char *)(v60 + 16) = 0;
    ((void (*)(uint64_t, uint64_t, uint64_t))v17)(v60, v29, v25);
    v70[0] = v68;
    sub_2409920B0(v47);
    uint64_t v7 = v70[0];
  }
  else
  {
    uint64_t v7 = sub_2409C2140();
  }
  sub_240994D50((uint64_t)v73);
  return v7;
}

uint64_t sub_2409C18E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2;
  uint64_t v85 = *MEMORY[0x263EF8340];
  uint64_t v5 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  id v8 = objc_msgSend(self, sel_sharedBehavior);
  if (!v8)
  {
    __break(1u);
LABEL_14:
    __break(1u);
  }
  uint64_t v9 = v8;
  id v10 = objc_msgSend(v8, sel_features);

  if (!v10) {
    goto LABEL_14;
  }
  unsigned int v11 = objc_msgSend(v10, sel_yodel);

  if (v11)
  {
    uint64_t v82 = v5;
    uint64_t v83 = v4;
    int v75 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(v4, a3);
    sub_2409801E8(0, &qword_268C99670, MEMORY[0x263F42AE8], MEMORY[0x263F8E0F8]);
    uint64_t v13 = v12;
    uint64_t v14 = sub_240A02D88();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v16 = *(void *)(v15 + 72);
    uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
    uint64_t v18 = (v17 + 32) & ~v17;
    uint64_t v80 = v13;
    uint64_t v78 = v17 | 7;
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_240A08680;
    uint64_t v79 = v18;
    uint64_t v77 = v19;
    uint64_t v20 = v19 + v18;
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    id v81 = v7;
    id v21 = (id)qword_26AFD6468;
    uint64_t v22 = (void *)sub_240A04C18();
    id v73 = self;
    id v23 = objc_msgSend(v73, sel_imageNamed_inBundle_, v22, v21);

    if (!v23) {
      id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init);
    }
    *(void *)uint64_t v20 = v23;
    *(unsigned char *)(v20 + 8) = 0;
    uint64_t v24 = *(void (**)(uint64_t))(v15 + 104);
    v72[3] = *MEMORY[0x263F42AB8];
    v24(v20);
    uint64_t v25 = (void *)(v20 + v16);
    sub_2409F7520();
    *uint64_t v25 = v26;
    v25[1] = v27;
    ((void (*)(uint64_t, void, uint64_t))v24)(v20 + v16, *MEMORY[0x263F42AC0], v14);
    uint64_t v28 = (void *)(v20 + 2 * v16);
    sub_2409F7520();
    *uint64_t v28 = v29;
    v28[1] = v30;
    id v28[2] = 0;
    uint64_t v31 = *MEMORY[0x263F42A80];
    ((void (*)(void *, uint64_t, uint64_t))v24)(v28, v31, v14);
    uint64_t v76 = 2 * v16;
    uint64_t v32 = v20 + 3 * v16;
    sub_2409F7520();
    *(void *)uint64_t v32 = v33;
    *(void *)(v32 + 8) = v34;
    *(unsigned char *)(v32 + 16) = 0;
    uint64_t v35 = *MEMORY[0x263F42AE0];
    ((void (*)(uint64_t, uint64_t, uint64_t))v24)(v32, v35, v14);
    uint64_t v36 = v20 + 4 * v16;
    sub_2409F7520();
    *(void *)uint64_t v36 = v37;
    *(void *)(v36 + 8) = v38;
    *(unsigned char *)(v36 + 16) = 0;
    ((void (*)(uint64_t, uint64_t, uint64_t))v24)(v36, v35, v14);
    id v39 = (void *)(v20 + 5 * v16);
    sub_2409F7520();
    *id v39 = v40;
    v39[1] = v41;
    v39[2] = 0;
    unsigned int v74 = v31;
    ((void (*)(void *, uint64_t, uint64_t))v24)(v39, v31, v14);
    uint64_t v42 = v20 + 6 * v16;
    sub_2409F7520();
    *(void *)uint64_t v42 = v43;
    *(void *)(v42 + 8) = v44;
    *(unsigned char *)(v42 + 16) = 0;
    ((void (*)(uint64_t, uint64_t, uint64_t))v24)(v42, v35, v14);
    sub_2409C0C50(v75 & 1, (void *)(v20 - v16 + 8 * v16));
    id v45 = (id)qword_26AFD6468;
    uint64_t v46 = (void *)sub_240A04C18();
    id v47 = objc_msgSend(v73, sel_imageNamed_inBundle_, v46, v45);

    if (!v47) {
      id v47 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init);
    }
    uint64_t v48 = v20 + 8 * v16;
    *(void *)uint64_t v48 = v47;
    *(unsigned char *)(v48 + 8) = 1;
    ((void (*)(void))v24)();
    uint64_t v49 = v20 + 9 * v16;
    sub_2409F7520();
    *(void *)uint64_t v49 = v50;
    *(void *)(v49 + 8) = v51;
    *(unsigned char *)(v49 + 16) = 0;
    ((void (*)(uint64_t, uint64_t, uint64_t))v24)(v49, v35, v14);
    uint64_t v52 = sub_2409B6478(3);
    uint64_t v84 = v77;
    sub_2409920B0(v52);
    uint64_t v77 = v84;
    uint64_t v53 = v79;
    uint64_t v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = xmmword_240A06930;
    uint64_t v55 = (void *)(v54 + v53);
    sub_2409F7520();
    *uint64_t v55 = v56;
    v55[1] = v57;
    v55[2] = 0;
    ((void (*)(void *, void, uint64_t))v24)(v55, v74, v14);
    uint64_t v58 = (void *)((char *)v55 + v16);
    sub_2409B4CF8();
    uint64_t v60 = (void (**)(void *))((char *)v55 + v16 + *(int *)(v59 + 64));
    sub_2409F7520();
    void *v58 = v61;
    v58[1] = v62;
    sub_2409F7520();
    v58[2] = v63;
    v58[3] = v64;
    *uint64_t v60 = sub_2409C0F14;
    v60[1] = 0;
    uint64_t v65 = *MEMORY[0x263F42A68];
    uint64_t v66 = sub_240A02D78();
    (*(void (**)(void (**)(void *), uint64_t, uint64_t))(*(void *)(v66 - 8) + 104))(v60, v65, v66);
    ((void (*)(char *, void, uint64_t))v24)((char *)v55 + v16, *MEMORY[0x263F42A98], v14);
    uint64_t v67 = (char *)v55 + v76;
    sub_2409F7520();
    *(void *)uint64_t v67 = v68;
    *((void *)v67 + 1) = v69;
    v67[16] = 0;
    ((void (*)(char *, uint64_t, uint64_t))v24)(v67, v35, v14);
    uint64_t v84 = v77;
    sub_2409920B0(v54);
    uint64_t v4 = v83;
    uint64_t v70 = v84;
    uint64_t v7 = v81;
    uint64_t v5 = v82;
  }
  else
  {
    uint64_t v70 = sub_2409C2140();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v70;
}

uint64_t sub_2409C2140()
{
  sub_2409801E8(0, &qword_268C99670, MEMORY[0x263F42AE8], MEMORY[0x263F8E0F8]);
  uint64_t v0 = sub_240A02D88();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_240A08680;
  unint64_t v54 = v3;
  uint64_t v53 = v4;
  unint64_t v5 = v4 + v3;
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  id v6 = (id)qword_26AFD6468;
  uint64_t v7 = (void *)sub_240A04C18();
  id v51 = self;
  id v8 = objc_msgSend(v51, sel_imageNamed_inBundle_, v7, v6);

  if (!v8) {
    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init);
  }
  *(void *)unint64_t v5 = v8;
  *(unsigned char *)(v5 + 8) = 0;
  uint64_t v9 = *(void (**)(void))(v1 + 104);
  ((void (*)(unint64_t, void, uint64_t))v9)(v5, *MEMORY[0x263F42AB8], v0);
  id v10 = (void *)(v5 + v2);
  sub_2409F7520();
  *id v10 = v11;
  v10[1] = v12;
  ((void (*)(unint64_t, void, uint64_t))v9)(v5 + v2, *MEMORY[0x263F42AC0], v0);
  uint64_t v13 = (void *)(v5 + 2 * v2);
  sub_2409F7520();
  *uint64_t v13 = v14;
  v13[1] = v15;
  void v13[2] = 0;
  uint64_t v16 = *MEMORY[0x263F42A80];
  ((void (*)(void *, uint64_t, uint64_t))v9)(v13, v16, v0);
  uint64_t v17 = v2;
  unint64_t v18 = v5 + 3 * v2;
  sub_2409F7520();
  *(void *)unint64_t v18 = v19;
  *(void *)(v18 + 8) = v20;
  *(unsigned char *)(v18 + 16) = 0;
  uint64_t v21 = *MEMORY[0x263F42AE0];
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v18, v21, v0);
  uint64_t v22 = 4 * v2;
  unint64_t v23 = v5 + v22;
  sub_2409F7520();
  *(void *)unint64_t v23 = v24;
  *(void *)(v23 + 8) = v25;
  *(unsigned char *)(v23 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v5 + v22, v21, v0);
  uint64_t v26 = (void *)(v5 + v22 + v17);
  sub_2409F7520();
  *uint64_t v26 = v27;
  v26[1] = v28;
  id v26[2] = 0;
  unsigned int v52 = v16;
  ((void (*)(void *, uint64_t, uint64_t))v9)(v26, v16, v0);
  unint64_t v29 = v5 + 6 * v17;
  sub_2409F7520();
  *(void *)unint64_t v29 = v30;
  *(void *)(v29 + 8) = v31;
  *(unsigned char *)(v29 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v29, v21, v0);
  uint64_t v32 = v5 - v17 + 8 * v17;
  sub_2409F7520();
  *(void *)uint64_t v32 = v33;
  *(void *)(v32 + 8) = v34;
  *(unsigned char *)(v32 + 16) = 0;
  ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v32, v21, v0);
  id v35 = (id)qword_26AFD6468;
  uint64_t v36 = (void *)sub_240A04C18();
  id v37 = objc_msgSend(v51, sel_imageNamed_inBundle_, v36, v35);

  if (!v37) {
    id v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init);
  }
  unint64_t v38 = v5 + 8 * v17;
  *(void *)unint64_t v38 = v37;
  *(unsigned char *)(v38 + 8) = 1;
  v9();
  unint64_t v39 = v5 + 9 * v17;
  sub_2409F7520();
  *(void *)unint64_t v39 = v40;
  *(void *)(v39 + 8) = v41;
  *(unsigned char *)(v39 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v39, v21, v0);
  uint64_t v42 = sub_2409B6478(3);
  sub_2409920B0(v42);
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_240A06800;
  uint64_t v44 = (void *)(v43 + v54);
  sub_2409F7520();
  *uint64_t v44 = v45;
  v44[1] = v46;
  v44[2] = 0;
  ((void (*)(unint64_t, void, uint64_t))v9)(v43 + v54, v52, v0);
  uint64_t v47 = v43 + v54 + v17;
  sub_2409F7520();
  *(void *)uint64_t v47 = v48;
  *(void *)(v47 + 8) = v49;
  *(unsigned char *)(v47 + 16) = 0;
  ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v47, v21, v0);
  sub_2409920B0(v43);
  return v53;
}

void sub_2409C2790()
{
}

void sub_2409C27B4()
{
}

id sub_2409C27E0()
{
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  id v0 = (id)qword_26AFD6468;
  uint64_t v1 = (void *)sub_240A04C18();
  id v2 = objc_msgSend(self, sel_imageNamed_inBundle_, v1, v0);

  if (v2) {
    return v2;
  }
  id v4 = objc_allocWithZone(MEMORY[0x263F827E8]);

  return objc_msgSend(v4, sel_init);
}

uint64_t sub_2409C28D0()
{
  sub_2409973C8();
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240A06A80;
  sub_240997EE0();
  *(void *)(inited + 32) = MEMORY[0x245604B20]((id)*MEMORY[0x263F09DF8]);
  sub_240A04D38();
  if (inited >> 62)
  {
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v3 = sub_240A05288();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v2 = MEMORY[0x263F8EE88];
    goto LABEL_6;
  }
  if (!*(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  sub_2409E3A88(inited);
  uint64_t v2 = v1;
LABEL_6:
  swift_bridgeObjectRelease();
  return v2;
}

Swift::String *onboardingFeedItemIdentifierPrefix.unsafeMutableAddressor()
{
  return &onboardingFeedItemIdentifierPrefix;
}

id sub_2409C29B8@<X0>(uint64_t *a1@<X8>)
{
  id result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    uint64_t v3 = result;
    unsigned int v4 = objc_msgSend(result, sel_isAppleInternalInstall);

    if (v4)
    {
      if (qword_26AFD4A20 != -1) {
        swift_once();
      }
      uint64_t v5 = sub_240A02828();
      uint64_t v7 = v6;
      uint64_t v8 = sub_240A02828();
      uint64_t v10 = v9;
      uint64_t v11 = sub_240A02828();
      *a1 = v5;
      a1[1] = v7;
      a1[2] = v8;
      a1[3] = v10;
      a1[4] = v11;
      a1[5] = v12;
      uint64_t v13 = (unsigned int *)MEMORY[0x263F440B8];
    }
    else
    {
      uint64_t v13 = (unsigned int *)MEMORY[0x263F440C0];
    }
    uint64_t v14 = *v13;
    uint64_t v15 = sub_240A03688();
    uint64_t v16 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104);
    return (id)v16(a1, v14, v15);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2409C2BBC@<X0>(uint64_t *a1@<X8>)
{
  id v2 = (id)HKCurrentLocaleCountryCodeIfUnknown();
  uint64_t v3 = sub_240A04C58();
  uint64_t v5 = v4;
  if (v3 == sub_240A04C58() && v5 == v6)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v8 = sub_240A05368();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
      uint64_t v9 = sub_240A03498();
      goto LABEL_9;
    }
  }
  uint64_t v9 = type metadata accessor for AudiogramPDFJapanDisclaimerPageNumberedPage();
LABEL_9:
  *a1 = v9;
  uint64_t v10 = *MEMORY[0x263F43ED8];
  uint64_t v11 = sub_240A03488();
  uint64_t v12 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(a1, v10, v11);
}

uint64_t sub_2409C2CE8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v28 = a1;
  unint64_t v29 = a2;
  uint64_t v27 = sub_240A03688();
  uint64_t v4 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v26 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240A03488();
  MEMORY[0x270FA5388](v6 - 8);
  char v8 = (uint64_t *)((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_240A03368();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_240A039C8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240991D58(v3 + 24, (uint64_t)v30);
  sub_240A039B8();
  uint64_t v17 = sub_240A03608();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_2409C544C();
  uint64_t v18 = sub_240A03608();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F43D68], v9);
  sub_2409C2BBC(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v26, v3 + OBJC_IVAR____TtC16HearingAppPlugin20AudiogramPDFProvider_shareButtonBehavior, v27);
  uint64_t v19 = (void *)swift_allocObject();
  uint64_t v20 = v28;
  long long v19[2] = v28;
  v19[3] = v3;
  v19[4] = v17;
  v19[5] = v18;
  uint64_t v21 = sub_240A03388();
  uint64_t v22 = MEMORY[0x263F43D78];
  unint64_t v23 = v29;
  v29[3] = v21;
  unsigned char v23[4] = v22;
  sub_24097F464(v23);
  sub_2409C0B70(v20);
  swift_retain();
  return sub_240A03378();
}

uint64_t sub_2409C3020(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1)
  {
    sub_2409C5504();
    uint64_t v8 = v7;
    uint64_t v24 = v7;
    uint64_t v9 = sub_2409C56F4(&qword_268C99EF8, (void (*)(uint64_t))sub_2409C5504);
    uint64_t v25 = v9;
    uint64_t v22 = v9;
    v23[0] = a3;
    uint64_t v21 = v8;
    v20[0] = a4;
    sub_2409C3418(a1, (uint64_t)v23, (uint64_t)v20, v26);
    swift_retain();
    swift_retain();
    sub_240991C64((uint64_t)v20);
    sub_240991C64((uint64_t)v23);
    uint64_t v10 = sub_240A03798();
    sub_240981514((uint64_t)v26);
    uint64_t v24 = v8;
    uint64_t v25 = v9;
    uint64_t v22 = v9;
    v23[0] = a3;
    uint64_t v21 = v8;
    v20[0] = a4;
    sub_2409C3324((uint64_t)v23, (uint64_t)v20, v26);
  }
  else
  {
    sub_2409C5504();
    uint64_t v14 = v13;
    uint64_t v24 = v13;
    uint64_t v15 = sub_2409C56F4(&qword_268C99EF8, (void (*)(uint64_t))sub_2409C5504);
    uint64_t v25 = v15;
    uint64_t v22 = v15;
    v23[0] = a3;
    uint64_t v21 = v14;
    v20[0] = a4;
    sub_2409C3324((uint64_t)v23, (uint64_t)v20, v26);
    swift_retain();
    swift_retain();
    sub_240991C64((uint64_t)v20);
    sub_240991C64((uint64_t)v23);
    uint64_t v10 = sub_240A03798();
    sub_240981514((uint64_t)v26);
    uint64_t v24 = v14;
    uint64_t v25 = v15;
    uint64_t v22 = v15;
    v23[0] = a3;
    uint64_t v21 = v14;
    v20[0] = a4;
    sub_2409C3418(0, (uint64_t)v23, (uint64_t)v20, v26);
  }
  swift_retain();
  swift_retain();
  sub_240991C64((uint64_t)v20);
  sub_240991C64((uint64_t)v23);
  uint64_t v11 = sub_240A03798();
  sub_240981514((uint64_t)v26);
  sub_2409C55E0();
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_240A06800;
  *(void *)(v12 + 32) = v10;
  *(void *)(v12 + 40) = v11;
  MEMORY[0x2456033A0]();
  swift_bridgeObjectRelease();
  uint64_t v16 = _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  sub_2409C55E0();
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_240A06870;
  *(void *)(v17 + 32) = v16;
  uint64_t v18 = MEMORY[0x2456033A0]();
  swift_bridgeObjectRelease();
  return v18;
}

id sub_2409C3324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *(void **)(v3 + 16);
  sub_240991BD4(a1, (uint64_t)v13);
  sub_240991BD4(a2, (uint64_t)v12);
  uint64_t v7 = type metadata accessor for AudiogramPDFOverviewSectionProvider();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 24) = v6;
  type metadata accessor for AudiogramPDFLongitudinalChartDataSource();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v6;
  *(void *)(v8 + 16) = v9;
  sub_2409C5664((uint64_t)v13, v8 + 32);
  sub_2409C5664((uint64_t)v12, v8 + 72);
  a3[3] = v7;
  a3[4] = sub_2409C56F4(&qword_268C99F18, (void (*)(uint64_t))type metadata accessor for AudiogramPDFOverviewSectionProvider);
  *a3 = v8;
  id v10 = v6;

  return v10;
}

id sub_2409C3418@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = *(void **)(v4 + 16);
  sub_240991BD4(a2, (uint64_t)v15);
  sub_240991BD4(a3, (uint64_t)v14);
  uint64_t v9 = type metadata accessor for AudiogramPDFAudiogramSectionProvider();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  type metadata accessor for AudiogramPDFChartDataSource();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v8;
  *(void *)(v10 + 24) = v11;
  sub_2409C5664((uint64_t)v15, v10 + 32);
  sub_2409C5664((uint64_t)v14, v10 + 72);
  a4[3] = v9;
  a4[4] = sub_2409C56F4((unint64_t *)&unk_268C99F20, (void (*)(uint64_t))type metadata accessor for AudiogramPDFAudiogramSectionProvider);
  *a4 = v10;
  id v12 = v8;
  return sub_2409C0B70(a1);
}

uint64_t sub_2409C3518(void *a1)
{
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  sub_240A02828();
  uint64_t v3 = sub_2409C5074(*(void **)(v1 + 16));
  v6[8] = sub_240A03478();
  v6[9] = MEMORY[0x263F43ED0];
  uint64_t v6[5] = v3;
  sub_2409C2CE8(a1, v6);
  id v4 = objc_allocWithZone((Class)sub_240A03658());
  return sub_240A03648();
}

uint64_t sub_2409C3630()
{
  sub_240981514(v0 + 24);
  uint64_t v1 = v0 + OBJC_IVAR____TtC16HearingAppPlugin20AudiogramPDFProvider_shareButtonBehavior;
  uint64_t v2 = sub_240A03688();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_2409C36E0()
{
  return type metadata accessor for AudiogramPDFProvider(0);
}

uint64_t type metadata accessor for AudiogramPDFProvider(uint64_t a1)
{
  return sub_2409A1004(a1, (uint64_t *)&unk_268C99EB8);
}

uint64_t sub_2409C3708()
{
  uint64_t result = sub_240A03688();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

char *sub_2409C37B0(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)a1 = *a2;
    a1 = &v16[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    if ((unint64_t)*a2 >= 2) {
      uint64_t v8 = v7;
    }
    *(void *)a1 = v7;
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_240A02978();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    if (v14(v11, 1, v12))
    {
      sub_2409C53E8(0, (unint64_t *)&qword_268C996D0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
      memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v17 = *(int *)(a3 + 24);
    uint64_t v18 = &a1[v17];
    uint64_t v19 = (char *)a2 + v17;
    if (v14(v19, 1, v12))
    {
      sub_2409C53E8(0, (unint64_t *)&qword_268C996D0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v19, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t sub_2409C3A2C(id *a1, uint64_t a2)
{
  if ((unint64_t)*a1 >= 2) {

  }
  id v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_240A02978();
  uint64_t v10 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v4, v5);
  }
  uint64_t v7 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v6)(v7, 1, v5);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    return v9(v7, v5);
  }
  return result;
}

void *sub_2409C3B70(void *a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  if ((unint64_t)*a2 >= 2) {
    id v7 = v6;
  }
  *a1 = v6;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_240A02978();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    sub_2409C53E8(0, (unint64_t *)&qword_268C996D0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  if (v13(v17, 1, v11))
  {
    sub_2409C53E8(0, (unint64_t *)&qword_268C996D0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v17, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  return a1;
}

void **sub_2409C3D9C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  id v7 = *a2;
  if ((unint64_t)*a1 < 2)
  {
    if ((unint64_t)v7 >= 2)
    {
      *a1 = v7;
      id v8 = v7;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if ((unint64_t)v7 < 2)
  {

    id v7 = *a2;
LABEL_6:
    *a1 = v7;
    goto LABEL_8;
  }
  *a1 = v7;
  id v9 = v7;

LABEL_8:
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_240A02978();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_13:
    sub_2409C53E8(0, (unint64_t *)&qword_268C996D0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_14:
  uint64_t v19 = *(int *)(a3 + 24);
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  int v22 = v15((char *)a1 + v19, 1, v13);
  int v23 = v15(v21, 1, v13);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v20, v21, v13);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
    goto LABEL_19;
  }
  if (v23)
  {
LABEL_19:
    sub_2409C53E8(0, (unint64_t *)&qword_268C996D0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v20, v21, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
  return a1;
}

void *sub_2409C40CC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  id v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = sub_240A02978();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    sub_2409C53E8(0, (unint64_t *)&qword_268C996D0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  if (v11(v15, 1, v9))
  {
    sub_2409C53E8(0, (unint64_t *)&qword_268C996D0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  return a1;
}

void **sub_2409C42EC(void **a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = *a2;
  if ((unint64_t)*a1 < 2) {
    goto LABEL_4;
  }
  if (v7 < 2)
  {

LABEL_4:
    *a1 = (void *)v7;
    goto LABEL_6;
  }
  *a1 = (void *)v7;

LABEL_6:
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_240A02978();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_11:
    sub_2409C53E8(0, (unint64_t *)&qword_268C996D0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_12:
  uint64_t v17 = *(int *)(a3 + 24);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  int v20 = v13((char *)a1 + v17, 1, v11);
  int v21 = v13(v19, 1, v11);
  if (!v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v18, v19, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
    goto LABEL_17;
  }
  if (v21)
  {
LABEL_17:
    sub_2409C53E8(0, (unint64_t *)&qword_268C996D0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v18, v19, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
  return a1;
}

uint64_t sub_2409C4608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2409C461C);
}

uint64_t sub_2409C461C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483645)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 2;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    sub_2409C53E8(0, (unint64_t *)&qword_268C996D0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = (char *)a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_2409C470C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2409C4720);
}

void *sub_2409C4720(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483645)
  {
    *uint64_t result = (a2 + 1);
  }
  else
  {
    sub_2409C53E8(0, (unint64_t *)&qword_268C996D0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for AudiogramPDFProviderRequest(uint64_t a1)
{
  return sub_2409A1004(a1, (uint64_t *)&unk_268C99EC8);
}

void sub_2409C481C()
{
  sub_2409C53E8(319, (unint64_t *)&qword_268C996D0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *initializeBufferWithCopyOfBuffer for AudiogramPDFProviderRequest.RequestType(void *a1, void **a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    id v4 = v3;
  }
  *a1 = v3;
  return a1;
}

void destroy for AudiogramPDFProviderRequest.RequestType(void **a1)
{
  unint64_t v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF) {
}
  }

void **assignWithCopy for AudiogramPDFProviderRequest.RequestType(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  id v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      id v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    id v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  id v5 = v4;

  return a1;
}

void **assignWithTake for AudiogramPDFProviderRequest.RequestType(void **a1, unint64_t *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for AudiogramPDFProviderRequest.RequestType(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AudiogramPDFProviderRequest.RequestType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_2409C4AD0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_2409C4AE8(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for AudiogramPDFProviderRequest.RequestType()
{
  return &type metadata for AudiogramPDFProviderRequest.RequestType;
}

uint64_t sub_2409C4B18()
{
  sub_240A031D8();
  unint64_t v0 = (void *)sub_240A031C8();
  id v1 = objc_msgSend(v0, sel_CGColor);

  uint64_t v9 = sub_240A03678();
  uint64_t v10 = MEMORY[0x263F440B0];
  sub_24097F464(v8);
  sub_240A03668();
  uint64_t v2 = sub_240A035A8();
  sub_240981514((uint64_t)v8);
  uint64_t v9 = sub_240A033A8();
  uint64_t v10 = MEMORY[0x263F43E08];
  sub_24097F464(v8);
  sub_240A033B8();
  uint64_t v3 = sub_240A035A8();
  sub_240981514((uint64_t)v8);
  sub_2409C4C74(v8);
  uint64_t v4 = sub_240A035A8();
  sub_240981514((uint64_t)v8);
  sub_2409C5750(0, (unint64_t *)&qword_268C99608, MEMORY[0x263F8E0F8]);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240A06930;
  *(void *)(v5 + 32) = v2;
  *(void *)(v5 + 40) = v3;
  *(void *)(v5 + 48) = v4;
  uint64_t v6 = MEMORY[0x2456031B0]();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_2409C4C74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_240A03398();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = (id)HKCurrentLocaleCountryCodeIfUnknown();
  uint64_t v7 = sub_240A04C58();
  uint64_t v9 = v8;
  if (v7 == sub_240A04C58() && v9 == v10)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v12 = sub_240A05368();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      uint64_t v13 = sub_240A03308();
      uint64_t v14 = MEMORY[0x263F43C40];
      a1[3] = v13;
      a1[4] = v14;
      sub_24097F464(a1);
      return sub_240A032F8();
    }
  }
  if (qword_268C99308 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_268C9A9F8;
  uint64_t v17 = (void *)*MEMORY[0x263F81500];
  uint64_t v18 = self;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  id v19 = v17;
  id v20 = objc_msgSend(v18, sel_clearColor);
  unint64_t v31 = sub_240997540();
  *(void *)&long long v30 = v20;
  sub_24098AD10(&v30, v29);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v28 = v16;
  sub_2409D1C38(v29, v19, isUniquelyReferenced_nonNull_native);
  uint64_t v22 = v28;

  swift_bridgeObjectRelease();
  if (qword_268C99300 != -1) {
    swift_once();
  }
  uint64_t v23 = qword_268C9A9E8;
  uint64_t v24 = unk_268C9A9F0;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F43D88], v2);
  uint64_t v25 = sub_240A03E28();
  uint64_t v26 = MEMORY[0x263F44850];
  a1[3] = v25;
  a1[4] = v26;
  sub_24097F464(a1);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return MEMORY[0x245603A70](v23, v24, v5, v22);
}

uint64_t sub_2409C4F64()
{
  return MEMORY[0x270FA2498](sub_2409C4F80, 0, 0);
}

uint64_t sub_2409C4F80()
{
  sub_2409C5578(0, &qword_268C995F0, (unint64_t *)&qword_268C995F8, MEMORY[0x263F43C48], MEMORY[0x263F8E0F8]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_240A06870;
  uint64_t v2 = sub_240A03EE8();
  uint64_t v3 = MEMORY[0x263F448B8];
  *(void *)(v1 + 56) = v2;
  *(void *)(v1 + 64) = v3;
  sub_24097F464((uint64_t *)(v1 + 32));
  sub_240A03ED8();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v4(v1);
}

uint64_t sub_2409C5074(void *a1)
{
  uint64_t v2 = sub_240A029E8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240A02A78();
  MEMORY[0x270FA5388](v6 - 8);
  v20[2] = sub_240A03478();
  uint64_t v7 = sub_240A037C8();
  id v8 = a1;
  uint64_t v9 = sub_240A037B8();
  void v20[6] = v7;
  v20[7] = MEMORY[0x263F442B0];
  void v20[3] = v9;
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_240A02828();
  v20[0] = v11;
  v20[1] = v10;
  sub_2409C53E8(0, &qword_268C99ED8, MEMORY[0x263F43F70], MEMORY[0x263F8E0F8]);
  uint64_t v12 = sub_240A03568();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_240A06800;
  unint64_t v17 = v16 + v15;
  uint64_t v18 = *(void (**)(unint64_t, void, uint64_t))(v13 + 104);
  v18(v17, *MEMORY[0x263F43F60], v12);
  v18(v17 + v14, *MEMORY[0x263F43F68], v12);
  sub_2409E3AAC(v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F07740], v2);
  sub_240A029F8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_240A03468();
}

void sub_2409C53E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_2409C544C()
{
  unint64_t result = qword_268C99EE0;
  if (!qword_268C99EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99EE0);
  }
  return result;
}

uint64_t sub_2409C54A0()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if ((unint64_t)v1 >= 2) {

  }
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_2409C54F8()
{
  return sub_2409C3020(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

void sub_2409C5504()
{
  if (!qword_268C99EE8)
  {
    sub_2409C5750(255, &qword_268C99EF0, MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_240A02E48();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99EE8);
    }
  }
}

void sub_2409C5578(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_240983260(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_2409C55E0()
{
  if (!qword_268C99F00)
  {
    sub_2409C5578(255, &qword_268C99F08, &qword_268C99F10, MEMORY[0x263F43E70], MEMORY[0x263F8D488]);
    unint64_t v0 = sub_240A05358();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99F00);
    }
  }
}

uint64_t sub_2409C5664(uint64_t a1, uint64_t a2)
{
  sub_2409C5578(0, &qword_268C995E0, &qword_268C995E8, MEMORY[0x263F44030], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2409C56F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for AudiogramPDFFooterProvider()
{
  return &type metadata for AudiogramPDFFooterProvider;
}

void sub_2409C5750(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_2409C5578(255, &qword_268C99610, (unint64_t *)&qword_268C995F8, MEMORY[0x263F43C48], MEMORY[0x263F8D488]);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_2409C57E0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = sub_2409C8760(a1, (uint64_t)a2, a3);

  return v4;
}

uint64_t sub_2409C582C(uint64_t a1)
{
  uint64_t v2 = sub_240A03EE8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v22 = MEMORY[0x263F8EE78];
    sub_240992B50(0, v6, 0);
    uint64_t v7 = v22;
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v8 = v3 + 16;
    unint64_t v9 = v10;
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v8 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64));
    uint64_t v18 = *(void *)(v8 + 56);
    do
    {
      v9(v5, v11, v2);
      uint64_t v22 = v7;
      unint64_t v13 = *(void *)(v7 + 16);
      unint64_t v12 = *(void *)(v7 + 24);
      if (v13 >= v12 >> 1) {
        sub_240992B50(v12 > 1, v13 + 1, 1);
      }
      uint64_t v20 = v2;
      uint64_t v21 = MEMORY[0x263F448B8];
      uint64_t v14 = sub_24097F464((uint64_t *)&v19);
      v9((char *)v14, (uint64_t)v5, v2);
      uint64_t v15 = v22;
      *(void *)(v22 + 16) = v13 + 1;
      sub_240980754(&v19, v15 + 40 * v13 + 32);
      (*(void (**)(char *, uint64_t))(v8 - 8))(v5, v2);
      uint64_t v7 = v22;
      v11 += v18;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_2409C59FC(uint64_t a1)
{
  uint64_t v2 = sub_240A03708();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v22 = MEMORY[0x263F8EE78];
    sub_240992B88(0, v6, 0);
    uint64_t v7 = v22;
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v8 = v3 + 16;
    unint64_t v9 = v10;
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v8 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64));
    uint64_t v18 = *(void *)(v8 + 56);
    do
    {
      v9(v5, v11, v2);
      uint64_t v22 = v7;
      unint64_t v13 = *(void *)(v7 + 16);
      unint64_t v12 = *(void *)(v7 + 24);
      if (v13 >= v12 >> 1) {
        sub_240992B88(v12 > 1, v13 + 1, 1);
      }
      uint64_t v20 = v2;
      uint64_t v21 = sub_2409C8D50(&qword_268C99D90, MEMORY[0x263F441F0]);
      uint64_t v14 = sub_24097F464((uint64_t *)&v19);
      v9((char *)v14, (uint64_t)v5, v2);
      uint64_t v15 = v22;
      *(void *)(v22 + 16) = v13 + 1;
      sub_240980754(&v19, v15 + 40 * v13 + 32);
      (*(void (**)(char *, uint64_t))(v8 - 8))(v5, v2);
      uint64_t v7 = v22;
      v11 += v18;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_2409C5BF8(uint64_t a1)
{
  v2[16] = a1;
  v2[17] = v1;
  v2[18] = *v1;
  sub_2409C8B54(0, &qword_268C995D8, MEMORY[0x263F43AC8], MEMORY[0x263F8D8F0]);
  v2[19] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2409C5CE0, 0, 0);
}

uint64_t sub_2409C5CE0()
{
  sub_240991BD4(v0[17] + 32, (uint64_t)(v0 + 2));
  uint64_t v1 = v0[5];
  if (v1)
  {
    uint64_t v2 = v0[6];
    sub_24098BDC0(v0 + 2, v0[5]);
    uint64_t v3 = (void *)swift_task_alloc();
    v0[20] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_2409C5EC0;
    uint64_t v4 = v1;
    uint64_t v5 = v2;
LABEL_5:
    return MEMORY[0x270F33470](v4, v5);
  }
  sub_240991C64((uint64_t)(v0 + 2));
  v0[23] = 0;
  sub_240991BD4(v0[17] + 72, (uint64_t)(v0 + 7));
  uint64_t v6 = v0[10];
  if (v6)
  {
    uint64_t v7 = v0[11];
    sub_24098BDC0(v0 + 7, v0[10]);
    uint64_t v8 = (void *)swift_task_alloc();
    v0[24] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_2409C6148;
    uint64_t v4 = v6;
    uint64_t v5 = v7;
    goto LABEL_5;
  }
  sub_240991C64((uint64_t)(v0 + 7));
  v0[27] = 0;
  uint64_t v9 = *(void *)(v0[17] + 16);
  uint64_t v10 = (void *)swift_task_alloc();
  v0[28] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_2409C6320;
  return sub_2409C0094(v9);
}

uint64_t sub_2409C5EC0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 168) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_2409C65E8;
  }
  else
  {
    *(void *)(v4 + 176) = a1;
    uint64_t v5 = sub_2409C5FE8;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_2409C5FE8()
{
  sub_240981514((uint64_t)(v0 + 2));
  v0[23] = v0[22];
  sub_240991BD4(v0[17] + 72, (uint64_t)(v0 + 7));
  uint64_t v1 = v0[10];
  if (v1)
  {
    uint64_t v2 = v0[11];
    sub_24098BDC0(v0 + 7, v0[10]);
    uint64_t v3 = (void *)swift_task_alloc();
    v0[24] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_2409C6148;
    return MEMORY[0x270F33470](v1, v2);
  }
  else
  {
    sub_240991C64((uint64_t)(v0 + 7));
    v0[27] = 0;
    uint64_t v4 = *(void *)(v0[17] + 16);
    uint64_t v5 = (void *)swift_task_alloc();
    v0[28] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_2409C6320;
    return sub_2409C0094(v4);
  }
}

uint64_t sub_2409C6148(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 200) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_2409C6654;
  }
  else
  {
    *(void *)(v4 + 208) = a1;
    uint64_t v5 = sub_2409C6278;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_2409C6278()
{
  sub_240981514((uint64_t)(v0 + 7));
  v0[27] = v0[26];
  uint64_t v1 = *(void *)(v0[17] + 16);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[28] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_2409C6320;
  return sub_2409C0094(v1);
}

uint64_t sub_2409C6320(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[12] = v2;
  v3[13] = a1;
  v3[14] = v1;
  v3[29] = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_2409C66C0;
  }
  else {
    uint64_t v4 = sub_2409C643C;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2409C643C()
{
  if (qword_268C99310 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[16];
  sub_2409C57E0(v0[13], (id)qword_268C99F30, v0[18]);
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_240A030F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 1, 1, v3);
  sub_240A03188();
  uint64_t v4 = sub_240A03198();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 0, 1, v4);
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_2409C65E8()
{
  sub_240981514(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2409C6654()
{
  sub_240981514(v0 + 56);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2409C66C0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_2409C6738@<X0>(uint64_t *a1@<X8>)
{
  sub_2409C8B54(0, &qword_268C99F48, MEMORY[0x263F448C0], MEMORY[0x263F8E0F8]);
  sub_240A03EE8();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_240A06870;
  sub_240A03ED8();
  uint64_t v3 = sub_2409C582C(v2);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  a1[3] = (uint64_t)&type metadata for AudiogramPDFPage;
  unint64_t result = sub_2409A74CC();
  a1[4] = result;
  *a1 = v3;
  return result;
}

uint64_t sub_2409C68C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v49 = a3;
  uint64_t v43 = a2;
  uint64_t v4 = type metadata accessor for AudiogramPDFAudiogramChart.Model(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AudiogramPDFOverlayContextPills();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_240A03398();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_240A033A8();
  uint64_t v53 = (ValueMetadata *)v14;
  unint64_t v54 = MEMORY[0x263F43E08];
  sub_24097F464(&v51);
  sub_240A033B8();
  uint64_t v48 = sub_240A035A8();
  sub_240981514((uint64_t)&v51);
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_240A02828();
  uint64_t v17 = v16;
  uint64_t v18 = MEMORY[0x245602E50]();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x263F43D88], v10);
  uint64_t v53 = (ValueMetadata *)sub_240A03E28();
  unint64_t v54 = MEMORY[0x263F44850];
  sub_24097F464(&v51);
  MEMORY[0x245603A70](v15, v17, v13, v18);
  uint64_t v47 = sub_240A035A8();
  sub_240981514((uint64_t)&v51);
  uint64_t v53 = (ValueMetadata *)v14;
  unint64_t v19 = MEMORY[0x263F43E08];
  unint64_t v54 = MEMORY[0x263F43E08];
  sub_24097F464(&v51);
  sub_240A033B8();
  uint64_t v46 = sub_240A035A8();
  sub_240981514((uint64_t)&v51);
  sub_2409C89C0(a1, (uint64_t)v9);
  uint64_t v20 = sub_2409FF3CC((uint64_t)v9);
  uint64_t v53 = &type metadata for PDFHStackWithEqualWidth;
  unint64_t v54 = sub_2409A2918();
  uint64_t v51 = v20;
  long long v52 = xmmword_240A08880;
  sub_2409C8A24((uint64_t)v9);
  uint64_t v45 = sub_240A035A8();
  sub_240981514((uint64_t)&v51);
  uint64_t v53 = (ValueMetadata *)v14;
  unint64_t v54 = v19;
  sub_24097F464(&v51);
  sub_240A033B8();
  uint64_t v44 = sub_240A035A8();
  uint64_t v21 = sub_240981514((uint64_t)&v51);
  MEMORY[0x270FA5388](v21);
  uint64_t v22 = sub_240A03EE8();
  unint64_t v23 = MEMORY[0x263F448B8];
  uint64_t v53 = (ValueMetadata *)v22;
  unint64_t v54 = MEMORY[0x263F448B8];
  sub_24097F464(&v51);
  sub_240A03ED8();
  uint64_t v43 = sub_240A035A8();
  sub_240981514((uint64_t)&v51);
  uint64_t v53 = (ValueMetadata *)v14;
  unint64_t v54 = v19;
  sub_24097F464(&v51);
  sub_240A033B8();
  uint64_t v42 = sub_240A035A8();
  sub_240981514((uint64_t)&v51);
  sub_2409C89C0(a1, (uint64_t)v6);
  uint64_t v24 = type metadata accessor for AudiogramPDFAudiogramChart(0);
  swift_allocObject();
  uint64_t v25 = sub_2409CA1B4((uint64_t)v6);
  uint64_t v53 = (ValueMetadata *)v24;
  uint64_t v26 = sub_2409C8D50(&qword_268C99F50, (void (*)(uint64_t))type metadata accessor for AudiogramPDFAudiogramChart);
  unint64_t v54 = v26;
  uint64_t v51 = v25;
  uint64_t v27 = sub_24098BDC0(&v51, v24);
  v50[3] = v24;
  v50[4] = *(void *)(v26 + 8);
  uint64_t v28 = sub_24097F464(v50);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v28, v27, v24);
  uint64_t v29 = sub_240A035A8();
  sub_240981514((uint64_t)v50);
  sub_240981514((uint64_t)&v51);
  uint64_t v53 = (ValueMetadata *)v14;
  unint64_t v54 = v19;
  sub_24097F464(&v51);
  sub_240A033B8();
  uint64_t v30 = sub_240A035A8();
  uint64_t v31 = sub_240981514((uint64_t)&v51);
  MEMORY[0x270FA5388](v31);
  uint64_t v53 = (ValueMetadata *)v22;
  unint64_t v54 = v23;
  sub_24097F464(&v51);
  sub_240A03ED8();
  uint64_t v32 = sub_240A035A8();
  sub_240981514((uint64_t)&v51);
  uint64_t v53 = (ValueMetadata *)v14;
  unint64_t v54 = v19;
  sub_24097F464(&v51);
  sub_240A033B8();
  uint64_t v33 = sub_240A035A8();
  uint64_t v34 = sub_240981514((uint64_t)&v51);
  MEMORY[0x270FA5388](v34);
  uint64_t v53 = (ValueMetadata *)v22;
  unint64_t v54 = v23;
  sub_24097F464(&v51);
  sub_240A03ED8();
  uint64_t v35 = sub_240A035A8();
  sub_240981514((uint64_t)&v51);
  sub_24099390C();
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_240A08020;
  uint64_t v37 = v47;
  *(void *)(v36 + 32) = v48;
  *(void *)(v36 + 40) = v37;
  uint64_t v38 = v45;
  *(void *)(v36 + 48) = v46;
  *(void *)(v36 + 56) = v38;
  uint64_t v39 = v43;
  *(void *)(v36 + 64) = v44;
  *(void *)(v36 + 72) = v39;
  *(void *)(v36 + 80) = v42;
  *(void *)(v36 + 88) = v29;
  *(void *)(v36 + 96) = v30;
  *(void *)(v36 + 104) = v32;
  *(void *)(v36 + 112) = v33;
  *(void *)(v36 + 120) = v35;
  uint64_t v40 = MEMORY[0x2456031B0]();
  swift_bridgeObjectRelease();
  return v40;
}

uint64_t sub_2409C6F58(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_240A03398();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AudiogramPDFChartData();
  uint64_t v8 = (void *)sub_240A02938();
  id v9 = objc_msgSend(a1, sel_stringFromDate_, v8);

  uint64_t v10 = sub_240A04C58();
  uint64_t v12 = v11;

  uint64_t v13 = MEMORY[0x245602E70]();
  uint64_t v14 = *MEMORY[0x263F43D88];
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  uint64_t v32 = v4;
  v15(v7, v14, v4);
  uint64_t v16 = sub_240A03E28();
  uint64_t v34 = v16;
  uint64_t v35 = MEMORY[0x263F44850];
  sub_24097F464(v33);
  MEMORY[0x245603A70](v10, v12, v7, v13);
  uint64_t v31 = sub_240A035A8();
  sub_240981514((uint64_t)v33);
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  sub_240A02828();
  sub_24098267C(0, (unint64_t *)&qword_26AFD4940, (unint64_t *)&qword_26AFD4950, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_240A06870;
  uint64_t v18 = (uint64_t *)(a2 + *(int *)(type metadata accessor for AudiogramPDFAudiogramChart.Model(0) + 32));
  uint64_t v19 = *v18;
  uint64_t v20 = v18[1];
  *(void *)(v17 + 56) = MEMORY[0x263F8D310];
  *(void *)(v17 + 64) = sub_2409800D4();
  *(void *)(v17 + 32) = v19;
  *(void *)(v17 + 40) = v20;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v21 = sub_240A04C68();
  uint64_t v23 = v22;
  uint64_t v24 = swift_bridgeObjectRelease();
  uint64_t v25 = MEMORY[0x245602E70](v24);
  v15(v7, v14, v32);
  uint64_t v34 = v16;
  uint64_t v35 = MEMORY[0x263F44850];
  sub_24097F464(v33);
  MEMORY[0x245603A70](v21, v23, v7, v25);
  uint64_t v26 = sub_240A035A8();
  sub_240981514((uint64_t)v33);
  sub_24099390C();
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_240A06800;
  *(void *)(v27 + 32) = v31;
  *(void *)(v27 + 40) = v26;
  uint64_t v28 = MEMORY[0x2456031B0]();
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t sub_2409C72C4(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = a1;
  uint64_t v3 = sub_240A03398();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  sub_240A02828();
  sub_24098267C(0, (unint64_t *)&qword_26AFD4940, (unint64_t *)&qword_26AFD4950, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
  uint64_t v7 = swift_allocObject();
  long long v42 = xmmword_240A06870;
  *(_OWORD *)(v7 + 16) = xmmword_240A06870;
  uint64_t v41 = *(int *)(type metadata accessor for AudiogramPDFChartData() + 32);
  uint64_t v8 = *(void *)(a2 + v41);
  if (v8 == 3) {
    char v9 = 2;
  }
  else {
    char v9 = v8;
  }
  uint64_t v10 = sub_2409C8C18(v9);
  uint64_t v38 = a2;
  uint64_t v12 = v11;
  *(void *)(v7 + 56) = MEMORY[0x263F8D310];
  unint64_t v40 = sub_2409800D4();
  *(void *)(v7 + 64) = v40;
  *(void *)(v7 + 32) = v10;
  *(void *)(v7 + 40) = v12;
  uint64_t v13 = sub_240A04C68();
  uint64_t v15 = v14;
  uint64_t v16 = swift_bridgeObjectRelease();
  uint64_t v17 = MEMORY[0x245602E70](v16);
  uint64_t v18 = *MEMORY[0x263F43D88];
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v39(v6, v18, v3);
  uint64_t v19 = sub_240A03E28();
  uint64_t v45 = v19;
  uint64_t v46 = MEMORY[0x263F44850];
  sub_24097F464(v44);
  MEMORY[0x245603A70](v13, v15, v6, v17);
  uint64_t v20 = sub_240A035A8();
  sub_240981514((uint64_t)v44);
  sub_240A02828();
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = v42;
  uint64_t v22 = v38;
  if (*(void *)(v38 + v41) == 3) {
    char v23 = 2;
  }
  else {
    char v23 = BYTE1(*(void *)(v38 + v41));
  }
  uint64_t v24 = sub_2409C8C18(v23);
  unint64_t v25 = v40;
  *(void *)(v21 + 56) = MEMORY[0x263F8D310];
  *(void *)(v21 + 64) = v25;
  *(void *)(v21 + 32) = v24;
  *(void *)(v21 + 40) = v26;
  uint64_t v27 = sub_240A04C68();
  uint64_t v29 = v28;
  uint64_t v30 = swift_bridgeObjectRelease();
  uint64_t v31 = MEMORY[0x245602E70](v30);
  v39(v6, v18, v3);
  uint64_t v45 = v19;
  uint64_t v46 = MEMORY[0x263F44850];
  sub_24097F464(v44);
  MEMORY[0x245603A70](v27, v29, v6, v31);
  uint64_t v32 = sub_240A035A8();
  sub_240981514((uint64_t)v44);
  sub_2409C7728(v22, 0, v44);
  uint64_t v33 = sub_240A035A8();
  sub_240981514((uint64_t)v44);
  sub_2409C7728(v22, 1, v44);
  uint64_t v34 = sub_240A035A8();
  sub_240981514((uint64_t)v44);
  sub_24099390C();
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_240A07C40;
  *(void *)(v35 + 32) = v20;
  *(void *)(v35 + 40) = v32;
  *(void *)(v35 + 48) = v33;
  *(void *)(v35 + 56) = v34;
  uint64_t v36 = MEMORY[0x2456031B0]();
  swift_bridgeObjectRelease();
  return v36;
}

uint64_t sub_2409C7728@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_240A03398();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (unsigned __int8 *)(a1 + *(int *)(type metadata accessor for AudiogramPDFChartData() + 32));
  uint64_t v11 = *v10;
  if (a2)
  {
    if (v11 != 3 && (v10[32] & 1) == 0)
    {
      uint64_t v12 = (uint64_t *)(v10 + 24);
      goto LABEL_8;
    }
  }
  else if (v11 != 3 && (v10[16] & 1) == 0)
  {
    uint64_t v12 = (uint64_t *)(v10 + 8);
LABEL_8:
    char v13 = a2 & 1;
    uint64_t v14 = *v12;
    sub_2409C798C(v13);
    sub_24098267C(0, (unint64_t *)&qword_26AFD4940, (unint64_t *)&qword_26AFD4950, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_240A06870;
    v29[1] = v14;
    uint64_t v16 = sub_240A05348();
    uint64_t v18 = v17;
    *(void *)(v15 + 56) = MEMORY[0x263F8D310];
    *(void *)(v15 + 64) = sub_2409800D4();
    *(void *)(v15 + 32) = v16;
    *(void *)(v15 + 40) = v18;
    uint64_t v19 = sub_240A04C68();
    uint64_t v21 = v20;
    uint64_t v22 = swift_bridgeObjectRelease();
    uint64_t v23 = MEMORY[0x245602E70](v22);
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F43D88], v6);
    uint64_t v24 = sub_240A03E28();
    uint64_t v25 = MEMORY[0x263F44850];
    a3[3] = v24;
    a3[4] = v25;
    sub_24097F464(a3);
    return MEMORY[0x245603A70](v19, v21, v9, v23);
  }
  uint64_t v27 = sub_240A03308();
  uint64_t v28 = MEMORY[0x263F43C40];
  a3[3] = v27;
  a3[4] = v28;
  sub_24097F464(a3);
  return sub_240A032F8();
}

uint64_t sub_2409C798C(char a1)
{
  if (a1)
  {
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
  }
  else if (qword_26AFD4A20 != -1)
  {
    swift_once();
  }
  return sub_240A02828();
}

uint64_t sub_2409C7A7C(uint64_t a1, uint64_t a2)
{
  sub_2409C7B2C(a2, v8);
  uint64_t v3 = sub_240A035A8();
  sub_240981514((uint64_t)v8);
  sub_2409C7EBC(a2, v8);
  uint64_t v4 = sub_240A035A8();
  sub_240981514((uint64_t)v8);
  sub_24099390C();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240A06800;
  *(void *)(v5 + 32) = v3;
  *(void *)(v5 + 40) = v4;
  uint64_t v6 = MEMORY[0x2456031B0]();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_2409C7B2C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_240A03398();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a1 + *(int *)(type metadata accessor for AudiogramPDFAudiogramChart.Model(0) + 24)) == 1)
  {
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_240A02828();
    uint64_t v23 = v9;
    unint64_t v24 = 0;
    unint64_t v25 = 0xE000000000000000;
    sub_240A051F8();
    swift_bridgeObjectRelease();
    unint64_t v24 = 0xD00000000000001ALL;
    unint64_t v25 = 0x8000000240A0CF50;
    sub_240A04CA8();
    swift_bridgeObjectRelease();
    sub_240A04CA8();
    unint64_t v20 = 0xE000000000000000;
    uint64_t v10 = sub_240A02828();
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    BOOL v13 = sub_2409C8A98();
    if (MEMORY[0x270FA5388](v13))
    {
      *(&v22 - 4) = v10;
      *(&v22 - 3) = v12;
      unint64_t v20 = v8;
      uint64_t v21 = v23;
    }
    else
    {
      uint64_t v19 = v23;
      *(&v22 - 4) = v8;
      *(&v22 - 3) = v19;
      unint64_t v20 = v10;
      uint64_t v21 = v12;
    }
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F43D88], v4);
    uint64_t v14 = sub_240A03558();
    uint64_t v15 = MEMORY[0x263F43F58];
    a2[3] = v14;
    a2[4] = v15;
    sub_24097F464(a2);
    sub_240A03548();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = sub_240A03308();
    uint64_t v17 = MEMORY[0x263F43C40];
    a2[3] = v16;
    a2[4] = v17;
    sub_24097F464(a2);
    return sub_240A032F8();
  }
}

uint64_t sub_2409C7EBC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_240A03398();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a1 + *(int *)(type metadata accessor for AudiogramPDFAudiogramChart.Model(0) + 20)) == 1)
  {
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_240A02828();
    uint64_t v23 = v9;
    unint64_t v24 = 0;
    unint64_t v25 = 0xE000000000000000;
    sub_240A051F8();
    swift_bridgeObjectRelease();
    unint64_t v24 = 0xD00000000000001ALL;
    unint64_t v25 = 0x8000000240A0CF50;
    sub_240A04CA8();
    swift_bridgeObjectRelease();
    sub_240A04CA8();
    unint64_t v20 = 0xE000000000000000;
    uint64_t v10 = sub_240A02828();
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    BOOL v13 = sub_2409C8A98();
    if (MEMORY[0x270FA5388](v13))
    {
      *(&v22 - 4) = v10;
      *(&v22 - 3) = v12;
      unint64_t v20 = v8;
      uint64_t v21 = v23;
    }
    else
    {
      uint64_t v19 = v23;
      *(&v22 - 4) = v8;
      *(&v22 - 3) = v19;
      unint64_t v20 = v10;
      uint64_t v21 = v12;
    }
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F43D88], v4);
    uint64_t v14 = sub_240A03558();
    uint64_t v15 = MEMORY[0x263F43F58];
    a2[3] = v14;
    a2[4] = v15;
    sub_24097F464(a2);
    sub_240A03548();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = sub_240A03308();
    uint64_t v17 = MEMORY[0x263F43C40];
    a2[3] = v16;
    a2[4] = v17;
    sub_24097F464(a2);
    return sub_240A032F8();
  }
}

uint64_t sub_2409C824C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t (*a6)(uint64_t))
{
  uint64_t v38 = a4;
  uint64_t v39 = a6;
  uint64_t v40 = a3;
  uint64_t v37 = a1;
  uint64_t v8 = sub_240A03398();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_240A03E28();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v36 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v35 - v16;
  uint64_t v18 = _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v19 = a5(v18);
  uint64_t v20 = *MEMORY[0x263F43D88];
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v21(v11, v20, v8);
  MEMORY[0x245603A70](v37, a2, v11, v19);
  uint64_t v22 = v38;
  uint64_t v23 = _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v24 = v39(v23);
  v21(v11, v20, v8);
  unint64_t v25 = v36;
  MEMORY[0x245603A70](v40, v22, v11, v24);
  sub_2409C8B54(0, &qword_268C99628, (uint64_t (*)(uint64_t))sub_2409C8BB8, MEMORY[0x263F8E0F8]);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_240A06800;
  uint64_t v27 = MEMORY[0x263F44858];
  *(void *)(v26 + 56) = v12;
  *(void *)(v26 + 64) = v27;
  uint64_t v28 = MEMORY[0x263F44850];
  *(void *)(v26 + 72) = MEMORY[0x263F44850];
  uint64_t v29 = sub_24097F464((uint64_t *)(v26 + 32));
  uint64_t v30 = *(void (**)(uint64_t *, char *, uint64_t))(v13 + 16);
  v30(v29, v17, v12);
  *(void *)(v26 + 104) = v12;
  *(void *)(v26 + 112) = v27;
  *(void *)(v26 + 120) = v28;
  uint64_t v31 = sub_24097F464((uint64_t *)(v26 + 80));
  v30(v31, v25, v12);
  uint64_t v32 = _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v13 + 8);
  v33(v25, v12);
  v33(v17, v12);
  return v32;
}

uint64_t sub_2409C8554()
{
  sub_2409C8D40(*(id *)(v0 + 16));
  swift_release();
  sub_240991C64(v0 + 32);
  sub_240991C64(v0 + 72);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AudiogramPDFAudiogramSectionProvider()
{
  return self;
}

uint64_t sub_2409C85C8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_240991AE0;
  return sub_2409C5BF8(a1);
}

id sub_2409C8664()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  objc_msgSend(v0, sel_setDateStyle_, 3);
  id result = objc_msgSend(v0, sel_setTimeStyle_, 1);
  qword_268C99F30 = (uint64_t)v0;
  return result;
}

uint64_t sub_2409C86C8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  uint64_t v9 = sub_24097F464((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v9, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_240980754(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_2409C8760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v20[1] = a2;
  v20[2] = a3;
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v24 = MEMORY[0x263F8EE78];
    sub_240992B50(0, v5, 0);
    uint64_t v6 = v24;
    uint64_t v8 = *(void *)(type metadata accessor for AudiogramPDFAudiogramChart.Model(0) - 8);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    while (1)
    {
      sub_2409C6738(v21);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v24 = v6;
      unint64_t v12 = *(void *)(v6 + 16);
      unint64_t v11 = *(void *)(v6 + 24);
      if (v12 >= v11 >> 1) {
        sub_240992B50(v11 > 1, v12 + 1, 1);
      }
      uint64_t v13 = v22;
      uint64_t v14 = v23;
      uint64_t v15 = sub_2409C8964((uint64_t)v21, v22);
      MEMORY[0x270FA5388](v15);
      uint64_t v17 = (char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v18 + 16))(v17);
      sub_2409C86C8(v12, (uint64_t)v17, &v24, v13, v14);
      sub_240981514((uint64_t)v21);
      uint64_t v6 = v24;
      v9 += v10;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_2409C8964(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_2409C89B4()
{
  return sub_2409C68C0(v0[2], v0[3], v0[4]);
}

uint64_t sub_2409C89C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudiogramPDFAudiogramChart.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2409C8A24(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AudiogramPDFOverlayContextPills();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2409C8A80()
{
  return sub_2409C6F58(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_2409C8A88()
{
  return sub_2409C72C4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_2409C8A90()
{
  return sub_2409C7A7C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

BOOL sub_2409C8A98()
{
  return [MEMORY[0x263F82E00] userInterfaceLayoutDirectionForSemanticContentAttribute:0] == 1;
}

uint64_t sub_2409C8AC4()
{
  return sub_2409C824C(v0[2], v0[3], v0[4], v0[5], MEMORY[0x263F43B40], MEMORY[0x263F43B38]);
}

uint64_t sub_2409C8B0C()
{
  return sub_2409C824C(v0[2], v0[3], v0[4], v0[5], MEMORY[0x263F43B38], MEMORY[0x263F43B40]);
}

void sub_2409C8B54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_2409C8BB8()
{
  unint64_t result = qword_268C99630;
  if (!qword_268C99630)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C99630);
  }
  return result;
}

uint64_t sub_2409C8C18(char a1)
{
  if (a1 == 2) {
    return 45;
  }
  if (a1)
  {
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
  }
  else if (qword_26AFD4A20 != -1)
  {
    swift_once();
  }
  return sub_240A02828();
}

void sub_2409C8D40(id a1)
{
  if ((unint64_t)a1 >= 2) {
}
  }

uint64_t sub_2409C8D50(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

Swift::Void __swiftcall HUNoiseSettings.setUpNoiseNotifications()()
{
  objc_msgSend(v0, sel_setOnboardingCompleted_, 1);
  objc_msgSend(v0, sel_setNoiseEnabled_, 1);
  objc_msgSend(v0, sel_setNotificationsEnabled_, 1);

  objc_msgSend(v0, sel_setNotificationThreshold_, 90);
}

id HUNoiseSettings.isNoiseOnboardingCompleted.getter()
{
  return objc_msgSend(v0, sel_onboardingCompleted);
}

id sub_2409C8E34()
{
  return objc_msgSend(*v0, sel_onboardingCompleted);
}

uint64_t sub_2409C8E58(uint64_t a1)
{
  return sub_2409795CC(a1, qword_268C9AA58);
}

void sub_2409C8E6C(void *a1)
{
  id v2 = objc_msgSend(self, sel_sharedInstance);
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = objc_msgSend(v2, sel_getActivePairedDevice);

    if (v4)
    {
      if (objc_msgSend(v4, sel_valueForProperty_, *MEMORY[0x263F57658]))
      {
        sub_240A05128();
        sub_240A03B98();
      }
      else
      {
        memset(v27, 0, sizeof(v27));
      }
      sub_24098EB0C((uint64_t)v27, (uint64_t)v28);
      if (v28[3])
      {
        if (swift_dynamicCast())
        {
          id v5 = a1;
          id v6 = a1;
          _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
          uint64_t v7 = sub_240A03FF8();
          os_log_type_t v8 = sub_240A04EB8();
          if (os_log_type_enabled(v7, v8))
          {
            uint64_t v9 = swift_slowAlloc();
            uint64_t v10 = swift_slowAlloc();
            v28[0] = v10;
            *(_DWORD *)uint64_t v9 = 136446722;
            uint64_t v11 = sub_240A05478();
            *(void *)&v27[0] = sub_240981440(v11, v12, v28);
            sub_240A050D8();
            swift_bridgeObjectRelease();
            *(_WORD *)(v9 + 12) = 2082;
            swift_getErrorValue();
            uint64_t v13 = sub_240A053A8();
            *(void *)&v27[0] = sub_240981440(v13, v14, v28);
            sub_240A050D8();
            swift_bridgeObjectRelease();

            *(_WORD *)(v9 + 22) = 2082;
            _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
            *(void *)&v27[0] = sub_240981440(v25, v26, v28);
            sub_240A050D8();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_240976000, v7, v8, "[%{public}s] Could not access isHeadphoneExposureNotificationsEnabledOnActiveWatch. Error: %{public}s Watch Software %{public}s", (uint8_t *)v9, 0x20u);
            swift_arrayDestroy();
            MEMORY[0x2456058A0](v10, -1, -1);
            MEMORY[0x2456058A0](v9, -1, -1);
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          return;
        }
      }
      else
      {

        sub_24098961C((uint64_t)v28);
      }
    }
  }
  id v15 = a1;
  id v16 = a1;
  uint64_t v17 = sub_240A03FF8();
  os_log_type_t v18 = sub_240A04EB8();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    v28[0] = v20;
    *(_DWORD *)uint64_t v19 = 136446466;
    uint64_t v21 = sub_240A05478();
    *(void *)&v27[0] = sub_240981440(v21, v22, v28);
    sub_240A050D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2082;
    swift_getErrorValue();
    uint64_t v23 = sub_240A053A8();
    *(void *)&v27[0] = sub_240981440(v23, v24, v28);
    sub_240A050D8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240976000, v17, v18, "[%{public}s] Could not access isHeadphoneExposureNotificationsEnabledOnActiveWatch. Error: %{public}s Could not access active device properties.", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v20, -1, -1);
    MEMORY[0x2456058A0](v19, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_2409C930C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_240A045C8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_2409C9380()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_240A045C8();
  swift_release();

  return swift_release();
}

uint64_t sub_2409C93F8()
{
  v22[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = sub_240A04018();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388]();
  id v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_240A02F28() & 1) == 0) {
    return 2;
  }
  id v5 = self;
  if (!objc_msgSend(v5, sel_isHeadphoneExposureNotificationsSupportedOnActiveWatch)) {
    return 2;
  }
  v22[0] = 0;
  id v6 = objc_msgSend(v5, sel_isHeadphoneExposureMeasureLevelsEnabledOnActiveWatchWithError_, v22);
  if (!v22[0]) {
    return (uint64_t)v6;
  }
  id v7 = v22[0];
  swift_willThrow();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0 + OBJC_IVAR____TtC16HearingAppPlugin34HeadphoneNotificationsAvailability_logger, v1);
  id v8 = v7;
  uint64_t v9 = sub_240A03FF8();
  os_log_type_t v10 = sub_240A04EB8();
  if (!os_log_type_enabled(v9, v10))
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return 2;
  }
  uint64_t v11 = swift_slowAlloc();
  uint64_t v20 = (void *)swift_slowAlloc();
  v22[0] = v20;
  *(_DWORD *)uint64_t v11 = 136446466;
  uint64_t v12 = sub_240A05478();
  uint64_t v21 = sub_240981440(v12, v13, (uint64_t *)v22);
  sub_240A050D8();
  swift_bridgeObjectRelease();
  *(_WORD *)(v11 + 12) = 2082;
  swift_getErrorValue();
  uint64_t v14 = sub_240A053A8();
  uint64_t v21 = sub_240981440(v14, v15, (uint64_t *)v22);
  sub_240A050D8();

  swift_bridgeObjectRelease();
  _os_log_impl(&dword_240976000, v9, v10, "[%{public}s] Could not access isHeadphoneExposureMeasureLevelsEnabledOnActiveWatch. Error: %{public}s", (uint8_t *)v11, 0x16u);
  uint64_t v16 = 2;
  uint64_t v17 = v20;
  swift_arrayDestroy();
  MEMORY[0x2456058A0](v17, -1, -1);
  MEMORY[0x2456058A0](v11, -1, -1);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v16;
}

uint64_t sub_2409C9744()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_240979BA4();
    sub_24097DD7C();
    swift_getKeyPath();
    swift_getKeyPath();
    return sub_240A045D8();
  }
  return result;
}

uint64_t sub_2409C97DC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16HearingAppPlugin34HeadphoneNotificationsAvailability__promotionVisibility;
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263EFDE58];
  sub_24098295C(0, (unint64_t *)&qword_26AFD4868, MEMORY[0x263F8D4F8], MEMORY[0x263EFDE58]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v1, v3);
  uint64_t v4 = v0 + OBJC_IVAR____TtC16HearingAppPlugin34HeadphoneNotificationsAvailability__featureStatus;
  sub_24097FD5C(0, &qword_26AFD4860, (uint64_t (*)(uint64_t))sub_24097FDC0, v2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v0 + OBJC_IVAR____TtC16HearingAppPlugin34HeadphoneNotificationsAvailability_logger;
  uint64_t v7 = sub_240A04018();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_2409C9964()
{
  return type metadata accessor for HeadphoneNotificationsAvailability();
}

void sub_2409C996C()
{
  sub_24098295C(319, (unint64_t *)&qword_26AFD4868, MEMORY[0x263F8D4F8], MEMORY[0x263EFDE58]);
  if (v0 <= 0x3F)
  {
    sub_24097FD5C(319, &qword_26AFD4860, (uint64_t (*)(uint64_t))sub_24097FDC0, MEMORY[0x263EFDE58]);
    if (v1 <= 0x3F)
    {
      sub_240A04018();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t sub_2409C9ACC@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_240A045C8();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_2409C9B50()
{
  return sub_240A045D8();
}

uint64_t sub_2409C9BC8()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2409C9C00()
{
  return sub_2409C9744();
}

uint64_t sub_2409C9C08()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_240A045C8();
  swift_release();

  return swift_release();
}

uint64_t sub_2409C9C84(uint64_t a1)
{
  sub_24097FDC0(0);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_24097FC94(a1, (uint64_t)&v9 - v6);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24097FC94((uint64_t)v7, (uint64_t)v5);
  swift_retain();
  sub_240A045D8();
  return sub_24097FC38((uint64_t)v7);
}

void *sub_2409C9D88()
{
  unint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for AudiogramPDFChartData() + 36));
  uint64_t v29 = v1[2];
  if (!v29) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v2 = qword_268C99320;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  if (v2 != -1) {
LABEL_33:
  }
    swift_once();
  uint64_t v3 = 0;
  uint64_t v28 = v1 + 4;
  uint64_t v4 = qword_268C9AA70;
  uint64_t v5 = qword_268C9AA70 + 40;
  unint64_t v1 = (void *)MEMORY[0x263F8EE78];
  do
  {
    uint64_t v7 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    id v8 = &v28[5 * v3];
    double v9 = *(double *)v8;
    uint64_t v10 = v8[1];
    __int16 v11 = *((_WORD *)v8 + 8);
    uint64_t v12 = v8[3];
    __int16 v13 = *((_WORD *)v8 + 16);
    uint64_t v14 = *(void *)(v4 + 16);
    if (!v14) {
      goto LABEL_24;
    }
    double v15 = *(double *)(v4 + 32);
    uint64_t v16 = v14 - 1;
    if (v16)
    {
      uint64_t v19 = 0;
      double v20 = *(double *)(v4 + 32);
      do
      {
        if (v20 < *(double *)(v5 + 8 * v19)) {
          double v20 = *(double *)(v5 + 8 * v19);
        }
        ++v19;
      }
      while (v16 != v19);
      uint64_t v21 = (double *)v5;
      do
      {
        double v22 = *v21++;
        double v23 = v22;
        if (v22 < v15) {
          double v15 = v23;
        }
        --v16;
      }
      while (v16);
      double v18 = round(v20);
      double v17 = round(v15);
    }
    else
    {
      double v17 = round(v15);
      double v18 = v17;
    }
    if (v17 > v18) {
      goto LABEL_32;
    }
    if (v17 <= v9 && v9 <= v18)
    {
LABEL_24:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v1 = sub_240992470(0, v1[2] + 1, 1, v1);
      }
      unint64_t v26 = v1[2];
      unint64_t v25 = v1[3];
      if (v26 >= v25 >> 1) {
        unint64_t v1 = sub_240992470((void *)(v25 > 1), v26 + 1, 1, v1);
      }
      _OWORD v1[2] = v26 + 1;
      uint64_t v6 = (double *)&v1[5 * v26];
      v6[4] = v9;
      *((void *)v6 + 5) = v10;
      *((_WORD *)v6 + 24) = v11;
      *((void *)v6 + 7) = v12;
      *((_WORD *)v6 + 32) = v13;
    }
    uint64_t v3 = v7;
  }
  while (v7 != v29);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_2409C9F94()
{
  uint64_t v0 = sub_2409C9D88();
  uint64_t v1 = v0[2];
  if (!v1)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v2 = (double *)(v0 + 8);
  while (1)
  {
    double v3 = *(v2 - 3);
    if (*((unsigned char *)v2 - 16) == 2) {
      double v3 = 0.0;
    }
    if (*(unsigned char *)v2 != 2) {
      break;
    }
LABEL_9:
    if (v3 < -15.0 || v3 > 115.0) {
      goto LABEL_13;
    }
    v2 += 5;
    if (!--v1) {
      goto LABEL_12;
    }
  }
  if (v3 >= -15.0 && v3 <= 115.0)
  {
    double v3 = *(v2 - 1);
    goto LABEL_9;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  return 1;
}

void sub_2409CA034()
{
  qword_268C9AA70 = (uint64_t)&unk_26F4F9C90;
}

uint64_t sub_2409CA048()
{
  sub_2409D5834(0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A04838();
  uint64_t v3 = *MEMORY[0x263F1A608];
  uint64_t v4 = sub_240A04828();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 104))(v2, v3, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v2, 0, 1, v4);
  uint64_t v6 = sub_240A04858();
  uint64_t result = sub_2409D55E0((uint64_t)v2, (uint64_t (*)(void))sub_2409D5834);
  qword_268C9AA78 = v6;
  return result;
}

id sub_2409CA184()
{
  id result = (id)HKNumberFormatterWithDecimalPrecision();
  qword_268C99F58 = (uint64_t)result;
  return result;
}

uint64_t sub_2409CA1B4(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_2409D6CD0(a1, v2 + OBJC_IVAR____TtC16HearingAppPlugin26AudiogramPDFAudiogramChart_chartModel, type metadata accessor for AudiogramPDFAudiogramChart.Model);
  BOOL v4 = sub_2409C8A98();
  uint64_t v5 = sub_2409C9D88();
  uint64_t v6 = v5[2];
  if (v4)
  {
    if (v6)
    {
      uint64_t v7 = v6 - 1;
      uint64_t v8 = (unsigned __int8 *)&v5[5 * v6 + 1];
      while (1)
      {
        int v9 = *v8;
        v8 -= 40;
        BOOL v10 = v9 == 2;
        if (v9 != 2) {
          goto LABEL_13;
        }
        if (--v7 == -1) {
          goto LABEL_11;
        }
      }
    }
LABEL_12:
    uint64_t v7 = 0;
    BOOL v10 = 1;
    goto LABEL_13;
  }
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = 0;
  __int16 v11 = (unsigned __int8 *)(v5 + 6);
  while (1)
  {
    int v12 = *v11;
    v11 += 40;
    BOOL v10 = v12 == 2;
    if (v12 != 2) {
      break;
    }
    if (v6 == ++v7)
    {
LABEL_11:
      uint64_t v7 = 0;
      break;
    }
  }
LABEL_13:
  swift_bridgeObjectRelease();
  uint64_t v13 = v2 + OBJC_IVAR____TtC16HearingAppPlugin26AudiogramPDFAudiogramChart_leftEarAnnotationIndex;
  *(void *)uint64_t v13 = v7;
  *(unsigned char *)(v13 + 8) = v10;
  BOOL v14 = sub_2409C8A98();
  double v15 = sub_2409C9D88();
  uint64_t v16 = v15[2];
  if (v14)
  {
    if (v16)
    {
      uint64_t v17 = 0;
      double v18 = (unsigned __int8 *)(v15 + 8);
      while (1)
      {
        int v19 = *v18;
        v18 += 40;
        BOOL v20 = v19 == 2;
        if (v19 != 2) {
          goto LABEL_25;
        }
        if (v16 == ++v17) {
          goto LABEL_23;
        }
      }
    }
LABEL_24:
    uint64_t v17 = 0;
    BOOL v20 = 1;
    goto LABEL_25;
  }
  if (!v16) {
    goto LABEL_24;
  }
  uint64_t v17 = v16 - 1;
  uint64_t v21 = (unsigned __int8 *)&v15[5 * v16 + 3];
  while (1)
  {
    int v22 = *v21;
    v21 -= 40;
    BOOL v20 = v22 == 2;
    if (v22 != 2) {
      break;
    }
    if (--v17 == -1)
    {
LABEL_23:
      uint64_t v17 = 0;
      break;
    }
  }
LABEL_25:
  sub_2409D55E0(a1, type metadata accessor for AudiogramPDFAudiogramChart.Model);
  swift_bridgeObjectRelease();
  uint64_t v23 = v2 + OBJC_IVAR____TtC16HearingAppPlugin26AudiogramPDFAudiogramChart_rightEarAnnotationIndex;
  *(void *)uint64_t v23 = v17;
  *(unsigned char *)(v23 + 8) = v20;
  return v2;
}

uint64_t sub_2409CA364@<X0>(uint64_t a1@<X8>)
{
  return sub_2409CA3E0(v1 + OBJC_IVAR____TtC16HearingAppPlugin26AudiogramPDFAudiogramChart_chartModel, *(void *)(v1 + OBJC_IVAR____TtC16HearingAppPlugin26AudiogramPDFAudiogramChart_leftEarAnnotationIndex), *(unsigned __int8 *)(v1+ OBJC_IVAR____TtC16HearingAppPlugin26AudiogramPDFAudiogramChart_leftEarAnnotationIndex+ 8), *(void *)(v1 + OBJC_IVAR____TtC16HearingAppPlugin26AudiogramPDFAudiogramChart_rightEarAnnotationIndex), *(unsigned __int8 *)(v1+ OBJC_IVAR____TtC16HearingAppPlugin26AudiogramPDFAudiogramChart_rightEarAnnotationIndex+ 8), a1);
}

uint64_t sub_2409CA3E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  LODWORD(v86) = a5;
  uint64_t v85 = a4;
  LODWORD(v84) = a3;
  uint64_t v87 = a1;
  uint64_t v105 = a6;
  uint64_t v104 = sub_240A046F8();
  uint64_t v103 = *(void *)(v104 - 8);
  MEMORY[0x270FA5388](v104);
  uint64_t v102 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409D2834(0);
  MEMORY[0x270FA5388](v10 - 8);
  int v12 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409D3F34(0, &qword_268C99FB8, (uint64_t (*)(uint64_t))sub_2409D2868, (uint64_t (*)(void))sub_2409D3404, MEMORY[0x263EFCCF8]);
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v79 - v16;
  sub_2409D3A38();
  uint64_t v88 = v18;
  MEMORY[0x270FA5388](v18);
  BOOL v20 = (char *)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409D3AE4();
  uint64_t v90 = v21;
  uint64_t v91 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v79 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409D3D5C();
  uint64_t v92 = v24;
  uint64_t v93 = *(unint64_t **)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  unint64_t v89 = (char *)&v79 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409D47F0();
  uint64_t v96 = v26;
  uint64_t v97 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v106 = (char *)&v79 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409D4A04();
  uint64_t v98 = v28;
  uint64_t v99 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v94 = (char *)&v79 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409D5288();
  uint64_t v101 = v30;
  uint64_t v100 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v95 = (char *)&v79 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = v6;
  uint64_t v111 = a1;
  uint64_t v83 = v6;
  uint64_t v112 = a2;
  char v113 = v84 & 1;
  uint64_t v114 = v85;
  char v115 = v86 & 1;
  sub_2409D2868();
  sub_2409D3404();
  sub_240A042F8();
  uint64_t v118 = sub_240A04C58();
  uint64_t v119 = v32;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_240A04CA8();
  swift_bridgeObjectRelease();
  sub_2409D3BF8();
  sub_240A048D8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  long long v122 = xmmword_240A08A70;
  uint64_t v33 = (uint64_t)v12;
  sub_240A04428();
  uint64_t v85 = sub_240A04438();
  uint64_t v34 = *(void *)(v85 - 8);
  uint64_t v84 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56);
  uint64_t v86 = v34 + 56;
  v84(v12, 0, 1, v85);
  sub_2409D60FC(0, &qword_268C9A0B0, MEMORY[0x263F8D538], MEMORY[0x263F8D560], MEMORY[0x263F8D1A0]);
  uint64_t v36 = v35;
  uint64_t v37 = sub_2409D4438(&qword_268C9A0B8, (void (*)(uint64_t))sub_2409D3A38, (void (*)(void))sub_2409D3BF8, (void (*)(void))sub_2409D3C94);
  unint64_t v38 = sub_2409D3CC8();
  uint64_t v39 = v88;
  uint64_t v80 = v36;
  unint64_t v40 = v38;
  unint64_t v79 = v38;
  sub_240A048A8();
  id v81 = sub_2409D2834;
  sub_2409D55E0(v33, (uint64_t (*)(void))sub_2409D2834);
  sub_2409D55E0((uint64_t)v20, (uint64_t (*)(void))sub_2409D3A38);
  uint64_t v109 = v6;
  uint64_t v82 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263EFCD78];
  sub_2409D3F34(0, &qword_268C9A0E0, (uint64_t (*)(uint64_t))sub_2409D3FB4, (uint64_t (*)(void))sub_2409D45DC, MEMORY[0x263EFCD78]);
  uint64_t v42 = v41;
  uint64_t v118 = v39;
  uint64_t v119 = v36;
  uint64_t v120 = v37;
  uint64_t v121 = v40;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v44 = sub_2409D478C(&qword_268C9A188, &qword_268C9A0E0, (uint64_t (*)(uint64_t))sub_2409D3FB4, (uint64_t (*)(void))sub_2409D45DC);
  uint64_t v45 = v89;
  uint64_t v46 = v90;
  sub_240A04888();
  uint64_t v47 = v23;
  uint64_t v48 = v46;
  (*(void (**)(char *, uint64_t))(v91 + 8))(v47, v46);
  uint64_t v49 = v87;
  char v50 = sub_2409C9F94();
  double v51 = -120.0;
  if (v50) {
    double v51 = -200.0;
  }
  double v52 = 50.0;
  if ((v50 & 1) == 0) {
    double v52 = 20.0;
  }
  double v116 = v51;
  double v117 = v52;
  v84((char *)v33, 1, 1, v85);
  uint64_t v118 = v48;
  uint64_t v119 = v42;
  uint64_t v120 = OpaqueTypeConformance2;
  uint64_t v121 = v44;
  uint64_t v53 = swift_getOpaqueTypeConformance2();
  uint64_t v54 = v92;
  uint64_t v55 = v80;
  unint64_t v56 = v79;
  sub_240A048B8();
  sub_2409D55E0(v33, (uint64_t (*)(void))v81);
  ((void (*)(char *, uint64_t))v93[1])(v45, v54);
  uint64_t v93 = &v79;
  uint64_t v107 = v49;
  uint64_t v108 = v83;
  sub_2409D3F34(0, &qword_268C9A1A0, (uint64_t (*)(uint64_t))sub_2409D4CC0, (uint64_t (*)(void))sub_2409D5118, v82);
  uint64_t v58 = v57;
  uint64_t v118 = v54;
  uint64_t v119 = v55;
  uint64_t v120 = v53;
  uint64_t v121 = v56;
  uint64_t v59 = swift_getOpaqueTypeConformance2();
  uint64_t v60 = sub_2409D478C(&qword_268C9A1F8, &qword_268C9A1A0, (uint64_t (*)(uint64_t))sub_2409D4CC0, (uint64_t (*)(void))sub_2409D5118);
  uint64_t v61 = v94;
  uint64_t v62 = v96;
  uint64_t v63 = v106;
  sub_240A04898();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v63, v62);
  sub_240A04258();
  uint64_t v118 = v62;
  uint64_t v119 = v58;
  uint64_t v120 = v59;
  uint64_t v121 = v60;
  swift_getOpaqueTypeConformance2();
  sub_2409D68F4(&qword_268C9A208, MEMORY[0x263EFCC70]);
  uint64_t v64 = v95;
  uint64_t v65 = v98;
  sub_240A048C8();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v61, v65);
  uint64_t KeyPath = swift_getKeyPath();
  BOOL v67 = sub_2409C8A98();
  uint64_t v68 = v103;
  uint64_t v69 = (unsigned int *)MEMORY[0x263F18DD0];
  if (!v67) {
    uint64_t v69 = (unsigned int *)MEMORY[0x263F18DC8];
  }
  uint64_t v70 = v102;
  uint64_t v71 = v104;
  (*(void (**)(char *, void, uint64_t))(v103 + 104))(v102, *v69, v104);
  sub_2409D56B0();
  uint64_t v73 = v105;
  unsigned int v74 = (uint64_t *)(v105 + *(int *)(v72 + 36));
  sub_2409D2954(0, &qword_268C9A218, MEMORY[0x263F18DD8], MEMORY[0x263F1A418]);
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))((char *)v74 + *(int *)(v75 + 28), v70, v71);
  *unsigned int v74 = KeyPath;
  uint64_t v76 = v100;
  uint64_t v77 = v101;
  (*(void (**)(uint64_t, char *, uint64_t))(v100 + 16))(v73, v64, v101);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v70, v71);
  return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v64, v77);
}

uint64_t sub_2409CB0B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, char a3@<W3>, char *a4@<X4>, char a5@<W5>, uint64_t a6@<X8>)
{
  uint64_t v86 = a4;
  uint64_t OpaqueTypeConformance2 = a1;
  uint64_t v84 = a6;
  sub_2409D60FC(0, &qword_268C9A240, MEMORY[0x263F8D538], MEMORY[0x263EFCE78], MEMORY[0x263EFCC50]);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v80 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v69 = (void (*)(char *, uint64_t))((char *)&v66 - v12);
  uint64_t v85 = sub_240A04398();
  uint64_t v89 = *(void *)(v85 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v85);
  unint64_t v79 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v66 - v15;
  sub_2409D4060(0, &qword_268C9A068, MEMORY[0x263EFCD68]);
  uint64_t v78 = v17;
  uint64_t v77 = *(void *)(v17 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v76 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v66 - v20;
  sub_2409D330C();
  uint64_t v83 = v22;
  uint64_t v71 = *(void *)(v22 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v82 = (char *)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  id v81 = (char *)&v66 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v72 = (char *)&v66 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v75 = (char *)&v66 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v70 = (char *)&v66 - v32;
  MEMORY[0x270FA5388](v31);
  uint64_t v88 = (char *)&v66 - v33;
  sub_2409D6280(0, &qword_268C99FC8, sub_2409D2920, (void (*)(uint64_t))sub_2409D2A24, (void (*)(void))sub_2409D32D8);
  uint64_t v74 = v34;
  uint64_t v73 = *(void *)(v34 - 8);
  uint64_t v35 = MEMORY[0x270FA5388](v34);
  uint64_t v87 = (char *)&v66 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  unint64_t v38 = (char *)&v66 - v37;
  uint64_t v39 = sub_2409C9D88();
  v90[3] = sub_2409D2150((uint64_t)v39);
  swift_getKeyPath();
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v86;
  *(unsigned char *)(v40 + 24) = a5 & 1;
  *(void *)(v40 + 32) = OpaqueTypeConformance2;
  *(void *)(v40 + 40) = a2;
  *(unsigned char *)(v40 + 48) = a3 & 1;
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = sub_2409D5C9C;
  *(void *)(v41 + 24) = v40;
  sub_2409D2920(0);
  sub_2409D2A24();
  sub_2409D32D8();
  sub_2409D6A14(&qword_268C9A080, (void (*)(uint64_t))sub_2409D2A24, (void (*)(void))sub_2409D3600);
  uint64_t v86 = v38;
  sub_240A04958();
  swift_bridgeObjectRelease();
  sub_240A047B8();
  *(void *)&long long v94 = 0x404F400000000000;
  sub_240A04228();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_240A04388();
  if (qword_268C99340 != -1) {
    swift_once();
  }
  *(void *)&long long v94 = qword_268C9AAA0;
  uint64_t v42 = MEMORY[0x263F1B440];
  uint64_t v43 = MEMORY[0x263EFCD60];
  uint64_t v44 = MEMORY[0x263F1B420];
  uint64_t v45 = v85;
  sub_240A04168();
  uint64_t v46 = *(void (**)(char *, uint64_t))(v89 + 8);
  v89 += 8;
  uint64_t v69 = v46;
  v46(v16, v45);
  if (qword_268C99348 != -1) {
    swift_once();
  }
  long long v94 = xmmword_268C9AAA8;
  long long v95 = *(_OWORD *)&qword_268C9AAB8;
  uint64_t v96 = qword_268C9AAC8;
  uint64_t v47 = v85;
  *(void *)&long long v91 = v85;
  *((void *)&v91 + 1) = v42;
  *(void *)&long long v92 = v43;
  *((void *)&v92 + 1) = v44;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v48 = v70;
  uint64_t v49 = v78;
  sub_240A04188();
  uint64_t v77 = *(void *)(v77 + 8);
  ((void (*)(char *, uint64_t))v77)(v21, v49);
  uint64_t v50 = v71;
  BOOL v67 = *(void (**)(char *, char *, uint64_t))(v71 + 32);
  uint64_t v51 = v83;
  v67(v88, v48, v83);
  sub_240A047B8();
  *(void *)&long long v91 = 0x40CF400000000000;
  sub_240A04228();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  double v52 = v79;
  sub_240A04388();
  *(void *)&long long v91 = qword_268C9AAA0;
  uint64_t v53 = v76;
  sub_240A04168();
  v69(v52, v47);
  long long v91 = xmmword_268C9AAA8;
  long long v92 = *(_OWORD *)&qword_268C9AAB8;
  uint64_t v93 = qword_268C9AAC8;
  uint64_t v54 = v72;
  sub_240A04188();
  ((void (*)(char *, uint64_t))v77)(v53, v49);
  uint64_t v55 = v75;
  v67(v75, v54, v51);
  uint64_t v56 = v73;
  uint64_t v57 = (uint64_t)v87;
  uint64_t v58 = v74;
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v87, v86, v74);
  v90[0] = v57;
  uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
  uint64_t v60 = (uint64_t)v81;
  uint64_t v61 = v88;
  v59(v81, v88, v51);
  v90[1] = v60;
  uint64_t v62 = (uint64_t)v82;
  v59(v82, v55, v51);
  v90[2] = v62;
  sub_2409CBB3C(v90, v84);
  uint64_t v63 = *(void (**)(char *, uint64_t))(v50 + 8);
  v63(v55, v51);
  v63(v61, v51);
  uint64_t v64 = *(void (**)(char *, uint64_t))(v56 + 8);
  v64(v86, v58);
  v63((char *)v62, v51);
  v63((char *)v60, v51);
  return ((uint64_t (*)(char *, uint64_t))v64)(v87, v58);
}

uint64_t sub_2409CBB3C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  sub_2409D5D38();
  uint64_t v4 = v3 - 8;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409D6280(0, &qword_268C99FC8, sub_2409D2920, (void (*)(uint64_t))sub_2409D2A24, (void (*)(void))sub_2409D32D8);
  uint64_t v8 = v7;
  sub_2409D3528();
  uint64_t v9 = *a1;
  uint64_t v20 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v6, v9, v8);
  sub_2409D330C();
  uint64_t v12 = v11;
  sub_2409D4060(255, &qword_268C9A068, MEMORY[0x263EFCD68]);
  sub_240A04398();
  uint64_t v13 = &v6[*(int *)(v4 + 56)];
  uint64_t v14 = *(void *)(v12 - 8);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v15(v13, a1[1], v12);
  uint64_t v16 = &v6[*(int *)(v4 + 72)];
  v15(v16, a1[2], v12);
  uint64_t v17 = v21;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v21, v6, v20);
  uint64_t v18 = *(void (**)(uint64_t, char *, uint64_t))(v14 + 32);
  v18(v17 + *(int *)(v4 + 56), v13, v12);
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v18)(v17 + *(int *)(v4 + 72), v16, v12);
}

uint64_t sub_2409CBD98@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2409D5F64();
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409D2B40();
  uint64_t v9 = v8;
  sub_2409D2C84();
  sub_2409D2FD4(255, &qword_268C9A008, MEMORY[0x263EFCD50]);
  sub_240A04378();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, void, uint64_t))(v10 + 16))(v7, *a1, v9);
  sub_2409D2D7C();
  uint64_t v12 = v11;
  sub_2409D2EDC();
  sub_2409D428C(255, &qword_268C9A028, &qword_268C9A030, MEMORY[0x263F18968]);
  sub_2409D2FD4(255, &qword_268C9A020, MEMORY[0x263EFCD90]);
  sub_240A04418();
  sub_2409D304C();
  uint64_t v13 = &v7[*(int *)(v5 + 56)];
  uint64_t v14 = *(void *)(v12 - 8);
  (*(void (**)(char *, void, uint64_t))(v14 + 16))(v13, a1[1], v12);
  sub_2409D3160(0);
  sub_2409D38D8();
  uint64_t v15 = (uint64_t)&v7[*(int *)(v5 + 72)];
  sub_2409D6CD0(a1[2], v15, (uint64_t (*)(void))sub_2409D3160);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v7, v9);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a2 + *(int *)(v5 + 56), v13, v12);
  return sub_2409D5C18(v15, a2 + *(int *)(v5 + 72), (uint64_t (*)(void))sub_2409D3160);
}

uint64_t sub_2409CC038@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  sub_2409D61C8();
  uint64_t v4 = v3 - 8;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409D6280(0, (unint64_t *)&qword_268C9A298, sub_2409D632C, (void (*)(uint64_t))sub_2409D63CC, (void (*)(void))sub_2409D68C0);
  uint64_t v8 = v7;
  sub_2409D693C();
  uint64_t v9 = *a1;
  uint64_t v20 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v6, v9, v8);
  sub_2409D330C();
  uint64_t v12 = v11;
  sub_2409D4060(255, &qword_268C9A068, MEMORY[0x263EFCD68]);
  sub_240A04398();
  uint64_t v13 = &v6[*(int *)(v4 + 56)];
  uint64_t v14 = *(void *)(v12 - 8);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v15(v13, a1[1], v12);
  uint64_t v16 = &v6[*(int *)(v4 + 72)];
  v15(v16, a1[2], v12);
  uint64_t v17 = v21;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v21, v6, v20);
  uint64_t v18 = *(void (**)(uint64_t, char *, uint64_t))(v14 + 32);
  v18(v17 + *(int *)(v4 + 56), v13, v12);
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v18)(v17 + *(int *)(v4 + 72), v16, v12);
}

uint64_t sub_2409CC294()
{
  uint64_t v1 = sub_240A04248();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v2 = sub_240A041B8();
  MEMORY[0x270FA5388](v2 - 8);
  sub_240A04198();
  if (qword_268C99320 != -1) {
    swift_once();
  }
  *(void *)(swift_allocObject() + 16) = v0;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_240A04238();
  sub_2409D3FB4();
  sub_2409D45DC();
  return sub_240A043B8();
}

uint64_t sub_2409CC418()
{
  uint64_t v1 = sub_240A04248();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v2 = sub_240A041B8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_240A041D8();
  MEMORY[0x270FA5388](v3 - 8);
  sub_2409C9F94();
  sub_2409D5748();
  sub_240A041C8();
  *(void *)(swift_allocObject() + 16) = v0;
  sub_240A041A8();
  sub_240A04238();
  sub_2409D4CC0(0);
  sub_2409D5118();
  return sub_240A043A8();
}

uint64_t sub_2409CC5D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_240A04258();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, a1, v4);
}

uint64_t sub_2409CC63C()
{
  return sub_240A04738();
}

uint64_t sub_2409CC660(uint64_t a1)
{
  uint64_t v2 = sub_240A046F8();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_240A04748();
}

uint64_t sub_2409CC728@<X0>(uint64_t a1@<X0>, double *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X8>)
{
  int v59 = a4;
  int v60 = a7;
  uint64_t v56 = a3;
  uint64_t v57 = a6;
  uint64_t v63 = a5;
  uint64_t v61 = a1;
  uint64_t v66 = a8;
  sub_2409D5DF0();
  uint64_t v65 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v62 = (char *)v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409D2AC0();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v64 = (uint64_t)v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409D5E54(0);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v58 = (char *)v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v55 - v18;
  sub_2409D2A8C(0);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v23 = (char *)v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v26 = (char *)v55 - v25;
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  uint64_t v29 = (char *)v55 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)v55 - v30;
  sub_2409D5E88((uint64_t)(a2 + 3), (uint64_t)v69);
  sub_2409D5E88((uint64_t)v69, (uint64_t)&v70);
  int v32 = v71;
  uint64_t v67 = v12;
  if (v71 == 2)
  {
    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v33(v31, 1, 1, v12);
    uint64_t v34 = a2;
    uint64_t v35 = (uint64_t)v62;
  }
  else
  {
    double v36 = v70;
    if ((v59 & 1) != 0 || v61 != v56)
    {
      uint64_t v37 = sub_240A042A8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v19, 1, 1, v37);
    }
    else
    {
      if (sub_2409C8A98()) {
        sub_240A04288();
      }
      else {
        sub_240A04298();
      }
      uint64_t v38 = sub_240A042A8();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v19, 0, 1, v38);
    }
    uint64_t v34 = a2;
    uint64_t v35 = (uint64_t)v62;
    unsigned int v39 = v32 & 0xFFFFFF01;
    uint64_t v40 = v64;
    sub_2409CCD50(v39, a2, 1, (uint64_t)v19, v64, v36);
    sub_2409D55E0((uint64_t)v19, (uint64_t (*)(void))sub_2409D5E54);
    sub_2409D5C18(v40, (uint64_t)v31, (uint64_t (*)(void))sub_2409D2AC0);
    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v33(v31, 0, 1, v67);
  }
  sub_2409D5E88((uint64_t)(v34 + 1), (uint64_t)v68);
  sub_2409D5E88((uint64_t)v68, (uint64_t)&v72);
  __int16 v41 = v73;
  if (v73 == 2)
  {
    uint64_t v42 = 1;
    uint64_t v43 = v67;
  }
  else
  {
    double v44 = v72;
    v55[1] = v13;
    if ((v60 & 1) != 0 || v61 != v57)
    {
      uint64_t v46 = sub_240A042A8();
      uint64_t v45 = (uint64_t)v58;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v58, 1, 1, v46);
    }
    else
    {
      if (sub_2409C8A98())
      {
        uint64_t v45 = (uint64_t)v58;
        sub_240A04298();
      }
      else
      {
        uint64_t v45 = (uint64_t)v58;
        sub_240A04288();
      }
      uint64_t v47 = sub_240A042A8();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v45, 0, 1, v47);
    }
    int v48 = v41 & 0xFF01;
    uint64_t v49 = v64;
    sub_2409CCD50(v48, v34, 0, v45, v64, v44);
    sub_2409D55E0(v45, (uint64_t (*)(void))sub_2409D5E54);
    sub_2409D5C18(v49, (uint64_t)v29, (uint64_t (*)(void))sub_2409D2AC0);
    uint64_t v42 = 0;
    uint64_t v43 = v67;
  }
  v33(v29, v42, 1, v43);
  sub_2409D6CD0((uint64_t)v31, (uint64_t)v26, (uint64_t (*)(void))sub_2409D2A8C);
  sub_2409D6CD0((uint64_t)v29, (uint64_t)v23, (uint64_t (*)(void))sub_2409D2A8C);
  sub_2409D3600();
  sub_2409D6CD0((uint64_t)v26, v35, (uint64_t (*)(void))sub_2409D2A8C);
  uint64_t v50 = v65;
  uint64_t v51 = v35 + *(int *)(v65 + 48);
  sub_2409D6CD0((uint64_t)v23, v51, (uint64_t (*)(void))sub_2409D2A8C);
  uint64_t v52 = v35;
  uint64_t v53 = v66;
  sub_2409D5C18(v52, v66, (uint64_t (*)(void))sub_2409D2A8C);
  sub_2409D5C18(v51, v53 + *(int *)(v50 + 48), (uint64_t (*)(void))sub_2409D2A8C);
  sub_2409D55E0((uint64_t)v29, (uint64_t (*)(void))sub_2409D2A8C);
  sub_2409D55E0((uint64_t)v31, (uint64_t (*)(void))sub_2409D2A8C);
  sub_2409D55E0((uint64_t)v23, (uint64_t (*)(void))sub_2409D2A8C);
  return sub_2409D55E0((uint64_t)v26, (uint64_t (*)(void))sub_2409D2A8C);
}

uint64_t sub_2409CCD50@<X0>(int a1@<W0>, double *a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v76 = a4;
  LODWORD(v85) = a1;
  uint64_t v84 = a5;
  sub_2409D3194();
  uint64_t v83 = v9;
  uint64_t v81 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v69 = (uint64_t)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409D5E54(0);
  MEMORY[0x270FA5388](v11 - 8);
  double v72 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_240A042A8();
  uint64_t v70 = *(void *)(v13 - 8);
  uint64_t v71 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v68 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409D3160(0);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v82 = (uint64_t)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v74 = (char *)&v68 - v18;
  sub_2409D2D7C();
  uint64_t v80 = v19;
  uint64_t v78 = *(void *)(v19 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  unint64_t v79 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v68 - v22;
  sub_2409D2B40();
  uint64_t v25 = v24;
  uint64_t v26 = *(void *)(v24 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  uint64_t v77 = (char *)&v68 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)&v68 - v30;
  MEMORY[0x270FA5388](v29);
  uint64_t v33 = (char *)&v68 - v32;
  int v34 = a3 & 1;
  if (a3) {
    double v35 = 9.21322621e242;
  }
  else {
    double v35 = 1.63587128e-306;
  }
  if (a3) {
    double v36 = -9.12488124e192;
  }
  else {
    double v36 = -1.39234638e188;
  }
  uint64_t v37 = a2;
  double v38 = *a2;
  unsigned int v39 = v85 & 0xFFFFFF01;
  sub_2409CD3B8(v85 & 0xFFFFFF01, v35, v36, v34, (uint64_t)v31, a6, v38);
  swift_bridgeObjectRelease();
  uint64_t v73 = v26;
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
  uint64_t v85 = v33;
  __int16 v41 = v33;
  uint64_t v42 = v25;
  uint64_t v43 = v25;
  uint64_t v44 = v70;
  uint64_t v45 = v71;
  v40(v41, v31, v43);
  uint64_t v75 = v23;
  uint64_t v46 = v37;
  uint64_t v47 = (uint64_t)v72;
  sub_2409CD9F8(v39, v46, v34, (uint64_t)v23, a6);
  sub_2409D6CD0(v76, v47, (uint64_t (*)(void))sub_2409D5E54);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v47, 1, v45) == 1)
  {
    sub_2409D55E0(v47, (uint64_t (*)(void))sub_2409D5E54);
    uint64_t v48 = 1;
    uint64_t v49 = v83;
    uint64_t v50 = v81;
    uint64_t v51 = (uint64_t)v74;
  }
  else
  {
    uint64_t v52 = (uint64_t)v68;
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 32))(v68, v47, v45);
    uint64_t v53 = v69;
    sub_2409CE014(v34, v52, v69, a6, v38);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v52, v45);
    uint64_t v54 = v81;
    uint64_t v55 = v74;
    uint64_t v56 = v83;
    (*(void (**)(char *, uint64_t, uint64_t))(v81 + 32))(v74, v53, v83);
    uint64_t v48 = 0;
    uint64_t v49 = v56;
    uint64_t v50 = v54;
    uint64_t v51 = (uint64_t)v55;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(v51, v48, 1, v49);
  uint64_t v57 = v73;
  uint64_t v58 = v77;
  uint64_t v59 = v42;
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v77, v85, v42);
  v86[0] = v58;
  uint64_t v60 = v78;
  uint64_t v61 = v79;
  uint64_t v62 = v75;
  uint64_t v63 = v80;
  (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v79, v75, v80);
  v86[1] = v61;
  uint64_t v64 = v82;
  sub_2409D6CD0(v51, v82, (uint64_t (*)(void))sub_2409D3160);
  v86[2] = v64;
  sub_2409CBD98(v86, v84);
  sub_2409D55E0(v51, (uint64_t (*)(void))sub_2409D3160);
  uint64_t v65 = *(void (**)(char *, uint64_t))(v60 + 8);
  v65(v62, v63);
  uint64_t v66 = *(void (**)(char *, uint64_t))(v57 + 8);
  v66(v85, v59);
  sub_2409D55E0(v64, (uint64_t (*)(void))sub_2409D3160);
  v65(v61, v63);
  return ((uint64_t (*)(char *, uint64_t))v66)(v58, v59);
}

uint64_t sub_2409CD3B8@<X0>(unsigned int a1@<W0>, double a2@<X1>, double a3@<X2>, int a4@<W3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  int v41 = a4;
  double v38 = a3;
  double v37 = a2;
  unsigned int v42 = a1;
  uint64_t v47 = a5;
  uint64_t v9 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263EFCC50];
  sub_2409D60FC(0, &qword_268C9A280, MEMORY[0x263F8D310], MEMORY[0x263EFCE58], MEMORY[0x263EFCC50]);
  MEMORY[0x270FA5388](v10 - 8);
  sub_2409D60FC(0, &qword_268C9A240, MEMORY[0x263F8D538], MEMORY[0x263EFCE78], v9);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = sub_240A04378();
  uint64_t v39 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = MEMORY[0x263EFCC10];
  sub_2409D2FD4(0, &qword_268C9A008, MEMORY[0x263EFCD50]);
  uint64_t v43 = v16;
  uint64_t v44 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  double v35 = (char *)&v35 - v17;
  sub_2409D2C84();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v45 = v18;
  uint64_t v46 = v19;
  MEMORY[0x270FA5388](v18);
  double v36 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A047B8();
  v57[0] = a7;
  sub_240A04228();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_240A047B8();
  v57[0] = -a6;
  sub_240A04228();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_240A047B8();
  v57[0] = v37;
  v57[1] = v38;
  sub_240A04228();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_240A04368();
  sub_240A046D8();
  uint64_t v21 = MEMORY[0x263EFCD48];
  sub_240A04188();
  sub_2409D614C((uint64_t)v57);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v15, v13);
  uint64_t v22 = self;
  uint64_t v23 = &selRef_hk_hearingHealthAudiogramLeftEarLineColor;
  char v24 = v41 & 1;
  if (v41) {
    uint64_t v23 = &selRef_hk_hearingHealthAudiogramRightEarLineColor;
  }
  uint64_t v56 = MEMORY[0x245604520]([v22 *v23]);
  char v25 = v42;
  unsigned int v26 = v42 >> 8;
  uint64_t v52 = v13;
  uint64_t v53 = v21;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v28 = MEMORY[0x263F1B440];
  uint64_t v29 = MEMORY[0x263F1B420];
  uint64_t v30 = v36;
  uint64_t v31 = v43;
  uint64_t v32 = v35;
  sub_240A04168();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v31);
  char v48 = v24;
  double v49 = a6;
  char v50 = v25 & 1;
  char v51 = v26;
  uint64_t v52 = v31;
  uint64_t v53 = v28;
  uint64_t v54 = OpaqueTypeConformance2;
  uint64_t v55 = v29;
  swift_getOpaqueTypeConformance2();
  uint64_t v33 = v45;
  sub_240A04178();
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v30, v33);
}

uint64_t sub_2409CD9F8@<X0>(unsigned int a1@<W0>, double *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>, double a5@<D0>)
{
  unsigned int v38 = a3;
  uint64_t v33 = a2;
  unsigned int v46 = a1;
  uint64_t v44 = a4;
  uint64_t v45 = sub_240A042A8();
  uint64_t v43 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  int v41 = &v30[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2409D60FC(0, &qword_268C9A240, MEMORY[0x263F8D538], MEMORY[0x263EFCE78], MEMORY[0x263EFCC50]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  MEMORY[0x270FA5388](v9);
  *(double *)&uint64_t v10 = COERCE_DOUBLE(sub_240A04418());
  uint64_t v35 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = &v30[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v34 = MEMORY[0x263EFCB50];
  sub_2409D2FD4(0, &qword_268C9A020, MEMORY[0x263EFCD90]);
  double v36 = v13;
  uint64_t v37 = *(void *)(*(void *)&v13 - 8);
  MEMORY[0x270FA5388](*(void *)&v13);
  uint64_t v15 = &v30[-v14];
  sub_2409D2EDC();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v39 = v16;
  uint64_t v40 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v32 = &v30[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_240A047B8();
  double v52 = *a2;
  sub_240A04228();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v31 = v38 & 1;
  unsigned int v38 = v46 >> 8;
  sub_240A047B8();
  double v52 = -a5;
  sub_240A04228();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_240A04408();
  uint64_t v19 = MEMORY[0x263EFCD88];
  sub_240A04158();
  (*(void (**)(unsigned char *, uint64_t))(v35 + 8))(v12, v10);
  uint64_t v56 = sub_240A04918();
  double v52 = *(double *)&v10;
  uint64_t v53 = v19;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v21 = MEMORY[0x263F1B440];
  uint64_t v22 = MEMORY[0x263F1B420];
  uint64_t v23 = v32;
  double v24 = v36;
  sub_240A04168();
  swift_release();
  double v25 = v24;
  (*(void (**)(unsigned char *, double))(v37 + 8))(v15, COERCE_DOUBLE(*(void *)&v24));
  uint64_t v27 = v41;
  uint64_t v26 = v42;
  LOBYTE(v24) = v31;
  sub_2409CE584((uint64_t)v33, v31);
  uint64_t v47 = v26;
  double v48 = a5;
  char v49 = v46 & 1;
  char v50 = v38;
  char v51 = LOBYTE(v24);
  sub_240A04978();
  sub_2409D428C(0, &qword_268C9A028, &qword_268C9A030, MEMORY[0x263F18968]);
  double v52 = v25;
  uint64_t v53 = v21;
  uint64_t v54 = OpaqueTypeConformance2;
  uint64_t v55 = v22;
  swift_getOpaqueTypeConformance2();
  sub_2409D304C();
  uint64_t v28 = v39;
  sub_240A04148();
  (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v27, v45);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v40 + 8))(v23, v28);
}

uint64_t sub_2409CE014@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v33 = a3;
  uint64_t v34 = a2;
  int v27 = a1;
  sub_2409D60FC(0, &qword_268C9A240, MEMORY[0x263F8D538], MEMORY[0x263EFCE78], MEMORY[0x263EFCC50]);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  v26[1] = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  *(double *)&uint64_t v10 = COERCE_DOUBLE(sub_240A04418());
  uint64_t v29 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x263EFCB50];
  sub_2409D2FD4(0, &qword_268C9A020, MEMORY[0x263EFCD90]);
  double v14 = v13;
  uint64_t v30 = *(void *)(*(void *)&v13 - 8);
  MEMORY[0x270FA5388](*(void *)&v13);
  uint64_t v16 = (char *)v26 - v15;
  sub_2409D2EDC();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  MEMORY[0x270FA5388](v17);
  v26[0] = (char *)v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A047B8();
  double v36 = a5;
  sub_240A04228();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v27 &= 1u;
  sub_240A047B8();
  double v36 = -a4;
  sub_240A04228();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_240A04408();
  uint64_t v19 = MEMORY[0x263EFCD88];
  sub_240A04158();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v10);
  uint64_t v40 = sub_240A04918();
  double v36 = *(double *)&v10;
  uint64_t v37 = v19;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v21 = MEMORY[0x263F1B440];
  uint64_t v22 = MEMORY[0x263F1B420];
  uint64_t v23 = v26[0];
  sub_240A04168();
  swift_release();
  (*(void (**)(char *, double))(v30 + 8))(v16, COERCE_DOUBLE(*(void *)&v14));
  char v35 = v27;
  sub_240A04978();
  double v36 = v14;
  uint64_t v37 = v21;
  uint64_t v38 = OpaqueTypeConformance2;
  uint64_t v39 = v22;
  swift_getOpaqueTypeConformance2();
  uint64_t v24 = v32;
  sub_240A04148();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v23, v24);
}

uint64_t sub_2409CE4E8@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  char v3 = a1 & 1;
  uint64_t v4 = sub_240A027F8();
  MEMORY[0x270FA5388](v4 - 8);
  sub_2409A9A58(v3, (uint64_t)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_240A04868();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v7;
  *(unsigned char *)(a2 + 16) = v8 & 1;
  *(void *)(a2 + 24) = v9;
  return result;
}

uint64_t sub_2409CE584(uint64_t a1, char a2)
{
  uint64_t v3 = a1 + 8;
  if (a2)
  {
    sub_2409D5E88(v3, (uint64_t)v8);
    sub_2409D5E88((uint64_t)v8, (uint64_t)&v9);
    if (v10 == 2) {
      return sub_240A04268();
    }
    double v5 = v9;
    sub_2409D5E88(a1 + 24, (uint64_t)v7);
    sub_2409D5E88((uint64_t)v7, (uint64_t)&v11);
    if (v12 == 2 || v11 <= v5) {
      return sub_240A04268();
    }
    return sub_240A04278();
  }
  sub_2409D5E88(v3, (uint64_t)v8);
  sub_2409D5E88((uint64_t)v8, (uint64_t)&v9);
  if (v10 != 2)
  {
    double v4 = v9;
    sub_2409D5E88(a1 + 24, (uint64_t)v7);
    sub_2409D5E88((uint64_t)v7, (uint64_t)&v11);
    if (v12 != 2 && v11 <= v4) {
      return sub_240A04278();
    }
  }
  return sub_240A04268();
}

uint64_t sub_2409CE680@<X0>(__int16 a1@<W1>, char a2@<W2>, uint64_t a3@<X8>, double a4@<D0>)
{
  int v7 = a2 & 1;
  uint64_t v8 = sub_240A027F8();
  MEMORY[0x270FA5388](v8 - 8);
  sub_2409CE760(a1 & 0xFF01, v7, (uint64_t)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a4);
  uint64_t v10 = sub_240A04868();
  uint64_t v12 = v11;
  LOBYTE(v7) = v13;
  uint64_t v15 = v14;
  uint64_t result = swift_getKeyPath();
  *(void *)a3 = v10;
  *(void *)(a3 + 8) = v12;
  *(unsigned char *)(a3 + 16) = v7 & 1;
  *(void *)(a3 + 24) = v15;
  *(void *)(a3 + 32) = result;
  *(unsigned char *)(a3 + 40) = 1;
  return result;
}

uint64_t sub_2409CE760@<X0>(__int16 a1@<W0>, int a2@<W1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v35 = a3;
  uint64_t v7 = sub_240A02838();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v36 = sub_240A027F8();
  uint64_t v8 = *(void *)(v36 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v36);
  uint64_t v34 = &v32[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = &v32[-v11];
  uint64_t v13 = sub_240A03258();
  uint64_t v14 = (void *)*MEMORY[0x263F81500];
  uint64_t v15 = self;
  id v16 = v14;
  uint64_t v17 = &selRef_hk_hearingHealthAudiogramLeftEarLineColor;
  int v33 = a2;
  if (a2) {
    uint64_t v17 = &selRef_hk_hearingHealthAudiogramRightEarLineColor;
  }
  MEMORY[0x245604520]([v15 *v17]);
  uint64_t v18 = sub_2409824B8(0, (unint64_t *)&qword_268C99700);
  uint64_t v19 = sub_240A04FD8();
  uint64_t v40 = v18;
  *(void *)&long long v39 = v19;
  sub_24098AD10(&v39, v38);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v37 = v13;
  sub_2409D1C38(v38, v16, isUniquelyReferenced_nonNull_native);

  swift_bridgeObjectRelease();
  double v21 = round(a4);
  if ((~*(void *)&v21 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v21 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v21 >= 9.22337204e18)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    swift_once();
LABEL_10:
    sub_240A02828();
    sub_240A02848();
    uint64_t v29 = v34;
    sub_240A02808();
    sub_2409D68F4(&qword_268C9A270, MEMORY[0x263F06828]);
    uint64_t v30 = v36;
    sub_240A027E8();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v29, v30);
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v8 + 32))(v35, v12, v36);
  }
  *(void *)&long long v39 = (uint64_t)v21;
  sub_240A05348();
  sub_240A02848();
  uint64_t v22 = sub_240A02808();
  if ((a1 & 0xFF00) != 0x200)
  {
    uint64_t v23 = MEMORY[0x245602E50](v22);
    uint64_t v24 = self;
    id v25 = v16;
    uint64_t v26 = &selRef_hk_hearingHealthAudiogramLeftEarLineColor;
    if (v33) {
      uint64_t v26 = &selRef_hk_hearingHealthAudiogramRightEarLineColor;
    }
    MEMORY[0x245604520]([v24 *v26]);
    uint64_t v27 = sub_240A04FD8();
    uint64_t v40 = v18;
    *(void *)&long long v39 = v27;
    sub_24098AD10(&v39, v38);
    char v28 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v37 = v23;
    sub_2409D1C38(v38, v25, v28);

    swift_bridgeObjectRelease();
    if (qword_26AFD4A20 == -1) {
      goto LABEL_10;
    }
    goto LABEL_15;
  }
  return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v8 + 32))(v35, v12, v36);
}

uint64_t sub_2409CEBFC@<X0>(char *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  v69[3] = a2;
  uint64_t v85 = a3;
  sub_2409D5B70();
  uint64_t v84 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v83 = (char *)v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240A042C8();
  MEMORY[0x270FA5388](v6 - 8);
  v69[2] = (char *)v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_240A042E8();
  MEMORY[0x270FA5388](v8 - 8);
  v69[1] = (char *)v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409D419C(0);
  uint64_t v74 = v10;
  uint64_t v71 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v70 = (char *)v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409D4168(0);
  uint64_t v76 = v12;
  uint64_t v75 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v73 = (char *)v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409D4120(0);
  uint64_t v80 = *(void *)(v14 - 8);
  uint64_t v81 = v14;
  MEMORY[0x270FA5388](v14);
  double v72 = (char *)v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409D40EC(0);
  uint64_t v17 = ((uint64_t (*)(uint64_t))MEMORY[0x270FA5388])(v16 - 8);
  uint64_t v82 = (uint64_t)v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v69 - v19;
  uint64_t v21 = sub_240A043F8();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)v69 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_240A04128();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  char v28 = (char *)v69 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409D4060(0, &qword_268C9A0F0, MEMORY[0x263EFCB08]);
  uint64_t v30 = v29;
  uint64_t v87 = *(void *)(v29 - 8);
  uint64_t v31 = ((uint64_t (*)(uint64_t))MEMORY[0x270FA5388])(v29);
  unint64_t v79 = (char *)v69 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = ((uint64_t (*)(uint64_t))MEMORY[0x270FA5388])(v31);
  uint64_t v35 = (char *)v69 - v34;
  MEMORY[0x270FA5388](v33);
  uint64_t v88 = (char *)v69 - v36;
  uint64_t v86 = a1;
  uint64_t v37 = sub_240A043E8();
  uint64_t v89 = v20;
  if (v37)
  {
    if (qword_268C99350 != -1) {
      swift_once();
    }
    long long v78 = xmmword_268C9AAD0;
    uint64_t v38 = qword_268C9AAE0;
    uint64_t v39 = qword_268C9AAF0;
    uint64_t v37 = _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    long long v40 = v78;
  }
  else
  {
    uint64_t v38 = 0;
    uint64_t v39 = 0;
    long long v40 = 0uLL;
  }
  long long v93 = v40;
  uint64_t v94 = v38;
  uint64_t v95 = v37;
  uint64_t v96 = v39;
  sub_240A04118();
  if (qword_268C99340 != -1) {
    swift_once();
  }
  uint64_t v90 = qword_268C9AAA0;
  sub_240A04308();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  uint64_t v41 = v87;
  uint64_t v42 = v87 + 32;
  uint64_t v77 = *(void (**)(char *, char *, uint64_t))(v87 + 32);
  v77(v88, v35, v30);
  uint64_t v43 = v86;
  uint64_t v44 = sub_240A043E8();
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v24, v43, v21);
  uint64_t v45 = (uint64_t)v89;
  *(void *)&long long v78 = v42;
  if (!v44)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
    sub_240A043C8();
    goto LABEL_17;
  }
  uint64_t v46 = sub_240A043E8();
  uint64_t v47 = sub_240A043D8();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  if (__OFSUB__(v47, 1))
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v48 = sub_240A043C8();
  if ((v91 & 1) != 0 || v46 == v47 - 1)
  {
LABEL_17:
    uint64_t v57 = 1;
    uint64_t v56 = v80;
    uint64_t v53 = v81;
    goto LABEL_18;
  }
  uint64_t v21 = v45;
  MEMORY[0x270FA5388](v48);
  sub_240A042D8();
  sub_240A042B8();
  sub_2409D41E4(0);
  v68[2] = v49;
  v68[3] = sub_2409D437C();
  v68[0] = sub_2409D5C80;
  v68[1] = v68;
  uint64_t v43 = v70;
  sub_240A041F8();
  if (qword_268C99328 != -1) {
LABEL_20:
  }
    swift_once();
  uint64_t v50 = sub_2409D45A8();
  char v51 = v73;
  uint64_t v52 = v74;
  sub_240A04318();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v43, v52);
  uint64_t v53 = v81;
  if (qword_268C99358 != -1) {
    swift_once();
  }
  uint64_t v91 = v50;
  uint64_t v92 = qword_268C9AAF8;
  uint64_t v90 = v52;
  swift_getOpaqueTypeConformance2();
  uint64_t v54 = v72;
  uint64_t v55 = v76;
  sub_240A04308();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v51, v55);
  uint64_t v56 = v80;
  uint64_t v45 = v21;
  (*(void (**)(uint64_t, char *, uint64_t))(v80 + 32))(v21, v54, v53);
  uint64_t v57 = 0;
LABEL_18:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 56))(v45, v57, 1, v53);
  uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
  uint64_t v59 = v79;
  uint64_t v60 = v88;
  v58(v79, v88, v30);
  uint64_t v61 = v82;
  sub_2409D6CD0(v45, v82, (uint64_t (*)(void))sub_2409D40EC);
  uint64_t v62 = v83;
  v58(v83, v59, v30);
  sub_2409D46A0();
  uint64_t v63 = v84;
  uint64_t v64 = (uint64_t)&v62[*(int *)(v84 + 48)];
  sub_2409D6CD0(v61, v64, (uint64_t (*)(void))sub_2409D40EC);
  uint64_t v65 = v85;
  v77(v85, v62, v30);
  sub_2409D5C18(v64, (uint64_t)&v65[*(int *)(v63 + 48)], (uint64_t (*)(void))sub_2409D40EC);
  sub_2409D55E0((uint64_t)v89, (uint64_t (*)(void))sub_2409D40EC);
  uint64_t v66 = *(void (**)(char *, uint64_t))(v41 + 8);
  v66(v60, v30);
  sub_2409D55E0(v61, (uint64_t (*)(void))sub_2409D40EC);
  return ((uint64_t (*)(char *, uint64_t))v66)(v59, v30);
}

double sub_2409CF6CC@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v14 = sub_2409CF7D0(a2);
  char v15 = v3;
  sub_2409B2D2C();
  uint64_t v4 = sub_240A04878();
  uint64_t v6 = v5;
  char v8 = v7;
  uint64_t v10 = v9;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v12 = swift_getKeyPath();
  sub_240A04978();
  sub_240A046E8();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v8 & 1;
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = KeyPath;
  *(void *)(a1 + 40) = 0x3FE0000000000000;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = 1;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = v14;
  *(unsigned char *)(a1 + 80) = v15;
  *(void *)(a1 + 88) = v16;
  *(unsigned char *)(a1 + 96) = v17;
  double result = *(double *)&v18;
  *(_OWORD *)(a1 + 104) = v18;
  return result;
}

uint64_t sub_2409CF7D0(double a1)
{
  uint64_t v2 = sub_240A04018();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_268C99330 != -1) {
    swift_once();
  }
  if (qword_268C99F58)
  {
    id v6 = (id)qword_268C99F58;
    sub_2409CFA20(v6, a1);
    uint64_t v8 = v7;
  }
  else
  {
    sub_240A03FE8();
    uint64_t v9 = sub_240A03FF8();
    os_log_type_t v10 = sub_240A04EA8();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v17 = v12;
      *(_DWORD *)uint64_t v11 = 136446210;
      uint64_t v13 = sub_240A05478();
      uint64_t v16 = sub_240981440(v13, v14, &v17);
      sub_240A050D8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240976000, v9, v10, "%{public}s: Failed to create frequency formatter", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v12, -1, -1);
      MEMORY[0x2456058A0](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  return v8;
}

void sub_2409CFA20(id a1, double a2)
{
  double v3 = a2 / 1000.0;
  sub_2409824B8(0, &qword_268C99528);
  if (v3 < 1.0)
  {
    uint64_t v4 = (void *)sub_240A04FE8();
    a1 = objc_msgSend(a1, sel_stringFromNumber_, v4);

    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    sub_240A02828();
    uint64_t v5 = (void *)sub_240A04C18();
    swift_bridgeObjectRelease();
    id v6 = (id)HKFormatValueAndUnit();

    if (v6) {
      goto LABEL_9;
    }
    __break(1u);
  }
  uint64_t v7 = (void *)sub_240A04FE8();
  id v8 = objc_msgSend(a1, sel_stringFromNumber_, v7);

  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  sub_240A02828();
  uint64_t v9 = (void *)sub_240A04C18();
  swift_bridgeObjectRelease();
  id v6 = (id)HKFormatValueAndUnit();

  if (v6)
  {
LABEL_9:
    sub_240A04C58();

    return;
  }
  __break(1u);
}

uint64_t sub_2409CFC8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v66 = a2;
  uint64_t v80 = a3;
  sub_2409D57B4();
  uint64_t v79 = v4;
  MEMORY[0x270FA5388](v4);
  long long v78 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240A042C8();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v65 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_240A042E8();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v64 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409D4F98(0);
  uint64_t v71 = v10;
  uint64_t v68 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v67 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409D4ED4(0);
  uint64_t v72 = *(void *)(v12 - 8);
  uint64_t v73 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v70 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409D4DA8(0);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v69 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_240A043F8();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409D4D74(0);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v77 = (uint64_t)&v62 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v62 - v25;
  uint64_t v27 = sub_240A04128();
  uint64_t v75 = *(void *)(v27 - 8);
  uint64_t v76 = v27;
  MEMORY[0x270FA5388](v27);
  uint64_t v74 = (char *)&v62 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = (char *)&v62 - v30;
  if (qword_268C99348 != -1) {
    swift_once();
  }
  long long v84 = xmmword_268C9AAA8;
  uint64_t v85 = qword_268C9AAB8;
  uint64_t v86 = qword_268C9AAC0;
  uint64_t v87 = qword_268C9AAC8;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v32 = v31;
  sub_240A04118();
  sub_240A043C8();
  if (v82)
  {
    uint64_t v33 = 1;
LABEL_14:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v26, v33, 1, v15);
    uint64_t v46 = v74;
    uint64_t v45 = v75;
    uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v75 + 16);
    uint64_t v48 = v32;
    uint64_t v49 = v76;
    v47(v74, v32, v76);
    uint64_t v50 = v77;
    sub_2409D6CD0((uint64_t)v26, v77, (uint64_t (*)(void))sub_2409D4D74);
    char v51 = v78;
    v47(v78, v46, v49);
    sub_2409D519C();
    uint64_t v52 = v79;
    uint64_t v53 = (uint64_t)&v51[*(int *)(v79 + 48)];
    sub_2409D6CD0(v50, v53, (uint64_t (*)(void))sub_2409D4D74);
    uint64_t v54 = v80;
    (*(void (**)(uint64_t, char *, uint64_t))(v45 + 32))(v80, v51, v49);
    sub_2409D5C18(v53, v54 + *(int *)(v52 + 48), (uint64_t (*)(void))sub_2409D4D74);
    sub_2409D55E0((uint64_t)v26, (uint64_t (*)(void))sub_2409D4D74);
    uint64_t v55 = *(void (**)(char *, uint64_t))(v45 + 8);
    v55(v48, v49);
    sub_2409D55E0(v50, (uint64_t (*)(void))sub_2409D4D74);
    return ((uint64_t (*)(char *, uint64_t))v55)(v46, v49);
  }
  uint64_t v63 = v16;
  uint64_t v62 = v15;
  uint64_t v34 = sub_240A043E8();
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, a1, v18);
  if (!v34)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
LABEL_9:
    uint64_t v37 = sub_240A04988();
    MEMORY[0x270FA5388](v37);
    sub_240A042D8();
    sub_240A042B8();
    sub_2409D4FE0(0);
    uint64_t v60 = v38;
    unint64_t v61 = sub_2409D506C();
    uint64_t v58 = sub_2409D5824;
    uint64_t v59 = &v56;
    char v57 = 0;
    uint64_t v56 = 0;
    uint64_t v39 = v67;
    sub_240A041F8();
    if (qword_268C99328 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_2409D50E4();
    uint64_t v42 = v70;
    uint64_t v41 = v71;
    sub_240A04318();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v39, v41);
    uint64_t v15 = v62;
    if (qword_268C99358 != -1) {
      swift_once();
    }
    uint64_t v82 = v40;
    uint64_t v83 = qword_268C9AAF8;
    uint64_t v81 = v41;
    swift_getOpaqueTypeConformance2();
    uint64_t v43 = v69;
    uint64_t v44 = v73;
    sub_240A04308();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v42, v44);
    uint64_t v16 = v63;
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v26, v43, v15);
    uint64_t v33 = 0;
    goto LABEL_14;
  }
  sub_240A043E8();
  uint64_t v35 = sub_240A043D8();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  if (!__OFSUB__(v35, 1)) {
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_2409D0588@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v21 = sub_2409D5868(a1, -a3);
  char v22 = v4;
  sub_2409B2D2C();
  uint64_t v5 = sub_240A04878();
  uint64_t v19 = v6;
  uint64_t v20 = v5;
  char v8 = v7;
  uint64_t v18 = v9;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v10 = swift_getKeyPath();
  sub_240A04988();
  sub_240A046E8();
  char v11 = sub_240A04818();
  uint64_t result = sub_240A046B8();
  *(void *)a2 = v20;
  *(void *)(a2 + 8) = v19;
  *(unsigned char *)(a2 + 16) = v8 & 1;
  *(void *)(a2 + 24) = v18;
  *(void *)(a2 + 32) = KeyPath;
  *(void *)(a2 + 40) = 0x3FE0000000000000;
  *(void *)(a2 + 48) = v10;
  *(void *)(a2 + 56) = 1;
  *(unsigned char *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = v21;
  *(unsigned char *)(a2 + 80) = v22;
  *(void *)(a2 + 88) = v23;
  *(unsigned char *)(a2 + 96) = v24;
  *(void *)(a2 + 104) = v25;
  *(void *)(a2 + 112) = v26;
  *(unsigned char *)(a2 + 120) = v11;
  *(void *)(a2 + 128) = v13;
  *(void *)(a2 + 136) = v14;
  *(void *)(a2 + 144) = v15;
  *(void *)(a2 + 152) = v16;
  *(unsigned char *)(a2 + 160) = 0;
  return result;
}

uint64_t sub_2409D06D8()
{
  sub_2409D55E0(v0 + OBJC_IVAR____TtC16HearingAppPlugin26AudiogramPDFAudiogramChart_chartModel, type metadata accessor for AudiogramPDFAudiogramChart.Model);

  return swift_deallocClassInstance();
}

uint64_t sub_2409D0750()
{
  return type metadata accessor for AudiogramPDFAudiogramChart(0);
}

uint64_t type metadata accessor for AudiogramPDFAudiogramChart(uint64_t a1)
{
  return sub_2409A1004(a1, (uint64_t *)&unk_268C99F78);
}

uint64_t sub_2409D0778()
{
  uint64_t result = type metadata accessor for AudiogramPDFAudiogramChart.Model(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for AudiogramPDFAudiogramChart.Model(uint64_t a1)
{
  return sub_2409A1004(a1, qword_268C99F88);
}

char *sub_2409D0834(char *a1, char *a2, int *a3)
{
  char v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *(void *)a2;
    *(void *)char v4 = *(void *)a2;
    char v4 = (char *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v7;
    char v8 = (int *)type metadata accessor for AudiogramPDFChartData();
    uint64_t v9 = v8[5];
    uint64_t v10 = &v4[v9];
    char v11 = &a2[v9];
    uint64_t v12 = sub_240A02978();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    v13(v10, v11, v12);
    v13(&v4[v8[6]], &a2[v8[6]], v12);
    uint64_t v14 = v8[7];
    uint64_t v15 = &v4[v14];
    uint64_t v16 = &a2[v14];
    long long v17 = *((_OWORD *)v16 + 1);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v17;
    *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
    *(_OWORD *)(v15 + 43) = *(_OWORD *)(v16 + 43);
    uint64_t v18 = v8[8];
    uint64_t v19 = &v4[v18];
    uint64_t v20 = &a2[v18];
    long long v21 = *((_OWORD *)v20 + 1);
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    *((_OWORD *)v19 + 1) = v21;
    v19[32] = v20[32];
    *(void *)&v4[v8[9]] = *(void *)&a2[v8[9]];
    uint64_t v22 = a3[6];
    v4[a3[5]] = a2[a3[5]];
    v4[v22] = a2[v22];
    uint64_t v23 = a3[8];
    v4[a3[7]] = a2[a3[7]];
    char v24 = &v4[v23];
    uint64_t v25 = &a2[v23];
    uint64_t v26 = *((void *)v25 + 1);
    *(void *)char v24 = *(void *)v25;
    *((void *)v24 + 1) = v26;
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  }
  return v4;
}

uint64_t sub_2409D09DC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = type metadata accessor for AudiogramPDFChartData();
  uint64_t v3 = a1 + *(int *)(v2 + 20);
  uint64_t v4 = sub_240A02978();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(a1 + *(int *)(v2 + 24), v4);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

char *sub_2409D0AB0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = (int *)type metadata accessor for AudiogramPDFChartData();
  uint64_t v8 = v7[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_240A02978();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  v12(v9, v10, v11);
  v12(&a1[v7[6]], &a2[v7[6]], v11);
  uint64_t v13 = v7[7];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  long long v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
  *(_OWORD *)(v14 + 43) = *(_OWORD *)(v15 + 43);
  uint64_t v17 = v7[8];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  long long v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v20;
  v18[32] = v19[32];
  *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
  uint64_t v21 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  a1[v21] = a2[v21];
  uint64_t v22 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v23 = &a1[v22];
  char v24 = &a2[v22];
  uint64_t v25 = *((void *)v24 + 1);
  *(void *)uint64_t v23 = *(void *)v24;
  *((void *)v23 + 1) = v25;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return a1;
}

char *sub_2409D0C08(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for AudiogramPDFChartData();
  uint64_t v7 = v6[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_240A02978();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v11(&a1[v6[6]], &a2[v6[6]], v10);
  uint64_t v12 = v6[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = (long long *)&a2[v12];
  long long v15 = *v14;
  *(_OWORD *)(v13 + 11) = *(long long *)((char *)v14 + 11);
  *(_OWORD *)uint64_t v13 = v15;
  long long v16 = *(long long *)((char *)v14 + 43);
  *((_OWORD *)v13 + 2) = v14[2];
  *(_OWORD *)(v13 + 43) = v16;
  uint64_t v17 = v6[8];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  char v20 = v19[32];
  long long v21 = *((_OWORD *)v19 + 1);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v21;
  v18[32] = v20;
  *(void *)&a1[v6[9]] = *(void *)&a2[v6[9]];
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  a1[a3[5]] = a2[a3[5]];
  a1[a3[6]] = a2[a3[6]];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v22 = a3[8];
  uint64_t v23 = &a1[v22];
  char v24 = &a2[v22];
  *(void *)uint64_t v23 = *(void *)v24;
  *((void *)v23 + 1) = *((void *)v24 + 1);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_2409D0D9C(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = (int *)type metadata accessor for AudiogramPDFChartData();
  uint64_t v7 = v6[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_240A02978();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(&a1[v6[6]], &a2[v6[6]], v10);
  uint64_t v12 = v6[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
  *(_OWORD *)(v13 + 43) = *(_OWORD *)(v14 + 43);
  uint64_t v16 = v6[8];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  long long v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  v17[32] = v18[32];
  *(void *)&a1[v6[9]] = *(void *)&a2[v6[9]];
  uint64_t v20 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  a1[v20] = a2[v20];
  uint64_t v21 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  *(_OWORD *)&a1[v21] = *(_OWORD *)&a2[v21];
  return a1;
}

char *sub_2409D0ED8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (int *)type metadata accessor for AudiogramPDFChartData();
  uint64_t v8 = v7[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_240A02978();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  v12(&a1[v7[6]], &a2[v7[6]], v11);
  uint64_t v13 = v7[7];
  uint64_t v14 = &a1[v13];
  long long v15 = &a2[v13];
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 11) = *(_OWORD *)(v15 + 11);
  *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
  *(_OWORD *)(v14 + 43) = *(_OWORD *)(v15 + 43);
  uint64_t v16 = v7[8];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  v17[32] = v18[32];
  long long v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  a1[v20] = a2[v20];
  uint64_t v21 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = (uint64_t *)&a2[v21];
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *(void *)uint64_t v22 = v25;
  *((void *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2409D103C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2409D1050);
}

uint64_t sub_2409D1050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AudiogramPDFChartData();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_2409D1114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2409D1128);
}

uint64_t sub_2409D1128(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for AudiogramPDFChartData();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_2409D11E8()
{
  uint64_t result = type metadata accessor for AudiogramPDFChartData();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2409D128C@<X0>(uint64_t a1@<X8>)
{
  return sub_2409CA364(a1);
}

uint64_t sub_2409D12B0()
{
  return 0x4074C00000000000;
}

uint64_t sub_2409D12C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_240A03458();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t sub_2409D132C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2409D68F4(&qword_268C99F50, (void (*)(uint64_t))type metadata accessor for AudiogramPDFAudiogramChart);

  return MEMORY[0x270F34BE8](a1, a2, a3, v6);
}

uint64_t sub_2409D13B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2409D13E0(a1, a2, a3, MEMORY[0x263F44870]);
}

uint64_t sub_2409D13C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2409D13E0(a1, a2, a3, MEMORY[0x263F44878]);
}

uint64_t sub_2409D13E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = sub_2409D68F4(&qword_268C99F50, (void (*)(uint64_t))type metadata accessor for AudiogramPDFAudiogramChart);

  return a4(a1, a2, v6);
}

uint64_t sub_2409D1470(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  uint64_t v4 = sub_2409D68F4(&qword_268C99FA8, (void (*)(uint64_t))type metadata accessor for AudiogramPDFAudiogramChart);
  *uint64_t v3 = v1;
  v3[1] = sub_2409A2324;
  return MEMORY[0x270F33478](a1, v4);
}

uint64_t sub_2409D154C()
{
  return sub_2409D68F4(&qword_268C99FA0, (void (*)(uint64_t))type metadata accessor for AudiogramPDFAudiogramChart);
}

uint64_t sub_2409D1594()
{
  return sub_2409D68F4(&qword_268C99FA8, (void (*)(uint64_t))type metadata accessor for AudiogramPDFAudiogramChart);
}

uint64_t sub_2409D15DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2409D15F8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_2409D605C();
  char v35 = a2;
  uint64_t v6 = sub_240A052B8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33) {
      break;
    }
    uint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v33) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v34 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v33) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v34 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    uint64_t v21 = *(void **)(*(void *)(v5 + 48) + 8 * v16);
    uint64_t v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
    if (v35)
    {
      sub_24098AD10(v22, v36);
    }
    else
    {
      sub_240981564((uint64_t)v22, (uint64_t)v36);
      id v23 = v21;
    }
    sub_240A04C58();
    sub_240A053F8();
    sub_240A04C98();
    uint64_t v24 = sub_240A05418();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = v24 & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v21;
    uint64_t result = (uint64_t)sub_24098AD10(v36, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v18 = (void *)(v5 + 64);
  if ((v35 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v18 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2409D1930(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_2409D6D38();
  char v37 = a2;
  uint64_t v6 = sub_240A052B8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    char v32 = *(unsigned char *)(*(void *)(v5 + 56) + v20);
    if ((v37 & 1) == 0) {
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    }
    sub_240A053F8();
    sub_240A04C98();
    uint64_t result = sub_240A05418();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(unsigned char *)(*(void *)(v7 + 56) + v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

_OWORD *sub_2409D1C38(_OWORD *a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_24098AD20((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_2409D1DE4();
      goto LABEL_7;
    }
    sub_2409D15F8(v12, a3 & 1);
    unint64_t v18 = sub_24098AD20((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      unint64_t v9 = v18;
      unint64_t v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for Key(0);
    uint64_t result = (_OWORD *)sub_240A05398();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v15 = *v4;
  if (v13)
  {
LABEL_8:
    unint64_t v16 = (_OWORD *)(v15[7] + 32 * v9);
    sub_240981514((uint64_t)v16);
    return sub_24098AD10(a1, v16);
  }
LABEL_13:
  sub_2409D1D7C(v9, (uint64_t)a2, a1, v15);

  return a2;
}

_OWORD *sub_2409D1D7C(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_24098AD10(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

id sub_2409D1DE4()
{
  uint64_t v1 = v0;
  sub_2409D605C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_240A052A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    sub_240981564(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_24098AD10(v22, (_OWORD *)(*(void *)(v4 + 56) + v18));
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2409D1FA8()
{
  uint64_t v1 = v0;
  sub_2409D6D38();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_240A052A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    LOBYTE(v16) = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    int64_t v19 = (void *)(*(void *)(v4 + 48) + 16 * v15);
    *int64_t v19 = v18;
    v19[1] = v17;
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = (_BYTE)v16;
    id result = (void *)_s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2409D2150(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  uint64_t v2 = (void *)MEMORY[0x263F8EE78];
  if (v1)
  {
    id result = _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = v2 + 4;
    uint64_t v6 = (_WORD *)(result + 64);
    uint64_t v26 = v1;
    while (1)
    {
      uint64_t v7 = *((void *)v6 - 4);
      uint64_t v8 = *((void *)v6 - 3);
      __int16 v9 = *(v6 - 8);
      uint64_t v10 = *((void *)v6 - 1);
      __int16 v11 = *v6;
      if (!v3)
      {
        unint64_t v12 = v2[3];
        if ((uint64_t)((v12 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_26;
        }
        uint64_t v27 = *((void *)v6 - 1);
        uint64_t v28 = v2;
        int64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
        if (v13 <= 1) {
          uint64_t v14 = 1;
        }
        else {
          uint64_t v14 = v13;
        }
        sub_2409D2954(0, &qword_268C9A288, (uint64_t (*)(uint64_t))sub_2409D29B8, MEMORY[0x263F8E0F8]);
        uint64_t v2 = (void *)swift_allocObject();
        int64_t v15 = j__malloc_size(v2) - 32;
        uint64_t v16 = v28;
        uint64_t v17 = v15 / 48;
        v2[2] = v14;
        v2[3] = 2 * (v15 / 48);
        unint64_t v18 = (unint64_t)(v2 + 4);
        uint64_t v19 = v28[3] >> 1;
        uint64_t v20 = 6 * v19;
        if (v28[2])
        {
          if (v2 != v28 || v18 >= (unint64_t)&v28[v20 + 4])
          {
            memmove(v2 + 4, v28 + 4, 48 * v19);
            uint64_t v16 = v28;
          }
          v16[2] = 0;
        }
        uint64_t v5 = (void *)(v18 + v20 * 8);
        uint64_t v3 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - v19;
        id result = swift_release();
        uint64_t v1 = v26;
        uint64_t v10 = v27;
      }
      BOOL v22 = __OFSUB__(v3--, 1);
      if (v22) {
        break;
      }
      v6 += 20;
      *uint64_t v5 = v4;
      v5[1] = v7;
      v5[2] = v8;
      *((_WORD *)v5 + 12) = v9;
      v5[4] = v10;
      *((_WORD *)v5 + 20) = v11;
      v5 += 6;
      if (v1 == ++v4)
      {
        id result = swift_bridgeObjectRelease();
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v3 = 0;
LABEL_21:
  unint64_t v23 = v2[3];
  if (v23 < 2) {
    return (uint64_t)v2;
  }
  unint64_t v24 = v23 >> 1;
  BOOL v22 = __OFSUB__(v24, v3);
  uint64_t v25 = v24 - v3;
  if (!v22)
  {
    v2[2] = v25;
    return (uint64_t)v2;
  }
LABEL_27:
  __break(1u);
  return result;
}

size_t sub_2409D234C(uint64_t a1)
{
  sub_2409D6360();
  uint64_t v44 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v47 = (char *)v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (void *)((char *)v42 - v5);
  MEMORY[0x270FA5388](v7);
  __int16 v9 = (char *)v42 - v8;
  uint64_t v48 = v10;
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = *(void *)(a1 + 16);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  int64_t v13 = (void *)MEMORY[0x263F8EE78];
  uint64_t v46 = v12;
  v42[0] = a1;
  if (v12)
  {
    uint64_t v43 = (v11 + 32) & ~v11;
    uint64_t v14 = MEMORY[0x263F8EE78] + v43;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = *(void *)(type metadata accessor for AudiogramLongitudinalPDFChartData() - 8);
    uint64_t v18 = a1 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    uint64_t v45 = *(void *)(v17 + 72);
    v42[1] = v11 | 7;
    uint64_t v19 = v13;
    uint64_t v20 = v44;
    while (1)
    {
      uint64_t v22 = (uint64_t)&v47[*(int *)(v20 + 48)];
      sub_2409D6CD0(v18, v22, (uint64_t (*)(void))type metadata accessor for AudiogramLongitudinalPDFChartData);
      uint64_t v23 = (uint64_t)v6 + *(int *)(v20 + 48);
      *uint64_t v6 = v15;
      sub_2409D5C18(v22, v23, (uint64_t (*)(void))type metadata accessor for AudiogramLongitudinalPDFChartData);
      size_t result = sub_2409D5C18((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(void))sub_2409D6360);
      if (v16)
      {
        int64_t v13 = v19;
        BOOL v21 = __OFSUB__(v16--, 1);
        if (v21) {
          goto LABEL_27;
        }
      }
      else
      {
        unint64_t v25 = v19[3];
        if ((uint64_t)((v25 >> 1) + 0x4000000000000000) < 0)
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }
        int64_t v26 = v25 & 0xFFFFFFFFFFFFFFFELL;
        if (v26 <= 1) {
          uint64_t v27 = 1;
        }
        else {
          uint64_t v27 = v26;
        }
        sub_2409D2954(0, &qword_268C9A338, (uint64_t (*)(uint64_t))sub_2409D6360, MEMORY[0x263F8E0F8]);
        uint64_t v28 = *(void *)(v48 + 72);
        uint64_t v29 = v43;
        int64_t v13 = (void *)swift_allocObject();
        size_t result = j__malloc_size(v13);
        if (!v28) {
          goto LABEL_34;
        }
        int64_t v30 = result - v29;
        if (result - v29 == 0x8000000000000000 && v28 == -1) {
          goto LABEL_35;
        }
        uint64_t v32 = v29;
        uint64_t v33 = v30 / v28;
        void v13[2] = v27;
        v13[3] = 2 * (v30 / v28);
        uint64_t v34 = (char *)v13 + v32;
        uint64_t v35 = v19[3] >> 1;
        uint64_t v36 = v35 * v28;
        if (v19[2])
        {
          if (v13 < v19 || v34 >= (char *)v19 + v32 + v36)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v13 != v19)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          long long v19[2] = 0;
        }
        uint64_t v14 = (uint64_t)&v34[v36];
        uint64_t v38 = (v33 & 0x7FFFFFFFFFFFFFFFLL) - v35;
        swift_release();
        uint64_t v20 = v44;
        BOOL v21 = __OFSUB__(v38, 1);
        uint64_t v16 = v38 - 1;
        if (v21)
        {
LABEL_27:
          __break(1u);
          break;
        }
      }
      ++v15;
      sub_2409D5C18((uint64_t)v9, v14, (uint64_t (*)(void))sub_2409D6360);
      v14 += *(void *)(v48 + 72);
      v18 += v45;
      uint64_t v19 = v13;
      if (v46 == v15) {
        goto LABEL_29;
      }
    }
  }
  uint64_t v16 = 0;
LABEL_29:
  size_t result = swift_bridgeObjectRelease();
  unint64_t v39 = v13[3];
  if (v39 >= 2)
  {
    unint64_t v40 = v39 >> 1;
    BOOL v21 = __OFSUB__(v40, v16);
    uint64_t v41 = v40 - v16;
    if (v21) {
      goto LABEL_36;
    }
    void v13[2] = v41;
  }
  return (size_t)v13;
}

uint64_t sub_2409D271C(void *a1)
{
  id v1 = objc_msgSend(a1, sel_metadata);
  if (!v1)
  {
    long long v10 = 0u;
    long long v11 = 0u;
    goto LABEL_9;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_240A04BA8();

  uint64_t v4 = sub_240A04C58();
  if (!*(void *)(v3 + 16) || (unint64_t v6 = sub_24097B164(v4, v5), (v7 & 1) == 0))
  {
    long long v10 = 0u;
    long long v11 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_240981564(*(void *)(v3 + 56) + 32 * v6, (uint64_t)&v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v11 + 1))
  {
LABEL_9:
    sub_24098961C((uint64_t)&v10);
    return 0;
  }
  uint64_t result = swift_dynamicCast();
  if (result) {
    return v9;
  }
  return result;
}

void sub_2409D2834(uint64_t a1)
{
}

void sub_2409D2868()
{
  if (!qword_268C99FC0)
  {
    sub_2409D6280(255, &qword_268C99FC8, sub_2409D2920, (void (*)(uint64_t))sub_2409D2A24, (void (*)(void))sub_2409D32D8);
    sub_2409D330C();
    unint64_t v0 = sub_240A04138();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99FC0);
    }
  }
}

void sub_2409D2920(uint64_t a1)
{
}

void sub_2409D2954(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2409D29B8()
{
  if (!qword_268C99FD8)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C99FD8);
    }
  }
}

void sub_2409D2A24()
{
  if (!qword_268C99FE0)
  {
    sub_2409D2A8C(255);
    unint64_t v0 = sub_240A04138();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99FE0);
    }
  }
}

void sub_2409D2A8C(uint64_t a1)
{
}

void sub_2409D2AC0()
{
  if (!qword_268C99FF0)
  {
    sub_2409D2B40();
    sub_2409D2D7C();
    sub_2409D3160(255);
    unint64_t v0 = sub_240A04138();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99FF0);
    }
  }
}

void sub_2409D2B40()
{
  if (!qword_268C99FF8)
  {
    sub_2409D2C84();
    sub_2409D2FD4(255, &qword_268C9A008, MEMORY[0x263EFCD50]);
    sub_240A04378();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C99FF8);
    }
  }
}

void sub_2409D2C84()
{
  if (!qword_268C9A000)
  {
    sub_2409D2FD4(255, &qword_268C9A008, MEMORY[0x263EFCD50]);
    sub_240A04378();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9A000);
    }
  }
}

void sub_2409D2D7C()
{
  if (!qword_268C9A010)
  {
    sub_2409D2EDC();
    sub_2409D428C(255, &qword_268C9A028, &qword_268C9A030, MEMORY[0x263F18968]);
    sub_2409D2FD4(255, &qword_268C9A020, MEMORY[0x263EFCD90]);
    sub_240A04418();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_2409D304C();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9A010);
    }
  }
}

void sub_2409D2EDC()
{
  if (!qword_268C9A018)
  {
    sub_2409D2FD4(255, &qword_268C9A020, MEMORY[0x263EFCD90]);
    sub_240A04418();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9A018);
    }
  }
}

void sub_2409D2FD4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v5) {
      atomic_store(OpaqueTypeMetadata2, a2);
    }
  }
}

unint64_t sub_2409D304C()
{
  unint64_t result = qword_268C9A038;
  if (!qword_268C9A038)
  {
    uint64_t v1 = MEMORY[0x263F18968];
    sub_2409D428C(255, &qword_268C9A028, &qword_268C9A030, MEMORY[0x263F18968]);
    sub_2409D30FC(&qword_268C9A040, &qword_268C9A030, v1);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A038);
  }
  return result;
}

uint64_t sub_2409D30FC(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2409D5F10(255, a2, a3, MEMORY[0x263F1A418]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2409D3160(uint64_t a1)
{
}

void sub_2409D3194()
{
  if (!qword_268C9A050)
  {
    sub_2409D2EDC();
    sub_2409D2FD4(255, &qword_268C9A020, MEMORY[0x263EFCD90]);
    sub_240A04418();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9A050);
    }
  }
}

uint64_t sub_2409D32D8()
{
  return sub_2409D68F4(&qword_268C9A058, sub_2409D2920);
}

void sub_2409D330C()
{
  if (!qword_268C9A060)
  {
    sub_2409D4060(255, &qword_268C9A068, MEMORY[0x263EFCD68]);
    sub_240A04398();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9A060);
    }
  }
}

unint64_t sub_2409D3404()
{
  unint64_t result = qword_268C9A070;
  if (!qword_268C9A070)
  {
    sub_2409D2868();
    sub_2409D3528();
    sub_2409D4060(255, &qword_268C9A068, MEMORY[0x263EFCD68]);
    sub_240A04398();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A070);
  }
  return result;
}

unint64_t sub_2409D3528()
{
  unint64_t result = qword_268C9A078;
  if (!qword_268C9A078)
  {
    sub_2409D6280(255, &qword_268C99FC8, sub_2409D2920, (void (*)(uint64_t))sub_2409D2A24, (void (*)(void))sub_2409D32D8);
    sub_2409D6A14(&qword_268C9A080, (void (*)(uint64_t))sub_2409D2A24, (void (*)(void))sub_2409D3600);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A078);
  }
  return result;
}

unint64_t sub_2409D3600()
{
  unint64_t result = qword_268C9A088;
  if (!qword_268C9A088)
  {
    sub_2409D2A8C(255);
    sub_2409D3670();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A088);
  }
  return result;
}

unint64_t sub_2409D3670()
{
  unint64_t result = qword_268C9A090;
  if (!qword_268C9A090)
  {
    sub_2409D2AC0();
    sub_2409D2C84();
    sub_2409D2FD4(255, &qword_268C9A008, MEMORY[0x263EFCD50]);
    sub_240A04378();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_2409D2EDC();
    sub_2409D428C(255, &qword_268C9A028, &qword_268C9A030, MEMORY[0x263F18968]);
    sub_2409D2FD4(255, &qword_268C9A020, MEMORY[0x263EFCD90]);
    sub_240A04418();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_2409D304C();
    swift_getOpaqueTypeConformance2();
    sub_2409D38D8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A090);
  }
  return result;
}

unint64_t sub_2409D38D8()
{
  unint64_t result = qword_268C9A098;
  if (!qword_268C9A098)
  {
    sub_2409D3160(255);
    sub_2409D2EDC();
    sub_2409D2FD4(255, &qword_268C9A020, MEMORY[0x263EFCD90]);
    sub_240A04418();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A098);
  }
  return result;
}

void sub_2409D3A38()
{
  if (!qword_268C9A0A0)
  {
    sub_2409D3F34(255, &qword_268C99FB8, (uint64_t (*)(uint64_t))sub_2409D2868, (uint64_t (*)(void))sub_2409D3404, MEMORY[0x263EFCCF8]);
    sub_240A04808();
    unint64_t v0 = sub_240A04708();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A0A0);
    }
  }
}

void sub_2409D3AE4()
{
  if (!qword_268C9A0A8)
  {
    sub_2409D3A38();
    sub_2409D60FC(255, &qword_268C9A0B0, MEMORY[0x263F8D538], MEMORY[0x263F8D560], MEMORY[0x263F8D1A0]);
    sub_2409D4438(&qword_268C9A0B8, (void (*)(uint64_t))sub_2409D3A38, (void (*)(void))sub_2409D3BF8, (void (*)(void))sub_2409D3C94);
    sub_2409D3CC8();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9A0A8);
    }
  }
}

unint64_t sub_2409D3BF8()
{
  unint64_t result = qword_268C9A0C0;
  if (!qword_268C9A0C0)
  {
    sub_2409D3F34(255, &qword_268C99FB8, (uint64_t (*)(uint64_t))sub_2409D2868, (uint64_t (*)(void))sub_2409D3404, MEMORY[0x263EFCCF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A0C0);
  }
  return result;
}

uint64_t sub_2409D3C94()
{
  return sub_2409D68F4(&qword_268C9A0C8, MEMORY[0x263F1A470]);
}

unint64_t sub_2409D3CC8()
{
  unint64_t result = qword_268C9A0D0;
  if (!qword_268C9A0D0)
  {
    sub_2409D60FC(255, &qword_268C9A0B0, MEMORY[0x263F8D538], MEMORY[0x263F8D560], MEMORY[0x263F8D1A0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A0D0);
  }
  return result;
}

void sub_2409D3D5C()
{
  if (!qword_268C9A0D8)
  {
    sub_2409D3AE4();
    sub_2409D3F34(255, &qword_268C9A0E0, (uint64_t (*)(uint64_t))sub_2409D3FB4, (uint64_t (*)(void))sub_2409D45DC, MEMORY[0x263EFCD78]);
    sub_2409D3A38();
    sub_2409D60FC(255, &qword_268C9A0B0, MEMORY[0x263F8D538], MEMORY[0x263F8D560], MEMORY[0x263F8D1A0]);
    sub_2409D4438(&qword_268C9A0B8, (void (*)(uint64_t))sub_2409D3A38, (void (*)(void))sub_2409D3BF8, (void (*)(void))sub_2409D3C94);
    sub_2409D3CC8();
    swift_getOpaqueTypeConformance2();
    sub_2409D478C(&qword_268C9A188, &qword_268C9A0E0, (uint64_t (*)(uint64_t))sub_2409D3FB4, (uint64_t (*)(void))sub_2409D45DC);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9A0D8);
    }
  }
}

void sub_2409D3F34(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_2409D3FB4()
{
  if (!qword_268C9A0E8)
  {
    sub_2409D4060(255, &qword_268C9A0F0, MEMORY[0x263EFCB08]);
    sub_2409D40EC(255);
    unint64_t v0 = sub_240A04138();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A0E8);
    }
  }
}

void sub_2409D4060(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v5) {
      atomic_store(OpaqueTypeMetadata2, a2);
    }
  }
}

void sub_2409D40EC(uint64_t a1)
{
}

void sub_2409D4120(uint64_t a1)
{
}

void sub_2409D4168(uint64_t a1)
{
}

void sub_2409D419C(uint64_t a1)
{
}

void sub_2409D41E4(uint64_t a1)
{
}

void sub_2409D420C()
{
  if (!qword_268C9A120)
  {
    sub_2409D428C(255, (unint64_t *)&qword_268C9A128, (unint64_t *)&qword_268C9A130, MEMORY[0x263F8EF38]);
    sub_2409D4300();
    unint64_t v0 = sub_240A04708();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A120);
    }
  }
}

void sub_2409D428C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_2409D5F10(255, a3, a4, MEMORY[0x263F1A418]);
    unint64_t v5 = sub_240A04708();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_2409D4300()
{
  if (!qword_268C9A138)
  {
    sub_2409D5F10(255, &qword_268C9A140, MEMORY[0x263F8D6C8], MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_240A047F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A138);
    }
  }
}

unint64_t sub_2409D437C()
{
  unint64_t result = qword_268C9A148;
  if (!qword_268C9A148)
  {
    sub_2409D41E4(255);
    sub_2409D4438(&qword_268C9A150, (void (*)(uint64_t))sub_2409D420C, (void (*)(void))sub_2409D44C4, (void (*)(void))sub_2409D4574);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A148);
  }
  return result;
}

uint64_t sub_2409D4438(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2409D44C4()
{
  unint64_t result = qword_268C9A158;
  if (!qword_268C9A158)
  {
    uint64_t v1 = MEMORY[0x263F8EF38];
    sub_2409D428C(255, (unint64_t *)&qword_268C9A128, (unint64_t *)&qword_268C9A130, MEMORY[0x263F8EF38]);
    sub_2409D30FC(&qword_268C9A160, (unint64_t *)&qword_268C9A130, v1);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A158);
  }
  return result;
}

uint64_t sub_2409D4574()
{
  return sub_2409D68F4(&qword_268C9A168, (void (*)(uint64_t))sub_2409D4300);
}

uint64_t sub_2409D45A8()
{
  return sub_2409D68F4(&qword_268C9A170, sub_2409D419C);
}

unint64_t sub_2409D45DC()
{
  unint64_t result = qword_268C9A178;
  if (!qword_268C9A178)
  {
    sub_2409D3FB4();
    sub_240A04128();
    swift_getOpaqueTypeConformance2();
    sub_2409D46A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A178);
  }
  return result;
}

unint64_t sub_2409D46A0()
{
  unint64_t result = qword_268C9A180;
  if (!qword_268C9A180)
  {
    sub_2409D40EC(255);
    sub_2409D4168(255);
    sub_2409D419C(255);
    sub_2409D45A8();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A180);
  }
  return result;
}

uint64_t sub_2409D478C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2409D3F34(255, a2, a3, a4, MEMORY[0x263EFCD78]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2409D47F0()
{
  if (!qword_268C9A190)
  {
    sub_2409D3D5C();
    sub_2409D60FC(255, &qword_268C9A0B0, MEMORY[0x263F8D538], MEMORY[0x263F8D560], MEMORY[0x263F8D1A0]);
    sub_2409D3AE4();
    sub_2409D3F34(255, &qword_268C9A0E0, (uint64_t (*)(uint64_t))sub_2409D3FB4, (uint64_t (*)(void))sub_2409D45DC, MEMORY[0x263EFCD78]);
    sub_2409D3A38();
    sub_2409D4438(&qword_268C9A0B8, (void (*)(uint64_t))sub_2409D3A38, (void (*)(void))sub_2409D3BF8, (void (*)(void))sub_2409D3C94);
    sub_2409D3CC8();
    swift_getOpaqueTypeConformance2();
    sub_2409D478C(&qword_268C9A188, &qword_268C9A0E0, (uint64_t (*)(uint64_t))sub_2409D3FB4, (uint64_t (*)(void))sub_2409D45DC);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9A190);
    }
  }
}

void sub_2409D4A04()
{
  if (!qword_268C9A198)
  {
    sub_2409D47F0();
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263EFCD78];
    sub_2409D3F34(255, &qword_268C9A1A0, (uint64_t (*)(uint64_t))sub_2409D4CC0, (uint64_t (*)(void))sub_2409D5118, MEMORY[0x263EFCD78]);
    sub_2409D3D5C();
    sub_2409D60FC(255, &qword_268C9A0B0, MEMORY[0x263F8D538], MEMORY[0x263F8D560], MEMORY[0x263F8D1A0]);
    sub_2409D3AE4();
    sub_2409D3F34(255, &qword_268C9A0E0, (uint64_t (*)(uint64_t))sub_2409D3FB4, (uint64_t (*)(void))sub_2409D45DC, v0);
    sub_2409D3A38();
    sub_2409D4438(&qword_268C9A0B8, (void (*)(uint64_t))sub_2409D3A38, (void (*)(void))sub_2409D3BF8, (void (*)(void))sub_2409D3C94);
    sub_2409D3CC8();
    swift_getOpaqueTypeConformance2();
    sub_2409D478C(&qword_268C9A188, &qword_268C9A0E0, (uint64_t (*)(uint64_t))sub_2409D3FB4, (uint64_t (*)(void))sub_2409D45DC);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_2409D478C(&qword_268C9A1F8, &qword_268C9A1A0, (uint64_t (*)(uint64_t))sub_2409D4CC0, (uint64_t (*)(void))sub_2409D5118);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v2) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9A198);
    }
  }
}

void sub_2409D4CC0(uint64_t a1)
{
}

void sub_2409D4CF4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_240A04138();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_2409D4D74(uint64_t a1)
{
}

void sub_2409D4DA8(uint64_t a1)
{
}

void sub_2409D4DF0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v9) {
      atomic_store(OpaqueTypeMetadata2, a2);
    }
  }
}

void sub_2409D4ED4(uint64_t a1)
{
}

void sub_2409D4F08(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v7) {
      atomic_store(OpaqueTypeMetadata2, a2);
    }
  }
}

void sub_2409D4F98(uint64_t a1)
{
}

void sub_2409D4FE0(uint64_t a1)
{
}

void sub_2409D5008(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240A04708();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_2409D506C()
{
  unint64_t result = qword_268C9A1D8;
  if (!qword_268C9A1D8)
  {
    sub_2409D4FE0(255);
    sub_2409D437C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A1D8);
  }
  return result;
}

uint64_t sub_2409D50E4()
{
  return sub_2409D68F4(&qword_268C9A1E0, sub_2409D4F98);
}

unint64_t sub_2409D5118()
{
  unint64_t result = qword_268C9A1E8;
  if (!qword_268C9A1E8)
  {
    sub_2409D4CC0(255);
    sub_2409D519C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A1E8);
  }
  return result;
}

unint64_t sub_2409D519C()
{
  unint64_t result = qword_268C9A1F0;
  if (!qword_268C9A1F0)
  {
    sub_2409D4D74(255);
    sub_2409D4ED4(255);
    sub_2409D4F98(255);
    sub_2409D50E4();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A1F0);
  }
  return result;
}

void sub_2409D5288()
{
  if (!qword_268C9A200)
  {
    sub_2409D4A04();
    sub_240A04258();
    sub_2409D47F0();
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263EFCD78];
    sub_2409D3F34(255, &qword_268C9A1A0, (uint64_t (*)(uint64_t))sub_2409D4CC0, (uint64_t (*)(void))sub_2409D5118, MEMORY[0x263EFCD78]);
    sub_2409D3D5C();
    sub_2409D60FC(255, &qword_268C9A0B0, MEMORY[0x263F8D538], MEMORY[0x263F8D560], MEMORY[0x263F8D1A0]);
    sub_2409D3AE4();
    sub_2409D3F34(255, &qword_268C9A0E0, (uint64_t (*)(uint64_t))sub_2409D3FB4, (uint64_t (*)(void))sub_2409D45DC, v0);
    sub_2409D3A38();
    sub_2409D4438(&qword_268C9A0B8, (void (*)(uint64_t))sub_2409D3A38, (void (*)(void))sub_2409D3BF8, (void (*)(void))sub_2409D3C94);
    sub_2409D3CC8();
    swift_getOpaqueTypeConformance2();
    sub_2409D478C(&qword_268C9A188, &qword_268C9A0E0, (uint64_t (*)(uint64_t))sub_2409D3FB4, (uint64_t (*)(void))sub_2409D45DC);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_2409D478C(&qword_268C9A1F8, &qword_268C9A1A0, (uint64_t (*)(uint64_t))sub_2409D4CC0, (uint64_t (*)(void))sub_2409D5118);
    swift_getOpaqueTypeConformance2();
    sub_2409D68F4(&qword_268C9A208, MEMORY[0x263EFCC70]);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v2) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9A200);
    }
  }
}

uint64_t sub_2409D55C8@<X0>(uint64_t a1@<X8>)
{
  return sub_2409CB0B0(*(void *)(v1 + 16), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40), *(char **)(v1 + 48), *(unsigned char *)(v1 + 56), a1);
}

uint64_t sub_2409D55E0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2409D5640()
{
  return sub_2409CC294();
}

uint64_t sub_2409D5664()
{
  return sub_2409CC418();
}

uint64_t sub_2409D5688()
{
  return sub_240A04738();
}

void sub_2409D56B0()
{
  if (!qword_268C9A210)
  {
    sub_2409D5288();
    sub_2409D2954(255, &qword_268C9A218, MEMORY[0x263F18DD8], MEMORY[0x263F1A418]);
    unint64_t v0 = sub_240A04708();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A210);
    }
  }
}

unint64_t sub_2409D5748()
{
  unint64_t result = qword_268C9A220;
  if (!qword_268C9A220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A220);
  }
  return result;
}

uint64_t sub_2409D579C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2409D57AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2409CFC8C(a1, *(void *)(v2 + 16), a2);
}

void sub_2409D57B4()
{
  if (!qword_268C9A228)
  {
    sub_240A04128();
    sub_2409D4D74(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C9A228);
    }
  }
}

uint64_t sub_2409D5824@<X0>(uint64_t a1@<X8>)
{
  return sub_2409D0588(*(unsigned __int8 *)(v1 + 24), a1, *(double *)(v1 + 16));
}

void sub_2409D5834(uint64_t a1)
{
}

uint64_t sub_2409D5868(uint64_t result, double a2)
{
  if (result)
  {
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    sub_240A02828();
    sub_2409D2954(0, (unint64_t *)&qword_26AFD4940, (uint64_t (*)(uint64_t))sub_24098EA68, MEMORY[0x263F8E0F8]);
    unint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_240A06870;
    if ((~*(void *)&a2 & 0x7FF0000000000000) != 0)
    {
      if (a2 > -9.22337204e18)
      {
        if (a2 < 9.22337204e18)
        {
          uint64_t v3 = (void *)result;
          uint64_t v4 = sub_240A05348();
          uint64_t v6 = v5;
          v3[7] = MEMORY[0x263F8D310];
          v3[8] = sub_2409800D4();
          v3[4] = v4;
          v3[5] = v6;
          uint64_t v7 = sub_240A04C68();
          swift_bridgeObjectRelease();
          return v7;
        }
        goto LABEL_15;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if ((~*(void *)&a2 & 0x7FF0000000000000) == 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (a2 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (a2 < 9.22337204e18) {
    return sub_240A05348();
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_2409D5AA0@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_240A04758();
  *a1 = v3;
  return result;
}

uint64_t sub_2409D5ACC()
{
  return sub_240A04768();
}

uint64_t sub_2409D5AF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_240A04798();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_2409D5B28()
{
  return sub_240A047A8();
}

uint64_t sub_2409D5B58()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2409D5B68@<X0>(char *a1@<X0>, char *a2@<X8>)
{
  return sub_2409CEBFC(a1, *(void *)(v2 + 16), a2);
}

void sub_2409D5B70()
{
  if (!qword_268C9A238)
  {
    sub_2409D4060(255, &qword_268C9A0F0, MEMORY[0x263EFCB08]);
    sub_2409D40EC(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C9A238);
    }
  }
}

uint64_t sub_2409D5C18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

double sub_2409D5C80@<D0>(uint64_t a1@<X8>)
{
  return sub_2409CF6CC(a1, *(double *)(v1 + 16));
}

uint64_t sub_2409D5C8C()
{
  return MEMORY[0x270FA0238](v0, 49, 7);
}

uint64_t sub_2409D5C9C@<X0>(uint64_t a1@<X0>, double *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2409CC728(a1, a2, *(void *)(v3 + 16), *(unsigned __int8 *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(unsigned __int8 *)(v3 + 48), a3);
}

uint64_t sub_2409D5CB0()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2409D5CE8(uint64_t *a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t, _OWORD *))(v1 + 16);
  uint64_t v3 = *a1;
  long long v4 = *(_OWORD *)(a1 + 3);
  v6[0] = *(_OWORD *)(a1 + 1);
  v6[1] = v4;
  __int16 v7 = *((_WORD *)a1 + 20);
  return v2(v3, v6);
}

void sub_2409D5D38()
{
  if (!qword_268C9A248)
  {
    sub_2409D6280(255, &qword_268C99FC8, sub_2409D2920, (void (*)(uint64_t))sub_2409D2A24, (void (*)(void))sub_2409D32D8);
    sub_2409D330C();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268C9A248);
    }
  }
}

void sub_2409D5DF0()
{
  if (!qword_268C9A250)
  {
    sub_2409D2A8C(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C9A250);
    }
  }
}

void sub_2409D5E54(uint64_t a1)
{
}

uint64_t sub_2409D5E88(uint64_t a1, uint64_t a2)
{
  sub_2409D5F10(0, &qword_268C9A260, (uint64_t)&type metadata for AudiogramPDFChartData.SensitivityTest, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2409D5F10(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_2409D5F5C@<X0>(uint64_t a1@<X8>)
{
  return sub_2409CE4E8(*(unsigned char *)(v1 + 16), a1);
}

void sub_2409D5F64()
{
  if (!qword_268C9A268)
  {
    sub_2409D2B40();
    sub_2409D2D7C();
    sub_2409D3160(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268C9A268);
    }
  }
}

uint64_t sub_2409D5FEC@<X0>(uint64_t a1@<X8>)
{
  return sub_2409CE680(*(unsigned __int8 *)(v1 + 32) | (unsigned __int16)(*(unsigned __int8 *)(v1 + 33) << 8), *(unsigned char *)(v1 + 34), a1, *(double *)(v1 + 24));
}

uint64_t sub_2409D6008@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_240A04778();
  *a1 = result;
  return result;
}

uint64_t sub_2409D6034()
{
  return sub_240A04788();
}

void sub_2409D605C()
{
  if (!qword_268C9A278)
  {
    type metadata accessor for Key(255);
    sub_2409D68F4((unint64_t *)&qword_268C993D8, type metadata accessor for Key);
    unint64_t v0 = sub_240A052D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A278);
    }
  }
}

void sub_2409D60FC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_2409D614C(uint64_t a1)
{
  return a1;
}

uint64_t sub_2409D6178@<X0>(uint64_t *a1@<X8>)
{
  sub_2409A9CE4(*(unsigned char *)(v1 + 32), *(unsigned char *)(v1 + 16));
  uint64_t result = sub_240A04948();
  *a1 = result;
  return result;
}

void sub_2409D61C8()
{
  if (!qword_268C9A290)
  {
    sub_2409D6280(255, (unint64_t *)&qword_268C9A298, sub_2409D632C, (void (*)(uint64_t))sub_2409D63CC, (void (*)(void))sub_2409D68C0);
    sub_2409D330C();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268C9A290);
    }
  }
}

void sub_2409D6280(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    unint64_t v8 = sub_240A04968();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2409D632C(uint64_t a1)
{
}

void sub_2409D6360()
{
  if (!qword_268C9A2A8)
  {
    type metadata accessor for AudiogramLongitudinalPDFChartData();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C9A2A8);
    }
  }
}

void sub_2409D63CC()
{
  if (!qword_268C9A2B0)
  {
    sub_2409D2954(255, &qword_268C9A2B8, (uint64_t (*)(uint64_t))sub_2409D6464, MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_240A04138();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A2B0);
    }
  }
}

void sub_2409D6464(uint64_t a1)
{
}

void sub_2409D6498()
{
  if (!qword_268C9A2C8)
  {
    sub_2409D2C84();
    sub_2409D5008(255, &qword_268C9A2D0, (void (*)(uint64_t))sub_2409D6604);
    sub_2409D2FD4(255, &qword_268C9A008, MEMORY[0x263EFCD50]);
    sub_240A04378();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_2409D67F4();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9A2C8);
    }
  }
}

void sub_2409D6604()
{
  if (!qword_268C9A2D8)
  {
    sub_2409D66D0();
    sub_2409D67A0();
    sub_2409D68F4(&qword_268C9A2F8, (void (*)(uint64_t))sub_2409D66D0);
    unint64_t v0 = sub_240A047E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A2D8);
    }
  }
}

void sub_2409D66D0()
{
  if (!qword_268C9A2E0)
  {
    sub_2409D674C();
    unint64_t v0 = sub_240A046C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A2E0);
    }
  }
}

unint64_t sub_2409D674C()
{
  unint64_t result = qword_268C9A2E8;
  if (!qword_268C9A2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A2E8);
  }
  return result;
}

unint64_t sub_2409D67A0()
{
  unint64_t result = qword_268C9A2F0;
  if (!qword_268C9A2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A2F0);
  }
  return result;
}

unint64_t sub_2409D67F4()
{
  unint64_t result = qword_268C9A300;
  if (!qword_268C9A300)
  {
    sub_2409D5008(255, &qword_268C9A2D0, (void (*)(uint64_t))sub_2409D6604);
    sub_2409D68F4(&qword_268C9A308, (void (*)(uint64_t))sub_2409D6604);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A300);
  }
  return result;
}

uint64_t sub_2409D68C0()
{
  return sub_2409D68F4(&qword_268C9A310, sub_2409D632C);
}

uint64_t sub_2409D68F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2409D693C()
{
  unint64_t result = qword_268C9A318;
  if (!qword_268C9A318)
  {
    sub_2409D6280(255, (unint64_t *)&qword_268C9A298, sub_2409D632C, (void (*)(uint64_t))sub_2409D63CC, (void (*)(void))sub_2409D68C0);
    sub_2409D6A14((unint64_t *)&qword_268C9A320, (void (*)(uint64_t))sub_2409D63CC, (void (*)(void))sub_2409D6A98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A318);
  }
  return result;
}

uint64_t sub_2409D6A14(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2409D6A98()
{
  unint64_t result = qword_268C9A328;
  if (!qword_268C9A328)
  {
    sub_2409D2954(255, &qword_268C9A2B8, (uint64_t (*)(uint64_t))sub_2409D6464, MEMORY[0x263F8D8F0]);
    sub_2409D6B38();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A328);
  }
  return result;
}

unint64_t sub_2409D6B38()
{
  unint64_t result = qword_268C9A330;
  if (!qword_268C9A330)
  {
    sub_2409D6464(255);
    sub_2409D2C84();
    sub_2409D5008(255, &qword_268C9A2D0, (void (*)(uint64_t))sub_2409D6604);
    sub_2409D2FD4(255, &qword_268C9A008, MEMORY[0x263EFCD50]);
    sub_240A04378();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_2409D67F4();
    swift_getOpaqueTypeConformance2();
    sub_2409D38D8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A330);
  }
  return result;
}

uint64_t sub_2409D6CD0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_2409D6D38()
{
  if (!qword_268C99580)
  {
    unint64_t v0 = sub_240A052D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C99580);
    }
  }
}

unint64_t sub_2409D6DA4()
{
  unint64_t result = qword_268C9A340;
  if (!qword_268C9A340)
  {
    sub_2409D56B0();
    sub_2409D4A04();
    sub_240A04258();
    sub_2409D47F0();
    uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263EFCD78];
    sub_2409D3F34(255, &qword_268C9A1A0, (uint64_t (*)(uint64_t))sub_2409D4CC0, (uint64_t (*)(void))sub_2409D5118, MEMORY[0x263EFCD78]);
    sub_2409D3D5C();
    sub_2409D60FC(255, &qword_268C9A0B0, MEMORY[0x263F8D538], MEMORY[0x263F8D560], MEMORY[0x263F8D1A0]);
    sub_2409D3AE4();
    sub_2409D3F34(255, &qword_268C9A0E0, (uint64_t (*)(uint64_t))sub_2409D3FB4, (uint64_t (*)(void))sub_2409D45DC, v1);
    sub_2409D3A38();
    sub_2409D4438(&qword_268C9A0B8, (void (*)(uint64_t))sub_2409D3A38, (void (*)(void))sub_2409D3BF8, (void (*)(void))sub_2409D3C94);
    sub_2409D3CC8();
    swift_getOpaqueTypeConformance2();
    sub_2409D478C(&qword_268C9A188, &qword_268C9A0E0, (uint64_t (*)(uint64_t))sub_2409D3FB4, (uint64_t (*)(void))sub_2409D45DC);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_2409D478C(&qword_268C9A1F8, &qword_268C9A1A0, (uint64_t (*)(uint64_t))sub_2409D4CC0, (uint64_t (*)(void))sub_2409D5118);
    swift_getOpaqueTypeConformance2();
    sub_2409D68F4(&qword_268C9A208, MEMORY[0x263EFCC70]);
    swift_getOpaqueTypeConformance2();
    sub_2409D7104();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A340);
  }
  return result;
}

unint64_t sub_2409D7104()
{
  unint64_t result = qword_268C9A348;
  if (!qword_268C9A348)
  {
    sub_2409D2954(255, &qword_268C9A218, MEMORY[0x263F18DD8], MEMORY[0x263F1A418]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A348);
  }
  return result;
}

uint64_t type metadata accessor for AudiogramAllDataViewController()
{
  uint64_t result = qword_268C9A360;
  if (!qword_268C9A360) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2409D71D8()
{
  return swift_initClassMetadata2();
}

id sub_2409D7234(void *a1)
{
  *(void *)&v1[qword_268C9A350] = a1;
  type metadata accessor for AudiogramAllDataViewModel();
  swift_allocObject();
  id v3 = a1;
  uint64_t v4 = v1;
  uint64_t v5 = sub_2409E8504(v3, 1);
  *(void *)&v4[qword_268C9A358] = v5;
  sub_240A03818();
  sub_2409D7DA0(0, &qword_268C9A378, (uint64_t (*)(uint64_t))sub_2409D7E04, MEMORY[0x263F8E0F8]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_240A06870;
  uint64_t v7 = (_OWORD *)(v5 + OBJC_IVAR____TtC16HearingAppPlugin25AudiogramAllDataViewModel_dataSource);
  swift_beginAccess();
  *(_OWORD *)(v6 + 32) = *v7;
  swift_unknownObjectRetain();

  sub_240A03828();
  swift_retain();
  unint64_t v8 = (void *)sub_240A03D68();
  uint64_t v9 = qword_26AFD4A20;
  id v10 = v8;
  if (v9 != -1) {
    swift_once();
  }
  sub_240A02828();
  unint64_t v11 = (void *)sub_240A04C18();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setTitle_, v11, 0xE000000000000000);
  swift_release();

  return v10;
}

void sub_2409D7448()
{
}

void sub_2409D74AC(void *a1)
{
  v4.receiver = a1;
  v4.super_class = (Class)type metadata accessor for AudiogramAllDataViewController();
  id v1 = v4.receiver;
  objc_msgSendSuper2(&v4, sel_viewDidLoad);
  id v2 = objc_msgSend(v1, sel_navigationItem, v4.receiver, v4.super_class);
  id v3 = (void *)sub_2409D754C();
  objc_msgSend(v2, sel_setRightBarButtonItem_, v3);
}

uint64_t sub_2409D754C()
{
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  sub_240A02828();
  sub_2409824B8(0, &qword_268C9A370);
  swift_unknownObjectRetain();
  return sub_240A04EF8();
}

uint64_t sub_2409D7658()
{
  uint64_t v1 = sub_240A049B8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  objc_super v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_240A049D8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409824B8(0, (unint64_t *)&qword_268C993E8);
  uint64_t v9 = (void *)sub_240A04F38();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v0;
  aBlock[4] = sub_2409D7CB0;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2409B4FA8;
  aBlock[3] = &unk_26F4FB460;
  unint64_t v11 = _Block_copy(aBlock);
  id v12 = v0;
  swift_release();
  sub_240A049C8();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_2409D7D58(&qword_268C993F8, MEMORY[0x263F8F030]);
  sub_2409D7DA0(0, (unint64_t *)&qword_268C99400, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
  sub_2409D7CD0();
  sub_240A05138();
  MEMORY[0x245604B80](0, v8, v4, v11);
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_2409D7940(char *a1)
{
  uint64_t v2 = *(void **)&a1[qword_268C9A350];
  type metadata accessor for AudiogramPDFAsyncConfigurationDataSource();
  swift_allocObject();
  id v3 = v2;
  sub_2409F1E9C(v3);

  sub_2409D7D58(&qword_268C99C88, (void (*)(uint64_t))type metadata accessor for AudiogramPDFAsyncConfigurationDataSource);
  id v4 = objc_allocWithZone((Class)sub_240A03C38());
  swift_retain();
  uint64_t v5 = (void *)sub_240A03C28();
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v5);
  objc_msgSend(a1, sel_presentViewController_animated_completion_, v6, 1, 0);
  swift_release();
}

uint64_t sub_2409D7A74(void *a1)
{
  swift_unknownObjectRetain();
  id v2 = a1;
  sub_240A05128();
  sub_240A03B98();
  sub_2409D7658();

  return sub_240981514((uint64_t)&v4);
}

void sub_2409D7AD4()
{
}

void sub_2409D7B04(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2409D7B38()
{
  return swift_release();
}

id sub_2409D7B78()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudiogramAllDataViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2409D7BB0(uint64_t a1)
{
  return swift_release();
}

uint64_t sub_2409D7BFC()
{
  return type metadata accessor for AudiogramAllDataViewController();
}

uint64_t sub_2409D7C04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F43BD0];
  uint64_t v3 = sub_240A032D8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_2409D7C78()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_2409D7CB0()
{
  sub_2409D7940(*(char **)(v0 + 16));
}

uint64_t sub_2409D7CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2409D7CC8()
{
  return swift_release();
}

unint64_t sub_2409D7CD0()
{
  unint64_t result = qword_268C99408;
  if (!qword_268C99408)
  {
    sub_2409D7DA0(255, (unint64_t *)&qword_268C99400, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C99408);
  }
  return result;
}

uint64_t sub_2409D7D58(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2409D7DA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_2409D7E04()
{
  unint64_t result = qword_268C9A380;
  if (!qword_268C9A380)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C9A380);
  }
  return result;
}

uint64_t type metadata accessor for HearingTestPromotionViewActionHandler()
{
  uint64_t result = qword_26AFD4468;
  if (!qword_26AFD4468) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2409D7EA4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2409D7EEC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2409D88C8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2409D7F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_240983CD0();

  return MEMORY[0x270F34870](a1, a2, a3, v6);
}

void sub_2409D7F70()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_240A03AD8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFD49D0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_240A04018();
  sub_240979894(v6, (uint64_t)qword_26AFD6440);
  uint64_t v7 = sub_240A03FF8();
  os_log_type_t v8 = sub_240A04E98();
  if (os_log_type_enabled(v7, v8))
  {
    v18[1] = v1;
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v19[0] = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t v11 = sub_240A05478();
    _OWORD v18[2] = sub_240981440(v11, v12, v19);
    sub_240A050D8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240976000, v7, v8, "[%{public}s] Presenting Hearing Test.", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v10, -1, -1);
    MEMORY[0x2456058A0](v9, -1, -1);
  }

  sub_240A02AB8();
  sub_240A03C48();
  sub_240A03AA8();
  int64_t v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  v13(v5, v2);
  sub_24098BDC0(v19, v19[3]);
  uint64_t v14 = (void *)sub_240A03A58();
  sub_240A02AE8();
  uint64_t v15 = (void *)sub_240A02AD8();
  type metadata accessor for HearingTestArticleProvider();
  swift_allocObject();
  uint64_t v16 = (void *)sub_240A02AA8();

  swift_release();
  sub_240981514((uint64_t)v19);
  sub_240A03C48();
  uint64_t v17 = (void *)sub_240A03AB8();
  v13(v5, v2);
  objc_msgSend(v17, sel_presentViewController_animated_completion_, v16, 1, 0);
}

uint64_t sub_2409D82A0(uint64_t a1)
{
  uint64_t v3 = sub_240A03AD8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_allocWithZone(v1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t v8 = sub_240A03C58();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v8;
}

id sub_2409D83A0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HearingTestPromotionViewActionHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2409D83D8()
{
  return type metadata accessor for HearingTestPromotionViewActionHandler();
}

uint64_t sub_2409D83E0()
{
  return sub_2409D8470(&qword_26AFD4478, MEMORY[0x263F43E20]);
}

uint64_t sub_2409D8428()
{
  return sub_2409D8470(&qword_26AFD4460, (void (*)(uint64_t))type metadata accessor for HearingTestPromotionViewActionHandler);
}

uint64_t sub_2409D8470(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2409D84BC()
{
  return 0;
}

uint64_t sub_2409D84C8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_2409D84F8(uint64_t a1)
{
  unint64_t v2 = sub_2409D8874();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2409D8534(uint64_t a1)
{
  unint64_t v2 = sub_2409D8874();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2409D8570(uint64_t a1)
{
  return sub_240981514(a1);
}

uint64_t sub_2409D8598(void *a1)
{
  sub_2409D8818();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24098BDC0(a1, a1[3]);
  sub_2409D8874();
  sub_240A05448();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void *assignWithCopy for HearingTestPromotionFeedItemProvider(void *a1, void *a2)
{
  *a1 = *a2;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for HearingTestPromotionFeedItemProvider(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for HearingTestPromotionFeedItemProvider()
{
  return &type metadata for HearingTestPromotionFeedItemProvider;
}

unint64_t sub_2409D876C()
{
  unint64_t result = qword_268C9A388;
  if (!qword_268C9A388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A388);
  }
  return result;
}

unint64_t sub_2409D87C4()
{
  unint64_t result = qword_268C9A390;
  if (!qword_268C9A390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A390);
  }
  return result;
}

void sub_2409D8818()
{
  if (!qword_268C9A398)
  {
    sub_2409D8874();
    unint64_t v0 = sub_240A05338();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A398);
    }
  }
}

unint64_t sub_2409D8874()
{
  unint64_t result = qword_268C9A3A0;
  if (!qword_268C9A3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A3A0);
  }
  return result;
}

uint64_t sub_2409D88C8()
{
  if (qword_26AFD49D0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_240A04018();
  sub_240979894(v0, (uint64_t)qword_26AFD6440);
  uint64_t v1 = sub_240A03FF8();
  os_log_type_t v2 = sub_240A04EC8();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v6 = v4;
    *(_DWORD *)uint64_t v3 = 136446466;
    sub_240981440(0xD000000000000024, 0x8000000240A08D60, &v6);
    sub_240A050D8();
    *(_WORD *)(v3 + 12) = 2082;
    sub_240981440(0xD000000000000029, 0x8000000240A0D430, &v6);
    sub_240A050D8();
    _os_log_impl(&dword_240976000, v1, v2, "[%{public}s.%{public}s]: Creating promo tile action handler user data object", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v4, -1, -1);
    MEMORY[0x2456058A0](v3, -1, -1);
  }

  return 1;
}

ValueMetadata *type metadata accessor for HearingTestPromotionViewActionHandlerUserDataObject.CodingKeys()
{
  return &type metadata for HearingTestPromotionViewActionHandlerUserDataObject.CodingKeys;
}

ValueMetadata *type metadata accessor for HearingTestPromotionViewActionHandlerUserDataObject()
{
  return &type metadata for HearingTestPromotionViewActionHandlerUserDataObject;
}

unint64_t sub_2409D8AB0()
{
  unint64_t result = qword_268C9A3A8;
  if (!qword_268C9A3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A3A8);
  }
  return result;
}

unint64_t sub_2409D8B08()
{
  unint64_t result = qword_268C9A3B0;
  if (!qword_268C9A3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A3B0);
  }
  return result;
}

uint64_t PDFOverlayContextPill.init(renderable:color:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_240980754(a1, a3);
  *(void *)(a3 + 40) = a2;
  return result;
}

uint64_t PDFOverlayContextPill.render(context:document:)(void *a1)
{
  uint64_t v2 = v1;
  sub_2409D8DC8();
  CGFloat v5 = v4;
  sub_240A030D8();
  CGFloat MinX = CGRectGetMinX(v18);
  sub_240A030D8();
  CGFloat MinY = CGRectGetMinY(v19);
  sub_240A030D8();
  v21.size.CGFloat width = CGRectGetWidth(v20);
  v21.origin.CGFloat x = MinX;
  v21.origin.CGFloat y = MinY;
  v21.size.CGFloat height = v5;
  uint64_t v8 = CGPathCreateWithRoundedRect(v21, 12.0, 12.0, 0);
  uint64_t v9 = (CGContext *)objc_msgSend(a1, sel_CGContext);
  UIGraphicsPushContext(v9);

  uint64_t v10 = (CGContext *)objc_msgSend(a1, sel_CGContext);
  CGContextSaveGState(v10);

  uint64_t v11 = (CGContext *)objc_msgSend(a1, sel_CGContext);
  CGContextAddPath(v11, v8);

  unint64_t v12 = (CGContext *)objc_msgSend(a1, sel_CGContext);
  int64_t v13 = (CGColor *)objc_msgSend(*(id *)(v2 + 40), sel_CGColor);
  CGContextSetFillColorWithColor(v12, v13);

  uint64_t v14 = (CGContext *)objc_msgSend(a1, sel_CGContext);
  CGContextDrawPath(v14, kCGPathFill);

  uint64_t v15 = (CGContext *)objc_msgSend(a1, sel_CGContext);
  CGContextRestoreGState(v15);

  UIGraphicsPopContext();
  sub_240A03168();
  sub_240A030D8();
  CGRectGetMinX(v22);
  sub_240A030D8();
  CGRectGetMinY(v23);
  sub_240A030D8();
  CGRectGetWidth(v24);
  sub_240A030E8();
  sub_24098BDC0((void *)v2, *(void *)(v2 + 24));
  sub_240A03338();
  sub_240A03148();

  return swift_release();
}

void sub_2409D8DC8()
{
  sub_240A03168();
  sub_240A030D8();
  CGRectGetMinX(v9);
  sub_240A030D8();
  CGRectGetMinY(v10);
  sub_240A030D8();
  CGRectGetWidth(v11);
  sub_240A030D8();
  CGRectGetHeight(v12);
  sub_240A030E8();
  sub_24098BDC0(v0, v0[3]);
  sub_240A03318();
  CGFloat v2 = v1;
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  swift_release();
  v13.origin.CGFloat x = v2;
  v13.origin.CGFloat y = v4;
  v13.size.CGFloat width = v6;
  v13.size.CGFloat height = v8;
  CGRectGetHeight(v13);
  sub_240A030D8();
  CGRectGetHeight(v14);
}

double PDFOverlayContextPill.boundingRectForContent(in:)(uint64_t a1)
{
  return sub_2409D8F20(a1, MEMORY[0x263F43C50]);
}

double PDFOverlayContextPill.minimumBoundingRectForContent(in:)(uint64_t a1)
{
  return sub_2409D8F20(a1, MEMORY[0x263F43C58]);
}

double sub_2409D8F20(uint64_t a1, double (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  sub_24098BDC0(v2, v5);
  CGFloat v7 = a2(a1, v5, v6);
  CGFloat v9 = v8;
  CGFloat v11 = v10;
  CGFloat v13 = v12;
  sub_240A030D8();
  double MinX = CGRectGetMinX(v16);
  sub_240A030D8();
  CGRectGetMinY(v17);
  v18.origin.CGFloat x = v7;
  v18.origin.CGFloat y = v9;
  v18.size.CGFloat width = v11;
  v18.size.CGFloat height = v13;
  CGRectGetWidth(v18);
  sub_2409D8DC8();
  return MinX;
}

unint64_t sub_2409D9000()
{
  unint64_t result = qword_268C9A3B8;
  if (!qword_268C9A3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A3B8);
  }
  return result;
}

double sub_2409D9058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2409D9088(a1, a2, a3, MEMORY[0x263F43C50]);
}

double sub_2409D9070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2409D9088(a1, a2, a3, MEMORY[0x263F43C58]);
}

double sub_2409D9088(uint64_t a1, uint64_t a2, uint64_t a3, double (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = v4[3];
  uint64_t v8 = v4[4];
  sub_24098BDC0(v4, v7);
  CGFloat v9 = a4(a1, v7, v8);
  CGFloat v11 = v10;
  CGFloat v13 = v12;
  CGFloat v15 = v14;
  sub_240A030D8();
  double MinX = CGRectGetMinX(v18);
  sub_240A030D8();
  CGRectGetMinY(v19);
  v20.origin.CGFloat x = v9;
  v20.origin.CGFloat y = v11;
  v20.size.CGFloat width = v13;
  v20.size.CGFloat height = v15;
  CGRectGetWidth(v20);
  sub_2409D8DC8();
  return MinX;
}

uint64_t sub_2409D9164(uint64_t a1)
{
  double v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  unint64_t v4 = sub_2409D93EC();
  *double v3 = v1;
  v3[1] = sub_2409A2324;
  return MEMORY[0x270F33478](a1, v4);
}

void destroy for PDFOverlayContextPill(uint64_t a1)
{
  sub_240981514(a1);
  CGFloat v2 = *(void **)(a1 + 40);
}

uint64_t initializeWithCopy for PDFOverlayContextPill(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v5;
  id v6 = v5;
  return a1;
}

uint64_t *assignWithCopy for PDFOverlayContextPill(uint64_t *a1, uint64_t *a2)
{
  sub_24098ED1C(a1, a2);
  long long v4 = (void *)a2[5];
  uint64_t v5 = (void *)a1[5];
  a1[5] = (uint64_t)v4;
  id v6 = v4;

  return a1;
}

__n128 initializeWithTake for PDFOverlayContextPill(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PDFOverlayContextPill(uint64_t a1, uint64_t a2)
{
  sub_240981514(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  id v6 = *(void **)(a1 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;

  return a1;
}

uint64_t getEnumTagSinglePayload for PDFOverlayContextPill(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PDFOverlayContextPill(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PDFOverlayContextPill()
{
  return &type metadata for PDFOverlayContextPill;
}

unint64_t sub_2409D93EC()
{
  unint64_t result = qword_268C9A3C8;
  if (!qword_268C9A3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A3C8);
  }
  return result;
}

uint64_t sub_2409D9440@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  CGRect v16 = a1;
  uint64_t v17 = a2;
  sub_2409E4228();
  uint64_t v4 = v3 - 8;
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409D4060(0, &qword_268C9A0F0, MEMORY[0x263EFCB08]);
  uint64_t v8 = v7;
  sub_240A04128();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, void, uint64_t))(v9 + 16))(v6, *a1, v8);
  uint64_t v10 = sub_240A04358();
  CGFloat v11 = &v6[*(int *)(v4 + 56)];
  uint64_t v12 = *(void *)(v10 - 8);
  (*(void (**)(char *, void, uint64_t))(v12 + 16))(v11, a1[1], v10);
  sub_2409E1CD8(0, &qword_268C9A490, (uint64_t (*)(uint64_t))sub_2409E24C0, MEMORY[0x263F8D8F0]);
  sub_2409E27BC();
  uint64_t v13 = (uint64_t)&v6[*(int *)(v4 + 72)];
  sub_2409E4604(v16[2], v13, &qword_268C9A490, (uint64_t (*)(uint64_t))sub_2409E24C0);
  uint64_t v14 = v17;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v17, v6, v8);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v14 + *(int *)(v4 + 56), v11, v10);
  return sub_2409E4684(v13, v14 + *(int *)(v4 + 72), &qword_268C9A490, (uint64_t (*)(uint64_t))sub_2409E24C0);
}

uint64_t sub_2409D968C()
{
  uint64_t v1 = type metadata accessor for AudiogramLongitudinalPDFChartData() - 8;
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (double *)((char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *v0;
  uint64_t v6 = *(void *)(*v0 + 16);
  if (!v6) {
    return v6;
  }
  uint64_t v7 = v5 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v8 = *(void *)(v2 + 72);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  while (1)
  {
    sub_2409E1AEC(v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for AudiogramLongitudinalPDFChartData);
    double v9 = *v4;
    if (*((unsigned char *)v4 + 8)) {
      double v9 = 0.0;
    }
    if (*((unsigned char *)v4 + 24) != 1) {
      break;
    }
    if (v9 < -15.0 || v9 > 115.0) {
      goto LABEL_21;
    }
    sub_2409E375C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for AudiogramLongitudinalPDFChartData);
LABEL_3:
    v7 += v8;
    if (!--v6) {
      goto LABEL_23;
    }
  }
  double v11 = v4[2];
  if (v9 >= -15.0 && v9 <= 115.0 && v11 >= -15.0)
  {
    sub_2409E375C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for AudiogramLongitudinalPDFChartData);
    if (v11 > 115.0) {
      goto LABEL_22;
    }
    goto LABEL_3;
  }
LABEL_21:
  sub_2409E375C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for AudiogramLongitudinalPDFChartData);
LABEL_22:
  uint64_t v6 = 1;
LABEL_23:
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_2409D9860()
{
  uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F1A620];
  sub_2409E1CD8(0, &qword_268C9A230, MEMORY[0x263F1A620], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  sub_240A04848();
  uint64_t v4 = *MEMORY[0x263F1A608];
  uint64_t v5 = sub_240A04828();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 104))(v3, v4, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v3, 0, 1, v5);
  uint64_t v7 = sub_240A04858();
  uint64_t result = sub_2409E4704((uint64_t)v3, &qword_268C9A230, v0);
  qword_268C9A3D0 = v7;
  return result;
}

uint64_t sub_2409D99CC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for AudiogramLongitudinalPDFChartData();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409E1AEC(a1, v1 + OBJC_IVAR____TtC16HearingAppPlugin29AudiogramPDFLongitudinalChart_chartModel, type metadata accessor for AudiogramPDFLongitudinalChart.Model);
  BOOL v7 = sub_2409C8A98();
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(*(void *)a1 + 16);
  if (v7)
  {
    if (v9)
    {
      uint64_t v10 = v8 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
      uint64_t result = _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      while (v9 <= *(void *)(v8 + 16))
      {
        --v9;
        sub_2409E1AEC(v10 + *(void *)(v4 + 72) * v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for AudiogramLongitudinalPDFChartData);
        char v12 = v6[8];
        uint64_t result = sub_2409E375C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for AudiogramLongitudinalPDFChartData);
        if ((v12 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          char v17 = 0;
          uint64_t v15 = v9;
          goto LABEL_14;
        }
        if (!v9) {
          goto LABEL_12;
        }
      }
      __break(1u);
      goto LABEL_32;
    }
    goto LABEL_13;
  }
  if (!v9)
  {
LABEL_13:
    uint64_t v15 = 0;
    char v17 = 1;
    goto LABEL_14;
  }
  uint64_t v13 = v8 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v14 = *(void *)(v4 + 72);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v15 = 0;
  while (1)
  {
    sub_2409E1AEC(v13, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for AudiogramLongitudinalPDFChartData);
    char v16 = v6[8];
    sub_2409E375C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for AudiogramLongitudinalPDFChartData);
    if ((v16 & 1) == 0) {
      break;
    }
    ++v15;
    v13 += v14;
    if (v9 == v15)
    {
LABEL_12:
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease();
  char v17 = 0;
LABEL_14:
  uint64_t v18 = v1 + OBJC_IVAR____TtC16HearingAppPlugin29AudiogramPDFLongitudinalChart_leftEarAnnotationIndex;
  *(void *)uint64_t v18 = v15;
  *(unsigned char *)(v18 + 8) = v17;
  BOOL v19 = sub_2409C8A98();
  uint64_t v20 = *(void *)a1;
  uint64_t v21 = *(void *)(*(void *)a1 + 16);
  if (v19)
  {
    if (v21)
    {
      uint64_t v22 = v20 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
      uint64_t v23 = *(void *)(v4 + 72);
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v24 = 0;
      while (1)
      {
        sub_2409E1AEC(v22, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for AudiogramLongitudinalPDFChartData);
        int v25 = v6[24];
        sub_2409E375C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for AudiogramLongitudinalPDFChartData);
        if (v25 != 1) {
          goto LABEL_30;
        }
        ++v24;
        v22 += v23;
        if (v21 == v24) {
          goto LABEL_25;
        }
      }
    }
LABEL_26:
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v24 = 0;
    LOBYTE(v25) = 1;
LABEL_30:
    sub_2409E375C(a1, type metadata accessor for AudiogramPDFLongitudinalChart.Model);
    swift_bridgeObjectRelease();
    uint64_t v27 = v1 + OBJC_IVAR____TtC16HearingAppPlugin29AudiogramPDFLongitudinalChart_rightEarAnnotationIndex;
    *(void *)uint64_t v27 = v24;
    *(unsigned char *)(v27 + 8) = v25;
    return v1;
  }
  if (!v21) {
    goto LABEL_26;
  }
  uint64_t v26 = v20 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t result = _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  while (v21 <= *(void *)(v20 + 16))
  {
    --v21;
    sub_2409E1AEC(v26 + *(void *)(v4 + 72) * v21, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for AudiogramLongitudinalPDFChartData);
    int v25 = v6[24];
    uint64_t result = sub_2409E375C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for AudiogramLongitudinalPDFChartData);
    if (v25 != 1)
    {
      uint64_t v24 = v21;
      goto LABEL_30;
    }
    if (!v21)
    {
LABEL_25:
      uint64_t v24 = 0;
      goto LABEL_30;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_2409D9D64@<X0>(uint64_t a1@<X8>)
{
  return sub_2409D9DE0(v1 + OBJC_IVAR____TtC16HearingAppPlugin29AudiogramPDFLongitudinalChart_chartModel, *(void *)(v1 + OBJC_IVAR____TtC16HearingAppPlugin29AudiogramPDFLongitudinalChart_leftEarAnnotationIndex), *(unsigned __int8 *)(v1+ OBJC_IVAR____TtC16HearingAppPlugin29AudiogramPDFLongitudinalChart_leftEarAnnotationIndex+ 8), *(void (**)(void, void, void, void))(v1+ OBJC_IVAR____TtC16HearingAppPlugin29AudiogramPDFLongitudinalChart_rightEarAnnotationIndex), *(unsigned __int8 *)(v1+ OBJC_IVAR____TtC16HearingAppPlugin29AudiogramPDFLongitudinalChart_rightEarAnnotationIndex+ 8), a1);
}

uint64_t sub_2409D9DE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void (*a4)(void, void, void, void)@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  LODWORD(v84) = a5;
  uint64_t v82 = a4;
  int v81 = a3;
  uint64_t v80 = a2;
  uint64_t v103 = a6;
  uint64_t v102 = sub_240A046F8();
  uint64_t v101 = *(void *)(v102 - 8);
  MEMORY[0x270FA5388](v102);
  uint64_t v100 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = (uint64_t (*)(uint64_t))MEMORY[0x263EFCD98];
  sub_2409E1CD8(0, &qword_268C99FB0, MEMORY[0x263EFCD98], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  double v11 = (char *)&v78 - v10;
  sub_2409E1B54(0);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  char v16 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409E1F0C();
  uint64_t v85 = v17;
  MEMORY[0x270FA5388](v17);
  BOOL v19 = (char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409E1F74();
  uint64_t v86 = v20;
  uint64_t v87 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v83 = (char *)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409E21EC();
  uint64_t v90 = v22;
  uint64_t v92 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v104 = (char *)&v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409E2904();
  uint64_t v94 = v24;
  uint64_t v95 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v88 = (char *)&v78 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409E2AA4();
  uint64_t v96 = v26;
  uint64_t v97 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v91 = (char *)&v78 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409E33C4();
  uint64_t v99 = v28;
  uint64_t v98 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  long long v93 = (char *)&v78 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409E2018();
  uint64_t v31 = v30;
  MEMORY[0x270FA5388](v30);
  uint64_t v33 = (char *)&v78 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = a1;
  sub_2409DAA74(a1, (uint64_t)v33);
  uint64_t v109 = v6;
  uint64_t v110 = a1;
  uint64_t v78 = v6;
  uint64_t v111 = v80;
  char v112 = v81 & 1;
  char v113 = v82;
  char v114 = v84 & 1;
  char v115 = v33;
  uint64_t v89 = v33;
  sub_2409E1B9C();
  sub_2409E1D70();
  sub_240A042F8();
  uint64_t v118 = sub_240A04C58();
  uint64_t v119 = v34;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_240A04CA8();
  swift_bridgeObjectRelease();
  sub_2409E49C8(&qword_268C9A468, sub_2409E1B54);
  sub_240A048D8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v35 = sub_240A04438();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v82 = *(void (**)(void, void, void, void))(v36 + 56);
  uint64_t v84 = v36 + 56;
  v82(v11, 1, 1, v35);
  unint64_t v37 = sub_2409E20AC();
  unint64_t v38 = sub_2409E2184();
  unint64_t v39 = v83;
  uint64_t v40 = (uint64_t)v11;
  uint64_t v41 = v85;
  sub_240A048A8();
  sub_2409E4704(v40, &qword_268C99FB0, v105);
  sub_2409E375C((uint64_t)v19, (uint64_t (*)(void))sub_2409E1F0C);
  uint64_t v107 = v79;
  uint64_t v108 = v6;
  sub_2409E2310(0);
  uint64_t v43 = v42;
  uint64_t v118 = v41;
  uint64_t v119 = v31;
  unint64_t v120 = v37;
  unint64_t v121 = v38;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v85 = MEMORY[0x263EFCD80];
  uint64_t v45 = sub_2409E49C8(&qword_268C9A4C8, sub_2409E2310);
  uint64_t v46 = v86;
  sub_240A04888();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v39, v46);
  char v47 = sub_2409D968C();
  double v48 = -120.0;
  if (v47) {
    double v48 = -200.0;
  }
  double v49 = 50.0;
  if ((v47 & 1) == 0) {
    double v49 = 20.0;
  }
  double v116 = v48;
  double v117 = v49;
  v82(v40, 1, 1, v35);
  sub_2409E4850(0, &qword_268C9A0B0, MEMORY[0x263F8D538], MEMORY[0x263F8D560], MEMORY[0x263F8D1A0]);
  uint64_t v51 = v50;
  uint64_t v118 = v46;
  uint64_t v119 = v43;
  unint64_t v120 = OpaqueTypeConformance2;
  unint64_t v121 = v45;
  uint64_t v52 = swift_getOpaqueTypeConformance2();
  unint64_t v53 = sub_2409D3CC8();
  uint64_t v54 = v88;
  uint64_t v55 = v90;
  uint64_t v56 = v104;
  sub_240A048B8();
  sub_2409E4704(v40, &qword_268C99FB0, v105);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v56, v55);
  uint64_t v106 = v78;
  sub_2409E2CB8(0);
  uint64_t v58 = v57;
  uint64_t v118 = v55;
  uint64_t v119 = v51;
  unint64_t v120 = v52;
  unint64_t v121 = v53;
  uint64_t v59 = swift_getOpaqueTypeConformance2();
  uint64_t v60 = sub_2409E49C8(&qword_268C9A538, sub_2409E2CB8);
  unint64_t v61 = v91;
  uint64_t v62 = v94;
  sub_240A04898();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v54, v62);
  sub_240A04258();
  uint64_t v118 = v62;
  uint64_t v119 = v58;
  unint64_t v120 = v59;
  unint64_t v121 = v60;
  swift_getOpaqueTypeConformance2();
  sub_2409E49C8(&qword_268C9A208, MEMORY[0x263EFCC70]);
  uint64_t v63 = v93;
  uint64_t v64 = v96;
  sub_240A048C8();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v61, v64);
  uint64_t KeyPath = swift_getKeyPath();
  BOOL v66 = sub_2409C8A98();
  uint64_t v67 = v101;
  uint64_t v68 = (unsigned int *)MEMORY[0x263F18DD0];
  if (!v66) {
    uint64_t v68 = (unsigned int *)MEMORY[0x263F18DC8];
  }
  uint64_t v69 = v100;
  uint64_t v70 = v102;
  (*(void (**)(char *, void, uint64_t))(v101 + 104))(v100, *v68, v102);
  sub_2409E36C4();
  uint64_t v72 = v103;
  uint64_t v73 = (uint64_t *)(v103 + *(int *)(v71 + 36));
  sub_2409E1CD8(0, &qword_268C9A218, MEMORY[0x263F18DD8], MEMORY[0x263F1A418]);
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))((char *)v73 + *(int *)(v74 + 28), v69, v70);
  uint64_t *v73 = KeyPath;
  uint64_t v75 = v98;
  uint64_t v76 = v99;
  (*(void (**)(uint64_t, char *, uint64_t))(v98 + 16))(v72, v63, v99);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v69, v70);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v63, v76);
  return sub_2409E375C((uint64_t)v89, (uint64_t (*)(void))sub_2409E2018);
}

uint64_t sub_2409DAA74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v86 = a2;
  uint64_t v3 = sub_240A04018();
  uint64_t v79 = *(void *)(v3 - 8);
  uint64_t v80 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v88 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409E4784();
  uint64_t v84 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v85 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v82 = (char *)&v69 - v8;
  sub_2409E2018();
  uint64_t v83 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v89 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_240A02A78();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409E1CD8(0, (unint64_t *)&qword_268C996D0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v75 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  BOOL v19 = (char *)&v69 - v18;
  uint64_t v20 = sub_240A02978();
  uint64_t v21 = *(void **)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v78 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v72 = (char *)&v69 - v24;
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v69 - v26;
  MEMORY[0x270FA5388](v28);
  uint64_t v74 = (char *)&v69 - v29;
  uint64_t v73 = a1 + *(int *)(type metadata accessor for AudiogramPDFLongitudinalChart.Model(0) + 20);
  sub_240A02748();
  sub_240A02A48();
  sub_240A02A18();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v76 = v12 + 8;
  uint64_t v77 = (char *)v11;
  v30(v14, v11);
  uint64_t v31 = (void (*)(char *, uint64_t))v21[1];
  uint64_t v90 = v21 + 1;
  v31(v27, v20);
  uint64_t v32 = (uint64_t (*)(char *, uint64_t, uint64_t))v21[6];
  int v33 = v32(v19, 1, v20);
  int v81 = v31;
  uint64_t v87 = v21;
  if (v33 == 1)
  {
    uint64_t v77 = v27;
LABEL_5:
    sub_2409E4704((uint64_t)v19, (unint64_t *)&qword_268C996D0, MEMORY[0x263F07490]);
    unint64_t v37 = v88;
    sub_240A03FE8();
    unint64_t v38 = sub_240A03FF8();
    os_log_type_t v39 = sub_240A04EA8();
    BOOL v40 = os_log_type_enabled(v38, v39);
    uint64_t v41 = v87;
    if (v40)
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      uint64_t v92 = v43;
      *(_DWORD *)uint64_t v42 = 136446210;
      uint64_t v44 = sub_240A05478();
      uint64_t v91 = sub_240981440(v44, v45, &v92);
      sub_240A050D8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240976000, v38, v39, "[%{public}s] Unable to determine chart x scale domain", v42, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v43, -1, -1);
      MEMORY[0x2456058A0](v42, -1, -1);

      (*(void (**)(char *, uint64_t))(v79 + 8))(v88, v80);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v79 + 8))(v37, v80);
    }
    char v47 = v77;
    uint64_t v46 = v78;
    sub_240A02908();
    sub_240A02918();
    sub_2409E49C8(&qword_268C9A458, MEMORY[0x263F07490]);
    uint64_t result = sub_240A04BE8();
    if (result)
    {
      uint64_t v49 = v84;
      uint64_t v50 = v82;
      uint64_t v51 = &v82[*(int *)(v84 + 48)];
      uint64_t v52 = (void (*)(char *, char *, uint64_t))v41[4];
      v52(v82, v47, v20);
      uint64_t v88 = v51;
      v52(v51, v46, v20);
      unint64_t v53 = v85;
      uint64_t v54 = &v85[*(int *)(v49 + 48)];
      uint64_t v55 = (void (*)(char *, char *, uint64_t))v41[2];
      v55(v85, v50, v20);
      v55(v54, v51, v20);
      uint64_t v56 = (uint64_t)v89;
      v52(v89, v53, v20);
      uint64_t v57 = v81;
      v81(v54, v20);
      uint64_t v58 = &v53[*(int *)(v49 + 48)];
      v52(v53, v50, v20);
      v52(v58, v88, v20);
      v52((char *)(v56 + *(int *)(v83 + 36)), v58, v20);
LABEL_12:
      v57(v53, v20);
      return sub_2409E47EC(v56, v86);
    }
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v34 = v21 + 4;
  uint64_t v35 = (void (*)(char *, char *, uint64_t))v21[4];
  uint64_t v36 = v74;
  uint64_t v71 = v34;
  uint64_t v70 = v35;
  v35(v74, v19, v20);
  sub_240A02728();
  sub_240A02A48();
  BOOL v19 = v75;
  Date.lastDateOfTheYear(calendar:)((uint64_t)v75);
  v30(v14, (uint64_t)v77);
  v31(v27, v20);
  if (v32(v19, 1, v20) == 1)
  {
    uint64_t v77 = v27;
    v31(v36, v20);
    goto LABEL_5;
  }
  uint64_t v59 = v72;
  v70(v72, v19, v20);
  sub_2409E49C8(&qword_268C9A458, MEMORY[0x263F07490]);
  uint64_t result = sub_240A04BE8();
  if (result)
  {
    uint64_t v60 = v84;
    unint64_t v61 = v82;
    uint64_t v62 = &v82[*(int *)(v84 + 48)];
    uint64_t v63 = v70;
    v70(v82, v36, v20);
    uint64_t v88 = v62;
    v63(v62, v59, v20);
    unint64_t v53 = v85;
    uint64_t v64 = &v85[*(int *)(v60 + 48)];
    uint64_t v65 = (void (*)(char *, char *, uint64_t))v87[2];
    v65(v85, v61, v20);
    v65(v64, v62, v20);
    v63(v89, v53, v20);
    BOOL v66 = v64;
    uint64_t v57 = v81;
    v81(v66, v20);
    uint64_t v67 = &v53[*(int *)(v60 + 48)];
    uint64_t v68 = v61;
    uint64_t v56 = (uint64_t)v89;
    v63(v53, v68, v20);
    v63(v67, v88, v20);
    v63((char *)(v56 + *(int *)(v83 + 36)), v67, v20);
    goto LABEL_12;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_2409DB414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, char a3@<W3>, char *a4@<X4>, char a5@<W5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v89 = a6;
  uint64_t v85 = a4;
  uint64_t v70 = a1;
  uint64_t v84 = a7;
  sub_2409E43AC(0, &qword_268C9A590, MEMORY[0x263F07490], MEMORY[0x263EFCAD0], MEMORY[0x263EFCC50]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v80 = (char *)v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = sub_240A04398();
  uint64_t v90 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v79 = (char *)v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v68 - v16;
  sub_2409D4060(0, &qword_268C9A068, MEMORY[0x263EFCD68]);
  uint64_t v78 = v18;
  uint64_t v77 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v75 = (char *)v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)v68 - v21;
  sub_2409D330C();
  uint64_t v83 = v23;
  uint64_t v86 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v82 = (char *)v68 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  int v81 = (char *)v68 - v26;
  MEMORY[0x270FA5388](v27);
  uint64_t v72 = (char *)v68 - v28;
  MEMORY[0x270FA5388](v29);
  uint64_t v73 = (char *)v68 - v30;
  MEMORY[0x270FA5388](v31);
  uint64_t v71 = (char *)v68 - v32;
  MEMORY[0x270FA5388](v33);
  uint64_t v87 = (char *)v68 - v34;
  sub_2409E1C10();
  uint64_t v76 = v35;
  uint64_t v74 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v88 = (char *)v68 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v37);
  os_log_type_t v39 = (char *)v68 - v38;
  uint64_t v40 = _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  size_t v41 = sub_2409D234C(v40);
  swift_bridgeObjectRelease();
  v91[3] = v41;
  swift_getKeyPath();
  uint64_t v42 = swift_allocObject();
  uint64_t v43 = v85;
  *(void *)(v42 + 16) = v70;
  *(void *)(v42 + 24) = v43;
  *(unsigned char *)(v42 + 32) = a5 & 1;
  *(void *)(v42 + 40) = a2;
  *(unsigned char *)(v42 + 48) = a3 & 1;
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = sub_2409E4428;
  *(void *)(v44 + 24) = v42;
  sub_2409E1CD8(0, &qword_268C9A2A0, (uint64_t (*)(uint64_t))sub_2409D6360, MEMORY[0x263F8D488]);
  sub_2409D63CC();
  sub_2409D68C0();
  sub_2409E1E94();
  uint64_t v85 = v39;
  sub_240A04958();
  sub_240A047B8();
  uint64_t v45 = sub_240A02978();
  sub_240A04228();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v70 = v45;
  sub_240A04388();
  if (qword_268C99340 != -1) {
    swift_once();
  }
  *(void *)&long long v95 = qword_268C9AAA0;
  uint64_t v46 = MEMORY[0x263F1B440];
  uint64_t v47 = MEMORY[0x263EFCD60];
  uint64_t v48 = MEMORY[0x263F1B420];
  sub_240A04168();
  uint64_t v49 = *(void (**)(char *, uint64_t))(v90 + 8);
  v90 += 8;
  uint64_t v69 = v49;
  v49(v17, v13);
  if (qword_268C99348 != -1) {
    swift_once();
  }
  long long v95 = xmmword_268C9AAA8;
  long long v96 = *(_OWORD *)&qword_268C9AAB8;
  uint64_t v97 = qword_268C9AAC8;
  *(void *)&long long v92 = v13;
  *((void *)&v92 + 1) = v46;
  *(void *)&long long v93 = v47;
  *((void *)&v93 + 1) = v48;
  v68[1] = swift_getOpaqueTypeConformance2();
  uint64_t v50 = v71;
  uint64_t v51 = v78;
  sub_240A04188();
  uint64_t v77 = *(void *)(v77 + 8);
  ((void (*)(char *, uint64_t))v77)(v22, v51);
  v68[0] = *(void *)(v86 + 32);
  uint64_t v52 = v83;
  ((void (*)(char *, char *, uint64_t))v68[0])(v87, v50, v83);
  sub_240A047B8();
  sub_2409E2018();
  sub_240A04228();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v53 = v79;
  sub_240A04388();
  *(void *)&long long v92 = qword_268C9AAA0;
  uint64_t v54 = v75;
  sub_240A04168();
  v69(v53, v13);
  long long v92 = xmmword_268C9AAA8;
  long long v93 = *(_OWORD *)&qword_268C9AAB8;
  uint64_t v94 = qword_268C9AAC8;
  uint64_t v55 = v72;
  sub_240A04188();
  ((void (*)(char *, uint64_t))v77)(v54, v51);
  uint64_t v56 = v73;
  ((void (*)(char *, char *, uint64_t))v68[0])(v73, v55, v52);
  uint64_t v57 = v74;
  uint64_t v58 = (uint64_t)v88;
  uint64_t v59 = v76;
  (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v88, v85, v76);
  v91[0] = v58;
  uint64_t v61 = v86;
  uint64_t v60 = v87;
  uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
  uint64_t v63 = (uint64_t)v81;
  v62(v81, v87, v52);
  v91[1] = v63;
  uint64_t v64 = (uint64_t)v82;
  v62(v82, v56, v52);
  v91[2] = v64;
  sub_2409CC038(v91, v84);
  uint64_t v65 = *(void (**)(char *, uint64_t))(v61 + 8);
  v65(v56, v52);
  v65(v60, v52);
  BOOL v66 = *(void (**)(char *, uint64_t))(v57 + 8);
  v66(v85, v59);
  v65((char *)v64, v52);
  v65((char *)v63, v52);
  return ((uint64_t (*)(char *, uint64_t))v66)(v88, v59);
}

uint64_t sub_2409DBE94(uint64_t a1)
{
  uint64_t v2 = sub_240A04248();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_240A041B8();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v4 = sub_240A02A78();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A02A48();
  sub_2409DE2E8(a1, (void (**)(uint64_t, uint64_t))1, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_240A041A8();
  sub_240A04238();
  sub_2409E23D8();
  sub_240A02978();
  sub_2409E26F0();
  return sub_240A043B8();
}

uint64_t sub_2409DC07C()
{
  uint64_t v1 = sub_240A04248();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v2 = sub_240A041B8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_240A041D8();
  MEMORY[0x270FA5388](v3 - 8);
  sub_2409D5748();
  sub_240A041C8();
  *(void *)(swift_allocObject() + 16) = v0;
  sub_240A041A8();
  sub_240A04238();
  sub_2409E2D00();
  sub_2409E31B4();
  return sub_240A043A8();
}

uint64_t sub_2409DC21C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X8>)
{
  int v129 = a7;
  uint64_t v123 = a6;
  LODWORD(v128) = a5;
  uint64_t v122 = a4;
  uint64_t v132 = a1;
  sub_2409E44D0();
  uint64_t v144 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v143 = (uint64_t)&v114 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409E4564();
  uint64_t v142 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v141 = (char *)&v114 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = sub_240A042A8();
  uint64_t v126 = *(void *)(v127 - 8);
  MEMORY[0x270FA5388](v127);
  uint64_t v118 = (char *)&v114 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  char v115 = (char *)&v114 - v17;
  uint64_t v125 = sub_240A02978();
  uint64_t v124 = *(void *)(v125 - 8);
  MEMORY[0x270FA5388](v125);
  unint64_t v121 = (char *)&v114 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  unint64_t v120 = (char *)&v114 - v20;
  sub_2409D3194();
  uint64_t v146 = *(void *)(v21 - 8);
  uint64_t v147 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v117 = (uint64_t)&v114 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  double v116 = (char *)&v114 - v24;
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v114 - v26;
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)&v114 - v29;
  sub_2409D6498();
  uint64_t v137 = *(void *)(v31 - 8);
  uint64_t v138 = v31;
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)&v114 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v34);
  v148 = (char *)&v114 - v35;
  MEMORY[0x270FA5388](v36);
  uint64_t v38 = (char *)&v114 - v37;
  os_log_type_t v39 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2409E1CD8(0, &qword_268C9A048, (uint64_t (*)(uint64_t))sub_2409D3194, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v40 - 8);
  unsigned int v131 = (char *)&v114 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v42);
  uint64_t v133 = (uint64_t)&v114 - v43;
  MEMORY[0x270FA5388](v44);
  uint64_t v130 = (char *)&v114 - v45;
  uint64_t v46 = v39;
  uint64_t v47 = a2;
  sub_2409E1CD8(0, &qword_268C9A2B8, (uint64_t (*)(uint64_t))sub_2409D6464, v46);
  MEMORY[0x270FA5388](v48 - 8);
  uint64_t v140 = (uint64_t)&v114 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v50);
  uint64_t v52 = (char *)&v114 - v51;
  MEMORY[0x270FA5388](v53);
  uint64_t v55 = (char *)&v114 - v54;
  MEMORY[0x270FA5388](v56);
  uint64_t v58 = (char *)&v114 - v57;
  int v59 = *(unsigned __int8 *)(v47 + 24);
  uint64_t v145 = a8;
  uint64_t v139 = v52;
  unsigned int v135 = v33;
  uint64_t v136 = (char *)&v114 - v57;
  uint64_t v134 = v55;
  if (v59 == 1)
  {
    sub_2409D6464(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v58, 1, 1, v60);
  }
  else
  {
    double v61 = *(double *)(v47 + 16);
    uint64_t v62 = *(int *)(type metadata accessor for AudiogramLongitudinalPDFChartData() + 24);
    uint64_t v114 = v47;
    uint64_t v63 = v47 + v62;
    uint64_t v64 = 1;
    uint64_t v119 = a3;
    sub_2409DD154(v63, COERCE_DOUBLE(0x7468676952), -3.24180904e178, 1, (uint64_t)v38, v61);
    uint64_t v65 = v38;
    if ((v128 & 1) == 0 && v132 == v122)
    {
      uint64_t v66 = v124;
      uint64_t v67 = (uint64_t)v120;
      uint64_t v68 = v63;
      uint64_t v69 = v125;
      (*(void (**)(char *, uint64_t, uint64_t))(v124 + 16))(v120, v68, v125);
      if (sub_2409C8A98())
      {
        uint64_t v70 = (uint64_t)v115;
        sub_240A04288();
      }
      else
      {
        uint64_t v70 = (uint64_t)v115;
        sub_240A04298();
      }
      sub_2409DD9F0(v67, 1, v70, (uint64_t)v27, v61);
      (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v70, v127);
      (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v67, v69);
      uint64_t v71 = v147;
      uint64_t v72 = *(void (**)(char *, char *, uint64_t))(v146 + 32);
      v72(v30, v27, v147);
      v72(v130, v30, v71);
      uint64_t v64 = 0;
    }
    uint64_t v73 = (uint64_t)v130;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v146 + 56))(v130, v64, 1, v147);
    uint64_t v75 = v137;
    uint64_t v74 = v138;
    uint64_t v76 = *(void (**)(char *, char *, uint64_t))(v137 + 16);
    uint64_t v77 = v148;
    v76(v148, v65, v138);
    uint64_t v128 = v65;
    uint64_t v78 = v133;
    sub_2409E4604(v73, v133, &qword_268C9A048, (uint64_t (*)(uint64_t))sub_2409D3194);
    sub_2409D2C84();
    sub_2409E43AC(255, &qword_268C9A2D0, (uint64_t (*)(uint64_t))sub_2409D6604, MEMORY[0x263F18868], MEMORY[0x263F18E28]);
    sub_2409D2FD4(255, &qword_268C9A008, MEMORY[0x263EFCD50]);
    sub_240A04378();
    sub_2409E3118((unint64_t *)&qword_268C9A300, &qword_268C9A2D0, (uint64_t (*)(uint64_t))sub_2409D6604, (void (*)(void))sub_2409E1D3C);
    uint64_t v79 = v141;
    v76(v141, v77, v74);
    sub_2409D38D8();
    uint64_t v80 = v142;
    uint64_t v81 = (uint64_t)&v79[*(int *)(v142 + 48)];
    sub_2409E4604(v78, v81, &qword_268C9A048, (uint64_t (*)(uint64_t))sub_2409D3194);
    uint64_t v55 = v134;
    (*(void (**)(void))(v75 + 32))();
    sub_2409E4684(v81, (uint64_t)&v55[*(int *)(v80 + 48)], &qword_268C9A048, (uint64_t (*)(uint64_t))sub_2409D3194);
    sub_2409E4704(v73, &qword_268C9A048, (uint64_t (*)(uint64_t))sub_2409D3194);
    uint64_t v82 = *(void (**)(char *, uint64_t))(v75 + 8);
    v82(v128, v74);
    sub_2409E4704(v78, &qword_268C9A048, (uint64_t (*)(uint64_t))sub_2409D3194);
    v82(v148, v74);
    sub_2409D6464(0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v55, 0, 1, v83);
    uint64_t v58 = v136;
    sub_2409E4684((uint64_t)v55, (uint64_t)v136, &qword_268C9A2B8, (uint64_t (*)(uint64_t))sub_2409D6464);
    a8 = v145;
    uint64_t v52 = v139;
    uint64_t v33 = v135;
    uint64_t v47 = v114;
  }
  if (*(unsigned char *)(v47 + 8) == 1)
  {
    sub_2409D6464(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v52, 1, 1, v84);
  }
  else
  {
    double v85 = *(double *)v47;
    uint64_t v86 = v47 + *(int *)(type metadata accessor for AudiogramLongitudinalPDFChartData() + 24);
    sub_2409DD154(v86, COERCE_DOUBLE(1952867660), -4.94660803e173, 0, (uint64_t)v33, v85);
    uint64_t v87 = 1;
    if ((v129 & 1) == 0 && v132 == v123)
    {
      uint64_t v88 = v124;
      uint64_t v89 = (uint64_t)v121;
      uint64_t v90 = v125;
      (*(void (**)(char *, uint64_t, uint64_t))(v124 + 16))(v121, v86, v125);
      if (sub_2409C8A98())
      {
        uint64_t v91 = (uint64_t)v118;
        sub_240A04298();
      }
      else
      {
        uint64_t v91 = (uint64_t)v118;
        sub_240A04288();
      }
      uint64_t v92 = v117;
      long long v93 = v116;
      sub_2409DD9F0(v89, 0, v91, v117, v85);
      (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v91, v127);
      (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v89, v90);
      uint64_t v94 = *(void (**)(char *, uint64_t, uint64_t))(v146 + 32);
      uint64_t v95 = v92;
      uint64_t v96 = v147;
      v94(v93, v95, v147);
      v94(v131, (uint64_t)v93, v96);
      uint64_t v87 = 0;
    }
    uint64_t v97 = (uint64_t)v131;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v146 + 56))(v131, v87, 1, v147);
    uint64_t v98 = v137;
    uint64_t v99 = v138;
    uint64_t v100 = *(void (**)(char *, char *, uint64_t))(v137 + 16);
    uint64_t v101 = v148;
    v100(v148, v33, v138);
    uint64_t v102 = v133;
    sub_2409E4604(v97, v133, &qword_268C9A048, (uint64_t (*)(uint64_t))sub_2409D3194);
    sub_2409D2C84();
    sub_2409E43AC(255, &qword_268C9A2D0, (uint64_t (*)(uint64_t))sub_2409D6604, MEMORY[0x263F18868], MEMORY[0x263F18E28]);
    sub_2409D2FD4(255, &qword_268C9A008, MEMORY[0x263EFCD50]);
    sub_240A04378();
    sub_2409E3118((unint64_t *)&qword_268C9A300, &qword_268C9A2D0, (uint64_t (*)(uint64_t))sub_2409D6604, (void (*)(void))sub_2409E1D3C);
    uint64_t v103 = v141;
    v100(v141, v101, v99);
    sub_2409D38D8();
    uint64_t v104 = v142;
    uint64_t v105 = (uint64_t)&v103[*(int *)(v142 + 48)];
    sub_2409E4604(v102, v105, &qword_268C9A048, (uint64_t (*)(uint64_t))sub_2409D3194);
    uint64_t v106 = (uint64_t)v134;
    (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v134, v103, v99);
    sub_2409E4684(v105, v106 + *(int *)(v104 + 48), &qword_268C9A048, (uint64_t (*)(uint64_t))sub_2409D3194);
    sub_2409E4704(v97, &qword_268C9A048, (uint64_t (*)(uint64_t))sub_2409D3194);
    uint64_t v107 = *(void (**)(char *, uint64_t))(v98 + 8);
    v107(v135, v99);
    sub_2409E4704(v102, &qword_268C9A048, (uint64_t (*)(uint64_t))sub_2409D3194);
    uint64_t v55 = (char *)v106;
    v107(v148, v99);
    sub_2409D6464(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56))(v106, 0, 1, v108);
    uint64_t v52 = v139;
    sub_2409E4684(v106, (uint64_t)v139, &qword_268C9A2B8, (uint64_t (*)(uint64_t))sub_2409D6464);
    uint64_t v58 = v136;
    a8 = v145;
  }
  sub_2409E4604((uint64_t)v58, (uint64_t)v55, &qword_268C9A2B8, (uint64_t (*)(uint64_t))sub_2409D6464);
  uint64_t v109 = v140;
  sub_2409E4604((uint64_t)v52, v140, &qword_268C9A2B8, (uint64_t (*)(uint64_t))sub_2409D6464);
  sub_2409D6A98();
  uint64_t v110 = v143;
  sub_2409E4604((uint64_t)v55, v143, &qword_268C9A2B8, (uint64_t (*)(uint64_t))sub_2409D6464);
  uint64_t v111 = v144;
  uint64_t v112 = v110 + *(int *)(v144 + 48);
  sub_2409E4604(v109, v112, &qword_268C9A2B8, (uint64_t (*)(uint64_t))sub_2409D6464);
  sub_2409E4684(v110, a8, &qword_268C9A2B8, (uint64_t (*)(uint64_t))sub_2409D6464);
  sub_2409E4684(v112, a8 + *(int *)(v111 + 48), &qword_268C9A2B8, (uint64_t (*)(uint64_t))sub_2409D6464);
  sub_2409E4704((uint64_t)v52, &qword_268C9A2B8, (uint64_t (*)(uint64_t))sub_2409D6464);
  sub_2409E4704((uint64_t)v58, &qword_268C9A2B8, (uint64_t (*)(uint64_t))sub_2409D6464);
  sub_2409E4704(v109, &qword_268C9A2B8, (uint64_t (*)(uint64_t))sub_2409D6464);
  return sub_2409E4704((uint64_t)v55, &qword_268C9A2B8, (uint64_t (*)(uint64_t))sub_2409D6464);
}

uint64_t sub_2409DD154@<X0>(uint64_t a1@<X0>, double a2@<X1>, double a3@<X2>, int a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  int v57 = a4;
  double v53 = a2;
  double v54 = a3;
  uint64_t v47 = a1;
  uint64_t v58 = a5;
  uint64_t v7 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263EFCC50];
  sub_2409E4850(0, &qword_268C9A280, MEMORY[0x263F8D310], MEMORY[0x263EFCE58], MEMORY[0x263EFCC50]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v52 = (char *)&v41 - v9;
  sub_2409E4850(0, &qword_268C9A240, MEMORY[0x263F8D538], MEMORY[0x263EFCE78], v7);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v44 = (char *)&v41 - v11;
  uint64_t v43 = (uint64_t (*)(uint64_t))MEMORY[0x263F07920];
  sub_2409E1CD8(0, &qword_268C9A5A8, MEMORY[0x263F07920], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v41 - v13;
  uint64_t v15 = sub_240A02A58();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409E43AC(0, &qword_268C9A590, MEMORY[0x263F07490], MEMORY[0x263EFCAD0], MEMORY[0x263EFCC50]);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v46 = sub_240A04378();
  uint64_t v48 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = MEMORY[0x263EFCC10];
  sub_2409D2FD4(0, &qword_268C9A008, MEMORY[0x263EFCD50]);
  uint64_t v50 = v22;
  uint64_t v51 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v42 = (char *)&v41 - v23;
  sub_2409D2C84();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v55 = v24;
  uint64_t v56 = v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v45 = (char *)&v41 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A047B8();
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x263F078A0], v15);
  uint64_t v27 = sub_240A02A78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v14, 1, 1, v27);
  sub_240A04218();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2409E4704((uint64_t)v14, &qword_268C9A5A8, v43);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  sub_240A047B8();
  v65[0] = -a6;
  sub_240A04228();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_240A047B8();
  v65[0] = v53;
  v65[1] = v54;
  sub_240A04228();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_240A02978();
  sub_240A04368();
  sub_240A046D8();
  uint64_t v28 = v42;
  uint64_t v29 = v46;
  uint64_t v30 = MEMORY[0x263EFCD48];
  sub_240A04188();
  sub_2409D614C((uint64_t)v65);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v21, v29);
  uint64_t v31 = self;
  uint64_t v32 = &selRef_hk_hearingHealthAudiogramLeftEarLineColor;
  char v33 = v57 & 1;
  if (v57) {
    uint64_t v32 = &selRef_hk_hearingHealthAudiogramRightEarLineColor;
  }
  uint64_t v64 = MEMORY[0x245604520]([v31 *v32]);
  uint64_t v60 = v29;
  uint64_t v61 = v30;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v35 = MEMORY[0x263F1B440];
  uint64_t v36 = MEMORY[0x263F1B420];
  uint64_t v37 = v45;
  uint64_t v38 = v50;
  sub_240A04168();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v28, v38);
  char v59 = v33;
  sub_2409E43AC(0, &qword_268C9A2D0, (uint64_t (*)(uint64_t))sub_2409D6604, MEMORY[0x263F18868], MEMORY[0x263F18E28]);
  uint64_t v60 = v38;
  uint64_t v61 = v35;
  uint64_t v62 = OpaqueTypeConformance2;
  uint64_t v63 = v36;
  swift_getOpaqueTypeConformance2();
  sub_2409E3118((unint64_t *)&qword_268C9A300, &qword_268C9A2D0, (uint64_t (*)(uint64_t))sub_2409D6604, (void (*)(void))sub_2409E1D3C);
  uint64_t v39 = v55;
  sub_240A04178();
  return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v37, v39);
}

uint64_t sub_2409DD9F0@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v49 = a4;
  uint64_t v50 = a3;
  int v48 = a2;
  uint64_t v44 = a1;
  sub_2409E4850(0, &qword_268C9A240, MEMORY[0x263F8D538], MEMORY[0x263EFCE78], MEMORY[0x263EFCC50]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v47 = (char *)&v35 - v7;
  uint64_t v42 = (uint64_t (*)(uint64_t))MEMORY[0x263F07920];
  sub_2409E1CD8(0, &qword_268C9A5A8, MEMORY[0x263F07920], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v35 - v9;
  uint64_t v11 = sub_240A02A58();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409E43AC(0, &qword_268C9A590, MEMORY[0x263F07490], MEMORY[0x263EFCAD0], MEMORY[0x263EFCC50]);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v35 = (char *)&v35 - v16;
  *(double *)&uint64_t v38 = COERCE_DOUBLE(sub_240A04418());
  uint64_t v40 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = MEMORY[0x263EFCB50];
  sub_2409D2FD4(0, &qword_268C9A020, MEMORY[0x263EFCD90]);
  double v41 = v19;
  uint64_t v43 = *(void *)(*(void *)&v19 - 8);
  MEMORY[0x270FA5388](*(void *)&v19);
  uint64_t v36 = (char *)&v35 - v20;
  sub_2409D2EDC();
  uint64_t v45 = *(void *)(v21 - 8);
  uint64_t v46 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v37 = (char *)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A047B8();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F078A0], v11);
  uint64_t v23 = sub_240A02A78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v10, 1, 1, v23);
  sub_240A04218();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2409E4704((uint64_t)v10, &qword_268C9A5A8, v42);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  char v24 = v48 & 1;
  sub_240A047B8();
  double v52 = -a5;
  sub_240A04228();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_240A02978();
  sub_240A04408();
  uint64_t v25 = v36;
  double v26 = *(double *)&v38;
  uint64_t v27 = MEMORY[0x263EFCD88];
  sub_240A04158();
  (*(void (**)(char *, double))(v40 + 8))(v18, COERCE_DOUBLE(*(void *)&v26));
  uint64_t v56 = sub_240A04918();
  double v52 = v26;
  uint64_t v53 = v27;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v29 = MEMORY[0x263F1B440];
  uint64_t v30 = MEMORY[0x263F1B420];
  uint64_t v31 = v37;
  double v32 = v41;
  sub_240A04168();
  swift_release();
  (*(void (**)(char *, double))(v43 + 8))(v25, COERCE_DOUBLE(*(void *)&v32));
  char v51 = v24;
  sub_240A04978();
  double v52 = v32;
  uint64_t v53 = v29;
  uint64_t v54 = OpaqueTypeConformance2;
  uint64_t v55 = v30;
  swift_getOpaqueTypeConformance2();
  uint64_t v33 = v46;
  sub_240A04148();
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v31, v33);
}

uint64_t sub_2409DE0F0@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  char v3 = a1 & 1;
  uint64_t v4 = sub_240A027F8();
  MEMORY[0x270FA5388](v4 - 8);
  sub_2409A9A58(v3, (uint64_t)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_240A04868();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v7;
  *(unsigned char *)(a2 + 16) = v8 & 1;
  *(void *)(a2 + 24) = v9;
  return result;
}

double sub_2409DE18C@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_240A04928();
  uint64_t v5 = self;
  uint64_t v6 = &selRef_hk_hearingHealthAudiogramLeftEarLineColor;
  if (a1) {
    uint64_t v6 = &selRef_hk_hearingHealthAudiogramRightEarLineColor;
  }
  uint64_t v7 = MEMORY[0x245604520]([v5 *v6]);
  sub_240A046D8();
  uint64_t v8 = sub_240A04978();
  uint64_t v10 = v9;
  sub_240A04978();
  sub_240A046E8();
  *(double *)a2 = v12 * 0.5;
  *(double *)(a2 + 8) = v12;
  *(void *)(a2 + 16) = v13;
  *(void *)(a2 + 24) = v14;
  *(void *)(a2 + 32) = v15;
  *(void *)(a2 + 40) = v16;
  *(void *)(a2 + 48) = v7;
  *(_WORD *)(a2 + 56) = 256;
  *(void *)(a2 + 64) = v4;
  *(_WORD *)(a2 + 72) = 256;
  *(void *)(a2 + 80) = v8;
  *(void *)(a2 + 88) = v10;
  *(void *)(a2 + 96) = v17;
  *(unsigned char *)(a2 + 104) = v18;
  *(void *)(a2 + 112) = v19;
  *(unsigned char *)(a2 + 120) = v20;
  double result = *(double *)&v21;
  *(_OWORD *)(a2 + 128) = v21;
  return result;
}

uint64_t sub_2409DE2E8(uint64_t a1, void (**a2)(uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v146 = a2;
  uint64_t v157 = sub_240A04018();
  uint64_t v142 = *(void *)(v157 - 8);
  MEMORY[0x270FA5388](v157);
  uint64_t v5 = (char *)&v135 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v147 = (char *)&v135 - v7;
  MEMORY[0x270FA5388](v8);
  uint64_t v139 = (char *)&v135 - v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v144 = (char *)&v135 - v11;
  uint64_t v163 = sub_240A02A58();
  uint64_t v149 = *(void *)(v163 - 8);
  MEMORY[0x270FA5388](v163);
  uint64_t v162 = (uint64_t)&v135 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_240A027C8();
  uint64_t v150 = *(void *)(v13 - 8);
  uint64_t v151 = v13;
  MEMORY[0x270FA5388](v13);
  v148 = (char *)&v135 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409E1CD8(0, (unint64_t *)&qword_268C996D0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v15 - 8);
  v161 = (char *)&v135 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v135 - v18;
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v135 - v21;
  uint64_t v23 = sub_240A02978();
  uint64_t v164 = *(void *)(v23 - 8);
  uint64_t v24 = v164;
  MEMORY[0x270FA5388](v23);
  uint64_t v143 = (char *)&v135 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  v159 = (char *)&v135 - v27;
  MEMORY[0x270FA5388](v28);
  v158 = (char *)&v135 - v29;
  MEMORY[0x270FA5388](v30);
  uint64_t v140 = (char *)&v135 - v31;
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = (char *)&v135 - v33;
  MEMORY[0x270FA5388](v35);
  uint64_t v37 = (char *)&v135 - v36;
  MEMORY[0x270FA5388](v38);
  uint64_t v40 = (char *)&v135 - v39;
  type metadata accessor for AudiogramPDFLongitudinalChart.Model(0);
  sub_240A02748();
  sub_240A02728();
  v156 = v40;
  uint64_t v165 = a3;
  sub_240A02A18();
  *(void *)&long long v137 = v24;
  uint64_t v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  uint64_t v42 = v24 + 48;
  double v41 = v43;
  unsigned int v44 = v43(v22, 1, v23);
  uint64_t v145 = v37;
  if (v44 == 1)
  {
    uint64_t v19 = v22;
LABEL_5:
    sub_2409E4704((uint64_t)v19, (unint64_t *)&qword_268C996D0, MEMORY[0x263F07490]);
    sub_2409E49C8(&qword_268C9A568, MEMORY[0x263F07490]);
    uint64_t v48 = sub_240A05348();
    unint64_t v50 = v49;
    char v51 = v145;
    uint64_t v52 = sub_240A05348();
    unint64_t v54 = v53;
    sub_240A03FE8();
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v55 = sub_240A03FF8();
    os_log_type_t v56 = sub_240A04EA8();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = swift_slowAlloc();
      uint64_t v165 = swift_slowAlloc();
      v167[0] = v165;
      *(_DWORD *)uint64_t v57 = 136446722;
      uint64_t v58 = sub_240A05478();
      uint64_t v162 = v52;
      uint64_t v166 = sub_240981440(v58, v59, v167);
      uint64_t v163 = (uint64_t)v5;
      sub_240A050D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v57 + 12) = 2080;
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v166 = sub_240981440(v48, v50, v167);
      sub_240A050D8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v57 + 22) = 2080;
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v166 = sub_240981440(v162, v54, v167);
      sub_240A050D8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_240976000, v55, v56, "[%{public}s] Unable to determine first and last date of the years with startDate:%s endDate:%s", (uint8_t *)v57, 0x20u);
      uint64_t v60 = v165;
      swift_arrayDestroy();
      char v51 = v145;
      MEMORY[0x2456058A0](v60, -1, -1);
      MEMORY[0x2456058A0](v57, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v163, v157);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v142 + 8))(v5, v157);
    }
    uint64_t v61 = *(void (**)(char *, uint64_t))(v164 + 8);
    v61(v51, v23);
    v61(v156, v23);
    return MEMORY[0x263F8EE78];
  }
  uint64_t v45 = v5;
  uint64_t v47 = (char *)(v164 + 32);
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v164 + 32);
  v46(v34, v22, v23);
  v160 = v41;
  Date.lastDateOfTheYear(calendar:)((uint64_t)v19);
  uint64_t v141 = v42;
  if (v160(v19, 1, v23) == 1)
  {
    (*(void (**)(char *, uint64_t))(v164 + 8))(v34, v23);
    uint64_t v5 = v45;
    goto LABEL_5;
  }
  uint64_t v63 = v46;
  v152 = (void (*)(char *, uint64_t, uint64_t))v46;
  uint64_t v64 = v140;
  v63(v140, v19, v23);
  sub_2409E1CD8(0, &qword_268C9A570, MEMORY[0x263F07908], MEMORY[0x263F8E0F8]);
  uint64_t v65 = v149;
  unint64_t v66 = (*(unsigned __int8 *)(v149 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80);
  uint64_t v67 = swift_allocObject();
  long long v138 = xmmword_240A06870;
  *(_OWORD *)(v67 + 16) = xmmword_240A06870;
  uint64_t v68 = *(void (**)(void))(v65 + 104);
  unsigned int v155 = *MEMORY[0x263F078A0];
  v153 = (void (*)(uint64_t, void, uint64_t))v68;
  uint64_t v154 = v65 + 104;
  v68(v67 + v66);
  sub_2409E3DC0(v67);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v69 = v148;
  sub_240A02A08();
  swift_bridgeObjectRelease();
  uint64_t v70 = sub_240A027A8();
  LOBYTE(v66) = v71;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v150 + 8))(v69, v151);
  if (v66)
  {
    sub_2409E49C8(&qword_268C9A568, MEMORY[0x263F07490]);
    uint64_t v102 = sub_240A05348();
    unint64_t v104 = v103;
    uint64_t v105 = v64;
    uint64_t v106 = sub_240A05348();
    unint64_t v108 = v107;
    uint64_t v109 = v147;
    sub_240A03FE8();
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v110 = sub_240A03FF8();
    os_log_type_t v111 = sub_240A04EA8();
    int v112 = v111;
    if (os_log_type_enabled(v110, v111))
    {
      uint64_t v113 = swift_slowAlloc();
      LODWORD(v165) = v112;
      uint64_t v114 = v113;
      uint64_t v115 = swift_slowAlloc();
      uint64_t v162 = v106;
      uint64_t v163 = v115;
      v167[0] = v115;
      *(_DWORD *)uint64_t v114 = 136446722;
      uint64_t v136 = v34;
      uint64_t v116 = sub_240A05478();
      uint64_t v166 = sub_240981440(v116, v117, v167);
      sub_240A050D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v114 + 12) = 2080;
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v166 = sub_240981440(v102, v104, v167);
      uint64_t v105 = v140;
      sub_240A050D8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v114 + 22) = 2080;
      uint64_t v34 = v136;
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v166 = sub_240981440(v162, v108, v167);
      sub_240A050D8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_240976000, v110, (os_log_type_t)v165, "[%{public}s] Unable to years between firstDate:%s lastDate:%s", (uint8_t *)v114, 0x20u);
      uint64_t v118 = v163;
      swift_arrayDestroy();
      uint64_t v119 = v118;
      unint64_t v120 = v156;
      MEMORY[0x2456058A0](v119, -1, -1);
      MEMORY[0x2456058A0](v114, -1, -1);

      (*(void (**)(char *, uint64_t))(v142 + 8))(v109, v157);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v142 + 8))(v109, v157);
      unint64_t v120 = v156;
    }
    uint64_t v122 = *(void (**)(char *, uint64_t))(v164 + 8);
    v122(v105, v23);
    v122(v34, v23);
    v122(v145, v23);
    v122(v120, v23);
    return MEMORY[0x263F8EE78];
  }
  uint64_t v136 = v34;
  if (v70 < 1)
  {
    uint64_t v123 = v139;
    sub_240A03FE8();
    uint64_t v124 = sub_240A03FF8();
    os_log_type_t v125 = sub_240A04EA8();
    if (os_log_type_enabled(v124, v125))
    {
      uint64_t v126 = (uint8_t *)swift_slowAlloc();
      uint64_t v127 = swift_slowAlloc();
      v167[0] = v127;
      *(_DWORD *)uint64_t v126 = 136446210;
      uint64_t v128 = sub_240A05478();
      uint64_t v166 = sub_240981440(v128, v129, v167);
      sub_240A050D8();
      uint64_t v130 = v156;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240976000, v124, v125, "[%{public}s] 0 years between key dates found.", v126, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v127, -1, -1);
      MEMORY[0x2456058A0](v126, -1, -1);

      (*(void (**)(char *, uint64_t))(v142 + 8))(v123, v157);
      unsigned int v131 = v145;
      uint64_t v132 = v136;
      uint64_t v133 = v140;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v142 + 8))(v123, v157);
      unsigned int v131 = v145;
      uint64_t v132 = v136;
      uint64_t v133 = v140;
      uint64_t v130 = v156;
    }
    uint64_t v134 = *(void (**)(char *, uint64_t))(v164 + 8);
    v134(v133, v23);
    v134(v132, v23);
    v134(v131, v23);
    v134(v130, v23);
    return MEMORY[0x263F8EE78];
  }
  uint64_t v72 = v70 + (v146 & 1);
  uint64_t v73 = v136;
  if (__OFADD__(v70, v146 & 1))
  {
LABEL_36:
    __break(1u);
  }
  else
  {
    v148 = v47;
    sub_2409E1CD8(0, &qword_268C99668, MEMORY[0x263F07490], MEMORY[0x263F8E0F8]);
    uint64_t v74 = v164;
    unint64_t v75 = (*(unsigned __int8 *)(v164 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v164 + 80);
    uint64_t v139 = *(char **)(v164 + 72);
    uint64_t v76 = swift_allocObject();
    *(_OWORD *)(v76 + 16) = v138;
    uint64_t v150 = v76;
    *(void *)&long long v138 = v75;
    uint64_t v78 = *(char **)(v74 + 16);
    uint64_t v77 = v74 + 16;
    uint64_t v151 = v23;
    uint64_t v147 = v78;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v78)(v76 + v75, v73, v23);
    uint64_t v80 = v144;
    if (v72 >= 1)
    {
      uint64_t v146 = (void (**)(uint64_t, uint64_t))(v65 + 8);
      uint64_t v149 = v137 + 8;
      v142 += 8;
      uint64_t v81 = 1;
      *(void *)&long long v79 = 136446722;
      long long v137 = v79;
      uint64_t v135 = MEMORY[0x263F8EE58] + 8;
      uint64_t v164 = v77;
      while (1)
      {
        uint64_t v83 = v162;
        uint64_t v82 = v163;
        v153(v162, v155, v163);
        uint64_t v84 = (uint64_t)v161;
        sub_240A02A38();
        (*v146)(v83, v82);
        uint64_t v85 = v151;
        if (v160((char *)v84, 1, v151) == 1)
        {
          sub_2409E4704(v84, (unint64_t *)&qword_268C996D0, MEMORY[0x263F07490]);
          sub_240A03FE8();
          uint64_t v86 = v143;
          ((void (*)(char *, char *, uint64_t))v147)(v143, v73, v85);
          uint64_t v87 = sub_240A03FF8();
          os_log_type_t v88 = sub_240A04EA8();
          if (os_log_type_enabled(v87, v88))
          {
            uint64_t v89 = swift_slowAlloc();
            uint64_t v90 = swift_slowAlloc();
            v167[0] = v90;
            *(_DWORD *)uint64_t v89 = v137;
            uint64_t v91 = sub_240A05478();
            *(void *)(v89 + 4) = sub_240981440(v91, v92, v167);
            swift_bridgeObjectRelease();
            *(_WORD *)(v89 + 12) = 2080;
            sub_2409E49C8(&qword_268C9A568, MEMORY[0x263F07490]);
            uint64_t v93 = sub_240A05348();
            *(void *)(v89 + 14) = sub_240981440(v93, v94, v167);
            swift_bridgeObjectRelease();
            uint64_t v95 = *(void (**)(char *, uint64_t))v149;
            (*(void (**)(char *, uint64_t))v149)(v86, v85);
            *(_WORD *)(v89 + 22) = 2048;
            *(void *)(v89 + 24) = v81;
            _os_log_impl(&dword_240976000, v87, v88, "[%{public}s] Unable to determine first date of the year for date:%s + years:%ld", (uint8_t *)v89, 0x20u);
            swift_arrayDestroy();
            MEMORY[0x2456058A0](v90, -1, -1);
            uint64_t v96 = v89;
            uint64_t v73 = v136;
            MEMORY[0x2456058A0](v96, -1, -1);
          }
          else
          {
            uint64_t v95 = *(void (**)(char *, uint64_t))v149;
            (*(void (**)(char *, uint64_t))v149)(v86, v85);
          }

          uint64_t result = (*(uint64_t (**)(char *, uint64_t))v142)(v80, v157);
          if (v72 == v81) {
            goto LABEL_29;
          }
        }
        else
        {
          uint64_t v97 = v158;
          v152(v158, v84, v85);
          ((void (*)(char *, char *, uint64_t))v147)(v159, v97, v85);
          uint64_t v98 = v150;
          unint64_t v100 = *(void *)(v150 + 16);
          unint64_t v99 = *(void *)(v150 + 24);
          if (v100 >= v99 >> 1) {
            uint64_t v98 = sub_2409929E0(v99 > 1, v100 + 1, 1, v150);
          }
          *(void *)(v98 + 16) = v100 + 1;
          uint64_t v150 = v98;
          v152((char *)(v98 + v138 + v100 * (void)v139), (uint64_t)v159, v85);
          uint64_t v95 = *(void (**)(char *, uint64_t))v149;
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))v149)(v158, v85);
          uint64_t v80 = v144;
          if (v72 == v81)
          {
LABEL_29:
            uint64_t v121 = v151;
            v95(v140, v151);
            v95(v73, v121);
            v95(v145, v121);
            v95(v156, v121);
            return v150;
          }
        }
        if (__OFADD__(v81++, 1))
        {
          __break(1u);
          goto LABEL_36;
        }
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2409DF664@<X0>(uint64_t a1@<X8>)
{
  uint64_t v103 = a1;
  uint64_t v2 = sub_240A042C8();
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v92 = (char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_240A042E8();
  MEMORY[0x270FA5388](v4 - 8);
  os_log_type_t v88 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_240A028E8();
  uint64_t v81 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v80 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_240A028F8();
  uint64_t v79 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  uint64_t v78 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v83 = (char *)&v78 - v9;
  sub_2409E4850(0, &qword_268C9A4A8, MEMORY[0x263F8E628], MEMORY[0x263F1BB58], MEMORY[0x263EFCC40]);
  uint64_t v90 = v10;
  uint64_t v86 = *((void *)v10 - 1);
  MEMORY[0x270FA5388](v10);
  uint64_t v85 = (char *)&v78 - v11;
  sub_2409E25BC();
  uint64_t v93 = v12;
  uint64_t v91 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v89 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409E24C0();
  uint64_t v101 = v14;
  uint64_t v100 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v87 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409E1CD8(0, &qword_268C9A490, (uint64_t (*)(uint64_t))sub_2409E24C0, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v102 = (uint64_t)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v98 = (char *)&v78 - v19;
  uint64_t v20 = sub_240A04338();
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v99 = sub_240A04358();
  uint64_t v97 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  uint64_t v96 = (char *)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v95 = (char *)&v78 - v23;
  uint64_t v24 = sub_240A04128();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v78 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409D4060(0, &qword_268C9A0F0, MEMORY[0x263EFCB08]);
  uint64_t v104 = *(void *)(v28 - 8);
  uint64_t v105 = v28;
  MEMORY[0x270FA5388](v28);
  unint64_t v94 = (char *)&v78 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)&v78 - v31;
  MEMORY[0x270FA5388](v33);
  uint64_t v106 = (char *)&v78 - v34;
  uint64_t v35 = sub_240A043E8();
  uint64_t v36 = sub_240A043E8();
  uint64_t v37 = sub_240A043D8();
  uint64_t v38 = v37 - 1;
  if (__OFSUB__(v37, 1))
  {
    __break(1u);
LABEL_33:
    swift_once();
    goto LABEL_17;
  }
  BOOL v39 = v36 == v38 || v35 == 0;
  LODWORD(v35) = v39;
  if (v39)
  {
    unint64_t v1 = 0x268C99000uLL;
    if (qword_268C99348 != -1) {
      swift_once();
    }
    uint64_t v40 = &xmmword_268C9AAA8;
  }
  else
  {
    unint64_t v1 = 0x268C99000uLL;
    if (qword_268C99350 != -1) {
      swift_once();
    }
    uint64_t v40 = &xmmword_268C9AAD0;
  }
  uint64_t v41 = *((void *)v40 + 2);
  uint64_t v42 = *(void *)v40;
  uint64_t v43 = *((void *)v40 + 4);
  uint64_t v44 = *((void *)v40 + 1);
  uint64_t v45 = _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v116 = v42;
  uint64_t v117 = v44;
  uint64_t v118 = v41;
  uint64_t v119 = v45;
  uint64_t v120 = v43;
  sub_240A04118();
  if (qword_268C99340 != -1) {
    goto LABEL_33;
  }
LABEL_17:
  uint64_t v111 = qword_268C9AAA0;
  sub_240A04308();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v106, v32, v105);
  if (v35)
  {
    uint64_t v46 = v95;
    if (qword_268C99348 != -1) {
      swift_once();
    }
    uint64_t v47 = &xmmword_268C9AAA8;
  }
  else
  {
    uint64_t v46 = v95;
    if (*(void *)(v1 + 848) != -1) {
      swift_once();
    }
    uint64_t v47 = &xmmword_268C9AAD0;
  }
  uint64_t v48 = *((void *)v47 + 3);
  uint64_t v49 = *((void *)v47 + 2);
  uint64_t v50 = *(void *)v47;
  uint64_t v51 = *((void *)v47 + 4);
  uint64_t v52 = *((void *)v47 + 1);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_240A04328();
  uint64_t v111 = v50;
  uint64_t v112 = v52;
  uint64_t v113 = v49;
  uint64_t v114 = v48;
  uint64_t v115 = v51;
  uint64_t v53 = sub_240A04348();
  if (v36 == v38)
  {
    uint64_t v54 = 1;
    uint64_t v55 = v101;
    uint64_t v56 = v100;
    uint64_t v57 = (uint64_t)v98;
  }
  else
  {
    uint64_t v58 = v46;
    unint64_t v59 = v78;
    MEMORY[0x245602300](v53);
    uint64_t v60 = v80;
    sub_240A028D8();
    sub_240A028C8();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v60, v82);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v59, v84);
    sub_240A049A8();
    sub_240A042D8();
    sub_240A042B8();
    sub_2409E49C8(&qword_268C9A558, MEMORY[0x263F07258]);
    uint64_t v61 = v85;
    sub_240A041E8();
    uint64_t v57 = (uint64_t)v98;
    if (qword_268C99338 != -1) {
      swift_once();
    }
    unint64_t v62 = sub_2409E266C();
    uint64_t v63 = v89;
    uint64_t v64 = v90;
    sub_240A04318();
    (*(void (**)(char *, char *))(v86 + 8))(v61, v64);
    if (qword_268C99358 != -1) {
      swift_once();
    }
    uint64_t v110 = qword_268C9AAF8;
    unint64_t v107 = v64;
    unint64_t v108 = v62;
    swift_getOpaqueTypeConformance2();
    uint64_t v65 = v87;
    uint64_t v66 = v93;
    sub_240A04308();
    (*(void (**)(char *, uint64_t))(v91 + 8))(v63, v66);
    uint64_t v56 = v100;
    uint64_t v55 = v101;
    (*(void (**)(uint64_t, char *, uint64_t))(v100 + 32))(v57, v65, v101);
    uint64_t v54 = 0;
    uint64_t v46 = v58;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 56))(v57, v54, 1, v55);
  uint64_t v67 = v104;
  uint64_t v68 = v105;
  uint64_t v69 = v94;
  (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v94, v106, v105);
  unint64_t v107 = v69;
  uint64_t v70 = v97;
  char v71 = v96;
  uint64_t v72 = v99;
  (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v96, v46, v99);
  unint64_t v108 = (unint64_t)v71;
  uint64_t v73 = v46;
  uint64_t v74 = v102;
  sub_2409E4604(v57, v102, &qword_268C9A490, (uint64_t (*)(uint64_t))sub_2409E24C0);
  uint64_t v109 = v74;
  sub_2409D9440(&v107, v103);
  sub_2409E4704(v57, &qword_268C9A490, (uint64_t (*)(uint64_t))sub_2409E24C0);
  unint64_t v75 = *(void (**)(char *, uint64_t))(v70 + 8);
  v75(v73, v72);
  uint64_t v76 = *(void (**)(char *, uint64_t))(v67 + 8);
  v76(v106, v68);
  sub_2409E4704(v74, &qword_268C9A490, (uint64_t (*)(uint64_t))sub_2409E24C0);
  v75(v71, v72);
  return ((uint64_t (*)(char *, uint64_t))v76)(v69, v68);
}

uint64_t sub_2409E0400@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v75[1] = a2;
  uint64_t v91 = a3;
  sub_2409E37D4();
  uint64_t v90 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v87 = (char *)v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240A042C8();
  MEMORY[0x270FA5388](v6 - 8);
  v75[3] = (char *)v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_240A042E8();
  MEMORY[0x270FA5388](v8 - 8);
  v75[2] = (char *)v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409E2F90();
  uint64_t v80 = v10;
  uint64_t v77 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v76 = (char *)v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409E2EDC();
  uint64_t v81 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v79 = (char *)v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409E2DDC();
  uint64_t v86 = v15;
  uint64_t v84 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v78 = (char *)v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409E1CD8(0, &qword_268C9A4F0, (uint64_t (*)(uint64_t))sub_2409E2DDC, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v89 = (uint64_t)v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v85 = (char *)v75 - v20;
  uint64_t v21 = sub_240A04128();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)v75 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409D4060(0, &qword_268C9A0F0, MEMORY[0x263EFCB08]);
  uint64_t v92 = *(void *)(v25 - 8);
  uint64_t v93 = v25;
  MEMORY[0x270FA5388](v25);
  os_log_type_t v88 = (char *)v75 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)v75 - v28;
  MEMORY[0x270FA5388](v30);
  unint64_t v94 = (char *)v75 - v31;
  uint64_t v32 = sub_240A043F8();
  uint64_t v33 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v35 = (char *)v75 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_240A043E8();
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v35, a1, v32);
  if (v36)
  {
    uint64_t v83 = v24;
    uint64_t v37 = v13;
    uint64_t v13 = sub_240A043E8();
    uint64_t v38 = sub_240A043D8();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v32);
    if (__OFSUB__(v38, 1))
    {
      __break(1u);
LABEL_21:
      swift_once();
      goto LABEL_16;
    }
    BOOL v39 = v13 == v38 - 1;
    uint64_t v13 = v37;
    uint64_t v24 = v83;
    if (!v39)
    {
      if (qword_268C99350 != -1) {
        swift_once();
      }
      uint64_t v40 = &xmmword_268C9AAD0;
      goto LABEL_11;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v32);
  }
  if (qword_268C99348 != -1) {
    swift_once();
  }
  uint64_t v40 = &xmmword_268C9AAA8;
LABEL_11:
  uint64_t v41 = *((void *)v40 + 2);
  uint64_t v42 = *(void *)v40;
  uint64_t v43 = *((void *)v40 + 4);
  uint64_t v44 = *((void *)v40 + 1);
  uint64_t v45 = _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v98 = v42;
  uint64_t v99 = v44;
  uint64_t v100 = v41;
  uint64_t v101 = v45;
  uint64_t v102 = v43;
  sub_240A04118();
  if (qword_268C99340 != -1) {
    swift_once();
  }
  uint64_t v95 = qword_268C9AAA0;
  sub_240A04308();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  uint64_t v46 = *(void (**)(uint64_t, char *, uint64_t))(v92 + 32);
  uint64_t v83 = (char *)(v92 + 32);
  uint64_t v82 = v46;
  v46((uint64_t)v94, v29, v93);
  sub_240A043C8();
  if (v96)
  {
    uint64_t v47 = 1;
    uint64_t v48 = v86;
    uint64_t v49 = v87;
    uint64_t v50 = (uint64_t)v85;
    uint64_t v51 = v84;
    goto LABEL_19;
  }
  uint64_t v52 = sub_240A04998();
  MEMORY[0x270FA5388](v52);
  sub_240A042D8();
  sub_240A042B8();
  sub_2409E43AC(0, &qword_268C9A510, (uint64_t (*)(uint64_t))sub_2409E3060, MEMORY[0x263F18868], MEMORY[0x263F18E28]);
  uint64_t v73 = v53;
  uint64_t v74 = sub_2409E3118(&qword_268C9A518, &qword_268C9A510, (uint64_t (*)(uint64_t))sub_2409E3060, (void (*)(void))sub_2409D44C4);
  char v71 = sub_2409E38AC;
  uint64_t v72 = &v69;
  char v70 = 0;
  uint64_t v69 = 0;
  uint64_t v32 = (uint64_t)v76;
  sub_240A041F8();
  if (qword_268C99338 != -1) {
    goto LABEL_21;
  }
LABEL_16:
  uint64_t v54 = sub_2409E49C8(&qword_268C9A520, (void (*)(uint64_t))sub_2409E2F90);
  uint64_t v55 = v79;
  uint64_t v56 = v80;
  sub_240A04318();
  (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v32, v56);
  uint64_t v49 = v87;
  uint64_t v51 = v84;
  if (qword_268C99358 != -1) {
    swift_once();
  }
  uint64_t v96 = v54;
  uint64_t v97 = qword_268C9AAF8;
  uint64_t v95 = v56;
  swift_getOpaqueTypeConformance2();
  uint64_t v57 = v78;
  uint64_t v58 = v81;
  sub_240A04308();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v55, v58);
  uint64_t v50 = (uint64_t)v85;
  uint64_t v48 = v86;
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v85, v57, v86);
  uint64_t v47 = 0;
LABEL_19:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v50, v47, 1, v48);
  uint64_t v59 = v92;
  uint64_t v60 = v93;
  uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v92 + 16);
  unint64_t v62 = v88;
  v61(v88, v94, v93);
  uint64_t v63 = v89;
  sub_2409E4604(v50, v89, &qword_268C9A4F0, (uint64_t (*)(uint64_t))sub_2409E2DDC);
  v61(v49, v62, v60);
  sub_2409E3278();
  uint64_t v64 = v90;
  uint64_t v65 = (uint64_t)&v49[*(int *)(v90 + 48)];
  sub_2409E4604(v63, v65, &qword_268C9A4F0, (uint64_t (*)(uint64_t))sub_2409E2DDC);
  uint64_t v66 = v91;
  v82(v91, v49, v60);
  sub_2409E4684(v65, v66 + *(int *)(v64 + 48), &qword_268C9A4F0, (uint64_t (*)(uint64_t))sub_2409E2DDC);
  sub_2409E4704(v50, &qword_268C9A4F0, (uint64_t (*)(uint64_t))sub_2409E2DDC);
  uint64_t v67 = *(void (**)(char *, uint64_t))(v59 + 8);
  v67(v94, v60);
  sub_2409E4704(v63, &qword_268C9A4F0, (uint64_t (*)(uint64_t))sub_2409E2DDC);
  return ((uint64_t (*)(char *, uint64_t))v67)(v62, v60);
}

double sub_2409E1008@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v14 = sub_2409E40D4(a1, -a3);
  char v15 = v4;
  sub_2409B2D2C();
  uint64_t v5 = sub_240A04878();
  uint64_t v7 = v6;
  char v9 = v8;
  uint64_t v11 = v10;
  uint64_t KeyPath = swift_getKeyPath();
  sub_240A04988();
  sub_240A046E8();
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v7;
  *(unsigned char *)(a2 + 16) = v9 & 1;
  *(void *)(a2 + 24) = v11;
  *(void *)(a2 + 32) = KeyPath;
  *(void *)(a2 + 40) = 0x3FF0000000000000;
  *(void *)(a2 + 48) = v14;
  *(unsigned char *)(a2 + 56) = v15;
  *(void *)(a2 + 64) = v16;
  *(unsigned char *)(a2 + 72) = v17;
  double result = *(double *)&v18;
  *(_OWORD *)(a2 + 80) = v18;
  return result;
}

uint64_t sub_2409E10E4()
{
  sub_2409E375C(v0 + OBJC_IVAR____TtC16HearingAppPlugin29AudiogramPDFLongitudinalChart_chartModel, type metadata accessor for AudiogramPDFLongitudinalChart.Model);

  return swift_deallocClassInstance();
}

uint64_t sub_2409E115C()
{
  return type metadata accessor for AudiogramPDFLongitudinalChart(0);
}

uint64_t type metadata accessor for AudiogramPDFLongitudinalChart(uint64_t a1)
{
  return sub_2409A1004(a1, (uint64_t *)&unk_268C9A3F0);
}

uint64_t sub_2409E1184()
{
  uint64_t result = type metadata accessor for AudiogramPDFLongitudinalChart.Model(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for AudiogramPDFLongitudinalChart.Model(uint64_t a1)
{
  return sub_2409A1004(a1, qword_268C9A400);
}

uint64_t *sub_2409E1240(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    char v8 = (char *)a2 + v6;
    uint64_t v9 = sub_240A02758();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_2409E1324(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_240A02758();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_2409E139C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_240A02758();
  char v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  v8(v5, v6, v7);
  return a1;
}

void *sub_2409E1434(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  char v8 = (char *)a2 + v6;
  uint64_t v9 = sub_240A02758();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *sub_2409E14C8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_240A02758();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_2409E1544(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  char v8 = (char *)a2 + v6;
  uint64_t v9 = sub_240A02758();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_2409E15D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2409E15E4);
}

uint64_t sub_2409E15E4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_240A02758();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_2409E1694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2409E16A8);
}

void *sub_2409E16A8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_240A02758();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2409E1750()
{
  uint64_t result = sub_240A02758();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2409E17EC@<X0>(uint64_t a1@<X8>)
{
  return sub_2409D9D64(a1);
}

uint64_t sub_2409E1810()
{
  return 0x406AC00000000000;
}

uint64_t sub_2409E1820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2409E49C8((unint64_t *)&qword_268C99600, (void (*)(uint64_t))type metadata accessor for AudiogramPDFLongitudinalChart);

  return MEMORY[0x270F34BE8](a1, a2, a3, v6);
}

uint64_t sub_2409E18A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2409E18D4(a1, a2, a3, MEMORY[0x263F44870]);
}

uint64_t sub_2409E18BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2409E18D4(a1, a2, a3, MEMORY[0x263F44878]);
}

uint64_t sub_2409E18D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = sub_2409E49C8((unint64_t *)&qword_268C99600, (void (*)(uint64_t))type metadata accessor for AudiogramPDFLongitudinalChart);

  return a4(a1, a2, v6);
}

uint64_t sub_2409E1964(uint64_t a1)
{
  int v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  uint64_t v4 = sub_2409E49C8(&qword_268C9A420, (void (*)(uint64_t))type metadata accessor for AudiogramPDFLongitudinalChart);
  *int v3 = v1;
  v3[1] = sub_2409A2324;
  return MEMORY[0x270F33478](a1, v4);
}

uint64_t sub_2409E1A40()
{
  return sub_2409E49C8(&qword_268C9A418, (void (*)(uint64_t))type metadata accessor for AudiogramPDFLongitudinalChart);
}

uint64_t sub_2409E1A88()
{
  return sub_2409E49C8(&qword_268C9A420, (void (*)(uint64_t))type metadata accessor for AudiogramPDFLongitudinalChart);
}

uint64_t sub_2409E1AD0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2409E1AEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_2409E1B54(uint64_t a1)
{
}

void sub_2409E1B9C()
{
  if (!qword_268C9A430)
  {
    sub_2409E1C10();
    sub_2409D330C();
    unint64_t v0 = sub_240A04138();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A430);
    }
  }
}

void sub_2409E1C10()
{
  if (!qword_268C9A298)
  {
    sub_2409E1CD8(255, &qword_268C9A2A0, (uint64_t (*)(uint64_t))sub_2409D6360, MEMORY[0x263F8D488]);
    sub_2409D63CC();
    sub_2409D68C0();
    unint64_t v0 = sub_240A04968();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A298);
    }
  }
}

void sub_2409E1CD8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2409E1D3C()
{
  return sub_2409E49C8(&qword_268C9A308, (void (*)(uint64_t))sub_2409D6604);
}

unint64_t sub_2409E1D70()
{
  unint64_t result = qword_268C9A438;
  if (!qword_268C9A438)
  {
    sub_2409E1B9C();
    sub_2409D693C();
    sub_2409D4060(255, &qword_268C9A068, MEMORY[0x263EFCD68]);
    sub_240A04398();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A438);
  }
  return result;
}

unint64_t sub_2409E1E94()
{
  unint64_t result = qword_268C9A320;
  if (!qword_268C9A320)
  {
    sub_2409D63CC();
    sub_2409D6A98();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A320);
  }
  return result;
}

void sub_2409E1F0C()
{
  if (!qword_268C9A440)
  {
    sub_2409E1B54(255);
    sub_240A04808();
    unint64_t v0 = sub_240A04708();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A440);
    }
  }
}

void sub_2409E1F74()
{
  if (!qword_268C9A448)
  {
    sub_2409E1F0C();
    sub_2409E2018();
    sub_2409E20AC();
    sub_2409E2184();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9A448);
    }
  }
}

void sub_2409E2018()
{
  if (!qword_268C9A450)
  {
    sub_240A02978();
    sub_2409E49C8(&qword_268C9A458, MEMORY[0x263F07490]);
    unint64_t v0 = sub_240A04BF8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A450);
    }
  }
}

unint64_t sub_2409E20AC()
{
  unint64_t result = qword_268C9A460;
  if (!qword_268C9A460)
  {
    sub_2409E1F0C();
    sub_2409E49C8(&qword_268C9A468, sub_2409E1B54);
    sub_2409E49C8(&qword_268C9A0C8, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A460);
  }
  return result;
}

unint64_t sub_2409E2184()
{
  unint64_t result = qword_268C9A470;
  if (!qword_268C9A470)
  {
    sub_2409E2018();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A470);
  }
  return result;
}

void sub_2409E21EC()
{
  if (!qword_268C9A478)
  {
    sub_2409E1F74();
    sub_2409E2310(255);
    sub_2409E1F0C();
    sub_2409E2018();
    sub_2409E20AC();
    sub_2409E2184();
    swift_getOpaqueTypeConformance2();
    sub_2409E49C8(&qword_268C9A4C8, sub_2409E2310);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9A478);
    }
  }
}

void sub_2409E2310(uint64_t a1)
{
}

void sub_2409E2358(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_2409E23D8()
{
  if (!qword_268C9A488)
  {
    sub_2409D4060(255, &qword_268C9A0F0, MEMORY[0x263EFCB08]);
    sub_240A04358();
    sub_2409E1CD8(255, &qword_268C9A490, (uint64_t (*)(uint64_t))sub_2409E24C0, MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_240A04138();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A488);
    }
  }
}

void sub_2409E24C0()
{
  if (!qword_268C9A498)
  {
    sub_2409E25BC();
    sub_2409E4850(255, &qword_268C9A4A8, MEMORY[0x263F8E628], MEMORY[0x263F1BB58], MEMORY[0x263EFCC40]);
    sub_2409E266C();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9A498);
    }
  }
}

void sub_2409E25BC()
{
  if (!qword_268C9A4A0)
  {
    sub_2409E4850(255, &qword_268C9A4A8, MEMORY[0x263F8E628], MEMORY[0x263F1BB58], MEMORY[0x263EFCC40]);
    sub_2409E266C();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9A4A0);
    }
  }
}

unint64_t sub_2409E266C()
{
  unint64_t result = qword_268C9A4B0;
  if (!qword_268C9A4B0)
  {
    sub_2409E4850(255, &qword_268C9A4A8, MEMORY[0x263F8E628], MEMORY[0x263F1BB58], MEMORY[0x263EFCC40]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A4B0);
  }
  return result;
}

unint64_t sub_2409E26F0()
{
  unint64_t result = qword_268C9A4B8;
  if (!qword_268C9A4B8)
  {
    sub_2409E23D8();
    sub_240A04128();
    swift_getOpaqueTypeConformance2();
    sub_2409E27BC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A4B8);
  }
  return result;
}

unint64_t sub_2409E27BC()
{
  unint64_t result = qword_268C9A4C0;
  if (!qword_268C9A4C0)
  {
    sub_2409E1CD8(255, &qword_268C9A490, (uint64_t (*)(uint64_t))sub_2409E24C0, MEMORY[0x263F8D8F0]);
    sub_2409E25BC();
    sub_2409E4850(255, &qword_268C9A4A8, MEMORY[0x263F8E628], MEMORY[0x263F1BB58], MEMORY[0x263EFCC40]);
    sub_2409E266C();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A4C0);
  }
  return result;
}

void sub_2409E2904()
{
  if (!qword_268C9A4D0)
  {
    sub_2409E21EC();
    sub_2409E4850(255, &qword_268C9A0B0, MEMORY[0x263F8D538], MEMORY[0x263F8D560], MEMORY[0x263F8D1A0]);
    sub_2409E1F74();
    sub_2409E2310(255);
    sub_2409E1F0C();
    sub_2409E2018();
    sub_2409E20AC();
    sub_2409E2184();
    swift_getOpaqueTypeConformance2();
    sub_2409E49C8(&qword_268C9A4C8, sub_2409E2310);
    swift_getOpaqueTypeConformance2();
    sub_2409D3CC8();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9A4D0);
    }
  }
}

void sub_2409E2AA4()
{
  if (!qword_268C9A4D8)
  {
    sub_2409E2904();
    sub_2409E2CB8(255);
    sub_2409E21EC();
    sub_2409E4850(255, &qword_268C9A0B0, MEMORY[0x263F8D538], MEMORY[0x263F8D560], MEMORY[0x263F8D1A0]);
    sub_2409E1F74();
    sub_2409E2310(255);
    sub_2409E1F0C();
    sub_2409E2018();
    sub_2409E20AC();
    sub_2409E2184();
    swift_getOpaqueTypeConformance2();
    sub_2409E49C8(&qword_268C9A4C8, sub_2409E2310);
    swift_getOpaqueTypeConformance2();
    sub_2409D3CC8();
    swift_getOpaqueTypeConformance2();
    sub_2409E49C8(&qword_268C9A538, sub_2409E2CB8);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9A4D8);
    }
  }
}

void sub_2409E2CB8(uint64_t a1)
{
}

void sub_2409E2D00()
{
  if (!qword_268C9A4E8)
  {
    sub_2409D4060(255, &qword_268C9A0F0, MEMORY[0x263EFCB08]);
    sub_2409E1CD8(255, &qword_268C9A4F0, (uint64_t (*)(uint64_t))sub_2409E2DDC, MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_240A04138();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A4E8);
    }
  }
}

void sub_2409E2DDC()
{
  if (!qword_268C9A4F8)
  {
    sub_2409E2EDC();
    sub_2409E2F90();
    sub_2409E49C8(&qword_268C9A520, (void (*)(uint64_t))sub_2409E2F90);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9A4F8);
    }
  }
}

void sub_2409E2EDC()
{
  if (!qword_268C9A500)
  {
    sub_2409E2F90();
    sub_2409E49C8(&qword_268C9A520, (void (*)(uint64_t))sub_2409E2F90);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9A500);
    }
  }
}

void sub_2409E2F90()
{
  if (!qword_268C9A508)
  {
    sub_2409E43AC(255, &qword_268C9A510, (uint64_t (*)(uint64_t))sub_2409E3060, MEMORY[0x263F18868], MEMORY[0x263F18E28]);
    sub_2409E3118(&qword_268C9A518, &qword_268C9A510, (uint64_t (*)(uint64_t))sub_2409E3060, (void (*)(void))sub_2409D44C4);
    unint64_t v0 = sub_240A04208();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A508);
    }
  }
}

void sub_2409E3060()
{
  if (!qword_268C9A128)
  {
    sub_2409E30C0();
    unint64_t v0 = sub_240A04708();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A128);
    }
  }
}

void sub_2409E30C0()
{
  if (!qword_268C9A130)
  {
    unint64_t v0 = sub_240A047F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A130);
    }
  }
}

uint64_t sub_2409E3118(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2409E43AC(255, a2, a3, MEMORY[0x263F18868], MEMORY[0x263F18E28]);
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2409E31B4()
{
  unint64_t result = qword_268C9A528;
  if (!qword_268C9A528)
  {
    sub_2409E2D00();
    sub_240A04128();
    swift_getOpaqueTypeConformance2();
    sub_2409E3278();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A528);
  }
  return result;
}

unint64_t sub_2409E3278()
{
  unint64_t result = qword_268C9A530;
  if (!qword_268C9A530)
  {
    sub_2409E1CD8(255, &qword_268C9A4F0, (uint64_t (*)(uint64_t))sub_2409E2DDC, MEMORY[0x263F8D8F0]);
    sub_2409E2EDC();
    sub_2409E2F90();
    sub_2409E49C8(&qword_268C9A520, (void (*)(uint64_t))sub_2409E2F90);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A530);
  }
  return result;
}

void sub_2409E33C4()
{
  if (!qword_268C9A540)
  {
    sub_2409E2AA4();
    sub_240A04258();
    sub_2409E2904();
    sub_2409E2CB8(255);
    sub_2409E21EC();
    sub_2409E4850(255, &qword_268C9A0B0, MEMORY[0x263F8D538], MEMORY[0x263F8D560], MEMORY[0x263F8D1A0]);
    sub_2409E1F74();
    sub_2409E2310(255);
    sub_2409E1F0C();
    sub_2409E2018();
    sub_2409E20AC();
    sub_2409E2184();
    swift_getOpaqueTypeConformance2();
    sub_2409E49C8(&qword_268C9A4C8, sub_2409E2310);
    swift_getOpaqueTypeConformance2();
    sub_2409D3CC8();
    swift_getOpaqueTypeConformance2();
    sub_2409E49C8(&qword_268C9A538, sub_2409E2CB8);
    swift_getOpaqueTypeConformance2();
    sub_2409E49C8(&qword_268C9A208, MEMORY[0x263EFCC70]);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9A540);
    }
  }
}

uint64_t sub_2409E3658@<X0>(uint64_t a1@<X8>)
{
  return sub_2409DB414(*(void *)(v1 + 16), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40), *(char **)(v1 + 48), *(unsigned char *)(v1 + 56), *(void *)(v1 + 64), a1);
}

uint64_t sub_2409E3674()
{
  return sub_2409DBE94(*(void *)(v0 + 16));
}

uint64_t sub_2409E3698()
{
  return sub_2409DC07C();
}

void sub_2409E36C4()
{
  if (!qword_268C9A548)
  {
    sub_2409E33C4();
    sub_2409E1CD8(255, &qword_268C9A218, MEMORY[0x263F18DD8], MEMORY[0x263F1A418]);
    unint64_t v0 = sub_240A04708();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A548);
    }
  }
}

uint64_t sub_2409E375C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2409E37BC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2409E37CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2409E0400(a1, *(void *)(v2 + 16), a2);
}

void sub_2409E37D4()
{
  if (!qword_268C9A550)
  {
    sub_2409D4060(255, &qword_268C9A0F0, MEMORY[0x263EFCB08]);
    sub_2409E1CD8(255, &qword_268C9A4F0, (uint64_t (*)(uint64_t))sub_2409E2DDC, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C9A550);
    }
  }
}

double sub_2409E38AC@<D0>(uint64_t a1@<X8>)
{
  return sub_2409E1008(*(unsigned __int8 *)(v1 + 24), a1, *(double *)(v1 + 16));
}

uint64_t sub_2409E38BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_2409E4850(0, (unint64_t *)&qword_26AFD48E0, MEMORY[0x263F8D310], MEMORY[0x263F8D320], MEMORY[0x263F8DBD8]);
    uint64_t v3 = sub_240A051C8();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_240A053F8();
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      sub_240A04C98();
      uint64_t result = sub_240A05418();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_240A05368(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_240A05368();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *uint64_t v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

void sub_2409E3A88(unint64_t a1)
{
}

uint64_t sub_2409E3AAC(uint64_t a1)
{
  uint64_t v2 = sub_240A03568();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_2409E4934();
    uint64_t v9 = sub_240A051C8();
    uint64_t v10 = 0;
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_2409E49C8(&qword_268C9A5C0, MEMORY[0x263F43F70]);
      uint64_t v16 = sub_240A04BC8();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_2409E49C8(&qword_268C9A5C8, MEMORY[0x263F43F70]);
          char v23 = sub_240A04C08();
          uint64_t v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_2409E3DC0(uint64_t a1)
{
  uint64_t v2 = sub_240A02A58();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_2409E4318();
    uint64_t v9 = sub_240A051C8();
    uint64_t v10 = 0;
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_2409E49C8(&qword_268C9A580, MEMORY[0x263F07908]);
      uint64_t v16 = sub_240A04BC8();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_2409E49C8(&qword_268C9A588, MEMORY[0x263F07908]);
          char v23 = sub_240A04C08();
          uint64_t v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_2409E40D4(uint64_t result, double a2)
{
  if (result)
  {
    if ((~*(void *)&a2 & 0x7FF0000000000000) != 0)
    {
      if (a2 > -9.22337204e18)
      {
        if (a2 < 9.22337204e18)
        {
          uint64_t v2 = sub_240A05348();
          sub_240A04CA8();
          return v2;
        }
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if ((~*(void *)&a2 & 0x7FF0000000000000) == 0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (a2 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (a2 >= 9.22337204e18)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  return sub_240A05348();
}

uint64_t sub_2409E41D4@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_240A04718();
  *a1 = v3;
  return result;
}

uint64_t sub_2409E4200()
{
  return sub_240A04728();
}

void sub_2409E4228()
{
  if (!qword_268C9A560)
  {
    sub_2409D4060(255, &qword_268C9A0F0, MEMORY[0x263EFCB08]);
    sub_240A04358();
    sub_2409E1CD8(255, &qword_268C9A490, (uint64_t (*)(uint64_t))sub_2409E24C0, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268C9A560);
    }
  }
}

void sub_2409E4318()
{
  if (!qword_268C9A578)
  {
    sub_240A02A58();
    sub_2409E49C8(&qword_268C9A580, MEMORY[0x263F07908]);
    unint64_t v0 = sub_240A051D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A578);
    }
  }
}

void sub_2409E43AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, v9, a4);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_2409E4418()
{
  return MEMORY[0x270FA0238](v0, 49, 7);
}

uint64_t sub_2409E4428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2409DC21C(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24), *(unsigned __int8 *)(v3 + 32), *(void *)(v3 + 40), *(unsigned __int8 *)(v3 + 48), a3);
}

uint64_t sub_2409E443C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2409E4474(char *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  uint64_t v4 = *(void *)a1;
  sub_2409D6360();
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

void sub_2409E44D0()
{
  if (!qword_268C9A598)
  {
    sub_2409E1CD8(255, &qword_268C9A2B8, (uint64_t (*)(uint64_t))sub_2409D6464, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C9A598);
    }
  }
}

void sub_2409E4564()
{
  if (!qword_268C9A5A0)
  {
    sub_2409D6498();
    sub_2409E1CD8(255, &qword_268C9A048, (uint64_t (*)(uint64_t))sub_2409D3194, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C9A5A0);
    }
  }
}

uint64_t sub_2409E4604(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_2409E1CD8(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_2409E4684(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_2409E1CD8(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_2409E4704(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_2409E1CD8(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2409E4774@<X0>(uint64_t a1@<X8>)
{
  return sub_2409DE0F0(*(unsigned char *)(v1 + 16), a1);
}

double sub_2409E477C@<D0>(uint64_t a1@<X8>)
{
  return sub_2409DE18C(*(unsigned char *)(v1 + 16), a1);
}

void sub_2409E4784()
{
  if (!qword_268C9A5B0)
  {
    sub_240A02978();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C9A5B0);
    }
  }
}

uint64_t sub_2409E47EC(uint64_t a1, uint64_t a2)
{
  sub_2409E2018();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2409E4850(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_2409E48A0()
{
  if (!qword_26AFD48D8)
  {
    sub_240A02B08();
    sub_2409E49C8(&qword_26AFD4568, MEMORY[0x263F45588]);
    unint64_t v0 = sub_240A051D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD48D8);
    }
  }
}

void sub_2409E4934()
{
  if (!qword_268C9A5B8)
  {
    sub_240A03568();
    sub_2409E49C8(&qword_268C9A5C0, MEMORY[0x263F43F70]);
    unint64_t v0 = sub_240A051D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A5B8);
    }
  }
}

uint64_t sub_2409E49C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2409E4A14()
{
  unint64_t result = qword_268C9A5D0;
  if (!qword_268C9A5D0)
  {
    sub_2409E36C4();
    sub_2409E2AA4();
    sub_240A04258();
    sub_2409E2904();
    sub_2409E2CB8(255);
    sub_2409E21EC();
    sub_2409E4850(255, &qword_268C9A0B0, MEMORY[0x263F8D538], MEMORY[0x263F8D560], MEMORY[0x263F8D1A0]);
    sub_2409E1F74();
    sub_2409E2310(255);
    sub_2409E1F0C();
    sub_2409E2018();
    sub_2409E20AC();
    sub_2409E2184();
    swift_getOpaqueTypeConformance2();
    sub_2409E49C8(&qword_268C9A4C8, sub_2409E2310);
    swift_getOpaqueTypeConformance2();
    sub_2409D3CC8();
    swift_getOpaqueTypeConformance2();
    sub_2409E49C8(&qword_268C9A538, sub_2409E2CB8);
    swift_getOpaqueTypeConformance2();
    sub_2409E49C8(&qword_268C9A208, MEMORY[0x263EFCC70]);
    swift_getOpaqueTypeConformance2();
    sub_2409D7104();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A5D0);
  }
  return result;
}

uint64_t AudiogramAllDataViewModel.__allocating_init(healthStore:)(void *a1)
{
  type metadata accessor for AudiogramAllDataViewModel();
  swift_allocObject();
  uint64_t v2 = sub_2409E8504(a1, 1);

  return v2;
}

uint64_t type metadata accessor for AudiogramAllDataViewModel()
{
  uint64_t result = qword_268C9A5E0;
  if (!qword_268C9A5E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AudiogramAllDataViewModel.unitTest_didPublishAudiograms.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC16HearingAppPlugin25AudiogramAllDataViewModel_unitTest_didPublishAudiograms);
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_2409A5118(*v1);
  return v2;
}

uint64_t AudiogramAllDataViewModel.unitTest_didPublishAudiograms.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC16HearingAppPlugin25AudiogramAllDataViewModel_unitTest_didPublishAudiograms);
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return sub_2409A5128(v6);
}

uint64_t (*AudiogramAllDataViewModel.unitTest_didPublishAudiograms.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_2409E4E80(_OWORD *a1, void *a2)
{
  uint64_t v3 = (_OWORD *)(*a2 + OBJC_IVAR____TtC16HearingAppPlugin25AudiogramAllDataViewModel_dataSource);
  swift_beginAccess();
  *uint64_t v3 = *a1;
  swift_unknownObjectRetain();
  return sub_240A03B98();
}

uint64_t AudiogramAllDataViewModel.dataSource.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_2409E4F40(uint64_t a1, void *a2)
{
  sub_2409E8DAC();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240A029C8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A029B8();
  uint64_t v13 = sub_240A02988();
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v21[1] = a1;
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a2;
  void v16[3] = v13;
  uint64_t v17 = v21[0];
  v16[4] = v15;
  v16[5] = v17;
  sub_240986A18();
  sub_2409E8F8C(0, &qword_268C998E8, MEMORY[0x263F44068], MEMORY[0x263F8D488]);
  sub_2409E8ED4(&qword_268C9A678, (void (*)(uint64_t))sub_240986A18);
  id v18 = a2;
  sub_240A04648();
  swift_release();
  sub_2409E8ED4(&qword_268C9A680, (void (*)(uint64_t))sub_2409E8DAC);
  sub_240A04618();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_240A039D8();
  sub_240A033D8();
  swift_release();
  sub_2409A413C();
  sub_2409E8ED4(&qword_268C99910, (void (*)(uint64_t))sub_2409A413C);
  uint64_t v19 = sub_240A033E8();
  swift_release();
  sub_2409E8ED4(&qword_268C99918, (void (*)(uint64_t))sub_2409A41E4);
  return v19;
}

uint64_t sub_2409E52E0@<X0>(unint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  id v18 = a4;
  uint64_t v7 = sub_240A03638();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *a1;
  id v12 = a2;
  sub_2409E8150(v11, v12, a3);
  uint64_t v14 = v13;

  sub_2409C59FC(v14);
  swift_bridgeObjectRelease();
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_240A03628();
  sub_2409E8F8C(0, &qword_268C998F0, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
  unint64_t v15 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_240A06870;
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))(v16 + v15, v10, v7);
  *id v18 = v16;
  return result;
}

uint64_t sub_2409E54AC@<X0>(void **a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  sub_2409E5528(*a1, a2, a3);
  uint64_t v4 = sub_240A03708();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a3, 0, 1, v4);
}

uint64_t sub_2409E5528@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v64 = a3;
  uint64_t v4 = sub_240A03C88();
  uint64_t v62 = *(void *)(v4 - 8);
  uint64_t v63 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v61 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240A03698();
  uint64_t v58 = *(void *)(v6 - 8);
  uint64_t v59 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v57 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2409E8F8C(0, &qword_268C99D78, MEMORY[0x263F81EE0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v56 = (char *)&v45 - v10;
  sub_2409E8F8C(0, &qword_268C99D80, MEMORY[0x263F81DF8], v8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v53 = (char *)&v45 - v12;
  uint64_t v13 = sub_240A04068();
  uint64_t v54 = *(void *)(v13 - 8);
  uint64_t v55 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v52 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_240A04028();
  uint64_t v50 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_240A029C8();
  uint64_t v17 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_240A02978();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  char v23 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_240A040F8();
  uint64_t v45 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v25 = (char *)&v45 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A040E8();
  id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  objc_msgSend(v26, sel_setDateStyle_, 2);
  objc_msgSend(v26, sel_setTimeStyle_, 1);
  uint64_t v49 = a1;
  sub_2409E5EC8(a1);
  sub_240A040D8();
  id v27 = objc_msgSend(a1, sel_endDate);
  sub_240A02948();

  BOOL v28 = (void *)sub_240A02938();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  id v29 = objc_msgSend(v26, sel_stringFromDate_, v28);

  sub_240A04C58();
  sub_240A04098();
  sub_240A029B8();
  uint64_t v48 = sub_240A02988();
  uint64_t v47 = v30;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v46);
  uint64_t v31 = v65;
  v67[3] = v65;
  v67[4] = MEMORY[0x263F81F20];
  uint64_t v32 = sub_24097F464(v67);
  uint64_t v33 = v45;
  (*(void (**)(uint64_t *, char *, uint64_t))(v45 + 16))(v32, v25, v31);
  sub_2409E8F8C(0, &qword_268C99D88, MEMORY[0x263F81E08], MEMORY[0x263F8E0F8]);
  sub_240A04078();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_240A06870;
  uint64_t v34 = v50;
  uint64_t v35 = v51;
  (*(void (**)(char *, void, uint64_t))(v50 + 104))(v16, *MEMORY[0x263F81DE8], v51);
  uint64_t v36 = sub_240A04038();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v53, 1, 1, v36);
  uint64_t v37 = v52;
  sub_240A04058();
  sub_240A04048();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v37, v55);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v16, v35);
  uint64_t v38 = (void *)swift_allocObject();
  BOOL v39 = v49;
  uint64_t v40 = v60;
  _OWORD v38[2] = v49;
  v38[3] = v40;
  v38[4] = v66;
  uint64_t v41 = sub_240A04088();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v56, 1, 1, v41);
  (*(void (**)(char *, void, uint64_t))(v58 + 104))(v57, *MEMORY[0x263F440E0], v59);
  (*(void (**)(char *, void, uint64_t))(v62 + 104))(v61, *MEMORY[0x263F446D0], v63);
  id v42 = v39;
  id v43 = v40;
  sub_240A036F8();

  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v25, v65);
}

uint64_t sub_2409E5DF4()
{
  uint64_t v0 = sub_240A036C8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A036A8();
  uint64_t v4 = sub_240A036B8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_2409E5EC8(void *a1)
{
  uint64_t v2 = sub_2409E60F8(a1, 0);
  uint64_t v4 = v3;
  uint64_t v5 = sub_2409E60F8(a1, 1);
  uint64_t v7 = v6;
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  sub_240A02828();
  sub_2409A6FA8();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_240A06800;
  uint64_t v9 = MEMORY[0x263F8D310];
  *(void *)(v8 + 56) = MEMORY[0x263F8D310];
  unint64_t v10 = sub_2409800D4();
  *(void *)(v8 + 32) = v2;
  *(void *)(v8 + 40) = v4;
  *(void *)(v8 + 96) = v9;
  *(void *)(v8 + 104) = v10;
  *(void *)(v8 + 64) = v10;
  *(void *)(v8 + 72) = v5;
  *(void *)(v8 + 80) = v7;
  uint64_t v11 = sub_240A04C28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

void sub_2409E6030(void *a1, void *a2, void *a3)
{
  objc_allocWithZone((Class)type metadata accessor for AudiogramAllDataChartViewController());
  id v6 = a3;
  id v7 = a2;
  id v10 = sub_2409EB324(v6, v7);

  id v8 = objc_msgSend(a1, sel_navigationController);
  if (v8)
  {
    uint64_t v9 = v8;
    objc_msgSend(v8, sel_pushViewController_animated_, v10, 1);
  }
}

uint64_t sub_2409E60F8(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_240A04018();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_240A02718();
  uint64_t v8 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  id v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v11 = 0;
    if (a2 != 1) {
      goto LABEL_6;
    }
    uint64_t v12 = &selRef_averageRightEarSensitivity;
  }
  else
  {
    uint64_t v12 = &selRef_averageLeftEarSensitivity;
  }
  id v11 = [a1 *v12];
LABEL_6:
  HKHearingLevelClassificationForSensitivity();
  id v13 = (id)HKLocalizedStringForHearingLevelClassification();
  if (v13)
  {
    uint64_t v14 = v13;
    id v37 = v11;
    uint64_t v15 = sub_240A04C58();
    uint64_t v17 = v16;

    id v18 = sub_2409E6540(a1, a2);
    uint64_t v20 = v19;
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    sub_240A02828();
    sub_2409A6FA8();
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_240A06800;
    uint64_t v22 = MEMORY[0x263F8D310];
    *(void *)(v21 + 56) = MEMORY[0x263F8D310];
    unint64_t v23 = sub_2409800D4();
    *(void *)(v21 + 32) = v15;
    *(void *)(v21 + 40) = v17;
    *(void *)(v21 + 96) = v22;
    *(void *)(v21 + 104) = v23;
    *(void *)(v21 + 64) = v23;
    *(void *)(v21 + 72) = v18;
    *(void *)(v21 + 80) = v20;
    uint64_t v24 = sub_240A04C28();
    uint64_t v26 = v25;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v38[0] = v24;
    v38[1] = v26;
    sub_240A02708();
    sub_2409B2D2C();
    uint64_t v27 = sub_240A050F8();

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v36);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_240A03FE8();
    BOOL v28 = sub_240A03FF8();
    os_log_type_t v29 = sub_240A04EB8();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      id v37 = v11;
      v38[0] = v31;
      *(_DWORD *)uint64_t v30 = 136446210;
      uint64_t v32 = sub_240A05478();
      _OWORD v38[2] = sub_240981440(v32, v33, v38);
      id v11 = v37;
      sub_240A050D8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240976000, v28, v29, "[%{public}s] Got nil result from classification utility", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v31, -1, -1);
      MEMORY[0x2456058A0](v30, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return 0;
  }
  return v27;
}

id sub_2409E6540(void *a1, uint64_t a2)
{
  if (a2 == 1)
  {
    id v2 = objc_msgSend(a1, sel_averageRightEarSensitivity);
    if (!v2) {
      return v2;
    }
    goto LABEL_6;
  }
  if (a2) {
    return 0;
  }
  id v2 = objc_msgSend(a1, sel_averageLeftEarSensitivity);
  if (v2)
  {
LABEL_6:
    id v3 = objc_msgSend(self, sel_decibelHearingLevelUnit);
    objc_msgSend(v2, sel_doubleValueForUnit_, v3);

    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    sub_240A02828();
    uint64_t v4 = sub_2409E673C();
    if (v5) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = 0;
    }
    if (v5) {
      unint64_t v7 = v5;
    }
    else {
      unint64_t v7 = 0xE000000000000000;
    }
    sub_2409A6FA8();
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_240A06870;
    *(void *)(v8 + 56) = MEMORY[0x263F8D310];
    *(void *)(v8 + 64) = sub_2409800D4();
    *(void *)(v8 + 32) = v6;
    *(void *)(v8 + 40) = v7;
    id v2 = (id)sub_240A04C28();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_2409E673C()
{
  uint64_t v0 = sub_240A04018();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = (id)HKIntegerFormatter();
  unint64_t v5 = v4;
  if (v4
    && (id v6 = v4,
        unint64_t v7 = (void *)sub_240A04D98(),
        id v8 = objc_msgSend(v6, sel_stringFromNumber_, v7),
        v6,
        v7,
        v8))
  {
    uint64_t v9 = sub_240A04C58();
  }
  else
  {
    sub_240A03FE8();
    id v10 = sub_240A03FF8();
    os_log_type_t v11 = sub_240A04EB8();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v19 = v0;
      uint64_t v14 = v13;
      uint64_t v21 = v13;
      *(_DWORD *)uint64_t v12 = 136446466;
      uint64_t v15 = sub_240A05478();
      uint64_t v20 = sub_240981440(v15, v16, &v21);
      sub_240A050D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2080;
      uint64_t v20 = sub_240981440(0x656C62756F44, 0xE600000000000000, &v21);
      sub_240A050D8();
      _os_log_impl(&dword_240976000, v10, v11, "[%{public}s] Failed to format filter value for type: %s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v14, -1, -1);
      MEMORY[0x2456058A0](v12, -1, -1);

      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v19);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    }
    return 0;
  }
  return v9;
}

uint64_t _s16HearingAppPlugin25AudiogramAllDataViewModelC33unitTest_startAudiogramsPublisheryyF_0()
{
  uint64_t v93 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F110];
  sub_2409E8F8C(0, &qword_268C99AB8, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v92 = (char *)&v66 - v2;
  uint64_t v70 = sub_240A04E58();
  uint64_t v71 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  id v4 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409B9A88();
  uint64_t v73 = v5;
  uint64_t v74 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v68 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409B9C5C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v76 = v7;
  uint64_t v77 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v69 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409E8770();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v79 = v10;
  uint64_t v80 = v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v72 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409E881C();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v82 = v13;
  uint64_t v83 = v14;
  MEMORY[0x270FA5388](v13);
  unint64_t v75 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409E89D4();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v85 = v16;
  uint64_t v86 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v78 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409E8B30();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v88 = v19;
  uint64_t v89 = v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v81 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409E8C4C();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v90 = v22;
  uint64_t v91 = v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v87 = (char *)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_240A02978();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  BOOL v28 = (char *)&v66 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s16HearingAppPlugin25AudiogramAllDataViewModelC012startInitialD13PublisherTime33_BC65D8BC09683B795C348539971D0E1CLL10Foundation4DateVvpfi_0();
  uint64_t v84 = v0;
  uint64_t v29 = v0 + OBJC_IVAR____TtC16HearingAppPlugin25AudiogramAllDataViewModel_startInitialAudiogramPublisherTime;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v26 + 40))(v29, v28, v25);
  swift_endAccess();
  uint64_t v30 = *(void **)(v0 + 16);
  sub_2409824B8(0, (unint64_t *)&qword_26AFD48A8);
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v32 = objc_msgSend(ObjCClassFromMetadata, sel_audiogramSampleType);
  id v67 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A678]), sel_initWithSampleType_predicate_, v32, 0);

  sub_2409973C8();
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_240A073E0;
  sub_240A04C58();
  id v34 = objc_allocWithZone(MEMORY[0x263F08B30]);
  uint64_t v35 = (void *)sub_240A04C18();
  swift_bridgeObjectRelease();
  id v36 = objc_msgSend(v34, sel_initWithKey_ascending_, v35, 0);

  *(void *)(v33 + 32) = v36;
  sub_240A04C58();
  id v37 = objc_allocWithZone(MEMORY[0x263F08B30]);
  uint64_t v38 = (void *)sub_240A04C18();
  swift_bridgeObjectRelease();
  id v39 = objc_msgSend(v37, sel_initWithKey_ascending_, v38, 0);

  *(void *)(v33 + 40) = v39;
  id v94 = (id)v33;
  sub_240A04D38();
  id v40 = v94;
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_240A06A80;
  *(void *)(v41 + 32) = objc_msgSend(ObjCClassFromMetadata, sel_audiogramSampleType);
  id v94 = (id)v41;
  sub_240A04D38();
  sub_240A04E78();
  swift_bridgeObjectRelease();
  sub_2409B9B74();
  sub_2409E8ED4(&qword_268C99CD0, MEMORY[0x263F44B10]);
  sub_2409E8ED4(&qword_268C99CD8, (void (*)(uint64_t))sub_2409B9B74);
  id v42 = v68;
  uint64_t v43 = v70;
  sub_240A04658();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v4, v43);
  sub_240A04E48();
  sub_240983260(0, (unint64_t *)&qword_268C993F0);
  sub_2409E8ED4(&qword_268C99CE8, (void (*)(uint64_t))sub_2409B9A88);
  uint64_t v44 = v69;
  uint64_t v45 = v73;
  sub_240A04608();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v42, v45);
  uint64_t v46 = (void *)swift_allocObject();
  uint64_t v47 = v67;
  v46[2] = v30;
  v46[3] = v47;
  v46[4] = v40;
  sub_240A04E18();
  sub_2409E8ED4(&qword_268C99CF8, (void (*)(uint64_t))sub_2409B9C5C);
  id v48 = v30;
  id v49 = v47;
  uint64_t v50 = v72;
  uint64_t v51 = v76;
  sub_240A04648();
  swift_release();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v44, v51);
  sub_2409E8ED4(&qword_268C9A608, (void (*)(uint64_t))sub_2409E8770);
  sub_2409E8ED4(&qword_268C9A610, MEMORY[0x263F44AA8]);
  uint64_t v52 = v75;
  uint64_t v53 = v79;
  sub_240A04698();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v50, v53);
  sub_2409E8AC0();
  sub_2409E8ED4(&qword_268C9A638, (void (*)(uint64_t))sub_2409E881C);
  sub_2409E8ED4(&qword_268C9A640, (void (*)(uint64_t))sub_2409E8AC0);
  uint64_t v54 = v78;
  uint64_t v55 = v82;
  sub_240A04658();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v52, v55);
  sub_2409E8BF4(0, &qword_268C99380, (unint64_t *)&unk_268C99388);
  sub_2409E8ED4(&qword_268C9A650, (void (*)(uint64_t))sub_2409E89D4);
  uint64_t v56 = v81;
  uint64_t v57 = v85;
  sub_240A04648();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v54, v57);
  sub_2409824B8(0, (unint64_t *)&qword_268C993E8);
  id v94 = (id)sub_240A04F38();
  uint64_t v58 = sub_240A04F28();
  uint64_t v59 = (uint64_t)v92;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v92, 1, 1, v58);
  sub_2409E8ED4(&qword_268C9A660, (void (*)(uint64_t))sub_2409E8B30);
  sub_2409B2DE0();
  uint64_t v61 = v87;
  uint64_t v60 = v88;
  sub_240A04678();
  sub_2409E8F1C(v59, &qword_268C99AB8, v93);

  (*(void (**)(char *, uint64_t))(v89 + 8))(v56, v60);
  swift_allocObject();
  uint64_t v62 = v84;
  swift_weakInit();
  sub_2409E8ED4(&qword_268C9A668, (void (*)(uint64_t))sub_2409E8C4C);
  uint64_t v63 = v90;
  uint64_t v64 = sub_240A046A8();

  swift_release();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v61, v63);
  *(void *)(v62 + 40) = v64;
  return swift_release();
}

uint64_t sub_2409E776C()
{
  sub_2409B9BDC();

  return sub_240A04568();
}

uint64_t sub_2409E77C0(uint64_t a1, uint64_t a2, void *a3)
{
  sub_2409973C8();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_240A06A80;
  *(void *)(v4 + 32) = a3;
  sub_240A04D38();
  id v5 = a3;
  sub_240A04E28();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2409E7880@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_240A04018();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  sub_240A03F98();
  id v9 = v8;
  id v10 = v8;
  uint64_t v11 = sub_240A03FF8();
  os_log_type_t v12 = sub_240A04EA8();
  if (os_log_type_enabled(v11, v12))
  {
    v20[1] = a2;
    uint64_t v13 = swift_slowAlloc();
    v20[0] = v4;
    uint64_t v14 = (uint8_t *)v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v21 = (uint64_t)v8;
    uint64_t v22 = v15;
    *(_DWORD *)uint64_t v14 = 136446210;
    id v16 = v8;
    sub_240983260(0, (unint64_t *)&qword_268C993F0);
    uint64_t v17 = sub_240A04C78();
    uint64_t v21 = sub_240981440(v17, v18, &v22);
    sub_240A050D8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240976000, v11, v12, "Error fetching audiogram samples: %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v15, -1, -1);
    MEMORY[0x2456058A0](v14, -1, -1);

    (*(void (**)(char *, void))(v5 + 8))(v7, v20[0]);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v22 = MEMORY[0x263F8EE78];
  sub_2409E8BF4(0, &qword_268C9A630, &qword_268C996E0);
  return sub_240A04558();
}

uint64_t sub_2409E7B0C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (!((unint64_t)*a1 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    if (v4) {
      goto LABEL_3;
    }
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *a2 = v9;
    return result;
  }
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t result = sub_240A05288();
  uint64_t v4 = result;
  if (!result) {
    goto LABEL_19;
  }
LABEL_3:
  if (v4 >= 1)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        MEMORY[0x245604E50](i, v3);
        self;
        if (swift_dynamicCastObjCClass())
        {
          MEMORY[0x245604930]();
          if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_240A04D58();
          }
          sub_240A04D68();
          sub_240A04D38();
        }
        else
        {
          sub_240A03B98();
        }
      }
    }
    else
    {
      for (uint64_t j = 0; j != v4; ++j)
      {
        uint64_t v8 = *(void **)(v3 + 8 * j + 32);
        self;
        if (swift_dynamicCastObjCClass())
        {
          MEMORY[0x245604930](v8);
          if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_240A04D58();
          }
          sub_240A04D68();
          sub_240A04D38();
        }
      }
    }
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_2409E7CF0(unint64_t *a1)
{
  uint64_t v2 = sub_240A02978();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v17 - v7;
  unint64_t v9 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v11 = result;
  if (v9 >> 62)
  {
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_240A05288();
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v11 + 48)) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  if ((*(unsigned char *)(result + 48) & 1) == 0)
  {
LABEL_4:
    _s16HearingAppPlugin25AudiogramAllDataViewModelC012startInitialD13PublisherTime33_BC65D8BC09683B795C348539971D0E1CLL10Foundation4DateVvpfi_0();
    uint64_t v12 = v11 + OBJC_IVAR____TtC16HearingAppPlugin25AudiogramAllDataViewModel_startInitialAudiogramPublisherTime;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v12, v2);
    sub_240A02928();
    uint64_t v13 = *(void (**)(char *, uint64_t))(v3 + 8);
    v13(v6, v2);
    v13(v8, v2);
    sub_240A04B18();
    uint64_t v14 = (void *)sub_240A04B08();
    sub_240A04AB8();

    *(unsigned char *)(v11 + 48) = 1;
  }
LABEL_5:
  v17[1] = v9;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_240A04518();
  uint64_t v15 = (void (**)(unint64_t))(v11
                                               + OBJC_IVAR____TtC16HearingAppPlugin25AudiogramAllDataViewModel_unitTest_didPublishAudiograms);
  swift_beginAccess();
  id v16 = *v15;
  if (*v15)
  {
    swift_retain();
    v16(v9);
    sub_2409A5128((uint64_t)v16);
  }
  return swift_release();
}

uint64_t AudiogramAllDataViewModel.deinit()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16HearingAppPlugin25AudiogramAllDataViewModel_startInitialAudiogramPublisherTime;
  uint64_t v2 = sub_240A02978();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_2409A5128(*(void *)(v0
                          + OBJC_IVAR____TtC16HearingAppPlugin25AudiogramAllDataViewModel_unitTest_didPublishAudiograms));
  sub_240A03B98();
  return v0;
}

uint64_t AudiogramAllDataViewModel.__deallocating_deinit()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16HearingAppPlugin25AudiogramAllDataViewModel_startInitialAudiogramPublisherTime;
  uint64_t v2 = sub_240A02978();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_2409A5128(*(void *)(v0
                          + OBJC_IVAR____TtC16HearingAppPlugin25AudiogramAllDataViewModel_unitTest_didPublishAudiograms));
  sub_240A03B98();

  return swift_deallocClassInstance();
}

uint64_t static AudiogramAllDataViewModel.makeUnitTestingInstance(healthStore:)(void *a1)
{
  type metadata accessor for AudiogramAllDataViewModel();
  swift_allocObject();
  id v2 = a1;
  uint64_t v3 = sub_2409E8504(v2, 0);

  return v3;
}

void sub_2409E8150(unint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v36 = a2;
  sub_2409E8F8C(0, &qword_268C9A688, MEMORY[0x263F441F0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v9 = (char *)&v26 - v8;
  id v10 = (void *)sub_240A03708();
  uint64_t v30 = *(v10 - 1);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v35 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v29 = (char *)&v26 - v13;
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  for (; v14; uint64_t v14 = sub_240A05288())
  {
    unint64_t v34 = a1 & 0xC000000000000001;
    uint64_t v31 = v30 + 32;
    id v32 = (unsigned int (**)(char *, uint64_t, void *))(v30 + 48);
    unint64_t v37 = MEMORY[0x263F8EE78];
    uint64_t v15 = 4;
    uint64_t v27 = a3;
    unint64_t v28 = a1;
    uint64_t v33 = v14;
    id v16 = (void (**)(char *, char *, void *))(v30 + 32);
    while (1)
    {
      uint64_t v17 = v10;
      unint64_t v18 = v34 ? (void *)MEMORY[0x245604E50](v15 - 4, a1) : *(id *)(a1 + 8 * v15);
      id v10 = v18;
      uint64_t v19 = v15 - 3;
      if (__OFADD__(v15 - 4, 1)) {
        break;
      }
      uint64_t v38 = v18;
      sub_2409E54AC(&v38, v36, (uint64_t)v9);
      if (v4)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return;
      }

      id v10 = v17;
      if ((*v32)(v9, 1, v17) == 1)
      {
        sub_2409E8F1C((uint64_t)v9, &qword_268C9A688, MEMORY[0x263F441F0]);
      }
      else
      {
        uint64_t v20 = *v16;
        uint64_t v21 = v29;
        (*v16)(v29, v9, v17);
        v20(v35, v21, v17);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          unint64_t v22 = v37;
        }
        else {
          unint64_t v22 = sub_240992A28(0, *(void *)(v37 + 16) + 1, 1, v37);
        }
        unint64_t v24 = *(void *)(v22 + 16);
        unint64_t v23 = *(void *)(v22 + 24);
        if (v24 >= v23 >> 1) {
          unint64_t v22 = sub_240992A28(v23 > 1, v24 + 1, 1, v22);
        }
        *(void *)(v22 + 16) = v24 + 1;
        unint64_t v25 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
        unint64_t v37 = v22;
        id v10 = v17;
        v20((char *)(v22 + v25 + *(void *)(v30 + 72) * v24), v35, v17);
        a3 = v27;
        a1 = v28;
      }
      ++v15;
      if (v19 == v33) {
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_21:
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  }
LABEL_22:
  swift_bridgeObjectRelease();
}

uint64_t sub_2409E8504(void *a1, char a2)
{
  uint64_t v3 = v2;
  sub_240986A18();
  swift_allocObject();
  *(void *)(v2 + 32) = sub_240A04538();
  *(void *)(v2 + 40) = 0;
  *(unsigned char *)(v2 + 48) = 0;
  _s16HearingAppPlugin25AudiogramAllDataViewModelC012startInitialD13PublisherTime33_BC65D8BC09683B795C348539971D0E1CLL10Foundation4DateVvpfi_0();
  uint64_t v6 = (void *)(v2 + OBJC_IVAR____TtC16HearingAppPlugin25AudiogramAllDataViewModel_unitTest_didPublishAudiograms);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *(void *)(v2 + 16) = a1;
  id v7 = objc_allocWithZone((Class)sub_240A04AD8());
  id v8 = a1;
  *(void *)(v2 + 24) = sub_240A04AC8();
  uint64_t v9 = swift_retain();
  uint64_t v10 = sub_2409E4F40(v9, v8);
  uint64_t v12 = v11;
  swift_release();
  uint64_t v13 = (uint64_t *)(v3 + OBJC_IVAR____TtC16HearingAppPlugin25AudiogramAllDataViewModel_dataSource);
  *uint64_t v13 = v10;
  v13[1] = v12;
  if (a2) {
    _s16HearingAppPlugin25AudiogramAllDataViewModelC33unitTest_startAudiogramsPublisheryyF_0();
  }
  return v3;
}

uint64_t sub_2409E8630@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = (_OWORD *)(*a1 + OBJC_IVAR____TtC16HearingAppPlugin25AudiogramAllDataViewModel_dataSource);
  swift_beginAccess();
  *a2 = *v3;
  return swift_unknownObjectRetain();
}

uint64_t sub_2409E8690()
{
  return type metadata accessor for AudiogramAllDataViewModel();
}

uint64_t sub_2409E8698()
{
  uint64_t result = sub_240A02978();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_2409E8770()
{
  if (!qword_268C9A5F0)
  {
    sub_2409B9C5C();
    sub_240A04E18();
    sub_2409E8ED4(&qword_268C99CF8, (void (*)(uint64_t))sub_2409B9C5C);
    unint64_t v0 = sub_240A04488();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A5F0);
    }
  }
}

void sub_2409E881C()
{
  if (!qword_268C9A5F8)
  {
    sub_240A04E18();
    sub_2409E8908();
    sub_2409E8ED4(&qword_268C9A610, MEMORY[0x263F44AA8]);
    sub_2409E8ED4(&qword_268C9A618, (void (*)(uint64_t))sub_2409E8908);
    unint64_t v0 = sub_240A04468();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A5F8);
    }
  }
}

void sub_2409E8908()
{
  if (!qword_268C9A600)
  {
    sub_2409E8770();
    sub_240983260(255, (unint64_t *)&qword_268C993F0);
    sub_2409E8ED4(&qword_268C9A608, (void (*)(uint64_t))sub_2409E8770);
    unint64_t v0 = sub_240A04458();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A600);
    }
  }
}

void sub_2409E89D4()
{
  if (!qword_268C9A620)
  {
    sub_2409E881C();
    sub_2409E8AC0();
    sub_2409E8ED4(&qword_268C9A638, (void (*)(uint64_t))sub_2409E881C);
    sub_2409E8ED4(&qword_268C9A640, (void (*)(uint64_t))sub_2409E8AC0);
    unint64_t v0 = sub_240A044A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A620);
    }
  }
}

void sub_2409E8AC0()
{
  if (!qword_268C9A628)
  {
    sub_2409E8BF4(255, &qword_268C9A630, &qword_268C996E0);
    unint64_t v0 = sub_240A04548();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A628);
    }
  }
}

void sub_2409E8B30()
{
  if (!qword_268C9A648)
  {
    sub_2409E89D4();
    sub_2409E8BF4(255, &qword_268C99380, (unint64_t *)&unk_268C99388);
    sub_2409E8ED4(&qword_268C9A650, (void (*)(uint64_t))sub_2409E89D4);
    unint64_t v0 = sub_240A04488();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A648);
    }
  }
}

void sub_2409E8BF4(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_2409824B8(255, a3);
    unint64_t v4 = sub_240A04D78();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2409E8C4C()
{
  if (!qword_268C9A658)
  {
    sub_2409E8B30();
    sub_2409824B8(255, (unint64_t *)&qword_268C993E8);
    sub_2409E8ED4(&qword_268C9A660, (void (*)(uint64_t))sub_2409E8B30);
    sub_2409B2DE0();
    unint64_t v0 = sub_240A044F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A658);
    }
  }
}

uint64_t sub_2409E8D18()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_2409E8D60(uint64_t a1)
{
  return sub_2409E77C0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_2409E8D6C()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2409E8DA4(unint64_t *a1)
{
  return sub_2409E7CF0(a1);
}

void sub_2409E8DAC()
{
  if (!qword_268C9A670)
  {
    sub_240986A18();
    sub_2409E8F8C(255, &qword_268C998E8, MEMORY[0x263F44068], MEMORY[0x263F8D488]);
    sub_2409E8ED4(&qword_268C9A678, (void (*)(uint64_t))sub_240986A18);
    unint64_t v0 = sub_240A04488();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A670);
    }
  }
}

uint64_t sub_2409E8E88()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_2409E8EC8@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2409E52E0(a1, *(void **)(v2 + 16), *(void *)(v2 + 40), a2);
}

uint64_t sub_2409E8ED4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2409E8F1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_2409E8F8C(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_2409E8F8C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2409E8FF0()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_2409E9030(void *a1)
{
  sub_2409E6030(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_2409E903C()
{
  uint64_t v0 = sub_240A048F8();
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void))(v3 + 104))(v2, *MEMORY[0x263F1B388]);
  uint64_t result = MEMORY[0x245604570](v2, 0.88, 0.88, 0.88, 1.0);
  qword_268C9AAA0 = result;
  return result;
}

double sub_2409E9118()
{
  sub_240A046D8();
  double result = *(double *)&v1;
  xmmword_268C9AAA8 = v1;
  *(_OWORD *)&qword_268C9AAB8 = v2;
  qword_268C9AAC8 = v3;
  return result;
}

double sub_2409E9174()
{
  sub_2409E9210();
  uint64_t v0 = swift_allocObject();
  __asm { FMOV            V1.2D, #2.0 }
  *(_OWORD *)(v0 + 16) = xmmword_240A06800;
  *(_OWORD *)(v0 + 32) = _Q1;
  sub_240A046D8();
  double result = *(double *)&v7;
  xmmword_268C9AAD0 = v7;
  *(_OWORD *)&qword_268C9AAE0 = v8;
  qword_268C9AAF0 = v9;
  return result;
}

uint64_t sub_2409E91F0()
{
  uint64_t result = sub_240A04908();
  qword_268C9AAF8 = result;
  return result;
}

void sub_2409E9210()
{
  if (!qword_268C996A8)
  {
    unint64_t v0 = sub_240A05358();
    if (!v1) {
      atomic_store(v0, &qword_268C996A8);
    }
  }
}

uint64_t DataTypeDetailConfiguration.InlineChartComponent.init(hkType:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  type metadata accessor for DataTypeDetailConfiguration.InlineChartComponent();
  id v3 = a1;
  return sub_240A03898();
}

uint64_t type metadata accessor for DataTypeDetailConfiguration.InlineChartComponent()
{
  uint64_t result = qword_268C9A690;
  if (!qword_268C9A690) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id DataTypeDetailConfiguration.InlineChartComponent.hkType.getter()
{
  return *v0;
}

void DataTypeDetailConfiguration.InlineChartComponent.hkType.setter(void *a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*DataTypeDetailConfiguration.InlineChartComponent.hkType.modify())()
{
  return nullsub_1;
}

uint64_t DataTypeDetailConfiguration.InlineChartComponent.makeDataSource(context:)()
{
  type metadata accessor for DataTypeDetailConfiguration.InlineChartComponent();
  if (!sub_240A038A8()) {
    return 0;
  }
  swift_getObjectType();
  uint64_t v0 = sub_2409E93CC();
  sub_240A03B98();
  return v0;
}

uint64_t sub_2409E93CC()
{
  uint64_t v0 = sub_2409E9A58();
  sub_240A03518();
  swift_getWitnessTable();
  return v0;
}

uint64_t sub_2409E9450()
{
  if (!sub_240A038A8()) {
    return 0;
  }
  swift_getObjectType();
  uint64_t v0 = sub_2409E93CC();
  sub_240A03B98();
  return v0;
}

void **_s20InlineChartComponentVwCP(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    long long v7 = (char *)a1 + v6;
    long long v8 = (char *)a2 + v6;
    uint64_t v9 = sub_240A038B8();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    uint64_t v11 = v4;
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t _s20InlineChartComponentVwxx(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_240A038B8();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void **_s20InlineChartComponentVwcp(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  long long v7 = (char *)a2 + v5;
  uint64_t v8 = sub_240A038B8();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  id v10 = v4;
  v9(v6, v7, v8);
  return a1;
}

void **_s20InlineChartComponentVwca(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  long long v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 20);
  id v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_240A038B8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

void *_s20InlineChartComponentVwtk(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_240A038B8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void **_s20InlineChartComponentVwta(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_240A038B8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t _s20InlineChartComponentVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2409E9850);
}

uint64_t sub_2409E9850(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_240A038B8();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t _s20InlineChartComponentVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2409E9914);
}

void *sub_2409E9914(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_240A038B8();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2409E99BC()
{
  uint64_t result = sub_240A038B8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2409E9A58()
{
  return sub_240A03528();
}

uint64_t sub_2409E9AB4()
{
  uint64_t v0 = sub_240A03448();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = &v14[-v5];
  sub_240A03808();
  sub_240A03428();
  sub_240A03B98();
  sub_240A03438();
  sub_240A03408();
  uint64_t v8 = v7;
  uint64_t v9 = *(void (**)(unsigned char *, uint64_t))(v1 + 8);
  v9(v3, v0);
  uint64_t v10 = (void (*)(unsigned char *, void))sub_240A03418();
  *(void *)(v11 + 16) = v8;
  v10(v14, 0);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(v3, v6, v0);
  uint64_t v12 = sub_240A033F8();
  v9(v3, v0);
  v9(v6, v0);
  return v12;
}

id sub_2409E9C70()
{
  uint64_t v1 = OBJC_IVAR____TtC16HearingAppPlugin35AudiogramAllDataChartViewController____lazy_storage___shareBarButtonItem;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC16HearingAppPlugin35AudiogramAllDataChartViewController____lazy_storage___shareBarButtonItem);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC16HearingAppPlugin35AudiogramAllDataChartViewController____lazy_storage___shareBarButtonItem);
  }
  else
  {
    uint64_t v4 = v0;
    sub_2409824B8(0, &qword_268C9A370);
    uint64_t v5 = (void *)sub_240A04C18();
    id v6 = objc_msgSend(self, sel_systemImageNamed_, v5);

    swift_unknownObjectRetain();
    uint64_t v7 = (void *)sub_240A04EF8();
    uint64_t v8 = *(void **)(v0 + v1);
    *(void *)(v4 + v1) = v7;
    id v3 = v7;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

id sub_2409E9D6C()
{
  uint64_t v1 = OBJC_IVAR____TtC16HearingAppPlugin35AudiogramAllDataChartViewController____lazy_storage___exportPDFButton;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC16HearingAppPlugin35AudiogramAllDataChartViewController____lazy_storage___exportPDFButton);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC16HearingAppPlugin35AudiogramAllDataChartViewController____lazy_storage___exportPDFButton);
  }
  else
  {
    id v4 = sub_2409E9DD0(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_2409E9DD0(uint64_t a1)
{
  uint64_t v31 = a1;
  sub_2409EB108(0, &qword_268C9A6F0, MEMORY[0x263F82228], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v29 = (char *)&v26 - v2;
  uint64_t v28 = sub_240A05028();
  uint64_t v3 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240A032D8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_240A05068();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_240A05098();
  uint64_t v14 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  id v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v27 = objc_msgSend(self, sel_buttonWithType_, 1);
  sub_240A05078();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x263F821F0], v10);
  sub_240A05018();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F43BD8], v6);
  sub_240A032C8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_240A05048();
  id v17 = objc_msgSend(self, sel_hk_appTintColor);
  sub_240A05058();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F821A0], v28);
  sub_240A05038();
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  sub_240A02828();
  sub_240A05088();
  unint64_t v18 = v29;
  uint64_t v19 = v30;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v29, v16, v30);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v19);
  uint64_t v20 = v27;
  sub_240A050A8();
  uint64_t v21 = v31;
  uint64_t v22 = *(void *)(v31
                  + OBJC_IVAR____TtC16HearingAppPlugin35AudiogramAllDataChartViewController_automationIdentifierBase
                  + 8);
  uint64_t v32 = *(void *)(v31
                  + OBJC_IVAR____TtC16HearingAppPlugin35AudiogramAllDataChartViewController_automationIdentifierBase);
  uint64_t v33 = v22;
  id v23 = v20;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_240A04CA8();
  unint64_t v24 = (void *)sub_240A04C18();
  swift_bridgeObjectRelease();
  objc_msgSend(v23, sel_setAccessibilityIdentifier_, v24);

  objc_msgSend(v23, sel_setContentHorizontalAlignment_, 4);
  objc_msgSend(v23, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v23, sel_addTarget_action_forControlEvents_, v21, sel_shareButtonTapped_, 64);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v19);
  return v23;
}

id sub_2409EA360()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  v58.receiver = v0;
  v58.super_class = (Class)type metadata accessor for AudiogramAllDataChartViewController();
  objc_msgSendSuper2(&v58, sel_viewDidLoad);
  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v3 = result;
  id v4 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v4);

  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v5 = result;
  uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC16HearingAppPlugin35AudiogramAllDataChartViewController_scrollView];
  objc_msgSend(result, sel_addSubview_, v6);

  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC16HearingAppPlugin35AudiogramAllDataChartViewController_scrollViewContainer];
  objc_msgSend(v6, sel_addSubview_, v7);
  uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC16HearingAppPlugin35AudiogramAllDataChartViewController_chartController];
  objc_msgSend(v1, sel_addChildViewController_, v8);
  id result = objc_msgSend(v8, sel_view);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v9 = result;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_240A04CA8();
  uint64_t v10 = (void *)sub_240A04C18();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setAccessibilityIdentifier_, v10);

  id result = objc_msgSend(v8, sel_view);
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v11 = result;
  objc_msgSend(v7, sel_addArrangedSubview_, result);

  objc_msgSend(v8, sel_didMoveToParentViewController_, v1);
  id v12 = objc_msgSend(v1, sel_navigationItem);
  id v13 = sub_2409E9C70();
  objc_msgSend(v12, sel_setRightBarButtonItem_, v13);

  id v14 = sub_2409E9D6C();
  objc_msgSend(v7, sel_addArrangedSubview_, v14);

  sub_2409973C8();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_240A09330;
  id v16 = objc_msgSend(v6, sel_topAnchor);
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v17 = result;
  id v18 = objc_msgSend(result, sel_safeAreaLayoutGuide);

  id v19 = objc_msgSend(v18, sel_topAnchor);
  id v20 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v19);

  *(void *)(v15 + 32) = v20;
  id v21 = objc_msgSend(v6, sel_bottomAnchor);
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v22 = result;
  id v23 = objc_msgSend(result, sel_safeAreaLayoutGuide);

  id v24 = objc_msgSend(v23, sel_bottomAnchor);
  id v25 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v24);

  *(void *)(v15 + 40) = v25;
  id v26 = objc_msgSend(v6, sel_leadingAnchor);
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v27 = result;
  id v28 = objc_msgSend(result, sel_leadingAnchor);

  id v29 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v28);
  *(void *)(v15 + 48) = v29;
  id v30 = objc_msgSend(v6, sel_trailingAnchor);
  id result = objc_msgSend(v1, sel_view);
  if (result)
  {
    uint64_t v31 = result;
    uint64_t v32 = self;
    id v33 = objc_msgSend(v31, sel_trailingAnchor);

    id v34 = objc_msgSend(v30, sel_constraintEqualToAnchor_, v33);
    *(void *)(v15 + 56) = v34;
    id v35 = objc_msgSend(v7, sel_topAnchor);
    id v36 = objc_msgSend(v6, sel_topAnchor);
    id v37 = objc_msgSend(v35, sel_constraintEqualToAnchor_, v36);

    *(void *)(v15 + 64) = v37;
    id v38 = objc_msgSend(v7, sel_bottomAnchor);
    id v39 = objc_msgSend(v6, sel_bottomAnchor);
    id v40 = objc_msgSend(v38, sel_constraintEqualToAnchor_constant_, v39, -16.0);

    *(void *)(v15 + 72) = v40;
    id v41 = objc_msgSend(v7, sel_leadingAnchor);
    id v42 = objc_msgSend(v6, sel_leadingAnchor);
    id v43 = objc_msgSend(v41, sel_constraintEqualToAnchor_, v42);

    *(void *)(v15 + 80) = v43;
    id v44 = objc_msgSend(v7, sel_trailingAnchor);
    id v45 = objc_msgSend(v6, sel_trailingAnchor);
    id v46 = objc_msgSend(v44, sel_constraintEqualToAnchor_, v45);

    *(void *)(v15 + 88) = v46;
    id v47 = objc_msgSend(v7, sel_widthAnchor);
    id v48 = objc_msgSend(v6, sel_widthAnchor);
    id v49 = objc_msgSend(v47, sel_constraintEqualToAnchor_, v48);

    *(void *)(v15 + 96) = v49;
    sub_240A04D38();
    sub_2409824B8(0, &qword_268C9A6F8);
    uint64_t v50 = (void *)sub_240A04D08();
    swift_bridgeObjectRelease();
    objc_msgSend(v32, sel_activateConstraints_, v50);

    id v51 = objc_msgSend(v1, sel_traitCollection);
    uint64_t v52 = sub_240A04F58();

    objc_msgSend(self, sel_edgeInsetsForWidthDesignation_, v52);
    objc_msgSend(v7, sel_setDirectionalLayoutMargins_);
    sub_2409EB108(0, &qword_268C9A700, (uint64_t (*)(uint64_t))sub_2409EB16C, MEMORY[0x263F8E0F8]);
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_240A06800;
    uint64_t v54 = sub_240A04AA8();
    unint64_t v55 = sub_2409EB200();
    *(void *)(v53 + 32) = v54;
    *(void *)(v53 + 40) = v55;
    uint64_t v56 = sub_240A04108();
    uint64_t v57 = MEMORY[0x263F82018];
    *(void *)(v53 + 48) = v56;
    *(void *)(v53 + 56) = v57;
    sub_240A04F18();
    swift_bridgeObjectRelease();
    return (id)sub_240A03B98();
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_2409EABDC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC16HearingAppPlugin35AudiogramAllDataChartViewController_scrollViewContainer);
  id v2 = objc_msgSend(v1, sel_arrangedSubviews);
  sub_2409824B8(0, &qword_268C9A6E8);
  unint64_t v3 = sub_240A04D18();

  unint64_t v13 = MEMORY[0x263F8EE78];
  if (v3 >> 62)
  {
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t result = sub_240A05288();
    uint64_t v4 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    unint64_t v8 = MEMORY[0x263F8EE78];
    goto LABEL_14;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  if (!v4) {
    goto LABEL_13;
  }
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_25;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v7 = (id)MEMORY[0x245604E50](i, v3);
    }
    else {
      id v7 = *(id *)(v3 + 8 * i + 32);
    }
    MEMORY[0x245604930](objc_msgSend(v7, sel_removeFromSuperview));
    if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_240A04D58();
    }
    sub_240A04D68();
    sub_240A04D38();
  }
  swift_bridgeObjectRelease();
  unint64_t v8 = v13;
LABEL_14:
  swift_bridgeObjectRelease();
  if (!(v8 >> 62))
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    if (v9) {
      goto LABEL_16;
    }
    return swift_bridgeObjectRelease_n();
  }
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t result = sub_240A05288();
  uint64_t v9 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_16:
  if (v9 >= 1)
  {
    for (uint64_t j = 0; j != v9; ++j)
    {
      if ((v8 & 0xC000000000000001) != 0) {
        id v11 = (id)MEMORY[0x245604E50](j, v8);
      }
      else {
        id v11 = *(id *)(v8 + 8 * j + 32);
      }
      id v12 = v11;
      objc_msgSend(v1, sel_addArrangedSubview_, v11);
    }
    return swift_bridgeObjectRelease_n();
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_2409EAE38()
{
  uint64_t v1 = v0;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC16HearingAppPlugin35AudiogramAllDataChartViewController_healthStore];
  type metadata accessor for AudiogramPDFProvider(0);
  unint64_t v3 = (void *)swift_allocObject();
  uint64_t v4 = (void *)((char *)v3 + OBJC_IVAR____TtC16HearingAppPlugin20AudiogramPDFProvider_shareButtonBehavior);
  id v5 = v2;
  sub_2409C29B8(v4);
  _OWORD v3[2] = v5;
  uint64_t v6 = sub_240A037C8();
  id v7 = v5;
  uint64_t v8 = sub_240A037B8();
  uint64_t v9 = MEMORY[0x263F442B0];
  v3[6] = v6;
  v3[7] = v9;
  void v3[3] = v8;

  uint64_t v10 = (void *)sub_2409C3518(*(void **)&v1[OBJC_IVAR____TtC16HearingAppPlugin35AudiogramAllDataChartViewController_audiogramSample]);
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v10);

  objc_msgSend(v1, sel_presentViewController_animated_completion_, v11, 1, 0);
  swift_release();
}

id sub_2409EB000()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudiogramAllDataChartViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AudiogramAllDataChartViewController()
{
  return self;
}

void sub_2409EB108(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_2409EB16C()
{
  unint64_t result = qword_268C9A708;
  if (!qword_268C9A708)
  {
    sub_2409EB1A8();
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C9A708);
  }
  return result;
}

unint64_t sub_2409EB1A8()
{
  unint64_t result = qword_268C9A710;
  if (!qword_268C9A710)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C9A710);
  }
  return result;
}

unint64_t sub_2409EB200()
{
  unint64_t result = qword_268C9A718;
  if (!qword_268C9A718)
  {
    sub_240A04AA8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A718);
  }
  return result;
}

uint64_t sub_2409EB258(char *a1)
{
  id v2 = objc_msgSend(a1, sel_traitCollection);
  uint64_t v3 = sub_240A04F58();

  if (v3 != sub_240A04F58())
  {
    id v4 = objc_msgSend(a1, sel_traitCollection);
    uint64_t v5 = sub_240A04F58();

    uint64_t v6 = *(void **)&a1[OBJC_IVAR____TtC16HearingAppPlugin35AudiogramAllDataChartViewController_scrollViewContainer];
    objc_msgSend(self, sel_edgeInsetsForWidthDesignation_, v5);
    objc_msgSend(v6, sel_setDirectionalLayoutMargins_);
  }
  return sub_2409EABDC();
}

id sub_2409EB324(void *a1, void *a2)
{
  uint64_t v5 = &v2[OBJC_IVAR____TtC16HearingAppPlugin35AudiogramAllDataChartViewController_automationIdentifierBase];
  *(void *)uint64_t v5 = 0xD000000000000019;
  *((void *)v5 + 1) = 0x8000000240A0D850;
  *(void *)&v2[OBJC_IVAR____TtC16HearingAppPlugin35AudiogramAllDataChartViewController_bottomPadding] = 0x4030000000000000;
  uint64_t v6 = OBJC_IVAR____TtC16HearingAppPlugin35AudiogramAllDataChartViewController_scrollView;
  id v7 = objc_allocWithZone(MEMORY[0x263F82B88]);
  unint64_t v8 = v2;
  id v9 = objc_msgSend(v7, sel_init);
  objc_msgSend(v9, sel_setShowsHorizontalScrollIndicator_, 0);
  objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v2[v6] = v9;
  uint64_t v10 = OBJC_IVAR____TtC16HearingAppPlugin35AudiogramAllDataChartViewController_scrollViewContainer;
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BF8]), sel_init);
  objc_msgSend(v11, sel_setAxis_, 1);
  objc_msgSend(v11, sel_setSpacing_, 20.0);
  objc_msgSend(v11, sel_setDistribution_, 2);
  objc_msgSend(v11, sel_setLayoutMarginsRelativeArrangement_, 1);
  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v8[v10] = v11;
  *(void *)&v8[OBJC_IVAR____TtC16HearingAppPlugin35AudiogramAllDataChartViewController____lazy_storage___shareBarButtonItem] = 0;
  *(void *)&v8[OBJC_IVAR____TtC16HearingAppPlugin35AudiogramAllDataChartViewController____lazy_storage___exportPDFButton] = 0;
  *(void *)&v8[OBJC_IVAR____TtC16HearingAppPlugin35AudiogramAllDataChartViewController_healthStore] = a1;
  *(void *)&v8[OBJC_IVAR____TtC16HearingAppPlugin35AudiogramAllDataChartViewController_audiogramSample] = a2;
  id v12 = objc_allocWithZone(MEMORY[0x263F46780]);
  id v13 = a1;
  id v14 = a2;
  id v15 = objc_msgSend(v12, sel_initWithHealthStore_, v13);
  id v16 = objc_msgSend(v15, sel_staticAudiogramChartViewControllerWithAudiogramSample_hideEnhancedUI_, v14, 0);

  *(void *)&v8[OBJC_IVAR____TtC16HearingAppPlugin35AudiogramAllDataChartViewController_chartController] = v16;
  v18.receiver = v8;
  v18.super_class = (Class)type metadata accessor for AudiogramAllDataChartViewController();
  return objc_msgSendSuper2(&v18, sel_initWithNibName_bundle_, 0, 0);
}

void sub_2409EB538()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC16HearingAppPlugin35AudiogramAllDataChartViewController_automationIdentifierBase];
  *(void *)uint64_t v1 = 0xD000000000000019;
  *((void *)v1 + 1) = 0x8000000240A0D850;
  *(void *)&v0[OBJC_IVAR____TtC16HearingAppPlugin35AudiogramAllDataChartViewController_bottomPadding] = 0x4030000000000000;
  uint64_t v2 = OBJC_IVAR____TtC16HearingAppPlugin35AudiogramAllDataChartViewController_scrollView;
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82B88]), sel_init);
  objc_msgSend(v3, sel_setShowsHorizontalScrollIndicator_, 0);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v0[v2] = v3;
  uint64_t v4 = OBJC_IVAR____TtC16HearingAppPlugin35AudiogramAllDataChartViewController_scrollViewContainer;
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BF8]), sel_init);
  objc_msgSend(v5, sel_setAxis_, 1);
  objc_msgSend(v5, sel_setSpacing_, 20.0);
  objc_msgSend(v5, sel_setDistribution_, 2);
  objc_msgSend(v5, sel_setLayoutMarginsRelativeArrangement_, 1);
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v0[v4] = v5;
  *(void *)&v0[OBJC_IVAR____TtC16HearingAppPlugin35AudiogramAllDataChartViewController____lazy_storage___shareBarButtonItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16HearingAppPlugin35AudiogramAllDataChartViewController____lazy_storage___exportPDFButton] = 0;

  sub_240A05258();
  __break(1u);
}

uint64_t sub_2409EB6BC(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v13 >= v7) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      int64_t v2 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v2);
      if (!v14)
      {
        int64_t v2 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        if (!v14)
        {
          int64_t v2 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v2);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    uint64_t v10 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v9);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_2409ED30C(&v16, v11, v12);
    unint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v2 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v15;
    goto LABEL_22;
  }
LABEL_23:

  return swift_release();
}

uint64_t sub_2409EB83C@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_240A034E8();
  uint64_t v57 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240A02C18();
  uint64_t v58 = *(void *)(v7 - 8);
  uint64_t v59 = v7;
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_240A04018();
  uint64_t v60 = *(void *)(v10 - 8);
  uint64_t v61 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v56 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  int64_t v15 = (char *)&v53 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  objc_super v18 = (char *)&v53 - v17;
  MEMORY[0x270FA5388](v16);
  id v20 = (char *)&v53 - v19;
  id v21 = (void *)sub_240A02B58();
  char v22 = sub_240A02B48();

  if (v22)
  {
    switch(a1)
    {
      case 1:
      case 2:
      case 3:
        char v29 = sub_240A05368();
        swift_bridgeObjectRelease();
        if (v29) {
          goto LABEL_8;
        }
        sub_240A03FE8();
        id v38 = sub_240A03FF8();
        os_log_type_t v39 = sub_240A04EC8();
        int v40 = v39;
        BOOL v41 = os_log_type_enabled(v38, v39);
        uint64_t v54 = a2;
        if (v41)
        {
          uint64_t v42 = swift_slowAlloc();
          uint64_t v55 = swift_slowAlloc();
          v62[0] = v55;
          *(_DWORD *)uint64_t v42 = 136315650;
          uint64_t v63 = sub_240981440(0xD000000000000023, 0x8000000240A0D8B0, v62);
          sub_240A050D8();
          LODWORD(v53) = v40;
          *(_WORD *)(v42 + 12) = 2080;
          uint64_t v63 = sub_240981440(0xD000000000000022, 0x8000000240A0D8E0, v62);
          sub_240A050D8();
          *(_WORD *)(v42 + 22) = 2080;
          uint64_t v63 = sub_240981440(*(void *)&aRemotediseedex[8 * a1 - 8], *(void *)&aRemotediseedex[8 * (char)(a1 - 1) + 24], v62);
          sub_240A050D8();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_240976000, v38, (os_log_type_t)v53, "[%s.%s]: Feed item created with state %s", (uint8_t *)v42, 0x20u);
          uint64_t v43 = v55;
          swift_arrayDestroy();
          MEMORY[0x2456058A0](v43, -1, -1);
          MEMORY[0x2456058A0](v42, -1, -1);
        }

        uint64_t v53 = *(void (**)(char *, uint64_t))(v60 + 8);
        v53(v20, v61);
        if (qword_26AFD4430 != -1) {
          swift_once();
        }
        sub_24099A390();
        uint64_t v44 = sub_240A04DC8();
        sub_2409EFB54(0, (unint64_t *)&qword_26AFD4930, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_240A06870;
        *(void *)(inited + 32) = sub_240A02CF8();
        *(void *)(inited + 40) = v46;
        uint64_t v55 = sub_2409EE91C(inited, v44);
        swift_setDeallocating();
        swift_arrayDestroy();
        sub_2409EE99C();
        sub_2409EC968((uint64_t)v6);
        uint64_t v47 = sub_2409EF748();
        unint64_t v49 = v48;
        if (qword_26AFD4428 != -1) {
          swift_once();
        }
        uint64_t v50 = sub_240A02B08();
        sub_240979894(v50, (uint64_t)qword_26AFD6398);
        id v51 = (void *)sub_240A02B58();
        sub_2409EFB0C(&qword_268C9A730, (void (*)(uint64_t))sub_2409EE99C);
        sub_240A02B78();

        sub_24098E998(v47, v49);
        (*(void (**)(char *, uint64_t))(v57 + 8))(v6, v4);
        _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        sub_240A02BD8();
        sub_240A02BA8();
        uint64_t v52 = (void (*)(uint64_t *, void))sub_240A02BE8();
        sub_2409EB6BC(v55);
        v52(v62, 0);
        uint64_t v36 = v58;
        uint64_t v35 = v59;
        a2 = v54;
        (*(void (**)(uint64_t, char *, uint64_t))(v58 + 32))(v54, v9, v59);
        uint64_t v34 = 0;
        break;
      default:
        swift_bridgeObjectRelease();
LABEL_8:
        sub_240A03FE8();
        id v30 = sub_240A03FF8();
        os_log_type_t v31 = sub_240A04EC8();
        if (os_log_type_enabled(v30, v31))
        {
          uint64_t v32 = swift_slowAlloc();
          uint64_t v33 = swift_slowAlloc();
          v62[0] = v33;
          *(_DWORD *)uint64_t v32 = 136315394;
          uint64_t v63 = sub_240981440(0xD000000000000023, 0x8000000240A0D8B0, v62);
          sub_240A050D8();
          *(_WORD *)(v32 + 12) = 2080;
          uint64_t v63 = sub_240981440(0xD000000000000022, 0x8000000240A0D8E0, v62);
          sub_240A050D8();
          _os_log_impl(&dword_240976000, v30, v31, "[%s.%s]: Feed item will be marked for deletion given no unavailability reasons", (uint8_t *)v32, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2456058A0](v33, -1, -1);
          MEMORY[0x2456058A0](v32, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v60 + 8))(v18, v61);
        goto LABEL_11;
    }
  }
  else
  {
    sub_240A03FE8();
    id v23 = sub_240A03FF8();
    os_log_type_t v24 = sub_240A04EC8();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = a2;
      uint64_t v27 = swift_slowAlloc();
      v62[0] = v27;
      *(_DWORD *)uint64_t v25 = 136315394;
      uint64_t v63 = sub_240981440(0xD000000000000023, 0x8000000240A0D8B0, v62);
      sub_240A050D8();
      *(_WORD *)(v25 + 12) = 2080;
      uint64_t v63 = sub_240981440(0xD000000000000022, 0x8000000240A0D8E0, v62);
      sub_240A050D8();
      _os_log_impl(&dword_240976000, v23, v24, "[%s.%s]: Non-primary source", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      uint64_t v28 = v27;
      a2 = v26;
      MEMORY[0x2456058A0](v28, -1, -1);
      MEMORY[0x2456058A0](v25, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v60 + 8))(v15, v61);
LABEL_11:
    uint64_t v34 = 1;
    uint64_t v36 = v58;
    uint64_t v35 = v59;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(a2, v34, 1, v35);
}

uint64_t sub_2409EC48C(char a1)
{
  return *(void *)&aNone_3[8 * a1];
}

uint64_t sub_2409EC4AC(char *a1, char *a2)
{
  return sub_2409A99D0(*a1, *a2);
}

uint64_t sub_2409EC4B8()
{
  return sub_24099C5C0();
}

uint64_t sub_2409EC4C0()
{
  return sub_24099C700();
}

uint64_t sub_2409EC4C8()
{
  return sub_24099C75C();
}

uint64_t sub_2409EC4D0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2409EFC60();
  *a1 = result;
  return result;
}

uint64_t sub_2409EC500@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2409EC48C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2409EC52C()
{
  return sub_240A04CE8();
}

uint64_t sub_2409EC58C()
{
  return sub_240A04CD8();
}

uint64_t sub_2409EC5DC(void *a1, char a2)
{
  sub_2409EFED8(0, &qword_268C9A740, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v10[-v7];
  sub_24098BDC0(a1, a1[3]);
  sub_2409EFBB8();
  sub_240A05448();
  v10[15] = a2;
  sub_2409EFC0C();
  sub_240A05328();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_2409EC738@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2409EFCAC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2409EC764(uint64_t a1)
{
  unint64_t v2 = sub_2409EFBB8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2409EC7A0(uint64_t a1)
{
  unint64_t v2 = sub_2409EFBB8();

  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_2409EC7DC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_2409EFD40(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_2409EC808(void *a1)
{
  return sub_2409EC5DC(a1, *v1);
}

uint64_t sub_2409EC824()
{
  sub_2409EFB54(0, (unint64_t *)&qword_26AFD4290, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240A06A80;
  *(void *)(inited + 32) = objc_msgSend(self, sel_audiogramSampleType);
  sub_240A04D38();
  uint64_t v1 = sub_2409EE7A8(inited);
  uint64_t result = swift_bridgeObjectRelease();
  qword_26AFD63B0 = v1;
  return result;
}

uint64_t sub_2409EC8E0()
{
  uint64_t v0 = sub_240A02B08();
  sub_2409825B0(v0, qword_26AFD6398);
  uint64_t v1 = sub_240979894(v0, (uint64_t)qword_26AFD6398);
  uint64_t v2 = *MEMORY[0x263F45540];
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t sub_2409EC968@<X0>(uint64_t a1@<X8>)
{
  v24[4] = a1;
  uint64_t v1 = sub_240A034D8();
  MEMORY[0x270FA5388](v1 - 8);
  v24[3] = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24099A57C(0, &qword_26AFD3F58, MEMORY[0x263F43658], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v24 - v5;
  uint64_t v7 = sub_240A037F8();
  MEMORY[0x270FA5388](v7);
  sub_24099A57C(0, &qword_268C99788, MEMORY[0x263F43640], v3);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v24 - v9;
  sub_24099A57C(0, &qword_268C99790, MEMORY[0x263F43F20], v3);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v24 - v12;
  uint64_t v14 = sub_240A03508();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = sub_240A02EA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v10, 1, 1, v15);
  uint64_t v16 = (uint64_t (*)(uint64_t))MEMORY[0x263F44328];
  sub_24099A57C(0, &qword_268C99798, MEMORY[0x263F44328], MEMORY[0x263F8E0F8]);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_240A06800;
  sub_240A037E8();
  sub_240A037D8();
  uint64_t v24[5] = v17;
  sub_2409EFB0C(&qword_268C997A0, MEMORY[0x263F44328]);
  sub_24099A57C(0, &qword_268C997A8, v16, MEMORY[0x263F8D488]);
  sub_24099A4F4();
  sub_240A05138();
  sub_240A03758();
  swift_allocObject();
  id v24[2] = sub_240A03748();
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  v24[1] = sub_240A02828();
  sub_240A02828();
  sub_240A02828();
  uint64_t v18 = sub_240A02EE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v6, 1, 1, v18);
  sub_24099A57C(0, &qword_268C997B8, MEMORY[0x263F43C08], MEMORY[0x263F8E0F8]);
  uint64_t v19 = sub_240A032D8();
  uint64_t v20 = *(void *)(v19 - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_240A06870;
  (*(void (**)(unint64_t, void, uint64_t))(v20 + 104))(v22 + v21, *MEMORY[0x263F43BD8], v19);
  sub_240A034C8();
  return sub_240A034A8();
}

unint64_t sub_2409ED008(uint64_t a1, uint64_t a2)
{
  sub_240A04FF8();
  unint64_t result = sub_240A05148();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_2409ED08C(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    id v8 = a2;
    uint64_t v9 = sub_240A05178();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_24099A390();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v26;
      sub_240A03B98();
      return 0;
    }
    uint64_t result = sub_240A05168();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_2409ED4BC(v7, result + 1);
    uint64_t v27 = v21;
    if (*(void *)(v21 + 24) <= *(void *)(v21 + 16))
    {
      id v25 = v8;
      sub_2409ED6A0();
      uint64_t v22 = v27;
    }
    else
    {
      uint64_t v22 = v21;
      id v23 = v8;
    }
    sub_2409ED008((uint64_t)v8, v22);
    *uint64_t v3 = v22;
  }
  else
  {
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v11 = sub_240A04FF8();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_24099A390();
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_240A05008();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_240A05008();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_2409EDC18((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v28;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_2409ED30C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_240A053F8();
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_240A04C98();
  uint64_t v8 = sub_240A05418();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_240A05368() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      char v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_240A05368() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_2409EDD90(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_2409ED4BC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_2409A6384();
    uint64_t v2 = sub_240A051B8();
    uint64_t v14 = v2;
    sub_240A05158();
    if (sub_240A05188())
    {
      sub_24099A390();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_2409ED6A0();
          uint64_t v2 = v14;
        }
        uint64_t result = sub_240A04FF8();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_240A05188());
    }
    swift_release();
  }
  else
  {
    sub_240A03B98();
    return MEMORY[0x263F8EE88];
  }
  return v2;
}

uint64_t sub_2409ED6A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_2409A6384();
  uint64_t v3 = sub_240A051A8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v28;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = sub_240A04FF8();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_2409ED93C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_2409EFA00();
  uint64_t v3 = sub_240A051A8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    id v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *id v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_240A053F8();
      sub_240A04C98();
      uint64_t result = sub_240A05418();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

void sub_2409EDC18(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_2409ED6A0();
  }
  else
  {
    if (v7 > v6)
    {
      sub_2409EDF2C();
      goto LABEL_14;
    }
    sub_2409EE284();
  }
  uint64_t v8 = *v3;
  uint64_t v9 = sub_240A04FF8();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_24099A390();
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = sub_240A05008();

    if (v12)
    {
LABEL_13:
      sub_240A05388();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = sub_240A05008();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

uint64_t sub_2409EDD90(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_2409ED93C();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_2409EE0D4();
      goto LABEL_22;
    }
    sub_2409EE4FC();
  }
  uint64_t v11 = *v4;
  sub_240A053F8();
  sub_240A04C98();
  uint64_t result = sub_240A05418();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    char v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_240A05368(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_240A05388();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        BOOL v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_240A05368();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

id sub_2409EDF2C()
{
  uint64_t v1 = v0;
  sub_2409A6384();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_240A05198();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2409EE0D4()
{
  uint64_t v1 = v0;
  sub_2409EFA00();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_240A05198();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v19 = *v17;
    v19[1] = v18;
    id result = (void *)_s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2409EE284()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_2409A6384();
  uint64_t v3 = sub_240A051A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  BOOL v27 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    id v19 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = sub_240A04FF8();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v27;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2409EE4FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_2409EFA00();
  uint64_t v3 = sub_240A051A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    id v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_240A053F8();
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_240A04C98();
    uint64_t result = sub_240A05418();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2409EE7A8(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_240A05288();
    swift_bridgeObjectRelease();
  }
  sub_24099A390();
  sub_2409EFB0C(&qword_26AFD48A0, (void (*)(uint64_t))sub_24099A390);
  uint64_t result = sub_240A04DB8();
  uint64_t v10 = result;
  if (v2)
  {
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v4 = sub_240A05288();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        uint64_t v6 = (void *)MEMORY[0x245604E50](i, a1);
        sub_2409ED08C(&v9, v6);
      }
    }
    else
    {
      uint64_t v7 = (void **)(a1 + 32);
      do
      {
        unint64_t v8 = *v7++;
        sub_2409ED08C(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2409EE91C(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = a2;
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v4 = *(v3 - 1);
      uint64_t v5 = *v3;
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      sub_2409ED30C(&v7, v4, v5);
      swift_bridgeObjectRelease();
      v3 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return a2;
}

void sub_2409EE99C()
{
  if (!qword_268C9A720)
  {
    type metadata accessor for HearingTestRescindedTileActionHandler();
    sub_2409EFB0C(&qword_268C9A728, (void (*)(uint64_t))type metadata accessor for HearingTestRescindedTileActionHandler);
    unint64_t v0 = sub_240A03538();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A720);
    }
  }
}

uint64_t sub_2409EEA30()
{
  uint64_t v0 = sub_240A04018();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  uint64_t v7 = (char *)&v79 - v6;
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v79 - v9;
  MEMORY[0x270FA5388](v8);
  unint64_t v12 = (char *)&v79 - v11;
  unint64_t v13 = (void *)sub_240A03F58();
  if ((sub_240A03F38() & 1) == 0)
  {
    sub_240A03FE8();
    int64_t v16 = sub_240A03FF8();
    os_log_type_t v17 = sub_240A04EC8();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v88 = v19;
      *(_DWORD *)uint64_t v18 = 136315394;
      uint64_t v87 = sub_240981440(0xD000000000000023, 0x8000000240A0D8B0, &v88);
      sub_240A050D8();
      *(_WORD *)(v18 + 12) = 2080;
      uint64_t v87 = sub_240981440(0xD000000000000015, 0x8000000240A0D9A0, &v88);
      sub_240A050D8();
      _os_log_impl(&dword_240976000, v16, v17, "[%s.%s]: Feed item will not be created given onboarding and feature enabled status", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v19, -1, -1);
      MEMORY[0x2456058A0](v18, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    return 0;
  }
  uint64_t v14 = *MEMORY[0x263F09670];
  id v15 = v13;
  if (objc_msgSend(v15, sel_isRequirementSatisfiedWithIdentifier_, v14))
  {
    if (objc_msgSend(v15, sel_isRequirementSatisfiedWithIdentifier_, *MEMORY[0x263F09708]))
    {
      if (objc_msgSend(v15, sel_isRequirementSatisfiedWithIdentifier_, *MEMORY[0x263F09650]))
      {

        return 0;
      }
      sub_240A03FE8();
      uint64_t v50 = sub_240A03FF8();
      int v51 = sub_240A04EC8();
      if (os_log_type_enabled(v50, (os_log_type_t)v51))
      {
        int v82 = v51;
        uint64_t v85 = v0;
        uint64_t v86 = v1;
        uint64_t v52 = swift_slowAlloc();
        uint64_t v81 = swift_slowAlloc();
        uint64_t v88 = v81;
        *(_DWORD *)uint64_t v52 = 136315650;
        uint64_t v87 = sub_240981440(0xD000000000000023, 0x8000000240A0D8B0, &v88);
        sub_240A050D8();
        *(_WORD *)(v52 + 12) = 2080;
        uint64_t v87 = sub_240981440(0xD000000000000015, 0x8000000240A0D9A0, &v88);
        sub_240A050D8();
        uint64_t v83 = (uint8_t *)v52;
        *(_WORD *)(v52 + 22) = 2080;
        id v53 = objc_msgSend(v15, sel_unsatisfiedRequirementIdentifiers);
        type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(0);
        uint64_t v54 = sub_240A04D18();

        int64_t v55 = *(void *)(v54 + 16);
        if (v55)
        {
          uint64_t v80 = v50;
          id v84 = v15;
          uint64_t v87 = MEMORY[0x263F8EE78];
          sub_240992AC0(0, v55, 0);
          uint64_t v56 = 0;
          uint64_t v57 = v87;
          do
          {
            uint64_t v58 = sub_240A04C58();
            uint64_t v60 = v59;
            uint64_t v87 = v57;
            unint64_t v62 = *(void *)(v57 + 16);
            unint64_t v61 = *(void *)(v57 + 24);
            if (v62 >= v61 >> 1)
            {
              sub_240992AC0(v61 > 1, v62 + 1, 1);
              uint64_t v57 = v87;
            }
            ++v56;
            *(void *)(v57 + 16) = v62 + 1;
            unint64_t v63 = v57 + 16 * v62;
            *(void *)(v63 + 32) = v58;
            *(void *)(v63 + 40) = v60;
          }
          while (v55 != v56);
          swift_bridgeObjectRelease();
          id v15 = v84;
          uint64_t v50 = v80;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v57 = MEMORY[0x263F8EE78];
        }
        uint64_t v87 = v57;
        uint64_t v74 = v83;
        sub_2409EFB54(0, &qword_268C99638, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
        sub_240993C18();
        uint64_t v75 = sub_240A04BD8();
        unint64_t v77 = v76;
        swift_bridgeObjectRelease();
        uint64_t v87 = sub_240981440(v75, v77, &v88);
        sub_240A050D8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240976000, v50, (os_log_type_t)v82, "[%s.%s]: Returning regionGated state from unavailability %s", v74, 0x20u);
        uint64_t v34 = 3;
        uint64_t v78 = v81;
        swift_arrayDestroy();
        MEMORY[0x2456058A0](v78, -1, -1);
        MEMORY[0x2456058A0](v74, -1, -1);

        (*(void (**)(char *, uint64_t))(v86 + 8))(v7, v85);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v1 + 8))(v7, v0);
        return 3;
      }
    }
    else
    {
      sub_240A03FE8();
      uint64_t v36 = sub_240A03FF8();
      int v37 = sub_240A04EC8();
      if (os_log_type_enabled(v36, (os_log_type_t)v37))
      {
        int v82 = v37;
        uint64_t v85 = v0;
        uint64_t v86 = v1;
        uint64_t v38 = swift_slowAlloc();
        uint64_t v81 = swift_slowAlloc();
        uint64_t v88 = v81;
        *(_DWORD *)uint64_t v38 = 136315650;
        uint64_t v87 = sub_240981440(0xD000000000000023, 0x8000000240A0D8B0, &v88);
        sub_240A050D8();
        *(_WORD *)(v38 + 12) = 2080;
        uint64_t v87 = sub_240981440(0xD000000000000015, 0x8000000240A0D9A0, &v88);
        sub_240A050D8();
        uint64_t v83 = (uint8_t *)v38;
        *(_WORD *)(v38 + 22) = 2080;
        id v39 = objc_msgSend(v15, sel_unsatisfiedRequirementIdentifiers);
        type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(0);
        uint64_t v40 = sub_240A04D18();

        int64_t v41 = *(void *)(v40 + 16);
        if (v41)
        {
          uint64_t v80 = v36;
          id v84 = v15;
          uint64_t v87 = MEMORY[0x263F8EE78];
          sub_240992AC0(0, v41, 0);
          uint64_t v42 = 0;
          uint64_t v43 = v87;
          do
          {
            uint64_t v44 = sub_240A04C58();
            uint64_t v46 = v45;
            uint64_t v87 = v43;
            unint64_t v48 = *(void *)(v43 + 16);
            unint64_t v47 = *(void *)(v43 + 24);
            if (v48 >= v47 >> 1)
            {
              sub_240992AC0(v47 > 1, v48 + 1, 1);
              uint64_t v43 = v87;
            }
            ++v42;
            *(void *)(v43 + 16) = v48 + 1;
            unint64_t v49 = v43 + 16 * v48;
            *(void *)(v49 + 32) = v44;
            *(void *)(v49 + 40) = v46;
          }
          while (v41 != v42);
          swift_bridgeObjectRelease();
          id v15 = v84;
          uint64_t v36 = v80;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v43 = MEMORY[0x263F8EE78];
        }
        uint64_t v87 = v43;
        uint64_t v69 = v83;
        sub_2409EFB54(0, &qword_268C99638, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
        sub_240993C18();
        uint64_t v70 = sub_240A04BD8();
        unint64_t v72 = v71;
        swift_bridgeObjectRelease();
        uint64_t v87 = sub_240981440(v70, v72, &v88);
        sub_240A050D8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240976000, v36, (os_log_type_t)v82, "[%s.%s]: Returning seedExpiry state from unavailability %s", v69, 0x20u);
        uint64_t v73 = v81;
        swift_arrayDestroy();
        MEMORY[0x2456058A0](v73, -1, -1);
        MEMORY[0x2456058A0](v69, -1, -1);

        (*(void (**)(char *, uint64_t))(v86 + 8))(v10, v85);
        return 2;
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v0);
        return 2;
      }
    }
  }
  else
  {
    sub_240A03FE8();
    uint64_t v20 = sub_240A03FF8();
    int v21 = sub_240A04EC8();
    if (os_log_type_enabled(v20, (os_log_type_t)v21))
    {
      int v82 = v21;
      uint64_t v85 = v0;
      uint64_t v86 = v1;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v81 = swift_slowAlloc();
      uint64_t v88 = v81;
      *(_DWORD *)uint64_t v22 = 136315650;
      uint64_t v87 = sub_240981440(0xD000000000000023, 0x8000000240A0D8B0, &v88);
      sub_240A050D8();
      *(_WORD *)(v22 + 12) = 2080;
      uint64_t v87 = sub_240981440(0xD000000000000015, 0x8000000240A0D9A0, &v88);
      sub_240A050D8();
      uint64_t v83 = (uint8_t *)v22;
      *(_WORD *)(v22 + 22) = 2080;
      id v23 = objc_msgSend(v15, sel_unsatisfiedRequirementIdentifiers);
      type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(0);
      uint64_t v24 = sub_240A04D18();

      int64_t v25 = *(void *)(v24 + 16);
      if (v25)
      {
        uint64_t v80 = v20;
        id v84 = v15;
        uint64_t v87 = MEMORY[0x263F8EE78];
        sub_240992AC0(0, v25, 0);
        uint64_t v26 = 0;
        uint64_t v27 = v87;
        do
        {
          uint64_t v28 = sub_240A04C58();
          uint64_t v30 = v29;
          uint64_t v87 = v27;
          unint64_t v32 = *(void *)(v27 + 16);
          unint64_t v31 = *(void *)(v27 + 24);
          if (v32 >= v31 >> 1)
          {
            sub_240992AC0(v31 > 1, v32 + 1, 1);
            uint64_t v27 = v87;
          }
          ++v26;
          *(void *)(v27 + 16) = v32 + 1;
          unint64_t v33 = v27 + 16 * v32;
          *(void *)(v33 + 32) = v28;
          *(void *)(v33 + 40) = v30;
        }
        while (v25 != v26);
        swift_bridgeObjectRelease();
        id v15 = v84;
        uint64_t v20 = v80;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v27 = MEMORY[0x263F8EE78];
      }
      uint64_t v87 = v27;
      uint64_t v64 = v83;
      sub_2409EFB54(0, &qword_268C99638, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
      sub_240993C18();
      uint64_t v65 = sub_240A04BD8();
      unint64_t v67 = v66;
      swift_bridgeObjectRelease();
      uint64_t v87 = sub_240981440(v65, v67, &v88);
      sub_240A050D8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240976000, v20, (os_log_type_t)v82, "[%s.%s]: Returning remoteDisable state from unavailability %s", v64, 0x20u);
      uint64_t v68 = v81;
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v68, -1, -1);
      MEMORY[0x2456058A0](v64, -1, -1);

      (*(void (**)(char *, uint64_t))(v86 + 8))(v12, v85);
      return 1;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v1 + 8))(v12, v0);
      return 1;
    }
  }
  return v34;
}

uint64_t sub_2409EF748()
{
  uint64_t v0 = sub_240A04018();
  MEMORY[0x270FA5388](v0);
  sub_240A026F8();
  swift_allocObject();
  sub_240A026E8();
  sub_2409EFA60();
  uint64_t v1 = sub_240A026D8();
  swift_release();
  return v1;
}

void sub_2409EFA00()
{
  if (!qword_26AFD48E0)
  {
    unint64_t v0 = sub_240A051D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD48E0);
    }
  }
}

unint64_t sub_2409EFA60()
{
  unint64_t result = qword_268C9A738;
  if (!qword_268C9A738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A738);
  }
  return result;
}

unint64_t sub_2409EFAB4()
{
  unint64_t result = qword_268C993F0;
  if (!qword_268C993F0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C993F0);
  }
  return result;
}

uint64_t sub_2409EFB0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2409EFB54(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

ValueMetadata *type metadata accessor for HearingTestRescindedFeedItemConfiguration()
{
  return &type metadata for HearingTestRescindedFeedItemConfiguration;
}

unint64_t sub_2409EFBB8()
{
  unint64_t result = qword_268C9A748;
  if (!qword_268C9A748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A748);
  }
  return result;
}

unint64_t sub_2409EFC0C()
{
  unint64_t result = qword_268C9A750;
  if (!qword_268C9A750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A750);
  }
  return result;
}

uint64_t sub_2409EFC60()
{
  unint64_t v0 = sub_240A05308();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_2409EFCAC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_240A05368();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2409EFD2C()
{
  return 0x6574617473;
}

void *sub_2409EFD40(void *a1)
{
  sub_2409EFED8(0, &qword_268C9A758, MEMORY[0x263F8E040]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v10[-v6];
  uint64_t v8 = sub_24098BDC0(a1, a1[3]);
  sub_2409EFBB8();
  sub_240A05438();
  if (!v1)
  {
    sub_2409EFF3C();
    sub_240A05318();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v8 = (void *)v10[15];
  }
  sub_240981514((uint64_t)a1);
  return v8;
}

void sub_2409EFED8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_2409EFBB8();
    unint64_t v7 = a3(a1, &type metadata for HearingTestRescindedFeedItemConfiguration.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_2409EFF3C()
{
  unint64_t result = qword_268C9A760;
  if (!qword_268C9A760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A760);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for HearingTestRescindedFeedItemConfiguration.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2409F002CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for HearingTestRescindedFeedItemConfiguration.CodingKeys()
{
  return &type metadata for HearingTestRescindedFeedItemConfiguration.CodingKeys;
}

unsigned char *_s16HearingAppPlugin25HearingTestRescindedStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2409F0130);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HearingTestRescindedState()
{
  return &type metadata for HearingTestRescindedState;
}

unint64_t sub_2409F016C()
{
  unint64_t result = qword_268C9A768;
  if (!qword_268C9A768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A768);
  }
  return result;
}

unint64_t sub_2409F01C4()
{
  unint64_t result = qword_268C9A770;
  if (!qword_268C9A770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A770);
  }
  return result;
}

unint64_t sub_2409F021C()
{
  unint64_t result = qword_268C9A778;
  if (!qword_268C9A778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A778);
  }
  return result;
}

unint64_t sub_2409F0274()
{
  unint64_t result = qword_268C9A780;
  if (!qword_268C9A780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A780);
  }
  return result;
}

unint64_t sub_2409F02C8()
{
  unint64_t result = qword_268C9A788;
  if (!qword_268C9A788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A788);
  }
  return result;
}

double sub_2409F031C@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v6 = sub_240A05308();
  swift_bridgeObjectRelease();
  if (v6)
  {
    if (qword_268C99318 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_240A04018();
    sub_240979894(v7, (uint64_t)qword_268C9AA58);
    swift_bridgeObjectRetain_n();
    uint64_t v8 = sub_240A03FF8();
    os_log_type_t v9 = sub_240A04EA8();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v19 = v11;
      *(_DWORD *)uint64_t v10 = 136446466;
      uint64_t v12 = sub_240A05478();
      sub_240981440(v12, v13, &v19);
      sub_240A050D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2082;
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      sub_240981440(a1, a2, &v19);
      sub_240A050D8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_240976000, v8, v9, "[%{public}s] Onboarding identifier %{public}s could not be found", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v11, -1, -1);
      MEMORY[0x2456058A0](v10, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    *(void *)(a3 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  else
  {
    *(void *)(a3 + 24) = type metadata accessor for EnvironmentAudioNotificationOnboardingDataProvider();
    *(void *)(a3 + 32) = &off_26F4FAD60;
    uint64_t v14 = sub_24097F464((uint64_t *)a3);
    if (qword_26AFD49D0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_240A04018();
    uint64_t v16 = sub_240979894(v15, (uint64_t)qword_26AFD6440);
    os_log_type_t v17 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
    v17(v14, v16, v15);
  }
  return result;
}

Swift::Void __swiftcall OnboardingTileActionHandler.didTap()()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_240A03AD8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v0 + qword_268C9A790;
  uint64_t v7 = sub_240A03FF8();
  os_log_type_t v8 = sub_240A04EC8();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v26 = v2;
    uint64_t v9 = swift_slowAlloc();
    uint64_t v27 = v6;
    uint64_t v10 = (uint8_t *)v9;
    uint64_t v11 = swift_slowAlloc();
    v31[0] = v11;
    uint64_t v28 = v1;
    *(_DWORD *)uint64_t v10 = 136446210;
    uint64_t v12 = sub_240A05478();
    *(void *)&long long v29 = sub_240981440(v12, v13, v31);
    uint64_t v2 = v26;
    uint64_t v1 = v28;
    sub_240A050D8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240976000, v7, v8, "[%{public}s] Did begin onboarding...", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v11, -1, -1);
    MEMORY[0x2456058A0](v10, -1, -1);
  }

  sub_240A03C48();
  sub_240A03AA8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_24098BDC0(v31, v32);
  uint64_t v14 = sub_240A03A78();
  unint64_t v16 = v15;
  sub_240981514((uint64_t)v31);
  sub_2409F031C(v14, v16, (uint64_t)&v29);
  if (v30)
  {
    swift_bridgeObjectRelease();
    sub_240980754(&v29, (uint64_t)v31);
    uint64_t v17 = v32;
    uint64_t v18 = v33;
    sub_24098BDC0(v31, v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 40))(v1, v17, v18);
    sub_240981514((uint64_t)v31);
  }
  else
  {
    sub_2409F0A38((uint64_t)&v29);
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v19 = sub_240A03FF8();
    os_log_type_t v20 = sub_240A04EA8();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      v31[0] = v22;
      *(_DWORD *)uint64_t v21 = 136446466;
      uint64_t v23 = sub_240A05478();
      *(void *)&long long v29 = sub_240981440(v23, v24, v31);
      sub_240A050D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2082;
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      *(void *)&long long v29 = sub_240981440(v14, v16, v31);
      sub_240A050D8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_240976000, v19, v20, "[%{public}s] Could not get onboarding experience for identifier: %{public}s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v22, -1, -1);
      MEMORY[0x2456058A0](v21, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_2409F0A38(uint64_t a1)
{
  sub_2409F0A94();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2409F0A94()
{
  if (!qword_268C9A798)
  {
    sub_2409F0AEC();
    unint64_t v0 = sub_240A050C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A798);
    }
  }
}

unint64_t sub_2409F0AEC()
{
  unint64_t result = qword_26AFD45B0;
  if (!qword_26AFD45B0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD45B0);
  }
  return result;
}

uint64_t OnboardingTileActionHandler.__allocating_init(context:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_240A03AD8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_allocWithZone(v2);
  uint64_t v9 = qword_268C9A790;
  uint64_t v10 = qword_268C99318;
  uint64_t v11 = (char *)v8;
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_240A04018();
  uint64_t v13 = sub_240979894(v12, (uint64_t)qword_268C9AA58);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(&v11[v9], v13, v12);

  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v14 = sub_240A03C58();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return v14;
}

uint64_t OnboardingTileActionHandler.init(context:)(uint64_t a1)
{
  uint64_t v3 = sub_240A03AD8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = qword_268C9A790;
  uint64_t v8 = qword_268C99318;
  uint64_t v9 = v1;
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v10 = &v9[v7];
  uint64_t v11 = sub_240A04018();
  uint64_t v12 = sub_240979894(v11, (uint64_t)qword_268C9AA58);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v10, v12, v11);

  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t v13 = sub_240A03C58();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v13;
}

uint64_t sub_2409F0E78()
{
  uint64_t v1 = v0 + qword_268C9A790;
  uint64_t v2 = sub_240A04018();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

id OnboardingTileActionHandler.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OnboardingTileActionHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2409F0F1C(uint64_t a1)
{
  uint64_t v1 = a1 + qword_268C9A790;
  uint64_t v2 = sub_240A04018();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_2409F0F8C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_2409819F0();
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_240A052E8();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for OnboardingTileActionHandler()
{
  uint64_t result = qword_268C9A7A8;
  if (!qword_268C9A7A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2409F1124()
{
  return sub_2409F11B4(&qword_268C9A7A0, (void (*)(uint64_t))type metadata accessor for OnboardingTileActionHandler);
}

uint64_t sub_2409F116C()
{
  return sub_2409F11B4(&qword_26AFD4478, MEMORY[0x263F43E20]);
}

uint64_t sub_2409F11B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2409F11FC()
{
  uint64_t result = sub_240A04018();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_2409F1294()
{
  return type metadata accessor for OnboardingTileActionHandler();
}

uint64_t sub_2409F12A0()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_2409F12AC()
{
  return *(void *)(v0 + 32);
}

uint64_t AudiogramPDFAsyncConfigurationDataSource.numberOfRows.getter()
{
  return 2;
}

void *static AudiogramPDFAsyncConfigurationDataSource.PDFConfigurationRow.allCases.getter()
{
  return &unk_26F4F9DB0;
}

uint64_t AudiogramPDFAsyncConfigurationDataSource.previewTitle.getter()
{
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  return sub_240A02828();
}

uint64_t AudiogramPDFAsyncConfigurationDataSource.shareButtonBehavior.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 24) + OBJC_IVAR____TtC16HearingAppPlugin20AudiogramPDFProvider_shareButtonBehavior;
  uint64_t v4 = sub_240A03688();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_2409F13E8(char a1)
{
  if (a1)
  {
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
  }
  else if (qword_26AFD4A20 != -1)
  {
    swift_once();
  }
  return sub_240A02828();
}

HearingAppPlugin::AudiogramPDFAsyncConfigurationDataSource::PDFConfigurationRow_optional __swiftcall AudiogramPDFAsyncConfigurationDataSource.PDFConfigurationRow.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    v1.value = HearingAppPlugin_AudiogramPDFAsyncConfigurationDataSource_PDFConfigurationRow_all;
  }
  else {
    v1.value = HearingAppPlugin_AudiogramPDFAsyncConfigurationDataSource_PDFConfigurationRow_unknownDefault;
  }
  if (rawValue) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t AudiogramPDFAsyncConfigurationDataSource.PDFConfigurationRow.rawValue.getter(char a1)
{
  return a1 & 1;
}

void *sub_2409F14F8@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

void sub_2409F1518(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_2409F1524(void *a1@<X8>)
{
  *a1 = &unk_26F4F9DD8;
}

uint64_t AudiogramPDFAsyncConfigurationDataSource.selectedConfiguration.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t AudiogramPDFAsyncConfigurationDataSource.debounceForSelectedItemInSeconds.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t AudiogramPDFAsyncConfigurationDataSource.item(for:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_240A04018();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    char v9 = 0;
    goto LABEL_5;
  }
  if (a1 == 1)
  {
    char v9 = 1;
LABEL_5:
    swift_beginAccess();
    if (*(unsigned __int8 *)(v2 + 16) == a1) {
      uint64_t v10 = 3;
    }
    else {
      uint64_t v10 = 0;
    }
    uint64_t v11 = sub_2409F13E8(v9);
    uint64_t v13 = v12;
    a2[3] = (uint64_t)&type metadata for AudiogramPDFAsyncConfigurationDataSource.Item;
    a2[4] = sub_2409F1870();
    uint64_t result = swift_allocObject();
    char v15 = 0;
    *a2 = result;
    *(void *)(result + 16) = v11;
    *(void *)(result + 24) = v13;
    *(void *)(result + 32) = v10;
    *(unsigned char *)(result + 40) = 0;
    goto LABEL_12;
  }
  sub_240A03FE8();
  uint64_t v16 = sub_240A03FF8();
  os_log_type_t v17 = sub_240A04EA8();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    v24[0] = v23;
    *(_DWORD *)uint64_t v18 = 136446466;
    uint64_t v22 = v18 + 4;
    uint64_t v19 = sub_240A05478();
    uint64_t v25 = sub_240981440(v19, v20, v24);
    sub_240A050D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2050;
    uint64_t v25 = a1;
    sub_240A050D8();
    _os_log_impl(&dword_240976000, v16, v17, "[%{public}s] PDF Configuration Row not found for row %{public}ld", (uint8_t *)v18, 0x16u);
    uint64_t v21 = v23;
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v21, -1, -1);
    MEMORY[0x2456058A0](v18, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  a2[3] = (uint64_t)&type metadata for AudiogramPDFAsyncConfigurationDataSource.Item;
  a2[4] = sub_2409F1870();
  uint64_t result = swift_allocObject();
  uint64_t v10 = 0;
  *a2 = result;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  char v15 = 1;
  *(unsigned char *)(result + 40) = 1;
LABEL_12:
  *(void *)(result + 48) = v10;
  *(unsigned char *)(result + 56) = v15;
  return result;
}

unint64_t sub_2409F1870()
{
  unint64_t result = qword_268C9A7B8;
  if (!qword_268C9A7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A7B8);
  }
  return result;
}

uint64_t sub_2409F18C4()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 57, 7);
}

Swift::Void __swiftcall AudiogramPDFAsyncConfigurationDataSource.didSelectRowAt(_:)(Swift::Int a1)
{
  uint64_t v3 = sub_240A04018();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    char v7 = 0;
    goto LABEL_5;
  }
  if (a1 == 1)
  {
    char v7 = 1;
LABEL_5:
    swift_beginAccess();
    *(unsigned char *)(v1 + 16) = v7;
    return;
  }
  sub_240A03FE8();
  int64_t v8 = sub_240A03FF8();
  os_log_type_t v9 = sub_240A04EA8();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    v16[0] = v15;
    *(_DWORD *)uint64_t v10 = 136446466;
    uint64_t v11 = sub_240A05478();
    uint64_t v17 = sub_240981440(v11, v12, v16);
    sub_240A050D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2050;
    uint64_t v17 = a1;
    sub_240A050D8();
    _os_log_impl(&dword_240976000, v8, v9, "[%{public}s] PDF Configuration Row not found for row %{public}ld", (uint8_t *)v10, 0x16u);
    uint64_t v13 = v15;
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v13, -1, -1);
    MEMORY[0x2456058A0](v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void AudiogramPDFAsyncConfigurationDataSource.pdfConfiguration.getter(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  BOOL v3 = (*(unsigned char *)(v1 + 16) & 1) == 0;
  sub_2409C2CE8((void *)v3, a1);
  sub_2409C8D40((id)v3);
}

uint64_t AudiogramPDFAsyncConfigurationDataSource.pdfFileNameProvider.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_2409C5074(*(void **)(v1 + 32));
  uint64_t result = sub_240A03478();
  uint64_t v5 = MEMORY[0x263F43ED0];
  a1[3] = result;
  a1[4] = v5;
  *a1 = v3;
  return result;
}

uint64_t AudiogramPDFAsyncConfigurationDataSource.deinit()
{
  swift_release();

  return v0;
}

uint64_t AudiogramPDFAsyncConfigurationDataSource.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_2409F1C64()
{
  return 2;
}

uint64_t sub_2409F1C6C()
{
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  return sub_240A02828();
}

uint64_t sub_2409F1D0C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return AudiogramPDFAsyncConfigurationDataSource.item(for:)(a1, a2);
}

void sub_2409F1D30(Swift::Int a1)
{
}

uint64_t sub_2409F1D54()
{
  return *(void *)(*(void *)v0 + 40);
}

void sub_2409F1D64(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  BOOL v4 = (*(unsigned char *)(v3 + 16) & 1) == 0;
  sub_2409C2CE8((void *)v4, a1);
  sub_2409C8D40((id)v4);
}

uint64_t sub_2409F1DD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_2409C5074(*(void **)(*(void *)v1 + 32));
  uint64_t result = sub_240A03478();
  uint64_t v5 = MEMORY[0x263F43ED0];
  a1[3] = result;
  a1[4] = v5;
  *a1 = v3;
  return result;
}

uint64_t sub_2409F1E18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 24) + OBJC_IVAR____TtC16HearingAppPlugin20AudiogramPDFProvider_shareButtonBehavior;
  uint64_t v4 = sub_240A03688();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_2409F1E9C(void *a1)
{
  uint64_t v2 = v1;
  *(unsigned char *)(v2 + 16) = 0;
  *(void *)(v2 + 40) = 0x3FF8000000000000;
  *(unsigned char *)(v2 + 48) = 0;
  type metadata accessor for AudiogramPDFProvider(0);
  uint64_t v4 = (void *)swift_allocObject();
  uint64_t v5 = (void *)((char *)v4 + OBJC_IVAR____TtC16HearingAppPlugin20AudiogramPDFProvider_shareButtonBehavior);
  id v6 = a1;
  sub_2409C29B8(v5);
  id v4[2] = v6;
  uint64_t v7 = sub_240A037C8();
  id v8 = v6;
  uint64_t v9 = sub_240A037B8();
  uint64_t v10 = MEMORY[0x263F442B0];
  v4[6] = v7;
  v4[7] = v10;
  void v4[3] = v9;
  *(void *)(v2 + 24) = v4;
  *(void *)(v2 + 32) = v8;
  return v2;
}

unint64_t sub_2409F1F70()
{
  unint64_t result = qword_268C9A7C0;
  if (!qword_268C9A7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A7C0);
  }
  return result;
}

unint64_t sub_2409F1FC8()
{
  unint64_t result = qword_268C9A7C8;
  if (!qword_268C9A7C8)
  {
    sub_2409F2020();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A7C8);
  }
  return result;
}

void sub_2409F2020()
{
  if (!qword_268C9A7D0)
  {
    unint64_t v0 = sub_240A04D78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A7D0);
    }
  }
}

uint64_t sub_2409F2078@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 16);
  return result;
}

uint64_t sub_2409F20C0(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 16) = v2;
  return result;
}

uint64_t type metadata accessor for AudiogramPDFAsyncConfigurationDataSource()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for AudiogramPDFAsyncConfigurationDataSource.PDFConfigurationRow(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2409F21F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudiogramPDFAsyncConfigurationDataSource.PDFConfigurationRow()
{
  return &type metadata for AudiogramPDFAsyncConfigurationDataSource.PDFConfigurationRow;
}

uint64_t initializeWithCopy for AudiogramPDFAsyncConfigurationDataSource.Item(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return a1;
}

uint64_t assignWithCopy for AudiogramPDFAsyncConfigurationDataSource.Item(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v5;
  return a1;
}

__n128 initializeWithTake for AudiogramPDFAsyncConfigurationDataSource.Item(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AudiogramPDFAsyncConfigurationDataSource.Item(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudiogramPDFAsyncConfigurationDataSource.Item(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AudiogramPDFAsyncConfigurationDataSource.Item(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudiogramPDFAsyncConfigurationDataSource.Item()
{
  return &type metadata for AudiogramPDFAsyncConfigurationDataSource.Item;
}

uint64_t sub_2409F2424(uint64_t a1, NSObject *a2, void (*a3)(char *, char *, uint64_t), uint64_t a4, char *a5)
{
  int64_t v55 = a3;
  uint64_t v56 = a5;
  os_log_t v53 = a2;
  uint64_t v54 = a4;
  uint64_t v6 = sub_240A02C18();
  uint64_t v57 = *(void *)(v6 - 8);
  uint64_t v58 = v6;
  MEMORY[0x270FA5388](v6);
  id v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240A04018();
  uint64_t v59 = *(void *)(v9 - 8);
  uint64_t v60 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v51 - v13;
  sub_24097FDC0(0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_240A02E88();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v25 = (char *)&v51 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v51 - v26;
  sub_24097FC94(a1, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_24097FC38((uint64_t)v17);
    sub_240A03FE8();
    unint64_t v28 = (unint64_t)v55;
    swift_bridgeObjectRetain_n();
    long long v29 = sub_240A03FF8();
    os_log_type_t v30 = sub_240A04EC8();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v62 = v32;
      *(_DWORD *)uint64_t v31 = 136315394;
      uint64_t v33 = sub_240A05478();
      uint64_t v61 = sub_240981440(v33, v34, &v62);
      sub_240A050D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2080;
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v61 = sub_240981440((uint64_t)v53, v28, &v62);
      sub_240A050D8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_240976000, v29, v30, "%s Creating no feed items with identifier %s", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v32, -1, -1);
      MEMORY[0x2456058A0](v31, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v59 + 8))(v14, v60);
    return MEMORY[0x263F8EE78];
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v27, v17, v18);
    sub_240A01914(v54, (uint64_t)v27, (uint64_t)v8);
    sub_240A03FE8();
    int64_t v55 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
    v55(v25, v27, v18);
    uint64_t v35 = sub_240A03FF8();
    os_log_type_t v36 = sub_240A04EC8();
    int v37 = v36;
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v38 = swift_slowAlloc();
      os_log_t v53 = v35;
      uint64_t v39 = v38;
      uint64_t v54 = swift_slowAlloc();
      uint64_t v62 = v54;
      *(_DWORD *)uint64_t v39 = 136315395;
      uint64_t v51 = v39 + 4;
      uint64_t v40 = sub_240A05478();
      int v52 = v37;
      uint64_t v61 = sub_240981440(v40, v41, &v62);
      uint64_t v56 = v8;
      sub_240A050D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2081;
      v55(v22, v25, v18);
      uint64_t v42 = sub_240A04C78();
      uint64_t v61 = sub_240981440(v42, v43, &v62);
      id v8 = v56;
      sub_240A050D8();
      swift_bridgeObjectRelease();
      uint64_t v44 = *(void (**)(char *, uint64_t))(v19 + 8);
      v44(v25, v18);
      os_log_t v45 = v53;
      _os_log_impl(&dword_240976000, v53, (os_log_type_t)v52, "%s Creating feed item generator for featureStatus %{private}s", (uint8_t *)v39, 0x16u);
      uint64_t v46 = v54;
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v46, -1, -1);
      MEMORY[0x2456058A0](v39, -1, -1);
    }
    else
    {
      uint64_t v44 = *(void (**)(char *, uint64_t))(v19 + 8);
      v44(v25, v18);
    }
    (*(void (**)(char *, uint64_t))(v59 + 8))(v12, v60);
    sub_24097E96C(0, &qword_26AFD4908, MEMORY[0x263F45630], MEMORY[0x263F8E0F8]);
    uint64_t v48 = v57;
    unint64_t v49 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_240A06870;
    (*(void (**)(unint64_t, char *, uint64_t))(v48 + 32))(v47 + v49, v8, v58);
    v44(v27, v18);
  }
  return v47;
}

uint64_t sub_2409F2B04()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16HearingAppPlugin35NoiseNotificationsGeneratorPipeline_domain;
  uint64_t v2 = sub_240A02C78();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_2409F2BB4()
{
  return type metadata accessor for NoiseNotificationsGeneratorPipeline();
}

uint64_t sub_2409F2BBC()
{
  uint64_t v1 = sub_240A02CA8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_2409F2C68()
{
  uint64_t v1 = sub_240A02CA8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_2409F2D04()
{
  uint64_t v1 = sub_240A02CA8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_2409F2DA0()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2409F2DD8()
{
  sub_24097FDC0(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v12 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = sub_240A02CA8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = sub_240A02E88();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v0 + v3, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v3, v8);
  }
  unint64_t v10 = (((v12 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + v6 + 16) & ~v6;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v10, v4);

  return MEMORY[0x270FA0238](v0, ((v7 + v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | v6 | 7);
}

uint64_t sub_2409F2FB4()
{
  sub_24097FDC0(0);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  unint64_t v3 = (*(void *)(*(void *)(v1 - 8) + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(sub_240A02CA8() - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(NSObject **)(v0 + v3);
  uint64_t v7 = *(void (**)(char *, char *, uint64_t))(v0 + v3 + 8);
  uint64_t v8 = *(char **)(v0 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_2409F2424(v0 + v2, v6, v7, v0 + v5, v8);
}

uint64_t sub_2409F30C4(void *a1)
{
  sub_2409F4630(0, (unint64_t *)&qword_26AFD4940, (uint64_t (*)(uint64_t))sub_24098EA68, MEMORY[0x263F8E0F8]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_240A06800;
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = MEMORY[0x263F8D310];
  *(void *)(v3 + 56) = MEMORY[0x263F8D310];
  unint64_t v7 = sub_2409800D4();
  *(void *)(v3 + 64) = v7;
  *(void *)(v3 + 32) = v5;
  *(void *)(v3 + 40) = v4;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  objc_msgSend(a1, sel__value);
  uint64_t v8 = sub_240A04DA8();
  *(void *)(v3 + 96) = v6;
  *(void *)(v3 + 104) = v7;
  *(void *)(v3 + 72) = v8;
  *(void *)(v3 + 80) = v9;

  return sub_240A04C68();
}

id sub_2409F31AC(void *a1)
{
  unint64_t v2 = *(void **)(v1 + 32);
  id result = objc_msgSend(a1, sel__value);
  if ((~*(void *)&v4 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v4 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v4 < 9.22337204e18)
  {
    id v5 = objc_msgSend(v2, sel_localizedNoiseThresholdValue_, (uint64_t)v4);
    uint64_t v6 = sub_240A04C58();

    return (id)v6;
  }
LABEL_7:
  __break(1u);
  return result;
}

id sub_2409F3258(void *a1)
{
  unint64_t v2 = *(void **)(v1 + 32);
  id result = objc_msgSend(a1, sel__value);
  if ((~*(void *)&v4 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v4 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v4 < 9.22337204e18)
  {
    id v5 = objc_msgSend(v2, sel_localizedNoiseThresholdDetailValue_, (uint64_t)v4);
    uint64_t v6 = sub_240A04C58();

    return (id)v6;
  }
LABEL_7:
  __break(1u);
  return result;
}

id sub_2409F3304(void *a1)
{
  unint64_t v2 = *(void **)(v1 + 32);
  id result = objc_msgSend(a1, sel__value);
  if ((~*(void *)&v4 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v4 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v4 >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  objc_msgSend(v2, sel_setNotificationThreshold_, (uint64_t)v4);

  return objc_msgSend(v2, sel_setNotificationsEnabled_, 1);
}

uint64_t sub_2409F33A4()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NoiseThresholdSpecifierConfiguration()
{
  return self;
}

uint64_t type metadata accessor for NoiseThresholdSettingsDataSource(uint64_t a1)
{
  return sub_2409A1004(a1, (uint64_t *)&unk_268C9A7F8);
}

uint64_t sub_2409F3438()
{
  return sub_2409F40D4();
}

uint64_t sub_2409F344C@<X0>(uint64_t a1@<X8>)
{
  unsigned int v3 = objc_msgSend(*(id *)(*(void *)v1 + 32), sel_notificationsEnabled);
  uint64_t v4 = sub_240A02E88();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 104);
  uint64_t v6 = (unsigned int *)MEMORY[0x263F435C8];
  if (!v3) {
    uint64_t v6 = (unsigned int *)MEMORY[0x263F435D0];
  }
  uint64_t v7 = *v6;

  return v5(a1, v7, v4);
}

uint64_t sub_2409F34E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_240A03B48();
  unsigned int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t sub_2409F3550()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return v1;
}

uint64_t sub_2409F3584()
{
  id v1 = objc_msgSend(*(id *)(*(void *)v0 + 32), sel_localizedNoiseThresholdValue_, 0);
  uint64_t v2 = sub_240A04C58();

  return v2;
}

uint64_t sub_2409F35E4()
{
  id v1 = objc_msgSend(*(id *)(*(void *)v0 + 32), sel_noiseThresholdValueFooterDescription);
  uint64_t v2 = sub_240A04C58();

  return v2;
}

uint64_t sub_2409F3640()
{
  id v1 = objc_msgSend(*(id *)(*(void *)v0 + 32), sel_noiseThresholdOptions);
  sub_2409824B8(0, &qword_268C99528);
  unint64_t v2 = sub_240A04D18();

  swift_retain();
  uint64_t v3 = sub_2409F4410(v2);
  swift_bridgeObjectRelease();
  swift_release();
  return v3;
}

id sub_2409F36E4()
{
  id v1 = objc_msgSend(*(id *)(*(void *)v0 + 32), sel_noiseThresholdCurrentValue);
  id v2 = objc_msgSend(self, sel_decibelHearingLevelUnit);
  id v3 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v2, (double)(uint64_t)v1);

  return v3;
}

uint64_t sub_2409F377C(void *a1)
{
  return sub_2409F30C4(a1);
}

id sub_2409F37A0(void *a1)
{
  return sub_2409F31AC(a1);
}

id sub_2409F37C4(void *a1)
{
  return sub_2409F3258(a1);
}

id sub_2409F37E8(void *a1)
{
  return sub_2409F3304(a1);
}

id sub_2409F380C()
{
  id v1 = *(void **)(*(void *)v0 + 32);
  objc_msgSend(v1, sel_setNotificationThreshold_, 0);

  return objc_msgSend(v1, sel_setNotificationsEnabled_, 0);
}

id sub_2409F3864(void *a1, void *a2)
{
  sub_2409F4630(0, (unint64_t *)&unk_268C99B88, MEMORY[0x263F43A90], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v16 - v6;
  *(void *)(v2 + qword_268C9A7E0) = 0;
  *(void *)(v2 + qword_268C9A7D8) = a2;
  uint64_t v8 = type metadata accessor for NoiseThresholdSpecifierConfiguration();
  uint64_t v9 = swift_allocObject();
  strcpy((char *)(v9 + 16), "THRESHOLD_ID_");
  *(_WORD *)(v9 + 30) = -4864;
  *(void *)(v9 + 56) = 0;
  *(void *)(v9 + 64) = 0;
  *(void *)(v9 + 40) = a2;
  *(void *)(v9 + 48) = 0;
  *(void *)(v9 + 32) = a1;
  id v10 = a2;
  id v11 = a1;
  id v12 = objc_msgSend(v11, sel_noiseThresholdTitleDescription);
  sub_240A04C58();

  uint64_t v13 = sub_240A03098();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v7, 1, 1, v13);
  v16[4] = v8;
  v16[5] = sub_2409F4694(&qword_268C9A828, (void (*)(uint64_t))type metadata accessor for NoiseThresholdSpecifierConfiguration);
  v16[1] = v9;
  swift_retain();
  id v14 = (id)sub_240A03DD8();
  sub_2409F3A80();
  swift_release();

  return v14;
}

uint64_t sub_2409F3A80()
{
  sub_2409F4630(0, &qword_268C99AB8, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  id v3 = (char *)v25 - v2;
  sub_2409AC644(0);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409AC6DC();
  uint64_t v26 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409AC774();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v27 = v13;
  uint64_t v28 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void **)(v0 + qword_268C9A7D8);
  swift_beginAccess();
  sub_2409F4630(0, &qword_26AFD4860, (uint64_t (*)(uint64_t))sub_24097FDC0, MEMORY[0x263EFDE58]);
  id v18 = v17;
  sub_240A045B8();
  swift_endAccess();

  sub_2409F4694((unint64_t *)&qword_26AFD4838, sub_2409AC644);
  sub_240A04688();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_2409824B8(0, (unint64_t *)&qword_268C993E8);
  id v29 = (id)sub_240A04F38();
  uint64_t v19 = sub_240A04F28();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v3, 1, 1, v19);
  sub_2409F4694((unint64_t *)&unk_268C99C50, (void (*)(uint64_t))sub_2409AC6DC);
  sub_2409B2DE0();
  uint64_t v20 = v26;
  sub_240A04678();
  sub_2409BA4F8((uint64_t)v3);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v20);
  swift_allocObject();
  uint64_t v21 = v25[1];
  swift_unknownObjectWeakInit();
  sub_2409F4694(&qword_268C99AC8, (void (*)(uint64_t))sub_2409AC774);
  uint64_t v22 = v27;
  uint64_t v23 = sub_240A046A8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v16, v22);
  *(void *)(v21 + qword_268C9A7E0) = v23;
  return swift_release();
}

void sub_2409F3F3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x245605950](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    uint64_t v5 = sub_240A03DE8();

    if (v5)
    {
      swift_getObjectType();
      sub_240A03B28();
      sub_240A03B98();
    }
  }
}

void sub_2409F3FC0()
{
}

uint64_t sub_2409F3FF0()
{
  return swift_release();
}

id sub_2409F4030()
{
  return sub_2409F437C(type metadata accessor for NoiseThresholdSettingsDataSource);
}

uint64_t sub_2409F4048(uint64_t a1)
{
  return swift_release();
}

uint64_t sub_2409F4094()
{
  return type metadata accessor for NoiseThresholdSettingsDataSource(0);
}

uint64_t type metadata accessor for NoiseThresholdSpecifierViewController(uint64_t a1)
{
  return sub_2409A1004(a1, (uint64_t *)&unk_268C9A818);
}

uint64_t sub_2409F40BC()
{
  return sub_2409F40D4();
}

uint64_t sub_2409F40D4()
{
  return swift_initClassMetadata2();
}

id sub_2409F4124(void *a1, void *a2)
{
  objc_allocWithZone((Class)type metadata accessor for NoiseThresholdSettingsDataSource(0));
  uint64_t v5 = v2;
  id v6 = a1;
  id v7 = a2;
  id v8 = sub_2409F3864(v6, v7);
  uint64_t v9 = qword_268C9A808;
  *(void *)&v5[qword_268C9A808] = v8;
  id v10 = v8;
  sub_240A03DF8();

  sub_240A03D38();
  swift_allocObject();
  *(void *)&v5[qword_268C9A810] = sub_240A03D28();
  swift_retain();

  uint64_t v11 = *(void **)&v5[v9];
  swift_retain();
  id v12 = v11;
  id v13 = (id)sub_240A03A98();
  id v14 = objc_msgSend(v6, sel_noiseThresholdTitleDescription);
  if (!v14)
  {
    sub_240A04C58();
    id v14 = (id)sub_240A04C18();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v13, sel_setTitle_, v14);
  swift_release();

  return v13;
}

void sub_2409F4298()
{
}

void sub_2409F42F4()
{
}

uint64_t sub_2409F4324()
{
  return swift_release();
}

id sub_2409F4364()
{
  return sub_2409F437C(type metadata accessor for NoiseThresholdSpecifierViewController);
}

id sub_2409F437C(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_2409F43BC(uint64_t a1)
{
  return swift_release();
}

uint64_t sub_2409F4408()
{
  return type metadata accessor for NoiseThresholdSpecifierViewController(0);
}

uint64_t sub_2409F4410(unint64_t a1)
{
  uint64_t v13 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  for (; v2; uint64_t v2 = sub_240A05288())
  {
    objc_super v3 = self;
    uint64_t v4 = self;
    for (uint64_t i = 4; ; ++i)
    {
      id v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x245604E50](i - 4, a1) : *(id *)(a1 + 8 * i);
      id v7 = v6;
      uint64_t v8 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v9 = objc_msgSend(v6, sel_integerValue);
      id v10 = objc_msgSend(v3, sel_decibelHearingLevelUnit);
      id v11 = objc_msgSend(v4, sel_quantityWithUnit_doubleValue_, v10, (double)(uint64_t)v9);

      if (v11)
      {
        MEMORY[0x245604930]();
        if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_240A04D58();
        }
        sub_240A04D68();
        sub_240A04D38();
      }
      if (v8 == v2)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_15:
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t sub_2409F45F0()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_2409F4628(uint64_t a1)
{
  sub_2409F3F3C(a1, v1);
}

void sub_2409F4630(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2409F4694(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2409F46DC(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v33 = a2;
  sub_240982B98(0, &qword_26AFD4570, MEMORY[0x263F45630], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v25 - v7;
  uint64_t v9 = sub_240A02C18();
  MEMORY[0x270FA5388](v9);
  uint64_t v32 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  os_log_type_t v30 = (char *)&v25 - v13;
  uint64_t v14 = *(void *)(a3 + 16);
  if (!v14) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v15 = a3 + 32;
  uint64_t v16 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  uint64_t v29 = v12;
  uint64_t v31 = (void (**)(char *, char *, uint64_t))(v12 + 32);
  uint64_t v25 = a3;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  unint64_t v17 = MEMORY[0x263F8EE78];
  uint64_t v27 = v9;
  uint64_t v28 = a1;
  uint64_t v26 = v16;
  do
  {
    a1(v15);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v17;
    }
    if ((*v16)(v8, 1, v9) == 1)
    {
      sub_24099C070((uint64_t)v8);
    }
    else
    {
      id v18 = v30;
      uint64_t v19 = *v31;
      (*v31)(v30, v8, v9);
      v19(v32, v18, v9);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v17 = sub_2409926FC(0, *(void *)(v17 + 16) + 1, 1, v17);
      }
      unint64_t v21 = *(void *)(v17 + 16);
      unint64_t v20 = *(void *)(v17 + 24);
      uint64_t v22 = v29;
      if (v21 >= v20 >> 1)
      {
        uint64_t v23 = sub_2409926FC(v20 > 1, v21 + 1, 1, v17);
        uint64_t v22 = v29;
        unint64_t v17 = v23;
      }
      *(void *)(v17 + 16) = v21 + 1;
      uint64_t v9 = v27;
      v19((char *)(v17+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v21), v32, v27);
      a1 = v28;
      uint64_t v16 = v26;
    }
    v15 += 40;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_2409F49E0()
{
  uint64_t v0 = sub_2409F4C24();
  if (qword_26AFD49D0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_240A04018();
  sub_240979894(v1, (uint64_t)qword_26AFD6440);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_240A03FF8();
  os_log_type_t v3 = sub_240A04E88();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v11 = v5;
    *(_DWORD *)uint64_t v4 = 136446722;
    sub_240981440(0xD000000000000024, 0x8000000240A09AB0, &v11);
    sub_240A050D8();
    *(_WORD *)(v4 + 12) = 2050;
    sub_240A050D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 22) = 2082;
    uint64_t v6 = _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v7 = MEMORY[0x245604960](v6, MEMORY[0x263F45828]);
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    sub_240981440(v7, v9, &v11);
    sub_240A050D8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240976000, v2, v3, "[%{public}s] Computed %{public}ld changes: %{public}s", (uint8_t *)v4, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v5, -1, -1);
    MEMORY[0x2456058A0](v4, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return v0;
}

uint64_t sub_2409F4C24()
{
  uint64_t v1 = *(void *)(v0
                 + OBJC_IVAR____TtC16HearingAppPlugin36NoiseNotificationsPromotionGenerator_managedOnboardingExperiences);
  _OWORD v6[2] = &v7;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_2409F46DC((void (*)(void))sub_2409F5EC8, (uint64_t)v6, v1);
  swift_bridgeObjectRelease();
  uint64_t v2 = (void *)(v0 + OBJC_IVAR____TtC16HearingAppPlugin36NoiseNotificationsPromotionGenerator_context);
  sub_24098BDC0(v2, v2[3]);
  sub_24098BDC0(v2, v2[3]);
  os_log_type_t v3 = (void *)sub_240A02C48();
  sub_240A02C38();

  uint64_t v4 = sub_240A04D48();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_2409F4F68@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_240A03028();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240991D58((uint64_t)a1, (uint64_t)v31);
  sub_240983260(0, (unint64_t *)&qword_26AFD45B0);
  sub_240983260(0, &qword_26AFD45D0);
  if (swift_dynamicCast())
  {
    sub_240980754(v32, (uint64_t)v34);
    sub_24098BDC0(v34, v34[3]);
    sub_240983BC8(a2 + OBJC_IVAR____TtC16HearingAppPlugin36NoiseNotificationsPromotionGenerator_deviceConfigurationProvider, (uint64_t)v31);
    char v11 = sub_2409AD660((uint64_t)v31);
    sub_240994D50((uint64_t)v31);
    if ((v11 & 1) == 0)
    {
      uint64_t v26 = sub_240A02C18();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(a3, 1, 1, v26);
      return sub_240981514((uint64_t)v34);
    }
    uint64_t v27 = v8;
    uint64_t v28 = v7;
    uint64_t v29 = a3;
    uint64_t v30 = v3;
    sub_240981514((uint64_t)v34);
  }
  else
  {
    uint64_t v27 = v8;
    uint64_t v28 = v7;
    uint64_t v29 = a3;
    uint64_t v30 = v3;
    uint64_t v33 = 0;
    memset(v32, 0, sizeof(v32));
    sub_2409F5EE8((uint64_t)v32);
  }
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  sub_24098BDC0(a1, v12);
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13);
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  sub_24098BDC0(a1, v14);
  v34[7] = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
  uint64_t v16 = (void *)sub_240A02B58();
  uint64_t v17 = a1[3];
  uint64_t v18 = a1[4];
  sub_24098BDC0(a1, v17);
  (*(void (**)(uint64_t, uint64_t))(v18 + 32))(v17, v18);
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0)
  {
    if (sub_240A05288()) {
      sub_2409F5F70(MEMORY[0x263F8EE78]);
    }
  }
  type metadata accessor for OnboardingTileActionHandler();
  sub_2409F5B9C(&qword_268C9A838, (void (*)(uint64_t))type metadata accessor for OnboardingTileActionHandler);
  uint64_t v19 = v29;
  sub_240A02B68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  sub_24098BDC0(a1, v20);
  (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
  sub_240A02BD8();
  uint64_t v22 = a1[3];
  uint64_t v23 = a1[4];
  sub_24098BDC0(a1, v22);
  (*(void (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
  sub_2409824B8(0, (unint64_t *)&qword_26AFD4898);
  sub_240A04DC8();
  swift_bridgeObjectRelease();
  sub_240A02BF8();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v28);
  uint64_t v24 = sub_240A02C18();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v19, 0, 1, v24);
}

uint64_t sub_2409F5438()
{
  uint64_t v1 = v0;
  sub_240982B04();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = OBJC_IVAR____TtC16HearingAppPlugin36NoiseNotificationsPromotionGenerator____lazy_storage___publisher;
  if (*(void *)(v1
                 + OBJC_IVAR____TtC16HearingAppPlugin36NoiseNotificationsPromotionGenerator____lazy_storage___publisher))
  {
    uint64_t v8 = *(void *)(v1
                   + OBJC_IVAR____TtC16HearingAppPlugin36NoiseNotificationsPromotionGenerator____lazy_storage___publisher);
  }
  else
  {
    swift_allocObject();
    swift_weakInit();
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_2409F5BE4(0, (unint64_t *)&qword_26AFD47E8, MEMORY[0x263EFDCF0]);
    sub_24097C7F4(&qword_26AFD47E0, (unint64_t *)&qword_26AFD47E8, v9);
    sub_240A04588();
    sub_2409F5B9C(&qword_26AFD4828, (void (*)(uint64_t))sub_240982B04);
    uint64_t v8 = sub_240A04628();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    *(void *)(v1 + v7) = v8;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v8;
}

uint64_t sub_2409F5630@<X0>(uint64_t *a1@<X8>)
{
  sub_240982B98(0, (unint64_t *)&qword_26AFD4808, (uint64_t (*)(uint64_t))sub_2409F5B04, MEMORY[0x263EFDDF8]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v14 - v5;
  sub_2409F5BE4(0, &qword_26AFD4810, MEMORY[0x263EFDE08]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v14 - v10;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    uint64_t v14 = sub_2409F49E0();
    sub_2409F5B04();
    sub_240A04558();
    sub_2409F5C54();
    uint64_t v12 = sub_240A04628();
    swift_release();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    sub_2409F5B04();
    sub_240A04568();
    sub_24097C7F4(&qword_268C9A830, &qword_26AFD4810, MEMORY[0x263EFDE08]);
    uint64_t v12 = sub_240A04628();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  *a1 = v12;
  return result;
}

uint64_t sub_2409F58C4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16HearingAppPlugin36NoiseNotificationsPromotionGenerator_domain;
  uint64_t v2 = sub_240A02C78();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_240994D50(v0 + OBJC_IVAR____TtC16HearingAppPlugin36NoiseNotificationsPromotionGenerator_deviceConfigurationProvider);
  sub_240981514(v0 + OBJC_IVAR____TtC16HearingAppPlugin36NoiseNotificationsPromotionGenerator_context);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_2409F59A4()
{
  return type metadata accessor for NoiseNotificationsPromotionGenerator();
}

uint64_t sub_2409F59AC()
{
  uint64_t result = sub_240A02C78();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_2409F5A68()
{
  return sub_2409F5438();
}

uint64_t sub_2409F5A8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC16HearingAppPlugin36NoiseNotificationsPromotionGenerator_domain;
  uint64_t v4 = sub_240A02C78();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_2409F5B04()
{
  if (!qword_26AFD4880)
  {
    unint64_t v0 = sub_240A04D78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD4880);
    }
  }
}

uint64_t sub_2409F5B5C()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2409F5B94@<X0>(uint64_t *a1@<X8>)
{
  return sub_2409F5630(a1);
}

uint64_t sub_2409F5B9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2409F5BE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    sub_2409F5B04();
    unint64_t v7 = a3(a1, v6, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_2409F5C54()
{
  unint64_t result = qword_26AFD4800;
  if (!qword_26AFD4800)
  {
    sub_240982B98(255, (unint64_t *)&qword_26AFD4808, (uint64_t (*)(uint64_t))sub_2409F5B04, MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD4800);
  }
  return result;
}

uint64_t sub_2409F5CDC(unint64_t a1, unint64_t a2)
{
  sub_2409824B8(0, (unint64_t *)&qword_26AFD4898);
  if (a2 >> 62)
  {
    uint64_t v4 = sub_240A05298();
    self;
    if (swift_dynamicCastObjCClass()) {
      return v4;
    }
  }
  else
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
    {
      uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
      swift_unknownObjectRetain();
      self;
      if (!swift_dynamicCastObjCClass()) {
        goto LABEL_10;
      }
      return v4;
    }
    __break(1u);
  }
LABEL_10:
  sub_240A051F8();
  sub_240A04CA8();
  sub_240A05478();
  sub_240A04CA8();
  swift_bridgeObjectRelease();
  sub_240A04CA8();
  swift_getObjectType();
  sub_240A03B98();
  sub_240A05478();
  sub_240A04CA8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_240A05268();
  __break(1u);
  return result;
}

uint64_t sub_2409F5EC8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2409F4F68(a1, **(void **)(v2 + 16), a2);
}

uint64_t sub_2409F5EE8(uint64_t a1)
{
  sub_240982614(0, &qword_26AFD45D8, &qword_26AFD45D0, (uint64_t)&protocol descriptor for DeviceConfigurableOnboardingProviding, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2409F5F70(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v6 = sub_240A05288();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_2409A6384();
      uint64_t v3 = sub_240A051C8();
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v5 = sub_240A05288();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = MEMORY[0x263F8EE88];
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = v3 + 56;
  uint64_t v42 = v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = sub_2409F5CDC(v8, a1);
      BOOL v10 = __OFADD__(v8++, 1);
      if (v10)
      {
        __break(1u);
        goto LABEL_37;
      }
      uint64_t v11 = v9;
      uint64_t v12 = sub_240A04FF8();
      uint64_t v13 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v14 = v12 & ~v13;
      unint64_t v15 = v14 >> 6;
      uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
      uint64_t v17 = 1 << v14;
      if (((1 << v14) & v16) != 0)
      {
        sub_2409824B8(0, (unint64_t *)&qword_26AFD4898);
        id v18 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
        char v19 = sub_240A05008();

        if (v19)
        {
LABEL_11:
          sub_240A03B98();
          uint64_t v5 = v42;
          goto LABEL_12;
        }
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
          char v22 = sub_240A05008();

          if (v22) {
            goto LABEL_11;
          }
        }
        uint64_t v5 = v42;
      }
      *(void *)(v7 + 8 * v15) = v17 | v16;
      *(void *)(*(void *)(v3 + 48) + 8 * v14) = v11;
      uint64_t v23 = *(void *)(v3 + 16);
      BOOL v10 = __OFADD__(v23, 1);
      uint64_t v24 = v23 + 1;
      if (v10) {
        goto LABEL_38;
      }
      *(void *)(v3 + 16) = v24;
LABEL_12:
      if (v8 == v5) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v40 = a1 + 32;
  uint64_t v41 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v41)
  {
    id v26 = *(id *)(v40 + 8 * v25);
    uint64_t v27 = sub_240A04FF8();
    uint64_t v28 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v29 = v27 & ~v28;
    unint64_t v30 = v29 >> 6;
    uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
    uint64_t v32 = 1 << v29;
    if (((1 << v29) & v31) != 0)
    {
      sub_2409824B8(0, (unint64_t *)&qword_26AFD4898);
      id v33 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
      char v34 = sub_240A05008();

      if (v34)
      {
LABEL_24:

        goto LABEL_25;
      }
      uint64_t v35 = ~v28;
      while (1)
      {
        unint64_t v29 = (v29 + 1) & v35;
        unint64_t v30 = v29 >> 6;
        uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
        uint64_t v32 = 1 << v29;
        if ((v31 & (1 << v29)) == 0) {
          break;
        }
        id v36 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
        char v37 = sub_240A05008();

        if (v37) {
          goto LABEL_24;
        }
      }
    }
    *(void *)(v7 + 8 * v30) = v32 | v31;
    *(void *)(*(void *)(v3 + 48) + 8 * v29) = v26;
    uint64_t v38 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v38, 1);
    uint64_t v39 = v38 + 1;
    if (v10) {
      goto LABEL_39;
    }
    *(void *)(v3 + 16) = v39;
LABEL_25:
    if (++v25 == v42) {
      return;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

uint64_t type metadata accessor for HearingTestArticleProvider()
{
  return self;
}

uint64_t sub_2409F6310(uint64_t a1)
{
  uint64_t v99 = *MEMORY[0x263EF8340];
  sub_240983BC8(a1, (uint64_t)v98);
  id v1 = objc_msgSend(self, sel_sharedBehavior);
  if (!v1)
  {
    __break(1u);
LABEL_17:
    __break(1u);
  }
  unint64_t v2 = v1;
  id v3 = objc_msgSend(v1, sel_features);

  if (!v3) {
    goto LABEL_17;
  }
  unsigned int v4 = objc_msgSend(v3, sel_yodel);

  if (v4)
  {
    sub_240994C38((uint64_t)v98, (uint64_t)v95);
    uint64_t v5 = v96;
    if (v96)
    {
      uint64_t v6 = v97;
      sub_24098BDC0(v95, v96);
      char v91 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
      sub_240981514((uint64_t)v95);
    }
    else
    {
      sub_240994CC8((uint64_t)v95);
      char v91 = 0;
    }
    v95[0] = MEMORY[0x263F8EE78];
    sub_24098024C(0, &qword_268C99670, MEMORY[0x263F42AE8], MEMORY[0x263F8E0F8]);
    uint64_t v8 = sub_240A02D88();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(void *)(v9 + 72);
    unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_240A07C30;
    unint64_t v94 = v11;
    uint64_t v93 = v12;
    unint64_t v13 = v12 + v11;
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    id v14 = (id)qword_26AFD6468;
    unint64_t v15 = (void *)sub_240A04C18();
    id v90 = self;
    id v16 = objc_msgSend(v90, sel_imageNamed_inBundle_, v15, v14);

    if (!v16) {
      id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init);
    }
    *(void *)unint64_t v13 = v16;
    *(unsigned char *)(v13 + 8) = 0;
    uint64_t v17 = *(void (**)(unint64_t))(v9 + 104);
    v17(v13);
    id v18 = (void *)(v13 + v10);
    sub_2409F7688();
    *id v18 = v19;
    v18[1] = v20;
    ((void (*)(unint64_t, void, uint64_t))v17)(v13 + v10, *MEMORY[0x263F42AC0], v8);
    unint64_t v21 = v13 + 2 * v10;
    sub_2409F7688();
    *(void *)unint64_t v21 = v22;
    *(void *)(v21 + 8) = v23;
    *(unsigned char *)(v21 + 16) = 0;
    uint64_t v24 = *MEMORY[0x263F42AE0];
    ((void (*)(unint64_t, uint64_t, uint64_t))v17)(v21, v24, v8);
    uint64_t v25 = v8;
    id v26 = (void *)(v13 + 3 * v10);
    sub_2409F7688();
    *id v26 = v27;
    v26[1] = v28;
    void v26[2] = 0;
    unsigned int v92 = *MEMORY[0x263F42A80];
    v17((unint64_t)v26);
    unint64_t v29 = v13 + 4 * v10;
    sub_2409F7688();
    *(void *)unint64_t v29 = v30;
    *(void *)(v29 + 8) = v31;
    *(unsigned char *)(v29 + 16) = 0;
    ((void (*)(unint64_t, uint64_t, uint64_t))v17)(v29, v24, v25);
    unint64_t v32 = v13 + 5 * v10;
    sub_2409F7688();
    *(void *)unint64_t v32 = v33;
    *(void *)(v32 + 8) = v34;
    *(unsigned char *)(v32 + 16) = 0;
    ((void (*)(unint64_t, uint64_t, uint64_t))v17)(v32, v24, v25);
    sub_2409B2F60(v91 & 1, (void *)(v13 + 6 * v10));
    id v35 = (id)qword_26AFD6468;
    id v36 = (void *)sub_240A04C18();
    id v37 = objc_msgSend(v90, sel_imageNamed_inBundle_, v36, v35);

    if (!v37) {
      id v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init);
    }
    unint64_t v38 = v13 + 7 * v10;
    *(void *)unint64_t v38 = v37;
    *(unsigned char *)(v38 + 8) = 1;
    ((void (*)(void))v17)();
    uint64_t v39 = (void *)(v13 + 8 * v10);
    sub_2409F7688();
    *uint64_t v39 = v40;
    v39[1] = v41;
    v39[2] = 0;
    ((void (*)(void *, void, uint64_t))v17)(v39, v92, v25);
    unint64_t v42 = v13 + 9 * v10;
    sub_2409F7688();
    *(void *)unint64_t v42 = v43;
    *(void *)(v42 + 8) = v44;
    *(unsigned char *)(v42 + 16) = 0;
    ((void (*)(unint64_t, void, uint64_t))v17)(v42, v24, v25);
    unint64_t v45 = v13 + 10 * v10;
    sub_2409F7688();
    *(void *)unint64_t v45 = v46;
    *(void *)(v45 + 8) = v47;
    *(unsigned char *)(v45 + 16) = 0;
    ((void (*)(unint64_t, void, uint64_t))v17)(v45, v24, v25);
    uint64_t v48 = (void *)(v13 + 11 * v10);
    sub_2409F7688();
    *uint64_t v48 = v49;
    v48[1] = v50;
    v48[2] = 0;
    ((void (*)(void *, void, uint64_t))v17)(v48, v92, v25);
    unint64_t v51 = v13 + 12 * v10;
    *(void *)unint64_t v51 = sub_2409B48DC(1, 0.0, 0.25);
    *(unsigned char *)(v51 + 8) = 1;
    uint64_t v52 = *MEMORY[0x263F42A58];
    ((void (*)(unint64_t, uint64_t, uint64_t))v17)(v51, v52, v25);
    unint64_t v53 = v13 + 13 * v10;
    *(void *)unint64_t v53 = sub_2409B48DC(2, 0.25, 0.15);
    *(unsigned char *)(v53 + 8) = 1;
    ((void (*)(unint64_t, uint64_t, uint64_t))v17)(v53, v52, v25);
    unint64_t v54 = v13 + 14 * v10;
    *(void *)unint64_t v54 = sub_2409B48DC(3, 0.4, 0.2);
    *(unsigned char *)(v54 + 8) = 1;
    ((void (*)(unint64_t, uint64_t, uint64_t))v17)(v54, v52, v25);
    unint64_t v55 = v13 + 15 * v10;
    *(void *)unint64_t v55 = sub_2409B48DC(4, 0.6, 0.2);
    *(unsigned char *)(v55 + 8) = 1;
    ((void (*)(unint64_t, uint64_t, uint64_t))v17)(v55, v52, v25);
    unint64_t v56 = v13 + 16 * v10;
    *(void *)unint64_t v56 = sub_2409B48DC(5, 0.8, 0.2);
    *(unsigned char *)(v56 + 8) = 1;
    ((void (*)(unint64_t, uint64_t, uint64_t))v17)(v56, v52, v25);
    uint64_t v57 = (void *)(v13 + 17 * v10);
    sub_2409F7688();
    *uint64_t v57 = v58;
    v57[1] = v59;
    ((void (*)(void *, void, uint64_t))v17)(v57, *MEMORY[0x263F42AD0], v25);
    sub_2409920B0(v93);
    sub_2409B49F0();
    sub_2409920B0(v60);
    uint64_t v61 = swift_allocObject();
    *(_OWORD *)(v61 + 16) = xmmword_240A07C40;
    uint64_t v62 = (void *)(v61 + v94);
    sub_2409F7688();
    *uint64_t v62 = v63;
    v62[1] = v64;
    v62[2] = 0;
    ((void (*)(unint64_t, void, uint64_t))v17)(v61 + v94, v92, v25);
    uint64_t v65 = v61 + v94 + v10;
    sub_2409F7688();
    *(void *)uint64_t v65 = v66;
    *(void *)(v65 + 8) = v67;
    *(unsigned char *)(v65 + 16) = 0;
    ((void (*)(uint64_t, void, uint64_t))v17)(v65, v24, v25);
    uint64_t v68 = (void *)(v61 + v94 + 2 * v10);
    sub_2409F7688();
    *uint64_t v68 = v69;
    v68[1] = v70;
    void v68[2] = 0;
    ((void (*)(void *, void, uint64_t))v17)(v68, v92, v25);
    unint64_t v71 = (uint64_t *)(v61 + v94 + 3 * v10);
    sub_2409A6F50();
    uint64_t v72 = swift_allocObject();
    *(_OWORD *)(v72 + 16) = xmmword_240A07C50;
    sub_2409F7688();
    *(void *)(v72 + 32) = v73;
    *(void *)(v72 + 40) = v74;
    sub_2409F7688();
    *(void *)(v72 + 48) = v75;
    *(void *)(v72 + 56) = v76;
    sub_2409F7688();
    *(void *)(v72 + 64) = v77;
    *(void *)(v72 + 72) = v78;
    sub_2409F7688();
    *(void *)(v72 + 80) = v79;
    *(void *)(v72 + 88) = v80;
    sub_2409F7688();
    *(void *)(v72 + 96) = v81;
    *(void *)(v72 + 104) = v82;
    sub_2409F7688();
    *(void *)(v72 + 112) = v83;
    *(void *)(v72 + 120) = v84;
    sub_2409F7688();
    *(void *)(v72 + 128) = v85;
    *(void *)(v72 + 136) = v86;
    sub_2409F7688();
    *(void *)(v72 + 144) = v87;
    *(void *)(v72 + 152) = v88;
    *unint64_t v71 = v72;
    ((void (*)(uint64_t *, void, uint64_t))v17)(v71, *MEMORY[0x263F42A88], v25);
    sub_2409920B0(v61);
    uint64_t v7 = v95[0];
  }
  else
  {
    uint64_t v7 = sub_2409F6E44((uint64_t)v98);
  }
  sub_240994D50((uint64_t)v98);
  return v7;
}

uint64_t sub_2409F6E44(uint64_t a1)
{
  uint64_t v52 = *MEMORY[0x263EF8340];
  sub_240994C38(a1, (uint64_t)v49);
  uint64_t v1 = v50;
  if (v50)
  {
    uint64_t v2 = v51;
    sub_24098BDC0(v49, v50);
    LODWORD(v47) = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
    sub_240981514((uint64_t)v49);
  }
  else
  {
    sub_240994CC8((uint64_t)v49);
    LODWORD(v47) = 0;
  }
  v49[0] = MEMORY[0x263F8EE78];
  sub_24098024C(0, &qword_268C99670, MEMORY[0x263F42AE8], MEMORY[0x263F8E0F8]);
  uint64_t v3 = sub_240A02D88();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 72);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_240A07C60;
  uint64_t v48 = v7;
  unint64_t v8 = v7 + v6;
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  id v9 = (id)qword_26AFD6468;
  uint64_t v10 = (void *)sub_240A04C18();
  unint64_t v11 = self;
  id v12 = objc_msgSend(v11, sel_imageNamed_inBundle_, v10, v9);

  if (!v12) {
    id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init, v47, v48);
  }
  *(void *)unint64_t v8 = v12;
  *(unsigned char *)(v8 + 8) = 0;
  unint64_t v13 = *(void (**)(void))(v4 + 104);
  ((void (*)(unint64_t, void, uint64_t))v13)(v8, *MEMORY[0x263F42AB8], v3);
  id v14 = (void *)(v8 + v5);
  sub_2409F7688();
  *id v14 = v15;
  v14[1] = v16;
  ((void (*)(unint64_t, void, uint64_t))v13)(v8 + v5, *MEMORY[0x263F42AC0], v3);
  unint64_t v17 = v8 + 2 * v5;
  sub_2409F7688();
  *(void *)unint64_t v17 = v18;
  *(void *)(v17 + 8) = v19;
  *(unsigned char *)(v17 + 16) = 0;
  uint64_t v20 = *MEMORY[0x263F42AE0];
  ((void (*)(unint64_t, uint64_t, uint64_t))v13)(v17, v20, v3);
  unint64_t v21 = v8 + 3 * v5;
  sub_2409F7688();
  *(void *)unint64_t v21 = v22;
  *(void *)(v21 + 8) = v23;
  *(unsigned char *)(v21 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v13)(v21, v20, v3);
  sub_2409B2F60(v47 & 1, (void *)(v8 + 4 * v5));
  id v24 = (id)qword_26AFD6468;
  uint64_t v25 = (void *)sub_240A04C18();
  id v26 = objc_msgSend(v11, sel_imageNamed_inBundle_, v25, v24);

  if (!v26) {
    id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init);
  }
  unint64_t v27 = v8 + 5 * v5;
  *(void *)unint64_t v27 = v26;
  *(unsigned char *)(v27 + 8) = 1;
  v13();
  unint64_t v28 = v8 + 6 * v5;
  sub_2409F7688();
  *(void *)unint64_t v28 = v29;
  *(void *)(v28 + 8) = v30;
  *(unsigned char *)(v28 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v13)(v28, v20, v3);
  unint64_t v31 = v8 + 7 * v5;
  sub_2409F7688();
  *(void *)unint64_t v31 = v32;
  *(void *)(v31 + 8) = v33;
  *(unsigned char *)(v31 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v13)(v31, v20, v3);
  uint64_t v34 = (void *)(v8 + 8 * v5);
  sub_2409F7688();
  *uint64_t v34 = v35;
  v34[1] = v36;
  void v34[2] = 0;
  ((void (*)(void *, void, uint64_t))v13)(v34, *MEMORY[0x263F42A80], v3);
  unint64_t v37 = v8 + 9 * v5;
  *(void *)unint64_t v37 = sub_2409B48DC(1, 0.0, 0.25);
  *(unsigned char *)(v37 + 8) = 1;
  uint64_t v38 = *MEMORY[0x263F42A58];
  ((void (*)(unint64_t, uint64_t, uint64_t))v13)(v37, v38, v3);
  unint64_t v39 = v8 + 10 * v5;
  *(void *)unint64_t v39 = sub_2409B48DC(2, 0.25, 0.15);
  *(unsigned char *)(v39 + 8) = 1;
  ((void (*)(unint64_t, uint64_t, uint64_t))v13)(v39, v38, v3);
  unint64_t v40 = v8 + 11 * v5;
  *(void *)unint64_t v40 = sub_2409B48DC(3, 0.4, 0.2);
  *(unsigned char *)(v40 + 8) = 1;
  ((void (*)(unint64_t, uint64_t, uint64_t))v13)(v40, v38, v3);
  unint64_t v41 = v8 + 12 * v5;
  *(void *)unint64_t v41 = sub_2409B48DC(4, 0.6, 0.2);
  *(unsigned char *)(v41 + 8) = 1;
  ((void (*)(unint64_t, uint64_t, uint64_t))v13)(v41, v38, v3);
  unint64_t v42 = v8 + 13 * v5;
  *(void *)unint64_t v42 = sub_2409B48DC(5, 0.8, 0.2);
  *(unsigned char *)(v42 + 8) = 1;
  ((void (*)(unint64_t, uint64_t, uint64_t))v13)(v42, v38, v3);
  uint64_t v43 = (void *)(v8 + 14 * v5);
  sub_2409F7688();
  *uint64_t v43 = v44;
  v43[1] = v45;
  ((void (*)(void *, void, uint64_t))v13)(v43, *MEMORY[0x263F42AD0], v3);
  sub_2409920B0(v48);
  return v49[0];
}

void sub_2409F7520()
{
  id v0 = objc_msgSend(self, sel_sharedBehavior);
  if (v0)
  {
    uint64_t v1 = v0;
    id v2 = objc_msgSend(v0, sel_features);

    if (v2)
    {
      objc_msgSend(v2, sel_yodel);

      type metadata accessor for HearingAppPluginDelegate();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v4 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      sub_240A02828();
      swift_bridgeObjectRelease();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_2409F7688()
{
  id v0 = objc_msgSend(self, sel_sharedBehavior);
  if (v0)
  {
    uint64_t v1 = v0;
    id v2 = objc_msgSend(v0, sel_features);

    if (v2)
    {
      objc_msgSend(v2, sel_yodel);

      type metadata accessor for HearingAppPluginDelegate();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v4 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      sub_240A02828();
      swift_bridgeObjectRelease();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_2409F77F0()
{
  id v0 = objc_msgSend(self, sel_sharedBehavior);
  if (v0)
  {
    uint64_t v1 = v0;
    id v2 = objc_msgSend(v0, sel_features);

    if (v2)
    {
      objc_msgSend(v2, sel_yodel);

      type metadata accessor for HearingAppPluginDelegate();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v4 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      sub_240A02828();
      swift_bridgeObjectRelease();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_2409F7958()
{
  sub_2409F7688();
  if (qword_26AFD4990 != -1) {
    swift_once();
  }
  sub_2409F6310((uint64_t)&unk_26AFD63D0);
  id v0 = objc_allocWithZone((Class)sub_240A02DA8());
  uint64_t v1 = (void *)sub_240A02D98();
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46848]), sel_initWithRootViewController_, v1);
  objc_msgSend(v2, sel_setDelegate_, v1);

  return v2;
}

uint64_t type metadata accessor for HeadphoneNotificationsFeatureStatusActionHandler(uint64_t a1)
{
  return sub_2409A1004(a1, (uint64_t *)&unk_26AFD4160);
}

uint64_t sub_2409F7A70()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2409F7AB0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = sub_240A02E88();
  uint64_t v19 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v20 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409F96AC(0, &qword_268C9A850, MEMORY[0x263F8E040]);
  uint64_t v7 = v6;
  uint64_t v18 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v16 - v8;
  uint64_t v10 = type metadata accessor for HeadphoneNotificationsFeatureStatusActionHandlerData(0);
  MEMORY[0x270FA5388](v10 - 8);
  id v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24098BDC0(a1, a1[3]);
  sub_2409F9658();
  sub_240A05438();
  if (!v2)
  {
    uint64_t v13 = v18;
    uint64_t v14 = v19;
    sub_2409F9368(&qword_268C99888, MEMORY[0x263F435D8]);
    sub_240A05318();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v7);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v20, v4);
    sub_2409F942C((uint64_t)v12, v17);
  }
  return sub_240981514((uint64_t)a1);
}

uint64_t sub_2409F7D5C(uint64_t a1)
{
  unint64_t v2 = sub_2409F9658();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2409F7D98(uint64_t a1)
{
  unint64_t v2 = sub_2409F9658();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2409F7DD4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2409F7AB0(a1, a2);
}

uint64_t sub_2409F7DEC(void *a1)
{
  sub_2409F96AC(0, &qword_26AFD4278, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - v5;
  sub_24098BDC0(a1, a1[3]);
  sub_2409F9658();
  sub_240A05448();
  sub_240A02E88();
  sub_2409F9368(&qword_26AFD3F50, MEMORY[0x263F435D8]);
  sub_240A05328();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_2409F7F74()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v125 = sub_240A028A8();
  uint64_t v124 = *(void *)(v125 - 8);
  MEMORY[0x270FA5388](v125);
  uint64_t v123 = (uint64_t)&v118 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_240A03098();
  uint64_t v133 = *(void *)(v135 - 8);
  MEMORY[0x270FA5388](v135);
  unint64_t v129 = (char *)&v118 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v139 = (char *)&v118 - v4;
  uint64_t v134 = sub_240A02E88();
  uint64_t v141 = *(void *)(v134 - 8);
  MEMORY[0x270FA5388](v134);
  uint64_t v126 = (char *)&v118 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v136 = (char *)&v118 - v7;
  MEMORY[0x270FA5388](v8);
  uint64_t v142 = (char *)&v118 - v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v128 = (char *)&v118 - v11;
  uint64_t v12 = sub_240A04018();
  uint64_t v143 = *(void *)(v12 - 8);
  uint64_t v144 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v130 = (char *)&v118 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v132 = (char *)&v118 - v15;
  MEMORY[0x270FA5388](v16);
  uint64_t v127 = (char *)&v118 - v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v140 = (char *)&v118 - v19;
  uint64_t v20 = sub_240A03AD8();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v118 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409F93B4();
  MEMORY[0x270FA5388](v24 - 8);
  id v26 = (char *)&v118 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for HeadphoneNotificationsFeatureStatusActionHandlerData(0);
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v118 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)&v118 - v32;
  uint64_t v137 = v0;
  sub_240A03C48();
  sub_2409F9368(&qword_268C9A848, (void (*)(uint64_t))type metadata accessor for HeadphoneNotificationsFeatureStatusActionHandlerData);
  sub_2409F9368(&qword_26AFD41F0, (void (*)(uint64_t))type metadata accessor for HeadphoneNotificationsFeatureStatusActionHandlerData);
  sub_240A03AC8();
  uint64_t v36 = *(void (**)(void, void))(v21 + 8);
  uint64_t v35 = v21 + 8;
  uint64_t v34 = v36;
  unsigned int v131 = (void (*)(void, void, void))v20;
  v36(v23, v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
  {
    sub_2409F94F4((uint64_t)v26, (uint64_t (*)(void))sub_2409F93B4);
    uint64_t v37 = (uint64_t)v130;
    sub_240A03FE8();
    uint64_t v38 = sub_240A03FF8();
    os_log_type_t v39 = sub_240A04EB8();
    if (os_log_type_enabled(v38, v39))
    {
      unint64_t v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      v146[0] = v41;
      *(_DWORD *)unint64_t v40 = 136315138;
      uint64_t v42 = sub_240A05478();
      uint64_t v145 = sub_240981440(v42, v43, v146);
      sub_240A050D8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240976000, v38, v39, "%s Could not access action handler user data!", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v41, -1, -1);
      MEMORY[0x2456058A0](v40, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v143 + 8))(v37, v144);
    return;
  }
  uint64_t v120 = v23;
  uint64_t v121 = v35;
  uint64_t v122 = v34;
  sub_2409F942C((uint64_t)v26, (uint64_t)v33);
  sub_240A03FE8();
  sub_2409F9490((uint64_t)v33, (uint64_t)v30);
  uint64_t v44 = sub_240A03FF8();
  os_log_type_t v45 = sub_240A04EC8();
  BOOL v46 = os_log_type_enabled(v44, v45);
  uint64_t v130 = v33;
  if (v46)
  {
    uint64_t v47 = swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    v146[0] = v48;
    *(_DWORD *)uint64_t v47 = 136315394;
    uint64_t v49 = sub_240A05478();
    uint64_t v145 = sub_240981440(v49, v50, v146);
    sub_240A050D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 12) = 2080;
    uint64_t v119 = (void (*)(char *, uint64_t))(v47 + 14);
    uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v141 + 16);
    uint64_t v52 = v134;
    v51(v128, v30, v134);
    uint64_t v53 = sub_240A04C78();
    uint64_t v145 = sub_240981440(v53, v54, v146);
    sub_240A050D8();
    uint64_t v55 = (uint64_t)v130;
    swift_bridgeObjectRelease();
    sub_2409F94F4((uint64_t)v30, type metadata accessor for HeadphoneNotificationsFeatureStatusActionHandlerData);
    _os_log_impl(&dword_240976000, v44, v45, "%s Did select cell with feature status %s", (uint8_t *)v47, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v48, -1, -1);
    MEMORY[0x2456058A0](v47, -1, -1);

    uint64_t v119 = *(void (**)(char *, uint64_t))(v143 + 8);
    v119(v140, v144);
  }
  else
  {
    uint64_t v55 = (uint64_t)v33;
    sub_2409F94F4((uint64_t)v30, type metadata accessor for HeadphoneNotificationsFeatureStatusActionHandlerData);

    uint64_t v119 = *(void (**)(char *, uint64_t))(v143 + 8);
    v119(v140, v144);
    uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v141 + 16);
    uint64_t v52 = v134;
  }
  unint64_t v56 = v142;
  v51(v142, (char *)v55, v52);
  uint64_t v57 = v120;
  sub_240A03C48();
  uint64_t v140 = (char *)sub_240A03AB8();
  uint64_t v58 = v131;
  uint64_t v59 = v122;
  v122(v57, v131);
  sub_240A03C48();
  uint64_t v60 = v139;
  sub_240A02F18();
  v59(v57, v58);
  uint64_t v61 = v136;
  v51(v136, v56, v52);
  uint64_t v62 = v141;
  int v63 = (*(uint64_t (**)(char *, uint64_t))(v141 + 88))(v61, v52);
  uint64_t v64 = v52;
  uint64_t v65 = v132;
  if (v63 == *MEMORY[0x263F435C8])
  {
    uint64_t v66 = v133;
    uint64_t v67 = (uint64_t)v129;
    uint64_t v68 = v135;
    (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v129, v60, v135);
    id v69 = objc_allocWithZone((Class)type metadata accessor for HeadphoneNotificationsSettingsViewController(0));
    uint64_t v70 = sub_2409B1B04(v67);
    id v71 = objc_msgSend(self, sel_sharedBehavior);
    if (v71)
    {
      uint64_t v72 = v71;
      id v73 = objc_msgSend(v71, sel_features);

      uint64_t v74 = v127;
      if (v73)
      {
        unsigned int v75 = objc_msgSend(v73, sel_stanley);

        if (v75)
        {
          id v76 = v140;
          objc_msgSend(v140, sel_showAdaptively_sender_, v70, v137);
        }
        else
        {
          id v88 = v140;
          id v89 = objc_msgSend(v140, sel_navigationController);
          uint64_t v90 = (uint64_t)v130;
          if (v89)
          {
            char v91 = v89;
            objc_msgSend(v89, sel_pushViewController_animated_, v70, 1);

            (*(void (**)(char *, uint64_t))(v66 + 8))(v139, v68);
            (*(void (**)(char *, uint64_t))(v62 + 8))(v142, v64);
            uint64_t v87 = v90;
            goto LABEL_20;
          }
          sub_240A03FC8();
          uint64_t v103 = v70;
          uint64_t v104 = sub_240A03FF8();
          os_log_type_t v105 = sub_240A04EA8();
          if (os_log_type_enabled(v104, v105))
          {
            uint64_t v106 = swift_slowAlloc();
            uint64_t v137 = swift_slowAlloc();
            v146[0] = v137;
            *(_DWORD *)uint64_t v106 = 136315394;
            uint64_t v107 = sub_240A05478();
            uint64_t v108 = v64;
            uint64_t v145 = sub_240981440(v107, v109, v146);
            sub_240A050D8();
            swift_bridgeObjectRelease();
            *(_WORD *)(v106 + 12) = 2080;
            uint64_t ObjectType = v106 + 14;
            uint64_t v110 = v103;
            id v111 = objc_msgSend(v110, sel_description);
            uint64_t v112 = v66;
            uint64_t v113 = sub_240A04C58();
            unint64_t v115 = v114;

            uint64_t v145 = sub_240981440(v113, v115, v146);
            sub_240A050D8();

            swift_bridgeObjectRelease();
            _os_log_impl(&dword_240976000, v104, v105, "[%s]: Unable to handle tap of detail item: %s", (uint8_t *)v106, 0x16u);
            uint64_t v116 = v137;
            swift_arrayDestroy();
            MEMORY[0x2456058A0](v116, -1, -1);
            MEMORY[0x2456058A0](v106, -1, -1);

            v119(v127, v144);
            (*(void (**)(char *, uint64_t))(v112 + 8))(v139, v135);
            (*(void (**)(char *, uint64_t))(v141 + 8))(v142, v108);
            goto LABEL_19;
          }

          v119(v74, v144);
        }
        (*(void (**)(char *, uint64_t))(v66 + 8))(v139, v68);
LABEL_18:
        (*(void (**)(char *, uint64_t))(v62 + 8))(v142, v64);
LABEL_19:
        uint64_t v87 = (uint64_t)v130;
LABEL_20:
        sub_2409F94F4(v87, type metadata accessor for HeadphoneNotificationsFeatureStatusActionHandlerData);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }
  uint64_t v77 = v135;
  if (v63 == *MEMORY[0x263F435D0])
  {
    uint64_t v78 = v133;
    uint64_t v79 = (uint64_t)v129;
    (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v129, v60, v135);
    id v80 = objc_allocWithZone((Class)type metadata accessor for HeadphoneNotificationsSettingsViewController(0));
    uint64_t v81 = sub_2409B1B04(v79);
    uint64_t v82 = v60;
    uint64_t v83 = v81;
    sub_240A03A88();
    sub_2409FC6CC();
    id v84 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v83);
    id v85 = v140;
    objc_msgSend(v140, sel_presentViewController_animated_completion_, v84, 1, 0);

    (*(void (**)(char *, uint64_t))(v78 + 8))(v82, v77);
    goto LABEL_18;
  }
  if (v63 == *MEMORY[0x263F435C0])
  {
    uint64_t v86 = v123;
    sub_2409FC568(v123);
    sub_240A02868();

    (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v86, v125);
    (*(void (**)(char *, uint64_t))(v133 + 8))(v60, v77);
    goto LABEL_18;
  }
  sub_240A03FE8();
  unsigned int v92 = v126;
  uint64_t v93 = v142;
  v51(v126, v142, v64);
  unint64_t v94 = sub_240A03FF8();
  os_log_type_t v95 = sub_240A04EA8();
  LODWORD(v137) = v95;
  if (os_log_type_enabled(v94, v95))
  {
    uint64_t v96 = swift_slowAlloc();
    uint64_t v134 = swift_slowAlloc();
    v146[0] = v134;
    *(_DWORD *)uint64_t v96 = 136315650;
    unsigned int v131 = (void (*)(void, void, void))v51;
    uint64_t v97 = sub_240A05478();
    uint64_t v145 = sub_240981440(v97, v98, v146);
    sub_240A050D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v96 + 12) = 2080;
    uint64_t v145 = sub_240981440(0x63656C6553646964, 0xEB00000000292874, v146);
    sub_240A050D8();
    *(_WORD *)(v96 + 22) = 2080;
    v131(v128, v92, v64);
    uint64_t v99 = sub_240A04C78();
    uint64_t v145 = sub_240981440(v99, v100, v146);
    sub_240A050D8();
    swift_bridgeObjectRelease();
    uint64_t v101 = *(void (**)(char *, uint64_t))(v62 + 8);
    v101(v92, v64);
    _os_log_impl(&dword_240976000, v94, (os_log_type_t)v137, "%s.%s Unhandled feature status %s", (uint8_t *)v96, 0x20u);
    uint64_t v102 = v134;
    swift_arrayDestroy();
    MEMORY[0x2456058A0](v102, -1, -1);
    MEMORY[0x2456058A0](v96, -1, -1);

    v119(v65, v144);
    (*(void (**)(char *, uint64_t))(v133 + 8))(v139, v135);
    v101(v142, v64);
  }
  else
  {
    uint64_t v117 = v93;

    uint64_t v101 = *(void (**)(char *, uint64_t))(v62 + 8);
    v101(v92, v64);
    v119(v65, v144);
    (*(void (**)(char *, uint64_t))(v133 + 8))(v139, v77);
    v101(v117, v64);
  }
  sub_2409F94F4((uint64_t)v130, type metadata accessor for HeadphoneNotificationsFeatureStatusActionHandlerData);
  v101(v136, v64);
}

uint64_t sub_2409F9198(uint64_t a1)
{
  uint64_t v3 = sub_240A03AD8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_allocWithZone(v1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t v8 = sub_240A03C58();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v8;
}

id sub_2409F9298()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HeadphoneNotificationsFeatureStatusActionHandler(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2409F92D0()
{
  return type metadata accessor for HeadphoneNotificationsFeatureStatusActionHandler(0);
}

uint64_t sub_2409F92D8()
{
  return sub_2409F9368(&qword_26AFD4260, MEMORY[0x263F445D8]);
}

uint64_t sub_2409F9320()
{
  return sub_2409F9368(&qword_26AFD4158, (void (*)(uint64_t))type metadata accessor for HeadphoneNotificationsFeatureStatusActionHandler);
}

uint64_t sub_2409F9368(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2409F93B4()
{
  if (!qword_268C9A840)
  {
    type metadata accessor for HeadphoneNotificationsFeatureStatusActionHandlerData(255);
    unint64_t v0 = sub_240A050C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9A840);
    }
  }
}

uint64_t type metadata accessor for HeadphoneNotificationsFeatureStatusActionHandlerData(uint64_t a1)
{
  return sub_2409A1004(a1, qword_26AFD41F8);
}

uint64_t sub_2409F942C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HeadphoneNotificationsFeatureStatusActionHandlerData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2409F9490(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HeadphoneNotificationsFeatureStatusActionHandlerData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2409F94F4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2409F9554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2409F9568);
}

uint64_t sub_2409F9568(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240A02E88();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_2409F95D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2409F95E8);
}

uint64_t sub_2409F95E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240A02E88();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

unint64_t sub_2409F9658()
{
  unint64_t result = qword_26AFD41D8;
  if (!qword_26AFD41D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD41D8);
  }
  return result;
}

void sub_2409F96AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_2409F9658();
    unint64_t v7 = a3(a1, &type metadata for HeadphoneNotificationsFeatureStatusActionHandlerData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for HeadphoneNotificationsFeatureStatusActionHandlerData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2409F97ACLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneNotificationsFeatureStatusActionHandlerData.CodingKeys()
{
  return &type metadata for HeadphoneNotificationsFeatureStatusActionHandlerData.CodingKeys;
}

unint64_t sub_2409F97E8()
{
  unint64_t result = qword_268C9A858;
  if (!qword_268C9A858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A858);
  }
  return result;
}

unint64_t sub_2409F9840()
{
  unint64_t result = qword_26AFD41E8;
  if (!qword_26AFD41E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD41E8);
  }
  return result;
}

unint64_t sub_2409F9898()
{
  unint64_t result = qword_26AFD41E0;
  if (!qword_26AFD41E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD41E0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ResultError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2409F9988);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ResultError()
{
  return &type metadata for ResultError;
}

unint64_t sub_2409F99C4()
{
  unint64_t result = qword_268C9A860;
  if (!qword_268C9A860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9A860);
  }
  return result;
}

uint64_t Date.firstDateOfTheYear(calendar:)()
{
  return sub_240A02A18();
}

uint64_t Date.lastDateOfTheYear(calendar:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v50 = a1;
  sub_2409FA088(0, &qword_268C9A868, MEMORY[0x263F079C8]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v52 = (char *)&v39 - v2;
  sub_2409FA088(0, &qword_268C9A5A8, MEMORY[0x263F07920]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v39 - v4;
  uint64_t v6 = sub_240A027C8();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = (void (*)(uint64_t, char *, uint64_t))v6;
  MEMORY[0x270FA5388](v6);
  BOOL v46 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409FA088(0, (unint64_t *)&qword_268C996D0, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v42 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v44 = (char *)&v39 - v11;
  uint64_t v51 = sub_240A02978();
  uint64_t v45 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v41 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_240A02A58();
  uint64_t v14 = *(void *)(v13 - 8);
  double v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void (**)(char *, void, uint64_t, double))(v14 + 104);
  v18(v17, *MEMORY[0x263F07878], v13, v15);
  uint64_t v43 = sub_240A02A68();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v14 + 8);
  v19(v17, v13);
  uint64_t v20 = sub_240A02A78();
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  uint64_t v47 = v5;
  v21(v5, 1, 1, v20);
  uint64_t v22 = sub_240A02A88();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v52, 1, 1, v22);
  uint64_t v23 = *MEMORY[0x263F078A0];
  os_log_type_t v39 = (void (*)(char *, void, uint64_t))v18;
  ((void (*)(char *, uint64_t, uint64_t))v18)(v17, v23, v13);
  uint64_t v24 = sub_240A02A68();
  unint64_t v40 = v19;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v19)(v17, v13);
  if (!__OFADD__(v24, 1))
  {
    id v26 = v46;
    sub_240A027B8();
    uint64_t v27 = v44;
    sub_240A02A28();
    (*(void (**)(char *, void (*)(uint64_t, char *, uint64_t)))(v48 + 8))(v26, v49);
    uint64_t v28 = v45;
    uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
    BOOL v30 = v29(v27, 1, v51) == 1;
    uint64_t v31 = (uint64_t)v27;
    if (v30)
    {
      uint64_t v32 = v50;
      uint64_t v36 = v51;
    }
    else
    {
      uint64_t v33 = *(void (**)(uint64_t, char *, uint64_t))(v28 + 32);
      uint64_t v34 = v27;
      uint64_t v52 = (char *)v29;
      uint64_t v35 = v41;
      uint64_t v36 = v51;
      uint64_t v49 = v33;
      v33((uint64_t)v41, v34, v51);
      v39(v17, *MEMORY[0x263F07870], v13);
      uint64_t v37 = v42;
      sub_240A02A38();
      v40(v17, v13);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v35, v36);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v37, 1, v36) != 1)
      {
        uint64_t v32 = v50;
        v49(v50, v37, v36);
        uint64_t v38 = 0;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56))(v32, v38, 1, v36);
      }
      uint64_t v31 = (uint64_t)v37;
      uint64_t v32 = v50;
    }
    sub_2409FA1E0(v31);
    uint64_t v38 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56))(v32, v38, 1, v36);
  }
  __break(1u);
  return result;
}

void sub_2409FA088(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240A050C8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t Date.year(calendar:)()
{
  uint64_t v0 = sub_240A02A58();
  uint64_t v1 = *(void *)(v0 - 8);
  double v2 = MEMORY[0x270FA5388](v0);
  unint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v1 + 104))(v4, *MEMORY[0x263F078A0], v0, v2);
  uint64_t v5 = sub_240A02A68();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v5;
}

uint64_t sub_2409FA1E0(uint64_t a1)
{
  sub_2409FA088(0, (unint64_t *)&qword_268C996D0, MEMORY[0x263F07490]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SoundLevelModel.init(title:description:warningDescription:valueOffsetPercentage:valueWidthPercentage:showBottomHairline:chartForegroundColor:chartBackgroundColor:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, float a10@<S0>, float a11@<S1>, uint64_t a12)
{
  if (a10 <= 0.0) {
    a10 = 0.0;
  }
  if (a10 > 1.0) {
    a10 = 1.0;
  }
  if (a11 <= 0.0) {
    a11 = 0.0;
  }
  if (a11 > 1.0) {
    a11 = 1.0;
  }
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(unsigned char *)(a9 + 48) = a7;
  if ((float)(1.0 - a10) < a11) {
    a11 = 1.0 - a10;
  }
  *(float *)(a9 + 56) = a10;
  *(float *)(a9 + 60) = a11;
  *(void *)(a9 + 64) = a8;
  *(void *)(a9 + 72) = a12;
  *(void *)(a9 + 80) = 0x4010000000000000;
  return result;
}

char *SoundLevelView.__allocating_init(model:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return SoundLevelView.init(model:)(a1);
}

void sub_2409FA2E8()
{
  sub_2409FBB94(1);
  qword_268C9A870 = v0;
}

void sub_2409FA30C()
{
  id v0 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x263F835F0]);
  sub_2409FBD24(0, &qword_268C9A8A0, (void (*)(uint64_t))sub_2409FBB24);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240A06800;
  uint64_t v2 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  *(void *)(inited + 40) = v0;
  id v3 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 48) = *MEMORY[0x263F81500];
  unint64_t v4 = self;
  id v5 = v2;
  id v6 = v0;
  id v7 = v3;
  *(void *)(inited + 56) = objc_msgSend(v4, sel_labelColor);
  unint64_t v8 = sub_24098A4B0(inited);

  qword_268C9A878 = v8;
}

unint64_t sub_2409FA420()
{
  sub_2409FBD24(0, &qword_268C9A8A0, (void (*)(uint64_t))sub_2409FBB24);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240A06800;
  uint64_t v1 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  uint64_t v2 = self;
  uint64_t v3 = *MEMORY[0x263F83588];
  id v4 = v1;
  id v5 = objc_msgSend(v2, sel_preferredFontForTextStyle_, v3);
  id v6 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 40) = v5;
  *(void *)(inited + 48) = v6;
  id v7 = self;
  id v8 = v6;
  *(void *)(inited + 56) = objc_msgSend(v7, sel_secondaryLabelColor);
  unint64_t result = sub_24098A4B0(inited);
  qword_268C9A880 = result;
  return result;
}

char *SoundLevelView.init(model:)(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC16HearingAppPlugin14SoundLevelView_headerStackView] = 0;
  long long v3 = *(_OWORD *)(a1 + 72);
  v91[0] = *(_OWORD *)(a1 + 56);
  v91[1] = v3;
  id v4 = (void *)v3;
  objc_allocWithZone((Class)type metadata accessor for HorizontalMeterView());
  id v5 = v1;
  id v6 = *((id *)&v91[0] + 1);
  id v7 = v4;
  HorizontalMeterView.init(model:)((uint64_t)v91);
  *(void *)&v5[OBJC_IVAR____TtC16HearingAppPlugin14SoundLevelView_meterLevelView] = v8;
  id v9 = v8;
  objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v90.receiver = v5;
  v90.super_class = (Class)type metadata accessor for SoundLevelView();
  id v84 = (char *)objc_msgSendSuper2(&v90, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_2409FB190();
  uint64_t v10 = qword_268C99360;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_268C9A870;
  sub_2409824B8(0, &qword_268C9A898);
  uint64_t v12 = (void *)sub_240A04FB8();
  LODWORD(v13) = 1132068864;
  objc_msgSend(v12, sel_setContentCompressionResistancePriority_forAxis_, 0, v13);
  LODWORD(v14) = 1132068864;
  objc_msgSend(v12, sel_setContentHuggingPriority_forAxis_, 0, v14);
  objc_msgSend(v12, sel_setNumberOfLines_, 0);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_2409FB394(v11);
  id v15 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v16 = (void *)sub_240A04C18();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  unint64_t v17 = sub_2409FB75C();
  uint64_t v18 = (void *)sub_240A04B98();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v15, sel_initWithString_attributes_, v16, v18);

  objc_msgSend(v12, sel_setAttributedText_, v19);
  objc_msgSend(v12, sel_setAdjustsFontForContentSizeCategory_, 1);
  swift_bridgeObjectRelease();
  if (qword_268C99368 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_268C9A878;
  uint64_t v21 = (void *)sub_240A04FB8();
  LODWORD(v22) = 1144750080;
  objc_msgSend(v21, sel_setContentCompressionResistancePriority_forAxis_, 0, v22);
  LODWORD(v23) = 1144750080;
  objc_msgSend(v21, sel_setContentHuggingPriority_forAxis_, 0, v23);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_2409FB394(v20);
  id v24 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v25 = (void *)sub_240A04C18();
  swift_bridgeObjectRelease();
  id v81 = (id)v17;
  id v26 = (void *)sub_240A04B98();
  swift_bridgeObjectRelease();
  id v27 = objc_msgSend(v24, sel_initWithString_attributes_, v25, v26);

  objc_msgSend(v21, sel_setAttributedText_, v27);
  objc_msgSend(v21, sel_setAdjustsFontForContentSizeCategory_, 1);
  sub_2409973C8();
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_240A073E0;
  *(void *)(v28 + 32) = v12;
  *(void *)(v28 + 40) = v21;
  sub_240A04D38();
  id v29 = objc_allocWithZone(MEMORY[0x263F82BF8]);
  sub_2409824B8(0, &qword_268C9A6E8);
  id v87 = v12;
  id v86 = v21;
  BOOL v30 = (void *)sub_240A04D08();
  swift_bridgeObjectRelease();
  id v31 = objc_msgSend(v29, sel_initWithArrangedSubviews_, v30);

  objc_msgSend(v31, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v32 = objc_msgSend(v84, sel_traitCollection);
  id v33 = objc_msgSend(v32, sel_preferredContentSizeCategory);

  LOBYTE(v32) = sub_240A04F98();
  objc_msgSend(v31, sel_setAxis_, v32 & 1);
  objc_msgSend(v31, sel_setSpacing_, 16.0);
  uint64_t v34 = *(void **)&v84[OBJC_IVAR____TtC16HearingAppPlugin14SoundLevelView_headerStackView];
  *(void *)&v84[OBJC_IVAR____TtC16HearingAppPlugin14SoundLevelView_headerStackView] = v31;
  id v35 = v31;

  uint64_t v36 = *(void *)(a1 + 40);
  uint64_t v37 = a1;
  if (qword_268C99370 != -1) {
    swift_once();
  }
  uint64_t v38 = qword_268C9A880;
  os_log_type_t v39 = (void *)sub_240A04FB8();
  LODWORD(v40) = 1132068864;
  objc_msgSend(v39, sel_setContentCompressionResistancePriority_forAxis_, 0, v40);
  LODWORD(v41) = 1132068864;
  objc_msgSend(v39, sel_setContentHuggingPriority_forAxis_, 0, v41);
  objc_msgSend(v39, sel_setNumberOfLines_, 0);
  uint64_t v89 = a1;
  if (v36)
  {
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_2409FB394(v38);
    id v42 = objc_allocWithZone(MEMORY[0x263F086A0]);
    uint64_t v43 = (void *)sub_240A04C18();
    swift_bridgeObjectRelease();
    uint64_t v44 = (void *)sub_240A04B98();
    swift_bridgeObjectRelease();
    id v45 = objc_msgSend(v42, sel_initWithString_attributes_, v43, v44);

    objc_msgSend(v39, sel_setAttributedText_, v45);
  }
  else
  {
    objc_msgSend(v39, sel_setHidden_, 1);
  }
  objc_msgSend(v39, sel_setAdjustsFontForContentSizeCategory_, 1, v81);
  id v46 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v46, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v47 = objc_msgSend(self, sel_opaqueSeparatorColor);
  objc_msgSend(v46, sel_setBackgroundColor_, v47);

  objc_msgSend(v46, sel_setHidden_, (*(unsigned char *)(v37 + 48) & 1) == 0);
  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_240A09EB0;
  *(void *)(v48 + 32) = v35;
  uint64_t v49 = OBJC_IVAR____TtC16HearingAppPlugin14SoundLevelView_meterLevelView;
  uint64_t v50 = *(void **)&v84[OBJC_IVAR____TtC16HearingAppPlugin14SoundLevelView_meterLevelView];
  *(void *)(v48 + 40) = v50;
  *(void *)(v48 + 48) = v39;
  *(void *)(v48 + 56) = v46;
  sub_240A04D38();
  id v51 = objc_allocWithZone(MEMORY[0x263F82BF8]);
  id v85 = v35;
  id v52 = v50;
  id v88 = v39;
  id v82 = v46;
  uint64_t v53 = (void *)sub_240A04D08();
  swift_bridgeObjectRelease();
  id v54 = objc_msgSend(v51, sel_initWithArrangedSubviews_, v53);

  objc_msgSend(v54, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v54, sel_setAxis_, 1);
  objc_msgSend(v54, sel_setSpacing_, 5.0);
  objc_msgSend(v54, sel_setCustomSpacing_afterView_, v85, 6.0);
  objc_msgSend(v54, sel_setCustomSpacing_afterView_, *(void *)&v84[v49], 10.0);
  objc_msgSend(v84, sel_addSubview_, v54);
  id v83 = self;
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_240A09EC0;
  id v56 = objc_msgSend(v54, sel_topAnchor);
  id v57 = objc_msgSend(v84, sel_layoutMarginsGuide);
  id v58 = objc_msgSend(v57, sel_topAnchor);

  id v59 = objc_msgSend(v56, sel_constraintEqualToAnchor_, v58);
  *(void *)(v55 + 32) = v59;
  id v60 = objc_msgSend(v54, sel_bottomAnchor);
  id v61 = objc_msgSend(v84, sel_bottomAnchor);
  id v62 = objc_msgSend(v60, sel_constraintEqualToAnchor_, v61);

  *(void *)(v55 + 40) = v62;
  id v63 = objc_msgSend(v54, sel_leadingAnchor);
  id v64 = objc_msgSend(v84, sel_leadingAnchor);
  id v65 = objc_msgSend(v63, sel_constraintEqualToAnchor_, v64);

  *(void *)(v55 + 48) = v65;
  id v66 = objc_msgSend(v54, sel_trailingAnchor);
  id v67 = objc_msgSend(v84, sel_trailingAnchor);
  id v68 = objc_msgSend(v66, sel_constraintEqualToAnchor_, v67);

  *(void *)(v55 + 56) = v68;
  id v69 = objc_msgSend(*(id *)&v84[v49], sel_heightAnchor);
  id v70 = objc_msgSend(v69, sel_constraintEqualToConstant_, 8.0);

  *(void *)(v55 + 64) = v70;
  id v71 = objc_msgSend(v82, sel_heightAnchor);
  id v72 = objc_msgSend(v71, sel_constraintEqualToConstant_, 0.5);

  *(void *)(v55 + 72) = v72;
  id v73 = objc_msgSend(v82, sel_leadingAnchor);
  id v74 = objc_msgSend(v54, sel_leadingAnchor);
  id v75 = objc_msgSend(v73, sel_constraintEqualToAnchor_, v74);

  *(void *)(v55 + 80) = v75;
  id v76 = objc_msgSend(v82, sel_trailingAnchor);
  id v77 = objc_msgSend(v54, sel_trailingAnchor);
  id v78 = objc_msgSend(v76, sel_constraintEqualToAnchor_, v77);

  *(void *)(v55 + 88) = v78;
  sub_240A04D38();
  sub_2409824B8(0, &qword_268C9A6F8);
  uint64_t v79 = (void *)sub_240A04D08();
  swift_bridgeObjectRelease();
  objc_msgSend(v83, sel_activateConstraints_, v79);
  sub_2409FB7B4(v89);

  return v84;
}

uint64_t sub_2409FB190()
{
  swift_getObjectType();
  sub_2409FBD24(0, &qword_268C9A700, (void (*)(uint64_t))sub_2409EB16C);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_240A06870;
  uint64_t v1 = sub_240A04108();
  uint64_t v2 = MEMORY[0x263F82018];
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = v2;
  sub_240A04FC8();
  sub_240A03B98();

  return swift_bridgeObjectRelease();
}

id SoundLevelView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void SoundLevelView.init(frame:)()
{
}

id SoundLevelView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SoundLevelView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2409FB394(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_2409D605C();
    uint64_t v2 = sub_240A052C8();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE80];
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t result = swift_retain();
  int64_t v28 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v28 << 6);
      goto LABEL_28;
    }
    int64_t v11 = v28 + 1;
    if (__OFADD__(v28, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v26) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v11);
    int64_t v13 = v28 + 1;
    if (!v12)
    {
      int64_t v13 = v28 + 2;
      if (v28 + 2 >= v26) {
        goto LABEL_37;
      }
      unint64_t v12 = *(void *)(v27 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v28 + 3;
        if (v28 + 3 >= v26) {
          goto LABEL_37;
        }
        unint64_t v12 = *(void *)(v27 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v28 + 4;
          if (v28 + 4 >= v26) {
            goto LABEL_37;
          }
          unint64_t v12 = *(void *)(v27 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v28 = v13;
LABEL_28:
    uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8 * v10);
    *(void *)&v31[0] = *(void *)(*(void *)(a1 + 48) + 8 * v10);
    *(void *)&v30[0] = v15;
    id v16 = *(id *)&v31[0];
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v17 = *(void *)&v31[0];
    sub_24098AD10((_OWORD *)((char *)v31 + 8), v29);
    sub_24098AD10(v29, v31);
    sub_24098AD10(v31, v30);
    sub_240A04C58();
    sub_240A053F8();
    sub_240A04C98();
    uint64_t v18 = sub_240A05418();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v19 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v20 = v18 & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v6 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v8 = __clz(__rbit64((-1 << v20) & ~*(void *)(v6 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v6 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v8 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v6 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(void *)(*(void *)(v2 + 48) + 8 * v8) = v17;
    uint64_t result = (uint64_t)sub_24098AD10(v30, (_OWORD *)(*(void *)(v2 + 56) + 32 * v8));
    ++*(void *)(v2 + 16);
  }
  int64_t v14 = v28 + 5;
  if (v28 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_240981DFC();
    return v2;
  }
  unint64_t v12 = *(void *)(v27 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v28 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v26) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SoundLevelView()
{
  return self;
}

unint64_t sub_2409FB75C()
{
  unint64_t result = qword_268C993D8;
  if (!qword_268C993D8)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C993D8);
  }
  return result;
}

uint64_t sub_2409FB7B4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 64);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void destroy for SoundLevelModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v2 = *(void **)(a1 + 72);
}

uint64_t initializeWithCopy for SoundLevelModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v6 = *(void **)(a2 + 64);
  id v7 = *(void **)(a2 + 72);
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = v7;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  id v8 = v6;
  id v9 = v7;
  return a1;
}

uint64_t assignWithCopy for SoundLevelModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  uint64_t v4 = *(void **)(a2 + 64);
  uint64_t v5 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = v4;
  id v6 = v4;

  id v7 = *(void **)(a2 + 72);
  id v8 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = v7;
  id v9 = v7;

  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

__n128 initializeWithTake for SoundLevelModel(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for SoundLevelModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  id v7 = *(void **)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);

  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for SoundLevelModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SoundLevelModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SoundLevelModel()
{
  return &type metadata for SoundLevelModel;
}

void sub_2409FBB24()
{
  if (!qword_268C9A8A8)
  {
    type metadata accessor for Key(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C9A8A8);
    }
  }
}

void sub_2409FBB94(char a1)
{
  unint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_preferredFontForTextStyle_, *MEMORY[0x263F835F0]);
  uint64_t v4 = v3;
  if ((a1 & 1) == 0) {
    goto LABEL_4;
  }
  id v5 = objc_msgSend(v3, sel_fontDescriptor);
  id v6 = objc_msgSend(v5, sel_fontDescriptorWithSymbolicTraits_, 2);

  if (v6)
  {
    id v7 = objc_msgSend(v2, sel_fontWithDescriptor_size_, v6, 0.0);

    uint64_t v4 = v7;
LABEL_4:
    sub_2409FBD24(0, &qword_268C9A8A0, (void (*)(uint64_t))sub_2409FBB24);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_240A06800;
    id v9 = (void *)*MEMORY[0x263F814F0];
    *(void *)(inited + 32) = *MEMORY[0x263F814F0];
    *(void *)(inited + 40) = v4;
    unint64_t v10 = (void *)*MEMORY[0x263F81500];
    *(void *)(inited + 48) = *MEMORY[0x263F81500];
    int64_t v11 = self;
    id v12 = v9;
    id v13 = v4;
    id v14 = v10;
    *(void *)(inited + 56) = objc_msgSend(v11, sel_labelColor);
    sub_24098A4B0(inited);

    return;
  }
  __break(1u);
}

void sub_2409FBD24(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240A05358();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2409FBD78(char *a1)
{
  uint64_t v1 = *(void **)&a1[OBJC_IVAR____TtC16HearingAppPlugin14SoundLevelView_headerStackView];
  if (v1)
  {
    id v5 = v1;
    id v3 = objc_msgSend(a1, sel_traitCollection);
    id v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);

    LOBYTE(v3) = sub_240A04F98();
    objc_msgSend(v5, sel_setAxis_, v3 & 1);
  }
}

uint64_t sub_2409FBE38(uint64_t a1, char a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v45 = a6;
  *(void *)&long long v46 = a5;
  uint64_t v10 = sub_240A04018();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_240A02E88();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
  int v18 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v17, v14);
  if (v18 == *MEMORY[0x263F435C8])
  {
    uint64_t v44 = v11;
    sub_2409FE638(0, (unint64_t *)&qword_26AFD4930, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
    uint64_t v19 = swift_allocObject();
    long long v43 = xmmword_240A06870;
    *(_OWORD *)(v19 + 16) = xmmword_240A06870;
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    *(void *)(v19 + 32) = sub_240A02828();
    *(void *)(v19 + 40) = v20;
    if (a2)
    {
      if ((a4 & 1) != 0 || (a3 & 1) == 0)
      {
        uint64_t v33 = sub_240A02828();
        uint64_t v35 = v34;
        uint64_t v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = v43;
        *(void *)(v21 + 32) = v33;
        *(void *)(v21 + 40) = v35;
      }
      else
      {
        uint64_t v21 = sub_2409FDCFC();
      }
      goto LABEL_19;
    }
    if (a4)
    {
      uint64_t v21 = sub_2409FE07C();
LABEL_19:
      uint64_t v48 = v21;
      sub_240991DBC(v19);
      return v48;
    }
    sub_240A03FE8();
    uint64_t v36 = sub_240A03FF8();
    os_log_type_t v37 = sub_240A04EA8();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v48 = v39;
      *(_DWORD *)uint64_t v38 = 136446210;
      uint64_t v40 = sub_240A05478();
      uint64_t v47 = sub_240981440(v40, v41, &v48);
      sub_240A050D8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240976000, v36, v37, "[[%{public}s] Feature is active but no devices return active.", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v39, -1, -1);
      MEMORY[0x2456058A0](v38, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v44 + 8))(v13, v10);
  }
  else if (v18 == *MEMORY[0x263F435D0])
  {
    sub_2409FE638(0, (unint64_t *)&qword_26AFD4930, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_240A06800;
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    *(void *)(v19 + 32) = sub_240A02828();
    *(void *)(v19 + 40) = v22;
    *(void *)(v19 + 48) = sub_240A02828();
    *(void *)(v19 + 56) = v23;
  }
  else if (v18 == *MEMORY[0x263F435C0])
  {
    uint64_t v24 = sub_240A02F78();
    uint64_t v26 = v25;
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    sub_240A02828();
    uint64_t v27 = MEMORY[0x263F8D310];
    int64_t v28 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
    sub_2409FE638(0, (unint64_t *)&qword_26AFD4930, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
    uint64_t v19 = swift_allocObject();
    long long v46 = xmmword_240A06870;
    *(_OWORD *)(v19 + 16) = xmmword_240A06870;
    sub_2409FE55C(0, (unint64_t *)&qword_26AFD4940, (uint64_t (*)(uint64_t))sub_24098EA68, v28);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = v46;
    *(void *)(v29 + 56) = v27;
    *(void *)(v29 + 64) = sub_2409800D4();
    *(void *)(v29 + 32) = v24;
    *(void *)(v29 + 40) = v26;
    uint64_t v30 = sub_240A04C28();
    uint64_t v32 = v31;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v19 + 32) = v30;
    *(void *)(v19 + 40) = v32;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    return MEMORY[0x263F8EE78];
  }
  return v19;
}

uint64_t sub_2409FC568@<X0>(uint64_t a1@<X8>)
{
  return sub_2409FD82C(a1);
}

uint64_t sub_2409FC584()
{
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  return sub_240A02828();
}

unint64_t sub_2409FC624()
{
  return 0xD000000000000017;
}

uint64_t sub_2409FC640()
{
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  id v0 = (id)qword_26AFD6468;

  return sub_240A02ED8();
}

uint64_t sub_2409FC6CC()
{
  v96[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v94 = sub_240A04018();
  uint64_t v93 = *(void *)(v94 - 8);
  uint64_t v0 = MEMORY[0x270FA5388](v94);
  objc_super v90 = (char *)&v86 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  id v4 = (char *)&v86 - v3;
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  id v7 = (char *)&v86 - v6;
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v86 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  id v13 = (char *)&v86 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  unsigned int v92 = (char *)&v86 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v86 - v16;
  int v18 = (char *)self;
  v96[0] = 0;
  if (objc_msgSend(v18, sel__setHeadphoneExposureMeasureLevelsEnabled_error_, 1, v96))
  {
    id v19 = v96[0];
  }
  else
  {
    char v91 = v10;
    id v20 = v96[0];
    uint64_t v21 = (void *)sub_240A02858();

    swift_willThrow();
    sub_240A03FE8();
    id v22 = v21;
    id v23 = v21;
    uint64_t v24 = sub_240A03FF8();
    os_log_type_t v25 = sub_240A04EC8();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      id v88 = v4;
      uint64_t v27 = (uint8_t *)v26;
      int64_t v28 = (void *)swift_slowAlloc();
      id v87 = v17;
      uint64_t v29 = v28;
      v96[0] = v28;
      *(_DWORD *)uint64_t v27 = 136446210;
      uint64_t v89 = v7;
      swift_getErrorValue();
      uint64_t v30 = sub_240A053A8();
      uint64_t v95 = sub_240981440(v30, v31, (uint64_t *)v96);
      uint64_t v32 = v93;
      sub_240A050D8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_240976000, v24, v25, "Could not enable measure levels on phone. %{public}s", v27, 0xCu);
      swift_arrayDestroy();
      uint64_t v33 = v29;
      uint64_t v17 = v87;
      MEMORY[0x2456058A0](v33, -1, -1);
      uint64_t v34 = v27;
      id v4 = v88;
      MEMORY[0x2456058A0](v34, -1, -1);

      uint64_t v35 = v32;
      id v7 = v89;
    }
    else
    {

      uint64_t v35 = v93;
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v94);
    uint64_t v10 = v91;
  }
  v96[0] = 0;
  if (objc_msgSend(v18, sel__setHeadphoneExposureNotificationsEnabled_error_, 1, v96))
  {
    id v36 = v96[0];
    if ((sub_240A02F28() & 1) == 0)
    {
LABEL_9:
      os_log_type_t v37 = v92;
      sub_240A03FE8();
      uint64_t v38 = sub_240A03FF8();
      os_log_type_t v39 = sub_240A04EC8();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v40 = 0;
        _os_log_impl(&dword_240976000, v38, v39, "Enabled phone settings for HAEN.", v40, 2u);
        MEMORY[0x2456058A0](v40, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v37, v94);
    }
  }
  else
  {
    id v42 = v96[0];
    long long v43 = (void *)sub_240A02858();

    swift_willThrow();
    sub_240A03FE8();
    id v44 = v43;
    id v45 = v43;
    long long v46 = sub_240A03FF8();
    os_log_type_t v47 = sub_240A04EB8();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      uint64_t v49 = (void *)swift_slowAlloc();
      char v91 = v10;
      uint64_t v50 = v49;
      v96[0] = v49;
      uint64_t v89 = v7;
      id v88 = v18;
      *(_DWORD *)uint64_t v48 = 136446210;
      swift_getErrorValue();
      uint64_t v51 = sub_240A053A8();
      uint64_t v95 = sub_240981440(v51, v52, (uint64_t *)v96);
      int v18 = v88;
      id v7 = v89;
      sub_240A050D8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_240976000, v46, v47, "Could not enable notifications on phone. %{public}s", v48, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v50, -1, -1);
      MEMORY[0x2456058A0](v48, -1, -1);

      (*(void (**)(char *, uint64_t))(v93 + 8))(v91, v94);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v93 + 8))(v10, v94);
    }
    if ((sub_240A02F28() & 1) == 0) {
      goto LABEL_9;
    }
  }
  if (objc_msgSend(v18, sel_isHeadphoneExposureNotificationsSupportedOnActiveWatch))
  {
    v96[0] = 0;
    uint64_t result = (uint64_t)objc_msgSend(v18, sel_isHeadphoneExposureNotificationsEnabledOnActiveWatchWithError_, v96);
    if (v96[0])
    {
      id v53 = v96[0];
      swift_willThrow();
      sub_240A03FE8();
      id v54 = v53;
      uint64_t v55 = sub_240A03FF8();
      os_log_type_t v56 = sub_240A04EB8();
      if (os_log_type_enabled(v55, v56))
      {
        id v57 = (uint8_t *)swift_slowAlloc();
        id v58 = (void *)swift_slowAlloc();
        v96[0] = v58;
        *(_DWORD *)id v57 = 136446210;
        swift_getErrorValue();
        uint64_t v59 = sub_240A053A8();
        uint64_t v95 = sub_240981440(v59, v60, (uint64_t *)v96);
        sub_240A050D8();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240976000, v55, v56, "Could not enable determine if notifications enabled on watch. %{public}s", v57, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2456058A0](v58, -1, -1);
        MEMORY[0x2456058A0](v57, -1, -1);

        return (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v7, v94);
      }

LABEL_27:
      return (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v7, v94);
    }
    if (result) {
      return result;
    }
    v96[0] = 0;
    if (objc_msgSend(v18, sel__setHeadphoneExposureMeasureLevelsEnabledOnActiveWatch_error_, 1, v96))
    {
      id v64 = v96[0];
    }
    else
    {
      id v65 = v96[0];
      id v66 = (void *)sub_240A02858();

      swift_willThrow();
      sub_240A03FE8();
      id v67 = v66;
      id v68 = v66;
      id v69 = sub_240A03FF8();
      os_log_type_t v70 = sub_240A04EC8();
      if (os_log_type_enabled(v69, v70))
      {
        id v71 = (uint8_t *)swift_slowAlloc();
        id v72 = (void *)swift_slowAlloc();
        v96[0] = v72;
        *(_DWORD *)id v71 = 136446210;
        swift_getErrorValue();
        uint64_t v73 = sub_240A053A8();
        uint64_t v95 = sub_240981440(v73, v74, (uint64_t *)v96);
        sub_240A050D8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_240976000, v69, v70, "Could not enable measure levels on watch. %{public}s", v71, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2456058A0](v72, -1, -1);
        MEMORY[0x2456058A0](v71, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v93 + 8))(v4, v94);
    }
    v96[0] = 0;
    unsigned int v75 = objc_msgSend(v18, sel__setHeadphoneExposureNotificationsEnabledOnActiveWatch_error_, 1, v96);
    id v76 = v96[0];
    if (!v75)
    {
      unsigned int v92 = (char *)v96[0];
      id v77 = v96[0];
      id v78 = (void *)sub_240A02858();

      swift_willThrow();
      id v7 = v90;
      sub_240A03FE8();
      id v79 = v78;
      id v80 = v78;
      id v54 = sub_240A03FF8();
      os_log_type_t v81 = sub_240A04EB8();
      if (os_log_type_enabled(v54, v81))
      {
        id v82 = (uint8_t *)swift_slowAlloc();
        id v83 = (void *)swift_slowAlloc();
        v96[0] = v83;
        *(_DWORD *)id v82 = 136446210;
        swift_getErrorValue();
        uint64_t v84 = sub_240A053A8();
        uint64_t v95 = sub_240981440(v84, v85, (uint64_t *)v96);
        sub_240A050D8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_240976000, v54, v81, "Could not enable notifications on watch. %{public}s", v82, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2456058A0](v83, -1, -1);
        MEMORY[0x2456058A0](v82, -1, -1);

        return (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v7, v94);
      }

      goto LABEL_27;
    }
    return (uint64_t)v76;
  }
  else
  {
    sub_240A03FE8();
    id v61 = sub_240A03FF8();
    os_log_type_t v62 = sub_240A04EC8();
    if (os_log_type_enabled(v61, v62))
    {
      id v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v63 = 0;
      _os_log_impl(&dword_240976000, v61, v62, "Omitting enabling HAEN for unsupported watch.", v63, 2u);
      MEMORY[0x2456058A0](v63, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v17, v94);
  }
}

uint64_t sub_2409FD38C(char a1, char a2)
{
  if (a1)
  {
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
  }
  else if (qword_26AFD4A20 != -1)
  {
    swift_once();
  }
  sub_240A02828();
  uint64_t v3 = sub_2409FE3D4(a2 & 1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_2409FD4D0(char a1)
{
  if (a1)
  {
    return sub_240A02F78();
  }
  else
  {
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    return sub_240A02828();
  }
}

uint64_t sub_2409FD584()
{
  id v0 = objc_msgSend(self, sel_sharedInstance);
  id v1 = objc_msgSend(v0, sel_getActivePairedDevice);

  if (!v1)
  {
    long long v4 = 0u;
    long long v5 = 0u;
LABEL_11:
    sub_2409FE5C0((uint64_t)&v4, (uint64_t)&qword_268C99520, MEMORY[0x263F8EE58] + 8, (uint64_t (*)(void, uint64_t, uint64_t, void))sub_2409FE638);
    return 0;
  }
  if (objc_msgSend(v1, sel_valueForProperty_, *MEMORY[0x263F57610]))
  {
    sub_240A05128();
    sub_240A03B98();
  }
  else
  {

    memset(v3, 0, sizeof(v3));
  }
  sub_24098EB0C((uint64_t)v3, (uint64_t)&v4);
  if (!*((void *)&v5 + 1)) {
    goto LABEL_11;
  }
  if (swift_dynamicCast()) {
    return *(void *)&v3[0];
  }
  else {
    return 0;
  }
}

uint64_t sub_2409FD6CC(char a1, char a2)
{
  if (a1)
  {
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
  }
  else if (qword_26AFD4A20 != -1)
  {
    swift_once();
  }
  sub_240A02828();
  uint64_t v3 = sub_2409FE3D4(a2 & 1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_2409FD810@<X0>(uint64_t a1@<X8>)
{
  return sub_2409FD82C(a1);
}

uint64_t sub_2409FD82C@<X0>(uint64_t a1@<X8>)
{
  sub_2409FE55C(0, (unint64_t *)&qword_26AFD3F48, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  long long v4 = (char *)&v8 - v3;
  sub_2409FD980((uint64_t)&v8 - v3);
  uint64_t v5 = sub_240A028A8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v4, v5);
  }
  __break(1u);
  return result;
}

uint64_t sub_2409FD980@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_240A04018();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409FE55C(0, (unint64_t *)&qword_26AFD3F48, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v20 - v7;
  sub_240A02898();
  uint64_t v9 = sub_240A028A8();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_2409FE5C0((uint64_t)v8, (uint64_t)&qword_26AFD3F48, MEMORY[0x263F06EA8], (uint64_t (*)(void, uint64_t, uint64_t, void))sub_2409FE55C);
    sub_240A03FE8();
    uint64_t v11 = sub_240A03FF8();
    os_log_type_t v12 = sub_240A04EB8();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v23 = a1;
      id v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v22 = v3;
      uint64_t v15 = v14;
      uint64_t v25 = v14;
      *(_DWORD *)id v13 = 136446210;
      uint64_t v21 = v2;
      uint64_t v16 = sub_240A05478();
      uint64_t v24 = sub_240981440(v16, v17, &v25);
      sub_240A050D8();
      a1 = v23;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240976000, v11, v12, "[%{public}s]: Invalid URL.", v13, 0xCu);
      uint64_t v18 = 1;
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v15, -1, -1);
      MEMORY[0x2456058A0](v13, -1, -1);

      (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v21);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      uint64_t v18 = 1;
    }
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v8, v9);
    uint64_t v18 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, v18, 1, v9);
}

uint64_t sub_2409FDCFC()
{
  uint64_t v0 = sub_240A04018();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(self, sel_currentDeviceDisplayName);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_240A04C58();
    uint64_t v8 = v7;

    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    sub_240A02828();
    uint64_t v9 = MEMORY[0x263F8D310];
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
    sub_2409FE638(0, (unint64_t *)&qword_26AFD4930, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
    uint64_t v11 = swift_allocObject();
    long long v23 = xmmword_240A06870;
    *(_OWORD *)(v11 + 16) = xmmword_240A06870;
    sub_2409FE55C(0, (unint64_t *)&qword_26AFD4940, (uint64_t (*)(uint64_t))sub_24098EA68, v10);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = v23;
    *(void *)(v12 + 56) = v9;
    *(void *)(v12 + 64) = sub_2409800D4();
    *(void *)(v12 + 32) = v6;
    *(void *)(v12 + 40) = v8;
    uint64_t v13 = sub_240A04C28();
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v11 + 32) = v13;
    *(void *)(v11 + 40) = v15;
  }
  else
  {
    sub_240A03FE8();
    uint64_t v16 = sub_240A03FF8();
    os_log_type_t v17 = sub_240A04EA8();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v25 = v19;
      *(_DWORD *)uint64_t v18 = 136446210;
      uint64_t v20 = sub_240A05478();
      uint64_t v24 = sub_240981440(v20, v21, &v25);
      sub_240A050D8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240976000, v16, v17, "[[%{public}s] Could not fetch device display name.", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v19, -1, -1);
      MEMORY[0x2456058A0](v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return MEMORY[0x263F8EE78];
  }
  return v11;
}

uint64_t sub_2409FE07C()
{
  uint64_t v0 = sub_240A04018();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_2409FD584();
  if (v5)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v5;
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    sub_240A02828();
    uint64_t v8 = MEMORY[0x263F8D310];
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
    sub_2409FE638(0, (unint64_t *)&qword_26AFD4930, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
    uint64_t v10 = swift_allocObject();
    long long v22 = xmmword_240A06870;
    *(_OWORD *)(v10 + 16) = xmmword_240A06870;
    sub_2409FE55C(0, (unint64_t *)&qword_26AFD4940, (uint64_t (*)(uint64_t))sub_24098EA68, v9);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = v22;
    *(void *)(v11 + 56) = v8;
    *(void *)(v11 + 64) = sub_2409800D4();
    *(void *)(v11 + 32) = v6;
    *(void *)(v11 + 40) = v7;
    uint64_t v12 = sub_240A04C28();
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v10 + 32) = v12;
    *(void *)(v10 + 40) = v14;
  }
  else
  {
    sub_240A03FE8();
    uint64_t v15 = sub_240A03FF8();
    os_log_type_t v16 = sub_240A04EA8();
    if (os_log_type_enabled(v15, v16))
    {
      os_log_type_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v24 = v18;
      *(_DWORD *)os_log_type_t v17 = 136446210;
      uint64_t v19 = sub_240A05478();
      uint64_t v23 = sub_240981440(v19, v20, &v24);
      sub_240A050D8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240976000, v15, v16, "[[%{public}s] Could not fetch watch display name.", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456058A0](v18, -1, -1);
      MEMORY[0x2456058A0](v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return MEMORY[0x263F8EE78];
  }
  return v10;
}

uint64_t sub_2409FE3D4(char a1)
{
  if (a1)
  {
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    sub_240A02828();
  }
  else
  {
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  }
  uint64_t v2 = sub_2409FD4D0(a1 & 1);
  uint64_t v4 = v3;
  sub_2409FE55C(0, (unint64_t *)&qword_26AFD4940, (uint64_t (*)(uint64_t))sub_24098EA68, MEMORY[0x263F8E0F8]);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240A06870;
  *(void *)(v5 + 56) = MEMORY[0x263F8D310];
  *(void *)(v5 + 64) = sub_2409800D4();
  *(void *)(v5 + 32) = v2;
  *(void *)(v5 + 40) = v4;
  uint64_t v6 = sub_240A04C28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

void sub_2409FE55C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2409FE5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, uint64_t, uint64_t, void))
{
  uint64_t v5 = a4(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_2409FE638(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_2409FE684()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16HearingAppPlugin51HearingFeaturesInSettingsPromotionGeneratorPipeline_domain;
  uint64_t v2 = sub_240A02C78();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_2409FE734()
{
  return type metadata accessor for HearingFeaturesInSettingsPromotionGeneratorPipeline(0);
}

uint64_t type metadata accessor for HearingFeaturesInSettingsPromotionGeneratorPipeline(uint64_t a1)
{
  return sub_2409A1004(a1, (uint64_t *)&unk_268C9A8B0);
}

uint64_t type metadata accessor for HearingFeaturesInSettingsPromotionTileViewActionHandler(uint64_t a1)
{
  return sub_2409A1004(a1, (uint64_t *)&unk_268C9A8C0);
}

uint64_t sub_2409FE77C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2409FE7BC()
{
  return swift_retain();
}

uint64_t sub_2409FE7D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC16HearingAppPlugin51HearingFeaturesInSettingsPromotionGeneratorPipeline_domain;
  uint64_t v4 = sub_240A02C78();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_2409FE848()
{
  swift_getObjectType();
  uint64_t v0 = sub_240A03AD8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFD49D0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_240A04018();
  sub_240979894(v4, (uint64_t)qword_26AFD6440);
  unint64_t v5 = sub_240A03FF8();
  os_log_type_t v6 = sub_240A04E98();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v21 = v1;
    uint64_t v9 = v0;
    uint64_t v10 = v8;
    uint64_t v23 = v8;
    *(_DWORD *)uint64_t v7 = 136446210;
    uint64_t v11 = sub_240A05478();
    uint64_t v22 = sub_240981440(v11, v12, &v23);
    sub_240A050D8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240976000, v5, v6, "[%{public}s] Did tap Hearing Features in Settings.", v7, 0xCu);
    swift_arrayDestroy();
    uint64_t v13 = v10;
    uint64_t v0 = v9;
    uint64_t v1 = v21;
    MEMORY[0x2456058A0](v13, -1, -1);
    MEMORY[0x2456058A0](v7, -1, -1);
  }

  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  sub_240A02828();
  uint64_t v14 = (void *)sub_240A04C18();
  swift_bridgeObjectRelease();
  uint64_t v15 = (void *)sub_240A04C18();
  id v16 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v14, v15, 1);

  os_log_type_t v17 = (void *)sub_240A04C18();
  id v18 = objc_msgSend(self, sel_actionWithTitle_style_handler_, v17, 1, 0);

  objc_msgSend(v16, sel_addAction_, v18);
  sub_240A03C48();
  uint64_t v19 = (void *)sub_240A03AB8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v19, sel_presentViewController_animated_completion_, v16, 1, 0);
}

uint64_t sub_2409FEC0C(uint64_t a1)
{
  uint64_t v3 = sub_240A03AD8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  os_log_type_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_allocWithZone(v1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t v8 = sub_240A03C58();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v8;
}

id sub_2409FED0C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HearingFeaturesInSettingsPromotionTileViewActionHandler(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2409FED44()
{
  return type metadata accessor for HearingFeaturesInSettingsPromotionTileViewActionHandler(0);
}

uint64_t sub_2409FED4C()
{
  return sub_2409FEDDC(&qword_26AFD4478, MEMORY[0x263F43E20]);
}

uint64_t sub_2409FED94()
{
  return sub_2409FEDDC(&qword_268C9A8D0, (void (*)(uint64_t))type metadata accessor for HearingFeaturesInSettingsPromotionTileViewActionHandler);
}

uint64_t sub_2409FEDDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double AudiogramPDFOverlayContextPills.renderable.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2409FF3CC(v1);
  *(void *)(a1 + 24) = &type metadata for PDFHStackWithEqualWidth;
  *(void *)(a1 + 32) = sub_2409A2918();
  *(void *)a1 = v3;
  double result = 10.0;
  *(_OWORD *)(a1 + 8) = xmmword_240A08880;
  return result;
}

uint64_t sub_2409FEE78(uint64_t a1, __int16 a2, uint64_t a3, int a4, char a5)
{
  int v9 = a5 & 1;
  uint64_t v10 = sub_240A03398();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = sub_2409A83EC(a1, a2, a3, a4 & 0xFFFFFF, v9);
  unint64_t v60 = &type metadata for AudiogramPDFOverlayContextPillTitleText;
  unint64_t v61 = sub_2409A8958();
  v59[0] = (uint64_t)v14;
  uint64_t v15 = sub_240A035A8();
  sub_240981514((uint64_t)v59);
  if ((a2 & 0xFF00) != 0x200 && (a4 & 1) == 0)
  {
    id v16 = (id)HKLocalizedStringForHearingLevelClassification();
    if (v16)
    {
      os_log_type_t v17 = v16;
      uint64_t v56 = sub_240A04C58();
      uint64_t v57 = v18;

      LOBYTE(v59[0]) = a2 & 1;
      char v58 = 0;
      uint64_t v19 = sub_2409886D4(a1, a2 & 0x101);
      if (v20)
      {
        uint64_t v21 = v19;
        uint64_t v22 = v20;
        uint64_t v23 = sub_240A03228();
        uint64_t v24 = self;
        uint64_t v55 = v15;
        if (v9) {
          uint64_t v25 = &selRef_hk_hearingHealthAudiogramRightEarLineColor;
        }
        else {
          uint64_t v25 = &selRef_hk_hearingHealthAudiogramLeftEarLineColor;
        }
        uint64_t v26 = MEMORY[0x245604520]([v24 *v25]);
        uint64_t v27 = sub_24099748C(v26, v23);
        uint64_t v28 = v10;
        uint64_t v54 = v10;
        uint64_t v29 = v27;
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v30 = *MEMORY[0x263F43D88];
        unint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
        v31(v13, v30, v28);
        uint64_t v32 = sub_240A03E28();
        unint64_t v60 = (ValueMetadata *)v32;
        unint64_t v61 = MEMORY[0x263F44850];
        sub_24097F464(v59);
        MEMORY[0x245603A70](v21, v22, v13, v29);
        uint64_t v33 = sub_240A035A8();
        uint64_t v34 = sub_240981514((uint64_t)v59);
        uint64_t v35 = MEMORY[0x245602E70](v34);
        id v36 = self;
        os_log_type_t v37 = *v25;
        uint64_t v15 = v55;
        uint64_t v38 = MEMORY[0x245604520]([v36 v37]);
        uint64_t v39 = sub_24099748C(v38, v35);
        swift_bridgeObjectRelease();
        swift_release();
        v31(v13, v30, v54);
        unint64_t v60 = (ValueMetadata *)v32;
        unint64_t v61 = MEMORY[0x263F44850];
        sub_24097F464(v59);
        MEMORY[0x245603A70](v56, v57, v13, v39);
        uint64_t v40 = sub_240A035A8();
        sub_240981514((uint64_t)v59);
        sub_240A0036C(0, (unint64_t *)&qword_268C99608, (uint64_t (*)(uint64_t))sub_240A00338, MEMORY[0x263F8E0F8]);
        uint64_t v41 = swift_allocObject();
        *(_OWORD *)(v41 + 16) = xmmword_240A06800;
        *(void *)(v41 + 32) = v33;
        *(void *)(v41 + 40) = v40;
        MEMORY[0x2456031B0]();
        swift_bridgeObjectRelease();
        uint64_t v42 = _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        goto LABEL_13;
      }
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v43 = v10;
  uint64_t v44 = sub_240A03228();
  id v45 = self;
  long long v46 = &selRef_hk_hearingHealthAudiogramLeftEarLineColor;
  if (v9) {
    long long v46 = &selRef_hk_hearingHealthAudiogramRightEarLineColor;
  }
  uint64_t v47 = MEMORY[0x245604520]([v45 *v46]);
  uint64_t v48 = sub_24099748C(v47, v44);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x263F43D88], v43);
  unint64_t v60 = (ValueMetadata *)sub_240A03E28();
  unint64_t v61 = MEMORY[0x263F44850];
  sub_24097F464(v59);
  MEMORY[0x245603A70](11565, 0xE200000000000000, v13, v48);
  uint64_t v49 = sub_240A035A8();
  sub_240981514((uint64_t)v59);
  sub_240A0036C(0, (unint64_t *)&qword_268C99608, (uint64_t (*)(uint64_t))sub_240A00338, MEMORY[0x263F8E0F8]);
  uint64_t v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_240A06870;
  *(void *)(v50 + 32) = v49;
  MEMORY[0x2456031B0]();
  swift_bridgeObjectRelease();
  uint64_t v42 = _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
LABEL_13:
  swift_bridgeObjectRelease();
  sub_240A0036C(0, (unint64_t *)&qword_268C99608, (uint64_t (*)(uint64_t))sub_240A00338, MEMORY[0x263F8E0F8]);
  uint64_t v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = xmmword_240A06800;
  *(void *)(v51 + 32) = v15;
  *(void *)(v51 + 40) = v42;
  uint64_t v52 = MEMORY[0x2456031B0]();
  swift_bridgeObjectRelease();
  return v52;
}

uint64_t sub_2409FF3CC(uint64_t a1)
{
  if (sub_2409C8A98())
  {
    uint64_t v2 = a1 + *(int *)(type metadata accessor for AudiogramPDFChartData() + 28);
    uint64_t v3 = sub_2409FEE78(*(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(unsigned __int16 *)(v2 + 24) | (*(unsigned __int8 *)(v2 + 26) << 16), 1);
    unint64_t v31 = &type metadata for PDFOverlayContextPill;
    unint64_t v4 = sub_2409D93EC();
    unint64_t v32 = v4;
    uint64_t v5 = swift_allocObject();
    v30[0] = v5;
    *(void *)(v5 + 40) = &type metadata for PDFVStackWithMinimumWidth;
    unint64_t v6 = sub_2409A9804();
    *(void *)(v5 + 48) = v6;
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = 0;
    *(unsigned char *)(v5 + 32) = 0;
    sub_240997540();
    id v7 = self;
    id v8 = objc_msgSend(v7, sel_systemPinkColor);
    id v9 = objc_msgSend(v8, sel_colorWithAlphaComponent_, 0.05);

    MEMORY[0x245604520](v9);
    *(void *)(v5 + 56) = sub_240A04FD8();
    uint64_t v10 = sub_240A035A8();
    sub_240981514((uint64_t)v30);
    uint64_t v11 = sub_2409FEE78(*(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(unsigned __int16 *)(v2 + 56) | (*(unsigned __int8 *)(v2 + 58) << 16), 0);
    unint64_t v31 = &type metadata for PDFOverlayContextPill;
    unint64_t v32 = v4;
    uint64_t v12 = swift_allocObject();
    v30[0] = v12;
    *(void *)(v12 + 40) = &type metadata for PDFVStackWithMinimumWidth;
    *(void *)(v12 + 48) = v6;
    *(void *)(v12 + 16) = v11;
    *(void *)(v12 + 24) = 0;
    *(unsigned char *)(v12 + 32) = 0;
    id v13 = objc_msgSend(v7, sel_systemBlueColor);
  }
  else
  {
    uint64_t v17 = a1 + *(int *)(type metadata accessor for AudiogramPDFChartData() + 28);
    uint64_t v18 = sub_2409FEE78(*(void *)(v17 + 32), *(void *)(v17 + 40), *(void *)(v17 + 48), *(unsigned __int16 *)(v17 + 56) | (*(unsigned __int8 *)(v17 + 58) << 16), 0);
    unint64_t v31 = &type metadata for PDFOverlayContextPill;
    unint64_t v19 = sub_2409D93EC();
    unint64_t v32 = v19;
    uint64_t v20 = swift_allocObject();
    v30[0] = v20;
    *(void *)(v20 + 40) = &type metadata for PDFVStackWithMinimumWidth;
    unint64_t v21 = sub_2409A9804();
    *(void *)(v20 + 48) = v21;
    *(void *)(v20 + 16) = v18;
    *(void *)(v20 + 24) = 0;
    *(unsigned char *)(v20 + 32) = 0;
    sub_240997540();
    uint64_t v22 = self;
    id v23 = objc_msgSend(v22, sel_systemBlueColor);
    id v24 = objc_msgSend(v23, sel_colorWithAlphaComponent_, 0.05);

    MEMORY[0x245604520](v24);
    *(void *)(v20 + 56) = sub_240A04FD8();
    uint64_t v10 = sub_240A035A8();
    sub_240981514((uint64_t)v30);
    uint64_t v25 = sub_2409FEE78(*(void *)v17, *(void *)(v17 + 8), *(void *)(v17 + 16), *(unsigned __int16 *)(v17 + 24) | (*(unsigned __int8 *)(v17 + 26) << 16), 1);
    unint64_t v31 = &type metadata for PDFOverlayContextPill;
    unint64_t v32 = v19;
    uint64_t v12 = swift_allocObject();
    v30[0] = v12;
    *(void *)(v12 + 40) = &type metadata for PDFVStackWithMinimumWidth;
    *(void *)(v12 + 48) = v21;
    *(void *)(v12 + 16) = v25;
    *(void *)(v12 + 24) = 0;
    *(unsigned char *)(v12 + 32) = 0;
    id v13 = objc_msgSend(v22, sel_systemPinkColor);
  }
  id v14 = objc_msgSend(v13, sel_colorWithAlphaComponent_, 0.05);

  MEMORY[0x245604520](v14);
  *(void *)(v12 + 56) = sub_240A04FD8();
  uint64_t v15 = sub_240A035A8();
  sub_240981514((uint64_t)v30);
  sub_240A0036C(0, (unint64_t *)&qword_268C99608, (uint64_t (*)(uint64_t))sub_240A00338, MEMORY[0x263F8E0F8]);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_240A06800;
  *(void *)(v16 + 32) = v10;
  *(void *)(v16 + 40) = v15;
  MEMORY[0x2456031B0]();
  swift_bridgeObjectRelease();
  uint64_t v26 = _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  sub_240A0036C(0, (unint64_t *)&qword_268C99608, (uint64_t (*)(uint64_t))sub_240A00338, MEMORY[0x263F8E0F8]);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_240A06870;
  *(void *)(v27 + 32) = v26;
  uint64_t v28 = MEMORY[0x2456031B0]();
  swift_bridgeObjectRelease();
  return v28;
}

char *initializeBufferWithCopyOfBuffer for AudiogramPDFOverlayContextPills(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for AudiogramPDFAudiogramChart.Model(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    unint64_t v6 = (int *)v4;
    uint64_t v7 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v7;
    id v8 = (int *)type metadata accessor for AudiogramPDFChartData();
    uint64_t v9 = v8[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = sub_240A02978();
    id v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    v13(v10, v11, v12);
    v13(&a1[v8[6]], &a2[v8[6]], v12);
    uint64_t v14 = v8[7];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    long long v17 = *((_OWORD *)v16 + 1);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v17;
    *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
    *(_OWORD *)(v15 + 43) = *(_OWORD *)(v16 + 43);
    uint64_t v18 = v8[8];
    unint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    long long v21 = *((_OWORD *)v20 + 1);
    *(_OWORD *)unint64_t v19 = *(_OWORD *)v20;
    *((_OWORD *)v19 + 1) = v21;
    v19[32] = v20[32];
    *(void *)&a1[v8[9]] = *(void *)&a2[v8[9]];
    a1[v6[5]] = a2[v6[5]];
    a1[v6[6]] = a2[v6[6]];
    a1[v6[7]] = a2[v6[7]];
    uint64_t v22 = v6[8];
    id v23 = &a1[v22];
    id v24 = &a2[v22];
    uint64_t v25 = *((void *)v24 + 1);
    *(void *)id v23 = *(void *)v24;
    *((void *)v23 + 1) = v25;
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  }
  return a1;
}

uint64_t destroy for AudiogramPDFOverlayContextPills(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = type metadata accessor for AudiogramPDFChartData();
  uint64_t v3 = a1 + *(int *)(v2 + 20);
  uint64_t v4 = sub_240A02978();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(a1 + *(int *)(v2 + 24), v4);
  swift_bridgeObjectRelease();
  type metadata accessor for AudiogramPDFAudiogramChart.Model(0);

  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for AudiogramPDFOverlayContextPills(char *a1, char *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v4;
  int v5 = (int *)type metadata accessor for AudiogramPDFChartData();
  uint64_t v6 = v5[5];
  uint64_t v7 = &a1[v6];
  id v8 = &a2[v6];
  uint64_t v9 = sub_240A02978();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  v10(v7, v8, v9);
  v10(&a1[v5[6]], &a2[v5[6]], v9);
  uint64_t v11 = v5[7];
  uint64_t v12 = &a1[v11];
  id v13 = &a2[v11];
  long long v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
  *(_OWORD *)(v12 + 43) = *(_OWORD *)(v13 + 43);
  uint64_t v15 = v5[8];
  uint64_t v16 = &a1[v15];
  long long v17 = &a2[v15];
  long long v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  v16[32] = v17[32];
  *(void *)&a1[v5[9]] = *(void *)&a2[v5[9]];
  unint64_t v19 = (int *)type metadata accessor for AudiogramPDFAudiogramChart.Model(0);
  a1[v19[5]] = a2[v19[5]];
  a1[v19[6]] = a2[v19[6]];
  a1[v19[7]] = a2[v19[7]];
  uint64_t v20 = v19[8];
  long long v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = *((void *)v22 + 1);
  *(void *)long long v21 = *(void *)v22;
  *((void *)v21 + 1) = v23;
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return a1;
}

char *assignWithCopy for AudiogramPDFOverlayContextPills(char *a1, char *a2)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v4 = (int *)type metadata accessor for AudiogramPDFChartData();
  uint64_t v5 = v4[5];
  uint64_t v6 = &a1[v5];
  uint64_t v7 = &a2[v5];
  uint64_t v8 = sub_240A02978();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 24);
  v9(v6, v7, v8);
  v9(&a1[v4[6]], &a2[v4[6]], v8);
  uint64_t v10 = v4[7];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = (long long *)&a2[v10];
  long long v13 = *v12;
  *(_OWORD *)(v11 + 11) = *(long long *)((char *)v12 + 11);
  *(_OWORD *)uint64_t v11 = v13;
  long long v14 = *(long long *)((char *)v12 + 43);
  *((_OWORD *)v11 + 2) = v12[2];
  *(_OWORD *)(v11 + 43) = v14;
  uint64_t v15 = v4[8];
  uint64_t v16 = &a1[v15];
  long long v17 = &a2[v15];
  char v18 = v17[32];
  long long v19 = *((_OWORD *)v17 + 1);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v19;
  v16[32] = v18;
  *(void *)&a1[v4[9]] = *(void *)&a2[v4[9]];
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v20 = (int *)type metadata accessor for AudiogramPDFAudiogramChart.Model(0);
  a1[v20[5]] = a2[v20[5]];
  a1[v20[6]] = a2[v20[6]];
  a1[v20[7]] = a2[v20[7]];
  uint64_t v21 = v20[8];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = *((void *)v23 + 1);
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for AudiogramPDFOverlayContextPills(char *a1, char *a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = (int *)type metadata accessor for AudiogramPDFChartData();
  uint64_t v5 = v4[5];
  uint64_t v6 = &a1[v5];
  uint64_t v7 = &a2[v5];
  uint64_t v8 = sub_240A02978();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32);
  v9(v6, v7, v8);
  v9(&a1[v4[6]], &a2[v4[6]], v8);
  uint64_t v10 = v4[7];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  long long v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
  *(_OWORD *)(v11 + 43) = *(_OWORD *)(v12 + 43);
  uint64_t v14 = v4[8];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  long long v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  v15[32] = v16[32];
  *(void *)&a1[v4[9]] = *(void *)&a2[v4[9]];
  char v18 = (int *)type metadata accessor for AudiogramPDFAudiogramChart.Model(0);
  a1[v18[5]] = a2[v18[5]];
  a1[v18[6]] = a2[v18[6]];
  a1[v18[7]] = a2[v18[7]];
  *(_OWORD *)&a1[v18[8]] = *(_OWORD *)&a2[v18[8]];
  return a1;
}

char *assignWithTake for AudiogramPDFOverlayContextPills(char *a1, char *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for AudiogramPDFChartData();
  uint64_t v6 = v5[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_240A02978();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v10(&a1[v5[6]], &a2[v5[6]], v9);
  uint64_t v11 = v5[7];
  uint64_t v12 = &a1[v11];
  long long v13 = &a2[v11];
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 11) = *(_OWORD *)(v13 + 11);
  *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
  *(_OWORD *)(v12 + 43) = *(_OWORD *)(v13 + 43);
  uint64_t v14 = v5[8];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  v15[32] = v16[32];
  long long v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  *(void *)&a1[v5[9]] = *(void *)&a2[v5[9]];
  swift_bridgeObjectRelease();
  char v18 = (int *)type metadata accessor for AudiogramPDFAudiogramChart.Model(0);
  a1[v18[5]] = a2[v18[5]];
  a1[v18[6]] = a2[v18[6]];
  a1[v18[7]] = a2[v18[7]];
  uint64_t v19 = v18[8];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = (uint64_t *)&a2[v19];
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *(void *)uint64_t v20 = v23;
  *((void *)v20 + 1) = v22;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AudiogramPDFOverlayContextPills(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240A00130);
}

uint64_t sub_240A00130(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudiogramPDFAudiogramChart.Model(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for AudiogramPDFOverlayContextPills(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240A001B0);
}

uint64_t sub_240A001B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudiogramPDFAudiogramChart.Model(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for AudiogramPDFOverlayContextPills()
{
  uint64_t result = qword_268C9A8D8;
  if (!qword_268C9A8D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240A0026C()
{
  uint64_t result = type metadata accessor for AudiogramPDFAudiogramChart.Model(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_240A002F8()
{
  sub_240981514(v0 + 16);

  return MEMORY[0x270FA0238](v0, 64, 7);
}

void sub_240A00338(uint64_t a1)
{
}

void sub_240A0036C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void HorizontalMeterView.__allocating_init(model:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  HorizontalMeterView.init(model:)(a1);
}

void HorizontalMeterView.init(model:)(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC16HearingAppPlugin19HorizontalMeterView_foregroundViewOffset] = 0;
  *(void *)&v1[OBJC_IVAR____TtC16HearingAppPlugin19HorizontalMeterView_foregroundViewWidth] = 0;
  id v3 = *(void **)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 16);
  uint64_t v5 = &v1[OBJC_IVAR____TtC16HearingAppPlugin19HorizontalMeterView_model];
  long long v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a1;
  *((_OWORD *)v5 + 1) = v6;
  v58.receiver = v1;
  v58.super_class = (Class)type metadata accessor for HorizontalMeterView();
  id v7 = v3;
  id v8 = v4;
  id v9 = objc_msgSendSuper2(&v58, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  double v10 = *(double *)(a1 + 24);
  sub_2409824B8(0, &qword_268C9A6E8);
  id v11 = v9;
  uint64_t v12 = (void *)sub_240A04FB8();
  uint64_t v56 = v8;
  objc_msgSend(v12, sel_setBackgroundColor_, v8);
  id v13 = objc_msgSend(v12, sel_layer);
  objc_msgSend(v13, sel_setCornerRadius_, v10);

  uint64_t v14 = (void *)sub_240A04FB8();
  uint64_t v57 = v7;
  objc_msgSend(v14, sel_setBackgroundColor_, v7);
  id v15 = objc_msgSend(v14, sel_layer);
  objc_msgSend(v15, sel_setCornerRadius_, v10);

  sub_2409973C8();
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_240A073E0;
  *(void *)(v16 + 32) = v12;
  *(void *)(v16 + 40) = v14;
  sub_240A04D38();
  long long v17 = (char *)v11;
  id v18 = v12;
  id v19 = v14;
  sub_240A04FA8();

  swift_bridgeObjectRelease();
  if (*(float *)(a1 + 4) < 1.1755e-38) {
    objc_msgSend(v19, sel_setHidden_, 1);
  }
  id v20 = objc_msgSend(v19, sel_leadingAnchor);
  id v21 = objc_msgSend(v18, sel_leadingAnchor);
  id v22 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v21);

  uint64_t v23 = OBJC_IVAR____TtC16HearingAppPlugin19HorizontalMeterView_foregroundViewOffset;
  id v24 = *(void **)&v17[OBJC_IVAR____TtC16HearingAppPlugin19HorizontalMeterView_foregroundViewOffset];
  *(void *)&v17[OBJC_IVAR____TtC16HearingAppPlugin19HorizontalMeterView_foregroundViewOffset] = v22;

  id v25 = objc_msgSend(v19, sel_widthAnchor);
  id v26 = objc_msgSend(v25, sel_constraintEqualToConstant_, 0.0);

  uint64_t v27 = OBJC_IVAR____TtC16HearingAppPlugin19HorizontalMeterView_foregroundViewWidth;
  uint64_t v28 = *(void **)&v17[OBJC_IVAR____TtC16HearingAppPlugin19HorizontalMeterView_foregroundViewWidth];
  *(void *)&v17[OBJC_IVAR____TtC16HearingAppPlugin19HorizontalMeterView_foregroundViewWidth] = v26;

  id v29 = objc_msgSend(v19, sel_leadingAnchor);
  id v30 = objc_msgSend(v18, sel_leadingAnchor);
  id v31 = objc_msgSend(v29, sel_constraintGreaterThanOrEqualToAnchor_, v30);

  id v32 = objc_msgSend(v19, sel_trailingAnchor);
  id v33 = objc_msgSend(v18, sel_trailingAnchor);
  id v34 = objc_msgSend(v32, sel_constraintLessThanOrEqualToAnchor_, v33);

  uint64_t v55 = v19;
  id v35 = objc_msgSend(v19, sel_heightAnchor);
  id v36 = objc_msgSend(v18, sel_heightAnchor);
  id v37 = objc_msgSend(v35, sel_constraintEqualToAnchor_, v36);

  uint64_t v38 = *(void **)&v17[v23];
  if (!v38)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v39 = *(void **)&v17[v27];
  if (!v39)
  {
LABEL_22:
    __break(1u);
    return;
  }
  sub_2409824B8(0, &qword_268C9A6F8);
  uint64_t v40 = v17;
  id v41 = v38;
  id v42 = v39;
  uint64_t v54 = v18;
  unint64_t v43 = sub_240A04F68();

  if (!(v43 >> 62))
  {
    uint64_t v44 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v45 = v44 + 5;
    if (!__OFADD__(v44, 5)) {
      goto LABEL_7;
    }
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v52 = sub_240A05288();
  BOOL v53 = __OFADD__(v52, 5);
  uint64_t v45 = v52 + 5;
  if (v53) {
    goto LABEL_19;
  }
LABEL_7:
  sub_240A00EEC(v45, 1);
  sub_240A04D38();
  id v31 = v31;
  MEMORY[0x245604930]();
  if (*(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_20:
  }
    sub_240A04D58();
  sub_240A04D68();
  sub_240A04D38();
  id v46 = v34;
  MEMORY[0x245604930]();
  if (*(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_240A04D58();
  }
  sub_240A04D68();
  sub_240A04D38();
  id v47 = v37;
  MEMORY[0x245604930]();
  if (*(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_240A04D58();
  }
  sub_240A04D68();
  sub_240A04D38();
  id v48 = v41;
  MEMORY[0x245604930]();
  if (*(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_240A04D58();
  }
  sub_240A04D68();
  sub_240A04D38();
  id v49 = v42;
  MEMORY[0x245604930]();
  if (*(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_240A04D58();
  }
  uint64_t v50 = self;
  sub_240A04D68();
  sub_240A04D38();
  swift_bridgeObjectRelease();

  uint64_t v51 = (void *)sub_240A04D08();
  swift_bridgeObjectRelease();
  objc_msgSend(v50, sel_activateConstraints_, v51);
}

uint64_t type metadata accessor for HorizontalMeterView()
{
  return self;
}

id HorizontalMeterView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void HorizontalMeterView.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC16HearingAppPlugin19HorizontalMeterView_foregroundViewOffset] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16HearingAppPlugin19HorizontalMeterView_foregroundViewWidth] = 0;

  sub_240A05258();
  __break(1u);
}

Swift::Void __swiftcall HorizontalMeterView.layoutSubviews()()
{
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for HorizontalMeterView();
  objc_msgSendSuper2(&v6, sel_layoutSubviews);
  objc_msgSend(v0, sel_frame);
  double Width = CGRectGetWidth(v7);
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC16HearingAppPlugin19HorizontalMeterView_foregroundViewWidth];
  if (v2)
  {
    double v3 = Width;
    uint64_t v4 = (float *)&v0[OBJC_IVAR____TtC16HearingAppPlugin19HorizontalMeterView_model];
    objc_msgSend(v2, sel_setConstant_, Width * *(float *)&v0[OBJC_IVAR____TtC16HearingAppPlugin19HorizontalMeterView_model + 4]);
    uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC16HearingAppPlugin19HorizontalMeterView_foregroundViewOffset];
    if (v5)
    {
      objc_msgSend(v5, sel_setConstant_, v3 * *v4);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id HorizontalMeterView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void HorizontalMeterView.init(frame:)()
{
}

id HorizontalMeterView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HorizontalMeterView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240A00EEC(uint64_t a1, char a2)
{
  unint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *objc_super v2 = v5;
  uint64_t v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      return result;
    }
    uint64_t v7 = 1;
  }
  if (v5 >> 62)
  {
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v8 = sub_240A05288();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1) {
    uint64_t v9 = a1;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t result = MEMORY[0x245604E60](v7, v9, a2 & 1, v5);
  *objc_super v2 = result;
  return result;
}

void destroy for HorizontalMeterViewModel(uint64_t a1)
{
  objc_super v2 = *(void **)(a1 + 16);
}

void *initializeWithCopy for HorizontalMeterViewModel(void *a1, void *a2)
{
  *a1 = *a2;
  double v3 = (void *)a2[1];
  uint64_t v4 = (void *)a2[2];
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = a2[3];
  id v5 = v3;
  id v6 = v4;
  return a1;
}

uint64_t assignWithCopy for HorizontalMeterViewModel(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  uint64_t v4 = *(void **)(a2 + 8);
  id v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 16);
  uint64_t v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

__n128 initializeWithTake for HorizontalMeterViewModel(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for HorizontalMeterViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;

  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for HorizontalMeterViewModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HorizontalMeterViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HorizontalMeterViewModel()
{
  return &type metadata for HorizontalMeterViewModel;
}

uint64_t sub_240A01190(uint64_t a1)
{
  uint64_t v2 = sub_240A02E88();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x263F435C8])
  {
    if (qword_26AFD4988 != -1) {
      swift_once();
    }
    uint64_t v7 = (void *)qword_26AFD63C8;
    id v8 = objc_msgSend((id)qword_26AFD63C8, sel_localizedNoiseThresholdValue_, objc_msgSend((id)qword_26AFD63C8, sel_noiseThresholdCurrentValue));
    uint64_t v9 = sub_240A04C58();
    uint64_t v11 = v10;

    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    sub_240A02828();
    sub_24098EA04(0, (unint64_t *)&qword_26AFD4940, (uint64_t (*)(uint64_t))sub_24098EA68, MEMORY[0x263F8E0F8]);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_240A06870;
    *(void *)(v12 + 56) = MEMORY[0x263F8D310];
    unint64_t v13 = sub_2409800D4();
    *(void *)(v12 + 64) = v13;
    *(void *)(v12 + 32) = v9;
    *(void *)(v12 + 40) = v11;
    _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v14 = sub_240A04C28();
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v17 = objc_msgSend(v7, sel_noiseThresholdMinutesThreshold);
    sub_240A02828();
    uint64_t v18 = swift_allocObject();
    long long v37 = xmmword_240A06800;
    *(_OWORD *)(v18 + 16) = xmmword_240A06800;
    *(void *)(v18 + 56) = MEMORY[0x263F8D310];
    *(void *)(v18 + 64) = v13;
    uint64_t v19 = MEMORY[0x263F8D6C8];
    *(void *)(v18 + 32) = v9;
    *(void *)(v18 + 40) = v11;
    uint64_t v20 = MEMORY[0x263F8D750];
    *(void *)(v18 + 96) = v19;
    *(void *)(v18 + 104) = v20;
    *(void *)(v18 + 72) = v17;
    uint64_t v21 = sub_240A04C28();
    uint64_t v23 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2409A6F50();
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = v37;
    *(void *)(v24 + 32) = v14;
    *(void *)(v24 + 40) = v16;
    *(void *)(v24 + 48) = v21;
    *(void *)(v24 + 56) = v23;
  }
  else if (v6 == *MEMORY[0x263F435D0])
  {
    sub_2409A6F50();
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_240A06800;
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    *(void *)(v24 + 32) = sub_240A02828();
    *(void *)(v24 + 40) = v25;
    *(void *)(v24 + 48) = sub_240A02828();
    *(void *)(v24 + 56) = v26;
  }
  else if (v6 == *MEMORY[0x263F435C0])
  {
    uint64_t v27 = sub_240A02F78();
    uint64_t v29 = v28;
    if (qword_26AFD4A20 != -1) {
      swift_once();
    }
    sub_240A02828();
    sub_2409A6F50();
    uint64_t v24 = swift_allocObject();
    long long v37 = xmmword_240A06870;
    *(_OWORD *)(v24 + 16) = xmmword_240A06870;
    sub_24098EA04(0, (unint64_t *)&qword_26AFD4940, (uint64_t (*)(uint64_t))sub_24098EA68, MEMORY[0x263F8E0F8]);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = v37;
    *(void *)(v30 + 56) = MEMORY[0x263F8D310];
    *(void *)(v30 + 64) = sub_2409800D4();
    *(void *)(v30 + 32) = v27;
    *(void *)(v30 + 40) = v29;
    uint64_t v31 = sub_240A04C28();
    uint64_t v33 = v32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v24 + 32) = v31;
    *(void *)(v24 + 40) = v33;
  }
  else if (v6 == *MEMORY[0x263F435B8])
  {
    char v34 = sub_240A02F48();
    sub_2409A6F50();
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_240A06870;
    if (v34)
    {
      if (qword_26AFD4A20 != -1) {
        swift_once();
      }
    }
    else if (qword_26AFD4A20 != -1)
    {
      swift_once();
    }
    *(void *)(v24 + 32) = sub_240A02828();
    *(void *)(v24 + 40) = v35;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return MEMORY[0x263F8EE78];
  }
  return v24;
}

uint64_t sub_240A01914@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v41 = a3;
  uint64_t v5 = sub_240A02FA8();
  uint64_t v44 = *(void *)(v5 - 8);
  uint64_t v45 = v5;
  MEMORY[0x270FA5388](v5);
  unint64_t v43 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_240A02B08();
  uint64_t v7 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v38 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24098EA04(0, &qword_26AFD3F60, MEMORY[0x263F437D8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v35 - v10;
  uint64_t v12 = type metadata accessor for NoiseNotificationsFeatureStatusActionHandlerData(0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_240A02FF8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = a1;
  v35[1] = sub_240979684();
  v35[2] = v19;
  sub_240A01F10(a2, (uint64_t)v18);
  uint64_t v20 = sub_240A02E88();
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
  uint64_t v42 = a2;
  v21(v14, a2, v20);
  sub_240A026F8();
  swift_allocObject();
  sub_240A026E8();
  sub_240A02558(&qword_268C99858, (void (*)(uint64_t))type metadata accessor for NoiseNotificationsFeatureStatusActionHandlerData);
  uint64_t v37 = sub_240A026D8();
  unint64_t v46 = v22;
  sub_2409A1104((uint64_t)v14);
  swift_release();
  sub_240A03B68();
  type metadata accessor for NoiseNotificationsFeatureStatusActionHandler(0);
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  uint64_t v36 = v15;
  v23(v11, v18, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, v15);
  uint64_t v25 = v38;
  uint64_t v24 = v39;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v38, *MEMORY[0x263F454E0], v39);
  uint64_t v26 = (void *)sub_240A02C98();
  sub_240A02558(&qword_268C99840, (void (*)(uint64_t))type metadata accessor for NoiseNotificationsFeatureStatusActionHandler);
  uint64_t v27 = v37;
  sub_240A02B88();
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v24);
  sub_240A025A0((uint64_t)v11, &qword_26AFD3F60, MEMORY[0x263F437D8]);
  sub_240A02FE8();
  sub_240A02BC8();
  sub_2409A6F50();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240A06870;
  *(void *)(inited + 32) = sub_240A02FB8();
  *(void *)(inited + 40) = v29;
  sub_2409E38BC(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_240A02BF8();
  uint64_t v31 = v43;
  uint64_t v30 = v44;
  uint64_t v32 = v45;
  (*(void (**)(char *, void, uint64_t))(v44 + 104))(v43, *MEMORY[0x263F43758], v45);
  sub_240A02F98();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v32);
  sub_240A02C08();
  uint64_t v33 = sub_240983C24();
  sub_240981A48(v33);
  swift_bridgeObjectRelease();
  sub_240A02BD8();
  sub_240A02BB8();
  sub_24098E998(v27, v46);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v36);
}

uint64_t sub_240A01F10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24098EA04(0, &qword_26AFD3F58, MEMORY[0x263F43658], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  id v47 = (char *)v38 - v5;
  uint64_t v6 = sub_240A02E78();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_240A02E88();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  unint64_t v46 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v38 - v14;
  sub_24098EA04(0, (unint64_t *)&qword_26AFD3F48, MEMORY[0x263F06EA8], v3);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v44 = (uint64_t)v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v38 - v19;
  uint64_t v21 = sub_240A01190(a1);
  uint64_t v22 = sub_240A02F68();
  uint64_t v42 = v23;
  uint64_t v43 = v22;
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v41(v15, a1, v10);
  int v24 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v15, v10);
  if (v24 == *MEMORY[0x263F435C0])
  {
    uint64_t v25 = sub_240A02F78();
    uint64_t v39 = v26;
    uint64_t v40 = v25;
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F43588], v6);
    sub_240A02E58();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else if (v24 == *MEMORY[0x263F435B8])
  {
    uint64_t v27 = sub_240A02F58();
    uint64_t v39 = v28;
    uint64_t v40 = v27;
    if (qword_26AFD4988 != -1) {
      swift_once();
    }
    id v29 = objc_msgSend((id)qword_26AFD63C8, sel_noiseThresholdFooterLinkURL);
    sub_240A02888();

    uint64_t v30 = sub_240A028A8();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v20, 0, 1, v30);
  }
  else
  {
    uint64_t v31 = sub_240A028A8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v20, 1, 1, v31);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
    uint64_t v39 = 0;
    uint64_t v40 = 0;
  }
  uint64_t v45 = v20;
  sub_240A02F88();
  v38[1] = v21;
  if (qword_26AFD4A20 != -1) {
    swift_once();
  }
  uint64_t v32 = (void *)qword_26AFD6468;
  sub_240A02828();
  v41(v46, a1, v10);
  id v33 = v32;
  char v34 = v47;
  sub_240A02ED8();
  uint64_t v35 = sub_240A02EE8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 0, 1, v35);
  sub_240A02F38();
  uint64_t v36 = (uint64_t)v45;
  sub_240A02610((uint64_t)v45, v44);
  sub_240A02FD8();
  return sub_240A025A0(v36, (unint64_t *)&qword_26AFD3F48, MEMORY[0x263F06EA8]);
}

uint64_t sub_240A02558(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A025A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_24098EA04(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_240A02610(uint64_t a1, uint64_t a2)
{
  sub_24098EA04(0, (unint64_t *)&qword_26AFD3F48, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

uint64_t sub_240A026D8()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_240A026E8()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_240A026F8()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_240A02708()
{
  return MEMORY[0x270EEE098]();
}

uint64_t sub_240A02718()
{
  return MEMORY[0x270EEE258]();
}

uint64_t sub_240A02728()
{
  return MEMORY[0x270EEE2F0]();
}

uint64_t sub_240A02738()
{
  return MEMORY[0x270EEE2F8]();
}

uint64_t sub_240A02748()
{
  return MEMORY[0x270EEE308]();
}

uint64_t sub_240A02758()
{
  return MEMORY[0x270EEE338]();
}

uint64_t sub_240A02768()
{
  return MEMORY[0x270EEE3D0]();
}

uint64_t sub_240A02778()
{
  return MEMORY[0x270EEE518]();
}

uint64_t sub_240A02788()
{
  return MEMORY[0x270EEE558]();
}

uint64_t sub_240A02798()
{
  return MEMORY[0x270EEE610]();
}

uint64_t sub_240A027A8()
{
  return MEMORY[0x270EEE7D8]();
}

uint64_t sub_240A027B8()
{
  return MEMORY[0x270EEE890]();
}

uint64_t sub_240A027C8()
{
  return MEMORY[0x270EEE8E8]();
}

uint64_t sub_240A027D8()
{
  return MEMORY[0x270EEE9A8]();
}

uint64_t sub_240A027E8()
{
  return MEMORY[0x270EEED40]();
}

uint64_t sub_240A027F8()
{
  return MEMORY[0x270EEEDD8]();
}

uint64_t sub_240A02808()
{
  return MEMORY[0x270EEEDF0]();
}

uint64_t sub_240A02818()
{
  return MEMORY[0x270EEEE40]();
}

uint64_t sub_240A02828()
{
  return MEMORY[0x270EEEEC0]();
}

uint64_t sub_240A02838()
{
  return MEMORY[0x270EEF070]();
}

uint64_t sub_240A02848()
{
  return MEMORY[0x270EEF080]();
}

uint64_t sub_240A02858()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_240A02868()
{
  return MEMORY[0x270F31B90]();
}

uint64_t sub_240A02878()
{
  return MEMORY[0x270EEFD28]();
}

uint64_t sub_240A02888()
{
  return MEMORY[0x270EEFE20]();
}

uint64_t sub_240A02898()
{
  return MEMORY[0x270EEFF00]();
}

uint64_t sub_240A028A8()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_240A028B8()
{
  return MEMORY[0x270EF02C8]();
}

uint64_t sub_240A028C8()
{
  return MEMORY[0x270EF0440]();
}

uint64_t sub_240A028D8()
{
  return MEMORY[0x270EF0548]();
}

uint64_t sub_240A028E8()
{
  return MEMORY[0x270EF0568]();
}

uint64_t sub_240A028F8()
{
  return MEMORY[0x270EF06E0]();
}

uint64_t sub_240A02908()
{
  return MEMORY[0x270EF0700]();
}

uint64_t sub_240A02918()
{
  return MEMORY[0x270EF07A0]();
}

uint64_t sub_240A02928()
{
  return MEMORY[0x270EF07E0]();
}

uint64_t sub_240A02938()
{
  return MEMORY[0x270EF0998]();
}

uint64_t sub_240A02948()
{
  return MEMORY[0x270EF0BA8]();
}

uint64_t sub_240A02958()
{
  return MEMORY[0x270EF0BB8]();
}

uint64_t _s16HearingAppPlugin25AudiogramAllDataViewModelC012startInitialD13PublisherTime33_BC65D8BC09683B795C348539971D0E1CLL10Foundation4DateVvpfi_0()
{
  return MEMORY[0x270EF0C30]();
}

uint64_t sub_240A02978()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_240A02988()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_240A02998()
{
  return MEMORY[0x270EF0C88]();
}

uint64_t sub_240A029A8()
{
  return MEMORY[0x270EF0CB8]();
}

uint64_t sub_240A029B8()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_240A029C8()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_240A029D8()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t sub_240A029E8()
{
  return MEMORY[0x270EF10C8]();
}

uint64_t sub_240A029F8()
{
  return MEMORY[0x270EF10D8]();
}

uint64_t sub_240A02A08()
{
  return MEMORY[0x270EF1248]();
}

uint64_t sub_240A02A18()
{
  return MEMORY[0x270F34F00]();
}

uint64_t sub_240A02A28()
{
  return MEMORY[0x270EF1368]();
}

uint64_t sub_240A02A38()
{
  return MEMORY[0x270EF1388]();
}

uint64_t sub_240A02A48()
{
  return MEMORY[0x270EF13D8]();
}

uint64_t sub_240A02A58()
{
  return MEMORY[0x270EF1428]();
}

uint64_t sub_240A02A68()
{
  return MEMORY[0x270EF1430]();
}

uint64_t sub_240A02A78()
{
  return MEMORY[0x270EF1440]();
}

uint64_t sub_240A02A88()
{
  return MEMORY[0x270EF1608]();
}

uint64_t sub_240A02A98()
{
  return MEMORY[0x270FA1140]();
}

uint64_t sub_240A02AA8()
{
  return MEMORY[0x270F39448]();
}

uint64_t sub_240A02AB8()
{
  return MEMORY[0x270F39450]();
}

uint64_t sub_240A02AC8()
{
  return MEMORY[0x270F39458]();
}

uint64_t sub_240A02AD8()
{
  return MEMORY[0x270F39460]();
}

uint64_t sub_240A02AE8()
{
  return MEMORY[0x270F39468]();
}

uint64_t sub_240A02AF8()
{
  return MEMORY[0x270F36178]();
}

uint64_t sub_240A02B08()
{
  return MEMORY[0x270F362C0]();
}

uint64_t sub_240A02B18()
{
  return MEMORY[0x270F36320]();
}

uint64_t sub_240A02B28()
{
  return MEMORY[0x270F36328]();
}

uint64_t sub_240A02B38()
{
  return MEMORY[0x270F36330]();
}

uint64_t sub_240A02B48()
{
  return MEMORY[0x270F36338]();
}

uint64_t sub_240A02B58()
{
  return MEMORY[0x270F36340]();
}

uint64_t sub_240A02B68()
{
  return MEMORY[0x270F32680]();
}

uint64_t sub_240A02B78()
{
  return MEMORY[0x270F32688]();
}

uint64_t sub_240A02B88()
{
  return MEMORY[0x270F32690]();
}

uint64_t sub_240A02B98()
{
  return MEMORY[0x270F363B8]();
}

uint64_t sub_240A02BA8()
{
  return MEMORY[0x270F363D8]();
}

uint64_t sub_240A02BB8()
{
  return MEMORY[0x270F363E8]();
}

uint64_t sub_240A02BC8()
{
  return MEMORY[0x270F363F8]();
}

uint64_t sub_240A02BD8()
{
  return MEMORY[0x270F36420]();
}

uint64_t sub_240A02BE8()
{
  return MEMORY[0x270F364C8]();
}

uint64_t sub_240A02BF8()
{
  return MEMORY[0x270F364D8]();
}

uint64_t sub_240A02C08()
{
  return MEMORY[0x270F364F0]();
}

uint64_t sub_240A02C18()
{
  return MEMORY[0x270F36500]();
}

uint64_t sub_240A02C28()
{
  return MEMORY[0x270F36578]();
}

uint64_t sub_240A02C38()
{
  return MEMORY[0x270F36590]();
}

uint64_t sub_240A02C48()
{
  return MEMORY[0x270F365A0]();
}

uint64_t sub_240A02C58()
{
  return MEMORY[0x270F365D8]();
}

uint64_t sub_240A02C68()
{
  return MEMORY[0x270F365F8]();
}

uint64_t sub_240A02C78()
{
  return MEMORY[0x270F36608]();
}

uint64_t sub_240A02C88()
{
  return MEMORY[0x270F36618]();
}

uint64_t sub_240A02C98()
{
  return MEMORY[0x270F36630]();
}

uint64_t sub_240A02CA8()
{
  return MEMORY[0x270F36660]();
}

uint64_t sub_240A02CB8()
{
  return MEMORY[0x270F366E0]();
}

uint64_t sub_240A02CC8()
{
  return MEMORY[0x270F366F0]();
}

uint64_t sub_240A02CD8()
{
  return MEMORY[0x270F366F8]();
}

uint64_t sub_240A02CE8()
{
  return MEMORY[0x270F36778]();
}

uint64_t sub_240A02CF8()
{
  return MEMORY[0x270F36820]();
}

uint64_t sub_240A02D08()
{
  return MEMORY[0x270F368C8]();
}

uint64_t sub_240A02D18()
{
  return MEMORY[0x270F36978]();
}

uint64_t sub_240A02D28()
{
  return MEMORY[0x270F36980]();
}

uint64_t sub_240A02D38()
{
  return MEMORY[0x270F36D60]();
}

uint64_t sub_240A02D48()
{
  return MEMORY[0x270F36D70]();
}

uint64_t sub_240A02D58()
{
  return MEMORY[0x270F36DD8]();
}

uint64_t sub_240A02D68()
{
  return MEMORY[0x270F36DE8]();
}

uint64_t sub_240A02D78()
{
  return MEMORY[0x270F30F10]();
}

uint64_t sub_240A02D88()
{
  return MEMORY[0x270F30F18]();
}

uint64_t sub_240A02D98()
{
  return MEMORY[0x270F30F28]();
}

uint64_t sub_240A02DA8()
{
  return MEMORY[0x270F30F30]();
}

uint64_t sub_240A02DB8()
{
  return MEMORY[0x270F30F60]();
}

uint64_t sub_240A02DC8()
{
  return MEMORY[0x270F30F78]();
}

uint64_t sub_240A02DD8()
{
  return MEMORY[0x270F30F80]();
}

uint64_t sub_240A02DE8()
{
  return MEMORY[0x270F30F88]();
}

uint64_t sub_240A02DF8()
{
  return MEMORY[0x270F30F90]();
}

uint64_t sub_240A02E08()
{
  return MEMORY[0x270F30F98]();
}

uint64_t sub_240A02E18()
{
  return MEMORY[0x270F30FA0]();
}

uint64_t sub_240A02E28()
{
  return MEMORY[0x270F30FA8]();
}

uint64_t sub_240A02E38()
{
  return MEMORY[0x270F30FB8]();
}

uint64_t sub_240A02E48()
{
  return MEMORY[0x270F31D48]();
}

uint64_t sub_240A02E58()
{
  return MEMORY[0x270F31DE0]();
}

uint64_t sub_240A02E68()
{
  return MEMORY[0x270F31DE8]();
}

uint64_t sub_240A02E78()
{
  return MEMORY[0x270F31DF0]();
}

uint64_t sub_240A02E88()
{
  return MEMORY[0x270F31E40]();
}

uint64_t sub_240A02E98()
{
  return MEMORY[0x270F31E50]();
}

uint64_t sub_240A02EA8()
{
  return MEMORY[0x270F31E88]();
}

uint64_t sub_240A02EB8()
{
  return MEMORY[0x270F31E90]();
}

uint64_t sub_240A02EC8()
{
  return MEMORY[0x270F31E98]();
}

uint64_t sub_240A02ED8()
{
  return MEMORY[0x270F31EB0]();
}

uint64_t sub_240A02EE8()
{
  return MEMORY[0x270F31EB8]();
}

uint64_t sub_240A02EF8()
{
  return MEMORY[0x270F31FD0]();
}

uint64_t sub_240A02F08()
{
  return MEMORY[0x270F31FD8]();
}

uint64_t sub_240A02F18()
{
  return MEMORY[0x270F326A8]();
}

uint64_t sub_240A02F28()
{
  return MEMORY[0x270F32008]();
}

uint64_t sub_240A02F38()
{
  return MEMORY[0x270F32018]();
}

uint64_t sub_240A02F48()
{
  return MEMORY[0x270F32020]();
}

uint64_t sub_240A02F58()
{
  return MEMORY[0x270F32028]();
}

uint64_t sub_240A02F68()
{
  return MEMORY[0x270F32038]();
}

uint64_t sub_240A02F78()
{
  return MEMORY[0x270F32058]();
}

uint64_t sub_240A02F88()
{
  return MEMORY[0x270F32068]();
}

uint64_t sub_240A02F98()
{
  return MEMORY[0x270F32090]();
}

uint64_t sub_240A02FA8()
{
  return MEMORY[0x270F32098]();
}

uint64_t sub_240A02FB8()
{
  return MEMORY[0x270F320A0]();
}

uint64_t sub_240A02FC8()
{
  return MEMORY[0x270F32190]();
}

uint64_t sub_240A02FD8()
{
  return MEMORY[0x270F32258]();
}

uint64_t sub_240A02FE8()
{
  return MEMORY[0x270F32268]();
}

uint64_t sub_240A02FF8()
{
  return MEMORY[0x270F32270]();
}

uint64_t sub_240A03008()
{
  return MEMORY[0x270F32288]();
}

uint64_t sub_240A03018()
{
  return MEMORY[0x270F32308]();
}

uint64_t sub_240A03028()
{
  return MEMORY[0x270F32330]();
}

uint64_t sub_240A03038()
{
  return MEMORY[0x270F32468]();
}

uint64_t sub_240A03048()
{
  return MEMORY[0x270F32478]();
}

uint64_t sub_240A03058()
{
  return MEMORY[0x270F324B8]();
}

uint64_t sub_240A03068()
{
  return MEMORY[0x270F324C0]();
}

uint64_t sub_240A03078()
{
  return MEMORY[0x270F324E8]();
}

uint64_t sub_240A03088()
{
  return MEMORY[0x270F327C0]();
}

uint64_t sub_240A03098()
{
  return MEMORY[0x270F32800]();
}

uint64_t sub_240A030A8()
{
  return MEMORY[0x270F328D8]();
}

uint64_t sub_240A030B8()
{
  return MEMORY[0x270F328E0]();
}

uint64_t sub_240A030C8()
{
  return MEMORY[0x270F328F0]();
}

uint64_t sub_240A030D8()
{
  return MEMORY[0x270F328F8]();
}

uint64_t sub_240A030E8()
{
  return MEMORY[0x270F32900]();
}

uint64_t sub_240A030F8()
{
  return MEMORY[0x270F32910]();
}

uint64_t sub_240A03108()
{
  return MEMORY[0x270F32918]();
}

uint64_t sub_240A03118()
{
  return MEMORY[0x270F32920]();
}

uint64_t sub_240A03128()
{
  return MEMORY[0x270F32928]();
}

uint64_t sub_240A03138()
{
  return MEMORY[0x270F32930]();
}

uint64_t sub_240A03148()
{
  return MEMORY[0x270F32938]();
}

uint64_t sub_240A03158()
{
  return MEMORY[0x270F32940]();
}

uint64_t sub_240A03168()
{
  return MEMORY[0x270F32948]();
}

uint64_t sub_240A03178()
{
  return MEMORY[0x270F32950]();
}

uint64_t sub_240A03188()
{
  return MEMORY[0x270F32958]();
}

uint64_t sub_240A03198()
{
  return MEMORY[0x270F32968]();
}

uint64_t sub_240A031A8()
{
  return MEMORY[0x270F329F0]();
}

uint64_t sub_240A031B8()
{
  return MEMORY[0x270F329F8]();
}

uint64_t sub_240A031C8()
{
  return MEMORY[0x270F32A08]();
}

uint64_t sub_240A031D8()
{
  return MEMORY[0x270F32A18]();
}

uint64_t sub_240A031E8()
{
  return MEMORY[0x270F32A20]();
}

uint64_t sub_240A031F8()
{
  return MEMORY[0x270F32A30]();
}

uint64_t sub_240A03208()
{
  return MEMORY[0x270F32A38]();
}

uint64_t sub_240A03218()
{
  return MEMORY[0x270F32A40]();
}

uint64_t sub_240A03228()
{
  return MEMORY[0x270F32A48]();
}

uint64_t sub_240A03238()
{
  return MEMORY[0x270F32A50]();
}

uint64_t sub_240A03248()
{
  return MEMORY[0x270F32A58]();
}

uint64_t sub_240A03258()
{
  return MEMORY[0x270F32A60]();
}

uint64_t sub_240A03268()
{
  return MEMORY[0x270F32A68]();
}

uint64_t sub_240A03278()
{
  return MEMORY[0x270F32A78]();
}

uint64_t sub_240A03288()
{
  return MEMORY[0x270F32A80]();
}

uint64_t sub_240A03298()
{
  return MEMORY[0x270F32A98]();
}

uint64_t sub_240A032A8()
{
  return MEMORY[0x270F32AB8]();
}

uint64_t sub_240A032B8()
{
  return MEMORY[0x270F32AC0]();
}

uint64_t sub_240A032C8()
{
  return MEMORY[0x270F32BC8]();
}

uint64_t sub_240A032D8()
{
  return MEMORY[0x270F32BE0]();
}

uint64_t sub_240A032E8()
{
  return MEMORY[0x270F32BE8]();
}

uint64_t sub_240A032F8()
{
  return MEMORY[0x270F32C40]();
}

uint64_t sub_240A03308()
{
  return MEMORY[0x270F32C48]();
}

uint64_t sub_240A03318()
{
  return MEMORY[0x270F32C70]();
}

uint64_t sub_240A03328()
{
  return MEMORY[0x270F32C78]();
}

uint64_t sub_240A03338()
{
  return MEMORY[0x270F32C80]();
}

uint64_t sub_240A03358()
{
  return MEMORY[0x270F32D80]();
}

uint64_t sub_240A03368()
{
  return MEMORY[0x270F32EA0]();
}

uint64_t sub_240A03378()
{
  return MEMORY[0x270F32EA8]();
}

uint64_t sub_240A03388()
{
  return MEMORY[0x270F32EB0]();
}

uint64_t sub_240A03398()
{
  return MEMORY[0x270F32ED0]();
}

uint64_t sub_240A033A8()
{
  return MEMORY[0x270F32F70]();
}

uint64_t sub_240A033B8()
{
  return MEMORY[0x270F32F78]();
}

uint64_t sub_240A033C8()
{
  return MEMORY[0x270F32FD8]();
}

uint64_t sub_240A033D8()
{
  return MEMORY[0x270F33088]();
}

uint64_t sub_240A033E8()
{
  return MEMORY[0x270F330A8]();
}

uint64_t sub_240A033F8()
{
  return MEMORY[0x270F33118]();
}

uint64_t sub_240A03408()
{
  return MEMORY[0x270F33130]();
}

uint64_t sub_240A03418()
{
  return MEMORY[0x270F33140]();
}

uint64_t sub_240A03428()
{
  return MEMORY[0x270F33188]();
}

uint64_t sub_240A03438()
{
  return MEMORY[0x270F331A8]();
}

uint64_t sub_240A03448()
{
  return MEMORY[0x270F331B0]();
}

uint64_t sub_240A03458()
{
  return MEMORY[0x270F331D8]();
}

uint64_t sub_240A03468()
{
  return MEMORY[0x270F331E0]();
}

uint64_t sub_240A03478()
{
  return MEMORY[0x270F331E8]();
}

uint64_t sub_240A03488()
{
  return MEMORY[0x270F331F0]();
}

uint64_t sub_240A03498()
{
  return MEMORY[0x270F331F8]();
}

uint64_t sub_240A034A8()
{
  return MEMORY[0x270F33218]();
}

uint64_t sub_240A034B8()
{
  return MEMORY[0x270F33220]();
}

uint64_t sub_240A034C8()
{
  return MEMORY[0x270F33228]();
}

uint64_t sub_240A034D8()
{
  return MEMORY[0x270F33230]();
}

uint64_t sub_240A034E8()
{
  return MEMORY[0x270F33238]();
}

uint64_t sub_240A034F8()
{
  return MEMORY[0x270F33250]();
}

uint64_t sub_240A03508()
{
  return MEMORY[0x270F332A0]();
}

uint64_t sub_240A03518()
{
  return MEMORY[0x270F332B0]();
}

uint64_t sub_240A03528()
{
  return MEMORY[0x270F332B8]();
}

uint64_t sub_240A03538()
{
  return MEMORY[0x270F332D8]();
}

uint64_t sub_240A03548()
{
  return MEMORY[0x270F332F0]();
}

uint64_t sub_240A03558()
{
  return MEMORY[0x270F332F8]();
}

uint64_t sub_240A03568()
{
  return MEMORY[0x270F33310]();
}

uint64_t sub_240A03578()
{
  return MEMORY[0x270F33320]();
}

uint64_t _s16HearingAppPlugin23PDFHStackWithEqualWidthV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0()
{
  return MEMORY[0x270F33328]();
}

uint64_t sub_240A03598()
{
  return MEMORY[0x270F33330]();
}

uint64_t sub_240A035A8()
{
  return MEMORY[0x270F33340]();
}

uint64_t sub_240A035B8()
{
  return MEMORY[0x270F333D0]();
}

uint64_t sub_240A035C8()
{
  return MEMORY[0x270F333D8]();
}

uint64_t sub_240A035D8()
{
  return MEMORY[0x270F333E0]();
}

uint64_t sub_240A03608()
{
  return MEMORY[0x270F33480]();
}

uint64_t sub_240A03618()
{
  return MEMORY[0x270F33518]();
}

uint64_t sub_240A03628()
{
  return MEMORY[0x270F33530]();
}

uint64_t sub_240A03638()
{
  return MEMORY[0x270F33538]();
}

uint64_t sub_240A03648()
{
  return MEMORY[0x270F336F0]();
}

uint64_t sub_240A03658()
{
  return MEMORY[0x270F33700]();
}

uint64_t sub_240A03668()
{
  return MEMORY[0x270F33708]();
}

uint64_t sub_240A03678()
{
  return MEMORY[0x270F33710]();
}

uint64_t sub_240A03688()
{
  return MEMORY[0x270F33718]();
}

uint64_t sub_240A03698()
{
  return MEMORY[0x270F33748]();
}

uint64_t sub_240A036A8()
{
  return MEMORY[0x270F337C0]();
}

uint64_t sub_240A036B8()
{
  return MEMORY[0x270F337F8]();
}

uint64_t sub_240A036C8()
{
  return MEMORY[0x270F33800]();
}

uint64_t sub_240A036D8()
{
  return MEMORY[0x270F33808]();
}

uint64_t sub_240A036E8()
{
  return MEMORY[0x270F33810]();
}

uint64_t sub_240A036F8()
{
  return MEMORY[0x270F338F8]();
}

uint64_t sub_240A03708()
{
  return MEMORY[0x270F33900]();
}

uint64_t sub_240A03718()
{
  return MEMORY[0x270F339A8]();
}

uint64_t sub_240A03728()
{
  return MEMORY[0x270F339C0]();
}

uint64_t sub_240A03738()
{
  return MEMORY[0x270F339D0]();
}

uint64_t sub_240A03748()
{
  return MEMORY[0x270F33A00]();
}

uint64_t sub_240A03758()
{
  return MEMORY[0x270F33A08]();
}

uint64_t sub_240A03768()
{
  return MEMORY[0x270F33A68]();
}

uint64_t sub_240A03778()
{
  return MEMORY[0x270F33A70]();
}

uint64_t sub_240A03788()
{
  return MEMORY[0x270F33A78]();
}

uint64_t sub_240A03798()
{
  return MEMORY[0x270F33A80]();
}

uint64_t sub_240A037A8()
{
  return MEMORY[0x270F33AE0]();
}

uint64_t sub_240A037B8()
{
  return MEMORY[0x270F33AE8]();
}

uint64_t sub_240A037C8()
{
  return MEMORY[0x270F33B00]();
}

uint64_t sub_240A037D8()
{
  return MEMORY[0x270F33BB0]();
}

uint64_t sub_240A037E8()
{
  return MEMORY[0x270F33BB8]();
}

uint64_t sub_240A037F8()
{
  return MEMORY[0x270F33BC0]();
}

uint64_t sub_240A03808()
{
  return MEMORY[0x270F33BC8]();
}

uint64_t sub_240A03818()
{
  return MEMORY[0x270F33C50]();
}

uint64_t sub_240A03828()
{
  return MEMORY[0x270F33C68]();
}

uint64_t sub_240A03838()
{
  return MEMORY[0x270F33CA8]();
}

uint64_t sub_240A03848()
{
  return MEMORY[0x270F33CB8]();
}

uint64_t sub_240A03858()
{
  return MEMORY[0x270F33CC0]();
}

uint64_t sub_240A03868()
{
  return MEMORY[0x270F33CC8]();
}

uint64_t sub_240A03878()
{
  return MEMORY[0x270F33CD0]();
}

uint64_t sub_240A03888()
{
  return MEMORY[0x270F33CD8]();
}

uint64_t sub_240A03898()
{
  return MEMORY[0x270F33D08]();
}

uint64_t sub_240A038A8()
{
  return MEMORY[0x270F33D10]();
}

uint64_t sub_240A038B8()
{
  return MEMORY[0x270F33D18]();
}

uint64_t sub_240A038C8()
{
  return MEMORY[0x270F33D60]();
}

uint64_t sub_240A038D8()
{
  return MEMORY[0x270F33D78]();
}

uint64_t sub_240A038E8()
{
  return MEMORY[0x270F33D80]();
}

uint64_t sub_240A038F8()
{
  return MEMORY[0x270F33D90]();
}

uint64_t sub_240A03908()
{
  return MEMORY[0x270F33DB8]();
}

uint64_t _s18HealthExperienceUI27DataTypeDetailConfigurationV16HearingAppPluginE20InlineChartComponentV10identifierSSvg_0()
{
  return MEMORY[0x270F33DC8]();
}

uint64_t sub_240A03928()
{
  return MEMORY[0x270F33DE8]();
}

uint64_t sub_240A03938()
{
  return MEMORY[0x270F33DF0]();
}

uint64_t sub_240A03948()
{
  return MEMORY[0x270F33E68]();
}

uint64_t sub_240A03958()
{
  return MEMORY[0x270F33E98]();
}

uint64_t sub_240A03968()
{
  return MEMORY[0x270F33EA0]();
}

uint64_t sub_240A03978()
{
  return MEMORY[0x270F33EE0]();
}

uint64_t sub_240A03988()
{
  return MEMORY[0x270F33EF8]();
}

uint64_t sub_240A03998()
{
  return MEMORY[0x270F33F00]();
}

uint64_t sub_240A039A8()
{
  return MEMORY[0x270F33F08]();
}

uint64_t sub_240A039B8()
{
  return MEMORY[0x270F33F38]();
}

uint64_t sub_240A039C8()
{
  return MEMORY[0x270F33F48]();
}

uint64_t sub_240A039D8()
{
  return MEMORY[0x270F33F78]();
}

uint64_t sub_240A039E8()
{
  return MEMORY[0x270F34010]();
}

uint64_t sub_240A03A08()
{
  return MEMORY[0x270F34038]();
}

uint64_t sub_240A03A18()
{
  return MEMORY[0x270F34040]();
}

uint64_t sub_240A03A28()
{
  return MEMORY[0x270F340A0]();
}

uint64_t sub_240A03A38()
{
  return MEMORY[0x270F340A8]();
}

uint64_t sub_240A03A48()
{
  return MEMORY[0x270F340B0]();
}

uint64_t sub_240A03A58()
{
  return MEMORY[0x270F34108]();
}

uint64_t sub_240A03A68()
{
  return MEMORY[0x270F34110]();
}

uint64_t sub_240A03A78()
{
  return MEMORY[0x270F34118]();
}

uint64_t sub_240A03A88()
{
  return MEMORY[0x270F34140]();
}

uint64_t sub_240A03A98()
{
  return MEMORY[0x270F34148]();
}

uint64_t sub_240A03AA8()
{
  return MEMORY[0x270F34160]();
}

uint64_t sub_240A03AB8()
{
  return MEMORY[0x270F34168]();
}

uint64_t sub_240A03AC8()
{
  return MEMORY[0x270F34170]();
}

uint64_t sub_240A03AD8()
{
  return MEMORY[0x270F34178]();
}

uint64_t sub_240A03AE8()
{
  return MEMORY[0x270F34330]();
}

uint64_t sub_240A03AF8()
{
  return MEMORY[0x270F34340]();
}

uint64_t sub_240A03B08()
{
  return MEMORY[0x270F34350]();
}

uint64_t sub_240A03B18()
{
  return MEMORY[0x270F34358]();
}

uint64_t sub_240A03B28()
{
  return MEMORY[0x270F34368]();
}

uint64_t sub_240A03B38()
{
  return MEMORY[0x270F34448]();
}

uint64_t sub_240A03B48()
{
  return MEMORY[0x270F34450]();
}

uint64_t sub_240A03B58()
{
  return MEMORY[0x270F34470]();
}

uint64_t sub_240A03B68()
{
  return MEMORY[0x270F34488]();
}

uint64_t sub_240A03B78()
{
  return MEMORY[0x270F344A8]();
}

uint64_t sub_240A03B88()
{
  return MEMORY[0x270F344B0]();
}

uint64_t sub_240A03B98()
{
  return MEMORY[0x270F344B8]();
}

uint64_t sub_240A03BA8()
{
  return MEMORY[0x270F344F0]();
}

uint64_t sub_240A03BB8()
{
  return MEMORY[0x270F34500]();
}

uint64_t sub_240A03BC8()
{
  return MEMORY[0x270F34510]();
}

uint64_t sub_240A03BD8()
{
  return MEMORY[0x270F345E0]();
}

uint64_t sub_240A03BE8()
{
  return MEMORY[0x270F345E8]();
}

uint64_t sub_240A03BF8()
{
  return MEMORY[0x270F345F0]();
}

uint64_t sub_240A03C08()
{
  return MEMORY[0x270F34648]();
}

uint64_t sub_240A03C18()
{
  return MEMORY[0x270F34698]();
}

uint64_t sub_240A03C28()
{
  return MEMORY[0x270F346A0]();
}

uint64_t sub_240A03C38()
{
  return MEMORY[0x270F346A8]();
}

uint64_t sub_240A03C48()
{
  return MEMORY[0x270F346D8]();
}

uint64_t sub_240A03C58()
{
  return MEMORY[0x270F346E0]();
}

uint64_t sub_240A03C68()
{
  return MEMORY[0x270F34758]();
}

uint64_t sub_240A03C78()
{
  return MEMORY[0x270F34760]();
}

uint64_t sub_240A03C88()
{
  return MEMORY[0x270F34778]();
}

uint64_t sub_240A03CE8()
{
  return MEMORY[0x270F34868]();
}

uint64_t sub_240A03D18()
{
  return MEMORY[0x270F34880]();
}

uint64_t sub_240A03D28()
{
  return MEMORY[0x270F34908]();
}

uint64_t sub_240A03D38()
{
  return MEMORY[0x270F34910]();
}

uint64_t sub_240A03D48()
{
  return MEMORY[0x270F34958]();
}

uint64_t sub_240A03D58()
{
  return MEMORY[0x270F34960]();
}

uint64_t sub_240A03D68()
{
  return MEMORY[0x270F34970]();
}

uint64_t sub_240A03D78()
{
  return MEMORY[0x270F34998]();
}

uint64_t sub_240A03D88()
{
  return MEMORY[0x270F30ED0]();
}

uint64_t sub_240A03D98()
{
  return MEMORY[0x270F349A8]();
}

uint64_t sub_240A03DA8()
{
  return MEMORY[0x270F349C0]();
}

uint64_t sub_240A03DB8()
{
  return MEMORY[0x270F349D8]();
}

uint64_t sub_240A03DC8()
{
  return MEMORY[0x270F349E0]();
}

uint64_t sub_240A03DD8()
{
  return MEMORY[0x270F34A50]();
}

uint64_t sub_240A03DE8()
{
  return MEMORY[0x270F34A58]();
}

uint64_t sub_240A03DF8()
{
  return MEMORY[0x270F34A68]();
}

uint64_t sub_240A03E08()
{
  return MEMORY[0x270F34B60]();
}

uint64_t sub_240A03E18()
{
  return MEMORY[0x270F34B68]();
}

uint64_t sub_240A03E28()
{
  return MEMORY[0x270F34B80]();
}

uint64_t sub_240A03E38()
{
  return MEMORY[0x270F34B88]();
}

uint64_t sub_240A03E58()
{
  return MEMORY[0x270F34BF8]();
}

uint64_t sub_240A03E68()
{
  return MEMORY[0x270F34C70]();
}

uint64_t sub_240A03E78()
{
  return MEMORY[0x270F34C78]();
}

uint64_t sub_240A03E88()
{
  return MEMORY[0x270F34C88]();
}

uint64_t sub_240A03E98()
{
  return MEMORY[0x270F34C90]();
}

uint64_t sub_240A03EA8()
{
  return MEMORY[0x270F34C98]();
}

uint64_t sub_240A03EB8()
{
  return MEMORY[0x270F34CA0]();
}

uint64_t sub_240A03EC8()
{
  return MEMORY[0x270F34CB8]();
}

uint64_t sub_240A03ED8()
{
  return MEMORY[0x270F34CC0]();
}

uint64_t sub_240A03EE8()
{
  return MEMORY[0x270F34CC8]();
}

uint64_t sub_240A03EF8()
{
  return MEMORY[0x270F34F60]();
}

uint64_t sub_240A03F08()
{
  return MEMORY[0x270F34F78]();
}

uint64_t sub_240A03F18()
{
  return MEMORY[0x270F34F88]();
}

uint64_t sub_240A03F28()
{
  return MEMORY[0x270F34F90]();
}

uint64_t sub_240A03F38()
{
  return MEMORY[0x270F34F98]();
}

uint64_t sub_240A03F48()
{
  return MEMORY[0x270F34FA0]();
}

uint64_t sub_240A03F58()
{
  return MEMORY[0x270F34FB0]();
}

uint64_t sub_240A03F68()
{
  return MEMORY[0x270F35028]();
}

uint64_t sub_240A03F78()
{
  return MEMORY[0x270F30ED8]();
}

uint64_t sub_240A03F88()
{
  return MEMORY[0x270F30EF0]();
}

uint64_t sub_240A03F98()
{
  return MEMORY[0x270F36E38]();
}

uint64_t sub_240A03FA8()
{
  return MEMORY[0x270F36E40]();
}

uint64_t sub_240A03FB8()
{
  return MEMORY[0x270F36E70]();
}

uint64_t sub_240A03FC8()
{
  return MEMORY[0x270F36E78]();
}

uint64_t sub_240A03FD8()
{
  return MEMORY[0x270F36E98]();
}

uint64_t sub_240A03FE8()
{
  return MEMORY[0x270F36EA0]();
}

uint64_t sub_240A03FF8()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_240A04008()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_240A04018()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_240A04028()
{
  return MEMORY[0x270F81960]();
}

uint64_t sub_240A04038()
{
  return MEMORY[0x270F81978]();
}

uint64_t sub_240A04048()
{
  return MEMORY[0x270F81990]();
}

uint64_t sub_240A04058()
{
  return MEMORY[0x270F819A8]();
}

uint64_t sub_240A04068()
{
  return MEMORY[0x270F819B0]();
}

uint64_t sub_240A04078()
{
  return MEMORY[0x270F819D0]();
}

uint64_t sub_240A04088()
{
  return MEMORY[0x270F81D10]();
}

uint64_t sub_240A04098()
{
  return MEMORY[0x270F81D68]();
}

uint64_t sub_240A040A8()
{
  return MEMORY[0x270F81DC8]();
}

uint64_t sub_240A040B8()
{
  return MEMORY[0x270F81DF0]();
}

uint64_t sub_240A040C8()
{
  return MEMORY[0x270F81EA0]();
}

uint64_t sub_240A040D8()
{
  return MEMORY[0x270F81EB0]();
}

uint64_t sub_240A040E8()
{
  return MEMORY[0x270F81ED8]();
}

uint64_t sub_240A040F8()
{
  return MEMORY[0x270F81EE0]();
}

uint64_t sub_240A04108()
{
  return MEMORY[0x270F823A0]();
}

uint64_t sub_240A04118()
{
  return MEMORY[0x270EE2B40]();
}

uint64_t sub_240A04128()
{
  return MEMORY[0x270EE2B48]();
}

uint64_t sub_240A04138()
{
  return MEMORY[0x270EE2B58]();
}

uint64_t sub_240A04148()
{
  return MEMORY[0x270EE2B90]();
}

uint64_t sub_240A04158()
{
  return MEMORY[0x270EE2B98]();
}

uint64_t sub_240A04168()
{
  return MEMORY[0x270EE2BB8]();
}

uint64_t sub_240A04178()
{
  return MEMORY[0x270EE2C38]();
}

uint64_t sub_240A04188()
{
  return MEMORY[0x270EE2C58]();
}

uint64_t sub_240A04198()
{
  return MEMORY[0x270EE2C90]();
}

uint64_t sub_240A041A8()
{
  return MEMORY[0x270EE2C98]();
}

uint64_t sub_240A041B8()
{
  return MEMORY[0x270EE2CA0]();
}

uint64_t sub_240A041C8()
{
  return MEMORY[0x270EE2CA8]();
}

uint64_t sub_240A041D8()
{
  return MEMORY[0x270EE2CC8]();
}

uint64_t sub_240A041E8()
{
  return MEMORY[0x270EE2CD0]();
}

uint64_t sub_240A041F8()
{
  return MEMORY[0x270EE2CD8]();
}

uint64_t sub_240A04208()
{
  return MEMORY[0x270EE2CE8]();
}

uint64_t sub_240A04218()
{
  return MEMORY[0x270EE2D08]();
}

uint64_t sub_240A04228()
{
  return MEMORY[0x270EE2D20]();
}

uint64_t sub_240A04238()
{
  return MEMORY[0x270EE2D88]();
}

uint64_t sub_240A04248()
{
  return MEMORY[0x270EE2D90]();
}

uint64_t sub_240A04258()
{
  return MEMORY[0x270EE2D98]();
}

uint64_t sub_240A04268()
{
  return MEMORY[0x270EE2DB0]();
}

uint64_t sub_240A04278()
{
  return MEMORY[0x270EE2DB8]();
}

uint64_t sub_240A04288()
{
  return MEMORY[0x270EE2DC0]();
}

uint64_t sub_240A04298()
{
  return MEMORY[0x270EE2DD0]();
}

uint64_t sub_240A042A8()
{
  return MEMORY[0x270EE2DE0]();
}

uint64_t sub_240A042B8()
{
  return MEMORY[0x270EE2E50]();
}

uint64_t sub_240A042C8()
{
  return MEMORY[0x270EE2E58]();
}

uint64_t sub_240A042D8()
{
  return MEMORY[0x270EE2EC8]();
}

uint64_t sub_240A042E8()
{
  return MEMORY[0x270EE2ED0]();
}

uint64_t sub_240A042F8()
{
  return MEMORY[0x270EE2EE8]();
}

uint64_t sub_240A04308()
{
  return MEMORY[0x270EE2F48]();
}

uint64_t sub_240A04318()
{
  return MEMORY[0x270EE2F50]();
}

uint64_t sub_240A04328()
{
  return MEMORY[0x270EE2F60]();
}

uint64_t sub_240A04338()
{
  return MEMORY[0x270EE2F78]();
}

uint64_t sub_240A04348()
{
  return MEMORY[0x270EE2F88]();
}

uint64_t sub_240A04358()
{
  return MEMORY[0x270EE2F90]();
}

uint64_t sub_240A04368()
{
  return MEMORY[0x270EE2F98]();
}

uint64_t sub_240A04378()
{
  return MEMORY[0x270EE2FA8]();
}

uint64_t sub_240A04388()
{
  return MEMORY[0x270EE2FB8]();
}

uint64_t sub_240A04398()
{
  return MEMORY[0x270EE2FD8]();
}

uint64_t sub_240A043A8()
{
  return MEMORY[0x270EE2FF8]();
}

uint64_t sub_240A043B8()
{
  return MEMORY[0x270EE3008]();
}

uint64_t sub_240A043C8()
{
  return MEMORY[0x270EE3020]();
}

uint64_t sub_240A043D8()
{
  return MEMORY[0x270EE3028]();
}

uint64_t sub_240A043E8()
{
  return MEMORY[0x270EE3030]();
}

uint64_t sub_240A043F8()
{
  return MEMORY[0x270EE3038]();
}

uint64_t sub_240A04408()
{
  return MEMORY[0x270EE3040]();
}

uint64_t sub_240A04418()
{
  return MEMORY[0x270EE3048]();
}

uint64_t sub_240A04428()
{
  return MEMORY[0x270EE3050]();
}

uint64_t sub_240A04438()
{
  return MEMORY[0x270EE3058]();
}

uint64_t sub_240A04448()
{
  return MEMORY[0x270EE3880]();
}

uint64_t sub_240A04458()
{
  return MEMORY[0x270EE3900]();
}

uint64_t sub_240A04468()
{
  return MEMORY[0x270EE3908]();
}

uint64_t sub_240A04478()
{
  return MEMORY[0x270F32508]();
}

uint64_t sub_240A04488()
{
  return MEMORY[0x270EE3950]();
}

uint64_t sub_240A04498()
{
  return MEMORY[0x270EE3968]();
}

uint64_t sub_240A044A8()
{
  return MEMORY[0x270EE3988]();
}

uint64_t sub_240A044B8()
{
  return MEMORY[0x270EE39A8]();
}

uint64_t sub_240A044C8()
{
  return MEMORY[0x270EE39B0]();
}

uint64_t sub_240A044D8()
{
  return MEMORY[0x270EE39C8]();
}

uint64_t sub_240A044E8()
{
  return MEMORY[0x270EE3AC0]();
}

uint64_t sub_240A044F8()
{
  return MEMORY[0x270EE3AD8]();
}

uint64_t sub_240A04508()
{
  return MEMORY[0x270EE3B60]();
}

uint64_t sub_240A04518()
{
  return MEMORY[0x270EE3CA0]();
}

uint64_t sub_240A04528()
{
  return MEMORY[0x270EE3CA8]();
}

uint64_t sub_240A04538()
{
  return MEMORY[0x270EE3CB8]();
}

uint64_t sub_240A04548()
{
  return MEMORY[0x270EE3D38]();
}

uint64_t sub_240A04558()
{
  return MEMORY[0x270EE3D40]();
}

uint64_t sub_240A04568()
{
  return MEMORY[0x270EE3D50]();
}

uint64_t sub_240A04578()
{
  return MEMORY[0x270EE3D58]();
}

uint64_t sub_240A04588()
{
  return MEMORY[0x270EE3D98]();
}

uint64_t sub_240A04598()
{
  return MEMORY[0x270EE3DA0]();
}

uint64_t sub_240A045A8()
{
  return MEMORY[0x270EE3DA8]();
}

uint64_t sub_240A045B8()
{
  return MEMORY[0x270EE3DB0]();
}

uint64_t sub_240A045C8()
{
  return MEMORY[0x270EE3DD8]();
}

uint64_t sub_240A045D8()
{
  return MEMORY[0x270EE3DE0]();
}

uint64_t sub_240A045E8()
{
  return MEMORY[0x270EE3DF0]();
}

uint64_t sub_240A045F8()
{
  return MEMORY[0x270F36F00]();
}

uint64_t sub_240A04608()
{
  return MEMORY[0x270F32510]();
}

uint64_t sub_240A04618()
{
  return MEMORY[0x270F34CD8]();
}

uint64_t sub_240A04628()
{
  return MEMORY[0x270EE3E08]();
}

uint64_t sub_240A04638()
{
  return MEMORY[0x270EE3E18]();
}

uint64_t sub_240A04648()
{
  return MEMORY[0x270EE3E78]();
}

uint64_t sub_240A04658()
{
  return MEMORY[0x270EE3EA0]();
}

uint64_t sub_240A04668()
{
  return MEMORY[0x270EE3F18]();
}

uint64_t sub_240A04678()
{
  return MEMORY[0x270EE3F78]();
}

uint64_t sub_240A04688()
{
  return MEMORY[0x270EE3FB0]();
}

uint64_t sub_240A04698()
{
  return MEMORY[0x270EE3FE8]();
}

uint64_t sub_240A046A8()
{
  return MEMORY[0x270EE4008]();
}

uint64_t sub_240A046B8()
{
  return MEMORY[0x270EFECF8]();
}

uint64_t sub_240A046C8()
{
  return MEMORY[0x270EFEEC0]();
}

uint64_t sub_240A046D8()
{
  return MEMORY[0x270EFF128]();
}

uint64_t sub_240A046E8()
{
  return MEMORY[0x270EFF598]();
}

uint64_t sub_240A046F8()
{
  return MEMORY[0x270F00058]();
}

uint64_t sub_240A04708()
{
  return MEMORY[0x270F001A8]();
}

uint64_t sub_240A04718()
{
  return MEMORY[0x270F00908]();
}

uint64_t sub_240A04728()
{
  return MEMORY[0x270F00910]();
}

uint64_t sub_240A04738()
{
  return MEMORY[0x270F00A50]();
}

uint64_t sub_240A04748()
{
  return MEMORY[0x270F00A58]();
}

uint64_t sub_240A04758()
{
  return MEMORY[0x270F00B78]();
}

uint64_t sub_240A04768()
{
  return MEMORY[0x270F00B80]();
}

uint64_t sub_240A04778()
{
  return MEMORY[0x270F00C78]();
}

uint64_t sub_240A04788()
{
  return MEMORY[0x270F00C88]();
}

uint64_t sub_240A04798()
{
  return MEMORY[0x270F00E88]();
}

uint64_t sub_240A047A8()
{
  return MEMORY[0x270F00E98]();
}

uint64_t sub_240A047B8()
{
  return MEMORY[0x270F01270]();
}

uint64_t sub_240A047C8()
{
  return MEMORY[0x270F016A0]();
}

uint64_t sub_240A047D8()
{
  return MEMORY[0x270F016D0]();
}

uint64_t sub_240A047E8()
{
  return MEMORY[0x270F01BF8]();
}

uint64_t sub_240A047F8()
{
  return MEMORY[0x270F02798]();
}

uint64_t sub_240A04808()
{
  return MEMORY[0x270F027A8]();
}

uint64_t sub_240A04818()
{
  return MEMORY[0x270F02A60]();
}

uint64_t sub_240A04828()
{
  return MEMORY[0x270F02BA8]();
}

uint64_t sub_240A04838()
{
  return MEMORY[0x270F02BF8]();
}

uint64_t sub_240A04848()
{
  return MEMORY[0x270F02C10]();
}

uint64_t sub_240A04858()
{
  return MEMORY[0x270F02C40]();
}

uint64_t sub_240A04868()
{
  return MEMORY[0x270F03238]();
}

uint64_t sub_240A04878()
{
  return MEMORY[0x270F03250]();
}

uint64_t sub_240A04888()
{
  return MEMORY[0x270EE3070]();
}

uint64_t sub_240A04898()
{
  return MEMORY[0x270EE3080]();
}

uint64_t sub_240A048A8()
{
  return MEMORY[0x270EE3098]();
}

uint64_t sub_240A048B8()
{
  return MEMORY[0x270EE30B0]();
}

uint64_t sub_240A048C8()
{
  return MEMORY[0x270EE30D0]();
}

uint64_t sub_240A048D8()
{
  return MEMORY[0x270F03D30]();
}

uint64_t sub_240A048E8()
{
  return MEMORY[0x270F04378]();
}

uint64_t sub_240A048F8()
{
  return MEMORY[0x270F043A8]();
}

uint64_t sub_240A04908()
{
  return MEMORY[0x270F04410]();
}

uint64_t sub_240A04918()
{
  return MEMORY[0x270F04478]();
}

uint64_t sub_240A04928()
{
  return MEMORY[0x270F04498]();
}

uint64_t sub_240A04938()
{
  return MEMORY[0x270F04570]();
}

uint64_t sub_240A04948()
{
  return MEMORY[0x270F04630]();
}

uint64_t sub_240A04958()
{
  return MEMORY[0x270EE3108]();
}

uint64_t sub_240A04968()
{
  return MEMORY[0x270F04CC0]();
}

uint64_t sub_240A04978()
{
  return MEMORY[0x270F05078]();
}

uint64_t sub_240A04988()
{
  return MEMORY[0x270F05088]();
}

uint64_t sub_240A04998()
{
  return MEMORY[0x270F05098]();
}

uint64_t sub_240A049A8()
{
  return MEMORY[0x270F05368]();
}

uint64_t sub_240A049B8()
{
  return MEMORY[0x270FA09A8]();
}

uint64_t sub_240A049C8()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_240A049D8()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_240A049E8()
{
  return MEMORY[0x270FA0BA8]();
}

uint64_t sub_240A049F8()
{
  return MEMORY[0x270FA0BF0]();
}

uint64_t sub_240A04A08()
{
  return MEMORY[0x270F37E58]();
}

uint64_t sub_240A04A18()
{
  return MEMORY[0x270F37E70]();
}

uint64_t sub_240A04A28()
{
  return MEMORY[0x270F37E78]();
}

uint64_t sub_240A04A38()
{
  return MEMORY[0x270F37E80]();
}

uint64_t sub_240A04A48()
{
  return MEMORY[0x270F37E88]();
}

uint64_t sub_240A04A58()
{
  return MEMORY[0x270F37E90]();
}

uint64_t sub_240A04A68()
{
  return MEMORY[0x270F37E98]();
}

uint64_t sub_240A04A78()
{
  return MEMORY[0x270F37EA0]();
}

uint64_t sub_240A04A88()
{
  return MEMORY[0x270F37EA8]();
}

uint64_t sub_240A04A98()
{
  return MEMORY[0x270F37EB0]();
}

uint64_t sub_240A04AA8()
{
  return MEMORY[0x270F37F50]();
}

uint64_t sub_240A04AB8()
{
  return MEMORY[0x270F37F68]();
}

uint64_t sub_240A04AC8()
{
  return MEMORY[0x270F37F70]();
}

uint64_t sub_240A04AD8()
{
  return MEMORY[0x270F37F78]();
}

uint64_t sub_240A04AE8()
{
  return MEMORY[0x270F39470]();
}

uint64_t sub_240A04AF8()
{
  return MEMORY[0x270F37FB8]();
}

uint64_t sub_240A04B08()
{
  return MEMORY[0x270F38008]();
}

uint64_t sub_240A04B18()
{
  return MEMORY[0x270F38010]();
}

uint64_t sub_240A04B28()
{
  return MEMORY[0x270F38028]();
}

uint64_t sub_240A04B38()
{
  return MEMORY[0x270F38030]();
}

uint64_t sub_240A04B48()
{
  return MEMORY[0x270F38038]();
}

uint64_t sub_240A04B58()
{
  return MEMORY[0x270F38040]();
}

uint64_t sub_240A04B68()
{
  return MEMORY[0x270EF3160]();
}

uint64_t sub_240A04B78()
{
  return MEMORY[0x270EF31F8]();
}

uint64_t sub_240A04B98()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_240A04BA8()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_240A04BB8()
{
  return MEMORY[0x270F9D1D0]();
}

uint64_t sub_240A04BC8()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_240A04BD8()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_240A04BE8()
{
  return MEMORY[0x270F9D498]();
}

uint64_t sub_240A04BF8()
{
  return MEMORY[0x270F9D550]();
}

uint64_t sub_240A04C08()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_240A04C18()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_240A04C28()
{
  return MEMORY[0x270EF19B8]();
}

uint64_t sub_240A04C38()
{
  return MEMORY[0x270EF19C8]();
}

uint64_t sub_240A04C48()
{
  return MEMORY[0x270EF19E0]();
}

uint64_t sub_240A04C58()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_240A04C68()
{
  return MEMORY[0x270EF1A50]();
}

uint64_t sub_240A04C78()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_240A04C88()
{
  return MEMORY[0x270F9D600]();
}

uint64_t sub_240A04C98()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_240A04CA8()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_240A04CB8()
{
  return MEMORY[0x270F9D7C0]();
}

uint64_t sub_240A04CC8()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_240A04CD8()
{
  return MEMORY[0x270F9DA80]();
}

uint64_t sub_240A04CE8()
{
  return MEMORY[0x270F9DB00]();
}

uint64_t sub_240A04CF8()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_240A04D08()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_240A04D18()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_240A04D28()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_240A04D38()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_240A04D48()
{
  return MEMORY[0x270F36F38]();
}

uint64_t sub_240A04D58()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_240A04D68()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_240A04D78()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_240A04D88()
{
  return MEMORY[0x270EF1BD8]();
}

uint64_t sub_240A04D98()
{
  return MEMORY[0x270EF1C18]();
}

uint64_t sub_240A04DA8()
{
  return MEMORY[0x270F9DD60]();
}

uint64_t sub_240A04DB8()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_240A04DC8()
{
  return MEMORY[0x270F37098]();
}

uint64_t sub_240A04DD8()
{
  return MEMORY[0x270F9DF80]();
}

uint64_t sub_240A04DE8()
{
  return MEMORY[0x270EF1CE0]();
}

uint64_t sub_240A04DF8()
{
  return MEMORY[0x270F9E330]();
}

uint64_t sub_240A04E08()
{
  return MEMORY[0x270EF1DB8]();
}

uint64_t sub_240A04E18()
{
  return MEMORY[0x270F35138]();
}

uint64_t sub_240A04E28()
{
  return MEMORY[0x270F35148]();
}

uint64_t sub_240A04E38()
{
  return MEMORY[0x270F35150]();
}

uint64_t sub_240A04E48()
{
  return MEMORY[0x270F35188]();
}

uint64_t sub_240A04E58()
{
  return MEMORY[0x270F35198]();
}

uint64_t sub_240A04E68()
{
  return MEMORY[0x270F351B0]();
}

uint64_t sub_240A04E78()
{
  return MEMORY[0x270F351C8]();
}

uint64_t sub_240A04E88()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t sub_240A04E98()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_240A04EA8()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_240A04EB8()
{
  return MEMORY[0x270FA2E70]();
}

uint64_t sub_240A04EC8()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_240A04ED8()
{
  return MEMORY[0x270EF33E8]();
}

uint64_t sub_240A04EE8()
{
  return MEMORY[0x270EF33F8]();
}

uint64_t sub_240A04EF8()
{
  return MEMORY[0x270F82488]();
}

uint64_t sub_240A04F08()
{
  return MEMORY[0x270F34D40]();
}

uint64_t sub_240A04F18()
{
  return MEMORY[0x270F82578]();
}

uint64_t sub_240A04F28()
{
  return MEMORY[0x270FA0CD0]();
}

uint64_t sub_240A04F38()
{
  return MEMORY[0x270FA0D70]();
}

uint64_t sub_240A04F48()
{
  return MEMORY[0x270FA0DA0]();
}

uint64_t sub_240A04F58()
{
  return MEMORY[0x270F38150]();
}

uint64_t sub_240A04F68()
{
  return MEMORY[0x270F30FC0]();
}

uint64_t sub_240A04F78()
{
  return MEMORY[0x270EF2010]();
}

uint64_t sub_240A04F88()
{
  return MEMORY[0x270EF2020]();
}

uint64_t sub_240A04F98()
{
  return MEMORY[0x270F82688]();
}

uint64_t sub_240A04FA8()
{
  return MEMORY[0x270F30FC8]();
}

uint64_t sub_240A04FB8()
{
  return MEMORY[0x270F30FD0]();
}

uint64_t sub_240A04FC8()
{
  return MEMORY[0x270F828E0]();
}

uint64_t sub_240A04FD8()
{
  return MEMORY[0x270F05438]();
}

uint64_t sub_240A04FE8()
{
  return MEMORY[0x270EF2170]();
}

uint64_t sub_240A04FF8()
{
  return MEMORY[0x270FA1170]();
}

uint64_t sub_240A05008()
{
  return MEMORY[0x270FA1180]();
}

uint64_t sub_240A05018()
{
  return MEMORY[0x270F82998]();
}

uint64_t sub_240A05028()
{
  return MEMORY[0x270F829B0]();
}

uint64_t sub_240A05038()
{
  return MEMORY[0x270F829B8]();
}

uint64_t sub_240A05048()
{
  return MEMORY[0x270F82A68]();
}

uint64_t sub_240A05058()
{
  return MEMORY[0x270F82A78]();
}

uint64_t sub_240A05068()
{
  return MEMORY[0x270F82AD0]();
}

uint64_t sub_240A05078()
{
  return MEMORY[0x270F82AE0]();
}

uint64_t sub_240A05088()
{
  return MEMORY[0x270F82B18]();
}

uint64_t sub_240A05098()
{
  return MEMORY[0x270F82B58]();
}

uint64_t sub_240A050A8()
{
  return MEMORY[0x270F82B88]();
}

uint64_t sub_240A050B8()
{
  return MEMORY[0x270EF2210]();
}

uint64_t sub_240A050C8()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_240A050D8()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_240A050E8()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_240A050F8()
{
  return MEMORY[0x270EF2478]();
}

uint64_t sub_240A05108()
{
  return MEMORY[0x270EF2560]();
}

uint64_t sub_240A05118()
{
  return MEMORY[0x270EF25E0]();
}

uint64_t sub_240A05128()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_240A05138()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_240A05148()
{
  return MEMORY[0x270F9E800]();
}

uint64_t sub_240A05158()
{
  return MEMORY[0x270F9E818]();
}

uint64_t sub_240A05168()
{
  return MEMORY[0x270F9E848]();
}

uint64_t sub_240A05178()
{
  return MEMORY[0x270F9E858]();
}

uint64_t sub_240A05188()
{
  return MEMORY[0x270F9E870]();
}

uint64_t sub_240A05198()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_240A051A8()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_240A051B8()
{
  return MEMORY[0x270F9E968]();
}

uint64_t sub_240A051C8()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_240A051D8()
{
  return MEMORY[0x270F9E978]();
}

uint64_t sub_240A051E8()
{
  return MEMORY[0x270F9E988]();
}

uint64_t sub_240A051F8()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_240A05208()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_240A05218()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_240A05228()
{
  return MEMORY[0x270F9EA48]();
}

uint64_t sub_240A05238()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_240A05248()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_240A05258()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_240A05268()
{
  return MEMORY[0x270F9EFF8]();
}

uint64_t sub_240A05278()
{
  return MEMORY[0x270F9F000]();
}

uint64_t sub_240A05288()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_240A05298()
{
  return MEMORY[0x270F9F090]();
}

uint64_t sub_240A052A8()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_240A052B8()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_240A052C8()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_240A052D8()
{
  return MEMORY[0x270F9F0B8]();
}

uint64_t sub_240A052E8()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_240A05308()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_240A05318()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_240A05328()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_240A05338()
{
  return MEMORY[0x270F9F4A8]();
}

uint64_t sub_240A05348()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_240A05358()
{
  return MEMORY[0x270F9F4F8]();
}

uint64_t sub_240A05368()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_240A05378()
{
  return MEMORY[0x270F9F918]();
}

uint64_t sub_240A05388()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_240A05398()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_240A053A8()
{
  return MEMORY[0x270EF2680]();
}

uint64_t sub_240A053B8()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_240A053C8()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_240A053D8()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_240A053E8()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_240A053F8()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_240A05408()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_240A05418()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_240A05428()
{
  return MEMORY[0x270F9FCF8]();
}

uint64_t sub_240A05438()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_240A05448()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_240A05478()
{
  return MEMORY[0x270FA0128]();
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x270EE4B88]();
}

void CFNotificationCenterRemoveEveryObserver(CFNotificationCenterRef center, const void *observer)
{
}

void CGContextAddPath(CGContextRef c, CGPathRef path)
{
}

void CGContextDrawPath(CGContextRef c, CGPathDrawingMode mode)
{
}

void CGContextRestoreGState(CGContextRef c)
{
}

void CGContextSaveGState(CGContextRef c)
{
}

void CGContextSetFillColorWithColor(CGContextRef c, CGColorRef color)
{
}

CGPathRef CGPathCreateWithRoundedRect(CGRect rect, CGFloat cornerWidth, CGFloat cornerHeight, const CGAffineTransform *transform)
{
  return (CGPathRef)MEMORY[0x270EE7060](transform, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, cornerWidth, cornerHeight);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  MEMORY[0x270EE71A8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  MEMORY[0x270EE71F8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  MEMORY[0x270EE7210]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  MEMORY[0x270EE7218]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

uint64_t HKCurrentLocaleCountryCodeIfUnknown()
{
  return MEMORY[0x270EF3678]();
}

uint64_t HKFormatValueAndUnit()
{
  return MEMORY[0x270F38208]();
}

uint64_t HKHearingLevelClassificationForSensitivity()
{
  return MEMORY[0x270EF3708]();
}

uint64_t HKIntegerFormatter()
{
  return MEMORY[0x270F38258]();
}

uint64_t HKLocalizedStringForHearingLevelClassification()
{
  return MEMORY[0x270EF3748]();
}

uint64_t HKLocalizedStringForUpperClampedValueAndUnit()
{
  return MEMORY[0x270EF3750]();
}

uint64_t HKNRDeviceCapabilityEnvironmentalDosimetry()
{
  return MEMORY[0x270F34EF0]();
}

uint64_t HKNumberFormatterWithDecimalPrecision()
{
  return MEMORY[0x270F38288]();
}

uint64_t HKUIJoinStringsForAutomationIdentifier()
{
  return MEMORY[0x270F38330]();
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x270EF2C08](aClass);
}

NSString *__cdecl NSStringFromRange(NSRange range)
{
  return (NSString *)MEMORY[0x270EF2C28](range.location, range.length);
}

void UIGraphicsPopContext(void)
{
}

void UIGraphicsPushContext(CGContextRef context)
{
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return MEMORY[0x270FA0170]();
}

void bzero(void *a1, size_t a2)
{
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x270FA0218]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x270FA0278]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getExistentialMetatypeMetadata()
{
  return MEMORY[0x270FA0350]();
}

uint64_t swift_getExistentialTypeMetadata()
{
  return MEMORY[0x270FA0358]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x270FA03C8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x270FA03F0]();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return MEMORY[0x270FA03F8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x270FA0420]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x270FA0430]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x270FA04C0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x270FA05D0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x270FA05F0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x270FA0648]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x270FA0650]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x270FA0658]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x270FA0678]();
}