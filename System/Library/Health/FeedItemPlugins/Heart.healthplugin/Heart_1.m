void sub_240ADD7F0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  int EnumCaseMultiPayload;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  id v78;
  id v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  id v85;
  id v86;
  char *v87;
  id v88;
  uint64_t v89;
  void *v90;
  void *v91;
  id v92;
  char *v93;
  char *v94;
  id v95;
  void *v96;
  id v97;
  id v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  void (*v122)(char *, uint64_t);
  uint64_t ObjectType;
  uint64_t v124[3];
  uint64_t v125;
  uint64_t v126;

  ObjectType = swift_getObjectType();
  v109 = sub_240BB3630();
  v108 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v109);
  v107 = (char *)&v103 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240ADF430(0, (unint64_t *)&qword_268CA1AC0, MEMORY[0x263F8F520]);
  MEMORY[0x270FA5388](v2 - 8);
  v110 = (char *)&v103 - v3;
  v4 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
  v5 = MEMORY[0x270FA5388](v4 - 8);
  v111 = (uint64_t)&v103 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x270FA5388](v5);
  v106 = (uint64_t)&v103 - v8;
  MEMORY[0x270FA5388](v7);
  v113 = (uint64_t)&v103 - v9;
  v10 = sub_240BB3B20();
  v11 = *(void *)(v10 - 8);
  v120 = v10;
  v121 = v11;
  v12 = MEMORY[0x270FA5388](v10);
  v112 = (char *)&v103 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  v119 = (char *)&v103 - v14;
  sub_240ADF430(0, &qword_268CA0290, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  v115 = v15;
  v16 = MEMORY[0x270FA5388](v15);
  v116 = (uint64_t)&v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  v114 = (uint64_t)&v103 - v18;
  v19 = sub_240BB4EC0();
  v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  v22 = (char *)&v103 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240ADF430(0, &qword_268CA02C0, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData);
  MEMORY[0x270FA5388](v23 - 8);
  v25 = (char *)&v103 - v24;
  v26 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData(0);
  v27 = *(void *)(v26 - 8);
  v28 = MEMORY[0x270FA5388](v26);
  v30 = (char *)&v103 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  v32 = (char *)&v103 - v31;
  v118 = v0;
  sub_240BB5250();
  sub_240ADF2D4(&qword_268CA02C8, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData);
  sub_240ADF2D4(&qword_268CA02D0, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData);
  sub_240BB4EB0();
  v33 = *(void (**)(char *, uint64_t))(v20 + 8);
  v117 = v19;
  v122 = v33;
  v33(v22, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) != 1)
  {
    sub_240ADF504((uint64_t)v25, (uint64_t)v32, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData);
    v41 = (uint64_t)v32;
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    v42 = sub_240BB5990();
    v43 = sub_240A395FC(v42, (uint64_t)qword_26AFDEC70);
    sub_240AE1B64((uint64_t)v32, (uint64_t)v30, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData);
    v105 = v43;
    v44 = sub_240BB5970();
    v45 = sub_240BB71A0();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = swift_slowAlloc();
      v103 = swift_slowAlloc();
      v124[0] = v103;
      *(_DWORD *)v46 = 136315394;
      v104 = v32;
      v47 = sub_240BB7C80();
      v126 = sub_240A38940(v47, v48, v124);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v46 + 12) = 2080;
      sub_240ADF484((uint64_t)v30, v114);
      v49 = sub_240BB6E10();
      v126 = sub_240A38940(v49, v50, v124);
      v41 = (uint64_t)v104;
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      sub_240AE263C((uint64_t)v30, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData);
      _os_log_impl(&dword_240A1B000, v44, v45, "[%s] Did select cell with tap action %s", (uint8_t *)v46, 0x16u);
      v51 = v103;
      swift_arrayDestroy();
      MEMORY[0x24560B930](v51, -1, -1);
      MEMORY[0x24560B930](v46, -1, -1);
    }
    else
    {
      sub_240AE263C((uint64_t)v30, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData);
    }

    v52 = v119;
    sub_240BB5250();
    v119 = (char *)sub_240BB4EA0();
    v53 = v117;
    v54 = v122;
    v122(v22, v117);
    sub_240BB5250();
    sub_240BB4E90();
    v54(v22, v53);
    sub_240A3466C(v124, v125);
    v118 = (id)sub_240BB4E10();
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v124);
    sub_240BB5250();
    sub_240BB36F0();
    v54(v22, v53);
    v55 = v116;
    sub_240ADF484(v41, v116);
    v56 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 48))(v55, 1, v56) == 1)
    {
      v57 = sub_240BB5970();
      v58 = sub_240BB7180();
      if (os_log_type_enabled(v57, v58))
      {
        v59 = (uint8_t *)swift_slowAlloc();
        v60 = swift_slowAlloc();
        v124[0] = v60;
        *(_DWORD *)v59 = 136315138;
        v61 = sub_240BB7C80();
        v126 = sub_240A38940(v61, v62, v124);
        sub_240BB75F0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240A1B000, v57, v58, "[%s] No tap action given (likely due to error on generation side, doing nothing", v59, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24560B930](v60, -1, -1);
        MEMORY[0x24560B930](v59, -1, -1);

        (*(void (**)(char *, uint64_t))(v121 + 8))(v52, v120);
        v63 = v41;
LABEL_29:
        sub_240AE263C(v63, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData);
        return;
      }

      (*(void (**)(char *, uint64_t))(v121 + 8))(v52, v120);
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v65 = v120;
      switch(EnumCaseMultiPayload)
      {
        case 1:
          v81 = v111;
          sub_240ADF504(v55, v111, (uint64_t (*)(void))type metadata accessor for CardioFitnessHealthChecklistSettingsState);
          v82 = v113;
          sub_240AE1B64(v81, v113, (uint64_t (*)(void))type metadata accessor for CardioFitnessHealthChecklistSettingsState);
          v83 = (uint64_t)v112;
          (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v112, v52, v65);
          v84 = objc_allocWithZone((Class)type metadata accessor for CardioFitnessHealthChecklistSettingsViewController(0));
          v85 = v118;
          v86 = sub_240AC20DC(v85, v82, v83, 0);
          v87 = v119;
          v88 = objc_msgSend(v119, sel_navigationController);
          v89 = v65;
          if (v88)
          {
            v90 = v88;
            objc_msgSend(v88, sel_pushViewController_animated_, v86, 1);
          }
          else
          {
          }
          sub_240AE263C(v81, (uint64_t (*)(void))type metadata accessor for CardioFitnessHealthChecklistSettingsState);
          goto LABEL_27;
        case 2:
          sub_240BB5250();
          sub_240BB4E90();
          v122(v22, v53);
          v89 = v65;
          sub_240A3466C(v124, v125);
          v91 = (void *)sub_240BB4E10();
          v92 = objc_allocWithZone((Class)type metadata accessor for CardioFitnessOnboardingViewController());
          v93 = sub_240B2BF68(v91, 0);
          _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v124);
          v94 = v119;
          objc_msgSend(v119, sel_presentViewController_animated_completion_, v93, 1, 0);

LABEL_27:
          (*(void (**)(char *, uint64_t))(v121 + 8))(v52, v89);
          break;
        case 3:
          v95 = v118;
          sub_240BB5250();
          v96 = (void *)sub_240BB4EA0();
          v122(v22, v53);
          sub_240BB7240();

          v97 = objc_allocWithZone((Class)type metadata accessor for HealthDetailsModalViewController());
          v98 = sub_240ADEFA0(v95, (uint64_t)v124);
          v99 = v119;
          objc_msgSend(v119, sel_presentViewController_animated_completion_, v98, 1, 0);

          goto LABEL_24;
        case 4:
          v100 = v108;
          v101 = v107;
          v102 = v109;
          (*(void (**)(char *, void, uint64_t))(v108 + 104))(v107, *MEMORY[0x263F43588], v109);
          sub_240BB3620();

          (*(void (**)(char *, uint64_t))(v100 + 8))(v101, v102);
          goto LABEL_24;
        case 5:
          sub_240B70C74();
          sub_240BB6E40();

          swift_bridgeObjectRelease();
LABEL_24:
          (*(void (**)(char *, uint64_t))(v121 + 8))(v52, v65);
          break;
        default:
          v66 = v113;
          sub_240ADF504(v55, v113, (uint64_t (*)(void))type metadata accessor for CardioFitnessHealthChecklistSettingsState);
          v67 = v106;
          sub_240AE1B64(v66, v106, (uint64_t (*)(void))type metadata accessor for CardioFitnessHealthChecklistSettingsState);
          v68 = v121;
          v69 = (uint64_t)v112;
          (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v112, v52, v65);
          v70 = objc_allocWithZone((Class)type metadata accessor for CardioFitnessHealthChecklistSettingsViewController(0));
          v71 = v118;
          v72 = sub_240AC20DC(v71, v67, v69, 1);
          sub_240BB4E50();
          v73 = sub_240BB6FE0();
          v74 = (uint64_t)v110;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v110, 1, 1, v73);
          v75 = v65;
          v76 = (void *)swift_allocObject();
          v76[2] = 0;
          v76[3] = 0;
          v77 = ObjectType;
          v76[4] = v71;
          v76[5] = v77;
          v78 = v71;
          sub_240B17230(v74, (uint64_t)&unk_268CA02E0, (uint64_t)v76);
          swift_release();
          v79 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v72);
          v80 = v119;
          objc_msgSend(v119, sel_presentViewController_animated_completion_, v79, 1, 0);

          sub_240AE263C(v66, (uint64_t (*)(void))type metadata accessor for CardioFitnessHealthChecklistSettingsState);
          (*(void (**)(char *, uint64_t))(v68 + 8))(v52, v75);
          break;
      }
    }
    v63 = v41;
    goto LABEL_29;
  }
  sub_240AE25E0((uint64_t)v25, &qword_268CA02C0, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData);
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  v34 = sub_240BB5990();
  sub_240A395FC(v34, (uint64_t)qword_26AFDEC70);
  v35 = sub_240BB5970();
  v36 = sub_240BB7190();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc();
    v38 = swift_slowAlloc();
    v124[0] = v38;
    *(_DWORD *)v37 = 136315138;
    v39 = sub_240BB7C80();
    v126 = sub_240A38940(v39, v40, v124);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v35, v36, "[%s] Could not access action handler user data!", v37, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v38, -1, -1);
    MEMORY[0x24560B930](v37, -1, -1);
  }
}

uint64_t sub_240ADE898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 120) = a4;
  *(void *)(v5 + 128) = a5;
  return MEMORY[0x270FA2498](sub_240ADE8B8, 0, 0);
}

uint64_t sub_240ADE8B8()
{
  id v1 = objc_msgSend(*(id *)(v0 + 120), sel_featureAvailabilityProvidingForFeatureIdentifier_, *MEMORY[0x263F09730]);
  *(void *)(v0 + 136) = v1;
  if (v1)
  {
    v2 = v1;
    sub_240A34DC4(0, (unint64_t *)&qword_268CA10E0);
    uint64_t v3 = sub_240BB74D0();
    v4 = (void *)*MEMORY[0x263F09820];
    *(void *)(v0 + 144) = v3;
    *(void *)(v0 + 152) = v4;
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 56) = v0 + 168;
    *(void *)(v0 + 24) = sub_240ADEA64;
    uint64_t v5 = swift_continuation_init();
    *(void *)(v0 + 80) = MEMORY[0x263EF8330];
    *(void *)(v0 + 88) = 0x40000000;
    *(void *)(v0 + 96) = sub_240ACE7DC;
    *(void *)(v0 + 104) = &unk_2650DCAA0;
    *(void *)(v0 + 112) = v5;
    objc_msgSend(v2, sel_setFeatureSettingNumber_forKey_completion_, v3, v4, v0 + 80);
    return MEMORY[0x270FA23F0](v0 + 16);
  }
  else
  {
    v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

uint64_t sub_240ADEA64()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 160) = v1;
  if (v1) {
    v2 = sub_240ADEBE0;
  }
  else {
    v2 = sub_240ADEB74;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_240ADEB74()
{
  uint64_t v1 = (void *)v0[18];
  v2 = (void *)v0[19];
  sub_240BB50A0();

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_240ADEBE0()
{
  v21 = v0;
  uint64_t v1 = (void *)v0[19];
  v2 = (void *)v0[18];
  swift_willThrow();
  sub_240BB50A0();

  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)v0[20];
  uint64_t v4 = sub_240BB5990();
  sub_240A395FC(v4, (uint64_t)qword_26AFDEC70);
  id v5 = v3;
  id v6 = v3;
  v7 = sub_240BB5970();
  os_log_type_t v8 = sub_240BB7180();
  BOOL v9 = os_log_type_enabled(v7, v8);
  v10 = (void *)v0[20];
  if (v9)
  {
    uint64_t v11 = swift_slowAlloc();
    v12 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = v19;
    *(_DWORD *)uint64_t v11 = 136446466;
    uint64_t v13 = sub_240BB7C80();
    v0[10] = sub_240A38940(v13, v14, &v20);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2112;
    id v15 = v10;
    uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
    v0[10] = v16;
    sub_240BB75F0();
    void *v12 = v16;

    _os_log_impl(&dword_240A1B000, v7, v8, "[%{public}s] Error when setting initial enablement: %@", (uint8_t *)v11, 0x16u);
    sub_240AA63A0();
    swift_arrayDestroy();
    MEMORY[0x24560B930](v12, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v19, -1, -1);
    MEMORY[0x24560B930](v11, -1, -1);
  }
  else
  {
  }
  v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_240ADEE7C(uint64_t a1)
{
  uint64_t v3 = sub_240BB4EC0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_allocWithZone(v1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t v8 = sub_240BB5260();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v8;
}

id sub_240ADEF7C()
{
  return sub_240ADF1E0(type metadata accessor for CardioFitnessFeatureStatusActionHandler);
}

uint64_t sub_240ADEF94()
{
  return type metadata accessor for CardioFitnessFeatureStatusActionHandler(0);
}

id sub_240ADEFA0(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_240A1E37C(a2, (uint64_t)v14);
  id v6 = objc_allocWithZone((Class)sub_240BB5570());
  id v7 = a1;
  uint64_t v8 = (void *)sub_240BB5560();
  objc_msgSend(v8, sel_setAccessType_, 3);
  v13.receiver = v3;
  v13.super_class = (Class)type metadata accessor for HealthDetailsModalViewController();
  id v9 = objc_msgSendSuper2(&v13, sel_initWithRootViewController_, v8);
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824A8]), sel_initWithBarButtonSystemItem_target_action_, 0, v9, sel_dismissPresentedViewController);
  id v11 = objc_msgSend(v8, sel_navigationItem);
  objc_msgSend(v11, sel_setLeftBarButtonItem_, v10);

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a2);
  return v9;
}

id sub_240ADF1C8()
{
  return sub_240ADF1E0((uint64_t (*)(void))type metadata accessor for HealthDetailsModalViewController);
}

id sub_240ADF1E0(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for HealthDetailsModalViewController()
{
  return self;
}

uint64_t sub_240ADF244()
{
  return sub_240ADF2D4(&qword_26AFD7A88, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandler);
}

uint64_t sub_240ADF28C()
{
  return sub_240ADF2D4((unint64_t *)&unk_26AFD7BB0, MEMORY[0x263F445D8]);
}

uint64_t sub_240ADF2D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(uint64_t a1)
{
  return sub_240A3E6AC(a1, (uint64_t *)&unk_268CA02E8);
}

unint64_t sub_240ADF33C()
{
  unint64_t result = qword_268CA02A0;
  if (!qword_268CA02A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA02A0);
  }
  return result;
}

uint64_t type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData(uint64_t a1)
{
  return sub_240A3E6AC(a1, qword_26AFD8C18);
}

uint64_t sub_240ADF3B0(uint64_t a1, uint64_t a2)
{
  sub_240ADF430(0, &qword_268CA0290, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_240ADF430(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240BB75E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_240ADF484(uint64_t a1, uint64_t a2)
{
  sub_240ADF430(0, &qword_268CA0290, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240ADF504(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_240ADF56C()
{
  sub_240BB50A0();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_240ADF5AC()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_240AA62AC;
  *(_OWORD *)(v2 + 120) = v3;
  return MEMORY[0x270FA2498](sub_240ADE8B8, 0, 0);
}

ValueMetadata *type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.CodingKeys()
{
  return &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.CodingKeys;
}

uint64_t *sub_240ADF66C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v19 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
      uint64_t v20 = v19[5];
      v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      uint64_t v23 = sub_240BB3660();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
      *(uint64_t *)((char *)a1 + v19[6]) = *(uint64_t *)((char *)a2 + v19[6]);
      uint64_t v24 = v19[7];
      unint64_t v14 = (char *)a1 + v24;
      id v15 = (char *)a2 + v24;
      uint64_t v25 = *(uint64_t *)((char *)a2 + v24 + 8);
      *(void *)unint64_t v14 = *(uint64_t *)((char *)a2 + v24);
      *((void *)v14 + 1) = v25;
      uint64_t v17 = *(uint64_t *)((char *)a2 + v24 + 24);
      sub_240BB4850();
      sub_240BB4850();
      if (!v17)
      {
        long long v28 = *((_OWORD *)v15 + 2);
        *((_OWORD *)v14 + 1) = *((_OWORD *)v15 + 1);
        *((_OWORD *)v14 + 2) = v28;
        goto LABEL_12;
      }
      goto LABEL_8;
    }
    if (!EnumCaseMultiPayload)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v8 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
      uint64_t v9 = v8[5];
      id v10 = (char *)a1 + v9;
      id v11 = (char *)a2 + v9;
      uint64_t v12 = sub_240BB3660();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
      *(uint64_t *)((char *)a1 + v8[6]) = *(uint64_t *)((char *)a2 + v8[6]);
      uint64_t v13 = v8[7];
      unint64_t v14 = (char *)a1 + v13;
      id v15 = (char *)a2 + v13;
      uint64_t v16 = *(uint64_t *)((char *)a2 + v13 + 8);
      *(void *)unint64_t v14 = *(uint64_t *)((char *)a2 + v13);
      *((void *)v14 + 1) = v16;
      uint64_t v17 = *(uint64_t *)((char *)a2 + v13 + 24);
      sub_240BB4850();
      sub_240BB4850();
      if (!v17)
      {
        long long v27 = *((_OWORD *)v15 + 2);
        *((_OWORD *)v14 + 1) = *((_OWORD *)v15 + 1);
        *((_OWORD *)v14 + 2) = v27;
        goto LABEL_12;
      }
LABEL_8:
      *((void *)v14 + 2) = *((void *)v15 + 2);
      *((void *)v14 + 3) = v17;
      uint64_t v26 = *((void *)v15 + 5);
      *((void *)v14 + 4) = *((void *)v15 + 4);
      *((void *)v14 + 5) = v26;
      sub_240BB4850();
      sub_240BB4850();
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t sub_240ADF8D0(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    uint64_t v3 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
    uint64_t v4 = a1 + *(int *)(v3 + 20);
    uint64_t v5 = sub_240BB3660();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    swift_bridgeObjectRelease();
    uint64_t v6 = *(int *)(v3 + 28);
    swift_bridgeObjectRelease();
    uint64_t result = *(void *)(a1 + v6 + 24);
    if (result)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

unsigned char *sub_240ADF9A4(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    uint64_t v17 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
    uint64_t v18 = v17[5];
    uint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    uint64_t v21 = sub_240BB3660();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    *(void *)&a1[v17[6]] = *(void *)&a2[v17[6]];
    uint64_t v22 = v17[7];
    uint64_t v13 = &a1[v22];
    unint64_t v14 = &a2[v22];
    uint64_t v23 = *(void *)&a2[v22 + 8];
    *(void *)uint64_t v13 = *(void *)&a2[v22];
    *((void *)v13 + 1) = v23;
    uint64_t v16 = *(void *)&a2[v22 + 24];
    sub_240BB4850();
    sub_240BB4850();
    if (!v16)
    {
      long long v26 = *((_OWORD *)v14 + 2);
      *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
      *((_OWORD *)v13 + 2) = v26;
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  if (!EnumCaseMultiPayload)
  {
    *a1 = *a2;
    id v7 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
    uint64_t v8 = v7[5];
    uint64_t v9 = &a1[v8];
    id v10 = &a2[v8];
    uint64_t v11 = sub_240BB3660();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    *(void *)&a1[v7[6]] = *(void *)&a2[v7[6]];
    uint64_t v12 = v7[7];
    uint64_t v13 = &a1[v12];
    unint64_t v14 = &a2[v12];
    uint64_t v15 = *(void *)&a2[v12 + 8];
    *(void *)uint64_t v13 = *(void *)&a2[v12];
    *((void *)v13 + 1) = v15;
    uint64_t v16 = *(void *)&a2[v12 + 24];
    sub_240BB4850();
    sub_240BB4850();
    if (!v16)
    {
      long long v25 = *((_OWORD *)v14 + 2);
      *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
      *((_OWORD *)v13 + 2) = v25;
      goto LABEL_10;
    }
LABEL_6:
    *((void *)v13 + 2) = *((void *)v14 + 2);
    *((void *)v13 + 3) = v16;
    uint64_t v24 = *((void *)v14 + 5);
    *((void *)v13 + 4) = *((void *)v14 + 4);
    *((void *)v13 + 5) = v24;
    sub_240BB4850();
    sub_240BB4850();
LABEL_10:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

unsigned char *sub_240ADFBC4(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_240AE263C((uint64_t)a1, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      uint64_t v16 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
      uint64_t v17 = v16[5];
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      uint64_t v20 = sub_240BB3660();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      *(void *)&a1[v16[6]] = *(void *)&a2[v16[6]];
      uint64_t v21 = v16[7];
      uint64_t v13 = &a1[v21];
      unint64_t v14 = &a2[v21];
      *(void *)uint64_t v13 = *(void *)&a2[v21];
      *((void *)v13 + 1) = *(void *)&a2[v21 + 8];
      uint64_t v22 = *(void *)&a2[v21 + 24];
      sub_240BB4850();
      sub_240BB4850();
      if (!v22)
      {
        long long v24 = *((_OWORD *)v14 + 2);
        *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
        *((_OWORD *)v13 + 2) = v24;
        goto LABEL_11;
      }
      goto LABEL_7;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      id v7 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
      uint64_t v8 = v7[5];
      uint64_t v9 = &a1[v8];
      id v10 = &a2[v8];
      uint64_t v11 = sub_240BB3660();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      *(void *)&a1[v7[6]] = *(void *)&a2[v7[6]];
      uint64_t v12 = v7[7];
      uint64_t v13 = &a1[v12];
      unint64_t v14 = &a2[v12];
      *(void *)uint64_t v13 = *(void *)&a2[v12];
      *((void *)v13 + 1) = *(void *)&a2[v12 + 8];
      uint64_t v15 = *(void *)&a2[v12 + 24];
      sub_240BB4850();
      sub_240BB4850();
      if (!v15)
      {
        long long v23 = *((_OWORD *)v14 + 2);
        *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
        *((_OWORD *)v13 + 2) = v23;
        goto LABEL_11;
      }
LABEL_7:
      *((void *)v13 + 2) = *((void *)v14 + 2);
      *((void *)v13 + 3) = *((void *)v14 + 3);
      *((void *)v13 + 4) = *((void *)v14 + 4);
      *((void *)v13 + 5) = *((void *)v14 + 5);
      sub_240BB4850();
      sub_240BB4850();
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *sub_240ADFE30(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v6 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
    uint64_t v7 = v6[5];
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = sub_240BB3660();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
    uint64_t v11 = v6[7];
    uint64_t v12 = &a1[v11];
    uint64_t v13 = (long long *)&a2[v11];
    long long v14 = v13[2];
    long long v15 = *v13;
    v12[1] = v13[1];
    v12[2] = v14;
    _OWORD *v12 = v15;
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *sub_240ADFFD4(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_240AE263C((uint64_t)a1, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v6 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
      uint64_t v7 = v6[5];
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = sub_240BB3660();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
      uint64_t v11 = v6[7];
      uint64_t v12 = &a1[v11];
      uint64_t v13 = (long long *)&a2[v11];
      long long v14 = v13[2];
      long long v15 = *v13;
      v12[1] = v13[1];
      v12[2] = v14;
      _OWORD *v12 = v15;
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_240AE019C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_240AE01C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_240AE01F0()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_240AE0200()
{
  uint64_t result = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_240AE0288(uint64_t *a1, uint64_t *a2)
{
  sub_240ADF430(0, &qword_268CA0290, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v21 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
      uint64_t v22 = v21[5];
      long long v23 = (char *)a1 + v22;
      long long v24 = (char *)a2 + v22;
      uint64_t v25 = sub_240BB3660();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
      *(uint64_t *)((char *)a1 + v21[6]) = *(uint64_t *)((char *)a2 + v21[6]);
      uint64_t v26 = v21[7];
      uint64_t v17 = (char *)a1 + v26;
      uint64_t v18 = (char *)a2 + v26;
      uint64_t v27 = *(uint64_t *)((char *)a2 + v26 + 8);
      *(void *)uint64_t v17 = *(uint64_t *)((char *)a2 + v26);
      *((void *)v17 + 1) = v27;
      uint64_t v20 = *(uint64_t *)((char *)a2 + v26 + 24);
      sub_240BB4850();
      sub_240BB4850();
      if (!v20)
      {
        long long v30 = *((_OWORD *)v18 + 2);
        *((_OWORD *)v17 + 1) = *((_OWORD *)v18 + 1);
        *((_OWORD *)v17 + 2) = v30;
        goto LABEL_14;
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(v8 + 64));
LABEL_15:
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        return a1;
      }
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v11 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
      uint64_t v12 = v11[5];
      uint64_t v13 = (char *)a1 + v12;
      long long v14 = (char *)a2 + v12;
      uint64_t v15 = sub_240BB3660();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      *(uint64_t *)((char *)a1 + v11[6]) = *(uint64_t *)((char *)a2 + v11[6]);
      uint64_t v16 = v11[7];
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = *(uint64_t *)((char *)a2 + v16 + 8);
      *(void *)uint64_t v17 = *(uint64_t *)((char *)a2 + v16);
      *((void *)v17 + 1) = v19;
      uint64_t v20 = *(uint64_t *)((char *)a2 + v16 + 24);
      sub_240BB4850();
      sub_240BB4850();
      if (!v20)
      {
        long long v29 = *((_OWORD *)v18 + 2);
        *((_OWORD *)v17 + 1) = *((_OWORD *)v18 + 1);
        *((_OWORD *)v17 + 2) = v29;
        goto LABEL_14;
      }
    }
    *((void *)v17 + 2) = *((void *)v18 + 2);
    *((void *)v17 + 3) = v20;
    uint64_t v28 = *((void *)v18 + 5);
    *((void *)v17 + 4) = *((void *)v18 + 4);
    *((void *)v17 + 5) = v28;
    sub_240BB4850();
    sub_240BB4850();
LABEL_14:
    swift_storeEnumTagMultiPayload();
    goto LABEL_15;
  }
  memcpy(a1, a2, *(void *)(v6 + 64));
  return a1;
}

uint64_t sub_240AE05B4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result <= 1)
    {
      uint64_t v4 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
      uint64_t v5 = a1 + *(int *)(v4 + 20);
      uint64_t v6 = sub_240BB3660();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
      swift_bridgeObjectRelease();
      uint64_t v7 = *(int *)(v4 + 28);
      swift_bridgeObjectRelease();
      uint64_t result = *(void *)(a1 + v7 + 24);
      if (result)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

unsigned char *sub_240AE06D4(unsigned char *a1, unsigned char *a2)
{
  uint64_t v4 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      uint64_t v18 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
      uint64_t v19 = v18[5];
      uint64_t v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      uint64_t v22 = sub_240BB3660();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
      *(void *)&a1[v18[6]] = *(void *)&a2[v18[6]];
      uint64_t v23 = v18[7];
      long long v14 = &a1[v23];
      uint64_t v15 = &a2[v23];
      uint64_t v24 = *(void *)&a2[v23 + 8];
      *(void *)long long v14 = *(void *)&a2[v23];
      *((void *)v14 + 1) = v24;
      uint64_t v17 = *(void *)&a2[v23 + 24];
      sub_240BB4850();
      sub_240BB4850();
      if (!v17)
      {
        long long v27 = *((_OWORD *)v15 + 2);
        *((_OWORD *)v14 + 1) = *((_OWORD *)v15 + 1);
        *((_OWORD *)v14 + 2) = v27;
        goto LABEL_12;
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(v5 + 64));
LABEL_13:
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
        return a1;
      }
      *a1 = *a2;
      uint64_t v8 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
      uint64_t v9 = v8[5];
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      uint64_t v12 = sub_240BB3660();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
      *(void *)&a1[v8[6]] = *(void *)&a2[v8[6]];
      uint64_t v13 = v8[7];
      long long v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      uint64_t v16 = *(void *)&a2[v13 + 8];
      *(void *)long long v14 = *(void *)&a2[v13];
      *((void *)v14 + 1) = v16;
      uint64_t v17 = *(void *)&a2[v13 + 24];
      sub_240BB4850();
      sub_240BB4850();
      if (!v17)
      {
        long long v26 = *((_OWORD *)v15 + 2);
        *((_OWORD *)v14 + 1) = *((_OWORD *)v15 + 1);
        *((_OWORD *)v14 + 2) = v26;
        goto LABEL_12;
      }
    }
    *((void *)v14 + 2) = *((void *)v15 + 2);
    *((void *)v14 + 3) = v17;
    uint64_t v25 = *((void *)v15 + 5);
    *((void *)v14 + 4) = *((void *)v15 + 4);
    *((void *)v14 + 5) = v25;
    sub_240BB4850();
    sub_240BB4850();
LABEL_12:
    swift_storeEnumTagMultiPayload();
    goto LABEL_13;
  }
  sub_240ADF430(0, &qword_268CA0290, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  return a1;
}

unsigned char *sub_240AE09C0(unsigned char *a1, unsigned char *a2)
{
  uint64_t v4 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (v7)
  {
    if (!v8)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        *a1 = *a2;
        v31 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
        uint64_t v32 = v31[5];
        v33 = &a1[v32];
        v34 = &a2[v32];
        uint64_t v35 = sub_240BB3660();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
        *(void *)&a1[v31[6]] = *(void *)&a2[v31[6]];
        uint64_t v36 = v31[7];
        uint64_t v16 = &a1[v36];
        uint64_t v17 = &a2[v36];
        *(void *)uint64_t v16 = *(void *)&a2[v36];
        *((void *)v16 + 1) = *(void *)&a2[v36 + 8];
        uint64_t v37 = *(void *)&a2[v36 + 24];
        sub_240BB4850();
        sub_240BB4850();
        if (!v37)
        {
          long long v46 = *((_OWORD *)v17 + 2);
          *((_OWORD *)v16 + 1) = *((_OWORD *)v17 + 1);
          *((_OWORD *)v16 + 2) = v46;
          goto LABEL_24;
        }
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(void *)(v5 + 64));
LABEL_25:
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
          return a1;
        }
        *a1 = *a2;
        uint64_t v10 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
        uint64_t v11 = v10[5];
        uint64_t v12 = &a1[v11];
        uint64_t v13 = &a2[v11];
        uint64_t v14 = sub_240BB3660();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
        *(void *)&a1[v10[6]] = *(void *)&a2[v10[6]];
        uint64_t v15 = v10[7];
        uint64_t v16 = &a1[v15];
        uint64_t v17 = &a2[v15];
        *(void *)uint64_t v16 = *(void *)&a2[v15];
        *((void *)v16 + 1) = *(void *)&a2[v15 + 8];
        uint64_t v18 = *(void *)&a2[v15 + 24];
        sub_240BB4850();
        sub_240BB4850();
        if (!v18)
        {
          long long v38 = *((_OWORD *)v17 + 2);
          *((_OWORD *)v16 + 1) = *((_OWORD *)v17 + 1);
          *((_OWORD *)v16 + 2) = v38;
          goto LABEL_24;
        }
      }
      *((void *)v16 + 2) = *((void *)v17 + 2);
      *((void *)v16 + 3) = *((void *)v17 + 3);
      *((void *)v16 + 4) = *((void *)v17 + 4);
      *((void *)v16 + 5) = *((void *)v17 + 5);
      sub_240BB4850();
      sub_240BB4850();
LABEL_24:
      swift_storeEnumTagMultiPayload();
      goto LABEL_25;
    }
    goto LABEL_9;
  }
  if (!v8)
  {
    if (a1 == a2) {
      return a1;
    }
    sub_240AE263C((uint64_t)a1, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
    int v21 = swift_getEnumCaseMultiPayload();
    if (v21 == 1)
    {
      *a1 = *a2;
      v39 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
      uint64_t v40 = v39[5];
      v41 = &a1[v40];
      v42 = &a2[v40];
      uint64_t v43 = sub_240BB3660();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
      *(void *)&a1[v39[6]] = *(void *)&a2[v39[6]];
      uint64_t v44 = v39[7];
      uint64_t v28 = &a1[v44];
      long long v29 = &a2[v44];
      *(void *)uint64_t v28 = *(void *)&a2[v44];
      *((void *)v28 + 1) = *(void *)&a2[v44 + 8];
      uint64_t v45 = *(void *)&a2[v44 + 24];
      sub_240BB4850();
      sub_240BB4850();
      if (!v45)
      {
        long long v49 = *((_OWORD *)v29 + 2);
        *((_OWORD *)v28 + 1) = *((_OWORD *)v29 + 1);
        *((_OWORD *)v28 + 2) = v49;
        goto LABEL_28;
      }
    }
    else
    {
      if (v21)
      {
        size_t v20 = *(void *)(v5 + 64);
        goto LABEL_10;
      }
      *a1 = *a2;
      uint64_t v22 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
      uint64_t v23 = v22[5];
      uint64_t v24 = &a1[v23];
      uint64_t v25 = &a2[v23];
      uint64_t v26 = sub_240BB3660();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
      *(void *)&a1[v22[6]] = *(void *)&a2[v22[6]];
      uint64_t v27 = v22[7];
      uint64_t v28 = &a1[v27];
      long long v29 = &a2[v27];
      *(void *)uint64_t v28 = *(void *)&a2[v27];
      *((void *)v28 + 1) = *(void *)&a2[v27 + 8];
      uint64_t v30 = *(void *)&a2[v27 + 24];
      sub_240BB4850();
      sub_240BB4850();
      if (!v30)
      {
        long long v48 = *((_OWORD *)v29 + 2);
        *((_OWORD *)v28 + 1) = *((_OWORD *)v29 + 1);
        *((_OWORD *)v28 + 2) = v48;
        goto LABEL_28;
      }
    }
    *((void *)v28 + 2) = *((void *)v29 + 2);
    *((void *)v28 + 3) = *((void *)v29 + 3);
    *((void *)v28 + 4) = *((void *)v29 + 4);
    *((void *)v28 + 5) = *((void *)v29 + 5);
    sub_240BB4850();
    sub_240BB4850();
LABEL_28:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  sub_240AE263C((uint64_t)a1, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
LABEL_9:
  sub_240ADF430(0, &qword_268CA0290, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  size_t v20 = *(void *)(*(void *)(v19 - 8) + 64);
LABEL_10:
  memcpy(a1, a2, v20);
  return a1;
}

unsigned char *sub_240AE0F30(unsigned char *a1, unsigned char *a2)
{
  uint64_t v4 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    sub_240ADF430(0, &qword_268CA0290, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(v5 + 64));
    }
    else
    {
      *a1 = *a2;
      int v7 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
      uint64_t v8 = v7[5];
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = sub_240BB3660();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      *(void *)&a1[v7[6]] = *(void *)&a2[v7[6]];
      uint64_t v12 = v7[7];
      uint64_t v13 = &a1[v12];
      uint64_t v14 = (long long *)&a2[v12];
      long long v15 = v14[2];
      long long v16 = *v14;
      v13[1] = v14[1];
      v13[2] = v15;
      *uint64_t v13 = v16;
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

unsigned char *sub_240AE11A0(unsigned char *a1, unsigned char *a2)
{
  uint64_t v4 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      if (a1 == a2) {
        return a1;
      }
      sub_240AE263C((uint64_t)a1, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
      if (swift_getEnumCaseMultiPayload() <= 1)
      {
        *a1 = *a2;
        int v21 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
        uint64_t v22 = v21[5];
        uint64_t v23 = &a1[v22];
        uint64_t v24 = &a2[v22];
        uint64_t v25 = sub_240BB3660();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
        *(void *)&a1[v21[6]] = *(void *)&a2[v21[6]];
        uint64_t v26 = v21[7];
        uint64_t v27 = &a1[v26];
        uint64_t v28 = (long long *)&a2[v26];
        long long v29 = v28[2];
        long long v30 = *v28;
        v27[1] = v28[1];
        v27[2] = v29;
        *uint64_t v27 = v30;
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      size_t v20 = *(void *)(v5 + 64);
      goto LABEL_8;
    }
    sub_240AE263C((uint64_t)a1, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
LABEL_7:
    sub_240ADF430(0, &qword_268CA0290, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
    size_t v20 = *(void *)(*(void *)(v19 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v20);
    return a1;
  }
  if (v8) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(v5 + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v9 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
    uint64_t v10 = v9[5];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = sub_240BB3660();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    *(void *)&a1[v9[6]] = *(void *)&a2[v9[6]];
    uint64_t v14 = v9[7];
    long long v15 = &a1[v14];
    long long v16 = (long long *)&a2[v14];
    long long v17 = v16[2];
    long long v18 = *v16;
    v15[1] = v16[1];
    v15[2] = v17;
    *long long v15 = v18;
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_240AE15C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240AE15D8);
}

uint64_t sub_240AE15D8(uint64_t a1, uint64_t a2)
{
  sub_240ADF430(0, &qword_268CA0290, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_240AE1660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240AE1674);
}

uint64_t sub_240AE1674(uint64_t a1, uint64_t a2)
{
  sub_240ADF430(0, &qword_268CA0290, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void sub_240AE1700()
{
  sub_240ADF430(319, &qword_268CA0290, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_240AE17AC()
{
  unint64_t result = qword_268CA02F8;
  if (!qword_268CA02F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA02F8);
  }
  return result;
}

unint64_t sub_240AE1804()
{
  unint64_t result = qword_268CA0300;
  if (!qword_268CA0300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0300);
  }
  return result;
}

unint64_t sub_240AE185C()
{
  unint64_t result = qword_268CA0308;
  if (!qword_268CA0308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0308);
  }
  return result;
}

unint64_t sub_240AE18B0()
{
  unint64_t result = qword_268CA0318;
  if (!qword_268CA0318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0318);
  }
  return result;
}

unint64_t sub_240AE1904()
{
  unint64_t result = qword_268CA0328;
  if (!qword_268CA0328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0328);
  }
  return result;
}

unint64_t sub_240AE1958()
{
  unint64_t result = qword_268CA0338;
  if (!qword_268CA0338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0338);
  }
  return result;
}

unint64_t sub_240AE19AC()
{
  unint64_t result = qword_268CA0348;
  if (!qword_268CA0348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0348);
  }
  return result;
}

unint64_t sub_240AE1A00()
{
  unint64_t result = qword_268CA0358;
  if (!qword_268CA0358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0358);
  }
  return result;
}

unint64_t sub_240AE1A54()
{
  unint64_t result = qword_268CA0368;
  if (!qword_268CA0368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0368);
  }
  return result;
}

unint64_t sub_240AE1AA8()
{
  unint64_t result = qword_268CA0378;
  if (!qword_268CA0378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0378);
  }
  return result;
}

void sub_240AE1AFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_240AE1B64(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_240AE1BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v42 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
  uint64_t v4 = MEMORY[0x270FA5388](v42);
  uint64_t v6 = (unsigned __int8 *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  int v8 = (unsigned __int8 *)&v41 - v7;
  uint64_t v9 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (unsigned __int8 *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (unsigned __int8 *)&v41 - v13;
  sub_240AE2118();
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  long long v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (uint64_t)&v18[*(int *)(v16 + 56)];
  sub_240AE1B64(a1, (uint64_t)v18, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  sub_240AE1B64(a2, v19, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_240AE1B64((uint64_t)v18, (uint64_t)v12, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_10;
      }
      sub_240ADF504(v19, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CardioFitnessHealthChecklistSettingsState);
      if (*v12 == *v6
        && (sub_240BB3650() & 1) != 0
        && (sub_240B2B4C0(*(void **)&v12[*(int *)(v42 + 24)], *(void **)&v6[*(int *)(v42 + 24)]) & 1) != 0)
      {
        size_t v20 = &v12[*(int *)(v42 + 28)];
        long long v21 = *((_OWORD *)v20 + 2);
        long long v22 = *(_OWORD *)v20;
        long long v44 = *((_OWORD *)v20 + 1);
        long long v45 = v21;
        long long v43 = v22;
        uint64_t v23 = &v6[*(int *)(v42 + 28)];
        long long v24 = *((_OWORD *)v23 + 2);
        long long v25 = *(_OWORD *)v23;
        long long v47 = *((_OWORD *)v23 + 1);
        long long v48 = v24;
        long long v46 = v25;
        if (sub_240B7605C(&v43, &v46))
        {
          sub_240AE263C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CardioFitnessHealthChecklistSettingsState);
          uint64_t v26 = (uint64_t)v12;
          goto LABEL_25;
        }
      }
      sub_240AE263C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CardioFitnessHealthChecklistSettingsState);
      uint64_t v33 = (uint64_t)v12;
      goto LABEL_27;
    case 2u:
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v28 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction;
      if (EnumCaseMultiPayload == 2) {
        goto LABEL_18;
      }
      goto LABEL_16;
    case 3u:
      int v29 = swift_getEnumCaseMultiPayload();
      uint64_t v28 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction;
      if (v29 == 3) {
        goto LABEL_18;
      }
      goto LABEL_16;
    case 4u:
      int v30 = swift_getEnumCaseMultiPayload();
      uint64_t v28 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction;
      if (v30 != 4) {
        goto LABEL_16;
      }
      goto LABEL_18;
    case 5u:
      int v32 = swift_getEnumCaseMultiPayload();
      uint64_t v28 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction;
      if (v32 != 5) {
        goto LABEL_16;
      }
LABEL_18:
      uint64_t v31 = 1;
      break;
    default:
      sub_240AE1B64((uint64_t)v18, (uint64_t)v14, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
      if (swift_getEnumCaseMultiPayload())
      {
        uint64_t v12 = v14;
LABEL_10:
        sub_240AE263C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CardioFitnessHealthChecklistSettingsState);
LABEL_16:
        uint64_t v31 = 0;
        uint64_t v28 = (uint64_t (*)(void))sub_240AE2118;
      }
      else
      {
        sub_240ADF504(v19, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CardioFitnessHealthChecklistSettingsState);
        if (*v14 != *v8) {
          goto LABEL_26;
        }
        if ((sub_240BB3650() & 1) == 0) {
          goto LABEL_26;
        }
        if ((sub_240B2B4C0(*(void **)&v14[*(int *)(v42 + 24)], *(void **)&v8[*(int *)(v42 + 24)]) & 1) == 0) {
          goto LABEL_26;
        }
        v34 = &v14[*(int *)(v42 + 28)];
        long long v35 = *((_OWORD *)v34 + 2);
        long long v36 = *(_OWORD *)v34;
        long long v44 = *((_OWORD *)v34 + 1);
        long long v45 = v35;
        long long v43 = v36;
        uint64_t v37 = &v8[*(int *)(v42 + 28)];
        long long v38 = *((_OWORD *)v37 + 2);
        long long v39 = *(_OWORD *)v37;
        long long v47 = *((_OWORD *)v37 + 1);
        long long v48 = v38;
        long long v46 = v39;
        if (sub_240B7605C(&v43, &v46))
        {
          sub_240AE263C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CardioFitnessHealthChecklistSettingsState);
          uint64_t v26 = (uint64_t)v14;
LABEL_25:
          sub_240AE263C(v26, (uint64_t (*)(void))type metadata accessor for CardioFitnessHealthChecklistSettingsState);
          uint64_t v31 = 1;
        }
        else
        {
LABEL_26:
          sub_240AE263C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CardioFitnessHealthChecklistSettingsState);
          uint64_t v33 = (uint64_t)v14;
LABEL_27:
          sub_240AE263C(v33, (uint64_t (*)(void))type metadata accessor for CardioFitnessHealthChecklistSettingsState);
          uint64_t v31 = 0;
        }
        uint64_t v28 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction;
      }
      break;
  }
  sub_240AE263C((uint64_t)v18, v28);
  return v31;
}

void sub_240AE2118()
{
  if (!qword_268CA03C8)
  {
    type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CA03C8);
    }
  }
}

BOOL sub_240AE217C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AE2560();
  uint64_t v9 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240ADF430(0, &qword_268CA0290, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  long long v18 = (char *)&v25 - v17;
  MEMORY[0x270FA5388](v16);
  size_t v20 = (char *)&v25 - v19;
  sub_240ADF484(a1, (uint64_t)&v25 - v19);
  sub_240ADF484(a2, (uint64_t)v18);
  uint64_t v21 = (uint64_t)&v11[*(int *)(v9 + 56)];
  sub_240ADF484((uint64_t)v20, (uint64_t)v11);
  sub_240ADF484((uint64_t)v18, v21);
  long long v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v22((uint64_t)v11, 1, v4) == 1)
  {
    sub_240AE25E0((uint64_t)v18, &qword_268CA0290, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
    sub_240AE25E0((uint64_t)v20, &qword_268CA0290, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
    if (v22(v21, 1, v4) == 1)
    {
      sub_240AE25E0((uint64_t)v11, &qword_268CA0290, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
      return 1;
    }
    goto LABEL_6;
  }
  sub_240ADF484((uint64_t)v11, (uint64_t)v15);
  if (v22(v21, 1, v4) == 1)
  {
    sub_240AE25E0((uint64_t)v18, &qword_268CA0290, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
    sub_240AE25E0((uint64_t)v20, &qword_268CA0290, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
    sub_240AE263C((uint64_t)v15, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
LABEL_6:
    sub_240AE263C((uint64_t)v11, (uint64_t (*)(void))sub_240AE2560);
    return 0;
  }
  sub_240ADF504(v21, (uint64_t)v7, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  char v23 = sub_240AE1BCC((uint64_t)v15, (uint64_t)v7);
  sub_240AE263C((uint64_t)v7, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  sub_240AE25E0((uint64_t)v18, &qword_268CA0290, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  sub_240AE25E0((uint64_t)v20, &qword_268CA0290, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  sub_240AE263C((uint64_t)v15, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  sub_240AE25E0((uint64_t)v11, &qword_268CA0290, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  return (v23 & 1) != 0;
}

void sub_240AE2560()
{
  if (!qword_268CA03D0)
  {
    sub_240ADF430(255, &qword_268CA0290, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CA03D0);
    }
  }
}

uint64_t sub_240AE25E0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_240ADF430(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_240AE263C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for AFibBurdenPDFChartType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240AE27F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.CodingKeys()
{
  return &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.CodingKeys;
}

ValueMetadata *type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentOnboardingCodingKeys()
{
  return &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentOnboardingCodingKeys;
}

ValueMetadata *type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentFeatureSettingsCodingKeys()
{
  return &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentFeatureSettingsCodingKeys;
}

ValueMetadata *type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentHealthDetailsCodingKeys()
{
  return &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentHealthDetailsCodingKeys;
}

unsigned char *_s5Heart47CardioFitnessFeatureStatusActionHandlerUserDataV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x240AE28FCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PushEnabledFeatureSettingsCodingKeys()
{
  return &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PushEnabledFeatureSettingsCodingKeys;
}

ValueMetadata *type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.DeepLinkToHeartRateSettingsCodingKeys()
{
  return &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.DeepLinkToHeartRateSettingsCodingKeys;
}

ValueMetadata *type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.OpenKnowledgeBaseArticleCodingKeys()
{
  return &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.OpenKnowledgeBaseArticleCodingKeys;
}

unint64_t sub_240AE2958()
{
  unint64_t result = qword_268CA03D8;
  if (!qword_268CA03D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA03D8);
  }
  return result;
}

unint64_t sub_240AE29B0()
{
  unint64_t result = qword_268CA03E0;
  if (!qword_268CA03E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA03E0);
  }
  return result;
}

unint64_t sub_240AE2A08()
{
  unint64_t result = qword_268CA03E8;
  if (!qword_268CA03E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA03E8);
  }
  return result;
}

unint64_t sub_240AE2A60()
{
  unint64_t result = qword_268CA03F0;
  if (!qword_268CA03F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA03F0);
  }
  return result;
}

unint64_t sub_240AE2AB8()
{
  unint64_t result = qword_268CA03F8;
  if (!qword_268CA03F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA03F8);
  }
  return result;
}

unint64_t sub_240AE2B10()
{
  unint64_t result = qword_268CA0400;
  if (!qword_268CA0400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0400);
  }
  return result;
}

unint64_t sub_240AE2B68()
{
  unint64_t result = qword_268CA0408;
  if (!qword_268CA0408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0408);
  }
  return result;
}

unint64_t sub_240AE2BC0()
{
  unint64_t result = qword_268CA0410;
  if (!qword_268CA0410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0410);
  }
  return result;
}

unint64_t sub_240AE2C18()
{
  unint64_t result = qword_268CA0418;
  if (!qword_268CA0418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0418);
  }
  return result;
}

unint64_t sub_240AE2C70()
{
  unint64_t result = qword_268CA0420;
  if (!qword_268CA0420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0420);
  }
  return result;
}

unint64_t sub_240AE2CC8()
{
  unint64_t result = qword_268CA0428;
  if (!qword_268CA0428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0428);
  }
  return result;
}

unint64_t sub_240AE2D20()
{
  unint64_t result = qword_268CA0430;
  if (!qword_268CA0430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0430);
  }
  return result;
}

unint64_t sub_240AE2D78()
{
  unint64_t result = qword_268CA0438;
  if (!qword_268CA0438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0438);
  }
  return result;
}

unint64_t sub_240AE2DD0()
{
  unint64_t result = qword_268CA0440;
  if (!qword_268CA0440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0440);
  }
  return result;
}

unint64_t sub_240AE2E28()
{
  unint64_t result = qword_268CA0448;
  if (!qword_268CA0448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0448);
  }
  return result;
}

unint64_t sub_240AE2E80()
{
  unint64_t result = qword_268CA0450;
  if (!qword_268CA0450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0450);
  }
  return result;
}

unint64_t sub_240AE2ED8()
{
  unint64_t result = qword_268CA0458;
  if (!qword_268CA0458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0458);
  }
  return result;
}

uint64_t sub_240AE2F2C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x8000000240BCE720 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000240BCE740 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000240BCE760 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000240BCE780 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000240BCE7A0 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000240BCE7C0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t type metadata accessor for AFibBurdenChartSection()
{
  uint64_t result = qword_268CA0468;
  if (!qword_268CA0468) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240AE31C8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_240AE3214@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v1 = sub_240BB52C0();
  uint64_t v24 = *(void *)(v1 - 8);
  uint64_t v25 = v1;
  MEMORY[0x270FA5388](v1);
  char v23 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_240BB46D0();
  uint64_t v20 = *(void *)(v3 - 8);
  uint64_t v21 = v3;
  MEMORY[0x270FA5388](v3);
  long long v22 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AE4770(0, &qword_268C9ECF0, MEMORY[0x263F81EE0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  BOOL v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_240BB5BD0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  sub_240BB2980();
  sub_240BB5AB0();
  sub_240BB4850();
  sub_240BB5BC0();
  id v12 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x263F835B8]);
  uint64_t v13 = (void (*)(uint64_t *, void))sub_240BB5B30();
  sub_240BB5B00();
  v13(v28, 0);
  id v14 = objc_msgSend(self, sel_labelColor);
  uint64_t v15 = (void (*)(uint64_t *, void))sub_240BB5B30();
  sub_240BB5B10();
  v15(v28, 0);
  v28[3] = v8;
  v28[4] = MEMORY[0x263F81F20];
  uint64_t v16 = sub_240A23B08(v28);
  (*(void (**)(uint64_t *, char *, uint64_t))(v9 + 16))(v16, v11, v8);
  sub_240BB5A80();
  uint64_t v17 = sub_240BB5AA0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v7, 0, 1, v17);
  *(void *)&long long v27 = 0;
  *((void *)&v27 + 1) = 0xE000000000000000;
  sub_240BB77C0();
  if (qword_268C9E660 != -1) {
    swift_once();
  }
  long long v18 = xmmword_268C9EF30;
  sub_240BB4850();
  swift_bridgeObjectRelease();
  long long v27 = v18;
  sub_240BB6E70();
  (*(void (**)(char *, void, uint64_t))(v20 + 104))(v22, *MEMORY[0x263F440E0], v21);
  (*(void (**)(char *, void, uint64_t))(v24 + 104))(v23, *MEMORY[0x263F446D0], v25);
  sub_240BB4760();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_240AE3730(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_240BB2D40();
  uint64_t v36 = *(void *)(v7 - 8);
  uint64_t v37 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_240BB44D0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v40 = (char *)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v35 - v14;
  uint64_t v39 = v3;
  *(void *)(v3 + qword_268CA0460) = 0;
  sub_240AE4770(0, (unint64_t *)&qword_268C9E840, (uint64_t (*)(uint64_t))sub_240A47830, MEMORY[0x263F8E0F8]);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_240BBAE40;
  uint64_t v17 = self;
  id v41 = a1;
  id v18 = objc_msgSend(v17, sel__quantityTypeWithCode_, 248);
  if (v18)
  {
    id v19 = v18;
    *(void *)(v16 + 56) = &type metadata for AFibBurdenChartItem;
    *(void *)(v16 + 64) = sub_240AE455C();
    *(void *)(v16 + 32) = v19;
    *(void *)(v16 + 40) = a1;
    *(void *)(v16 + 48) = 0;
    type metadata accessor for AFibBurdenChartSection();
    *(void *)(v16 + 96) = sub_240BB4770();
    *(void *)(v16 + 104) = sub_240AE4728((unint64_t *)&qword_268C9FDF0, MEMORY[0x263F441F0]);
    uint64_t v20 = sub_240A23B08((uint64_t *)(v16 + 72));
    sub_240AE3214((uint64_t)v20);
    sub_240BB44C0();
    uint64_t ObjectType = swift_getObjectType();
    char v22 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(ObjectType, a3);
    v35[0] = v15;
    v35[1] = a2;
    if (v22)
    {
      sub_240AE4770(0, &qword_268CA0B10, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
      unint64_t v23 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_240BB97E0;
      (*(void (**)(unint64_t, char *, uint64_t))(v11 + 16))(v24 + v23, v15, v10);
    }
    uint64_t v25 = v10;
    uint64_t v26 = v37;
    v42[0] = 0;
    v42[1] = 0xE000000000000000;
    sub_240BB77C0();
    swift_bridgeObjectRelease();
    strcpy((char *)v42, "MutableArray<");
    HIWORD(v42[1]) = -4864;
    sub_240BB2D30();
    sub_240BB2D00();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v26);
    sub_240BB6E70();
    swift_bridgeObjectRelease();
    sub_240BB6E70();
    uint64_t v27 = sub_240BB45E0();
    uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
    swift_retain();
    v42[0] = v28(ObjectType, a3);
    uint64_t v29 = swift_allocObject();
    swift_weakInit();
    int v30 = v40;
    uint64_t v31 = v35[0];
    (*(void (**)(char *, void, uint64_t))(v11 + 16))(v40, v35[0], v25);
    unint64_t v32 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = v29;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v33 + v32, v30, v25);
    sub_240A3B664();
    sub_240AE4728(&qword_26AFD7528, (void (*)(uint64_t))sub_240A3B664);
    uint64_t v34 = sub_240BB6450();
    sub_240BB50A0();

    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v31, v25);
    *(void *)(v27 + qword_268CA0460) = v34;
    swift_release();
  }
  else
  {

    __break(1u);
  }
}

uint64_t sub_240AE3CEC(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  int v4 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (v4)
    {
      sub_240AE4770(0, &qword_268CA0B10, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
      uint64_t v6 = sub_240BB44D0();
      uint64_t v7 = *(void *)(v6 - 8);
      unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_240BB97E0;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 16))(v9 + v8, a3, v6);
    }
    sub_240BB45F0();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_240AE3E50()
{
  return swift_release();
}

uint64_t sub_240AE3E60()
{
  if (*(void *)(v0 + qword_268CA0460))
  {
    swift_retain();
    sub_240BB6130();
    swift_release();
  }
  sub_240BB4630();
  swift_release();

  return swift_deallocClassInstance();
}

void sub_240AE3EE0()
{
}

uint64_t sub_240AE3F10()
{
  return type metadata accessor for AFibBurdenChartSection();
}

uint64_t sub_240AE3F18()
{
  uint64_t v0 = sub_240BB4220();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB41F0();
  uint64_t v4 = sub_240BB4190();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_240AE3FF0()
{
  return sub_240BB5500();
}

void *sub_240AE4050()
{
  uint64_t v1 = *(void **)(v0 + 8);
  id v2 = v1;
  return v1;
}

void *sub_240AE4078()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

uint64_t sub_240AE40A0(void *a1, uint64_t a2)
{
  return sub_240AE40AC(a1, a2, *v2, v2[1], v2[2]);
}

uint64_t sub_240AE40AC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v23[0] = a2;
  uint64_t v9 = sub_240BB2EE0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(self, sel_hk_gregorianCalendarWithLocalTimeZone, v23[0]);
  sub_240BB2E50();

  sub_240BB2DD0();
  id v14 = objc_allocWithZone(MEMORY[0x263F466D8]);
  uint64_t v15 = (void *)sub_240BB2E30();
  uint64_t v16 = (void *)sub_240BB6DA0();
  id v17 = objc_msgSend(v14, sel_initWithCalendar_queryIdentifier_, v15, v16);

  objc_msgSend(a1, sel_setSleepDataSourceProvider_, v17);
  id v18 = objc_msgSend(a1, sel_healthStore);
  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F761B0]), sel_initWithHealthStore_, v18);

  objc_msgSend(a1, sel_setSleepChartFormatter_, v19);
  id v20 = objc_msgSend(a1, sel_healthStore);
  sub_240BB4DD0();
  swift_allocObject();
  objc_msgSend(a1, sel_setAddDataViewControllerProvider_, sub_240BB4DC0());
  swift_release();
  v23[1] = a3;
  v23[2] = a4;
  v23[3] = a5;
  sub_240AE47D4();
  uint64_t v21 = sub_240BB4970();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v21;
}

uint64_t sub_240AE4334()
{
  return sub_240BB3E70();
}

unint64_t sub_240AE4368()
{
  return 0xD000000000000013;
}

uint64_t sub_240AE4384()
{
  return sub_240BB7220();
}

uint64_t sub_240AE43BC()
{
  return sub_240AE4728(&qword_268CA0478, (void (*)(uint64_t))type metadata accessor for AFibBurdenChartSection);
}

void *initializeBufferWithCopyOfBuffer for AFibBurdenChartItem(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  id v6 = v3;
  id v7 = v4;
  id v8 = v5;
  return a1;
}

void destroy for AFibBurdenChartItem(uint64_t a1)
{
  id v2 = *(void **)(a1 + 16);
}

uint64_t assignWithCopy for AFibBurdenChartItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a1 + 8);
  id v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  uint64_t v10 = *(void **)(a1 + 16);
  uint64_t v11 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v11;
  id v12 = v11;

  return a1;
}

uint64_t assignWithTake for AFibBurdenChartItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for AFibBurdenChartItem()
{
  return &type metadata for AFibBurdenChartItem;
}

unint64_t sub_240AE455C()
{
  unint64_t result = qword_268CA0480;
  if (!qword_268CA0480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0480);
  }
  return result;
}

uint64_t sub_240AE45B0()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240AE45E8()
{
  uint64_t v1 = sub_240BB44D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_240AE46B4(unsigned __int8 *a1)
{
  uint64_t v3 = *(void *)(sub_240BB44D0() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_240AE3CEC(a1, v4, v5);
}

uint64_t sub_240AE4728(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240AE4770(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_240AE47D4()
{
  unint64_t result = qword_268CA0488;
  if (!qword_268CA0488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0488);
  }
  return result;
}

id sub_240AE482C()
{
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_240BB2980();

  uint64_t v4 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  sub_240BB2980();

  uint64_t v6 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for CardioFitnessOnboardingAboutHealthDetailsViewController();
  id v7 = objc_msgSendSuper2(&v9, sel_initWithTitle_detailText_icon_contentLayout_, v4, v6, 0, 2, 0xE000000000000000);

  return v7;
}

void sub_240AE49D4()
{
  id v57 = v0;
  v63.receiver = v0;
  v63.super_class = (Class)type metadata accessor for CardioFitnessOnboardingAboutHealthDetailsViewController();
  objc_msgSendSuper2(&v63, sel_viewDidLoad);
  sub_240A34E00();
  unint64_t v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = xmmword_240BBCBA0;
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v4 = sub_240BB2980();
  uint64_t v6 = v5;

  id v7 = objc_msgSend(v2, (SEL)&selRef_setModalPresentationStyle_ + 5, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v8 = sub_240BB2980();
  uint64_t v10 = v9;

  uint64_t v11 = (objc_class *)type metadata accessor for TitleDetailsView();
  id v12 = (char *)objc_allocWithZone(v11);
  *(void *)&v12[OBJC_IVAR____TtC5Heart16TitleDetailsView____lazy_storage___titleLabel] = 0;
  *(void *)&v12[OBJC_IVAR____TtC5Heart16TitleDetailsView____lazy_storage___detailLabel] = 0;
  id v13 = (uint64_t *)&v12[OBJC_IVAR____TtC5Heart16TitleDetailsView_title];
  *id v13 = v4;
  v13[1] = v6;
  id v14 = (uint64_t *)&v12[OBJC_IVAR____TtC5Heart16TitleDetailsView_details];
  *id v14 = v8;
  v14[1] = v10;
  v62.receiver = v12;
  v62.super_class = v11;
  id v15 = objc_msgSendSuper2(&v62, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0, 0xE000000000000000);
  sub_240A515E8();

  *(void *)(v58 + 32) = v15;
  id v16 = objc_msgSend(v2, (SEL)&selRef_setModalPresentationStyle_ + 5, ObjCClassFromMetadata);
  uint64_t v17 = sub_240BB2980();
  uint64_t v19 = v18;

  id v20 = objc_msgSend(v2, (SEL)&selRef_setModalPresentationStyle_ + 5, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v21 = sub_240BB2980();
  uint64_t v23 = v22;

  uint64_t v24 = (char *)objc_allocWithZone(v11);
  *(void *)&v24[OBJC_IVAR____TtC5Heart16TitleDetailsView____lazy_storage___titleLabel] = 0;
  *(void *)&v24[OBJC_IVAR____TtC5Heart16TitleDetailsView____lazy_storage___detailLabel] = 0;
  uint64_t v25 = (uint64_t *)&v24[OBJC_IVAR____TtC5Heart16TitleDetailsView_title];
  *uint64_t v25 = v17;
  v25[1] = v19;
  uint64_t v26 = (uint64_t *)&v24[OBJC_IVAR____TtC5Heart16TitleDetailsView_details];
  *uint64_t v26 = v21;
  v26[1] = v23;
  v61.receiver = v24;
  v61.super_class = v11;
  id v27 = objc_msgSendSuper2(&v61, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0, 0xE000000000000000);
  sub_240A515E8();

  *(void *)(v58 + 40) = v27;
  id v28 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v29 = sub_240BB2980();
  uint64_t v31 = v30;

  id v32 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v33 = sub_240BB2980();
  uint64_t v35 = v34;

  uint64_t v36 = (char *)objc_allocWithZone(v11);
  *(void *)&v36[OBJC_IVAR____TtC5Heart16TitleDetailsView____lazy_storage___titleLabel] = 0;
  *(void *)&v36[OBJC_IVAR____TtC5Heart16TitleDetailsView____lazy_storage___detailLabel] = 0;
  uint64_t v37 = (uint64_t *)&v36[OBJC_IVAR____TtC5Heart16TitleDetailsView_title];
  *uint64_t v37 = v29;
  v37[1] = v31;
  uint64_t v38 = (uint64_t *)&v36[OBJC_IVAR____TtC5Heart16TitleDetailsView_details];
  *uint64_t v38 = v33;
  v38[1] = v35;
  v60.receiver = v36;
  v60.super_class = v11;
  id v39 = objc_msgSendSuper2(&v60, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0, 0xE000000000000000);
  sub_240A515E8();

  *(void *)(v58 + 48) = v39;
  id v40 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v41 = sub_240BB2980();
  uint64_t v43 = v42;

  id v44 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v45 = sub_240BB2980();
  uint64_t v47 = v46;

  long long v48 = (char *)objc_allocWithZone(v11);
  *(void *)&v48[OBJC_IVAR____TtC5Heart16TitleDetailsView____lazy_storage___titleLabel] = 0;
  *(void *)&v48[OBJC_IVAR____TtC5Heart16TitleDetailsView____lazy_storage___detailLabel] = 0;
  long long v49 = (uint64_t *)&v48[OBJC_IVAR____TtC5Heart16TitleDetailsView_title];
  *long long v49 = v41;
  v49[1] = v43;
  v50 = (uint64_t *)&v48[OBJC_IVAR____TtC5Heart16TitleDetailsView_details];
  uint64_t *v50 = v45;
  v50[1] = v47;
  v59.receiver = v48;
  v59.super_class = v11;
  id v51 = objc_msgSendSuper2(&v59, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0, 0xE000000000000000);
  sub_240A515E8();

  *(void *)(v58 + 56) = v51;
  sub_240BB6F30();
  if (v58 >> 62)
  {
    sub_240AC4E1C();
    sub_240BB4850();
    sub_240BB78F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_240BB4850();
    sub_240BB7AF0();
    sub_240AC4E1C();
  }
  swift_bridgeObjectRelease();
  id v52 = objc_allocWithZone(MEMORY[0x263F82BF8]);
  sub_240AC4E1C();
  v53 = (void *)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  id v54 = objc_msgSend(v52, sel_initWithArrangedSubviews_, v53);

  objc_msgSend(v54, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v54, sel_setAxis_, 1);
  objc_msgSend(v54, sel_setAlignment_, 0);
  objc_msgSend(v54, sel_setDistribution_, 3);
  objc_msgSend(v54, sel_setSpacing_, 20.0);
  id v55 = objc_msgSend(v57, sel_contentView);
  objc_msgSend(v55, sel_addSubview_, v54);

  id v56 = objc_msgSend(v57, sel_contentView);
  objc_msgSend(v54, sel_hk_alignConstraintsWithView_, v56);
}

id sub_240AE521C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardioFitnessOnboardingAboutHealthDetailsViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CardioFitnessOnboardingAboutHealthDetailsViewController()
{
  return self;
}

unint64_t sub_240AE5328(void *a1)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(a1, sel_healthDataSource);
  if (!v4)
  {
    sub_240BB78D0();
    __break(1u);
    JUMPOUT(0x240AE5B48);
  }
  uint64_t v5 = v4;
  unint64_t v6 = sub_240AB7F9C(MEMORY[0x263F8EE78]);
  unint64_t v64 = v6;
  unsigned int v7 = *(unsigned __int8 *)(v2 + 24);
  if (*(unsigned char *)(v2 + 24))
  {
    if (v7 == 1)
    {
      unint64_t v8 = 0xE600000000000000;
      unint64_t v9 = 0x6E6F69676572;
    }
    else
    {
      unint64_t v8 = 0xE300000000000000;
      unint64_t v9 = 6645601;
      switch(*(void *)(v2 + 16))
      {
        case 1:
          unint64_t v8 = 0xEC00000066664F65;
          unint64_t v9 = 0x7461527472616568;
          break;
        case 2:
          unint64_t v9 = 0xD000000000000011;
          uint64_t v10 = "cannotCheckRegion";
          goto LABEL_10;
        case 3:
          unint64_t v8 = 0xEF7369736F6E6761;
          unint64_t v9 = 0x6944626946416F6ELL;
          break;
        case 4:
          unint64_t v9 = 0xD000000000000014;
          uint64_t v10 = "errorEnablingFeature";
LABEL_10:
          unint64_t v8 = (unint64_t)(v10 - 32) | 0x8000000000000000;
          break;
        case 5:
          unint64_t v8 = 0x8000000240BCEC30;
          unint64_t v9 = 0xD000000000000013;
          break;
        case 6:
          unint64_t v8 = 0xEE0066664F746365;
          unint64_t v9 = 0x7465447473697277;
          break;
        default:
          break;
      }
    }
  }
  else
  {
    unint64_t v8 = 0xEB00000000656C62;
    unint64_t v9 = 0x616C696176616E75;
  }
  unint64_t v11 = MEMORY[0x263F8D310];
  unint64_t v63 = MEMORY[0x263F8D310];
  *(void *)&long long v62 = v9;
  *((void *)&v62 + 1) = v8;
  sub_240A7B714(&v62, v61);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_240B6A138(v61, 0x616552726F727265, 0xEB000000006E6F73, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  unint64_t v13 = 0xE500000000000000;
  unint64_t v14 = 0x7472617473;
  switch(*(unsigned char *)(v2 + 25))
  {
    case 1:
      unint64_t v14 = 0x7472617453746567;
      unint64_t v13 = 0xEA00000000006465;
      break;
    case 2:
      unint64_t v13 = 0xEA0000000000736BLL;
      unint64_t v14 = 0x726F577449776F68;
      break;
    case 3:
      unint64_t v14 = 0xD000000000000010;
      unint64_t v13 = 0x8000000240BC9D90;
      break;
    case 4:
      unint64_t v13 = 0xEB0000000073726FLL;
      unint64_t v14 = 0x746361466566696CLL;
      break;
    case 5:
      unint64_t v13 = 0x8000000240BC9D70;
      unint64_t v14 = 0xD000000000000013;
      break;
    case 6:
      unint64_t v13 = 0xEA00000000006E6FLL;
      unint64_t v14 = 0x6974656C706D6F63;
      break;
    default:
      break;
  }
  unint64_t v63 = v11;
  *(void *)&long long v62 = v14;
  *((void *)&v62 + 1) = v13;
  sub_240A7B714(&v62, v61);
  char v15 = swift_isUniquelyReferenced_nonNull_native();
  sub_240B6A138(v61, 1885697139, 0xE400000000000000, v15);
  unint64_t v64 = v6;
  swift_bridgeObjectRelease();
  id v16 = *(void **)(v2 + 32);
  if (v16)
  {
    id v17 = objc_msgSend(v16, sel_ISOCode);
    uint64_t v18 = sub_240BB6DE0();
    uint64_t v20 = v19;

    unint64_t v63 = v11;
    *(void *)&long long v62 = v18;
    *((void *)&v62 + 1) = v20;
    sub_240A7B714(&v62, v61);
    char v21 = swift_isUniquelyReferenced_nonNull_native();
    sub_240B6A138(v61, 0x437972746E756F63, 0xEB0000000065646FLL, v21);
    unint64_t v64 = v6;
    swift_bridgeObjectRelease();
    if (v7 <= 1)
    {
LABEL_23:
      id v22 = (id)HKAnalyticsErrorDetailsForFeatureAvailabilityOnboardingIneligibilityReasons();
      uint64_t v23 = sub_240BB6DE0();
      uint64_t v25 = v24;

      unint64_t v63 = v11;
      *(void *)&long long v62 = v23;
      *((void *)&v62 + 1) = v25;
      sub_240A7B714(&v62, v61);
      unint64_t v26 = v64;
      char v27 = swift_isUniquelyReferenced_nonNull_native();
      sub_240B6A138(v61, 0x746544726F727265, 0xEB000000006C6961, v27);
      unint64_t v64 = v26;
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
  }
  else
  {
    sub_240B69E5C(0x437972746E756F63, 0xEB0000000065646FLL, &v62);
    sub_240A7B53C((uint64_t)&v62);
    if (v7 <= 1) {
      goto LABEL_23;
    }
  }
  sub_240B69E5C(0x746544726F727265, 0xEB000000006C6961, &v62);
  sub_240A7B53C((uint64_t)&v62);
LABEL_26:
  uint64_t v28 = sub_240BB6DE0();
  uint64_t v30 = v29;
  id v31 = objc_msgSend(a1, sel_environmentDataSource);
  id v32 = objc_msgSend(v31, sel_activePairedDeviceProductType);

  if (v32)
  {
    uint64_t v33 = sub_240BB6DE0();
    uint64_t v35 = v34;

    unint64_t v63 = v11;
    *(void *)&long long v62 = v33;
    *((void *)&v62 + 1) = v35;
    sub_240A7B714(&v62, v61);
    unint64_t v36 = v64;
    char v37 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v64 = 0x8000000000000000;
    sub_240B6A138(v61, v28, v30, v37);
    unint64_t v64 = v36;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_240B69E5C(v28, v30, &v62);
    swift_bridgeObjectRelease();
    sub_240A7B53C((uint64_t)&v62);
  }
  uint64_t v38 = sub_240BB6DE0();
  uint64_t v40 = v39;
  if (qword_26AFD7BF0 != -1) {
    swift_once();
  }
  uint64_t v41 = sub_240BB5990();
  uint64_t v42 = sub_240A395FC(v41, (uint64_t)qword_26AFDEB80);
  uint64_t v43 = sub_240B6A2F8(v5, v42);
  unint64_t v63 = v11;
  *(void *)&long long v62 = v43;
  *((void *)&v62 + 1) = v44;
  sub_240A7B714(&v62, v61);
  unint64_t v45 = v64;
  char v46 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v64 = 0x8000000000000000;
  sub_240B6A138(v61, v38, v40, v46);
  unint64_t v64 = v45;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v47 = sub_240BB6DE0();
  uint64_t v49 = v48;
  id v50 = objc_msgSend(a1, sel_environmentDataSource);
  id v51 = sub_240B6A380(v5, v50, v42);

  unint64_t v63 = sub_240A576E0();
  *(void *)&long long v62 = v51;
  sub_240A7B714(&v62, v61);
  unint64_t v52 = v64;
  char v53 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v64 = 0x8000000000000000;
  sub_240B6A138(v61, v47, v49, v53);
  unint64_t v64 = v52;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v54 = (id)HKHRAFibBurdenAnalyticsPropertyValueForVersion();
  uint64_t v55 = sub_240BB6DE0();
  uint64_t v57 = v56;

  unint64_t v63 = v11;
  *(void *)&long long v62 = v55;
  *((void *)&v62 + 1) = v57;
  sub_240A7B714(&v62, v61);
  unint64_t v58 = v64;
  char v59 = swift_isUniquelyReferenced_nonNull_native();
  sub_240B6A138(v61, 0x5665727574616566, 0xEE006E6F69737265, v59);
  sub_240BB50A0();
  swift_bridgeObjectRelease();
  return v58;
}

uint64_t sub_240AE5C1C()
{
  sub_240BB50A0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AFibBurdenOnboardingErrorAnalyticsEvent()
{
  return self;
}

uint64_t type metadata accessor for LowHeartRateNotificationsFeatureStatusActionHandler()
{
  uint64_t result = qword_26AFD7C00;
  if (!qword_26AFD7C00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240AE5CC4()
{
  return swift_initClassMetadata2();
}

void sub_240AE5D04()
{
  uint64_t ObjectType = swift_getObjectType();
  sub_240A5C00C(0);
  MEMORY[0x270FA5388](v1 - 8);
  id v51 = (char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_240BB3660();
  uint64_t v56 = *(void *)(v3 - 8);
  uint64_t v57 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_240BB3B20();
  uint64_t v6 = *(void *)(v54 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v54);
  char v53 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v55 = (char *)&v50 - v9;
  uint64_t v10 = sub_240BB4EC0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB5250();
  sub_240BB50E0();
  unint64_t v14 = (void (*)(uint64_t))MEMORY[0x263F44600];
  sub_240AE674C(&qword_268C9EFA0, MEMORY[0x263F44600]);
  sub_240AE674C(&qword_268C9FAB0, v14);
  sub_240BB4EB0();
  char v15 = *(void (**)(char *, uint64_t))(v11 + 8);
  v15(v13, v10);
  if (!v58[0])
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_240BB5990();
    sub_240A395FC(v32, (uint64_t)qword_26AFDEC70);
    uint64_t v28 = sub_240BB5970();
    os_log_type_t v33 = sub_240BB7190();
    if (os_log_type_enabled(v28, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      v58[0] = v35;
      *(_DWORD *)uint64_t v34 = 136315138;
      uint64_t v36 = sub_240BB7C80();
      v58[5] = sub_240A38940(v36, v37, v58);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v28, v33, "[%s] Could not access action handler user data!", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v35, -1, -1);
      MEMORY[0x24560B930](v34, -1, -1);
    }
LABEL_15:

    return;
  }
  uint64_t v50 = ObjectType;
  uint64_t v52 = v6;
  sub_240BB5250();
  sub_240BB4E90();
  v15(v13, v10);
  sub_240A3466C(v58, v58[3]);
  id v16 = (void *)sub_240BB4E10();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v58);
  sub_240BB5250();
  id v17 = (void *)sub_240BB4EA0();
  v15(v13, v10);
  sub_240BB5250();
  uint64_t v18 = v55;
  sub_240BB36F0();
  v15(v13, v10);
  sub_240BB50B0();
  uint64_t v20 = v56;
  uint64_t v19 = v57;
  int v21 = (*(uint64_t (**)(char *, uint64_t))(v56 + 88))(v5, v57);
  id v22 = v18;
  if (v21 == *MEMORY[0x263F435C8])
  {
    uint64_t v23 = v16;
    uint64_t v24 = v52;
    uint64_t v25 = (uint64_t)v53;
    uint64_t v26 = v54;
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v53, v22, v54);
    id v27 = objc_allocWithZone((Class)type metadata accessor for BradycardiaSettingsViewController(0));
    uint64_t v28 = v23;
    uint64_t v29 = sub_240B5C900(v28, v25);

    id v30 = objc_msgSend(v17, sel_navigationController);
    if (v30)
    {
      id v31 = v30;
      objc_msgSend(v30, sel_pushViewController_animated_, v29, 1);

      swift_release();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v26);
      return;
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v26);

    swift_release();
    goto LABEL_15;
  }
  uint64_t v38 = v16;
  uint64_t v39 = v52;
  if (v21 == *MEMORY[0x263F435D0])
  {
    uint64_t v40 = (uint64_t)v53;
    uint64_t v41 = v54;
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v53, v22, v54);
    id v42 = objc_allocWithZone((Class)type metadata accessor for BradycardiaSettingsViewController(0));
    id v43 = v38;
    uint64_t v44 = sub_240B5C900(v43, v40);

    sub_240A57660();
    unint64_t v45 = v44;
    sub_240BB4E50();

    id v46 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v45);
    objc_msgSend(v17, sel_presentViewController_animated_completion_, v46, 1, 0);

    swift_release();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v22, v41);
  }
  else if (v21 == *MEMORY[0x263F435C0] || v21 == *MEMORY[0x263F435B8])
  {
    uint64_t v47 = (uint64_t)v51;
    sub_240BB50D0();
    uint64_t v48 = sub_240BB2B20();
    uint64_t v49 = *(void *)(v48 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48) == 1)
    {
      (*(void (**)(char *, uint64_t))(v52 + 8))(v18, v54);
      swift_release();

      sub_240A64C2C(v47);
    }
    else
    {
      sub_240BB2AE0();

      swift_release();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v18, v54);
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v47, v48);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v52 + 8))(v18, v54);
    swift_release();

    (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v19);
  }
}

uint64_t sub_240AE6578(uint64_t a1)
{
  uint64_t v3 = sub_240BB4EC0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_allocWithZone(v1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t v8 = sub_240BB5260();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v8;
}

id sub_240AE6678()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LowHeartRateNotificationsFeatureStatusActionHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240AE66B0()
{
  return type metadata accessor for LowHeartRateNotificationsFeatureStatusActionHandler();
}

uint64_t sub_240AE66B8()
{
  return sub_240AE674C((unint64_t *)&unk_26AFD7BB0, MEMORY[0x263F445D8]);
}

uint64_t sub_240AE6700()
{
  return sub_240AE674C(&qword_26AFD7BF8, (void (*)(uint64_t))type metadata accessor for LowHeartRateNotificationsFeatureStatusActionHandler);
}

uint64_t sub_240AE674C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_240AE6794()
{
  return sub_240AE692C(&OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView____lazy_storage___titleLabel, (uint64_t (*)(uint64_t))sub_240AE67B4);
}

id sub_240AE67B4()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_240BB4850();
  uint64_t v1 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setText_, v1);

  id v2 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  id v3 = objc_msgSend(self, sel__preferredFontForTextStyle_weight_, *MEMORY[0x263F83570], *MEMORY[0x263F81840]);
  objc_msgSend(v0, sel_setFont_, v3);

  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  return v0;
}

id sub_240AE690C()
{
  return sub_240AE692C(&OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView____lazy_storage___detailLabel, (uint64_t (*)(uint64_t))sub_240AE6990);
}

id sub_240AE692C(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v6 = (void *)a2(v2);
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_240AE6990(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v3 = a1 + OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView_details;
  if (*(void *)(a1 + OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView_details + 8))
  {
    sub_240BB4850();
    uint64_t v4 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
  }
  objc_msgSend(v2, sel_setText_, v4);

  objc_msgSend(v2, sel_setHidden_, *(void *)(v3 + 8) == 0);
  id v5 = objc_msgSend(self, sel_secondaryLabelColor);
  objc_msgSend(v2, sel_setTextColor_, v5);

  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  id v6 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x263F835F0]);
  objc_msgSend(v2, sel_setFont_, v6);

  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  return v2;
}

uint64_t sub_240AE6B08()
{
  uint64_t v1 = OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView____lazy_storage___noDetailsConstraints;
  if (*(void *)&v0[OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView____lazy_storage___noDetailsConstraints])
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView____lazy_storage___noDetailsConstraints];
  }
  else
  {
    uint64_t v3 = v0;
    sub_240A34E00();
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_240BBAD40;
    id v5 = sub_240AE6794();
    id v6 = objc_msgSend(v5, sel_bottomAnchor);

    id v7 = objc_msgSend(v3, sel_bottomAnchor);
    id v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v7);

    *(void *)(v4 + 32) = v8;
    sub_240BB6F30();
    uint64_t v2 = v4;
    *(void *)&v3[v1] = v4;
    sub_240BB4850();
    swift_bridgeObjectRelease();
  }
  sub_240BB4850();
  return v2;
}

uint64_t sub_240AE6C14()
{
  uint64_t v1 = OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView____lazy_storage___detailsConstraints;
  if (*(void *)(v0 + OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView____lazy_storage___detailsConstraints))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView____lazy_storage___detailsConstraints);
  }
  else
  {
    uint64_t v3 = v0;
    sub_240A34E00();
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_240BBAD40;
    id v5 = sub_240AE690C();
    id v6 = objc_msgSend(v5, sel_topAnchor);

    id v7 = sub_240AE6794();
    id v8 = objc_msgSend(v7, sel_bottomAnchor);

    id v9 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v8, 0.0);
    *(void *)(v4 + 32) = v9;
    sub_240BB6F30();
    uint64_t v2 = v4;
    *(void *)(v3 + v1) = v4;
    sub_240BB4850();
    swift_bridgeObjectRelease();
  }
  sub_240BB4850();
  return v2;
}

void sub_240AE6DE0()
{
  uint64_t v1 = v0;
  sub_240A34E00();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_240BBAEF0;
  *(void *)(v2 + 32) = sub_240AE6794();
  *(void *)(v2 + 40) = sub_240AE690C();
  sub_240BB6F30();
  sub_240BB7480();
  swift_bridgeObjectRelease();
  if (*(void *)&v0[OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView_details + 8]) {
    uint64_t v3 = sub_240AE6C14();
  }
  else {
    uint64_t v3 = sub_240AE6B08();
  }
  unint64_t v4 = v3;
  uint64_t v32 = self;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240BBB150;
  id v6 = sub_240AE6794();
  id v7 = objc_msgSend(v6, sel_topAnchor);

  id v8 = objc_msgSend(v1, sel_topAnchor);
  id v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v8);

  *(void *)(v5 + 32) = v9;
  id v10 = sub_240AE6794();
  id v11 = objc_msgSend(v10, sel_leadingAnchor);

  id v12 = objc_msgSend(v1, sel_leadingAnchor);
  id v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_constant_, v12, 0.0);

  *(void *)(v5 + 40) = v13;
  id v14 = sub_240AE6794();
  id v15 = objc_msgSend(v14, sel_trailingAnchor);

  id v16 = objc_msgSend(v1, sel_trailingAnchor);
  id v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_constant_, v16, -0.0);

  *(void *)(v5 + 48) = v17;
  id v18 = sub_240AE690C();
  id v19 = objc_msgSend(v18, sel_leadingAnchor);

  id v20 = sub_240AE6794();
  id v21 = objc_msgSend(v20, sel_leadingAnchor);

  id v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v21);
  *(void *)(v5 + 56) = v22;
  id v23 = sub_240AE690C();
  id v24 = objc_msgSend(v23, sel_trailingAnchor);

  id v25 = sub_240AE6794();
  id v26 = objc_msgSend(v25, sel_trailingAnchor);

  id v27 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v26);
  *(void *)(v5 + 64) = v27;
  id v28 = sub_240AE690C();
  id v29 = objc_msgSend(v28, sel_bottomAnchor);

  id v30 = objc_msgSend(v1, sel_bottomAnchor);
  id v31 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v30);

  *(void *)(v5 + 72) = v31;
  sub_240BB6F30();
  sub_240B85A58(v4);
  sub_240A5D484();
  id v33 = (id)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v32, sel_activateConstraints_, v33);
}

void sub_240AE71D4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v2 = sub_240AE6794();
    sub_240BB4850();
    sub_240BB6E70();
    uint64_t v3 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3);

    id v4 = sub_240AE690C();
    sub_240BB4850();
    sub_240BB6E70();
    id v5 = (id)sub_240BB6DA0();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5);
  }
}

void sub_240AE7310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = (void *)(v4 + OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView_title);
  void *v7 = a1;
  v7[1] = a2;
  sub_240BB4850();
  swift_bridgeObjectRelease();
  id v8 = (void *)(v4 + OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView_details);
  uint64_t v9 = *(void *)(v4 + OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView_details + 8);
  *id v8 = a3;
  v8[1] = a4;
  sub_240BB4850();
  swift_bridgeObjectRelease();
  id v10 = sub_240AE6794();
  id v11 = (void *)sub_240BB6DA0();
  objc_msgSend(v10, sel_setText_, v11);

  id v12 = sub_240AE690C();
  if (a4) {
    id v13 = (void *)sub_240BB6DA0();
  }
  else {
    id v13 = 0;
  }
  objc_msgSend(v12, sel_setText_, v13);

  id v14 = sub_240AE690C();
  objc_msgSend(v14, sel_setHidden_, a4 == 0);

  if (v9)
  {
    if (a4) {
      return;
    }
    id v15 = self;
    sub_240AE6C14();
    sub_240A5D484();
    id v16 = (void *)sub_240BB6EF0();
    swift_bridgeObjectRelease();
    objc_msgSend(v15, sel_deactivateConstraints_, v16);

    sub_240AE6B08();
  }
  else
  {
    if (!a4) {
      return;
    }
    id v15 = self;
    sub_240AE6B08();
    sub_240A5D484();
    id v17 = (void *)sub_240BB6EF0();
    swift_bridgeObjectRelease();
    objc_msgSend(v15, sel_deactivateConstraints_, v17);

    sub_240AE6C14();
  }
  id v18 = (id)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_activateConstraints_, v18);
}

id sub_240AE7584()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TitleOptionalDetailsView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for TitleOptionalDetailsView()
{
  return self;
}

void sub_240AE7670(uint64_t a1, uint64_t a2)
{
}

uint64_t _s22AFibBurdenPDFComponentVwxx(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40))
  {
    return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 16);
  }
  return result;
}

uint64_t _s22AFibBurdenPDFComponentVwcp(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  id v5 = a2 + 2;
  uint64_t v6 = a2[5];
  sub_240BB4850();
  if (v6)
  {
    uint64_t v7 = a2[6];
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = v7;
    (**(void (***)(uint64_t, void *, uint64_t))(v6 - 8))(a1 + 16, v5, v6);
  }
  else
  {
    long long v8 = *((_OWORD *)v5 + 1);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 32) = v8;
    *(void *)(a1 + 48) = v5[4];
  }
  return a1;
}

uint64_t _s22AFibBurdenPDFComponentVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_240BB4850();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  if (!*(void *)(a1 + 40))
  {
    if (v4)
    {
      *(void *)(a1 + 40) = v4;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
      return a1;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 16);
    long long v6 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = v6;
    return a1;
  }
  if (!v4)
  {
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 16);
    goto LABEL_7;
  }
  sub_240A51F9C((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  return a1;
}

uint64_t _s22AFibBurdenPDFComponentVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40)) {
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 16);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t _s22AFibBurdenPDFComponentVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s22AFibBurdenPDFComponentVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s22AFibBurdenPDFComponentVMa()
{
  return &_s22AFibBurdenPDFComponentVN;
}

uint64_t sub_240AE7964(uint64_t a1)
{
  sub_240A3FB28();
  uint64_t v56 = v2;
  uint64_t v55 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v54 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AE8760();
  uint64_t v60 = v4;
  uint64_t v59 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v58 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AE895C();
  uint64_t v7 = v6;
  uint64_t v62 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  objc_super v61 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240BB4C70();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v57 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v53 - v14;
  MEMORY[0x270FA5388](v13);
  id v17 = (char *)&v53 - v16;
  sub_240BB4C60();
  uint64_t v18 = sub_240BB4100();
  uint64_t v20 = v19;
  uint64_t v21 = sub_240BB4100();
  uint64_t v63 = v7;
  if (v18 == v21 && v20 == v22) {
    char v23 = 1;
  }
  else {
    char v23 = sub_240BB7AE0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v24 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v24(v17, a1, v9);
  if (v23) {
    goto LABEL_9;
  }
  char v53 = v24;
  sub_240BB4C60();
  uint64_t v25 = sub_240BB4100();
  uint64_t v27 = v26;
  if (v25 != sub_240BB4100() || v27 != v28)
  {
    char v31 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v32 = *(void (**)(char *, uint64_t))(v10 + 8);
    v32(v17, v9);
    if (v31) {
      return 0;
    }
    sub_240AE8A24((uint64_t)v64 + 16, (uint64_t)&v69);
    v53(v15, a1, v9);
    if (v70)
    {
      v32(v15, v9);
      sub_240A37388(&v69, (uint64_t)&v65);
      goto LABEL_21;
    }
    unint64_t v64 = v32;
    id v33 = (void *)sub_240BB4C30();
    id v34 = objc_msgSend(v33, sel_profileIdentifier);
    id v35 = objc_msgSend(v34, sel_type);

    if (v35 == (id)1)
    {
      id v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3D0]), sel_initWithFeatureIdentifier_healthStore_, *MEMORY[0x263F09728], v33);

      if (v36)
      {
        *((void *)&v66 + 1) = sub_240A35CF0();
        uint64_t v67 = MEMORY[0x263F44B48];
        *(void *)&long long v65 = v36;
        v64(v15, v9);
        goto LABEL_20;
      }
    }
    else
    {
    }
    v64(v15, v9);
    uint64_t v67 = 0;
    long long v65 = 0u;
    long long v66 = 0u;
LABEL_20:
    sub_240AE8B1C((uint64_t)&v69);
    if (!*((void *)&v66 + 1))
    {
      sub_240AE8B1C((uint64_t)&v65);
      *(void *)&long long v65 = 0;
      *((void *)&v65 + 1) = 0xE000000000000000;
      sub_240BB77C0();
      sub_240BB6E70();
      v71[0] = &_s22AFibBurdenPDFComponentVN;
      sub_240AE8BA4();
      sub_240BB6E10();
      sub_240BB6E70();
      swift_bridgeObjectRelease();
      sub_240BB6E70();
      long long v48 = v65;
      if (qword_26AFD7158 != -1) {
        swift_once();
      }
      uint64_t v49 = v56;
      uint64_t v50 = sub_240A395FC(v56, (uint64_t)qword_26AFDEB68);
      uint64_t v51 = v55;
      uint64_t v52 = v54;
      (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v54, v50, v49);
      *(_OWORD *)(swift_allocObject() + 16) = v48;
      *(void *)&long long v65 = 0;
      sub_240BB5720();
      swift_release();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v49);
      return 0;
    }
LABEL_21:
    sub_240A37388(&v65, (uint64_t)v71);
    sub_240A1E37C((uint64_t)v71, (uint64_t)&v65);
    id v68 = (id)*MEMORY[0x263F47588];
    id v37 = v68;
    *(void *)&long long v69 = sub_240B22FD8();
    sub_240AE8C18(0, &qword_268CA0560, MEMORY[0x263F8E0F8]);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_240BB97E0;
    *(unsigned char *)(v38 + 32) = sub_240B22504() & 1;
    sub_240A3B664();
    unint64_t v64 = v39;
    sub_240A20F80(&qword_26AFD7528, (void (*)(uint64_t))sub_240A3B664);
    uint64_t v40 = v58;
    sub_240BB63E0();
    swift_release();
    swift_bridgeObjectRelease();
    sub_240A20F80(&qword_268CA0568, (void (*)(uint64_t))sub_240AE8760);
    uint64_t v41 = v60;
    uint64_t v42 = sub_240BB62E0();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v40, v41);
    *(void *)&long long v69 = v42;
    id v43 = v57;
    v53(v57, a1, v9);
    unint64_t v44 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v45 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v45 + v44, v43, v9);
    sub_240AE8EC0(0, &qword_268CA0550, MEMORY[0x263F8D488]);
    id v46 = v61;
    sub_240BB6330();
    swift_release();
    swift_release();
    sub_240A20F80((unint64_t *)&qword_268CA0570, (void (*)(uint64_t))sub_240AE895C);
    uint64_t v47 = v63;
    sub_240BB62C0();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v46, v47);
    sub_240BB4CE0();
    sub_240BB4140();
    swift_release();
    sub_240AE8D78();
    sub_240A20F80(&qword_268CA0580, (void (*)(uint64_t))sub_240AE8D78);
    uint64_t v29 = sub_240BB4170();
    swift_release();
    sub_240AE8DD8((uint64_t)&v65);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v71);
    sub_240A20F80(&qword_268CA0588, (void (*)(uint64_t))sub_240AE8E2C);
    return v29;
  }
  swift_bridgeObjectRelease_n();
LABEL_9:
  (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
  return 0;
}

uint64_t sub_240AE8394@<X0>(unsigned char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_240BB2D40();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 1)
  {
    uint64_t v9 = sub_240BB4C30();
    uint64_t v19 = a2;
    uint64_t v10 = (void *)v9;
    sub_240BB5420();
    uint64_t v11 = sub_240BB3E70();
    uint64_t v13 = v12;
    sub_240AE8EC0(0, &qword_268CA0B10, MEMORY[0x263F8E0F8]);
    sub_240BB44D0();
    uint64_t v14 = swift_allocObject();
    long long v18 = xmmword_240BB97E0;
    *(_OWORD *)(v14 + 16) = xmmword_240BB97E0;
    sub_240AE8AB4(0, (unint64_t *)&qword_268C9E840, (unint64_t *)&qword_268CA0B00, MEMORY[0x263F437A0], MEMORY[0x263F8E0F8]);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = v18;
    *(void *)(v15 + 56) = &type metadata for AFibBurdenPDFItem;
    *(void *)(v15 + 64) = sub_240AE8F20();
    uint64_t v16 = (void *)swift_allocObject();
    *(void *)(v15 + 32) = v16;
    v16[2] = v11;
    v16[3] = v13;
    v16[4] = 0xD000000000000011;
    v16[5] = 0x8000000240BCEE20;
    v16[6] = v10;
    sub_240BB4850();
    id v17 = v10;
    sub_240BB2D30();
    sub_240BB2D00();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    sub_240BB44C0();

    a2 = v19;
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
  }
  *a2 = v14;
  return result;
}

uint64_t sub_240AE8650()
{
  return sub_240BB7220();
}

uint64_t sub_240AE8688()
{
  uint64_t v0 = sub_240BB4720();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB4700();
  uint64_t v4 = sub_240BB4710();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void sub_240AE8760()
{
  if (!qword_268CA0520)
  {
    sub_240AE884C();
    sub_240A3B664();
    sub_240A20F80(&qword_268CA0540, (void (*)(uint64_t))sub_240AE884C);
    sub_240A20F80(&qword_26AFD7528, (void (*)(uint64_t))sub_240A3B664);
    unint64_t v0 = sub_240BB5FA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA0520);
    }
  }
}

void sub_240AE884C()
{
  if (!qword_268CA0528)
  {
    sub_240AE8C18(255, &qword_268CA0530, MEMORY[0x263F8D488]);
    sub_240AE88E8();
    unint64_t v0 = sub_240BB60B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA0528);
    }
  }
}

unint64_t sub_240AE88E8()
{
  unint64_t result = qword_268CA0538;
  if (!qword_268CA0538)
  {
    sub_240AE8C18(255, &qword_268CA0530, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0538);
  }
  return result;
}

void sub_240AE895C()
{
  if (!qword_268CA0548)
  {
    sub_240A3B664();
    sub_240AE8EC0(255, &qword_268CA0550, MEMORY[0x263F8D488]);
    sub_240A20F80(&qword_26AFD7528, (void (*)(uint64_t))sub_240A3B664);
    unint64_t v0 = sub_240BB6010();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA0548);
    }
  }
}

uint64_t sub_240AE8A24(uint64_t a1, uint64_t a2)
{
  sub_240AE8AB4(0, (unint64_t *)&qword_26AFD7BD8, &qword_26AFD7BD0, MEMORY[0x263F449A0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_240AE8AB4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_240A39BC8(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_240AE8B1C(uint64_t a1)
{
  sub_240AE8AB4(0, (unint64_t *)&qword_26AFD7BD8, &qword_26AFD7BD0, MEMORY[0x263F449A0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_240AE8BA4()
{
  unint64_t result = qword_268CA0558;
  if (!qword_268CA0558)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CA0558);
  }
  return result;
}

uint64_t sub_240AE8BE0()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_240AE8C18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x263F8D4F8]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_240AE8C68()
{
  uint64_t v1 = sub_240BB4C70();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_240AE8CF8@<X0>(unsigned char *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_240BB4C70();

  return sub_240AE8394(a1, a2);
}

void sub_240AE8D78()
{
  if (!qword_268CA0578)
  {
    sub_240BB4CE0();
    unint64_t v0 = sub_240BB3F10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA0578);
    }
  }
}

uint64_t sub_240AE8DD8(uint64_t a1)
{
  return a1;
}

void sub_240AE8E2C()
{
  if (!qword_268CA0590)
  {
    sub_240AE8D78();
    sub_240A20F80(&qword_268CA0580, (void (*)(uint64_t))sub_240AE8D78);
    unint64_t v0 = sub_240BB4320();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA0590);
    }
  }
}

void sub_240AE8EC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_240BB44D0();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_240AE8F20()
{
  unint64_t result = qword_268CA0598;
  if (!qword_268CA0598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0598);
  }
  return result;
}

uint64_t sub_240AE8F74()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_240AE8FBC()
{
  sub_240BB50A0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BloodPressureSampleFormatter()
{
  return self;
}

uint64_t sub_240AE9038(unsigned __int8 *a1, char *a2)
{
  return sub_240B65B34(*a1, *a2);
}

uint64_t sub_240AE9044()
{
  return sub_240B65F74();
}

uint64_t sub_240AE904C()
{
  sub_240BB6E50();

  return swift_bridgeObjectRelease();
}

uint64_t sub_240AE9140()
{
  return sub_240B663F8();
}

uint64_t sub_240AE9148@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_240AEA328();
  *a1 = result;
  return result;
}

void sub_240AE9178(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1701736302;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xED0000656C626173;
      uint64_t v3 = 0x694465746F6D6572;
      goto LABEL_3;
    case 2:
      *a1 = 0x6970784564656573;
      a1[1] = 0xEA00000000007972;
      break;
    case 3:
      *a1 = 0x61476E6F69676572;
      a1[1] = 0xEB00000000646574;
      break;
    case 4:
      *a1 = 0xD000000000000012;
      a1[1] = 0x8000000240BC7C10;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_240AE9248()
{
  return sub_240BB6ED0();
}

uint64_t sub_240AE92A8()
{
  return sub_240BB6EC0();
}

uint64_t sub_240AE92F8()
{
  uint64_t v0 = sub_240BB3210();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_240BB3240();
  sub_240A4C570(v4, qword_26AFDEA70);
  sub_240A395FC(v4, (uint64_t)qword_26AFDEA70);
  sub_240BB30E0();
  sub_240AEAE34(0, (unint64_t *)&qword_26AFD99A0, MEMORY[0x263F45588]);
  uint64_t v5 = sub_240BB3050();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_240BB97E0;
  (*(void (**)(unint64_t, void, uint64_t))(v6 + 104))(v8 + v7, *MEMORY[0x263F45540], v5);
  sub_240A20B04(v8);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if (qword_26AFD7190 != -1) {
    swift_once();
  }
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F45688], v0);
  sub_240BB4850();
  return sub_240BB3230();
}

uint64_t sub_240AE9560()
{
  sub_240AEAE34(0, &qword_26AFD7660, (void (*)(uint64_t))sub_240AEAC20);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240BB97E0;
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
  *(void *)(inited + 32) = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_quantityTypeForIdentifier_, *MEMORY[0x263F09BF8]);
  sub_240BB6F30();
  unint64_t v1 = MEMORY[0x263F8EE78];
  unint64_t v6 = MEMORY[0x263F8EE78];
  uint64_t v2 = *(void **)(inited + 32);
  if (v2)
  {
    id v3 = v2;
    MEMORY[0x24560A190]();
    if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_240BB6F60();
    }
    sub_240BB6F70();
    sub_240BB6F30();
    unint64_t v1 = v6;
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_240B8F7D8(v1);
  uint64_t result = swift_bridgeObjectRelease();
  qword_26AFDEA68 = v4;
  return result;
}

uint64_t sub_240AE96AC()
{
  return 0;
}

uint64_t sub_240AE9770(void *a1)
{
  id v1 = objc_msgSend(a1, sel_unsatisfiedRequirementIdentifiers);
  type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(0);
  uint64_t v2 = sub_240BB6F10();

  int64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_240B0CB94(0, v3, 0);
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = sub_240BB6DE0();
      uint64_t v7 = v6;
      unint64_t v9 = *(void *)(v13 + 16);
      unint64_t v8 = *(void *)(v13 + 24);
      if (v9 >= v8 >> 1) {
        sub_240B0CB94(v8 > 1, v9 + 1, 1);
      }
      ++v4;
      *(void *)(v13 + 16) = v9 + 1;
      uint64_t v10 = v13 + 16 * v9;
      *(void *)(v10 + 32) = v5;
      *(void *)(v10 + 40) = v7;
    }
    while (v3 != v4);
  }
  swift_bridgeObjectRelease();
  sub_240A39CF8(0, &qword_268C9F958, MEMORY[0x263F8D488]);
  sub_240A98D84();
  uint64_t v11 = sub_240BB6D70();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_240AE98F8(void (*a1)(uint64_t))
{
  sub_240BB77C0();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  uint64_t v2 = sub_240BB6E70();
  a1(v2);
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return 0;
}

uint64_t sub_240AE9A00@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_240BB3050();
  uint64_t v37 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3FB28();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (void *)sub_240BB30E0();
  char v15 = sub_240BB30D0();

  if ((v15 & 1) != 0 && (uint64_t v16 = sub_240AEA950(), v17 >> 60 != 15))
  {
    uint64_t v35 = v16;
    uint64_t v36 = a3;
    unint64_t v22 = v17;
    switch(a2)
    {
      case 1:
      case 2:
      case 3:
      case 4:
        char v23 = sub_240BB7AE0();
        swift_bridgeObjectRelease();
        if (v23) {
          goto LABEL_10;
        }
        if (qword_26AFD7158 != -1) {
          swift_once();
        }
        uint64_t v24 = sub_240A395FC(v10, (uint64_t)qword_26AFDEB68);
        (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v24, v10);
        *(unsigned char *)(swift_allocObject() + 16) = a2;
        v38[0] = 0;
        sub_240BB5700();
        swift_release();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        if (qword_26AFD7190 != -1) {
          swift_once();
        }
        sub_240A34DC4(0, (unint64_t *)&qword_26AFD9918);
        uint64_t v25 = sub_240BB7080();
        sub_240A39CF8(0, (unint64_t *)&qword_26AFD7108, MEMORY[0x263F8E0F8]);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_240BB97E0;
        *(void *)(inited + 32) = sub_240BB3320();
        *(void *)(inited + 40) = v27;
        uint64_t v28 = sub_240AFF0F8(inited, v25);
        swift_setDeallocating();
        swift_arrayDestroy();
        type metadata accessor for AFibBurdenRescindedTileViewController();
        sub_240BB30F0();
        (*(void (**)(char *, void, uint64_t))(v37 + 104))(v8, *MEMORY[0x263F45540], v6);
        uint64_t v29 = v35;
        sub_240A3FF84(v35, v22);
        id v30 = a1;
        uint64_t v31 = v36;
        sub_240BB3180();
        sub_240BB4850();
        sub_240BB3190();
        sub_240BB3150();
        uint64_t v32 = (void (*)(void *, void))sub_240BB31A0();
        sub_240AFE834(v28);
        v32(v38, 0);
        sub_240A8B070(v29, v22);
        uint64_t v33 = sub_240BB31D0();
        uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v31, 0, 1, v33);
        break;
      default:
        swift_bridgeObjectRelease();
LABEL_10:
        if (qword_26AFD7158 != -1) {
          swift_once();
        }
        sub_240A395FC(v10, (uint64_t)qword_26AFDEB68);
        v38[0] = 0;
        sub_240BB5700();
        sub_240A8B070(v35, v22);
        uint64_t v18 = sub_240BB31D0();
        uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
        uint64_t v20 = v36;
        return v19(v20, 1, 1, v18);
    }
  }
  else
  {
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    sub_240A395FC(v10, (uint64_t)qword_26AFDEB68);
    v38[0] = 0;
    sub_240BB5700();
    uint64_t v18 = sub_240BB31D0();
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v20 = a3;
    return v19(v20, 1, 1, v18);
  }
  return result;
}

uint64_t sub_240AEA078()
{
  return sub_240AEA098();
}

uint64_t sub_240AEA098()
{
  return 0;
}

uint64_t sub_240AEA158()
{
  return sub_240AEA098();
}

uint64_t sub_240AEA178()
{
  return 0;
}

uint64_t sub_240AEA328()
{
  unint64_t v0 = sub_240BB7990();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_240AEA374()
{
  sub_240A3FB28();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)sub_240BB56F0();
  if ((sub_240BB56D0() & 1) == 0)
  {
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    sub_240A395FC(v1, (uint64_t)qword_26AFDEB68);
    uint64_t v19 = 0;
    sub_240BB5700();

    return 0;
  }
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  uint64_t v7 = *MEMORY[0x263F09670];
  id v8 = v5;
  if (objc_msgSend(v8, sel_isRequirementSatisfiedWithIdentifier_, v7))
  {
    if (objc_msgSend(v8, sel_isRequirementSatisfiedWithIdentifier_, *MEMORY[0x263F09708]))
    {
      if (objc_msgSend(v8, sel_isRequirementSatisfiedWithIdentifier_, *MEMORY[0x263F09638])
        && (objc_msgSend(v8, sel_isRequirementSatisfiedWithIdentifier_, *MEMORY[0x263F09648]) & 1) == 0)
      {
        if (qword_26AFD7158 != -1) {
          swift_once();
        }
        uint64_t v16 = sub_240A395FC(v1, (uint64_t)qword_26AFDEB68);
        (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v16, v1);
        uint64_t v17 = swift_allocObject();
        *(void *)(v17 + 16) = sub_240AEAD14;
        *(void *)(v17 + 24) = v6;
        uint64_t v19 = 0;
        swift_retain();
        sub_240BB5700();

        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
        return 4;
      }
      else
      {
        if (objc_msgSend(v8, sel_isRequirementSatisfiedWithIdentifier_, *MEMORY[0x263F09650]))
        {

          swift_release();
          return 0;
        }
        if (qword_26AFD7158 != -1) {
          swift_once();
        }
        uint64_t v14 = sub_240A395FC(v1, (uint64_t)qword_26AFDEB68);
        (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v14, v1);
        uint64_t v15 = swift_allocObject();
        *(void *)(v15 + 16) = sub_240AEAD14;
        *(void *)(v15 + 24) = v6;
        uint64_t v19 = 0;
        swift_retain();
        sub_240BB5700();

        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
        return 3;
      }
    }
    else
    {
      if (qword_26AFD7158 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_240A395FC(v1, (uint64_t)qword_26AFDEB68);
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v12, v1);
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = sub_240AEAD14;
      *(void *)(v13 + 24) = v6;
      uint64_t v19 = 0;
      swift_retain();
      sub_240BB5700();

      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      return 2;
    }
  }
  else
  {
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_240A395FC(v1, (uint64_t)qword_26AFDEB68);
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v10, v1);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_240AEAD14;
    *(void *)(v11 + 24) = v6;
    uint64_t v19 = 0;
    swift_retain();
    sub_240BB5700();

    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return 1;
  }
}

uint64_t sub_240AEA950()
{
  uint64_t v0 = sub_240BB5990();
  MEMORY[0x270FA5388](v0);
  sub_240BB2770();
  swift_allocObject();
  sub_240BB2760();
  sub_240AEAC88();
  uint64_t v1 = sub_240BB2750();
  swift_release();
  return v1;
}

uint64_t sub_240AEAC08()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_240AEAC18()
{
  return sub_240AEA178();
}

void sub_240AEAC20()
{
  if (!qword_26AFD7598)
  {
    sub_240A34DC4(255, (unint64_t *)&qword_26AFD9918);
    unint64_t v0 = sub_240BB75E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD7598);
    }
  }
}

unint64_t sub_240AEAC88()
{
  unint64_t result = qword_26AFD7288;
  if (!qword_26AFD7288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD7288);
  }
  return result;
}

uint64_t sub_240AEACDC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240AEAD14()
{
  return sub_240AE9770(*(void **)(v0 + 16));
}

uint64_t sub_240AEAD1C()
{
  return sub_240AE98F8(*(void (**)(uint64_t))(v0 + 16));
}

uint64_t sub_240AEAD54()
{
  return sub_240AE98F8(*(void (**)(uint64_t))(v0 + 16));
}

uint64_t sub_240AEAD8C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240AEADC4()
{
  return sub_240AE98F8(*(void (**)(uint64_t))(v0 + 16));
}

uint64_t sub_240AEADFC()
{
  return sub_240AE98F8(*(void (**)(uint64_t))(v0 + 16));
}

void sub_240AEAE34(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240BB7AB0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

ValueMetadata *type metadata accessor for AFibBurdenRescindedState()
{
  return &type metadata for AFibBurdenRescindedState;
}

unint64_t sub_240AEAEC4()
{
  unint64_t result = qword_26AFD7188;
  if (!qword_26AFD7188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD7188);
  }
  return result;
}

uint64_t *sub_240AEAF24(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
        uint64_t v7 = sub_240BB3E60();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_240AEB144(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 3)
  {
    uint64_t v3 = sub_240BB3E60();
    unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_240AEB1C0(void *a1, const void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
      uint64_t v6 = sub_240BB3E60();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_240AEB390(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_240AEC30C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for AFibBurdenOnboardingPresentationContext);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
        uint64_t v6 = sub_240BB3E60();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for AFibBurdenOnboardingPresentationContext()
{
  uint64_t result = qword_268CA0600;
  if (!qword_268CA0600) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_240AEB5D0(void *a1, const void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
      uint64_t v6 = sub_240BB3E60();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_240AEB7A0(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_240AEC30C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for AFibBurdenOnboardingPresentationContext);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
        uint64_t v6 = sub_240BB3E60();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_240AEB994()
{
  uint64_t result = sub_240BB3E60();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_240AEBA20()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_240BB3E60();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  int v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for AFibBurdenOnboardingPresentationContext();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AEC2A8(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() > 3) {
    return 0x6B6E694C70656564;
  }
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  uint64_t v9 = sub_240BB3E40();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v9;
}

uint64_t sub_240AEBB9C()
{
  uint64_t v1 = type metadata accessor for AFibBurdenOnboardingPresentationContext();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AEC2A8(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t v5 = 0xD000000000000015;
  uint64_t result = 0x6B6E694C70656564;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      unint64_t v5 = 0xD000000000000014;
      goto LABEL_5;
    case 2:
      unint64_t v5 = 0x684368746C616568;
      goto LABEL_5;
    case 3:
      unint64_t v5 = 0xD000000000000018;
      goto LABEL_5;
    case 4:
      return result;
    default:
LABEL_5:
      uint64_t v7 = sub_240BB3E60();
      (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v3, v7);
      return v5;
  }
}

uint64_t sub_240AEBD2C(uint64_t a1, uint64_t a2)
{
  uint64_t v56 = a2;
  uint64_t v3 = sub_240BB3E60();
  uint64_t v54 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  char v53 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v52 = (char *)&v51 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v51 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v51 - v11;
  uint64_t v13 = type metadata accessor for AFibBurdenOnboardingPresentationContext();
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v51 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  unint64_t v22 = (char *)&v51 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v51 - v23;
  sub_240AEC244();
  uint64_t v26 = MEMORY[0x270FA5388](v25 - 8);
  uint64_t v28 = (char *)&v51 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = (uint64_t)&v28[*(int *)(v26 + 56)];
  sub_240AEC2A8(a1, (uint64_t)v28);
  sub_240AEC2A8(v56, v29);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_240AEC2A8((uint64_t)v28, (uint64_t)v22);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v30 = v54;
        uint64_t v31 = v29;
        uint64_t v32 = v55;
        (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v10, v31, v55);
        char v33 = sub_240BB3E50();
        uint64_t v34 = *(void (**)(char *, uint64_t))(v30 + 8);
        v34(v10, v32);
        v34(v22, v32);
        goto LABEL_18;
      }
      uint64_t v16 = v22;
      goto LABEL_14;
    case 2u:
      sub_240AEC2A8((uint64_t)v28, (uint64_t)v19);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v35 = v54;
        uint64_t v36 = v52;
        uint64_t v37 = v29;
        uint64_t v38 = v55;
        (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v52, v37, v55);
        char v33 = sub_240BB3E50();
        uint64_t v39 = *(void (**)(char *, uint64_t))(v35 + 8);
        v39(v36, v38);
        v39(v19, v38);
        goto LABEL_18;
      }
      uint64_t v16 = v19;
      goto LABEL_14;
    case 3u:
      sub_240AEC2A8((uint64_t)v28, (uint64_t)v16);
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_14;
      }
      uint64_t v41 = v53;
      uint64_t v40 = v54;
      uint64_t v42 = v55;
      (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v53, v29, v55);
      char v33 = sub_240BB3E50();
      id v43 = *(void (**)(char *, uint64_t))(v40 + 8);
      v43(v41, v42);
      v43(v16, v42);
      goto LABEL_18;
    case 4u:
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v45 = (uint64_t (*)(void))type metadata accessor for AFibBurdenOnboardingPresentationContext;
      if (EnumCaseMultiPayload != 4) {
        goto LABEL_15;
      }
      char v33 = 1;
      goto LABEL_19;
    default:
      sub_240AEC2A8((uint64_t)v28, (uint64_t)v24);
      if (swift_getEnumCaseMultiPayload())
      {
        uint64_t v16 = v24;
LABEL_14:
        (*(void (**)(char *, uint64_t))(v54 + 8))(v16, v55);
LABEL_15:
        char v33 = 0;
        uint64_t v45 = (uint64_t (*)(void))sub_240AEC244;
      }
      else
      {
        uint64_t v46 = v54;
        uint64_t v47 = v29;
        uint64_t v48 = v55;
        (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v12, v47, v55);
        char v33 = sub_240BB3E50();
        uint64_t v49 = *(void (**)(char *, uint64_t))(v46 + 8);
        v49(v12, v48);
        v49(v24, v48);
LABEL_18:
        uint64_t v45 = (uint64_t (*)(void))type metadata accessor for AFibBurdenOnboardingPresentationContext;
      }
LABEL_19:
      sub_240AEC30C((uint64_t)v28, v45);
      return v33 & 1;
  }
}

void sub_240AEC244()
{
  if (!qword_268CA0610)
  {
    type metadata accessor for AFibBurdenOnboardingPresentationContext();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CA0610);
    }
  }
}

uint64_t sub_240AEC2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AFibBurdenOnboardingPresentationContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240AEC30C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for BloodPressureSampleManager()
{
  return self;
}

uint64_t type metadata accessor for AFibBurdenLifeFactorDescriptionDataSource(uint64_t a1)
{
  return sub_240A3E6AC(a1, (uint64_t *)&unk_268CA0618);
}

uint64_t sub_240AEC3B0()
{
  return swift_initClassMetadata2();
}

void sub_240AEC3F0()
{
}

void sub_240AEC40C()
{
}

void sub_240AEC428()
{
}

uint64_t sub_240AEC454()
{
  sub_240BB3F00();

  return swift_deallocClassInstance();
}

uint64_t sub_240AEC484()
{
  return type metadata accessor for AFibBurdenLifeFactorDescriptionDataSource(0);
}

uint64_t type metadata accessor for AFibBurdenLifeFactorAppRecommendationsFetchedResultsControllerDataSource(uint64_t a1)
{
  return sub_240A3E6AC(a1, (uint64_t *)&unk_268CA0638);
}

uint64_t sub_240AEC4AC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_240AEC504()
{
  uint64_t v0 = sub_240BB4720();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB4700();
  uint64_t v4 = sub_240BB4710();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_240AEC5D8()
{
  return sub_240BB5500();
}

uint64_t sub_240AEC634()
{
  return sub_240BB7220();
}

void *sub_240AEC6A4@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_240BB5510();
  uint64_t v4 = v3;
  uint64_t v5 = sub_240A87A2C();
  uint64_t v7 = v6;
  type metadata accessor for TitleSubtitleView();
  sub_240AEC8F0(&qword_268CA0658, (void (*)(uint64_t))type metadata accessor for TitleSubtitleView);
  uint64_t v8 = sub_240BB3E70();
  uint64_t v10 = v9;
  a1[3] = &type metadata for TitleSubtitleItem;
  a1[4] = sub_240AEC938();
  uint64_t result = (void *)swift_allocObject();
  *a1 = result;
  result[2] = 0xD000000000000011;
  result[3] = 0x8000000240BCF2E0;
  result[4] = v8;
  result[5] = v10;
  result[6] = v2;
  result[7] = v4;
  result[8] = v5;
  result[9] = v7;
  return result;
}

void sub_240AEC7A8()
{
}

uint64_t sub_240AEC7D8()
{
  return swift_release();
}

id sub_240AEC7E8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenLifeFactorAppRecommendationsFetchedResultsControllerDataSource(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240AEC820()
{
  return swift_release();
}

uint64_t sub_240AEC830()
{
  return type metadata accessor for AFibBurdenLifeFactorAppRecommendationsFetchedResultsControllerDataSource(0);
}

uint64_t sub_240AEC838()
{
  return sub_240BB7230();
}

uint64_t sub_240AEC8A8()
{
  return sub_240AEC8F0(&qword_268CA0648, (void (*)(uint64_t))type metadata accessor for AFibBurdenLifeFactorDescriptionDataSource);
}

uint64_t sub_240AEC8F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_240AEC938()
{
  unint64_t result = qword_268CA0660;
  if (!qword_268CA0660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0660);
  }
  return result;
}

uint64_t sub_240AEC98C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_240AEC9DC(_OWORD *a1)
{
  uint64_t v2 = sub_240BB2D40();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_240AECC2C(0, (unint64_t *)&qword_268CA0B60, (uint64_t (*)(uint64_t))sub_240AECBF8, MEMORY[0x263F8E0F8]);
  uint64_t v7 = swift_allocObject();
  long long v13 = xmmword_240BB97E0;
  *(_OWORD *)(v7 + 16) = xmmword_240BB97E0;
  sub_240AECC2C(0, (unint64_t *)&qword_268C9E840, (uint64_t (*)(uint64_t))sub_240A47830, v6);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = v13;
  *(void *)(v8 + 56) = &type metadata for AFibBurdenLifeFactorDescriptionItem;
  *(void *)(v8 + 64) = sub_240AECC90();
  uint64_t v9 = (_OWORD *)swift_allocObject();
  *(void *)(v8 + 32) = v9;
  long long v10 = a1[1];
  v9[1] = *a1;
  v9[2] = v10;
  long long v11 = a1[3];
  v9[3] = a1[2];
  v9[4] = v11;
  *(void *)(v7 + 32) = v8;
  uint64_t v14 = 0x3C53447961727241;
  unint64_t v15 = 0xE800000000000000;
  sub_240AECD3C((uint64_t)a1);
  sub_240BB2D30();
  sub_240BB2D00();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return sub_240BB3EF0();
}

void sub_240AECBF8(uint64_t a1)
{
}

void sub_240AECC2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_240AECC90()
{
  unint64_t result = qword_268CA0670;
  if (!qword_268CA0670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0670);
  }
  return result;
}

uint64_t sub_240AECCE4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 64)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_240AECD3C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  sub_240BB4850();
  sub_240BB4850();
  sub_240BB4850();
  sub_240AECDA0(v2);
  return a1;
}

uint64_t sub_240AECDA0(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_240AECDB0()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_240AECDE8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Heart35HeartFeatureStatusGeneratorPipeline_domain;
  uint64_t v2 = sub_240BB3240();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_240AECE98()
{
  return type metadata accessor for HeartFeatureStatusGeneratorPipeline();
}

uint64_t sub_240AECEA0()
{
  uint64_t result = sub_240BB3240();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_240AECF3C()
{
  uint64_t v1 = sub_240BB32A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_240AECFF0()
{
  uint64_t v1 = sub_240BB32A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

id sub_240AED224()
{
  return sub_240AEE364(type metadata accessor for SummariesAtrialFibrillationListDataProvider);
}

uint64_t type metadata accessor for SummariesAtrialFibrillationListDataProvider()
{
  return self;
}

void sub_240AED2BC()
{
  uint64_t v1 = v0;
  sub_240AEE420(0, &qword_268C9FBE0, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&aBlock[-2] - v3;
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9930);
  id v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_atrialFibrillationEventType);
  if (v5)
  {
    uint64_t v6 = v5;
    sub_240BB34D0();
    sub_240AEE420(0, (unint64_t *)&qword_26AFD99A0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
    uint64_t v7 = sub_240BB3050();
    uint64_t v8 = *(void *)(v7 - 8);
    unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v10 = swift_allocObject();
    long long v25 = xmmword_240BB97E0;
    *(_OWORD *)(v10 + 16) = xmmword_240BB97E0;
    (*(void (**)(unint64_t, void, uint64_t))(v8 + 104))(v10 + v9, *MEMORY[0x263F45500], v7);
    sub_240A39C18(0, (unint64_t *)&qword_26AFD77C0);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_240BBAD40;
    *(void *)(v11 + 32) = v6;
    aBlock[0] = v11;
    sub_240BB6F30();
    uint64_t v12 = aBlock[0];
    uint64_t v13 = sub_240BB27F0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 1, 1, v13);
    sub_240A39C18(0, (unint64_t *)&qword_268CA06B8);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = v25;
    id v15 = v6;
    *(void *)(v14 + 32) = sub_240BB7100();
    uint64_t v16 = (void *)MEMORY[0x245606740](v10, v12, v4, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_240AEE640((uint64_t)v4, &qword_268C9FBE0, MEMORY[0x263F062D0]);
    id v17 = v16;
    uint64_t v18 = (void *)sub_240BB34B0();

    sub_240A3466C(&v1[OBJC_IVAR____TtC5Heart38SummariesAtrialFibrillationDataFetcher_healthExperienceStore], *(void *)&v1[OBJC_IVAR____TtC5Heart38SummariesAtrialFibrillationDataFetcher_healthExperienceStore + 24]);
    uint64_t v19 = (void *)sub_240BB2FE0();
    uint64_t v20 = (void *)swift_allocObject();
    v20[2] = v1;
    v20[3] = v18;
    v20[4] = v15;
    aBlock[4] = sub_240AEE4CC;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_240A87354;
    aBlock[3] = &unk_26F507090;
    uint64_t v21 = _Block_copy(aBlock);
    id v22 = v15;
    uint64_t v23 = v1;
    id v24 = v18;
    swift_release();
    objc_msgSend(v19, sel_performBlock_, v21);
    _Block_release(v21);
  }
  else
  {
    __break(1u);
  }
}

void sub_240AED6DC(uint64_t a1, uint64_t a2, void *a3)
{
  id v92 = a3;
  uint64_t v4 = sub_240BB5990();
  id v5 = *(void (***)(char *, uint64_t))(v4 - 8);
  uint64_t v93 = v4;
  v94 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  v95 = (char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v89 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v89 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v89 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v89 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v89 - v20;
  sub_240A3466C((void *)(a1 + OBJC_IVAR____TtC5Heart38SummariesAtrialFibrillationDataFetcher_healthExperienceStore), *(void *)(a1 + OBJC_IVAR____TtC5Heart38SummariesAtrialFibrillationDataFetcher_healthExperienceStore + 24));
  id v22 = (void *)sub_240BB2FE0();
  sub_240BB34D0();
  id v23 = 0;
  unint64_t v32 = sub_240BB7410();
  unint64_t v33 = (unint64_t)v21;
  v90 = v13;
  v91 = v10;

  if (!(v32 >> 62))
  {
    uint64_t v34 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v35 = v95;
    if (v34) {
      goto LABEL_8;
    }
LABEL_55:
    swift_bridgeObjectRelease();
    sub_240BB5950();
    id v24 = v92;
    long long v25 = sub_240BB5970();
    os_log_type_t v26 = sub_240BB7190();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 138412290;
      v97[0] = (uint64_t)v24;
      uint64_t v29 = v24;
      sub_240BB75F0();
      *uint64_t v28 = v24;

      _os_log_impl(&dword_240A1B000, v25, v26, "Missing feed item when trying to decode Summaries data for %@", v27, 0xCu);
      sub_240AA63A0();
      swift_arrayDestroy();
      MEMORY[0x24560B930](v28, -1, -1);
      MEMORY[0x24560B930](v27, -1, -1);
    }
    else
    {

      long long v25 = v24;
    }
    uint64_t v31 = v93;
    uint64_t v30 = v94;

    v30[1](v35, v31);
    return;
  }
  sub_240BB4850();
  uint64_t v34 = sub_240BB7900();
  swift_bridgeObjectRelease();
  uint64_t v35 = v95;
  if (!v34) {
    goto LABEL_55;
  }
LABEL_8:
  if ((v32 & 0xC000000000000001) != 0)
  {
    uint64_t v36 = (char *)MEMORY[0x24560AAA0](0, v32);
  }
  else
  {
    if (!*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_58;
    }
    uint64_t v36 = (char *)*(id *)(v32 + 32);
  }
  uint64_t v37 = v36;
  swift_bridgeObjectRelease();
  id v38 = objc_msgSend(v37, sel_userData);
  if (v38)
  {
    uint64_t v39 = sub_240BB2B60();
    unint64_t v41 = v40;

    id v38 = (id)sub_240BB2B40();
    sub_240A4C4D8(v39, v41);
  }
  uint64_t v35 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F46470]), sel_initWithData_, v38);

  if (!v35)
  {
    sub_240BB5950();
    uint64_t v60 = sub_240BB5970();
    os_log_type_t v61 = sub_240BB7190();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v62 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v62 = 0;
      _os_log_impl(&dword_240A1B000, v60, v61, "Unable to decode chart feed item data", v62, 2u);
      MEMORY[0x24560B930](v62, -1, -1);
    }

    goto LABEL_39;
  }
  v95 = v37;
  id v42 = objc_msgSend(v35, sel_chartModel);
  if (!v42)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  id v43 = v42;
  unsigned int v44 = objc_msgSend(v42, sel_hasSixMonthData);

  if (v44)
  {
    id v45 = objc_msgSend(v35, sel_chartModel);
    if (!v45)
    {
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
      return;
    }
    uint64_t v46 = v45;
    id v92 = objc_msgSend(v45, sel_sixMonthData);

    id v23 = v95;
    if (v92)
    {
      if (objc_msgSend(v92, sel_type) == 11)
      {
        id v47 = objc_msgSend(v92, sel_queryDataObject);
        if (v47)
        {
          uint64_t v48 = sub_240BB2B60();
          unint64_t v50 = v49;

          id v47 = (id)sub_240BB2B40();
          sub_240A4C4D8(v48, v50);
        }
        id v51 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46518]), sel_initWithData_, v47);

        if (!v51) {
          goto LABEL_66;
        }
        id v52 = objc_msgSend(v51, sel_samples);

        if (!v52
          || (v97[0] = 0, sub_240A34DC4(0, &qword_268CA06C8),
                            sub_240BB6F00(),
                            v52,
                            (unint64_t v33 = v97[0]) == 0))
        {
          v78 = v90;
          sub_240BB5920();
          id v79 = v92;
          v80 = sub_240BB5970();
          os_log_type_t v81 = sub_240BB7180();
          if (os_log_type_enabled(v80, v81))
          {
            v82 = (uint8_t *)swift_slowAlloc();
            uint64_t v83 = swift_slowAlloc();
            uint64_t v96 = (uint64_t)v79;
            v97[0] = v83;
            *(_DWORD *)v82 = 136315138;
            sub_240A34DC4(0, &qword_268CA06C0);
            id v84 = v79;
            uint64_t v85 = sub_240BB6E20();
            uint64_t v96 = sub_240A38940(v85, v86, v97);
            sub_240BB75F0();

            swift_bridgeObjectRelease();
            _os_log_impl(&dword_240A1B000, v80, v81, "Cound not decode query data %s", v82, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x24560B930](v83, -1, -1);
            MEMORY[0x24560B930](v82, -1, -1);

            v94[1](v90, v93);
          }
          else
          {

            v94[1](v78, v93);
          }
          return;
        }
        uint64_t v10 = *(char **)(a1 + OBJC_IVAR____TtC5Heart38SummariesAtrialFibrillationDataFetcher_resultsHandler);
        uint64_t v34 = *(void *)(a1 + OBJC_IVAR____TtC5Heart38SummariesAtrialFibrillationDataFetcher_resultsHandler + 8);
        v97[0] = MEMORY[0x263F8EE78];
        if (!(v33 >> 62))
        {
          uint64_t v53 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
          sub_240BB4850();
          if (v53)
          {
LABEL_26:
            uint64_t v93 = v34;
            v94 = (void (**)(char *, uint64_t))v10;
            uint64_t v54 = self;
            if (v53 >= 1)
            {
              uint64_t v55 = (void *)v54;
              for (uint64_t i = 0; i != v53; ++i)
              {
                if ((v33 & 0xC000000000000001) != 0) {
                  id v57 = (id)MEMORY[0x24560AAA0](i, v33);
                }
                else {
                  id v57 = *(id *)(v33 + 8 * i + 32);
                }
                unint64_t v58 = v57;
                id v59 = objc_msgSend(v55, sel_createWithCodableNotificationSample_, v57);

                if (v59)
                {
                  MEMORY[0x24560A190]();
                  if (*(void *)((v97[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v97[0] & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
                    sub_240BB6F60();
                  sub_240BB6F70();
                  sub_240BB6F30();
                }
              }
              swift_bridgeObjectRelease();
              uint64_t v87 = v97[0];
              uint64_t v10 = (char *)v94;
              id v23 = v95;
              goto LABEL_60;
            }
            __break(1u);
            goto LABEL_64;
          }
LABEL_59:
          swift_bridgeObjectRelease();
          uint64_t v87 = MEMORY[0x263F8EE78];
LABEL_60:
          swift_bridgeObjectRelease();
          ((void (*)(uint64_t, void))v10)(v87, 0);
          swift_bridgeObjectRelease();

          id v88 = v92;

          return;
        }
LABEL_58:
        sub_240BB4850();
        uint64_t v53 = sub_240BB7900();
        if (v53) {
          goto LABEL_26;
        }
        goto LABEL_59;
      }
      unint64_t v33 = (unint64_t)v16;
      sub_240BB5920();
      id v70 = v92;
      v71 = sub_240BB5970();
      os_log_type_t v72 = sub_240BB7180();
      if (os_log_type_enabled(v71, v72))
      {
        v73 = (uint8_t *)swift_slowAlloc();
        uint64_t v74 = swift_slowAlloc();
        uint64_t v96 = (uint64_t)v70;
        v97[0] = v74;
        id v92 = (id)v33;
        *(_DWORD *)v73 = 136315138;
        sub_240A34DC4(0, &qword_268CA06C0);
        id v75 = v70;
        uint64_t v76 = sub_240BB6E20();
        uint64_t v96 = sub_240A38940(v76, v77, v97);
        sub_240BB75F0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240A1B000, v71, v72, "Unsupported chart model %s", v73, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24560B930](v74, -1, -1);
        MEMORY[0x24560B930](v73, -1, -1);

        v94[1]((char *)v92, v93);
        return;
      }

LABEL_39:
      v94[1]((char *)v33, v93);
      return;
    }
    sub_240BB5950();
    uint64_t v67 = sub_240BB5970();
    os_log_type_t v68 = sub_240BB7190();
    if (os_log_type_enabled(v67, v68))
    {
      long long v69 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v69 = 0;
      _os_log_impl(&dword_240A1B000, v67, v68, "Unable to decode sharable charting model", v69, 2u);
      MEMORY[0x24560B930](v69, -1, -1);
    }

    v94[1](v19, v93);
  }
  else
  {
    uint64_t v63 = v91;
    sub_240BB5950();
    unint64_t v64 = sub_240BB5970();
    int v65 = sub_240BB7190();
    if (os_log_type_enabled(v64, (os_log_type_t)v65))
    {
      long long v66 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v66 = 0;
      _os_log_impl(&dword_240A1B000, v64, (os_log_type_t)v65, "Missing data charting model", v66, 2u);
      MEMORY[0x24560B930](v66, -1, -1);
    }

    v94[1](v63, v93);
  }
}

id sub_240AEE34C()
{
  return sub_240AEE364(type metadata accessor for SummariesAtrialFibrillationDataFetcher);
}

id sub_240AEE364(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for SummariesAtrialFibrillationDataFetcher()
{
  return self;
}

void sub_240AEE420(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_240AEE484()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_240AEE4CC()
{
  sub_240AED6DC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_240AEE4D8()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_240AEE510(void *a1, uint64_t a2)
{
  sub_240B342F8(a1, a2, *(void *)(v2 + 16));
}

id sub_240AEE518(uint64_t a1, uint64_t a2)
{
  objc_super v3 = *(void **)(v2 + OBJC_IVAR____TtC5Heart43SummariesAtrialFibrillationListDataProvider_store);
  if (!v3) {
    return 0;
  }
  sub_240A830E0(v2 + OBJC_IVAR____TtC5Heart43SummariesAtrialFibrillationListDataProvider_healthExperienceStore, (uint64_t)&v13);
  if (!v14)
  {
    sub_240AEE640((uint64_t)&v13, &qword_268C9F668, (uint64_t (*)(uint64_t))sub_240A83088);
    return 0;
  }
  sub_240A37388(&v13, (uint64_t)v15);
  sub_240A1E37C((uint64_t)v15, (uint64_t)&v13);
  uint64_t v6 = (objc_class *)type metadata accessor for SummariesAtrialFibrillationDataFetcher();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  *(void *)&v7[OBJC_IVAR____TtC5Heart38SummariesAtrialFibrillationDataFetcher_healthStore] = v3;
  sub_240A1E37C((uint64_t)&v13, (uint64_t)&v7[OBJC_IVAR____TtC5Heart38SummariesAtrialFibrillationDataFetcher_healthExperienceStore]);
  unint64_t v8 = &v7[OBJC_IVAR____TtC5Heart38SummariesAtrialFibrillationDataFetcher_resultsHandler];
  *(void *)unint64_t v8 = a1;
  *((void *)v8 + 1) = a2;
  v12.receiver = v7;
  v12.super_class = v6;
  id v9 = v3;
  swift_retain();
  id v10 = objc_msgSendSuper2(&v12, sel_init);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v13);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v15);
  return v10;
}

uint64_t sub_240AEE640(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_240AEE420(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_240AEE6B0@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = type metadata accessor for ElectrocardiogramRecordingOnboardingPromotionConfiguration();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AF0EA0(0);
  MEMORY[0x270FA5388](v10 - 8);
  objc_super v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AF1D4C(v2, (uint64_t)v12, (uint64_t (*)(void))sub_240AF0EA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    uint64_t v13 = sub_240BB31D0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a2, 1, 1, v13);
  }
  else
  {
    sub_240AF1DB4((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ElectrocardiogramRecordingOnboardingPromotionConfiguration);
    a1(v9);
    uint64_t result = sub_240AF0F50((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ElectrocardiogramRecordingOnboardingPromotionConfiguration);
    if (!v3)
    {
      uint64_t v15 = sub_240BB31D0();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 0, 1, v15);
    }
  }
  return result;
}

void sub_240AEE8DC(uint64_t a1, uint64_t a2)
{
  v28[10] = a2;
  uint64_t v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_240BB4850();
    sub_240BB76B0();
    sub_240AF1C14();
    sub_240A339F0((unint64_t *)&unk_26AFD9920, (void (*)(uint64_t))sub_240AF1C14);
    sub_240BB70B0();
    uint64_t v2 = v28[4];
    uint64_t v25 = v28[5];
    uint64_t v3 = v28[6];
    uint64_t v4 = v28[7];
    unint64_t v5 = v28[8];
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v25 = a1 + 56;
    uint64_t v7 = ~v6;
    uint64_t v8 = -v6;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v5 = v9 & *(void *)(a1 + 56);
    sub_240BB4850();
    uint64_t v3 = v7;
    uint64_t v4 = 0;
  }
  int64_t v24 = (unint64_t)(v3 + 64) >> 6;
  uint64_t v26 = v2;
  while (v2 < 0)
  {
    uint64_t v13 = sub_240BB7720();
    if (!v13) {
      goto LABEL_36;
    }
    uint64_t v27 = v13;
    sub_240AF1C14();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v14 = (id)v28[0];
    sub_240BB50A0();
    uint64_t v12 = v4;
    uint64_t v10 = v5;
    if (!v14) {
      goto LABEL_36;
    }
LABEL_32:
    uint64_t v18 = sub_240BB32F0();
    uint64_t v19 = (void (*)(void *, void))sub_240BB31A0();
    uint64_t v20 = *(void *)(v18 + 16);
    if (v20)
    {
      uint64_t v21 = (uint64_t *)(v18 + 40);
      do
      {
        uint64_t v22 = *(v21 - 1);
        uint64_t v23 = *v21;
        sub_240BB4850();
        sub_240B8DB44(&v27, v22, v23);
        swift_bridgeObjectRelease();
        v21 += 2;
        --v20;
      }
      while (v20);
    }
    swift_bridgeObjectRelease();
    v19(v28, 0);

    uint64_t v4 = v12;
    unint64_t v5 = v10;
    uint64_t v2 = v26;
  }
  if (v5)
  {
    uint64_t v10 = (v5 - 1) & v5;
    unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
    uint64_t v12 = v4;
LABEL_31:
    id v14 = *(id *)(*(void *)(v2 + 48) + 8 * v11);
    if (!v14) {
      goto LABEL_36;
    }
    goto LABEL_32;
  }
  int64_t v15 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v15 >= v24) {
      goto LABEL_36;
    }
    unint64_t v16 = *(void *)(v25 + 8 * v15);
    uint64_t v12 = v4 + 1;
    if (!v16)
    {
      uint64_t v12 = v4 + 2;
      if (v4 + 2 >= v24) {
        goto LABEL_36;
      }
      unint64_t v16 = *(void *)(v25 + 8 * v12);
      if (!v16)
      {
        uint64_t v12 = v4 + 3;
        if (v4 + 3 >= v24) {
          goto LABEL_36;
        }
        unint64_t v16 = *(void *)(v25 + 8 * v12);
        if (!v16)
        {
          uint64_t v12 = v4 + 4;
          if (v4 + 4 >= v24) {
            goto LABEL_36;
          }
          unint64_t v16 = *(void *)(v25 + 8 * v12);
          if (!v16)
          {
            uint64_t v12 = v4 + 5;
            if (v4 + 5 >= v24) {
              goto LABEL_36;
            }
            unint64_t v16 = *(void *)(v25 + 8 * v12);
            if (!v16)
            {
              uint64_t v17 = v4 + 6;
              while (v24 != v17)
              {
                unint64_t v16 = *(void *)(v25 + 8 * v17++);
                if (v16)
                {
                  uint64_t v12 = v17 - 1;
                  goto LABEL_30;
                }
              }
LABEL_36:
              sub_240A325B4();
              return;
            }
          }
        }
      }
    }
LABEL_30:
    uint64_t v10 = (v16 - 1) & v16;
    unint64_t v11 = __clz(__rbit64(v16)) + (v12 << 6);
    goto LABEL_31;
  }
  __break(1u);
}

unint64_t ElectrocardiogramRecordingOnboardingPromotionConfigurationProvider.feedItemIdentifier.getter()
{
  return 0xD000000000000028;
}

uint64_t ElectrocardiogramRecordingOnboardingPromotionConfigurationProvider.contentKind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F45580];
  uint64_t v3 = sub_240BB3050();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

unint64_t ElectrocardiogramRecordingOnboardingPromotionConfigurationProvider.featureAutomationIdentifier.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t ElectrocardiogramRecordingOnboardingPromotionConfigurationProvider.__allocating_init(healthStore:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t ElectrocardiogramRecordingOnboardingPromotionConfigurationProvider.init(healthStore:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_240AEED2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)&long long v51 = a2;
  uint64_t v47 = a1;
  uint64_t v50 = a3;
  uint64_t v44 = sub_240BB3370();
  uint64_t v43 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  id v42 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AB7B08(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_240BB3340();
  uint64_t v48 = *(void *)(v49 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v49);
  unint64_t v40 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  unint64_t v41 = (char *)&v39 - v9;
  uint64_t v10 = sub_240BB36D0();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v46 = sub_240BB3950();
  uint64_t v45 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v13 = (id)qword_26AFDECD8;
  sub_240BB36C0();
  sub_240BB2980();
  sub_240BB2980();
  sub_240BB2980();
  sub_240BB3920();
  id v14 = (void *)sub_240BB3270();
  type metadata accessor for ElectrocardiogramRecordingOnboardingPromotionConfiguration();
  int64_t v15 = v12;
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_240BB7900()) {
    sub_240B21774(MEMORY[0x263F8EE78]);
  }
  type metadata accessor for ElectrocardiogramPromotionTileActionHandler();
  sub_240A339F0((unint64_t *)&unk_268C9F378, (void (*)(uint64_t))type metadata accessor for ElectrocardiogramPromotionTileActionHandler);
  uint64_t v16 = v50;
  sub_240BB3120();
  swift_bridgeObjectRelease();

  sub_240AF1D4C(v51, (uint64_t)v6, (uint64_t (*)(void))sub_240AB7B08);
  uint64_t v17 = v48;
  uint64_t v18 = v49;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v6, 1, v49) == 1)
  {
    sub_240AF0F50((uint64_t)v6, (uint64_t (*)(void))sub_240AB7B08);
  }
  else
  {
    uint64_t v19 = v41;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v41, v6, v18);
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v40, v19, v18);
    uint64_t v20 = v42;
    sub_240BB3380();
    uint64_t v21 = v44;
    sub_240BB3140();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v20, v21);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v18);
  }
  sub_240A39C60(0, (unint64_t *)&qword_26AFD77C0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  long long v51 = xmmword_240BBAD40;
  *(_OWORD *)(inited + 16) = xmmword_240BBAD40;
  uint64_t v23 = self;
  *(void *)(inited + 32) = objc_msgSend(v23, sel_electrocardiogramType);
  v53[0] = inited;
  sub_240BB6F30();
  unint64_t v24 = v53[0];
  if (v53[0] >> 62)
  {
    sub_240BB4850();
    uint64_t v28 = sub_240BB7900();
    swift_bridgeObjectRelease();
    uint64_t v25 = v15;
    if (v28) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v25 = v15;
    if (*(void *)((v53[0] & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_9:
      sub_240A3A2D0(v24);
      uint64_t v27 = v26;
      goto LABEL_14;
    }
  }
  uint64_t v27 = MEMORY[0x263F8EE88];
LABEL_14:
  swift_bridgeObjectRelease();
  sub_240AEE8DC(v27, v16);
  swift_bridgeObjectRelease();
  uint64_t v29 = sub_240BB3300();
  uint64_t v31 = v30;
  unint64_t v32 = (void (*)(unint64_t *, void))sub_240BB31A0();
  sub_240BB4850();
  sub_240B8DB44(&v52, v29, v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v32(v53, 0);
  uint64_t v33 = swift_initStackObject();
  *(_OWORD *)(v33 + 16) = v51;
  *(void *)(v33 + 32) = objc_msgSend(v23, sel_electrocardiogramType);
  v53[0] = v33;
  sub_240BB6F30();
  unint64_t v34 = v53[0];
  if (v53[0] >> 62)
  {
    sub_240BB4850();
    uint64_t v35 = sub_240BB7900();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v35 = *(void *)((v53[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v36 = v46;
  uint64_t v37 = v45;
  if (v35) {
    sub_240A3A2D0(v34);
  }
  swift_bridgeObjectRelease();
  sub_240BB3190();
  sub_240BB3160();
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v25, v36);
}

uint64_t ElectrocardiogramRecordingOnboardingPromotionConfigurationProvider.makeFeedItemPublisher(context:featureStatus:)(uint64_t a1, uint64_t a2)
{
  uint64_t v42 = a1;
  sub_240AF0D5C(0);
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v36 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AF0DF4();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v39 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3FF50(0);
  uint64_t v44 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  id v13 = (char *)&v33 - v12;
  uint64_t v14 = sub_240BB31D0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v35 = (char *)&v33 - v19;
  sub_240AF0EA0(0);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AF0218(a2, (uint64_t)v22);
  uint64_t v34 = v2;
  uint64_t v45 = v2;
  uint64_t v46 = v42;
  uint64_t v43 = v22;
  sub_240AEE6B0((void (*)(char *))sub_240AF0F20, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_240AF0F50((uint64_t)v13, (uint64_t (*)(void))sub_240A3FF50);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v11, 1, 1, v14);
    uint64_t v23 = v36;
    sub_240BB6200();
    sub_240A339F0((unint64_t *)&qword_26AFD8A98, sub_240AF0D5C);
    uint64_t v24 = v38;
    uint64_t v25 = sub_240BB62E0();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v24);
  }
  else
  {
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    uint64_t v27 = v35;
    v26(v35, v13, v14);
    uint64_t v47 = sub_240AEFC08();
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v27, v14);
    unint64_t v28 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v29 = swift_allocObject();
    v26((char *)(v29 + v28), v18, v14);
    sub_240A3B664();
    sub_240A339F0(&qword_26AFD7528, (void (*)(uint64_t))sub_240A3B664);
    uint64_t v30 = v39;
    sub_240BB6330();
    swift_release();
    swift_release();
    sub_240A339F0(&qword_268CA06F0, (void (*)(uint64_t))sub_240AF0DF4);
    uint64_t v31 = v41;
    uint64_t v25 = sub_240BB62E0();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v30, v31);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v27, v14);
  }
  sub_240AF0F50((uint64_t)v43, (uint64_t (*)(void))sub_240AF0EA0);
  return v25;
}

uint64_t sub_240AEFB2C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_240BB31D0();
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, a1, v4);
  sub_240BB3150();
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);

  return v5(a2, 0, 1, v4);
}

uint64_t sub_240AEFC08()
{
  uint64_t v1 = *v0;
  sub_240AF1C54();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v10[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB3250();
  sub_240A3466C(v10, v10[3]);
  sub_240BB31F0();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v10);
  sub_240BB5220();
  swift_allocObject();
  v10[0] = sub_240BB5210();
  uint64_t v9 = sub_240BB4F00();
  *(void *)(swift_allocObject() + 16) = v1;
  sub_240A59EEC();
  sub_240A39C60(0, (unint64_t *)&qword_26AFD9858, MEMORY[0x263F8D4F8], MEMORY[0x263EFDDF8]);
  sub_240A339F0((unint64_t *)&qword_26AFD9820, (void (*)(uint64_t))sub_240A59EEC);
  sub_240A8ECCC();
  sub_240BB6350();
  swift_release();
  swift_release();
  sub_240A339F0(&qword_268CA0700, (void (*)(uint64_t))sub_240AF1C54);
  uint64_t v7 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_release();
  return v7;
}

uint64_t sub_240AEFEC0@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_240BB5990();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  sub_240BB3BF0();
  id v9 = v8;
  id v10 = v8;
  uint64_t v11 = sub_240BB5970();
  os_log_type_t v12 = sub_240BB7180();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    v22[1] = a2;
    uint64_t v14 = v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v24 = v15;
    *(_DWORD *)uint64_t v14 = 136446466;
    uint64_t v16 = sub_240BB7C80();
    uint64_t v23 = sub_240A38940(v16, v17, &v24);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    uint64_t v23 = (uint64_t)v8;
    id v18 = v8;
    sub_240A49AC0();
    uint64_t v19 = sub_240BB6E10();
    uint64_t v23 = sub_240A38940(v19, v20, &v24);
    sub_240BB75F0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240A1B000, v11, v12, "[%{public}s] Failed to fetch dismissal state: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v15, -1, -1);
    MEMORY[0x24560B930](v14, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  LOBYTE(v24) = 0;
  return sub_240BB6200();
}

void ElectrocardiogramRecordingOnboardingPromotionConfigurationProvider.makeDismissalStateManager(context:)(uint64_t *a1@<X8>)
{
  sub_240BB3250();
  sub_240A3466C(v7, v7[3]);
  uint64_t v2 = (void *)sub_240BB31F0();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v7);
  uint64_t v3 = sub_240BB5220();
  swift_allocObject();
  id v4 = v2;
  uint64_t v5 = sub_240BB5210();
  uint64_t v6 = MEMORY[0x263F44638];
  a1[3] = v3;
  a1[4] = v6;

  *a1 = v5;
}

uint64_t sub_240AF0218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v70 = a2;
  uint64_t v4 = *v2;
  id v59 = v2;
  uint64_t v60 = v4;
  uint64_t v5 = sub_240BB5990();
  uint64_t v67 = *(void *)(v5 - 8);
  uint64_t v68 = v5;
  MEMORY[0x270FA5388](v5);
  long long v69 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AB7B08(0);
  MEMORY[0x270FA5388](v7 - 8);
  os_log_type_t v61 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240BB56B0();
  uint64_t v62 = *(void *)(v9 - 8);
  uint64_t v63 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_240BB5660();
  uint64_t v65 = *(void *)(v12 - 8);
  uint64_t v66 = v12;
  MEMORY[0x270FA5388](v12);
  os_log_t v64 = (os_log_t)((char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_240BB56E0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  id v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v59 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v59 - v22;
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v25 = a1;
  v24((char *)&v59 - v22, a1, v14);
  int v26 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v23, v14);
  if (v26 == *MEMORY[0x263F44990])
  {
    uint64_t v27 = type metadata accessor for ElectrocardiogramRecordingOnboardingPromotionConfiguration();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v70, 1, 1, v27);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v23, v14);
  }
  else if (v26 == *MEMORY[0x263F44988])
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v23, v14);
    os_log_t v30 = v64;
    uint64_t v29 = v65;
    uint64_t v31 = v66;
    (*(void (**)(os_log_t, char *, uint64_t))(v65 + 32))(v64, v23, v66);
    sub_240BB5650();
    id v32 = (id)*MEMORY[0x263F095B0];
    uint64_t v33 = (void *)sub_240BB56C0();

    (*(void (**)(char *, uint64_t))(v62 + 8))(v11, v63);
    LODWORD(v32) = objc_msgSend(v33, sel_areAllRequirementsSatisfied, v59, v60);

    if (v32)
    {
      char v34 = sub_240AF0A88();
      uint64_t v35 = sub_240BB3340();
      uint64_t v36 = *(void *)(v35 - 8);
      uint64_t v37 = (unsigned int *)MEMORY[0x263F456F8];
      if ((v34 & 1) == 0) {
        uint64_t v37 = (unsigned int *)MEMORY[0x263F456F0];
      }
      uint64_t v38 = (uint64_t)v61;
      (*(void (**)(char *, void, uint64_t))(*(void *)(v35 - 8) + 104))(v61, *v37, v35);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v36 + 56))(v38, 0, 1, v35);
      uint64_t v39 = v70;
      sub_240AF1DB4(v38, v70, (uint64_t (*)(void))sub_240AB7B08);
      uint64_t v40 = type metadata accessor for ElectrocardiogramRecordingOnboardingPromotionConfiguration();
      uint64_t v41 = v39 + *(int *)(v40 + 20);
      *(void *)uint64_t v41 = 0xD00000000000002CLL;
      *(void *)(v41 + 8) = 0x8000000240BCF680;
      *(unsigned char *)(v41 + 16) = 0;
      uint64_t v42 = (void *)(v39 + *(int *)(v40 + 24));
      void *v42 = 0xD000000000000016;
      v42[1] = 0x8000000240BCF6B0;
      (*(void (**)(os_log_t, uint64_t))(v29 + 8))(v30, v31);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 0, 1, v40);
    }
    else
    {
      (*(void (**)(os_log_t, uint64_t))(v29 + 8))(v30, v31);
      uint64_t v56 = type metadata accessor for ElectrocardiogramRecordingOnboardingPromotionConfiguration();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v70, 1, 1, v56);
    }
  }
  else
  {
    uint64_t v43 = v69;
    sub_240BB3BF0();
    uint64_t v44 = v21;
    v24(v21, v25, v14);
    uint64_t v45 = sub_240BB5970();
    os_log_type_t v46 = sub_240BB7180();
    int v47 = v46;
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v48 = swift_slowAlloc();
      uint64_t v66 = swift_slowAlloc();
      uint64_t v72 = v66;
      *(_DWORD *)uint64_t v48 = 136446466;
      uint64_t v63 = v48 + 4;
      uint64_t v49 = sub_240BB7C80();
      LODWORD(v65) = v47;
      uint64_t v71 = sub_240A38940(v49, v50, &v72);
      os_log_t v64 = v45;
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 12) = 2080;
      v24(v18, (uint64_t)v44, v14);
      uint64_t v51 = sub_240BB6E10();
      uint64_t v71 = sub_240A38940(v51, v52, &v72);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      uint64_t v53 = *(void (**)(char *, uint64_t))(v15 + 8);
      v53(v44, v14);
      os_log_t v54 = v64;
      _os_log_impl(&dword_240A1B000, v64, (os_log_type_t)v65, "[%{public}s] Unknown feature status received: %s", (uint8_t *)v48, 0x16u);
      uint64_t v55 = v66;
      swift_arrayDestroy();
      MEMORY[0x24560B930](v55, -1, -1);
      MEMORY[0x24560B930](v48, -1, -1);

      (*(void (**)(char *, uint64_t))(v67 + 8))(v69, v68);
    }
    else
    {
      uint64_t v53 = *(void (**)(char *, uint64_t))(v15 + 8);
      v53(v44, v14);

      (*(void (**)(char *, uint64_t))(v67 + 8))(v43, v68);
    }
    uint64_t v57 = v70;
    uint64_t v58 = type metadata accessor for ElectrocardiogramRecordingOnboardingPromotionConfiguration();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v57, 1, 1, v58);
    return ((uint64_t (*)(char *, uint64_t))v53)(v23, v14);
  }
}

uint64_t sub_240AF0A88()
{
  v18[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = sub_240BB28D0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_240A79AB4();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = *(void **)(v0 + 16);
  v18[0] = 0;
  id v9 = objc_msgSend(v8, sel_dateOfBirthComponentsWithError_, v18);
  id v10 = v18[0];
  if (v9)
  {
    uint64_t v11 = v9;
    sub_240BB28B0();
    id v12 = v10;

    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 32))(v7, v4, v1);
    uint64_t v13 = 1;
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v2 + 56))(v7, 0, 1, v1);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) != 1) {
      goto LABEL_6;
    }
  }
  else
  {
    id v14 = v18[0];
    uint64_t v15 = (void *)sub_240BB2A50();

    swift_willThrow();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v7, 1, 1, v1);
  }
  uint64_t v13 = 0;
LABEL_6:
  sub_240AF0F50((uint64_t)v7, (uint64_t (*)(void))sub_240A79AB4);
  return v13;
}

uint64_t ElectrocardiogramRecordingOnboardingPromotionConfigurationProvider.deinit()
{
  return v0;
}

uint64_t ElectrocardiogramRecordingOnboardingPromotionConfigurationProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_240AF0D1C(uint64_t a1, uint64_t a2)
{
  return ElectrocardiogramRecordingOnboardingPromotionConfigurationProvider.makeFeedItemPublisher(context:featureStatus:)(a1, a2);
}

unint64_t sub_240AF0D40()
{
  return 0xD00000000000001ELL;
}

void sub_240AF0D5C(uint64_t a1)
{
}

void sub_240AF0D90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_240AF0DF4()
{
  if (!qword_26AFD8940)
  {
    sub_240A3B664();
    sub_240A3FF50(255);
    sub_240A339F0(&qword_26AFD7528, (void (*)(uint64_t))sub_240A3B664);
    unint64_t v0 = sub_240BB6010();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD8940);
    }
  }
}

void sub_240AF0EA0(uint64_t a1)
{
}

uint64_t type metadata accessor for ElectrocardiogramRecordingOnboardingPromotionConfiguration()
{
  uint64_t result = qword_26AFD8638;
  if (!qword_26AFD8638) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240AF0F20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240AEED2C(*(void *)(v2 + 24), a1, a2);
}

uint64_t sub_240AF0F50(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_240AF0FB0()
{
  uint64_t v1 = sub_240BB31D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_240AF1040@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_240BB31D0() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_240AEFB2C(v4, a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for ElectrocardiogramRecordingOnboardingPromotionConfiguration(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_240BB3340();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_240AB7B08(0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 20);
    id v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = *(void *)v13;
    uint64_t v15 = *((void *)v13 + 1);
    unsigned __int8 v16 = v13[16];
    sub_240AF1274(*(void *)v13, v15, v16);
    *(void *)id v12 = v14;
    *((void *)v12 + 1) = v15;
    v12[16] = v16;
    uint64_t v17 = *(int *)(a3 + 24);
    id v18 = (uint64_t *)((char *)a1 + v17);
    uint64_t v19 = (uint64_t *)((char *)a2 + v17);
    uint64_t v20 = v19[1];
    *id v18 = *v19;
    v18[1] = v20;
    sub_240BB4850();
  }
  return a1;
}

uint64_t sub_240AF1274(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 5u) {
    return sub_240BB4850();
  }
  return result;
}

uint64_t destroy for ElectrocardiogramRecordingOnboardingPromotionConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240BB3340();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  sub_240AF1370(*(void *)(a1 + *(int *)(a2 + 20)), *(void *)(a1 + *(int *)(a2 + 20) + 8), *(unsigned char *)(a1 + *(int *)(a2 + 20) + 16));

  return swift_bridgeObjectRelease();
}

uint64_t sub_240AF1370(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 5u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *initializeWithCopy for ElectrocardiogramRecordingOnboardingPromotionConfiguration(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_240BB3340();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_240AB7B08(0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(void *)v11;
  uint64_t v13 = *((void *)v11 + 1);
  unsigned __int8 v14 = v11[16];
  sub_240AF1274(*(void *)v11, v13, v14);
  *(void *)uint64_t v10 = v12;
  *((void *)v10 + 1) = v13;
  v10[16] = v14;
  uint64_t v15 = *(int *)(a3 + 24);
  unsigned __int8 v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = *((void *)v17 + 1);
  *(void *)unsigned __int8 v16 = *(void *)v17;
  *((void *)v16 + 1) = v18;
  sub_240BB4850();
  return a1;
}

char *assignWithCopy for ElectrocardiogramRecordingOnboardingPromotionConfiguration(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_240BB3340();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_240AB7B08(0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  unsigned __int8 v14 = &a2[v12];
  uint64_t v15 = *(void *)v14;
  uint64_t v16 = *((void *)v14 + 1);
  unsigned __int8 v17 = v14[16];
  sub_240AF1274(*(void *)v14, v16, v17);
  uint64_t v18 = *(void *)v13;
  uint64_t v19 = *((void *)v13 + 1);
  *(void *)uint64_t v13 = v15;
  *((void *)v13 + 1) = v16;
  unsigned __int8 v20 = v13[16];
  v13[16] = v17;
  sub_240AF1370(v18, v19, v20);
  uint64_t v21 = *(int *)(a3 + 24);
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = *((void *)v23 + 1);
  sub_240BB4850();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for ElectrocardiogramRecordingOnboardingPromotionConfiguration(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_240BB3340();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_240AB7B08(0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  v11[16] = v12[16];
  *(_OWORD *)&a1[v10] = *(_OWORD *)&a2[v10];
  return a1;
}

char *assignWithTake for ElectrocardiogramRecordingOnboardingPromotionConfiguration(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_240BB3340();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_240AB7B08(0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  unsigned __int8 v14 = &a2[v12];
  char v15 = v14[16];
  uint64_t v16 = *(void *)v13;
  uint64_t v17 = *((void *)v13 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  unsigned __int8 v18 = v13[16];
  v13[16] = v15;
  sub_240AF1370(v16, v17, v18);
  uint64_t v19 = *(int *)(a3 + 24);
  unsigned __int8 v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v23 = *(void *)v21;
  uint64_t v22 = *((void *)v21 + 1);
  *(void *)unsigned __int8 v20 = v23;
  *((void *)v20 + 1) = v22;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ElectrocardiogramRecordingOnboardingPromotionConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240AF19DC);
}

uint64_t sub_240AF19DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240AB7B08(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ElectrocardiogramRecordingOnboardingPromotionConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240AF1AB4);
}

void sub_240AF1AB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_240AB7B08(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
}

void sub_240AF1B74()
{
  sub_240AB7B08(319);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_240AF1C14()
{
  unint64_t result = qword_26AFD9918;
  if (!qword_26AFD9918)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD9918);
  }
  return result;
}

void sub_240AF1C54()
{
  if (!qword_268CA06F8)
  {
    sub_240A59EEC();
    sub_240A39C60(255, (unint64_t *)&qword_26AFD9858, MEMORY[0x263F8D4F8], MEMORY[0x263EFDDF8]);
    sub_240A339F0((unint64_t *)&qword_26AFD9820, (void (*)(uint64_t))sub_240A59EEC);
    sub_240A8ECCC();
    unint64_t v0 = sub_240BB6030();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA06F8);
    }
  }
}

uint64_t sub_240AF1D34()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240AF1D44@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240AEFEC0(a1, a2);
}

uint64_t sub_240AF1D4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_240AF1DB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_240AF1E1C(uint64_t a1)
{
  uint64_t v2 = sub_240BB4770();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v22 = MEMORY[0x263F8EE78];
    sub_240B0CBB4(0, v6, 0);
    uint64_t v7 = v22;
    unint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v8 = v3 + 16;
    uint64_t v9 = v10;
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v8 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64));
    uint64_t v18 = *(void *)(v8 + 56);
    do
    {
      v9(v5, v11, v2);
      uint64_t v22 = v7;
      unint64_t v13 = *(void *)(v7 + 16);
      unint64_t v12 = *(void *)(v7 + 24);
      if (v13 >= v12 >> 1) {
        sub_240B0CBB4(v12 > 1, v13 + 1, 1);
      }
      uint64_t v20 = v2;
      uint64_t v21 = sub_240A33A38((unint64_t *)&qword_268C9FDF0, MEMORY[0x263F441F0]);
      unsigned __int8 v14 = sub_240A23B08((uint64_t *)&v19);
      v9((char *)v14, (uint64_t)v5, v2);
      uint64_t v15 = v22;
      *(void *)(v22 + 16) = v13 + 1;
      sub_240A37388(&v19, v15 + 40 * v13 + 32);
      (*(void (**)(char *, uint64_t))(v8 - 8))(v5, v2);
      uint64_t v7 = v22;
      v11 += v18;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_240AF2018(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_240B0CBEC(0, v1, 0);
    uint64_t v2 = v13;
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      uint64_t v13 = v2;
      unint64_t v7 = *(void *)(v2 + 16);
      unint64_t v8 = *(void *)(v2 + 24);
      sub_240BB4850();
      if (v7 >= v8 >> 1)
      {
        sub_240B0CBEC(v8 > 1, v7 + 1, 1);
        uint64_t v2 = v13;
      }
      uint64_t v11 = &type metadata for AFibBurdenPDFChartPage;
      unint64_t v12 = sub_240AF3918();
      *(void *)&long long v10 = v5;
      *((void *)&v10 + 1) = v6;
      *(void *)(v2 + 16) = v7 + 1;
      sub_240A37388(&v10, v2 + 40 * v7 + 32);
      v4 += 2;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_240AF2124()
{
  uint64_t v1 = sub_240BB5BD0();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v25 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = (uint64_t (*)(uint64_t))MEMORY[0x263F441F0];
  sub_240AF3554(0, &qword_268CA0708, &qword_268CA0710, MEMORY[0x263F441F0]);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v23 = v4;
  uint64_t v24 = v5;
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v21 - v6;
  uint64_t v22 = (uint64_t (*)(uint64_t))MEMORY[0x263F44068];
  sub_240AF3554(0, (unint64_t *)&qword_268CA0548, &qword_268CA0550, MEMORY[0x263F44068]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v12 = (char *)&v21 - v11;
  uint64_t v13 = *(void *)(v0 + 32);
  uint64_t ObjectType = swift_getObjectType();
  v26[0] = sub_240B21B24(ObjectType, v13);
  sub_240A3B664();
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D488];
  sub_240AF38B4(0, &qword_268CA0710, v3, MEMORY[0x263F8D488]);
  sub_240A33A38(&qword_26AFD7528, (void (*)(uint64_t))sub_240A3B664);
  swift_retain();
  sub_240BB6330();
  swift_release();
  swift_release();
  sub_240AF38B4(0, &qword_268CA0550, v22, v15);
  uint64_t v16 = v23;
  sub_240BB6000();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v16);
  sub_240AF366C();
  sub_240BB62C0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_240BB4CE0();
  sub_240BB4140();
  swift_release();
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  sub_240BB2980();
  sub_240BB5B90();
  uint64_t v17 = sub_240BB3C10();
  swift_allocObject();
  uint64_t v18 = sub_240BB3C00();
  v26[3] = v17;
  v26[4] = sub_240A33A38(&qword_268CA0718, MEMORY[0x263F43AA8]);
  v26[0] = v18;
  sub_240AE8D78();
  sub_240AF36E8();
  sub_240BB4150();
  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v26);
  sub_240AF371C(0);
  sub_240AF3764();
  uint64_t v19 = sub_240BB4170();
  swift_release();
  sub_240AF3798();
  return v19;
}

uint64_t sub_240AF2630@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_240BB2D40();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  sub_240AF38B4(0, &qword_268CA0B10, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
  sub_240BB44D0();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_240BB97E0;
  sub_240AF1E1C(v8);
  sub_240BB2D30();
  sub_240BB2D00();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t result = sub_240BB44C0();
  *a2 = v9;
  return result;
}

uint64_t sub_240AF2800()
{
  uint64_t v0 = sub_240BB4720();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB46F0();
  uint64_t v4 = sub_240BB4710();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_240AF28D4()
{
  sub_240AF38B4(0, &qword_268C9E878, MEMORY[0x263F441F0], MEMORY[0x263F8E0F8]);
  sub_240BB4770();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_240BBD8D0;
  uint64_t v3 = v1;
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  sub_240BB2980();
  if (qword_268C9E660 != -1) {
    swift_once();
  }
  sub_240BB4850();
  sub_240BB6E70();
  sub_240BB6E70();
  swift_retain();
  sub_240BB4750();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_240BB2980();
  sub_240BB4850();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB4750();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_240BB2980();
  sub_240BB4850();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB4750();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_240BB2980();
  sub_240BB4850();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB4750();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_240BB2980();
  sub_240BB4850();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB4750();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = v3;
  if (*(unsigned char *)(v0 + 40) == 1)
  {
    if (*(void *)(v3 + 16))
    {
      sub_240AF336C(0, 1);
      return v3;
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_240AF2EB4(uint64_t a1)
{
  id v2 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenOnboardingStartViewController());
  swift_retain();
  uint64_t v3 = sub_240B37A08(0, a1, (uint64_t)&off_26F507130);
  swift_release();
  return v3;
}

uint64_t sub_240AF2F10()
{
  return sub_240AF2FC0((uint64_t (*)(void))type metadata accessor for AFibBurdenOnboardingHowItWorksViewController, (uint64_t (*)(void))sub_240B56F20);
}

uint64_t sub_240AF2F3C()
{
  return sub_240AF2FC0((uint64_t (*)(void))type metadata accessor for AFibBurdenOnboardingResultsViewController, (uint64_t (*)(void))sub_240B47C4C);
}

uint64_t sub_240AF2F68()
{
  return sub_240AF2FC0((uint64_t (*)(void))type metadata accessor for AFibBurdenOnboardingLifeFactorsViewController, (uint64_t (*)(void))sub_240A995B8);
}

uint64_t sub_240AF2F94()
{
  return sub_240AF2FC0((uint64_t (*)(void))type metadata accessor for AFibBurdenOnboardingShouldKnowViewController, (uint64_t (*)(void))sub_240B72D90);
}

uint64_t sub_240AF2FC0(uint64_t (*a1)(void), uint64_t (*a2)(void))
{
  id v3 = objc_allocWithZone((Class)a1(0));
  return a2(0);
}

void sub_240AF3004(void *a1)
{
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_240BB5990();
  sub_240A395FC(v2, (uint64_t)qword_26AFDEC70);
  id v3 = sub_240BB5970();
  os_log_type_t v4 = sub_240BB7180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v12 = v6;
    *(_DWORD *)uint64_t v5 = 136315394;
    uint64_t v7 = sub_240BB7C80();
    sub_240A38940(v7, v8, &v12);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    sub_240A38940(0xD00000000000002BLL, 0x8000000240BCF720, &v12);
    sub_240BB75F0();
    _os_log_impl(&dword_240A1B000, v3, v4, "[%s.%s]: Presenting AFib History article", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v6, -1, -1);
    MEMORY[0x24560B930](v5, -1, -1);
  }

  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  sub_240BB2980();
  sub_240B70DF8();
  id v9 = objc_allocWithZone((Class)sub_240BB3510());
  uint64_t v10 = (void *)sub_240BB3500();
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v10, 0xE000000000000000);
  objc_msgSend(a1, sel_presentViewController_animated_completion_, v11, 1, 0);
}

uint64_t sub_240AF32FC()
{
  sub_240BB50A0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AFibBurdenEducationSectionGenerator()
{
  return self;
}

uint64_t sub_240AF3364()
{
  return sub_240AF2EB4(v0);
}

uint64_t sub_240AF336C(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_240A42CC8(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = *(void *)(sub_240BB4770() - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      unint64_t *v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = sub_240BB7970();
  __break(1u);
  return result;
}

void sub_240AF3554(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_240A3B664();
    sub_240AF38B4(255, a3, a4, MEMORY[0x263F8D488]);
    sub_240A33A38(&qword_26AFD7528, (void (*)(uint64_t))sub_240A3B664);
    unint64_t v7 = sub_240BB6010();
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_240AF3624@<X0>(unsigned char *a1@<X0>, uint64_t *a2@<X8>)
{
  if ((*a1 & 1) != 0 || *(unsigned char *)(v2 + 40) == 1) {
    uint64_t result = sub_240AF28D4();
  }
  else {
    uint64_t result = MEMORY[0x263F8EE78];
  }
  *a2 = result;
  return result;
}

unint64_t sub_240AF366C()
{
  unint64_t result = qword_268CA0570;
  if (!qword_268CA0570)
  {
    sub_240AF3554(255, (unint64_t *)&qword_268CA0548, &qword_268CA0550, MEMORY[0x263F44068]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0570);
  }
  return result;
}

uint64_t sub_240AF36E8()
{
  return sub_240A33A38(&qword_268CA0580, (void (*)(uint64_t))sub_240AE8D78);
}

void sub_240AF371C(uint64_t a1)
{
}

uint64_t sub_240AF3764()
{
  return sub_240A33A38(&qword_268CA0728, sub_240AF371C);
}

unint64_t sub_240AF3798()
{
  unint64_t result = qword_268CA0730;
  if (!qword_268CA0730)
  {
    sub_240AF3834(255, &qword_268CA0738, (uint64_t (*)(uint64_t))sub_240AF371C, sub_240AF3764, MEMORY[0x263F43F28]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0730);
  }
  return result;
}

void sub_240AF3834(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_240AF38B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_240AF3918()
{
  unint64_t result = qword_268CA0740;
  if (!qword_268CA0740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0740);
  }
  return result;
}

void sub_240AF396C()
{
  id v0 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *MEMORY[0x263F47658]);
  objc_msgSend(self, sel_setTachycardiaThresholdHeartRate_, v0);
}

uint64_t sub_240AF39EC()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v0 = (id)qword_26AFDECD8;

  return sub_240BB36C0();
}

uint64_t sub_240AF3A80(char a1)
{
  if (a1)
  {
    objc_msgSend(self, sel_tachycardiaThresholdHeartRate);
    id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
    sub_240A576E0();
    uint64_t v2 = (void *)sub_240BB74E0();
    uint64_t v3 = sub_240B91C50(v2, (uint64_t)v1);
    uint64_t v5 = v4;

    if (qword_26AFDA090 != -1) {
      swift_once();
    }
    sub_240BB2980();
    sub_240A57720();
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_240BB97E0;
    *(void *)(v6 + 56) = MEMORY[0x263F8D310];
    *(void *)(v6 + 64) = sub_240A4C66C();
    *(void *)(v6 + 32) = v3;
    *(void *)(v6 + 40) = v5;
    uint64_t v7 = sub_240BB6DB0();
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_240BB2980();
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_240BB97E0;
    uint64_t v11 = *MEMORY[0x263F47660];
    uint64_t v12 = MEMORY[0x263F8D750];
    *(void *)(v10 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v10 + 64) = v12;
    *(void *)(v10 + 32) = v11;
    uint64_t v13 = sub_240BB6DB0();
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_240A57608();
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_240BBAE40;
    *(void *)(v16 + 32) = v7;
    *(void *)(v16 + 40) = v9;
    *(void *)(v16 + 48) = v13;
  }
  else
  {
    sub_240A57608();
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_240BBAE40;
    if (qword_26AFDA090 != -1) {
      swift_once();
    }
    *(void *)(v16 + 32) = sub_240BB2980();
    *(void *)(v16 + 40) = v17;
    uint64_t v18 = sub_240BB2980();
    uint64_t v15 = v19;
    *(void *)(v16 + 48) = v18;
  }
  *(void *)(v16 + 56) = v15;
  return v16;
}

uint64_t sub_240AF3DC4()
{
  return 0x6165482068676948;
}

uint64_t sub_240AF3DE8()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  return sub_240BB2980();
}

ValueMetadata *_s34AFibBurdenDisclosureItemsComponentVMa()
{
  return &_s34AFibBurdenDisclosureItemsComponentVN;
}

uint64_t sub_240AF3E84()
{
  sub_240AF404C();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_240BB97E0;
  uint64_t v1 = sub_240BB4C30();
  sub_240BB4C40();
  *(void *)(v0 + 56) = &type metadata for AFibBurdenAboutItem;
  *(void *)(v0 + 64) = sub_240A8D990();
  uint64_t v2 = swift_allocObject();
  *(void *)(v0 + 32) = v2;
  sub_240A8CCD0(v1, &v6, (uint64_t *)(v2 + 16));
  uint64_t v3 = sub_240BB5420();
  uint64_t v4 = MEMORY[0x263F44788];
  *(void *)(v0 + 72) = v3;
  *(void *)(v0 + 80) = v4;
  return v0;
}

uint64_t sub_240AF3F3C()
{
  uint64_t v1 = sub_240BB4A00();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = *v0;
  sub_240BB49E0();
  uint64_t v6 = sub_240BB49F0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6;
}

void sub_240AF404C()
{
  if (!qword_268CA07B0)
  {
    sub_240AF40A4();
    unint64_t v0 = sub_240BB7AB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA07B0);
    }
  }
}

void sub_240AF40A4()
{
  if (!qword_268CA07B8)
  {
    sub_240A3FD54(255, (unint64_t *)&qword_268CA0B00);
    sub_240AF412C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CA07B8);
    }
  }
}

unint64_t sub_240AF412C()
{
  unint64_t result = qword_268CA07C0;
  if (!qword_268CA07C0)
  {
    sub_240A3FD54(255, &qword_268CA07C8);
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CA07C0);
  }
  return result;
}

uint64_t sub_240AF417C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 72);

  return MEMORY[0x270FA0238](v0, 112, 7);
}

uint64_t destroy for TitleSubtitleItem()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for TitleSubtitleItem(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  sub_240BB4850();
  sub_240BB4850();
  sub_240BB4850();
  sub_240BB4850();
  return a1;
}

void *assignWithCopy for TitleSubtitleItem(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for TitleSubtitleItem(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TitleSubtitleItem()
{
  return &type metadata for TitleSubtitleItem;
}

uint64_t type metadata accessor for IRNFeatureRegulatoryInfoTransformProvider()
{
  uint64_t result = qword_268CA07D0;
  if (!qword_268CA07D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240AF43FC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_240AF443C()
{
  if (qword_268C9E7D0 != -1) {
    swift_once();
  }
  return sub_240BB2980();
}

uint64_t sub_240AF44C8()
{
  return 1718514281;
}

uint64_t sub_240AF44D8()
{
  if (qword_268C9E7D0 != -1) {
    swift_once();
  }
  sub_240BB2980();
  sub_240BB2B10();

  return swift_bridgeObjectRelease();
}

uint64_t sub_240AF4598()
{
  return type metadata accessor for IRNFeatureRegulatoryInfoTransformProvider();
}

uint64_t type metadata accessor for BloodPressureDataTypeDetailViewController()
{
  uint64_t result = qword_268CA07E0;
  if (!qword_268CA07E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240AF45EC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_240AF462C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240BB4C70();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_allocWithZone(v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v9 = sub_240BB4D60();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  return v9;
}

id sub_240AF4744(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for BloodPressureDataTypeDetailViewController();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_240AF4790()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BloodPressureDataTypeDetailViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240AF47C8()
{
  return type metadata accessor for BloodPressureDataTypeDetailViewController();
}

uint64_t sub_240AF47D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240AF47E4);
}

uint64_t sub_240AF47E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AFibBurdenPDFChartViewModel();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 28) + 16);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_240AF48AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240AF48C0);
}

uint64_t sub_240AF48C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for AFibBurdenPDFChartViewModel();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28) + 16) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for AFibBurdenPDFLineChart()
{
  uint64_t result = qword_268CA07F0;
  if (!qword_268CA07F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240AF49D0()
{
  uint64_t result = type metadata accessor for AFibBurdenPDFChartViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_240AF4A7C@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, char a3@<W2>, void *a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  v130 = a5;
  uint64_t v141 = a6;
  uint64_t v140 = sub_240BB6570();
  uint64_t v139 = *(void *)(v140 - 8);
  MEMORY[0x270FA5388](v140);
  v138 = (char *)&v112 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AF86E4(0, &qword_268C9F010, MEMORY[0x263EFCD98], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  v136 = (char *)&v112 - v12;
  sub_240AF8878(0, &qword_268CA0820, (uint64_t (*)(uint64_t))sub_240AF7510, (uint64_t (*)(void))sub_240AF7C44, MEMORY[0x263EFCCF8]);
  uint64_t v121 = v13;
  uint64_t v120 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  v119 = (char *)&v112 - v14;
  sub_240AF7F3C();
  uint64_t v124 = v15;
  uint64_t v123 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  v122 = (char *)&v112 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AF80C0();
  uint64_t v129 = v17;
  uint64_t v126 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  v125 = (char *)&v112 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AF81F4();
  uint64_t v132 = v19;
  uint64_t v131 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  v128 = (char *)&v112 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AF839C();
  uint64_t v135 = v21;
  uint64_t v134 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  v133 = (char *)&v112 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AF89CC(0, &qword_268CA08A8, (uint64_t (*)(uint64_t))sub_240AF839C, MEMORY[0x263F18868], MEMORY[0x263F18E28]);
  uint64_t v127 = v23;
  MEMORY[0x270FA5388](v23);
  v137 = (char *)&v112 - v24;
  sub_240A617D4();
  v143 = v25;
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  v118 = (char *)&v112 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  v115 = (char *)&v112 - v28;
  v142 = (void *)sub_240BB2CF0();
  uint64_t v114 = *(v142 - 1);
  uint64_t v29 = MEMORY[0x270FA5388](v142);
  uint64_t v31 = (char *)&v112 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v33 = (char *)&v112 - v32;
  sub_240A61110(0);
  uint64_t v117 = v34;
  uint64_t v35 = MEMORY[0x270FA5388](v34);
  v116 = (char *)&v112 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  uint64_t v144 = (uint64_t)&v112 - v37;
  uint64_t v38 = sub_240BB27F0();
  uint64_t v145 = *(void *)(v38 - 8);
  uint64_t v146 = v38;
  MEMORY[0x270FA5388](v38);
  v147 = (char *)&v112 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_240BB5D70();
  MEMORY[0x270FA5388](v40 - 8);
  uint64_t v41 = sub_240BB5CD0();
  MEMORY[0x270FA5388](v41 - 8);
  uint64_t v42 = sub_240BB5D10();
  MEMORY[0x270FA5388](v42 - 8);
  if (*((unsigned char *)a1 + *(int *)(type metadata accessor for AFibBurdenPDFChartViewModel() + 32)) == 2) {
    sub_240B7DA84(a2, a3, (uint64_t)a4);
  }
  unint64_t v43 = sub_240B7DFD4(3, a2, a3, a4);
  if (v43)
  {
    unint64_t v44 = v43;
    sub_240B7F310(v43);
    uint64_t v46 = v45;
    sub_240AF8878(0, &qword_268C9F108, (uint64_t (*)(uint64_t))sub_240A61CA0, (uint64_t (*)(void))sub_240A62244, MEMORY[0x263EFCD78]);
    *((void *)&v152 + 1) = v47;
    *(void *)&long long v153 = sub_240A623B4();
    v113 = sub_240A23B08((uint64_t *)&v151);
    *(void *)&long long v149 = v46;
    sub_240A62450();
    sub_240BB5CE0();
    uint64_t v48 = swift_allocObject();
    *(void *)(v48 + 16) = a2;
    *(unsigned char *)(v48 + 24) = a3;
    *(void *)(v48 + 32) = a4;
    *(void *)(v48 + 40) = v44;
    id v49 = a2;
    id v50 = a4;
    sub_240BB4850();
    sub_240BB5CC0();
    sub_240BB5D60();
    sub_240A61CA0();
    sub_240A62244();
    sub_240BB5EF0();
    sub_240A37388(&v151, (uint64_t)v150);
    sub_240B7F644(v44);
    uint64_t v52 = v51;
    uint64_t v54 = v53;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_240BB5CC0();
    sub_240BB5D60();
    sub_240BB5D00();
    sub_240AF8878(0, &qword_268C9F0D8, (uint64_t (*)(uint64_t))sub_240A6183C, (uint64_t (*)(void))sub_240A618B0, MEMORY[0x263EFCD78]);
    v150[3] = v55;
    v150[4] = sub_240A61928();
    sub_240A23B08(v150);
    sub_240A6183C();
    sub_240A618B0();
    sub_240BB5F00();
    uint64_t v52 = 0;
    uint64_t v54 = 0;
  }
  *(void *)&long long v149 = v52;
  *((void *)&v149 + 1) = v54;
  (*(void (**)(char *, uint64_t *, uint64_t))(v145 + 16))(v147, a1, v146);
  sub_240BB27D0();
  uint64_t v56 = v31;
  sub_240BB27A0();
  sub_240A61158();
  uint64_t v57 = v142;
  uint64_t result = sub_240BB6D80();
  if (result)
  {
    uint64_t v59 = v114;
    uint64_t v60 = v143;
    os_log_type_t v61 = v115;
    uint64_t v62 = &v115[*((int *)v143 + 12)];
    uint64_t v63 = *(void (**)(char *, char *, void *))(v114 + 32);
    v63(v115, v33, v57);
    v112 = v62;
    v63(v62, v56, v57);
    uint64_t v64 = *((int *)v60 + 12);
    uint64_t v65 = v118;
    uint64_t v66 = &v118[v64];
    v113 = a1;
    uint64_t v67 = *(void (**)(char *, char *, void *))(v59 + 16);
    v67(v118, v61, v57);
    v67(v66, v62, v57);
    uint64_t v68 = (uint64_t)v116;
    v63(v116, v65, v57);
    long long v69 = *(void (**)(char *, void *))(v59 + 8);
    v69(v66, v57);
    uint64_t v70 = &v65[*((int *)v143 + 12)];
    v63(v65, v61, v57);
    v63(v70, v112, v57);
    uint64_t v71 = v117;
    v63((char *)(v68 + *(int *)(v117 + 36)), v70, v57);
    v69(v65, v57);
    uint64_t v72 = sub_240A62730(v68, v144, (uint64_t (*)(void))sub_240A61110);
    v143 = &v112;
    MEMORY[0x270FA5388](v72);
    v73 = v147;
    *(&v112 - 2) = (char *)v113;
    *(&v112 - 1) = v73;
    sub_240AF7510();
    sub_240AF7C44();
    uint64_t v74 = v119;
    sub_240BB5E10();
    uint64_t v75 = sub_240BB5F50();
    v142 = *(void **)(*(void *)(v75 - 8) + 56);
    uint64_t v76 = (uint64_t)v136;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v142)(v136, 1, 1, v75);
    unint64_t v77 = sub_240AF8024();
    unint64_t v78 = sub_240A61228();
    id v79 = v122;
    uint64_t v80 = v121;
    sub_240BB6900();
    sub_240AF8580(v76);
    uint64_t v81 = (*(uint64_t (**)(char *, uint64_t))(v120 + 8))(v74, v80);
    MEMORY[0x270FA5388](v81);
    *(&v112 - 2) = v130;
    *(void *)&long long v151 = v80;
    *((void *)&v151 + 1) = v71;
    *(void *)&long long v152 = v77;
    *((void *)&v152 + 1) = v78;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v83 = MEMORY[0x263EFCC38];
    uint64_t v84 = MEMORY[0x263EFCC30];
    uint64_t v85 = v125;
    uint64_t v86 = v124;
    sub_240BB68E0();
    (*(void (**)(char *, uint64_t))(v123 + 8))(v79, v86);
    long long v148 = v149;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v142)(v76, 1, 1, v75);
    sub_240A62844(0, &qword_268C9F0B0, MEMORY[0x263F8D560], MEMORY[0x263F8D1A0]);
    uint64_t v88 = v87;
    *(void *)&long long v151 = v86;
    *((void *)&v151 + 1) = v83;
    *(void *)&long long v152 = OpaqueTypeConformance2;
    *((void *)&v152 + 1) = v84;
    uint64_t v89 = swift_getOpaqueTypeConformance2();
    unint64_t v90 = sub_240A6156C();
    v91 = v128;
    uint64_t v92 = v129;
    sub_240BB6910();
    sub_240AF8580(v76);
    uint64_t v93 = (*(uint64_t (**)(char *, uint64_t))(v126 + 8))(v85, v92);
    MEMORY[0x270FA5388](v93);
    *(&v112 - 2) = (char *)&v149;
    *(void *)&long long v151 = v92;
    *((void *)&v151 + 1) = v88;
    *(void *)&long long v152 = v89;
    *((void *)&v152 + 1) = v90;
    swift_getOpaqueTypeConformance2();
    v94 = v133;
    uint64_t v95 = v132;
    sub_240BB68F0();
    (*(void (**)(char *, uint64_t))(v131 + 8))(v91, v95);
    sub_240BB6B40();
    sub_240BB64E0();
    uint64_t v96 = v134;
    uint64_t v97 = (uint64_t)v137;
    uint64_t v98 = v135;
    (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v137, v94, v135);
    v99 = (_OWORD *)(v97 + *(int *)(v127 + 36));
    long long v100 = v152;
    _OWORD *v99 = v151;
    v99[1] = v100;
    v99[2] = v153;
    (*(void (**)(char *, uint64_t))(v96 + 8))(v94, v98);
    uint64_t KeyPath = swift_getKeyPath();
    id v102 = objc_msgSend(self, sel_sharedApplication);
    id v103 = objc_msgSend(v102, sel_userInterfaceLayoutDirection);

    uint64_t v104 = v139;
    v105 = (unsigned int *)MEMORY[0x263F18DD0];
    if (v103 != (id)1) {
      v105 = (unsigned int *)MEMORY[0x263F18DC8];
    }
    v106 = v138;
    uint64_t v107 = v140;
    (*(void (**)(char *, void, uint64_t))(v139 + 104))(v138, *v105, v140);
    sub_240AF8614();
    uint64_t v109 = v141;
    v110 = (uint64_t *)(v141 + *(int *)(v108 + 36));
    sub_240AF86E4(0, &qword_268C9F100, MEMORY[0x263F18DD8], MEMORY[0x263F1A418]);
    (*(void (**)(char *, char *, uint64_t))(v104 + 16))((char *)v110 + *(int *)(v111 + 28), v106, v107);
    uint64_t *v110 = KeyPath;
    sub_240AF8748(v97, v109);
    (*(void (**)(char *, uint64_t))(v104 + 8))(v106, v107);
    sub_240AF87E4(v97);
    sub_240A61BF0(v144);
    (*(void (**)(char *, uint64_t))(v145 + 8))(v147, v146);
    return sub_240A61C4C((uint64_t)&v149);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240AF5C60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v94 = a2;
  uint64_t v88 = a3;
  uint64_t v96 = sub_240BB2CF0();
  uint64_t v101 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  uint64_t v81 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AF89CC(0, &qword_268C9F168, MEMORY[0x263F07490], MEMORY[0x263EFCAD0], MEMORY[0x263EFCC50]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v92 = (char *)&v74 - v6;
  uint64_t v85 = sub_240BB5EE0();
  uint64_t v100 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  uint64_t v80 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AF88F8(0, &qword_268C9F060, MEMORY[0x263EFCD68]);
  uint64_t v93 = v8;
  uint64_t v99 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v84 = (char *)&v74 - v9;
  sub_240A60CF8();
  uint64_t v97 = v10;
  uint64_t v95 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v87 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v86 = (char *)&v74 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  v91 = (char *)&v74 - v16;
  MEMORY[0x270FA5388](v15);
  unint64_t v90 = (char *)&v74 - v17;
  uint64_t v18 = type metadata accessor for AFibBurdenPDFChartViewModel();
  uint64_t v19 = v18 - 8;
  uint64_t v20 = *(void *)(v18 - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  MEMORY[0x270FA5388](v18);
  sub_240AF7584();
  uint64_t v83 = v22;
  uint64_t v82 = *(void *)(v22 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v89 = (char *)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v98 = (char *)&v74 - v25;
  uint64_t v103 = *(void *)(a1 + *(int *)(v19 + 28));
  sub_240A625C4(a1, (uint64_t)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v26 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v27 = swift_allocObject();
  sub_240A62730((uint64_t)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), v27 + v26, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartViewModel);
  sub_240AF86E4(0, &qword_268C9F030, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFChartPoint, MEMORY[0x263F8D488]);
  id v79 = (void (*)(char *, uint64_t))sub_240BB27F0();
  sub_240AF7688();
  unint64_t v78 = v28;
  unint64_t v77 = sub_240A60C70();
  sub_240AF7840();
  uint64_t v30 = v29;
  sub_240AF79C0();
  uint64_t v32 = v31;
  unint64_t v33 = MEMORY[0x263EFCD48];
  sub_240AF88F8(255, &qword_268CA0850, MEMORY[0x263EFCD50]);
  uint64_t v35 = v34;
  sub_240AF7B10();
  unint64_t v37 = v36;
  uint64_t v38 = sub_240BB5EB0();
  sub_240BB4850();
  uint64_t v104 = v38;
  unint64_t v105 = MEMORY[0x263F1B440];
  unint64_t v106 = v33;
  uint64_t v107 = MEMORY[0x263F1B420];
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unint64_t v40 = sub_240AF7B9C();
  unint64_t v41 = sub_240AF7BF0();
  uint64_t v104 = MEMORY[0x263F1B638];
  unint64_t v105 = v40;
  unint64_t v106 = v41;
  uint64_t v42 = swift_getOpaqueTypeConformance2();
  uint64_t v104 = v35;
  unint64_t v105 = v37;
  unint64_t v106 = OpaqueTypeConformance2;
  uint64_t v107 = v42;
  uint64_t v43 = swift_getOpaqueTypeConformance2();
  uint64_t v104 = v32;
  unint64_t v105 = v43;
  uint64_t v44 = swift_getOpaqueTypeConformance2();
  uint64_t v104 = v30;
  unint64_t v105 = v44;
  swift_getOpaqueTypeConformance2();
  sub_240AF7454(&qword_268C9F170, (void (*)(uint64_t))type metadata accessor for AFibBurdenPDFChartPoint);
  sub_240BB6AD0();
  sub_240BB6740();
  uint64_t v45 = v81;
  sub_240BB27D0();
  uint64_t v46 = v80;
  uint64_t v47 = v96;
  sub_240BB5D50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v48 = *(void (**)(char *, uint64_t))(v101 + 8);
  id v49 = v45;
  v101 += 8;
  id v79 = v48;
  v48(v45, v47);
  sub_240BB5EC0();
  if (qword_268C9E708 != -1) {
    swift_once();
  }
  uint64_t v104 = qword_268CA2AE0;
  id v50 = v84;
  uint64_t v51 = v85;
  unint64_t v52 = MEMORY[0x263F1B440];
  unint64_t v53 = MEMORY[0x263EFCD60];
  uint64_t v54 = MEMORY[0x263F1B420];
  sub_240BB5C80();
  uint64_t v55 = *(void (**)(char *, uint64_t))(v100 + 8);
  v100 += 8;
  unint64_t v78 = v55;
  v55(v46, v51);
  sub_240BB64B0();
  uint64_t v104 = v51;
  unint64_t v105 = v52;
  unint64_t v106 = v53;
  uint64_t v107 = v54;
  unint64_t v77 = swift_getOpaqueTypeConformance2();
  uint64_t v56 = v91;
  uint64_t v57 = v93;
  sub_240BB5CB0();
  sub_240A62818((uint64_t)&v103);
  uint64_t v58 = *(void (**)(char *, uint64_t))(v99 + 8);
  v99 += 8;
  uint64_t v76 = v58;
  v58(v50, v57);
  uint64_t v75 = *(void (**)(char *, char *, uint64_t))(v95 + 32);
  v75(v90, v56, v97);
  sub_240BB6740();
  sub_240BB27A0();
  uint64_t v59 = v96;
  sub_240BB5D50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v79(v49, v59);
  sub_240BB5EC0();
  uint64_t v104 = qword_268CA2AE0;
  sub_240BB5C80();
  v78(v46, v51);
  sub_240BB64B0();
  uint64_t v60 = v86;
  uint64_t v61 = v93;
  sub_240BB5CB0();
  sub_240A62818((uint64_t)&v104);
  v76(v50, v61);
  uint64_t v62 = v91;
  uint64_t v63 = v97;
  v75(v91, v60, v97);
  uint64_t v64 = v82;
  uint64_t v65 = v89;
  uint64_t v66 = v83;
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v89, v98, v83);
  v102[0] = v65;
  uint64_t v67 = v95;
  uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v95 + 16);
  long long v69 = v90;
  v68(v60, v90, v63);
  v102[1] = v60;
  uint64_t v70 = v87;
  v68(v87, v62, v63);
  v102[2] = v70;
  sub_240B98C90(v102, v88);
  uint64_t v71 = *(void (**)(char *, uint64_t))(v67 + 8);
  v71(v62, v63);
  v71(v69, v63);
  uint64_t v72 = *(void (**)(char *, uint64_t))(v64 + 8);
  v72(v98, v66);
  v71(v70, v63);
  v71(v60, v63);
  return ((uint64_t (*)(char *, uint64_t))v72)(v89, v66);
}

uint64_t sub_240AF68D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v72 = a2;
  uint64_t v76 = a3;
  sub_240AF7B10();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v74 = v4;
  uint64_t v75 = v5;
  MEMORY[0x270FA5388](v4);
  v73 = (char *)v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A62844(0, &qword_268C9F178, MEMORY[0x263EFCE78], MEMORY[0x263EFCC50]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v65 = (char *)v54 - v8;
  uint64_t v9 = sub_240BB2CF0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v57 = (char *)v54 - v14;
  sub_240AF89CC(0, &qword_268C9F168, MEMORY[0x263F07490], MEMORY[0x263EFCAD0], MEMORY[0x263EFCC50]);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v56 = (char *)v54 - v16;
  uint64_t v61 = sub_240BB5EB0();
  uint64_t v62 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v59 = (char *)v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = MEMORY[0x263EFCB70];
  sub_240AF88F8(0, &qword_268CA0850, MEMORY[0x263EFCD50]);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v66 = v18;
  uint64_t v67 = v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v58 = (char *)v54 - v20;
  sub_240AF79C0();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v68 = v21;
  uint64_t v69 = v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v60 = (char *)v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AF7840();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v70 = v24;
  uint64_t v71 = v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v64 = (char *)v54 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54[1] = sub_240BB6740();
  uint64_t v55 = a1;
  sub_240BB27D0();
  uint64_t v27 = (void *)sub_240BB2C90();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v10 + 8);
  v28(v13, v9);
  sub_240BB27A0();
  uint64_t v29 = (void *)sub_240BB2C90();
  v28(v13, v9);
  id v30 = (id)HKDateMid();

  uint64_t v31 = v57;
  sub_240BB2CB0();

  sub_240BB5D50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v28(v31, v9);
  sub_240BB6740();
  uint64_t v79 = *(void *)(v55 + *(int *)(type metadata accessor for AFibBurdenPDFChartPoint() + 20));
  sub_240BB5D50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v32 = v59;
  sub_240BB5EA0();
  uint64_t v79 = sub_240B97740();
  unint64_t v33 = MEMORY[0x263F1B440];
  uint64_t v34 = MEMORY[0x263F1B420];
  uint64_t v35 = v58;
  uint64_t v36 = v61;
  unint64_t v37 = MEMORY[0x263EFCD48];
  sub_240BB5C80();
  swift_release();
  uint64_t v38 = v32;
  uint64_t v39 = v36;
  (*(void (**)(char *, uint64_t))(v62 + 8))(v38, v36);
  unint64_t v40 = sub_240AF7B9C();
  unint64_t v41 = sub_240AF7BF0();
  uint64_t v42 = MEMORY[0x263F1B638];
  uint64_t v43 = v73;
  sub_240BB5D80();
  uint64_t v79 = v39;
  unint64_t v80 = v33;
  unint64_t v81 = v37;
  uint64_t v82 = v34;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v79 = v42;
  unint64_t v80 = v40;
  unint64_t v81 = v41;
  uint64_t v45 = swift_getOpaqueTypeConformance2();
  uint64_t v46 = v60;
  uint64_t v47 = v66;
  unint64_t v48 = v74;
  sub_240BB5CA0();
  (*(void (**)(char *, unint64_t))(v75 + 8))(v43, v48);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v35, v47);
  uint64_t v79 = v47;
  unint64_t v80 = v48;
  unint64_t v81 = OpaqueTypeConformance2;
  uint64_t v82 = v45;
  uint64_t v49 = swift_getOpaqueTypeConformance2();
  id v50 = v64;
  uint64_t v51 = v68;
  sub_240BB5C60();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v46, v51);
  sub_240BB64B0();
  uint64_t v77 = v51;
  uint64_t v78 = v49;
  swift_getOpaqueTypeConformance2();
  uint64_t v52 = v70;
  sub_240BB5CB0();
  sub_240A62818((uint64_t)&v79);
  return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v50, v52);
}

uint64_t sub_240AF717C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240AF4A7C((uint64_t *)(v2 + a1[6]), *(void **)(v2 + a1[7]), *(unsigned char *)(v2 + a1[7] + 8), *(void **)(v2 + a1[7] + 16), (char *)(v2 + a1[8]), a2);
}

uint64_t sub_240AF71A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240AF7454(&qword_268CA0818, (void (*)(uint64_t))type metadata accessor for AFibBurdenPDFLineChart);

  return MEMORY[0x270F34BE8](a1, a2, a3, v6);
}

uint64_t sub_240AF7228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240AF7258(a1, a2, a3, MEMORY[0x263F44870]);
}

uint64_t sub_240AF7240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240AF7258(a1, a2, a3, MEMORY[0x263F44878]);
}

uint64_t sub_240AF7258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = sub_240AF7454(&qword_268CA0818, (void (*)(uint64_t))type metadata accessor for AFibBurdenPDFLineChart);

  return a4(a1, a2, v6);
}

uint64_t sub_240AF72E8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  uint64_t v4 = sub_240AF7454(&qword_268CA0810, (void (*)(uint64_t))type metadata accessor for AFibBurdenPDFLineChart);
  *uint64_t v3 = v1;
  v3[1] = sub_240A524D4;
  return MEMORY[0x270F33478](a1, v4);
}

uint64_t sub_240AF73C4()
{
  return sub_240AF7454(&qword_268CA0808, (void (*)(uint64_t))type metadata accessor for AFibBurdenPDFLineChart);
}

uint64_t sub_240AF740C()
{
  return sub_240AF7454(&qword_268CA0810, (void (*)(uint64_t))type metadata accessor for AFibBurdenPDFLineChart);
}

uint64_t sub_240AF7454(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240AF749C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_240AF74B8(uint64_t a1)
{
  uint64_t result = sub_240AF7454(&qword_268CA0818, (void (*)(uint64_t))type metadata accessor for AFibBurdenPDFLineChart);
  *(void *)(a1 + 8) = result;
  return result;
}

void sub_240AF7510()
{
  if (!qword_268CA0828)
  {
    sub_240AF7584();
    sub_240A60CF8();
    unint64_t v0 = sub_240BB5C40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA0828);
    }
  }
}

void sub_240AF7584()
{
  if (!qword_268CA0830)
  {
    sub_240AF86E4(255, &qword_268C9F030, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFChartPoint, MEMORY[0x263F8D488]);
    sub_240BB27F0();
    sub_240AF7688();
    sub_240A60C70();
    sub_240AF7454((unint64_t *)&qword_268C9F050, MEMORY[0x263F062D0]);
    unint64_t v0 = sub_240BB6AF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA0830);
    }
  }
}

void sub_240AF7688()
{
  if (!qword_268CA0838)
  {
    sub_240AF7840();
    sub_240AF79C0();
    sub_240AF88F8(255, &qword_268CA0850, MEMORY[0x263EFCD50]);
    sub_240AF7B10();
    sub_240BB5EB0();
    swift_getOpaqueTypeConformance2();
    sub_240AF7B9C();
    sub_240AF7BF0();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268CA0838);
    }
  }
}

void sub_240AF7840()
{
  if (!qword_268CA0840)
  {
    sub_240AF79C0();
    sub_240AF88F8(255, &qword_268CA0850, MEMORY[0x263EFCD50]);
    sub_240AF7B10();
    sub_240BB5EB0();
    swift_getOpaqueTypeConformance2();
    sub_240AF7B9C();
    sub_240AF7BF0();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268CA0840);
    }
  }
}

void sub_240AF79C0()
{
  if (!qword_268CA0848)
  {
    sub_240AF88F8(255, &qword_268CA0850, MEMORY[0x263EFCD50]);
    sub_240AF7B10();
    sub_240BB5EB0();
    swift_getOpaqueTypeConformance2();
    sub_240AF7B9C();
    sub_240AF7BF0();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268CA0848);
    }
  }
}

void sub_240AF7B10()
{
  if (!qword_268CA0858)
  {
    sub_240AF7B9C();
    sub_240AF7BF0();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268CA0858);
    }
  }
}

unint64_t sub_240AF7B9C()
{
  unint64_t result = qword_268CA0860;
  if (!qword_268CA0860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0860);
  }
  return result;
}

unint64_t sub_240AF7BF0()
{
  unint64_t result = qword_268CA0868;
  if (!qword_268CA0868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0868);
  }
  return result;
}

unint64_t sub_240AF7C44()
{
  unint64_t result = qword_268CA0870;
  if (!qword_268CA0870)
  {
    sub_240AF7510();
    sub_240AF7D68();
    sub_240AF88F8(255, &qword_268C9F060, MEMORY[0x263EFCD68]);
    sub_240BB5EE0();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0870);
  }
  return result;
}

unint64_t sub_240AF7D68()
{
  unint64_t result = qword_268CA0878;
  if (!qword_268CA0878)
  {
    sub_240AF7584();
    sub_240AF7840();
    sub_240AF79C0();
    sub_240AF88F8(255, &qword_268CA0850, MEMORY[0x263EFCD50]);
    sub_240AF7B10();
    sub_240BB5EB0();
    swift_getOpaqueTypeConformance2();
    sub_240AF7B9C();
    sub_240AF7BF0();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0878);
  }
  return result;
}

void sub_240AF7F3C()
{
  if (!qword_268CA0880)
  {
    sub_240AF8878(255, &qword_268CA0820, (uint64_t (*)(uint64_t))sub_240AF7510, (uint64_t (*)(void))sub_240AF7C44, MEMORY[0x263EFCCF8]);
    sub_240A61110(255);
    sub_240AF8024();
    sub_240A61228();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268CA0880);
    }
  }
}

unint64_t sub_240AF8024()
{
  unint64_t result = qword_268CA0888;
  if (!qword_268CA0888)
  {
    sub_240AF8878(255, &qword_268CA0820, (uint64_t (*)(uint64_t))sub_240AF7510, (uint64_t (*)(void))sub_240AF7C44, MEMORY[0x263EFCCF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0888);
  }
  return result;
}

void sub_240AF80C0()
{
  if (!qword_268CA0890)
  {
    sub_240AF7F3C();
    sub_240AF8878(255, &qword_268CA0820, (uint64_t (*)(uint64_t))sub_240AF7510, (uint64_t (*)(void))sub_240AF7C44, MEMORY[0x263EFCCF8]);
    sub_240A61110(255);
    sub_240AF8024();
    sub_240A61228();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268CA0890);
    }
  }
}

void sub_240AF81F4()
{
  if (!qword_268CA0898)
  {
    sub_240AF80C0();
    sub_240A62844(255, &qword_268C9F0B0, MEMORY[0x263F8D560], MEMORY[0x263F8D1A0]);
    sub_240AF7F3C();
    sub_240AF8878(255, &qword_268CA0820, (uint64_t (*)(uint64_t))sub_240AF7510, (uint64_t (*)(void))sub_240AF7C44, MEMORY[0x263EFCCF8]);
    sub_240A61110(255);
    sub_240AF8024();
    sub_240A61228();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_240A6156C();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268CA0898);
    }
  }
}

void sub_240AF839C()
{
  if (!qword_268CA08A0)
  {
    sub_240AF81F4();
    sub_240AF80C0();
    sub_240A62844(255, &qword_268C9F0B0, MEMORY[0x263F8D560], MEMORY[0x263F8D1A0]);
    sub_240AF7F3C();
    sub_240AF8878(255, &qword_268CA0820, (uint64_t (*)(uint64_t))sub_240AF7510, (uint64_t (*)(void))sub_240AF7C44, MEMORY[0x263EFCCF8]);
    sub_240A61110(255);
    sub_240AF8024();
    sub_240A61228();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_240A6156C();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268CA08A0);
    }
  }
}

uint64_t sub_240AF8578@<X0>(uint64_t a1@<X8>)
{
  return sub_240AF5C60(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_240AF8580(uint64_t a1)
{
  sub_240AF86E4(0, &qword_268C9F010, MEMORY[0x263EFCD98], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_240AF8614()
{
  if (!qword_268CA08B0)
  {
    sub_240AF89CC(255, &qword_268CA08A8, (uint64_t (*)(uint64_t))sub_240AF839C, MEMORY[0x263F18868], MEMORY[0x263F18E28]);
    sub_240AF86E4(255, &qword_268C9F100, MEMORY[0x263F18DD8], MEMORY[0x263F1A418]);
    unint64_t v0 = sub_240BB6580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA08B0);
    }
  }
}

void sub_240AF86E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_240AF8748(uint64_t a1, uint64_t a2)
{
  sub_240AF89CC(0, &qword_268CA08A8, (uint64_t (*)(uint64_t))sub_240AF839C, MEMORY[0x263F18868], MEMORY[0x263F18E28]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240AF87E4(uint64_t a1)
{
  sub_240AF89CC(0, &qword_268CA08A8, (uint64_t (*)(uint64_t))sub_240AF839C, MEMORY[0x263F18868], MEMORY[0x263F18E28]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_240AF8878(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_240AF88F8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v5) {
      atomic_store(OpaqueTypeMetadata2, a2);
    }
  }
}

uint64_t sub_240AF8984()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_240AF89CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, v9, a4);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_240AF8A38()
{
  uint64_t v1 = (int *)(type metadata accessor for AFibBurdenPDFChartViewModel() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240BB27F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_240AF8B40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for AFibBurdenPDFChartViewModel() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_240AF68D4(a1, v6, a2);
}

unint64_t sub_240AF8BC4()
{
  unint64_t result = qword_268CA08B8;
  if (!qword_268CA08B8)
  {
    sub_240AF8614();
    sub_240AF8C3C();
    sub_240A62C1C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA08B8);
  }
  return result;
}

unint64_t sub_240AF8C3C()
{
  unint64_t result = qword_268CA08C0;
  if (!qword_268CA08C0)
  {
    sub_240AF89CC(255, &qword_268CA08A8, (uint64_t (*)(uint64_t))sub_240AF839C, MEMORY[0x263F18868], MEMORY[0x263F18E28]);
    sub_240AF81F4();
    sub_240AF80C0();
    sub_240A62844(255, &qword_268C9F0B0, MEMORY[0x263F8D560], MEMORY[0x263F8D1A0]);
    sub_240AF7F3C();
    sub_240AF8878(255, &qword_268CA0820, (uint64_t (*)(uint64_t))sub_240AF7510, (uint64_t (*)(void))sub_240AF7C44, MEMORY[0x263EFCCF8]);
    sub_240A61110(255);
    sub_240AF8024();
    sub_240A61228();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_240A6156C();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA08C0);
  }
  return result;
}

unint64_t sub_240AF8F28(void *a1)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(a1, sel_healthDataSource);
  if (!v4)
  {
    sub_240BB78D0();
    __break(1u);
    JUMPOUT(0x240AF95DCLL);
  }
  uint64_t v5 = v4;
  unint64_t v6 = sub_240AB7F9C(MEMORY[0x263F8EE78]);
  uint64_t v7 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Heart38AFibBurdenOnboardingStepAnalyticsEvent_onboardingStep);
  unint64_t v8 = 0xE500000000000000;
  unint64_t v9 = 0x7472617473;
  unint64_t v10 = v6;
  switch(v7)
  {
    case 1:
      unint64_t v9 = 0x7472617453746567;
      unint64_t v8 = 0xEA00000000006465;
      break;
    case 2:
      unint64_t v8 = 0xEA0000000000736BLL;
      unint64_t v9 = 0x726F577449776F68;
      break;
    case 3:
      unint64_t v8 = 0x8000000240BC9D90;
      unint64_t v9 = 0xD000000000000010;
      break;
    case 4:
      unint64_t v8 = 0xEB0000000073726FLL;
      unint64_t v9 = 0x746361466566696CLL;
      break;
    case 5:
      unint64_t v9 = 0xD000000000000013;
      unint64_t v8 = 0x8000000240BC9D70;
      break;
    case 6:
      unint64_t v8 = 0xEA00000000006E6FLL;
      unint64_t v9 = 0x6974656C706D6F63;
      break;
    default:
      break;
  }
  unint64_t v11 = MEMORY[0x263F8D310];
  unint64_t v63 = MEMORY[0x263F8D310];
  *(void *)&long long v62 = v9;
  *((void *)&v62 + 1) = v8;
  sub_240A7B714(&v62, v61);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v64 = v10;
  sub_240B6A138(v61, 1885697139, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
  unint64_t v13 = v64;
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_240AEBA20();
  unint64_t v63 = v11;
  *(void *)&long long v62 = v14;
  *((void *)&v62 + 1) = v15;
  sub_240A7B714(&v62, v61);
  char v16 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v64 = v13;
  sub_240B6A138(v61, 0x747865746E6F63, 0xE700000000000000, v16);
  unint64_t v17 = v64;
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_240AEBB9C();
  unint64_t v63 = v11;
  *(void *)&long long v62 = v18;
  *((void *)&v62 + 1) = v19;
  sub_240A7B714(&v62, v61);
  char v20 = swift_isUniquelyReferenced_nonNull_native();
  sub_240B6A138(v61, 0x6E616E65766F7270, 0xEA00000000006563, v20);
  unint64_t v21 = v17;
  unint64_t v64 = v17;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void **)(v2 + OBJC_IVAR____TtC5Heart38AFibBurdenOnboardingStepAnalyticsEvent_countryCode);
  if (v22)
  {
    id v23 = objc_msgSend(v22, sel_ISOCode);
    uint64_t v24 = sub_240BB6DE0();
    uint64_t v26 = v25;

    unint64_t v63 = v11;
    *(void *)&long long v62 = v24;
    *((void *)&v62 + 1) = v26;
    sub_240A7B714(&v62, v61);
    char v27 = swift_isUniquelyReferenced_nonNull_native();
    sub_240B6A138(v61, 0x437972746E756F63, 0xEB0000000065646FLL, v27);
    unint64_t v64 = v21;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_240B69E5C(0x437972746E756F63, 0xEB0000000065646FLL, &v62);
    sub_240AF9814((uint64_t)&v62, (uint64_t (*)(void))sub_240AD740C);
  }
  uint64_t v28 = sub_240BB6DE0();
  uint64_t v30 = v29;
  id v31 = objc_msgSend(a1, sel_environmentDataSource);
  id v32 = objc_msgSend(v31, sel_activePairedDeviceProductType);

  if (v32)
  {
    uint64_t v33 = sub_240BB6DE0();
    uint64_t v35 = v34;

    unint64_t v63 = v11;
    *(void *)&long long v62 = v33;
    *((void *)&v62 + 1) = v35;
    sub_240A7B714(&v62, v61);
    unint64_t v36 = v64;
    char v37 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v64 = 0x8000000000000000;
    sub_240B6A138(v61, v28, v30, v37);
    unint64_t v64 = v36;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_240B69E5C(v28, v30, &v62);
    swift_bridgeObjectRelease();
    sub_240AF9814((uint64_t)&v62, (uint64_t (*)(void))sub_240AD740C);
  }
  uint64_t v38 = sub_240BB6DE0();
  uint64_t v40 = v39;
  if (qword_26AFD7BF0 != -1) {
    swift_once();
  }
  uint64_t v41 = sub_240BB5990();
  uint64_t v42 = sub_240A395FC(v41, (uint64_t)qword_26AFDEB80);
  uint64_t v43 = sub_240B6A408(v5, v42);
  unint64_t v63 = v11;
  *(void *)&long long v62 = v43;
  *((void *)&v62 + 1) = v44;
  sub_240A7B714(&v62, v61);
  unint64_t v45 = v64;
  char v46 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v64 = 0x8000000000000000;
  sub_240B6A138(v61, v38, v40, v46);
  unint64_t v64 = v45;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v47 = sub_240BB6DE0();
  uint64_t v49 = v48;
  id v50 = objc_msgSend(a1, sel_environmentDataSource);
  id v51 = sub_240B6AA9C(v5, v50, v42);

  unint64_t v63 = sub_240A576E0();
  *(void *)&long long v62 = v51;
  sub_240A7B714(&v62, v61);
  unint64_t v52 = v64;
  char v53 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v64 = 0x8000000000000000;
  sub_240B6A138(v61, v47, v49, v53);
  unint64_t v64 = v52;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v54 = (id)HKHRAFibBurdenAnalyticsPropertyValueForVersion();
  uint64_t v55 = sub_240BB6DE0();
  uint64_t v57 = v56;

  unint64_t v63 = v11;
  *(void *)&long long v62 = v55;
  *((void *)&v62 + 1) = v57;
  sub_240A7B714(&v62, v61);
  unint64_t v58 = v64;
  char v59 = swift_isUniquelyReferenced_nonNull_native();
  sub_240B6A138(v61, 0x5665727574616566, 0xEE006E6F69737265, v59);
  sub_240BB50A0();
  swift_bridgeObjectRelease();
  return v58;
}

uint64_t sub_240AF9694()
{
  sub_240AF9814(v0 + OBJC_IVAR____TtC5Heart38AFibBurdenOnboardingStepAnalyticsEvent_presentationContext, (uint64_t (*)(void))type metadata accessor for AFibBurdenOnboardingPresentationContext);
  sub_240BB50A0();

  return swift_deallocClassInstance();
}

uint64_t sub_240AF971C()
{
  return type metadata accessor for AFibBurdenOnboardingStepAnalyticsEvent();
}

uint64_t type metadata accessor for AFibBurdenOnboardingStepAnalyticsEvent()
{
  uint64_t result = qword_268CA08C8;
  if (!qword_268CA08C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240AF9770()
{
  uint64_t result = type metadata accessor for AFibBurdenOnboardingPresentationContext();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_240AF9814(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_240AF9874(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v16 = MEMORY[0x263F8EE78];
    sub_240B0CB24(0, v5, 0);
    uint64_t v6 = v16;
    for (uint64_t i = (uint64_t *)(a3 + 32); ; ++i)
    {
      uint64_t v14 = *i;
      sub_240BB4850();
      a1(&v15, &v14);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_bridgeObjectRelease();
      uint64_t v10 = v15;
      uint64_t v16 = v6;
      unint64_t v12 = *(void *)(v6 + 16);
      unint64_t v11 = *(void *)(v6 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_240B0CB24(v11 > 1, v12 + 1, 1);
        uint64_t v6 = v16;
      }
      *(void *)(v6 + 16) = v12 + 1;
      *(void *)(v6 + 8 * v12 + 32) = v10;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_240AF99A0(void (*a1)(void *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v20[1] = a2;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v25 = MEMORY[0x263F8EE78];
    sub_240B0CBB4(0, v5, 0);
    uint64_t v6 = v25;
    unint64_t v9 = (char *)(a3 + 32);
    while (1)
    {
      char v10 = *v9++;
      char v21 = v10;
      a1(v22, &v21);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v25 = v6;
      unint64_t v12 = *(void *)(v6 + 16);
      unint64_t v11 = *(void *)(v6 + 24);
      if (v12 >= v11 >> 1) {
        sub_240B0CBB4(v11 > 1, v12 + 1, 1);
      }
      uint64_t v13 = v23;
      uint64_t v14 = v24;
      uint64_t v15 = sub_240A346B0((uint64_t)v22, v23);
      MEMORY[0x270FA5388](v15);
      unint64_t v17 = (char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v18 + 16))(v17);
      sub_240AFD148(v12, (uint64_t)v17, &v25, v13, v14);
      _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v22);
      uint64_t v6 = v25;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

unint64_t sub_240AF9B5C@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_240AFD234(*a1);
  *a2 = result;
  return result;
}

void sub_240AF9B88(void *a1@<X8>)
{
  *a1 = *v1;
}

void *sub_240AF9B94@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

uint64_t sub_240AF9BB4()
{
  return sub_240BB7C00();
}

uint64_t sub_240AF9C30()
{
  return sub_240BB7BD0();
}

uint64_t sub_240AF9C90()
{
  return sub_240BB7C00();
}

BOOL sub_240AF9D08(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_240AFD1E0(*a1, *a2);
}

uint64_t sub_240AF9D14()
{
  unint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240AFE150(0, (unint64_t *)&qword_268C9F2A0, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v38 - v3;
  sub_240AFE150(0, &qword_268C9FF40, MEMORY[0x263F44090], v1);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  unint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  unint64_t v11 = (char *)&v38 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v38 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  unint64_t v17 = (char *)&v38 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v38 - v18;
  uint64_t v20 = v0 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_mostRecentDetails;
  swift_beginAccess();
  sub_240AFD728(v20, (uint64_t)v19);
  uint64_t v21 = sub_240BB4590();
  uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48);
  if (v22(v19, 1, v21))
  {
    uint64_t v23 = &qword_268C9FF40;
    uint64_t v24 = (uint64_t (*)(uint64_t))MEMORY[0x263F44090];
    uint64_t v25 = (uint64_t)v19;
LABEL_3:
    sub_240AFE298(v25, v23, v24);
    return 0;
  }
  uint64_t v41 = v4;
  uint64_t v42 = v22;
  uint64_t v39 = v8;
  uint64_t v40 = v11;
  sub_240BB44F0();
  char v28 = v27;
  sub_240AFE298((uint64_t)v19, &qword_268C9FF40, MEMORY[0x263F44090]);
  if (v28) {
    return 0;
  }
  sub_240AFD728(v20, (uint64_t)v17);
  if (v42(v17, 1, v21))
  {
    sub_240AFE298((uint64_t)v17, &qword_268C9FF40, MEMORY[0x263F44090]);
  }
  else
  {
    uint64_t v31 = sub_240BB44F0();
    char v33 = v32;
    sub_240AFE298((uint64_t)v17, &qword_268C9FF40, MEMORY[0x263F44090]);
    if ((v33 & 1) == 0 && !v31) {
      return 0;
    }
  }
  sub_240AFD728(v20, (uint64_t)v14);
  if (v42(v14, 1, v21))
  {
    sub_240AFE298((uint64_t)v14, &qword_268C9FF40, MEMORY[0x263F44090]);
    uint64_t v29 = sub_240BB28D0();
    uint64_t v30 = (uint64_t)v41;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v41, 1, 1, v29);
LABEL_14:
    uint64_t v23 = (unint64_t *)&qword_268C9F2A0;
    uint64_t v35 = (uint64_t (*)(uint64_t))MEMORY[0x263F063B0];
LABEL_15:
    uint64_t v24 = v35;
    uint64_t v25 = v30;
    goto LABEL_3;
  }
  uint64_t v30 = (uint64_t)v41;
  sub_240BB4530();
  sub_240AFE298((uint64_t)v14, &qword_268C9FF40, MEMORY[0x263F44090]);
  uint64_t v34 = sub_240BB28D0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v30, 1, v34) == 1) {
    goto LABEL_14;
  }
  sub_240AFE298(v30, (unint64_t *)&qword_268C9F2A0, MEMORY[0x263F063B0]);
  uint64_t v30 = (uint64_t)v40;
  sub_240AFD728(v20, (uint64_t)v40);
  if (v42((char *)v30, 1, v21)) {
    goto LABEL_17;
  }
  unint64_t v36 = (void *)sub_240BB4570();
  sub_240AFE298(v30, &qword_268C9FF40, MEMORY[0x263F44090]);
  if (!v36) {
    return 0;
  }

  uint64_t v30 = (uint64_t)v39;
  sub_240AFD728(v20, (uint64_t)v39);
  if (v42((char *)v30, 1, v21))
  {
LABEL_17:
    uint64_t v23 = &qword_268C9FF40;
    uint64_t v35 = (uint64_t (*)(uint64_t))MEMORY[0x263F44090];
    goto LABEL_15;
  }
  char v37 = (void *)sub_240BB4580();
  sub_240AFE298(v30, &qword_268C9FF40, MEMORY[0x263F44090]);
  if (!v37) {
    return 0;
  }

  return 1;
}

uint64_t (*sub_240AFA260())()
{
  return j__swift_endAccess;
}

uint64_t sub_240AFA2BC(uint64_t a1)
{
  uint64_t v16 = (uint64_t (*)(uint64_t))MEMORY[0x263F44090];
  sub_240AFE150(0, &qword_268C9FF40, MEMORY[0x263F44090], MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = sub_240BB4590();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v11(v8, a1, v9);
  uint64_t v12 = *(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56);
  v12(v8, 0, 1, v9);
  sub_240AFE028((uint64_t)v8, (uint64_t)v6);
  uint64_t v13 = v1 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_mostRecentDetails;
  swift_beginAccess();
  sub_240AFE0BC((uint64_t)v6, v13);
  swift_endAccess();
  v11(v8, a1, v9);
  v12(v8, 0, 1, v9);
  uint64_t v14 = sub_240AFA4EC((uint64_t)v8);
  sub_240AFE298((uint64_t)v8, &qword_268C9FF40, v16);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_visiblePicker) = 4;
  if (!MEMORY[0x24560BA20](v1 + 16)) {
    return swift_bridgeObjectRelease();
  }
  sub_240B288CC(v14);
  swift_bridgeObjectRelease();
  return sub_240BB50A0();
}

uint64_t sub_240AFA4EC(uint64_t a1)
{
  sub_240AFE150(0, &qword_268CA0978, (uint64_t (*)(uint64_t))sub_240AFE1B4, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 32) = &unk_26F5034B8;
  *(_OWORD *)(inited + 16) = xmmword_240BBAE40;
  *(void *)(inited + 40) = &unk_26F5034E0;
  uint64_t v7 = v1;
  uint64_t v8 = a1;
  uint64_t v4 = sub_240AF9874((void (*)(uint64_t *__return_ptr, uint64_t *))sub_240AFE20C, (uint64_t)&v6, inited);
  swift_setDeallocating();
  sub_240AFE1B4();
  swift_arrayDestroy();
  return v4;
}

void sub_240AFA5E8(uint64_t a1)
{
  uint64_t v133 = *v1;
  uint64_t v134 = a1;
  uint64_t v2 = sub_240BB2F80();
  uint64_t v135 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v132 = (char *)&v116 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v121 = (char *)&v116 - v6;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v126 = (char *)&v116 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  v125 = (char *)&v116 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v120 = (char *)&v116 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v116 - v13;
  sub_240AFE150(0, &qword_268C9FF40, MEMORY[0x263F44090], MEMORY[0x263F8D8F0]);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v129 = (uint64_t)&v116 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v122 = (uint64_t)&v116 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v124 = (char *)&v116 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v116 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v123 = (char *)&v116 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v131 = (char *)&v116 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v116 - v29;
  uint64_t v31 = sub_240BB4590();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v34 = (char *)&v116 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = (uint64_t)v1 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_mostRecentDetails;
  swift_beginAccess();
  uint64_t v128 = v35;
  sub_240AFD728(v35, (uint64_t)v30);
  unint64_t v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
  if (v36(v30, 1, v31) == 1)
  {
    sub_240AFE298((uint64_t)v30, &qword_268C9FF40, MEMORY[0x263F44090]);
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v37 = sub_240BB5990();
    sub_240A395FC(v37, (uint64_t)qword_26AFDEC70);
    uint64_t v38 = sub_240BB5970();
    os_log_type_t v39 = sub_240BB7180();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      v136[0] = v41;
      *(_DWORD *)uint64_t v40 = 136446466;
      uint64_t v42 = sub_240BB7C80();
      uint64_t v137 = sub_240A38940(v42, v43, v136);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 12) = 2082;
      uint64_t v137 = sub_240A38940(0xD000000000000014, 0x8000000240BCFB80, v136);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v38, v39, "[%{public}s.%{public}s]: Attempted to change details before we received them.", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v41, -1, -1);
      MEMORY[0x24560B930](v40, -1, -1);
    }

    return;
  }
  uint64_t v127 = v32;
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
  v130 = v34;
  uint64_t v119 = v31;
  uint64_t v118 = v32 + 32;
  uint64_t v117 = v44;
  v44(v34, v30, v31);
  unint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v135 + 16);
  v45(v14, v134, v2);
  uint64_t v46 = OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_visiblePicker;
  unsigned __int8 v47 = sub_240AFD244((uint64_t)v14, *((unsigned char *)v1 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_visiblePicker));
  if (v47 > 0xFBu)
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v48 = sub_240BB5990();
    sub_240A395FC(v48, (uint64_t)qword_26AFDEC70);
    uint64_t v49 = v132;
    v45(v132, v134, v2);
    id v50 = sub_240BB5970();
    os_log_type_t v51 = sub_240BB7190();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = v2;
      uint64_t v53 = swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      v136[0] = v54;
      *(_DWORD *)uint64_t v53 = 136446722;
      uint64_t v55 = sub_240BB7C80();
      uint64_t v137 = sub_240A38940(v55, v56, v136);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v53 + 12) = 2082;
      uint64_t v137 = sub_240A38940(0xD000000000000014, 0x8000000240BCFB80, v136);
      sub_240BB75F0();
      *(_WORD *)(v53 + 22) = 2082;
      sub_240AFDFE0(&qword_268CA0970, MEMORY[0x263F07A30]);
      uint64_t v57 = sub_240BB7AA0();
      uint64_t v137 = sub_240A38940(v57, v58, v136);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v135 + 8))(v49, v52);
      _os_log_impl(&dword_240A1B000, v50, v51, "[%{public}s.%{public}s]: Unable to determine row for index path %{public}s", (uint8_t *)v53, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v54, -1, -1);
      MEMORY[0x24560B930](v53, -1, -1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v135 + 8))(v49, v2);
    }
    (*(void (**)(char *, uint64_t))(v127 + 8))(v130, v119);
    return;
  }
  unsigned __int8 v59 = v47;
  uint64_t v60 = v1;
  if (!(v47 >> 6))
  {
    uint64_t v67 = *((unsigned __int8 *)v1 + v46);
    uint64_t v68 = v119;
    if (v67 == 4)
    {
      uint64_t v69 = v2;
      *((unsigned char *)v1 + v46) = v47;
      uint64_t v70 = v125;
      MEMORY[0x2456061F0](v47 + 1, 0);
      uint64_t v71 = v127;
      uint64_t v72 = v130;
      uint64_t v73 = (uint64_t)v131;
      (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v131, v130, v68);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v71 + 56))(v73, 0, 1, v68);
      sub_240AFBB90(v59 | 0x80, v73, v136);
      sub_240AFE298(v73, &qword_268C9FF40, MEMORY[0x263F44090]);
      if (MEMORY[0x24560BA20](v1 + 2))
      {
        sub_240BB4610();
        sub_240BB50A0();
      }
      _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v136);
      (*(void (**)(char *, uint64_t))(v135 + 8))(v70, v69);
      (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v68);
      return;
    }
    uint64_t v86 = v47;
    uint64_t v87 = v130;
    if (v67 == v47)
    {
      *((unsigned char *)v1 + v46) = 4;
      uint64_t v88 = v120;
      MEMORY[0x2456061F0](v47 + 1, 0);
      uint64_t v89 = MEMORY[0x24560BA20](v1 + 2);
      uint64_t v90 = v135;
      if (v89)
      {
        uint64_t v91 = v89;
        sub_240BB45D0();
        uint64_t v92 = MEMORY[0x24560BA20](v91 + qword_268CA0E30);
        if (v92)
        {
          uint64_t v93 = *(void **)(v92 + qword_268C9F850);
          if (v93)
          {
            uint64_t v94 = v2;
            id v95 = v93;
            objc_msgSend(v95, sel_setEnabled_, sub_240AF9D14() & 1);
            sub_240BB50A0();
            sub_240BB50A0();

            uint64_t v2 = v94;
            goto LABEL_57;
          }
          sub_240BB50A0();
        }
        sub_240BB50A0();
      }
LABEL_57:
      (*(void (**)(char *, uint64_t))(v90 + 8))(v88, v2);
LABEL_63:
      (*(void (**)(char *, uint64_t))(v127 + 8))(v87, v68);
      return;
    }
    MEMORY[0x2456061F0](v67 + 1, 0);
    *((unsigned char *)v1 + v46) = v59;
    id v102 = v121;
    MEMORY[0x2456061F0](v86 + 1, 0);
    uint64_t v103 = v127;
    uint64_t v104 = (uint64_t)v131;
    (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v131, v87, v68);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v103 + 56))(v104, 0, 1, v68);
    sub_240AFBB90(v59 | 0x80, v104, v136);
    sub_240AFE298(v104, &qword_268C9FF40, MEMORY[0x263F44090]);
    uint64_t v105 = MEMORY[0x24560BA20](v60 + 2);
    uint64_t v106 = v135;
    if (v105)
    {
      uint64_t v107 = v105;
      sub_240BB45D0();
      uint64_t v108 = MEMORY[0x24560BA20](v107 + qword_268CA0E30);
      if (v108)
      {
        uint64_t v109 = *(void **)(v108 + qword_268C9F850);
        if (v109)
        {
          id v110 = v109;
          objc_msgSend(v110, sel_setEnabled_, sub_240AF9D14() & 1);
          sub_240BB50A0();
          sub_240BB50A0();

          id v102 = v121;
          goto LABEL_60;
        }
        sub_240BB50A0();
      }
      sub_240BB50A0();
    }
LABEL_60:
    if (MEMORY[0x24560BA20](v60 + 2))
    {
      sub_240BB4610();
      sub_240BB50A0();
    }
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v136);
    v115 = *(void (**)(char *, uint64_t))(v106 + 8);
    v115(v102, v2);
    v115(v126, v2);
    goto LABEL_63;
  }
  uint64_t v61 = v119;
  if (v47 >> 6 == 1)
  {
    long long v62 = (void (**)(char *, char *, uint64_t))(v127 + 16);
    unint64_t v63 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v127 + 56);
    if (v47)
    {
      uint64_t v83 = v130;
      sub_240BB4510();
      sub_240BB4520();
      uint64_t v84 = (uint64_t)v124;
      (*v62)(v124, v83, v61);
      uint64_t v66 = (void (*)(char *, void, uint64_t, uint64_t))*v63;
      (*v63)(v84, 0, 1, v61);
      uint64_t v85 = v122;
      sub_240AFD728(v84, v122);
      if (v36((char *)v85, 1, v61) == 1)
      {
        sub_240AFE298(v85, &qword_268C9FF40, MEMORY[0x263F44090]);
      }
      else
      {
        sub_240BB4510();
        (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v85, v61);
      }
      sub_240AFB9B4(v136);
      sub_240AFE298(v84, &qword_268C9FF40, MEMORY[0x263F44090]);
      uint64_t v98 = MEMORY[0x24560BA20](v60 + 2);
      if (!v98) {
        goto LABEL_52;
      }
      uint64_t v97 = v98;
    }
    else
    {
      unint64_t v64 = v130;
      sub_240BB4550();
      sub_240BB4560();
      uint64_t v65 = (uint64_t)v123;
      (*v62)(v123, v64, v61);
      uint64_t v66 = (void (*)(char *, void, uint64_t, uint64_t))*v63;
      (*v63)(v65, 0, 1, v61);
      sub_240AFD728(v65, (uint64_t)v24);
      if (v36(v24, 1, v61) == 1)
      {
        sub_240AFE298((uint64_t)v24, &qword_268C9FF40, MEMORY[0x263F44090]);
      }
      else
      {
        sub_240BB4550();
        (*(void (**)(char *, uint64_t))(v127 + 8))(v24, v61);
      }
      sub_240AFB7DC(v136);
      sub_240AFE298(v65, &qword_268C9FF40, MEMORY[0x263F44090]);
      uint64_t v96 = MEMORY[0x24560BA20](v60 + 2);
      if (!v96) {
        goto LABEL_52;
      }
      uint64_t v97 = v96;
    }
    sub_240BB4620();
    uint64_t v99 = MEMORY[0x24560BA20](v97 + qword_268CA0E30);
    if (v99)
    {
      uint64_t v100 = *(void **)(v99 + qword_268C9F850);
      if (v100)
      {
        id v101 = v100;
        objc_msgSend(v101, sel_setEnabled_, sub_240AF9D14() & 1);
        sub_240BB50A0();
        sub_240BB50A0();

LABEL_52:
        _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v136);
        uint64_t v111 = v131;
        v117(v131, v130, v61);
        v66(v111, 0, 1, v61);
        uint64_t v112 = (uint64_t)v111;
        uint64_t v113 = v129;
        sub_240AFE028(v112, v129);
        uint64_t v114 = v128;
        swift_beginAccess();
        sub_240AFE0BC(v113, v114);
        swift_endAccess();
        return;
      }
      sub_240BB50A0();
    }
    sub_240BB50A0();
    goto LABEL_52;
  }
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v74 = sub_240BB5990();
  sub_240A395FC(v74, (uint64_t)qword_26AFDEC70);
  uint64_t v75 = sub_240BB5970();
  os_log_type_t v76 = sub_240BB7180();
  if (os_log_type_enabled(v75, v76))
  {
    uint64_t v77 = swift_slowAlloc();
    uint64_t v78 = swift_slowAlloc();
    v136[0] = v78;
    *(_DWORD *)uint64_t v77 = 136446722;
    uint64_t v79 = sub_240BB7C80();
    uint64_t v137 = sub_240A38940(v79, v80, v136);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v77 + 12) = 2082;
    uint64_t v137 = sub_240A38940(0xD000000000000014, 0x8000000240BCFB80, v136);
    sub_240BB75F0();
    *(_WORD *)(v77 + 22) = 2082;
    LOBYTE(v137) = v59 & 0x3F;
    uint64_t v81 = sub_240BB6E10();
    uint64_t v137 = sub_240A38940(v81, v82, v136);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v75, v76, "[%{public}s.%{public}s]: Should not be able to tap on picker %{public}s", (uint8_t *)v77, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v78, -1, -1);
    MEMORY[0x24560B930](v77, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v127 + 8))(v130, v61);
}

uint64_t sub_240AFB7DC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v3 = self;
  id v4 = objc_msgSend(v3, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_240BB2980();

  id v5 = objc_msgSend(v3, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  sub_240BB2980();

  a1[3] = sub_240BB3F50();
  a1[4] = sub_240AFDFE0(&qword_268CA0968, MEMORY[0x263F43D10]);
  sub_240A23B08(a1);
  return sub_240BB3F40();
}

uint64_t sub_240AFB9B4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v3 = self;
  id v4 = objc_msgSend(v3, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_240BB2980();

  id v5 = objc_msgSend(v3, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  sub_240BB2980();

  a1[3] = sub_240BB3F50();
  a1[4] = sub_240AFDFE0(&qword_268CA0968, MEMORY[0x263F43D10]);
  sub_240A23B08(a1);
  return sub_240BB3F40();
}

uint64_t sub_240AFBB90@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v88 = a2;
  uint64_t v89 = a3;
  uint64_t v90 = a1;
  id v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240AFE150(0, (unint64_t *)&qword_268C9F2A0, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v86 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v86 - v8;
  sub_240AFE150(0, &qword_268C9FF40, MEMORY[0x263F44090], v4);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v86 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v86 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v86 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (char *)&v86 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v27 = (char *)&v86 - v26;
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  uint64_t v30 = (char *)&v86 - v29;
  uint64_t v31 = MEMORY[0x270FA5388](v28);
  uint64_t v33 = (char *)&v86 - v32;
  MEMORY[0x270FA5388](v31);
  uint64_t v37 = (char *)&v86 - v35;
  if (a1 >> 6)
  {
    if (a1 >> 6 == 1)
    {
      if (v90)
      {
        sub_240AFD728(v88, (uint64_t)v21);
        uint64_t v44 = sub_240BB4590();
        uint64_t v45 = *(void *)(v44 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v21, 1, v44) == 1)
        {
          sub_240AFE298((uint64_t)v21, &qword_268C9FF40, MEMORY[0x263F44090]);
        }
        else
        {
          sub_240BB4510();
          (*(void (**)(char *, uint64_t))(v45 + 8))(v21, v44);
        }
        return sub_240AFB9B4(v89);
      }
      else
      {
        sub_240AFD728(v88, (uint64_t)v24);
        uint64_t v38 = sub_240BB4590();
        uint64_t v39 = *(void *)(v38 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v24, 1, v38) == 1)
        {
          sub_240AFE298((uint64_t)v24, &qword_268C9FF40, MEMORY[0x263F44090]);
        }
        else
        {
          sub_240BB4550();
          (*(void (**)(char *, uint64_t))(v39 + 8))(v24, v38);
        }
        return sub_240AFB7DC(v89);
      }
    }
    else
    {
      switch(v90 & 0x3F)
      {
        case 1:
          uint64_t v59 = v34;
          sub_240AFD728(v88, v34);
          uint64_t v60 = sub_240BB4590();
          uint64_t v61 = *(void *)(v60 - 8);
          int v62 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60);
          unint64_t v63 = v86;
          if (v62 == 1)
          {
            sub_240AFE298(v59, &qword_268C9FF40, MEMORY[0x263F44090]);
            uint64_t v64 = sub_240BB28D0();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v63, 1, 1, v64);
          }
          else
          {
            sub_240BB4530();
            (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v59, v60);
          }
          uint64_t v85 = sub_240BB40E0();
          swift_allocObject();
          uint64_t v79 = sub_240BB40C0();
          sub_240AFDFE0(&qword_268CA0908, (void (*)(uint64_t))type metadata accessor for ConfirmDetailsModel);
          swift_unknownObjectRetain();
          sub_240BB40D0();
          unint64_t v80 = v89;
          v89[3] = v85;
          uint64_t v81 = (unint64_t *)&unk_268CA0910;
          unint64_t v82 = (void (*)(uint64_t))MEMORY[0x263F43E30];
          goto LABEL_46;
        case 2:
          sub_240AFD728(v88, (uint64_t)v15);
          uint64_t v54 = sub_240BB4590();
          uint64_t v55 = *(void *)(v54 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v15, 1, v54) == 1)
          {
            sub_240AFE298((uint64_t)v15, &qword_268C9FF40, MEMORY[0x263F44090]);
          }
          else
          {
            sub_240BB4580();
            (*(void (**)(char *, uint64_t))(v55 + 8))(v15, v54);
          }
          sub_240A1E37C(v87 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_valueFormatter, (uint64_t)v91);
          uint64_t v77 = (objc_class *)sub_240BB4070();
          id v78 = objc_allocWithZone(v77);
          uint64_t v79 = sub_240BB4050();
          sub_240AFDFE0(&qword_268CA0928, (void (*)(uint64_t))type metadata accessor for ConfirmDetailsModel);
          swift_unknownObjectRetain();
          sub_240BB4060();
          unint64_t v80 = v89;
          v89[3] = (uint64_t)v77;
          uint64_t v81 = (unint64_t *)&unk_268CA0930;
          unint64_t v82 = (void (*)(uint64_t))MEMORY[0x263F43DD0];
          goto LABEL_46;
        case 3:
          uint64_t v56 = v36;
          sub_240AFD728(v88, v36);
          uint64_t v57 = sub_240BB4590();
          uint64_t v58 = *(void *)(v57 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57) == 1)
          {
            sub_240AFE298(v56, &qword_268C9FF40, MEMORY[0x263F44090]);
          }
          else
          {
            sub_240BB4570();
            (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v56, v57);
          }
          sub_240A1E37C(v87 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_valueFormatter, (uint64_t)v91);
          uint64_t v83 = (objc_class *)sub_240BB3FB0();
          id v84 = objc_allocWithZone(v83);
          uint64_t v79 = sub_240BB3F90();
          sub_240AFDFE0(&qword_268CA0918, (void (*)(uint64_t))type metadata accessor for ConfirmDetailsModel);
          swift_unknownObjectRetain();
          sub_240BB3FA0();
          unint64_t v80 = v89;
          v89[3] = (uint64_t)v83;
          uint64_t v81 = (unint64_t *)&unk_268CA0920;
          unint64_t v82 = (void (*)(uint64_t))MEMORY[0x263F43D48];
LABEL_46:
          uint64_t result = sub_240AFDFE0(v81, v82);
          v80[4] = result;
          uint64_t *v80 = v79;
          break;
        default:
          sub_240AFD728(v88, (uint64_t)v18);
          uint64_t v42 = sub_240BB4590();
          uint64_t v43 = *(void *)(v42 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v18, 1, v42) == 1)
          {
            sub_240AFE298((uint64_t)v18, &qword_268C9FF40, MEMORY[0x263F44090]);
          }
          else
          {
            sub_240BB44F0();
            (*(void (**)(char *, uint64_t))(v43 + 8))(v18, v42);
          }
          uint64_t v67 = (objc_class *)sub_240BB46C0();
          id v68 = objc_allocWithZone(v67);
          uint64_t v69 = sub_240BB46A0();
          sub_240AFDFE0(&qword_268CA0938, (void (*)(uint64_t))type metadata accessor for ConfirmDetailsModel);
          swift_unknownObjectRetain();
          sub_240BB46B0();
          uint64_t v70 = v89;
          v89[3] = (uint64_t)v67;
          uint64_t result = sub_240AFDFE0(&qword_268CA0940, MEMORY[0x263F440D0]);
          v70[4] = result;
          *uint64_t v70 = v69;
          break;
      }
    }
  }
  else
  {
    switch(v90)
    {
      case 1:
        sub_240AFD728(v88, (uint64_t)v33);
        uint64_t v47 = sub_240BB4590();
        uint64_t v48 = *(void *)(v47 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v33, 1, v47) == 1)
        {
          sub_240AFE298((uint64_t)v33, &qword_268C9FF40, MEMORY[0x263F44090]);
          uint64_t v49 = sub_240BB28D0();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v9, 1, 1, v49);
        }
        else
        {
          sub_240BB4530();
          (*(void (**)(char *, uint64_t))(v48 + 8))(v33, v47);
        }
        uint64_t v71 = sub_240BB3F30();
        uint64_t v72 = v89;
        v89[3] = v71;
        v72[4] = sub_240AFDFE0(&qword_268CA0958, MEMORY[0x263F43CF0]);
        sub_240A23B08(v72);
        uint64_t result = sub_240BB3F20();
        break;
      case 2:
        sub_240AFD728(v88, (uint64_t)v30);
        uint64_t v50 = sub_240BB4590();
        uint64_t v51 = *(void *)(v50 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v30, 1, v50) == 1)
        {
          sub_240AFE298((uint64_t)v30, &qword_268C9FF40, MEMORY[0x263F44090]);
        }
        else
        {
          sub_240BB4580();
          (*(void (**)(char *, uint64_t))(v51 + 8))(v30, v50);
        }
        sub_240A1E37C(v87 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_valueFormatter, (uint64_t)v91);
        uint64_t v73 = sub_240BB3D10();
        uint64_t v74 = v89;
        v89[3] = v73;
        v74[4] = sub_240AFDFE0(&qword_268CA0950, MEMORY[0x263F43AF0]);
        sub_240A23B08(v74);
        uint64_t result = sub_240BB3D00();
        break;
      case 3:
        sub_240AFD728(v88, (uint64_t)v27);
        uint64_t v52 = sub_240BB4590();
        uint64_t v53 = *(void *)(v52 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v27, 1, v52) == 1)
        {
          sub_240AFE298((uint64_t)v27, &qword_268C9FF40, MEMORY[0x263F44090]);
        }
        else
        {
          sub_240BB4570();
          (*(void (**)(char *, uint64_t))(v53 + 8))(v27, v52);
        }
        sub_240A1E37C(v87 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_valueFormatter, (uint64_t)v91);
        uint64_t v75 = sub_240BB3C30();
        os_log_type_t v76 = v89;
        v89[3] = v75;
        v76[4] = sub_240AFDFE0(&qword_268CA0948, MEMORY[0x263F43AB8]);
        sub_240A23B08(v76);
        uint64_t result = sub_240BB3C20();
        break;
      default:
        sub_240AFD728(v88, (uint64_t)&v86 - v35);
        uint64_t v40 = sub_240BB4590();
        uint64_t v41 = *(void *)(v40 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v37, 1, v40) == 1)
        {
          sub_240AFE298((uint64_t)v37, &qword_268C9FF40, MEMORY[0x263F44090]);
        }
        else
        {
          sub_240BB44F0();
          (*(void (**)(char *, uint64_t))(v41 + 8))(v37, v40);
        }
        uint64_t v65 = sub_240BB4090();
        uint64_t v66 = v89;
        v89[3] = v65;
        v66[4] = sub_240AFDFE0(&qword_268CA0960, MEMORY[0x263F43DE0]);
        sub_240A23B08(v66);
        uint64_t result = sub_240BB4080();
        break;
    }
  }
  return result;
}

uint64_t sub_240AFCB6C()
{
  sub_240A484BC(v0 + 16);
  sub_240AFE298(v0 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_mostRecentDetails, &qword_268C9FF40, MEMORY[0x263F44090]);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_valueFormatter);

  return swift_deallocClassInstance();
}

uint64_t sub_240AFCC04()
{
  return type metadata accessor for ConfirmDetailsModel();
}

uint64_t type metadata accessor for ConfirmDetailsModel()
{
  uint64_t result = qword_268CA08E8;
  if (!qword_268CA08E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_240AFCC58()
{
  sub_240AFE150(319, &qword_268C9FF40, MEMORY[0x263F44090], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t getEnumTagSinglePayload for ConfirmDetailsModel.Row(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x3E) {
    goto LABEL_17;
  }
  if (a2 + 194 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 194) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 194;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 194;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 194;
    }
  }
LABEL_17:
  unsigned int v6 = (*a1 & 0x3C | (*a1 >> 6)) ^ 0x3F;
  if (v6 >= 0x3D) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for ConfirmDetailsModel.Row(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 194 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 194) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x3E) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x3D)
  {
    unsigned int v6 = ((a2 - 62) >> 8) + 1;
    *uint64_t result = a2 - 62;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240AFCEACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_240AFCED4(unsigned __int8 *a1)
{
  return *a1 >> 6;
}

unsigned char *sub_240AFCEE0(unsigned char *result)
{
  *result &= 0x3Fu;
  return result;
}

unsigned char *sub_240AFCEF0(unsigned char *result, char a2)
{
  *uint64_t result = *result & 3 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for ConfirmDetailsModel.Row()
{
  return &type metadata for ConfirmDetailsModel.Row;
}

unsigned char *storeEnumTagSinglePayload for ConfirmDetailsModel.Row.HealthDetail(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240AFCFE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConfirmDetailsModel.Row.HealthDetail()
{
  return &type metadata for ConfirmDetailsModel.Row.HealthDetail;
}

unint64_t sub_240AFD01C()
{
  unint64_t result = qword_268CA08F8;
  if (!qword_268CA08F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA08F8);
  }
  return result;
}

unint64_t sub_240AFD074()
{
  unint64_t result = qword_268CA0900;
  if (!qword_268CA0900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0900);
  }
  return result;
}

void (*sub_240AFD0C8())(unsigned char *, void)
{
  return sub_240AFD3A4();
}

void (*sub_240AFD0D0(uint64_t a1, void *a2))(unsigned char *, void)
{
  return sub_240AFD7BC(a2, MEMORY[0x263F44088], 2, 2);
}

void (*sub_240AFD108(uint64_t a1, void *a2))(unsigned char *, void)
{
  return sub_240AFD7BC(a2, MEMORY[0x263F44080], 3, 3);
}

void (*sub_240AFD140(uint64_t a1, uint64_t a2))(char *, void)
{
  return sub_240AFDB54(a2);
}

uint64_t sub_240AFD148(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  uint64_t v9 = sub_240A23B08((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v9, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_240A37388(&v12, v10 + 40 * a1 + 32);
}

BOOL sub_240AFD1E0(unsigned __int8 a1, unsigned __int8 a2)
{
  BOOL v3 = a2 < 0x40u && a1 == a2;
  BOOL v4 = ((a2 ^ a1) & 1) == 0;
  if ((a2 & 0xC0) != 0x40) {
    BOOL v4 = 0;
  }
  BOOL v5 = ((a2 ^ a1) & 0x3F) == 0;
  if ((a2 & 0xC0) != 0x80) {
    BOOL v5 = 0;
  }
  if (a1 >> 6 == 1) {
    BOOL v5 = v4;
  }
  if (a1 >> 6) {
    return v5;
  }
  else {
    return v3;
  }
}

unint64_t sub_240AFD234(unint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  return result;
}

uint64_t sub_240AFD244(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v4 = sub_240BB2F70();
  if (v4 == 1)
  {
    uint64_t v8 = sub_240BB2F60();
    uint64_t v9 = sub_240BB2F80();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
    if (v8 == 1) {
      unsigned int v10 = 65;
    }
    else {
      unsigned int v10 = -4;
    }
    if (v8) {
      return v10;
    }
    else {
      return 64;
    }
  }
  else if (v4)
  {
    uint64_t v11 = sub_240BB2F80();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
    return 252;
  }
  else
  {
    uint64_t v5 = sub_240BB2F60();
    uint64_t v6 = sub_240BB2F80();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    if (a2 == 4) {
      goto LABEL_14;
    }
    if (a2 + 1 == v5) {
      return a2 | 0xFFFFFF80;
    }
    uint64_t v12 = v5 > a2;
    BOOL v13 = __OFSUB__(v5, v12);
    v5 -= v12;
    if (v13)
    {
      __break(1u);
    }
    else
    {
LABEL_14:
      if ((unint64_t)v5 >= 4) {
        return 4294967292;
      }
      else {
        return v5;
      }
    }
  }
  return result;
}

void (*sub_240AFD3A4())(unsigned char *, void)
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_240BB2F80();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v26[-v7];
  sub_240AFE150(0, &qword_268C9FF40, MEMORY[0x263F44090], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = &v26[-v10];
  uint64_t v12 = sub_240AFA260();
  uint64_t v14 = v13;
  uint64_t v15 = sub_240BB4590();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15)) {
    sub_240BB4500();
  }
  ((void (*)(uint64_t *, void))v12)(v27, 0);
  uint64_t v16 = v1 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_mostRecentDetails;
  swift_beginAccess();
  sub_240AFD728(v16, (uint64_t)v11);
  sub_240AFBB90(0, (uint64_t)v11, v27);
  sub_240AFE298((uint64_t)v11, &qword_268C9FF40, MEMORY[0x263F44090]);
  MEMORY[0x2456061F0](0, 0);
  uint64_t v17 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_visiblePicker);
  if (v17 == 4)
  {
LABEL_6:
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 32))(v8, v6, v2);
    uint64_t v21 = MEMORY[0x24560BA20](v1 + 16);
    if (v21)
    {
      uint64_t v22 = v21;
      sub_240BB4620();
      uint64_t v23 = MEMORY[0x24560BA20](v22 + qword_268CA0E30);
      if (v23)
      {
        uint64_t v24 = *(void **)(v23 + qword_268C9F850);
        if (v24)
        {
          id v25 = v24;
          objc_msgSend(v25, sel_setEnabled_, sub_240AF9D14() & 1);
          sub_240BB50A0();
          sub_240BB50A0();

          goto LABEL_13;
        }
        sub_240BB50A0();
      }
      sub_240BB50A0();
    }
LABEL_13:
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v8, v2);
    return (void (*)(unsigned char *, void))_s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v27);
  }
  uint64_t v18 = sub_240BB2F60() > v17;
  uint64_t result = (void (*)(unsigned char *, void))sub_240BB2F50();
  if (!__OFADD__(*v20, v18))
  {
    *v20 += v18;
    result(v26, 0);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_240AFD728(uint64_t a1, uint64_t a2)
{
  sub_240AFE150(0, &qword_268C9FF40, MEMORY[0x263F44090], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void (*sub_240AFD7BC(void *a1, void (*a2)(void *), int a3, uint64_t a4))(unsigned char *, void)
{
  uint64_t v35 = a4;
  int v34 = a3;
  uint64_t v33 = a2;
  uint64_t v5 = v4;
  uint64_t v7 = sub_240BB2F80();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v32 - v12;
  sub_240AFE150(0, &qword_268C9FF40, MEMORY[0x263F44090], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v32 - v15;
  uint64_t v17 = sub_240AFA260();
  uint64_t v19 = v18;
  uint64_t v20 = sub_240BB4590();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v19, 1, v20))
  {
    id v21 = a1;
    v33(a1);
  }
  ((void (*)(uint64_t *, void))v17)(v37, 0);
  uint64_t v22 = v5 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_mostRecentDetails;
  swift_beginAccess();
  sub_240AFD728(v22, (uint64_t)v16);
  sub_240AFBB90(v34, (uint64_t)v16, v37);
  sub_240AFE298((uint64_t)v16, &qword_268C9FF40, MEMORY[0x263F44090]);
  MEMORY[0x2456061F0](v35, 0);
  uint64_t v23 = *(unsigned __int8 *)(v5 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_visiblePicker);
  if (v23 == 4)
  {
LABEL_6:
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v11, v7);
    uint64_t v27 = MEMORY[0x24560BA20](v5 + 16);
    if (v27)
    {
      uint64_t v28 = v27;
      sub_240BB4620();
      uint64_t v29 = MEMORY[0x24560BA20](v28 + qword_268CA0E30);
      if (v29)
      {
        uint64_t v30 = *(void **)(v29 + qword_268C9F850);
        if (v30)
        {
          id v31 = v30;
          objc_msgSend(v31, sel_setEnabled_, sub_240AF9D14() & 1);
          sub_240BB50A0();
          sub_240BB50A0();

          goto LABEL_13;
        }
        sub_240BB50A0();
      }
      sub_240BB50A0();
    }
LABEL_13:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    return (void (*)(unsigned char *, void))_s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v37);
  }
  uint64_t v24 = sub_240BB2F60() > v23;
  uint64_t result = (void (*)(unsigned char *, void))sub_240BB2F50();
  if (!__OFADD__(*v26, v24))
  {
    *v26 += v24;
    result(v36, 0);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

void (*sub_240AFDB54(uint64_t a1))(char *, void)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_240BB2F80();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v39 - v9;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240AFE150(0, &qword_268C9FF40, MEMORY[0x263F44090], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v39 - v13;
  sub_240AFE150(0, (unint64_t *)&qword_268C9F2A0, MEMORY[0x263F063B0], v11);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v39 - v16;
  uint64_t v18 = sub_240AFA260();
  uint64_t v20 = v19;
  uint64_t v21 = sub_240BB4590();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v20, 1, v21))
  {
    uint64_t v22 = sub_240BB28D0();
    uint64_t v40 = v5;
    uint64_t v23 = v10;
    uint64_t v24 = v4;
    uint64_t v25 = v22;
    uint64_t v26 = a1;
    uint64_t v27 = *(void *)(v22 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v17, v26, v22);
    uint64_t v28 = v25;
    uint64_t v4 = v24;
    uint64_t v10 = v23;
    uint64_t v5 = v40;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v17, 0, 1, v28);
    sub_240BB4540();
  }
  ((void (*)(uint64_t *, void))v18)(v42, 0);
  uint64_t v29 = v2 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_mostRecentDetails;
  swift_beginAccess();
  sub_240AFD728(v29, (uint64_t)v14);
  sub_240AFBB90(1u, (uint64_t)v14, v42);
  sub_240AFE298((uint64_t)v14, &qword_268C9FF40, MEMORY[0x263F44090]);
  MEMORY[0x2456061F0](1, 0);
  uint64_t v30 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_visiblePicker);
  if (v30 == 4)
  {
LABEL_6:
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v8, v4);
    uint64_t v34 = MEMORY[0x24560BA20](v2 + 16);
    if (v34)
    {
      uint64_t v35 = v34;
      sub_240BB4620();
      uint64_t v36 = MEMORY[0x24560BA20](v35 + qword_268CA0E30);
      if (v36)
      {
        uint64_t v37 = *(void **)(v36 + qword_268C9F850);
        if (v37)
        {
          id v38 = v37;
          objc_msgSend(v38, sel_setEnabled_, sub_240AF9D14() & 1);
          sub_240BB50A0();
          sub_240BB50A0();

          goto LABEL_13;
        }
        sub_240BB50A0();
      }
      sub_240BB50A0();
    }
LABEL_13:
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    return (void (*)(char *, void))_s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v42);
  }
  uint64_t v31 = sub_240BB2F60() > v30;
  uint64_t result = (void (*)(char *, void))sub_240BB2F50();
  if (!__OFADD__(*v33, v31))
  {
    *v33 += v31;
    result(v41, 0);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_240AFDFE0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240AFE028(uint64_t a1, uint64_t a2)
{
  sub_240AFE150(0, &qword_268C9FF40, MEMORY[0x263F44090], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_240AFE0BC(uint64_t a1, uint64_t a2)
{
  sub_240AFE150(0, &qword_268C9FF40, MEMORY[0x263F44090], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_240AFE150(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_240AFE1B4()
{
  if (!qword_268CA0980)
  {
    unint64_t v0 = sub_240BB6F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA0980);
    }
  }
}

uint64_t sub_240AFE20C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  v6[1] = *(_OWORD *)(v2 + 16);
  uint64_t result = sub_240AF99A0((void (*)(void *__return_ptr, char *))sub_240AFE264, (uint64_t)v6, v4);
  *a2 = result;
  return result;
}

uint64_t sub_240AFE264@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_240AFBB90(*a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_240AFE298(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_240AFE150(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for ConfirmDetailsModel.Row.MedicationDetail(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240AFE3D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConfirmDetailsModel.Row.MedicationDetail()
{
  return &type metadata for ConfirmDetailsModel.Row.MedicationDetail;
}

unint64_t sub_240AFE410()
{
  unint64_t result = qword_268CA0988;
  if (!qword_268CA0988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0988);
  }
  return result;
}

uint64_t sub_240AFE464@<X0>(void *a1@<X0>, char a2@<W1>, unsigned __int8 a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_240BB3050();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)sub_240BB30E0();
  char v13 = sub_240BB30D0();

  if ((v13 & 1) == 0 || a3 > 0xFDu)
  {
LABEL_11:
    uint64_t v20 = sub_240BB31D0();
    uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
    return v21(a4, 1, 1, v20);
  }
  if (a3 >> 6)
  {
    if (a3 >> 6 != 1) {
      goto LABEL_11;
    }
  }
  else if ((a2 & 1) == 0)
  {
    uint64_t v14 = sub_240BB3310();
    goto LABEL_9;
  }
  uint64_t v14 = sub_240BB3320();
LABEL_9:
  uint64_t v16 = v14;
  uint64_t v17 = v15;
  uint64_t v18 = sub_240AFEE3C();
  if (v19 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  unint64_t v23 = v19;
  uint64_t v32 = v18;
  uint64_t v33 = v9;
  if (qword_26AFD72B8 != -1) {
    swift_once();
  }
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9918);
  uint64_t v24 = sub_240BB7080();
  sub_240A57608();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240BB97E0;
  *(void *)(inited + 32) = v16;
  *(void *)(inited + 40) = v17;
  uint64_t v26 = sub_240AFF0F8(inited, v24);
  swift_setDeallocating();
  swift_arrayDestroy();
  type metadata accessor for CardioFitnessRetroComputeTipTileViewController();
  sub_240BB30F0();
  uint64_t v27 = v32;
  sub_240A4C480(v32, v23);
  if (qword_26AFD72A8 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_240A395FC(v8, (uint64_t)qword_26AFD7290);
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v11, v28, v8);
  id v29 = a1;
  sub_240BB3180();
  sub_240BB4850();
  sub_240BB3190();
  sub_240BB3150();
  uint64_t v30 = (void (*)(unsigned char *, void))sub_240BB31A0();
  sub_240AFE834(v26);
  v30(v34, 0);
  sub_240A8B070(v27, v23);
  uint64_t v31 = sub_240BB31D0();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(a4, 0, 1, v31);
}

uint64_t sub_240AFE834(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v13 >= v7) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      int64_t v2 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v2);
      if (!v14)
      {
        int64_t v2 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        if (!v14)
        {
          int64_t v2 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v2);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    uint64_t v10 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v9);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    sub_240BB4850();
    sub_240B8DB44(&v16, v11, v12);
    unint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v2 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v15;
    goto LABEL_22;
  }
LABEL_23:

  return swift_release();
}

uint64_t sub_240AFE9B4()
{
  sub_240AEAE34(0, &qword_26AFD7660, (void (*)(uint64_t))sub_240AEAC20);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240BB97E0;
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
  *(void *)(inited + 32) = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_quantityTypeForIdentifier_, *MEMORY[0x263F09F20]);
  sub_240BB6F30();
  unint64_t v1 = MEMORY[0x263F8EE78];
  unint64_t v6 = MEMORY[0x263F8EE78];
  int64_t v2 = *(void **)(inited + 32);
  if (v2)
  {
    id v3 = v2;
    MEMORY[0x24560A190]();
    if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_240BB6F60();
    }
    sub_240BB6F70();
    sub_240BB6F30();
    unint64_t v1 = v6;
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_240B8F7D8(v1);
  uint64_t result = swift_bridgeObjectRelease();
  qword_26AFDEA98 = v4;
  return result;
}

uint64_t sub_240AFEB00()
{
  uint64_t v0 = sub_240BB3210();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_240BB3240();
  sub_240A4C570(v4, qword_26AFDEAA0);
  sub_240A395FC(v4, (uint64_t)qword_26AFDEAA0);
  sub_240BB30E0();
  sub_240AEAE34(0, (unint64_t *)&qword_26AFD99A0, MEMORY[0x263F45588]);
  uint64_t v5 = sub_240BB3050();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_240BB97E0;
  unint64_t v9 = v8 + v7;
  if (qword_26AFD72A8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_240A395FC(v5, (uint64_t)qword_26AFD7290);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 16))(v9, v10, v5);
  if (*(void *)(v8 + 16)) {
    sub_240A20B04(v8);
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if (qword_26AFD72B8 != -1) {
    swift_once();
  }
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F45688], v0);
  sub_240BB4850();
  return sub_240BB3230();
}

uint64_t sub_240AFEDB4()
{
  uint64_t v0 = sub_240BB3050();
  sub_240A4C570(v0, qword_26AFD7290);
  uint64_t v1 = sub_240A395FC(v0, (uint64_t)qword_26AFD7290);
  uint64_t v2 = *MEMORY[0x263F45540];
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t sub_240AFEE3C()
{
  uint64_t v0 = sub_240BB5990();
  MEMORY[0x270FA5388](v0);
  sub_240BB2770();
  swift_allocObject();
  sub_240BB2760();
  sub_240AFF178();
  uint64_t v1 = sub_240BB2750();
  swift_release();
  return v1;
}

uint64_t sub_240AFF0F8(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = a2;
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    id v3 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v4 = *(v3 - 1);
      uint64_t v5 = *v3;
      sub_240BB4850();
      sub_240B8DB44(&v7, v4, v5);
      swift_bridgeObjectRelease();
      v3 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return a2;
}

unint64_t sub_240AFF178()
{
  unint64_t result = qword_268CA0990;
  if (!qword_268CA0990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0990);
  }
  return result;
}

uint64_t sub_240AFF1CC()
{
  sub_240A39C18(0, (unint64_t *)&qword_26AFD77C0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_240BBAD40;
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
  *(void *)(v0 + 32) = MEMORY[0x24560A470]((id)*MEMORY[0x263F09BF8]);
  uint64_t result = sub_240BB6F30();
  qword_26AFDEAC8 = v0;
  return result;
}

uint64_t sub_240AFF274@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v52 = a3;
  sub_240A320B8(0, (unint64_t *)&unk_26AFD8AA0, (uint64_t (*)(uint64_t))sub_240A3FF50, MEMORY[0x263EFDDF8]);
  uint64_t v53 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v51 = (char *)&v43 - v5;
  uint64_t v6 = sub_240BB3210();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v47 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_240BB3240();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v50 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_240BB32A0();
  uint64_t v10 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v46 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3FB28();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3FF50(0);
  uint64_t v45 = v17;
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v43 - v21;
  unint64_t v23 = sub_240B009A4();
  uint64_t v54 = v24;
  unint64_t v55 = v23;
  char v25 = sub_240BB56D0();
  uint64_t v26 = (void *)sub_240BB56F0();
  unsigned int v27 = objc_msgSend(v26, sel_areAllRequirementsSatisfied);

  uint64_t v28 = sub_240BB31D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v22, 1, 1, v28);
  if ((v25 & 1) != 0 && v27)
  {
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_240A395FC(v13, (uint64_t)qword_26AFDEB68);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v29, v13);
    *(void *)(swift_allocObject() + 16) = v44;
    uint64_t v56 = 0;
    sub_240BB5700();
    swift_release();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    sub_240AFFAFC(a1, v55, v54, (uint64_t)v20);
    sub_240AAE598((uint64_t)v22);
    sub_240A5A5D8((uint64_t)v20, (uint64_t)v22);
  }
  else
  {
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_240A395FC(v13, (uint64_t)qword_26AFDEB68);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v30, v13);
    uint64_t v31 = swift_allocObject();
    *(unsigned char *)(v31 + 16) = v25 & 1;
    *(unsigned char *)(v31 + 17) = v27;
    *(void *)(v31 + 24) = v44;
    uint64_t v56 = 0;
    sub_240BB5700();
    swift_release();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  (*(void (**)(char *, void *, uint64_t))(v10 + 16))(v46, a1, v43);
  uint64_t v32 = (void *)sub_240BB3270();
  sub_240A320B8(0, (unint64_t *)&qword_26AFD99A0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v33 = sub_240BB3050();
  uint64_t v34 = *(void *)(v33 - 8);
  unint64_t v35 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_240BB97E0;
  (*(void (**)(unint64_t, void, uint64_t))(v34 + 104))(v36 + v35, *MEMORY[0x263F45570], v33);
  uint64_t v37 = qword_26AFD73A0;
  id v38 = v32;
  if (v37 != -1) {
    swift_once();
  }
  if ((unint64_t)qword_26AFDEAC8 >> 62)
  {
    sub_240A34DC4(0, (unint64_t *)&qword_26AFD9918);
    sub_240BB4850();
    sub_240BB78F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_240BB4850();
    sub_240BB7AF0();
    sub_240A34DC4(0, (unint64_t *)&qword_26AFD9918);
  }
  (*(void (**)(char *, void, uint64_t))(v48 + 104))(v47, *MEMORY[0x263F45688], v49);
  sub_240BB3220();

  sub_240A5A4D8((uint64_t)v22, (uint64_t)v20);
  sub_240BB6200();
  uint64_t v39 = sub_240BB32E0();
  uint64_t v40 = MEMORY[0x263F456B8];
  uint64_t v41 = v52;
  v52[3] = v39;
  v41[4] = v40;
  sub_240A23B08(v41);
  sub_240A3B1B8();
  sub_240BB32D0();
  return sub_240AAE598((uint64_t)v22);
}

uint64_t sub_240AFFA30()
{
  return 0;
}

uint64_t sub_240AFFAFC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v43 = a3;
  uint64_t v42 = a2;
  id v53 = a1;
  uint64_t v56 = a4;
  sub_240A3FB28();
  uint64_t v48 = *(void *)(v4 - 8);
  uint64_t v49 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v47 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240BB38F0();
  uint64_t v45 = *(void *)(v6 - 8);
  uint64_t v46 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v44 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_240BB3050();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v40 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v39 - v12;
  uint64_t v41 = sub_240BB3EA0();
  uint64_t v39 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_240BB4300();
  uint64_t v54 = *(void *)(v16 - 8);
  uint64_t v55 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AFibBurdenNotificationSettingsDisclosureCellViewController();
  uint64_t v50 = sub_240BB30F0();
  uint64_t v51 = v19;
  LODWORD(v52) = v20;
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  sub_240BB2980();
  sub_240BB3E80();
  sub_240BB2980();
  sub_240BB42D0();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v13, *MEMORY[0x263F45570], v8);
  uint64_t v21 = (void *)sub_240BB3270();
  uint64_t v22 = v8;
  unint64_t v23 = v13;
  uint64_t v24 = sub_240BB42F0();
  char v25 = *(void (**)(char *, char *))(v9 + 16);
  uint64_t v26 = v22;
  unint64_t v28 = v27;
  uint64_t v49 = v26;
  v25(v40, v13);
  sub_240A4C480(v24, v28);
  id v53 = v21;
  sub_240BB4850();
  uint64_t v29 = v56;
  uint64_t v52 = v24;
  sub_240BB3180();
  sub_240BB42E0();
  sub_240BB3E90();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v15, v41);
  sub_240BB3170();
  sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240BB97E0;
  *(void *)(inited + 32) = sub_240BB3330();
  *(void *)(inited + 40) = v31;
  sub_240A71AF4(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_240BB31B0();
  uint64_t v33 = v45;
  uint64_t v32 = v46;
  uint64_t v34 = v44;
  (*(void (**)(char *, void, uint64_t))(v45 + 104))(v44, *MEMORY[0x263F43820], v46);
  sub_240BB38E0();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
  sub_240BB31C0();
  sub_240BB3160();
  if (qword_26AFD73A0 != -1) {
    swift_once();
  }
  unint64_t v35 = sub_240BB4850();
  uint64_t v36 = sub_240B8F7FC(v35);
  swift_bridgeObjectRelease();
  sub_240BA18F4(v36);
  swift_bridgeObjectRelease();
  sub_240BB3190();

  sub_240A4C4D8(v52, v28);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v23, v49);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v18, v55);
  uint64_t v37 = sub_240BB31D0();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v29, 0, 1, v37);
}

uint64_t sub_240B00338()
{
  return 0;
}

uint64_t sub_240B004B8(void *a1)
{
  sub_240BB77C0();
  sub_240BB6E70();
  sub_240BB7C80();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  id v2 = a1;
  sub_240A39BC8(0, (unint64_t *)&qword_26AFD99E0);
  sub_240BB6E20();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return 0;
}

uint64_t sub_240B005E4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Heart47AFibBurdenNotificationSettingsGeneratorPipeline_domain;
  uint64_t v2 = sub_240BB3240();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC5Heart47AFibBurdenNotificationSettingsGeneratorPipeline_context;
  uint64_t v4 = sub_240BB32A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_240B006D8()
{
  return type metadata accessor for AFibBurdenNotificationSettingsGeneratorPipeline();
}

uint64_t sub_240B006E0()
{
  uint64_t result = sub_240BB3240();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_240BB32A0();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_240B007C0()
{
  uint64_t v1 = sub_240BB32A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_240B0085C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_240BB32A0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_240AFF274((void *)(v1 + v4), v5, a1);
}

unint64_t sub_240B00908()
{
  unint64_t result = qword_26AFD8CA8;
  if (!qword_26AFD8CA8)
  {
    sub_240A3A938(255, (unint64_t *)&qword_26AFD89D0, (uint64_t (*)(uint64_t))sub_240A22390, (uint64_t (*)(void))sub_240A3B92C, MEMORY[0x263EFDB80]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD8CA8);
  }
  return result;
}

unint64_t sub_240B009A4()
{
  uint64_t v0 = sub_240BB2D40();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v4 = (void *)sub_240BB3270();
  uint64_t v5 = (void *)sub_240BB30A0();

  if (v5)
  {
    id v6 = objc_msgSend(v5, sel_identifier);

    sub_240BB2D20();
    sub_240BB2D00();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  unint64_t v8 = 0;
  unint64_t v9 = 0xE000000000000000;
  sub_240BB77C0();
  swift_bridgeObjectRelease();
  unint64_t v8 = 0xD000000000000027;
  unint64_t v9 = 0x8000000240BCFD70;
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_240B00B2C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B00B3C()
{
  return sub_240B00338();
}

uint64_t sub_240B00B4C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B00B5C()
{
  return sub_240AFFA30();
}

uint64_t sub_240B00B64()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B00B9C()
{
  return sub_240B004B8(*(void **)(v0 + 16));
}

uint64_t type metadata accessor for FavoritableObjectTypeDataSource()
{
  uint64_t result = qword_268CA0998;
  if (!qword_268CA0998) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240B00BF0()
{
  return swift_initClassMetadata2();
}

void sub_240B00C30()
{
}

uint64_t sub_240B00C60()
{
  sub_240BB4E00();

  return swift_deallocClassInstance();
}

uint64_t sub_240B00C90()
{
  return type metadata accessor for FavoritableObjectTypeDataSource();
}

id sub_240B00D90()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NoCellNecessary();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for NoCellNecessary()
{
  return self;
}

uint64_t sub_240B00DFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5HeartP33_38C201FDECF4757A10F3783D1B8C5FB515NoCellNecessary_item;
  swift_beginAccess();
  return sub_240A477B0(v3, a1);
}

uint64_t sub_240B00E50(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5HeartP33_38C201FDECF4757A10F3783D1B8C5FB515NoCellNecessary_item;
  swift_beginAccess();
  sub_240B00FB8(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_240B00EAC())()
{
  return j__swift_endAccess;
}

uint64_t sub_240B00F0C()
{
  return sub_240B00F74(&qword_268CA09B0);
}

uint64_t sub_240B00F40()
{
  return sub_240B00F74(&qword_268CA09B8);
}

uint64_t sub_240B00F74(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NoCellNecessary();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240B00FB8(uint64_t a1, uint64_t a2)
{
  sub_240A879C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void *sub_240B0101C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5Heart16HeartAppDelegate____lazy_storage___articleIdentifiersByUrl);
  if (!v1)
  {
    uint64_t v20 = OBJC_IVAR____TtC5Heart16HeartAppDelegate____lazy_storage___articleIdentifiersByUrl;
    uint64_t v1 = (void *)sub_240AB8498(MEMORY[0x263F8EE78]);
    uint64_t v2 = 0;
    while (1)
    {
      uint64_t v3 = byte_26F5035A0[v2++ + 32];
      uint64_t v4 = 0xE900000000000065;
      uint64_t v5 = 0x7461527472616548;
      switch(v3)
      {
        case 1:
          uint64_t v5 = 0xD000000000000015;
          uint64_t v4 = 0x8000000240BD0140;
          break;
        case 2:
          uint64_t v4 = 0x8000000240BD0120;
          uint64_t v5 = 0xD000000000000010;
          break;
        case 3:
          uint64_t v4 = 0xE400000000000000;
          uint64_t v5 = 1651066433;
          break;
        case 4:
          uint64_t v4 = 0xEA00000000006E65;
          uint64_t v5 = 0x6472754262694641;
          break;
        default:
          break;
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v8 = sub_240AB9E08(v5, v4);
      uint64_t v9 = v1[2];
      BOOL v10 = (v7 & 1) == 0;
      uint64_t v11 = v9 + v10;
      if (__OFADD__(v9, v10))
      {
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        sub_240BB7B30();
        __break(1u);
        JUMPOUT(0x240B012A0);
      }
      char v12 = v7;
      if (v1[3] >= v11)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if ((v7 & 1) == 0) {
            goto LABEL_18;
          }
        }
        else
        {
          sub_240B08B14();
          if ((v12 & 1) == 0) {
            goto LABEL_18;
          }
        }
      }
      else
      {
        sub_240B083A0(v11, isUniquelyReferenced_nonNull_native);
        unint64_t v13 = sub_240AB9E08(v5, v4);
        if ((v12 & 1) != (v14 & 1)) {
          goto LABEL_26;
        }
        unint64_t v8 = v13;
        if ((v12 & 1) == 0)
        {
LABEL_18:
          v1[(v8 >> 6) + 8] |= 1 << v8;
          uint64_t v15 = (uint64_t *)(v1[6] + 16 * v8);
          *uint64_t v15 = v5;
          v15[1] = v4;
          *(unsigned char *)(v1[7] + v8) = v3;
          uint64_t v16 = v1[2];
          BOOL v17 = __OFADD__(v16, 1);
          uint64_t v18 = v16 + 1;
          if (v17) {
            goto LABEL_25;
          }
          v1[2] = v18;
          sub_240BB4850();
          goto LABEL_5;
        }
      }
      *(unsigned char *)(v1[7] + v8) = v3;
LABEL_5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v2 == 5)
      {
        *(void *)(v0 + v20) = v1;
        sub_240BB4850();
        swift_bridgeObjectRelease();
        return v1;
      }
    }
  }
  sub_240BB4850();
  return v1;
}

uint64_t type metadata accessor for HeartAppDelegate()
{
  return self;
}

uint64_t type metadata accessor for HeartInternalSettingsViewController()
{
  uint64_t result = qword_268CA09D0;
  if (!qword_268CA09D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240B01380()
{
  return swift_initClassMetadata2();
}

id sub_240B013C0()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

uint64_t sub_240B013F4(uint64_t a1)
{
  if (a1 != 8 && a1 != 4) {
    return 0;
  }
  swift_unknownObjectRetain();
  return v1;
}

uint64_t sub_240B01434(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F34948](ObjectType, a2);
}

uint64_t sub_240B01470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240BB4C70();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_240BB4C80();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_240BB4C60() & 0xFE) == 2)
  {
    type metadata accessor for AFibBurdenSharingDataTypeDetailConfigurationProvider();
    swift_initStackObject();
    sub_240A8E8D8((uint64_t)v13);
    uint64_t v14 = sub_240BB49D0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    type metadata accessor for AFibBurdenDataTypeInteractionAnalyticsEvent();
    uint64_t v15 = swift_allocObject();
    uint64_t v29 = v10;
    uint64_t v16 = a3;
    uint64_t v17 = v15;
    *(unsigned char *)(v15 + 16) = 0;
    id v18 = (id)HKHRAFibBurdenLogForCategory();
    uint64_t v28 = a2;
    id v19 = v18;
    uint64_t v20 = (void *)sub_240BB4C30();
    id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A0C0]), sel_initWithLoggingCategory_healthDataSource_, v19, v20);
    uint64_t v27 = v6;
    uint64_t v22 = v21;

    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v16;
    aBlock[4] = sub_240B0A654;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_240AB0D44;
    aBlock[3] = &unk_26F5075F8;
    uint64_t v24 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v22, sel_submitEvent_completion_, v17, v24);
    _Block_release(v24);
    swift_release();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v27);
    type metadata accessor for AFibBurdenDataTypeDetailConfigurationProvider();
    swift_allocObject();
    sub_240ABB81C((uint64_t)v9);
    sub_240ABBAFC((uint64_t)v13);
    uint64_t v14 = sub_240BB49D0();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v29);
  }
  return v14;
}

void sub_240B017D0(int a1, id a2, uint64_t a3)
{
  if (a2)
  {
    id v5 = a2;
    if (qword_26AFD7BF0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_240BB5990();
    sub_240A395FC(v6, (uint64_t)qword_26AFDEB80);
    id v7 = a2;
    id v8 = a2;
    oslog = sub_240BB5970();
    os_log_type_t v9 = sub_240BB7180();
    if (os_log_type_enabled(oslog, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v18 = v11;
      uint64_t v19 = a3;
      *(_DWORD *)uint64_t v10 = 136446466;
      swift_getMetatypeMetadata();
      uint64_t v12 = sub_240BB6E10();
      uint64_t v19 = sub_240A38940(v12, v13, &v18);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2082;
      uint64_t v19 = (uint64_t)a2;
      id v14 = a2;
      sub_240A3FD54(0, (unint64_t *)&qword_26AFD99E0);
      uint64_t v15 = sub_240BB6E10();
      uint64_t v19 = sub_240A38940(v15, v16, &v18);
      sub_240BB75F0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_240A1B000, oslog, v9, "[%{public}s] Error when submitting analytics event: %{public}s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v11, -1, -1);
      MEMORY[0x24560B930](v10, -1, -1);
    }
    else
    {
    }
  }
}

uint64_t sub_240B01A44()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for HeartInternalSettingsViewController());
  return sub_240B01A74();
}

uint64_t sub_240B01A74()
{
  swift_getObjectType();
  uint64_t v0 = sub_240BB2D40();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_240BB4770();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B07BDC(0, (unint64_t *)&qword_268C9E840, MEMORY[0x263F8E0F8]);
  uint64_t v8 = swift_allocObject();
  long long v21 = xmmword_240BB97E0;
  *(_OWORD *)(v8 + 16) = xmmword_240BB97E0;
  *(void *)(v8 + 56) = v4;
  uint64_t v9 = sub_240B0A714((unint64_t *)&qword_268C9FDF0, 255, MEMORY[0x263F441F0]);
  *(void *)(v8 + 64) = v9;
  uint64_t v10 = sub_240A23B08((uint64_t *)(v8 + 32));
  sub_240B01FC0((uint64_t)v10);
  sub_240B02674((uint64_t)v7);
  unint64_t v12 = *(void *)(v8 + 16);
  unint64_t v11 = *(void *)(v8 + 24);
  if (v12 >= v11 >> 1) {
    uint64_t v8 = (uint64_t)sub_240A42B84((void *)(v11 > 1), v12 + 1, 1, (void *)v8);
  }
  uint64_t v23 = v4;
  uint64_t v24 = v9;
  unint64_t v13 = sub_240A23B08((uint64_t *)&v22);
  (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 16))(v13, v7, v4);
  *(void *)(v8 + 16) = v12 + 1;
  sub_240A37388(&v22, v8 + 40 * v12 + 32);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_240B0A6B0(0, &qword_268CA0B10, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
  sub_240BB44D0();
  *(_OWORD *)(swift_allocObject() + 16) = v21;
  sub_240BB2D30();
  sub_240BB2D00();
  id v14 = *(void (**)(char *, uint64_t))(v1 + 8);
  v14(v3, v0);
  sub_240BB44C0();
  *(void *)&long long v22 = 0x3C53447961727241;
  *((void *)&v22 + 1) = 0xE800000000000000;
  sub_240BB2D30();
  sub_240BB2D00();
  v14(v3, v0);
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  sub_240BB3EE0();
  swift_allocObject();
  sub_240BB3ED0();
  sub_240BB4140();
  sub_240B07A04();
  sub_240B0A714((unint64_t *)&unk_268CA0B20, 255, (void (*)(uint64_t))sub_240B07A04);
  uint64_t v15 = sub_240BB4170();
  swift_release();
  sub_240BB4930();
  sub_240B07A64();
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = v21;
  uint64_t v17 = sub_240B0A714(&qword_268CA0B38, 255, (void (*)(uint64_t))sub_240B07AD0);
  *(void *)(v16 + 32) = v15;
  *(void *)(v16 + 40) = v17;
  swift_retain();
  sub_240BB4950();
  uint64_t v18 = sub_240BB53F0();
  swift_release();
  swift_release();
  return v18;
}

uint64_t sub_240B01FC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v1 = sub_240BB52C0();
  uint64_t v39 = *(void *)(v1 - 8);
  uint64_t v40 = v1;
  MEMORY[0x270FA5388](v1);
  id v38 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_240BB46D0();
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  MEMORY[0x270FA5388](v3);
  unint64_t v35 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240B0A6B0(0, &qword_268C9ECF0, MEMORY[0x263F81EE0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v34 = (char *)&v29 - v7;
  sub_240B0A6B0(0, (unint64_t *)&unk_268CA0B50, MEMORY[0x263F81DF8], v5);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v31 = (char *)&v29 - v9;
  uint64_t v10 = sub_240BB5A00();
  uint64_t v32 = *(void *)(v10 - 8);
  uint64_t v33 = v10;
  MEMORY[0x270FA5388](v10);
  unint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_240BB59C0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_240BB5BD0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB5BB0();
  sub_240BB5BC0();
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
  sub_240BB3360();
  id v22 = v21;
  uint64_t v29 = sub_240BB3350();
  uint64_t v30 = v17;
  v42[3] = v17;
  v42[4] = MEMORY[0x263F81F20];
  uint64_t v23 = sub_240A23B08(v42);
  (*(void (**)(uint64_t *, char *, uint64_t))(v18 + 16))(v23, v20, v17);
  sub_240B0A6B0(0, &qword_268C9F770, MEMORY[0x263F81E08], MEMORY[0x263F8E0F8]);
  sub_240BB5A10();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_240BB97E0;
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x263F81DE8], v13);
  uint64_t v24 = sub_240BB59D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v31, 1, 1, v24);
  sub_240BB59F0();
  sub_240BB59E0();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v33);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v29;
  *(void *)(v25 + 16) = v22;
  *(void *)(v25 + 24) = v26;
  uint64_t v27 = sub_240BB5AA0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v34, 1, 1, v27);
  (*(void (**)(char *, void, uint64_t))(v36 + 104))(v35, *MEMORY[0x263F440E0], v37);
  (*(void (**)(char *, void, uint64_t))(v39 + 104))(v38, *MEMORY[0x263F446D0], v40);
  sub_240BB4760();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v30);
}

uint64_t sub_240B02674@<X0>(uint64_t a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v1 = sub_240BB52C0();
  uint64_t v34 = *(void *)(v1 - 8);
  uint64_t v35 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v33 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_240BB46D0();
  uint64_t v31 = *(void *)(v3 - 8);
  uint64_t v32 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v30 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240B0A6B0(0, &qword_268C9ECF0, MEMORY[0x263F81EE0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v29 = (char *)&v26 - v7;
  sub_240B0A6B0(0, (unint64_t *)&unk_268CA0B50, MEMORY[0x263F81DF8], v5);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v26 - v9;
  uint64_t v11 = sub_240BB5A00();
  uint64_t v27 = *(void *)(v11 - 8);
  uint64_t v28 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_240BB59C0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_240BB5BD0();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  id v21 = (char *)&v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB5BB0();
  sub_240BB5BC0();
  v37[3] = v18;
  v37[4] = MEMORY[0x263F81F20];
  id v22 = sub_240A23B08(v37);
  (*(void (**)(uint64_t *, char *, uint64_t))(v19 + 16))(v22, v21, v18);
  sub_240B0A6B0(0, &qword_268C9F770, MEMORY[0x263F81E08], MEMORY[0x263F8E0F8]);
  sub_240BB5A10();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_240BB97E0;
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x263F81DE8], v14);
  uint64_t v23 = sub_240BB59D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v10, 1, 1, v23);
  sub_240BB59F0();
  sub_240BB59E0();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v28);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v24 = sub_240BB5AA0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v29, 1, 1, v24);
  (*(void (**)(char *, void, uint64_t))(v31 + 104))(v30, *MEMORY[0x263F440E0], v32);
  (*(void (**)(char *, void, uint64_t))(v34 + 104))(v33, *MEMORY[0x263F446D0], v35);
  sub_240BB4760();
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
}

id sub_240B02CC0(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for HeartInternalSettingsViewController();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

void sub_240B02D0C(void *a1, uint64_t a2, uint64_t a3)
{
  id v5 = objc_msgSend(self, sel_sharedInstanceForHealthStore_, a2);
  uint64_t v6 = (char *)objc_allocWithZone((Class)type metadata accessor for AtrialFibrillationDataTypeDetailViewController());
  swift_retain();
  sub_240B08EE8(v5, a3, 4, v6);
  id v10 = v7;
  id v8 = objc_msgSend(a1, sel_navigationController);
  if (v8)
  {
    uint64_t v9 = v8;
    objc_msgSend(v8, sel_pushViewController_animated_, v10, 1);
  }
}

uint64_t sub_240B02DE8(void *a1)
{
  uint64_t v2 = sub_240BB2D40();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B07B68();
  uint64_t v6 = swift_allocObject();
  long long v16 = xmmword_240BB97E0;
  *(_OWORD *)(v6 + 16) = xmmword_240BB97E0;
  sub_240B07BDC(0, (unint64_t *)&qword_268C9E840, MEMORY[0x263F8E0F8]);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = v16;
  *(void *)(v7 + 56) = &type metadata for ViewSandboxCollectionViewItem;
  *(void *)(v7 + 64) = sub_240B07C50();
  *(void *)(v6 + 32) = v7;
  uint64_t v17 = 0x3C53447961727241;
  unint64_t v18 = 0xE800000000000000;
  sub_240BB2D30();
  sub_240BB2D00();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  sub_240BB3EE0();
  swift_allocObject();
  sub_240BB3EF0();
  sub_240BB4140();
  swift_release();
  sub_240B07A04();
  sub_240B0A714((unint64_t *)&unk_268CA0B20, 255, (void (*)(uint64_t))sub_240B07A04);
  uint64_t v8 = sub_240BB4170();
  swift_release();
  sub_240BB4930();
  sub_240B07A64();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = v16;
  uint64_t v10 = sub_240B0A714(&qword_268CA0B38, 255, (void (*)(uint64_t))sub_240B07AD0);
  *(void *)(v9 + 32) = v8;
  *(void *)(v9 + 40) = v10;
  swift_retain();
  sub_240BB4950();
  id v11 = objc_allocWithZone((Class)sub_240BB5400());
  uint64_t v12 = (void *)sub_240BB53F0();
  id v13 = objc_msgSend(a1, sel_navigationController);
  if (v13)
  {
    uint64_t v14 = v13;
    objc_msgSend(v13, sel_pushViewController_animated_, v12, 1);
  }
  return swift_release();
}

uint64_t sub_240B0314C()
{
  return sub_240BB7220();
}

uint64_t sub_240B031C0()
{
  uint64_t v0 = sub_240BB4720();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB4700();
  uint64_t v4 = sub_240BB4710();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void sub_240B03294()
{
}

void sub_240B032C4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_240B032F8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HeartInternalSettingsViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240B03330()
{
  return type metadata accessor for HeartInternalSettingsViewController();
}

uint64_t sub_240B03338(void *a1)
{
  sub_240BB77C0();
  sub_240BB6E70();
  sub_240BB7C80();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  id v2 = a1;
  sub_240A3FD54(0, (unint64_t *)&qword_26AFD99E0);
  sub_240BB6E10();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return 0;
}

void sub_240B03468(uint64_t a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_240BB2B20();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v28 - v8;
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_240BB5990();
  sub_240A395FC(v10, (uint64_t)qword_26AFDEC70);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v33(v9, a1, v3);
  id v11 = sub_240BB5970();
  os_log_type_t v12 = sub_240BB71A0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v31 = v7;
    uint64_t v14 = v13;
    uint64_t v29 = swift_slowAlloc();
    aBlock[0] = v29;
    *(_DWORD *)uint64_t v14 = 136446722;
    uint64_t v15 = sub_240BB7C80();
    uint64_t v30 = ObjectType;
    uint64_t v35 = sub_240A38940(v15, v16, aBlock);
    uint64_t v32 = a1;
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2082;
    uint64_t v35 = sub_240A38940(0xD000000000000010, 0x8000000240BD0230, aBlock);
    sub_240BB75F0();
    *(_WORD *)(v14 + 22) = 2082;
    uint64_t v17 = sub_240BB2AC0();
    uint64_t v35 = sub_240A38940(v17, v18, aBlock);
    a1 = v32;
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    _os_log_impl(&dword_240A1B000, v11, v12, "[%{public}s.%{public}s] Attempting to navigate to: %{public}s", (uint8_t *)v14, 0x20u);
    uint64_t v19 = v29;
    swift_arrayDestroy();
    MEMORY[0x24560B930](v19, -1, -1);
    uint64_t v20 = v14;
    uint64_t v7 = v31;
    MEMORY[0x24560B930](v20, -1, -1);

    uint64_t v21 = v30;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);

    uint64_t v21 = ObjectType;
  }
  id v22 = objc_msgSend(self, sel_sharedApplication);
  uint64_t v23 = (void *)sub_240BB2AF0();
  v33(v7, a1, v3);
  unint64_t v24 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v25 = (v34 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v26 + v24, v7, v3);
  *(void *)(v26 + v25) = v21;
  aBlock[4] = (uint64_t)sub_240B0B740;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_240B03CD4;
  aBlock[3] = (uint64_t)&unk_26F5076C0;
  uint64_t v27 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v22, sel_openURL_withCompletionHandler_, v23, v27);
  _Block_release(v27);
}

uint64_t sub_240B03934(void *a1, int a2, void *a3, void *a4, void *aBlock, uint64_t a6, uint64_t a7, void (*a8)(id, uint64_t, uint64_t))
{
  uint64_t v13 = _Block_copy(aBlock);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  id v15 = a3;
  id v16 = a4;
  id v17 = a1;
  a8(v16, a7, v14);

  return swift_release();
}

void sub_240B039F4(char a1, uint64_t a2)
{
  uint64_t v4 = sub_240BB2B20();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_240BB5990();
    sub_240A395FC(v8, (uint64_t)qword_26AFDEC70);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
    uint64_t v9 = sub_240BB5970();
    os_log_type_t v10 = sub_240BB7180();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v18 = v12;
      *(_DWORD *)uint64_t v11 = 136446722;
      uint64_t v13 = sub_240BB7C80();
      uint64_t v17 = sub_240A38940(v13, v14, &v18);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2082;
      uint64_t v17 = sub_240A38940(0xD000000000000010, 0x8000000240BD0230, &v18);
      sub_240BB75F0();
      *(_WORD *)(v11 + 22) = 2082;
      uint64_t v15 = sub_240BB2AC0();
      uint64_t v17 = sub_240A38940(v15, v16, &v18);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      _os_log_impl(&dword_240A1B000, v9, v10, "[%{public}s.%{public}s] Failed to navigate to: %{public}s", (uint8_t *)v11, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v12, -1, -1);
      MEMORY[0x24560B930](v11, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
}

uint64_t sub_240B03CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

void sub_240B03D28(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v133 = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = sub_240BB4C70();
  v130 = *(void (***)(void, void))(v7 - 8);
  uint64_t v131 = (void (*)(char *, uint64_t))v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v129 = (char *)v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240BB2B20();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  v125 = (char *)v121 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v128 = (char *)v121 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v127 = (char *)v121 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v122 = (char *)v121 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v121 - v19;
  uint64_t v21 = (void *)sub_240BB2AD0();
  id v22 = (id)HKHRCardioFitnessEventOnboardingDeepLink();
  sub_240BB2B00();

  uint64_t v23 = (void *)sub_240BB2AD0();
  uint64_t v132 = v10;
  uint64_t v26 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v25 = v10 + 8;
  unint64_t v24 = v26;
  v26(v20, v9);
  char v27 = sub_240B2B4C0(v23, v21);
  swift_bridgeObjectRelease();
  if (v27)
  {
    swift_bridgeObjectRelease();
    sub_240B04F14(a1, a2);
LABEL_76:
    uint64_t v120 = sub_240BB4F60();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v120 - 8) + 56))(v133, 1, 1, v120);
    return;
  }
  v121[1] = v4;
  uint64_t v123 = a2;
  uint64_t v124 = a1;
  id v28 = (id)HKHRCardioFitnessDetailRoomBaseLink();
  sub_240BB2B00();

  uint64_t v29 = (void *)sub_240BB2AD0();
  v24(v20, v9);
  char v30 = sub_240B2B4C0(v29, v21);
  swift_bridgeObjectRelease();
  if (v30)
  {
    swift_bridgeObjectRelease();
    sub_240B05388(v124, v123);
    goto LABEL_76;
  }
  id v31 = (id)HKHRAFibBurdenOnboardingDeepLink();
  sub_240BB2B00();

  uint64_t v32 = (void *)sub_240BB2AD0();
  v24(v20, v9);
  char v33 = sub_240B2B4C0(v32, v21);
  swift_bridgeObjectRelease();
  if (v33)
  {
    swift_bridgeObjectRelease();
    sub_240B061D8(v124, v123);
    goto LABEL_76;
  }
  id v34 = (id)HKHRAFibBurdenDetailRoomBaseLink();
  sub_240BB2B00();

  uint64_t v35 = (void *)sub_240BB2AD0();
  v24(v20, v9);
  char v36 = sub_240B2B4C0(v35, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v36)
  {
    sub_240B06670(v124, v123);
    goto LABEL_76;
  }
  uint64_t v37 = v124;
  if (sub_240B06A38(v124, v123)) {
    goto LABEL_76;
  }
  id v38 = (void *)sub_240BB2AF0();
  id v39 = (id)_HKSampleTypeFromURL();

  if (!v39)
  {
    uint64_t v131 = v24;
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v71 = sub_240BB5990();
    sub_240A395FC(v71, (uint64_t)qword_26AFDEC70);
    uint64_t v72 = v125;
    (*(void (**)(char *, uint64_t, uint64_t))(v132 + 16))(v125, v37, v9);
    uint64_t v73 = sub_240BB5970();
    os_log_type_t v74 = sub_240BB7180();
    if (os_log_type_enabled(v73, v74))
    {
      uint64_t v75 = swift_slowAlloc();
      uint64_t v76 = swift_slowAlloc();
      uint64_t v135 = v76;
      *(_DWORD *)uint64_t v75 = 136446722;
      uint64_t v77 = sub_240BB7C80();
      uint64_t v134 = sub_240A38940(v77, v78, &v135);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v75 + 12) = 2082;
      uint64_t v134 = sub_240A38940(0xD00000000000001FLL, 0x8000000240BCFFC0, &v135);
      sub_240BB75F0();
      *(_WORD *)(v75 + 22) = 2082;
      uint64_t v79 = sub_240BB2AC0();
      uint64_t v134 = sub_240A38940(v79, v80, &v135);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      v131(v72, v9);
      _os_log_impl(&dword_240A1B000, v73, v74, "[%{public}s.%{public}s] Failed to resolve HKSampleType from URL: %{public}s", (uint8_t *)v75, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v76, -1, -1);
      MEMORY[0x24560B930](v75, -1, -1);
    }
    else
    {
      v131(v72, v9);
    }

    uint64_t v82 = v133;
    goto LABEL_36;
  }
  uint64_t v40 = (uint64_t)v129;
  sub_240BB47C0();
  uint64_t v41 = (char *)sub_240B40378(v39, v40);
  v130[1](v40, v131);
  if (!v41)
  {
    uint64_t v81 = sub_240BB4F60();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v133, 1, 1, v81);

    return;
  }
  v130 = (void (**)(void, void))v39;
  uint64_t v131 = v24;
  uint64_t v42 = (void *)sub_240BB4800();
  id v43 = objc_msgSend(v42, sel_presentedViewController);

  uint64_t v45 = v127;
  uint64_t v44 = v128;
  v125 = v41;
  v121[0] = v25;
  if (!v43)
  {
LABEL_61:
    id v95 = (void *)sub_240BB4800();
    id v96 = objc_msgSend(v95, sel_presentedViewController);

    if (v96)
    {
      if (qword_26AFD9A18 != -1) {
        swift_once();
      }
      uint64_t v97 = sub_240BB5990();
      sub_240A395FC(v97, (uint64_t)qword_26AFDEC70);
      (*(void (**)(char *, uint64_t, uint64_t))(v132 + 16))(v45, v37, v9);
      uint64_t v98 = sub_240BB5970();
      os_log_type_t v99 = sub_240BB71A0();
      if (os_log_type_enabled(v98, v99))
      {
        uint64_t v100 = v45;
        uint64_t v101 = swift_slowAlloc();
        uint64_t v102 = swift_slowAlloc();
        uint64_t v135 = v102;
        *(_DWORD *)uint64_t v101 = 136446722;
        uint64_t v103 = sub_240BB7C80();
        uint64_t v134 = sub_240A38940(v103, v104, &v135);
        sub_240BB75F0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v101 + 12) = 2082;
        uint64_t v134 = sub_240A38940(0xD00000000000001FLL, 0x8000000240BCFFC0, &v135);
        sub_240BB75F0();
        *(_WORD *)(v101 + 22) = 2082;
        uint64_t v105 = sub_240BB2AC0();
        uint64_t v134 = sub_240A38940(v105, v106, &v135);
        uint64_t v37 = v124;
        sub_240BB75F0();
        swift_bridgeObjectRelease();
        v131(v100, v9);
        _os_log_impl(&dword_240A1B000, v98, v99, "[%{public}s.%{public}s] Dismissing presentedViewController for url:: %{public}s", (uint8_t *)v101, 0x20u);
        swift_arrayDestroy();
        uint64_t v107 = v102;
        uint64_t v44 = v128;
        MEMORY[0x24560B930](v107, -1, -1);
        MEMORY[0x24560B930](v101, -1, -1);
      }
      else
      {
        v131(v45, v9);
      }

      objc_msgSend(v96, sel_dismissViewControllerAnimated_completion_, 1, 0);
    }
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v108 = sub_240BB5990();
    sub_240A395FC(v108, (uint64_t)qword_26AFDEC70);
    (*(void (**)(char *, uint64_t, uint64_t))(v132 + 16))(v44, v37, v9);
    uint64_t v109 = sub_240BB5970();
    os_log_type_t v110 = sub_240BB71A0();
    if (os_log_type_enabled(v109, v110))
    {
      uint64_t v111 = swift_slowAlloc();
      uint64_t v112 = swift_slowAlloc();
      uint64_t v135 = v112;
      *(_DWORD *)uint64_t v111 = 136446722;
      uint64_t v113 = sub_240BB7C80();
      uint64_t v134 = sub_240A38940(v113, v114, &v135);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v111 + 12) = 2082;
      uint64_t v134 = sub_240A38940(0xD00000000000001FLL, 0x8000000240BCFFC0, &v135);
      sub_240BB75F0();
      *(_WORD *)(v111 + 22) = 2082;
      uint64_t v115 = sub_240BB2AC0();
      uint64_t v134 = sub_240A38940(v115, v116, &v135);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      v131(v44, v9);
      _os_log_impl(&dword_240A1B000, v109, v110, "[%{public}s.%{public}s] Opening URL: %{public}s", (uint8_t *)v111, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v112, -1, -1);
      MEMORY[0x24560B930](v111, -1, -1);
    }
    else
    {
      v131(v44, v9);
    }

    uint64_t v117 = v125;
    uint64_t v118 = (void *)sub_240BB4800();
    id v119 = objc_msgSend(v118, sel_navigationController);

    if (v119)
    {
      objc_msgSend(v119, sel_pushViewController_animated_, v117, 0);
    }
    goto LABEL_76;
  }
  self;
  uint64_t v46 = swift_dynamicCastObjCClass();
  if (!v46)
  {

    goto LABEL_61;
  }
  uint64_t v47 = (void *)v46;
  uint64_t v129 = (char *)v43;
  id v48 = objc_msgSend(v47, sel_childViewControllers);
  sub_240A34DC4(0, (unint64_t *)&unk_268CA0B90);
  unint64_t v49 = sub_240BB6F10();

  if (v49 >> 62)
  {
    sub_240BB4850();
    uint64_t v50 = sub_240BB7900();
    if (v50) {
      goto LABEL_16;
    }
    goto LABEL_60;
  }
  uint64_t v50 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_240BB4850();
  if (!v50)
  {
LABEL_60:
    id v94 = v129;

    swift_bridgeObjectRelease_n();
    uint64_t v37 = v124;
    uint64_t v45 = v127;
    uint64_t v44 = v128;
    goto LABEL_61;
  }
LABEL_16:
  uint64_t v51 = 4;
  while (1)
  {
    if ((v49 & 0xC000000000000001) != 0) {
      id v52 = (id)MEMORY[0x24560AAA0](v51 - 4, v49);
    }
    else {
      id v52 = *(id *)(v49 + 8 * v51);
    }
    id v53 = v52;
    uint64_t v54 = v51 - 3;
    if (__OFADD__(v51 - 4, 1))
    {
      __break(1u);
      goto LABEL_58;
    }
    self;
    uint64_t v55 = (void *)swift_dynamicCastObjCClass();
    if (v55) {
      break;
    }

LABEL_18:
    ++v51;
    if (v54 == v50) {
      goto LABEL_60;
    }
  }
  unsigned __int8 v56 = objc_msgSend(v55, sel_isOnboarding);

  if ((v56 & 1) == 0) {
    goto LABEL_18;
  }
  uint64_t v57 = (void (**)(void, void))v129;

  swift_bridgeObjectRelease_n();
  uint64_t v58 = v122;
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v59 = sub_240BB5990();
  sub_240A395FC(v59, (uint64_t)qword_26AFDEC70);
  (*(void (**)(char *, uint64_t, uint64_t))(v132 + 16))(v58, v124, v9);
  uint64_t v60 = sub_240BB5970();
  os_log_type_t v61 = sub_240BB71A0();
  BOOL v62 = os_log_type_enabled(v60, v61);
  unint64_t v63 = v125;
  if (v62)
  {
    uint64_t v64 = swift_slowAlloc();
    uint64_t v65 = swift_slowAlloc();
    uint64_t v135 = v65;
    *(_DWORD *)uint64_t v64 = 136446722;
    uint64_t v66 = sub_240BB7C80();
    uint64_t v134 = sub_240A38940(v66, v67, &v135);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v64 + 12) = 2082;
    uint64_t v134 = sub_240A38940(0xD00000000000001FLL, 0x8000000240BCFFC0, &v135);
    sub_240BB75F0();
    *(_WORD *)(v64 + 22) = 2082;
    uint64_t v68 = sub_240BB2AC0();
    uint64_t v134 = sub_240A38940(v68, v69, &v135);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    v131(v58, v9);
    _os_log_impl(&dword_240A1B000, v60, v61, "%{public}s.%{public}s ECG/IRN on-boarding is showing for url %{public}s. We will not disrupt this flow.", (uint8_t *)v64, 0x20u);
    swift_arrayDestroy();
    uint64_t v70 = v65;
    uint64_t v57 = (void (**)(void, void))v129;
    MEMORY[0x24560B930](v70, -1, -1);
    MEMORY[0x24560B930](v64, -1, -1);
  }
  else
  {
    v131(v58, v9);
  }

  self;
  id v84 = v130;
  if (!swift_dynamicCastObjCClass())
  {
    self;
    if (swift_dynamicCastObjCClass())
    {
      sub_240A34DC4(0, (unint64_t *)&qword_26AFD9940);
      uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      id v88 = v84;
      id v89 = objc_msgSend(ObjCClassFromMetadata, sel_atrialFibrillationEventType);
      if (v89)
      {
        uint64_t v90 = v89;
        unint64_t v49 = (unint64_t)v88;
        char v91 = sub_240BB7500();

        if (v91)
        {
          if ((sub_240B07270() & 1) == 0)
          {
            v130 = v57;
            goto LABEL_54;
          }
          uint64_t v92 = (void *)sub_240BB4800();
          id v93 = objc_msgSend(v92, sel_navigationController);

          if (v93)
          {
            unint64_t v63 = v125;
            objc_msgSend(v93, sel_pushViewController_animated_, v125, 0);

            v130 = (void (**)(void, void))v129;
LABEL_54:
            uint64_t v57 = (void (**)(void, void))v49;
LABEL_55:

            unint64_t v63 = (void *)v49;
            goto LABEL_56;
          }
LABEL_58:
          v130 = (void (**)(void, void))v129;
          uint64_t v57 = (void (**)(void, void))v49;
          unint64_t v63 = v125;
          goto LABEL_55;
        }
      }
      else
      {

        unint64_t v63 = v57;
        uint64_t v57 = (void (**)(void, void))v88;
      }
      uint64_t v82 = v133;

      id v84 = v57;
      uint64_t v57 = (void (**)(void, void))v88;
    }
    else
    {
      id v88 = v63;
      uint64_t v82 = v133;
    }

    goto LABEL_36;
  }
  if (sub_240B07270())
  {
    uint64_t v85 = (void *)sub_240BB4800();
    id v86 = objc_msgSend(v85, sel_navigationController);

    if (v86)
    {
      unint64_t v49 = (unint64_t)v63;
      objc_msgSend(v86, sel_pushViewController_animated_, v63, 0);
      unint64_t v63 = v86;
      goto LABEL_55;
    }
  }
LABEL_56:
  uint64_t v82 = v133;

LABEL_36:
  uint64_t v83 = sub_240BB4F60();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v82, 1, 1, v83);
}

void sub_240B04F14(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_240BB2B20();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240BB4C70();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
  uint64_t v11 = (char *)MEMORY[0x24560A470]((id)*MEMORY[0x263F09F20]);
  uint64_t v31 = a2;
  sub_240BB47C0();
  id v12 = sub_240B40378(v11, (uint64_t)v10);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (v12)
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_240BB5990();
    sub_240A395FC(v13, (uint64_t)qword_26AFDEC70);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v30, v3);
    uint64_t v14 = sub_240BB5970();
    os_log_type_t v15 = sub_240BB71A0();
    int v16 = v15;
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v33 = v30;
      *(_DWORD *)uint64_t v17 = 136446722;
      uint64_t v18 = sub_240BB7C80();
      LODWORD(ObjectType) = v16;
      uint64_t v32 = sub_240A38940(v18, v19, &v33);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2082;
      uint64_t v32 = sub_240A38940(0xD000000000000029, 0x8000000240BCFFE0, &v33);
      sub_240BB75F0();
      *(_WORD *)(v17 + 22) = 2082;
      uint64_t v20 = sub_240BB2AC0();
      uint64_t v32 = sub_240A38940(v20, v21, &v33);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      _os_log_impl(&dword_240A1B000, v14, (os_log_type_t)ObjectType, "[%{public}s.%{public}s]: Opening URL: %{public}s", (uint8_t *)v17, 0x20u);
      uint64_t v22 = v30;
      swift_arrayDestroy();
      MEMORY[0x24560B930](v22, -1, -1);
      MEMORY[0x24560B930](v17, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }

    uint64_t v23 = (void *)sub_240BB4800();
    id v24 = objc_msgSend(v23, sel_navigationController);

    if (v24)
    {
      objc_msgSend(v24, sel_pushViewController_animated_, v12, 0);
    }
    uint64_t v25 = (void *)sub_240BB47E0();
    id v26 = objc_allocWithZone((Class)type metadata accessor for CardioFitnessOnboardingViewController());
    char v27 = sub_240B2BF68(v25, 1);
    objc_msgSend(v12, sel_presentViewController_animated_completion_, v27, 0, 0);

    uint64_t v11 = v27;
  }
}

void sub_240B05388(uint64_t a1, uint64_t a2)
{
  uint64_t v95 = a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v93 = sub_240BB4C70();
  uint64_t v97 = *(void *)(v93 - 8);
  MEMORY[0x270FA5388](v93);
  id v96 = (char *)&v85 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_240BB2B20();
  uint64_t v99 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v90 = (char *)&v85 - v9;
  MEMORY[0x270FA5388](v8);
  char v91 = (char *)&v85 - v10;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240B0A6B0(0, (unint64_t *)&unk_268CA0BA0, MEMORY[0x263F06338], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v85 - v13;
  uint64_t v15 = sub_240BB2830();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  id v89 = (char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B0A6B0(0, &qword_268CA0FC0, MEMORY[0x263F06370], v11);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v85 - v19;
  uint64_t v21 = sub_240BB2890();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  id v24 = (char *)&v85 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = a1;
  sub_240BB2860();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    sub_240B095FC((uint64_t)v20, &qword_268CA0FC0, MEMORY[0x263F06370]);
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_240BB5990();
    sub_240A395FC(v25, (uint64_t)qword_26AFDEC70);
    uint64_t v26 = v4;
    (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v7, v98, v4);
    char v27 = sub_240BB5970();
    os_log_type_t v28 = sub_240BB7180();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v101 = (void *)v30;
      *(_DWORD *)uint64_t v29 = 136446722;
      uint64_t v31 = sub_240BB7C80();
      uint64_t v100 = sub_240A38940(v31, v32, (uint64_t *)&v101);
      uint64_t v33 = v99;
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2082;
      uint64_t v100 = sub_240A38940(0xD000000000000029, 0x8000000240BD0010, (uint64_t *)&v101);
      sub_240BB75F0();
      *(_WORD *)(v29 + 22) = 2082;
      uint64_t v34 = sub_240BB2AC0();
      uint64_t v100 = sub_240A38940(v34, v35, (uint64_t *)&v101);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v26);
      _os_log_impl(&dword_240A1B000, v27, v28, "[%{public}s.%{public}s]: Failed to initialize url components for url %{public}s", (uint8_t *)v29, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v30, -1, -1);
      MEMORY[0x24560B930](v29, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v99 + 8))(v7, v26);
    }

    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v20, v21);
  uint64_t v36 = sub_240BB2840();
  p_cache = (void **)(&OBJC_METACLASS____TtC5Heart31HeartPromotionGeneratorPipeline + 16);
  uint64_t v87 = v22;
  uint64_t v88 = v21;
  id v86 = v24;
  if (!v36)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
    uint64_t v38 = v4;
LABEL_14:
    sub_240B095FC((uint64_t)v14, (unint64_t *)&unk_268CA0BA0, MEMORY[0x263F06338]);
LABEL_23:
    uint64_t v54 = v91;
    if (p_cache[323] != (void *)-1) {
      swift_once();
    }
    uint64_t v55 = sub_240BB5990();
    sub_240A395FC(v55, (uint64_t)qword_26AFDEC70);
    (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v54, v98, v38);
    unsigned __int8 v56 = sub_240BB5970();
    os_log_type_t v57 = sub_240BB71A0();
    BOOL v58 = os_log_type_enabled(v56, v57);
    uint64_t v49 = v97;
    if (v58)
    {
      uint64_t v59 = swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      uint64_t v101 = (void *)v60;
      *(_DWORD *)uint64_t v59 = 136446722;
      uint64_t v61 = sub_240BB7C80();
      uint64_t v100 = sub_240A38940(v61, v62, (uint64_t *)&v101);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v59 + 12) = 2082;
      uint64_t v100 = sub_240A38940(0xD000000000000029, 0x8000000240BD0010, (uint64_t *)&v101);
      sub_240BB75F0();
      *(_WORD *)(v59 + 22) = 2082;
      uint64_t v63 = sub_240BB2AC0();
      uint64_t v100 = sub_240A38940(v63, v64, (uint64_t *)&v101);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v54, v38);
      _os_log_impl(&dword_240A1B000, v56, v57, "[%{public}s.%{public}s]: Unable to extract chart context for url %{public}s", (uint8_t *)v59, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v60, -1, -1);
      MEMORY[0x24560B930](v59, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v99 + 8))(v54, v38);
    }

    id v84 = 0;
    goto LABEL_29;
  }
  uint64_t v38 = v4;
  if (*(void *)(v36 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v14, v36 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)), v15);
    uint64_t v39 = 0;
  }
  else
  {
    uint64_t v39 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, v39, 1, v15);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1) {
    goto LABEL_14;
  }
  uint64_t v85 = v4;
  uint64_t v40 = v89;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v89, v14, v15);
  uint64_t v41 = sub_240BB2810();
  uint64_t v43 = v42;
  id v44 = (id)HKHRCardioFitnessChartContextQueryName();
  uint64_t v45 = sub_240BB6DE0();
  uint64_t v47 = v46;

  if (v41 == v45 && v43 == v47)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v38 = v85;
  }
  else
  {
    char v48 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v38 = v85;
    if ((v48 & 1) == 0)
    {
LABEL_22:
      (*(void (**)(char *, uint64_t))(v16 + 8))(v40, v15);
      p_cache = &OBJC_METACLASS____TtC5Heart31HeartPromotionGeneratorPipeline.cache;
      goto LABEL_23;
    }
  }
  sub_240BB2820();
  uint64_t v49 = v97;
  if (!v50) {
    goto LABEL_22;
  }
  uint64_t v51 = sub_240BB2B30();
  unint64_t v53 = v52;
  swift_bridgeObjectRelease();
  if (v53 >> 60 == 15) {
    goto LABEL_22;
  }
  sub_240BB2740();
  swift_allocObject();
  sub_240BB2730();
  sub_240BB3E00();
  sub_240B0A714((unint64_t *)&unk_268CA0BB0, 255, MEMORY[0x263F43B68]);
  sub_240BB2720();
  swift_release();
  sub_240A8B070(v51, v53);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v40, v15);
  id v84 = v101;
LABEL_29:
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
  uint64_t v65 = (void *)MEMORY[0x24560A470]((id)*MEMORY[0x263F09F20]);
  uint64_t v66 = (uint64_t)v96;
  sub_240BB47C0();
  id v67 = v84;
  sub_240BB4C00();
  id v68 = sub_240B40378(v65, v66);
  if (v68)
  {
    unint64_t v69 = v68;
    id v92 = v67;
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v70 = sub_240BB5990();
    sub_240A395FC(v70, (uint64_t)qword_26AFDEC70);
    uint64_t v71 = v90;
    (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v90, v98, v38);
    uint64_t v72 = sub_240BB5970();
    os_log_type_t v73 = sub_240BB71A0();
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v74 = swift_slowAlloc();
      uint64_t v75 = swift_slowAlloc();
      uint64_t v101 = (void *)v75;
      *(_DWORD *)uint64_t v74 = 136446722;
      uint64_t v76 = sub_240BB7C80();
      uint64_t v85 = v38;
      uint64_t v100 = sub_240A38940(v76, v77, (uint64_t *)&v101);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v74 + 12) = 2082;
      uint64_t v100 = sub_240A38940(0xD000000000000029, 0x8000000240BD0010, (uint64_t *)&v101);
      sub_240BB75F0();
      *(_WORD *)(v74 + 22) = 2082;
      uint64_t v78 = sub_240BB2AC0();
      uint64_t v100 = sub_240A38940(v78, v79, (uint64_t *)&v101);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v71, v85);
      _os_log_impl(&dword_240A1B000, v72, v73, "[%{public}s.%{public}s]: Opening detail room URL: %{public}s", (uint8_t *)v74, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v75, -1, -1);
      uint64_t v80 = v74;
      uint64_t v66 = (uint64_t)v96;
      MEMORY[0x24560B930](v80, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v99 + 8))(v71, v38);
    }

    uint64_t v81 = v93;
    uint64_t v82 = (void *)sub_240BB4800();
    id v83 = objc_msgSend(v82, sel_navigationController);

    objc_msgSend(v83, sel_pushViewController_animated_, v69, 0);
    (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v66, v81);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v66, v93);
  }
  (*(void (**)(char *, uint64_t))(v87 + 8))(v86, v88);
}

void sub_240B061D8(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v37 = type metadata accessor for AFibBurdenOnboardingPresentationContext();
  MEMORY[0x270FA5388](v37);
  uint64_t v39 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_240BB2B20();
  uint64_t v4 = *(void *)(v33 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v33);
  unint64_t v32 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3FB28();
  uint64_t v7 = v6;
  uint64_t v34 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_240BB4C70();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
  uint64_t v14 = MEMORY[0x24560A470]((id)*MEMORY[0x263F09BF8]);
  uint64_t v38 = a2;
  uint64_t v15 = (char *)v14;
  sub_240BB47C0();
  uint64_t v40 = v15;
  id v16 = sub_240B40378(v15, (uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (v16)
  {
    id v31 = v16;
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_240A395FC(v7, (uint64_t)qword_26AFDEB68);
    uint64_t v18 = v34;
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v9, v17, v7);
    uint64_t v20 = v32;
    uint64_t v19 = v33;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v32, v35, v33);
    unint64_t v21 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v22 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v22 + v21, v20, v19);
    *(void *)(v22 + ((v5 + v21 + 7) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
    v42[0] = 0;
    sub_240BB5700();
    swift_release();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v7);
    uint64_t v23 = (void *)sub_240BB4800();
    id v24 = objc_msgSend(v23, sel_navigationController);

    uint64_t v25 = v31;
    if (v24)
    {
      objc_msgSend(v24, sel_pushViewController_animated_, v31, 0);
    }
    uint64_t v26 = (void *)sub_240BB47E0();
    sub_240BB47D0();
    sub_240BB47F0();
    uint64_t v27 = (uint64_t)v39;
    swift_storeEnumTagMultiPayload();
    id v28 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenOnboardingController());
    uint64_t v29 = sub_240B4A0D8(v26, (uint64_t)v42, (uint64_t)v41, v27, 0, 2);
    objc_msgSend(v25, sel_presentViewController_animated_completion_, v29, 0, 0);

    uint64_t v40 = v29;
  }
}

void sub_240B06670(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v29 = sub_240BB2B20();
  uint64_t v3 = *(void *)(v29 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v29);
  uint64_t v27 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3FB28();
  uint64_t v6 = v5;
  uint64_t v30 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v28 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_240BB4C70();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
  uint64_t v12 = (void *)MEMORY[0x24560A470]((id)*MEMORY[0x263F09BF8]);
  uint64_t v32 = a2;
  sub_240BB47C0();
  id v13 = sub_240B40378(v12, (uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v13)
  {
    id v25 = v13;
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_240A395FC(v6, (uint64_t)qword_26AFDEB68);
    uint64_t v15 = v30;
    id v16 = v28;
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v28, v14, v6);
    uint64_t v17 = v27;
    uint64_t v18 = v29;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v27, v26, v29);
    unint64_t v19 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v20 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v20 + v19, v17, v18);
    *(void *)(v20 + ((v4 + v19 + 7) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
    uint64_t v33 = 0;
    sub_240BB5700();
    swift_release();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v16, v6);
    unint64_t v21 = (void *)sub_240BB4800();
    id v22 = objc_msgSend(v21, sel_navigationController);

    uint64_t v23 = v25;
    if (v22)
    {
      objc_msgSend(v22, sel_pushViewController_animated_, v25, 0);
    }
    uint64_t v12 = v23;
  }
}

uint64_t sub_240B06A38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_240BB4C70();
  uint64_t v57 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240BB47A0();
  uint64_t v56 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  BOOL v58 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B0A6B0(0, &qword_268CA0FC0, MEMORY[0x263F06370], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v50 - v9;
  uint64_t v11 = sub_240BB2890();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB2860();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_240B095FC((uint64_t)v10, &qword_268CA0FC0, MEMORY[0x263F06370]);
    return 0;
  }
  uint64_t v55 = v6;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  sub_240BB2880();
  uint64_t v15 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(v15, sel_pathComponents);

  uint64_t v17 = (void *)sub_240BB6F10();
  if (v17[2] != 2
    || (v17[4] == 47 ? (BOOL v18 = v17[5] == 0xE100000000000000) : (BOOL v18 = 0), !v18 && (sub_240BB7AE0() & 1) == 0))
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v19 = v17[6];
  uint64_t v20 = v17[7];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  unint64_t v21 = sub_240B0101C();
  if (!v21[2] || (unint64_t v22 = sub_240AB9E08(v19, v20), (v23 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return 0;
  }
  int v24 = *(unsigned __int8 *)(v21[7] + v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v53 = a2;
  id v25 = (void *)sub_240BB4800();
  id v26 = objc_msgSend(v25, sel_resolvedHealthStore);

  if (!v26) {
    id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
  }
  sub_240B665A0(v26, v24, v59);
  sub_240A3466C(v59, v60);
  id v52 = (id)sub_240BB3530();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v59);
  id v54 = v26;
  LODWORD(v51) = v24;
  sub_240B665A0(v26, v24, v59);
  sub_240A3466C(v59, v60);
  sub_240BB3520();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v59);
  id v27 = objc_allocWithZone((Class)sub_240BB3510());
  id v28 = (void *)sub_240BB3500();
  id v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46848]), sel_initWithRootViewController_, v28);
  uint64_t v30 = (void *)sub_240BB4800();
  id v31 = objc_msgSend(v30, sel_navigationController);

  if (v31)
  {
    id v32 = sub_240B66820((char)v51);
    uint64_t v33 = v54;
    if (!v32)
    {
LABEL_36:
      objc_msgSend(v31, sel_presentViewController_animated_completion_, v29, 0, 0, v50);
      goto LABEL_37;
    }
    uint64_t v51 = v28;
    id v52 = v31;
    id v34 = v32;
    sub_240BB4790();
    sub_240BB47C0();
    uint64_t v35 = v34;
    uint64_t v36 = sub_240BB4780();
    id v50 = v29;
    uint64_t v39 = (void *)v36;
    (*(void (**)(char *, uint64_t))(v57 + 8))(v5, v3);
    id v40 = objc_msgSend(v52, sel_viewControllers);
    sub_240A34DC4(0, (unint64_t *)&unk_268CA0B90);
    unint64_t v41 = sub_240BB6F10();

    if (v41 >> 62)
    {
      sub_240BB4850();
      id v42 = (id)sub_240BB7900();
      swift_bridgeObjectRelease();
      uint64_t v43 = v39;
      if (v42)
      {
LABEL_22:
        if ((v41 & 0xC000000000000001) != 0)
        {
          id v44 = (id)MEMORY[0x24560AAA0](0, v41);
        }
        else
        {
          if (!*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_40;
          }
          id v44 = *(id *)(v41 + 32);
        }
        uint64_t v45 = v44;
        swift_bridgeObjectRelease();
        v59[0] = MEMORY[0x263F8EE78];
        if (v45)
        {
          id v46 = v43;
          id v42 = v45;
          MEMORY[0x24560A190]();
          if (*(void *)((v59[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v59[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_240BB6F60();
          }
          sub_240BB6F70();
          sub_240BB6F30();
LABEL_32:
          if (!v43)
          {
LABEL_35:

            uint64_t v49 = (void *)sub_240BB6EF0();
            swift_bridgeObjectRelease();
            id v31 = v52;
            objc_msgSend(v52, sel_setViewControllers_animated_, v49, 0);

            (*(void (**)(char *, uint64_t))(v56 + 8))(v58, v55);
            uint64_t v33 = v54;
            id v29 = v50;
            id v28 = v51;
            goto LABEL_36;
          }
          id v48 = v43;
          MEMORY[0x24560A190]();
          if (*(void *)((v59[0] & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v59[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          {
LABEL_34:
            sub_240BB6F70();
            sub_240BB6F30();
            uint64_t v43 = v39;
            goto LABEL_35;
          }
LABEL_40:
          sub_240BB6F60();
          goto LABEL_34;
        }
LABEL_31:
        id v47 = v43;
        id v42 = 0;
        goto LABEL_32;
      }
    }
    else
    {
      id v42 = *(id *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v43 = v39;
      if (v42) {
        goto LABEL_22;
      }
    }
    swift_bridgeObjectRelease();
    v59[0] = MEMORY[0x263F8EE78];
    goto LABEL_31;
  }
  uint64_t v38 = (void *)sub_240BB4800();
  objc_msgSend(v38, sel_presentViewController_animated_completion_, v29, 0, 0);
  id v31 = v29;
  id v29 = v38;
  uint64_t v33 = v54;
LABEL_37:

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return 1;
}

uint64_t sub_240B07270()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (v1)
  {
    id v2 = (void *)v1;
    id v3 = v0;
    id v4 = objc_msgSend(v2, sel_childViewControllers);
    sub_240A34DC4(0, (unint64_t *)&unk_268CA0B90);
    unint64_t v5 = sub_240BB6F10();

    if (v5 >> 62) {
      goto LABEL_16;
    }
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    sub_240BB4850();
    for (; v6; uint64_t v6 = sub_240BB7900())
    {
      uint64_t v7 = 4;
      while (1)
      {
        id v8 = (v5 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24560AAA0](v7 - 4, v5) : *(id *)(v5 + 8 * v7);
        uint64_t v9 = v8;
        uint64_t v10 = v7 - 3;
        if (__OFADD__(v7 - 4, 1)) {
          break;
        }
        self;
        if (swift_dynamicCastObjCClass())
        {

          swift_bridgeObjectRelease_n();
          id v13 = v9;
          id v14 = objc_msgSend(v13, sel_description);
          sub_240BB6DE0();

          sub_240A46960();
          char v11 = sub_240BB7630();
          swift_bridgeObjectRelease();

          return v11 & 1;
        }

        ++v7;
        if (v10 == v6) {
          goto LABEL_11;
        }
      }
      __break(1u);
LABEL_16:
      sub_240BB4850();
    }
LABEL_11:

    swift_bridgeObjectRelease_n();
  }
  char v11 = 0;
  return v11 & 1;
}

uint64_t sub_240B07470()
{
  return 0;
}

uint64_t sub_240B0756C@<X0>(id a1@<X1>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(a1, sel_presentedViewController);
  if (!v3) {
    goto LABEL_9;
  }
  id v4 = v3;
  unint64_t v5 = (void *)sub_240BB2AF0();
  id v6 = (id)_HKSampleTypeFromURL();

  if (!v6)
  {
    id v6 = v4;
LABEL_8:

    goto LABEL_9;
  }
  self;
  if (!swift_dynamicCastObjCClass())
  {

    goto LABEL_8;
  }
  char v7 = sub_240B07270();

  if (v7)
  {
    id v8 = (unsigned int *)MEMORY[0x263F43D60];
    goto LABEL_10;
  }
LABEL_9:
  id v8 = (unsigned int *)MEMORY[0x263F43D58];
LABEL_10:
  uint64_t v9 = *v8;
  uint64_t v10 = sub_240BB3FE0();
  char v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(a2, v9, v10);
}

uint64_t sub_240B07698@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  return sub_240B0756C(a1, a2);
}

uint64_t sub_240B076B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F43D58];
  uint64_t v3 = sub_240BB3FE0();
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_240B07724(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();

  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_240BB5990();
  sub_240A395FC(v3, (uint64_t)qword_26AFDEC70);
  id v4 = a1;
  unint64_t v5 = sub_240BB5970();
  os_log_type_t v6 = sub_240BB7180();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v17 = v8;
    uint64_t v18 = ObjectType;
    *(_DWORD *)uint64_t v7 = 136446466;
    swift_getMetatypeMetadata();
    uint64_t v9 = sub_240BB6E10();
    uint64_t v18 = sub_240A38940(v9, v10, &v17);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2082;
    id v11 = v4;
    id v12 = objc_msgSend(v11, sel_description, v17);
    uint64_t v13 = sub_240BB6DE0();
    unint64_t v15 = v14;

    uint64_t v18 = sub_240A38940(v13, v15, &v17);
    sub_240BB75F0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v5, v6, "[%{public}s] Unexpected type passed to Heart plugin for data list data provider: %{public}s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v8, -1, -1);
    MEMORY[0x24560B930](v7, -1, -1);
  }
  else
  {
  }
  return 0;
}

uint64_t sub_240B079BC(uint64_t a1, uint64_t a2)
{
  return sub_240B0A714(&qword_26AFD8F50, a2, (void (*)(uint64_t))type metadata accessor for HeartAppDelegate);
}

void sub_240B07A04()
{
  if (!qword_268CA0B18)
  {
    sub_240BB3EE0();
    unint64_t v0 = sub_240BB3F10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA0B18);
    }
  }
}

void sub_240B07A64()
{
  if (!qword_268C9E880)
  {
    sub_240A3FD54(255, &qword_268CA0B30);
    unint64_t v0 = sub_240BB7AB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9E880);
    }
  }
}

void sub_240B07AD0()
{
  if (!qword_268CA0B40)
  {
    sub_240B07A04();
    sub_240B0A714((unint64_t *)&unk_268CA0B20, 255, (void (*)(uint64_t))sub_240B07A04);
    unint64_t v0 = sub_240BB4320();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA0B40);
    }
  }
}

void sub_240B07B68()
{
  if (!qword_268CA0B60)
  {
    sub_240B07BDC(255, &qword_268CA0668, MEMORY[0x263F8D488]);
    unint64_t v0 = sub_240BB7AB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA0B60);
    }
  }
}

void sub_240B07BDC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_240A3FD54(255, (unint64_t *)&qword_268CA0B00);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_240B07C50()
{
  unint64_t result = qword_268CA0B70;
  if (!qword_268CA0B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0B70);
  }
  return result;
}

uint64_t sub_240B07CA4()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_240B07CE4(void *a1)
{
  sub_240B02D0C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_240B07CEC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_240B0A75C(0, (unint64_t *)&qword_268CA21F0);
  char v6 = a2;
  uint64_t v7 = sub_240BB7940();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v35 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v34 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v14 << 6);
      }
      else
      {
        int64_t v19 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v19 >= v34) {
          goto LABEL_34;
        }
        unint64_t v20 = v35[v19];
        ++v14;
        if (!v20)
        {
          int64_t v14 = v19 + 1;
          if (v19 + 1 >= v34) {
            goto LABEL_34;
          }
          unint64_t v20 = v35[v14];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v34)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
                if (v33 >= 64) {
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v35 = -1 << v33;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v20 = v35[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v14 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_41;
                }
                if (v14 >= v34) {
                  goto LABEL_34;
                }
                unint64_t v20 = v35[v14];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v14 = v21;
          }
        }
LABEL_21:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v14 << 6);
      }
      unint64_t v22 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
      uint64_t v24 = *v22;
      uint64_t v23 = v22[1];
      id v25 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v18);
      if (v6)
      {
        sub_240A7B714(v25, v36);
      }
      else
      {
        sub_240A38A64((uint64_t)v25, (uint64_t)v36);
        sub_240BB4850();
      }
      sub_240BB7BC0();
      sub_240BB6E50();
      uint64_t result = sub_240BB7C00();
      uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v15 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      id v16 = (void *)(*(void *)(v8 + 48) + 16 * v15);
      *id v16 = v24;
      v16[1] = v23;
      uint64_t result = (uint64_t)sub_240A7B714(v36, (_OWORD *)(*(void *)(v8 + 56) + 32 * v15));
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v8;
  return result;
}

uint64_t sub_240B08000(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_240ABAA68();
  int v43 = a2;
  uint64_t v9 = sub_240BB7940();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  unint64_t v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    uint64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v24 = v41[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v24 = v41[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    uint64_t v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_240A925F4(v30, (uint64_t)v7);
    }
    else
    {
      sub_240A92658(v30, (uint64_t)v7);
      sub_240BB4850();
    }
    sub_240BB7BC0();
    sub_240BB6E50();
    uint64_t result = sub_240BB7C00();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    int64_t v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    *int64_t v19 = v28;
    v19[1] = v27;
    uint64_t result = sub_240A925F4((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  uint64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_240B083A0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_240B0A75C(0, &qword_268C9FEF8);
  char v37 = a2;
  uint64_t v6 = sub_240BB7940();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    char v32 = *(unsigned char *)(*(void *)(v5 + 56) + v20);
    if ((v37 & 1) == 0) {
      sub_240BB4850();
    }
    sub_240BB7BC0();
    sub_240BB6E50();
    uint64_t result = sub_240BB7C00();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(unsigned char *)(*(void *)(v7 + 56) + v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  int64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void *sub_240B086B8()
{
  uint64_t v1 = v0;
  sub_240B0A75C(0, (unint64_t *)&qword_268CA21F0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_240BB7930();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  char v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_240A38A64(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = v19;
    v21[1] = v18;
    sub_240A7B714(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    uint64_t result = (void *)sub_240BB4850();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_240B088B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
  uint64_t v30 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240ABAA68();
  uint64_t v5 = *v0;
  uint64_t v6 = sub_240BB7930();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v28 = v1;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v29 = v5 + 64;
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v29 + 8 * v24);
    ++v11;
    if (!v25)
    {
      int64_t v11 = v24 + 1;
      if (v24 + 1 >= v15) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v29 + 8 * v11);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v25 - 1) & v25;
    unint64_t v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    unint64_t v22 = *(void *)(v30 + 72) * v17;
    sub_240A92658(*(void *)(v5 + 56) + v22, (uint64_t)v4);
    unint64_t v23 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v23 = v20;
    v23[1] = v21;
    sub_240A925F4((uint64_t)v4, *(void *)(v7 + 56) + v22);
    uint64_t result = (void *)sub_240BB4850();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v15)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v28;
    goto LABEL_28;
  }
  unint64_t v25 = *(void *)(v29 + 8 * v26);
  if (v25)
  {
    int64_t v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v29 + 8 * v11);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_240B08B14()
{
  uint64_t v1 = v0;
  sub_240B0A75C(0, &qword_268C9FEF8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_240BB7930();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    unint64_t v16 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    LOBYTE(v16) = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + 16 * v15);
    *uint64_t v19 = v18;
    v19[1] = v17;
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = (_BYTE)v16;
    uint64_t result = (void *)sub_240BB4850();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t (*sub_240B08CCC(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_240B08DE8(v6, a2, a3);
  return sub_240B08D34;
}

uint64_t (*sub_240B08D38(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_240B08E68(v6, a2, a3);
  return sub_240B08D34;
}

void sub_240B08DA0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_240B08DE8(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x24560AAA0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return j__s5Heart32FeatureStatusFeedItemRequirementC14PortionToCheckOwxx;
  }
  __break(1u);
  return result;
}

void (*sub_240B08E68(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x24560AAA0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return destroy for FeatureStatusFeedItemRequirement.PortionToCheck;
  }
  __break(1u);
  return result;
}

void sub_240B08EE8(void *a1, uint64_t a2, char a3, char *a4)
{
  sub_240B0A6B0(0, (unint64_t *)&qword_268CA0B80, MEMORY[0x263F43C08], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v55[-1] - v9;
  v58[3] = sub_240BB3360();
  v58[4] = MEMORY[0x263F45760];
  v58[0] = a2;
  uint64_t v11 = &a4[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_consumedHealthExperienceStore];
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9940);
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  *(_OWORD *)uint64_t v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  *((void *)v11 + 4) = 0;
  int64_t v13 = a4;
  id v14 = objc_msgSend(ObjCClassFromMetadata, sel_atrialFibrillationEventType);
  if (!v14)
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v15 = OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_objectType;
  *(void *)&v13[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_objectType] = v14;
  *(void *)&v13[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_favoritesObserver] = 0;
  *(void *)&v13[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_checklistTileDataSource] = 0;
  *(void *)&v13[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_allFeatureStatusCellsFromFeedItems] = MEMORY[0x263F8EE78];
  *(void *)&v13[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_cancellables] = MEMORY[0x263F8EE88];
  id v16 = objc_msgSend(a1, sel_profile);
  id v17 = objc_msgSend(v16, sel_healthStore);

  if (!v17)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  *(void *)&v13[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_providedHealthStore] = v17;
  sub_240A1E37C((uint64_t)v58, (uint64_t)&v13[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_pinnedContentManager]);
  id v18 = objc_msgSend(self, sel_sharedInstanceForHealthStore_, v17);
  if (!v18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v19 = v18;
  id v20 = objc_msgSend(v18, sel_displayTypeForObjectType_, *(void *)&v13[v15]);

  if (!v20)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v21 = OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_displayType;
  *(void *)&v13[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_displayType] = v20;
  *(void *)&v13[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_viewControllerFactory] = a1;
  id v22 = a1;
  id v23 = objc_msgSend(v22, sel_profile);
  id v24 = objc_msgSend(v23, sel_healthStore);

  if (!v24)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  id v25 = objc_msgSend(v24, sel_profileIdentifier);

  id v26 = objc_msgSend(v25, sel_type);
  *(void *)&v13[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_profileType] = v26;
  if (a3 != 4)
  {
    v13[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_mode] = a3;

    uint64_t v32 = qword_240BC1158[a3];
LABEL_10:
    id v33 = *(id *)&v13[v21];
    id v34 = objc_msgSend(v22, sel_profile);
    int64_t v35 = (objc_class *)type metadata accessor for AtrialFibrillationDataTypeDetailViewController();
    v57.receiver = v13;
    v57.super_class = v35;
    id v36 = objc_msgSendSuper2(&v57, sel_initWithDisplayType_profile_mode_, v33, v34, v32);

    char v37 = (char *)v36;
    sub_240AC7E54();
    if (objc_msgSend(*(id *)&v37[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_displayType], sel_allowsManualEntry))
    {
      uint64_t v38 = sub_240BB4100();
      uint64_t v40 = v39;
      if (v38 == sub_240BB4100() && v40 == v41)
      {
        swift_bridgeObjectRelease_n();
LABEL_15:
        if (qword_26AFDA090 != -1) {
          swift_once();
        }
        sub_240BB2980();
        uint64_t v56 = v35;
        v55[0] = v37;
        int v43 = v37;
        id v44 = (void *)sub_240BB6DA0();
        swift_bridgeObjectRelease();
        uint64_t v45 = (uint64_t)v56;
        if (v56)
        {
          id v46 = sub_240A3466C(v55, (uint64_t)v56);
          uint64_t v47 = *(void *)(v45 - 8);
          MEMORY[0x270FA5388](v46);
          uint64_t v49 = (char *)&v55[-1] - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v47 + 16))(v49);
          uint64_t v50 = sub_240BB7AD0();
          (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v45);
          _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v55);
        }
        else
        {
          uint64_t v50 = 0;
        }
        id v51 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824A8]), sel_initWithTitle_style_target_action_, v44, 0, v50, sel_showAddDataVC);

        sub_240BB50A0();
        id v52 = objc_msgSend(v43, sel_navigationItem);
        id v53 = v51;
        objc_msgSend(v52, sel_setRightBarButtonItem_, v53);

        id v22 = v53;
        goto LABEL_21;
      }
      char v42 = sub_240BB7AE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v42) {
        goto LABEL_15;
      }
    }
LABEL_21:

    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v58);
    return;
  }
  id v27 = objc_msgSend(v22, sel_profile);
  id v28 = objc_msgSend(v27, sel_healthStore);

  if (v28)
  {
    id v29 = objc_msgSend(v28, sel_profileIdentifier);

    uint64_t v30 = sub_240BB3E60();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v10, 1, 1, v30);
    char v31 = sub_240BB40F0();

    sub_240B095FC((uint64_t)v10, (unint64_t *)&qword_268CA0B80, MEMORY[0x263F43C08]);
    v13[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_mode] = v31;

    uint64_t v32 = 0;
    goto LABEL_10;
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_240B095FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_240B0A6B0(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_240B09670()
{
  return sub_240B096D4();
}

uint64_t sub_240B096A4()
{
  return sub_240B096D4();
}

uint64_t sub_240B096D4()
{
  return sub_240B07470();
}

id sub_240B0978C(void *a1, uint64_t a2)
{
  sub_240B0A6B0(0, (unint64_t *)&unk_268CA0BC0, MEMORY[0x263F44790], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v25 - v5;
  uint64_t v7 = sub_240BB4C70();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_240BB4C80();
  uint64_t v27 = *(void *)(v11 - 8);
  uint64_t v28 = v11;
  MEMORY[0x270FA5388](v11);
  int64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_240BB5550();
  uint64_t v25 = *(void *)(v14 - 8);
  uint64_t v26 = v14;
  MEMORY[0x270FA5388](v14);
  id v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB5540();
  sub_240BB4AD0();
  sub_240BB49D0();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  objc_allocWithZone((Class)sub_240BB5470());
  id v17 = a1;
  id v18 = (void *)sub_240BB5460();
  id v19 = objc_msgSend(v17, sel_identifier);
  sub_240BB6DE0();

  id v20 = (void *)sub_240BB4C30();
  uint64_t v30 = &type metadata for HeartRateArticleDataProvider;
  unint64_t v31 = sub_240A3F524();
  unint64_t v32 = sub_240A3F4D0();

  uint64_t v21 = (void *)sub_240BB4C30();
  sub_240BB5430();
  swift_bridgeObjectRelease();

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v29);
  uint64_t v22 = sub_240BB5440();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v6, 0, 1, v22);
  sub_240BB5450();
  id v23 = v18;
  sub_240BB4BF0();
  sub_240BB4D70();

  (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v28);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v16, v26);
  return v23;
}

uint64_t sub_240B09B4C(uint64_t a1)
{
  uint64_t v18 = a1;
  uint64_t v1 = sub_240BB4C70();
  uint64_t v19 = *(void *)(v1 - 8);
  uint64_t v20 = v1;
  MEMORY[0x270FA5388](v1);
  id v17 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_240BB4AC0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240BB4C80();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
  id v11 = (id)*MEMORY[0x263F09E48];
  uint64_t v12 = (void *)MEMORY[0x24560A470]();
  sub_240BB4AD0();

  uint64_t v22 = &type metadata for HeartRateVariabilityDataTypeDetailConfigurationProvider.HeartbeatSeriesComponent;
  unint64_t v23 = sub_240B0A65C();
  sub_240BB4AE0();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F44380], v3);
  sub_240BB5280();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v21);
  uint64_t v13 = v18;
  sub_240BB49D0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v17, v13, v20);
  MEMORY[0x24560A470](v11);
  id v14 = objc_allocWithZone((Class)sub_240BB4D90());
  return sub_240BB4D60();
}

id sub_240B09E58(void *a1, uint64_t a2)
{
  sub_240B0A6B0(0, (unint64_t *)&unk_268CA0BC0, MEMORY[0x263F44790], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v28 - v5;
  uint64_t v7 = sub_240BB4C70();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CardioFitnessDataTypeDetailDataSourceProvider();
  uint64_t inited = swift_initStackObject();
  id result = objc_msgSend(self, sel__quantityTypeWithCode_, 124);
  if (result)
  {
    *(void *)(inited + 16) = result;
    sub_240B17480(a2);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
    id v13 = objc_allocWithZone((Class)sub_240BB5470());
    id v14 = a1;
    uint64_t v15 = sub_240BB5460();
    id v16 = objc_msgSend(v14, sel_identifier);
    uint64_t v28 = sub_240BB6DE0();

    id v17 = (void *)sub_240BB4C30();
    uint64_t v18 = *MEMORY[0x263F09730];
    id v19 = objc_allocWithZone(MEMORY[0x263F0A3D0]);
    id v20 = v17;
    id v21 = objc_msgSend(v19, sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v18, v20, 0);
    uint64_t v30 = sub_240A34DC4(0, (unint64_t *)&qword_26AFD75D0);
    uint64_t v31 = MEMORY[0x263F44B48];
    *(void *)&long long v29 = v21;
    uint64_t v22 = type metadata accessor for LowCardioFitnessArticleDataProvider();
    uint64_t v23 = swift_allocObject();
    uint64_t v24 = v23 + OBJC_IVAR____TtC5Heart35LowCardioFitnessArticleDataProvider____lazy_storage___featureStatus;
    sub_240B0A6B0(0, &qword_26AFD7BC0, MEMORY[0x263F44998], MEMORY[0x263F8D8F0]);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 1, 1, v25);
    *(unsigned char *)(v23 + OBJC_IVAR____TtC5Heart35LowCardioFitnessArticleDataProvider____lazy_storage___showBridgeLink) = 2;
    *(void *)(v23 + 16) = v20;
    sub_240A37388(&v29, v23 + 24);
    uint64_t v30 = v22;
    uint64_t v31 = sub_240B0A714(&qword_26AFDA058, 255, (void (*)(uint64_t))type metadata accessor for LowCardioFitnessArticleDataProvider);
    uint64_t v32 = sub_240B0A714(qword_26AFDA0A0, 255, (void (*)(uint64_t))type metadata accessor for LowCardioFitnessArticleDataProvider);

    *(void *)&long long v29 = v23;
    uint64_t v26 = (void *)sub_240BB4C30();
    sub_240BB5430();
    swift_bridgeObjectRelease();

    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v29);
    uint64_t v27 = sub_240BB5440();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v6, 0, 1, v27);
    sub_240BB5450();
    swift_setDeallocating();

    return (id)v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240B0A2A0(void *a1, uint64_t a2)
{
  sub_240B0A6B0(0, (unint64_t *)&unk_268CA0BC0, MEMORY[0x263F44790], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v24 - v5;
  uint64_t v7 = sub_240BB4C70();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_240BB4C80();
  uint64_t v26 = *(void *)(v11 - 8);
  uint64_t v27 = v11;
  MEMORY[0x270FA5388](v11);
  id v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_240BB55A0();
  uint64_t v24 = *(void *)(v14 - 8);
  uint64_t v25 = v14;
  MEMORY[0x270FA5388](v14);
  id v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB5590();
  sub_240BB5580();
  sub_240BB49D0();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  objc_allocWithZone((Class)sub_240BB5470());
  id v17 = a1;
  uint64_t v18 = sub_240BB5460();
  id v19 = objc_msgSend(v17, sel_identifier);
  sub_240BB6DE0();

  id v20 = (void *)sub_240BB4C30();
  long long v29 = &type metadata for HeartRateArticleDataProvider;
  unint64_t v30 = sub_240A3F524();
  unint64_t v31 = sub_240A3F4D0();

  id v21 = (void *)sub_240BB4C30();
  sub_240BB5430();
  swift_bridgeObjectRelease();

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v28);
  uint64_t v22 = sub_240BB5440();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v6, 0, 1, v22);
  sub_240BB5450();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v27);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v16, v25);
  return v18;
}

uint64_t sub_240B0A644()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_240B0A654(int a1, void *a2)
{
  sub_240B017D0(a1, a2, *(void *)(v2 + 16));
}

unint64_t sub_240B0A65C()
{
  unint64_t result = qword_268CA0BD0;
  if (!qword_268CA0BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0BD0);
  }
  return result;
}

void sub_240B0A6B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_240B0A714(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240B0A75C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_240BB7960();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_240B0A7B0()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B0A7E8()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_240B0A7FC(void *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v84 = a3;
  v87[5] = *(id *)MEMORY[0x263EF8340];
  uint64_t ObjectType = swift_getObjectType();
  sub_240A3FB28();
  uint64_t v8 = v7;
  uint64_t v79 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v78 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B0A6B0(0, &qword_26AFD7B70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v75 = (char *)&v73 - v11;
  uint64_t v76 = sub_240BB2B20();
  uint64_t v74 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  os_log_type_t v73 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(a1, sel_notification);
  id v14 = objc_msgSend(v13, sel_request);

  id v15 = objc_msgSend(v14, sel_content);
  id v16 = objc_msgSend(v15, sel_categoryIdentifier);

  uint64_t v17 = sub_240BB6DE0();
  unint64_t v19 = v18;

  uint64_t v20 = sub_240BB6DE0();
  uint64_t v85 = v17;
  if (v17 != v20 || v19 != v21)
  {
    char v22 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_8;
    }
    if (v85 != sub_240BB6DE0() || v19 != v23)
    {
      char v24 = sub_240BB7AE0();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0) {
        goto LABEL_14;
      }
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
LABEL_8:
  uint64_t v77 = v8;
  uint64_t v82 = v3;
  id v83 = a2;
  id v25 = (id)HKHRAFibBurdenLogForCategory();
  id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
  id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A0C0]), sel_initWithLoggingCategory_healthDataSource_, v25, v26);

  uint64_t v81 = a1;
  id v28 = a1;
  id v29 = objc_msgSend(v28, sel_notification);
  id v30 = objc_msgSend(v29, sel_request);

  id v31 = objc_msgSend(v28, sel_actionIdentifier);
  uint64_t v32 = sub_240BB6DE0();
  uint64_t v34 = v33;

  v87[3] = &type metadata for BiomeFocusModeOnDeterminer;
  v87[4] = &off_26F50A3B0;
  type metadata accessor for AFibBurdenNotificationInteractionAnalyticsEvent();
  int64_t v35 = (void *)swift_allocObject();
  uint64_t v36 = sub_240A346B0((uint64_t)v87, (uint64_t)&type metadata for BiomeFocusModeOnDeterminer);
  MEMORY[0x270FA5388](v36);
  (*(void (**)(void))(v37 + 16))();
  v35[8] = &type metadata for BiomeFocusModeOnDeterminer;
  v35[9] = &off_26F50A3B0;
  void v35[2] = v30;
  v35[3] = v32;
  v35[4] = v34;
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v87);

  v87[0] = 0;
  if (objc_msgSend(v27, sel_submitEvent_error_, v35, v87))
  {
    id v38 = v87[0];

    swift_release();
  }
  else
  {
    id v39 = v87[0];
    uint64_t v40 = (void *)sub_240BB2A50();

    swift_willThrow();
    swift_release();
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v41 = v77;
    uint64_t v42 = sub_240A395FC(v77, (uint64_t)qword_26AFDEB68);
    int v43 = v78;
    uint64_t v44 = v79;
    (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v78, v42, v41);
    uint64_t v45 = swift_allocObject();
    uint64_t v46 = ObjectType;
    *(void *)(v45 + 16) = v40;
    *(void *)(v45 + 24) = v46;
    v87[0] = 0;
    id v47 = v40;
    sub_240BB5720();
    swift_release();

    (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v41);
  }
  uint64_t v4 = v82;
  a2 = v83;
  a1 = v81;
LABEL_14:
  id v48 = objc_msgSend(a1, sel_actionIdentifier);
  uint64_t v49 = sub_240BB6DE0();
  uint64_t v51 = v50;

  if (v49 == sub_240BB6DE0() && v51 == v52)
  {
    swift_bridgeObjectRelease_n();
LABEL_18:
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v54 = sub_240BB5990();
    sub_240A395FC(v54, (uint64_t)qword_26AFDEC70);
    id v55 = v4;
    sub_240BB4850();
    uint64_t v56 = sub_240BB5970();
    os_log_type_t v57 = sub_240BB71A0();
    if (!os_log_type_enabled(v56, v57))
    {

      swift_bridgeObjectRelease_n();
      return a2(v62);
    }
    uint64_t v58 = swift_slowAlloc();
    uint64_t v59 = (void *)swift_slowAlloc();
    v87[0] = v59;
    *(_DWORD *)uint64_t v58 = 136446723;
    uint64_t v86 = swift_getObjectType();
    sub_240B0B628();
    uint64_t v60 = sub_240BB6E10();
    uint64_t v86 = sub_240A38940(v60, v61, (uint64_t *)v87);
    sub_240BB75F0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v58 + 12) = 2082;
    uint64_t v86 = sub_240A38940(0xD00000000000003BLL, 0x8000000240BD01A0, (uint64_t *)v87);
    sub_240BB75F0();
    *(_WORD *)(v58 + 22) = 2081;
    sub_240BB4850();
    uint64_t v86 = sub_240A38940(v85, v19, (uint64_t *)v87);
    sub_240BB75F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_240A1B000, v56, v57, "[%{public}s.%{public}s] Notification with identifier %{private}s dismissed", (uint8_t *)v58, 0x20u);
    goto LABEL_22;
  }
  char v53 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v53) {
    goto LABEL_18;
  }
  swift_bridgeObjectRelease();
  id v63 = objc_msgSend(a1, sel_notification);
  uint64_t v64 = (uint64_t)v75;
  sub_240BB71D0();

  uint64_t v65 = v74;
  uint64_t v66 = v76;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v64, 1, v76) != 1)
  {
    uint64_t v71 = (uint64_t)v73;
    (*(void (**)(char *, uint64_t, uint64_t))(v65 + 32))(v73, v64, v66);
    sub_240B03468(v71);
    uint64_t v62 = (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 8))(v71, v66);
    return a2(v62);
  }
  sub_240B095FC(v64, &qword_26AFD7B70, MEMORY[0x263F06EA8]);
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v67 = sub_240BB5990();
  sub_240A395FC(v67, (uint64_t)qword_26AFDEC70);
  uint64_t v56 = sub_240BB5970();
  os_log_type_t v68 = sub_240BB7180();
  if (!os_log_type_enabled(v56, v68)) {
    goto LABEL_23;
  }
  uint64_t v58 = swift_slowAlloc();
  uint64_t v59 = (void *)swift_slowAlloc();
  v87[0] = v59;
  *(_DWORD *)uint64_t v58 = 136315394;
  uint64_t v69 = sub_240BB7C80();
  uint64_t v86 = sub_240A38940(v69, v70, (uint64_t *)v87);
  sub_240BB75F0();
  swift_bridgeObjectRelease();
  *(_WORD *)(v58 + 12) = 2080;
  uint64_t v86 = sub_240A38940(0xD00000000000003BLL, 0x8000000240BD01A0, (uint64_t *)v87);
  sub_240BB75F0();
  _os_log_impl(&dword_240A1B000, v56, v68, "[%s.%s] Unable to resolve notification. No URL present.", (uint8_t *)v58, 0x16u);
LABEL_22:
  swift_arrayDestroy();
  MEMORY[0x24560B930](v59, -1, -1);
  MEMORY[0x24560B930](v58, -1, -1);
LABEL_23:

  return a2(v62);
}

uint64_t sub_240B0B2FC(void *a1, void (*a2)(uint64_t))
{
  swift_getObjectType();
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_240BB5990();
  sub_240A395FC(v4, (uint64_t)qword_26AFDEC70);
  uint64_t v5 = sub_240BB5970();
  os_log_type_t v6 = sub_240BB71A0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v24 = v8;
    *(_DWORD *)uint64_t v7 = 136446466;
    uint64_t v9 = sub_240BB7C80();
    sub_240A38940(v9, v10, &v24);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2082;
    sub_240A38940(0xD00000000000003CLL, 0x8000000240BD0160, &v24);
    sub_240BB75F0();
    _os_log_impl(&dword_240A1B000, v5, v6, "[%{public}s.%{public}s]", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v8, -1, -1);
    MEMORY[0x24560B930](v7, -1, -1);
  }

  id v11 = objc_msgSend(a1, sel_request);
  id v12 = objc_msgSend(v11, sel_content);

  id v13 = objc_msgSend(v12, sel_categoryIdentifier);
  uint64_t v14 = sub_240BB6DE0();
  uint64_t v16 = v15;

  if (v14 == sub_240BB6DE0() && v16 == v17) {
    goto LABEL_12;
  }
  char v19 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  if (v19)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v21 = 26;
    goto LABEL_14;
  }
  if (v14 == sub_240BB6DE0() && v16 == v20)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v23 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v23) {
    uint64_t v21 = 26;
  }
  else {
    uint64_t v21 = 0;
  }
LABEL_14:
  a2(v21);
  return ((uint64_t (*)(void))a2)(0);
}

uint64_t sub_240B0B618()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

unint64_t sub_240B0B628()
{
  unint64_t result = qword_268CA0BE8;
  if (!qword_268CA0BE8)
  {
    type metadata accessor for HeartAppDelegate();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CA0BE8);
  }
  return result;
}

uint64_t sub_240B0B660()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B0B698()
{
  return sub_240B03338(*(void **)(v0 + 16));
}

uint64_t sub_240B0B6A4()
{
  uint64_t v1 = sub_240BB2B20();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

void sub_240B0B740(char a1)
{
  uint64_t v3 = *(void *)(sub_240BB2B20() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_240B039F4(a1, v4);
}

uint64_t sub_240B0B7EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_240B0DCE4(0, &qword_268CA0BF0, MEMORY[0x263F43AC8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v15 - v7;
  if (qword_268C9E690 != -1) {
    swift_once();
  }
  if (qword_268C9E688 != -1) {
    swift_once();
  }
  sub_240BB3C80();
  uint64_t v9 = sub_240BB3C90();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 0, 1, v9);
  sub_240A1E37C(a1, (uint64_t)v16);
  uint64_t v10 = swift_allocObject();
  sub_240A37388(v16, v10 + 16);
  sub_240A1E37C(a2, (uint64_t)v15);
  uint64_t v11 = swift_allocObject();
  sub_240A37388(v15, v11 + 16);
  uint64_t v12 = sub_240BB3F70();
  uint64_t v13 = MEMORY[0x263F43D18];
  a3[3] = v12;
  a3[4] = v13;
  sub_240A23B08(a3);
  swift_retain();
  return sub_240BB3F60();
}

uint64_t sub_240B0BA48()
{
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 16);

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_240B0BA80()
{
  sub_240B0BC00(v14);
  sub_240B0BECC(v11);
  sub_240B0C260(0, &qword_268C9FDC0, (unint64_t *)&qword_268C9FDC8, MEMORY[0x263F44030], MEMORY[0x263F8E0F8]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_240BBAE40;
  uint64_t v1 = v15;
  uint64_t v2 = v16;
  uint64_t v3 = sub_240A3466C(v14, v15);
  *(void *)(v0 + 56) = v1;
  *(void *)(v0 + 64) = *(void *)(v2 + 8);
  uint64_t v4 = sub_240A23B08((uint64_t *)(v0 + 32));
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v1 - 8) + 16))(v4, v3, v1);
  uint64_t v5 = v12;
  uint64_t v6 = v13;
  uint64_t v7 = sub_240A3466C(v11, v12);
  *(void *)(v0 + 96) = v5;
  *(void *)(v0 + 104) = *(void *)(v6 + 8);
  uint64_t v8 = sub_240A23B08((uint64_t *)(v0 + 72));
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(v8, v7, v5);
  uint64_t v9 = sub_240BB4850();
  swift_bridgeObjectRelease();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v11);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v14);
  return v9;
}

uint64_t sub_240B0BBF8()
{
  return sub_240B0BA80();
}

uint64_t sub_240B0BC00@<X0>(uint64_t *a1@<X8>)
{
  sub_240B0DCE4(0, &qword_268CA0BF8, MEMORY[0x263F44888], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v15 - v3;
  uint64_t v5 = sub_240BB3C50();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  sub_240BB2980();
  sub_240BB3DC0();
  uint64_t v9 = sub_240BB55E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  uint64_t v10 = sub_240BB3D70();
  MEMORY[0x245607050](v10);
  sub_240BB3D60();
  uint64_t v11 = sub_240BB3C40();
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = sub_240BB42A0();
  uint64_t v13 = MEMORY[0x263F43EE8];
  a1[3] = v12;
  a1[4] = v13;
  sub_240A23B08(a1);
  sub_240BB4290();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_240B0BECC@<X0>(uint64_t *a1@<X8>)
{
  sub_240B0DCE4(0, &qword_268CA0BF8, MEMORY[0x263F44888], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v15 - v3;
  uint64_t v5 = sub_240BB3C50();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  sub_240BB2980();
  sub_240BB3DD0();
  uint64_t v9 = sub_240BB55E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  uint64_t v10 = sub_240BB3D80();
  MEMORY[0x245607050](v10);
  sub_240BB3D60();
  uint64_t v11 = sub_240BB3C40();
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = sub_240BB42A0();
  uint64_t v13 = MEMORY[0x263F43EE8];
  a1[3] = v12;
  a1[4] = v13;
  sub_240A23B08(a1);
  sub_240BB4290();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_240B0C19C(uint64_t a1)
{
  sub_240A1E37C(a1, (uint64_t)v4);
  sub_240B0C260(0, &qword_268C9FDC0, (unint64_t *)&qword_268C9FDC8, MEMORY[0x263F44030], MEMORY[0x263F8E0F8]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_240BB97E0;
  sub_240A1E37C((uint64_t)v4, v1 + 32);
  uint64_t v2 = sub_240BB4850();
  swift_bridgeObjectRelease();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v4);
  return v2;
}

uint64_t sub_240B0C244()
{
  return sub_240B0C19C(v0 + 16);
}

void sub_240B0C260(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_240A39BC8(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_240B0C2C8()
{
  uint64_t v0 = sub_240BB4020();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_240BB55C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  sub_240BB2980();
  MEMORY[0x245607050]();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F43D88], v0);
  sub_240BB55B0();
  sub_240B0DCE4(0, &qword_268CA0C08, (uint64_t (*)(uint64_t))sub_240B0DB3C, MEMORY[0x263F8E0F8]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_240BB97E0;
  uint64_t v9 = MEMORY[0x263F44838];
  *(void *)(v8 + 56) = v4;
  *(void *)(v8 + 64) = v9;
  *(void *)(v8 + 72) = MEMORY[0x263F44830];
  uint64_t v10 = sub_240A23B08((uint64_t *)(v8 + 32));
  (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 16))(v10, v7, v4);
  uint64_t v11 = sub_240BB4850();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v11;
}

uint64_t sub_240B0C578()
{
  uint64_t v0 = sub_240BB4020();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_240BB3D20();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B0D7AC();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F43D88], v0);
  sub_240BB3DB0();
  MEMORY[0x245607040]();
  sub_240BB3D30();
  sub_240B0DCE4(0, &qword_268CA0C08, (uint64_t (*)(uint64_t))sub_240B0DB3C, MEMORY[0x263F8E0F8]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_240BB97E0;
  uint64_t v9 = MEMORY[0x263F43B30];
  *(void *)(v8 + 56) = v4;
  *(void *)(v8 + 64) = v9;
  *(void *)(v8 + 72) = MEMORY[0x263F43B28];
  uint64_t v10 = sub_240A23B08((uint64_t *)(v8 + 32));
  (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 16))(v10, v7, v4);
  uint64_t v11 = sub_240BB4850();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v11;
}

uint64_t sub_240B0C7B8(uint64_t a1)
{
  uint64_t v2 = sub_240BB3C50();
  v8[3] = v2;
  v8[4] = MEMORY[0x263F43AC0];
  uint64_t v3 = sub_240A23B08(v8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v3, a1, v2);
  uint64_t v4 = sub_240BB4360();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v8);
  sub_240B0DC74(0, &qword_268CA0C00, &qword_268C9FDA0, (unint64_t *)&qword_268C9FDA8, MEMORY[0x263F43C48]);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240BB97E0;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = MEMORY[0x245607600]();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_240B0C8A0(uint64_t a1)
{
  uint64_t v24 = MEMORY[0x263F8EE78];
  sub_240B0CB94(0, 0, 0);
  uint64_t v2 = v24;
  uint64_t v3 = *(void *)(a1 + 16);
  sub_240BB4850();
  uint64_t v21 = v3;
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (uint64_t *)(a1 + 40);
    uint64_t v6 = MEMORY[0x263F8D310];
    do
    {
      uint64_t v7 = *v5;
      uint64_t v22 = *(v5 - 1);
      uint64_t v23 = v2;
      uint64_t v8 = qword_268C9E7A8;
      sub_240BB4850();
      if (v8 != -1) {
        swift_once();
      }
      ++v4;
      sub_240BB2980();
      sub_240B0C260(0, (unint64_t *)&qword_26AFD99D8, (unint64_t *)&qword_26AFD9A10, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_240BBAE40;
      sub_240B0DB9C();
      uint64_t v10 = sub_240BB7640();
      uint64_t v12 = v11;
      *(void *)(v9 + 56) = v6;
      unint64_t v13 = sub_240A4C66C();
      *(void *)(v9 + 32) = v10;
      *(void *)(v9 + 40) = v12;
      *(void *)(v9 + 96) = v6;
      *(void *)(v9 + 104) = v13;
      *(void *)(v9 + 64) = v13;
      *(void *)(v9 + 72) = v22;
      *(void *)(v9 + 80) = v7;
      sub_240BB4850();
      uint64_t v14 = sub_240BB6E00();
      uint64_t v16 = v15;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v2 = v23;
      unint64_t v18 = *(void *)(v23 + 16);
      unint64_t v17 = *(void *)(v23 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_240B0CB94(v17 > 1, v18 + 1, 1);
        uint64_t v2 = v23;
      }
      v5 += 2;
      *(void *)(v2 + 16) = v18 + 1;
      uint64_t v19 = v2 + 16 * v18;
      *(void *)(v19 + 32) = v14;
      *(void *)(v19 + 40) = v16;
    }
    while (v21 != v4);
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_240B0CAFC()
{
  return sub_240B0C578();
}

uint64_t sub_240B0CB04(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_240B0CCE4(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_240B0CB24(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_240B0CE98(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_240B0CB44(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_240B0D548(a1, a2, a3, (void *)*v3, &qword_268CA0B10, MEMORY[0x263F44068], MEMORY[0x263F44068]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_240B0CB94(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_240B0D068(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_240B0CBB4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_240B0D1F4(a1, a2, a3, (void *)*v3, (unint64_t *)&qword_268C9E840, (unint64_t *)&qword_268CA0B00, MEMORY[0x263F437A0]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_240B0CBEC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_240B0D1F4(a1, a2, a3, (void *)*v3, &qword_268CA0C30, (unint64_t *)&qword_268C9FDA8, MEMORY[0x263F43C48]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_240B0CC24(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_240B0D3C8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_240B0CC44(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_240B0D548(a1, a2, a3, (void *)*v3, &qword_268CA0C20, (uint64_t (*)(uint64_t))sub_240B0DC0C, (uint64_t (*)(void))sub_240B0DC0C);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_240B0CC94(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_240B0D548(a1, a2, a3, (void *)*v3, &qword_268CA0C28, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_240B0CCE4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_240B0DCE4(0, (unint64_t *)&qword_268C9ED90, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureAvailabilityRequirementIdentifier, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_240BB7970();
  __break(1u);
  return result;
}

uint64_t sub_240B0CE98(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_240B0DC74(0, (unint64_t *)&qword_268CA0B60, &qword_268CA0668, (unint64_t *)&qword_268CA0B00, MEMORY[0x263F437A0]);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_240B0C260(0, &qword_268CA0668, (unint64_t *)&qword_268CA0B00, MEMORY[0x263F437A0], MEMORY[0x263F8D488]);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_240BB7970();
  __break(1u);
  return result;
}

uint64_t sub_240B0D068(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_240A39D48(0, (unint64_t *)&qword_26AFD7108, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_240BB7970();
  __break(1u);
  return result;
}

uint64_t sub_240B0D1F4(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, unint64_t *a6, uint64_t a7)
{
  if (a3)
  {
    unint64_t v10 = a4[3];
    int64_t v11 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) < a2)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v11 = a2;
      }
    }
  }
  else
  {
    int64_t v11 = a2;
  }
  uint64_t v12 = a4[2];
  if (v11 <= v12) {
    uint64_t v13 = a4[2];
  }
  else {
    uint64_t v13 = v11;
  }
  if (v13)
  {
    sub_240B0C260(0, a5, a6, a7, MEMORY[0x263F8E0F8]);
    unint64_t v14 = (void *)swift_allocObject();
    size_t v15 = j__malloc_size(v14);
    v14[2] = v12;
    uint64_t v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
  }
  else
  {
    unint64_t v14 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v16 = (unint64_t)(v14 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v14 != a4 || v16 >= v17 + 40 * v12) {
      memmove(v14 + 4, a4 + 4, 40 * v12);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v17 >= v16 + 40 * v12 || v16 >= v17 + 40 * v12)
  {
    sub_240A39BC8(0, a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_30:
  uint64_t result = sub_240BB7970();
  __break(1u);
  return result;
}

uint64_t sub_240B0D3C8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_240A39D48(0, &qword_268CA0C38, MEMORY[0x263F8D538], MEMORY[0x263F8E0F8]);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_240BB7970();
  __break(1u);
  return result;
}

uint64_t sub_240B0D548(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v10 = a4[3];
    int64_t v11 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) < a2)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v11 = a2;
      }
    }
  }
  else
  {
    int64_t v11 = a2;
  }
  uint64_t v12 = a4[2];
  if (v11 <= v12) {
    uint64_t v13 = a4[2];
  }
  else {
    uint64_t v13 = v11;
  }
  if (!v13)
  {
    unint64_t v17 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_240B0DCE4(0, a5, a6, MEMORY[0x263F8E0F8]);
  uint64_t v14 = *(void *)(a7(0) - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v17 = (void *)swift_allocObject();
  size_t v18 = j__malloc_size(v17);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v18 - v16 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_34;
  }
  v17[2] = v12;
  v17[3] = 2 * ((uint64_t)(v18 - v16) / v15);
LABEL_19:
  uint64_t v20 = *(void *)(a7(0) - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = (char *)v17 + v21;
  uint64_t v23 = (char *)a4 + v21;
  if (a1)
  {
    if (v17 < a4 || v22 >= &v23[*(void *)(v20 + 72) * v12])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v17 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v24 = *(void *)(v20 + 72) * v12;
  id v25 = &v22[v24];
  unint64_t v26 = (unint64_t)&v23[v24];
  if (v23 >= v25 || (unint64_t)v22 >= v26)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v17;
  }
LABEL_36:
  uint64_t result = sub_240BB7970();
  __break(1u);
  return result;
}

uint64_t sub_240B0D7AC()
{
  sub_240A39D48(0, (unint64_t *)&qword_26AFD7108, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240BBD8D0;
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  *(void *)(inited + 32) = sub_240BB2980();
  *(void *)(inited + 40) = v1;
  *(void *)(inited + 48) = sub_240BB2980();
  *(void *)(inited + 56) = v2;
  uint64_t v3 = sub_240BB2980();
  uint64_t v5 = v4;
  sub_240BB2980();
  sub_240BB6E70();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  *(void *)(inited + 64) = v3;
  *(void *)(inited + 72) = v5;
  uint64_t v6 = sub_240BB2980();
  uint64_t v8 = v7;
  sub_240BB2980();
  sub_240BB6E70();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  *(void *)(inited + 80) = v6;
  *(void *)(inited + 88) = v8;
  *(void *)(inited + 96) = sub_240BB2980();
  *(void *)(inited + 104) = v9;
  sub_240B0C8A0(inited);
  swift_setDeallocating();
  uint64_t v10 = MEMORY[0x263F8D310];
  swift_arrayDestroy();
  sub_240A39D48(0, &qword_268C9F958, v10, MEMORY[0x263F8D488]);
  sub_240A98D84();
  uint64_t v11 = sub_240BB6D70();
  swift_bridgeObjectRelease();
  return v11;
}

unint64_t sub_240B0DB3C()
{
  unint64_t result = qword_268CA0C10;
  if (!qword_268CA0C10)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CA0C10);
  }
  return result;
}

unint64_t sub_240B0DB9C()
{
  unint64_t result = qword_268CA0C18;
  if (!qword_268CA0C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0C18);
  }
  return result;
}

uint64_t sub_240B0DBF0()
{
  return sub_240B0C7B8(*(void *)(v0 + 16));
}

void sub_240B0DC0C()
{
  if (!qword_268C9FF10)
  {
    type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C9FF10);
    }
  }
}

void sub_240B0DC74(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  if (!*a2)
  {
    sub_240B0C260(255, a3, a4, a5, MEMORY[0x263F8D488]);
    unint64_t v6 = sub_240BB7AB0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_240B0DCE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for AFibBurdenLifeFactorDetailViewController()
{
  uint64_t result = qword_268CA0C40;
  if (!qword_268CA0C40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240B0DDA0()
{
  return swift_initClassMetadata2();
}

void sub_240B0DDE0(void *a1)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for AFibBurdenLifeFactorDetailViewController();
  id v1 = v5.receiver;
  objc_msgSendSuper2(&v5, sel_viewDidLoad);
  id v2 = objc_msgSend(v1, sel_view, v5.receiver, v5.super_class);
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = objc_msgSend(self, sel_systemGroupedBackgroundColor);
    objc_msgSend(v3, sel_setBackgroundColor_, v4);

    sub_240B0DEA4();
  }
  else
  {
    __break(1u);
  }
}

void sub_240B0DEA4()
{
  id v1 = objc_msgSend(v0, sel_navigationItem);
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  sub_240BB2980();
  id v2 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setTitle_, v2, 0xE000000000000000);

  id v3 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v3, sel_setLargeTitleDisplayMode_, 2);

  id v4 = objc_msgSend(v0, sel_navigationItem);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824A8]), sel_initWithBarButtonSystemItem_target_action_, 0, v0, sel_doneButtonTapped);
  objc_msgSend(v4, sel_setRightBarButtonItem_, v5);
}

id sub_240B0E034(void *a1)
{
  return objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

id sub_240B0E048()
{
  sub_240BB5400();
  id v1 = (void (*)(void))sub_240BB5410();
  v1();
  sub_240BB53E0();
  uint64_t v2 = sub_240BB48D0();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    sub_240A3FD54(0, &qword_268CA0B30);
    sub_240A3FD54(0, &qword_268CA0C50);
    uint64_t v4 = 0;
    while (1)
    {
      long long v9 = *(_OWORD *)(v2 + 16 * v4 + 32);
      swift_unknownObjectRetain_n();
      if (swift_dynamicCast())
      {
        sub_240A37388(v7, (uint64_t)v10);
        sub_240A3466C(v10, v10[3]);
        id result = objc_msgSend(v0, sel_collectionView);
        if (!result)
        {
          __break(1u);
          return result;
        }
        unint64_t v6 = result;
        sub_240BB4DE0();

        sub_240BB50A0();
        _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v10);
      }
      else
      {
        uint64_t v8 = 0;
        memset(v7, 0, sizeof(v7));
        sub_240BB50A0();
        sub_240B0E330((uint64_t)v7);
      }
      if (v3 == ++v4) {
        return (id)swift_bridgeObjectRelease();
      }
    }
  }

  return (id)swift_bridgeObjectRelease();
}

uint64_t sub_240B0E224()
{
  id v1 = objc_allocWithZone(v0);
  return sub_240BB53F0();
}

id sub_240B0E258(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for AFibBurdenLifeFactorDetailViewController();
  return objc_msgSendSuper2(&v5, sel_initWithCollectionViewLayout_, a3);
}

id sub_240B0E2A4(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for AFibBurdenLifeFactorDetailViewController();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_240B0E2F0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenLifeFactorDetailViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240B0E328()
{
  return type metadata accessor for AFibBurdenLifeFactorDetailViewController();
}

uint64_t sub_240B0E330(uint64_t a1)
{
  sub_240B0E38C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_240B0E38C()
{
  if (!qword_268CA0C58)
  {
    sub_240A3FD54(255, &qword_268CA0C50);
    unint64_t v0 = sub_240BB75E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA0C58);
    }
  }
}

ValueMetadata *type metadata accessor for HighHeartRateNotificationsHealthChecklistConfigurationProvider()
{
  return &type metadata for HighHeartRateNotificationsHealthChecklistConfigurationProvider;
}

uint64_t sub_240B0E40C()
{
  return sub_240B0E49C(&qword_26AFD7C20, (void (*)(uint64_t))type metadata accessor for HighHeartRateNotificationsFeatureStatusActionHandler);
}

uint64_t sub_240B0E454()
{
  return sub_240B0E49C(&qword_268C9F1A0, MEMORY[0x263F43730]);
}

uint64_t sub_240B0E49C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240B0E4E4(char a1)
{
  if (a1)
  {
    objc_msgSend(self, sel_tachycardiaThresholdHeartRate);
    id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
    sub_240A34DC4(0, (unint64_t *)&qword_268CA10E0);
    uint64_t v2 = (void *)sub_240BB74E0();
    uint64_t v3 = sub_240B91C50(v2, (uint64_t)v1);
    uint64_t v5 = v4;

    if (qword_26AFDA090 != -1) {
      swift_once();
    }
    sub_240BB2980();
    sub_240A64CB8(0, (unint64_t *)&qword_26AFD99D8, (uint64_t (*)(uint64_t))sub_240A4C614, MEMORY[0x263F8E0F8]);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_240BB97E0;
    *(void *)(v6 + 56) = MEMORY[0x263F8D310];
    *(void *)(v6 + 64) = sub_240A4C66C();
    *(void *)(v6 + 32) = v3;
    *(void *)(v6 + 40) = v5;
    uint64_t v7 = sub_240BB6DB0();
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_240BB2980();
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_240BB97E0;
    uint64_t v11 = *MEMORY[0x263F47660];
    uint64_t v12 = MEMORY[0x263F8D750];
    *(void *)(v10 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v10 + 64) = v12;
    *(void *)(v10 + 32) = v11;
    uint64_t v13 = sub_240BB6DB0();
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_240BBAE40;
    *(void *)(v16 + 32) = v7;
    *(void *)(v16 + 40) = v9;
    *(void *)(v16 + 48) = v13;
  }
  else
  {
    sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_240BBAE40;
    if (qword_26AFDA090 != -1) {
      swift_once();
    }
    *(void *)(v16 + 32) = sub_240BB2980();
    *(void *)(v16 + 40) = v17;
    uint64_t v18 = sub_240BB2980();
    uint64_t v15 = v19;
    *(void *)(v16 + 48) = v18;
  }
  *(void *)(v16 + 56) = v15;
  return v16;
}

uint64_t sub_240B0E88C(char a1, char a2)
{
  if (a1)
  {
    objc_msgSend(self, sel_tachycardiaThresholdHeartRate);
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
    sub_240A34DC4(0, (unint64_t *)&qword_268CA10E0);
    uint64_t v4 = (void *)sub_240BB74E0();
    uint64_t v5 = sub_240B91C50(v4, (uint64_t)v3);
    uint64_t v7 = v6;

    if (qword_26AFDA090 != -1) {
      swift_once();
    }
    sub_240BB2980();
    sub_240A64CB8(0, (unint64_t *)&qword_26AFD99D8, (uint64_t (*)(uint64_t))sub_240A4C614, MEMORY[0x263F8E0F8]);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_240BB97E0;
    *(void *)(v8 + 56) = MEMORY[0x263F8D310];
    *(void *)(v8 + 64) = sub_240A4C66C();
    *(void *)(v8 + 32) = v5;
    *(void *)(v8 + 40) = v7;
    uint64_t v9 = sub_240BB6DB0();
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a2)
    {
      if (qword_268C9E7D8 != -1) {
        swift_once();
      }
    }
    else if (qword_268C9E7D8 != -1)
    {
      swift_once();
    }
    sub_240BB2980();
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_240BB97E0;
    uint64_t v18 = *MEMORY[0x263F47660];
    uint64_t v19 = MEMORY[0x263F8D750];
    *(void *)(v17 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v17 + 64) = v19;
    *(void *)(v17 + 32) = v18;
    uint64_t v20 = sub_240BB6DB0();
    uint64_t v16 = v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_240BBAE40;
    *(void *)(v12 + 32) = v9;
    *(void *)(v12 + 40) = v11;
    *(void *)(v12 + 48) = v20;
  }
  else
  {
    sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_240BBAE40;
    if (qword_26AFDA090 != -1) {
      swift_once();
    }
    *(void *)(v12 + 32) = sub_240BB2980();
    *(void *)(v12 + 40) = v13;
    if (qword_268C9E7D8 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_240BB2980();
    uint64_t v16 = v15;
    *(void *)(v12 + 48) = v14;
  }
  *(void *)(v12 + 56) = v16;
  return v12;
}

uint64_t sub_240B0ECF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240A64CB8(0, &qword_26AFD7B98, MEMORY[0x263F45848], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v22 - v4;
  sub_240A64CB8(0, &qword_26AFD7BA8, MEMORY[0x263F43658], v2);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = sub_240BB3660();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)sub_240BB56F0();
  unsigned int v14 = objc_msgSend(v13, sel_areAllRequirementsSatisfied);

  if (v14)
  {
    sub_240B0E4E4(1);
  }
  else
  {
    char v15 = (uint64_t)objc_msgSend(self, sel_tachycardiaThresholdHeartRate) < *MEMORY[0x263F47658];
    sub_240B0E88C(1, v15);
  }
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  uint64_t v16 = (void *)qword_26AFDECD8;
  sub_240BB2980();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F435C8], v9);
  id v17 = v16;
  sub_240BB36C0();
  uint64_t v18 = sub_240BB36D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v8, 0, 1, v18);
  sub_240BB3750();
  uint64_t v19 = sub_240BB33F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v5, 1, 1, v19);
  sub_240BB38B0();
  uint64_t v20 = sub_240BB38D0();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

uint64_t sub_240B0F0F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  id v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240A64CB8(0, &qword_26AFD7B98, MEMORY[0x263F45848], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v25 - v3;
  sub_240A64CB8(0, &qword_26AFD7BA8, MEMORY[0x263F43658], v1);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v25 - v6;
  uint64_t v8 = sub_240BB3660();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)sub_240BB56F0();
  unsigned int v13 = objc_msgSend(v12, sel_areAllRequirementsSatisfied);

  if (v13)
  {
    sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_240BBAE40;
    if (qword_26AFDA090 != -1) {
      swift_once();
    }
    *(void *)(v14 + 32) = sub_240BB2980();
    *(void *)(v14 + 40) = v15;
  }
  else
  {
    objc_msgSend(self, sel_tachycardiaThresholdHeartRate);
    sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_240BBAE40;
    if (qword_26AFDA090 != -1) {
      swift_once();
    }
    *(void *)(v14 + 32) = sub_240BB2980();
    *(void *)(v14 + 40) = v16;
    if (qword_268C9E7D8 != -1) {
      swift_once();
    }
  }
  *(void *)(v14 + 48) = sub_240BB2980();
  *(void *)(v14 + 56) = v17;
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  uint64_t v18 = (void *)qword_26AFDECD8;
  sub_240BB2980();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F435D0], v8);
  id v19 = v18;
  sub_240BB36C0();
  uint64_t v20 = sub_240BB36D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v7, 0, 1, v20);
  sub_240BB3720();
  sub_240BB3750();
  uint64_t v21 = sub_240BB33F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v4, 1, 1, v21);
  uint64_t v22 = v26;
  sub_240BB38B0();
  uint64_t v23 = sub_240BB38D0();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 0, 1, v23);
}

void sub_240B0F6DC(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v107 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240A64CB8(0, &qword_26AFD7BA8, MEMORY[0x263F43658], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v99 - v5;
  uint64_t v7 = sub_240BB3630();
  uint64_t v104 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A64CB8(0, &qword_26AFD7B70, MEMORY[0x263F06EA8], v3);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v105 = (uint64_t)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v99 - v13;
  uint64_t v15 = sub_240BB3660();
  uint64_t v106 = *(void *)(v15 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v99 - v19;
  id v108 = objc_msgSend(a1, sel_highestPriorityUnsatisfiedRequirement);
  if (!v108)
  {
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v21 = sub_240BB6DE0();
  uint64_t v23 = v22;
  if (v21 == sub_240BB6DE0() && v23 == v24)
  {
    swift_bridgeObjectRelease_n();
LABEL_6:
    uint64_t v26 = sub_240BB38D0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v107, 1, 1, v26);
    id v27 = v108;

    return;
  }
  char v25 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v25) {
    goto LABEL_6;
  }
  uint64_t v28 = sub_240BB6DE0();
  uint64_t v30 = v29;
  if (v28 == sub_240BB6DE0() && v30 == v31)
  {
    swift_bridgeObjectRelease_n();
LABEL_13:

    if (qword_26AFDA090 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_240BB2980();
    uint64_t v35 = v34;
    (*(void (**)(char *, void, uint64_t))(v106 + 104))(v20, *MEMORY[0x263F435B8], v15);
    sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_240BB97E0;
    *(void *)(v36 + 32) = v33;
    *(void *)(v36 + 40) = v35;
    sub_240BB4850();
    uint64_t v37 = sub_240BB3740();
    uint64_t v99 = v38;
    uint64_t v100 = v37;
    uint64_t v103 = MEMORY[0x245606A20](v33, v35);
    *(void *)&long long v101 = v39;
    swift_bridgeObjectRelease();
    id v108 = (id)sub_240BB3740();
    uint64_t v102 = v40;
    id v41 = objc_msgSend(self, sel_tachycardiaLearnMoreLink);
    goto LABEL_16;
  }
  char v32 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v32) {
    goto LABEL_13;
  }
  uint64_t v49 = sub_240BB6DE0();
  uint64_t v51 = v50;
  if (v49 == sub_240BB6DE0() && v51 == v52)
  {
    swift_bridgeObjectRelease_n();
LABEL_24:

    if (qword_26AFDA090 != -1) {
      swift_once();
    }
    uint64_t v54 = sub_240BB2980();
    uint64_t v56 = v55;
    (*(void (**)(char *, void, uint64_t))(v106 + 104))(v20, *MEMORY[0x263F435B8], v15);
    sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
    uint64_t v57 = swift_allocObject();
    *(_OWORD *)(v57 + 16) = xmmword_240BB97E0;
    *(void *)(v57 + 32) = v54;
    *(void *)(v57 + 40) = v56;
    sub_240BB4850();
    uint64_t v58 = sub_240BB3740();
    uint64_t v99 = v59;
    uint64_t v100 = v58;
    uint64_t v103 = MEMORY[0x245606A20](v54, v56);
    *(void *)&long long v101 = v60;
    swift_bridgeObjectRelease();
    id v108 = (id)sub_240BB3740();
    uint64_t v102 = v61;
    id v62 = objc_msgSend(self, sel_tachycardiaLearnMoreLink);
    sub_240BB6DE0();

    sub_240BB2B10();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  char v53 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v53) {
    goto LABEL_24;
  }
  uint64_t v63 = sub_240BB6DE0();
  uint64_t v65 = v64;
  if (v63 == sub_240BB6DE0() && v65 == v66)
  {
    swift_bridgeObjectRelease_n();
LABEL_31:

    id v108 = (id)sub_240BB3780();
    uint64_t v69 = v68;
    if (qword_26AFDA090 != -1) {
      swift_once();
    }
    uint64_t v103 = sub_240BB2980();
    sub_240A64CB8(0, (unint64_t *)&qword_26AFD99D8, (uint64_t (*)(uint64_t))sub_240A4C614, MEMORY[0x263F8E0F8]);
    uint64_t v70 = swift_allocObject();
    long long v101 = xmmword_240BB97E0;
    *(_OWORD *)(v70 + 16) = xmmword_240BB97E0;
    *(void *)(v70 + 56) = MEMORY[0x263F8D310];
    *(void *)(v70 + 64) = sub_240A4C66C();
    *(void *)(v70 + 32) = v108;
    *(void *)(v70 + 40) = v69;
    uint64_t v102 = v69;
    sub_240BB4850();
    uint64_t v103 = sub_240BB6DB0();
    uint64_t v72 = v71;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void, uint64_t))(v106 + 104))(v20, *MEMORY[0x263F435C0], v15);
    sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
    uint64_t v73 = swift_allocObject();
    *(_OWORD *)(v73 + 16) = v101;
    *(void *)(v73 + 32) = v103;
    *(void *)(v73 + 40) = v72;
    *(void *)&long long v101 = v72;
    sub_240BB4850();
    uint64_t v74 = sub_240BB3760();
    uint64_t v99 = v75;
    uint64_t v100 = v74;
    uint64_t v76 = v104;
    (*(void (**)(char *, void, uint64_t))(v104 + 104))(v9, *MEMORY[0x263F43588], v7);
    sub_240BB3610();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v9, v7);
    goto LABEL_17;
  }
  char v67 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v67) {
    goto LABEL_31;
  }
  uint64_t v77 = sub_240BB6DE0();
  uint64_t v79 = v78;
  if (v77 == sub_240BB6DE0() && v79 == v80)
  {

    swift_bridgeObjectRelease_n();
LABEL_38:
    id v108 = (id)sub_240BB3790();
    uint64_t v83 = v82;
    if (qword_26AFDA090 != -1) {
      swift_once();
    }
    uint64_t v103 = sub_240BB2980();
    sub_240A64CB8(0, (unint64_t *)&qword_26AFD99D8, (uint64_t (*)(uint64_t))sub_240A4C614, MEMORY[0x263F8E0F8]);
    uint64_t v84 = swift_allocObject();
    long long v101 = xmmword_240BB97E0;
    *(_OWORD *)(v84 + 16) = xmmword_240BB97E0;
    *(void *)(v84 + 56) = MEMORY[0x263F8D310];
    *(void *)(v84 + 64) = sub_240A4C66C();
    *(void *)(v84 + 32) = v108;
    *(void *)(v84 + 40) = v83;
    uint64_t v102 = v83;
    sub_240BB4850();
    uint64_t v103 = sub_240BB6DB0();
    uint64_t v86 = v85;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void, uint64_t))(v106 + 104))(v20, *MEMORY[0x263F435C0], v15);
    sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
    uint64_t v87 = swift_allocObject();
    *(_OWORD *)(v87 + 16) = v101;
    *(void *)(v87 + 32) = v103;
    *(void *)(v87 + 40) = v86;
    *(void *)&long long v101 = v86;
    sub_240BB4850();
    uint64_t v88 = sub_240BB3760();
    uint64_t v99 = v89;
    uint64_t v100 = v88;
    uint64_t v90 = v104;
    (*(void (**)(char *, void, uint64_t))(v104 + 104))(v9, *MEMORY[0x263F43590], v7);
    sub_240BB3610();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v9, v7);
    goto LABEL_17;
  }
  char v81 = sub_240BB7AE0();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v81) {
    goto LABEL_38;
  }
  if (sub_240BB3730())
  {
    if (qword_26AFDA090 == -1) {
      goto LABEL_46;
    }
    goto LABEL_45;
  }
  if (qword_26AFDA090 != -1) {
LABEL_45:
  }
    swift_once();
LABEL_46:
  uint64_t v91 = sub_240BB2980();
  uint64_t v93 = v92;
  (*(void (**)(char *, void, uint64_t))(v106 + 104))(v20, *MEMORY[0x263F435B8], v15);
  sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
  uint64_t v94 = swift_allocObject();
  *(_OWORD *)(v94 + 16) = xmmword_240BB97E0;
  *(void *)(v94 + 32) = v91;
  *(void *)(v94 + 40) = v93;
  sub_240BB4850();
  uint64_t v95 = sub_240BB3740();
  uint64_t v99 = v96;
  uint64_t v100 = v95;
  uint64_t v103 = MEMORY[0x245606A20](v91, v93);
  *(void *)&long long v101 = v97;
  swift_bridgeObjectRelease();
  id v108 = (id)sub_240BB3740();
  uint64_t v102 = v98;
  id v41 = objc_msgSend(self, sel_tachycardiaLearnMoreLink);
LABEL_16:
  id v42 = v41;
  sub_240BB6DE0();

  sub_240BB2B10();
  swift_bridgeObjectRelease();
LABEL_17:
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  int v43 = (void *)qword_26AFDECD8;
  sub_240BB2980();
  uint64_t v44 = v106;
  (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v18, v20, v15);
  id v45 = v43;
  sub_240BB36C0();
  uint64_t v46 = sub_240BB36D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v6, 0, 1, v46);
  sub_240A64B98((uint64_t)v14, v105);
  uint64_t v47 = v107;
  sub_240BB38A0();
  sub_240A64C2C((uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v20, v15);
  uint64_t v48 = sub_240BB38D0();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 0, 1, v48);
}

uint64_t sub_240B10698@<X0>(uint64_t a1@<X8>)
{
  return sub_240B0F0F8(a1);
}

void sub_240B106A0(void *a1@<X1>, uint64_t a2@<X8>)
{
}

uint64_t sub_240B106A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F43700];
  uint64_t v3 = sub_240BB37B0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_240B1071C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_240B10838();

  return MEMORY[0x270F32850](a1, a2, a3, v6);
}

uint64_t sub_240B10770(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_240B10838();

  return MEMORY[0x270F32838](a1, a2, v4);
}

uint64_t sub_240B107C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_240A3F6CC();

  return MEMORY[0x270F32870](a1, a2, a3, v6);
}

unint64_t sub_240B1081C()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_240B10838()
{
  unint64_t result = qword_26AFD7C38;
  if (!qword_26AFD7C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD7C38);
  }
  return result;
}

uint64_t type metadata accessor for ElectrocardiogramUpdateTileView()
{
  uint64_t result = qword_268CA0C60;
  if (!qword_268CA0C60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240B108D8()
{
  return swift_initClassMetadata2();
}

id sub_240B10918(void *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v10 = sub_240BB3AD0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = (objc_class *)type metadata accessor for ElectrocardiogramUpdateTileView();
  v18.receiver = a1;
  v18.super_class = updated;
  id v15 = objc_msgSendSuper2(&v18, sel_initWithFrame_, a2, a3, a4, a5);
  sub_240B10AAC();
  id v16 = v15;
  sub_240BB3AE0();

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v16;
}

void sub_240B10A50()
{
}

uint64_t sub_240B10AAC()
{
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = (void *)sub_240BB6DA0();
  id v3 = objc_msgSend(self, sel_imageNamed_inBundle_, v2, v1);

  if (v3)
  {
    if (qword_26AFDA090 != -1) {
      swift_once();
    }
    sub_240BB2980();
    sub_240BB2980();
    objc_msgSend(self, sel_clearColor, 0xE000000000000000);
    return sub_240BB3AC0();
  }
  else
  {
    uint64_t result = sub_240BB78D0();
    __break(1u);
  }
  return result;
}

void sub_240B10CE4()
{
}

id sub_240B10D14()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ElectrocardiogramUpdateTileView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240B10D4C()
{
  return type metadata accessor for ElectrocardiogramUpdateTileView();
}

void destroy for AFibBurdenPDFChartProvider(uint64_t a1)
{
  if (*(void *)(a1 + 40)) {
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 16);
  }
  if (*(void *)(a1 + 80)) {
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 56);
  }
  objc_super v2 = *(void **)(a1 + 96);
}

uint64_t initializeWithCopy for AFibBurdenPDFChartProvider(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = a1 + 16;
  uint64_t v7 = a2 + 16;
  uint64_t v8 = *(void *)(a2 + 40);
  id v9 = v4;
  id v10 = v5;
  if (v8)
  {
    uint64_t v11 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = v8;
    *(void *)(a1 + 48) = v11;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(v6, v7, v8);
  }
  else
  {
    long long v12 = *(_OWORD *)(v7 + 16);
    *(_OWORD *)uint64_t v6 = *(_OWORD *)v7;
    *(_OWORD *)(v6 + 16) = v12;
    *(void *)(v6 + 32) = *(void *)(v7 + 32);
  }
  uint64_t v13 = (_OWORD *)(a1 + 56);
  uint64_t v14 = (_OWORD *)(a2 + 56);
  uint64_t v15 = *(void *)(a2 + 80);
  if (v15)
  {
    uint64_t v16 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = v15;
    *(void *)(a1 + 88) = v16;
    (**(void (***)(_OWORD *, _OWORD *))(v15 - 8))(v13, v14);
  }
  else
  {
    long long v17 = *(_OWORD *)(a2 + 72);
    *uint64_t v13 = *v14;
    *(_OWORD *)(a1 + 72) = v17;
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
  }
  objc_super v18 = *(void **)(a2 + 96);
  *(void *)(a1 + 96) = v18;
  id v19 = v18;
  return a1;
}

uint64_t assignWithCopy for AFibBurdenPDFChartProvider(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  uint64_t v10 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40))
  {
    if (v10)
    {
      sub_240A51F9C((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
      goto LABEL_8;
    }
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 16);
  }
  else if (v10)
  {
    *(void *)(a1 + 40) = v10;
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 16, a2 + 16);
    goto LABEL_8;
  }
  long long v11 = *(_OWORD *)(a2 + 16);
  long long v12 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v11;
  *(_OWORD *)(a1 + 32) = v12;
LABEL_8:
  uint64_t v13 = *(void *)(a2 + 80);
  if (!*(void *)(a1 + 80))
  {
    if (v13)
    {
      *(void *)(a1 + 80) = v13;
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 56, a2 + 56);
      goto LABEL_15;
    }
LABEL_14:
    long long v14 = *(_OWORD *)(a2 + 56);
    long long v15 = *(_OWORD *)(a2 + 72);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(_OWORD *)(a1 + 56) = v14;
    *(_OWORD *)(a1 + 72) = v15;
    goto LABEL_15;
  }
  if (!v13)
  {
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 56);
    goto LABEL_14;
  }
  sub_240A51F9C((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
LABEL_15:
  uint64_t v16 = *(void **)(a2 + 96);
  long long v17 = *(void **)(a1 + 96);
  *(void *)(a1 + 96) = v16;
  id v18 = v16;

  return a1;
}

__n128 initializeWithTake for AFibBurdenPDFChartProvider(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for AFibBurdenPDFChartProvider(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  long long v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  if (*(void *)(a1 + 40)) {
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 16);
  }
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  if (*(void *)(a1 + 80)) {
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 56);
  }
  long long v7 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v7;
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  id v9 = *(void **)(a1 + 96);
  *(void *)(a1 + 96) = v8;

  return a1;
}

uint64_t getEnumTagSinglePayload for AFibBurdenPDFChartProvider(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AFibBurdenPDFChartProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFChartProvider()
{
  return &type metadata for AFibBurdenPDFChartProvider;
}

uint64_t sub_240B111BC(uint64_t a1)
{
  v2[25] = a1;
  v2[26] = v1;
  sub_240B13E80(0, &qword_268CA0BF0, MEMORY[0x263F43AC8]);
  v2[27] = swift_task_alloc();
  uint64_t v3 = *(void *)(type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider() - 8);
  v2[28] = v3;
  v2[29] = *(void *)(v3 + 64);
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for AFibBurdenPDFChartPointProviderFactory();
  v2[32] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[33] = v5;
  v2[34] = *(void *)(v5 + 64);
  v2[35] = swift_task_alloc();
  v2[36] = swift_task_alloc();
  uint64_t v6 = sub_240BB2EE0();
  v2[37] = v6;
  v2[38] = *(void *)(v6 - 8);
  v2[39] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_240B113A8, 0, 0);
}

uint64_t sub_240B113A8()
{
  uint64_t v1 = (void **)v0[26];
  id v2 = objc_msgSend(self, sel_hk_gregorianCalendarWithLocalTimeZone);
  sub_240BB2E50();

  sub_240BB2DD0();
  uint64_t v3 = *v1;
  v0[40] = *v1;
  id v4 = v3;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[41] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_240B114B4;
  uint64_t v6 = v0[39];
  return sub_240B8A5D4(v6, (uint64_t)v4, (uint64_t)sub_240A903BC, 0);
}

uint64_t sub_240B114B4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 336) = a1;
  *(void *)(v3 + 344) = v1;
  swift_task_dealloc();
  if (v1) {
    id v4 = sub_240B12578;
  }
  else {
    id v4 = sub_240B115C8;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_240B115C8()
{
  if (*(void *)(*(void *)(v0 + 336) + 16))
  {
    uint64_t v1 = *(void *)(v0 + 288);
    uint64_t v2 = *(void *)(v0 + 256);
    uint64_t v3 = *(void *)(v0 + 208);
    (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 304) + 16))(v1, *(void *)(v0 + 312), *(void *)(v0 + 296));
    id v4 = *(void **)(v3 + 96);
    uint64_t v5 = *(void **)v3;
    *(void *)(v1 + *(int *)(v2 + 20)) = *(void *)v3;
    *(void *)(v1 + *(int *)(v2 + 24)) = v4;
    uint64_t v6 = *(void **)(v3 + 8);
    *(void *)(v0 + 352) = v6;
    id v7 = v4;
    id v8 = v5;
    id v9 = v6;
    sub_240BB2E40();
    sub_240B13E00(v3 + 16, v0 + 120);
    uint64_t v10 = *(void *)(v0 + 144);
    if (v10)
    {
      uint64_t v11 = *(void *)(v0 + 152);
      sub_240A3466C((void *)(v0 + 120), *(void *)(v0 + 144));
      long long v12 = (void *)swift_task_alloc();
      *(void *)(v0 + 360) = v12;
      void *v12 = v0;
      v12[1] = sub_240B11A60;
      uint64_t v13 = v10;
      uint64_t v14 = v11;
LABEL_9:
      return MEMORY[0x270F33470](v13, v14);
    }
    sub_240B13F2C(v0 + 120);
    *(void *)(v0 + 384) = 0;
    sub_240B13E00(*(void *)(v0 + 208) + 56, v0 + 160);
    uint64_t v20 = *(void *)(v0 + 184);
    if (v20)
    {
      uint64_t v21 = *(void *)(v0 + 192);
      sub_240A3466C((void *)(v0 + 160), *(void *)(v0 + 184));
      uint64_t v22 = (void *)swift_task_alloc();
      *(void *)(v0 + 392) = v22;
      *uint64_t v22 = v0;
      v22[1] = sub_240B11E60;
      uint64_t v13 = v20;
      uint64_t v14 = v21;
      goto LABEL_9;
    }
    sub_240B13F2C(v0 + 160);
    *(void *)(v0 + 416) = 0;
    id v41 = *(void **)(v0 + 352);
    uint64_t v23 = *(void *)(v0 + 280);
    uint64_t v24 = *(void *)(v0 + 288);
    uint64_t v26 = *(void *)(v0 + 264);
    uint64_t v25 = *(void *)(v0 + 272);
    uint64_t v27 = *(void *)(v0 + 240);
    uint64_t v28 = *(void *)(v0 + 248);
    uint64_t v29 = *(void *)(v0 + 224);
    sub_240B13FA4(*(void *)(v0 + 208), v0 + 16);
    sub_240B13FDC(v24, v23, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartPointProviderFactory);
    sub_240B13FDC(v28, v27, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider);
    unint64_t v30 = (*(unsigned __int8 *)(v26 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
    unint64_t v31 = (v25 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v32 = (*(unsigned __int8 *)(v29 + 80) + v31 + 8) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    uint64_t v33 = swift_allocObject();
    *(void *)(v0 + 424) = v33;
    long long v34 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v33 + 80) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v33 + 96) = v34;
    *(void *)(v33 + 112) = *(void *)(v0 + 112);
    long long v35 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v33 + 16) = *(_OWORD *)(v0 + 16);
    *(_OWORD *)(v33 + 32) = v35;
    long long v36 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v33 + 48) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v33 + 64) = v36;
    sub_240B14818(v23, v33 + v30, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartPointProviderFactory);
    *(void *)(v33 + v31) = v41;
    sub_240B14818(v27, v33 + v32, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider);
    id v37 = v41;
    uint64_t v38 = (void *)swift_task_alloc();
    *(void *)(v0 + 432) = v38;
    uint64_t v39 = sub_240BB27F0();
    *uint64_t v38 = v0;
    v38[1] = sub_240B121AC;
    uint64_t v40 = *(void *)(v0 + 336);
    return MEMORY[0x270F32550](&unk_268CA0C90, v33, v40, v39, &type metadata for AFibBurdenPDFChartPage);
  }
  else
  {
    long long v15 = *(void **)(v0 + 320);
    uint64_t v16 = *(void *)(v0 + 200);
    (*(void (**)(void, void))(*(void *)(v0 + 304) + 8))(*(void *)(v0 + 312), *(void *)(v0 + 296));

    swift_bridgeObjectRelease();
    uint64_t v17 = sub_240BB3CF0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
}

uint64_t sub_240B11A60(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 368) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_240B12644;
  }
  else
  {
    *(void *)(v4 + 376) = a1;
    uint64_t v5 = sub_240B11B90;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_240B11B90()
{
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 120);
  *(void *)(v0 + 384) = *(void *)(v0 + 376);
  sub_240B13E00(*(void *)(v0 + 208) + 56, v0 + 160);
  uint64_t v1 = *(void *)(v0 + 184);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 192);
    sub_240A3466C((void *)(v0 + 160), *(void *)(v0 + 184));
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 392) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_240B11E60;
    return MEMORY[0x270F33470](v1, v2);
  }
  else
  {
    sub_240B13F2C(v0 + 160);
    *(void *)(v0 + 416) = 0;
    uint64_t v23 = *(void **)(v0 + 352);
    uint64_t v4 = *(void *)(v0 + 280);
    uint64_t v5 = *(void *)(v0 + 288);
    uint64_t v7 = *(void *)(v0 + 264);
    uint64_t v6 = *(void *)(v0 + 272);
    uint64_t v8 = *(void *)(v0 + 240);
    uint64_t v9 = *(void *)(v0 + 248);
    uint64_t v10 = *(void *)(v0 + 224);
    sub_240B13FA4(*(void *)(v0 + 208), v0 + 16);
    sub_240B13FDC(v5, v4, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartPointProviderFactory);
    sub_240B13FDC(v9, v8, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider);
    unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    unint64_t v12 = (v6 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + v12 + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v14 = swift_allocObject();
    *(void *)(v0 + 424) = v14;
    long long v15 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v14 + 80) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v14 + 96) = v15;
    *(void *)(v14 + 112) = *(void *)(v0 + 112);
    long long v16 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v14 + 16) = *(_OWORD *)(v0 + 16);
    *(_OWORD *)(v14 + 32) = v16;
    long long v17 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v14 + 48) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v14 + 64) = v17;
    sub_240B14818(v4, v14 + v11, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartPointProviderFactory);
    *(void *)(v14 + v12) = v23;
    sub_240B14818(v8, v14 + v13, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider);
    id v18 = v23;
    id v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 432) = v19;
    uint64_t v20 = sub_240BB27F0();
    *id v19 = v0;
    v19[1] = sub_240B121AC;
    uint64_t v21 = *(void *)(v0 + 336);
    return MEMORY[0x270F32550](&unk_268CA0C90, v14, v21, v20, &type metadata for AFibBurdenPDFChartPage);
  }
}

uint64_t sub_240B11E60(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 400) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_240B1276C;
  }
  else
  {
    *(void *)(v4 + 408) = a1;
    uint64_t v5 = sub_240B11F98;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_240B11F98()
{
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 160);
  *(void *)(v0 + 416) = *(void *)(v0 + 408);
  uint64_t v20 = *(void **)(v0 + 352);
  uint64_t v1 = *(void *)(v0 + 280);
  uint64_t v2 = *(void *)(v0 + 288);
  uint64_t v4 = *(void *)(v0 + 264);
  uint64_t v3 = *(void *)(v0 + 272);
  uint64_t v5 = *(void *)(v0 + 240);
  uint64_t v6 = *(void *)(v0 + 248);
  uint64_t v7 = *(void *)(v0 + 224);
  sub_240B13FA4(*(void *)(v0 + 208), v0 + 16);
  sub_240B13FDC(v2, v1, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartPointProviderFactory);
  sub_240B13FDC(v6, v5, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider);
  unint64_t v8 = (*(unsigned __int8 *)(v4 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v9 = (v3 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + v9 + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v0 + 424) = v11;
  long long v12 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v11 + 80) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v11 + 96) = v12;
  *(void *)(v11 + 112) = *(void *)(v0 + 112);
  long long v13 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v11 + 16) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v11 + 32) = v13;
  long long v14 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v11 + 48) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v11 + 64) = v14;
  sub_240B14818(v1, v11 + v8, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartPointProviderFactory);
  *(void *)(v11 + v9) = v20;
  sub_240B14818(v5, v11 + v10, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider);
  id v15 = v20;
  long long v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 432) = v16;
  uint64_t v17 = sub_240BB27F0();
  *long long v16 = v0;
  v16[1] = sub_240B121AC;
  uint64_t v18 = *(void *)(v0 + 336);
  return MEMORY[0x270F32550](&unk_268CA0C90, v11, v18, v17, &type metadata for AFibBurdenPDFChartPage);
}

uint64_t sub_240B121AC(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 440) = a1;
  *(void *)(v3 + 448) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_240B12894;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v4 = sub_240B12320;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_240B12320()
{
  if (qword_268C9E688 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[55];
  uint64_t v2 = (void *)v0[40];
  uint64_t v3 = v0[38];
  uint64_t v13 = v0[37];
  uint64_t v14 = v0[39];
  uint64_t v11 = (void *)v0[44];
  uint64_t v12 = v0[36];
  uint64_t v10 = v0[31];
  uint64_t v4 = v0[27];
  uint64_t v5 = v0[25];
  sub_240BB3C80();
  uint64_t v6 = sub_240BB3C90();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 0, 1, v6);
  sub_240AF2018(v1);
  swift_bridgeObjectRelease();
  sub_240BB3CE0();

  sub_240B14384(v10, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider);
  sub_240B14384(v12, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartPointProviderFactory);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v14, v13);
  uint64_t v7 = sub_240BB3CF0();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 0, 1, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_240B12578()
{
  uint64_t v1 = *(void *)(v0 + 312);
  uint64_t v2 = *(void *)(v0 + 296);
  uint64_t v3 = *(void *)(v0 + 304);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_240B12644()
{
  uint64_t v1 = *(void **)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 296);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v5 = *(void *)(v0 + 288);
  uint64_t v6 = *(void *)(v0 + 248);

  sub_240B14384(v6, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider);
  sub_240B14384(v5, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartPointProviderFactory);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 120);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_240B1276C()
{
  uint64_t v1 = *(void **)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 296);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v5 = *(void *)(v0 + 288);
  uint64_t v6 = *(void *)(v0 + 248);

  sub_240B14384(v6, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider);
  sub_240B14384(v5, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartPointProviderFactory);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 160);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_240B12894()
{
  uint64_t v1 = *(void **)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 296);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v5 = *(void *)(v0 + 288);
  uint64_t v6 = *(void *)(v0 + 248);

  sub_240B14384(v6, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider);
  sub_240B14384(v5, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartPointProviderFactory);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_240B129A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[16] = a5;
  v6[17] = a6;
  v6[14] = a3;
  v6[15] = a4;
  v6[12] = a1;
  v6[13] = a2;
  return MEMORY[0x270FA2498](sub_240B129D0, 0, 0);
}

uint64_t sub_240B129D0()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = (void *)v0[16];
  v0[5] = type metadata accessor for AFibBurdenPDFChartPointProviderFactory();
  v0[6] = (uint64_t)&off_26F50A7C0;
  uint64_t v3 = sub_240A23B08(v0 + 2);
  sub_240B13FDC(v1, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartPointProviderFactory);
  v0[10] = (uint64_t)&type metadata for AFibBurdenPDFChartFactory;
  v0[11] = (uint64_t)&off_26F50C828;
  v0[7] = (uint64_t)v2;
  id v4 = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[18] = (uint64_t)v5;
  *uint64_t v5 = v0;
  v5[1] = sub_240B12AE0;
  uint64_t v6 = v0[17];
  uint64_t v7 = v0[13];
  return sub_240B12CBC(v7, (uint64_t)(v0 + 2), (uint64_t)(v0 + 7), v6);
}

uint64_t sub_240B12AE0(uint64_t a1, double a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 152) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_240B12C4C;
  }
  else
  {
    *(double *)(v6 + 160) = a2;
    *(void *)(v6 + 168) = a1;
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v6 + 56);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v6 + 16);
    uint64_t v7 = sub_240B12C20;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_240B12C20()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void **)(v0 + 96);
  void *v2 = *(void *)(v0 + 168);
  v2[1] = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_240B12C4C()
{
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 56);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_240B12CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[28] = a4;
  v5[29] = v4;
  v5[26] = a2;
  v5[27] = a3;
  v5[25] = a1;
  uint64_t v6 = sub_240BB27F0();
  v5[30] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[31] = v7;
  v5[32] = *(void *)(v7 + 64);
  v5[33] = swift_task_alloc();
  uint64_t v8 = sub_240BB2CF0();
  v5[34] = v8;
  v5[35] = *(void *)(v8 - 8);
  v5[36] = swift_task_alloc();
  sub_240B143E4(0, &qword_268CA0CA0, (uint64_t (*)(uint64_t))sub_240A84524, (uint64_t (*)(void))sub_240A84730, MEMORY[0x263EFCD78]);
  v5[37] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v5[38] = v10;
  v5[39] = *(void *)(v10 + 64);
  v5[40] = swift_task_alloc();
  v5[41] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_240B12EA0, 0, 0);
}

uint64_t sub_240B12EA0()
{
  uint64_t v1 = *(void *)(v0 + 328);
  uint64_t v23 = *(void *)(v0 + 320);
  uint64_t v2 = *(void *)(v0 + 288);
  uint64_t v21 = *(void *)(v0 + 304);
  uint64_t v22 = *(void *)(v0 + 296);
  uint64_t v3 = *(void *)(v0 + 280);
  uint64_t v4 = *(void *)(v0 + 264);
  uint64_t v24 = *(void *)(v0 + 256);
  uint64_t v5 = *(void *)(v0 + 240);
  uint64_t v6 = *(void *)(v0 + 248);
  uint64_t v25 = v5;
  uint64_t v17 = *(void *)(v0 + 232);
  uint64_t v18 = *(void *)(v0 + 272);
  uint64_t v20 = *(void *)(v0 + 216);
  uint64_t v7 = *(void *)(v0 + 200);
  uint64_t v19 = *(void *)(v0 + 208);
  sub_240BB27D0();
  sub_240A8337C(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v18);
  sub_240B13FA4(v17, v0 + 16);
  sub_240A1E37C(v19, v0 + 120);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v7, v5);
  sub_240A1E37C(v20, v0 + 160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v23, v1, v22);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 160) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v9 = (v24 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (*(unsigned __int8 *)(v21 + 80) + v9 + 40) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v0 + 336) = v11;
  long long v12 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v11 + 80) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v11 + 96) = v12;
  *(void *)(v11 + 112) = *(void *)(v0 + 112);
  long long v13 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v11 + 16) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v11 + 32) = v13;
  long long v14 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v11 + 48) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v11 + 64) = v14;
  sub_240A37388((long long *)(v0 + 120), v11 + 120);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))(v11 + v8, v4, v25);
  sub_240A37388((long long *)(v0 + 160), v11 + v9);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v21 + 32))(v11 + v10, v23, v22);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 344) = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_240B13140;
  return MEMORY[0x270F32550](&unk_268CA0CB0, v11, &unk_26F5035C8, &type metadata for AFibBurdenPDFChartType, &type metadata for AFibBurdenPDFChartPage.Element);
}

uint64_t sub_240B13140(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 352) = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
  {
    uint64_t v5 = sub_240B13360;
  }
  else
  {
    *(void *)(v4 + 360) = a1;
    uint64_t v5 = sub_240B1328C;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_240B1328C()
{
  uint64_t v1 = v0[41];
  uint64_t v2 = v0[37];
  uint64_t v3 = v0[38];
  double v4 = sub_240B43BEC(v0[45]);
  uint64_t v6 = v5;
  double v7 = v4;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v8 = (uint64_t (*)(uint64_t, __n128))v0[1];
  v9.n128_f64[0] = v7;
  return v8(v6, v9);
}

uint64_t sub_240B13360()
{
  (*(void (**)(void, void))(v0[38] + 8))(v0[41], v0[37]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_240B13408(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 248) = a6;
  *(void *)(v7 + 256) = a7;
  *(void *)(v7 + 232) = a4;
  *(void *)(v7 + 240) = a5;
  *(void *)(v7 + 216) = a1;
  *(void *)(v7 + 224) = a3;
  *(void *)(v7 + 264) = type metadata accessor for AFibBurdenPDFChartHeaderContentProvider();
  *(void *)(v7 + 272) = swift_task_alloc();
  *(void *)(v7 + 280) = swift_task_alloc();
  uint64_t v9 = sub_240BB27F0();
  *(void *)(v7 + 288) = v9;
  *(void *)(v7 + 296) = *(void *)(v9 - 8);
  *(void *)(v7 + 304) = swift_task_alloc();
  *(void *)(v7 + 312) = type metadata accessor for AFibBurdenPDFChartViewModel();
  *(void *)(v7 + 320) = swift_task_alloc();
  *(void *)(v7 + 328) = swift_task_alloc();
  *(unsigned char *)(v7 + 376) = *a2;
  return MEMORY[0x270FA2498](sub_240B1355C, 0, 0);
}

uint64_t sub_240B1355C()
{
  uint64_t v1 = **(void **)(v0 + 224);
  id v2 = sub_240B6B774(v1, *(unsigned char *)(v0 + 376));
  *(void *)(v0 + 336) = v2;
  id v3 = sub_240B6BA30((uint64_t)v2, v1, *(unsigned char *)(v0 + 376));
  *(void *)(v0 + 344) = v3;
  id v4 = v3;
  char v5 = *(unsigned char *)(v0 + 376);
  sub_240A3466C(*(void **)(v0 + 232), *(void *)(*(void *)(v0 + 232) + 24));
  sub_240B61EB8(v5, (uint64_t *)(v0 + 16));
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 48);
  sub_240A3466C((void *)(v0 + 16), v6);
  uint64_t v11 = (uint64_t (*)(uint64_t, id, uint64_t, uint64_t))(*(void *)(v7 + 8) + **(int **)(v7 + 8));
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 352) = v8;
  *unint64_t v8 = v0;
  v8[1] = sub_240B13744;
  uint64_t v9 = *(void *)(v0 + 240);
  return v11(v9, v4, v6, v7);
}

uint64_t sub_240B13744(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 360) = v1;
  swift_task_dealloc();
  if (v1)
  {
    char v5 = sub_240B13CB4;
  }
  else
  {
    *(void *)(v4 + 368) = a1;
    char v5 = sub_240B1386C;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_240B1386C()
{
  uint64_t v46 = v0;
  uint64_t v1 = *(void *)(v0 + 368);
  uint64_t v40 = (long long *)(v0 + 136);
  id v2 = *(void **)(v0 + 336);
  uint64_t v38 = *(void **)(v0 + 344);
  uint64_t v3 = *(void *)(v0 + 320);
  uint64_t v4 = *(void *)(v0 + 304);
  char v5 = *(int **)(v0 + 312);
  uint64_t v7 = *(void *)(v0 + 288);
  uint64_t v6 = *(void *)(v0 + 296);
  uint64_t v42 = *(unsigned char **)(v0 + 280);
  uint64_t v33 = *(void *)(v0 + 264);
  uint64_t v34 = *(void *)(v0 + 328);
  uint64_t v37 = *(void *)(v0 + 256);
  long long v35 = *(unsigned char **)(v0 + 272);
  long long v36 = *(void **)(v0 + 248);
  uint64_t v32 = *(void *)(v0 + 224);
  uint64_t v41 = *(void *)(v0 + 216);
  unint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  int v31 = *(unsigned __int8 *)(v0 + 376);
  v8(v4, *(void *)(v0 + 240), v7);
  v8(v3, v4, v7);
  uint64_t v43 = v3;
  *(void *)(v3 + v5[5]) = v1;
  *(void *)(v3 + v5[6]) = v38;
  *(void *)(v3 + v5[7]) = v2;
  uint64_t v9 = v2;
  id v39 = v38;
  uint64_t v10 = sub_240BB4850();
  uint64_t v11 = sub_240B97A10(v10, v9, v4);
  uint64_t v13 = v12;
  uint64_t v15 = v14;

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v7);
  long long v16 = (uint64_t *)(v43 + v5[8]);
  *long long v16 = v11;
  v16[1] = v13;
  long long v16[2] = v15;
  sub_240B14818(v43, v34, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartViewModel);
  uint64_t v17 = *(void **)(v32 + 8);
  sub_240B13FDC(v34, (uint64_t)&v42[*(int *)(v33 + 20)], (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartViewModel);
  unsigned char *v42 = v31;
  sub_240B13FDC((uint64_t)v42, (uint64_t)v35, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartHeaderContentProvider);
  uint64_t v18 = v9;
  id v19 = v17;
  sub_240B29CB4(v35, (uint64_t)v44);
  uint64_t v20 = (void **)sub_240A3466C(v36, v36[3]);
  sub_240B143E4(0, &qword_268CA0CA0, (uint64_t (*)(uint64_t))sub_240A84524, (uint64_t (*)(void))sub_240A84730, MEMORY[0x263EFCD78]);
  uint64_t v22 = v21;
  *(void *)(v0 + 120) = v21;
  *(void *)(v0 + 128) = sub_240B14880();
  uint64_t v23 = sub_240A23B08((uint64_t *)(v0 + 96));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v23, v37, v22);
  uint64_t v24 = *v20;
  uint64_t v25 = v0 + 56;
  sub_240BB0494(v31, v34, v0 + 96, v9, v31 != 2, v19, v24, (uint64_t *)(v0 + 56));
  sub_240B1491C(v0 + 96);
  if (v31) {
    double v26 = 80.0;
  }
  else {
    double v26 = 139.0;
  }
  sub_240A1E37C(v25, (uint64_t)v40);
  *(void *)(v0 + 200) = &type metadata for AFibBurdenPDFChartCurrentValueView;
  *(void *)(v0 + 208) = sub_240B14970();
  uint64_t v27 = swift_allocObject();
  *(void *)(v0 + 176) = v27;
  long long v28 = v44[1];
  *(_OWORD *)(v27 + 16) = v44[0];
  *(_OWORD *)(v27 + 32) = v28;
  *(void *)(v27 + 48) = v45;

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v25);
  sub_240B14384((uint64_t)v42, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartHeaderContentProvider);
  sub_240B14384(v34, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartViewModel);
  sub_240A37388(v40, v41 + 40);
  sub_240A37388((long long *)(v0 + 176), v41);
  *(double *)(v41 + 80) = v26;
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
  return v29();
}

uint64_t sub_240B13CB4()
{
  uint64_t v1 = *(void **)(v0 + 336);

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_240B13D68(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_240AA62AC;
  return sub_240B111BC(a1);
}

uint64_t sub_240B13E00(uint64_t a1, uint64_t a2)
{
  sub_240B13E80(0, &qword_268CA0C80, (void (*)(uint64_t))sub_240B13ED4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_240B13E80(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240BB75E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_240B13ED4()
{
  unint64_t result = qword_268C9FDC8;
  if (!qword_268C9FDC8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C9FDC8);
  }
  return result;
}

uint64_t sub_240B13F2C(uint64_t a1)
{
  sub_240B13E80(0, &qword_268CA0C80, (void (*)(uint64_t))sub_240B13ED4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240B13FA4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_240B13FDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_240B14044()
{
  uint64_t v1 = type metadata accessor for AFibBurdenPDFChartPointProviderFactory();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = *(void *)(type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);

  if (*(void *)(v0 + 56)) {
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 32);
  }
  if (*(void *)(v0 + 96)) {
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 72);
  }
  uint64_t v7 = v2 | v5 | 7;
  uint64_t v8 = (v2 + 120) & ~v2;
  unint64_t v9 = (v3 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = (v9 + v5 + 8) & ~v5;
  uint64_t v11 = v10 + v6;

  uint64_t v12 = sub_240BB2EE0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  v13(v0 + v8, v12);

  v13(v0 + v10, v12);

  return MEMORY[0x270FA0238](v0, v11, v7);
}

uint64_t sub_240B1420C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v3;
  uint64_t v7 = *(void *)(type metadata accessor for AFibBurdenPDFChartPointProviderFactory() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider() - 8)
                           + 80);
  uint64_t v11 = v9 + v10 + 8;
  uint64_t v12 = v2 + 16;
  uint64_t v13 = v2 + v8;
  uint64_t v14 = *(void *)(v2 + v9);
  uint64_t v15 = v2 + (v11 & ~v10);
  long long v16 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v16;
  *long long v16 = v5;
  v16[1] = sub_240AA62AC;
  v16[16] = v14;
  v16[17] = v15;
  v16[14] = v12;
  v16[15] = v13;
  v16[12] = a1;
  v16[13] = a2;
  return MEMORY[0x270FA2498](sub_240B129D0, 0, 0);
}

uint64_t sub_240B14384(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_240B143E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_240B14464()
{
  uint64_t v14 = sub_240BB27F0();
  uint64_t v1 = *(void *)(v14 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  sub_240B143E4(0, &qword_268CA0CA0, (uint64_t (*)(uint64_t))sub_240A84524, (uint64_t (*)(void))sub_240A84730, MEMORY[0x263EFCD78]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);

  if (*(void *)(v0 + 56)) {
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 32);
  }
  if (*(void *)(v0 + 96)) {
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 72);
  }
  uint64_t v9 = v2 | v7 | 7;
  uint64_t v10 = (v2 + 160) & ~v2;
  unint64_t v11 = (v3 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = (v11 + v7 + 40) & ~v7;

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 120);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v10, v14);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + v11);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v12, v5);

  return MEMORY[0x270FA0238](v0, v12 + v8, v9);
}

uint64_t sub_240B14654(uint64_t a1, unsigned char *a2)
{
  uint64_t v5 = v3;
  uint64_t v7 = *(void *)(sub_240BB27F0() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 160) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_240B143E4(0, &qword_268CA0CA0, (uint64_t (*)(uint64_t))sub_240A84524, (uint64_t (*)(void))sub_240A84730, MEMORY[0x263EFCD78]);
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  uint64_t v12 = v9 + v11 + 40;
  uint64_t v13 = v2 + 16;
  uint64_t v14 = v2 + 120;
  uint64_t v15 = v2 + v8;
  uint64_t v16 = v2 + v9;
  uint64_t v17 = v2 + (v12 & ~v11);
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v18;
  *uint64_t v18 = v5;
  v18[1] = sub_240B149FC;
  return sub_240B13408(a1, a2, v13, v14, v15, v16, v17);
}

uint64_t sub_240B14818(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_240B14880()
{
  unint64_t result = qword_268CA0CB8;
  if (!qword_268CA0CB8)
  {
    sub_240B143E4(255, &qword_268CA0CA0, (uint64_t (*)(uint64_t))sub_240A84524, (uint64_t (*)(void))sub_240A84730, MEMORY[0x263EFCD78]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0CB8);
  }
  return result;
}

uint64_t sub_240B1491C(uint64_t a1)
{
  return a1;
}

unint64_t sub_240B14970()
{
  unint64_t result = qword_268CA0CC0;
  if (!qword_268CA0CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0CC0);
  }
  return result;
}

uint64_t sub_240B149C4()
{
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 16);

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t type metadata accessor for AFibBurdenPromotionTileActionHandler()
{
  uint64_t result = qword_268CA0CD0;
  if (!qword_268CA0CD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240B14A4C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_240B14A98()
{
  uint64_t v1 = sub_240BB4EC0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = qword_268CA0CC8;
  if (*(void *)(v0 + qword_268CA0CC8))
  {
    uint64_t v6 = *(void *)(v0 + qword_268CA0CC8);
  }
  else
  {
    sub_240BB5250();
    sub_240BB4E90();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    sub_240A3466C(v10, v10[3]);
    sub_240BB4E10();
    type metadata accessor for AFibBurdenSettingsManager();
    uint64_t v6 = swift_allocObject();
    if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_240BB7900()) {
      unint64_t v7 = sub_240A71C94(MEMORY[0x263F8EE78]);
    }
    else {
      unint64_t v7 = MEMORY[0x263F8EE88];
    }
    *(void *)(v6 + 24) = v7;
    sub_240BB6DE0();
    sub_240BB3440();
    swift_allocObject();
    *(void *)(v6 + 16) = sub_240BB3400();
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v10);
    *(void *)(v0 + v5) = v6;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v6;
}

uint64_t sub_240B14C80()
{
  uint64_t ObjectType = (void *)swift_getObjectType();
  uint64_t v57 = (void (*)(char *, char *, uint64_t))type metadata accessor for AFibBurdenOnboardingPresentationContext();
  MEMORY[0x270FA5388](v57);
  uint64_t v64 = (uint64_t)&v54 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_240BB4EC0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v59 = (char *)&v54 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v54 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v54 - v12;
  uint64_t v14 = sub_240BB3E60();
  id v62 = *(void **)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  id v19 = (char *)&v54 - v18;
  uint64_t v67 = v0;
  sub_240BB5250();
  sub_240BB4E90();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v61 = v13;
  uint64_t v66 = v2;
  uint64_t v65 = v3 + 8;
  uint64_t v63 = v20;
  v20(v13, v2);
  sub_240A3466C(v72, v73);
  uint64_t v68 = v19;
  sub_240BB4E20();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v72);
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v60 = v17;
  uint64_t v21 = sub_240BB5990();
  sub_240A395FC(v21, (uint64_t)qword_26AFDEC70);
  uint64_t v22 = sub_240BB5970();
  os_log_type_t v23 = sub_240BB71A0();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v56 = v14;
  if (v24)
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    v72[0] = v26;
    *(_DWORD *)uint64_t v25 = 136446466;
    uint64_t v27 = sub_240BB7C80();
    v71[0] = sub_240A38940(v27, v28, v72);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2082;
    v71[0] = sub_240A38940(0x2928706154646964, 0xE800000000000000, v72);
    sub_240BB75F0();
    _os_log_impl(&dword_240A1B000, v22, v23, "[%{public}s.%{public}s]: Presenting onboarding", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v26, -1, -1);
    MEMORY[0x24560B930](v25, -1, -1);
  }

  sub_240BB5250();
  sub_240BB4E90();
  uint64_t v29 = v11;
  uint64_t v30 = v66;
  int v31 = v63;
  v63(v29, v66);
  sub_240A3466C(v72, v73);
  uint64_t ObjectType = (void *)sub_240BB4E10();
  uint64_t v32 = v59;
  sub_240BB5250();
  uint64_t v33 = (void *)sub_240BB4EA0();
  v31(v32, v30);
  sub_240BB7240();

  sub_240BB5250();
  sub_240BB4E90();
  v31(v6, v30);
  sub_240A3466C(v70, v70[3]);
  sub_240BB4E30();
  uint64_t v34 = v62;
  long long v35 = (void (*)(uint64_t, char *, uint64_t))v62[2];
  uint64_t v36 = v56;
  v35(v64, v68, v56);
  swift_storeEnumTagMultiPayload();
  sub_240B15ABC(0, &qword_268C9F790, MEMORY[0x263F43C08], MEMORY[0x263F8E0F8]);
  uint64_t v37 = v34[9];
  unint64_t v38 = (*((unsigned __int8 *)v34 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v34 + 80);
  uint64_t v39 = 2 * v37;
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_240BBD020;
  uint64_t v41 = (char *)(v40 + v38);
  uint64_t v42 = (void (*)(void))v34[13];
  ((void (*)(unint64_t, void, uint64_t))v42)(v40 + v38, *MEMORY[0x263F43BA0], v36);
  uint64_t v43 = &v41[v37];
  ((void (*)(char *, void, uint64_t))v42)(v43, *MEMORY[0x263F43BE0], v36);
  uint64_t v55 = &v41[v39];
  v42();
  uint64_t v44 = v60;
  uint64_t v59 = v41;
  uint64_t v57 = (void (*)(char *, char *, uint64_t))v35;
  v35((uint64_t)v60, v41, v36);
  sub_240B15B20(&qword_268C9F798, MEMORY[0x263F43C08]);
  LOBYTE(v38) = sub_240BB6D90();
  uint64_t v45 = (void *)v34[1];
  sub_240BB4850();
  id v62 = v45;
  ((void (*)(char *, uint64_t))v45)(v44, v36);
  char v46 = 1;
  if ((v38 & 1) == 0)
  {
    v57(v44, v43, v36);
    char v47 = sub_240BB6D90();
    uint64_t v48 = (void (*)(char *, uint64_t))v62;
    ((void (*)(char *, uint64_t))v62)(v44, v36);
    if (v47)
    {
      char v46 = 1;
    }
    else
    {
      v57(v44, v55, v36);
      char v46 = sub_240BB6D90();
      v48(v44, v36);
    }
  }
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  id v49 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenOnboardingController());
  uint64_t v50 = sub_240B4A0D8(ObjectType, (uint64_t)v71, (uint64_t)v69, v64, v46 & 1, 2);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v70);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v72);
  uint64_t v51 = v61;
  sub_240BB5250();
  uint64_t v52 = (void *)sub_240BB4EA0();
  v63(v51, v66);
  objc_msgSend(v52, sel_presentViewController_animated_completion_, v50, 1, 0);

  return ((uint64_t (*)(char *, uint64_t))v62)(v68, v36);
}

uint64_t sub_240B15568(uint64_t a1)
{
  uint64_t v3 = sub_240BB4EC0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (char *)objc_allocWithZone(v1);
  *(void *)&v7[qword_268CA0CC8] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t v8 = sub_240BB5260();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v8;
}

uint64_t sub_240B15674()
{
  return swift_release();
}

id sub_240B15684()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenPromotionTileActionHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240B156BC()
{
  return swift_release();
}

uint64_t sub_240B156CC()
{
  return type metadata accessor for AFibBurdenPromotionTileActionHandler();
}

uint64_t sub_240B156D8()
{
  uint64_t ObjectType = swift_getObjectType();
  sub_240B15ABC(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)v12 - v2;
  sub_240A3FB28();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFD7158 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_240A395FC(v5, (uint64_t)qword_26AFDEB68);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  *(void *)(swift_allocObject() + 16) = ObjectType;
  v12[1] = 0;
  sub_240BB5700();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_240B14A98();
  sub_240BB2CE0();
  uint64_t v10 = sub_240BB2CF0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v3, 0, 1, v10);
  sub_240B72054((uint64_t)v3);
  swift_release();
  return sub_240A49B18((uint64_t)v3);
}

uint64_t sub_240B15940()
{
  return 0;
}

uint64_t sub_240B15A14()
{
  return sub_240B15B20(&qword_26AFD7A28, MEMORY[0x263F43E20]);
}

uint64_t sub_240B15A5C()
{
  return sub_240B15B20(&qword_268CA0CE0, (void (*)(uint64_t))type metadata accessor for AFibBurdenPromotionTileActionHandler);
}

uint64_t sub_240B15AA4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B15AB4()
{
  return sub_240B15940();
}

void sub_240B15ABC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_240B15B20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240B15B68(void *a1, void *a2, char a3, uint64_t a4)
{
  return sub_240B15C78(a1, a2, a3, a4, (void (*)(void))type metadata accessor for AFibBurdenNotificationInteractionAnalyticsEvent, &qword_268CA0CF0, (void (*)(uint64_t))type metadata accessor for AFibBurdenNotificationInteractionAnalyticsEvent);
}

uint64_t sub_240B15BF0(void *a1, void *a2, char a3, uint64_t a4)
{
  return sub_240B15C78(a1, a2, a3, a4, (void (*)(void))type metadata accessor for AFibBurdenDataTypeInteractionAnalyticsEvent, &qword_268CA0CE8, (void (*)(uint64_t))type metadata accessor for AFibBurdenDataTypeInteractionAnalyticsEvent);
}

uint64_t sub_240B15C78(void *a1, void *a2, char a3, uint64_t a4, void (*a5)(void), unint64_t *a6, void (*a7)(uint64_t))
{
  v51[1] = *(id *)MEMORY[0x263EF8340];
  id v12 = objc_msgSend(a1, sel_featureAvailabilityProviderForIdentifier_, a2);
  if (v12)
  {
    v51[0] = 0;
    id v13 = objc_msgSend(v12, sel_featureOnboardingRecordWithError_, v51);
    if (v13)
    {
      uint64_t v14 = v13;
      id v15 = v51[0];
      id v16 = objc_msgSend(v14, sel_onboardingCompletion);
      if (v16)
      {
        uint64_t v17 = v16;
        objc_msgSend(v16, sel_version);
        id v18 = (id)HKHRAFibBurdenAnalyticsPropertyValueForVersion();
        uint64_t v19 = sub_240BB6DE0();
        sub_240BB50A0();
      }
      else if (a3)
      {
        sub_240BB50A0();

        return 0;
      }
      else
      {
        uint64_t v44 = sub_240BB5970();
        os_log_type_t v45 = sub_240BB7190();
        if (os_log_type_enabled(v44, v45))
        {
          char v46 = (uint8_t *)swift_slowAlloc();
          char v47 = (void *)swift_slowAlloc();
          v51[0] = v47;
          *(_DWORD *)char v46 = 136446210;
          a5(0);
          sub_240B162A4(0, a6, a7);
          uint64_t v48 = sub_240BB6E10();
          sub_240A38940(v48, v49, (uint64_t *)v51);
          sub_240BB75F0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_240A1B000, v44, v45, "[%{public}s] analytics event logged but feature not onboarded", v46, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24560B930](v47, -1, -1);
          MEMORY[0x24560B930](v46, -1, -1);
        }

        uint64_t v19 = sub_240BB6DE0();
        sub_240BB50A0();
      }
    }
    else
    {
      id v31 = v51[0];
      uint64_t v32 = (void *)sub_240BB2A50();

      swift_willThrow();
      id v33 = v32;
      id v34 = v32;
      long long v35 = sub_240BB5970();
      os_log_type_t v36 = sub_240BB7180();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = swift_slowAlloc();
        unint64_t v38 = (void *)swift_slowAlloc();
        v51[0] = v38;
        *(_DWORD *)uint64_t v37 = 136446466;
        a5(0);
        sub_240B162A4(0, a6, a7);
        uint64_t v39 = sub_240BB6E10();
        sub_240A38940(v39, v40, (uint64_t *)v51);
        sub_240BB75F0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v37 + 12) = 2082;
        id v41 = v32;
        sub_240A49AC0();
        uint64_t v42 = sub_240BB6E10();
        sub_240A38940(v42, v43, (uint64_t *)v51);
        sub_240BB75F0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_240A1B000, v35, v36, "[%{public}s] Error retrieving onboarding record: %{public}s", (uint8_t *)v37, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24560B930](v38, -1, -1);
        MEMORY[0x24560B930](v37, -1, -1);
      }
      else
      {
      }
      uint64_t v19 = sub_240BB6DE0();

      sub_240BB50A0();
    }
  }
  else
  {
    id v20 = a2;
    uint64_t v21 = sub_240BB5970();
    os_log_type_t v22 = sub_240BB7190();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      BOOL v24 = (void *)swift_slowAlloc();
      v51[0] = v24;
      *(_DWORD *)uint64_t v23 = 136446466;
      a5(0);
      sub_240B162A4(0, a6, a7);
      uint64_t v25 = sub_240BB6E10();
      sub_240A38940(v25, v26, (uint64_t *)v51);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2082;
      id v27 = v20;
      uint64_t v28 = sub_240BB73A0();
      unint64_t v30 = v29;

      sub_240A38940(v28, v30, (uint64_t *)v51);
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v21, v22, "[%{public}s] No feature availability manager for feature %{public}s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v24, -1, -1);
      MEMORY[0x24560B930](v23, -1, -1);
    }
    else
    {
    }
    return sub_240BB6DE0();
  }
  return v19;
}

uint64_t sub_240B162A4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a2;
  if (!*a2)
  {
    a3(255);
    uint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

id sub_240B162E4()
{
  return sub_240B16544(&OBJC_IVAR____TtC5Heart17TitleSubtitleView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_240B16304);
}

id sub_240B16304()
{
  uint64_t v0 = sub_240BB5B20();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_240BB5BD0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  objc_msgSend(v8, sel_setNumberOfLines_, 0);
  objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v8, sel_setAdjustsFontForContentSizeCategory_, 1);
  sub_240BB5B90();
  sub_240BB5B40();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v9 = (void *)sub_240BB5AF0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v8, sel_setFont_, v9);

  id v10 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v8, sel_setTextColor_, v10);

  return v8;
}

id sub_240B16524()
{
  return sub_240B16544(&OBJC_IVAR____TtC5Heart17TitleSubtitleView____lazy_storage___subtitleLabel, (uint64_t (*)(void))sub_240B165A4);
}

id sub_240B16544(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v6 = (void *)a2();
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_240B165A4()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  id v1 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x263F83570]);
  objc_msgSend(v0, sel_setFont_, v1);

  id v2 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  return v0;
}

void sub_240B1669C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Heart17TitleSubtitleView_item;
  swift_beginAccess();
  sub_240A477B0(v1, (uint64_t)v7);
  if (v7[3])
  {
    sub_240A47830();
    if (swift_dynamicCast())
    {
      id v2 = sub_240B162E4();
      uint64_t v3 = (void *)sub_240BB6DA0();
      objc_msgSend(v2, sel_setText_, v3);

      id v4 = sub_240B16524();
      id v5 = (void *)sub_240BB6DA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      objc_msgSend(v4, sel_setText_, v5);

      return;
    }
  }
  else
  {
    sub_240A478C0((uint64_t)v7);
  }
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  sub_240BB77C0();
  swift_bridgeObjectRelease();
  v7[0] = 0xD000000000000026;
  v7[1] = 0x8000000240BCAB50;
  sub_240A477B0(v1, (uint64_t)v6);
  sub_240A879C4();
  sub_240BB6E20();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB78D0();
  __break(1u);
}

uint64_t TitleSubtitleView.item.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Heart17TitleSubtitleView_item;
  swift_beginAccess();
  return sub_240A477B0(v3, a1);
}

uint64_t TitleSubtitleView.item.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Heart17TitleSubtitleView_item;
  swift_beginAccess();
  sub_240A479C4(a1, v3);
  swift_endAccess();
  sub_240B1669C();
  return sub_240A478C0(a1);
}

void (*TitleSubtitleView.item.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_240B169A0;
}

void sub_240B169A0(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_240B1669C();
  }
}

id TitleSubtitleView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id TitleSubtitleView.init(frame:)(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC5Heart17TitleSubtitleView____lazy_storage___titleLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC5Heart17TitleSubtitleView____lazy_storage___subtitleLabel] = 0;
  id v9 = &v4[OBJC_IVAR____TtC5Heart17TitleSubtitleView_item];
  id v10 = (objc_class *)type metadata accessor for TitleSubtitleView();
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  v13.receiver = v4;
  v13.super_class = v10;
  id v11 = objc_msgSendSuper2(&v13, sel_initWithFrame_, a1, a2, a3, a4);
  sub_240B16C5C();

  return v11;
}

uint64_t type metadata accessor for TitleSubtitleView()
{
  return self;
}

void sub_240B16C5C()
{
  id v1 = sub_240B162E4();
  objc_msgSend(v0, sel_addSubview_, v1);

  id v2 = sub_240B16524();
  objc_msgSend(v0, sel_addSubview_, v2);

  uint64_t v3 = self;
  sub_240A34E00();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_240BBAF00;
  id v5 = sub_240B162E4();
  id v6 = objc_msgSend(v5, sel_topAnchor);

  id v7 = objc_msgSend(v0, sel_topAnchor);
  id v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v7, 12.0);

  *(void *)(v4 + 32) = v8;
  id v9 = sub_240B162E4();
  id v10 = objc_msgSend(v9, sel_leadingAnchor);

  id v11 = objc_msgSend(v0, sel_leadingAnchor);
  id v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_constant_, v11, 2.0);

  *(void *)(v4 + 40) = v12;
  id v13 = objc_msgSend(v0, sel_trailingAnchor);
  id v14 = sub_240B162E4();
  id v15 = objc_msgSend(v14, sel_trailingAnchor);

  id v16 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v15, 2.0);
  *(void *)(v4 + 48) = v16;
  id v17 = sub_240B16524();
  id v18 = objc_msgSend(v17, sel_topAnchor);

  id v19 = sub_240B162E4();
  id v20 = objc_msgSend(v19, sel_bottomAnchor);

  id v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v20, 6.0);
  *(void *)(v4 + 56) = v21;
  id v22 = sub_240B16524();
  id v23 = objc_msgSend(v22, sel_leadingAnchor);

  id v24 = objc_msgSend(v0, sel_leadingAnchor);
  id v25 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v24);

  *(void *)(v4 + 64) = v25;
  id v26 = sub_240B16524();
  id v27 = objc_msgSend(v26, sel_trailingAnchor);

  id v28 = objc_msgSend(v0, sel_trailingAnchor);
  id v29 = objc_msgSend(v27, sel_constraintLessThanOrEqualToAnchor_, v28);

  *(void *)(v4 + 72) = v29;
  id v30 = objc_msgSend(v0, sel_bottomAnchor);
  id v31 = sub_240B16524();
  id v32 = objc_msgSend(v31, sel_bottomAnchor);

  id v33 = objc_msgSend(v30, sel_constraintEqualToAnchor_constant_, v32, 5.0);
  *(void *)(v4 + 80) = v33;
  sub_240BB6F30();
  sub_240A5D484();
  id v34 = (id)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_activateConstraints_, v34);
}

id TitleSubtitleView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TitleSubtitleView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240B170D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC5Heart17TitleSubtitleView_item;
  swift_beginAccess();
  return sub_240A477B0(v3, a1);
}

uint64_t sub_240B17128(uint64_t a1)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC5Heart17TitleSubtitleView_item;
  swift_beginAccess();
  sub_240A479C4(a1, v3);
  swift_endAccess();
  sub_240B1669C();
  return sub_240A478C0(a1);
}

void (*sub_240B1719C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_240B169A0;
}

unsigned char *sub_240B17200@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result & result[1] & 1;
  return result;
}

char *sub_240B17218()
{
  return sub_240A210A0(*v0);
}

ValueMetadata *type metadata accessor for DataTypeDetailConfiguration.ComponentIdentifier.CardioFitness()
{
  return &type metadata for DataTypeDetailConfiguration.ComponentIdentifier.CardioFitness;
}

uint64_t sub_240B17230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240BB6FE0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_240BB6FD0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_240B19D50(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_240BB6FA0();
    sub_240BB50A0();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_240B173D4(uint64_t a1, int a2, void *a3)
{
  if (a2)
  {
    return swift_continuation_throwingResume();
  }
  else if (a3)
  {
    sub_240A39BC8(0, (unint64_t *)&qword_26AFD99E0);
    swift_allocError();
    *id v5 = a3;
    id v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240B17480(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_240BB4AC0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_240BB4A80();
  uint64_t v36 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v39 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_240BB4C80();
  uint64_t v37 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = *(void **)(v2 + 16);
  sub_240BB4AD0();
  id v14 = v13;
  sub_240BB4AF0();
  *((void *)&v43 + 1) = &_s27CardioFitnessChartComponentVN;
  unint64_t v15 = sub_240B1A2A8();
  *(void *)&long long v42 = v14;
  *((void *)&v42 + 1) = 0xD000000000000012;
  long long v35 = "nboarding state has been reset";
  uint64_t v44 = v15;
  *(void *)&long long v43 = 0x8000000240BD0990;
  id v40 = v14;
  sub_240BB5290();
  swift_bridgeObjectRelease();
  sub_240B1A2FC((uint64_t)&v42);
  sub_240BB4B10();
  uint64_t v44 = 0;
  long long v42 = 0u;
  long long v43 = 0u;
  uint64_t v41 = v10;
  id v16 = v12;
  sub_240BB5290();
  swift_bridgeObjectRelease();
  sub_240B1A2FC((uint64_t)&v42);
  uint64_t v38 = a1;
  sub_240BB4C60();
  uint64_t v17 = sub_240BB4100();
  uint64_t v19 = v18;
  if (v17 == sub_240BB4100() && v19 == v20)
  {
    swift_bridgeObjectRelease_n();
    id v21 = v40;
LABEL_5:
    uint64_t v23 = _s29CardioFitnessSpinnerComponentCMa();
    id v24 = (void *)swift_allocObject();
    v24[2] = 0xD000000000000014;
    v24[3] = 0x8000000240BD09B0;
    v24[4] = 0;
    id v25 = v21;
    sub_240BB3320();
    sub_240BB4A70();
    *((void *)&v43 + 1) = v23;
    uint64_t v44 = sub_240B1A3C0(&qword_268CA0D58, (void (*)(uint64_t))_s29CardioFitnessSpinnerComponentCMa);
    *(void *)&long long v42 = v24;
    uint64_t v26 = *MEMORY[0x263F44388];
    id v27 = v16;
    uint64_t v28 = v36;
    id v34 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
    v34(v7, v26, v4);
    swift_retain();
    sub_240BB5280();
    long long v35 = *(char **)(v5 + 8);
    ((void (*)(char *, uint64_t))v35)(v7, v4);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v42);
    *((void *)&v43 + 1) = v8;
    uint64_t v44 = MEMORY[0x263F44370];
    id v29 = sub_240A23B08((uint64_t *)&v42);
    id v30 = v39;
    (*(void (**)(uint64_t *, char *, uint64_t))(v28 + 16))(v29, v39, v8);
    v34(v7, *MEMORY[0x263F44380], v4);
    sub_240BB5280();
    swift_release();
    ((void (*)(char *, uint64_t))v35)(v7, v4);
    id v31 = v30;
    id v21 = v40;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v8);
    id v16 = v27;
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v42);
    goto LABEL_6;
  }
  char v22 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v21 = v40;
  if (v22) {
    goto LABEL_5;
  }
LABEL_6:
  uint64_t v32 = sub_240BB49D0();

  (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v41);
  return v32;
}

uint64_t type metadata accessor for CardioFitnessDataTypeDetailDataSourceProvider()
{
  return self;
}

id sub_240B179DC()
{
  id result = objc_msgSend(self, sel__quantityTypeWithCode_, 124);
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t sub_240B17A1C(uint64_t a1)
{
  sub_240B1A11C(0, &qword_268CA0D38, MEMORY[0x263EFDDC8]);
  v1[3] = v3;
  v1[4] = *(void *)(v3 - 8);
  v1[5] = swift_task_alloc();
  sub_240B1A11C(0, &qword_268CA0D40, MEMORY[0x263EFDDB8]);
  v1[6] = v4;
  v1[7] = *(void *)(v4 - 8);
  v1[8] = swift_task_alloc();
  v1[2] = a1;
  return MEMORY[0x270FA2498](sub_240B17B74, 0, 0);
}

uint64_t sub_240B17B74()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  sub_240B1A0A0();
  uint64_t v5 = v4;
  uint64_t v6 = sub_240B1A3C0(&qword_268C9EE70, (void (*)(uint64_t))sub_240B1A0A0);
  MEMORY[0x245609650](v5, v6);
  sub_240BB61B0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[9] = v7;
  void *v7 = v0;
  v7[1] = sub_240B17CB8;
  uint64_t v8 = v0[6];
  return MEMORY[0x270EE3CD0](v0 + 11, v8);
}

uint64_t sub_240B17CB8()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_240B17E64;
  }
  else {
    uint64_t v2 = sub_240B17DCC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_240B17DCC()
{
  (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
  uint64_t v1 = *(unsigned __int8 *)(v0 + 88);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_240B17E64()
{
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

void sub_240B17EEC(void *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_240BB4C70();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB4D80();
  sub_240BB4C60();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v8 = sub_240BB4100();
  uint64_t v10 = v9;
  if (v8 == sub_240BB4100() && v10 == v11)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v13 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      sub_240B18350(a1, 0xD000000000000036, 0x8000000240BD08A0);
      return;
    }
  }
  id v14 = (void *)sub_240BB4D50();
  unint64_t v15 = (void *)sub_240BB6DA0();
  id v16 = (void *)sub_240BB6DA0();
  id v17 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v15, v16, 1);

  uint64_t v18 = (void *)sub_240BB6DA0();
  uint64_t v32 = nullsub_1;
  id v33 = 0;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v29 = 1107296256;
  id v30 = sub_240B187EC;
  id v31 = &unk_26F507920;
  uint64_t v19 = _Block_copy(&aBlock);
  swift_release();
  uint64_t v20 = self;
  id v21 = objc_msgSend(v20, sel_actionWithTitle_style_handler_, v18, 1, v19);
  _Block_release(v19);

  uint64_t v22 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = v22;
  v23[3] = v14;
  void v23[4] = sub_240B18350;
  v23[5] = 0;
  v23[6] = v3;
  swift_retain();
  id v24 = v14;
  id v25 = (void *)sub_240BB6DA0();
  uint64_t v32 = sub_240B19C3C;
  id v33 = v23;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v29 = 1107296256;
  id v30 = sub_240B187EC;
  id v31 = &unk_26F507998;
  uint64_t v26 = _Block_copy(&aBlock);
  swift_release();
  id v27 = objc_msgSend(v20, sel_actionWithTitle_style_handler_, v25, 2, v26);
  _Block_release(v26);
  swift_release();

  objc_msgSend(v17, sel_addAction_, v27);
  objc_msgSend(v17, sel_addAction_, v21);
  objc_msgSend(a1, sel_presentViewController_animated_completion_, v17, 1, 0);
}

uint64_t sub_240B18350(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240BB6B90();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_240BB6BC0();
  uint64_t v10 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  id v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B1A1B8();
  char v13 = (void *)sub_240BB7310();
  id v14 = (void *)swift_allocObject();
  v14[2] = a2;
  uint64_t v14[3] = a3;
  v14[4] = a1;
  aBlock[4] = sub_240B1A238;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_240A87354;
  aBlock[3] = &unk_26F507A38;
  unint64_t v15 = _Block_copy(aBlock);
  sub_240BB4850();
  id v16 = a1;
  swift_release();
  sub_240BB6BB0();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_240B1A3C0((unint64_t *)&qword_26AFD98C8, MEMORY[0x263F8F030]);
  sub_240B1A244(0, (unint64_t *)&qword_26AFD98F0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
  sub_240AD7290();
  sub_240BB7670();
  MEMORY[0x24560A5E0](0, v12, v9, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v19);
}

void sub_240B1863C(uint64_t a1, uint64_t a2, void *a3)
{
  sub_240BB4850();
  uint64_t v4 = (void *)sub_240BB6DA0();
  uint64_t v5 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v4, v5, 1);

  uint64_t v7 = (void *)sub_240BB6DA0();
  void v10[4] = nullsub_1;
  v10[5] = 0;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  v10[2] = sub_240B187EC;
  v10[3] = &unk_26F507A60;
  uint64_t v8 = _Block_copy(v10);
  swift_release();
  id v9 = objc_msgSend(self, sel_actionWithTitle_style_handler_, v7, 0, v8);
  _Block_release(v8);

  objc_msgSend(v6, sel_addAction_, v9);
  objc_msgSend(a3, sel_presentViewController_animated_completion_, v6, 1, 0);
}

void sub_240B187EC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_240B18854(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_240B1A244(0, (unint64_t *)&qword_268CA1AC0, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  char v13 = (char *)&v20 - v12;
  uint64_t v14 = sub_240BB6FE0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = swift_allocObject();
  swift_beginAccess();
  id v16 = (void *)MEMORY[0x24560BA20](a2 + 16);
  swift_unknownObjectWeakInit();

  id v17 = (void *)swift_allocObject();
  v17[2] = 0;
  v17[3] = 0;
  v17[4] = a3;
  v17[5] = v15;
  v17[6] = a4;
  v17[7] = a5;
  v17[8] = a6;
  id v18 = a3;
  swift_retain();
  sub_240B17230((uint64_t)v13, (uint64_t)&unk_268CA0D18, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_240B189FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[31] = a7;
  v8[32] = a8;
  v8[29] = a5;
  v8[30] = a6;
  v8[28] = a4;
  return MEMORY[0x270FA2498](sub_240B18A24, 0, 0);
}

uint64_t sub_240B18A24()
{
  v0[33] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3B8]), sel_initWithFeatureIdentifier_healthStore_, *MEMORY[0x263F09730], v0[28]);
  sub_240BB6DE0();
  id v1 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  uint64_t v2 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithSuiteName_, v2);
  v0[34] = v3;

  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = (void *)sub_240BB6F90();
    objc_msgSend(v4, sel_setValue_forKey_, v5, *MEMORY[0x263F0AD60]);
  }
  id v6 = (void *)v0[28];
  sub_240BB6DE0();
  sub_240BB5220();
  swift_allocObject();
  id v7 = v6;
  v0[35] = sub_240BB5210();
  uint64_t v8 = sub_240BB5200();
  v0[36] = v8;
  id v9 = (void *)swift_task_alloc();
  v0[37] = v9;
  *id v9 = v0;
  v9[1] = sub_240B18BF0;
  return sub_240B17A1C(v8);
}

uint64_t sub_240B18BF0()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_240B192D0;
  }
  else {
    uint64_t v2 = sub_240B18D24;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_240B18D24()
{
  uint64_t v1 = (void *)v0[33];
  v0[2] = v0;
  v0[3] = sub_240B18E18;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_240B173D4;
  v0[13] = &unk_2650DCAB8;
  v0[14] = v2;
  objc_msgSend(v1, sel_resetOnboardingWithCompletion_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_240B18E18()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 312) = v1;
  if (v1) {
    uint64_t v2 = sub_240B19730;
  }
  else {
    uint64_t v2 = sub_240B18F28;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_240B18F28()
{
  uint64_t v25 = v0;
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_240BB5990();
  sub_240A395FC(v1, (uint64_t)qword_26AFDEC70);
  uint64_t v2 = sub_240BB5970();
  os_log_type_t v3 = sub_240BB71A0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v24 = v5;
    *(_DWORD *)uint64_t v4 = 136446466;
    uint64_t v6 = sub_240BB7C80();
    *(void *)(v0 + 208) = sub_240A38940(v6, v7, &v24);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2082;
    *(void *)(v0 + 216) = sub_240A38940(0xD00000000000002ELL, 0x8000000240BD0960, &v24);
    sub_240BB75F0();
    _os_log_impl(&dword_240A1B000, v2, v3, "[%{public}s]: %{public}s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v5, -1, -1);
    MEMORY[0x24560B930](v4, -1, -1);
  }

  uint64_t v8 = *(void *)(v0 + 232) + 16;
  swift_beginAccess();
  uint64_t v9 = MEMORY[0x24560BA20](v8);
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    uint64_t v11 = *(void **)(v0 + 272);
    uint64_t v12 = *(void **)(v0 + 264);
    (*(void (**)(uint64_t, unint64_t, unint64_t))(v0 + 240))(v9, 0xD00000000000002ELL, 0x8000000240BD0960);

    swift_release();
  }
  else
  {
    char v13 = sub_240BB5970();
    os_log_type_t v14 = sub_240BB7180();
    BOOL v15 = os_log_type_enabled(v13, v14);
    id v16 = *(void **)(v0 + 264);
    if (v15)
    {
      uint64_t v23 = *(void **)(v0 + 272);
      id v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v24 = v18;
      *(_DWORD *)id v17 = 136315138;
      uint64_t v19 = sub_240BB7C80();
      *(void *)(v0 + 200) = sub_240A38940(v19, v20, &v24);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v13, v14, "%s: view controller found nil", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v18, -1, -1);
      MEMORY[0x24560B930](v17, -1, -1);
      swift_release();
    }
    else
    {

      swift_release();
    }
  }
  id v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_240B192D0()
{
  uint64_t v27 = v0;
  uint64_t v1 = *(void **)(v0 + 264);

  swift_release();
  uint64_t v2 = *(void **)(v0 + 304);
  uint64_t v25 = 0;
  unint64_t v26 = 0xE000000000000000;
  sub_240BB77C0();
  sub_240BB6E70();
  *(void *)(v0 + 176) = v2;
  id v3 = v2;
  sub_240A39BC8(0, (unint64_t *)&qword_26AFD99E0);
  sub_240BB6E10();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  uint64_t v5 = v25;
  unint64_t v4 = v26;
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_240BB5990();
  sub_240A395FC(v6, (uint64_t)qword_26AFDEC70);
  swift_bridgeObjectRetain_n();
  unint64_t v7 = sub_240BB5970();
  os_log_type_t v8 = sub_240BB7180();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v25 = v10;
    *(_DWORD *)uint64_t v9 = 136446466;
    uint64_t v11 = sub_240BB7C80();
    *(void *)(v0 + 184) = sub_240A38940(v11, v12, &v25);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    sub_240BB4850();
    *(void *)(v0 + 168) = sub_240A38940(v5, v4, &v25);
    sub_240BB75F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_240A1B000, v7, v8, "[%{public}s]: %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v10, -1, -1);
    MEMORY[0x24560B930](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v13 = *(void *)(v0 + 232) + 16;
  swift_beginAccess();
  uint64_t v14 = MEMORY[0x24560BA20](v13);
  if (v14)
  {
    BOOL v15 = (void *)v14;
    (*(void (**)(uint64_t, uint64_t, unint64_t))(v0 + 240))(v14, v5, v4);

    swift_bridgeObjectRelease();
    id v16 = v2;
LABEL_10:

    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
  id v17 = sub_240BB5970();
  os_log_type_t v18 = sub_240BB7180();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v25 = v20;
    *(_DWORD *)uint64_t v19 = 136315138;
    uint64_t v21 = sub_240BB7C80();
    *(void *)(v0 + 192) = sub_240A38940(v21, v22, &v25);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v17, v18, "%s: view controller found nil", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v20, -1, -1);
    MEMORY[0x24560B930](v19, -1, -1);

    id v16 = v2;
    goto LABEL_10;
  }

LABEL_11:
  uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_240B19730()
{
  uint64_t v28 = v0;
  uint64_t v1 = *(void **)(v0 + 272);
  uint64_t v2 = *(void **)(v0 + 264);
  swift_willThrow();

  swift_release();
  id v3 = *(void **)(v0 + 312);
  uint64_t v26 = 0;
  unint64_t v27 = 0xE000000000000000;
  sub_240BB77C0();
  sub_240BB6E70();
  *(void *)(v0 + 176) = v3;
  id v4 = v3;
  sub_240A39BC8(0, (unint64_t *)&qword_26AFD99E0);
  sub_240BB6E10();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  uint64_t v6 = v26;
  unint64_t v5 = v27;
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_240BB5990();
  sub_240A395FC(v7, (uint64_t)qword_26AFDEC70);
  swift_bridgeObjectRetain_n();
  os_log_type_t v8 = sub_240BB5970();
  os_log_type_t v9 = sub_240BB7180();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v26 = v11;
    *(_DWORD *)uint64_t v10 = 136446466;
    uint64_t v12 = sub_240BB7C80();
    *(void *)(v0 + 184) = sub_240A38940(v12, v13, &v26);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2082;
    sub_240BB4850();
    *(void *)(v0 + 168) = sub_240A38940(v6, v5, &v26);
    sub_240BB75F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_240A1B000, v8, v9, "[%{public}s]: %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v11, -1, -1);
    MEMORY[0x24560B930](v10, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v14 = *(void *)(v0 + 232) + 16;
  swift_beginAccess();
  uint64_t v15 = MEMORY[0x24560BA20](v14);
  if (v15)
  {
    id v16 = (void *)v15;
    (*(void (**)(uint64_t, uint64_t, unint64_t))(v0 + 240))(v15, v6, v5);

    swift_bridgeObjectRelease();
    id v17 = v3;
LABEL_10:

    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
  os_log_type_t v18 = sub_240BB5970();
  os_log_type_t v19 = sub_240BB7180();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v26 = v21;
    *(_DWORD *)uint64_t v20 = 136315138;
    uint64_t v22 = sub_240BB7C80();
    *(void *)(v0 + 192) = sub_240A38940(v22, v23, &v26);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v18, v19, "%s: view controller found nil", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v21, -1, -1);
    MEMORY[0x24560B930](v20, -1, -1);

    id v17 = v3;
    goto LABEL_10;
  }

LABEL_11:
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

void sub_240B19B98(void *a1)
{
}

uint64_t sub_240B19BBC()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B19BF4()
{
  swift_release();

  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_240B19C3C(uint64_t a1)
{
  return sub_240B18854(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_240B19C4C()
{
  sub_240BB50A0();

  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_240B19C9C()
{
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  long long v5 = *(_OWORD *)(v0 + 48);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_240AA62AC;
  *(void *)(v3 + 256) = v2;
  *(_OWORD *)(v3 + 224) = v4;
  *(_OWORD *)(v3 + 240) = v5;
  return MEMORY[0x270FA2498](sub_240B18A24, 0, 0);
}

uint64_t sub_240B19D50(uint64_t a1)
{
  sub_240B1A244(0, (unint64_t *)&qword_268CA1AC0, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240B19DDC(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  long long v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_240B19EB8;
  return v6(a1);
}

uint64_t sub_240B19EB8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_240B19FB0()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B19FE8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *long long v5 = v2;
  v5[1] = sub_240AA62AC;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_268CA0D20 + dword_268CA0D20);
  return v6(a1, v4);
}

void sub_240B1A0A0()
{
  if (!qword_268C9EE68)
  {
    sub_240A39BC8(255, (unint64_t *)&qword_26AFD99E0);
    unint64_t v0 = sub_240BB6100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9EE68);
    }
  }
}

void sub_240B1A11C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_240B1A0A0();
    uint64_t v7 = v6;
    uint64_t v8 = sub_240B1A3C0(&qword_268C9EE70, (void (*)(uint64_t))sub_240B1A0A0);
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_240B1A1B8()
{
  unint64_t result = qword_26AFD9980;
  if (!qword_26AFD9980)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD9980);
  }
  return result;
}

uint64_t sub_240B1A1F8()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_240B1A238()
{
  sub_240B1863C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_240B1A244(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_240B1A2A8()
{
  unint64_t result = qword_268CA0D48;
  if (!qword_268CA0D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0D48);
  }
  return result;
}

uint64_t sub_240B1A2FC(uint64_t a1)
{
  sub_240B1A358();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_240B1A358()
{
  if (!qword_268CA0D50)
  {
    sub_240A39BC8(255, (unint64_t *)&qword_268C9F7A8);
    unint64_t v0 = sub_240BB75E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA0D50);
    }
  }
}

uint64_t sub_240B1A3C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240B1A420()
{
  unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240A3B064(0, &qword_268CA0220, MEMORY[0x263F079C8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v11 - v2;
  sub_240A3B064(0, &qword_268C9F180, MEMORY[0x263F07920], v0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = sub_240BB28D0();
  sub_240A4C570(v7, qword_268CA2A28);
  sub_240A395FC(v7, (uint64_t)qword_268CA2A28);
  sub_240BB2EA0();
  uint64_t v8 = sub_240BB2EE0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 0, 1, v8);
  uint64_t v9 = sub_240BB2F10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v3, 1, 1, v9);
  return sub_240BB28C0();
}

uint64_t sub_240B1A660()
{
  unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240A3B064(0, &qword_268CA0220, MEMORY[0x263F079C8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v11 - v2;
  sub_240A3B064(0, &qword_268C9F180, MEMORY[0x263F07920], v0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = sub_240BB28D0();
  sub_240A4C570(v7, qword_268CA2A40);
  sub_240A395FC(v7, (uint64_t)qword_268CA2A40);
  sub_240BB2EA0();
  uint64_t v8 = sub_240BB2EE0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 0, 1, v8);
  uint64_t v9 = sub_240BB2F10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v3, 1, 1, v9);
  return sub_240BB28C0();
}

uint64_t sub_240B1A8A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_240BB2CF0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemState(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B1F5B0(v1, (uint64_t)v8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      char v12 = 1;
      return v12 & 1;
    }
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    if (qword_268C9E6D0 != -1) {
      swift_once();
    }
    uint64_t v10 = qword_268CA2A40;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    if (qword_268C9E6C8 != -1) {
      swift_once();
    }
    uint64_t v10 = qword_268CA2A28;
  }
  uint64_t v11 = sub_240BB28D0();
  sub_240A395FC(v11, (uint64_t)v10);
  char v12 = sub_240B1E6F4();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v12 & 1;
}

uint64_t sub_240B1AAB4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_240B1EA94();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v1;
  *(void *)(v8 + 24) = v2;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_240B1EB90(0, &qword_26AFD9808, MEMORY[0x263EFDCF0]);
  sub_240B1EC08(&qword_26AFD9800, &qword_26AFD9808, v9);
  swift_retain();
  sub_240BB6240();
  sub_240A3CA50(&qword_26AFD9890, (void (*)(uint64_t))sub_240B1EA94);
  uint64_t v10 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v10;
}

uint64_t sub_240B1AC98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
  sub_240B1EB90(0, &qword_26AFD9878, MEMORY[0x263EFDE20]);
  swift_allocObject();
  swift_retain();
  sub_240BB6230();
  sub_240B1EC08(&qword_26AFD9870, &qword_26AFD9878, v7);
  uint64_t v8 = sub_240BB62E0();
  uint64_t result = swift_release();
  *a3 = v8;
  return result;
}

void sub_240B1ADB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = objc_msgSend(self, sel_heartRhythmDefaultsDomainWithHealthStore_, *(void *)(a3 + 32));
  uint64_t v9 = (void *)sub_240BB6DA0();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a1;
  void v10[4] = a2;
  v10[5] = a4;
  v12[4] = sub_240B1EC8C;
  v12[5] = v10;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 1107296256;
  void v12[2] = sub_240B1B708;
  v12[3] = &unk_26F507B50;
  uint64_t v11 = _Block_copy(v12);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_dateForKey_completion_, v9, v11);
  _Block_release(v11);
}

uint64_t sub_240B1AEEC(uint64_t a1, void *a2, uint64_t a3, void (*a4)(void *), uint64_t a5, uint64_t a6)
{
  uint64_t v74 = a5;
  uint64_t v75 = a4;
  id v77 = a2;
  sub_240B1EB90(0, &qword_26AFD9A08, MEMORY[0x263F8E848]);
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (void *)((char *)v65 - v11);
  uint64_t v13 = sub_240BB2CF0();
  uint64_t v70 = *(void *)(v13 - 8);
  uint64_t v71 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v66 = (char *)v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3B064(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v72 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v68 = (uint64_t)v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)v65 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)v65 - v21;
  uint64_t v23 = sub_240BB5990();
  uint64_t v78 = *(void *)(v23 - 8);
  uint64_t v79 = v23;
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v76 = (char *)v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  unint64_t v27 = (char *)v65 - v26;
  sub_240BB3BF0();
  uint64_t v69 = a1;
  sub_240A496B8(a1, (uint64_t)v22);
  uint64_t v28 = sub_240BB5970();
  os_log_type_t v29 = sub_240BB71A0();
  BOOL v30 = os_log_type_enabled(v28, v29);
  uint64_t v67 = a6;
  if (v30)
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v73 = v12;
    uint64_t v32 = v31;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v80 = v33;
    uint64_t v81 = a6;
    *(_DWORD *)uint64_t v32 = 136446466;
    v65[0] = a3;
    swift_getMetatypeMetadata();
    v65[1] = v10;
    uint64_t v34 = sub_240BB6E10();
    uint64_t v81 = sub_240A38940(v34, v35, &v80);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2082;
    sub_240A496B8((uint64_t)v22, (uint64_t)v20);
    uint64_t v36 = sub_240BB6E10();
    uint64_t v81 = sub_240A38940(v36, v37, &v80);
    a3 = v65[0];
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    sub_240B1F2BC((uint64_t)v22, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490]);
    _os_log_impl(&dword_240A1B000, v28, v29, "[%{public}s] Received date of: %{public}s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v33, -1, -1);
    uint64_t v38 = v32;
    uint64_t v12 = v73;
    MEMORY[0x24560B930](v38, -1, -1);
  }
  else
  {
    sub_240B1F2BC((uint64_t)v22, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490]);
  }

  uint64_t v39 = *(void (**)(char *, uint64_t))(v78 + 8);
  v39(v27, v79);
  id v40 = v76;
  id v41 = v77;
  if (v77)
  {
    id v42 = v77;
    sub_240BB3BF0();
    id v43 = v41;
    swift_retain();
    id v44 = v41;
    swift_retain();
    os_log_type_t v45 = sub_240BB5970();
    os_log_type_t v46 = sub_240BB7180();
    int v47 = v46;
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v48 = swift_slowAlloc();
      LODWORD(v71) = v47;
      uint64_t v49 = v48;
      uint64_t v72 = swift_slowAlloc();
      uint64_t v80 = v72;
      *(_DWORD *)uint64_t v49 = 136446722;
      uint64_t v81 = v67;
      swift_getMetatypeMetadata();
      uint64_t v73 = v12;
      uint64_t v50 = sub_240BB6E10();
      uint64_t v81 = sub_240A38940(v50, v51, &v80);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 12) = 2082;
      uint64_t v52 = *(void *)(a3 + 16);
      unint64_t v53 = *(void *)(a3 + 24);
      sub_240BB4850();
      uint64_t v81 = sub_240A38940(v52, v53, &v80);
      sub_240BB75F0();
      swift_release_n();
      id v41 = v77;
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 22) = 2082;
      uint64_t v81 = (uint64_t)v41;
      id v54 = v41;
      sub_240A49AC0();
      uint64_t v55 = sub_240BB6E10();
      uint64_t v81 = sub_240A38940(v55, v56, &v80);
      uint64_t v12 = v73;
      sub_240BB75F0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_240A1B000, v45, (os_log_type_t)v71, "[%{public}s] Failed to access the key %{public}s with error: %{public}s", (uint8_t *)v49, 0x20u);
      uint64_t v57 = v72;
      swift_arrayDestroy();
      MEMORY[0x24560B930](v57, -1, -1);
      MEMORY[0x24560B930](v49, -1, -1);

      uint64_t v58 = v76;
    }
    else
    {
      swift_release_n();

      uint64_t v58 = v40;
    }
    v39(v58, v79);
    void *v12 = v41;
    swift_storeEnumTagMultiPayload();
    id v62 = v41;
    v75(v12);

    return sub_240B1EC98((uint64_t)v12);
  }
  uint64_t v59 = v68;
  sub_240A496B8(v69, v68);
  uint64_t v61 = v70;
  uint64_t v60 = v71;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v59, 1, v71) == 1)
  {
    sub_240B1F2BC(v59, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490]);
    type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemState(0);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    v75(v12);
    return sub_240B1EC98((uint64_t)v12);
  }
  uint64_t v64 = v66;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 32))(v66, v59, v60);
  (*(void (**)(char *))(a3 + 40))(v64);
  swift_storeEnumTagMultiPayload();
  v75(v12);
  sub_240B1EC98((uint64_t)v12);
  return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v64, v60);
}

uint64_t sub_240B1B708(uint64_t a1, uint64_t a2, void *a3)
{
  sub_240A3B064(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  id v8 = (char *)&v14 - v7;
  uint64_t v9 = *(void (**)(char *, void *))(a1 + 32);
  if (a2)
  {
    sub_240BB2CB0();
    uint64_t v10 = sub_240BB2CF0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
  }
  else
  {
    uint64_t v11 = sub_240BB2CF0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
  }
  swift_retain();
  id v12 = a3;
  v9(v8, a3);
  swift_release();

  return sub_240B1F2BC((uint64_t)v8, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490]);
}

uint64_t sub_240B1B88C(uint64_t a1)
{
  uint64_t v2 = v1;
  v54[1] = *MEMORY[0x263EF8340];
  uint64_t v49 = *v1;
  uint64_t v4 = sub_240BB5990();
  uint64_t v51 = *(void *)(v4 - 8);
  uint64_t v52 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v50 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)v48 - v7;
  sub_240A3B064(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  v48[1] = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  id v12 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)v48 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v48 - v16;
  id v18 = objc_msgSend(self, sel_heartRhythmDefaultsDomainWithHealthStore_, v2[4]);
  sub_240A496B8(a1, (uint64_t)v17);
  uint64_t v19 = sub_240BB2CF0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19) != 1)
  {
    uint64_t v21 = (void *)sub_240BB2C90();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
  }
  uint64_t v22 = (void *)sub_240BB6DA0();
  id v53 = 0;
  unsigned int v23 = objc_msgSend(v18, sel_setDate_forKey_error_, v21, v22, &v53);

  id v24 = v53;
  if (v23)
  {
    sub_240BB3BF0();
    sub_240A496B8(a1, (uint64_t)v15);
    uint64_t v25 = sub_240BB5970();
    os_log_type_t v26 = sub_240BB71A0();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      v54[0] = v28;
      *(_DWORD *)uint64_t v27 = 136446466;
      id v53 = v49;
      swift_getMetatypeMetadata();
      uint64_t v29 = sub_240BB6E10();
      id v53 = (id)sub_240A38940(v29, v30, v54);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2082;
      sub_240A496B8((uint64_t)v15, (uint64_t)v12);
      uint64_t v31 = sub_240BB6E10();
      id v53 = (id)sub_240A38940(v31, v32, v54);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      sub_240B1F2BC((uint64_t)v15, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490]);
      _os_log_impl(&dword_240A1B000, v25, v26, "[%{public}s]: Successfully saved date of %{public}s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v28, -1, -1);
      MEMORY[0x24560B930](v27, -1, -1);
    }
    else
    {
      sub_240B1F2BC((uint64_t)v15, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490]);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v8, v52);
  }
  else
  {
    uint64_t v33 = v24;
    uint64_t v34 = (void *)sub_240BB2A50();

    swift_willThrow();
    unint64_t v35 = v50;
    sub_240BB3BF0();
    id v36 = v34;
    id v37 = v34;
    uint64_t v38 = sub_240BB5970();
    int v39 = sub_240BB7180();
    if (os_log_type_enabled(v38, (os_log_type_t)v39))
    {
      uint64_t v40 = swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      v54[0] = v41;
      *(_DWORD *)uint64_t v40 = 136446466;
      id v53 = v49;
      swift_getMetatypeMetadata();
      uint64_t v42 = sub_240BB6E10();
      id v53 = (id)sub_240A38940(v42, v43, v54);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 12) = 2082;
      id v53 = v34;
      id v44 = v34;
      sub_240A49AC0();
      uint64_t v45 = sub_240BB6E10();
      id v53 = (id)sub_240A38940(v45, v46, v54);
      sub_240BB75F0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_240A1B000, v38, (os_log_type_t)v39, "[%{public}s]: Failed to save date with error: %{public}s", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v41, -1, -1);
      MEMORY[0x24560B930](v40, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v35, v52);
  }
}

uint64_t sub_240B1BF24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v2 = *v1;
  uint64_t v3 = sub_240BB5990();
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = &v28[-v5];
  sub_240A3B064(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = &v28[-v12];
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = &v28[-v14];
  id v16 = objc_msgSend(self, sel_heartRhythmDefaultsDomainWithHealthStore_, v1[4]);
  sub_240BB71F0();

  sub_240BB3BF0();
  sub_240A496B8((uint64_t)v15, (uint64_t)v13);
  uint64_t v17 = sub_240BB5970();
  os_log_type_t v18 = sub_240BB71A0();
  int v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v20 = swift_slowAlloc();
    int v29 = v19;
    uint64_t v21 = v20;
    uint64_t v30 = swift_slowAlloc();
    v34[0] = v30;
    *(_DWORD *)uint64_t v21 = 136446466;
    uint64_t v35 = v2;
    swift_getMetatypeMetadata();
    uint64_t v22 = sub_240BB6E10();
    uint64_t v35 = sub_240A38940(v22, v23, v34);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    sub_240A496B8((uint64_t)v13, (uint64_t)v10);
    uint64_t v24 = sub_240BB6E10();
    uint64_t v35 = sub_240A38940(v24, v25, v34);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    sub_240B1F2BC((uint64_t)v13, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490]);
    _os_log_impl(&dword_240A1B000, v17, (os_log_type_t)v29, "[%{public}s]: Successfully fetched date of %{public}s", (uint8_t *)v21, 0x16u);
    uint64_t v26 = v30;
    swift_arrayDestroy();
    MEMORY[0x24560B930](v26, -1, -1);
    MEMORY[0x24560B930](v21, -1, -1);
  }
  else
  {
    sub_240B1F2BC((uint64_t)v13, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490]);
  }

  (*(void (**)(unsigned char *, uint64_t))(v32 + 8))(v6, v33);
  return sub_240A4971C((uint64_t)v15, v31);
}

uint64_t sub_240B1C510()
{
  swift_bridgeObjectRelease();

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_240B1C558()
{
  uint64_t v1 = v0;
  sub_240B1F32C();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B1F3EC();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v23 = v7;
  uint64_t v24 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_240BB6DE0();
  uint64_t v13 = v12;
  uint64_t v14 = *(void **)(v1 + 16);
  type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemUpdateDate();
  uint64_t v15 = (void *)swift_allocObject();
  long long v15[2] = v11;
  v15[3] = v13;
  v15[4] = v14;
  v15[5] = sub_240B1CE84;
  v15[6] = 0;
  id v16 = v14;
  uint64_t v17 = sub_240B1AAB4();
  swift_release();
  uint64_t v25 = v17;
  swift_retain();
  sub_240BB60F0();
  os_log_type_t v18 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_240B1EB90(0, &qword_26AFD9808, MEMORY[0x263EFDCF0]);
  type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemState(0);
  sub_240B1EC08(&qword_26AFD9800, &qword_26AFD9808, v18);
  sub_240BB63D0();
  swift_release();
  swift_release();
  sub_240BB60F0();
  sub_240B1F4CC(0, (unint64_t *)&qword_26AFD9828, MEMORY[0x263EFDCF0]);
  sub_240A3CA50(&qword_26AFD97A0, (void (*)(uint64_t))sub_240B1F32C);
  sub_240B1F0E0();
  sub_240BB63D0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_240A3CA50(&qword_26AFD97B0, (void (*)(uint64_t))sub_240B1F3EC);
  uint64_t v19 = v23;
  uint64_t v20 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v19);
  return v20;
}

uint64_t sub_240B1C8D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v28 = a2;
  int v29 = a3;
  sub_240A3B064(0, &qword_26AFD9840, type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemState, MEMORY[0x263EFDDF8]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v28 - v7;
  sub_240B1EB90(0, &qword_26AFD99E8, MEMORY[0x263EFDEA0]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v28 - v12;
  uint64_t updated = type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemState(0);
  uint64_t v15 = MEMORY[0x270FA5388](updated);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v28 - v18;
  sub_240B1F5B0(a1, (uint64_t)&v28 - v18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_240B1F5B0(a1, (uint64_t)v17);
    sub_240BB6200();
    sub_240A49AC0();
    sub_240BB61E0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_240B1EC08(&qword_268CA0D78, &qword_26AFD99E8, MEMORY[0x263EFDEA0]);
    uint64_t v20 = sub_240BB62E0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    uint64_t v21 = sub_240BB6DE0();
    uint64_t v23 = v22;
    uint64_t v24 = *(void **)(v28 + 16);
    type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemUpdateDate();
    uint64_t v25 = (void *)swift_allocObject();
    v25[2] = v21;
    v25[3] = v23;
    v25[4] = v24;
    v25[5] = sub_240B1CE8C;
    v25[6] = 0;
    id v26 = v24;
    uint64_t v20 = sub_240B1AAB4();
    swift_release();
  }
  *int v29 = v20;
  return sub_240B1E2D4((uint64_t)v19);
}

uint64_t sub_240B1CC1C@<X0>(uint64_t *a1@<X8>)
{
  sub_240A3A2F4(0, (unint64_t *)&qword_26AFD9858, MEMORY[0x263EFDDF8]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = &v14[-v5];
  sub_240B1F4CC(0, &qword_26AFD9A00, MEMORY[0x263EFDEA0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = &v14[-v10];
  v14[15] = sub_240B1A8A0() & 1;
  sub_240BB6200();
  sub_240A49AC0();
  sub_240BB61E0();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  sub_240B1F53C();
  uint64_t v12 = sub_240BB62E0();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  *a1 = v12;
  return result;
}

uint64_t sub_240B1CE10()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_240BB6290();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_240B1CE84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240B1CE94(a1, a2);
}

uint64_t sub_240B1CE8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240B1CE94(a1, a2);
}

uint64_t sub_240B1CE94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_240BB2CF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemState(0);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_240B1CF24()
{
  sub_240A3B064(0, (unint64_t *)&unk_26AFD9960, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v0 - 8);
  unint64_t v46 = (char *)&v36 - v1;
  sub_240A29BC8(0, &qword_26AFD8B28, MEMORY[0x263EFDE48]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v36 - v5;
  sub_240B1EE50();
  uint64_t v36 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B1EF4C();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v37 = v11;
  uint64_t v38 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B1F008();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v39 = v15;
  uint64_t v40 = v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B1F154();
  uint64_t v44 = v19;
  uint64_t v42 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B1F1F0();
  uint64_t v45 = v22;
  uint64_t v43 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v41 = (char *)&v36 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_240A29BC8(0, &qword_26AFD8B40, MEMORY[0x263EFDE58]);
  sub_240BB6270();
  swift_endAccess();
  sub_240B1EED8();
  sub_240BB62F0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_240A49AC0();
  sub_240A3CA50(&qword_26AFD8870, (void (*)(uint64_t))sub_240B1EE50);
  uint64_t v24 = v36;
  sub_240BB6440();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v24);
  id v47 = (id)sub_240B1C558();
  sub_240B1F4CC(0, (unint64_t *)&qword_26AFD9828, MEMORY[0x263EFDCF0]);
  sub_240A3CA50(&qword_26AFD88B8, (void (*)(uint64_t))sub_240B1EF4C);
  sub_240B1F0E0();
  uint64_t v25 = v37;
  sub_240BB6320();
  swift_release();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v14, v25);
  sub_240A3CA50(&qword_26AFD8800, (void (*)(uint64_t))sub_240B1F008);
  uint64_t v26 = v39;
  sub_240BB6330();
  uint64_t v27 = (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v18, v26);
  uint64_t v28 = (void *)MEMORY[0x24560B200](v27);
  if (!v28)
  {
    sub_240A34DC4(0, (unint64_t *)&qword_26AFD9980);
    uint64_t v28 = (void *)sub_240BB7310();
  }
  id v47 = v28;
  uint64_t v29 = sub_240BB72F0();
  uint64_t v30 = (uint64_t)v46;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v46, 1, 1, v29);
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9980);
  sub_240A3CA50(&qword_26AFD8958, (void (*)(uint64_t))sub_240B1F154);
  sub_240A805DC();
  uint64_t v31 = v41;
  uint64_t v32 = v44;
  sub_240BB6400();
  sub_240B1F2BC(v30, (unint64_t *)&unk_26AFD9960, MEMORY[0x263F8F110]);

  (*(void (**)(char *, uint64_t))(v42 + 8))(v21, v32);
  sub_240A3CA50(&qword_26AFD8A08, (void (*)(uint64_t))sub_240B1F1F0);
  uint64_t v33 = v45;
  uint64_t v34 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v33);
  return v34;
}

unsigned char *sub_240B1D6D0@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_240B1D6DC()
{
  uint64_t v1 = v0;
  sub_240A3B064(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v13[-v3];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_240BB6290();
  swift_release();
  uint64_t result = swift_release();
  if (v13[63])
  {
    uint64_t v6 = sub_240BB6DE0();
    uint64_t v8 = v7;
    uint64_t v9 = *(void **)(v1 + 16);
    type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemUpdateDate();
    uint64_t inited = (void *)swift_initStackObject();
    inited[2] = v6;
    inited[3] = v8;
    inited[4] = v9;
    inited[5] = sub_240B1CE8C;
    inited[6] = 0;
    id v11 = v9;
    sub_240B1BF24((uint64_t)v4);

    swift_bridgeObjectRelease();
    uint64_t v12 = sub_240BB2CF0();
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v4, 1, v12) == 1) {
      sub_240B1D8A8();
    }
    return sub_240B1F2BC((uint64_t)v4, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490]);
  }
  return result;
}

uint64_t sub_240B1D8A8()
{
  uint64_t v1 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_240A3B064(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v19[-v3];
  uint64_t v5 = sub_240BB6DE0();
  uint64_t v7 = v6;
  uint64_t v8 = *(void **)(v0 + 16);
  type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemUpdateDate();
  uint64_t inited = (void *)swift_initStackObject();
  inited[2] = v5;
  inited[3] = v7;
  inited[4] = v8;
  inited[5] = sub_240B1CE8C;
  inited[6] = 0;
  id v10 = v8;
  sub_240BB2CE0();
  uint64_t v11 = sub_240BB2CF0();
  uint64_t v12 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  v12(v4, 0, 1, v11);
  sub_240B1B88C((uint64_t)v4);
  swift_release();
  sub_240B1F2BC((uint64_t)v4, (unint64_t *)&qword_26AFD8F80, v1);
  uint64_t v13 = sub_240BB6DE0();
  uint64_t v15 = v14;
  uint64_t v16 = (void *)swift_initStackObject();
  long long v16[2] = v13;
  v16[3] = v15;
  v16[4] = v10;
  v16[5] = sub_240B1CE84;
  v16[6] = 0;
  v12(v4, 1, 1, v11);
  id v17 = v10;
  sub_240B1B88C((uint64_t)v4);
  swift_release();
  return sub_240B1F2BC((uint64_t)v4, (unint64_t *)&qword_26AFD8F80, v1);
}

uint64_t sub_240B1DAAC()
{
  uint64_t v1 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_240A3B064(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v19[-v3];
  uint64_t v5 = sub_240BB6DE0();
  uint64_t v7 = v6;
  uint64_t v8 = *(void **)(v0 + 16);
  type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemUpdateDate();
  uint64_t inited = (void *)swift_initStackObject();
  inited[2] = v5;
  inited[3] = v7;
  inited[4] = v8;
  inited[5] = sub_240B1CE8C;
  inited[6] = 0;
  uint64_t v10 = sub_240BB2CF0();
  uint64_t v11 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v11(v4, 1, 1, v10);
  id v12 = v8;
  sub_240B1B88C((uint64_t)v4);
  swift_release();
  sub_240B1F2BC((uint64_t)v4, (unint64_t *)&qword_26AFD8F80, v1);
  uint64_t v13 = sub_240BB6DE0();
  uint64_t v15 = v14;
  uint64_t v16 = (void *)swift_initStackObject();
  long long v16[2] = v13;
  v16[3] = v15;
  v16[4] = v12;
  v16[5] = sub_240B1CE84;
  v16[6] = 0;
  v11(v4, 1, 1, v10);
  id v17 = v12;
  sub_240B1B88C((uint64_t)v4);
  swift_release();
  return sub_240B1F2BC((uint64_t)v4, (unint64_t *)&qword_26AFD8F80, v1);
}

uint64_t sub_240B1DCA8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Heart35ElectrocardiogramUpdateAvailability_context;
  uint64_t v2 = sub_240BB32A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  uint64_t v3 = v0 + OBJC_IVAR____TtC5Heart35ElectrocardiogramUpdateAvailability__isElectrocardiogramUpdateAvailable;
  sub_240A29BC8(0, &qword_26AFD8B40, MEMORY[0x263EFDE58]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_240B1DDC0()
{
  return type metadata accessor for ElectrocardiogramUpdateAvailability(0);
}

void sub_240B1DDC8()
{
  sub_240BB32A0();
  if (v0 <= 0x3F)
  {
    sub_240A29BC8(319, &qword_26AFD8B40, MEMORY[0x263EFDE58]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemUpdateDate()
{
  return self;
}

uint64_t *sub_240B1DEE0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v7 = sub_240BB2CF0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_240B1E030(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    uint64_t v3 = sub_240BB2CF0();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_240B1E0AC(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_240BB2CF0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_240B1E1B8(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_240B1E2D4((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_240BB2CF0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_240B1E2D4(uint64_t a1)
{
  uint64_t updated = type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemState(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(updated - 8) + 8))(a1, updated);
  return a1;
}

uint64_t type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemState(uint64_t a1)
{
  return sub_240A3E6AC(a1, qword_26AFD9390);
}

void *sub_240B1E350(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_240BB2CF0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_240B1E45C(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_240B1E2D4((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_240BB2CF0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_240B1E578()
{
  uint64_t result = sub_240BB2CF0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_240B1E600@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_240BB6290();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_240B1E680()
{
  return sub_240BB62A0();
}

uint64_t sub_240B1E6F4()
{
  uint64_t v0 = sub_240BB2EE0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  char v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3B064(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v18 - v5;
  uint64_t v7 = sub_240BB2CF0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v18 - v12;
  sub_240BB2EA0();
  sub_240BB2E60();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_240B1F2BC((uint64_t)v6, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490]);
    return 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
    sub_240BB2CE0();
    uint64_t v15 = sub_240BB2CC0();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v8 + 8);
    v16(v11, v7);
    BOOL v14 = v15 == -1;
    v16(v13, v7);
  }
  return v14;
}

uint64_t sub_240B1E9B8()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B1E9F0()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

unint64_t sub_240B1EA28()
{
  unint64_t result = qword_268CA0D68;
  if (!qword_268CA0D68)
  {
    sub_240A3B064(255, &qword_268CA0D60, type metadata accessor for ElectrocardiogramUpdateAvailability, MEMORY[0x263F8D8F0]);
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CA0D68);
  }
  return result;
}

void sub_240B1EA94()
{
  if (!qword_26AFD9898)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_240B1EB90(255, &qword_26AFD9808, MEMORY[0x263EFDCF0]);
    sub_240B1EC08(&qword_26AFD9800, &qword_26AFD9808, v0);
    unint64_t v1 = sub_240BB6250();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AFD9898);
    }
  }
}

uint64_t sub_240B1EB48()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B1EB80@<X0>(uint64_t *a1@<X8>)
{
  return sub_240B1AC98(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

void sub_240B1EB88(uint64_t a1, uint64_t a2)
{
  sub_240B1ADB0(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

void sub_240B1EB90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    uint64_t updated = type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemState(255);
    unint64_t v7 = sub_240A49AC0();
    unint64_t v8 = a3(a1, updated, v7, MEMORY[0x263F8E4E0]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_240B1EC08(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240B1EB90(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240B1EC4C()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_240B1EC8C(uint64_t a1, void *a2)
{
  return sub_240B1AEEC(a1, a2, *(void *)(v2 + 16), *(void (**)(void *))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_240B1EC98(uint64_t a1)
{
  sub_240B1EB90(0, &qword_26AFD9A08, MEMORY[0x263F8E848]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_240B1ED10()
{
  if (!qword_26AFD8A00)
  {
    sub_240A3B064(255, &qword_26AFD8B48, MEMORY[0x263F44998], MEMORY[0x263F8D488]);
    sub_240B1EDC0();
    unint64_t v0 = sub_240BB60B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD8A00);
    }
  }
}

unint64_t sub_240B1EDC0()
{
  unint64_t result = qword_26AFD8B50;
  if (!qword_26AFD8B50)
  {
    sub_240A3B064(255, &qword_26AFD8B48, MEMORY[0x263F44998], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD8B50);
  }
  return result;
}

void sub_240B1EE50()
{
  if (!qword_26AFD8878)
  {
    sub_240A29BC8(255, &qword_26AFD8B28, MEMORY[0x263EFDE48]);
    sub_240B1EED8();
    unint64_t v0 = sub_240BB5F90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD8878);
    }
  }
}

unint64_t sub_240B1EED8()
{
  unint64_t result = qword_26AFD8B20;
  if (!qword_26AFD8B20)
  {
    sub_240A29BC8(255, &qword_26AFD8B28, MEMORY[0x263EFDE48]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD8B20);
  }
  return result;
}

void sub_240B1EF4C()
{
  if (!qword_26AFD88C0)
  {
    sub_240B1EE50();
    sub_240A49AC0();
    sub_240A3CA50(&qword_26AFD8870, (void (*)(uint64_t))sub_240B1EE50);
    unint64_t v0 = sub_240BB5FD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD88C0);
    }
  }
}

void sub_240B1F008()
{
  if (!qword_26AFD8808)
  {
    sub_240B1EF4C();
    sub_240B1F4CC(255, (unint64_t *)&qword_26AFD9828, MEMORY[0x263EFDCF0]);
    sub_240A3CA50(&qword_26AFD88B8, (void (*)(uint64_t))sub_240B1EF4C);
    sub_240B1F0E0();
    unint64_t v0 = sub_240BB5F70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD8808);
    }
  }
}

unint64_t sub_240B1F0E0()
{
  unint64_t result = qword_26AFD9820;
  if (!qword_26AFD9820)
  {
    sub_240B1F4CC(255, (unint64_t *)&qword_26AFD9828, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD9820);
  }
  return result;
}

void sub_240B1F154()
{
  if (!qword_26AFD8960)
  {
    sub_240B1F008();
    sub_240A3CA50(&qword_26AFD8800, (void (*)(uint64_t))sub_240B1F008);
    unint64_t v0 = sub_240BB6010();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD8960);
    }
  }
}

void sub_240B1F1F0()
{
  if (!qword_26AFD8A10)
  {
    sub_240B1F154();
    sub_240A34DC4(255, (unint64_t *)&qword_26AFD9980);
    sub_240A3CA50(&qword_26AFD8958, (void (*)(uint64_t))sub_240B1F154);
    sub_240A805DC();
    unint64_t v0 = sub_240BB60E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD8A10);
    }
  }
}

uint64_t sub_240B1F2BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_240A3B064(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_240B1F32C()
{
  if (!qword_26AFD97A8)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_240B1EB90(255, &qword_26AFD9808, MEMORY[0x263EFDCF0]);
    sub_240B1EC08(&qword_26AFD9800, &qword_26AFD9808, v0);
    unint64_t v1 = sub_240BB60A0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AFD97A8);
    }
  }
}

void sub_240B1F3EC()
{
  if (!qword_26AFD97B8)
  {
    sub_240B1F4CC(255, (unint64_t *)&qword_26AFD9828, MEMORY[0x263EFDCF0]);
    sub_240B1F32C();
    sub_240B1F0E0();
    sub_240A3CA50(&qword_26AFD97A0, (void (*)(uint64_t))sub_240B1F32C);
    unint64_t v0 = sub_240BB60A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD97B8);
    }
  }
}

uint64_t sub_240B1F4C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_240B1C8D8(a1, v2, a2);
}

void sub_240B1F4CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void, unint64_t, void))
{
  if (!*a2)
  {
    unint64_t v6 = sub_240A49AC0();
    unint64_t v7 = a3(a1, MEMORY[0x263F8D4F8], v6, MEMORY[0x263F8E4E0]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_240B1F53C()
{
  unint64_t result = qword_26AFD99F0;
  if (!qword_26AFD99F0)
  {
    sub_240B1F4CC(255, &qword_26AFD9A00, MEMORY[0x263EFDEA0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD99F0);
  }
  return result;
}

uint64_t sub_240B1F5B0(uint64_t a1, uint64_t a2)
{
  uint64_t updated = type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 16))(a2, a1, updated);
  return a2;
}

uint64_t sub_240B1F618()
{
  uint64_t v0 = sub_240BB3210();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  char v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_240BB3240();
  sub_240A4C570(v4, qword_26AFDEB50);
  sub_240A395FC(v4, (uint64_t)qword_26AFDEB50);
  sub_240BB30E0();
  sub_240A3AF78(0, (unint64_t *)&qword_26AFD99A0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v5 = sub_240BB3050();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_240BB97E0;
  (*(void (**)(unint64_t, void, uint64_t))(v6 + 104))(v8 + v7, *MEMORY[0x263F45580], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F45688], v0);
  return sub_240BB3220();
}

uint64_t sub_240B1F820@<X0>(int a1@<W0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  sub_240A3AF78(0, &qword_26AFD9850, (uint64_t (*)(uint64_t))sub_240A3A454, MEMORY[0x263EFDDF8]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v21 - v9;
  sub_240A3FB28();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_240B1FAC0(a1);
  if (qword_26AFD7158 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_240A395FC(v12, (uint64_t)qword_26AFDEB68);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v17, v12);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v16;
  *(void *)(v18 + 24) = a2;
  uint64_t v22 = 0;
  sub_240BB4850();
  sub_240BB5700();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v22 = v16;
  sub_240A3A454();
  sub_240BB6200();
  sub_240A3AFDC();
  uint64_t v19 = sub_240BB62E0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *a3 = v19;
  return result;
}

uint64_t sub_240B1FAC0(int a1)
{
  int v80 = a1;
  sub_240A3FB28();
  uint64_t v85 = *(void *)(v1 - 8);
  uint64_t v86 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v84 = (char *)&v68 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_240BB31D0();
  uint64_t v87 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v79 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v70 = (char *)&v68 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v71 = (char *)&v68 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v68 - v10;
  sub_240A3FF50(0);
  uint64_t v82 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v78 = (uint64_t)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v77 = (uint64_t)&v68 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v68 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (char *)&v68 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v81 = (char *)&v68 - v24;
  sub_240A3AF78(0, (unint64_t *)&unk_26AFD99A8, (uint64_t (*)(uint64_t))sub_240A3FF50, MEMORY[0x263F8E0F8]);
  uint64_t v25 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v26 = (v25 + 32) & ~v25;
  uint64_t v74 = v26 + *(void *)(v13 + 72);
  uint64_t v75 = v27;
  uint64_t v73 = v25 | 7;
  uint64_t v28 = swift_allocObject();
  long long v72 = xmmword_240BB97E0;
  *(_OWORD *)(v28 + 16) = xmmword_240BB97E0;
  uint64_t v76 = v26;
  uint64_t v29 = v28 + v26;
  sub_240BB3250();
  sub_240A3466C(v89, v89[3]);
  uint64_t v88 = sub_240B21428(0);
  sub_240B21448(0, &qword_26AFD8210, (void (*)(uint64_t))sub_240B21428);
  sub_240BB6E10();
  sub_240BB3200();
  uint64_t v30 = v87;
  swift_bridgeObjectRelease();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v89);
  sub_240BB4850();
  sub_240A5A4D8(v29, (uint64_t)v23);
  sub_240A5A5D8((uint64_t)v23, (uint64_t)v20);
  uint64_t v31 = *(unsigned int (**)(void, void, void))(v30 + 48);
  if (v31(v20, 1, v3) == 1)
  {
    sub_240AB7B9C((uint64_t)v20, (uint64_t (*)(void))sub_240A3FF50);
  }
  else
  {
    uint64_t v69 = v31;
    uint64_t v32 = *(void (**)(void))(v30 + 32);
    ((void (*)(char *, char *, uint64_t))v32)(v11, v20, v3);
    uint64_t v33 = v71;
    v32();
    unint64_t v34 = MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v34 = sub_240A4297C(0, *(void *)(v34 + 16) + 1, 1, v34);
    }
    unint64_t v36 = *(void *)(v34 + 16);
    unint64_t v35 = *(void *)(v34 + 24);
    if (v36 >= v35 >> 1) {
      unint64_t v34 = sub_240A4297C(v35 > 1, v36 + 1, 1, v34);
    }
    *(void *)(v34 + 16) = v36 + 1;
    ((void (*)(unint64_t, char *, uint64_t))v32)(v34+ ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80))+ *(void *)(v87 + 72) * v36, v33, v3);
    uint64_t v31 = v69;
  }
  unsigned int v37 = v80;
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if (v37 > 1)
  {
    uint64_t v38 = (uint64_t)v81;
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v45 = v86;
    uint64_t v46 = sub_240A395FC(v86, (uint64_t)qword_26AFDEB68);
    id v47 = v84;
    uint64_t v48 = v85;
    uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v85 + 16);
    v43(v84, v46, v45);
    *(void *)(swift_allocObject() + 16) = v83;
    v89[0] = 0;
    sub_240BB5700();
    swift_release();
    uint64_t v71 = *(char **)(v48 + 8);
    ((void (*)(char *, uint64_t))v71)(v47, v45);
    uint64_t v44 = 1;
  }
  else
  {
    uint64_t v38 = (uint64_t)v81;
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v39 = v86;
    uint64_t v40 = sub_240A395FC(v86, (uint64_t)qword_26AFDEB68);
    uint64_t v41 = v84;
    uint64_t v42 = v85;
    uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v85 + 16);
    v43(v84, v40, v39);
    *(void *)(swift_allocObject() + 16) = v83;
    v89[0] = 0;
    sub_240BB5700();
    swift_release();
    uint64_t v71 = *(char **)(v42 + 8);
    ((void (*)(char *, uint64_t))v71)(v41, v39);
    sub_240B207D8(v80, v38);
    uint64_t v44 = 0;
  }
  uint64_t v49 = v87;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v87 + 56))(v38, v44, 1, v3);
  uint64_t v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = v72;
  uint64_t v51 = v50 + v76;
  sub_240A5A4D8(v38, v50 + v76);
  uint64_t v52 = v77;
  sub_240A5A4D8(v51, v77);
  uint64_t v53 = v52;
  uint64_t v54 = v78;
  sub_240A5A5D8(v53, v78);
  if (v31(v54, 1, v3) == 1)
  {
    sub_240AB7B9C(v54, (uint64_t (*)(void))sub_240A3FF50);
  }
  else
  {
    uint64_t v55 = *(void (**)(char *, uint64_t, uint64_t))(v49 + 32);
    uint64_t v56 = v54;
    uint64_t v57 = v70;
    v55(v70, v56, v3);
    v55(v79, (uint64_t)v57, v3);
    unint64_t v58 = MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v58 = sub_240A4297C(0, *(void *)(v58 + 16) + 1, 1, v58);
    }
    unint64_t v60 = *(void *)(v58 + 16);
    unint64_t v59 = *(void *)(v58 + 24);
    if (v60 >= v59 >> 1) {
      unint64_t v58 = sub_240A4297C(v59 > 1, v60 + 1, 1, v58);
    }
    *(void *)(v58 + 16) = v60 + 1;
    v55((char *)(v58+ ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80))+ *(void *)(v87 + 72) * v60), (uint64_t)v79, v3);
    uint64_t v38 = (uint64_t)v81;
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v61 = sub_240BB6F40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_26AFD7158 != -1) {
    swift_once();
  }
  uint64_t v62 = v86;
  uint64_t v63 = sub_240A395FC(v86, (uint64_t)qword_26AFDEB68);
  uint64_t v64 = v84;
  v43(v84, v63, v62);
  uint64_t v65 = swift_allocObject();
  uint64_t v66 = v83;
  *(void *)(v65 + 16) = v61;
  *(void *)(v65 + 24) = v66;
  v89[0] = 0;
  sub_240BB4850();
  sub_240BB5700();
  swift_release();
  ((void (*)(char *, uint64_t))v71)(v64, v62);
  sub_240AB7B9C(v38, (uint64_t (*)(void))sub_240A3FF50);
  return v61;
}

uint64_t sub_240B205F0()
{
  sub_240BB77C0();
  sub_240BB6E70();
  sub_240BB7C80();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  uint64_t v0 = sub_240BB4850();
  MEMORY[0x24560A1D0](v0, MEMORY[0x263F45828]);
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return 0;
}

uint64_t sub_240B20710()
{
  return 0;
}

uint64_t sub_240B207D8@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v44 = a1;
  uint64_t v3 = sub_240BB3370();
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v31 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AB7B08(0);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v36 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240BB3340();
  uint64_t v37 = *(void *)(v7 - 8);
  uint64_t v38 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v29 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v30 = (char *)&v29 - v10;
  uint64_t v11 = sub_240BB36D0();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v12 = sub_240BB3950();
  uint64_t v34 = *(void *)(v12 - 8);
  uint64_t v35 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_240B21428(0);
  uint64_t v46 = v42;
  uint64_t v41 = sub_240B21448(0, &qword_26AFD8210, (void (*)(uint64_t))sub_240B21428);
  uint64_t v15 = sub_240BB6E10();
  uint64_t v39 = v16;
  uint64_t v40 = v15;
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  uint64_t v43 = v14;
  uint64_t v45 = a2;
  id v17 = (id)qword_26AFDECD8;
  sub_240BB36C0();
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  sub_240BB2980();
  sub_240BB2980();
  sub_240BB2980();
  uint64_t v18 = v43;
  sub_240BB3920();
  uint64_t v46 = v42;
  sub_240BB6E10();
  uint64_t v19 = (void *)sub_240BB30E0();
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0)
  {
    if (sub_240BB7900()) {
      sub_240B21774(MEMORY[0x263F8EE78]);
    }
  }
  type metadata accessor for AFibFeaturesPromotionTileActionHandler();
  sub_240A20A74(&qword_268CA0D80, (void (*)(uint64_t))type metadata accessor for AFibFeaturesPromotionTileActionHandler);
  sub_240BB3120();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (!(_BYTE)v44)
  {
    uint64_t v20 = (unsigned int *)MEMORY[0x263F456F8];
    goto LABEL_10;
  }
  if (v44 == 1)
  {
    uint64_t v20 = (unsigned int *)MEMORY[0x263F456F0];
LABEL_10:
    uint64_t v21 = v36;
    uint64_t v22 = v37;
    uint64_t v23 = v38;
    (*(void (**)(char *, void, uint64_t))(v37 + 104))(v36, *v20, v38);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v21, 0, 1, v23);
    uint64_t v24 = v30;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v30, v21, v23);
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v29, v24, v23);
    uint64_t v25 = v31;
    sub_240BB3380();
    uint64_t v26 = v33;
    sub_240BB3140();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v26);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v18, v35);
  }
  uint64_t v28 = (uint64_t)v36;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v36, 1, 1, v38);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v35);
  return sub_240AB7B9C(v28, (uint64_t (*)(void))sub_240AB7B08);
}

uint64_t sub_240B20ED8()
{
  sub_240BB77C0();
  sub_240BB6E70();
  sub_240BB7C80();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  uint64_t v0 = sub_240BB4850();
  MEMORY[0x24560A1D0](v0, MEMORY[0x263F45828]);
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return 0;
}

uint64_t sub_240B20FFC()
{
  return 0;
}

uint64_t sub_240B21114()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Heart30AFibFeaturesPromotionGenerator_domain;
  uint64_t v2 = sub_240BB3240();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_240B211BC()
{
  return type metadata accessor for AFibFeaturesPromotionGenerator();
}

uint64_t sub_240B211C4()
{
  uint64_t result = sub_240BB3240();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_240B2126C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC5Heart30AFibFeaturesPromotionGenerator_domain;
  uint64_t v4 = sub_240BB3240();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_240B212E4()
{
  uint64_t v1 = sub_240BB32A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 18) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_240B21380@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_240BB32A0() - 8);
  uint64_t v4 = *(void *)(v1
                 + ((*(void *)(v3 + 64)
                   + ((*(unsigned __int8 *)(v3 + 80) + 18) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
                   + 7) & 0xFFFFFFFFFFFFFFF8));
  int v5 = *(unsigned __int16 *)(v1 + 16);

  return sub_240B1F820(v5, v4, a1);
}

uint64_t sub_240B21420()
{
  return sub_240B205F0();
}

uint64_t sub_240B21428(uint64_t a1)
{
  return sub_240B21448(a1, &qword_26AFD8208, (void (*)(uint64_t))type metadata accessor for AFibFeaturesPromotionGenerator);
}

uint64_t sub_240B21448(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a2;
  if (!*a2)
  {
    a3(255);
    uint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_240B21488()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B21498()
{
  return sub_240B20710();
}

uint64_t sub_240B214D0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B21508()
{
  return sub_240B20FFC();
}

uint64_t sub_240B21510()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B21548()
{
  return sub_240B20ED8();
}

uint64_t sub_240B21550(unint64_t a1, unint64_t a2)
{
  sub_240AF1C14();
  if (a2 >> 62)
  {
    uint64_t v4 = sub_240BB7920();
    self;
    if (swift_dynamicCastObjCClass()) {
      return v4;
    }
  }
  else
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
    {
      uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
      swift_unknownObjectRetain();
      self;
      if (!swift_dynamicCastObjCClass()) {
        goto LABEL_10;
      }
      return v4;
    }
    __break(1u);
  }
LABEL_10:
  sub_240BB77C0();
  sub_240BB6E70();
  sub_240BB7C80();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  swift_getObjectType();
  sub_240BB50A0();
  sub_240BB7C80();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  uint64_t result = sub_240BB78E0();
  __break(1u);
  return result;
}

uint64_t sub_240B2172C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B2173C()
{
  return sub_240B20710();
}

void sub_240B21774(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    sub_240BB4850();
    uint64_t v6 = sub_240BB7900();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_240A3A624(0, (unint64_t *)&qword_26AFD9ED0, (uint64_t (*)(uint64_t))sub_240AF1C14, sub_240B21AEC, MEMORY[0x263F8DBD8]);
      uint64_t v3 = sub_240BB77A0();
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      sub_240BB4850();
      uint64_t v5 = sub_240BB7900();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = MEMORY[0x263F8EE88];
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = v3 + 56;
  uint64_t v42 = v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = sub_240B21550(v8, a1);
      BOOL v10 = __OFADD__(v8++, 1);
      if (v10)
      {
        __break(1u);
        goto LABEL_37;
      }
      uint64_t v11 = v9;
      uint64_t v12 = sub_240BB74F0();
      uint64_t v13 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v14 = v12 & ~v13;
      unint64_t v15 = v14 >> 6;
      uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
      uint64_t v17 = 1 << v14;
      if (((1 << v14) & v16) != 0)
      {
        sub_240AF1C14();
        id v18 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
        char v19 = sub_240BB7500();

        if (v19)
        {
LABEL_11:
          sub_240BB50A0();
          goto LABEL_12;
        }
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
          char v22 = sub_240BB7500();

          if (v22) {
            goto LABEL_11;
          }
        }
      }
      *(void *)(v7 + 8 * v15) = v17 | v16;
      *(void *)(*(void *)(v3 + 48) + 8 * v14) = v11;
      uint64_t v23 = *(void *)(v3 + 16);
      BOOL v10 = __OFADD__(v23, 1);
      uint64_t v24 = v23 + 1;
      if (v10) {
        goto LABEL_38;
      }
      *(void *)(v3 + 16) = v24;
LABEL_12:
      if (v8 == v42) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v40 = a1 + 32;
  uint64_t v41 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v41)
  {
    id v26 = *(id *)(v40 + 8 * v25);
    uint64_t v27 = sub_240BB74F0();
    uint64_t v28 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v29 = v27 & ~v28;
    unint64_t v30 = v29 >> 6;
    uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
    uint64_t v32 = 1 << v29;
    if (((1 << v29) & v31) != 0)
    {
      sub_240AF1C14();
      id v33 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
      char v34 = sub_240BB7500();

      if (v34)
      {
LABEL_23:

        uint64_t v5 = v42;
        goto LABEL_24;
      }
      uint64_t v35 = ~v28;
      while (1)
      {
        unint64_t v29 = (v29 + 1) & v35;
        unint64_t v30 = v29 >> 6;
        uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
        uint64_t v32 = 1 << v29;
        if ((v31 & (1 << v29)) == 0) {
          break;
        }
        id v36 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
        char v37 = sub_240BB7500();

        if (v37) {
          goto LABEL_23;
        }
      }
      uint64_t v5 = v42;
    }
    *(void *)(v7 + 8 * v30) = v32 | v31;
    *(void *)(*(void *)(v3 + 48) + 8 * v29) = v26;
    uint64_t v38 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v38, 1);
    uint64_t v39 = v38 + 1;
    if (v10) {
      goto LABEL_39;
    }
    *(void *)(v3 + 16) = v39;
LABEL_24:
    if (++v25 == v5) {
      return;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

uint64_t sub_240B21AEC()
{
  return sub_240A20A74((unint64_t *)&unk_26AFD9920, (void (*)(uint64_t))sub_240AF1C14);
}

uint64_t sub_240B21B24(uint64_t a1, uint64_t a2)
{
  sub_240AE8760();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[1] = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  sub_240AE8C18(0, &qword_268CA0560, MEMORY[0x263F8E0F8]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_240BB97E0;
  *(unsigned char *)(v9 + 32) = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2) & 1;
  sub_240A3B664();
  sub_240A3B8E4(&qword_26AFD7528, (void (*)(uint64_t))sub_240A3B664);
  sub_240BB63E0();
  swift_release();
  swift_bridgeObjectRelease();
  sub_240A3B8E4(&qword_268CA0568, (void (*)(uint64_t))sub_240AE8760);
  uint64_t v10 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10;
}

uint64_t sub_240B21D34()
{
  sub_240A80414(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A97F3C();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B22468();
  uint64_t v18 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3466C((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t v20 = sub_240BB5790();
  sub_240B1A1B8();
  id v19 = (id)sub_240BB7310();
  uint64_t v13 = sub_240BB72F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v3, 1, 1, v13);
  sub_240A22390();
  sub_240A3B8E4((unint64_t *)&qword_26AFD8A30, (void (*)(uint64_t))sub_240A22390);
  sub_240A3B8E4((unint64_t *)&qword_26AFD9970, (void (*)(uint64_t))sub_240B1A1B8);
  sub_240BB6400();
  sub_240A9D678((uint64_t)v3);

  swift_release();
  sub_240A3B8E4(&qword_268C9F8C8, (void (*)(uint64_t))sub_240A97F3C);
  sub_240BB6330();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_240A3B8E4(&qword_268CA0D90, (void (*)(uint64_t))sub_240B22468);
  uint64_t v14 = v18;
  uint64_t v15 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v14);
  return v15;
}

uint64_t sub_240B220C4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_240BB56D0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_240B220F4()
{
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FeatureStatusIsOnboardedProvider()
{
  return self;
}

uint64_t sub_240B22150()
{
  uint64_t v1 = sub_240BB56E0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3466C((void *)(v0 + 16), *(void *)(v0 + 40));
  sub_240BB5770();
  char v5 = sub_240BB56D0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v5 & 1;
}

uint64_t type metadata accessor for NotOnboardedIsOnboardedProvider()
{
  return self;
}

void destroy for IsAvailableForAvailabilityContextProvider(uint64_t a1)
{
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1);
  uint64_t v2 = *(void **)(a1 + 40);
}

uint64_t initializeWithCopy for IsAvailableForAvailabilityContextProvider(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  char v5 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v5;
  id v6 = v5;
  return a1;
}

uint64_t *assignWithCopy for IsAvailableForAvailabilityContextProvider(uint64_t *a1, uint64_t *a2)
{
  sub_240A51F9C(a1, a2);
  long long v4 = (void *)a2[5];
  char v5 = (void *)a1[5];
  a1[5] = (uint64_t)v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for IsAvailableForAvailabilityContextProvider(uint64_t a1, uint64_t a2)
{
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  id v6 = *(void **)(a1 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;

  return a1;
}

uint64_t getEnumTagSinglePayload for IsAvailableForAvailabilityContextProvider(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IsAvailableForAvailabilityContextProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IsAvailableForAvailabilityContextProvider()
{
  return &type metadata for IsAvailableForAvailabilityContextProvider;
}

uint64_t sub_240B22458()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_240B22460()
{
  return swift_retain();
}

void sub_240B22468()
{
  if (!qword_268CA0D88)
  {
    sub_240A97F3C();
    sub_240A3B8E4(&qword_268C9F8C8, (void (*)(uint64_t))sub_240A97F3C);
    unint64_t v0 = sub_240BB6010();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA0D88);
    }
  }
}

uint64_t sub_240B22504()
{
  uint64_t v7 = sub_240BB5990();
  MEMORY[0x270FA5388](v7);
  uint64_t v1 = sub_240BB56E0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  long long v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3466C(v0, v0[3]);
  sub_240BB5770();
  unsigned __int8 v5 = sub_240B22850((uint64_t)v4);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v5 & 1;
}

id sub_240B22850(uint64_t a1)
{
  uint64_t v2 = sub_240BB5990();
  uint64_t v59 = *(void *)(v2 - 8);
  uint64_t v60 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v65 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_240BB5690();
  uint64_t v67 = *(void *)(v4 - 8);
  uint64_t v68 = v4;
  MEMORY[0x270FA5388](v4);
  id v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240BB56B0();
  os_log_t v69 = *(os_log_t *)(v7 - 8);
  uint64_t v70 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v63 = (char *)&v57 - v11;
  uint64_t v64 = sub_240BB5660();
  uint64_t v62 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v61 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_240BB56E0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  unint64_t v58 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  id v19 = (char *)&v57 - v18;
  MEMORY[0x270FA5388](v17);
  id v21 = (char *)&v57 - v20;
  char v22 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v23 = a1;
  v22((char *)&v57 - v20, a1, v13);
  int v24 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v21, v13);
  if (v24 == *MEMORY[0x263F44990])
  {
    (*(void (**)(char *, uint64_t))(v14 + 96))(v21, v13);
    uint64_t v25 = v67;
    uint64_t v26 = v68;
    (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v6, v21, v68);
    sub_240BB5650();
    uint64_t v27 = sub_240BB56A0();
    uint64_t v28 = v25;
    if (*(void *)(v27 + 16))
    {
      id v29 = *(id *)(v66 + 40);
      uint64_t v30 = sub_240AB9EC4();
      if (v31)
      {
        id v32 = *(id *)(*(void *)(v27 + 56) + 8 * v30);

        swift_bridgeObjectRelease();
        id v33 = objc_msgSend(v32, sel_areAllRequirementsSatisfied);

LABEL_13:
        ((void (*)(char *, uint64_t))v69[1].isa)(v10, v70);
        (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v26);
        return v33;
      }
    }
    swift_bridgeObjectRelease();
    id v33 = 0;
    goto LABEL_13;
  }
  if (v24 == *MEMORY[0x263F44988])
  {
    (*(void (**)(char *, uint64_t))(v14 + 96))(v21, v13);
    uint64_t v35 = v61;
    uint64_t v34 = v62;
    uint64_t v36 = v64;
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v61, v21, v64);
    char v37 = v63;
    sub_240BB5650();
    uint64_t v38 = sub_240BB56A0();
    if (*(void *)(v38 + 16))
    {
      id v39 = *(id *)(v66 + 40);
      uint64_t v40 = sub_240AB9EC4();
      os_log_t v42 = v69;
      uint64_t v41 = v70;
      if (v43)
      {
        id v44 = *(id *)(*(void *)(v38 + 56) + 8 * v40);

        swift_bridgeObjectRelease();
        id v33 = objc_msgSend(v44, sel_areAllRequirementsSatisfied);
      }
      else
      {

        swift_bridgeObjectRelease();
        id v33 = 0;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      id v33 = 0;
      os_log_t v42 = v69;
      uint64_t v41 = v70;
    }
    ((void (*)(char *, uint64_t))v42[1].isa)(v37, v41);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
  }
  else
  {
    uint64_t v45 = v65;
    sub_240BB5960();
    v22(v19, v23, v13);
    uint64_t v46 = sub_240BB5970();
    os_log_type_t v47 = sub_240BB7180();
    int v48 = v47;
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v49 = swift_slowAlloc();
      os_log_t v69 = v46;
      uint64_t v50 = v49;
      uint64_t v70 = swift_slowAlloc();
      uint64_t v72 = v70;
      *(_DWORD *)uint64_t v50 = 136315394;
      uint64_t v71 = sub_240A38940(0xD000000000000029, 0x8000000240BC1790, &v72);
      sub_240BB75F0();
      *(_WORD *)(v50 + 12) = 2080;
      LODWORD(v68) = v48;
      v22(v58, (uint64_t)v19, v13);
      uint64_t v51 = sub_240BB6E10();
      uint64_t v71 = sub_240A38940(v51, v52, &v72);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      uint64_t v53 = *(void (**)(char *, uint64_t))(v14 + 8);
      v53(v19, v13);
      os_log_t v54 = v69;
      _os_log_impl(&dword_240A1B000, v69, (os_log_type_t)v68, "[%s] Unknown feature status received: %s", (uint8_t *)v50, 0x16u);
      uint64_t v55 = v70;
      swift_arrayDestroy();
      MEMORY[0x24560B930](v55, -1, -1);
      MEMORY[0x24560B930](v50, -1, -1);

      (*(void (**)(char *, uint64_t))(v59 + 8))(v65, v60);
    }
    else
    {
      uint64_t v53 = *(void (**)(char *, uint64_t))(v14 + 8);
      v53(v19, v13);

      (*(void (**)(char *, uint64_t))(v59 + 8))(v45, v60);
    }
    v53(v21, v13);
    return 0;
  }
  return v33;
}

uint64_t sub_240B22FD8()
{
  sub_240A80414(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A97F3C();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B22468();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v20 = v9;
  uint64_t v21 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3466C(v0, v0[3]);
  *(void *)&v22[0] = sub_240BB5790();
  sub_240B1A1B8();
  id v23 = (id)sub_240BB7310();
  uint64_t v13 = sub_240BB72F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v3, 1, 1, v13);
  sub_240A22390();
  sub_240A3B8E4((unint64_t *)&qword_26AFD8A30, (void (*)(uint64_t))sub_240A22390);
  sub_240A3B8E4((unint64_t *)&qword_26AFD9970, (void (*)(uint64_t))sub_240B1A1B8);
  sub_240BB6400();
  sub_240A9D678((uint64_t)v3);

  swift_release();
  sub_240B233AC((uint64_t)v0, (uint64_t)v22);
  uint64_t v14 = (_OWORD *)swift_allocObject();
  long long v15 = v22[1];
  v14[1] = v22[0];
  v14[2] = v15;
  uint64_t v14[3] = v22[2];
  sub_240A3B8E4(&qword_268C9F8C8, (void (*)(uint64_t))sub_240A97F3C);
  sub_240BB6330();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_240A3B8E4(&qword_268CA0D90, (void (*)(uint64_t))sub_240B22468);
  uint64_t v16 = v20;
  uint64_t v17 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v16);
  return v17;
}

uint64_t sub_240B233AC(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a2, a1);
  uint64_t v5 = *(void **)(a1 + 40);
  *(void *)(a2 + 40) = v5;
  id v6 = v5;
  return a2;
}

uint64_t sub_240B2341C()
{
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 16);

  return MEMORY[0x270FA0238](v0, 64, 7);
}

id sub_240B2345C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  id result = sub_240B22850(a1);
  *a2 = result & 1;
  return result;
}

uint64_t sub_240B2348C(void *a1, uint64_t a2, char a3)
{
  sub_240B27A84(0, &qword_268CA0DF0, MEMORY[0x263F8E0C0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v12 - v9;
  sub_240A3466C(a1, a1[3]);
  sub_240B279DC();
  sub_240BB7C40();
  uint64_t v12 = a2;
  char v13 = a3;
  sub_240B27A30();
  sub_240BB7A90();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_240B235F4(uint64_t a1)
{
  unint64_t v2 = sub_240B279DC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240B23630(uint64_t a1)
{
  unint64_t v2 = sub_240B279DC();

  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_240B2366C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id result = sub_240B274C8(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_240B2369C(void *a1)
{
  return sub_240B2348C(a1, *(void *)v1, *(unsigned char *)(v1 + 8));
}

id sub_240B236BC()
{
  uint64_t v1 = OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController____lazy_storage___tileView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController____lazy_storage___tileView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController____lazy_storage___tileView);
  }
  else
  {
    sub_240BB5160();
    id v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    char v5 = self;
    id v6 = v4;
    id v7 = objc_msgSend(v5, sel_clearColor);
    objc_msgSend(v6, sel_setBackgroundColor_, v7);

    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v8 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

uint64_t sub_240B2379C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_240BB5990();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB5950();
  id v6 = sub_240BB5970();
  os_log_type_t v7 = sub_240BB71A0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_240A1B000, v6, v7, "CardioFitnessRetroComputeTileViewController loaded", v8, 2u);
    MEMORY[0x24560B930](v8, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v9 = (objc_class *)type metadata accessor for CardioFitnessRetroComputeTipTileViewController();
  v12.receiver = v1;
  v12.super_class = v9;
  objc_msgSendSuper2(&v12, sel_viewDidLoad);
  sub_240B239FC();
  id v10 = sub_240B236BC();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_240BB5120();

  return swift_release();
}

void sub_240B23960(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x24560BA20](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    sub_240B242FC();
  }
}

void sub_240B239FC()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v3 = v2;
  id v4 = sub_240B236BC();
  objc_msgSend(v3, sel_addSubview_, v4);

  sub_240A2C890(0, (unint64_t *)&qword_26AFD77C0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240BBCBA0;
  id v6 = sub_240B236BC();
  id v7 = objc_msgSend(v6, sel_topAnchor);

  id v8 = objc_msgSend(v1, sel_view);
  if (!v8)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v9 = v8;
  id v10 = objc_msgSend(v8, sel_topAnchor);

  id v11 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v10);
  *(void *)(v5 + 32) = v11;
  id v12 = sub_240B236BC();
  id v13 = objc_msgSend(v12, sel_bottomAnchor);

  id v14 = objc_msgSend(v1, sel_view);
  if (!v14)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  long long v15 = v14;
  id v16 = objc_msgSend(v14, sel_bottomAnchor);

  id v17 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v16);
  *(void *)(v5 + 40) = v17;
  id v18 = sub_240B236BC();
  id v19 = objc_msgSend(v18, sel_leadingAnchor);

  id v20 = objc_msgSend(v1, sel_view);
  if (!v20)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v21 = v20;
  id v22 = objc_msgSend(v20, sel_leadingAnchor);

  id v23 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v22);
  *(void *)(v5 + 48) = v23;
  id v24 = sub_240B236BC();
  id v25 = objc_msgSend(v24, sel_trailingAnchor);

  id v26 = objc_msgSend(v1, sel_view);
  if (!v26)
  {
LABEL_13:
    __break(1u);
    return;
  }
  uint64_t v27 = v26;
  uint64_t v28 = self;
  id v29 = objc_msgSend(v27, sel_trailingAnchor);

  id v30 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v29);
  *(void *)(v5 + 56) = v30;
  sub_240BB6F30();
  sub_240A34DC4(0, (unint64_t *)&qword_268CA2490);
  char v31 = (void *)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v28, sel_activateConstraints_, v31);

  uint64_t v32 = sub_240B23D80();
  sub_240B23F68(v32, v33);

  sub_240B265C0();
}

uint64_t sub_240B23D80()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_context;
  swift_beginAccess();
  sub_240A8ACAC(v1, (uint64_t)&v12);
  uint64_t v2 = v13;
  if (v13)
  {
    uint64_t v3 = sub_240A3466C(&v12, v13);
    uint64_t v4 = *(void *)(v2 - 8);
    MEMORY[0x270FA5388](v3);
    id v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v4 + 16))(v6);
    sub_240B27200((uint64_t)&v12);
    uint64_t v7 = sub_240BB4E40();
    unint64_t v9 = v8;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
    if (v9 >> 60 != 15)
    {
      sub_240BB2740();
      swift_allocObject();
      sub_240BB2730();
      sub_240B27938();
      sub_240BB2720();
      sub_240A8B070(v7, v9);
      swift_release();
      return v12;
    }
  }
  else
  {
    sub_240B27200((uint64_t)&v12);
  }
  return 0;
}

uint64_t sub_240B23F68(uint64_t result, unsigned __int8 a2)
{
  if (a2 <= 0xFDu)
  {
    if (a2 >> 6)
    {
      if (a2 >> 6 != 1) {
        return result;
      }
      uint64_t v3 = result;
      char v4 = a2 & 1;
      sub_240B25170();
      sub_240B25BE0();
      type metadata accessor for HeartHealthPluginDelegate();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v6 = self;
      id v7 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
      sub_240BB2980();

      unint64_t v8 = (void *)sub_240BB6DA0();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setTitle_, v8, 0xE000000000000000);

      id v9 = sub_240B236BC();
      sub_240B27668(v3, v4);
      id v10 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
    }
    else
    {
      sub_240B255DC();
      type metadata accessor for HeartHealthPluginDelegate();
      uint64_t v11 = swift_getObjCClassFromMetadata();
      uint64_t v12 = self;
      id v13 = objc_msgSend(v12, sel_bundleForClass_, v11);
      sub_240BB2980();

      id v14 = (void *)sub_240BB6DA0();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setTitle_, v14, 0xE000000000000000);

      id v9 = sub_240B236BC();
      id v15 = objc_msgSend(v12, sel_bundleForClass_, v11);
      sub_240BB2980();

      id v10 = objc_msgSend(v12, sel_bundleForClass_, v11, 0xE000000000000000);
    }
    sub_240BB2980();

    sub_240BB5130();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_240B242FC()
{
  swift_getObjectType();
  sub_240B23D80();
  if (v1 > 0xFDu)
  {
LABEL_7:
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_240BB5990();
    sub_240A395FC(v2, (uint64_t)qword_26AFDEC70);
    id v9 = v0;
    uint64_t v3 = sub_240BB5970();
    os_log_type_t v4 = sub_240BB7190();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v6 = swift_slowAlloc();
      uint64_t v10 = v6;
      *(_DWORD *)uint64_t v5 = 136446210;
      sub_240B23D80();
      sub_240A2C890(0, &qword_26AFD7268, (uint64_t)&type metadata for CardioFitnessRetroComputeFeedItemState, MEMORY[0x263F8D8F0]);
      uint64_t v7 = sub_240BB6E10();
      sub_240A38940(v7, v8, &v10);
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v3, v4, "Tapped on retro compute tile with an unknown configuration state: %{public}s", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v6, -1, -1);
      MEMORY[0x24560B930](v5, -1, -1);
    }
    else
    {
    }
    return;
  }
  if (v1 >> 6)
  {
    if (v1 >> 6 == 1)
    {
      sub_240B70C74();
      sub_240BB6E40();
      swift_bridgeObjectRelease();
      return;
    }
    goto LABEL_7;
  }

  sub_240B245C8();
}

void sub_240B245C8()
{
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_240BB2980();

  id v4 = objc_msgSend(v2, (SEL)&selRef_setModalPresentationStyle_ + 5, ObjCClassFromMetadata, 0xE000000000000000);
  sub_240BB2980();

  uint64_t v5 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v5, v6, 1, 0xE000000000000000);

  id v8 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_240BB2980();

  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v0;
  id v10 = v0;
  uint64_t v11 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  id v29 = (uint64_t (*)(void))sub_240B2749C;
  uint64_t v30 = v9;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v26 = 1107296256;
  uint64_t v27 = sub_240B187EC;
  uint64_t v28 = &unk_26F507E68;
  uint64_t v12 = _Block_copy(&aBlock);
  swift_release();
  id v13 = self;
  id v24 = objc_msgSend(v13, sel_actionWithTitle_style_handler_, v11, 0, v12, 0xE000000000000000);
  _Block_release(v12);

  id v14 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_240BB2980();

  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v10;
  id v23 = v10;
  id v16 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  id v29 = (uint64_t (*)(void))sub_240B274C0;
  uint64_t v30 = v15;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v26 = 1107296256;
  uint64_t v27 = sub_240B187EC;
  uint64_t v28 = &unk_26F507EB8;
  id v17 = _Block_copy(&aBlock);
  swift_release();
  id v18 = objc_msgSend(v13, sel_actionWithTitle_style_handler_, v16, 0, v17, 0xE000000000000000);
  _Block_release(v17);

  id v19 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_240BB2980();

  id v20 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  id v29 = nullsub_1;
  uint64_t v30 = 0;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v26 = 1107296256;
  uint64_t v27 = sub_240B187EC;
  uint64_t v28 = &unk_26F507EE0;
  uint64_t v21 = _Block_copy(&aBlock);
  swift_release();
  id v22 = objc_msgSend(v13, sel_actionWithTitle_style_handler_, v20, 1, v21, 0xE000000000000000);
  _Block_release(v21);

  objc_msgSend(v7, sel_addAction_, v24);
  objc_msgSend(v7, sel_addAction_, v18);
  objc_msgSend(v7, sel_addAction_, v22);
  objc_msgSend(v23, sel_presentViewController_animated_completion_, v7, 1, 0);
}

uint64_t sub_240B24B98()
{
  swift_getObjectType();
  sub_240B70C74();
  sub_240BB6E40();

  return swift_bridgeObjectRelease();
}

void sub_240B24BE8()
{
  uint64_t ObjectType = swift_getObjectType();
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F017B8]), sel_init);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = ObjectType;
  void v10[4] = sub_240B2745C;
  v10[5] = v3;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  v10[2] = sub_240B25104;
  v10[3] = &unk_26F507E18;
  id v4 = _Block_copy(v10);
  swift_release();
  objc_msgSend(v2, sel_triggerRetrocomputeWithHandler_, v4);
  _Block_release(v4);
  id v5 = objc_msgSend(v0, sel_parentViewController);
  if (!v5) {
    goto LABEL_6;
  }
  uint64_t v6 = v5;
  self;
  id v7 = (void *)swift_dynamicCastObjCClass();
  if (!v7)
  {
LABEL_5:

LABEL_6:
    return;
  }
  id v8 = objc_msgSend(v7, sel_collectionView);
  if (v8)
  {
    id v9 = v8;
    objc_msgSend(v8, sel__scrollToTopIfPossible_, 1);

    id v2 = v9;
    goto LABEL_5;
  }
  __break(1u);
}

void sub_240B24D58(void *a1)
{
  if (a1)
  {
    id v2 = a1;
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_240BB5990();
    sub_240A395FC(v3, (uint64_t)qword_26AFDEC70);
    id v4 = a1;
    id v5 = a1;
    oslog = sub_240BB5970();
    os_log_type_t v6 = sub_240BB7180();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v21 = v8;
      *(_DWORD *)uint64_t v7 = 136446466;
      uint64_t v9 = sub_240BB7C80();
      sub_240A38940(v9, v10, &v21);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2082;
      id v11 = a1;
      sub_240A39BC8(0, (unint64_t *)&qword_26AFD99E0);
      uint64_t v12 = sub_240BB6E10();
      sub_240A38940(v12, v13, &v21);
      sub_240BB75F0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_240A1B000, oslog, v6, "[%{public}s] Failed to trigger retrocompute: %{public}s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v8, -1, -1);
      MEMORY[0x24560B930](v7, -1, -1);

      return;
    }
  }
  else
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_240BB5990();
    sub_240A395FC(v14, (uint64_t)qword_26AFDEC70);
    oslog = sub_240BB5970();
    os_log_type_t v15 = sub_240BB71A0();
    if (os_log_type_enabled(oslog, v15))
    {
      id v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v21 = v17;
      *(_DWORD *)id v16 = 136446210;
      uint64_t v18 = sub_240BB7C80();
      sub_240A38940(v18, v19, &v21);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, oslog, v15, "[%{public}s] Successfully triggered retrocompute", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v17, -1, -1);
      MEMORY[0x24560B930](v16, -1, -1);

      return;
    }
  }
}

void sub_240B25104(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_240B25170()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_240BB5990();
  sub_240A395FC(v3, (uint64_t)qword_26AFDEC70);
  id v4 = sub_240BB5970();
  os_log_type_t v5 = sub_240BB71A0();
  if (os_log_type_enabled(v4, v5))
  {
    os_log_type_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    v26[0] = v7;
    *(_DWORD *)os_log_type_t v6 = 136446210;
    uint64_t v8 = sub_240BB7C80();
    v24[0] = sub_240A38940(v8, v9, v26);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v4, v5, "[%{public}s] Resetting available dismissal states", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v7, -1, -1);
    MEMORY[0x24560B930](v6, -1, -1);
  }

  uint64_t v10 = v1 + OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_context;
  swift_beginAccess();
  uint64_t result = sub_240A8ACAC(v10, (uint64_t)v24);
  uint64_t v12 = v25;
  if (v25)
  {
    unint64_t v13 = sub_240A3466C(v24, v25);
    uint64_t v14 = *(void *)(v12 - 8);
    MEMORY[0x270FA5388](v13);
    id v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
    (*(void (**)(char *))(v14 + 16))(v16);
    uint64_t v17 = (void *)sub_240BB4E10();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v12);
    sub_240BB3440();
    swift_allocObject();
    id v18 = v17;
    uint64_t v19 = sub_240BB3400();

    v26[0] = v19;
    v26[1] = 0xD000000000000016;
    _OWORD v26[2] = 0x8000000240BC8DD0;
    v26[3] = 0xD000000000000016;
    v26[4] = 0x8000000240BC8DF0;
    void v26[5] = 0xD000000000000020;
    v26[6] = 0x8000000240BC8E10;
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v24);
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = 0;
    v24[0] = sub_240A4E694(0);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v20;
    *(void *)(v21 + 24) = ObjectType;
    sub_240A7E1A4();
    sub_240B273E0((unint64_t *)&qword_26AFD9EA0, (void (*)(uint64_t))sub_240A7E1A4);
    swift_retain();
    uint64_t v22 = sub_240BB6340();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_beginAccess();
    *(void *)(v20 + 16) = v22;
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240B255DC()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  sub_240A4958C();
  MEMORY[0x270FA5388](v2 - 8);
  id v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B2731C();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_240BB5990();
  sub_240A395FC(v10, (uint64_t)qword_26AFDEC70);
  id v11 = sub_240BB5970();
  os_log_type_t v12 = sub_240BB71A0();
  BOOL v13 = os_log_type_enabled(v11, v12);
  uint64_t v35 = v7;
  uint64_t v36 = v6;
  if (v13)
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    v41[0] = v15;
    *(_DWORD *)uint64_t v14 = 136446210;
    uint64_t v16 = sub_240BB7C80();
    v39[0] = sub_240A38940(v16, v17, v41);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v11, v12, "[%{public}s] Resetting completed dismissal and last seen dates", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v15, -1, -1);
    MEMORY[0x24560B930](v14, -1, -1);
  }

  uint64_t v18 = v1 + OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_context;
  swift_beginAccess();
  uint64_t result = sub_240A8ACAC(v18, (uint64_t)v39);
  uint64_t v20 = v40;
  if (v40)
  {
    uint64_t v21 = sub_240A3466C(v39, v40);
    uint64_t v22 = *(void *)(v20 - 8);
    MEMORY[0x270FA5388](v21);
    id v24 = (char *)&v35 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v22 + 16))(v24);
    uint64_t v25 = (void *)sub_240BB4E10();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v20);
    sub_240BB3440();
    swift_allocObject();
    id v26 = v25;
    uint64_t v27 = sub_240BB3400();

    v41[0] = v27;
    v41[1] = 0xD000000000000016;
    v41[2] = 0x8000000240BC8DD0;
    v41[3] = 0xD000000000000016;
    v41[4] = 0x8000000240BC8DF0;
    v41[5] = 0xD000000000000020;
    v41[6] = 0x8000000240BC8E10;
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v39);
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = 0;
    v39[0] = sub_240A4EB0C(0);
    uint64_t v29 = sub_240BB2CF0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v4, 1, 1, v29);
    uint64_t v30 = sub_240A4EF84();
    sub_240A49B18((uint64_t)v4);
    uint64_t v38 = v30;
    sub_240A7E1A4();
    sub_240B273E0((unint64_t *)&qword_26AFD9EA0, (void (*)(uint64_t))sub_240A7E1A4);
    sub_240BB6320();
    swift_release();
    swift_release();
    uint64_t v31 = swift_allocObject();
    uint64_t v32 = ObjectType;
    *(void *)(v31 + 16) = v28;
    *(void *)(v31 + 24) = v32;
    sub_240B273E0(&qword_268CA0DE0, (void (*)(uint64_t))sub_240B2731C);
    swift_retain();
    uint64_t v33 = v36;
    uint64_t v34 = sub_240BB6340();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v33);
    swift_beginAccess();
    *(void *)(v28 + 16) = v34;
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240B25BE0()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  sub_240A4958C();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_240BB5990();
  sub_240A395FC(v6, (uint64_t)qword_26AFDEC70);
  uint64_t v7 = sub_240BB5970();
  os_log_type_t v8 = sub_240BB71A0();
  if (os_log_type_enabled(v7, v8))
  {
    unint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v31[0] = v10;
    *(_DWORD *)unint64_t v9 = 136446210;
    uint64_t v11 = sub_240BB7C80();
    v29[0] = sub_240A38940(v11, v12, v31);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v7, v8, "[%{public}s] Setting last seen date if needed", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v10, -1, -1);
    MEMORY[0x24560B930](v9, -1, -1);
  }

  uint64_t v13 = v1 + OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_context;
  swift_beginAccess();
  uint64_t result = sub_240A8ACAC(v13, (uint64_t)v29);
  uint64_t v15 = v30;
  if (v30)
  {
    uint64_t v16 = sub_240A3466C(v29, v30);
    uint64_t v17 = *(void *)(v15 - 8);
    MEMORY[0x270FA5388](v16);
    uint64_t v19 = (char *)v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
    (*(void (**)(char *))(v17 + 16))(v19);
    uint64_t v20 = (void *)sub_240BB4E10();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v15);
    sub_240BB3440();
    swift_allocObject();
    id v21 = v20;
    uint64_t v22 = sub_240BB3400();

    v31[0] = v22;
    v31[1] = 0xD000000000000016;
    v31[2] = 0x8000000240BC8DD0;
    v31[3] = 0xD000000000000016;
    v31[4] = 0x8000000240BC8DF0;
    v31[5] = 0xD000000000000020;
    v31[6] = 0x8000000240BC8E10;
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v29);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = 0;
    sub_240BB2CE0();
    uint64_t v24 = sub_240BB2CF0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v5, 0, 1, v24);
    uint64_t v25 = sub_240A4F328((uint64_t)v5);
    sub_240A49B18((uint64_t)v5);
    v29[0] = v25;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v23;
    *(void *)(v26 + 24) = ObjectType;
    sub_240A7E1A4();
    sub_240B273E0((unint64_t *)&qword_26AFD9EA0, (void (*)(uint64_t))sub_240A7E1A4);
    swift_retain();
    uint64_t v27 = sub_240BB6340();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_beginAccess();
    *(void *)(v23 + 16) = v27;
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240B260E4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_240BB5990();
  sub_240A395FC(v6, (uint64_t)qword_26AFDEC70);
  uint64_t v7 = sub_240BB5970();
  os_log_type_t v8 = sub_240BB71A0();
  if (os_log_type_enabled(v7, v8))
  {
    unint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v14[0] = v10;
    *(_DWORD *)unint64_t v9 = 136446210;
    uint64_t v11 = sub_240BB7C80();
    sub_240A38940(v11, v12, v14);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v7, v8, a4, v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v10, -1, -1);
    MEMORY[0x24560B930](v9, -1, -1);
  }

  swift_beginAccess();
  swift_beginAccess();
  *(void *)(a2 + 16) = 0;
  return swift_release();
}

void sub_240B262A8()
{
  sub_240B23D80();
  if (v1 <= 0xFDu)
  {
    if (!(v1 >> 6))
    {
      if (qword_26AFD75B0 != -1) {
        swift_once();
      }
      uint64_t v2 = (void *)qword_26AFDEAE8;
      goto LABEL_15;
    }
    if (v1 >> 6 == 1)
    {
      if (qword_26AFD75B8 != -1) {
        swift_once();
      }
      uint64_t v2 = (void *)qword_26AFDEAF0;
LABEL_15:
      id v10 = objc_allocWithZone((Class)sub_240BB3A30());
      id v11 = v2;
      unint64_t v12 = (void *)sub_240BB3A20();
      sub_240A34DC4(0, &qword_268CA0DD0);
      id v13 = (id)sub_240BB7200();
      objc_msgSend(v13, sel_addOperation_, v12);

      goto LABEL_16;
    }
  }
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_240BB5990();
  sub_240A395FC(v3, (uint64_t)qword_26AFDEC70);
  id v13 = v0;
  uint64_t v4 = sub_240BB5970();
  os_log_type_t v5 = sub_240BB7190();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v14 = v7;
    *(_DWORD *)uint64_t v6 = 136446210;
    sub_240B23D80();
    sub_240A2C890(0, &qword_26AFD7268, (uint64_t)&type metadata for CardioFitnessRetroComputeFeedItemState, MEMORY[0x263F8D8F0]);
    uint64_t v8 = sub_240BB6E10();
    sub_240A38940(v8, v9, &v14);
    sub_240BB75F0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v4, v5, "Dismissed a retro compute tile with an unknown configuration state: %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v7, -1, -1);
    MEMORY[0x24560B930](v6, -1, -1);

    return;
  }

LABEL_16:
}

void sub_240B265C0()
{
  uint64_t v11 = sub_240BB6DE0();
  uint64_t v12 = v1;
  sub_240BB4850();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_baseIdentifier);
  swift_beginAccess();
  uint64_t *v2 = v11;
  v2[1] = v12;
  sub_240BB4850();
  swift_bridgeObjectRelease();
  sub_240BB4850();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  id v3 = sub_240B236BC();
  uint64_t v4 = (void *)sub_240BB6DA0();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4);

  id v5 = sub_240B236BC();
  uint64_t v6 = (void *)sub_240BB5150();

  sub_240BB4850();
  sub_240BB6E70();
  uint64_t v7 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setAccessibilityIdentifier_, v7);

  id v8 = sub_240B236BC();
  unint64_t v9 = (void *)sub_240BB5140();

  sub_240BB4850();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  id v10 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setAccessibilityIdentifier_, v10);
}

id sub_240B267EC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = &v3[OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_baseIdentifier];
  *uint64_t v6 = 0;
  v6[1] = 0;
  uint64_t v7 = &v3[OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_context];
  *(_OWORD *)uint64_t v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((void *)v7 + 4) = 0;
  *(void *)&v3[OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController____lazy_storage___tileView] = 0;
  id v8 = &v3[OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_detail];
  uint64_t v9 = *MEMORY[0x263F43FC0];
  uint64_t v10 = sub_240BB43B0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  v3[OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_showsSeparator] = 0;
  uint64_t v11 = &v3[OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_deselectionBehavior];
  v3[OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_deselectionBehavior] = 1;
  uint64_t v12 = *MEMORY[0x263F440D8];
  uint64_t v13 = sub_240BB46D0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
  if (a2)
  {
    uint64_t v14 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = 0;
  }
  v17.receiver = v3;
  v17.super_class = (Class)type metadata accessor for CardioFitnessRetroComputeTipTileViewController();
  id v15 = objc_msgSendSuper2(&v17, sel_initWithNibName_bundle_, v14, a3);

  return v15;
}

id sub_240B269D4(void *a1)
{
  id v3 = &v1[OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_baseIdentifier];
  *id v3 = 0;
  v3[1] = 0;
  uint64_t v4 = &v1[OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_context];
  *(_OWORD *)uint64_t v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((void *)v4 + 4) = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController____lazy_storage___tileView] = 0;
  id v5 = &v1[OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_detail];
  uint64_t v6 = *MEMORY[0x263F43FC0];
  uint64_t v7 = sub_240BB43B0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  v1[OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_showsSeparator] = 0;
  id v8 = &v1[OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_deselectionBehavior];
  v1[OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_deselectionBehavior] = 1;
  uint64_t v9 = *MEMORY[0x263F440D8];
  uint64_t v10 = sub_240BB46D0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  v13.receiver = v1;
  v13.super_class = (Class)type metadata accessor for CardioFitnessRetroComputeTipTileViewController();
  id v11 = objc_msgSendSuper2(&v13, sel_initWithCoder_, a1);

  return v11;
}

id sub_240B26B48()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardioFitnessRetroComputeTipTileViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240B26C68()
{
  return type metadata accessor for CardioFitnessRetroComputeTipTileViewController();
}

uint64_t type metadata accessor for CardioFitnessRetroComputeTipTileViewController()
{
  uint64_t result = qword_268CA0DB0;
  if (!qword_268CA0DB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240B26CBC()
{
  uint64_t result = sub_240BB43B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_240BB46D0();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_240B26DAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_context;
  swift_beginAccess();
  return sub_240A8ACAC(v3, a1);
}

uint64_t sub_240B26E00(uint64_t a1)
{
  uint64_t v3 = (uint64_t)v1 + OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_context;
  swift_beginAccess();
  sub_240A8ABD4(a1, v3);
  swift_endAccess();
  if (objc_msgSend(v1, sel_isViewLoaded))
  {
    uint64_t v4 = sub_240B23D80();
    sub_240B23F68(v4, v5);
  }
  return sub_240B27200(a1);
}

uint64_t (*sub_240B26E88(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_240B26EE8;
}

uint64_t sub_240B26EE8(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t result = (uint64_t)objc_msgSend(*(id *)(a1 + 24), sel_isViewLoaded);
    if (result)
    {
      uint64_t v5 = sub_240B23D80();
      return sub_240B23F68(v5, v6);
    }
  }
  return result;
}

void sub_240B26F38()
{
}

uint64_t sub_240B26F5C@<X0>(uint64_t a1@<X8>)
{
  return sub_240A8AACC(&OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_deselectionBehavior, MEMORY[0x263F440E8], a1);
}

uint64_t sub_240B26F7C()
{
  uint64_t v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_baseIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_240BB4850();
  return v2;
}

uint64_t sub_240B26FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(*v2 + OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_baseIdentifier);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_240B2703C())()
{
  return j__swift_endAccess;
}

uint64_t sub_240B2709C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F34768](a1, WitnessTable);
}

uint64_t sub_240B27100@<X0>(uint64_t a1@<X8>)
{
  return sub_240A8AACC(&OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_detail, MEMORY[0x263F43FC8], a1);
}

uint64_t sub_240B27120()
{
  char v0 = sub_240B23D80();
  if (v1 <= 0xFDu)
  {
    if (v1 >> 6)
    {
      if (v1 >> 6 == 1) {
        return 0;
      }
    }
    else if (v0)
    {
      return 0;
    }
  }
  return 1;
}

uint64_t sub_240B27170()
{
  return sub_240B273E0(&qword_268CA0DC0, (void (*)(uint64_t))type metadata accessor for CardioFitnessRetroComputeTipTileViewController);
}

uint64_t sub_240B271B8()
{
  return sub_240B273E0(&qword_268CA0DC8, (void (*)(uint64_t))type metadata accessor for CardioFitnessRetroComputeTipTileViewController);
}

uint64_t sub_240B27200(uint64_t a1)
{
  sub_240B278D0(0, (unint64_t *)&qword_268CA2470, (unint64_t *)&qword_268C9F700, MEMORY[0x263F444A0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240B27288()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B272C0()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B272F8(uint64_t a1)
{
  return sub_240B260E4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), "[%{public}s] Finished set last seen date");
}

void sub_240B2731C()
{
  if (!qword_268CA0DD8)
  {
    sub_240A7E1A4();
    sub_240B273E0((unint64_t *)&qword_26AFD9EA0, (void (*)(uint64_t))sub_240A7E1A4);
    unint64_t v0 = sub_240BB5F70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA0DD8);
    }
  }
}

uint64_t sub_240B273BC(uint64_t a1)
{
  return sub_240B260E4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), "[%{public}s] Finished reset completed dismissal and last seen dates");
}

uint64_t sub_240B273E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240B27428(uint64_t a1)
{
  return sub_240B260E4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), "[%{public}s] Finished reset available dismissal states");
}

uint64_t sub_240B2744C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_240B2745C(void *a1)
{
}

uint64_t sub_240B27464()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_240B2749C()
{
}

uint64_t sub_240B274C0()
{
  return sub_240B24B98();
}

void *sub_240B274C8(void *a1)
{
  sub_240B27A84(0, &qword_268CA0E08, MEMORY[0x263F8E040]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v10 - v6;
  id v8 = sub_240A3466C(a1, a1[3]);
  sub_240B279DC();
  sub_240BB7C30();
  if (!v1)
  {
    sub_240B27AE8();
    sub_240BB7A10();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    id v8 = v10;
  }
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  return v8;
}

uint64_t sub_240B27668(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0 || *(double *)&a1 == 0.0)
  {
    type metadata accessor for HeartHealthPluginDelegate();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v4 = sub_240BB2980();

    return v4;
  }
  else
  {
    id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
    objc_msgSend(v6, sel_setMaximumFractionDigits_, 1);
    uint64_t v7 = sub_240AAAA2C();
    uint64_t v9 = v8;
    type metadata accessor for HeartHealthPluginDelegate();
    uint64_t v10 = swift_getObjCClassFromMetadata();
    id v11 = objc_msgSend(self, sel_bundleForClass_, v10);
    sub_240BB2980();

    sub_240B278D0(0, (unint64_t *)&qword_26AFD99D8, (unint64_t *)&qword_26AFD9A10, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_240BB97E0;
    *(void *)(v12 + 56) = MEMORY[0x263F8D310];
    *(void *)(v12 + 64) = sub_240A4C66C();
    *(void *)(v12 + 32) = v7;
    *(void *)(v12 + 40) = v9;
    uint64_t v13 = sub_240BB6DB0();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v13;
  }
}

void sub_240B278D0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_240A39BC8(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_240B27938()
{
  unint64_t result = qword_268CA0DE8;
  if (!qword_268CA0DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0DE8);
  }
  return result;
}

uint64_t sub_240B2798C()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_240B279C4()
{
  sub_240B23960(v0);
}

ValueMetadata *type metadata accessor for CardioFitnessRetroComputeFeedItemConfiguration()
{
  return &type metadata for CardioFitnessRetroComputeFeedItemConfiguration;
}

unint64_t sub_240B279DC()
{
  unint64_t result = qword_268CA0DF8;
  if (!qword_268CA0DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0DF8);
  }
  return result;
}

unint64_t sub_240B27A30()
{
  unint64_t result = qword_268CA0E00;
  if (!qword_268CA0E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0E00);
  }
  return result;
}

void sub_240B27A84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_240B279DC();
    unint64_t v7 = a3(a1, &type metadata for CardioFitnessRetroComputeFeedItemConfiguration.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_240B27AE8()
{
  unint64_t result = qword_268CA0E10;
  if (!qword_268CA0E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0E10);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CardioFitnessRetroComputeFeedItemConfiguration.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x240B27BD8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessRetroComputeFeedItemConfiguration.CodingKeys()
{
  return &type metadata for CardioFitnessRetroComputeFeedItemConfiguration.CodingKeys;
}

unint64_t sub_240B27C14()
{
  unint64_t result = qword_268CA0E18;
  if (!qword_268CA0E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0E18);
  }
  return result;
}

unint64_t sub_240B27C6C()
{
  unint64_t result = qword_268CA0E20;
  if (!qword_268CA0E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0E20);
  }
  return result;
}

unint64_t sub_240B27CC4()
{
  unint64_t result = qword_268CA0E28;
  if (!qword_268CA0E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0E28);
  }
  return result;
}

uint64_t type metadata accessor for ConfirmDetailsDataSource()
{
  uint64_t result = qword_268CA0E50;
  if (!qword_268CA0E50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240B27D88()
{
  return swift_initClassMetadata2();
}

uint64_t sub_240B27DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v63 = sub_240BB44D0();
  uint64_t v5 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  unint64_t v7 = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B29AB0(0, (unint64_t *)&unk_26AFD9960, MEMORY[0x263F8F110]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v57 = (char *)v47 - v9;
  uint64_t v10 = sub_240BB6BA0();
  uint64_t v52 = *(void *)(v10 - 8);
  uint64_t v53 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v51 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B29980();
  uint64_t v55 = *(void *)(v12 - 8);
  uint64_t v56 = v12;
  MEMORY[0x270FA5388](v12);
  os_log_t v54 = (char *)v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B29B04();
  uint64_t v59 = *(void *)(v14 - 8);
  uint64_t v60 = v14;
  MEMORY[0x270FA5388](v14);
  unint64_t v58 = (char *)v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_240BB2D40();
  uint64_t v16 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v18 = (char *)v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (void (*)(uint64_t))MEMORY[0x263F44090];
  sub_240B29AB0(0, &qword_268C9FF40, MEMORY[0x263F44090]);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)v47 - v21;
  *(void *)(v2 + qword_268CA0E30 + 8) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v2 + qword_268CA0E48) = 0;
  *(void *)(v2 + qword_268CA0E38) = a1;
  uint64_t v50 = v2;
  *(void *)(v2 + qword_268CA0E40) = a2;
  uint64_t v23 = sub_240BB4590();
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  uint64_t v49 = v23;
  v24(v22, 1, 1);
  swift_retain();
  swift_retain();
  uint64_t v25 = sub_240AFA4EC((uint64_t)v22);
  uint64_t v26 = (uint64_t)v22;
  uint64_t v27 = v25;
  sub_240B29C18(v26, &qword_268C9FF40, v19);
  int64_t v28 = *(void *)(v27 + 16);
  uint64_t v48 = v16;
  if (v28)
  {
    v47[0] = a1;
    v47[1] = a2;
    v65[0] = (id)MEMORY[0x263F8EE78];
    int64_t v62 = v28;
    sub_240B0CB44(0, v28, 0);
    uint64_t v29 = 0;
    uint64_t v61 = v5 + 32;
    uint64_t v30 = v7;
    do
    {
      swift_bridgeObjectRetain_n();
      sub_240BB2D30();
      sub_240BB2D00();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v64);
      sub_240BB44C0();
      swift_bridgeObjectRelease();
      uint64_t v31 = v65[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_240B0CB44(0, v31[2] + 1, 1);
        uint64_t v31 = v65[0];
      }
      unint64_t v33 = v31[2];
      unint64_t v32 = v31[3];
      if (v33 >= v32 >> 1)
      {
        sub_240B0CB44(v32 > 1, v33 + 1, 1);
        uint64_t v31 = v65[0];
      }
      ++v29;
      v31[2] = v33 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v31+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v33, v30, v63);
      v65[0] = v31;
    }
    while (v62 != v29);
  }
  swift_bridgeObjectRelease();
  v65[0] = 0;
  v65[1] = (id)0xE000000000000000;
  sub_240BB77C0();
  swift_bridgeObjectRelease();
  strcpy((char *)v65, "MutableArray<");
  HIWORD(v65[1]) = -4864;
  sub_240BB2D30();
  sub_240BB2D00();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v18, v64);
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  uint64_t v34 = sub_240BB45E0();
  *(void *)(*(void *)(v34 + qword_268CA0E40) + 24) = &off_26F508050;
  swift_unknownObjectWeakAssign();
  swift_retain();
  v65[0] = (id)sub_240BB45A0();
  sub_240B29A2C();
  sub_240B29BD0(&qword_268CA0E70, (void (*)(uint64_t))sub_240B29A2C);
  uint64_t v35 = v54;
  sub_240BB62F0();
  swift_release();
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9980);
  char v37 = v51;
  uint64_t v36 = v52;
  uint64_t v38 = v53;
  (*(void (**)(char *, void, uint64_t))(v52 + 104))(v51, *MEMORY[0x263F8F068], v53);
  id v39 = (void *)sub_240BB7350();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
  v65[0] = v39;
  uint64_t v40 = sub_240BB72F0();
  uint64_t v41 = (uint64_t)v57;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v57, 1, 1, v40);
  sub_240B29BD0(&qword_268CA0E80, (void (*)(uint64_t))sub_240B29980);
  sub_240A805DC();
  os_log_t v42 = v58;
  uint64_t v43 = v56;
  sub_240BB6400();
  sub_240B29C18(v41, (unint64_t *)&unk_26AFD9960, MEMORY[0x263F8F110]);

  (*(void (**)(char *, uint64_t))(v55 + 8))(v35, v43);
  swift_allocObject();
  swift_weakInit();
  sub_240B29BD0((unint64_t *)&unk_268CA0E88, (void (*)(uint64_t))sub_240B29B04);
  uint64_t v44 = v60;
  uint64_t v45 = sub_240BB6450();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v42, v44);
  *(void *)(v34 + qword_268CA0E48) = v45;
  swift_release();
  return v34;
}

uint64_t sub_240B28738@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240AFD728(a1, a2);
}

uint64_t sub_240B28740(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_240AFA2BC(a1);
    return swift_release();
  }
  return result;
}

void sub_240B287B4()
{
}

uint64_t sub_240B287E4()
{
  sub_240A484BC(v0 + qword_268CA0E30);
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_240B28844()
{
  uint64_t v0 = sub_240BB4630();
  sub_240A484BC(v0 + qword_268CA0E30);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_240B288C4()
{
  return type metadata accessor for ConfirmDetailsDataSource();
}

void sub_240B288CC(uint64_t a1)
{
  if (*(void *)(a1 + 16) == 2)
  {
    sub_240BB4850();
    sub_240BB4600();
    swift_bridgeObjectRelease();
    sub_240BB4850();
    sub_240BB4600();
    swift_bridgeObjectRelease();
    uint64_t v2 = MEMORY[0x24560BA20](v1 + qword_268CA0E30);
    if (v2)
    {
      int v3 = *(void **)(v2 + qword_268C9F850);
      if (v3)
      {
        id v11 = v3;
        objc_msgSend(v11, sel_setEnabled_, sub_240AF9D14() & 1);
        sub_240BB50A0();
      }
      else
      {
        sub_240BB50A0();
      }
    }
  }
  else
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_240BB5990();
    sub_240A395FC(v4, (uint64_t)qword_26AFDEC70);
    swift_bridgeObjectRetain_n();
    uint64_t v5 = sub_240BB5970();
    os_log_type_t v6 = sub_240BB7190();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v12 = v8;
      *(_DWORD *)uint64_t v7 = 136446722;
      uint64_t v9 = sub_240BB7C80();
      sub_240A38940(v9, v10, &v12);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2082;
      sub_240A38940(0xD000000000000019, 0x8000000240BD1320, &v12);
      sub_240BB75F0();
      *(_WORD *)(v7 + 22) = 2048;
      swift_bridgeObjectRelease();
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v5, v6, "[%{public}s.%{public}s]: Received unexpected number of sections: %ld", (uint8_t *)v7, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v8, -1, -1);
      MEMORY[0x24560B930](v7, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_240B28C28()
{
  return sub_240BB70E0();
}

void sub_240B28CA8(uint64_t a1)
{
}

id sub_240B28CD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_240BB5BD0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B298BC();
  uint64_t v9 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  id v11 = (void *)((char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_240BB2F70();
  uint64_t v13 = (char *)v11 + *(int *)(v9 + 56);
  *id v11 = v12;
  uint64_t v14 = sub_240BB3AA0();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v13, a1, v14);
  int v16 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v13, v14);
  if (v16 != *MEMORY[0x263F439F8])
  {
    if (v16 == *MEMORY[0x263F439F0] && v12 == 1)
    {
      type metadata accessor for HeartHealthPluginDelegate();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v20 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      sub_240BB2980();

      uint64_t v21 = MEMORY[0x263F81F20];
      *(void *)(a2 + 24) = v4;
      *(void *)(a2 + 32) = v21;
      sub_240A23B08((uint64_t *)a2);
      sub_240BB5AD0();
      sub_240BB5BC0();
      return (id)(*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v13, v14);
    }
    goto LABEL_9;
  }
  if (v12 != 1)
  {
    if (!v12)
    {
      *(void *)(a2 + 32) = 0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      return (id)(*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v13, v14);
    }
LABEL_9:
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return (id)sub_240B29924((uint64_t)v11);
  }
  uint64_t v41 = v5;
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t v22 = swift_getObjCClassFromMetadata();
  uint64_t v23 = self;
  uint64_t v43 = v4;
  uint64_t v24 = v23;
  id v25 = objc_msgSend(v23, sel_bundleForClass_, v22);
  uint64_t v42 = sub_240BB2980();
  uint64_t v27 = v26;

  id v28 = objc_msgSend(v24, sel_bundleForClass_, v22);
  v39[1] = sub_240BB2980();

  uint64_t v29 = MEMORY[0x263F81F20];
  *(void *)(a2 + 24) = v43;
  *(void *)(a2 + 32) = v29;
  uint64_t v40 = sub_240A23B08((uint64_t *)a2);
  sub_240BB5AC0();
  sub_240BB4850();
  uint64_t v42 = v27;
  sub_240BB5BC0();
  id result = objc_msgSend(self, sel__preferredFontForTextStyle_variant_, *MEMORY[0x263F83618], 1024);
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v30 = (void (*)(unsigned char *, void))sub_240BB5B30();
  sub_240BB5B00();
  v30(v44, 0);
  uint64_t v31 = self;
  id v32 = objc_msgSend(v31, sel_labelColor);
  unint64_t v33 = (void (*)(unsigned char *, void))sub_240BB5B30();
  sub_240BB5B10();
  v33(v44, 0);
  sub_240BB4850();
  sub_240BB5AE0();
  sub_240A34DC4(0, (unint64_t *)&qword_268C9EEE0);
  sub_240BB7470();
  uint64_t v34 = (void (*)(unsigned char *, void))sub_240BB5B50();
  sub_240BB5B00();
  v34(v44, 0);
  id v35 = objc_msgSend(v31, sel_labelColor);
  uint64_t v36 = (void (*)(unsigned char *, void))sub_240BB5B50();
  sub_240BB5B10();
  v36(v44, 0);
  char v37 = (void (*)(unsigned char *, void))sub_240BB5B70();
  *(void *)(v38 + 16) = 0x4032000000000000;
  v37(v44, 0);
  sub_240BB5BA0();
  (*(void (**)(uint64_t *, char *, uint64_t))(v41 + 32))(v40, v7, v43);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (id)(*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v13, v14);
}

id sub_240B29314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240B28CD8(a1, a2);
}

char *sub_240B2932C(uint64_t a1, double a2)
{
  uint64_t v4 = sub_240BB5BD0();
  uint64_t v35 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v34 - v8;
  uint64_t v10 = sub_240BB3AA0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  int v14 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  int v15 = *MEMORY[0x263F439F8];
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  int v16 = 0;
  if (v14 != v15) {
    return v16;
  }
  if (sub_240BB2F70()) {
    return 0;
  }
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v18 = self;
  id v19 = objc_msgSend(v18, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_240BB2980();
  uint64_t v21 = v20;

  id v22 = objc_msgSend(v18, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_240BB2980();

  sub_240BB5AC0();
  sub_240BB4850();
  v34[1] = v21;
  sub_240BB5BC0();
  id result = (char *)objc_msgSend(self, sel__preferredFontForTextStyle_variant_, *MEMORY[0x263F83618], 1024);
  if (result)
  {
    uint64_t v24 = (void (*)(unsigned char *, void))sub_240BB5B30();
    sub_240BB5B00();
    v24(v36, 0);
    id v25 = self;
    id v26 = objc_msgSend(v25, sel_labelColor);
    uint64_t v27 = (void (*)(unsigned char *, void))sub_240BB5B30();
    sub_240BB5B10();
    v27(v36, 0);
    sub_240BB4850();
    sub_240BB5AE0();
    sub_240A34DC4(0, (unint64_t *)&qword_268C9EEE0);
    sub_240BB7470();
    id v28 = (void (*)(unsigned char *, void))sub_240BB5B50();
    sub_240BB5B00();
    v28(v36, 0);
    id v29 = objc_msgSend(v25, sel_labelColor);
    uint64_t v30 = (void (*)(unsigned char *, void))sub_240BB5B50();
    sub_240BB5B10();
    v30(v36, 0);
    uint64_t v31 = (void (*)(unsigned char *, void))sub_240BB5B70();
    *(void *)(v32 + 16) = 0x4032000000000000;
    v31(v36, 0);
    sub_240BB5BA0();
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v9, v7, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v33 = objc_allocWithZone((Class)type metadata accessor for ConfirmDetailsLearnMoreView());
    int v16 = (char *)sub_240A5CA3C((uint64_t)v9, a2);
    *(void *)&v16[OBJC_IVAR____TtC5Heart27ConfirmDetailsLearnMoreView_delegate + 8] = &off_26F508040;
    swift_unknownObjectWeakAssign();
    return v16;
  }
  __break(1u);
  return result;
}

char *sub_240B29898(uint64_t a1, double a2)
{
  return sub_240B2932C(a1, a2);
}

void sub_240B298BC()
{
  if (!qword_268C9FEC8)
  {
    sub_240BB3AA0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C9FEC8);
    }
  }
}

uint64_t sub_240B29924(uint64_t a1)
{
  sub_240B298BC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_240B29980()
{
  if (!qword_268CA0E60)
  {
    sub_240B29A2C();
    sub_240BB4590();
    sub_240B29BD0(&qword_268CA0E70, (void (*)(uint64_t))sub_240B29A2C);
    unint64_t v0 = sub_240BB5F90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA0E60);
    }
  }
}

void sub_240B29A2C()
{
  if (!qword_268CA0E68)
  {
    sub_240B29AB0(255, &qword_268C9FF40, MEMORY[0x263F44090]);
    unint64_t v0 = sub_240BB6100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA0E68);
    }
  }
}

void sub_240B29AB0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240BB75E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_240B29B04()
{
  if (!qword_268CA0E78)
  {
    sub_240B29980();
    sub_240A34DC4(255, (unint64_t *)&qword_26AFD9980);
    sub_240B29BD0(&qword_268CA0E80, (void (*)(uint64_t))sub_240B29980);
    sub_240A805DC();
    unint64_t v0 = sub_240BB60E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA0E78);
    }
  }
}

uint64_t sub_240B29BD0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240B29C18(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_240B29AB0(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_240B29C74()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B29CAC(uint64_t a1)
{
  return sub_240B28740(a1);
}

uint64_t sub_240B29CB4@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v30 = sub_240BB4EE0();
  uint64_t v29 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_240BB4EF0();
  uint64_t v31 = *(void *)(v5 - 8);
  uint64_t v32 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AAFF6C();
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  if (!*a1)
  {
    if (qword_268C9E680 != -1) {
      swift_once();
    }
    uint64_t v10 = (void *)qword_268CA28B8;
    type metadata accessor for AFibBurdenPDFChartHeaderContentProvider();
    uint64_t v11 = (void *)sub_240BB2780();
    id v12 = objc_msgSend(v10, sel_stringFromDateInterval_, v11);

    if (v12)
    {
      uint64_t v8 = sub_240BB6DE0();
      uint64_t v9 = v13;
    }
    else
    {
      uint64_t v8 = 0;
      uint64_t v9 = 0;
    }
  }
  v28[1] = v8;
  id v33 = a1;
  uint64_t v14 = sub_240BB4850();
  MEMORY[0x245607040](v14);
  id v15 = objc_allocWithZone(MEMORY[0x263F086A0]);
  int v16 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_240B2A5B8();
  uint64_t v17 = (void *)sub_240BB6D20();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(v15, sel_initWithString_attributes_, v16, v17);
  swift_bridgeObjectRelease();

  uint64_t v19 = MEMORY[0x263F448F0];
  if (v18)
  {
    *((void *)&v42 + 1) = sub_240B2A618();
    uint64_t v43 = v19;
    *(void *)&long long v41 = v18;
  }
  else
  {
    uint64_t v43 = 0;
    long long v41 = 0u;
    long long v42 = 0u;
  }
  uint64_t v40 = 0;
  long long v20 = 0uLL;
  long long v38 = 0u;
  long long v39 = 0u;
  if (!v9) {
    goto LABEL_13;
  }
  uint64_t v21 = sub_240BB4850();
  MEMORY[0x245607050](v21);
  id v22 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v23 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  uint64_t v24 = (void *)sub_240BB6D20();
  swift_bridgeObjectRelease();
  id v25 = objc_msgSend(v22, sel_initWithString_attributes_, v23, v24);
  swift_bridgeObjectRelease();

  long long v20 = 0uLL;
  if (v25)
  {
    *((void *)&v36 + 1) = sub_240B2A618();
    uint64_t v37 = v19;
    *(void *)&long long v35 = v25;
  }
  else
  {
LABEL_13:
    uint64_t v37 = 0;
    long long v35 = v20;
    long long v36 = v20;
  }
  (*(void (**)(char *, void, uint64_t))(v29 + 104))(v4, *MEMORY[0x263F444F8], v30);
  uint64_t v26 = sub_240BB4ED0();
  MEMORY[0x270FA5388](v26);
  v28[-2] = v7;
  *((void *)&v42 + 1) = sub_240BB5640();
  uint64_t v43 = MEMORY[0x263F448B8];
  sub_240A23B08((uint64_t *)&v41);
  sub_240BB5630();
  sub_240AB05A0((uint64_t)v33);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v32);
  return sub_240A37388(&v41, v34);
}

uint64_t sub_240B2A128(uint64_t a1)
{
  uint64_t v2 = sub_240BB4EF0();
  uint64_t v10 = v2;
  uint64_t v11 = MEMORY[0x263F44500];
  uint64_t v3 = sub_240A23B08(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v3, a1, v2);
  uint64_t v4 = sub_240BB4360();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v9);
  uint64_t v10 = sub_240BB40A0();
  uint64_t v11 = MEMORY[0x263F43E08];
  sub_240A23B08(v9);
  sub_240BB40B0();
  uint64_t v5 = sub_240BB4360();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v9);
  sub_240B2A68C(0, &qword_268CA0C00, (uint64_t (*)(uint64_t))sub_240B2A658, MEMORY[0x263F8E0F8]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_240BBAE40;
  *(void *)(v6 + 32) = v4;
  *(void *)(v6 + 40) = v5;
  uint64_t v7 = MEMORY[0x245607600]();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_240B2A264()
{
  uint64_t v1 = v0;
  sub_240BB3CC0();
  sub_240BB3C60();
  CGRectGetWidth(v12);
  sub_240BB3CA0();
  sub_240A3466C(v1, v1[3]);
  sub_240BB3EC0();
  sub_240A3466C(v1, v1[3]);
  sub_240BB3CC0();
  sub_240BB3C60();
  CGRectGetWidth(v13);
  sub_240BB3CA0();
  sub_240BB3EB0();
  CGFloat v3 = v2;
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  swift_release();
  v14.origin.x = v3;
  v14.origin.y = v5;
  v14.size.width = v7;
  v14.size.height = v9;
  CGRectGetHeight(v14);
  sub_240BB3CB0();

  return swift_release();
}

double sub_240B2A3B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240B2A3E0(a1, a2, a3, MEMORY[0x263F43C50]);
}

double sub_240B2A3C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240B2A3E0(a1, a2, a3, MEMORY[0x263F43C58]);
}

double sub_240B2A3E0(uint64_t a1, uint64_t a2, uint64_t a3, double (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = v4[3];
  uint64_t v7 = v4[4];
  sub_240A3466C(v4, v6);
  uint64_t v8 = sub_240BB3CC0();
  sub_240BB3C60();
  CGRectGetWidth(v11);
  sub_240BB3CA0();
  double v9 = a4(v8, v6, v7);
  swift_release();
  return v9;
}

uint64_t sub_240B2A4A4(uint64_t a1)
{
  CGFloat v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  unint64_t v4 = sub_240B14970();
  *CGFloat v3 = v1;
  v3[1] = sub_240A524D4;
  return MEMORY[0x270F33478](a1, v4);
}

unint64_t sub_240B2A554()
{
  unint64_t result = qword_268CA0E98;
  if (!qword_268CA0E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0E98);
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFChartCurrentValueView()
{
  return &type metadata for AFibBurdenPDFChartCurrentValueView;
}

unint64_t sub_240B2A5B8()
{
  unint64_t result = qword_268C9EA48;
  if (!qword_268C9EA48)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9EA48);
  }
  return result;
}

uint64_t sub_240B2A610()
{
  return sub_240B2A128(*(void *)(v0 + 16));
}

unint64_t sub_240B2A618()
{
  unint64_t result = qword_268CA0EA0;
  if (!qword_268CA0EA0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268CA0EA0);
  }
  return result;
}

void sub_240B2A658(uint64_t a1)
{
}

void sub_240B2A68C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_240B2A6F0()
{
  unint64_t result = qword_268C9FDA8;
  if (!qword_268C9FDA8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C9FDA8);
  }
  return result;
}

uint64_t sub_240B2A748@<X0>(char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v111 = a2;
  uint64_t v121 = a3;
  sub_240A3FB28();
  uint64_t v119 = v4;
  uint64_t v117 = *(void *)(v4 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  unint64_t v116 = (char *)&v108 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_240BB3660();
  uint64_t v120 = *(void *)(v118 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v7 = (char *)&v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_240BB56B0();
  uint64_t v9 = *(void *)(v8 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  CGRect v11 = (char *)&v108 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_240BB5690();
  uint64_t v13 = *(void *)(v12 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  id v15 = (char *)&v108 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_240BB56E0();
  uint64_t v17 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v114 = v18;
  uint64_t v115 = (char *)&v108 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  long long v20 = (char *)&v108 - v19;
  id v22 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  uint64_t v122 = a1;
  uint64_t v23 = a1;
  uint64_t v24 = v21;
  uint64_t v112 = v22;
  uint64_t v113 = v21 + 16;
  v22((char *)&v108 - v19, v23, v16);
  if ((*(unsigned int (**)(char *, uint64_t))(v24 + 88))(v20, v16) != *MEMORY[0x263F44990])
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v20, v16);
    goto LABEL_12;
  }
  id v108 = v7;
  (*(void (**)(char *, uint64_t))(v24 + 96))(v20, v16);
  uint64_t v109 = v13;
  uint64_t v110 = v12;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v20, v12);
  sub_240BB5650();
  id v25 = (void *)sub_240BB56C0();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v9 + 8);
  v26(v11, v8);
  unsigned int v27 = objc_msgSend(v25, sel_areAllRequirementsSatisfied);

  if (!v27)
  {
    sub_240BB5650();
    uint64_t v52 = (void *)sub_240BB56C0();
    v26(v11, v8);
    id v53 = objc_msgSend(v52, sel_unsatisfiedRequirementIdentifiers);

    type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(0);
    uint64_t v54 = sub_240BB6F10();

    sub_240B2BABC();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_240BB97E0;
    uint64_t v56 = (void *)*MEMORY[0x263F09678];
    *(void *)(inited + 32) = *MEMORY[0x263F09678];
    id v57 = v56;
    char v58 = sub_240B2B588(v54, inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    if (v58)
    {
      uint64_t v122 = v15;
      uint64_t v59 = v120;
      uint64_t v60 = v108;
      uint64_t v61 = v118;
      (*(void (**)(char *, void, uint64_t))(v120 + 104))(v108, *MEMORY[0x263F435D0], v118);
      uint64_t v119 = sub_240B59D6C();
      uint64_t v117 = v62;
      if (qword_268C9E7A8 != -1) {
        swift_once();
      }
      unint64_t v116 = (char *)sub_240BB2980();
      uint64_t v64 = v63;
      uint64_t v65 = sub_240BB2980();
      uint64_t v67 = v66;
      id v68 = objc_msgSend(self, sel_aFibBurdenArticleLinkURL);
      uint64_t v69 = sub_240BB6DE0();
      uint64_t v71 = v70;

      (*(void (**)(char *, uint64_t))(v109 + 8))(v122, v110);
      uint64_t v72 = v121;
      (*(void (**)(uint64_t, char *, uint64_t))(v59 + 32))(v121, v60, v61);
      uint64_t v45 = (int *)_s14descr26F502E21O15SettingsContentVMa();
      *(_WORD *)(v72 + v45[5]) = 256;
      *(_WORD *)(v72 + v45[6]) = 0;
      uint64_t v73 = (void *)(v72 + v45[7]);
      uint64_t v74 = v117;
      void *v73 = v119;
      v73[1] = v74;
      uint64_t v75 = (char **)(v72 + v45[8]);
      *uint64_t v75 = v116;
      v75[1] = v64;
      v75[2] = (char *)v65;
      v75[3] = v67;
      v75[4] = (char *)v69;
      v75[5] = v71;
      uint64_t v50 = *(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v45 - 1) + 56);
      uint64_t v51 = v72;
      return v50(v51, 0, 1, v45);
    }
    (*(void (**)(char *, uint64_t))(v109 + 8))(v15, v110);
LABEL_12:
    uint64_t v76 = v121;
    uint64_t v77 = (void *)sub_240BB56F0();
    unsigned int v78 = objc_msgSend(v77, sel_isRequirementSatisfiedWithIdentifier_, *MEMORY[0x263F09688]);

    char v79 = sub_240BB56D0();
    if (v78 && (v79 & 1) != 0)
    {
      int v80 = (void *)sub_240BB56F0();
      unsigned int v81 = objc_msgSend(v80, sel_areAllRequirementsSatisfied);

      uint64_t v82 = v120;
      if (!v81)
      {
        if (qword_26AFD7158 != -1) {
          swift_once();
        }
        sub_240A395FC(v119, (uint64_t)qword_26AFDEB68);
        uint64_t v123 = 0;
        sub_240BB5700();
        (*(void (**)(uint64_t, void, uint64_t))(v82 + 104))(v76, *MEMORY[0x263F435D0], v118);
        uint64_t v92 = sub_240B59D6C();
        uint64_t v94 = v93;
        uint64_t v95 = v76;
        if (qword_268C9E7A8 != -1) {
          swift_once();
        }
        uint64_t v96 = sub_240BB2980();
        uint64_t v98 = v97;
        uint64_t v99 = sub_240BB2980();
        uint64_t v101 = v100;
        id v102 = objc_msgSend(self, sel_aFibBurdenArticleLinkURL);
        uint64_t v103 = sub_240BB6DE0();
        uint64_t v105 = v104;

        uint64_t v45 = (int *)_s14descr26F502E21O15SettingsContentVMa();
        *(_WORD *)(v95 + v45[5]) = 0;
        *(_WORD *)(v95 + v45[6]) = 0;
        uint64_t v106 = (uint64_t *)(v95 + v45[7]);
        uint64_t *v106 = v92;
        v106[1] = v94;
        uint64_t v107 = (uint64_t *)(v95 + v45[8]);
        *uint64_t v107 = v96;
        v107[1] = v98;
        v107[2] = v99;
        v107[3] = v101;
        v107[4] = v103;
        v107[5] = v105;
        uint64_t v50 = *(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v45 - 1) + 56);
        uint64_t v51 = v95;
        return v50(v51, 0, 1, v45);
      }
      if (qword_26AFD7158 != -1) {
        swift_once();
      }
    }
    else if (qword_26AFD7158 != -1)
    {
      swift_once();
    }
    uint64_t v83 = v119;
    uint64_t v84 = sub_240A395FC(v119, (uint64_t)qword_26AFDEB68);
    uint64_t v86 = v116;
    uint64_t v85 = v117;
    (*(void (**)(char *, uint64_t, uint64_t))(v117 + 16))(v116, v84, v83);
    uint64_t v87 = v115;
    v112(v115, v122, v16);
    unint64_t v88 = (*(unsigned __int8 *)(v24 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    uint64_t v89 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v24 + 32))(v89 + v88, v87, v16);
    uint64_t v123 = 0;
    sub_240BB5730();
    swift_release();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v86, v83);
    uint64_t v90 = _s14descr26F502E21O15SettingsContentVMa();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v76, 1, 1, v90);
  }
  id v28 = sub_240A3466C(v111, v111[3]);
  BOOL v29 = sub_240B2B8D0((uint64_t)v15, *v28);
  uint64_t v30 = v120;
  uint64_t v31 = v108;
  uint64_t v32 = v118;
  (*(void (**)(char *, void, uint64_t))(v120 + 104))(v108, *MEMORY[0x263F435C8], v118);
  BOOL v33 = v29;
  uint64_t v117 = sub_240B59B8C();
  uint64_t v119 = v34;
  uint64_t v122 = v15;
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  unint64_t v116 = (char *)sub_240BB2980();
  long long v36 = v35;
  uint64_t v37 = sub_240BB2980();
  long long v39 = v38;
  id v40 = objc_msgSend(self, sel_aFibBurdenArticleLinkURL);
  uint64_t v41 = sub_240BB6DE0();
  uint64_t v43 = v42;

  (*(void (**)(char *, uint64_t))(v109 + 8))(v122, v110);
  uint64_t v44 = v121;
  (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v121, v31, v32);
  uint64_t v45 = (int *)_s14descr26F502E21O15SettingsContentVMa();
  *(_WORD *)(v44 + v45[5]) = 257;
  uint64_t v46 = (BOOL *)(v44 + v45[6]);
  *uint64_t v46 = v33;
  v46[1] = 1;
  os_log_type_t v47 = (uint64_t *)(v44 + v45[7]);
  uint64_t v48 = v119;
  *os_log_type_t v47 = v117;
  v47[1] = v48;
  uint64_t v49 = (char **)(v44 + v45[8]);
  *uint64_t v49 = v116;
  v49[1] = v36;
  v49[2] = (char *)v37;
  v49[3] = v39;
  v49[4] = (char *)v41;
  v49[5] = v43;
  uint64_t v50 = *(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v45 - 1) + 56);
  uint64_t v51 = v44;
  return v50(v51, 0, 1, v45);
}

uint64_t sub_240B2B4C0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = sub_240BB7AE0(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (uint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_240BB7AE0() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_240B2B588(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = a1 + 32;
    uint64_t v4 = a2 + 32;
    do
    {
      uint64_t v5 = sub_240BB6DE0();
      uint64_t v7 = v6;
      if (v5 == sub_240BB6DE0() && v7 == v8)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v10 = sub_240BB7AE0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0) {
          return 0;
        }
      }
      v3 += 8;
      v4 += 8;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_240B2B664()
{
  return sub_240B2BA40();
}

uint64_t sub_240B2B684(uint64_t a1)
{
  uint64_t v2 = sub_240BB56E0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  sub_240BB77C0();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  sub_240BB6E10();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return v7[0];
}

uint64_t sub_240B2B80C()
{
  return 0;
}

BOOL sub_240B2B8D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_240BB3020();
  v10[3] = v3;
  void v10[4] = &off_26F508120;
  v10[0] = a2;
  swift_retain();
  uint64_t v4 = (void *)sub_240BB5680();
  int v5 = HKHRAFibBurdenNotificationsEnabledWithFeatureSettings();

  if (v5)
  {
    sub_240A3466C(v10, v3);
    uint64_t v6 = (void *)sub_240BB3000();
    id v7 = objc_msgSend(v6, sel_authorizationStatus);

    BOOL v8 = v7 == (id)2;
  }
  else
  {
    BOOL v8 = 0;
  }
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v10);
  return v8;
}

uint64_t sub_240B2B990()
{
  uint64_t v1 = sub_240BB56E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_240B2BA20()
{
  return sub_240B2BA40();
}

uint64_t sub_240B2BA40()
{
  uint64_t v1 = *(void *)(sub_240BB56E0() - 8);
  return sub_240B2B684(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

void sub_240B2BABC()
{
  if (!qword_268C9ED90)
  {
    type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(255);
    unint64_t v0 = sub_240BB7AB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9ED90);
    }
  }
}

id sub_240B2BB14()
{
  return (id)*MEMORY[0x263F475A8];
}

id sub_240B2BB24()
{
  return (id)*MEMORY[0x263F475B0];
}

void sub_240B2BB3C(void *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_240B2BB70(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_240B2BBAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F43708];
  uint64_t v3 = sub_240BB37B0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_240B2BC20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F32898](a1, a2, a3, WitnessTable);
}

uint64_t sub_240B2BC8C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F32890](a1, a2, WitnessTable);
}

uint64_t sub_240B2BCF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F32870](a1, a2, a3, WitnessTable);
}

uint64_t sub_240B2BD60(uint64_t a1, uint64_t a2)
{
  return sub_240B2BF20(&qword_26AFD7798, a2, (void (*)(uint64_t))type metadata accessor for CardioFitnessHealthChecklistFeedItemProvider);
}

uint64_t sub_240B2BDA8()
{
  return sub_240B2BF20(&qword_26AFD7A88, 255, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandler);
}

uint64_t sub_240B2BDF4()
{
  return sub_240B2BF20(&qword_268C9F1A0, 255, MEMORY[0x263F43730]);
}

uint64_t sub_240B2BE40(uint64_t a1, uint64_t a2)
{
  return sub_240B2BF20(&qword_26AFD7AA0, a2, (void (*)(uint64_t))type metadata accessor for CardioFitnessHealthChecklistFeedItemProvider);
}

uint64_t sub_240B2BE88()
{
  return sub_240B2BF20(&qword_268CA02C8, 255, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData);
}

uint64_t sub_240B2BED4()
{
  return sub_240B2BF20(&qword_268CA02D0, 255, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData);
}

uint64_t sub_240B2BF20(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_240B2BF68(void *a1, char a2)
{
  sub_240A35E3C();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v55 = v5;
  uint64_t v56 = v6;
  MEMORY[0x270FA5388](v5);
  id v53 = (char *)v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A35D30();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A35F28();
  uint64_t v52 = v13;
  uint64_t v54 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  v50[0] = (char *)v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v57 = v2;
  *(void *)&v2[OBJC_IVAR____TtC5Heart37CardioFitnessOnboardingViewController_coordinator] = 0;
  v2[OBJC_IVAR____TtC5Heart37CardioFitnessOnboardingViewController_navigateToDetailRoomUponOnboardingCompletion] = a2;
  uint64_t v61 = sub_240A34DC4(0, (unint64_t *)&unk_26AFD75A0);
  uint64_t v62 = MEMORY[0x263F448E8];
  uint64_t v60 = (uint64_t)a1;
  sub_240BB45C0();
  swift_allocObject();
  id v15 = a1;
  uint64_t v16 = sub_240BB45B0();
  type metadata accessor for CardioFitnessOnboardingMostRecentValueProvider();
  uint64_t v17 = swift_allocObject();
  id v18 = v15;
  id v51 = v18;
  uint64_t v19 = sub_240B304EC((uint64_t)v18, v17);
  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3D0]), sel_initWithFeatureIdentifier_healthStore_, *MEMORY[0x263F09730], v18);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_240A35E08(0);
  sub_240A35938(&qword_26AFD8AB0, sub_240A35E08);
  id v21 = v20;
  swift_retain();
  swift_retain();
  sub_240BB6240();
  sub_240BB56E0();
  sub_240A35938((unint64_t *)&unk_26AFD8AE0, (void (*)(uint64_t))sub_240A35D30);
  uint64_t v22 = v50[0];
  sub_240BB62F0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD75D0);
  id v23 = v21;
  uint64_t v24 = sub_240BB57C0();

  uint64_t v60 = v24;
  id v25 = (void (*)(uint64_t))MEMORY[0x263F44998];
  sub_240A21D2C(0, (unint64_t *)&qword_26AFD8A40, MEMORY[0x263F44998]);
  sub_240B303C0((unint64_t *)&qword_26AFD8A30, (unint64_t *)&qword_26AFD8A40, v25);
  sub_240A35938(&qword_26AFD8860, (void (*)(uint64_t))sub_240A35F28);
  uint64_t v26 = v53;
  uint64_t v27 = v52;
  sub_240BB63F0();
  swift_release();
  sub_240A35938((unint64_t *)&unk_26AFD8880, (void (*)(uint64_t))sub_240A35E3C);
  uint64_t v28 = v55;
  uint64_t v29 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v26, v28);
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v22, v27);
  id v30 = objc_msgSend(v23, sel_featureAvailabilityProviding);
  uint64_t v31 = (char *)objc_allocWithZone((Class)type metadata accessor for CardioFitnessOnboardingModel());
  swift_retain();
  v50[1] = v19;
  id v32 = sub_240B30BD4(v29, v30, v16, v19, (uint64_t)sub_240A903BC, 0, v31);

  swift_release();
  swift_release();
  sub_240BB50A0();
  swift_release();
  type metadata accessor for CardioFitnessOnboardingViewControllerFactory();
  BOOL v33 = (void *)swift_allocObject();
  uint64_t v34 = v51;
  v33[2] = v51;
  v33[3] = v16;
  v33[4] = v32;
  id v35 = objc_allocWithZone(MEMORY[0x263F47628]);
  id v36 = v34;
  swift_retain();
  id v37 = v32;
  id v38 = objc_msgSend(v35, sel_initWithHealthStore_, v36);
  id v39 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F47630]), sel_initWithSignalSource_, v38);

  id v40 = (objc_class *)type metadata accessor for CardioFitnessOnboardingViewController();
  v59.receiver = v57;
  v59.super_class = v40;
  id v41 = objc_msgSendSuper2(&v59, sel_initWithNibName_bundle_, 0, 0);
  objc_msgSend(v41, sel_setModalPresentationStyle_, 2);
  long long v42 = (objc_class *)type metadata accessor for CardioFitnessOnboardingCoordinator();
  uint64_t v43 = (char *)objc_allocWithZone(v42);
  *(void *)&v43[OBJC_IVAR____TtC5Heart34CardioFitnessOnboardingCoordinator_rootViewController + 8] = 0;
  *(void *)(swift_unknownObjectWeakInit() + 8) = &off_26F5081A8;
  swift_unknownObjectWeakAssign();
  *(void *)&v43[OBJC_IVAR____TtC5Heart34CardioFitnessOnboardingCoordinator_model] = v37;
  *(void *)&v43[OBJC_IVAR____TtC5Heart34CardioFitnessOnboardingCoordinator_factory] = v33;
  *(void *)&v43[OBJC_IVAR____TtC5Heart34CardioFitnessOnboardingCoordinator_analyticsManager] = v39;
  v58.receiver = v43;
  v58.super_class = v42;
  id v44 = v37;
  uint64_t v45 = (char *)v41;
  swift_retain();
  id v46 = v39;
  id v47 = objc_msgSendSuper2(&v58, sel_init);
  sub_240B2D538();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v48 = *(void **)&v45[OBJC_IVAR____TtC5Heart37CardioFitnessOnboardingViewController_coordinator];
  *(void *)&v45[OBJC_IVAR____TtC5Heart37CardioFitnessOnboardingViewController_coordinator] = v47;

  return v45;
}

uint64_t sub_240B2C788(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v58 = a2;
  swift_getObjectType();
  sub_240A5C00C(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_240BB2B20();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = (void *)swift_allocObject();
  long long v15[2] = v4;
  v15[3] = a3;
  v15[4] = a4;
  if ((a1 & 1) == 0
    || *((unsigned char *)v4
       + OBJC_IVAR____TtC5Heart37CardioFitnessOnboardingViewController_navigateToDetailRoomUponOnboardingCompletion) != 1)
  {
    sub_240AECDA0(a3);
    uint64_t v34 = qword_26AFD9A18;
    id v35 = v4;
    if (v34 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_240BB5990();
    sub_240A395FC(v36, (uint64_t)qword_26AFDEC70);
    id v37 = sub_240BB5970();
    os_log_type_t v38 = sub_240BB71A0();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v57 = a4;
      uint64_t v40 = v39;
      uint64_t v41 = swift_slowAlloc();
      uint64_t aBlock = v41;
      *(_DWORD *)uint64_t v40 = 136446466;
      uint64_t v42 = sub_240BB7C80();
      uint64_t v59 = sub_240A38940(v42, v43, &aBlock);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 12) = 2082;
      uint64_t v59 = sub_240A38940(0xD000000000000035, 0x8000000240BD18F0, &aBlock);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v37, v38, "[%{public}s.%{public}s]: Dismissing onboarding and landing back where user was before", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v41, -1, -1);
      uint64_t v44 = v40;
      a4 = v57;
      MEMORY[0x24560B930](v44, -1, -1);
    }

    if (a3)
    {
      uint64_t v64 = (uint64_t (*)())a3;
      uint64_t v65 = a4;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v61 = 1107296256;
      uint64_t v62 = sub_240A87354;
      uint64_t v63 = &unk_26F508528;
      BOOL v33 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
    }
    else
    {
      BOOL v33 = 0;
    }
    objc_msgSend(v35, sel_dismissViewControllerAnimated_completion_, 1, v33);
    goto LABEL_20;
  }
  uint64_t v57 = a4;
  sub_240AECDA0(a3);
  uint64_t v16 = qword_26AFD9A18;
  id v56 = v4;
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_240BB5990();
  uint64_t v18 = sub_240A395FC(v17, (uint64_t)qword_26AFDEC70);
  uint64_t v19 = sub_240BB5970();
  os_log_type_t v20 = sub_240BB71A0();
  int v21 = v20;
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v54 = v18;
    int v52 = v21;
    uint64_t v23 = v22;
    uint64_t v53 = swift_slowAlloc();
    uint64_t aBlock = v53;
    *(_DWORD *)uint64_t v23 = 136446466;
    v51[1] = v23 + 4;
    uint64_t v24 = sub_240BB7C80();
    uint64_t v59 = sub_240A38940(v24, v25, &aBlock);
    uint64_t v55 = v12;
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2082;
    uint64_t v59 = sub_240A38940(0xD000000000000035, 0x8000000240BD18F0, &aBlock);
    uint64_t v12 = v55;
    sub_240BB75F0();
    _os_log_impl(&dword_240A1B000, v19, (os_log_type_t)v52, "[%{public}s.%{public}s]: Dismissing onboarding and navigating to Cardio Fitness detail room", (uint8_t *)v23, 0x16u);
    uint64_t v26 = v53;
    swift_arrayDestroy();
    MEMORY[0x24560B930](v26, -1, -1);
    MEMORY[0x24560B930](v23, -1, -1);
  }

  sub_240A64B98(v58, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_240B31B08((uint64_t)v10, (uint64_t (*)(void))sub_240A5C00C);
    uint64_t v27 = sub_240BB5970();
    os_log_type_t v28 = sub_240BB7190();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t aBlock = v30;
      *(_DWORD *)uint64_t v29 = 136446466;
      uint64_t v31 = sub_240BB7C80();
      uint64_t v59 = sub_240A38940(v31, v32, &aBlock);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2082;
      uint64_t v59 = sub_240A38940(0xD000000000000035, 0x8000000240BD18F0, &aBlock);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v27, v28, "[%{public}s.%{public}s]: Failed to construct deep link URL to go to detail room after onboarding completed", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v30, -1, -1);
      MEMORY[0x24560B930](v29, -1, -1);
    }

    if (a3)
    {
      uint64_t v64 = (uint64_t (*)())a3;
      uint64_t v65 = v57;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v61 = 1107296256;
      uint64_t v62 = sub_240A87354;
      uint64_t v63 = &unk_26F508550;
      BOOL v33 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
    }
    else
    {
      BOOL v33 = 0;
    }
    objc_msgSend(v56, sel_dismissViewControllerAnimated_completion_, 1, v33);
LABEL_20:
    _Block_release(v33);
    return swift_release();
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  id v46 = objc_msgSend(self, sel_sharedApplication);
  id v47 = (void *)sub_240BB2AF0();
  sub_240AB85C8(MEMORY[0x263F8EE78]);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_240A35938((unint64_t *)&qword_268C9EA38, type metadata accessor for OpenExternalURLOptionsKey);
  uint64_t v48 = (void *)sub_240BB6D20();
  swift_bridgeObjectRelease();
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = sub_240B321D4;
  *(void *)(v49 + 24) = v15;
  uint64_t v64 = sub_240B321E0;
  uint64_t v65 = v49;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v61 = 1107296256;
  uint64_t v62 = sub_240B03CD4;
  uint64_t v63 = &unk_26F5085A0;
  uint64_t v50 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v46, sel_openURL_options_completionHandler_, v47, v48, v50);
  _Block_release(v50);
  swift_release();

  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

void sub_240B2D09C(void *a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    v5[4] = a2;
    v5[5] = a3;
    v5[0] = MEMORY[0x263EF8330];
    v5[1] = 1107296256;
    v5[2] = sub_240A87354;
    v5[3] = &unk_26F5085C8;
    uint64_t v4 = _Block_copy(v5);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v4 = 0;
  }
  objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, v4);
  _Block_release(v4);
}

id sub_240B2D1FC()
{
  return sub_240B2D880(type metadata accessor for CardioFitnessOnboardingViewController);
}

uint64_t type metadata accessor for CardioFitnessOnboardingViewController()
{
  return self;
}

id sub_240B2D248()
{
  id v1 = objc_msgSend(v0, sel_presentationController);

  return v1;
}

void sub_240B2D280(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    v8[4] = a3;
    uint64_t v8[5] = a4;
    v8[0] = MEMORY[0x263EF8330];
    v8[1] = 1107296256;
    v8[2] = sub_240A87354;
    v8[3] = &unk_26F5082A8;
    uint64_t v7 = _Block_copy(v8);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v7 = 0;
  }
  objc_msgSend(v4, sel_presentViewController_animated_completion_, a1, a2 & 1, v7);
  _Block_release(v7);
}

void sub_240B2D358(uint64_t a1, char a2)
{
  sub_240A34DC4(0, (unint64_t *)&unk_268CA0B90);
  id v4 = (id)sub_240BB6EF0();
  objc_msgSend(v2, sel_setViewControllers_animated_, v4, a2 & 1);
}

uint64_t sub_240B2D3E4(uint64_t a1, uint64_t a2)
{
  sub_240A7B5FC(a2, (uint64_t)v11);
  uint64_t v4 = v12;
  if (v12)
  {
    uint64_t v5 = sub_240A3466C(v11, v12);
    uint64_t v6 = *(void *)(v4 - 8);
    MEMORY[0x270FA5388](v5);
    uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    uint64_t v9 = sub_240BB7AD0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v11);
  }
  else
  {
    uint64_t v9 = 0;
  }
  objc_msgSend(v2, sel_showViewController_sender_, a1, v9);
  return sub_240BB50A0();
}

void sub_240B2D538()
{
  id v10 = sub_240B2D6BC(0);
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Heart34CardioFitnessOnboardingCoordinator_rootViewController;
  if (MEMORY[0x24560BA20](v0 + OBJC_IVAR____TtC5Heart34CardioFitnessOnboardingCoordinator_rootViewController))
  {
    uint64_t v2 = *(void *)(v1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    sub_240A2C8DC(0, (unint64_t *)&qword_26AFD77C0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_240BBAD40;
    *(void *)(v4 + 32) = v10;
    uint64_t v11 = v4;
    sub_240BB6F30();
    uint64_t v5 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 24);
    id v6 = v10;
    v5(v11, 0, ObjectType, v2);
    swift_bridgeObjectRelease();
    sub_240BB50A0();
  }
  if (MEMORY[0x24560BA20](v1))
  {
    uint64_t v7 = *(void *)(v1 + 8);
    uint64_t v8 = swift_getObjectType();
    uint64_t v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v8, v7);
    sub_240BB50A0();
    if (v9)
    {
      objc_msgSend(v9, sel_setDelegate_, v0);
    }
  }
}

void *sub_240B2D6BC(char a1)
{
  uint64_t v1 = (void *)sub_240BA775C(a1);
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  id v5 = objc_msgSend(v1, sel_navigationItem);
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v7 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_240BB2980();

  uint64_t v8 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setBackButtonTitle_, v8, 0xE000000000000000);

  uint64_t v9 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v3 + 24);
  uint64_t v10 = swift_unknownObjectRetain();
  v9(v10, &off_26F508188, ObjectType, v3);
  return v1;
}

id sub_240B2D868()
{
  return sub_240B2D880(type metadata accessor for CardioFitnessOnboardingCoordinator);
}

id sub_240B2D880(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for CardioFitnessOnboardingCoordinator()
{
  return self;
}

uint64_t sub_240B2D948(char *a1, char a2, void *a3, uint64_t a4, char a5, uint64_t a6)
{
  char v11 = a5 & 1;
  uint64_t ObjectType = swift_getObjectType();

  return sub_240B30410(a1, a2, a3, v11, a6, ObjectType, a4);
}

void sub_240B2D9C0(char a1, void *a2, uint64_t a3, char a4, void *a5, uint64_t a6)
{
  uint64_t v49 = a2;
  char v10 = a4 & 1;
  uint64_t v11 = sub_240BB6B90();
  uint64_t v48 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = &v42[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_240BB6BC0();
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = &v42[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a1 == 2)
  {
    sub_240B2E050(a3, v10, 0, 0);
  }
  else if (a1 == 3)
  {
    uint64_t v18 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v18;
    *(unsigned char *)(v19 + 24) = a3;
    *(unsigned char *)(v19 + 25) = v10;
    swift_retain();
    sub_240B31568(a5, a6, (uint64_t)sub_240B31308, v19);
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v47 = v15;
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    int v46 = a1 & 1;
    uint64_t v20 = sub_240BB5990();
    sub_240A395FC(v20, (uint64_t)qword_26AFDEC70);
    id v21 = a5;
    uint64_t v22 = sub_240BB5970();
    os_log_type_t v23 = sub_240BB71A0();
    int v24 = v23;
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      aBlock[0] = v45;
      *(_DWORD *)uint64_t v25 = 136446978;
      os_log_t v44 = v22;
      uint64_t v26 = sub_240BB7C80();
      uint64_t v50 = sub_240A38940(v26, v27, aBlock);
      int v43 = v24;
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2082;
      uint64_t v50 = sub_240A38940(0xD000000000000028, 0x8000000240BD1660, aBlock);
      sub_240BB75F0();
      *(_WORD *)(v25 + 22) = 2080;
      uint64_t ObjectType = swift_getObjectType();
      LOBYTE(v50) = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 8))(ObjectType, a6);
      uint64_t v29 = sub_240BB6E10();
      uint64_t v50 = sub_240A38940(v29, v30, aBlock);
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 32) = 2080;
      char v31 = v46;
      LOBYTE(v50) = v46;
      uint64_t v32 = sub_240BB6E10();
      uint64_t v50 = sub_240A38940(v32, v33, aBlock);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      os_log_t v34 = v44;
      _os_log_impl(&dword_240A1B000, v44, (os_log_type_t)v43, "[%{public}s.%{public}s]: Unable to proceed to next stage from %s due to reason: %s", (uint8_t *)v25, 0x2Au);
      uint64_t v35 = v45;
      swift_arrayDestroy();
      MEMORY[0x24560B930](v35, -1, -1);
      MEMORY[0x24560B930](v25, -1, -1);
    }
    else
    {

      char v31 = v46;
    }
    sub_240A34DC4(0, (unint64_t *)&qword_26AFD9980);
    uint64_t v36 = (void *)sub_240BB7310();
    uint64_t v37 = swift_allocObject();
    os_log_type_t v38 = v49;
    *(void *)(v37 + 16) = v49;
    *(unsigned char *)(v37 + 24) = v31;
    *(void *)(v37 + 32) = v21;
    *(void *)(v37 + 40) = a6;
    aBlock[4] = (uint64_t)sub_240B312A0;
    aBlock[5] = v37;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_240A87354;
    aBlock[3] = (uint64_t)&unk_26F508320;
    uint64_t v39 = _Block_copy(aBlock);
    id v40 = v21;
    id v41 = v38;
    swift_release();
    sub_240BB6BB0();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_240A35938((unint64_t *)&qword_26AFD98C8, MEMORY[0x263F8F030]);
    sub_240AAA4B8();
    sub_240A35938((unint64_t *)&qword_26AFD98F8, (void (*)(uint64_t))sub_240AAA4B8);
    sub_240BB7670();
    MEMORY[0x24560A5E0](0, v17, v13, v39);
    _Block_release(v39);

    (*(void (**)(unsigned char *, uint64_t))(v48 + 8))(v13, v11);
    (*(void (**)(unsigned char *, uint64_t))(v47 + 8))(v17, v14);
  }
}

void sub_240B2E050(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  swift_getObjectType();
  int v8 = a2 & 1;
  uint64_t v9 = sub_240BB6B90();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_240BB6BC0();
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v18 = 1;
  switch((char)a1)
  {
    case 1:
      int v18 = 2;
      goto LABEL_4;
    case 2:
      int v18 = 3;
      goto LABEL_4;
    case 3:
      if (qword_26AFD9A18 != -1) {
        swift_once();
      }
      uint64_t v36 = sub_240BB5990();
      sub_240A395FC(v36, (uint64_t)qword_26AFDEC70);
      uint64_t v37 = sub_240BB5970();
      os_log_type_t v38 = sub_240BB71A0();
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v39 = swift_slowAlloc();
        uint64_t v40 = swift_slowAlloc();
        uint64_t aBlock = v40;
        *(_DWORD *)uint64_t v39 = 136446722;
        uint64_t v41 = sub_240BB7C80();
        uint64_t v66 = sub_240A38940(v41, v42, &aBlock);
        sub_240BB75F0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v39 + 12) = 2082;
        uint64_t v66 = sub_240A38940(0xD000000000000035, 0x8000000240BD1690, &aBlock);
        sub_240BB75F0();
        *(_WORD *)(v39 + 22) = 2080;
        LOBYTE(v66) = 3;
        uint64_t v43 = sub_240BB6E10();
        uint64_t v66 = sub_240A38940(v43, v44, &aBlock);
        sub_240BB75F0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240A1B000, v37, v38, "[%{public}s.%{public}s]: No stage after %s, finishing", (uint8_t *)v39, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x24560B930](v40, -1, -1);
        MEMORY[0x24560B930](v39, -1, -1);
      }

      uint64_t v45 = v59;
      int v46 = *(void **)&v59[OBJC_IVAR____TtC5Heart34CardioFitnessOnboardingCoordinator_analyticsManager];
      uint64_t v47 = (void *)sub_240BB6DA0();
      uint64_t v48 = *(void *)(*(void *)&v45[OBJC_IVAR____TtC5Heart34CardioFitnessOnboardingCoordinator_model]
                      + OBJC_IVAR____TtC5Heart28CardioFitnessOnboardingModel_lockedDeliveredCountryCode);
      swift_retain();
      os_unfair_lock_lock((os_unfair_lock_t)(v48 + 32));
      sub_240B9F2BC((uint64_t *)(v48 + 16), &aBlock);
      os_unfair_lock_unlock((os_unfair_lock_t)(v48 + 32));
      uint64_t v49 = v61;
      swift_release();
      if (v49)
      {
        uint64_t v50 = (void *)sub_240BB6DA0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v50 = 0;
      }

      sub_240B2EC90(1, 1, a3, a4);
      return;
    default:
LABEL_4:
      int v55 = v18;
      uint64_t v57 = v15;
      uint64_t v58 = v14;
      if (qword_26AFD9A18 != -1) {
        swift_once();
      }
      int v56 = v8;
      uint64_t v19 = sub_240BB5990();
      sub_240A395FC(v19, (uint64_t)qword_26AFDEC70);
      uint64_t v20 = sub_240BB5970();
      os_log_type_t v21 = sub_240BB7160();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = swift_slowAlloc();
        uint64_t v52 = swift_slowAlloc();
        uint64_t aBlock = v52;
        *(_DWORD *)uint64_t v22 = 136446978;
        uint64_t v23 = sub_240BB7C80();
        uint64_t v54 = a1;
        uint64_t v66 = sub_240A38940(v23, v24, &aBlock);
        uint64_t v53 = v10;
        sub_240BB75F0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v22 + 12) = 2082;
        uint64_t v66 = sub_240A38940(0xD000000000000035, 0x8000000240BD1690, &aBlock);
        sub_240BB75F0();
        *(_WORD *)(v22 + 22) = 2080;
        LOBYTE(v66) = v54;
        uint64_t v25 = sub_240BB6E10();
        uint64_t v66 = sub_240A38940(v25, v26, &aBlock);
        sub_240BB75F0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v22 + 32) = 2080;
        char v27 = v55;
        LOBYTE(v66) = v55;
        uint64_t v28 = sub_240BB6E10();
        uint64_t v66 = sub_240A38940(v28, v29, &aBlock);
        LOBYTE(a1) = v54;
        sub_240BB75F0();
        uint64_t v10 = v53;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240A1B000, v20, v21, "[%{public}s.%{public}s]: Transitioning from %s to %s", (uint8_t *)v22, 0x2Au);
        uint64_t v30 = v52;
        swift_arrayDestroy();
        MEMORY[0x24560B930](v30, -1, -1);
        MEMORY[0x24560B930](v22, -1, -1);
      }
      else
      {

        char v27 = v55;
      }
      sub_240A34DC4(0, (unint64_t *)&qword_26AFD9980);
      char v31 = (void *)sub_240BB7310();
      uint64_t v32 = swift_allocObject();
      unint64_t v33 = v59;
      *(void *)(v32 + 16) = v59;
      *(unsigned char *)(v32 + 24) = v27;
      *(unsigned char *)(v32 + 25) = a1;
      *(unsigned char *)(v32 + 26) = v56;
      uint64_t v64 = sub_240B31A80;
      uint64_t v65 = v32;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v61 = 1107296256;
      uint64_t v62 = sub_240A87354;
      uint64_t v63 = &unk_26F5083C0;
      os_log_t v34 = _Block_copy(&aBlock);
      id v35 = v33;
      swift_release();
      sub_240BB6BB0();
      uint64_t aBlock = MEMORY[0x263F8EE78];
      sub_240A35938((unint64_t *)&qword_26AFD98C8, MEMORY[0x263F8F030]);
      sub_240AAA4B8();
      sub_240A35938((unint64_t *)&qword_26AFD98F8, (void (*)(uint64_t))sub_240AAA4B8);
      sub_240BB7670();
      MEMORY[0x24560A5E0](0, v17, v12, v34);
      _Block_release(v34);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v17, v58);
      return;
  }
}

void sub_240B2E8C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9 = a3 + 16;
  swift_beginAccess();
  uint64_t v10 = MEMORY[0x24560BA20](v9);
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    sub_240B2E050(a4, a5 & 1, a1, a2);
  }
}

uint64_t sub_240B2E950(uint64_t a1, void *a2)
{
  swift_getObjectType();
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v4 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v5 = sub_240BB2980();
  uint64_t v7 = v6;

  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_240BB5990();
  sub_240A395FC(v8, (uint64_t)qword_26AFDEC70);
  uint64_t v9 = sub_240BB5970();
  os_log_type_t v10 = sub_240BB71A0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v18 = v12;
    *(_DWORD *)uint64_t v11 = 136446722;
    uint64_t v13 = sub_240BB7C80();
    sub_240A38940(v13, v14, &v18);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    sub_240A38940(0xD00000000000002BLL, 0x8000000240BD1840, &v18);
    sub_240BB75F0();
    *(_WORD *)(v11 + 22) = 2082;
    uint64_t v15 = sub_240BB6E10();
    sub_240A38940(v15, v16, &v18);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v9, v10, "[%{public}s.%{public}s]: Showing blocking alert due to reason %{public}s", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v12, -1, -1);
    MEMORY[0x24560B930](v11, -1, -1);
  }

  sub_240B31DF0(v5, v7, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_240B2EC60(uint64_t result, uint64_t (*a2)(void))
{
  if (result) {
    return a2();
  }
  return result;
}

void sub_240B2EC90(char a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  swift_getObjectType();
  uint64_t v6 = sub_240BB6B90();
  uint64_t v32 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240BB6BC0();
  uint64_t v30 = *(void *)(v9 - 8);
  uint64_t v31 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v36 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_240BB5990();
  sub_240A395FC(v11, (uint64_t)qword_26AFDEC70);
  uint64_t v12 = sub_240BB5970();
  os_log_type_t v13 = sub_240BB7160();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v29 = v6;
    uint64_t v15 = v14;
    uint64_t v16 = swift_slowAlloc();
    aBlock[0] = v16;
    *(_DWORD *)uint64_t v15 = 136446466;
    uint64_t v17 = sub_240BB7C80();
    uint64_t v37 = sub_240A38940(v17, v18, aBlock);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2082;
    uint64_t v37 = sub_240A38940(0xD000000000000035, 0x8000000240BD16D0, aBlock);
    sub_240BB75F0();
    _os_log_impl(&dword_240A1B000, v12, v13, "[%{public}s.%{public}s]: Onboarding finished", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v16, -1, -1);
    uint64_t v19 = v15;
    uint64_t v6 = v29;
    MEMORY[0x24560B930](v19, -1, -1);
  }

  if (a1)
  {
    sub_240A34DC4(0, (unint64_t *)&qword_26AFD9980);
    uint64_t v20 = (void *)sub_240BB7310();
    uint64_t v21 = swift_allocObject();
    uint64_t v23 = v33;
    uint64_t v22 = v34;
    *(void *)(v21 + 16) = v33;
    *(unsigned char *)(v21 + 24) = a2 & 1;
    uint64_t v24 = v35;
    *(void *)(v21 + 32) = v22;
    *(void *)(v21 + 40) = v24;
    aBlock[4] = (uint64_t)sub_240B31AF8;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_240A87354;
    aBlock[3] = (uint64_t)&unk_26F508410;
    uint64_t v25 = _Block_copy(aBlock);
    id v26 = v23;
    sub_240AECDA0(v22);
    swift_release();
    char v27 = v36;
    sub_240BB6BB0();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_240A35938((unint64_t *)&qword_26AFD98C8, MEMORY[0x263F8F030]);
    sub_240AAA4B8();
    sub_240A35938((unint64_t *)&qword_26AFD98F8, (void (*)(uint64_t))sub_240AAA4B8);
    sub_240BB7670();
    MEMORY[0x24560A5E0](0, v27, v8, v25);
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v6);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v31);
  }
}

uint64_t sub_240B2F144(uint64_t a1, uint64_t (*a2)(uint64_t (*)(), void), uint64_t a3)
{
  sub_240A5C00C(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_240BB2B20();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v30 - v13;
  sub_240BB2B10();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_240B31B08((uint64_t)v7, (uint64_t (*)(void))sub_240A5C00C);
  }
  else
  {
    v30[1] = a3;
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v15(v14, v7, v8);
    id v16 = objc_msgSend(self, sel_defaultWorkspace);
    if (v16)
    {
      uint64_t v17 = v16;
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
      uint64_t v18 = *(unsigned __int8 *)(v9 + 80);
      v30[0] = a2;
      uint64_t v19 = (v18 + 24) & ~v18;
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v17;
      v15((char *)(v20 + v19), v12, v8);
      id v21 = v17;
      ((void (*)(void (*)(), uint64_t))v30[0])(sub_240B31D58, v20);

      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_240BB5990();
  sub_240A395FC(v23, (uint64_t)qword_26AFDEC70);
  uint64_t v24 = sub_240BB5970();
  os_log_type_t v25 = sub_240BB7190();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v32 = v27;
    *(_DWORD *)uint64_t v26 = 136446466;
    uint64_t v28 = sub_240BB7C80();
    uint64_t v31 = sub_240A38940(v28, v29, &v32);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2082;
    uint64_t v31 = sub_240A38940(0xD000000000000038, 0x8000000240BD17D0, &v32);
    sub_240BB75F0();
    _os_log_impl(&dword_240A1B000, v24, v25, "[%{public}s.%{public}s]: Failed to construct deep link URL to passcode settings", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v27, -1, -1);
    MEMORY[0x24560B930](v26, -1, -1);
  }

  return a2(nullsub_1, 0);
}

void sub_240B2F5A8(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, void (*a6)(void), uint64_t a7)
{
  uint64_t v48 = a5;
  uint64_t v12 = sub_240BB6B90();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_240BB6BC0();
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v43 = a3;
    uint64_t v44 = v18;
    uint64_t v45 = v17;
    uint64_t v47 = a7;
    id v21 = a2;
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v46 = v13;
    uint64_t v22 = sub_240BB5990();
    sub_240A395FC(v22, (uint64_t)qword_26AFDEC70);
    id v23 = a2;
    id v24 = a2;
    os_log_type_t v25 = sub_240BB5970();
    os_log_type_t v26 = sub_240BB7180();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      aBlock[0] = v40;
      *(_DWORD *)uint64_t v27 = 136446722;
      uint64_t v41 = a4;
      uint64_t v28 = sub_240BB7C80();
      uint64_t v49 = sub_240A38940(v28, v29, aBlock);
      unint64_t v42 = a6;
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2082;
      uint64_t v49 = sub_240A38940(0xD000000000000038, 0x8000000240BD1990, aBlock);
      sub_240BB75F0();
      *(_WORD *)(v27 + 22) = 2082;
      uint64_t v49 = (uint64_t)a2;
      id v30 = a2;
      sub_240A49AC0();
      uint64_t v31 = sub_240BB6E10();
      uint64_t v49 = sub_240A38940(v31, v32, aBlock);
      a6 = v42;
      sub_240BB75F0();
      a4 = v41;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_240A1B000, v25, v26, "[%{public}s.%{public}s]: Attempted to complete onboarding but received error: %{public}s", (uint8_t *)v27, 0x20u);
      uint64_t v33 = v40;
      swift_arrayDestroy();
      MEMORY[0x24560B930](v33, -1, -1);
      MEMORY[0x24560B930](v27, -1, -1);
    }
    else
    {
    }
    sub_240A34DC4(0, (unint64_t *)&qword_26AFD9980);
    uint64_t v34 = (void *)sub_240BB7310();
    uint64_t v35 = (void *)swift_allocObject();
    uint64_t v36 = v43;
    void v35[2] = v43;
    v35[3] = a4;
    v35[4] = v48;
    aBlock[4] = (uint64_t)sub_240B32248;
    aBlock[5] = (uint64_t)v35;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_240A87354;
    aBlock[3] = (uint64_t)&unk_26F508618;
    uint64_t v37 = _Block_copy(aBlock);
    id v38 = v36;
    id v39 = a4;
    swift_release();
    sub_240BB6BB0();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_240A35938((unint64_t *)&qword_26AFD98C8, MEMORY[0x263F8F030]);
    sub_240AAA4B8();
    sub_240A35938((unint64_t *)&qword_26AFD98F8, (void (*)(uint64_t))sub_240AAA4B8);
    sub_240BB7670();
    MEMORY[0x24560A5E0](0, v20, v15, v37);
    _Block_release(v37);

    (*(void (**)(char *, uint64_t))(v46 + 8))(v15, v12);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v20, v45);
    a6(0);
  }
  else
  {
    a6(1);
  }
}

uint64_t sub_240B2FB1C(uint64_t a1, void *a2)
{
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v4 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v5 = sub_240BB2980();
  uint64_t v7 = v6;

  sub_240B31DF0(v5, v7, a2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_240B2FC14(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  sub_240A5C00C(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1 + OBJC_IVAR____TtC5Heart34CardioFitnessOnboardingCoordinator_rootViewController;
  uint64_t result = MEMORY[0x24560BA20](a1 + OBJC_IVAR____TtC5Heart34CardioFitnessOnboardingCoordinator_rootViewController);
  if (result)
  {
    uint64_t v13 = *(void *)(v11 + 8);
    uint64_t ObjectType = swift_getObjectType();
    sub_240B2FD24((uint64_t)v10);
    (*(void (**)(void, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 40))(a2 & 1, v10, a3, a4, ObjectType, v13);
    sub_240BB50A0();
    return sub_240B31B08((uint64_t)v10, (uint64_t (*)(void))sub_240A5C00C);
  }
  return result;
}

uint64_t sub_240B2FD24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v25 = sub_240BB3DE0();
  MEMORY[0x270FA5388](v25);
  sub_240A35C58(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v2 = sub_240BB2B20();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B31B68(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240BB2890();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = (id)HKHRCardioFitnessDetailRoomBaseLink();
  sub_240BB2B00();

  sub_240BB2860();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v26 = v10;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_240B31B08((uint64_t)v8, (uint64_t (*)(void))sub_240B31B68);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v27, 1, 1, v2);
  }
  else
  {
    uint64_t v15 = v12;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v12, v8, v9);
    sub_240BB3E00();
    uint64_t v16 = (void *)(*(void *)(v24 + OBJC_IVAR____TtC5Heart34CardioFitnessOnboardingCoordinator_model)
                   + OBJC_IVAR____TtC5Heart28CardioFitnessOnboardingModel_mostRecentSampleDateProvider);
    uint64_t v17 = v16[3];
    uint64_t v18 = v16[4];
    sub_240A3466C(v16, v17);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
    uint64_t v28 = (void *)MEMORY[0x263F8EE78];
    sub_240A35938(&qword_268CA0FC8, MEMORY[0x263F43B50]);
    sub_240B31B9C(0);
    sub_240A35938(&qword_268CA0FD8, sub_240B31B9C);
    sub_240BB7670();
    uint64_t v19 = (void *)sub_240BB3DF0();
    sub_240BB2770();
    swift_allocObject();
    sub_240BB2760();
    uint64_t v28 = v19;
    sub_240A35938(&qword_268CA0FE0, MEMORY[0x263F43B68]);
    uint64_t v20 = sub_240BB2750();
    unint64_t v22 = v21;
    swift_release();
    sub_240A35C58(0, &qword_268CA0FE8, MEMORY[0x263F06338], MEMORY[0x263F8E0F8]);
    sub_240BB2830();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_240BB97E0;
    id v23 = (id)HKHRCardioFitnessChartContextQueryName();
    sub_240BB6DE0();

    sub_240BB2B50();
    sub_240BB2800();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_240BB2850();
    sub_240BB2870();
    sub_240A4C4D8(v20, v22);

    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v15, v9);
  }
}

uint64_t sub_240B303C0(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240A21D2C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240B30410(char *a1, char a2, void *a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v13 = a4 & 1;
  uint64_t v14 = *(char **)&a1[OBJC_IVAR____TtC5Heart34CardioFitnessOnboardingCoordinator_model];
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(unsigned char *)(v15 + 24) = a2;
  *(unsigned char *)(v15 + 25) = v13;
  *(void *)(v15 + 32) = a3;
  *(void *)(v15 + 40) = a7;
  *(void *)(v15 + 48) = a5;
  uint64_t v16 = a1;
  sub_240BA0BFC(a2, a3, (uint64_t (*)(uint64_t))sub_240B31248, v15, v14, a6, a7);

  return swift_release();
}

uint64_t sub_240B304EC(uint64_t a1, uint64_t a2)
{
  sub_240A80414(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v35 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B31010();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v36 = v6;
  uint64_t v37 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v33 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B310C8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v38 = v9;
  uint64_t v39 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v34 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_240BB7300();
  uint64_t v31 = *(void *)(v12 - 8);
  uint64_t v32 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_240BB72D0();
  MEMORY[0x270FA5388](v15);
  uint64_t v16 = sub_240BB6BC0();
  MEMORY[0x270FA5388](v16 - 8);
  v41[3] = sub_240A34DC4(0, (unint64_t *)&unk_26AFD75A0);
  v41[4] = &off_26F503DF0;
  v41[0] = a1;
  uint64_t v17 = a2 + OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider_queue_mostRecentSampleDate;
  uint64_t v18 = sub_240BB2CF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  *(void *)(a2
            + OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider_mostRecentSampleDateCancellationToken) = 0;
  uint64_t v19 = OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider_queue;
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9980);
  sub_240BB6BB0();
  id v40 = (id)MEMORY[0x263F8EE78];
  sub_240A35938(&qword_26AFD9958, MEMORY[0x263F8F0F8]);
  sub_240B31194(0);
  sub_240A35938(&qword_26AFD9908, sub_240B31194);
  sub_240BB7670();
  (*(void (**)(char *, void, uint64_t))(v31 + 104))(v14, *MEMORY[0x263F8F130], v32);
  *(void *)(a2 + v19) = sub_240BB7340();
  *(void *)(a2
            + OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider____lazy_storage___lastSampleQueryPublisher) = 0;
  sub_240A1E37C((uint64_t)v41, a2 + OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider_queryExecutor);
  id v40 = (id)sub_240A487B0();
  sub_240A21D2C(0, &qword_268CA0F78, (void (*)(uint64_t))sub_240A4988C);
  sub_240B303C0(&qword_268CA0F90, &qword_268CA0F78, (void (*)(uint64_t))sub_240A4988C);
  uint64_t v20 = v33;
  sub_240BB62F0();
  swift_release();
  id v40 = *(id *)(a2 + OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider_queue);
  id v21 = v40;
  uint64_t v22 = sub_240BB72F0();
  uint64_t v23 = (uint64_t)v35;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v35, 1, 1, v22);
  sub_240A35938(&qword_268CA0FA8, (void (*)(uint64_t))sub_240B31010);
  sub_240A805DC();
  id v24 = v21;
  uint64_t v25 = v34;
  uint64_t v26 = v36;
  sub_240BB6400();
  sub_240B31B08(v23, (uint64_t (*)(void))sub_240A80414);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v20, v26);
  swift_allocObject();
  swift_weakInit();
  sub_240A35938((unint64_t *)&unk_268CA0FB0, (void (*)(uint64_t))sub_240B310C8);
  uint64_t v27 = v38;
  uint64_t v28 = sub_240BB6450();
  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v41);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v25, v27);
  *(void *)(a2
            + OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider_mostRecentSampleDateCancellationToken) = v28;
  swift_release();
  return a2;
}

uint64_t sub_240B30B9C()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_240B30BD4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7)
{
  uint64_t ObjectType = swift_getObjectType();
  v30[3] = type metadata accessor for CardioFitnessOnboardingMostRecentValueProvider();
  v30[4] = &off_26F503E00;
  v30[0] = a4;
  uint64_t v15 = OBJC_IVAR____TtC5Heart28CardioFitnessOnboardingModel_lockedDeliveredCountryCode;
  sub_240B30F44(0, (unint64_t *)&unk_268CA0F58, (unint64_t *)&qword_26AFD7580, MEMORY[0x263F8D310]);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 0;
  *(void *)(v16 + 24) = 0;
  *(_DWORD *)(v16 + 32) = 0;
  *(void *)&a7[v15] = v16;
  uint64_t v17 = OBJC_IVAR____TtC5Heart28CardioFitnessOnboardingModel_wristDetectEnabled;
  sub_240B30F44(0, &qword_268CA0F68, &qword_26AFD9910, MEMORY[0x263F8D4F8]);
  uint64_t v18 = swift_allocObject();
  *(_DWORD *)(v18 + 20) = 0;
  *(unsigned char *)(v18 + 16) = 2;
  *(void *)&a7[v17] = v18;
  uint64_t v19 = a7;
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_240BB7900()) {
    unint64_t v20 = sub_240A71C94(MEMORY[0x263F8EE78]);
  }
  else {
    unint64_t v20 = MEMORY[0x263F8EE88];
  }
  *(void *)&v19[OBJC_IVAR____TtC5Heart28CardioFitnessOnboardingModel_cancellables] = v20;
  v19[OBJC_IVAR____TtC5Heart28CardioFitnessOnboardingModel_detailsChanged] = 2;
  *(void *)&v19[OBJC_IVAR____TtC5Heart28CardioFitnessOnboardingModel_featureAvailabilityProvider] = a2;
  *(void *)&v19[OBJC_IVAR____TtC5Heart28CardioFitnessOnboardingModel_detailsProvider] = a3;
  sub_240A1E37C((uint64_t)v30, (uint64_t)&v19[OBJC_IVAR____TtC5Heart28CardioFitnessOnboardingModel_mostRecentSampleDateProvider]);
  id v21 = &v19[OBJC_IVAR____TtC5Heart28CardioFitnessOnboardingModel_dateProvider];
  *(void *)id v21 = a5;
  *((void *)v21 + 1) = a6;
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();

  v29.receiver = v19;
  v29.super_class = (Class)type metadata accessor for CardioFitnessOnboardingModel();
  id v22 = objc_msgSendSuper2(&v29, sel_init);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v22;
  *(void *)(v23 + 24) = ObjectType;
  aBlock[4] = sub_240B31000;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_240A1FD44;
  aBlock[3] = &unk_26F508230;
  id v24 = _Block_copy(aBlock);
  id v25 = v22;
  swift_release();
  objc_msgSend(a2, sel_getFeatureOnboardingRecordWithCompletion_, v24);
  _Block_release(v24);
  aBlock[0] = a1;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v26 = (void (*)(uint64_t))MEMORY[0x263F44998];
  sub_240A21D2C(0, (unint64_t *)&qword_26AFD8A40, MEMORY[0x263F44998]);
  sub_240B303C0((unint64_t *)&qword_26AFD8A30, (unint64_t *)&qword_26AFD8A40, v26);
  sub_240BB6450();
  swift_release();
  swift_beginAccess();
  sub_240BB6120();
  swift_endAccess();
  swift_release();

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v30);
  return v25;
}

void sub_240B30F44(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_240A2C8DC(255, a3, a4, MEMORY[0x263F8D8F0]);
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v5 = sub_240BB7840();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_240B30FC8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_240B31000(uint64_t a1, void *a2)
{
  sub_240B9F2DC(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_240B31008(uint64_t a1)
{
  return sub_240B9F6E4(a1, v1);
}

void sub_240B31010()
{
  if (!qword_268CA0F70)
  {
    sub_240A21D2C(255, &qword_268CA0F78, (void (*)(uint64_t))sub_240A4988C);
    sub_240BB2CF0();
    sub_240B303C0(&qword_268CA0F90, &qword_268CA0F78, (void (*)(uint64_t))sub_240A4988C);
    unint64_t v0 = sub_240BB5F90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA0F70);
    }
  }
}

void sub_240B310C8()
{
  if (!qword_268CA0F98)
  {
    sub_240B31010();
    sub_240A34DC4(255, (unint64_t *)&qword_26AFD9980);
    sub_240A35938(&qword_268CA0FA8, (void (*)(uint64_t))sub_240B31010);
    sub_240A805DC();
    unint64_t v0 = sub_240BB60E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA0F98);
    }
  }
}

void sub_240B31194(uint64_t a1)
{
}

uint64_t sub_240B311C8()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B31200(uint64_t a1)
{
  return sub_240A48614(a1);
}

uint64_t sub_240B31208()
{
  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_240B31248(char a1)
{
  sub_240B2D9C0(a1, *(void **)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(unsigned char *)(v1 + 25), *(void **)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_240B31260()
{
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_240B312A0()
{
  return sub_240B2E950(*(unsigned __int8 *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_240B312D0()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 26, 7);
}

void sub_240B31308(uint64_t a1, uint64_t a2)
{
  sub_240B2E8C8(a1, a2, *(void *)(v2 + 16), *(unsigned __int8 *)(v2 + 24), *(unsigned char *)(v2 + 25));
}

void sub_240B31318(char a1, char a2)
{
  uint64_t v4 = sub_240B2D6BC(a1);
  uint64_t v5 = v2 + OBJC_IVAR____TtC5Heart34CardioFitnessOnboardingCoordinator_rootViewController;
  if (MEMORY[0x24560BA20](v2 + OBJC_IVAR____TtC5Heart34CardioFitnessOnboardingCoordinator_rootViewController))
  {
    uint64_t v6 = *(void *)(v5 + 8);
    uint64_t ObjectType = swift_getObjectType();
    memset(v17, 0, sizeof(v17));
    (*(void (**)(void *, _OWORD *, uint64_t, uint64_t))(v6 + 32))(v4, v17, ObjectType, v6);
    sub_240BB50A0();
    sub_240A7B53C((uint64_t)v17);
  }
  uint64_t v8 = *(void **)(v2 + OBJC_IVAR____TtC5Heart34CardioFitnessOnboardingCoordinator_analyticsManager);
  uint64_t v9 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtC5Heart34CardioFitnessOnboardingCoordinator_model);
  if (a2 == 1)
  {
    int v11 = *(unsigned __int8 *)(v10 + OBJC_IVAR____TtC5Heart28CardioFitnessOnboardingModel_detailsChanged);
    BOOL v12 = v11 == 2 || (v11 & 1) == 0;
  }
  else
  {
    BOOL v12 = 1;
  }
  uint64_t v13 = *(void *)(v10 + OBJC_IVAR____TtC5Heart28CardioFitnessOnboardingModel_lockedDeliveredCountryCode);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v13 + 32));
  sub_240B9F2BC((uint64_t *)(v13 + 16), v17);
  os_unfair_lock_unlock((os_unfair_lock_t)(v13 + 32));
  uint64_t v14 = *((void *)&v17[0] + 1);
  swift_release();
  if (v14)
  {
    uint64_t v15 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = 0;
  }
  id v16 = objc_msgSend(v8, sel_submitOnboardingEventForStep_acceptDefaults_countryCode_, v9, v12, v15);
}

void sub_240B31568(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v8 = self;
  id v9 = objc_msgSend(v8, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_240BB2980();

  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a4;
  void v10[4] = ObjectType;
  swift_retain();
  int v11 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  uint64_t v32 = sub_240B31C08;
  uint64_t v33 = v10;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v29 = 1107296256;
  uint64_t v30 = sub_240B187EC;
  uint64_t v31 = &unk_26F508460;
  BOOL v12 = _Block_copy(&aBlock);
  swift_release();
  id v25 = self;
  id v13 = objc_msgSend(v25, sel_actionWithTitle_style_handler_, v11, 0, v12, 0xE000000000000000);
  _Block_release(v12);

  id v14 = v13;
  id v15 = objc_msgSend(v8, (SEL)&selRef_setModalPresentationStyle_ + 5, ObjCClassFromMetadata);
  sub_240BB2980();

  id v16 = objc_msgSend(v8, (SEL)&selRef_setModalPresentationStyle_ + 5, ObjCClassFromMetadata, 0xE000000000000000);
  sub_240BB2980();

  uint64_t v17 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  uint64_t v18 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v17, v18, 0, 0xE000000000000000);

  id v20 = objc_msgSend(v8, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_240BB2980();

  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a3;
  *(void *)(v21 + 24) = a4;
  swift_retain();
  id v22 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  uint64_t v32 = sub_240B31C4C;
  uint64_t v33 = (void *)v21;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v29 = 1107296256;
  uint64_t v30 = sub_240B187EC;
  uint64_t v31 = &unk_26F5084B0;
  uint64_t v23 = _Block_copy(&aBlock);
  swift_release();
  id v24 = objc_msgSend(v25, sel_actionWithTitle_style_handler_, v22, 1, v23, 0xE000000000000000);
  _Block_release(v23);

  objc_msgSend(v19, sel_addAction_, v24);
  if (v14)
  {
    objc_msgSend(v19, sel_addAction_, v14);
  }
  objc_msgSend(a1, sel_presentViewController_animated_completion_, v19, 1, 0);
}

uint64_t sub_240B31A48()
{
  return MEMORY[0x270FA0238](v0, 27, 7);
}

void sub_240B31A80()
{
  sub_240B31318(*(unsigned char *)(v0 + 24), *(unsigned char *)(v0 + 25));
}

uint64_t sub_240B31AB0()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_240B31AF8()
{
  return sub_240B2FC14(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_240B31B08(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_240B31B68(uint64_t a1)
{
}

void sub_240B31B9C(uint64_t a1)
{
}

uint64_t sub_240B31BD0()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_240B31C08(uint64_t a1)
{
  return sub_240B2F144(a1, *(uint64_t (**)(uint64_t (*)(), void))(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_240B31C14()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B31C4C()
{
  return (*(uint64_t (**)(uint64_t (*)(), void))(v0 + 16))(nullsub_1, 0);
}

uint64_t sub_240B31C8C()
{
  uint64_t v1 = sub_240BB2B20();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

void sub_240B31D58()
{
  sub_240BB2B20();
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = (id)sub_240BB2AF0();
  objc_msgSend(v1, sel_openSensitiveURL_withOptions_, v2, 0);
}

void sub_240B31DF0(uint64_t a1, uint64_t a2, void *a3)
{
  sub_240BB4850();
  uint64_t v4 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, 0, v4, 1);

  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v6 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_240BB2980();

  uint64_t v7 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(self, sel_actionWithTitle_style_handler_, v7, 1, 0, 0xE000000000000000);

  objc_msgSend(v9, sel_addAction_, v8);
  objc_msgSend(a3, sel_presentViewController_animated_completion_, v9, 1, 0);
}

void sub_240B31FA8()
{
  swift_getObjectType();
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_240BB5990();
  sub_240A395FC(v0, (uint64_t)qword_26AFDEC70);
  uint64_t v1 = sub_240BB5970();
  os_log_type_t v2 = sub_240BB7160();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v7 = v4;
    *(_DWORD *)uint64_t v3 = 136446466;
    uint64_t v5 = sub_240BB7C80();
    sub_240A38940(v5, v6, &v7);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2082;
    sub_240A38940(0xD000000000000025, 0x8000000240BD1890, &v7);
    sub_240BB75F0();
    _os_log_impl(&dword_240A1B000, v1, v2, "[%{public}s.%{public}s]: User dismissed modal view", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v4, -1, -1);
    MEMORY[0x24560B930](v3, -1, -1);
  }

  sub_240B2EC90(0, 0, 0, 0);
}

uint64_t sub_240B3218C()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_240B321D4()
{
  sub_240B2D09C(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_240B321E0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_240B32208()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_240B32248()
{
  return sub_240B2FB1C(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

id sub_240B322B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(a1, sel_identifier);
  uint64_t v4 = sub_240BB6DE0();
  uint64_t v6 = v5;

  if (v4 == 0xD000000000000030 && v6 == 0x8000000240BD1A00 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = type metadata accessor for AFibBurdenDetailViewControllerDebugActionProviding();
    uint64_t v8 = swift_allocObject();
    *(void *)(a2 + 24) = v7;
    id result = (id)sub_240B324D4(&qword_268CA0FF8, (void (*)(uint64_t))type metadata accessor for AFibBurdenDetailViewControllerDebugActionProviding);
    *(void *)(a2 + 32) = result;
    *(void *)a2 = v8;
    return result;
  }
  if (v4 == 0xD00000000000001ELL && v6 == 0x8000000240BD1A40)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v10 = sub_240BB7AE0();
    id result = (id)swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      *(void *)(a2 + 32) = 0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      return result;
    }
  }
  uint64_t v11 = type metadata accessor for CardioFitnessDataTypeDetailDataSourceProvider();
  uint64_t v12 = swift_allocObject();
  id result = objc_msgSend(self, sel__quantityTypeWithCode_, 124);
  if (result)
  {
    *(void *)(v12 + 16) = result;
    *(void *)(a2 + 24) = v11;
    id result = (id)sub_240B324D4(&qword_268CA0FF0, (void (*)(uint64_t))type metadata accessor for CardioFitnessDataTypeDetailDataSourceProvider);
    *(void *)(a2 + 32) = result;
    *(void *)a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_240B324BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240B322B8(a1, a2);
}

uint64_t sub_240B324D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_240B3251C(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v6 = *v3;
  sub_240A3A6A4();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_240BB3240();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A284A8((uint64_t)v15);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))((uint64_t)v3 + OBJC_IVAR____TtC5Heart32EmptyRelatedSampleTypesGenerator_domain, v15, v12);
  uint64_t v16 = swift_allocObject();
  long long v17 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v16 + 32) = v17;
  *(void *)(v16 + 48) = *(void *)(a1 + 32);
  *(void *)(v16 + 56) = a2;
  *(void *)(v16 + 64) = v6;
  uint64_t v18 = *(void **)a1;
  uint64_t v23 = *(void *)(a1 + 8);
  long long v22 = v17;
  id v19 = v18;
  sub_240A32CD8((uint64_t)&v23);
  sub_240A334B8((uint64_t)&v22);
  sub_240A3B6CC();
  sub_240A20ABC(&qword_26AFD9810, (void (*)(uint64_t))sub_240A3B6CC);
  swift_retain();
  sub_240BB6240();
  sub_240A20ABC((unint64_t *)&qword_26AFD98A0, (void (*)(uint64_t))sub_240A3A6A4);
  uint64_t v20 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC5Heart32EmptyRelatedSampleTypesGenerator_publisher) = v20;

  swift_release();
  sub_240A32CAC((uint64_t)&v23);
  sub_240B330DC((uint64_t)&v22);
  return v3;
}

uint64_t sub_240B32800(uint64_t a1, uint64_t a2)
{
  sub_240A5A338(0);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3FF50(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_240A3466C((void *)(a2 + 24), *(void *)(a2 + 48));
  uint64_t v13 = *(void *)(a1 + 16);
  unint64_t v14 = *(void *)(a1 + 24);
  sub_240A3466C(v12, v12[3]);
  *(void *)&long long v44 = v13;
  sub_240BB3200();
  uint64_t v15 = sub_240BB31D0();
  int v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v11, 1, v15);
  sub_240AAE598((uint64_t)v11);
  long long v17 = *(void **)a1;
  if (v16 == 1)
  {
    uint64_t v47 = *(void *)(a1 + 8);
    sub_240BB4850();
    id v18 = v17;
    sub_240A32CD8((uint64_t)&v47);
    sub_240BB4850();
    id v19 = v18;
    sub_240A32CD8((uint64_t)&v47);
    uint64_t v20 = sub_240BB5970();
    os_log_type_t v21 = sub_240BB7160();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v42 = v23;
      *(_DWORD *)uint64_t v22 = 136446466;
      uint64_t v45 = v43;
      uint64_t v46 = v23;
      sub_240B33108();
      uint64_t v43 = v6;
      uint64_t v24 = sub_240BB6E10();
      uint64_t v45 = sub_240A38940(v24, v25, &v46);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2082;
      sub_240BB4850();
      uint64_t v45 = sub_240A38940(v44, v14, &v46);
      uint64_t v6 = v43;
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      sub_240A32CAC((uint64_t)&v47);

      swift_bridgeObjectRelease();
      sub_240A32CAC((uint64_t)&v47);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v20, v21, "[%{public}s(%{public}s]: No previous feed item found, no changes necessary", (uint8_t *)v22, 0x16u);
      uint64_t v26 = v42;
      swift_arrayDestroy();
      MEMORY[0x24560B930](v26, -1, -1);
      MEMORY[0x24560B930](v22, -1, -1);
    }
    else
    {

      sub_240A32CAC((uint64_t)&v47);
      swift_bridgeObjectRelease();
      sub_240A32CAC((uint64_t)&v47);
      swift_bridgeObjectRelease();
    }
    uint64_t v37 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v47 = *(void *)(a1 + 8);
    id v27 = v17;
    sub_240A32CD8((uint64_t)&v47);
    sub_240BB4850();
    id v28 = v27;
    sub_240A32CD8((uint64_t)&v47);
    sub_240BB4850();
    uint64_t v29 = sub_240BB5970();
    os_log_type_t v30 = sub_240BB7160();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v42 = v32;
      *(_DWORD *)uint64_t v31 = 136446466;
      uint64_t v45 = v43;
      uint64_t v46 = v32;
      sub_240B33108();
      uint64_t v43 = v5;
      uint64_t v33 = sub_240BB6E10();
      uint64_t v45 = sub_240A38940(v33, v34, &v46);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2082;
      sub_240BB4850();
      uint64_t v35 = v44;
      uint64_t v45 = sub_240A38940(v44, v14, &v46);
      uint64_t v5 = v43;
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      sub_240A32CAC((uint64_t)&v47);

      swift_bridgeObjectRelease();
      sub_240A32CAC((uint64_t)&v47);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v29, v30, "[%{public}s(%{public}s]: Previous feed item found, removing identifier", (uint8_t *)v31, 0x16u);
      uint64_t v36 = v42;
      swift_arrayDestroy();
      MEMORY[0x24560B930](v36, -1, -1);
      MEMORY[0x24560B930](v31, -1, -1);
    }
    else
    {

      sub_240A32CAC((uint64_t)&v47);
      swift_bridgeObjectRelease();
      sub_240A32CAC((uint64_t)&v47);
      swift_bridgeObjectRelease();
      uint64_t v35 = v44;
    }
    uint64_t v38 = (uint64_t (*)(void, uint64_t))MEMORY[0x263F8E0F8];
    sub_240A3A3B8(0, &qword_26AFD7658, MEMORY[0x263F45828], MEMORY[0x263F8E0F8]);
    uint64_t v37 = swift_allocObject();
    long long v44 = xmmword_240BB97E0;
    *(_OWORD *)(v37 + 16) = xmmword_240BB97E0;
    sub_240A3A3B8(0, (unint64_t *)&qword_26AFD7108, MEMORY[0x263F8D310], v38);
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = v44;
    *(void *)(v39 + 32) = v35;
    *(void *)(v39 + 40) = v14;
    *(void *)(v37 + 32) = v39;
    *(void *)(v37 + 40) = 0;
    *(void *)(v37 + 48) = 0;
    *(void *)(v37 + 56) = 0;
    *(unsigned char *)(v37 + 64) = 32;
    sub_240BB4850();
  }
  uint64_t v46 = v37;
  sub_240A3A3B8(0, (unint64_t *)&qword_26AFD98D8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
  sub_240BB6200();
  sub_240A20ABC((unint64_t *)&qword_26AFD9848, sub_240A5A338);
  uint64_t v40 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v40;
}

uint64_t sub_240B32ECC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Heart32EmptyRelatedSampleTypesGenerator_domain;
  uint64_t v2 = sub_240BB3240();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_240B32F7C()
{
  return type metadata accessor for EmptyRelatedSampleTypesGenerator();
}

uint64_t type metadata accessor for EmptyRelatedSampleTypesGenerator()
{
  uint64_t result = qword_26AFD8220;
  if (!qword_26AFD8220) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240B32FD0()
{
  return swift_retain();
}

uint64_t sub_240B32FE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC5Heart32EmptyRelatedSampleTypesGenerator_domain;
  uint64_t v4 = sub_240BB3240();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_240B3305C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_240B330AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_240B32800(v1 + 16, *(void *)(v1 + 56));
  *a1 = result;
  return result;
}

uint64_t sub_240B330DC(uint64_t a1)
{
  return a1;
}

unint64_t sub_240B33108()
{
  unint64_t result = qword_26AFD8F08;
  if (!qword_26AFD8F08)
  {
    type metadata accessor for EmptyRelatedSampleTypesGenerator();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD8F08);
  }
  return result;
}

uint64_t sub_240B33144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_240B342AC(0, (unint64_t *)&qword_268C9E890, MEMORY[0x263F8D4F8], MEMORY[0x263F44B40]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v15 - v10;
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3B8]), sel_initWithFeatureIdentifier_healthStore_, *MEMORY[0x263F09778], a2);
  sub_240BB72A0();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  *(void *)(v13 + 24) = a4;
  sub_240B3426C();
  sub_240BB7450();

  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

unint64_t sub_240B332D0()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_240B332EC()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v0 = (id)qword_26AFDECD8;

  return sub_240BB36C0();
}

uint64_t sub_240B33378(char a1, char a2)
{
  sub_240B342AC(0, (unint64_t *)&qword_26AFD7108, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_240BBAE40;
  if (a1)
  {
    if (qword_26AFDA090 != -1) {
      swift_once();
    }
  }
  else if (a2)
  {
    if (qword_26AFDA090 != -1) {
      swift_once();
    }
  }
  else if (qword_26AFDA090 != -1)
  {
    swift_once();
  }
  *(void *)(v4 + 32) = sub_240BB2980();
  *(void *)(v4 + 40) = v5;
  *(void *)(v4 + 48) = sub_240BB2980();
  *(void *)(v4 + 56) = v6;
  return v4;
}

uint64_t sub_240B33580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_240A393BC(0, &qword_26AFD7BC0, MEMORY[0x263F44998]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v26 - v5;
  uint64_t v7 = sub_240BB56E0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1 + OBJC_IVAR____TtC5Heart43AtrialFibrillationFeatureStatusAvailability_status;
  swift_beginAccess();
  sub_240A3FC88(v11, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_240B341F8((uint64_t)v6, &qword_26AFD7BC0, MEMORY[0x263F44998]);
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_240BB5990();
    sub_240A395FC(v12, (uint64_t)qword_26AFDEC70);
    uint64_t v13 = sub_240BB5970();
    os_log_type_t v14 = sub_240BB7180();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v29 = v16;
      *(_DWORD *)uint64_t v15 = 136446210;
      uint64_t v27 = a2;
      uint64_t v17 = sub_240BB7C80();
      uint64_t v28 = sub_240A38940(v17, v18, &v29);
      a2 = v27;
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v13, v14, "[%{public}s]: No status available for IRN; reporting 'available'",
        v15,
        0xCu);
      char v19 = 1;
      swift_arrayDestroy();
      MEMORY[0x24560B930](v16, -1, -1);
      MEMORY[0x24560B930](v15, -1, -1);

      char v20 = 0;
    }
    else
    {

      char v20 = 0;
      char v19 = 1;
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    os_log_type_t v21 = (void *)sub_240BB56F0();
    LODWORD(v27) = sub_240BB7460();
    char v22 = sub_240BB7460();

    char v19 = v27 & v22;
    uint64_t v23 = (void *)sub_240BB56F0();
    char v24 = sub_240BB7460();

    char v20 = v24 ^ 1;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return sub_240B339E8(v19 & 1, v20 & 1, a2);
}

uint64_t sub_240B3395C()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  return sub_240BB2980();
}

uint64_t sub_240B339E8@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  if (a2)
  {
    uint64_t v3 = 0xD00000000000001DLL;
    uint64_t v4 = 0x8000000240BCDEA0;
    uint64_t v5 = &selRef_seedExpiredLinkURL;
    return sub_240B33CFC((SEL *)v5, v3, v4, a3);
  }
  if (a1)
  {
    uint64_t v4 = 0x8000000240BCDEC0;
    uint64_t v5 = &selRef_irregularHeartRhythmFooterLinkURL;
    uint64_t v3 = 0xD00000000000001BLL;
    return sub_240B33CFC((SEL *)v5, v3, v4, a3);
  }

  return sub_240B33A90(a3);
}

uint64_t sub_240B33A90@<X0>(uint64_t a1@<X8>)
{
  sub_240A393BC(0, &qword_26AFD7B70, MEMORY[0x263F06EA8]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v15 - v4;
  sub_240BB2B10();
  uint64_t v6 = sub_240BB2B20();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v5, v6);
  }
  sub_240B341F8((uint64_t)v5, &qword_26AFD7B70, MEMORY[0x263F06EA8]);
  sub_240B278D0(0, (unint64_t *)&qword_26AFD99D8, (unint64_t *)&qword_26AFD9A10, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_240BBAE40;
  v15[1] = v1;
  swift_getMetatypeMetadata();
  uint64_t v10 = sub_240BB6E10();
  uint64_t v12 = v11;
  uint64_t v13 = MEMORY[0x263F8D310];
  *(void *)(v9 + 56) = MEMORY[0x263F8D310];
  unint64_t v14 = sub_240A4C66C();
  *(void *)(v9 + 32) = v10;
  *(void *)(v9 + 40) = v12;
  *(void *)(v9 + 96) = v13;
  *(void *)(v9 + 104) = v14;
  *(void *)(v9 + 64) = v14;
  *(void *)(v9 + 72) = 0xD000000000000025;
  *(void *)(v9 + 80) = 0x8000000240BCDE70;
  sub_240BB6E00();
  uint64_t result = sub_240BB78D0();
  __break(1u);
  return result;
}

uint64_t sub_240B33CFC@<X0>(SEL *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  sub_240A393BC(0, &qword_26AFD7B70, MEMORY[0x263F06EA8]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v22 - v10;
  id v12 = [self *a1];
  sub_240BB6DE0();

  sub_240BB2B10();
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_240BB2B20();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a4, v11, v13);
  }
  sub_240B341F8((uint64_t)v11, &qword_26AFD7B70, MEMORY[0x263F06EA8]);
  sub_240B278D0(0, (unint64_t *)&qword_26AFD99D8, (unint64_t *)&qword_26AFD9A10, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_240BBAE40;
  v22[1] = v4;
  swift_getMetatypeMetadata();
  uint64_t v17 = sub_240BB6E10();
  uint64_t v19 = v18;
  uint64_t v20 = MEMORY[0x263F8D310];
  *(void *)(v16 + 56) = MEMORY[0x263F8D310];
  unint64_t v21 = sub_240A4C66C();
  *(void *)(v16 + 32) = v17;
  *(void *)(v16 + 40) = v19;
  *(void *)(v16 + 96) = v20;
  *(void *)(v16 + 104) = v21;
  *(void *)(v16 + 64) = v21;
  *(void *)(v16 + 72) = a2;
  *(void *)(v16 + 80) = a3;
  sub_240BB6E00();
  uint64_t result = sub_240BB78D0();
  __break(1u);
  return result;
}

void sub_240B33F8C(char a1, void *a2)
{
  if ((a1 & 1) == 0)
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_240BB5990();
    sub_240A395FC(v3, (uint64_t)qword_26AFDEC70);
    id v4 = a2;
    id v5 = a2;
    oslog = sub_240BB5970();
    os_log_type_t v6 = sub_240BB7180();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v15 = v8;
      *(_DWORD *)uint64_t v7 = 136315394;
      uint64_t v9 = sub_240BB7C80();
      sub_240A38940(v9, v10, &v15);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2082;
      id v11 = a2;
      sub_240B278D0(0, (unint64_t *)&unk_268CA21D0, (unint64_t *)&qword_26AFD99E0, MEMORY[0x263F8E4D8], MEMORY[0x263F8D8F0]);
      uint64_t v12 = sub_240BB6E20();
      sub_240A38940(v12, v13, &v15);
      sub_240BB75F0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_240A1B000, oslog, v6, "[%s]: Unable to change IRN setting: %{public}s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v8, -1, -1);
      MEMORY[0x24560B930](v7, -1, -1);
    }
    else
    {
    }
  }
}

uint64_t sub_240B341F8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_240A393BC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_240B34254()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_240B34264(char a1, void *a2)
{
}

unint64_t sub_240B3426C()
{
  unint64_t result = qword_268CA1000;
  if (!qword_268CA1000)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268CA1000);
  }
  return result;
}

void sub_240B342AC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_240B342F8(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = a1;
  if (a1)
  {
    sub_240A34DC4(0, &qword_268CA10F0);
    unint64_t v5 = (void *)sub_240BB6EF0();
  }
  if (a2) {
    uint64_t v6 = sub_240BB2A40();
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);
}

id sub_240B343A4()
{
  uint64_t v1 = OBJC_IVAR____TtC5Heart42SummariesElectrocardiogramListDataProvider____lazy_storage___dataFetcher;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart42SummariesElectrocardiogramListDataProvider____lazy_storage___dataFetcher);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart42SummariesElectrocardiogramListDataProvider____lazy_storage___dataFetcher);
  }
  else
  {
    uint64_t v4 = v0;
    unint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC5Heart42SummariesElectrocardiogramListDataProvider_store);
    sub_240A1E37C(v0 + OBJC_IVAR____TtC5Heart42SummariesElectrocardiogramListDataProvider_healthExperienceStore, (uint64_t)v12);
    id v6 = objc_allocWithZone((Class)type metadata accessor for SummariesElectrocardiogramDataFetcher());
    id v7 = v5;
    id v8 = sub_240B35AFC(v7, v12, 0, 0);

    uint64_t v9 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v8;
    id v3 = v8;

    uint64_t v2 = 0;
  }
  id v10 = v2;
  return v3;
}

id sub_240B34720()
{
  return sub_240B35554(type metadata accessor for SummariesElectrocardiogramListDataProvider);
}

uint64_t type metadata accessor for SummariesElectrocardiogramListDataProvider()
{
  return self;
}

void sub_240B347B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_240BB5990();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = *(void **)(v1 + OBJC_IVAR____TtC5Heart37SummariesElectrocardiogramDataFetcher_queryData);
  if (!v6)
  {
    uint64_t v29 = *(void (**)(void, uint64_t))(v1
                                                 + OBJC_IVAR____TtC5Heart37SummariesElectrocardiogramDataFetcher_resultsHandler);
    if (v29)
    {
      sub_240B35620();
      uint64_t v30 = swift_allocError();
      unsigned char *v31 = 4;
      swift_retain();
      v29(0, v30);
      sub_240A87A1C((uint64_t)v29);
      id v32 = (id)v30;
      goto LABEL_21;
    }
    return;
  }
  id v39 = v6;
  id v7 = objc_msgSend(v39, sel_samples);
  if (!v7
    || (id v8 = v7,
        unint64_t v41 = 0,
        sub_240A34DC4(0, (unint64_t *)&unk_268CA10D0),
        sub_240BB6F00(),
        v8,
        (unint64_t v9 = v41) == 0))
  {
    sub_240BB5920();
    id v20 = v39;
    unint64_t v21 = sub_240BB5970();
    os_log_type_t v22 = sub_240BB7180();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      id v39 = (id)swift_slowAlloc();
      uint64_t v40 = (uint64_t)v20;
      unint64_t v41 = (unint64_t)v39;
      *(_DWORD *)uint64_t v23 = 136315138;
      v37[1] = v23 + 4;
      uint64_t v38 = v23;
      sub_240A34DC4(0, &qword_268CA10C8);
      id v24 = v20;
      uint64_t v25 = sub_240BB6E20();
      uint64_t v40 = sub_240A38940(v25, v26, (uint64_t *)&v41);
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      uint64_t v27 = v38;
      _os_log_impl(&dword_240A1B000, v21, v22, "Cound not decode samples from query data %s", v38, 0xCu);
      id v28 = v39;
      swift_arrayDestroy();
      MEMORY[0x24560B930](v28, -1, -1);
      MEMORY[0x24560B930](v27, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v33 = *(void (**)(void, void *))(v1
                                                + OBJC_IVAR____TtC5Heart37SummariesElectrocardiogramDataFetcher_resultsHandler);
    if (v33)
    {
      sub_240B35620();
      unint64_t v34 = (void *)swift_allocError();
      *uint64_t v35 = 4;
      swift_retain();
      v33(0, v34);

      sub_240A87A1C((uint64_t)v33);
    }
    else
    {
    }
    return;
  }
  uint64_t v10 = v1 + OBJC_IVAR____TtC5Heart37SummariesElectrocardiogramDataFetcher_resultsHandler;
  id v11 = *(void (**)(unint64_t, void))(v1
                                                        + OBJC_IVAR____TtC5Heart37SummariesElectrocardiogramDataFetcher_resultsHandler);
  if (!v11)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    id v32 = v39;
LABEL_21:

    return;
  }
  uint64_t v12 = *(uint8_t **)(v10 + 8);
  unint64_t v41 = MEMORY[0x263F8EE78];
  if (v9 >> 62)
  {
    sub_240AECDA0((uint64_t)v11);
    sub_240BB4850();
    uint64_t v13 = sub_240BB7900();
    if (v13) {
      goto LABEL_7;
    }
LABEL_29:
    swift_bridgeObjectRelease();
    unint64_t v36 = MEMORY[0x263F8EE78];
LABEL_30:
    swift_bridgeObjectRelease();
    v11(v36, 0);
    sub_240A87A1C((uint64_t)v11);
    goto LABEL_31;
  }
  uint64_t v13 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_240AECDA0((uint64_t)v11);
  sub_240BB4850();
  if (!v13) {
    goto LABEL_29;
  }
LABEL_7:
  uint64_t v38 = v12;
  uint64_t v14 = self;
  if (v13 >= 1)
  {
    uint64_t v15 = (void *)v14;
    for (uint64_t i = 0; i != v13; ++i)
    {
      if ((v9 & 0xC000000000000001) != 0) {
        id v17 = (id)MEMORY[0x24560AAA0](i, v9);
      }
      else {
        id v17 = *(id *)(v9 + 8 * i + 32);
      }
      uint64_t v18 = v17;
      id v19 = objc_msgSend(v15, sel_createWithCodableECG_, v17);

      MEMORY[0x24560A190]();
      if (*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_240BB6F60();
      }
      sub_240BB6F70();
      sub_240BB6F30();
    }
    swift_bridgeObjectRelease();
    unint64_t v36 = v41;
    goto LABEL_30;
  }
  __break(1u);
}

void sub_240B34D84(void *a1, uint64_t a2, void *a3, void **a4)
{
  id v65 = a3;
  uint64_t v6 = sub_240BB5990();
  uint64_t v66 = *(void *)(v6 - 8);
  uint64_t v67 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v64 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v64 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v64 - v17;
  MEMORY[0x270FA5388](v16);
  id v20 = (char *)&v64 - v19;
  sub_240A3466C(a1, a1[3]);
  unint64_t v21 = (void *)sub_240BB2FE0();
  sub_240BB34D0();
  unint64_t v30 = sub_240BB7410();
  uint64_t v64 = v15;

  if (!(v30 >> 62))
  {
    if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_8;
    }
LABEL_38:
    swift_bridgeObjectRelease();
    sub_240BB5950();
    os_log_type_t v22 = v65;
    uint64_t v23 = sub_240BB5970();
    os_log_type_t v24 = sub_240BB7190();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      unint64_t v26 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 138412290;
      id v68 = v22;
      uint64_t v27 = v22;
      sub_240BB75F0();
      *unint64_t v26 = v22;

      _os_log_impl(&dword_240A1B000, v23, v24, "Missing feed item when trying to decode Summaries data for %@", v25, 0xCu);
      sub_240AA63A0();
      swift_arrayDestroy();
      MEMORY[0x24560B930](v26, -1, -1);
      MEMORY[0x24560B930](v25, -1, -1);
    }
    else
    {

      uint64_t v23 = v22;
    }
    uint64_t v29 = v66;
    uint64_t v28 = v67;

    (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v28);
    return;
  }
  sub_240BB4850();
  uint64_t v63 = sub_240BB7900();
  swift_bridgeObjectRelease();
  if (!v63) {
    goto LABEL_38;
  }
LABEL_8:
  if ((v30 & 0xC000000000000001) != 0)
  {
    id v31 = (id)MEMORY[0x24560AAA0](0, v30);
  }
  else
  {
    if (!*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_41;
    }
    id v31 = *(id *)(v30 + 32);
  }
  id v32 = v31;
  swift_bridgeObjectRelease();
  id v33 = objc_msgSend(v32, sel_userData);
  if (v33)
  {
    uint64_t v34 = sub_240BB2B60();
    unint64_t v36 = v35;

    id v33 = (id)sub_240BB2B40();
    sub_240A4C4D8(v34, v36);
  }
  id v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46470]), sel_initWithData_, v33);

  if (!v37)
  {
    sub_240BB5950();
    uint64_t v50 = sub_240BB5970();
    os_log_type_t v51 = sub_240BB7190();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v52 = 0;
      _os_log_impl(&dword_240A1B000, v50, v51, "Unable to decode chart feed item data", v52, 2u);
      MEMORY[0x24560B930](v52, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v66 + 8))(v20, v67);
    return;
  }
  id v38 = objc_msgSend(v37, sel_chartModel);
  if (!v38)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  id v39 = v38;
  unsigned int v40 = objc_msgSend(v38, sel_hasSixMonthData);

  if (v40)
  {
    id v41 = objc_msgSend(v37, sel_chartModel);
    if (v41)
    {
      uint64_t v42 = v41;
      id v43 = objc_msgSend(v41, sel_sixMonthData);

      if (v43)
      {
        id v44 = objc_msgSend(v43, sel_queryDataObject);
        if (v44)
        {
          uint64_t v45 = sub_240BB2B60();
          unint64_t v47 = v46;

          id v44 = (id)sub_240BB2B40();
          sub_240A4C4D8(v45, v47);
        }
        id v48 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F464C0]), sel_initWithData_, v44);

        if (v48)
        {

          uint64_t v49 = *a4;
          *a4 = v48;
        }
        else
        {
          uint64_t v59 = v64;
          sub_240BB5950();
          uint64_t v60 = sub_240BB5970();
          uint64_t v61 = sub_240BB7190();
          if (os_log_type_enabled(v60, (os_log_type_t)v61))
          {
            uint64_t v62 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v62 = 0;
            _os_log_impl(&dword_240A1B000, v60, (os_log_type_t)v61, "Unable to decode query data from charting model", v62, 2u);
            MEMORY[0x24560B930](v62, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v66 + 8))(v59, v67);
        }
      }
      else
      {
        sub_240BB5950();
        int v56 = sub_240BB5970();
        os_log_type_t v57 = sub_240BB7190();
        if (os_log_type_enabled(v56, v57))
        {
          uint64_t v58 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v58 = 0;
          _os_log_impl(&dword_240A1B000, v56, v57, "Unable to decode sharable charting model", v58, 2u);
          MEMORY[0x24560B930](v58, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v66 + 8))(v18, v67);
      }
      return;
    }
LABEL_42:
    __break(1u);
    return;
  }
  sub_240BB5950();
  uint64_t v53 = sub_240BB5970();
  os_log_type_t v54 = sub_240BB7190();
  if (os_log_type_enabled(v53, v54))
  {
    int v55 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v55 = 0;
    _os_log_impl(&dword_240A1B000, v53, v54, "Missing data charting model", v55, 2u);
    MEMORY[0x24560B930](v55, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v66 + 8))(v12, v67);
}

uint64_t sub_240B354E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

id sub_240B3553C()
{
  return sub_240B35554(type metadata accessor for SummariesElectrocardiogramDataFetcher);
}

id sub_240B35554(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for SummariesElectrocardiogramDataFetcher()
{
  return self;
}

unint64_t sub_240B35620()
{
  unint64_t result = qword_268CA10C0;
  if (!qword_268CA10C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA10C0);
  }
  return result;
}

uint64_t sub_240B35674(uint64_t a1, void *a2)
{
  sub_240B35C20(0, &qword_268C9FBE0, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  unint64_t v5 = (char *)&aBlock[-2] - v4;
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9930);
  id v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_electrocardiogramType);
  sub_240BB34D0();
  sub_240B35C20(0, (unint64_t *)&qword_26AFD99A0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v7 = sub_240BB3050();
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = swift_allocObject();
  long long v27 = xmmword_240BB97E0;
  *(_OWORD *)(v10 + 16) = xmmword_240BB97E0;
  (*(void (**)(unint64_t, void, uint64_t))(v8 + 104))(v10 + v9, *MEMORY[0x263F45500], v7);
  sub_240A39C18(0, (unint64_t *)&qword_26AFD77C0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_240BBAD40;
  *(void *)(v11 + 32) = v6;
  aBlock[0] = v11;
  sub_240BB6F30();
  uint64_t v12 = aBlock[0];
  uint64_t v13 = sub_240BB27F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 1, 1, v13);
  sub_240A39C18(0, (unint64_t *)&qword_268CA06B8);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = v27;
  id v15 = v6;
  *(void *)(v14 + 32) = sub_240BB7100();
  uint64_t v16 = (void *)MEMORY[0x245606740](v10, v12, v5, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_240B35C84((uint64_t)v5);
  id v17 = v16;
  uint64_t v18 = (void *)sub_240BB34B0();

  uint64_t v30 = 0;
  sub_240A3466C(a2, a2[3]);
  uint64_t v19 = sub_240BB2FE0();
  sub_240A1E37C((uint64_t)a2, (uint64_t)v29);
  id v20 = (void *)swift_allocObject();
  sub_240A37388(v29, (uint64_t)(v20 + 2));
  v20[7] = v18;
  v20[8] = v15;
  v20[9] = &v30;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_240B35D58;
  *(void *)(v21 + 24) = v20;
  aBlock[4] = sub_240B321E0;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_240B354E4;
  aBlock[3] = &unk_26F5086E0;
  os_log_type_t v22 = _Block_copy(aBlock);
  id v23 = v15;
  id v24 = v18;
  swift_retain();
  swift_release();
  objc_msgSend((id)v19, sel_performBlockAndWait_, v22);

  _Block_release(v22);
  LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v19)
  {
    __break(1u);
  }
  else
  {
    uint64_t v26 = v30;
    swift_release();
    return v26;
  }
  return result;
}

id sub_240B35AFC(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v9 = (uint64_t *)&v4[OBJC_IVAR____TtC5Heart37SummariesElectrocardiogramDataFetcher_resultsHandler];
  *unint64_t v9 = 0;
  v9[1] = 0;
  *(void *)&v4[OBJC_IVAR____TtC5Heart37SummariesElectrocardiogramDataFetcher_healthStore] = a1;
  sub_240A1E37C((uint64_t)a2, (uint64_t)&v4[OBJC_IVAR____TtC5Heart37SummariesElectrocardiogramDataFetcher_healthExperienceStore]);
  uint64_t v10 = *v9;
  *unint64_t v9 = a3;
  v9[1] = a4;
  uint64_t v11 = v4;
  id v12 = a1;
  sub_240AECDA0(a3);
  sub_240A87A1C(v10);
  id v13 = (id)sub_240B35674((uint64_t)v12, a2);
  id v14 = v13;
  *(void *)&v11[OBJC_IVAR____TtC5Heart37SummariesElectrocardiogramDataFetcher_queryData] = v13;
  if (v13) {
    id v13 = objc_msgSend(v13, sel_activeAlgorithmVersionRawValue);
  }
  id v15 = &v11[OBJC_IVAR____TtC5Heart37SummariesElectrocardiogramDataFetcher_activeAlgorithmVersion];
  *(void *)id v15 = v13;
  v15[8] = v14 == 0;

  v18.receiver = v11;
  v18.super_class = (Class)type metadata accessor for SummariesElectrocardiogramDataFetcher();
  id v16 = objc_msgSendSuper2(&v18, sel_init);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a2);
  return v16;
}

void sub_240B35C20(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_240B35C84(uint64_t a1)
{
  sub_240B35C20(0, &qword_268C9FBE0, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240B35D10()
{
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 16);

  return MEMORY[0x270FA0238](v0, 80, 7);
}

void sub_240B35D58()
{
  sub_240B34D84((void *)(v0 + 16), *(void *)(v0 + 56), *(void **)(v0 + 64), *(void ***)(v0 + 72));
}

uint64_t sub_240B35D68()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B35D78()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 24, 7);
}

unsigned char *storeEnumTagSinglePayload for SummariesElectrocardiogramDataFetcher.FetchingError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240B35E7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SummariesElectrocardiogramDataFetcher.FetchingError()
{
  return &type metadata for SummariesElectrocardiogramDataFetcher.FetchingError;
}

unint64_t sub_240B35EB8()
{
  unint64_t result = qword_268CA10F8;
  if (!qword_268CA10F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA10F8);
  }
  return result;
}

ValueMetadata *_s37AFibBurdenLifeFactorsPlatterComponentVMa()
{
  return &_s37AFibBurdenLifeFactorsPlatterComponentVN;
}

uint64_t sub_240B35F20(uint64_t a1)
{
  uint64_t v2 = sub_240BB4C70();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v22[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB4C60();
  uint64_t v6 = sub_240BB4100();
  uint64_t v8 = v7;
  if (v6 == sub_240BB4100() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
LABEL_12:
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  char v10 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  if (v10) {
    goto LABEL_12;
  }
  sub_240BB4C60();
  uint64_t v11 = sub_240BB4100();
  uint64_t v13 = v12;
  if (v11 == sub_240BB4100() && v13 == v14)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_12;
  }
  char v16 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v16) {
    return 0;
  }
  id v17 = (void *)sub_240BB4C30();
  sub_240BB4C10();
  id v18 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenLifeFactorsPlatterDataSource());
  uint64_t v19 = sub_240B912C4(v17, v22);
  sub_240B3616C();
  return v19;
}

unint64_t sub_240B3616C()
{
  unint64_t result = qword_268CA1100;
  if (!qword_268CA1100)
  {
    type metadata accessor for AFibBurdenLifeFactorsPlatterDataSource();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1100);
  }
  return result;
}

void sub_240B361C4()
{
  qword_268CA2A80 = 0x4030000000000000;
}

void sub_240B361D4()
{
  qword_268CA2A88 = 0x4024000000000000;
}

uint64_t sub_240B361E4()
{
  uint64_t result = HKUIOnePixel();
  qword_268CA2A90 = v1;
  return result;
}

id sub_240B36204()
{
  id result = objc_msgSend(self, sel_separatorColor);
  qword_268CA2A98 = (uint64_t)result;
  return result;
}

id sub_240B36240()
{
  uint64_t v1 = OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView____lazy_storage___textLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView____lazy_storage___textLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView____lazy_storage___textLabel);
  }
  else
  {
    id v4 = sub_240B362A0();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_240B362A0()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  sub_240BB2980();
  uint64_t v1 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setText_, v1, 0xE000000000000000);

  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  id v2 = objc_msgSend(self, sel__preferredFontForTextStyle_weight_, *MEMORY[0x263F83570], *MEMORY[0x263F81840]);
  objc_msgSend(v0, sel_setFont_, v2);

  return v0;
}

id sub_240B36414()
{
  uint64_t v1 = OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView____lazy_storage___horizontalRule;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView____lazy_storage___horizontalRule);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView____lazy_storage___horizontalRule);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    if (qword_268C9E6F8 != -1) {
      swift_once();
    }
    objc_msgSend(v4, sel_setBackgroundColor_, qword_268CA2A98);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

char *sub_240B364E4()
{
  uint64_t v1 = OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView____lazy_storage___contentView;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView____lazy_storage___contentView);
  if (v2)
  {
    id v3 = *(char **)(v0 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView____lazy_storage___contentView);
  }
  else
  {
    id v4 = sub_240B36548(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

char *sub_240B36548(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView_cacheObject);
  id v3 = *(void **)(a1 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView_healthStore);
  id v4 = (objc_class *)type metadata accessor for AFibBurdenLifeFactorsView();
  uint64_t v5 = (char *)objc_allocWithZone(v4);
  *(void *)&v5[OBJC_IVAR____TtC5Heart25AFibBurdenLifeFactorsView____lazy_storage___lifeFactorsViews] = 0;
  *(void *)&v5[OBJC_IVAR____TtC5Heart25AFibBurdenLifeFactorsView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v5[OBJC_IVAR____TtC5Heart25AFibBurdenLifeFactorsView_cacheObject] = v2;
  *(void *)&v5[OBJC_IVAR____TtC5Heart25AFibBurdenLifeFactorsView_healthStore] = v3;
  v10.receiver = v5;
  v10.super_class = v4;
  id v6 = v3;
  sub_240BB4850();
  uint64_t v7 = (char *)objc_msgSendSuper2(&v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_240ACC4E8();

  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0, v10.receiver, v10.super_class);
  uint64_t v8 = a1 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView_contentViewDelegate;
  MEMORY[0x24560BA20](v8);
  *(void *)&v7[OBJC_IVAR____TtC5Heart25AFibBurdenLifeFactorsView_delegate + 8] = *(void *)(v8 + 8);
  swift_unknownObjectWeakAssign();
  sub_240BB50A0();
  return v7;
}

void sub_240B366AC()
{
  id v1 = sub_240B36240();
  LODWORD(v2) = 1148846080;
  objc_msgSend(v1, sel_setContentHuggingPriority_forAxis_, 1, v2);

  id v3 = sub_240B36240();
  LODWORD(v4) = 1148846080;
  objc_msgSend(v3, sel_setContentCompressionResistancePriority_forAxis_, 1, v4);

  uint64_t v53 = self;
  sub_240A34E00();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240BC2310;
  id v6 = sub_240B36240();
  id v7 = objc_msgSend(v6, sel_topAnchor);

  id v8 = objc_msgSend(v0, sel_topAnchor);
  id v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v8);

  *(void *)(v5 + 32) = v9;
  id v10 = sub_240B36240();
  id v11 = objc_msgSend(v10, sel_leadingAnchor);

  id v12 = objc_msgSend(v0, sel_leadingAnchor);
  if (qword_268C9E6E0 != -1) {
    swift_once();
  }
  id v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_constant_, v12, *(double *)&qword_268CA2A80);

  *(void *)(v5 + 40) = v13;
  id v14 = sub_240B36240();
  id v15 = objc_msgSend(v14, sel_trailingAnchor);

  id v16 = objc_msgSend(v0, sel_trailingAnchor);
  id v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_constant_, v16, -*(double *)&qword_268CA2A80);

  *(void *)(v5 + 48) = v17;
  id v18 = sub_240B36414();
  id v19 = objc_msgSend(v18, sel_topAnchor);

  id v20 = sub_240B36240();
  id v21 = objc_msgSend(v20, sel_bottomAnchor);

  if (qword_268C9E6E8 != -1) {
    swift_once();
  }
  id v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v21, *(double *)&qword_268CA2A88);

  *(void *)(v5 + 56) = v22;
  id v23 = sub_240B36414();
  id v24 = objc_msgSend(v23, sel_heightAnchor);

  if (qword_268C9E6F0 != -1) {
    swift_once();
  }
  id v25 = objc_msgSend(v24, sel_constraintEqualToConstant_, *(double *)&qword_268CA2A90);

  *(void *)(v5 + 64) = v25;
  id v26 = sub_240B36414();
  id v27 = objc_msgSend(v26, sel_leadingAnchor);

  id v28 = sub_240B36240();
  id v29 = objc_msgSend(v28, sel_leadingAnchor);

  id v30 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v29);
  *(void *)(v5 + 72) = v30;
  id v31 = sub_240B36414();
  id v32 = objc_msgSend(v31, sel_trailingAnchor);

  id v33 = sub_240B36240();
  id v34 = objc_msgSend(v33, sel_trailingAnchor);

  id v35 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v34);
  *(void *)(v5 + 80) = v35;
  unint64_t v36 = sub_240B364E4();
  id v37 = objc_msgSend(v36, sel_topAnchor);

  id v38 = sub_240B36414();
  id v39 = objc_msgSend(v38, sel_bottomAnchor);

  id v40 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v39);
  *(void *)(v5 + 88) = v40;
  id v41 = sub_240B364E4();
  id v42 = objc_msgSend(v41, sel_bottomAnchor);

  id v43 = objc_msgSend(v0, sel_bottomAnchor);
  id v44 = objc_msgSend(v42, sel_constraintEqualToAnchor_, v43);

  *(void *)(v5 + 96) = v44;
  uint64_t v45 = sub_240B364E4();
  id v46 = objc_msgSend(v45, sel_leadingAnchor);

  id v47 = objc_msgSend(v0, sel_leadingAnchor);
  id v48 = objc_msgSend(v46, sel_constraintEqualToAnchor_, v47);

  *(void *)(v5 + 104) = v48;
  uint64_t v49 = sub_240B364E4();
  id v50 = objc_msgSend(v49, sel_trailingAnchor);

  id v51 = objc_msgSend(v0, sel_trailingAnchor);
  id v52 = objc_msgSend(v50, sel_constraintEqualToAnchor_, v51);

  *(void *)(v5 + 112) = v52;
  sub_240BB6F30();
  sub_240A5D484();
  id v54 = (id)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v53, sel_activateConstraints_, v54);
}

void sub_240B36CC0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v3 = (void *)sub_240BB6DA0();
    objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3);

    id v4 = sub_240B36240();
    sub_240BB4850();
    sub_240BB6E70();
    id v5 = (id)sub_240BB6DA0();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5);
  }
}

id sub_240B36DE0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenLifeFactorsTileView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AFibBurdenLifeFactorsTileView()
{
  return self;
}

void sub_240B36ED8(uint64_t a1, uint64_t a2)
{
}

void sub_240B36EFC()
{
  *(void *)&v0[OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView____lazy_storage___textLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView____lazy_storage___horizontalRule] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView____lazy_storage___contentView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView_contentViewDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  id v1 = (uint64_t *)&v0[OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView_baseIdentifier];
  uint64_t v3 = sub_240A55368(261);
  uint64_t v4 = v2;
  sub_240BB6E70();
  *id v1 = v3;
  v1[1] = v4;

  sub_240BB78D0();
  __break(1u);
}

uint64_t type metadata accessor for AFibBurdenOnboardingStartViewController()
{
  uint64_t result = qword_268CA1150;
  if (!qword_268CA1150) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240B37028()
{
  return swift_initClassMetadata2();
}

void sub_240B3707C()
{
  id v1 = v0;
  v14.receiver = v0;
  v14.super_class = (Class)type metadata accessor for AFibBurdenOnboardingStartViewController();
  objc_msgSendSuper2(&v14, sel_viewDidLoad);
  int v2 = v0[qword_268CA1148];
  if (v2 == 1) {
    objc_msgSend(v0, sel_hxui_addCancelButton);
  }
  id v3 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v3, sel_setBackButtonDisplayMode_, 1);

  id v4 = objc_msgSend(v1, sel_headerView);
  if (qword_268C9E660 != -1) {
    swift_once();
  }
  sub_240BB4850();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  id v5 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5);

  if (v2)
  {
    if (qword_268C9E7A8 != -1) {
      swift_once();
    }
    sub_240BB2980();
    id v6 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
    sub_240A57608();
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_240BBAE40;
    *(void *)(v7 + 32) = 0xD000000000000014;
    *(void *)(v7 + 40) = 0x8000000240BCA120;
    *(void *)(v7 + 48) = 0x7472617453;
    *(void *)(v7 + 56) = 0xE500000000000000;
    id v8 = (char *)sub_240A42A0C((void *)1, 3, 1, (void *)v7);
    *((void *)v8 + 2) = 3;
    strcpy(v8 + 64, "ContinueButton");
    v8[79] = -18;
    id v9 = (void *)sub_240BB6EF0();
    swift_bridgeObjectRelease();
    id v10 = (id)HKUIJoinStringsForAutomationIdentifier();

    if (v10)
    {
      sub_240BB6DE0();

      swift_arrayDestroy();
      id v11 = (void *)sub_240BB6DA0();
      swift_bridgeObjectRelease();

      id v12 = objc_msgSend(v1, sel_buttonTray);
      sub_240BB2980();
      id v13 = (void *)sub_240BB6DA0();
      swift_bridgeObjectRelease();
      objc_msgSend(v12, sel_setCaptionText_, v13, 0xE000000000000000);
    }
    else
    {
      swift_arrayDestroy();
      __break(1u);
    }
  }
}

void sub_240B374A0(void *a1)
{
  id v1 = a1;
  sub_240B3707C();
}

uint64_t sub_240B374E8(char *a1)
{
  int v2 = &a1[qword_268CA1140];
  uint64_t result = MEMORY[0x24560BA20](&a1[qword_268CA1140]);
  if (result)
  {
    uint64_t v4 = *((void *)v2 + 1);
    swift_getObjectType();
    id v5 = *(void (**)(void))(v4 + 8);
    id v6 = a1;
    v5();

    return sub_240BB50A0();
  }
  return result;
}

uint64_t sub_240B37598(char *a1)
{
  int v2 = &a1[qword_268CA1140];
  uint64_t result = MEMORY[0x24560BA20](&a1[qword_268CA1140]);
  if (result)
  {
    uint64_t v4 = *((void *)v2 + 1);
    swift_getObjectType();
    id v5 = *(void (**)(void))(v4 + 16);
    id v6 = a1;
    v5();

    return sub_240BB50A0();
  }
  return result;
}

uint64_t sub_240B37648()
{
  uint64_t v1 = v0 + qword_268CA1140;
  uint64_t result = MEMORY[0x24560BA20](v0 + qword_268CA1140);
  if (result)
  {
    uint64_t v3 = *(void *)(v1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v3 + 24))(v0, &off_26F508840, ObjectType, v3);
    return sub_240BB50A0();
  }
  return result;
}

void sub_240B376E0()
{
}

void sub_240B37710()
{
}

uint64_t sub_240B37740()
{
  return sub_240A484BC(v0 + qword_268CA1140);
}

id sub_240B37750()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenOnboardingStartViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240B37788(uint64_t a1)
{
  return sub_240A484BC(a1 + qword_268CA1140);
}

uint64_t sub_240B37798()
{
  return type metadata accessor for AFibBurdenOnboardingStartViewController();
}

uint64_t sub_240B377A0()
{
  return MEMORY[0x24560BA20](v0 + qword_268CA1140);
}

uint64_t sub_240B377D4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + qword_268CA1140 + 8) = a2;
  swift_unknownObjectWeakAssign();

  return sub_240BB50A0();
}

void sub_240B37820()
{
  id v1 = objc_msgSend(v0, sel_navigationItem);
  sub_240A34DC4(0, (unint64_t *)&qword_268C9F670);
  sub_240A34DC4(0, &qword_268C9F9B0);
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_240BB7520();
  id v3 = (id)sub_240BB71E0();
  objc_msgSend(v1, sel_setRightBarButtonItem_, v3, 0, 0, 0, sub_240A9A5C4, v2);
}

void sub_240B37954(void *a1)
{
  id v1 = a1;
  sub_240B37820();
}

void sub_240B3799C(void *a1)
{
  id v1 = a1;
  id v2 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v2, sel_setRightBarButtonItem_, 0);
}

uint64_t sub_240B37A08(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + qword_268CA1140 + 8) = 0;
  uint64_t v6 = swift_unknownObjectWeakInit();
  *(unsigned char *)(v3 + qword_268CA1148) = a1;
  *(void *)(v6 + 8) = a3;
  swift_unknownObjectWeakAssign();
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  sub_240BB2980();
  sub_240BB2980();
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v7 = (id)qword_26AFDECD8;
  id v8 = (void *)sub_240BB6DA0();
  id v9 = objc_msgSend(self, sel_imageNamed_inBundle_, v8, v7, 0xE000000000000000);

  if (!v9) {
    objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init);
  }
  sub_240BB2980();
  sub_240A57608();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_240BBAE40;
  *(void *)(v10 + 32) = 0xD000000000000014;
  *(void *)(v10 + 40) = 0x8000000240BCA120;
  *(void *)(v10 + 48) = 0x7472617453;
  *(void *)(v10 + 56) = 0xE500000000000000;
  id v11 = sub_240A42A0C((void *)1, 3, 1, (void *)v10);
  v11[2] = 3;
  v11[8] = 0x726F4D6E7261654CLL;
  v11[9] = 0xEF6E6F7474754265;
  id v12 = (void *)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  id v13 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v13)
  {
    sub_240BB6DE0();

    swift_arrayDestroy();
    return sub_240BB52B0();
  }
  else
  {
    uint64_t result = swift_arrayDestroy();
    __break(1u);
  }
  return result;
}

uint64_t sub_240B37D70()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_240B37DA8()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5HeartP33_1983BB941A89CE37AE5E37B88EF7D39A34CMVO2MaxRetrocomputeStatePublisher_manager], sel_stopRetrocomputeStatusUpdates);
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_240B37F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t type metadata accessor for SendableCurrentValueSubject()
{
  return sub_240B38360();
}

void sub_240B37F80()
{
  if (!qword_26AFD8BB8)
  {
    sub_240A3A180(255, (unint64_t *)&unk_26AFD8B80, &qword_26AFD75E0);
    sub_240A49AC0();
    unint64_t v0 = sub_240BB7C20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD8BB8);
    }
  }
}

uint64_t sub_240B38008()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B38040()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B38078()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_240B380B0(void *a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_240BB5990();
  sub_240A395FC(v4, (uint64_t)qword_26AFDEC70);
  id v5 = a1;
  id v6 = a1;
  id v7 = sub_240BB5970();
  os_log_type_t v8 = sub_240BB7180();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v18 = v11;
    *(_DWORD *)uint64_t v9 = 136446466;
    uint64_t v12 = sub_240BB7C80();
    sub_240A38940(v12, v13, &v18);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2112;
    id v14 = a1;
    uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
    sub_240BB75F0();
    void *v10 = v17;

    _os_log_impl(&dword_240A1B000, v7, v8, "[%{public}s] Failed to get retrocompute state: %@", (uint8_t *)v9, 0x16u);
    sub_240A3A180(0, (unint64_t *)&qword_26AFD77A0, (unint64_t *)&qword_26AFD77B0);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v11, -1, -1);
    MEMORY[0x24560B930](v9, -1, -1);
  }
  else
  {
  }
  id v15 = (os_unfair_lock_s *)(*(void *)(v2
                                       + OBJC_IVAR____TtC5HeartP33_1983BB941A89CE37AE5E37B88EF7D39A34CMVO2MaxRetrocomputeStatePublisher_subject)
                           + 24);
  os_unfair_lock_lock(v15);
  swift_retain();
  os_unfair_lock_unlock(v15);
  uint64_t v18 = (uint64_t)a1;
  char v19 = 1;
  id v16 = a1;
  sub_240BB6180();
  swift_release();
}

uint64_t sub_240B38360()
{
  return swift_getGenericMetadata();
}

uint64_t _s14descr26F502CE9O13ActionHandlerCMa(uint64_t a1)
{
  return sub_240A3E6AC(a1, (uint64_t *)&unk_268CA1270);
}

void sub_240B383B0()
{
  sub_240B3CC60(319, (unint64_t *)&qword_268C9F218, MEMORY[0x263F43A90]);
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

unint64_t sub_240B38478(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000016;
      break;
    case 2:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 4:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 5:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000022;
      break;
    case 7:
      unint64_t result = 0xD000000000000023;
      break;
    case 8:
      unint64_t result = 0x6E6F697463416F6ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_240B3856C(void *a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F8E0C0];
  sub_240B3F65C(0, &qword_268CA1370, (uint64_t (*)(void))sub_240B3F314, (uint64_t)&_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO18NoActionCodingKeysON, MEMORY[0x263F8E0C0]);
  uint64_t v68 = *(void *)(v3 - 8);
  uint64_t v69 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v67 = (char *)&v43 - v4;
  sub_240B3F65C(0, &qword_268CA1378, (uint64_t (*)(void))sub_240B3F368, (uint64_t)&_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO45OpenSeedExpiredKnowledgeBaseArticleCodingKeysON, v2);
  uint64_t v65 = *(void *)(v5 - 8);
  uint64_t v66 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v64 = (char *)&v43 - v6;
  sub_240B3F65C(0, &qword_268CA1380, (uint64_t (*)(void))sub_240B3F3BC, (uint64_t)&_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO44OpenRegionGateKnowledgeBaseArticleCodingKeysON, v2);
  uint64_t v62 = *(void *)(v7 - 8);
  uint64_t v63 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v61 = (char *)&v43 - v8;
  sub_240B3F65C(0, &qword_268CA1388, (uint64_t (*)(void))sub_240B3F410, (uint64_t)&_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO41OpenGeneralKnowledgeBaseArticleCodingKeysON, v2);
  uint64_t v59 = *(void *)(v9 - 8);
  uint64_t v60 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v58 = (char *)&v43 - v10;
  sub_240B3F65C(0, &qword_268CA1390, (uint64_t (*)(void))sub_240B3F464, (uint64_t)&_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO39DeepLinkToWristDetectSettingsCodingKeysON, v2);
  uint64_t v56 = *(void *)(v11 - 8);
  uint64_t v57 = v11;
  MEMORY[0x270FA5388](v11);
  int v55 = (char *)&v43 - v12;
  sub_240B3F65C(0, &qword_268CA1398, (uint64_t (*)(void))sub_240B3F4B8, (uint64_t)&_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO37DeepLinkToHeartRateSettingsCodingKeysON, v2);
  uint64_t v52 = v13;
  uint64_t v51 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v49 = (char *)&v43 - v14;
  sub_240B3F65C(0, &qword_268CA13A0, (uint64_t (*)(void))sub_240B3F50C, (uint64_t)&_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO36PushEnabledFeatureSettingsCodingKeysON, v2);
  uint64_t v54 = v15;
  uint64_t v53 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  id v50 = (char *)&v43 - v16;
  sub_240B3F65C(0, &qword_268CA13A8, (uint64_t (*)(void))sub_240B3F560, (uint64_t)&_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO32PresentFeatureSettingsCodingKeysON, v2);
  uint64_t v48 = v17;
  uint64_t v47 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  id v46 = (char *)&v43 - v18;
  uint64_t v70 = _s14descr26F502E21O15SettingsContentVMa();
  uint64_t v19 = MEMORY[0x270FA5388](v70);
  uint64_t v44 = (uint64_t)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v45 = (uint64_t)&v43 - v21;
  sub_240B3F65C(0, &qword_268CA13B0, (uint64_t (*)(void))sub_240B3F5B4, (uint64_t)&_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO27PresentOnboardingCodingKeysON, v2);
  uint64_t v23 = v22;
  uint64_t v43 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  id v25 = (char *)&v43 - v24;
  uint64_t v26 = _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa(0);
  MEMORY[0x270FA5388](v26);
  id v28 = (char *)&v43 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B3F65C(0, &qword_268CA13B8, (uint64_t (*)(void))sub_240B3F608, (uint64_t)&_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO10CodingKeysON, v2);
  uint64_t v71 = *(void *)(v29 - 8);
  uint64_t v72 = v29;
  MEMORY[0x270FA5388](v29);
  id v31 = (char *)&v43 - v30;
  sub_240A3466C(a1, a1[3]);
  sub_240B3F608();
  sub_240BB7C40();
  sub_240B3CF80(v73, (uint64_t)v28, _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v32 = v44;
      sub_240B3CF18((uint64_t)v28, v44, (uint64_t (*)(void))_s14descr26F502E21O15SettingsContentVMa);
      char v76 = 2;
      sub_240B3F50C();
      id v33 = v50;
      uint64_t v34 = v72;
      sub_240BB7A30();
      sub_240B3CC18(&qword_268CA13C0, (void (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa);
      uint64_t v35 = v54;
      sub_240BB7A90();
      unint64_t v36 = &v84;
      goto LABEL_4;
    case 2u:
      char v74 = 0;
      sub_240B3F5B4();
      uint64_t v38 = v72;
      sub_240BB7A30();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v25, v23);
      goto LABEL_13;
    case 3u:
      char v77 = 3;
      sub_240B3F4B8();
      id v39 = v49;
      uint64_t v38 = v72;
      sub_240BB7A30();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v39, v52);
      goto LABEL_13;
    case 4u:
      char v78 = 4;
      sub_240B3F464();
      id v40 = v55;
      uint64_t v38 = v72;
      sub_240BB7A30();
      uint64_t v42 = v56;
      uint64_t v41 = v57;
      goto LABEL_12;
    case 5u:
      char v79 = 5;
      sub_240B3F410();
      id v40 = v58;
      uint64_t v38 = v72;
      sub_240BB7A30();
      uint64_t v42 = v59;
      uint64_t v41 = v60;
      goto LABEL_12;
    case 6u:
      char v80 = 6;
      sub_240B3F3BC();
      id v40 = v61;
      uint64_t v38 = v72;
      sub_240BB7A30();
      uint64_t v42 = v62;
      uint64_t v41 = v63;
      goto LABEL_12;
    case 7u:
      char v81 = 7;
      sub_240B3F368();
      id v40 = v64;
      uint64_t v38 = v72;
      sub_240BB7A30();
      uint64_t v42 = v65;
      uint64_t v41 = v66;
      goto LABEL_12;
    case 8u:
      char v82 = 8;
      sub_240B3F314();
      id v40 = v67;
      uint64_t v38 = v72;
      sub_240BB7A30();
      uint64_t v42 = v68;
      uint64_t v41 = v69;
LABEL_12:
      (*(void (**)(char *, uint64_t))(v42 + 8))(v40, v41);
LABEL_13:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v31, v38);
      break;
    default:
      uint64_t v32 = v45;
      sub_240B3CF18((uint64_t)v28, v45, (uint64_t (*)(void))_s14descr26F502E21O15SettingsContentVMa);
      char v75 = 1;
      sub_240B3F560();
      id v33 = v46;
      uint64_t v34 = v72;
      sub_240BB7A30();
      sub_240B3CC18(&qword_268CA13C0, (void (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa);
      uint64_t v35 = v48;
      sub_240BB7A90();
      unint64_t v36 = &v83;
LABEL_4:
      (*(void (**)(char *, uint64_t))(*(v36 - 32) + 8))(v33, v35);
      sub_240B3F728(v32, (uint64_t (*)(void))_s14descr26F502E21O15SettingsContentVMa);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v31, v34);
      break;
  }
  return result;
}

uint64_t sub_240B39180@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v101 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F8E040];
  sub_240B3F65C(0, &qword_268CA12C8, (uint64_t (*)(void))sub_240B3F314, (uint64_t)&_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO18NoActionCodingKeysON, MEMORY[0x263F8E040]);
  uint64_t v106 = v4;
  uint64_t v94 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v105 = (char *)&v74 - v5;
  sub_240B3F65C(0, &qword_268CA12D8, (uint64_t (*)(void))sub_240B3F368, (uint64_t)&_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO45OpenSeedExpiredKnowledgeBaseArticleCodingKeysON, v3);
  uint64_t v92 = *(void *)(v6 - 8);
  uint64_t v93 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v100 = (char *)&v74 - v7;
  sub_240B3F65C(0, &qword_268CA12E8, (uint64_t (*)(void))sub_240B3F3BC, (uint64_t)&_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO44OpenRegionGateKnowledgeBaseArticleCodingKeysON, v3);
  uint64_t v90 = *(void *)(v8 - 8);
  uint64_t v91 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v104 = (char *)&v74 - v9;
  sub_240B3F65C(0, &qword_268CA12F8, (uint64_t (*)(void))sub_240B3F410, (uint64_t)&_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO41OpenGeneralKnowledgeBaseArticleCodingKeysON, v3);
  uint64_t v89 = v10;
  uint64_t v88 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v99 = (char *)&v74 - v11;
  sub_240B3F65C(0, &qword_268CA1308, (uint64_t (*)(void))sub_240B3F464, (uint64_t)&_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO39DeepLinkToWristDetectSettingsCodingKeysON, v3);
  uint64_t v87 = v12;
  uint64_t v86 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v98 = (char *)&v74 - v13;
  sub_240B3F65C(0, &qword_268CA1318, (uint64_t (*)(void))sub_240B3F4B8, (uint64_t)&_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO37DeepLinkToHeartRateSettingsCodingKeysON, v3);
  uint64_t v83 = v14;
  uint64_t v82 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v96 = (char *)&v74 - v15;
  sub_240B3F65C(0, &qword_268CA1328, (uint64_t (*)(void))sub_240B3F50C, (uint64_t)&_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO36PushEnabledFeatureSettingsCodingKeysON, v3);
  uint64_t v85 = v16;
  uint64_t v84 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v97 = (char *)&v74 - v17;
  sub_240B3F65C(0, &qword_268CA1338, (uint64_t (*)(void))sub_240B3F560, (uint64_t)&_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO32PresentFeatureSettingsCodingKeysON, v3);
  uint64_t v80 = v18;
  uint64_t v81 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v103 = (char *)&v74 - v19;
  sub_240B3F65C(0, &qword_268CA1348, (uint64_t (*)(void))sub_240B3F5B4, (uint64_t)&_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO27PresentOnboardingCodingKeysON, v3);
  uint64_t v79 = v20;
  uint64_t v78 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v95 = (char *)&v74 - v21;
  sub_240B3F65C(0, &qword_268CA1358, (uint64_t (*)(void))sub_240B3F608, (uint64_t)&_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO10CodingKeysON, v3);
  uint64_t v23 = v22;
  uint64_t v102 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  id v25 = (char *)&v74 - v24;
  uint64_t v26 = _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa(0);
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v74 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  uint64_t v32 = (char *)&v74 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v34 = (char *)&v74 - v33;
  uint64_t v35 = a1[3];
  id v108 = a1;
  sub_240A3466C(a1, v35);
  sub_240B3F608();
  uint64_t v107 = v25;
  uint64_t v36 = v109;
  sub_240BB7C30();
  if (v36) {
    goto LABEL_23;
  }
  uint64_t v77 = 0;
  char v75 = v32;
  char v76 = v29;
  id v37 = v103;
  uint64_t v38 = v104;
  id v40 = v105;
  uint64_t v39 = v106;
  uint64_t v109 = v26;
  uint64_t v41 = sub_240BB7A20();
  if (*(void *)(v41 + 16) != 1)
  {
    uint64_t v46 = sub_240BB7830();
    swift_allocError();
    uint64_t v48 = v47;
    sub_240A7CBF0();
    *uint64_t v48 = v109;
    uint64_t v49 = v107;
    sub_240BB79B0();
    sub_240BB7810();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v46 - 8) + 104))(v48, *MEMORY[0x263F8DCB0], v46);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v102 + 8))(v49, v23);
LABEL_23:
    uint64_t v68 = (uint64_t)v108;
    return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v68);
  }
  uint64_t v42 = v23;
  switch(*(unsigned char *)(v41 + 32))
  {
    case 1:
      uint64_t v106 = v41;
      char v111 = 1;
      sub_240B3F560();
      uint64_t v50 = v23;
      uint64_t v51 = v77;
      sub_240BB79A0();
      if (!v51)
      {
        _s14descr26F502E21O15SettingsContentVMa();
        sub_240B3CC18(&qword_268CA1368, (void (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa);
        uint64_t v65 = (uint64_t)v75;
        uint64_t v66 = v80;
        sub_240BB7A10();
        uint64_t v67 = v102;
        (*(void (**)(char *, uint64_t))(v81 + 8))(v37, v66);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v67 + 8))(v107, v50);
        swift_storeEnumTagMultiPayload();
        uint64_t v45 = (uint64_t)v34;
        sub_240B3CF18(v65, (uint64_t)v34, _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa);
        uint64_t v72 = (uint64_t)v108;
        uint64_t v73 = v101;
        goto LABEL_30;
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v102 + 8))(v107, v23);
      uint64_t v68 = (uint64_t)v108;
      return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v68);
    case 2:
      uint64_t v106 = v41;
      char v112 = 2;
      sub_240B3F50C();
      uint64_t v52 = v97;
      uint64_t v53 = v77;
      sub_240BB79A0();
      if (v53)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v102 + 8))(v107, v23);
        goto LABEL_23;
      }
      _s14descr26F502E21O15SettingsContentVMa();
      sub_240B3CC18(&qword_268CA1368, (void (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa);
      uint64_t v69 = (uint64_t)v76;
      uint64_t v70 = v85;
      sub_240BB7A10();
      uint64_t v71 = v102;
      (*(void (**)(char *, uint64_t))(v84 + 8))(v52, v70);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v107, v23);
      swift_storeEnumTagMultiPayload();
      uint64_t v45 = (uint64_t)v34;
      sub_240B3CF18(v69, (uint64_t)v34, _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa);
      goto LABEL_29;
    case 3:
      char v113 = 3;
      sub_240B3F4B8();
      uint64_t v54 = v96;
      uint64_t v55 = v77;
      sub_240BB79A0();
      if (v55) {
        goto LABEL_22;
      }
      (*(void (**)(char *, uint64_t))(v82 + 8))(v54, v83);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v102 + 8))(v107, v42);
      uint64_t v45 = (uint64_t)v34;
      goto LABEL_28;
    case 4:
      char v114 = 4;
      sub_240B3F464();
      uint64_t v56 = v98;
      uint64_t v57 = v77;
      sub_240BB79A0();
      if (v57) {
        goto LABEL_22;
      }
      (*(void (**)(char *, uint64_t))(v86 + 8))(v56, v87);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v102 + 8))(v107, v42);
      uint64_t v45 = (uint64_t)v34;
      goto LABEL_28;
    case 5:
      char v115 = 5;
      sub_240B3F410();
      uint64_t v58 = v99;
      uint64_t v59 = v77;
      sub_240BB79A0();
      if (v59) {
        goto LABEL_22;
      }
      (*(void (**)(char *, uint64_t))(v88 + 8))(v58, v89);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v102 + 8))(v107, v42);
      uint64_t v45 = (uint64_t)v34;
      goto LABEL_28;
    case 6:
      char v116 = 6;
      sub_240B3F3BC();
      uint64_t v60 = v77;
      sub_240BB79A0();
      if (v60) {
        goto LABEL_22;
      }
      (*(void (**)(char *, uint64_t))(v90 + 8))(v38, v91);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v102 + 8))(v107, v23);
      uint64_t v45 = (uint64_t)v34;
      goto LABEL_28;
    case 7:
      char v117 = 7;
      sub_240B3F368();
      uint64_t v61 = v100;
      uint64_t v62 = v77;
      sub_240BB79A0();
      if (v62) {
        goto LABEL_22;
      }
      (*(void (**)(char *, uint64_t))(v92 + 8))(v61, v93);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v102 + 8))(v107, v42);
      uint64_t v45 = (uint64_t)v34;
      goto LABEL_28;
    case 8:
      char v118 = 8;
      sub_240B3F314();
      uint64_t v63 = v77;
      sub_240BB79A0();
      if (v63) {
        goto LABEL_22;
      }
      (*(void (**)(char *, uint64_t))(v94 + 8))(v40, v39);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v102 + 8))(v107, v23);
      uint64_t v45 = (uint64_t)v34;
      goto LABEL_28;
    default:
      char v110 = 0;
      sub_240B3F5B4();
      uint64_t v43 = v95;
      uint64_t v44 = v77;
      sub_240BB79A0();
      if (v44)
      {
LABEL_22:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v102 + 8))(v107, v42);
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v78 + 8))(v43, v79);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v102 + 8))(v107, v23);
      uint64_t v45 = (uint64_t)v34;
LABEL_28:
      swift_storeEnumTagMultiPayload();
LABEL_29:
      uint64_t v72 = (uint64_t)v108;
      uint64_t v73 = v101;
LABEL_30:
      sub_240B3CF18(v45, v73, _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa);
      uint64_t v68 = v72;
      break;
  }
  return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v68);
}

uint64_t sub_240B3A294@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v3 = _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa(0);
  MEMORY[0x270FA5388](v3);
  uint64_t v19 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B3F65C(0, &qword_268CA12B8, (uint64_t (*)(void))sub_240B3F2C0, (uint64_t)&_s14descr26F502CE9O13ActionHandlerC8UserDataV10CodingKeysON, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v18 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = _s14descr26F502CE9O13ActionHandlerC8UserDataVMa(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3466C(a1, a1[3]);
  sub_240B3F2C0();
  uint64_t v12 = v20;
  sub_240BB7C30();
  if (!v12)
  {
    uint64_t v13 = v18;
    sub_240B3CC18(&qword_268CA12C0, (void (*)(uint64_t))_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa);
    uint64_t v14 = (uint64_t)v19;
    sub_240BB7A10();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v6);
    sub_240B3CF18(v14, (uint64_t)v11, _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa);
    sub_240B3CF18((uint64_t)v11, v17, _s14descr26F502CE9O13ActionHandlerC8UserDataVMa);
  }
  return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
}

unint64_t sub_240B3A54C()
{
  return sub_240B38478(*v0);
}

uint64_t sub_240B3A554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_240B3D468(a1, a2);
  *a3 = result;
  return result;
}

void sub_240B3A57C(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_240B3A588(uint64_t a1)
{
  unint64_t v2 = sub_240B3F608();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240B3A5C4(uint64_t a1)
{
  unint64_t v2 = sub_240B3F608();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240B3A600(uint64_t a1)
{
  unint64_t v2 = sub_240B3F4B8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240B3A63C(uint64_t a1)
{
  unint64_t v2 = sub_240B3F4B8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240B3A678(uint64_t a1)
{
  unint64_t v2 = sub_240B3F464();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240B3A6B4(uint64_t a1)
{
  unint64_t v2 = sub_240B3F464();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240B3A6F0(uint64_t a1)
{
  unint64_t v2 = sub_240B3F314();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240B3A72C(uint64_t a1)
{
  unint64_t v2 = sub_240B3F314();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240B3A768(uint64_t a1)
{
  unint64_t v2 = sub_240B3F410();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240B3A7A4(uint64_t a1)
{
  unint64_t v2 = sub_240B3F410();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240B3A7E0(uint64_t a1)
{
  unint64_t v2 = sub_240B3F3BC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240B3A81C(uint64_t a1)
{
  unint64_t v2 = sub_240B3F3BC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240B3A858(uint64_t a1)
{
  unint64_t v2 = sub_240B3F368();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240B3A894(uint64_t a1)
{
  unint64_t v2 = sub_240B3F368();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_240B3A8D0()
{
  return 0xD000000000000016;
}

uint64_t sub_240B3A8EC(uint64_t a1)
{
  unint64_t v2 = sub_240B3F560();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240B3A928(uint64_t a1)
{
  unint64_t v2 = sub_240B3F560();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240B3A964(uint64_t a1)
{
  unint64_t v2 = sub_240B3F5B4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240B3A9A0(uint64_t a1)
{
  unint64_t v2 = sub_240B3F5B4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240B3A9DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_240B3D7C8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_240B3AA08(uint64_t a1)
{
  unint64_t v2 = sub_240B3F50C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240B3AA44(uint64_t a1)
{
  unint64_t v2 = sub_240B3F50C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240B3AA80@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240B39180(a1, a2);
}

uint64_t sub_240B3AA98(void *a1)
{
  return sub_240B3856C(a1);
}

uint64_t sub_240B3AAB4(uint64_t a1)
{
  unint64_t v2 = sub_240B3F2C0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240B3AAF0(uint64_t a1)
{
  unint64_t v2 = sub_240B3F2C0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240B3AB2C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240B3A294(a1, a2);
}

uint64_t sub_240B3AB44(void *a1)
{
  sub_240B3F65C(0, &qword_268CA12A0, (uint64_t (*)(void))sub_240B3F2C0, (uint64_t)&_s14descr26F502CE9O13ActionHandlerC8UserDataV10CodingKeysON, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - v5;
  sub_240A3466C(a1, a1[3]);
  sub_240B3F2C0();
  sub_240BB7C40();
  _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa(0);
  sub_240B3CC18(&qword_268CA12B0, (void (*)(uint64_t))_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa);
  sub_240BB7A90();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

id sub_240B3ACF0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_240BB4EC0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v13[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = qword_268CA1258;
  if (*(void *)(v0 + qword_268CA1258))
  {
    id v7 = *(id *)(v0 + qword_268CA1258);
  }
  else
  {
    id v8 = (id)*MEMORY[0x263F09728];
    sub_240BB5250();
    sub_240BB4E90();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_240A3466C(v13, v13[3]);
    uint64_t v9 = (void *)sub_240BB4E10();
    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3B8]), sel_initWithFeatureIdentifier_healthStore_, v8, v9);

    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v13);
    *(void *)(v1 + v6) = v10;
    id v7 = v10;
    sub_240BB50A0();
  }
  swift_unknownObjectRetain();
  return v7;
}

uint64_t sub_240B3AE80@<X0>(void *a1@<X8>)
{
  uint64_t v3 = v1 + qword_268CA1260;
  swift_beginAccess();
  sub_240AE8A24(v3, (uint64_t)&v5);
  if (v6) {
    return sub_240A37388(&v5, (uint64_t)a1);
  }
  sub_240AE8B1C((uint64_t)&v5);
  sub_240B3AF3C(a1);
  sub_240A1E37C((uint64_t)a1, (uint64_t)&v5);
  swift_beginAccess();
  sub_240ABCE24((uint64_t)&v5, v3);
  return swift_endAccess();
}

unint64_t sub_240B3AF3C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_240BB4EC0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  long long v5 = (char *)&v13[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB5250();
  sub_240BB4E90();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_240A3466C(v13, v13[3]);
  uint64_t v6 = (void *)sub_240BB4E10();
  id v7 = objc_msgSend(v6, sel_profileIdentifier);
  id v8 = objc_msgSend(v7, sel_type);

  if (v8 == (id)1)
  {
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3D0]), sel_initWithFeatureIdentifier_healthStore_, *MEMORY[0x263F09728], v6);

    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v13);
    if (v9)
    {
      unint64_t result = sub_240A35CF0();
      uint64_t v11 = MEMORY[0x263F44B48];
      a1[3] = result;
      a1[4] = v11;
      *a1 = v9;
      return result;
    }
  }
  else
  {

    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v13);
  }
  unint64_t result = sub_240BB78D0();
  __break(1u);
  return result;
}

uint64_t sub_240B3B12C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_240BB4EC0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_240B3CC60(0, (unint64_t *)&qword_268C9F218, MEMORY[0x263F43A90]);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  id v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v17[-v11];
  uint64_t v13 = v1 + qword_268CA1268;
  swift_beginAccess();
  sub_240B3D8A8(v13, (uint64_t)v12);
  uint64_t v14 = sub_240BB3B20();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) != 1) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v15 + 32))(a1, v12, v14);
  }
  sub_240B3CCD4((uint64_t)v12, (unint64_t *)&qword_268C9F218, MEMORY[0x263F43A90]);
  sub_240BB5250();
  sub_240BB36F0();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v15 + 16))(v10, a1, v14);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
  swift_beginAccess();
  sub_240B3D928((uint64_t)v10, v13);
  return swift_endAccess();
}

uint64_t sub_240B3B3D0()
{
  uint64_t ObjectType = (void *)swift_getObjectType();
  uint64_t v105 = sub_240BB3630();
  uint64_t v104 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  uint64_t v103 = (char *)&v95 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A86F10();
  uint64_t v102 = v2;
  uint64_t v101 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v100 = (char *)&v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_240BB3B20();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v107 = (uint64_t)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s14descr26F502E21O15SettingsContentVMa();
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v106 = (uint64_t)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v97 = (uint64_t)&v95 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v108 = (uint64_t)&v95 - v11;
  uint64_t v98 = type metadata accessor for AFibBurdenOnboardingPresentationContext();
  MEMORY[0x270FA5388](v98);
  uint64_t v99 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa(0);
  MEMORY[0x270FA5388](v114);
  uint64_t v115 = (uint64_t)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3FB28();
  char v118 = (char *)v14;
  uint64_t v117 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  char v116 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_240BB4EC0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v96 = (char *)&v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v95 - v20;
  sub_240B3CC60(0, &qword_268CA1280, (void (*)(uint64_t))_s14descr26F502CE9O13ActionHandlerC8UserDataVMa);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v24 = (char *)&v95 - v23;
  uint64_t v25 = _s14descr26F502CE9O13ActionHandlerC8UserDataVMa(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(void *)(v26 + 64);
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  uint64_t v113 = (uint64_t)&v95 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)&v95 - v29;
  uint64_t v110 = v0;
  sub_240BB5250();
  sub_240B3CC18(&qword_268CA1288, (void (*)(uint64_t))_s14descr26F502CE9O13ActionHandlerC8UserDataVMa);
  sub_240B3CC18(&qword_268C9ED98, (void (*)(uint64_t))_s14descr26F502CE9O13ActionHandlerC8UserDataVMa);
  uint64_t v31 = v26;
  sub_240BB4EB0();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v17 + 8);
  uint64_t v109 = v21;
  uint64_t v112 = v16;
  uint64_t v111 = v17 + 8;
  v32(v21, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
  {
    sub_240B3CCD4((uint64_t)v24, &qword_268CA1280, (void (*)(uint64_t))_s14descr26F502CE9O13ActionHandlerC8UserDataVMa);
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v33 = (uint64_t)v118;
    uint64_t v34 = sub_240A395FC((uint64_t)v118, (uint64_t)qword_26AFDEB68);
    uint64_t v35 = v117;
    uint64_t v36 = v116;
    (*(void (**)(char *, uint64_t, uint64_t))(v117 + 16))(v116, v34, v33);
    *(void *)(swift_allocObject() + 16) = ObjectType;
    uint64_t v124 = 0;
    sub_240BB5730();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v36, v33);
  }
  else
  {
    uint64_t v95 = v32;
    sub_240B3CF18((uint64_t)v24, (uint64_t)v30, _s14descr26F502CE9O13ActionHandlerC8UserDataVMa);
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v38 = (uint64_t)v118;
    uint64_t v39 = sub_240A395FC((uint64_t)v118, (uint64_t)qword_26AFDEB68);
    uint64_t v40 = v117;
    uint64_t v41 = v116;
    (*(void (**)(char *, uint64_t, uint64_t))(v117 + 16))(v116, v39, v38);
    uint64_t v42 = v113;
    sub_240B3CF80((uint64_t)v30, v113, _s14descr26F502CE9O13ActionHandlerC8UserDataVMa);
    unint64_t v43 = (*(unsigned __int8 *)(v31 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    uint64_t v44 = v27 + v43 + 7;
    uint64_t v45 = v30;
    unint64_t v46 = v44 & 0xFFFFFFFFFFFFFFF8;
    uint64_t v47 = swift_allocObject();
    sub_240B3CF18(v42, v47 + v43, _s14descr26F502CE9O13ActionHandlerC8UserDataVMa);
    *(void *)(v47 + v46) = ObjectType;
    uint64_t v124 = 0;
    sub_240BB5700();
    swift_release();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v38);
    uint64_t v48 = v115;
    sub_240B3CF80((uint64_t)v30, v115, _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v65 = v48;
        uint64_t v66 = v106;
        sub_240B3CF18(v65, v106, (uint64_t (*)(void))_s14descr26F502E21O15SettingsContentVMa);
        uint64_t ObjectType = (void *)type metadata accessor for AFibBurdenSettingsViewController(0);
        uint64_t v67 = v66;
        uint64_t v68 = v108;
        sub_240B3CF80(v67, v108, (uint64_t (*)(void))_s14descr26F502E21O15SettingsContentVMa);
        id v69 = sub_240B3ACF0();
        sub_240B3AE80(&v124);
        uint64_t v70 = v109;
        sub_240BB5250();
        sub_240BB4E90();
        v95(v70, v112);
        sub_240A3466C(&v122, v123);
        uint64_t v71 = (void *)sub_240BB4E10();
        _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v122);
        uint64_t v72 = v107;
        sub_240B3B12C(v107);
        uint64_t v73 = swift_getObjectType();
        uint64_t v74 = v125;
        uint64_t v75 = v126;
        uint64_t v76 = sub_240A346B0((uint64_t)&v124, v125);
        id v77 = sub_240B8764C(257, v68, (uint64_t)v69, v76, v71, v72, 0, (uint64_t)ObjectType, v73, v74, v75);
        _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v124);
        sub_240BB5250();
        uint64_t v78 = (void *)sub_240BB4EA0();
        v95(v70, v112);
        id v79 = objc_msgSend(v78, sel_navigationController);

        if (v79)
        {
          objc_msgSend(v79, sel_pushViewController_animated_, v77, 1);

          id v77 = v79;
        }

        sub_240B3F728(v106, (uint64_t (*)(void))_s14descr26F502E21O15SettingsContentVMa);
        uint64_t v64 = (uint64_t)v45;
        return sub_240B3F728(v64, _s14descr26F502CE9O13ActionHandlerC8UserDataVMa);
      case 2u:
        uint64_t v80 = v109;
        sub_240BB5250();
        sub_240BB4E90();
        uint64_t v81 = v112;
        uint64_t v82 = v95;
        v95(v80, v112);
        sub_240A3466C(&v124, v125);
        uint64_t ObjectType = (void *)sub_240BB4E10();
        _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v124);
        sub_240BB5250();
        uint64_t v83 = (void *)sub_240BB4EA0();
        v82(v80, v81);
        sub_240BB7240();

        sub_240BB5250();
        sub_240BB4E90();
        v82(v80, v81);
        sub_240A3466C(&v122, v123);
        sub_240BB4E30();
        uint64_t v84 = v96;
        sub_240BB5250();
        sub_240BB4E90();
        v82(v84, v81);
        sub_240A3466C(v120, v120[3]);
        uint64_t v85 = (uint64_t)v99;
        sub_240BB4E20();
        swift_storeEnumTagMultiPayload();
        id v86 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenOnboardingController());
        uint64_t v87 = sub_240B4A0D8(ObjectType, (uint64_t)&v124, (uint64_t)v121, v85, 0, 2);
        _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v120);
        _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v122);
        sub_240BB5250();
        uint64_t v88 = (void *)sub_240BB4EA0();
        v82(v80, v81);
        objc_msgSend(v88, sel_presentViewController_animated_completion_, v87, 1, 0);

        goto LABEL_20;
      case 3u:
        uint64_t v89 = (unsigned int *)MEMORY[0x263F43588];
        goto LABEL_15;
      case 4u:
        uint64_t v89 = (unsigned int *)MEMORY[0x263F43590];
LABEL_15:
        uint64_t v90 = v104;
        uint64_t v91 = v103;
        uint64_t v92 = v105;
        (*(void (**)(char *, void, uint64_t))(v104 + 104))(v103, *v89, v105);
        sub_240BB3620();
        (*(void (**)(char *, uint64_t))(v90 + 8))(v91, v92);
        goto LABEL_20;
      case 5u:
        id v93 = objc_msgSend(self, sel_aFibBurdenDefaultLinkURL);
        goto LABEL_19;
      case 6u:
        id v93 = objc_msgSend(self, sel_remoteDisabledLinkURL);
        goto LABEL_19;
      case 7u:
        id v93 = objc_msgSend(self, sel_seedExpiredLinkURL);
LABEL_19:
        id v94 = v93;
        sub_240BB6DE0();

        sub_240BB6E40();
        swift_bridgeObjectRelease();
        goto LABEL_20;
      case 8u:
LABEL_20:
        uint64_t v64 = (uint64_t)v30;
        break;
      default:
        uint64_t v49 = v108;
        sub_240B3CF18(v48, v108, (uint64_t (*)(void))_s14descr26F502E21O15SettingsContentVMa);
        uint64_t v50 = type metadata accessor for AFibBurdenSettingsViewController(0);
        uint64_t v51 = v97;
        sub_240B3CF80(v49, v97, (uint64_t (*)(void))_s14descr26F502E21O15SettingsContentVMa);
        id v52 = sub_240B3ACF0();
        sub_240B3AE80(&v124);
        uint64_t v53 = v109;
        sub_240BB5250();
        sub_240BB4E90();
        v95(v53, v112);
        char v118 = v30;
        sub_240A3466C(&v122, v123);
        uint64_t v54 = (void *)sub_240BB4E10();
        _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v122);
        uint64_t v55 = v107;
        sub_240B3B12C(v107);
        uint64_t v56 = swift_getObjectType();
        uint64_t v57 = v125;
        uint64_t v58 = v126;
        uint64_t v59 = sub_240A346B0((uint64_t)&v124, v125);
        id v60 = sub_240B8764C(257, v51, (uint64_t)v52, v59, v54, v55, 1, v50, v56, v57, v58);
        _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v124);
        sub_240B3ACF0();
        swift_getObjectType();
        uint64_t v61 = v100;
        sub_240BB72A0();
        *(void *)(swift_allocObject() + 16) = ObjectType;
        sub_240BB7450();
        sub_240BB50A0();
        swift_release();
        (*(void (**)(char *, uint64_t))(v101 + 8))(v61, v102);
        id v62 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v60);
        sub_240BB5250();
        uint64_t v63 = (void *)sub_240BB4EA0();
        v95(v53, v112);
        objc_msgSend(v63, sel_presentViewController_animated_completion_, v62, 1, 0);

        sub_240B3F728(v108, (uint64_t (*)(void))_s14descr26F502E21O15SettingsContentVMa);
        uint64_t v64 = (uint64_t)v118;
        break;
    }
    return sub_240B3F728(v64, _s14descr26F502CE9O13ActionHandlerC8UserDataVMa);
  }
}

uint64_t sub_240B3C4B4()
{
  return 0;
}

uint64_t sub_240B3C54C(uint64_t a1)
{
  uint64_t v2 = _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  sub_240BB77C0();
  sub_240BB6E70();
  sub_240BB7C80();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  sub_240B3CF80(a1, (uint64_t)v4, _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa);
  sub_240BB6E10();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return v6[0];
}

uint64_t sub_240B3C680(char a1, void *a2, uint64_t a3)
{
  sub_240A3FB28();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_240A395FC(v7, (uint64_t)qword_26AFDEB68);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v12, v7);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a2;
    *(void *)(v13 + 24) = a3;
    v15[1] = 0;
    id v14 = a2;
    sub_240BB5720();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  return result;
}

uint64_t sub_240B3C808(void *a1)
{
  sub_240BB77C0();
  sub_240BB6E70();
  sub_240BB7C80();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  id v2 = a1;
  sub_240ACB678(0, (unint64_t *)&unk_268CA21D0, (unint64_t *)&qword_26AFD99E0);
  sub_240BB6E10();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return 0;
}

uint64_t sub_240B3C908(uint64_t a1)
{
  uint64_t v3 = sub_240BB4EC0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (char *)objc_allocWithZone(v1);
  *(void *)&v7[qword_268CA1258] = 0;
  uint64_t v8 = &v7[qword_268CA1260];
  *(_OWORD *)uint64_t v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((void *)v8 + 4) = 0;
  uint64_t v9 = &v7[qword_268CA1268];
  uint64_t v10 = sub_240BB3B20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t v11 = sub_240BB5260();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v11;
}

uint64_t sub_240B3CA78()
{
  sub_240BB50A0();
  sub_240AE8B1C(v0 + qword_268CA1260);
  return sub_240B3CCD4(v0 + qword_268CA1268, (unint64_t *)&qword_268C9F218, MEMORY[0x263F43A90]);
}

id sub_240B3CAD8()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s14descr26F502CE9O13ActionHandlerCMa(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240B3CB10(uint64_t a1)
{
  return sub_240B3CCD4(a1 + qword_268CA1268, (unint64_t *)&qword_268C9F218, MEMORY[0x263F43A90]);
}

uint64_t sub_240B3CB7C()
{
  return _s14descr26F502CE9O13ActionHandlerCMa(0);
}

uint64_t sub_240B3CB84()
{
  return sub_240B3CC18(&qword_268C9EDA0, (void (*)(uint64_t))_s14descr26F502CE9O13ActionHandlerCMa);
}

uint64_t sub_240B3CBD0()
{
  return sub_240B3CC18((unint64_t *)&unk_26AFD7BB0, MEMORY[0x263F445D8]);
}

uint64_t sub_240B3CC18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240B3CC60(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240BB75E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t _s14descr26F502CE9O13ActionHandlerC8UserDataVMa(uint64_t a1)
{
  return sub_240A3E6AC(a1, (uint64_t *)&unk_268CA1290);
}

uint64_t sub_240B3CCD4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_240B3CC60(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_240B3CD30()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B3CD40()
{
  return sub_240B3C4B4();
}

uint64_t sub_240B3CD48()
{
  uint64_t v1 = *(void *)(_s14descr26F502CE9O13ActionHandlerC8UserDataVMa(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa(0);
  if (swift_getEnumCaseMultiPayload() <= 1)
  {
    uint64_t v5 = sub_240BB3660();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
    uint64_t v6 = _s14descr26F502E21O15SettingsContentVMa();
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + v3 + *(int *)(v6 + 32) + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }

  return MEMORY[0x270FA0238](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_240B3CE8C()
{
  uint64_t v1 = *(void *)(_s14descr26F502CE9O13ActionHandlerC8UserDataVMa(0) - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_240B3C54C(v2);
}

uint64_t sub_240B3CF18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_240B3CF80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

BOOL sub_240B3CFE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s14descr26F502E21O15SettingsContentVMa();
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v32 - v8;
  uint64_t v10 = _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v32 - v14;
  sub_240B3F6C4();
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)&v19[*(int *)(v17 + 56)];
  sub_240B3CF80(a1, (uint64_t)v19, _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa);
  sub_240B3CF80(a2, v20, _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_240B3CF80((uint64_t)v19, (uint64_t)v13, _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa);
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_6;
      }
      sub_240B3CF18(v20, (uint64_t)v7, (uint64_t (*)(void))_s14descr26F502E21O15SettingsContentVMa);
      BOOL v21 = sub_240B598E8((uint64_t)v13, (uint64_t)v7);
      sub_240B3F728((uint64_t)v7, (uint64_t (*)(void))_s14descr26F502E21O15SettingsContentVMa);
      uint64_t v22 = (uint64_t)v13;
      goto LABEL_22;
    case 2u:
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v24 = _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa;
      if (EnumCaseMultiPayload == 2) {
        goto LABEL_20;
      }
      goto LABEL_18;
    case 3u:
      int v25 = swift_getEnumCaseMultiPayload();
      uint64_t v24 = _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa;
      if (v25 == 3) {
        goto LABEL_20;
      }
      goto LABEL_18;
    case 4u:
      int v26 = swift_getEnumCaseMultiPayload();
      uint64_t v24 = _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa;
      if (v26 == 4) {
        goto LABEL_20;
      }
      goto LABEL_18;
    case 5u:
      int v27 = swift_getEnumCaseMultiPayload();
      uint64_t v24 = _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa;
      if (v27 == 5) {
        goto LABEL_20;
      }
      goto LABEL_18;
    case 6u:
      int v28 = swift_getEnumCaseMultiPayload();
      uint64_t v24 = _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa;
      if (v28 == 6) {
        goto LABEL_20;
      }
      goto LABEL_18;
    case 7u:
      int v29 = swift_getEnumCaseMultiPayload();
      uint64_t v24 = _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa;
      if (v29 != 7) {
        goto LABEL_18;
      }
      goto LABEL_20;
    case 8u:
      int v30 = swift_getEnumCaseMultiPayload();
      uint64_t v24 = _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa;
      if (v30 != 8) {
        goto LABEL_18;
      }
LABEL_20:
      BOOL v21 = 1;
      break;
    default:
      sub_240B3CF80((uint64_t)v19, (uint64_t)v15, _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa);
      if (swift_getEnumCaseMultiPayload())
      {
        uint64_t v13 = v15;
LABEL_6:
        sub_240B3F728((uint64_t)v13, (uint64_t (*)(void))_s14descr26F502E21O15SettingsContentVMa);
LABEL_18:
        BOOL v21 = 0;
        uint64_t v24 = (uint64_t (*)(void))sub_240B3F6C4;
      }
      else
      {
        sub_240B3CF18(v20, (uint64_t)v9, (uint64_t (*)(void))_s14descr26F502E21O15SettingsContentVMa);
        BOOL v21 = sub_240B598E8((uint64_t)v15, (uint64_t)v9);
        sub_240B3F728((uint64_t)v9, (uint64_t (*)(void))_s14descr26F502E21O15SettingsContentVMa);
        uint64_t v22 = (uint64_t)v15;
LABEL_22:
        sub_240B3F728(v22, (uint64_t (*)(void))_s14descr26F502E21O15SettingsContentVMa);
        uint64_t v24 = _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa;
      }
      break;
  }
  sub_240B3F728((uint64_t)v19, v24);
  return v21;
}

uint64_t sub_240B3D468(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x8000000240BCE720 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000240BCE740 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000240BCE780 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000240BCE7A0 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000240BD2320 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x8000000240BD2340 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x8000000240BD2360 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x8000000240BD2390 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6E6F697463416F6ELL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v5 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_240B3D7C8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x8000000240BD2300)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_240B3D850()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B3D860(char a1, void *a2)
{
  return sub_240B3C680(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_240B3D868()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B3D8A0()
{
  return sub_240B3C808(*(void **)(v0 + 16));
}

uint64_t sub_240B3D8A8(uint64_t a1, uint64_t a2)
{
  sub_240B3CC60(0, (unint64_t *)&qword_268C9F218, MEMORY[0x263F43A90]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240B3D928(uint64_t a1, uint64_t a2)
{
  sub_240B3CC60(0, (unint64_t *)&qword_268C9F218, MEMORY[0x263F43A90]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t *sub_240B3D9A8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(v4 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v20 = sub_240BB3660();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
      BOOL v21 = (int *)_s14descr26F502E21O15SettingsContentVMa();
      *(_WORD *)((char *)a1 + v21[5]) = *(_WORD *)((char *)a2 + v21[5]);
      *(_WORD *)((char *)a1 + v21[6]) = *(_WORD *)((char *)a2 + v21[6]);
      uint64_t v22 = v21[7];
      uint64_t v23 = (uint64_t *)((char *)a1 + v22);
      uint64_t v24 = (uint64_t *)((char *)a2 + v22);
      uint64_t v26 = *v24;
      uint64_t v25 = v24[1];
      *uint64_t v23 = v26;
      v23[1] = v25;
      uint64_t v27 = v21[8];
      uint64_t v16 = (char *)a1 + v27;
      uint64_t v17 = (char *)a2 + v27;
      uint64_t v18 = *(uint64_t *)((char *)a2 + v27 + 8);
      sub_240BB4850();
      if (!v18)
      {
        long long v32 = *((_OWORD *)v17 + 1);
        *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v32;
        *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
        goto LABEL_12;
      }
      goto LABEL_8;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v8 = sub_240BB3660();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = (int *)_s14descr26F502E21O15SettingsContentVMa();
      *(_WORD *)((char *)a1 + v9[5]) = *(_WORD *)((char *)a2 + v9[5]);
      *(_WORD *)((char *)a1 + v9[6]) = *(_WORD *)((char *)a2 + v9[6]);
      uint64_t v10 = v9[7];
      uint64_t v11 = (uint64_t *)((char *)a1 + v10);
      uint64_t v12 = (uint64_t *)((char *)a2 + v10);
      uint64_t v14 = *v12;
      uint64_t v13 = v12[1];
      *uint64_t v11 = v14;
      v11[1] = v13;
      uint64_t v15 = v9[8];
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = *(uint64_t *)((char *)a2 + v15 + 8);
      sub_240BB4850();
      if (!v18)
      {
        long long v31 = *((_OWORD *)v17 + 1);
        *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v31;
        *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
        goto LABEL_12;
      }
LABEL_8:
      *(void *)uint64_t v16 = *(void *)v17;
      *((void *)v16 + 1) = v18;
      uint64_t v28 = *((void *)v17 + 3);
      *((void *)v16 + 2) = *((void *)v17 + 2);
      *((void *)v16 + 3) = v28;
      uint64_t v29 = *((void *)v17 + 4);
      uint64_t v30 = *((void *)v17 + 5);
      *((void *)v16 + 4) = v29;
      *((void *)v16 + 5) = v30;
      sub_240BB4850();
      sub_240BB4850();
      sub_240BB4850();
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t sub_240B3DC2C(uint64_t a1)
{
  _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    uint64_t v3 = sub_240BB3660();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    uint64_t v4 = _s14descr26F502E21O15SettingsContentVMa();
    swift_bridgeObjectRelease();
    uint64_t result = *(void *)(a1 + *(int *)(v4 + 32) + 8);
    if (result)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

char *sub_240B3DCFC(char *a1, char *a2)
{
  uint64_t v4 = _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v17 = sub_240BB3660();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
    uint64_t v18 = (int *)_s14descr26F502E21O15SettingsContentVMa();
    *(_WORD *)&a1[v18[5]] = *(_WORD *)&a2[v18[5]];
    *(_WORD *)&a1[v18[6]] = *(_WORD *)&a2[v18[6]];
    uint64_t v19 = v18[7];
    uint64_t v20 = &a1[v19];
    BOOL v21 = &a2[v19];
    uint64_t v23 = *(void *)v21;
    uint64_t v22 = *((void *)v21 + 1);
    *(void *)uint64_t v20 = v23;
    *((void *)v20 + 1) = v22;
    uint64_t v24 = v18[8];
    uint64_t v14 = &a1[v24];
    uint64_t v15 = &a2[v24];
    uint64_t v16 = *(void *)&a2[v24 + 8];
    sub_240BB4850();
    if (!v16)
    {
      long long v29 = *((_OWORD *)v15 + 1);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v29;
      *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v6 = sub_240BB3660();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    uint64_t v7 = (int *)_s14descr26F502E21O15SettingsContentVMa();
    *(_WORD *)&a1[v7[5]] = *(_WORD *)&a2[v7[5]];
    *(_WORD *)&a1[v7[6]] = *(_WORD *)&a2[v7[6]];
    uint64_t v8 = v7[7];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v12 = *(void *)v10;
    uint64_t v11 = *((void *)v10 + 1);
    *(void *)uint64_t v9 = v12;
    *((void *)v9 + 1) = v11;
    uint64_t v13 = v7[8];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    uint64_t v16 = *(void *)&a2[v13 + 8];
    sub_240BB4850();
    if (!v16)
    {
      long long v28 = *((_OWORD *)v15 + 1);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v28;
      *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
      goto LABEL_10;
    }
LABEL_6:
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    uint64_t v25 = *((void *)v15 + 3);
    *((void *)v14 + 2) = *((void *)v15 + 2);
    *((void *)v14 + 3) = v25;
    uint64_t v26 = *((void *)v15 + 4);
    uint64_t v27 = *((void *)v15 + 5);
    *((void *)v14 + 4) = v26;
    *((void *)v14 + 5) = v27;
    sub_240BB4850();
    sub_240BB4850();
    sub_240BB4850();
LABEL_10:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  return a1;
}

char *sub_240B3DF3C(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_240B3F728((uint64_t)a1, _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa);
    uint64_t v4 = _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = sub_240BB3660();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
      uint64_t v16 = (int *)_s14descr26F502E21O15SettingsContentVMa();
      *(_WORD *)&a1[v16[5]] = *(_WORD *)&a2[v16[5]];
      *(_WORD *)&a1[v16[6]] = *(_WORD *)&a2[v16[6]];
      uint64_t v17 = v16[7];
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      *(void *)uint64_t v18 = *(void *)v19;
      *((void *)v18 + 1) = *((void *)v19 + 1);
      uint64_t v20 = v16[8];
      uint64_t v12 = &a1[v20];
      uint64_t v13 = &a2[v20];
      uint64_t v21 = *(void *)&a2[v20 + 8];
      sub_240BB4850();
      if (!v21)
      {
        long long v24 = *(_OWORD *)v13;
        long long v25 = *((_OWORD *)v13 + 2);
        *((_OWORD *)v12 + 1) = *((_OWORD *)v13 + 1);
        *((_OWORD *)v12 + 2) = v25;
        *(_OWORD *)uint64_t v12 = v24;
        goto LABEL_11;
      }
      goto LABEL_7;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v6 = sub_240BB3660();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = (int *)_s14descr26F502E21O15SettingsContentVMa();
      *(_WORD *)&a1[v7[5]] = *(_WORD *)&a2[v7[5]];
      *(_WORD *)&a1[v7[6]] = *(_WORD *)&a2[v7[6]];
      uint64_t v8 = v7[7];
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      *(void *)uint64_t v9 = *(void *)v10;
      *((void *)v9 + 1) = *((void *)v10 + 1);
      uint64_t v11 = v7[8];
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = *(void *)&a2[v11 + 8];
      sub_240BB4850();
      if (!v14)
      {
        long long v22 = *(_OWORD *)v13;
        long long v23 = *((_OWORD *)v13 + 2);
        *((_OWORD *)v12 + 1) = *((_OWORD *)v13 + 1);
        *((_OWORD *)v12 + 2) = v23;
        *(_OWORD *)uint64_t v12 = v22;
        goto LABEL_11;
      }
LABEL_7:
      *(void *)uint64_t v12 = *(void *)v13;
      *((void *)v12 + 1) = *((void *)v13 + 1);
      *((void *)v12 + 2) = *((void *)v13 + 2);
      *((void *)v12 + 3) = *((void *)v13 + 3);
      *((void *)v12 + 4) = *((void *)v13 + 4);
      *((void *)v12 + 5) = *((void *)v13 + 5);
      sub_240BB4850();
      sub_240BB4850();
      sub_240BB4850();
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

char *sub_240B3E1D8(char *a1, char *a2)
{
  uint64_t v4 = _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa(0);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    uint64_t v5 = sub_240BB3660();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    uint64_t v6 = (int *)_s14descr26F502E21O15SettingsContentVMa();
    *(_WORD *)&a1[v6[5]] = *(_WORD *)&a2[v6[5]];
    *(_WORD *)&a1[v6[6]] = *(_WORD *)&a2[v6[6]];
    *(_OWORD *)&a1[v6[7]] = *(_OWORD *)&a2[v6[7]];
    uint64_t v7 = v6[8];
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    long long v10 = *((_OWORD *)v9 + 1);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *((_OWORD *)v8 + 1) = v10;
    *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_240B3E37C(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_240B3F728((uint64_t)a1, _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa);
    uint64_t v4 = _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa(0);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
    else
    {
      uint64_t v5 = sub_240BB3660();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      uint64_t v6 = (int *)_s14descr26F502E21O15SettingsContentVMa();
      *(_WORD *)&a1[v6[5]] = *(_WORD *)&a2[v6[5]];
      *(_WORD *)&a1[v6[6]] = *(_WORD *)&a2[v6[6]];
      *(_OWORD *)&a1[v6[7]] = *(_OWORD *)&a2[v6[7]];
      uint64_t v7 = v6[8];
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      long long v10 = *((_OWORD *)v9 + 1);
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      *((_OWORD *)v8 + 1) = v10;
      *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_240B3E544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240B3E558);
}

uint64_t sub_240B3E558(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_240B3E5C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240B3E5D8);
}

uint64_t sub_240B3E5D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_240B3E648()
{
  uint64_t result = _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_240B3E6D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v20 = sub_240BB3660();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
      uint64_t v21 = (int *)_s14descr26F502E21O15SettingsContentVMa();
      *(_WORD *)((char *)a1 + v21[5]) = *(_WORD *)((char *)a2 + v21[5]);
      *(_WORD *)((char *)a1 + v21[6]) = *(_WORD *)((char *)a2 + v21[6]);
      uint64_t v22 = v21[7];
      long long v23 = (uint64_t *)((char *)a1 + v22);
      long long v24 = (uint64_t *)((char *)a2 + v22);
      uint64_t v26 = *v24;
      uint64_t v25 = v24[1];
      *long long v23 = v26;
      v23[1] = v25;
      uint64_t v27 = v21[8];
      uint64_t v16 = (char *)a1 + v27;
      uint64_t v17 = (char *)a2 + v27;
      uint64_t v18 = *(uint64_t *)((char *)a2 + v27 + 8);
      sub_240BB4850();
      if (!v18)
      {
        long long v32 = *((_OWORD *)v17 + 1);
        *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v32;
        *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
        goto LABEL_12;
      }
      goto LABEL_8;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v8 = sub_240BB3660();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = (int *)_s14descr26F502E21O15SettingsContentVMa();
      *(_WORD *)((char *)a1 + v9[5]) = *(_WORD *)((char *)a2 + v9[5]);
      *(_WORD *)((char *)a1 + v9[6]) = *(_WORD *)((char *)a2 + v9[6]);
      uint64_t v10 = v9[7];
      uint64_t v11 = (uint64_t *)((char *)a1 + v10);
      uint64_t v12 = (uint64_t *)((char *)a2 + v10);
      uint64_t v14 = *v12;
      uint64_t v13 = v12[1];
      *uint64_t v11 = v14;
      v11[1] = v13;
      uint64_t v15 = v9[8];
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = *(uint64_t *)((char *)a2 + v15 + 8);
      sub_240BB4850();
      if (!v18)
      {
        long long v31 = *((_OWORD *)v17 + 1);
        *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v31;
        *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
        goto LABEL_12;
      }
LABEL_8:
      *(void *)uint64_t v16 = *(void *)v17;
      *((void *)v16 + 1) = v18;
      uint64_t v28 = *((void *)v17 + 3);
      *((void *)v16 + 2) = *((void *)v17 + 2);
      *((void *)v16 + 3) = v28;
      uint64_t v29 = *((void *)v17 + 4);
      uint64_t v30 = *((void *)v17 + 5);
      *((void *)v16 + 4) = v29;
      *((void *)v16 + 5) = v30;
      sub_240BB4850();
      sub_240BB4850();
      sub_240BB4850();
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t sub_240B3E950(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    uint64_t v3 = sub_240BB3660();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    uint64_t v4 = _s14descr26F502E21O15SettingsContentVMa();
    swift_bridgeObjectRelease();
    uint64_t result = *(void *)(a1 + *(int *)(v4 + 32) + 8);
    if (result)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

char *sub_240B3EA10(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v18 = sub_240BB3660();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
    uint64_t v19 = (int *)_s14descr26F502E21O15SettingsContentVMa();
    *(_WORD *)&a1[v19[5]] = *(_WORD *)&a2[v19[5]];
    *(_WORD *)&a1[v19[6]] = *(_WORD *)&a2[v19[6]];
    uint64_t v20 = v19[7];
    uint64_t v21 = &a1[v20];
    uint64_t v22 = &a2[v20];
    uint64_t v24 = *(void *)v22;
    uint64_t v23 = *((void *)v22 + 1);
    *(void *)uint64_t v21 = v24;
    *((void *)v21 + 1) = v23;
    uint64_t v25 = v19[8];
    uint64_t v15 = &a1[v25];
    uint64_t v16 = &a2[v25];
    uint64_t v17 = *(void *)&a2[v25 + 8];
    sub_240BB4850();
    if (!v17)
    {
      long long v30 = *((_OWORD *)v16 + 1);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v30;
      *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = sub_240BB3660();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = (int *)_s14descr26F502E21O15SettingsContentVMa();
    *(_WORD *)&a1[v8[5]] = *(_WORD *)&a2[v8[5]];
    *(_WORD *)&a1[v8[6]] = *(_WORD *)&a2[v8[6]];
    uint64_t v9 = v8[7];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v13 = *(void *)v11;
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = v13;
    *((void *)v10 + 1) = v12;
    uint64_t v14 = v8[8];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    uint64_t v17 = *(void *)&a2[v14 + 8];
    sub_240BB4850();
    if (!v17)
    {
      long long v29 = *((_OWORD *)v16 + 1);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v29;
      *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
      goto LABEL_10;
    }
LABEL_6:
    *(void *)uint64_t v15 = *(void *)v16;
    *((void *)v15 + 1) = v17;
    uint64_t v26 = *((void *)v16 + 3);
    *((void *)v15 + 2) = *((void *)v16 + 2);
    *((void *)v15 + 3) = v26;
    uint64_t v27 = *((void *)v16 + 4);
    uint64_t v28 = *((void *)v16 + 5);
    *((void *)v15 + 4) = v27;
    *((void *)v15 + 5) = v28;
    sub_240BB4850();
    sub_240BB4850();
    sub_240BB4850();
LABEL_10:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_240B3EC48(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_240B3F728((uint64_t)a1, _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v16 = sub_240BB3660();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
      uint64_t v17 = (int *)_s14descr26F502E21O15SettingsContentVMa();
      *(_WORD *)&a1[v17[5]] = *(_WORD *)&a2[v17[5]];
      *(_WORD *)&a1[v17[6]] = *(_WORD *)&a2[v17[6]];
      uint64_t v18 = v17[7];
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      *(void *)uint64_t v19 = *(void *)v20;
      *((void *)v19 + 1) = *((void *)v20 + 1);
      uint64_t v21 = v17[8];
      uint64_t v13 = &a1[v21];
      uint64_t v14 = &a2[v21];
      uint64_t v22 = *(void *)&a2[v21 + 8];
      sub_240BB4850();
      if (!v22)
      {
        long long v25 = *(_OWORD *)v14;
        long long v26 = *((_OWORD *)v14 + 2);
        *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
        *((_OWORD *)v13 + 2) = v26;
        *(_OWORD *)uint64_t v13 = v25;
        goto LABEL_11;
      }
      goto LABEL_7;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = sub_240BB3660();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = (int *)_s14descr26F502E21O15SettingsContentVMa();
      *(_WORD *)&a1[v8[5]] = *(_WORD *)&a2[v8[5]];
      *(_WORD *)&a1[v8[6]] = *(_WORD *)&a2[v8[6]];
      uint64_t v9 = v8[7];
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      *(void *)uint64_t v10 = *(void *)v11;
      *((void *)v10 + 1) = *((void *)v11 + 1);
      uint64_t v12 = v8[8];
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      uint64_t v15 = *(void *)&a2[v12 + 8];
      sub_240BB4850();
      if (!v15)
      {
        long long v23 = *(_OWORD *)v14;
        long long v24 = *((_OWORD *)v14 + 2);
        *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
        *((_OWORD *)v13 + 2) = v24;
        *(_OWORD *)uint64_t v13 = v23;
        goto LABEL_11;
      }
LABEL_7:
      *(void *)uint64_t v13 = *(void *)v14;
      *((void *)v13 + 1) = *((void *)v14 + 1);
      *((void *)v13 + 2) = *((void *)v14 + 2);
      *((void *)v13 + 3) = *((void *)v14 + 3);
      *((void *)v13 + 4) = *((void *)v14 + 4);
      *((void *)v13 + 5) = *((void *)v14 + 5);
      sub_240BB4850();
      sub_240BB4850();
      sub_240BB4850();
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_240B3EEDC(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_240BB3660();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = (int *)_s14descr26F502E21O15SettingsContentVMa();
    *(_WORD *)&a1[v7[5]] = *(_WORD *)&a2[v7[5]];
    *(_WORD *)&a1[v7[6]] = *(_WORD *)&a2[v7[6]];
    *(_OWORD *)&a1[v7[7]] = *(_OWORD *)&a2[v7[7]];
    uint64_t v8 = v7[8];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    long long v11 = *((_OWORD *)v10 + 1);
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v11;
    *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_240B3F078(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_240B3F728((uint64_t)a1, _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_240BB3660();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = (int *)_s14descr26F502E21O15SettingsContentVMa();
      *(_WORD *)&a1[v7[5]] = *(_WORD *)&a2[v7[5]];
      *(_WORD *)&a1[v7[6]] = *(_WORD *)&a2[v7[6]];
      *(_OWORD *)&a1[v7[7]] = *(_OWORD *)&a2[v7[7]];
      uint64_t v8 = v7[8];
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      long long v11 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v11;
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_240B3F238()
{
  uint64_t result = _s14descr26F502E21O15SettingsContentVMa();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t sub_240B3F2C0()
{
  unint64_t result = qword_268CA12A8;
  if (!qword_268CA12A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA12A8);
  }
  return result;
}

unint64_t sub_240B3F314()
{
  unint64_t result = qword_268CA12D0;
  if (!qword_268CA12D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA12D0);
  }
  return result;
}

unint64_t sub_240B3F368()
{
  unint64_t result = qword_268CA12E0;
  if (!qword_268CA12E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA12E0);
  }
  return result;
}

unint64_t sub_240B3F3BC()
{
  unint64_t result = qword_268CA12F0;
  if (!qword_268CA12F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA12F0);
  }
  return result;
}

unint64_t sub_240B3F410()
{
  unint64_t result = qword_268CA1300;
  if (!qword_268CA1300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1300);
  }
  return result;
}

unint64_t sub_240B3F464()
{
  unint64_t result = qword_268CA1310;
  if (!qword_268CA1310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1310);
  }
  return result;
}

unint64_t sub_240B3F4B8()
{
  unint64_t result = qword_268CA1320;
  if (!qword_268CA1320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1320);
  }
  return result;
}

unint64_t sub_240B3F50C()
{
  unint64_t result = qword_268CA1330;
  if (!qword_268CA1330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1330);
  }
  return result;
}

unint64_t sub_240B3F560()
{
  unint64_t result = qword_268CA1340;
  if (!qword_268CA1340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1340);
  }
  return result;
}

unint64_t sub_240B3F5B4()
{
  unint64_t result = qword_268CA1350;
  if (!qword_268CA1350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1350);
  }
  return result;
}

unint64_t sub_240B3F608()
{
  unint64_t result = qword_268CA1360;
  if (!qword_268CA1360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1360);
  }
  return result;
}

void sub_240B3F65C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_240B3F6C4()
{
  if (!qword_268CA13C8)
  {
    _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CA13C8);
    }
  }
}

uint64_t sub_240B3F728(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240B3F8E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO10CodingKeysOMa()
{
  return &_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO10CodingKeysON;
}

ValueMetadata *_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO27PresentOnboardingCodingKeysOMa()
{
  return &_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO27PresentOnboardingCodingKeysON;
}

ValueMetadata *_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO32PresentFeatureSettingsCodingKeysOMa()
{
  return &_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO32PresentFeatureSettingsCodingKeysON;
}

ValueMetadata *_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO36PushEnabledFeatureSettingsCodingKeysOMa()
{
  return &_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO36PushEnabledFeatureSettingsCodingKeysON;
}

ValueMetadata *_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO37DeepLinkToHeartRateSettingsCodingKeysOMa()
{
  return &_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO37DeepLinkToHeartRateSettingsCodingKeysON;
}

ValueMetadata *_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO39DeepLinkToWristDetectSettingsCodingKeysOMa()
{
  return &_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO39DeepLinkToWristDetectSettingsCodingKeysON;
}

ValueMetadata *_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO41OpenGeneralKnowledgeBaseArticleCodingKeysOMa()
{
  return &_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO41OpenGeneralKnowledgeBaseArticleCodingKeysON;
}

ValueMetadata *_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO44OpenRegionGateKnowledgeBaseArticleCodingKeysOMa()
{
  return &_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO44OpenRegionGateKnowledgeBaseArticleCodingKeysON;
}

ValueMetadata *_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO45OpenSeedExpiredKnowledgeBaseArticleCodingKeysOMa()
{
  return &_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO45OpenSeedExpiredKnowledgeBaseArticleCodingKeysON;
}

ValueMetadata *_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO18NoActionCodingKeysOMa()
{
  return &_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO18NoActionCodingKeysON;
}

unsigned char *_s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionO32PresentFeatureSettingsCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x240B3FA4CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s14descr26F502CE9O13ActionHandlerC8UserDataV10CodingKeysOMa()
{
  return &_s14descr26F502CE9O13ActionHandlerC8UserDataV10CodingKeysON;
}

unint64_t sub_240B3FA88()
{
  unint64_t result = qword_268CA13D0;
  if (!qword_268CA13D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA13D0);
  }
  return result;
}

unint64_t sub_240B3FAE0()
{
  unint64_t result = qword_268CA13D8;
  if (!qword_268CA13D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA13D8);
  }
  return result;
}

unint64_t sub_240B3FB38()
{
  unint64_t result = qword_268CA13E0;
  if (!qword_268CA13E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA13E0);
  }
  return result;
}

unint64_t sub_240B3FB90()
{
  unint64_t result = qword_268CA13E8;
  if (!qword_268CA13E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA13E8);
  }
  return result;
}

unint64_t sub_240B3FBE8()
{
  unint64_t result = qword_268CA13F0;
  if (!qword_268CA13F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA13F0);
  }
  return result;
}

unint64_t sub_240B3FC40()
{
  unint64_t result = qword_268CA13F8;
  if (!qword_268CA13F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA13F8);
  }
  return result;
}

unint64_t sub_240B3FC98()
{
  unint64_t result = qword_268CA1400;
  if (!qword_268CA1400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1400);
  }
  return result;
}

unint64_t sub_240B3FCF0()
{
  unint64_t result = qword_268CA1408;
  if (!qword_268CA1408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1408);
  }
  return result;
}

unint64_t sub_240B3FD48()
{
  unint64_t result = qword_268CA1410;
  if (!qword_268CA1410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1410);
  }
  return result;
}

unint64_t sub_240B3FDA0()
{
  unint64_t result = qword_268CA1418;
  if (!qword_268CA1418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1418);
  }
  return result;
}

unint64_t sub_240B3FDF8()
{
  unint64_t result = qword_268CA1420;
  if (!qword_268CA1420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1420);
  }
  return result;
}

unint64_t sub_240B3FE50()
{
  unint64_t result = qword_268CA1428;
  if (!qword_268CA1428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1428);
  }
  return result;
}

unint64_t sub_240B3FEA8()
{
  unint64_t result = qword_268CA1430;
  if (!qword_268CA1430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1430);
  }
  return result;
}

unint64_t sub_240B3FF00()
{
  unint64_t result = qword_268CA1438;
  if (!qword_268CA1438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1438);
  }
  return result;
}

unint64_t sub_240B3FF58()
{
  unint64_t result = qword_268CA1440;
  if (!qword_268CA1440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1440);
  }
  return result;
}

unint64_t sub_240B3FFB0()
{
  unint64_t result = qword_268CA1448;
  if (!qword_268CA1448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1448);
  }
  return result;
}

unint64_t sub_240B40008()
{
  unint64_t result = qword_268CA1450;
  if (!qword_268CA1450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1450);
  }
  return result;
}

unint64_t sub_240B40060()
{
  unint64_t result = qword_268CA1458;
  if (!qword_268CA1458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1458);
  }
  return result;
}

unint64_t sub_240B400B8()
{
  unint64_t result = qword_268CA1460;
  if (!qword_268CA1460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1460);
  }
  return result;
}

unint64_t sub_240B40110()
{
  unint64_t result = qword_268CA1468;
  if (!qword_268CA1468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1468);
  }
  return result;
}

unint64_t sub_240B40168()
{
  unint64_t result = qword_268CA1470;
  if (!qword_268CA1470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1470);
  }
  return result;
}

unint64_t sub_240B401C0()
{
  unint64_t result = qword_268CA1478;
  if (!qword_268CA1478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1478);
  }
  return result;
}

unint64_t sub_240B40218()
{
  unint64_t result = qword_268CA1480;
  if (!qword_268CA1480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1480);
  }
  return result;
}

unint64_t sub_240B40270()
{
  unint64_t result = qword_268CA1488;
  if (!qword_268CA1488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1488);
  }
  return result;
}

unint64_t sub_240B402C8()
{
  unint64_t result = qword_268CA1490;
  if (!qword_268CA1490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1490);
  }
  return result;
}

unint64_t sub_240B40320()
{
  unint64_t result = qword_268CA1498;
  if (!qword_268CA1498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1498);
  }
  return result;
}

id sub_240B40378(void *a1, uint64_t a2)
{
  uint64_t v73 = a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_240BB5990();
  uint64_t v71 = *(void *)(v3 - 8);
  uint64_t v72 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  MEMORY[0x270FA5388](v4);
  unsigned int v6 = (char *)&v65 - v5;
  uint64_t v69 = sub_240BB4C70();
  uint64_t v68 = *(void *)(v69 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v69);
  uint64_t v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v70 = (char *)&v65 - v10;
  uint64_t v11 = sub_240BB4C80();
  uint64_t v67 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v65 - v15;
  id v17 = objc_msgSend(a1, sel_identifier);
  uint64_t v18 = sub_240BB6DE0();
  uint64_t v20 = v19;

  if (v18 == 0xD00000000000002ALL && v20 == 0x8000000240BD23C0
    || (sub_240BB7AE0() & 1) != 0
    || v18 == 0xD000000000000029 && v20 == 0x8000000240BD23F0
    || (sub_240BB7AE0() & 1) != 0
    || v18 == 0xD00000000000002DLL && v20 == 0x8000000240BD2420
    || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return (id)sub_240B0A2A0(a1, v73);
  }
  if (v18 == 0xD000000000000031 && v20 == 0x8000000240BD2450 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = (void *)sub_240BB4C30();
    id v23 = objc_msgSend(v22, sel_viewControllerFactory);

    sub_240BB4C40();
    char v24 = sub_240BB4C60();
    long long v25 = (char *)objc_allocWithZone((Class)type metadata accessor for AtrialFibrillationDataTypeDetailViewController());
    uint64_t v26 = v77;
    uint64_t v27 = v78;
    uint64_t v28 = sub_240A346B0((uint64_t)v76, v77);
    MEMORY[0x270FA5388](v28);
    long long v30 = (char *)&v65 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v31 + 16))(v30);
    sub_240ACAD30(v23, (uint64_t)v30, v24, v25, v26, v27);
    uint64_t v33 = v32;
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v76);
    sub_240BB4C10();
    sub_240AC7A48((uint64_t)v76);
    return (id)v33;
  }
  if (v18 == 0xD000000000000028 && v20 == 0x8000000240BD2490 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    BloodPressureDataTypeDetailConfigurationProvider.configuration(for:)();
    uint64_t v34 = v73;
    uint64_t v72 = sub_240BB49D0();
    uint64_t v35 = v68;
    uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 16);
    id v37 = v70;
    uint64_t v38 = v34;
    uint64_t v39 = v69;
    v36(v70, v38, v69);
    id v40 = objc_allocWithZone((Class)type metadata accessor for BloodPressureDataTypeDetailViewController());
    v36(v9, (uint64_t)v37, v39);
    id v41 = a1;
    uint64_t v33 = sub_240BB4D60();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v70, v39);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v16, v11);
    return (id)v33;
  }
  if (v18 == 0xD000000000000025 && v20 == 0x8000000240BD24C0 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v42 = (void *)sub_240BB4C30();
    id v43 = objc_msgSend(v42, sel_viewControllerFactory);

    sub_240BB4C40();
    LOBYTE(v42) = sub_240BB4C60();
    id v44 = objc_allocWithZone((Class)type metadata accessor for ElectrocardiogramDataTypeDetailViewController());
    sub_240A809F0(v43, (uint64_t)v76, (char)v42);
    uint64_t v33 = v45;
    sub_240BB4C10();
    uint64_t v46 = v33 + OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_consumedHealthExperienceStore;
    swift_beginAccess();
    sub_240A83008((uint64_t)v76, v46);
    swift_endAccess();
    return (id)v33;
  }
  if (v18 == 0xD000000000000030 && v20 == 0x8000000240BD1A00 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v47 = v73;
    sub_240B01470(v73, (uint64_t)a1, ObjectType);
    uint64_t v48 = v68;
    uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 16);
    uint64_t v50 = v69;
    uint64_t v51 = v70;
    v49(v70, v47, v69);
    id v52 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenDataTypeDetailViewController());
    v49(v9, (uint64_t)v51, v50);
    id v53 = a1;
    uint64_t v33 = sub_240BB4D60();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v51, v50);
    return (id)v33;
  }
  if (v18 == 0xD000000000000021 && v20 == 0x8000000240BD24F0 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return sub_240B0978C(a1, v73);
  }
  if (v18 == 0xD000000000000030 && v20 == 0x8000000240BD2520 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return (id)sub_240B09B4C(v73);
  }
  if (v18 == 0xD00000000000001ELL && v20 == 0x8000000240BD1A40)
  {
    swift_bridgeObjectRelease();
    return sub_240B09E58(a1, v73);
  }
  char v55 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  if (v55) {
    return sub_240B09E58(a1, v73);
  }
  uint64_t v80 = 0;
  memset(v79, 0, sizeof(v79));
  sub_240B4106C((uint64_t)v79, (uint64_t)&v74);
  if (v75)
  {
    sub_240A37388(&v74, (uint64_t)v76);
    sub_240A3466C(v76, v77);
    sub_240BB5230();
    uint64_t v62 = v73;
    sub_240BB49D0();
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v70, v62, v69);
    id v63 = objc_allocWithZone((Class)sub_240BB4D90());
    id v64 = a1;
    uint64_t v33 = sub_240BB4D60();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v14, v11);
    sub_240B410E8((uint64_t)v79);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v76);
  }
  else
  {
    sub_240B410E8((uint64_t)&v74);
    sub_240BB5960();
    id v56 = a1;
    uint64_t v57 = sub_240BB5970();
    os_log_type_t v58 = sub_240BB7180();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = (uint8_t *)swift_slowAlloc();
      id v60 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v59 = 138412290;
      v76[0] = v56;
      id v61 = v56;
      sub_240BB75F0();
      *id v60 = v56;

      _os_log_impl(&dword_240A1B000, v57, v58, "[HeartAppDelegate] No custom detail view controller or configuration provided for %@", v59, 0xCu);
      sub_240AA63A0();
      swift_arrayDestroy();
      MEMORY[0x24560B930](v60, -1, -1);
      MEMORY[0x24560B930](v59, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v71 + 8))(v6, v72);
    sub_240B410E8((uint64_t)v79);
    return 0;
  }
  return (id)v33;
}

id sub_240B41048(void *a1, uint64_t a2)
{
  return sub_240B40378(a1, a2);
}

uint64_t sub_240B4106C(uint64_t a1, uint64_t a2)
{
  sub_240ACB678(0, &qword_268CA14A0, &qword_268CA14A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240B410E8(uint64_t a1)
{
  sub_240ACB678(0, &qword_268CA14A0, &qword_268CA14A8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for AFibBurdenDataTypeDetailViewController()
{
  uint64_t result = qword_268CA14B0;
  if (!qword_268CA14B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240B411A8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_240B411E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240BB4C70();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_allocWithZone(v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v9 = sub_240BB4D60();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  return v9;
}

void sub_240B41300(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for AFibBurdenAddDataView();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = (void *)sub_240BB4D50();
  sub_240A9EF0C(v7, v6);
  sub_240B41448();
  id v9 = objc_allocWithZone(v8);
  uint64_t v10 = (void *)sub_240BB67A0();
  objc_msgSend(v2, sel_presentViewController_animated_completion_, v10, a1 & 1, 0);
}

id sub_240B413BC(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for AFibBurdenDataTypeDetailViewController();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_240B41408()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenDataTypeDetailViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240B41440()
{
  return type metadata accessor for AFibBurdenDataTypeDetailViewController();
}

void sub_240B41448()
{
  if (!qword_268CA14C0)
  {
    type metadata accessor for AFibBurdenAddDataView();
    sub_240B414AC();
    unint64_t v0 = sub_240BB67B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA14C0);
    }
  }
}

unint64_t sub_240B414AC()
{
  unint64_t result = qword_268CA14C8;
  if (!qword_268CA14C8)
  {
    type metadata accessor for AFibBurdenAddDataView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA14C8);
  }
  return result;
}

uint64_t sub_240B41504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_240B42928(0);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v20[0] = a1;
  sub_240A3B664();
  sub_240A33AC8(&qword_26AFD7528, (void (*)(uint64_t))sub_240A3B664);
  sub_240BB6360();
  sub_240A1E37C(a5, (uint64_t)v20);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = a3;
  long long v16 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v15 + 32) = *(_OWORD *)a4;
  *(_OWORD *)(v15 + 48) = v16;
  *(void *)(v15 + 64) = *(void *)(a4 + 32);
  sub_240A37388(v20, v15 + 72);
  id v17 = *(void **)a4;
  uint64_t v21 = *(void *)(a4 + 8);
  v20[0] = *(_OWORD *)(a4 + 16);
  swift_retain();
  id v18 = v17;
  sub_240A32CD8((uint64_t)&v21);
  sub_240A334B8((uint64_t)v20);
  sub_240A39BC8(0, (unint64_t *)&qword_26AFD8FB0);
  sub_240B42948();
  sub_240BB6330();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_240B41710@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, void **a3@<X3>, uint64_t **a4@<X8>)
{
  uint64_t v7 = *a3;
  if (*a1 == 1)
  {
    uint64_t v42 = a3[1];
    uint64_t v8 = (uint64_t)a3[2];
    unint64_t v9 = (unint64_t)a3[3];
    id v10 = v7;
    sub_240A32CD8((uint64_t)&v42);
    sub_240BB4850();
    id v11 = v10;
    sub_240A32CD8((uint64_t)&v42);
    sub_240BB4850();
    uint64_t v12 = sub_240BB5970();
    os_log_type_t v13 = sub_240BB7170();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v39 = a4;
      uint64_t v14 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v41 = v37;
      *(_DWORD *)uint64_t v14 = 136446466;
      sub_240B4297C();
      uint64_t v15 = sub_240BB6E10();
      sub_240A38940(v15, v16, &v41);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2082;
      sub_240BB4850();
      sub_240A38940(v8, v9, &v41);
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      sub_240A32CAC((uint64_t)&v42);

      swift_bridgeObjectRelease();
      sub_240A32CAC((uint64_t)&v42);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v12, v13, "[%{public}s(%{public}s)] Background requirements check passed, sending normal generator", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v37, -1, -1);
      uint64_t v17 = v14;
      a4 = v39;
      MEMORY[0x24560B930](v17, -1, -1);
    }
    else
    {

      sub_240A32CAC((uint64_t)&v42);
      swift_bridgeObjectRelease();
      sub_240A32CAC((uint64_t)&v42);
      swift_bridgeObjectRelease();
    }
    uint64_t v28 = type metadata accessor for RelatedSampleTypesGenerator(0);
    swift_allocObject();
    id v29 = v11;
    sub_240A32CD8((uint64_t)&v42);
    sub_240BB4850();
    swift_retain();
    long long v30 = sub_240AAD798((uint64_t)a3, a2);

    swift_release();
    sub_240A32CAC((uint64_t)&v42);
    swift_bridgeObjectRelease();
    a4[3] = (uint64_t *)v28;
    uint64_t v31 = (unint64_t *)&unk_268CA14D0;
    uint64_t v32 = (void (*)(uint64_t))type metadata accessor for RelatedSampleTypesGenerator;
  }
  else
  {
    uint64_t v42 = a3[1];
    uint64_t v18 = (uint64_t)a3[2];
    unint64_t v19 = (unint64_t)a3[3];
    id v20 = v7;
    sub_240A32CD8((uint64_t)&v42);
    sub_240BB4850();
    id v21 = v20;
    sub_240A32CD8((uint64_t)&v42);
    sub_240BB4850();
    uint64_t v22 = sub_240BB5970();
    os_log_type_t v23 = sub_240BB7170();
    if (os_log_type_enabled(v22, v23))
    {
      id v40 = a4;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v41 = v36;
      *(_DWORD *)uint64_t v24 = 136446466;
      sub_240B4297C();
      uint64_t v25 = sub_240BB6E10();
      sub_240A38940(v25, v26, &v41);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2082;
      sub_240BB4850();
      sub_240A38940(v18, v19, &v41);
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      sub_240A32CAC((uint64_t)&v42);

      swift_bridgeObjectRelease();
      sub_240A32CAC((uint64_t)&v42);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v22, v23, "[%{public}s(%{public}s)] Background requirements check failed, sending empty generator", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v36, -1, -1);
      uint64_t v27 = v24;
      a4 = v40;
      MEMORY[0x24560B930](v27, -1, -1);
    }
    else
    {

      sub_240A32CAC((uint64_t)&v42);
      swift_bridgeObjectRelease();
      sub_240A32CAC((uint64_t)&v42);
      swift_bridgeObjectRelease();
    }
    uint64_t v33 = type metadata accessor for EmptyRelatedSampleTypesGenerator();
    swift_allocObject();
    swift_retain();
    id v34 = v21;
    sub_240A32CD8((uint64_t)&v42);
    sub_240BB4850();
    long long v30 = sub_240B3251C((uint64_t)a3, a2);
    a4[3] = (uint64_t *)v33;
    uint64_t v31 = (unint64_t *)&unk_26AFD8218;
    uint64_t v32 = (void (*)(uint64_t))type metadata accessor for EmptyRelatedSampleTypesGenerator;
  }
  uint64_t result = sub_240A33AC8(v31, v32);
  a4[4] = (uint64_t *)result;
  *a4 = v30;
  return result;
}

uint64_t sub_240B41C6C@<X0>(void **a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v35 = a2;
  sub_240A3B52C(0, &qword_268CA14D8, MEMORY[0x263EFDE08]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v11 = (char *)&v32 - v10;
  uint64_t v12 = *a1;
  os_log_type_t v13 = *(void **)a3;
  uint64_t v39 = *(void *)(a3 + 8);
  unint64_t v14 = *(void *)(a3 + 24);
  uint64_t v36 = *(void *)(a3 + 16);
  id v15 = v13;
  sub_240A32CD8((uint64_t)&v39);
  sub_240BB4850();
  id v16 = v12;
  id v17 = v15;
  sub_240A32CD8((uint64_t)&v39);
  sub_240BB4850();
  id v18 = v12;
  unint64_t v19 = sub_240BB5970();
  os_log_type_t v20 = sub_240BB7180();
  int v21 = v20;
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v33 = v23;
    *(_DWORD *)uint64_t v22 = 136446722;
    HIDWORD(v32) = v21;
    uint64_t v37 = (uint64_t)v35;
    uint64_t v38 = v23;
    sub_240B4297C();
    id v34 = v11;
    uint64_t v24 = sub_240BB6E10();
    uint64_t v35 = a4;
    uint64_t v37 = sub_240A38940(v24, v25, &v38);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2082;
    sub_240BB4850();
    uint64_t v37 = sub_240A38940(v36, v14, &v38);
    id v11 = v34;
    sub_240BB75F0();

    swift_bridgeObjectRelease();
    sub_240A32CAC((uint64_t)&v39);

    swift_bridgeObjectRelease();
    sub_240A32CAC((uint64_t)&v39);
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 22) = 2082;
    uint64_t v37 = (uint64_t)v12;
    id v26 = v12;
    sub_240A39BC8(0, (unint64_t *)&qword_26AFD99E0);
    uint64_t v27 = sub_240BB6E10();
    uint64_t v37 = sub_240A38940(v27, v28, &v38);
    sub_240BB75F0();
    a4 = v35;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240A1B000, v19, BYTE4(v32), "[%{public}s(%{public}s)] Error when handling database changes: %{public}s", (uint8_t *)v22, 0x20u);
    uint64_t v29 = v33;
    swift_arrayDestroy();
    MEMORY[0x24560B930](v29, -1, -1);
    MEMORY[0x24560B930](v22, -1, -1);
  }
  else
  {

    sub_240A32CAC((uint64_t)&v39);
    swift_bridgeObjectRelease();
    sub_240A32CAC((uint64_t)&v39);
    swift_bridgeObjectRelease();
  }
  sub_240B42A40();
  sub_240BB6210();
  sub_240A3B59C(&qword_268CA14E0, &qword_268CA14D8, MEMORY[0x263EFDE08]);
  uint64_t v30 = sub_240BB62E0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *a4 = v30;
  return result;
}

uint64_t sub_240B42098@<X0>(char a1@<W0>, uint64_t a2@<X2>, void **a3@<X4>, uint64_t **a4@<X8>)
{
  uint64_t v7 = *a3;
  if (a1)
  {
    uint64_t v42 = a3[1];
    uint64_t v8 = (uint64_t)a3[2];
    unint64_t v9 = (unint64_t)a3[3];
    id v10 = v7;
    sub_240A32CD8((uint64_t)&v42);
    sub_240BB4850();
    id v11 = v10;
    sub_240A32CD8((uint64_t)&v42);
    sub_240BB4850();
    uint64_t v12 = sub_240BB5970();
    os_log_type_t v13 = sub_240BB7170();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v39 = a4;
      uint64_t v14 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v41 = v37;
      *(_DWORD *)uint64_t v14 = 136446466;
      sub_240B4297C();
      uint64_t v15 = sub_240BB6E10();
      sub_240A38940(v15, v16, &v41);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2082;
      sub_240BB4850();
      sub_240A38940(v8, v9, &v41);
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      sub_240A32CAC((uint64_t)&v42);

      swift_bridgeObjectRelease();
      sub_240A32CAC((uint64_t)&v42);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v12, v13, "[%{public}s(%{public}s)] Foreground requirements check passed, sending normal generator", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v37, -1, -1);
      uint64_t v17 = v14;
      a4 = v39;
      MEMORY[0x24560B930](v17, -1, -1);
    }
    else
    {

      sub_240A32CAC((uint64_t)&v42);
      swift_bridgeObjectRelease();
      sub_240A32CAC((uint64_t)&v42);
      swift_bridgeObjectRelease();
    }
    uint64_t v28 = type metadata accessor for RelatedSampleTypesGenerator(0);
    swift_allocObject();
    id v29 = v11;
    sub_240A32CD8((uint64_t)&v42);
    sub_240BB4850();
    swift_retain();
    uint64_t v30 = sub_240AAD798((uint64_t)a3, a2);

    swift_release();
    sub_240A32CAC((uint64_t)&v42);
    swift_bridgeObjectRelease();
    a4[3] = (uint64_t *)v28;
    uint64_t v31 = (unint64_t *)&unk_268CA14D0;
    uint64_t v32 = (void (*)(uint64_t))type metadata accessor for RelatedSampleTypesGenerator;
  }
  else
  {
    uint64_t v42 = a3[1];
    uint64_t v18 = (uint64_t)a3[2];
    unint64_t v19 = (unint64_t)a3[3];
    id v20 = v7;
    sub_240A32CD8((uint64_t)&v42);
    sub_240BB4850();
    id v21 = v20;
    sub_240A32CD8((uint64_t)&v42);
    sub_240BB4850();
    uint64_t v22 = sub_240BB5970();
    os_log_type_t v23 = sub_240BB7170();
    if (os_log_type_enabled(v22, v23))
    {
      id v40 = a4;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v41 = v36;
      *(_DWORD *)uint64_t v24 = 136446466;
      sub_240B4297C();
      uint64_t v25 = sub_240BB6E10();
      sub_240A38940(v25, v26, &v41);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2082;
      sub_240BB4850();
      sub_240A38940(v18, v19, &v41);
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      sub_240A32CAC((uint64_t)&v42);

      swift_bridgeObjectRelease();
      sub_240A32CAC((uint64_t)&v42);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v22, v23, "[%{public}s(%{public}s)] Foreground requirements check failed, sending empty generator", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v36, -1, -1);
      uint64_t v27 = v24;
      a4 = v40;
      MEMORY[0x24560B930](v27, -1, -1);
    }
    else
    {

      sub_240A32CAC((uint64_t)&v42);
      swift_bridgeObjectRelease();
      sub_240A32CAC((uint64_t)&v42);
      swift_bridgeObjectRelease();
    }
    uint64_t v33 = type metadata accessor for EmptyRelatedSampleTypesGenerator();
    swift_allocObject();
    swift_retain();
    id v34 = v21;
    sub_240A32CD8((uint64_t)&v42);
    sub_240BB4850();
    uint64_t v30 = sub_240B3251C((uint64_t)a3, a2);
    a4[3] = (uint64_t *)v33;
    uint64_t v31 = (unint64_t *)&unk_26AFD8218;
    uint64_t v32 = (void (*)(uint64_t))type metadata accessor for EmptyRelatedSampleTypesGenerator;
  }
  uint64_t result = sub_240A33AC8(v31, v32);
  a4[4] = (uint64_t *)result;
  *a4 = v30;
  return result;
}

uint64_t sub_240B425EC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Heart35RelatedSampleTypesGeneratorPipeline_domain;
  uint64_t v2 = sub_240BB3240();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_240B426AC()
{
  return type metadata accessor for RelatedSampleTypesGeneratorPipeline();
}

uint64_t sub_240B426B4()
{
  uint64_t result = sub_240BB3240();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_240B42760(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v8 = v5;
    if (v5 <= 0)
    {
      unint64_t v9 = (void *)MEMORY[0x263F8EE78];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        sub_240A34DC4(0, &qword_268CA0168);
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      sub_240A34E00();
      unint64_t v9 = (void *)swift_allocObject();
      int64_t v10 = j__malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 25;
      }
      v9[2] = v5;
      uint64_t v9[3] = (2 * (v11 >> 3)) | 1;
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_240BB7970();
  __break(1u);
  return result;
}

uint64_t sub_240B428F0()
{
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 16);

  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_240B42928(uint64_t a1)
{
}

uint64_t sub_240B42948()
{
  return sub_240A33AC8(&qword_26AFD89D8, sub_240B42928);
}

unint64_t sub_240B4297C()
{
  unint64_t result = qword_26AFD8F10;
  if (!qword_26AFD8F10)
  {
    type metadata accessor for RelatedSampleTypesGeneratorPipeline();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD8F10);
  }
  return result;
}

uint64_t sub_240B429B8()
{
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 80);

  return MEMORY[0x270FA0238](v0, 120, 7);
}

uint64_t sub_240B42A18()
{
  return sub_240B41504(v0[2], v0[3], v0[4], (uint64_t)(v0 + 5), (uint64_t)(v0 + 10));
}

uint64_t sub_240B42A30@<X0>(unsigned char *a1@<X0>, uint64_t **a2@<X8>)
{
  return sub_240B41710(a1, *(void *)(v2 + 16), (void **)(v2 + 32), a2);
}

void sub_240B42A40()
{
  if (!qword_26AFD8BB0)
  {
    sub_240BB7130();
    sub_240A39BC8(255, (unint64_t *)&qword_26AFD99E0);
    unint64_t v0 = sub_240BB7C20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD8BB0);
    }
  }
}

uint64_t sub_240B42AC0()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_240B42B10@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_240B41C6C(a1, *(uint64_t **)(v2 + 24), v2 + 32, a2);
}

uint64_t sub_240B42B20()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 72);

  return MEMORY[0x270FA0238](v0, 112, 7);
}

uint64_t sub_240B42B78@<X0>(char a1@<W0>, uint64_t **a2@<X8>)
{
  return sub_240B42098(a1, *(void *)(v2 + 16), (void **)(v2 + 32), a2);
}

uint64_t sub_240B42B88()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B42BC0(unsigned __int8 *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, unsigned __int8 *))(v1 + 16);
  uint64_t v4 = *a1;
  sub_240B42C1C();
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

void sub_240B42C1C()
{
  if (!qword_26AFD8B58)
  {
    sub_240B42A40();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AFD8B58);
    }
  }
}

ValueMetadata *type metadata accessor for RelatedSampleTypesGeneratorFactory()
{
  return &type metadata for RelatedSampleTypesGeneratorFactory;
}

double CGFloat.rounded(_:toScaleOf:)(uint64_t a1, id a2, double a3)
{
  objc_msgSend(a2, sel_displayScale);

  return CGFloat.rounded(_:toScale:)(a1, v5, a3);
}

{
  id v5;
  double v6;
  double v7;

  double v5 = objc_msgSend(a2, sel_traitCollection);
  objc_msgSend(v5, sel_displayScale);
  uint64_t v7 = CGFloat.rounded(_:toScale:)(a1, v6, a3);

  return v7;
}

double CGFloat.rounded(_:toScale:)(uint64_t a1, double a2, double a3)
{
  uint64_t v6 = sub_240BB7AC0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = a2 * a3;
  double v16 = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v11 == *MEMORY[0x263F8E210])
  {
    double v12 = round(v10);
  }
  else if (v11 == *MEMORY[0x263F8E208])
  {
    double v12 = rint(v10);
  }
  else if (v11 == *MEMORY[0x263F8E218])
  {
    double v12 = ceil(v10);
  }
  else if (v11 == *MEMORY[0x263F8E220])
  {
    double v12 = floor(v10);
  }
  else if (v11 == *MEMORY[0x263F8E1F8])
  {
    double v12 = trunc(v10);
  }
  else if (v11 == *MEMORY[0x263F8E200])
  {
    double v12 = ceil(v10);
    double v13 = floor(v10);
    if (v10 < 0.0) {
      double v12 = v13;
    }
  }
  else
  {
    sub_240BB7010();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    double v12 = v16;
  }
  return v12 / a2;
}

void *CGSize.maxSize.unsafeMutableAddressor()
{
  return &static CGSize.maxSize;
}

double static CGSize.maxSize.getter()
{
  return 1.79769313e308;
}

void sub_240B42F60()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_240BB39A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  double v5 = (char *)&aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x263F43958])
  {
    uint64_t v7 = self;
    id v8 = objc_msgSend(v7, sel_sharedInstance);
    if (!v8)
    {
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    unint64_t v9 = v8;
    double v10 = (uint64_t (*)())objc_msgSend(v7, sel_activePairedDeviceSelectorBlock);
    if (v10)
    {
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v10;
      uint64_t v12 = swift_allocObject();
      double v10 = sub_240B434C4;
      *(void *)(v12 + 16) = sub_240B434C4;
      *(void *)(v12 + 24) = v11;
      id v29 = sub_240B434FC;
      uint64_t v30 = v12;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v26 = 1107296256;
      uint64_t v27 = sub_240B43528;
      uint64_t v28 = &unk_26F508E80;
      double v13 = _Block_copy(&aBlock);
      swift_release();
    }
    else
    {
      double v13 = 0;
    }
    id v20 = objc_msgSend(v9, sel_getAllDevicesWithArchivedDevicesMatching_, v13);
    sub_240A87A1C((uint64_t)v10);
    _Block_release(v13);

    if (!v20) {
      goto LABEL_32;
    }
    sub_240B4344C();
    unint64_t v16 = sub_240BB6F10();

    if (v16 >> 62)
    {
      sub_240BB4850();
      uint64_t v23 = sub_240BB7900();
      swift_bridgeObjectRelease();
      if (!v23) {
        goto LABEL_24;
      }
    }
    else if (!*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_24;
    }
    if ((v16 & 0xC000000000000001) != 0) {
      goto LABEL_27;
    }
    if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_23:
      id v22 = *(id *)(v16 + 32);
      goto LABEL_24;
    }
    __break(1u);
  }
  else
  {
    if (v6 != *MEMORY[0x263F43960])
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return;
    }
    uint64_t v14 = self;
    uint64_t v15 = (id *)objc_msgSend(v14, sel_sharedInstance);
    if (!v15) {
      goto LABEL_33;
    }
    unint64_t v16 = (unint64_t)v15;
    double v10 = (uint64_t (*)())objc_msgSend(v14, sel_activeDeviceSelectorBlock);
    if (v10)
    {
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = v10;
      uint64_t v18 = swift_allocObject();
      double v10 = sub_240B43590;
      *(void *)(v18 + 16) = sub_240B43590;
      *(void *)(v18 + 24) = v17;
      id v29 = sub_240B43594;
      uint64_t v30 = v18;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v26 = 1107296256;
      uint64_t v27 = sub_240B43528;
      uint64_t v28 = &unk_26F508EF8;
      unint64_t v19 = _Block_copy(&aBlock);
      swift_release();
      goto LABEL_18;
    }
  }
  unint64_t v19 = 0;
LABEL_18:
  id v21 = objc_msgSend((id)v16, sel_getAllDevicesWithArchivedDevicesMatching_, v19);
  sub_240A87A1C((uint64_t)v10);
  _Block_release(v19);

  if (v21)
  {
    sub_240B4344C();
    unint64_t v16 = sub_240BB6F10();

    if (v16 >> 62)
    {
      sub_240BB4850();
      uint64_t v24 = sub_240BB7900();
      swift_bridgeObjectRelease();
      if (!v24) {
        goto LABEL_24;
      }
LABEL_21:
      if ((v16 & 0xC000000000000001) == 0)
      {
        if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_23;
        }
        __break(1u);
        goto LABEL_31;
      }
LABEL_27:
      MEMORY[0x24560AAA0](0, v16);
      goto LABEL_24;
    }
    if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_21;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_34:
  __break(1u);
}

unint64_t sub_240B4344C()
{
  unint64_t result = qword_268CA14E8;
  if (!qword_268CA14E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268CA14E8);
  }
  return result;
}

uint64_t sub_240B4348C()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B434C4()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_240B434EC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B434FC()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_240B43528(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = *(uint64_t (**)(void *))(a1 + 32);
  id v4 = a2;
  LOBYTE(v2) = v3(v2);

  return v2 & 1;
}

uint64_t sub_240B43574()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B43598()
{
  uint64_t result = sub_240BB6DA0();
  qword_26AFDEAE8 = result;
  return result;
}

uint64_t sub_240B435D0()
{
  uint64_t result = sub_240BB6DA0();
  qword_26AFDEAF0 = result;
  return result;
}

void sub_240B43608()
{
  qword_268CA2AD0 = 0x402C000000000000;
}

void sub_240B43618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = *(void *)(a3 + 16);
  if (v4)
  {
    double v5 = (void *)(a3 + 32);
    sub_240BB4850();
    double v6 = 0.0;
    uint64_t v7 = v4;
    do
    {
      sub_240A3466C(v5, v5[3]);
      sub_240BB3EB0();
      double Height = CGRectGetHeight(v15);
      if (qword_268C9E700 != -1) {
        swift_once();
      }
      double v6 = v6 + Height + *(double *)&qword_268CA2AD0;
      v5 += 11;
      --v7;
    }
    while (v7);
    uint64_t v3 = a3;
    swift_bridgeObjectRelease();
  }
  else
  {
    double v6 = 0.0;
  }
  sub_240BB3CD0();
  if (CGRectGetHeight(v16) - v6 >= 0.0)
  {
    if (v4)
    {
      uint64_t v10 = v3 + 32;
      sub_240BB4850();
      do
      {
        sub_240B43D68(v10, (uint64_t)v12);
        sub_240A3466C(v12, v13);
        sub_240BB3EB0();
        CGRectGetHeight(v17);
        sub_240BB3CC0();
        sub_240BB3C60();
        sub_240BB3C60();
        CGRectGetWidth(v18);
        sub_240BB3C70();
        sub_240A3466C(v12, v13);
        sub_240BB3EC0();
        sub_240A3466C(v14, v14[3]);
        sub_240BB3EC0();
        sub_240BB3CB0();
        if (qword_268C9E700 != -1) {
          swift_once();
        }
        sub_240BB3CB0();
        swift_release();
        sub_240B43DA0((uint64_t)v12);
        v10 += 88;
        --v4;
      }
      while (v4);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    sub_240A3FB28();
    sub_240A395FC(v9, (uint64_t)qword_26AFDEB68);
    v12[0] = 0;
    sub_240BB5730();
  }
}

uint64_t sub_240B4392C()
{
  return 0;
}

double sub_240B439D4(uint64_t a1, uint64_t a2)
{
  sub_240BB3CD0();
  double v4 = v3;
  sub_240BB3CD0();
  CGRectGetWidth(v10);
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5)
  {
    double v6 = (void *)(a2 + 32);
    sub_240BB4850();
    double v7 = 0.0;
    do
    {
      sub_240A3466C(v6, v6[3]);
      sub_240BB3EB0();
      double Height = CGRectGetHeight(v11);
      if (qword_268C9E700 != -1) {
        swift_once();
      }
      double v7 = v7 + Height + *(double *)&qword_268CA2AD0;
      v6 += 11;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  return v4;
}

void sub_240B43B08(uint64_t a1, uint64_t a2)
{
  sub_240B43618(a1, a2, *v2);
}

uint64_t sub_240B43B14()
{
  return sub_240BB3CD0();
}

double sub_240B43B38(uint64_t a1)
{
  return sub_240B439D4(a1, *v1);
}

uint64_t sub_240B43B40(uint64_t a1)
{
  double v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  unint64_t v4 = sub_240AF3918();
  *double v3 = v1;
  v3[1] = sub_240A524D4;
  return MEMORY[0x270F33478](a1, v4);
}

double sub_240B43BEC(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v15 = MEMORY[0x263F8EE78];
    sub_240B0CC24(0, v2, 0);
    uint64_t v3 = a1 + 32;
    uint64_t v4 = v15;
    do
    {
      sub_240B43D68(v3, (uint64_t)v14);
      uint64_t v5 = v14[10];
      sub_240B43DA0((uint64_t)v14);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_240B0CC24(0, *(void *)(v4 + 16) + 1, 1);
        uint64_t v4 = v15;
      }
      unint64_t v7 = *(void *)(v4 + 16);
      unint64_t v6 = *(void *)(v4 + 24);
      unint64_t v8 = v7 + 1;
      if (v7 >= v6 >> 1)
      {
        sub_240B0CC24(v6 > 1, v7 + 1, 1);
        uint64_t v4 = v15;
      }
      *(void *)(v4 + 16) = v8;
      *(void *)(v4 + 8 * v7 + 32) = v5;
      v3 += 88;
      --v2;
    }
    while (v2);
  }
  else
  {
    uint64_t v4 = MEMORY[0x263F8EE78];
    unint64_t v8 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (!v8)
    {
      double v10 = 0.0;
      goto LABEL_18;
    }
  }
  if (v8 >= 2)
  {
    uint64_t v11 = 0;
    unint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    double v10 = 0.0;
    do
    {
      double v10 = v10 + *(double *)(v4 + 8 * v11 + 32) + *(double *)(v4 + 8 * v11 + 40);
      v11 += 2;
    }
    while (v9 != v11);
    goto LABEL_17;
  }
  unint64_t v9 = 0;
  double v10 = 0.0;
  do
  {
    double v12 = *(double *)(v4 + 8 * v9++ + 32);
    double v10 = v10 + v12;
LABEL_17:
    ;
  }
  while (v8 != v9);
LABEL_18:
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_240B43D68(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_240B43DA0(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithCopy for AFibBurdenPDFChartPage.Element(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

uint64_t *assignWithCopy for AFibBurdenPDFChartPage.Element(uint64_t *a1, uint64_t *a2)
{
  a1[10] = a2[10];
  return a1;
}

uint64_t assignWithTake for AFibBurdenPDFChartPage.Element(uint64_t a1, uint64_t a2)
{
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for AFibBurdenPDFChartPage.Element(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AFibBurdenPDFChartPage.Element(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFChartPage.Element()
{
  return &type metadata for AFibBurdenPDFChartPage.Element;
}

void *initializeBufferWithCopyOfBuffer for AFibBurdenPDFChartPage(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_240BB4850();
  return a1;
}

uint64_t destroy for AFibBurdenPDFChartPage()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for AFibBurdenPDFChartPage(void *a1, void *a2)
{
  *a1 = *a2;
  sub_240BB4850();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

void *assignWithTake for AFibBurdenPDFChartPage(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for AFibBurdenPDFChartPage(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AFibBurdenPDFChartPage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFChartPage()
{
  return &type metadata for AFibBurdenPDFChartPage;
}

unint64_t sub_240B44134()
{
  unint64_t result = qword_268CA14F8;
  if (!qword_268CA14F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA14F8);
  }
  return result;
}

unint64_t sub_240B44188()
{
  unint64_t result = qword_268CA1500;
  if (!qword_268CA1500)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CA1500);
  }
  return result;
}

uint64_t sub_240B441C8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Heart31HeartPromotionGeneratorPipeline_domain;
  uint64_t v2 = sub_240BB3240();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_240B44278()
{
  return type metadata accessor for HeartPromotionGeneratorPipeline();
}

uint64_t sub_240B44280()
{
  uint64_t v1 = sub_240BB32A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

unint64_t sub_240B44330()
{
  unint64_t result = qword_26AFD8CB0;
  if (!qword_26AFD8CB0)
  {
    sub_240A3BD48(255, &qword_26AFD89E8, &qword_26AFD8B08, (uint64_t)&type metadata for HeartPromotionResult, &qword_26AFD8B00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD8CB0);
  }
  return result;
}

unint64_t sub_240B443AC()
{
  unint64_t result = qword_26AFD8CB8;
  if (!qword_26AFD8CB8)
  {
    sub_240A3BD48(255, &qword_26AFD89F0, &qword_26AFD8B18, (uint64_t)&type metadata for HeartFeaturePromotionResult, &qword_26AFD8B10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD8CB8);
  }
  return result;
}

uint64_t sub_240B44428()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B44460(uint64_t a1)
{
  return sub_240B44560(0.88, a1, &qword_268CA2AE0);
}

double sub_240B44474()
{
  sub_240BB64B0();
  double result = *(double *)&v1;
  xmmword_268CA2AE8 = v1;
  *(_OWORD *)&qword_268CA2AF8 = v2;
  qword_268CA2B08 = v3;
  return result;
}

double sub_240B444D0()
{
  sub_240B448A0();
  uint64_t v0 = swift_allocObject();
  __asm { FMOV            V1.2D, #2.0 }
  *(_OWORD *)(v0 + 16) = xmmword_240BBAE40;
  *(_OWORD *)(v0 + 32) = _Q1;
  sub_240BB64B0();
  double result = *(double *)&v7;
  xmmword_268CA2B10 = v7;
  *(_OWORD *)&qword_268CA2B20 = v8;
  qword_268CA2B30 = v9;
  return result;
}

uint64_t sub_240B4454C(uint64_t a1)
{
  return sub_240B44560(0.290196078, a1, &qword_268CA2B38);
}

uint64_t sub_240B44560(double a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_240BB69C0();
  MEMORY[0x270FA5388](v5);
  long long v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void))(v8 + 104))(v7, *MEMORY[0x263F1B388]);
  uint64_t result = MEMORY[0x245609C90](v7, a1, a1, a1, 1.0);
  *a3 = result;
  return result;
}

uint64_t sub_240B44644(uint64_t a1)
{
  return sub_240B446C0(a1, MEMORY[0x263F1A640], MEMORY[0x263F1A608], &qword_268CA2B40);
}

void sub_240B4466C()
{
  qword_268CA2B48 = 0x4000000000000000;
}

double sub_240B4467C()
{
  double result = 5.0;
  xmmword_268CA2B50 = xmmword_240BC3270;
  qword_268CA2B60 = 0;
  unk_268CA2B68 = 0;
  return result;
}

uint64_t sub_240B44698(uint64_t a1)
{
  return sub_240B446C0(a1, MEMORY[0x263F1A628], MEMORY[0x263F1A610], &qword_268CA2B70);
}

uint64_t sub_240B446C0(uint64_t a1, void (*a2)(uint64_t), unsigned int *a3, uint64_t *a4)
{
  sub_240B447EC();
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(v8);
  uint64_t v11 = *a3;
  uint64_t v12 = sub_240BB6840();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 104))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  uint64_t v14 = sub_240BB6860();
  uint64_t result = sub_240B44844((uint64_t)v10);
  *a4 = v14;
  return result;
}

void sub_240B447EC()
{
  if (!qword_268CA1508)
  {
    sub_240BB6840();
    unint64_t v0 = sub_240BB75E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA1508);
    }
  }
}

uint64_t sub_240B44844(uint64_t a1)
{
  sub_240B447EC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_240B448A0()
{
  if (!qword_268CA1510)
  {
    unint64_t v0 = sub_240BB7AB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA1510);
    }
  }
}

ValueMetadata *type metadata accessor for AFibBurdenFooterProvider()
{
  return &type metadata for AFibBurdenFooterProvider;
}

uint64_t sub_240B44908()
{
  sub_240BB3D50();
  unint64_t v0 = (void *)sub_240BB3D40();
  id v1 = objc_msgSend(v0, sel_CGColor);

  uint64_t v8 = sub_240BB4680();
  uint64_t v9 = MEMORY[0x263F440B0];
  sub_240A23B08(v7);
  sub_240BB4670();
  uint64_t v2 = sub_240BB4360();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v7);
  uint64_t v8 = sub_240BB40A0();
  uint64_t v9 = MEMORY[0x263F43E08];
  sub_240A23B08(v7);
  sub_240BB40B0();
  uint64_t v3 = sub_240BB4360();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v7);
  sub_240B44B6C(0, &qword_268CA0C00, (uint64_t (*)(uint64_t))sub_240B2A658, MEMORY[0x263F8E0F8]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_240BBAE40;
  *(void *)(v4 + 32) = v2;
  *(void *)(v4 + 40) = v3;
  uint64_t v5 = MEMORY[0x245607600]();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_240B44A58()
{
  return MEMORY[0x270FA2498](sub_240B44A74, 0, 0);
}

uint64_t sub_240B44A74()
{
  sub_240B44B6C(0, &qword_268CA0C30, (uint64_t (*)(uint64_t))sub_240B2A6F0, MEMORY[0x263F8E0F8]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_240BB97E0;
  uint64_t v2 = sub_240BB5640();
  uint64_t v3 = MEMORY[0x263F448B8];
  *(void *)(v1 + 56) = v2;
  *(void *)(v1 + 64) = v3;
  sub_240A23B08((uint64_t *)(v1 + 32));
  sub_240BB5630();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v4(v1);
}

void sub_240B44B6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

id sub_240B44BD0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_240BB7590();
  uint64_t v52 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v50 - v6;
  uint64_t v8 = sub_240BB2B20();
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v53 + 64);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v50 - v12;
  uint64_t v14 = type metadata accessor for ResultItem.BodyItem();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (void *)((char *)v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_240B46E00(v1, (uint64_t)v16);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v26 = v16[3];
      id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
      objc_msgSend(v25, sel_setAdjustsFontForContentSizeCategory_, 1);
      uint64_t v27 = self;
      sub_240BB6DE0();
      uint64_t v28 = (void *)sub_240BB6DA0();
      swift_bridgeObjectRelease();
      id v29 = objc_msgSend(v27, sel_hk_preferredFontForTextStyle_, v28);
      goto LABEL_5;
    case 2u:
      uint64_t v26 = v16[3];
      id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
      objc_msgSend(v25, sel_setAdjustsFontForContentSizeCategory_, 1);
      uint64_t v30 = self;
      sub_240BB6DE0();
      uint64_t v28 = (void *)sub_240BB6DA0();
      swift_bridgeObjectRelease();
      id v29 = objc_msgSend(v30, sel_hk_preferredFontForTextStyle_symbolicTraits_, v28, 2);
LABEL_5:
      id v31 = v29;

      objc_msgSend(v25, sel_setFont_, v31);
      objc_msgSend(v25, sel_setNumberOfLines_, 0);
      uint64_t v32 = (void *)sub_240BB6DA0();
      objc_msgSend(v25, sel_setText_, v32);

      id v33 = v25;
      if (v26)
      {
        sub_240BB4850();
        id v34 = (void *)sub_240BB6DA0();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        id v34 = 0;
      }
      swift_bridgeObjectRelease();
      objc_msgSend(v25, sel_setAccessibilityIdentifier_, v34);

      break;
    case 3u:
      uint64_t v35 = *v16;
      v50[3] = v16[1];
      v50[4] = v35;
      v50[1] = v16[2];
      uint64_t v51 = v16[3];
      sub_240B46E64();
      uint64_t v37 = (char *)v16 + *(int *)(v36 + 48);
      uint64_t v38 = v53;
      uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
      v39(v13, v37, v8);
      void v50[2] = sub_240A34DC4(0, &qword_268C9F9B0);
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v11, v13, v8);
      unint64_t v40 = (*(unsigned __int8 *)(v38 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
      uint64_t v41 = swift_allocObject();
      v39((char *)(v41 + v40), v11, v8);
      uint64_t v42 = (void *)sub_240BB7520();
      sub_240BB7570();
      sub_240BB4850();
      sub_240BB7580();
      sub_240BB7540();
      sub_240A34DC4(0, &qword_268CA1598);
      uint64_t v43 = v52;
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v5, v7, v2);
      id v44 = v42;
      uint64_t v45 = v51;
      id v25 = (id)sub_240BB75A0();
      if (objc_msgSend(v25, sel_effectiveUserInterfaceLayoutDirection) == (id)1) {
        uint64_t v46 = 2;
      }
      else {
        uint64_t v46 = 1;
      }
      objc_msgSend(v25, sel_setContentHorizontalAlignment_, v46);
      id v47 = v25;
      if (v45)
      {
        sub_240BB4850();
        uint64_t v48 = (void *)sub_240BB6DA0();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        uint64_t v48 = 0;
      }
      swift_bridgeObjectRelease();
      objc_msgSend(v25, sel_setAccessibilityIdentifier_, v48);

      (*(void (**)(char *, uint64_t))(v43 + 8))(v7, v2);
      (*(void (**)(char *, uint64_t))(v53 + 8))(v13, v8);
      break;
    default:
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      uint64_t v20 = v16[2];
      uint64_t v19 = v16[3];
      id v21 = (objc_class *)type metadata accessor for BulletedLabelView();
      id v22 = (char *)objc_allocWithZone(v21);
      *(void *)&v22[OBJC_IVAR____TtC5Heart17BulletedLabelView____lazy_storage___bulletLabel] = 0;
      *(void *)&v22[OBJC_IVAR____TtC5Heart17BulletedLabelView____lazy_storage___textLabel] = 0;
      *(void *)&v22[OBJC_IVAR____TtC5Heart17BulletedLabelView____lazy_storage___stackView] = 0;
      uint64_t v23 = &v22[OBJC_IVAR____TtC5Heart17BulletedLabelView_text];
      *(void *)uint64_t v23 = v18;
      *((void *)v23 + 1) = v17;
      uint64_t v24 = &v22[OBJC_IVAR____TtC5Heart17BulletedLabelView_textAccessibilityIdentifier];
      *(void *)uint64_t v24 = v20;
      *((void *)v24 + 1) = v19;
      v54.receiver = v22;
      v54.super_class = v21;
      sub_240BB4850();
      sub_240BB4850();
      id v25 = objc_msgSendSuper2(&v54, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
      sub_240A8BB74();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      break;
  }
  return v25;
}

void sub_240B452C0()
{
  id v0 = objc_msgSend(self, sel_sharedApplication);
  uint64_t v1 = (void *)sub_240BB2AF0();
  sub_240AB85C8(MEMORY[0x263F8EE78]);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_240B46FCC();
  id v2 = (id)sub_240BB6D20();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_openURL_options_completionHandler_, v1, v2, 0);
}

id sub_240B4539C(uint64_t a1)
{
  return sub_240B462B4(a1, (SEL *)&selRef_labelColor, &qword_268CA1520);
}

uint64_t sub_240B453B0()
{
  sub_240A34DC4(0, (unint64_t *)&qword_268C9EEE0);
  uint64_t result = sub_240BB7470();
  qword_268CA1528 = result;
  return result;
}

id sub_240B45418(uint64_t a1)
{
  return sub_240B462B4(a1, (SEL *)&selRef_labelColor, &qword_268CA1530);
}

id sub_240B4542C()
{
  id result = objc_msgSend(self, sel__preferredFontForTextStyle_variant_, *MEMORY[0x263F83618], 1280);
  if (result) {
    qword_268CA1538 = (uint64_t)result;
  }
  else {
    __break(1u);
  }
  return result;
}

id sub_240B45480()
{
  return sub_240B45A3C(&OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___titleLabel, (uint64_t (*)(uint64_t))sub_240B454A0);
}

id sub_240B454A0(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  uint64_t v3 = a1 + OBJC_IVAR____TtC5Heart14ResultItemView_resultItem;
  sub_240BB4850();
  uint64_t v4 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setText_, v4);

  if (qword_268C9E760 != -1) {
    swift_once();
  }
  objc_msgSend(v2, sel_setFont_, qword_268CA1538);
  if (qword_268C9E758 != -1) {
    swift_once();
  }
  objc_msgSend(v2, sel_setTextColor_, qword_268CA1530);
  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  if (*(void *)(v3 + 24))
  {
    id v5 = v2;
    sub_240BB4850();
    uint64_t v6 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v7 = v2;
    uint64_t v6 = 0;
  }
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v6);

  return v2;
}

id sub_240B45650()
{
  return sub_240B45A3C(&OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___descriptionLabel, (uint64_t (*)(uint64_t))sub_240B45670);
}

id sub_240B45670(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  uint64_t v3 = a1 + OBJC_IVAR____TtC5Heart14ResultItemView_resultItem;
  sub_240BB4850();
  uint64_t v4 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setText_, v4);

  if (qword_268C9E750 != -1) {
    swift_once();
  }
  objc_msgSend(v2, sel_setFont_, qword_268CA1528);
  if (qword_268C9E748 != -1) {
    swift_once();
  }
  objc_msgSend(v2, sel_setTextColor_, qword_268CA1520);
  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  if (*(void *)(v3 + 56))
  {
    id v5 = v2;
    sub_240BB4850();
    uint64_t v6 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v7 = v2;
    uint64_t v6 = 0;
  }
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v6);

  return v2;
}

id sub_240B45820()
{
  uint64_t v1 = OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___itemView;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___itemView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___itemView);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_init);
    id v6 = objc_msgSend(v5, sel_heightAnchor);
    id v7 = objc_msgSend(v6, sel_constraintEqualToConstant_, 165.0);

    objc_msgSend(v5, sel_addConstraint_, v7);
    uint64_t v8 = *(void **)(v4 + OBJC_IVAR____TtC5Heart14ResultItemView_resultItem + 88);
    objc_msgSend(v5, sel_addSubview_, v8);
    id v9 = (id)*MEMORY[0x263F15A20];
    sub_240BB7490();

    objc_msgSend(v8, sel_hk_alignConstraintsWithView_, v5);
    uint64_t v10 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v5;
    id v3 = v5;

    id v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id sub_240B45958()
{
  uint64_t v1 = OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___bodyStackView;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___bodyStackView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___bodyStackView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BF8]), sel_init);
    objc_msgSend(v4, sel_setAlignment_, 0);
    objc_msgSend(v4, sel_setAxis_, 1);
    objc_msgSend(v4, sel_setSpacing_, 12.0);
    objc_msgSend(v4, sel_setHidden_, 1);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_240B45A1C()
{
  return sub_240B45A3C(&OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___learnMoreButton, (uint64_t (*)(uint64_t))sub_240B45AA0);
}

id sub_240B45A3C(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2(v2);
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

void *sub_240B45AA0(char *a1)
{
  uint64_t v2 = sub_240BB7590();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  id v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  id v8 = (char *)&v18 - v7;
  sub_240A34DC4(0, &qword_268C9F9B0);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v9 = (void *)sub_240BB7520();
  sub_240BB7570();
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  sub_240BB2980();
  sub_240BB7580();
  sub_240BB7540();
  sub_240A34DC4(0, &qword_268CA1598);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  id v10 = v9;
  id v11 = (void *)sub_240BB75A0();
  if (objc_msgSend(a1, sel_effectiveUserInterfaceLayoutDirection) == (id)1) {
    uint64_t v12 = 2;
  }
  else {
    uint64_t v12 = 1;
  }
  objc_msgSend(v11, sel_setContentHorizontalAlignment_, v12);
  uint64_t v13 = &a1[OBJC_IVAR____TtC5Heart14ResultItemView_resultItem];
  objc_msgSend(v11, sel_setHidden_, *(void *)(*((void *)v13 + 8) + 16) == 0);
  if (*((void *)v13 + 10))
  {
    id v14 = v11;
    sub_240BB4850();
    uint64_t v15 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v16 = v11;
    uint64_t v15 = 0;
  }
  objc_msgSend(v11, sel_setAccessibilityIdentifier_, v15);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  return v11;
}

void sub_240B45DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x24560BA20](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    id v5 = sub_240B45958();
    objc_msgSend(v5, sel_setHidden_, 0);

    id v6 = (void *)sub_240B45A1C();
    objc_msgSend(v6, sel_setHidden_, 1);
  }
}

id sub_240B45E44()
{
  return sub_240B46308(&OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___stackView, 12.0);
}

void sub_240B45E7C()
{
  uint64_t v1 = v0;
  id v2 = sub_240B45E44();
  id v3 = sub_240B45480();
  objc_msgSend(v2, sel_addArrangedSubview_, v3);

  id v4 = sub_240B45E44();
  id v5 = sub_240B45480();
  objc_msgSend(v4, sel_setCustomSpacing_afterView_, v5, 10.0);

  id v6 = sub_240B45E44();
  id v7 = sub_240B45820();
  objc_msgSend(v6, sel_addArrangedSubview_, v7);

  id v8 = sub_240B45E44();
  id v9 = sub_240B45650();
  objc_msgSend(v8, sel_addArrangedSubview_, v9);

  id v10 = sub_240B45E44();
  id v11 = sub_240B45958();
  objc_msgSend(v10, sel_addArrangedSubview_, v11);

  id v12 = sub_240B45E44();
  id v13 = sub_240B45A1C();
  objc_msgSend(v12, sel_addArrangedSubview_, v13);

  id v14 = sub_240B45E44();
  objc_msgSend(v1, sel_addSubview_, v14);

  id v15 = sub_240B45E44();
  objc_msgSend(v15, sel_hk_alignConstraintsWithView_, v1);

  uint64_t v16 = *(void *)&v1[OBJC_IVAR____TtC5Heart14ResultItemView_resultItem + 64];
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    uint64_t v18 = *(void *)(type metadata accessor for ResultItem.BodyItem() - 8);
    uint64_t v19 = v16 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    uint64_t v20 = *(void *)(v18 + 72);
    sub_240BB4850();
    do
    {
      id v21 = sub_240B45958();
      id v22 = sub_240B44BD0();
      objc_msgSend(v21, sel_addArrangedSubview_, v22);

      v19 += v20;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
  }
}

id sub_240B46174()
{
  return sub_240B46A68(type metadata accessor for ResultItemView);
}

uint64_t type metadata accessor for ResultItemView()
{
  return self;
}

id sub_240B462A0(uint64_t a1)
{
  return sub_240B462B4(a1, (SEL *)&selRef_quaternaryLabelColor, &qword_268CA1540);
}

id sub_240B462B4(uint64_t a1, SEL *a2, void *a3)
{
  id result = [self *a2];
  *a3 = result;
  return result;
}

id sub_240B462F8()
{
  return sub_240B46308(&OBJC_IVAR____TtC5Heart21ListOfResultItemsView____lazy_storage___stackView, 30.0);
}

id sub_240B46308(uint64_t *a1, double a2)
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BF8]), sel_init);
    objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v7, sel_setAlignment_, 0);
    objc_msgSend(v7, sel_setAxis_, 1);
    objc_msgSend(v7, sel_setSpacing_, a2);
    id v8 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v7;
    id v5 = v7;

    id v4 = 0;
  }
  id v9 = v4;
  return v5;
}

void *sub_240B463D4(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC5Heart21ListOfResultItemsView____lazy_storage___stackView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Heart21ListOfResultItemsView_resultItems] = a1;
  v46.receiver = v1;
  v46.super_class = (Class)type metadata accessor for ListOfResultItemsView();
  uint64_t v2 = (char *)objc_msgSendSuper2(&v46, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)&v2[OBJC_IVAR____TtC5Heart21ListOfResultItemsView_resultItems];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    id v33 = v2;
    v2;
    sub_240BB4850();
    uint64_t v6 = 0;
    uint64_t v34 = v4;
    do
    {
      uint64_t v42 = v5;
      uint64_t v20 = *(void *)(v4 + v6 + 40);
      uint64_t v21 = *(void *)(v4 + v6 + 56);
      uint64_t v38 = *(void *)(v4 + v6 + 48);
      uint64_t v39 = *(void *)(v4 + v6 + 32);
      uint64_t v22 = *(void *)(v4 + v6 + 72);
      uint64_t v23 = *(void *)(v4 + v6 + 88);
      uint64_t v36 = *(void *)(v4 + v6 + 80);
      uint64_t v37 = *(void *)(v4 + v6 + 64);
      uint64_t v24 = *(void *)(v4 + v6 + 96);
      uint64_t v35 = *(void *)(v4 + v6 + 104);
      uint64_t v25 = *(void *)(v4 + v6 + 112);
      uint64_t v26 = *(void **)(v4 + v6 + 120);
      sub_240BB4850();
      id v27 = v26;
      uint64_t v41 = v20;
      sub_240BB4850();
      sub_240BB4850();
      sub_240BB4850();
      sub_240BB4850();
      sub_240BB4850();
      uint64_t v40 = v6;
      if (v6)
      {
        id v28 = sub_240B462F8();
        if (qword_268C9E768 != -1) {
          swift_once();
        }
        id v7 = (void *)qword_268CA1540;
        id v8 = objc_allocWithZone(MEMORY[0x263F82E00]);
        id v9 = v7;
        id v10 = objc_msgSend(v8, sel_init);
        objc_msgSend(v10, sel_setBackgroundColor_, v9);

        sub_240A34DC4(0, (unint64_t *)&qword_268CA2490);
        v44[3] = sub_240A34DC4(0, (unint64_t *)&qword_268CA00D8);
        v44[0] = v10;
        memset(v43, 0, sizeof(v43));
        id v11 = v10;
        id v12 = sub_240B4686C(v44, 8, 0, v43, 0, 1.0, 1.0);
        objc_msgSend(v11, sel_addConstraint_, v12);

        objc_msgSend(v28, sel_addArrangedSubview_, v11);
        uint64_t v4 = v34;
      }
      id v13 = (objc_class *)type metadata accessor for ResultItemView();
      id v14 = (char *)objc_allocWithZone(v13);
      *(void *)&v14[OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___titleLabel] = 0;
      *(void *)&v14[OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___descriptionLabel] = 0;
      *(void *)&v14[OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___itemView] = 0;
      *(void *)&v14[OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___bodyStackView] = 0;
      *(void *)&v14[OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___learnMoreButton] = 0;
      *(void *)&v14[OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___stackView] = 0;
      id v15 = &v14[OBJC_IVAR____TtC5Heart14ResultItemView_resultItem];
      *(void *)id v15 = v39;
      *((void *)v15 + 1) = v41;
      *((void *)v15 + 2) = v38;
      *((void *)v15 + 3) = v21;
      *((void *)v15 + 4) = v37;
      *((void *)v15 + 5) = v22;
      *((void *)v15 + 6) = v36;
      *((void *)v15 + 7) = v23;
      *((void *)v15 + 8) = v24;
      *((void *)v15 + 9) = v35;
      *((void *)v15 + 10) = v25;
      *((void *)v15 + 11) = v27;
      v45.receiver = v14;
      v45.super_class = v13;
      sub_240BB4850();
      sub_240BB4850();
      sub_240BB4850();
      sub_240BB4850();
      sub_240BB4850();
      sub_240BB4850();
      id v16 = v27;
      uint64_t v17 = v4;
      id v18 = objc_msgSendSuper2(&v45, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
      sub_240B45E7C();
      id v19 = sub_240B462F8();
      objc_msgSend(v19, sel_addArrangedSubview_, v18);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t v4 = v17;
      uint64_t v6 = v40 + 96;
      uint64_t v5 = v42 - 1;
    }
    while (v42 != 1);
    swift_bridgeObjectRelease();
    uint64_t v3 = v33;
  }
  else
  {
    id v29 = v2;
  }
  id v30 = sub_240B462F8();
  objc_msgSend(v3, sel_addSubview_, v30);

  id v31 = sub_240B462F8();
  objc_msgSend(v31, sel_hk_alignConstraintsWithView_, v3);

  return v3;
}

id sub_240B4686C(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, double a6, double a7)
{
  sub_240A3466C(a1, a1[3]);
  uint64_t v14 = sub_240BB7AD0();
  uint64_t v15 = a4[3];
  if (v15)
  {
    id v16 = sub_240A3466C(a4, a4[3]);
    uint64_t v24 = a5;
    uint64_t v25 = a2;
    uint64_t v17 = a3;
    uint64_t v18 = *(void *)(v15 - 8);
    MEMORY[0x270FA5388](v16);
    uint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v18 + 16))(v20);
    uint64_t v21 = sub_240BB7AD0();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v15);
    a3 = v17;
    a5 = v24;
    a2 = v25;
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a4);
  }
  else
  {
    uint64_t v21 = 0;
  }
  id v22 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_, v14, a2, a3, v21, a5, a6, a7);
  sub_240BB50A0();
  sub_240BB50A0();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  return v22;
}

id sub_240B46A50()
{
  return sub_240B46A68(type metadata accessor for ListOfResultItemsView);
}

id sub_240B46A68(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for ListOfResultItemsView()
{
  return self;
}

void destroy for ResultItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 88);
}

void *initializeWithCopy for ResultItem(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  id v8 = (void *)a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  sub_240BB4850();
  sub_240BB4850();
  sub_240BB4850();
  sub_240BB4850();
  sub_240BB4850();
  sub_240BB4850();
  id v9 = v8;
  return a1;
}

void *assignWithCopy for ResultItem(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[11];
  uint64_t v5 = (void *)a1[11];
  a1[11] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for ResultItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)(a1 + 88);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);

  return a1;
}

ValueMetadata *type metadata accessor for ResultItem()
{
  return &type metadata for ResultItem;
}

uint64_t type metadata accessor for ResultItem.BodyItem()
{
  uint64_t result = qword_268CA15A0;
  if (!qword_268CA15A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240B46E00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ResultItem.BodyItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_240B46E64()
{
  if (!qword_268CA1590)
  {
    sub_240BB2B20();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CA1590);
    }
  }
}

uint64_t sub_240B46ECC()
{
  uint64_t v1 = sub_240BB2B20();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

void sub_240B46F5C()
{
  sub_240BB2B20();

  sub_240B452C0();
}

unint64_t sub_240B46FCC()
{
  unint64_t result = qword_268C9EA38;
  if (!qword_268C9EA38)
  {
    type metadata accessor for OpenExternalURLOptionsKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9EA38);
  }
  return result;
}

uint64_t sub_240B47024()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_240B4705C(uint64_t a1)
{
  sub_240B45DB8(a1, v1);
}

void sub_240B47064()
{
  *(void *)&v0[OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___titleLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___descriptionLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___itemView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___bodyStackView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___learnMoreButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___stackView] = 0;

  sub_240BB78D0();
  __break(1u);
}

uint64_t *sub_240B4710C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
        uint64_t v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        uint64_t v8 = a2[3];
        a1[2] = a2[2];
        a1[3] = v8;
        sub_240B46E64();
        uint64_t v10 = *(int *)(v9 + 48);
        id v11 = (char *)a1 + v10;
        id v12 = (char *)a2 + v10;
        uint64_t v13 = sub_240BB2B20();
        uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
        sub_240BB4850();
        sub_240BB4850();
        v14(v11, v12, v13);
        break;
      default:
        uint64_t v15 = a2[1];
        *a1 = *a2;
        a1[1] = v15;
        uint64_t v16 = a2[2];
        uint64_t v17 = a2[3];
        a1[2] = v16;
        a1[3] = v17;
        sub_240BB4850();
        sub_240BB4850();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_240B472F0(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_240B46E64();
      uint64_t v4 = a1 + *(int *)(v3 + 48);
      uint64_t v5 = sub_240BB2B20();
      uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      uint64_t result = v6(v4, v5);
      break;
    default:
      return result;
  }
  return result;
}

void *sub_240B473E8(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    sub_240B46E64();
    uint64_t v10 = *(int *)(v9 + 48);
    id v11 = (char *)a1 + v10;
    id v12 = (char *)a2 + v10;
    uint64_t v13 = sub_240BB2B20();
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    sub_240BB4850();
    sub_240BB4850();
    v14(v11, v12, v13);
  }
  else
  {
    uint64_t v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    uint64_t v5 = a2[2];
    uint64_t v6 = a2[3];
    a1[2] = v5;
    a1[3] = v6;
    sub_240BB4850();
    sub_240BB4850();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_240B4751C(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_240B47680((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      sub_240B46E64();
      uint64_t v5 = *(int *)(v4 + 48);
      uint64_t v6 = (char *)a1 + v5;
      uint64_t v7 = (char *)a2 + v5;
      uint64_t v8 = sub_240BB2B20();
      uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
      sub_240BB4850();
      sub_240BB4850();
      v9(v6, v7, v8);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      sub_240BB4850();
      sub_240BB4850();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_240B47680(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ResultItem.BodyItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_240B476DC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    long long v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    sub_240B46E64();
    uint64_t v8 = *(int *)(v7 + 48);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_240BB2B20();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_240B477B0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_240B47680((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      long long v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      sub_240B46E64();
      uint64_t v8 = *(int *)(v7 + 48);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_240BB2B20();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_240B47894()
{
  v2[4] = " ";
  v2[5] = " ";
  v2[6] = " ";
  uint64_t result = sub_240BB2B20();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[7] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t destroy for ResultItem.BodyComponents()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s5Heart10ResultItemV14BodyComponentsVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_240BB4850();
  sub_240BB4850();
  return a1;
}

void *assignWithCopy for ResultItem.BodyComponents(void *a1, void *a2)
{
  *a1 = *a2;
  sub_240BB4850();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ResultItem.BodyComponents(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ResultItem.BodyComponents()
{
  return &type metadata for ResultItem.BodyComponents;
}

uint64_t destroy for CardioFitnessHealthChecklistSettingsState.Footer.Link()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for CardioFitnessHealthChecklistSettingsState.Footer.Link(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  sub_240BB4850();
  sub_240BB4850();
  return a1;
}

void *assignWithCopy for CardioFitnessHealthChecklistSettingsState.Footer.Link(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for CardioFitnessHealthChecklistSettingsState.Footer.Link(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CardioFitnessHealthChecklistSettingsState.Footer.Link(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CardioFitnessHealthChecklistSettingsState.Footer.Link(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResultItem.LabelComponents()
{
  return &type metadata for ResultItem.LabelComponents;
}

id sub_240B47C4C(char a1)
{
  *(void *)&v1[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_continueButton] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_scrollViewObserver] = 0;
  uint64_t v3 = &v1[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_baseIdentifier];
  uint64_t v4 = qword_268C9E660;
  uint64_t v5 = v1;
  if (v4 != -1) {
    swift_once();
  }
  long long v11 = xmmword_268C9EF30;
  sub_240BB4850();
  sub_240BB6E70();
  sub_240BB6E70();
  uint64_t v6 = *((void *)&v11 + 1);
  *(void *)uint64_t v3 = v11;
  *((void *)v3 + 1) = v6;
  v5[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_isInOnboardingModalFlow] = a1 & 1;

  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  sub_240BB2980();
  uint64_t v7 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for AFibBurdenOnboardingResultsViewController();
  id v8 = objc_msgSendSuper2(&v10, sel_initWithTitle_detailText_icon_contentLayout_, v7, 0, 0, 2, 0xE000000000000000);

  return v8;
}

id sub_240B47E28()
{
  unint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_scrollViewObserver];
  *(void *)&v0[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_scrollViewObserver] = 0;

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for AFibBurdenOnboardingResultsViewController();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

void sub_240B47F38()
{
  unint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240B49F30(0, &qword_26AFD7B70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v154 - v3;
  uint64_t v177 = sub_240BB2D40();
  uint64_t v5 = *(void *)(v177 - 8);
  MEMORY[0x270FA5388](v177);
  v176 = (char *)&v154 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B49F30(0, (unint64_t *)&qword_268CA1508, MEMORY[0x263F1A620], v1);
  MEMORY[0x270FA5388](v7 - 8);
  v173 = (char *)&v154 - v8;
  if (v0[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_isInOnboardingModalFlow] == 1) {
    objc_msgSend(v0, sel_hxui_addCancelButton);
  }
  uint64_t v9 = sub_240B56D64();
  uint64_t v10 = OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_continueButton;
  long long v11 = *(void **)&v0[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_continueButton];
  *(void *)&v0[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_continueButton] = v9;

  id v12 = *(void **)&v0[v10];
  if (v12) {
    objc_msgSend(v12, sel_setEnabled_, 0);
  }
  id v13 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v13, sel_setBackButtonDisplayMode_, 1);

  id v14 = objc_msgSend(v0, sel_headerView);
  if (qword_268C9E660 != -1) {
    swift_once();
  }
  long long aBlock = xmmword_268C9EF30;
  sub_240BB4850();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  uint64_t v15 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setAccessibilityIdentifier_, v15);

  id v165 = objc_msgSend(self, sel_hk_percentNumberFormatter);
  uint64_t v17 = *(void *)&v0[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_baseIdentifier];
  uint64_t v16 = *(void *)&v0[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_baseIdentifier + 8];
  *(void *)&long long aBlock = v17;
  *((void *)&aBlock + 1) = v16;
  sub_240BB4850();
  sub_240BB6E70();
  sub_240BB6E70();
  uint64_t v18 = HIBYTE(*((void *)&aBlock + 1)) & 0xFLL;
  if ((*((void *)&aBlock + 1) & 0x2000000000000000) == 0) {
    uint64_t v18 = aBlock & 0xFFFFFFFFFFFFLL;
  }
  v154 = v0;
  v164 = v4;
  uint64_t v178 = v5;
  *((void *)&v160 + 1) = v16;
  *(void *)&long long v160 = v17;
  if (v18)
  {
    sub_240BB6E70();
    unint64_t v19 = *((void *)&aBlock + 1);
    uint64_t v155 = aBlock;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v155 = 0;
    unint64_t v19 = 0xE000000000000000;
  }
  unint64_t v174 = v19;
  sub_240B49F30(0, &qword_268CA15D8, (uint64_t (*)(uint64_t))type metadata accessor for LocalizedImageView.TextConfiguration, MEMORY[0x263F8E0F8]);
  uint64_t v21 = v20;
  uint64_t v175 = type metadata accessor for LocalizedImageView.TextConfiguration();
  uint64_t v22 = *(void *)(v175 - 8);
  uint64_t v166 = *(void *)(v22 + 72);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = (v23 + 32) & ~v23;
  uint64_t v159 = v21;
  uint64_t v157 = v23 | 7;
  uint64_t v25 = swift_allocObject();
  long long v163 = xmmword_240BBAE40;
  *(_OWORD *)(v25 + 16) = xmmword_240BBAE40;
  uint64_t v172 = v25;
  uint64_t v158 = v24;
  uint64_t v26 = v25 + v24;
  v167 = (void (*)(uint64_t, char *, uint64_t))sub_240AAAA2C();
  uint64_t v162 = v27;
  sub_240BB6850();
  LODWORD(v171) = *MEMORY[0x263F1A610];
  uint64_t v28 = v171;
  uint64_t v29 = sub_240BB6840();
  uint64_t v30 = *(void *)(v29 - 8);
  id v31 = *(void (**)(uint64_t, void, uint64_t))(v30 + 104);
  uint64_t v170 = v30 + 104;
  v168 = v31;
  uint64_t v32 = (uint64_t)v173;
  v31((uint64_t)v173, v28, v29);
  v169 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56);
  v169(v32, 0, 1, v29);
  uint64_t v33 = sub_240BB6860();
  sub_240B44844(v32);
  id v156 = self;
  uint64_t v34 = MEMORY[0x245609CA0](objc_msgSend(v156, sel_labelColor));
  uint64_t v35 = sub_240BB6B40();
  uint64_t v37 = v36;
  uint64_t v38 = v176;
  sub_240BB2D30();
  uint64_t v39 = v162;
  *(void *)uint64_t v26 = v167;
  *(void *)(v26 + 8) = v39;
  *(void *)(v26 + 16) = v33;
  *(void *)(v26 + 24) = v34;
  *(_OWORD *)(v26 + 32) = xmmword_240BC3350;
  *(void *)(v26 + 48) = 0;
  *(void *)(v26 + 56) = 0;
  *(void *)(v26 + 64) = 1;
  *(void *)(v26 + 72) = 0x3FE0000000000000;
  *(void *)(v26 + 80) = v35;
  *(void *)(v26 + 88) = v37;
  uint64_t v40 = v26 + *(int *)(v175 + 44);
  v167 = *(void (**)(uint64_t, char *, uint64_t))(v178 + 32);
  v178 += 32;
  v167(v40, v38, v177);
  uint64_t v41 = v26 + v166;
  uint64_t v42 = sub_240AAAA2C();
  uint64_t v44 = v43;
  sub_240BB6850();
  v168(v32, v171, v29);
  uint64_t v162 = v29;
  uint64_t v161 = v30 + 56;
  v169(v32, 0, 1, v29);
  uint64_t v45 = sub_240BB6860();
  uint64_t v46 = v32;
  id v47 = v156;
  sub_240B44844(v46);
  uint64_t v48 = MEMORY[0x245609CA0](objc_msgSend(v47, sel_labelColor));
  uint64_t v49 = sub_240BB6B40();
  uint64_t v51 = v50;
  uint64_t v52 = v176;
  sub_240BB2D30();
  *(void *)uint64_t v41 = v42;
  *(void *)(v41 + 8) = v44;
  *(void *)(v41 + 16) = v45;
  *(void *)(v41 + 24) = v48;
  *(_OWORD *)(v41 + 32) = xmmword_240BC3360;
  *(void *)(v41 + 48) = 0;
  *(void *)(v41 + 56) = 0;
  *(void *)(v41 + 64) = 1;
  *(void *)(v41 + 72) = 0x3FE0000000000000;
  *(void *)(v41 + 80) = v49;
  *(void *)(v41 + 88) = v51;
  v167(v41 + *(int *)(v175 + 44), v52, v177);
  long long aBlock = v160;
  sub_240BB4850();
  sub_240BB6E70();
  sub_240BB6E70();
  uint64_t v53 = HIBYTE(*((void *)&aBlock + 1)) & 0xFLL;
  if ((*((void *)&aBlock + 1) & 0x2000000000000000) == 0) {
    uint64_t v53 = aBlock & 0xFFFFFFFFFFFFLL;
  }
  if (v53)
  {
    sub_240BB6E70();
    unint64_t v54 = *((void *)&aBlock + 1);
    *(void *)&long long v160 = aBlock;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)&long long v160 = 0;
    unint64_t v54 = 0xE000000000000000;
  }
  *((void *)&v160 + 1) = v54;
  uint64_t v55 = v158;
  uint64_t v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = xmmword_240BB97E0;
  uint64_t v166 = v56;
  uint64_t v57 = v56 + v55;
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  uint64_t v58 = sub_240BB2980();
  uint64_t v60 = v59;
  sub_240BB6850();
  uint64_t v61 = (uint64_t)v173;
  uint64_t v62 = v162;
  v168((uint64_t)v173, v171, v162);
  v169(v61, 0, 1, v62);
  uint64_t v63 = sub_240BB6860();
  sub_240B44844(v61);
  uint64_t v64 = MEMORY[0x245609CA0](objc_msgSend(v47, sel_labelColor));
  uint64_t v65 = sub_240BB6B40();
  uint64_t v67 = v66;
  uint64_t v68 = v176;
  sub_240BB2D30();
  *(void *)uint64_t v57 = v58;
  *(void *)(v57 + 8) = v60;
  *(void *)(v57 + 16) = v63;
  *(void *)(v57 + 24) = v64;
  *(_OWORD *)(v57 + 32) = xmmword_240BC3370;
  *(_OWORD *)(v57 + 48) = xmmword_240BC3380;
  *(void *)(v57 + 64) = 1;
  *(void *)(v57 + 72) = 0x3FE0000000000000;
  *(void *)(v57 + 80) = v65;
  *(void *)(v57 + 88) = v67;
  v167(v57 + *(int *)(v175 + 44), v68, v177);
  id v69 = objc_allocWithZone(MEMORY[0x263F825C8]);
  *((void *)&v181 + 1) = sub_240B49454;
  uint64_t v182 = 0;
  *(void *)&long long aBlock = MEMORY[0x263EF8330];
  *((void *)&aBlock + 1) = 1107296256;
  v180 = sub_240B49B88;
  *(void *)&long long v181 = &unk_26F509348;
  uint64_t v70 = _Block_copy(&aBlock);
  uint64_t v71 = (void (*)(uint64_t, void, uint64_t, uint64_t))objc_msgSend(v69, sel_initWithDynamicProvider_, v70);
  _Block_release(v70);
  swift_release();
  sub_240A39C18(0, &qword_268CA15E0);
  uint64_t v72 = swift_allocObject();
  *(_OWORD *)(v72 + 16) = v163;
  uint64_t v178 = 0xD000000000000021;
  uint64_t v73 = sub_240BB2980();
  v176 = v74;
  uint64_t v177 = v73;
  uint64_t v175 = sub_240B49C28(0x46416E49656D6954, 0xEA00000000006269, 0x656C746954, 0xE500000000000000);
  v173 = v75;
  uint64_t v76 = sub_240BB2980();
  uint64_t v78 = v77;
  uint64_t v79 = sub_240B49C28(0x46416E49656D6954, 0xEA00000000006269, 0x6C6961746544, 0xE600000000000000);
  uint64_t v81 = v80;
  *(void *)&long long aBlock = 0xD00000000000001CLL;
  *((void *)&aBlock + 1) = 0x8000000240BD2900;
  LOBYTE(v180) = 1;
  *(void *)&long long v181 = v155;
  *((void *)&v181 + 1) = v174;
  uint64_t v182 = v172;
  sub_240B49E24();
  Class v171 = v82;
  id v83 = objc_allocWithZone(v82);
  sub_240BB4850();
  sub_240BB4850();
  uint64_t v84 = (void *)sub_240BB67A0();
  id v85 = objc_msgSend(v84, sel_view);

  v169 = v71;
  if (v85) {
    objc_msgSend(v85, sel_setBackgroundColor_, v71);
  }
  else {
    id v85 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_init);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v86 = v176;
  *(void *)(v72 + 32) = v177;
  *(void *)(v72 + 40) = v86;
  uint64_t v87 = v173;
  *(void *)(v72 + 48) = v175;
  *(void *)(v72 + 56) = v87;
  *(void *)(v72 + 64) = v76;
  *(void *)(v72 + 72) = v78;
  *(void *)(v72 + 80) = v79;
  *(void *)(v72 + 88) = v81;
  *(void *)(v72 + 96) = MEMORY[0x263F8EE78];
  *(void *)(v72 + 104) = 0;
  *(void *)(v72 + 112) = 0;
  *(void *)(v72 + 120) = v85;
  uint64_t v88 = sub_240BB2980();
  v167 = v89;
  v168 = (void (*)(uint64_t, void, uint64_t))v88;
  uint64_t v90 = sub_240B49C28(0x67756F6E45746F4ELL, 0xED00006174614468, 0x656C746954, 0xE500000000000000);
  v176 = v91;
  uint64_t v177 = v90;
  uint64_t v92 = sub_240BB2980();
  unint64_t v174 = v93;
  uint64_t v175 = v92;
  uint64_t v94 = sub_240B49C28(0x67756F6E45746F4ELL, 0xED00006174614468, 0x6C6961746544, 0xE600000000000000);
  uint64_t v172 = v95;
  v173 = (char *)v94;
  sub_240B49F30(0, &qword_268CA15F8, (uint64_t (*)(uint64_t))type metadata accessor for ResultItem.BodyItem, MEMORY[0x263F8E0F8]);
  uint64_t v96 = *(void *)(type metadata accessor for ResultItem.BodyItem() - 8);
  uint64_t v97 = *(void *)(v96 + 72);
  unint64_t v98 = (*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
  uint64_t v178 = 4 * v97;
  uint64_t v99 = swift_allocObject();
  *(_OWORD *)(v99 + 16) = xmmword_240BBD8D0;
  uint64_t v170 = v99;
  uint64_t v100 = (uint64_t *)(v99 + v98);
  uint64_t v101 = sub_240BB2980();
  uint64_t v103 = v102;
  uint64_t v104 = sub_240B49C28(0x67756F6E45746F4ELL, 0xED00006174614468, 0xD000000000000012, 0x8000000240BD2A90);
  *uint64_t v100 = v101;
  v100[1] = v103;
  v100[2] = v104;
  v100[3] = v105;
  swift_storeEnumTagMultiPayload();
  uint64_t v106 = (uint64_t *)((char *)v100 + v97);
  uint64_t v107 = sub_240BB2980();
  uint64_t v109 = v108;
  uint64_t v110 = sub_240B49C28(0x67756F6E45746F4ELL, 0xED00006174614468, 0xD000000000000012, 0x8000000240BD2AE0);
  uint64_t *v106 = v107;
  v106[1] = v109;
  v106[2] = v110;
  v106[3] = v111;
  swift_storeEnumTagMultiPayload();
  uint64_t v112 = (uint64_t *)((char *)v100 + 2 * v97);
  uint64_t v113 = sub_240BB2980();
  uint64_t v115 = v114;
  uint64_t v116 = sub_240B49C28(0x67756F6E45746F4ELL, 0xED00006174614468, 0x63746157656B614DLL, 0xED000067756E5368);
  uint64_t *v112 = v113;
  v112[1] = v115;
  v112[2] = v116;
  v112[3] = v117;
  swift_storeEnumTagMultiPayload();
  char v118 = (uint64_t *)((char *)v100 + 3 * v97);
  uint64_t v119 = sub_240BB2980();
  uint64_t v121 = v120;
  uint64_t v122 = sub_240B49C28(0x67756F6E45746F4ELL, 0xED00006174614468, 0x6E6F697469646441, 0xEF73706574536C61);
  uint64_t *v118 = v119;
  v118[1] = v121;
  v118[2] = v122;
  v118[3] = v123;
  swift_storeEnumTagMultiPayload();
  uint64_t v124 = (uint64_t *)((char *)v100 + v178);
  uint64_t v125 = sub_240BB2980();
  uint64_t v127 = v126;
  uint64_t v128 = sub_240B49C28(0x67756F6E45746F4ELL, 0xED00006174614468, 0xD000000000000011, 0x8000000240BD2B60);
  *uint64_t v124 = v125;
  v124[1] = v127;
  v124[2] = v128;
  v124[3] = v129;
  id v130 = objc_msgSend(self, sel_aFibBurdenDefaultLinkURL);
  sub_240BB6DE0();

  uint64_t v131 = v164;
  sub_240BB2B10();
  swift_bridgeObjectRelease();
  uint64_t v132 = sub_240BB2B20();
  uint64_t v133 = *(void *)(v132 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48))(v131, 1, v132) == 1)
  {
    __break(1u);
  }
  else
  {
    sub_240B46E64();
    (*(void (**)(char *, char *, uint64_t))(v133 + 32))((char *)v124 + *(int *)(v134 + 48), v131, v132);
    swift_storeEnumTagMultiPayload();
    uint64_t v135 = sub_240B49C28(0x67756F6E45746F4ELL, 0xED00006174614468, 0xD000000000000016, 0x8000000240BD2B80);
    uint64_t v137 = v136;
    *(void *)&long long aBlock = 0xD00000000000001ALL;
    *((void *)&aBlock + 1) = 0x8000000240BD2920;
    LOBYTE(v180) = 1;
    long long v181 = v160;
    uint64_t v182 = v166;
    id v138 = objc_allocWithZone(v171);
    sub_240BB4850();
    sub_240BB4850();
    uint64_t v139 = (void *)sub_240BB67A0();
    id v140 = objc_msgSend(v139, sel_view);

    if (v140)
    {
      uint64_t v141 = v169;
      objc_msgSend(v140, sel_setBackgroundColor_, v169);
      v142 = v154;
    }
    else
    {
      id v140 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_init);
      v142 = v154;
      uint64_t v141 = v169;
    }
    uint64_t v144 = v167;
    v143 = v168;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v72 + 128) = v143;
    *(void *)(v72 + 136) = v144;
    uint64_t v145 = v176;
    *(void *)(v72 + 144) = v177;
    *(void *)(v72 + 152) = v145;
    unint64_t v146 = v174;
    *(void *)(v72 + 160) = v175;
    *(void *)(v72 + 168) = v146;
    uint64_t v147 = v172;
    *(void *)(v72 + 176) = v173;
    *(void *)(v72 + 184) = v147;
    *(void *)(v72 + 192) = v170;
    *(void *)(v72 + 200) = v135;
    *(void *)(v72 + 208) = v137;
    *(void *)(v72 + 216) = v140;
    id v148 = objc_allocWithZone((Class)type metadata accessor for ListOfResultItemsView());
    long long v149 = sub_240B463D4(v72);
    id v150 = objc_msgSend(v142, sel_contentView);
    objc_msgSend(v150, sel_addSubview_, v149);

    id v151 = objc_msgSend(v142, sel_contentView);
    objc_msgSend(v149, sel_hk_alignConstraintsWithView_, v151);

    *(void *)&long long aBlock = objc_msgSend(v142, sel_scrollView);
    swift_getKeyPath();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v152 = sub_240BB2A90();
    swift_release();
    swift_release();

    long long v153 = *(void **)&v142[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_scrollViewObserver];
    *(void *)&v142[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_scrollViewObserver] = v152;
  }
}

id sub_240B49454(void *a1)
{
  id v1 = objc_msgSend(a1, sel_userInterfaceStyle);
  if (v1 == (id)2)
  {
    uint64_t v3 = (void *)sub_240BB7360();
    id v4 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
    id v5 = objc_msgSend(v4, sel_resolvedColorWithTraitCollection_, v3);

    return v5;
  }
  else
  {
    if (v1 == (id)1) {
      id v2 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
    }
    else {
      id v2 = objc_msgSend(self, sel_systemBackgroundColor);
    }
    return v2;
  }
}

uint64_t sub_240B4957C(uint64_t a1)
{
  return sub_240BB5A20();
}

void sub_240B495BC(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a3 + 16;
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x24560BA20](v4);
  if (v5)
  {
    uint64_t v6 = (char *)v5;
    sub_240B49F30(0, &qword_268CA1600, (uint64_t (*)(uint64_t))type metadata accessor for CGPoint, MEMORY[0x263F06DB8]);
    sub_240BB2A80();
    if ((v12 & 1) != 0
      || v11 == 0.0
      || (objc_msgSend(v3, sel_contentSize), double v8 = v7, objc_msgSend(v3, sel_bounds), v8 - CGRectGetHeight(v13) > v11))
    {
    }
    else
    {
      uint64_t v9 = *(void **)&v6[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_continueButton];
      if (v9) {
        objc_msgSend(v9, sel_setEnabled_, 1);
      }
      uint64_t v10 = *(void **)&v6[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_scrollViewObserver];
      *(void *)&v6[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_scrollViewObserver] = 0;
    }
  }
}

uint64_t type metadata accessor for AFibBurdenOnboardingResultsViewController()
{
  return self;
}

uint64_t sub_240B49918()
{
  return 3;
}

uint64_t sub_240B49920()
{
  return MEMORY[0x24560BA20](v0 + OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_delegate);
}

uint64_t sub_240B49954(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_delegate + 8) = a2;
  swift_unknownObjectWeakAssign();

  return sub_240BB50A0();
}

void sub_240B499A0()
{
  id v1 = objc_msgSend(v0, sel_navigationItem);
  sub_240A34DC4(0, (unint64_t *)&qword_268C9F670);
  sub_240A34DC4(0, &qword_268C9F9B0);
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_240BB7520();
  id v3 = (id)sub_240BB71E0();
  objc_msgSend(v1, sel_setRightBarButtonItem_, v3, 0, 0, 0, sub_240A9A5C4, v2);
}

id sub_240B49B88(uint64_t a1, void *a2)
{
  id v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  uint64_t v5 = (void *)v3();
  swift_release();

  return v5;
}

uint64_t sub_240B49BF0()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B49C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_240BBAE40;
  *(void *)(v8 + 32) = 0xD000000000000014;
  *(void *)(v8 + 40) = 0x8000000240BCA120;
  *(void *)(v8 + 48) = 0xD000000000000010;
  *(void *)(v8 + 56) = 0x8000000240BC8ED0;
  sub_240BB4850();
  sub_240BB4850();
  uint64_t v9 = sub_240A42A0C((void *)1, 4, 1, (void *)v8);
  unint64_t v11 = v9[2];
  unint64_t v10 = v9[3];
  unint64_t v12 = v11 + 1;
  sub_240BB4850();
  if (v11 >= v10 >> 1) {
    uint64_t v9 = sub_240A42A0C((void *)(v10 > 1), v11 + 1, 1, v9);
  }
  v9[2] = v12;
  CGRect v13 = &v9[2 * v11];
  void v13[4] = a1;
  v13[5] = a2;
  unint64_t v14 = v9[3];
  sub_240BB4850();
  if (v12 >= v14 >> 1) {
    uint64_t v9 = sub_240A42A0C((void *)(v14 > 1), v11 + 2, 1, v9);
  }
  v9[2] = v11 + 2;
  uint64_t v15 = &v9[2 * v12];
  v15[4] = a3;
  v15[5] = a4;
  uint64_t v16 = (void *)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  id v17 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v17)
  {
    uint64_t v18 = sub_240BB6DE0();

    swift_arrayDestroy();
    return v18;
  }
  else
  {
    uint64_t result = swift_arrayDestroy();
    __break(1u);
  }
  return result;
}

void sub_240B49E24()
{
  if (!qword_268CA15E8)
  {
    sub_240B49E80();
    unint64_t v0 = sub_240BB67B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA15E8);
    }
  }
}

unint64_t sub_240B49E80()
{
  unint64_t result = qword_268CA15F0;
  if (!qword_268CA15F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA15F0);
  }
  return result;
}

char *sub_240B49ED4()
{
  return sel_contentOffset;
}

id sub_240B49EE0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_contentOffset);
  *a2 = v4;
  a2[1] = v5;
  return result;
}

id sub_240B49F14(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setContentOffset_, *a1, a1[1]);
}

void sub_240B49F28(void **a1, uint64_t a2)
{
  sub_240B495BC(a1, a2, v2);
}

void sub_240B49F30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_240B49F94()
{
  sub_240BB6E70();

  return swift_bridgeObjectRelease();
}

char *sub_240B4A0D8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  uint64_t v67 = a4;
  uint64_t v65 = a2;
  uint64_t v12 = type metadata accessor for AFibBurdenOnboardingPresentationContext();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v66 = (uint64_t)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v6[OBJC_IVAR____TtC5Heart30AFibBurdenOnboardingController_coordinator] = 0;
  v6[OBJC_IVAR____TtC5Heart30AFibBurdenOnboardingController_navigateToDetailRoomUponOnboardingCompletion] = a5;
  unint64_t v14 = (objc_class *)type metadata accessor for AFibBurdenOnboardingController();
  v74.receiver = v6;
  v74.super_class = v14;
  id v63 = objc_msgSendSuper2(&v74, sel_initWithNibName_bundle_, 0, 0);
  objc_msgSend(v63, sel_setModalPresentationStyle_, 2);
  uint64_t v15 = *MEMORY[0x263F09728];
  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3B8]), sel_initWithFeatureIdentifier_healthStore_, *MEMORY[0x263F09728], a1);
  uint64_t v17 = *MEMORY[0x263F09778];
  id v18 = objc_allocWithZone(MEMORY[0x263F0A3B8]);
  uint64_t v60 = a1;
  id v19 = objc_msgSend(v18, sel_initWithFeatureIdentifier_healthStore_, v17, a1);
  id v20 = objc_allocWithZone(MEMORY[0x263F0A3D0]);
  id v21 = v16;
  id v61 = v21;
  id v22 = objc_msgSend(v20, sel_initWithFeatureIdentifier_healthStore_, v15, a1);
  uint64_t v62 = a3;
  sub_240A1E37C(a3, (uint64_t)&v71);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v22;
  id v24 = v19;
  id v64 = v24;
  id v25 = v22;
  id v26 = (id)HKPreferredRegulatoryDomainProvider();
  sub_240A1E37C((uint64_t)&v71, (uint64_t)&v68);
  uint64_t v27 = type metadata accessor for AFibBurdenOnboardingFlowManager();
  uint64_t v28 = (void *)swift_allocObject();
  uint64_t v29 = sub_240B50FB0(v21, (uint64_t)sub_240B50FA8, v23, v24, (uint64_t)v26, (uint64_t)&v68, 1, v28);

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v71);
  sub_240A1E37C(a2, (uint64_t)&v71);
  sub_240A1E37C(a3, (uint64_t)&v68);
  type metadata accessor for AFibBurdenOnboardingViewControllerFactory();
  uint64_t v30 = swift_allocObject();
  sub_240A37388(&v71, v30 + 16);
  sub_240A37388(&v68, v30 + 64);
  *(unsigned char *)(v30 + 56) = a6;
  uint64_t v31 = sub_240BB3020();
  swift_retain();
  uint64_t v32 = sub_240BB3010();
  uint64_t v72 = v27;
  uint64_t v73 = &off_26F50BEB0;
  *(void *)&long long v71 = v29;
  uint64_t v69 = v31;
  uint64_t v70 = &off_26F504850;
  *(void *)&long long v68 = v32;
  uint64_t v33 = type metadata accessor for AFibBurdenOnboardingModel();
  uint64_t v34 = (void *)swift_allocObject();
  uint64_t v35 = sub_240A346B0((uint64_t)&v71, v27);
  MEMORY[0x270FA5388](v35);
  uint64_t v37 = (uint64_t *)((char *)&v59 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v38 + 16))(v37);
  uint64_t v39 = sub_240A346B0((uint64_t)&v68, v69);
  MEMORY[0x270FA5388](v39);
  uint64_t v41 = (uint64_t *)((char *)&v59 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v42 + 16))(v41);
  uint64_t v43 = *v37;
  uint64_t v44 = *v41;
  v34[5] = v27;
  v34[6] = &off_26F50BEB0;
  void v34[2] = v43;
  v34[10] = v31;
  v34[11] = &off_26F504850;
  v34[7] = v44;
  swift_retain();
  swift_retain();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v68);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v71);
  swift_release();
  swift_release();
  uint64_t v59 = type metadata accessor for AFibBurdenOnboardingPresentationContext;
  uint64_t v45 = v66;
  sub_240B5187C(v67, v66, (uint64_t (*)(void))type metadata accessor for AFibBurdenOnboardingPresentationContext);
  uint64_t v46 = (char *)v63;
  swift_retain();
  id v47 = (id)HKHRAFibBurdenLogForCategory();
  id v48 = objc_allocWithZone(MEMORY[0x263F0A0C0]);
  uint64_t v49 = v60;
  id v50 = objc_msgSend(v48, sel_initWithLoggingCategory_healthDataSource_, v47, v60);

  uint64_t v72 = v33;
  uint64_t v73 = &off_26F504980;
  *(void *)&long long v71 = v34;
  type metadata accessor for AFibBurdenOnboardingCoordinator();
  uint64_t v51 = swift_allocObject();
  uint64_t v52 = sub_240A346B0((uint64_t)&v71, v33);
  MEMORY[0x270FA5388](v52);
  unint64_t v54 = (uint64_t *)((char *)&v59 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v55 + 16))(v54);
  uint64_t v56 = *v54;
  swift_retain();
  uint64_t v57 = sub_240B516DC(v56, v45, (uint64_t)v46, v30, v49, v50, v51);

  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v71);

  swift_release();
  swift_release_n();
  sub_240B518E4(v67, (uint64_t (*)(void))v59);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v62);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v65);
  *(void *)&v46[OBJC_IVAR____TtC5Heart30AFibBurdenOnboardingController_coordinator] = v57;
  swift_release();
  return v46;
}

uint64_t sub_240B4A7A0(char a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v41 = a2;
  uint64_t ObjectType = swift_getObjectType();
  sub_240B51E08(0, &qword_26AFD7B70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (char *)&v36 - v9;
  uint64_t v11 = sub_240BB2B20();
  uint64_t v42 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v40 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3FB28();
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = (void *)swift_allocObject();
  id v18[2] = v4;
  v18[3] = a3;
  v18[4] = a4;
  if ((a1 & 1) == 0
    || *((unsigned char *)v4
       + OBJC_IVAR____TtC5Heart30AFibBurdenOnboardingController_navigateToDetailRoomUponOnboardingCompletion) != 1)
  {
    id v24 = a4;
    sub_240AECDA0(a3);
    uint64_t v25 = qword_26AFD7158;
    id v26 = v4;
    if (v25 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_240A395FC(v14, (uint64_t)qword_26AFDEB68);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v27, v14);
    *(void *)(swift_allocObject() + 16) = ObjectType;
    uint64_t aBlock = 0;
    sub_240BB5700();
    swift_release();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    if (a3)
    {
      id v48 = (uint64_t (*)(char))a3;
      uint64_t v49 = v24;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v45 = 1107296256;
      uint64_t v46 = sub_240A87354;
      id v47 = &unk_26F509B20;
      uint64_t v23 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
    }
    else
    {
      uint64_t v23 = 0;
    }
    objc_msgSend(v26, sel_dismissViewControllerAnimated_completion_, 1, v23);
    goto LABEL_14;
  }
  uint64_t v36 = a4;
  sub_240AECDA0(a3);
  uint64_t v19 = qword_26AFD7158;
  id v37 = v4;
  if (v19 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_240A395FC(v14, (uint64_t)qword_26AFDEB68);
  uint64_t v38 = *(void (**)(char *))(v15 + 16);
  uint64_t v39 = v20;
  v38(v17);
  *(void *)(swift_allocObject() + 16) = ObjectType;
  uint64_t aBlock = 0;
  sub_240BB5700();
  swift_release();
  id v21 = *(void (**)(char *, uint64_t))(v15 + 8);
  v21(v17, v14);
  sub_240A64B98(v41, (uint64_t)v10);
  uint64_t v22 = v42;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v10, 1, v11) == 1)
  {
    sub_240B51D40((uint64_t)v10, (uint64_t)&qword_26AFD7B70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_240B51E08);
    ((void (*)(char *, uint64_t, uint64_t))v38)(v17, v39, v14);
    *(void *)(swift_allocObject() + 16) = ObjectType;
    uint64_t aBlock = 0;
    sub_240BB5730();
    swift_release();
    v21(v17, v14);
    if (a3)
    {
      id v48 = (uint64_t (*)(char))a3;
      uint64_t v49 = v36;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v45 = 1107296256;
      uint64_t v46 = sub_240A87354;
      id v47 = &unk_26F509B98;
      uint64_t v23 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
    }
    else
    {
      uint64_t v23 = 0;
    }
    objc_msgSend(v37, sel_dismissViewControllerAnimated_completion_, 1, v23);
LABEL_14:
    _Block_release(v23);
    return swift_release();
  }
  uint64_t v29 = v40;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v40, v10, v11);
  id v30 = objc_msgSend(self, sel_sharedApplication);
  uint64_t v31 = v22;
  uint64_t v32 = (void *)sub_240BB2AF0();
  sub_240AB85C8(MEMORY[0x263F8EE78]);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_240A20FC8((unint64_t *)&qword_268C9EA38, type metadata accessor for OpenExternalURLOptionsKey);
  uint64_t v33 = (void *)sub_240BB6D20();
  swift_bridgeObjectRelease();
  uint64_t v34 = (void *)swift_allocObject();
  void v34[2] = sub_240B52914;
  v34[3] = v18;
  v34[4] = ObjectType;
  id v48 = sub_240B52A30;
  uint64_t v49 = v34;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v45 = 1107296256;
  uint64_t v46 = sub_240B03CD4;
  id v47 = &unk_26F509BE8;
  uint64_t v35 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v30, sel_openURL_options_completionHandler_, v32, v33, v35);
  _Block_release(v35);
  swift_release();

  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v29, v11);
}

void sub_240B4AF60(void *a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    v5[4] = a2;
    v5[5] = a3;
    v5[0] = MEMORY[0x263EF8330];
    v5[1] = 1107296256;
    v5[2] = sub_240A87354;
    v5[3] = &unk_26F509C88;
    uint64_t v4 = _Block_copy(v5);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v4 = 0;
  }
  objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, v4);
  _Block_release(v4);
}

uint64_t sub_240B4B028(char a1, uint64_t a2, uint64_t a3, void (*a4)(char *, uint64_t))
{
  uint64_t v31 = a4;
  uint64_t v32 = a2;
  uint64_t v6 = sub_240BB6B90();
  uint64_t v36 = *(void *)(v6 - 8);
  uint64_t v37 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v33 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_240BB6BC0();
  uint64_t v34 = *(void *)(v8 - 8);
  uint64_t v35 = v8;
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_240BB6BE0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v30 - v16;
  sub_240A3FB28();
  uint64_t v19 = v18;
  uint64_t v20 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_240A395FC(v19, (uint64_t)qword_26AFDEB68);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, v23, v19);
    *(void *)(swift_allocObject() + 16) = v31;
    aBlock[0] = 0;
    sub_240BB5720();
    swift_release();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  }
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9980);
  id v24 = (void *)sub_240BB7310();
  sub_240BB6BD0();
  MEMORY[0x245609EA0](v15, 0.1);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v12 + 8);
  v31(v15, v11);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v32;
  *(void *)(v25 + 24) = a3;
  aBlock[4] = sub_240B321E0;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_240A87354;
  aBlock[3] = &unk_26F509C60;
  id v26 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_240BB6BB0();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_240A20FC8((unint64_t *)&qword_26AFD98C8, MEMORY[0x263F8F030]);
  sub_240B51E08(0, (unint64_t *)&qword_26AFD98F0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
  sub_240AD7290();
  uint64_t v27 = v33;
  uint64_t v28 = v37;
  sub_240BB7670();
  MEMORY[0x24560A590](v17, v10, v27, v26);
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v36 + 8))(v27, v28);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v35);
  return ((uint64_t (*)(char *, uint64_t))v31)(v17, v11);
}

uint64_t sub_240B4B560()
{
  return 0;
}

id sub_240B4B6C0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenOnboardingController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AFibBurdenOnboardingController()
{
  return self;
}

void sub_240B4B728(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    v8[4] = a3;
    uint64_t v8[5] = a4;
    v8[0] = MEMORY[0x263EF8330];
    v8[1] = 1107296256;
    v8[2] = sub_240A87354;
    v8[3] = &unk_26F5093F0;
    uint64_t v7 = _Block_copy(v8);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v7 = 0;
  }
  objc_msgSend(v4, sel_presentViewController_animated_completion_, a1, a2 & 1, v7);
  _Block_release(v7);
}

void sub_240B4B804()
{
  id v1 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenOnboardingStartViewController());
  uint64_t v8 = (char *)sub_240B37A08(1, 0, 0);
  *(void *)&v8[qword_268CA1140 + 8] = &off_26F509370;
  swift_unknownObjectWeakAssign();
  uint64_t v2 = v0 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_navigationController;
  if (MEMORY[0x24560BA20](v2))
  {
    uint64_t v3 = *(void *)(v2 + 8);
    uint64_t ObjectType = swift_getObjectType();
    sub_240A39CAC(0, (unint64_t *)&qword_26AFD77C0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_240BBAD40;
    *(void *)(v5 + 32) = v8;
    uint64_t v9 = v5;
    sub_240BB6F30();
    uint64_t v6 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 24);
    uint64_t v7 = v8;
    v6(v9, 0, ObjectType, v3);
    swift_bridgeObjectRelease();

    sub_240BB50A0();
  }
  else
  {
  }
}

uint64_t sub_240B4B994()
{
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 16);
  sub_240B518E4(v0 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_presentationContext, (uint64_t (*)(void))type metadata accessor for AFibBurdenOnboardingPresentationContext);
  swift_release();

  swift_release();
  sub_240A484BC(v0 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_navigationController);

  return swift_deallocClassInstance();
}

uint64_t sub_240B4BA64()
{
  return type metadata accessor for AFibBurdenOnboardingCoordinator();
}

uint64_t type metadata accessor for AFibBurdenOnboardingCoordinator()
{
  uint64_t result = qword_268CA1648;
  if (!qword_268CA1648) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240B4BAB8()
{
  uint64_t result = type metadata accessor for AFibBurdenOnboardingPresentationContext();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_240B4BB84()
{
  return 0;
}

uint64_t sub_240B4BC54(uint64_t a1, uint64_t a2)
{
  sub_240BB77C0();
  sub_240BB6E70();
  sub_240BB7C80();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(ObjectType, a2);
  sub_240B49F94();
  sub_240BB6E70();
  return 0;
}

uint64_t sub_240B4BD6C(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v49 = *v2;
  sub_240A3FB28();
  uint64_t v7 = v6;
  uint64_t v50 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B51E08(0, (unint64_t *)&unk_26AFD9960, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v45 = (char *)&v43 - v11;
  sub_240B51E6C();
  uint64_t v13 = v12;
  uint64_t v44 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B52178(0, &qword_268CA1668, (unint64_t *)&qword_26AFD7530, MEMORY[0x263F8D4F8], &qword_26AFD7528);
  uint64_t v47 = *(void *)(v16 - 8);
  uint64_t v48 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v46 = (char *)&v43 - v17;
  uint64_t ObjectType = swift_getObjectType();
  int v19 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(ObjectType, a2);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v2;
  *(unsigned char *)(result + 24) = v19;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = a2;
  if (!qword_26F503358)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  uint64_t v21 = result;
  if (byte_26F503368 != 6)
  {
    uint64_t v22 = 0;
    while (qword_26F503358 - 1 != v22)
    {
      int v23 = *((unsigned __int8 *)&unk_26F503348 + v22++ + 33);
      if (v23 == 6) {
        goto LABEL_7;
      }
    }
    goto LABEL_21;
  }
  uint64_t v22 = 0;
LABEL_7:
  BOOL v24 = __OFSUB__(v22, 1);
  uint64_t v25 = v22 - 1;
  if (v24)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v25 < 0)
  {
LABEL_14:
    id v30 = a1;
    uint64_t v31 = swift_retain();
    sub_240B4D198(v31, v19, v30, a2);
    return swift_release();
  }
  if (v25 >= qword_26F503358)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (*((unsigned __int8 *)&unk_26F503348 + v25 + 32) != v19) {
    goto LABEL_14;
  }
  if (*(id *)((char *)v2 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_completeOnboardingSubscriber))
  {
    uint64_t v26 = qword_26AFD7158;
    id v27 = a1;
    swift_retain();
    if (v26 == -1)
    {
LABEL_13:
      uint64_t v28 = sub_240A395FC(v7, (uint64_t)qword_26AFDEB68);
      uint64_t v29 = v50;
      (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v9, v28, v7);
      *(void *)(swift_allocObject() + 16) = v49;
      uint64_t v52 = 0;
      sub_240BB5700();
      swift_release();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v9, v7);
    }
LABEL_20:
    swift_once();
    goto LABEL_13;
  }
  uint64_t v32 = (uint64_t)v2[5];
  uint64_t v50 = OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_completeOnboardingSubscriber;
  uint64_t v33 = sub_240A3466C(v2 + 2, v32);
  sub_240A3466C((void *)(*v33 + 16), *(void *)(*v33 + 40));
  id v49 = a1;
  swift_retain();
  uint64_t v52 = sub_240B93EC8();
  LOBYTE(v51) = 0;
  sub_240A59EEC();
  sub_240A20FC8((unint64_t *)&qword_26AFD9820, (void (*)(uint64_t))sub_240A59EEC);
  sub_240BB6310();
  swift_release();
  sub_240A20FC8(&qword_268CA1670, (void (*)(uint64_t))sub_240B51E6C);
  uint64_t v34 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v13);
  uint64_t v52 = v34;
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9980);
  id v51 = (id)sub_240BB7310();
  uint64_t v35 = sub_240BB72F0();
  uint64_t v36 = (uint64_t)v45;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v45, 1, 1, v35);
  sub_240A3B844(0, (unint64_t *)&qword_26AFD7530);
  sub_240A3B7F4(&qword_26AFD7528, (unint64_t *)&qword_26AFD7530);
  sub_240A805DC();
  uint64_t v37 = v46;
  sub_240BB6400();
  sub_240B51D40(v36, (uint64_t)&unk_26AFD9960, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_240B51E08);

  swift_release();
  uint64_t v38 = swift_allocObject();
  uint64_t v39 = v49;
  *(void *)(v38 + 16) = v3;
  *(void *)(v38 + 24) = v39;
  *(void *)(v38 + 32) = a2;
  *(unsigned char *)(v38 + 40) = v19;
  *(void *)(v38 + 48) = sub_240B51F40;
  *(void *)(v38 + 56) = v21;
  sub_240B51FC4();
  id v40 = v39;
  swift_retain();
  swift_retain();
  uint64_t v41 = v48;
  uint64_t v42 = sub_240BB6450();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v41);
  *(id *)((char *)v3 + v50) = (id)v42;
  return swift_release();
}

uint64_t sub_240B4C4F4(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  sub_240A3FB28();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFD7158 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_240A395FC(v8, (uint64_t)qword_26AFDEB68);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a1;
  v13[3] = a2;
  void v13[4] = v6;
  aBlock[0] = 0;
  id v14 = a1;
  sub_240BB5700();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t ObjectType = swift_getObjectType();
  if (!(*(unsigned __int8 (**)(uint64_t, uint64_t))(a2 + 8))(ObjectType, a2)) {
    return sub_240B4CB4C(0, 0, 0);
  }
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_240BB2980();
  uint64_t v27 = v17;
  uint64_t v28 = v16;
  sub_240A39CAC(0, (unint64_t *)&qword_26AFD77C0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240BBAEF0;
  sub_240BB2980();
  int v19 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  uint64_t v20 = self;
  id v21 = objc_msgSend(v20, sel_actionWithTitle_style_handler_, v19, 1, 0);

  *(void *)(inited + 32) = v21;
  sub_240BB2980();
  uint64_t v22 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  int v23 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  aBlock[4] = (unint64_t)sub_240B51CC4;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (unint64_t)sub_240B187EC;
  aBlock[3] = (unint64_t)&unk_26F509490;
  BOOL v24 = _Block_copy(aBlock);
  swift_release();
  id v25 = objc_msgSend(v20, sel_actionWithTitle_style_handler_, v23, 0, v24);
  _Block_release(v24);
  swift_release();

  *(void *)(inited + 40) = v25;
  aBlock[0] = inited;
  sub_240BB6F30();
  sub_240B5121C(v28, v27, 0, 0, aBlock[0], 0, 0, v14, a2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_240B4C9D0(uint64_t a1, uint64_t a2)
{
  sub_240BB77C0();
  sub_240BB6E70();
  sub_240BB7C80();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(ObjectType, a2);
  sub_240B49F94();
  sub_240BB6E70();
  return 0;
}

uint64_t sub_240B4CAE8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_240B4CB4C(0, 0, 0);
    return swift_release();
  }
  return result;
}

uint64_t sub_240B4CB4C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v6 = *v3;
  uint64_t v7 = sub_240BB6B90();
  uint64_t v32 = *(void *)(v7 - 8);
  uint64_t v33 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_240BB6BC0();
  uint64_t v30 = *(void *)(v10 - 8);
  uint64_t v31 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3FB28();
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFD7158 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_240A395FC(v14, (uint64_t)qword_26AFDEB68);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v18, v14);
  uint64_t v19 = swift_allocObject();
  char v20 = a1 & 1;
  *(unsigned char *)(v19 + 16) = v20;
  *(void *)(v19 + 24) = v6;
  aBlock[0] = 0;
  sub_240BB5710();
  swift_release();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9980);
  id v21 = (void *)sub_240BB7310();
  uint64_t v22 = swift_allocObject();
  *(unsigned char *)(v22 + 16) = v20;
  uint64_t v24 = v28;
  uint64_t v23 = v29;
  *(void *)(v22 + 24) = v4;
  *(void *)(v22 + 32) = v24;
  *(void *)(v22 + 40) = v23;
  aBlock[4] = sub_240B51D30;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_240A87354;
  aBlock[3] = &unk_26F509508;
  id v25 = _Block_copy(aBlock);
  swift_retain();
  sub_240AECDA0(v24);
  swift_release();
  sub_240BB6BB0();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_240A20FC8((unint64_t *)&qword_26AFD98C8, MEMORY[0x263F8F030]);
  sub_240B51E08(0, (unint64_t *)&qword_26AFD98F0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
  sub_240AD7290();
  uint64_t v26 = v33;
  sub_240BB7670();
  MEMORY[0x24560A5E0](0, v12, v9, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v12, v31);
}

uint64_t sub_240B4CFC4(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  sub_240A3FB28();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFD7158 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_240A395FC(v8, (uint64_t)qword_26AFDEB68);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a1;
  v13[3] = a2;
  void v13[4] = v6;
  v16[1] = 0;
  id v14 = a1;
  sub_240BB5700();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_240B4BD6C(v14, a2);
}

uint64_t sub_240B4D198(uint64_t a1, int a2, void *a3, uint64_t a4)
{
  uint64_t v26 = a4;
  uint64_t v24 = a3;
  char v6 = a2;
  int v25 = a2;
  uint64_t v28 = MEMORY[0x263F8F110];
  uint64_t v27 = MEMORY[0x263F8D8F0];
  sub_240B51E08(0, (unint64_t *)&unk_26AFD9960, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v24 - v9;
  sub_240B52178(0, &qword_268CA1680, &qword_268CA1688, (uint64_t)&type metadata for AFibBurdenOnboardingProgressionState, &qword_268CA1690);
  uint64_t v29 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)&v24 - v13;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0;
  sub_240A3466C((void *)(a1 + 16), *(void *)(a1 + 40));
  uint64_t v30 = sub_240A73B8C(v6, a3, a4);
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9980);
  id v31 = (id)sub_240BB7310();
  uint64_t v16 = sub_240BB72F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v10, 1, 1, v16);
  sub_240A3B844(0, &qword_268CA1688);
  sub_240A3B7F4(&qword_268CA1690, &qword_268CA1688);
  sub_240A805DC();
  sub_240BB6400();
  sub_240B51D40((uint64_t)v10, (uint64_t)&unk_26AFD9960, v28, v27, (uint64_t (*)(void))sub_240B51E08);

  swift_release();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  *(unsigned char *)(v17 + 24) = v25;
  uint64_t v18 = v24;
  uint64_t v19 = v26;
  *(void *)(v17 + 32) = v24;
  *(void *)(v17 + 40) = v19;
  *(void *)(v17 + 48) = v15;
  sub_240B522D0();
  swift_retain();
  id v20 = v18;
  swift_retain();
  uint64_t v21 = v29;
  uint64_t v22 = sub_240BB6450();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v21);
  swift_beginAccess();
  *(void *)(v15 + 16) = v22;
  swift_release();
  return swift_release();
}

uint64_t sub_240B4D518(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  char v9 = a3;
  id v11 = *(id *)a1;
  unsigned int v12 = *(unsigned __int8 *)(a1 + 8);
  if (v12 >> 6)
  {
    if (v12 >> 6 == 1)
    {
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = a2;
      *(unsigned char *)(v13 + 24) = v9;
      swift_retain();
      sub_240B523B4(v11 & 1, a4, a5, (uint64_t)sub_240B52380, v13);
      swift_release();
    }
    else
    {
      sub_240B4D630(a3, 0, 0);
    }
  }
  else
  {
    sub_240B4DB94(*(id *)a1, v12, a4, a5, a3);
  }
  swift_beginAccess();
  *(void *)(a6 + 16) = 0;
  return swift_release();
}

uint64_t sub_240B4D630(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = type metadata accessor for AFibBurdenOnboardingPresentationContext();
  MEMORY[0x270FA5388](v9 - 8);
  id v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3FB28();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  uint64_t result = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&aBlock[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!qword_26F503358)
  {
LABEL_18:
    __break(1u);
    return result;
  }
  if (byte_26F503368 != a1)
  {
    uint64_t v18 = 0;
    while (qword_26F503358 - 1 != v18)
    {
      int v19 = *((unsigned __int8 *)&unk_26F503348 + v18++ + 33);
      if (v19 == a1) {
        goto LABEL_7;
      }
    }
    goto LABEL_18;
  }
  uint64_t v18 = 0;
LABEL_7:
  BOOL v20 = __OFADD__(v18, 1);
  uint64_t v21 = v18 + 1;
  if (v20)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v21 < qword_26F503358)
  {
    if ((v21 & 0x8000000000000000) == 0)
    {
      LODWORD(a3) = *((unsigned __int8 *)&unk_26F503348 + v21 + 32);
      if (qword_26AFD7158 == -1)
      {
LABEL_11:
        uint64_t v22 = sub_240A395FC(v13, (uint64_t)qword_26AFDEB68);
        (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v22, v13);
        uint64_t v23 = swift_allocObject();
        *(unsigned char *)(v23 + 16) = a1;
        *(unsigned char *)(v23 + 17) = a3;
        *(void *)(v23 + 24) = v8;
        aBlock[0] = 0;
        sub_240BB5710();
        swift_release();
        (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
        return sub_240B4F0B0(a3, a1);
      }
LABEL_17:
      swift_once();
      goto LABEL_11;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v35 = a3;
  if (qword_26AFD7158 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_240A395FC(v13, (uint64_t)qword_26AFDEB68);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v24, v13);
  uint64_t v25 = swift_allocObject();
  *(unsigned char *)(v25 + 16) = a1;
  *(void *)(v25 + 24) = v8;
  aBlock[0] = 0;
  sub_240BB5700();
  swift_release();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  sub_240B5187C((uint64_t)v4 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_presentationContext, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for AFibBurdenOnboardingPresentationContext);
  uint64_t v26 = sub_240A3466C(v4 + 2, v4[5]);
  uint64_t v27 = *(void *)(*sub_240A3466C((void *)(*v26 + 16), *(void *)(*v26 + 40)) + 104);
  uint64_t v28 = v27 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v27 + 16);
  uint64_t v29 = (os_unfair_lock_s *)(v27 + ((*(unsigned int *)(*(void *)v27 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v29);
  sub_240B926DC(v28, aBlock);
  os_unfair_lock_unlock(v29);
  uint64_t v30 = aBlock[0];
  swift_release();
  type metadata accessor for AFibBurdenOnboardingStepAnalyticsEvent();
  uint64_t v31 = swift_allocObject();
  sub_240B5260C((uint64_t)v11, v31 + OBJC_IVAR____TtC5Heart38AFibBurdenOnboardingStepAnalyticsEvent_presentationContext);
  *(unsigned char *)(v31 + OBJC_IVAR____TtC5Heart38AFibBurdenOnboardingStepAnalyticsEvent_onboardingStep) = a1;
  *(void *)(v31 + OBJC_IVAR____TtC5Heart38AFibBurdenOnboardingStepAnalyticsEvent_countryCode) = v30;
  uint64_t v32 = *(void **)((char *)v4 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_analyticsEventSubmissionManager);
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v8;
  aBlock[4] = sub_240B52680;
  aBlock[5] = v33;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_240AB0D44;
  aBlock[3] = &unk_26F509878;
  uint64_t v34 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v32, sel_submitEvent_completion_, v31, v34);
  _Block_release(v34);
  swift_release();
  sub_240B4CB4C(1, a2, v35);
  return swift_release();
}

void sub_240B4DB94(id a1, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  char v6 = v5;
  uint64_t v76 = a5;
  uint64_t v73 = a4;
  objc_super v74 = a3;
  uint64_t v78 = *v5;
  sub_240A3FB28();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v75 = a1;
  if (!a2)
  {
    if (qword_268C9E7A8 == -1)
    {
LABEL_6:
      uint64_t v71 = sub_240BB2980();
      uint64_t v72 = v14;
      LODWORD(v67) = 0;
      id v77 = 0;
      uint64_t v69 = 0;
      uint64_t v70 = 0;
      id v66 = a1;
      goto LABEL_25;
    }
LABEL_42:
    swift_once();
    goto LABEL_6;
  }
  if (a2 == 1)
  {
    if (qword_268C9E7A8 == -1) {
      goto LABEL_6;
    }
    goto LABEL_42;
  }
  switch((unint64_t)a1)
  {
    case 1uLL:
      char v15 = a2;
      if (qword_268C9E7A8 != -1) {
        swift_once();
      }
      uint64_t v71 = sub_240BB2980();
      uint64_t v72 = v16;
      uint64_t v69 = sub_240BB2980();
      uint64_t v70 = v17;
      uint64_t v18 = sub_240BB2980();
      uint64_t v20 = 0xD000000000000016;
      uint64_t v21 = "bridge:root=PRIVACY_ID";
      goto LABEL_24;
    case 2uLL:
      if (qword_268C9E7A8 == -1) {
        goto LABEL_20;
      }
      goto LABEL_44;
    case 3uLL:
      if (qword_268C9E7A8 == -1) {
        goto LABEL_20;
      }
      goto LABEL_44;
    case 4uLL:
      if (qword_268C9E7A8 == -1) {
        goto LABEL_20;
      }
      goto LABEL_44;
    case 5uLL:
      if (qword_268C9E7A8 == -1) {
        goto LABEL_20;
      }
      goto LABEL_44;
    case 6uLL:
      char v15 = a2;
      if (qword_268C9E7A8 != -1) {
        swift_once();
      }
      uint64_t v71 = sub_240BB2980();
      uint64_t v72 = v23;
      uint64_t v69 = sub_240BB2980();
      uint64_t v70 = v24;
      uint64_t v18 = sub_240BB2980();
      uint64_t v20 = 0xD00000000000002FLL;
      uint64_t v21 = "bridge:root=PASSCODE_ID#WRIST_DETECTION_CELL_ID";
LABEL_24:
      id v77 = sub_240B503B4(v18, v19, v20, (unint64_t)(v21 - 32) | 0x8000000000000000, v78);
      swift_bridgeObjectRelease();
      id v66 = 0;
      LODWORD(v67) = 1;
      a2 = v15;
      a1 = v75;
      break;
    default:
      if (qword_268C9E7A8 == -1) {
        goto LABEL_20;
      }
LABEL_44:
      swift_once();
LABEL_20:
      uint64_t v71 = sub_240BB2980();
      uint64_t v72 = v22;
      id v66 = 0;
      id v77 = 0;
      uint64_t v69 = 0;
      uint64_t v70 = 0;
      LODWORD(v67) = 1;
      break;
  }
LABEL_25:
  if (qword_26AFD7158 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_240A395FC(v10, (uint64_t)qword_26AFDEB68);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v25, v10);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = a1;
  *(unsigned char *)(v26 + 24) = a2;
  *(void *)(v26 + 32) = v78;
  uint64_t aBlock = 0;
  sub_240BB5700();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  char v27 = a2;
  sub_240BB2980();
  uint64_t v28 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  id v29 = objc_msgSend(self, sel_actionWithTitle_style_handler_, v28, 1, 0);

  sub_240A39CAC(0, (unint64_t *)&qword_26AFD77C0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_240BBAD40;
  *(void *)(v30 + 32) = v29;
  uint64_t aBlock = (void *)v30;
  sub_240BB6F30();
  unint64_t v85 = (unint64_t)aBlock;
  id v31 = v77;
  id v68 = v29;
  if (v77)
  {
    id v32 = v29;
    id v33 = v31;
    id v34 = v32;
    id v35 = v33;
    MEMORY[0x24560A190]();
    if (*(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_240BB6F60();
    }
    sub_240BB6F70();
    sub_240BB6F30();
  }
  else
  {
    id v35 = v29;
  }
  uint64_t v36 = sub_240A3466C(v6 + 2, v6[5]);
  uint64_t v37 = *(void *)(*sub_240A3466C((void *)(*v36 + 16), *(void *)(*v36 + 40)) + 104);
  uint64_t v38 = (void *)MEMORY[0x263F8DD00];
  uint64_t v39 = v37 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v37 + 16);
  id v40 = (os_unfair_lock_s *)(v37 + ((*(unsigned int *)(*(void *)v37 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v40);
  sub_240B926DC(v39, &aBlock);
  os_unfair_lock_unlock(v40);
  uint64_t v41 = aBlock;
  swift_release();
  type metadata accessor for AFibBurdenOnboardingErrorAnalyticsEvent();
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = v75;
  *(unsigned char *)(v42 + 24) = v27;
  *(unsigned char *)(v42 + 25) = v76;
  *(void *)(v42 + 32) = v41;
  uint64_t v43 = *(void **)((char *)v6 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_analyticsEventSubmissionManager);
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = v78;
  id v83 = sub_240B5206C;
  uint64_t v84 = v44;
  uint64_t aBlock = (void *)MEMORY[0x263EF8330];
  uint64_t v80 = 1107296256;
  uint64_t v81 = sub_240AB0D44;
  uint64_t v82 = &unk_26F509670;
  uint64_t v45 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v43, sel_submitEvent_completion_, v42, v45);
  _Block_release(v45);
  swift_release();
  if ((v67 & 1) == 0)
  {
    id v75 = (id)*MEMORY[0x263F09728];
    id v46 = (id)HKHRAFibBurdenAnalyticsPropertyValueForVersion();
    uint64_t v67 = sub_240BB6DE0();

    uint64_t v47 = sub_240A3466C(v6 + 2, v6[5]);
    uint64_t v48 = *(void *)(*sub_240A3466C((void *)(*v47 + 16), *(void *)(*v47 + 40)) + 104);
    uint64_t v49 = v48 + *(void *)(*v38 + *(void *)v48 + 16);
    uint64_t v50 = (os_unfair_lock_s *)(v48 + ((*(unsigned int *)(*(void *)v48 + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v50);
    sub_240B926DC(v49, &aBlock);
    os_unfair_lock_unlock(v50);
    id v51 = aBlock;
    swift_release();
    if (v51)
    {
      id v52 = objc_msgSend(v51, sel_ISOCode);
      sub_240BB50A0();
      sub_240BB6DE0();
      id v51 = v53;
    }
    id v54 = v66;
    uint64_t v55 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
    if (v51)
    {
      uint64_t v56 = (void *)sub_240BB6DA0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v56 = 0;
    }
    id v57 = objc_allocWithZone(MEMORY[0x263F468A0]);
    uint64_t v58 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
    uint64_t v59 = v75;
    id v60 = objc_msgSend(v57, sel_initWithFeatureIdentifier_featureVersion_countryCode_step_onboardingIneligibilityReasons_, v75, v55, v56, v58, v54);

    uint64_t v61 = swift_allocObject();
    *(void *)(v61 + 16) = v78;
    id v83 = sub_240B520B4;
    uint64_t v84 = v61;
    uint64_t aBlock = (void *)MEMORY[0x263EF8330];
    uint64_t v80 = 1107296256;
    uint64_t v81 = sub_240AB0D44;
    uint64_t v82 = &unk_26F5096C0;
    uint64_t v62 = _Block_copy(&aBlock);
    id v63 = v60;
    swift_release();
    objc_msgSend(v43, sel_submitEvent_completion_, v63, v62);
    _Block_release(v62);
  }
  unint64_t v64 = v85;
  id v65 = v35;
  sub_240B5121C(v71, v72, v69, v70, v64, (uint64_t)v35, 1, v74, v73);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
}

uint64_t sub_240B4EA14()
{
  return 0;
}

void sub_240B4EAE0(unsigned __int8 *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t))
{
  int v10 = *a1;
  *(void *)(a2 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_completeOnboardingSubscriber) = 0;
  uint64_t v11 = swift_release();
  if (v10 == 1) {
    a6(v11);
  }
  else {
    sub_240B4DB94((id)4, 2, a3, a4, a5);
  }
}

uint64_t sub_240B4EB74()
{
  return 0;
}

uint64_t sub_240B4ED80()
{
  return 0;
}

uint64_t sub_240B4F0B0(int a1, char a2)
{
  uint64_t v3 = v2;
  int v31 = a1;
  uint64_t v30 = *v2;
  uint64_t v29 = sub_240BB6B90();
  uint64_t v34 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  char v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240BB6BC0();
  uint64_t v32 = *(void *)(v7 - 8);
  uint64_t v33 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AFibBurdenOnboardingPresentationContext();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B5187C((uint64_t)v2 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_presentationContext, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for AFibBurdenOnboardingPresentationContext);
  uint64_t v13 = sub_240A3466C(v2 + 2, v2[5]);
  uint64_t v14 = *(void *)(*sub_240A3466C((void *)(*v13 + 16), *(void *)(*v13 + 40)) + 104);
  uint64_t v15 = v14 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v14 + 16);
  uint64_t v16 = (os_unfair_lock_s *)(v14 + ((*(unsigned int *)(*(void *)v14 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v16);
  sub_240B926DC(v15, &aBlock);
  os_unfair_lock_unlock(v16);
  uint64_t v17 = aBlock;
  swift_release();
  type metadata accessor for AFibBurdenOnboardingStepAnalyticsEvent();
  uint64_t v18 = swift_allocObject();
  sub_240B5260C((uint64_t)v12, v18 + OBJC_IVAR____TtC5Heart38AFibBurdenOnboardingStepAnalyticsEvent_presentationContext);
  *(unsigned char *)(v18 + OBJC_IVAR____TtC5Heart38AFibBurdenOnboardingStepAnalyticsEvent_onboardingStep) = a2;
  *(void *)(v18 + OBJC_IVAR____TtC5Heart38AFibBurdenOnboardingStepAnalyticsEvent_countryCode) = v17;
  uint64_t v19 = *(void **)((char *)v3 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_analyticsEventSubmissionManager);
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = v30;
  *(void *)(v20 + 16) = v30;
  uint64_t v39 = sub_240B526E8;
  uint64_t v40 = v20;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v36 = 1107296256;
  uint64_t v37 = sub_240AB0D44;
  uint64_t v38 = &unk_26F5098F0;
  uint64_t v22 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v19, sel_submitEvent_completion_, v18, v22);
  _Block_release(v22);
  swift_release();
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9980);
  uint64_t v23 = (void *)sub_240BB7310();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v3;
  *(unsigned char *)(v24 + 24) = v31;
  *(void *)(v24 + 32) = v21;
  uint64_t v39 = sub_240B52758;
  uint64_t v40 = v24;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v36 = 1107296256;
  uint64_t v37 = sub_240A87354;
  uint64_t v38 = &unk_26F509940;
  uint64_t v25 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  sub_240BB6BB0();
  uint64_t aBlock = MEMORY[0x263F8EE78];
  sub_240A20FC8((unint64_t *)&qword_26AFD98C8, MEMORY[0x263F8F030]);
  sub_240B51E08(0, (unint64_t *)&qword_26AFD98F0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
  sub_240AD7290();
  uint64_t v26 = v29;
  sub_240BB7670();
  MEMORY[0x24560A5E0](0, v9, v6, v25);
  _Block_release(v25);
  swift_release();

  (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v9, v33);
}

void sub_240B4F614(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v23 = a3;
  sub_240A3FB28();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  HIDWORD(v22) = a2;
  uint64_t v10 = (void *)sub_240B639A4(a2);
  uint64_t v12 = v11;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v12 + 24);
  uint64_t v15 = swift_unknownObjectRetain();
  v14(v15, &off_26F509370, ObjectType, v12);
  if (qword_26AFD7158 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_240A395FC(v6, (uint64_t)qword_26AFDEB68);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v16, v6);
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = BYTE4(v22);
  *(void *)(v17 + 24) = v23;
  *(void *)&v24[0] = 0;
  sub_240BB5710();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v18 = a1 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_navigationController;
  if (MEMORY[0x24560BA20](v18))
  {
    uint64_t v19 = *(void *)(v18 + 8);
    swift_getObjectType();
    memset(v24, 0, sizeof(v24));
    uint64_t v20 = *(void (**)(void))(v19 + 32);
    id v21 = v10;
    v20();
    sub_240BB50A0();

    sub_240B51D40((uint64_t)v24, (uint64_t)&qword_26AFD9EE0, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_240A39CAC);
  }
  else
  {
  }
}

uint64_t sub_240B4F8BC()
{
  return 0;
}

uint64_t sub_240B4FAB8()
{
  return 0;
}

uint64_t sub_240B4FBDC(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_240B51E08(0, &qword_26AFD7B70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v18 - v9;
  if (a1)
  {
    id v11 = (id)HKHRAFibBurdenDetailRoomBaseLink();
    sub_240BB2B00();

    uint64_t v12 = sub_240BB2B20();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 0, 1, v12);
  }
  else
  {
    uint64_t v13 = sub_240BB2B20();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 1, 1, v13);
  }
  uint64_t v14 = a2 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_navigationController;
  if (MEMORY[0x24560BA20](a2 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_navigationController))
  {
    uint64_t v15 = *(void *)(v14 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 40))(a1 & 1, v10, a3, a4, ObjectType, v15);
    sub_240BB50A0();
  }
  return sub_240B51D40((uint64_t)v10, (uint64_t)&qword_26AFD7B70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_240B51E08);
}

id sub_240B4FDC8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    if (qword_268C9E7A8 != -1) {
      swift_once();
    }
    sub_240BB2980();
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = a1;
    *(void *)(v8 + 24) = a2;
    swift_retain();
    uint64_t v6 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_240B5288C;
    uint64_t v17 = v8;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v13 = 1107296256;
    uint64_t v7 = &unk_26F509AA8;
  }
  else
  {
    if (qword_268C9E7A8 != -1) {
      swift_once();
    }
    sub_240BB2980();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    *(void *)(v5 + 24) = a2;
    swift_retain();
    uint64_t v6 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_240B5285C;
    uint64_t v17 = v5;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v13 = 1107296256;
    uint64_t v7 = &unk_26F509A58;
  }
  uint64_t v14 = sub_240B187EC;
  uint64_t v15 = v7;
  uint64_t v9 = _Block_copy(&aBlock);
  swift_release();
  id v10 = objc_msgSend(self, sel_actionWithTitle_style_handler_, v6, 0, v9, 0xE000000000000000);
  _Block_release(v9);

  return v10;
}

id sub_240B50068(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    if (qword_268C9E7A8 != -1) {
      swift_once();
    }
    sub_240BB2980();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    *(void *)(v7 + 24) = a2;
    swift_retain();
    uint64_t v8 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_240B52A84;
    aBlock[5] = v7;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_240B187EC;
    aBlock[3] = &unk_26F509A08;
    uint64_t v9 = _Block_copy(aBlock);
    swift_release();
    id v4 = objc_msgSend(self, sel_actionWithTitle_style_handler_, v8, 1, v9, 0xE000000000000000);
    _Block_release(v9);
  }
  else
  {
    if (qword_268C9E7A8 != -1) {
      swift_once();
    }
    sub_240BB2980();
    uint64_t v3 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
    id v4 = objc_msgSend(self, sel_actionWithTitle_style_handler_, v3, 1, 0, 0xE000000000000000);
  }
  return v4;
}

uint64_t sub_240B502C0(char a1)
{
  if (a1)
  {
    if (qword_268C9E7A8 != -1) {
      swift_once();
    }
  }
  else if (qword_268C9E7A8 != -1)
  {
    swift_once();
  }
  return sub_240BB2980();
}

id sub_240B503B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a3;
  v8[3] = a4;
  v8[4] = a5;
  sub_240BB4850();
  sub_240BB4850();
  uint64_t v9 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  void v13[4] = sub_240B52160;
  v13[5] = v8;
  v13[0] = MEMORY[0x263EF8330];
  v13[1] = 1107296256;
  v13[2] = sub_240B187EC;
  v13[3] = &unk_26F509760;
  id v10 = _Block_copy(v13);
  swift_release();
  id v11 = objc_msgSend(self, sel_actionWithTitle_style_handler_, v9, 0, v10);
  _Block_release(v10);

  return v11;
}

uint64_t sub_240B504F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_240A3FB28();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B51E08(0, &qword_26AFD7B70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v25 - v13;
  uint64_t v15 = sub_240BB2B20();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB2B10();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_240B51D40((uint64_t)v14, (uint64_t)&qword_26AFD7B70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_240B51E08);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    id v19 = objc_msgSend(self, sel_defaultWorkspace);
    if (v19)
    {
      uint64_t v20 = v19;
      id v21 = (void *)sub_240BB2AF0();
      objc_msgSend(v20, sel_openSensitiveURL_withOptions_, v21, 0);

      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  if (qword_26AFD7158 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_240A395FC(v8, (uint64_t)qword_26AFDEB68);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v23, v8);
  uint64_t v24 = (void *)swift_allocObject();
  _OWORD v24[2] = a2;
  void v24[3] = a3;
  v24[4] = a4;
  v25[1] = 0;
  sub_240BB4850();
  sub_240BB5720();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_240B508A0()
{
  return 0;
}

uint64_t sub_240B509AC()
{
  return 0;
}

uint64_t sub_240B50AC4(void *a1)
{
  sub_240BB77C0();
  sub_240BB6E70();
  sub_240BB7C80();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  id v2 = a1;
  sub_240A49AC0();
  sub_240BB6E10();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return 0;
}

uint64_t sub_240B50BDC(uint64_t a1, void *a2, uint64_t a3)
{
  sub_240A3FB28();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t result = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v11 = a2;
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_240A395FC(v6, (uint64_t)qword_26AFDEB68);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v12, v6);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a2;
    *(void *)(v13 + 24) = a3;
    v15[1] = 0;
    id v14 = a2;
    sub_240BB5720();
    swift_release();

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return result;
}

uint64_t sub_240B50D70(void *a1)
{
  sub_240BB77C0();
  sub_240BB6E70();
  sub_240BB7C80();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  id v2 = a1;
  sub_240A49AC0();
  sub_240BB6E10();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return 0;
}

uint64_t sub_240B50E8C()
{
  uint64_t v0 = sub_240BB3630();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F43580], v0);
  sub_240BB3620();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_240B50F70()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B50FA8()
{
  return sub_240B92A10(*(void **)(v0 + 16));
}

void *sub_240B50FB0(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, char a7, void *a8)
{
  uint64_t v26 = a4;
  uint64_t v15 = type metadata accessor for AFibBurdenOnboardingFlowManager.State();
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_240BB7900()) {
    unint64_t v18 = sub_240A71C94(MEMORY[0x263F8EE78]);
  }
  else {
    unint64_t v18 = MEMORY[0x263F8EE88];
  }
  a8[12] = v18;
  uint64_t v19 = sub_240BB56E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 1, 1, v19);
  *(void *)&v17[*(int *)(v15 + 20)] = 0;
  v17[*(int *)(v15 + 24)] = 0;
  sub_240B51814();
  uint64_t v20 = swift_allocObject();
  *(_DWORD *)(v20 + ((*(unsigned int *)(*(void *)v20 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_240B5187C((uint64_t)v17, v20 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v20 + 16), (uint64_t (*)(void))type metadata accessor for AFibBurdenOnboardingFlowManager.State);
  sub_240B518E4((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for AFibBurdenOnboardingFlowManager.State);
  a8[13] = v20;
  a8[2] = a1;
  a8[3] = a2;
  id v21 = v26;
  a8[4] = a3;
  a8[5] = v21;
  a8[6] = a5;
  sub_240A1E37C(a6, (uint64_t)(a8 + 7));
  if (a7)
  {
    id v22 = a1;
    swift_retain();
    id v23 = v21;
    swift_unknownObjectRetain();
    sub_240B92E24();

    swift_release();
    sub_240BB50A0();
  }
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a6);
  return a8;
}

uint64_t sub_240B5121C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9)
{
  uint64_t v34 = a6;
  id v35 = a8;
  uint64_t v13 = sub_240BB6B90();
  uint64_t v38 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_240BB6BC0();
  uint64_t v36 = *(void *)(v16 - 8);
  uint64_t v37 = v16;
  MEMORY[0x270FA5388](v16);
  unint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    sub_240BB4850();
    if (a2)
    {
      sub_240BB4850();
      uint64_t v19 = (void *)sub_240BB6DA0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v19 = 0;
    }
    uint64_t v20 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
    id v21 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v19, v20, a7);
  }
  else
  {
    if (a2)
    {
      sub_240BB4850();
      uint64_t v20 = (void *)sub_240BB6DA0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = 0;
    }
    id v21 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, 0, v20, a7);
  }

  if (!(a5 >> 62))
  {
    uint64_t v22 = *(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = sub_240BB4850();
    if (v22) {
      goto LABEL_12;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_setPreferredAction_, v34);
    sub_240A34DC4(0, (unint64_t *)&qword_26AFD9980);
    char v27 = (void *)sub_240BB7310();
    uint64_t v28 = (void *)swift_allocObject();
    uint64_t v29 = v35;
    void v28[2] = v35;
    v28[3] = a9;
    unsigned char v28[4] = v21;
    aBlock[4] = sub_240B51DE0;
    aBlock[5] = v28;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_240A87354;
    aBlock[3] = &unk_26F509558;
    uint64_t v30 = _Block_copy(aBlock);
    id v31 = v29;
    id v32 = v21;
    swift_release();
    sub_240BB6BB0();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_240A20FC8((unint64_t *)&qword_26AFD98C8, MEMORY[0x263F8F030]);
    sub_240B51E08(0, (unint64_t *)&qword_26AFD98F0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    sub_240AD7290();
    sub_240BB7670();
    MEMORY[0x24560A5E0](0, v18, v15, v30);
    _Block_release(v30);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v13);
    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v18, v37);
  }
  sub_240BB4850();
  uint64_t result = sub_240BB7900();
  uint64_t v22 = result;
  if (!result) {
    goto LABEL_19;
  }
LABEL_12:
  if (v22 >= 1)
  {
    for (uint64_t i = 0; i != v22; ++i)
    {
      if ((a5 & 0xC000000000000001) != 0) {
        id v25 = (id)MEMORY[0x24560AAA0](i, a5);
      }
      else {
        id v25 = *(id *)(a5 + 8 * i + 32);
      }
      uint64_t v26 = v25;
      objc_msgSend(v21, sel_addAction_, v25);
    }
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_240B516DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7)
{
  v17[3] = type metadata accessor for AFibBurdenOnboardingModel();
  v17[4] = &off_26F504980;
  v17[0] = a1;
  *(void *)(a7 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_completeOnboardingSubscriber) = 0;
  uint64_t v13 = a7 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_navigationController;
  *(void *)(a7 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_navigationController + 8) = 0;
  swift_unknownObjectWeakInit();
  sub_240A1E37C((uint64_t)v17, a7 + 16);
  sub_240B5187C(a2, a7 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_presentationContext, (uint64_t (*)(void))type metadata accessor for AFibBurdenOnboardingPresentationContext);
  *(void *)(v13 + 8) = &off_26F509390;
  swift_unknownObjectWeakAssign();
  *(void *)(a7 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_viewFactory) = a4;
  *(void *)(a7 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_healthStore) = a5;
  *(void *)(a7 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_analyticsEventSubmissionManager) = a6;
  swift_retain();
  id v14 = a5;
  id v15 = a6;
  sub_240B4B804();
  sub_240B518E4(a2, (uint64_t (*)(void))type metadata accessor for AFibBurdenOnboardingPresentationContext);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v17);
  return a7;
}

void sub_240B51814()
{
  if (!qword_268CA1658)
  {
    type metadata accessor for AFibBurdenOnboardingFlowManager.State();
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_240BB7840();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA1658);
    }
  }
}

uint64_t sub_240B5187C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_240B518E4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_240B51944()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_240A3FB28();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFD7158 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_240A395FC(v4, (uint64_t)qword_26AFDEB68);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  *(void *)(swift_allocObject() + 16) = v2;
  v15[1] = 0;
  sub_240BB5700();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  sub_240BB2980();
  sub_240B70DF8();
  id v9 = objc_allocWithZone((Class)sub_240BB3510());
  uint64_t v10 = (void *)sub_240BB3500();
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v10);
  uint64_t v12 = (char *)v1 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_navigationController;
  if (MEMORY[0x24560BA20](v12))
  {
    uint64_t v13 = *((void *)v12 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(id, uint64_t, void, void, uint64_t, uint64_t))(v13 + 16))(v11, 1, 0, 0, ObjectType, v13);

    sub_240BB50A0();
  }
  else
  {
  }
}

uint64_t sub_240B51C30()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B51C40()
{
  return sub_240B4BB84();
}

uint64_t sub_240B51C48()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_240B51C80()
{
  return sub_240B4C9D0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_240B51C8C()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B51CC4()
{
  return sub_240B4CAE8();
}

uint64_t sub_240B51CCC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B51CDC()
{
  return sub_240B4FAB8();
}

uint64_t sub_240B51CE8()
{
  swift_release();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_240B51D30()
{
  return sub_240B4FBDC(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_240B51D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_240B51DA0()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

id sub_240B51DE0()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_presentViewController_animated_completion_, *(void *)(v0 + 32), 1, 0);
}

uint64_t sub_240B51DFC()
{
  return sub_240B4BC54(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_240B51E08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_240B51E6C()
{
  if (!qword_268CA1660)
  {
    sub_240A59EEC();
    sub_240A20FC8((unint64_t *)&qword_26AFD9820, (void (*)(uint64_t))sub_240A59EEC);
    unint64_t v0 = sub_240BB5FC0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA1660);
    }
  }
}

uint64_t sub_240B51F00()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_240B51F40()
{
  return sub_240B4D198(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_240B51F50()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B51F60()
{
  return sub_240B4EA14();
}

uint64_t sub_240B51F68()
{
  swift_release();

  swift_release();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

void sub_240B51FB0(unsigned __int8 *a1)
{
  sub_240B4EAE0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void (**)(uint64_t))(v1 + 48));
}

unint64_t sub_240B51FC4()
{
  unint64_t result = qword_268CA1678;
  if (!qword_268CA1678)
  {
    sub_240B52178(255, &qword_268CA1668, (unint64_t *)&qword_26AFD7530, MEMORY[0x263F8D4F8], &qword_26AFD7528);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1678);
  }
  return result;
}

uint64_t sub_240B5203C()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_240B5204C()
{
  return sub_240B509AC();
}

uint64_t sub_240B5205C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B5206C(uint64_t a1, void *a2)
{
  return sub_240B50BDC(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_240B520A4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B520B4(uint64_t a1, void *a2)
{
  return sub_240B50BDC(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_240B520EC()
{
  return sub_240B50D70(*(void **)(v0 + 16));
}

uint64_t sub_240B520F4()
{
  return sub_240B50AC4(*(void **)(v0 + 16));
}

uint64_t sub_240B52128()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_240B52160(uint64_t a1)
{
  return sub_240B504F0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_240B5216C()
{
  return sub_240B508A0();
}

void sub_240B52178(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  if (!*a2)
  {
    sub_240A3B844(255, a3);
    sub_240A34DC4(255, (unint64_t *)&qword_26AFD9980);
    sub_240A3B7F4(a5, a3);
    sub_240A805DC();
    unint64_t v8 = sub_240BB60E0();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_240B5223C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B52274()
{
  swift_release();

  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_240B522BC(uint64_t a1)
{
  return sub_240B4D518(a1, *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

unint64_t sub_240B522D0()
{
  unint64_t result = qword_268CA1698;
  if (!qword_268CA1698)
  {
    sub_240B52178(255, &qword_268CA1680, &qword_268CA1688, (uint64_t)&type metadata for AFibBurdenOnboardingProgressionState, &qword_268CA1690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1698);
  }
  return result;
}

uint64_t sub_240B52348()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 25, 7);
}

uint64_t sub_240B52380(uint64_t a1, uint64_t a2)
{
  return sub_240B4D630(*(unsigned char *)(v2 + 24), a1, a2);
}

uint64_t sub_240B523B4(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v9 = a1 & 1;
  id v10 = sub_240B4FDC8(a4, a5, a1 & 1);
  sub_240A39CAC(0, (unint64_t *)&qword_26AFD77C0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_240BBAD40;
  *(void *)(v11 + 32) = v10;
  unint64_t v23 = v11;
  sub_240BB6F30();
  id v12 = v10;
  id v13 = sub_240B50068(a4, a5, v9);
  if (v13)
  {
    id v14 = v13;
    MEMORY[0x24560A190]();
    if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_240BB6F60();
    }
    sub_240BB6F70();
    sub_240BB6F30();
  }
  uint64_t v15 = sub_240B502C0(v9);
  uint64_t v17 = v16;
  if (v9)
  {
    if (qword_268C9E7A8 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_240BB2980();
    uint64_t v19 = v20;
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v19 = 0;
  }
  id v21 = v12;
  sub_240B5121C(v15, v17, v18, v19, v23, (uint64_t)v12, 1, a2, a3);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_240B525F0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B52600()
{
  return sub_240B4EB74();
}

uint64_t sub_240B5260C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AFibBurdenOnboardingPresentationContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_240B52670()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B52680(uint64_t a1, void *a2)
{
  return sub_240B50BDC(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_240B526B8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B526C8()
{
  return sub_240B4ED80();
}

uint64_t sub_240B526D8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B526E8(uint64_t a1, void *a2)
{
  return sub_240B50BDC(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_240B52720()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_240B52758()
{
  sub_240B4F614(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_240B52768()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B52778()
{
  return sub_240B4F8BC();
}

uint64_t sub_240B52784()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B527BC()
{
  return sub_240B50AC4(*(void **)(v0 + 16));
}

uint64_t sub_240B527F0()
{
  return sub_240B50AC4(*(void **)(v0 + 16));
}

uint64_t sub_240B52824()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B5285C()
{
  return (*(uint64_t (**)(void, void))(v0 + 16))(0, 0);
}

uint64_t sub_240B5288C()
{
  return (*(uint64_t (**)(uint64_t (*)(), void))(v0 + 16))(sub_240B50E8C, 0);
}

uint64_t sub_240B528CC()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_240B52914()
{
  sub_240B4AF60(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_240B52920()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B52930()
{
  return sub_240B4B560();
}

uint64_t sub_240B52968()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B52978()
{
  return sub_240B4B560();
}

uint64_t sub_240B529B0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B529C0()
{
  return sub_240B4B560();
}

uint64_t sub_240B529F8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_240B52A30(char a1)
{
  return sub_240B4B028(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(char *, uint64_t))(v1 + 32));
}

uint64_t sub_240B52A3C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B52A4C()
{
  return sub_240B4B560();
}

uint64_t type metadata accessor for HKHRCardioFitnessChartDataSource()
{
  uint64_t result = qword_268CA16D8;
  if (!qword_268CA16D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240B52B7C()
{
  uint64_t result = sub_240BB4C70();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_240B52C40(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_240BB4C70();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  int v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = qword_268CA16B0;
  *(void *)(v3 + qword_268CA16B0) = 0;
  *(void *)(v3 + qword_268CA16C8) = 0;
  *(void *)(v3 + qword_268CA16D0) = 0;
  *(void *)(v3 + qword_268CA16A0) = a1;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v11(v3 + qword_268CA16A8, a2, v6);
  v11((uint64_t)v9, a2, v6);
  type metadata accessor for HKHRCardioFitnessChartDataSource.HKHRCardioFitnessClassificationProvider();
  swift_allocObject();
  swift_retain();
  id v12 = a1;
  *(void *)(v3 + v10) = sub_240B54510((uint64_t)v9);
  swift_release();
  id v13 = (void *)sub_240B5605C(v12);
  uint64_t v14 = *(void *)(v3 + v10);
  swift_retain();
  sub_240B52ED8(v12, a2, v14, v13);
  swift_release();
  *(void *)(v3 + qword_268CA16C0) = sub_240BB4310();
  uint64_t v15 = *(void *)(v3 + v10);
  if (v15) {
    char v16 = *(unsigned char *)(v15 + 32);
  }
  else {
    char v16 = 2;
  }
  uint64_t v17 = (void *)sub_240BB4C50();
  type metadata accessor for CardioFitnessChartSection();
  swift_allocObject();
  id v18 = v12;
  uint64_t v19 = sub_240B7D630(v18, v16, v17);

  *(void *)(v3 + qword_268CA16B8) = v19;
  swift_release();
  swift_retain();
  swift_retain();
  uint64_t v20 = sub_240BB4880();
  swift_retain();
  sub_240B53198();
  swift_release();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
  return v20;
}

uint64_t sub_240B52ED8(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v22 = a1;
  id v23 = a4;
  sub_240B5684C();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v9 = (uint64_t (**)(uint64_t, uint64_t))((char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_240BB4C70();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v10);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  char v16 = (uint64_t (*)(uint64_t, uint64_t))swift_allocObject();
  *((void *)v16 + 2) = sub_240B56A4C;
  *((void *)v16 + 3) = v15;
  uint64_t v17 = v22;
  *((void *)v16 + 4) = v22;
  *int v9 = sub_240B56B18;
  v9[1] = v16;
  (*(void (**)(uint64_t (**)(uint64_t, uint64_t), void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F44408], v6);
  sub_240B56B24();
  swift_allocObject();
  id v18 = v23;
  swift_retain();
  id v19 = v17;
  sub_240BB3FC0();
  sub_240B56BB8();
  swift_allocObject();
  uint64_t v20 = sub_240BB4330();
  swift_release();
  return v20;
}

uint64_t sub_240B53198()
{
  uint64_t v1 = v0;
  if (*(void *)(v0 + qword_268CA16B0))
  {
    swift_retain();
    uint64_t v2 = sub_240B53E54();
    swift_release();
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v3 = qword_268CA16C8;
  *(void *)(v1 + qword_268CA16C8) = v2;
  swift_release();
  uint64_t v4 = *(void *)(v1 + v3);
  if (v4)
  {
    swift_allocObject();
    swift_weakInit();
    sub_240A3B78C();
    sub_240B55EC4(&qword_26AFD7B30, (void (*)(uint64_t))sub_240A3B78C);
    swift_retain();
    uint64_t v4 = sub_240BB6450();
    swift_release();
    swift_release();
  }
  *(void *)(v1 + qword_268CA16D0) = v4;
  return swift_release();
}

uint64_t sub_240B532E0(char *a1)
{
  uint64_t v2 = sub_240BB6B90();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240BB6BC0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  int v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t aBlock = 0;
    uint64_t v24 = 0xE000000000000000;
    uint64_t v21 = result;
    uint64_t v22 = v6;
    sub_240BB6E70();
    swift_bridgeObjectRelease();
    id v12 = sub_240B564CC(aBlock, v24, v10);
    swift_bridgeObjectRelease();
    sub_240A34DC4(0, (unint64_t *)&qword_26AFD9980);
    uint64_t v20 = sub_240BB7310();
    uint64_t v13 = swift_allocObject();
    uint64_t v14 = v7;
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v13;
    *(void *)(v15 + 24) = v12;
    char v27 = sub_240B567A0;
    uint64_t v28 = v15;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v24 = 1107296256;
    id v25 = sub_240A87354;
    uint64_t v26 = &unk_26F509D00;
    char v16 = _Block_copy(&aBlock);
    swift_release();
    sub_240BB6BB0();
    uint64_t aBlock = MEMORY[0x263F8EE78];
    sub_240B55EC4((unint64_t *)&qword_26AFD98C8, MEMORY[0x263F8F030]);
    uint64_t v17 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F030];
    sub_240B55F0C(0, (unint64_t *)&qword_26AFD98F0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    sub_240B56CD4((unint64_t *)&qword_26AFD98F8, (unint64_t *)&qword_26AFD98F0, v17);
    sub_240BB7670();
    id v18 = (void *)v20;
    MEMORY[0x24560A5E0](0, v9, v5, v16);
    _Block_release(v16);
    swift_release();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v9, v22);
  }
  return result;
}

uint64_t sub_240B536D8()
{
  v7[9] = *(id *)MEMORY[0x263EF8340];
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    swift_release();
    sub_240BB45F0();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    swift_release();
    uint64_t v0 = (void *)sub_240BB4C90();
    swift_release();
    uint64_t v1 = (void *)sub_240BB50F0();

    v7[0] = 0;
    unsigned int v2 = objc_msgSend(v1, sel_performFetch_, v7);

    if (v2)
    {
      id v3 = v7[0];
    }
    else
    {
      id v4 = v7[0];
      uint64_t v5 = (void *)sub_240BB2A50();

      swift_willThrow();
    }
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_240BB4CB0();
    return swift_release();
  }
  return result;
}

id sub_240B53898@<X0>(void *a1@<X1>, uint64_t *a2@<X8>)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    int v4 = *(unsigned __int8 *)(Strong + 32);
    swift_release();
    if (v4 == 2)
    {
      unint64_t v5 = 0;
    }
    else
    {
      sub_240BB6E70();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xE000000000000000;
    }
  }
  else
  {
    unint64_t v5 = 0;
    LOBYTE(v4) = 2;
  }
  uint64_t v6 = sub_240BB4C50();
  uint64_t v7 = sub_240BB7440();
  a2[3] = (uint64_t)&type metadata for CardioFitnessChartItem;
  a2[4] = sub_240B567A8();
  uint64_t v8 = swift_allocObject();
  *a2 = v8;
  *(void *)(v8 + 16) = a1;
  *(unsigned char *)(v8 + 24) = v4;
  *(void *)(v8 + 32) = 0;
  *(void *)(v8 + 40) = v5;
  *(void *)(v8 + 48) = v6;
  *(void *)(v8 + 56) = v7;

  return a1;
}

uint64_t sub_240B539F4(uint64_t a1, uint64_t a2, void (*a3)(void, void), uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_240BB5990();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A1E37C(a1, (uint64_t)v35);
  sub_240A47830();
  sub_240BB34D0();
  if (swift_dynamicCast())
  {
    id v12 = v33;
    id v13 = objc_msgSend(v33, sel_userData);
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v15 = sub_240BB2B60();
      uint64_t v32 = v8;
      char v16 = a3;
      uint64_t v17 = v9;
      uint64_t v18 = v15;
      id v19 = v12;
      uint64_t v20 = v11;
      unint64_t v22 = v21;

      id v23 = (void *)sub_240BB2B40();
      uint64_t v24 = v18;
      uint64_t v9 = v17;
      a3 = v16;
      uint64_t v8 = v32;
      unint64_t v25 = v22;
      uint64_t v11 = v20;
      id v12 = v19;
      sub_240A4C4D8(v24, v25);
    }
    else
    {
      id v23 = 0;
    }
    id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46470]), sel_initWithData_, v23);

    if (v26)
    {
      sub_240B55F0C(0, (unint64_t *)&qword_268C9E840, (uint64_t (*)(uint64_t))sub_240A47830, MEMORY[0x263F8E0F8]);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_240BB97E0;
      a3(v26, a5);

      id v12 = v26;
    }
    else
    {
      sub_240BB5950();
      uint64_t v28 = sub_240BB5970();
      os_log_type_t v29 = sub_240BB7190();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v30 = 0;
        _os_log_impl(&dword_240A1B000, v28, v29, "Unable to decode sharable charting model", v30, 2u);
        MEMORY[0x24560B930](v30, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      uint64_t v27 = MEMORY[0x263F8EE78];
    }

    return v27;
  }
  else
  {
    sub_240A1E37C(a1, (uint64_t)v35);
    id v33 = 0;
    unint64_t v34 = 0xE000000000000000;
    sub_240BB77C0();
    sub_240BB6E70();
    sub_240BB78B0();
    sub_240BB6E70();
    uint64_t result = sub_240BB78D0();
    __break(1u);
  }
  return result;
}

uint64_t sub_240B53D7C()
{
  uint64_t v0 = sub_240BB4220();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB41F0();
  uint64_t v4 = sub_240BB4190();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_240B53E54()
{
  uint64_t v1 = v0;
  sub_240B55BB0();
  uint64_t v33 = *(void *)(v2 - 8);
  uint64_t v34 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v32 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F110];
  sub_240B55F0C(0, (unint64_t *)&unk_26AFD9960, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v32 - v5;
  sub_240A3CB40();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B55E88(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v36 = v12;
  uint64_t v37 = v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B55DBC();
  uint64_t v39 = *(void *)(v16 - 8);
  uint64_t v40 = v16;
  MEMORY[0x270FA5388](v16);
  id v35 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD75D0);
  id v41 = (id)sub_240BB57C0();
  sub_240A22390();
  sub_240B55EC4((unint64_t *)&qword_26AFD8A30, (void (*)(uint64_t))sub_240A22390);
  sub_240BB6330();
  swift_release();
  sub_240B55EC4(&qword_26AFD7B10, (void (*)(uint64_t))sub_240A3CB40);
  uint64_t v18 = (void *)sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  id v41 = v18;
  sub_240A3B78C();
  sub_240B55EC4(&qword_26AFD7B30, (void (*)(uint64_t))sub_240A3B78C);
  swift_retain();
  sub_240BB6330();
  swift_release();
  swift_release();
  id v41 = *(id *)(v1 + 24);
  id v19 = v41;
  uint64_t v20 = sub_240BB72F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v6, 1, 1, v20);
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9980);
  unint64_t v21 = v35;
  sub_240B55EC4(&qword_268CA1720, sub_240B55E88);
  sub_240A805DC();
  id v22 = v19;
  uint64_t v23 = v36;
  sub_240BB6400();
  sub_240B56C64((uint64_t)v6, (unint64_t *)&unk_26AFD9960, v38);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v23);
  int v24 = *(unsigned __int8 *)(v1 + 32);
  if (v24 == 2)
  {
    sub_240B55EC4(&qword_268CA1730, (void (*)(uint64_t))sub_240B55DBC);
    uint64_t v25 = v40;
    uint64_t v26 = sub_240BB62E0();
  }
  else
  {
    char v27 = v24 & 1;
    sub_240B56C18(0, &qword_268CA1738, (uint64_t)&type metadata for CardioFitnessClassificationStatus, MEMORY[0x263F8E0F8]);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_240BB97E0;
    *(unsigned char *)(v28 + 32) = v27;
    sub_240B55EC4(&qword_268CA1730, (void (*)(uint64_t))sub_240B55DBC);
    os_log_type_t v29 = v32;
    uint64_t v25 = v40;
    sub_240BB63E0();
    swift_bridgeObjectRelease();
    sub_240B55EC4(&qword_268CA1740, (void (*)(uint64_t))sub_240B55BB0);
    uint64_t v30 = v34;
    uint64_t v26 = sub_240BB62E0();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v29, v30);
  }
  (*(void (**)(char *, uint64_t))(v39 + 8))(v21, v25);
  return v26;
}

uint64_t sub_240B54510(uint64_t a1)
{
  uint64_t v39 = a1;
  uint64_t v33 = *(void *)v1;
  uint64_t v2 = sub_240BB5990();
  uint64_t v34 = *(void *)(v2 - 8);
  uint64_t v35 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v36 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_240BB7300();
  uint64_t v4 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240BB72D0();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_240BB6BC0();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v37 = sub_240A34DC4(0, (unint64_t *)&qword_26AFD9980);
  sub_240BB6BB0();
  uint64_t v41 = MEMORY[0x263F8EE78];
  sub_240B55EC4(&qword_26AFD9958, MEMORY[0x263F8F0F8]);
  uint64_t v9 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F0F8];
  sub_240B55F0C(0, &qword_26AFD9900, MEMORY[0x263F8F0F8], MEMORY[0x263F8D488]);
  sub_240B56CD4(&qword_26AFD9908, &qword_26AFD9900, v9);
  sub_240BB7670();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F8F130], v38);
  uint64_t v10 = v39;
  uint64_t v11 = v1;
  *(void *)(v1 + 24) = sub_240BB7340();
  *(unsigned char *)(v1 + 32) = 2;
  sub_240BB4C60();
  uint64_t v12 = sub_240BB4100();
  uint64_t v14 = v13;
  if (v12 == sub_240BB4100() && v14 == v15)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v16 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      id v22 = v36;
      sub_240BB5950();
      uint64_t v23 = sub_240BB5970();
      os_log_type_t v24 = sub_240BB71A0();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = (uint8_t *)swift_slowAlloc();
        uint64_t v26 = swift_slowAlloc();
        uint64_t v40 = v26;
        *(_DWORD *)uint64_t v25 = 136446210;
        uint64_t v41 = v33;
        swift_getMetatypeMetadata();
        uint64_t v27 = sub_240BB6E10();
        uint64_t v41 = sub_240A38940(v27, v28, &v40);
        sub_240BB75F0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240A1B000, v23, v24, "[%{public}s] Non-primary profiles will not have feature availability / onboarding completion for Cardio Fitness feature, passing back nil onboarding status observer", v25, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24560B930](v26, -1, -1);
        MEMORY[0x24560B930](v25, -1, -1);

        uint64_t v29 = sub_240BB4C70();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v10, v29);
        (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v35);
      }
      else
      {

        uint64_t v30 = sub_240BB4C70();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v10, v30);
        (*(void (**)(char *, uint64_t))(v34 + 8))(v22, v35);
      }

      type metadata accessor for HKHRCardioFitnessChartDataSource.HKHRCardioFitnessClassificationProvider();
      swift_deallocPartialClassInstance();
      return 0;
    }
  }
  id v17 = (id)*MEMORY[0x263F09730];
  uint64_t v18 = (void *)sub_240BB4C30();
  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3D0]), sel_initWithFeatureIdentifier_healthStore_, v17, v18);

  *(void *)(v11 + 16) = v19;
  unsigned __int8 v20 = sub_240B54B54();
  if (v20 == 2) {
    unsigned __int8 v20 = sub_240B55500();
  }
  uint64_t v21 = sub_240BB4C70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v10, v21);
  *(unsigned char *)(v11 + 32) = v20;
  return v11;
}

uint64_t sub_240B54B54()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_240BB5990();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v53 = v2;
  uint64_t v54 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  id v51 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  id v52 = (char *)&v48 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v48 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v48 - v11;
  uint64_t v13 = (char *)sub_240BB4C30();
  sub_240BB3040();
  id v14 = objc_msgSend(v13, sel_profileIdentifier);
  sub_240AC3E1C(v14);

  sub_240BB4C10();
  sub_240A3466C(v56, v56[3]);
  uint64_t v15 = (void *)sub_240BB2FE0();
  char v16 = (void *)sub_240BB3030();

  swift_bridgeObjectRelease();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v56);
  if (v16)
  {
    id v52 = v13;
    id v17 = objc_msgSend(v16, sel_data);
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v19 = sub_240BB2B60();
      unint64_t v21 = v20;

      sub_240BB2740();
      swift_allocObject();
      sub_240BB2730();
      sub_240B55B5C();
      sub_240BB2720();
      swift_release();
      uint64_t v38 = LOBYTE(v56[0]);
      sub_240BB5950();
      uint64_t v39 = v0;
      swift_retain_n();
      uint64_t v40 = sub_240BB5970();
      os_log_type_t v41 = sub_240BB71A0();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v50 = v19;
        uint64_t v43 = (uint8_t *)swift_slowAlloc();
        uint64_t v44 = swift_slowAlloc();
        uint64_t v55 = v39;
        v56[0] = v44;
        unint64_t v49 = v21;
        *(_DWORD *)uint64_t v43 = 136446210;
        id v51 = (char *)(v43 + 4);
        type metadata accessor for HKHRCardioFitnessChartDataSource.HKHRCardioFitnessClassificationProvider();
        swift_retain();
        uint64_t v45 = sub_240BB6E10();
        uint64_t v55 = sub_240A38940(v45, v46, v56);
        sub_240BB75F0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240A1B000, v40, v41, "[%{public}s] Using initial classification status from plugin data.", v43, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24560B930](v44, -1, -1);
        MEMORY[0x24560B930](v43, -1, -1);
        sub_240A4C4D8(v50, v49);
      }
      else
      {
        swift_release_n();
        sub_240A4C4D8(v19, v21);
      }
      (*(void (**)(char *, uint64_t))(v54 + 8))(v12, v53);
    }
    else
    {
      sub_240BB5950();
      uint64_t v31 = v0;
      swift_retain_n();
      uint64_t v32 = sub_240BB5970();
      os_log_type_t v33 = sub_240BB7180();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = (uint8_t *)swift_slowAlloc();
        uint64_t v35 = swift_slowAlloc();
        uint64_t v55 = v31;
        v56[0] = v35;
        *(_DWORD *)uint64_t v34 = 136446210;
        type metadata accessor for HKHRCardioFitnessChartDataSource.HKHRCardioFitnessClassificationProvider();
        swift_retain();
        uint64_t v36 = sub_240BB6E10();
        uint64_t v55 = sub_240A38940(v36, v37, v56);
        sub_240BB75F0();
        uint64_t v38 = 2;
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240A1B000, v32, v33, "[%{public}s] Classification data plugin storage did not contain any data", v34, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24560B930](v35, -1, -1);
        MEMORY[0x24560B930](v34, -1, -1);
      }
      else
      {

        uint64_t v38 = 2;
        swift_release_n();
      }
      (*(void (**)(char *, uint64_t))(v54 + 8))(v10, v53);
    }
  }
  else
  {
    sub_240BB5950();
    swift_retain_n();
    id v22 = v13;
    uint64_t v23 = sub_240BB5970();
    os_log_type_t v24 = sub_240BB71A0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = (void *)swift_slowAlloc();
      id v51 = (char *)swift_slowAlloc();
      uint64_t v55 = v1;
      v56[0] = (uint64_t)v51;
      *(_DWORD *)uint64_t v25 = 136446466;
      type metadata accessor for HKHRCardioFitnessChartDataSource.HKHRCardioFitnessClassificationProvider();
      swift_retain();
      uint64_t v27 = sub_240BB6E10();
      uint64_t v55 = sub_240A38940(v27, v28, v56);
      sub_240BB75F0();
      uint64_t v38 = 2;
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2112;
      id v29 = objc_msgSend(v22, sel_profileIdentifier);
      uint64_t v55 = (uint64_t)v29;
      sub_240BB75F0();
      *uint64_t v26 = v29;

      _os_log_impl(&dword_240A1B000, v23, v24, "[%{public}s] Unable to find classification data plugin storage for profile with identifier %@.", (uint8_t *)v25, 0x16u);
      sub_240AA63A0();
      swift_arrayDestroy();
      MEMORY[0x24560B930](v26, -1, -1);
      uint64_t v30 = v51;
      swift_arrayDestroy();
      MEMORY[0x24560B930](v30, -1, -1);
      MEMORY[0x24560B930](v25, -1, -1);
    }
    else
    {

      uint64_t v38 = 2;
      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v54 + 8))(v52, v53);
  }
  return v38;
}

id sub_240B55500()
{
  uint64_t v0 = sub_240BB5990();
  MEMORY[0x270FA5388](v0);
  uint64_t v1 = sub_240BB56E0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD75D0);
  sub_240BB57B0();
  uint64_t v5 = (void *)sub_240BB56F0();
  id v6 = objc_msgSend(v5, sel_areAllRequirementsSatisfied);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6;
}

uint64_t sub_240B558D4()
{
  return swift_deallocClassInstance();
}

void sub_240B55914()
{
}

uint64_t sub_240B55944()
{
  uint64_t v1 = v0 + qword_268CA16A8;
  uint64_t v2 = sub_240BB4C70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_240B55A10()
{
  uint64_t v0 = sub_240BB48A0();

  uint64_t v1 = v0 + qword_268CA16A8;
  uint64_t v2 = sub_240BB4C70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_240B55ADC()
{
  sub_240B55A10();

  return swift_deallocClassInstance();
}

uint64_t sub_240B55B30()
{
  return type metadata accessor for HKHRCardioFitnessChartDataSource();
}

uint64_t type metadata accessor for HKHRCardioFitnessChartDataSource.HKHRCardioFitnessClassificationProvider()
{
  return self;
}

unint64_t sub_240B55B5C()
{
  unint64_t result = qword_268CA16E8;
  if (!qword_268CA16E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA16E8);
  }
  return result;
}

void sub_240B55BB0()
{
  if (!qword_268CA16F0)
  {
    sub_240B55C9C();
    sub_240B55DBC();
    sub_240B55EC4(&qword_268CA1728, (void (*)(uint64_t))sub_240B55C9C);
    sub_240B55EC4(&qword_268CA1730, (void (*)(uint64_t))sub_240B55DBC);
    unint64_t v0 = sub_240BB5FA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA16F0);
    }
  }
}

void sub_240B55C9C()
{
  if (!qword_268CA16F8)
  {
    sub_240B56C18(255, &qword_268CA1700, (uint64_t)&type metadata for CardioFitnessClassificationStatus, MEMORY[0x263F8D488]);
    sub_240B55D40();
    unint64_t v0 = sub_240BB60B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA16F8);
    }
  }
}

unint64_t sub_240B55D40()
{
  unint64_t result = qword_268CA1708;
  if (!qword_268CA1708)
  {
    sub_240B56C18(255, &qword_268CA1700, (uint64_t)&type metadata for CardioFitnessClassificationStatus, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1708);
  }
  return result;
}

void sub_240B55DBC()
{
  if (!qword_268CA1710)
  {
    sub_240B55E88(255);
    sub_240A34DC4(255, (unint64_t *)&qword_26AFD9980);
    sub_240B55EC4(&qword_268CA1720, sub_240B55E88);
    sub_240A805DC();
    unint64_t v0 = sub_240BB60E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA1710);
    }
  }
}

void sub_240B55E88(uint64_t a1)
{
}

uint64_t sub_240B55EC4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240B55F0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_240B55F70(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, void (*a5)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_240B55EC4(a4, a5);
    unint64_t v8 = sub_240BB6010();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

char *sub_240B5600C@<X0>(char *result@<X0>, unsigned char *a2@<X8>)
{
  char v3 = *result;
  *(unsigned char *)(v2 + 32) = *result;
  *a2 = v3;
  return result;
}

uint64_t sub_240B5601C()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B56054(char *a1)
{
  return sub_240B532E0(a1);
}

uint64_t sub_240B5605C(void *a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t))MEMORY[0x263F062D0];
  sub_240B55F0C(0, &qword_268C9FBE0, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v32 - v4;
  sub_240BB34D0();
  sub_240B55F0C(0, (unint64_t *)&qword_26AFD99A0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v6 = sub_240BB3050();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = swift_allocObject();
  long long v32 = xmmword_240BB97E0;
  *(_OWORD *)(v9 + 16) = xmmword_240BB97E0;
  (*(void (**)(unint64_t, void, uint64_t))(v7 + 104))(v9 + v8, *MEMORY[0x263F45500], v6);
  uint64_t v10 = (uint64_t (*)(void, uint64_t))MEMORY[0x263F8E0F8];
  sub_240B56C18(0, (unint64_t *)&qword_26AFD77C0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v11 = swift_allocObject();
  long long v33 = xmmword_240BBAD40;
  *(_OWORD *)(v11 + 16) = xmmword_240BBAD40;
  *(void *)(v11 + 32) = a1;
  v34[0] = v11;
  sub_240BB6F30();
  uint64_t v12 = v34[0];
  uint64_t v13 = sub_240BB27F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 1, 1, v13);
  sub_240B56C18(0, (unint64_t *)&qword_268CA06B8, MEMORY[0x263F455D0], v10);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = v32;
  id v15 = a1;
  char v16 = (void *)sub_240BB4C30();
  uint64_t v17 = sub_240BB7100();

  *(void *)(v14 + 32) = v17;
  uint64_t v18 = (void *)MEMORY[0x245606740](v9, v12, v5, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_240B56C64((uint64_t)v5, &qword_268C9FBE0, v2);
  id v19 = v18;
  unint64_t v20 = (void *)sub_240BB34B0();

  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = v33;
  id v22 = objc_allocWithZone(MEMORY[0x263F08B30]);
  uint64_t v23 = (void *)sub_240BB6DA0();
  id v24 = objc_msgSend(v22, sel_initWithKey_ascending_, v23, 0);

  *(void *)(v21 + 32) = v24;
  v34[0] = v21;
  sub_240BB6F30();
  sub_240A34DC4(0, (unint64_t *)&qword_268CA06D0);
  uint64_t v25 = (void *)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_setSortDescriptors_, v25);

  id v26 = v20;
  sub_240BB4C10();
  sub_240A3466C(v34, v34[3]);
  uint64_t v27 = (void *)sub_240BB2FE0();
  objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF270]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v26, v27, 0, 0);

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v34);
  sub_240B568EC();
  id v29 = objc_allocWithZone(v28);
  uint64_t v30 = sub_240BB5110();

  return v30;
}

id sub_240B564CC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = sub_240BB2D40();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(self, sel__quantityTypeWithCode_, 124);
  if (result)
  {
    uint64_t v11 = result;
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
    sub_240B55F0C(0, &qword_268CA0B10, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
    sub_240BB44D0();
    uint64_t v13 = swift_allocObject();
    long long v17 = xmmword_240BB97E0;
    *(_OWORD *)(v13 + 16) = xmmword_240BB97E0;
    sub_240B55F0C(0, (unint64_t *)&qword_268C9E840, (uint64_t (*)(uint64_t))sub_240A47830, v12);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = v17;
    *(void *)(v14 + 56) = &type metadata for CardioFitnessChartItem;
    *(void *)(v14 + 64) = sub_240B567A8();
    uint64_t v15 = swift_allocObject();
    *(void *)(v14 + 32) = v15;
    *(void *)(v15 + 16) = v11;
    *(unsigned char *)(v15 + 24) = a3 & 1;
    *(void *)(v15 + 32) = a1;
    *(void *)(v15 + 40) = a2;
    *(void *)(v15 + 48) = 0;
    *(void *)(v15 + 56) = 0;
    sub_240BB4850();
    id v16 = v11;
    sub_240BB2D30();
    sub_240BB2D00();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_240BB44C0();

    return (id)v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240B56760()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B567A0()
{
  return sub_240B536D8();
}

unint64_t sub_240B567A8()
{
  unint64_t result = qword_268CA1748;
  if (!qword_268CA1748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1748);
  }
  return result;
}

uint64_t sub_240B567FC()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

void sub_240B5684C()
{
  if (!qword_268CA1750)
  {
    sub_240B568EC();
    sub_240B55EC4(&qword_268CA1768, (void (*)(uint64_t))sub_240B568EC);
    unint64_t v0 = sub_240BB4CA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA1750);
    }
  }
}

void sub_240B568EC()
{
  if (!qword_268CA1758)
  {
    sub_240BB34D0();
    sub_240B55EC4(&qword_268CA1760, MEMORY[0x263F459D8]);
    unint64_t v0 = sub_240BB5100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA1758);
    }
  }
}

uint64_t sub_240B56980()
{
  uint64_t v1 = sub_240BB4C70();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

id sub_240B56A4C@<X0>(void *a1@<X1>, uint64_t *a2@<X8>)
{
  sub_240BB4C70();

  return sub_240B53898(a1, a2);
}

uint64_t sub_240B56AD8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_240B56B18(uint64_t a1, uint64_t a2)
{
  return sub_240B539F4(a1, a2, *(void (**)(void, void))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

void sub_240B56B24()
{
  if (!qword_268CA1770)
  {
    sub_240B568EC();
    sub_240B55EC4(&qword_268CA1768, (void (*)(uint64_t))sub_240B568EC);
    unint64_t v0 = sub_240BB3FD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA1770);
    }
  }
}

void sub_240B56BB8()
{
  if (!qword_268CA1778)
  {
    sub_240B56B24();
    unint64_t v0 = sub_240BB4320();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA1778);
    }
  }
}

void sub_240B56C18(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_240B56C64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_240B55F0C(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_240B56CD4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240B55F0C(255, a2, a3, MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240B56D3C()
{
  return sub_240B56D88(&OBJC_IVAR____TtC5Heart45AFibBurdenOnboardingLifeFactorsViewController_isInOnboardingModalFlow, 0x746361466566694CLL, 0xEB0000000073726FLL);
}

uint64_t sub_240B56D64()
{
  return sub_240B56D88(&OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_isInOnboardingModalFlow, 0xD000000000000010, 0x8000000240BC8ED0);
}

uint64_t sub_240B56D88(void *a1, uint64_t a2, uint64_t a3)
{
  if (v3[*a1] != 1) {
    return 0;
  }
  sub_240A57608();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_240BBAE40;
  *(void *)(v6 + 32) = 0xD000000000000014;
  *(void *)(v6 + 40) = 0x8000000240BCA120;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 56) = a3;
  uint64_t v7 = (char *)sub_240A42A0C((void *)1, 3, 1, (void *)v6);
  *((void *)v7 + 2) = 3;
  strcpy(v7 + 64, "ContinueButton");
  v7[79] = -18;
  uint64_t v8 = (void *)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  id v9 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v9)
  {
    sub_240BB6DE0();

    swift_arrayDestroy();
    uint64_t v10 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
    id v11 = objc_msgSend(v3, sel_hxui_addContinueButtonWithAccessibilityIdentifier_, v10);

    return (uint64_t)v11;
  }
  uint64_t result = swift_arrayDestroy();
  __break(1u);
  return result;
}

id sub_240B56F20(char a1)
{
  *(void *)&v1[OBJC_IVAR____TtC5Heart44AFibBurdenOnboardingHowItWorksViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v1[OBJC_IVAR____TtC5Heart44AFibBurdenOnboardingHowItWorksViewController_isInOnboardingModalFlow] = a1;
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  sub_240BB2980();
  uint64_t v3 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  sub_240BB2980();
  uint64_t v4 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for AFibBurdenOnboardingHowItWorksViewController();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithTitle_detailText_icon_contentLayout_, v3, v4, 0, 1, 0xE000000000000000);

  return v5;
}

void sub_240B57084()
{
  uint64_t v1 = v0;

  if (*((unsigned char *)v0 + OBJC_IVAR____TtC5Heart44AFibBurdenOnboardingHowItWorksViewController_isInOnboardingModalFlow) == 1) {
    objc_msgSend(v0, sel_hxui_addCancelButton);
  }
  id v2 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v2, sel_setBackButtonDisplayMode_, 1);

  id v3 = objc_msgSend(v1, sel_headerView);
  if (qword_268C9E660 != -1) {
    swift_once();
  }
  sub_240BB4850();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  uint64_t v4 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4);

  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v5 = (id)qword_26AFDECD8;
  uint64_t v6 = (void *)sub_240BB6DA0();
  id v7 = objc_msgSend(self, sel_imageNamed_inBundle_, v6, v5);

  if (!v7) {
    id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init);
  }
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_initWithImage_, v7);
  objc_msgSend(v14, sel_setContentMode_, 4);
  id v8 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v8, sel_addSubview_, v14);

  id v9 = objc_msgSend(v1, sel_contentView);
  id v10 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(v9, sel_setBackgroundColor_, v10);

  id v11 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v14, sel_hk_alignConstraintsWithView_, v11);

  id v12 = objc_msgSend(v14, sel_heightAnchor);
  id v13 = objc_msgSend(v12, sel_constraintEqualToConstant_, 200.0);

  objc_msgSend(v13, sel_setActive_, 1);
  sub_240BB73B0();
}

id sub_240B57668()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenOnboardingHowItWorksViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AFibBurdenOnboardingHowItWorksViewController()
{
  return self;
}

uint64_t sub_240B576D0()
{
  return MEMORY[0x24560BA20](v0 + OBJC_IVAR____TtC5Heart44AFibBurdenOnboardingHowItWorksViewController_delegate);
}

uint64_t sub_240B57704(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC5Heart44AFibBurdenOnboardingHowItWorksViewController_delegate + 8) = a2;
  swift_unknownObjectWeakAssign();

  return sub_240BB50A0();
}

void sub_240B57750()
{
  id v1 = objc_msgSend(v0, sel_navigationItem);
  sub_240A34DC4(0, (unint64_t *)&qword_268C9F670);
  sub_240A34DC4(0, &qword_268C9F9B0);
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_240BB7520();
  id v3 = (id)sub_240BB71E0();
  objc_msgSend(v1, sel_setRightBarButtonItem_, v3, 0, 0, 0, sub_240A9A5C4, v2);
}

uint64_t sub_240B57938()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t *sub_240B57970(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_240BB3660();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(_WORD *)((char *)a1 + a3[5]) = *(_WORD *)((char *)a2 + a3[5]);
    *(_WORD *)((char *)a1 + v8) = *(_WORD *)((char *)a2 + v8);
    uint64_t v9 = a3[7];
    uint64_t v10 = a3[8];
    id v11 = (uint64_t *)((char *)a1 + v9);
    id v12 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    *id v11 = *v12;
    v11[1] = v13;
    id v14 = (uint64_t *)((char *)a1 + v10);
    uint64_t v15 = (uint64_t *)((char *)a2 + v10);
    uint64_t v16 = *(uint64_t *)((char *)a2 + v10 + 8);
    sub_240BB4850();
    if (v16)
    {
      *id v14 = *v15;
      v14[1] = v16;
      uint64_t v17 = v15[3];
      v14[2] = v15[2];
      uint64_t v14[3] = v17;
      uint64_t v18 = v15[4];
      uint64_t v19 = v15[5];
      void v14[4] = v18;
      v14[5] = v19;
      sub_240BB4850();
      sub_240BB4850();
      sub_240BB4850();
    }
    else
    {
      long long v21 = *((_OWORD *)v15 + 1);
      *(_OWORD *)id v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v21;
      *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
    }
  }
  return a1;
}

uint64_t sub_240B57AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240BB3660();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + *(int *)(a2 + 32) + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_240B57B60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_240BB3660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_WORD *)(a1 + a3[5]) = *(_WORD *)(a2 + a3[5]);
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a3[8];
  uint64_t v10 = (void *)(a1 + v8);
  id v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  void *v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = (void *)(a1 + v9);
  id v14 = (void *)(a2 + v9);
  uint64_t v15 = *(void *)(a2 + v9 + 8);
  sub_240BB4850();
  if (v15)
  {
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = v14[3];
    v13[2] = v14[2];
    v13[3] = v16;
    uint64_t v17 = v14[4];
    uint64_t v18 = v14[5];
    void v13[4] = v17;
    v13[5] = v18;
    sub_240BB4850();
    sub_240BB4850();
    sub_240BB4850();
  }
  else
  {
    long long v19 = *((_OWORD *)v14 + 1);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v19;
    *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
  }
  return a1;
}

uint64_t sub_240B57C58(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_240BB3660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (unsigned char *)(a1 + v7);
  uint64_t v9 = (unsigned char *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  uint64_t v10 = a3[6];
  id v11 = (unsigned char *)(a1 + v10);
  uint64_t v12 = (unsigned char *)(a2 + v10);
  *id v11 = *v12;
  v11[1] = v12[1];
  uint64_t v13 = a3[7];
  id v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *id v14 = *v15;
  v14[1] = v15[1];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = *(void *)(a1 + v16 + 8);
  uint64_t v20 = v18[1];
  if (v19)
  {
    if (v20)
    {
      *uint64_t v17 = *v18;
      v17[1] = v18[1];
      sub_240BB4850();
      swift_bridgeObjectRelease();
      _OWORD v17[2] = v18[2];
      v17[3] = v18[3];
      sub_240BB4850();
      swift_bridgeObjectRelease();
      v17[4] = v18[4];
      void v17[5] = v18[5];
      sub_240BB4850();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_240B57E20((uint64_t)v17);
      long long v22 = *((_OWORD *)v18 + 1);
      long long v21 = *((_OWORD *)v18 + 2);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v22;
      *((_OWORD *)v17 + 2) = v21;
    }
  }
  else if (v20)
  {
    *uint64_t v17 = *v18;
    v17[1] = v18[1];
    _OWORD v17[2] = v18[2];
    v17[3] = v18[3];
    v17[4] = v18[4];
    void v17[5] = v18[5];
    sub_240BB4850();
    sub_240BB4850();
    sub_240BB4850();
  }
  else
  {
    long long v23 = *(_OWORD *)v18;
    long long v24 = *((_OWORD *)v18 + 2);
    *((_OWORD *)v17 + 1) = *((_OWORD *)v18 + 1);
    *((_OWORD *)v17 + 2) = v24;
    *(_OWORD *)uint64_t v17 = v23;
  }
  return a1;
}

uint64_t sub_240B57E20(uint64_t a1)
{
  return a1;
}

uint64_t sub_240B57E50(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_240BB3660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_WORD *)(a1 + a3[5]) = *(_WORD *)(a2 + a3[5]);
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  uint64_t v9 = (_OWORD *)(a1 + v8);
  uint64_t v10 = (_OWORD *)(a2 + v8);
  long long v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  v9[2] = v10[2];
  return a1;
}

uint64_t sub_240B57EF8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_240BB3660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (unsigned char *)(a1 + v7);
  uint64_t v10 = (unsigned char *)(a2 + v7);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  long long v11 = (unsigned char *)(a1 + v8);
  uint64_t v12 = (unsigned char *)(a2 + v8);
  *long long v11 = *v12;
  v11[1] = v12[1];
  uint64_t v13 = a3[7];
  id v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *id v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  if (!*(void *)(a1 + v18 + 8)) {
    goto LABEL_5;
  }
  uint64_t v21 = *(void *)(v20 + 8);
  if (!v21)
  {
    sub_240B57E20(v19);
LABEL_5:
    long long v24 = *(_OWORD *)(v20 + 16);
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    *(_OWORD *)(v19 + 16) = v24;
    *(_OWORD *)(v19 + 32) = *(_OWORD *)(v20 + 32);
    return a1;
  }
  *(void *)uint64_t v19 = *(void *)v20;
  *(void *)(v19 + 8) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(v20 + 24);
  *(void *)(v19 + 16) = *(void *)(v20 + 16);
  *(void *)(v19 + 24) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(v20 + 40);
  *(void *)(v19 + 32) = *(void *)(v20 + 32);
  *(void *)(v19 + 40) = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_240B5801C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240B58030);
}

uint64_t sub_240B58030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240BB3660();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_240B58100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240B58114);
}

uint64_t sub_240B58114(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_240BB3660();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28) + 8) = a2;
  }
  return result;
}

uint64_t sub_240B581D4()
{
  uint64_t result = sub_240BB3660();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *_s14descr26F502E21O15SettingsContentV6FooterVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  sub_240BB4850();
  sub_240BB4850();
  sub_240BB4850();
  return a1;
}

void *_s14descr26F502E21O15SettingsContentV6FooterVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s14descr26F502E21O15SettingsContentV6FooterVwta(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *_s14descr26F502E21O15SettingsContentV6FooterVMa()
{
  return &_s14descr26F502E21O15SettingsContentV6FooterVN;
}

uint64_t sub_240B583D0(void *a1)
{
  sub_240B5B23C(0, &qword_268CA1850, (uint64_t (*)(void))sub_240B5B194, (uint64_t)&_s14descr26F502E21O15SettingsContentV11SwitchStateV10CodingKeysON, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v9 - v5;
  sub_240A3466C(a1, a1[3]);
  sub_240B5B194();
  sub_240BB7C40();
  char v11 = 0;
  uint64_t v7 = v9[1];
  sub_240BB7A80();
  if (!v7)
  {
    char v10 = 1;
    sub_240BB7A80();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_240B58570()
{
  if (*v0) {
    return 0xD000000000000016;
  }
  else {
    return 0x64656C62616E65;
  }
}

uint64_t sub_240B585B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_240B5A234(a1, a2);
  *a3 = result;
  return result;
}

void sub_240B585D8(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_240B585E4(uint64_t a1)
{
  unint64_t v2 = sub_240B5B194();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240B58620(uint64_t a1)
{
  unint64_t v2 = sub_240B5B194();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240B5865C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_240B5A324(a1);
  if (!v2)
  {
    *a2 = result & 1;
    a2[1] = BYTE1(result) & 1;
  }
  return result;
}

uint64_t sub_240B58694(void *a1)
{
  return sub_240B583D0(a1);
}

BOOL sub_240B586C4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a2[1] ^ a1[1]) & 1) == 0;
}

uint64_t sub_240B586EC()
{
  return 0x6554726564616568;
}

uint64_t sub_240B58708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6554726564616568 && a2 == 0xEA00000000007478)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_240BB7AE0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_240B587AC(uint64_t a1)
{
  unint64_t v2 = sub_240B5B1E8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240B587E8(uint64_t a1)
{
  unint64_t v2 = sub_240B5B1E8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240B58824@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v15 = a2;
  sub_240B5B23C(0, &qword_268CA1840, (uint64_t (*)(void))sub_240B5B1E8, (uint64_t)&_s14descr26F502E21O15SettingsContentV6HeaderV10CodingKeysON, MEMORY[0x263F8E040]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v14 - v7;
  sub_240A3466C(a1, a1[3]);
  sub_240B5B1E8();
  sub_240BB7C30();
  if (v2) {
    return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  }
  uint64_t v9 = v15;
  uint64_t v10 = sub_240BB79F0();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  *uint64_t v9 = v10;
  v9[1] = v12;
  return result;
}

uint64_t sub_240B589D4(void *a1)
{
  sub_240B5B23C(0, &qword_268CA1858, (uint64_t (*)(void))sub_240B5B1E8, (uint64_t)&_s14descr26F502E21O15SettingsContentV6HeaderV10CodingKeysON, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - v5;
  sub_240A3466C(a1, a1[3]);
  sub_240B5B1E8();
  sub_240BB7C40();
  sub_240BB7A70();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_240B58B3C(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_240BB7AE0();
  }
}

uint64_t sub_240B58B6C(void *a1)
{
  sub_240B5B23C(0, &qword_268CA17F8, (uint64_t (*)(void))sub_240B5A944, (uint64_t)&_s14descr26F502E21O15SettingsContentV6FooterV10CodingKeysON, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_240A3466C(a1, a1[3]);
  sub_240B5A944();
  sub_240BB7C40();
  char v12 = 0;
  sub_240BB7A70();
  if (!v1)
  {
    char v11 = 1;
    sub_240BB7A40();
    char v10 = 2;
    sub_240BB7A40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_240B58D28(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x5365727574616566;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x726564616568;
      break;
    case 4:
      unint64_t result = 0x7265746F6F66;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_240B58DE0(void *a1)
{
  uint64_t v3 = v1;
  sub_240B5B23C(0, &qword_268CA17C0, (uint64_t (*)(void))sub_240B59F04, (uint64_t)&_s14descr26F502E21O15SettingsContentV10CodingKeysON, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v18 - v8;
  sub_240A3466C(a1, a1[3]);
  sub_240B59F04();
  sub_240BB7C40();
  LOBYTE(v18[0]) = 0;
  sub_240BB3660();
  sub_240B59F58(&qword_268CA17C8);
  sub_240BB7A90();
  if (!v2)
  {
    char v10 = (int *)_s14descr26F502E21O15SettingsContentVMa();
    char v11 = (char *)(v3 + v10[5]);
    char v12 = *v11;
    LOBYTE(v11) = v11[1];
    LOBYTE(v18[0]) = v12;
    BYTE1(v18[0]) = (_BYTE)v11;
    char v19 = 1;
    sub_240B5A098();
    sub_240BB7A90();
    uint64_t v13 = (char *)(v3 + v10[6]);
    char v14 = *v13;
    LOBYTE(v13) = v13[1];
    LOBYTE(v18[0]) = v14;
    BYTE1(v18[0]) = (_BYTE)v13;
    char v19 = 2;
    sub_240BB7A90();
    v18[0] = *(_OWORD *)(v3 + v10[7]);
    char v19 = 3;
    sub_240B5A0EC();
    sub_240BB7A60();
    uint64_t v15 = (_OWORD *)(v3 + v10[8]);
    long long v16 = v15[1];
    v18[0] = *v15;
    v18[1] = v16;
    id v18[2] = v15[2];
    char v19 = 4;
    sub_240B5A140();
    sub_240BB7A60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_240B590C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v3 = sub_240BB3660();
  uint64_t v26 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v27 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B5B23C(0, &qword_268CA1790, (uint64_t (*)(void))sub_240B59F04, (uint64_t)&_s14descr26F502E21O15SettingsContentV10CodingKeysON, MEMORY[0x263F8E040]);
  uint64_t v28 = v5;
  uint64_t v25 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v23 - v6;
  uint64_t v8 = (int *)_s14descr26F502E21O15SettingsContentVMa();
  MEMORY[0x270FA5388](v8);
  char v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3466C(a1, a1[3]);
  sub_240B59F04();
  id v29 = v7;
  uint64_t v11 = (uint64_t)v30;
  sub_240BB7C30();
  if (v11) {
    return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  }
  uint64_t v30 = a1;
  uint64_t v12 = (uint64_t)v10;
  uint64_t v13 = v26;
  LOBYTE(v31) = 0;
  sub_240B59F58(&qword_268CA17A0);
  char v14 = v27;
  uint64_t v15 = v28;
  sub_240BB7A10();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v14, v3);
  char v34 = 1;
  sub_240B59F9C();
  sub_240BB7A10();
  char v16 = BYTE1(v31);
  uint64_t v17 = (unsigned char *)(v12 + v8[5]);
  *uint64_t v17 = v31;
  v17[1] = v16;
  char v34 = 2;
  sub_240BB7A10();
  char v18 = BYTE1(v31);
  char v19 = (unsigned char *)(v12 + v8[6]);
  *char v19 = v31;
  v19[1] = v18;
  char v34 = 3;
  sub_240B59FF0();
  sub_240BB79E0();
  *(_OWORD *)(v12 + v8[7]) = v31;
  char v34 = 4;
  sub_240B5A044();
  sub_240BB79E0();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v29, v15);
  uint64_t v20 = (_OWORD *)(v12 + v8[8]);
  long long v21 = v32;
  *uint64_t v20 = v31;
  v20[1] = v21;
  long long v20[2] = v33;
  sub_240A73154(v12, v24);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v30);
  return sub_240A73200(v12);
}

uint64_t sub_240B59588()
{
  uint64_t v1 = 0x694C7265746F6F66;
  if (*v0 != 1) {
    uint64_t v1 = 0x4C52556B6E696CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x65547265746F6F66;
  }
}

uint64_t sub_240B595E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_240B5A504(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_240B59610(uint64_t a1)
{
  unint64_t v2 = sub_240B5A944();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240B5964C(uint64_t a1)
{
  unint64_t v2 = sub_240B5A944();

  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_240B59688@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_240B5A670(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_240B596CC(void *a1)
{
  return sub_240B58B6C(a1);
}

uint64_t sub_240B596E4(_OWORD *a1, long long *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *a2;
  long long v4 = a2[1];
  void v7[2] = a1[2];
  v8[0] = v3;
  long long v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_240B59814(v7, v8) & 1;
}

unint64_t sub_240B5972C()
{
  return sub_240B58D28(*v0);
}

uint64_t sub_240B59734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_240B5AF68(a1, a2);
  *a3 = result;
  return result;
}

void sub_240B5975C(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_240B59768(uint64_t a1)
{
  unint64_t v2 = sub_240B59F04();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240B597A4(uint64_t a1)
{
  unint64_t v2 = sub_240B59F04();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240B597E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240B590C4(a1, a2);
}

uint64_t sub_240B597F8(void *a1)
{
  return sub_240B58DE0(a1);
}

uint64_t sub_240B59814(void *a1, void *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1])
  {
    char v5 = sub_240BB7AE0();
    uint64_t result = 0;
    if ((v5 & 1) == 0) {
      return result;
    }
  }
  uint64_t v7 = a1[3];
  uint64_t v8 = a2[3];
  if (!v7)
  {
    if (v8) {
      return 0;
    }
    goto LABEL_15;
  }
  if (!v8) {
    return 0;
  }
  BOOL v9 = a1[2] == a2[2] && v7 == v8;
  if (v9 || (char v10 = sub_240BB7AE0(), result = 0, (v10 & 1) != 0))
  {
LABEL_15:
    uint64_t v11 = a1[5];
    uint64_t v12 = a2[5];
    if (v11)
    {
      if (v12 && (a1[4] == a2[4] && v11 == v12 || (sub_240BB7AE0() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v12)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

BOOL sub_240B598E8(uint64_t a1, uint64_t a2)
{
  if ((sub_240BB3650() & 1) == 0) {
    return 0;
  }
  long long v4 = (int *)_s14descr26F502E21O15SettingsContentVMa();
  BOOL result = 0;
  uint64_t v6 = v4[5];
  uint64_t v7 = a1 + v6;
  int v8 = *(unsigned __int8 *)(a1 + v6);
  BOOL v9 = (unsigned __int8 *)(a2 + v6);
  if (v8 != *v9) {
    return result;
  }
  if ((*(unsigned __int8 *)(v7 + 1) ^ v9[1])) {
    return result;
  }
  BOOL result = 0;
  uint64_t v10 = v4[6];
  uint64_t v11 = a1 + v10;
  int v12 = *(unsigned __int8 *)(a1 + v10);
  uint64_t v13 = (unsigned __int8 *)(a2 + v10);
  if (v12 != *v13 || ((*(unsigned __int8 *)(v11 + 1) ^ v13[1]) & 1) != 0) {
    return result;
  }
  uint64_t v14 = v4[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = *(void *)(a1 + v14 + 8);
  uint64_t v17 = (void *)(a2 + v14);
  uint64_t v18 = v17[1];
  if (!v16)
  {
    if (v18) {
      return 0;
    }
LABEL_15:
    uint64_t v21 = v4[8];
    uint64_t v23 = *(void *)(a1 + v21);
    uint64_t v22 = *(void *)(a1 + v21 + 8);
    uint64_t v25 = *(void *)(a1 + v21 + 16);
    uint64_t v24 = *(void *)(a1 + v21 + 24);
    uint64_t v26 = *(void *)(a1 + v21 + 32);
    uint64_t v27 = *(void *)(a1 + v21 + 40);
    uint64_t v28 = (uint64_t *)(a2 + v21);
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    uint64_t v32 = v28[2];
    uint64_t v31 = v28[3];
    uint64_t v34 = v28[4];
    uint64_t v33 = v28[5];
    if (v22)
    {
      if (v30)
      {
        v36[0] = v23;
        v36[1] = v22;
        _OWORD v36[2] = v25;
        v36[3] = v24;
        v36[4] = v26;
        v36[5] = v27;
        v37[0] = v29;
        v37[1] = v30;
        void v37[2] = v32;
        v37[3] = v31;
        v37[4] = v34;
        uint64_t v37[5] = v33;
        char v35 = sub_240B59814(v36, v37);
        sub_240B5A194(v23, v22);
        sub_240B5A194(v23, v22);
        sub_240B5A194(v29, v30);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_240B5A1E4(v23, v22);
        return (v35 & 1) != 0;
      }
    }
    else if (!v30)
    {
      return 1;
    }
    sub_240B5A194(v23, v22);
    sub_240B5A194(v29, v30);
    sub_240B5A1E4(v23, v22);
    sub_240B5A1E4(v29, v30);
    return 0;
  }
  if (!v18) {
    return 0;
  }
  if (*v15 == *v17 && v16 == v18) {
    goto LABEL_15;
  }
  char v20 = sub_240BB7AE0();
  BOOL result = 0;
  if (v20) {
    goto LABEL_15;
  }
  return result;
}

uint64_t sub_240B59B8C()
{
  sub_240A39CF8(0, (unint64_t *)&qword_26AFD7108, MEMORY[0x263F8E0F8]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_240BBAE40;
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  *(void *)(v0 + 32) = sub_240BB2980();
  *(void *)(v0 + 40) = v1;
  uint64_t v2 = sub_240BB2980();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 48) = v2;
  *(void *)(v0 + 56) = v4;
  sub_240A39CF8(0, &qword_268C9F958, MEMORY[0x263F8D488]);
  sub_240A98D84();
  uint64_t v5 = sub_240BB6D70();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_240B59D6C()
{
  sub_240A39CF8(0, (unint64_t *)&qword_26AFD7108, MEMORY[0x263F8E0F8]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_240BBAE40;
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  *(void *)(v0 + 32) = sub_240BB2980();
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = sub_240BB2980();
  *(void *)(v0 + 56) = v2;
  sub_240A39CF8(0, &qword_268C9F958, MEMORY[0x263F8D488]);
  sub_240A98D84();
  uint64_t v3 = sub_240BB6D70();
  swift_bridgeObjectRelease();
  return v3;
}

unint64_t sub_240B59F04()
{
  unint64_t result = qword_268CA1798;
  if (!qword_268CA1798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1798);
  }
  return result;
}

uint64_t sub_240B59F58(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240BB3660();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_240B59F9C()
{
  unint64_t result = qword_268CA17A8;
  if (!qword_268CA17A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA17A8);
  }
  return result;
}

unint64_t sub_240B59FF0()
{
  unint64_t result = qword_268CA17B0;
  if (!qword_268CA17B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA17B0);
  }
  return result;
}

unint64_t sub_240B5A044()
{
  unint64_t result = qword_268CA17B8;
  if (!qword_268CA17B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA17B8);
  }
  return result;
}

unint64_t sub_240B5A098()
{
  unint64_t result = qword_268CA17D0;
  if (!qword_268CA17D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA17D0);
  }
  return result;
}

unint64_t sub_240B5A0EC()
{
  unint64_t result = qword_268CA17D8;
  if (!qword_268CA17D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA17D8);
  }
  return result;
}

unint64_t sub_240B5A140()
{
  unint64_t result = qword_268CA17E0;
  if (!qword_268CA17E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA17E0);
  }
  return result;
}

uint64_t sub_240B5A194(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_240BB4850();
    sub_240BB4850();
    return sub_240BB4850();
  }
  return result;
}

uint64_t sub_240B5A1E4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_240B5A234(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64656C62616E65 && a2 == 0xE700000000000000;
  if (v2 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000240BD3940)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_240B5A324(void *a1)
{
  sub_240B5B23C(0, &qword_268CA1830, (uint64_t (*)(void))sub_240B5B194, (uint64_t)&_s14descr26F502E21O15SettingsContentV11SwitchStateV10CodingKeysON, MEMORY[0x263F8E040]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v12 - v6;
  sub_240A3466C(a1, a1[3]);
  sub_240B5B194();
  sub_240BB7C30();
  if (v1) {
    return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  }
  char v14 = 0;
  char v8 = sub_240BB7A00();
  char v13 = 1;
  char v10 = sub_240BB7A00();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  if (v10) {
    int v11 = 256;
  }
  else {
    int v11 = 0;
  }
  return v11 & 0xFFFFFFFE | v8 & 1;
}

uint64_t sub_240B5A504(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x65547265746F6F66 && a2 == 0xEA00000000007478 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x694C7265746F6F66 && a2 == 0xEA00000000006B6ELL || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4C52556B6E696CLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_240B5A670@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v26 = a2;
  sub_240B5B23C(0, &qword_268CA17E8, (uint64_t (*)(void))sub_240B5A944, (uint64_t)&_s14descr26F502E21O15SettingsContentV6FooterV10CodingKeysON, MEMORY[0x263F8E040]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v8 = (char *)&v23 - v7;
  sub_240A3466C(a1, a1[3]);
  sub_240B5A944();
  sub_240BB7C30();
  if (v2) {
    return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  }
  uint64_t v9 = v6;
  char v10 = v26;
  char v29 = 0;
  uint64_t v11 = sub_240BB79F0();
  uint64_t v13 = v12;
  uint64_t v25 = v11;
  char v28 = 1;
  sub_240BB4850();
  uint64_t v14 = sub_240BB79C0();
  uint64_t v16 = v15;
  uint64_t v23 = v14;
  char v27 = 2;
  sub_240BB4850();
  uint64_t v24 = v16;
  uint64_t v17 = sub_240BB79C0();
  uint64_t v19 = v18;
  uint64_t v20 = v17;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  sub_240BB4850();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v21 = v24;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t *v10 = v25;
  v10[1] = v13;
  v10[2] = v23;
  v10[3] = v21;
  void v10[4] = v20;
  void v10[5] = v19;
  return result;
}

unint64_t sub_240B5A944()
{
  unint64_t result = qword_268CA17F0;
  if (!qword_268CA17F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA17F0);
  }
  return result;
}

unsigned char *_s14descr26F502E21O15SettingsContentV6FooterV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240B5AA64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr26F502E21O15SettingsContentV6FooterV10CodingKeysOMa()
{
  return &_s14descr26F502E21O15SettingsContentV6FooterV10CodingKeysON;
}

unsigned char *_s14descr26F502E21O15SettingsContentV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240B5AB68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr26F502E21O15SettingsContentV10CodingKeysOMa()
{
  return &_s14descr26F502E21O15SettingsContentV10CodingKeysON;
}

ValueMetadata *_s14descr26F502E21O15SettingsContentV6HeaderVMa()
{
  return &_s14descr26F502E21O15SettingsContentV6HeaderVN;
}

uint64_t _s14descr26F502E21O15SettingsContentV11SwitchStateVwet(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t _s14descr26F502E21O15SettingsContentV11SwitchStateVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240B5AD20);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr26F502E21O15SettingsContentV11SwitchStateVMa()
{
  return &_s14descr26F502E21O15SettingsContentV11SwitchStateVN;
}

unint64_t sub_240B5AD5C()
{
  unint64_t result = qword_268CA1800;
  if (!qword_268CA1800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1800);
  }
  return result;
}

unint64_t sub_240B5ADB4()
{
  unint64_t result = qword_268CA1808;
  if (!qword_268CA1808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1808);
  }
  return result;
}

unint64_t sub_240B5AE0C()
{
  unint64_t result = qword_268CA1810;
  if (!qword_268CA1810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1810);
  }
  return result;
}

unint64_t sub_240B5AE64()
{
  unint64_t result = qword_268CA1818;
  if (!qword_268CA1818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1818);
  }
  return result;
}

unint64_t sub_240B5AEBC()
{
  unint64_t result = qword_268CA1820;
  if (!qword_268CA1820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1820);
  }
  return result;
}

unint64_t sub_240B5AF14()
{
  unint64_t result = qword_268CA1828;
  if (!qword_268CA1828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1828);
  }
  return result;
}

uint64_t sub_240B5AF68(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x8000000240BD3900 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5365727574616566 && a2 == 0xED00006863746977 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000240BD3920 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726564616568 && a2 == 0xE600000000000000 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7265746F6F66 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t sub_240B5B194()
{
  unint64_t result = qword_268CA1838;
  if (!qword_268CA1838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1838);
  }
  return result;
}

unint64_t sub_240B5B1E8()
{
  unint64_t result = qword_268CA1848;
  if (!qword_268CA1848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1848);
  }
  return result;
}

void sub_240B5B23C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *_s14descr26F502E21O15SettingsContentV6HeaderV10CodingKeysOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x240B5B340);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s14descr26F502E21O15SettingsContentV6HeaderV10CodingKeysOMa()
{
  return &_s14descr26F502E21O15SettingsContentV6HeaderV10CodingKeysON;
}

unsigned char *_s14descr26F502E21O15SettingsContentV11SwitchStateV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240B5B444);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr26F502E21O15SettingsContentV11SwitchStateV10CodingKeysOMa()
{
  return &_s14descr26F502E21O15SettingsContentV11SwitchStateV10CodingKeysON;
}

unint64_t sub_240B5B480()
{
  unint64_t result = qword_268CA1860;
  if (!qword_268CA1860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1860);
  }
  return result;
}

unint64_t sub_240B5B4D8()
{
  unint64_t result = qword_268CA1868;
  if (!qword_268CA1868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1868);
  }
  return result;
}

unint64_t sub_240B5B530()
{
  unint64_t result = qword_268CA1870;
  if (!qword_268CA1870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1870);
  }
  return result;
}

unint64_t sub_240B5B588()
{
  unint64_t result = qword_268CA1878;
  if (!qword_268CA1878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1878);
  }
  return result;
}

unint64_t sub_240B5B5E0()
{
  unint64_t result = qword_268CA1880;
  if (!qword_268CA1880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1880);
  }
  return result;
}

unint64_t sub_240B5B638()
{
  unint64_t result = qword_268CA1888;
  if (!qword_268CA1888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1888);
  }
  return result;
}

uint64_t sub_240B5B69C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_240BB3660();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  char v29 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  int v8 = (char *)v27 - v7;
  MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)v27 - v9;
  uint64_t v11 = sub_240BB36D0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A57230();
  uint64_t v15 = (void *)sub_240BB36B0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v15)
  {
    v27[0] = self;
    unsigned int v16 = objc_msgSend(v27[0], sel_isBradycardiaDetectionEnabled);
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
    v27[1] = v15;
    uint64_t v28 = a1;
    if (v16)
    {
      uint64_t v18 = *MEMORY[0x263F435C8];
      v17(v10, v18, v2);
    }
    else
    {
      v17(v10, *MEMORY[0x263F435D0], v2);
      uint64_t v18 = *MEMORY[0x263F435C8];
    }
    v17(v8, v18, v2);
    char v21 = sub_240BB3650();
    uint64_t v22 = *(void (**)(char *, uint64_t))(v3 + 8);
    v22(v8, v2);
    v22(v10, v2);
    sub_240A572C4(v21 & 1);
    if (objc_msgSend(v27[0], sel_isBradycardiaDetectionEnabled)) {
      uint64_t v23 = v18;
    }
    else {
      uint64_t v23 = *MEMORY[0x263F435D0];
    }
    uint64_t v24 = v29;
    v17(v29, v23, v2);
    sub_240BB3700();
    sub_240BB36E0();
    v22(v24, v2);
    uint64_t v25 = v28;
    sub_240BB5010();
    uint64_t v26 = sub_240BB5020();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 0, 1, v26);
  }
  else
  {
    uint64_t v19 = sub_240BB5020();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a1, 1, 1, v19);
  }
}

uint64_t type metadata accessor for BradycardiaThresholdSpecifierConfiguration()
{
  return self;
}

uint64_t sub_240B5BA90@<X0>(uint64_t a1@<X8>)
{
  unsigned int v2 = objc_msgSend(self, sel_isBradycardiaDetectionEnabled);
  uint64_t v3 = sub_240BB3660();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  uint64_t v5 = (unsigned int *)MEMORY[0x263F435C8];
  if (!v2) {
    uint64_t v5 = (unsigned int *)MEMORY[0x263F435D0];
  }
  uint64_t v6 = *v5;

  return v4(a1, v6, v3);
}

uint64_t sub_240B5BB2C@<X0>(uint64_t a1@<X8>)
{
  return sub_240B5B69C(a1);
}

uint64_t sub_240B5BB54()
{
  id v0 = objc_msgSend(self, sel_bradycardiaHeartRateOptions);
  sub_240A34DC4(0, (unint64_t *)&qword_268CA10E0);
  unint64_t v1 = sub_240BB6F10();

  swift_retain();
  uint64_t v2 = sub_240A9D2F8(v1);
  swift_bridgeObjectRelease();
  swift_release();
  return v2;
}

id sub_240B5BC04()
{
  id v0 = self;
  if (!objc_msgSend(v0, sel_isBradycardiaDetectionEnabled)) {
    return 0;
  }
  double v1 = (double)(uint64_t)objc_msgSend(v0, sel_bradycardiaThresholdHeartRate);
  id v2 = objc_msgSend(self, sel__countPerMinuteUnit);
  id v3 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v2, v1);

  return v3;
}

void sub_240B5BCBC(void *a1)
{
  objc_msgSend(a1, sel__beatsPerMinute);
  id v2 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v1);
  objc_msgSend(self, sel_setBradycardiaThresholdHeartRate_, v2);
}

id sub_240B5BD40()
{
  id v0 = self;

  return objc_msgSend(v0, sel_setBradycardiaThresholdHeartRate_, 0);
}

uint64_t sub_240B5BD7C(uint64_t a1, uint64_t a2)
{
  sub_240A1E37C(a2 + 16, (uint64_t)v4);
  sub_240A3466C(v4, v4[3]);
  sub_240BB4FC0();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v4);
  uint64_t result = MEMORY[0x24560BA20](a2 + 56);
  if (result)
  {
    swift_getObjectType();
    sub_240BB4F80();
    return sub_240BB50A0();
  }
  return result;
}

uint64_t sub_240B5BE14(uint64_t a1, uint64_t a2)
{
  id v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_240B5BE68()
{
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 16);
  sub_240A484BC(v0 + 56);
  sub_240A484BC(v0 + 72);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BradycardiaSettingsViewControllerDelegate()
{
  return self;
}

uint64_t type metadata accessor for BradycardiaSettingsDataSource(uint64_t a1)
{
  return sub_240A3E6AC(a1, (uint64_t *)&unk_268CA18B0);
}

uint64_t sub_240B5BEF4()
{
  return sub_240A9CF18();
}

uint64_t sub_240B5BF14(uint64_t a1, uint64_t a2)
{
  return sub_240B5CFC8(a2);
}

id sub_240B5BF20(void *a1, uint64_t a2)
{
  v18[0] = a1;
  swift_getObjectType();
  sub_240A9D744(0, (unint64_t *)&qword_268C9F218, MEMORY[0x263F43A90], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v18 - v6;
  *(void *)&v2[qword_268CA1898] = 0;
  id v8 = objc_allocWithZone(MEMORY[0x263F0A448]);
  uint64_t v9 = v2;
  id v10 = objc_msgSend(v8, sel_initWithHealthStore_, a1);
  type metadata accessor for BradycardiaFeatureStatusAvailability();
  swift_allocObject();
  *(void *)&v9[qword_268CA1890] = sub_240BB1E20(v10);
  uint64_t v11 = (void *)type metadata accessor for BradycardiaThresholdSpecifierConfiguration();
  swift_allocObject();
  uint64_t v12 = swift_retain();
  uint64_t v13 = sub_240A9BB2C(v12);

  sub_240A5720C();
  uint64_t v14 = sub_240BB3B20();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v7, a2, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
  v18[4] = v11;
  v18[5] = (id)sub_240B5D6CC(&qword_268CA18E8, (void (*)(uint64_t))type metadata accessor for BradycardiaThresholdSpecifierConfiguration);
  v18[1] = v13;
  swift_retain();
  id v16 = (id)sub_240BB54A0();
  sub_240B5C1C4();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a2, v14);
  return v16;
}

uint64_t sub_240B5C1C4()
{
  sub_240A9D744(0, (unint64_t *)&unk_26AFD9960, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v0 - 8);
  id v2 = (char *)v22 - v1;
  sub_240A80448(0);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A8047C();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A80510();
  uint64_t v23 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  id v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_240A9D744(0, &qword_26AFD98C0, (uint64_t (*)(uint64_t))sub_240A5C434, MEMORY[0x263EFDE58]);
  sub_240BB6270();
  swift_endAccess();
  sub_240B5D6CC(&qword_26AFD98B0, sub_240A80448);
  sub_240BB6410();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9980);
  id v24 = (id)sub_240BB7310();
  uint64_t v17 = sub_240BB72F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v2, 1, 1, v17);
  sub_240B5D6CC(&qword_268C9F588, (void (*)(uint64_t))sub_240A8047C);
  sub_240A805DC();
  sub_240BB6400();
  sub_240A9D678((uint64_t)v2);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_allocObject();
  uint64_t v18 = v22[1];
  swift_unknownObjectWeakInit();
  sub_240B5D6CC(&qword_268C9F598, (void (*)(uint64_t))sub_240A80510);
  uint64_t v19 = v23;
  uint64_t v20 = sub_240BB6450();
  swift_release();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v19);
  *(void *)(v18 + qword_268CA1898) = v20;
  return swift_release();
}

void sub_240B5C668()
{
}

uint64_t sub_240B5C698()
{
  swift_release();

  return swift_release();
}

id sub_240B5C6D8()
{
  return sub_240B5C86C(type metadata accessor for BradycardiaSettingsDataSource);
}

uint64_t sub_240B5C6F0()
{
  swift_release();

  return swift_release();
}

uint64_t sub_240B5C73C()
{
  return type metadata accessor for BradycardiaSettingsDataSource(0);
}

uint64_t type metadata accessor for BradycardiaSettingsViewController(uint64_t a1)
{
  return sub_240A3E6AC(a1, (uint64_t *)&unk_268CA18D0);
}

uint64_t sub_240B5C764()
{
  return sub_240A9CF18();
}

void sub_240B5C788()
{
}

void sub_240B5C7E4()
{
}

uint64_t sub_240B5C814()
{
  return swift_release();
}

id sub_240B5C854()
{
  return sub_240B5C86C(type metadata accessor for BradycardiaSettingsViewController);
}

id sub_240B5C86C(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_240B5C8AC(uint64_t a1)
{
  return swift_release();
}

uint64_t sub_240B5C8F8()
{
  return type metadata accessor for BradycardiaSettingsViewController(0);
}

char *sub_240B5C900(void *a1, uint64_t a2)
{
  objc_super v3 = v2;
  uint64_t v24 = a2;
  swift_getObjectType();
  uint64_t v6 = sub_240BB3B20();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  id v10 = objc_allocWithZone((Class)type metadata accessor for BradycardiaSettingsDataSource(0));
  uint64_t v11 = v3;
  id v12 = sub_240B5BF20(a1, (uint64_t)v9);
  uint64_t v13 = qword_268CA18C0;
  *(void *)&v11[qword_268CA18C0] = v12;
  sub_240BB54D0();
  type metadata accessor for BradycardiaSettingsViewControllerDelegate();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 64) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v14 + 80) = 0;
  swift_unknownObjectWeakInit();
  sub_240A37388(&v25, v14 + 16);
  *(void *)&v11[qword_268CA18C8] = v14;

  uint64_t v15 = *(void **)&v11[v13];
  sub_240B5D6CC(&qword_268CA18E0, (void (*)(uint64_t))type metadata accessor for BradycardiaSettingsViewControllerDelegate);
  id v16 = v15;
  swift_retain();
  uint64_t v17 = (char *)(id)sub_240BB4E60();
  sub_240A57180();
  uint64_t v18 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_setTitle_, v18);

  uint64_t v19 = qword_268CA18C8;
  uint64_t v20 = *(void *)&v17[qword_268CA18C8];
  swift_retain();
  sub_240BB54B0();
  *(void *)(v20 + 64) = v21;
  swift_unknownObjectWeakAssign();
  swift_release();
  sub_240BB50A0();
  *(void *)(*(void *)&v17[v19] + 80) = MEMORY[0x263F444A8];
  swift_unknownObjectWeakAssign();
  uint64_t v22 = v17;
  sub_240BB4E70();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v24, v6);
  return v22;
}

void *sub_240B5CBE4(unint64_t a1, void *a2, uint64_t a3)
{
  id v23 = a2;
  unint64_t v4 = a1;
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_240BB4850();
  for (; v5; uint64_t v5 = sub_240BB7900())
  {
    unint64_t v19 = v4;
    uint64_t v20 = a3 + 16;
    unint64_t v21 = v4 & 0xC000000000000001;
    uint64_t v6 = 4;
    while (1)
    {
      a3 = v6 - 4;
      id v8 = v21 ? (id)MEMORY[0x24560AAA0](v6 - 4, v4) : *(id *)(v4 + 8 * v6);
      uint64_t v9 = v8;
      uint64_t v10 = v6 - 3;
      if (__OFADD__(a3, 1)) {
        break;
      }
      id v11 = objc_msgSend(v23, sel_identifier);
      if (v11)
      {
        id v12 = v11;
        uint64_t v13 = sub_240BB6DE0();
        uint64_t v15 = v14;
      }
      else
      {
        uint64_t v13 = 0;
        uint64_t v15 = 0;
      }
      sub_240A1E37C(v20, (uint64_t)v22);
      sub_240A3466C(v22, v22[3]);
      uint64_t v16 = sub_240BB4FA0();
      if (v15)
      {
        if (v13 == v16 && v15 == v17)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v22);
LABEL_19:
          swift_bridgeObjectRelease();
          return v9;
        }
        char v7 = sub_240BB7AE0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v22);
        if (v7) {
          goto LABEL_19;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v22);
      }

      unint64_t v4 = v19;
      ++v6;
      if (v10 == v5) {
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_21:
    sub_240BB4850();
  }
LABEL_22:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_240B5CDFC()
{
  uint64_t v0 = self;
  if (objc_msgSend(v0, sel_isBradycardiaDetectionEnabled))
  {
    double v1 = (double)(uint64_t)objc_msgSend(v0, sel_bradycardiaThresholdHeartRate);
    id v2 = objc_msgSend(self, sel__countPerMinuteUnit);
    id v3 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v2, v1);

    objc_msgSend(v3, sel__beatsPerMinute);
    id v5 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v4);
    id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
    sub_240B91C50(v5, (uint64_t)v6);

    char v7 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
    id v8 = objc_msgSend(v0, sel_bradycardiaHeartThresholdFooterDescriptionWithThresholdValue_, v7);

    uint64_t v9 = sub_240BB6DE0();
  }
  else
  {
    uint64_t v10 = (void *)sub_240BB6DA0();
    id v8 = objc_msgSend(v0, sel_bradycardiaHeartThresholdFooterDescriptionWithThresholdValue_, v10);

    uint64_t v9 = sub_240BB6DE0();
  }

  return v9;
}

uint64_t sub_240B5CFC8(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_unknownObjectRetain();
  self;
  double v4 = (void *)swift_dynamicCastObjCClass();
  if (!v4) {
    goto LABEL_30;
  }
  id v5 = v4;
  id v6 = objc_msgSend(v4, sel_identifier);
  if (v6)
  {
    char v7 = v6;
    uint64_t v8 = sub_240BB6DE0();
    uint64_t v10 = v9;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v10 = 0;
  }
  sub_240BB5040();
  uint64_t v11 = sub_240BB5030();
  if (v10)
  {
    if (v8 == v11 && v10 == v12)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    char v13 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v13)
    {
LABEL_11:
      sub_240A1E37C(v2 + 16, (uint64_t)&aBlock);
      sub_240A3466C(&aBlock, (uint64_t)v42);
      sub_240BB4FD0();
      _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&aBlock);
      if (MEMORY[0x24560BA20](v2 + 56))
      {
        swift_getObjectType();
        sub_240BB4F70();
        sub_240BB50A0();
      }
      return sub_240BB50A0();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = *(void *)(v2 + 40);
  uint64_t v15 = sub_240A3466C((void *)(v2 + 16), v14);
  uint64_t v16 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v16 + 16))(v18);
  unint64_t v19 = sub_240BB4F90();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v14);
  swift_unknownObjectRetain();
  swift_retain();
  id v20 = sub_240B5CBE4(v19, v5, v2);
  swift_bridgeObjectRelease();
  sub_240BB50A0();
  swift_release();
  if (!v20) {
    return sub_240BB50A0();
  }
  objc_msgSend(v20, sel__beatsPerMinute);
  if ((~*(void *)&v21 & 0x7FF0000000000000) != 0)
  {
    if (v21 > -9.22337204e18)
    {
      if (v21 < 9.22337204e18)
      {
        uint64_t v22 = (uint64_t)v21;
        if ((uint64_t)objc_msgSend(self, sel_bradycardiaWarningThreshold) > (uint64_t)v21) {
          goto LABEL_20;
        }
        uint64_t v23 = *(void *)(v2 + 40);
        uint64_t v24 = sub_240A3466C((void *)(v2 + 16), v23);
        v38[1] = v38;
        uint64_t v25 = *(void *)(v23 - 8);
        MEMORY[0x270FA5388](v24);
        char v27 = (char *)v38 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v25 + 16))(v27);
        uint64_t v28 = (void *)sub_240BB4FB0();
        (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v23);
        if (!v28) {
          goto LABEL_22;
        }
        sub_240A34DC4(0, &qword_268CA0280);
        id v29 = v20;
        id v30 = v28;
        char v31 = sub_240BB7500();

        if (v31)
        {
LABEL_20:
          sub_240A1E37C(v2 + 16, (uint64_t)&aBlock);
          sub_240A3466C(&aBlock, (uint64_t)v42);
          sub_240BB4FC0();
          _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&aBlock);
          if (MEMORY[0x24560BA20](v2 + 56))
          {
            swift_getObjectType();
            sub_240BB4F70();
            sub_240BB50A0();
          }
        }
        else
        {
LABEL_22:
          uint64_t v32 = self;
          uint64_t v33 = swift_allocObject();
          *(void *)(v33 + 16) = v2;
          *(void *)(v33 + 24) = v20;
          uint64_t v43 = sub_240B5D68C;
          uint64_t v44 = v33;
          unint64_t aBlock = MEMORY[0x263EF8330];
          unint64_t v40 = 1107296256;
          os_log_type_t v41 = sub_240B5BE14;
          uint64_t v42 = &unk_26F50A240;
          uint64_t v34 = _Block_copy(&aBlock);
          swift_retain();
          id v20 = v20;
          swift_release();
          id v35 = objc_msgSend(v32, sel_hkhr_bradycardiaConfirmationControllerWithValue_confirmHandler_cancelHandler_, v22, v34, 0);
          _Block_release(v34);
          if (MEMORY[0x24560BA20](v2 + 72))
          {
            swift_getObjectType();
            uint64_t v36 = (void *)sub_240BB54F0();
            sub_240BB50A0();
            objc_msgSend(v36, sel_presentViewController_animated_completion_, v35, 1, 0);
          }
        }

        return sub_240BB50A0();
      }
      goto LABEL_29;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  sub_240BB50A0();
  unint64_t aBlock = 0;
  unint64_t v40 = 0xE000000000000000;
  sub_240BB77C0();
  swift_bridgeObjectRelease();
  unint64_t aBlock = 0xD000000000000021;
  unint64_t v40 = 0x8000000240BD3B10;
  uint64_t v45 = a1;
  swift_unknownObjectRetain();
  sub_240BB6E10();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  uint64_t result = sub_240BB78D0();
  __break(1u);
  return result;
}

uint64_t sub_240B5D64C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B5D68C(uint64_t a1)
{
  return sub_240B5BD7C(a1, *(void *)(v1 + 16));
}

uint64_t sub_240B5D694()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B5D6CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240B5D714@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_240BB5BD0();
  uint64_t v3 = MEMORY[0x263F81F20];
  a1[3] = v2;
  a1[4] = v3;
  sub_240A23B08(a1);
  sub_240BB5BB0();
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  sub_240BB2980();
  sub_240BB5BC0();
  id v4 = objc_msgSend(self, sel_hk_appTintColor, 0xE000000000000000);
  id v5 = (uint64_t (*)(unsigned char *, void))sub_240BB5B30();
  sub_240BB5B10();
  return v5(v7, 0);
}

uint64_t sub_240B5D834@<X0>(uint64_t *a1@<X8>)
{
  return sub_240B5D714(a1);
}

uint64_t sub_240B5D84C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return 1;
  }
  else {
    return sub_240BB7AE0();
  }
}

uint64_t sub_240B5D87C()
{
  return sub_240BB7C00();
}

uint64_t sub_240B5D8D8()
{
  sub_240BB4850();
  sub_240BB6E50();

  return swift_bridgeObjectRelease();
}

uint64_t sub_240B5D930()
{
  return sub_240BB7C00();
}

id sub_240B5D988@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v4 = v2[1];
  uint64_t v7 = v2[2];
  uint64_t v6 = v2[3];
  id v10 = (id)v2[4];
  a2[3] = a1;
  a2[4] = sub_240B5DC00();
  uint64_t v8 = (void *)swift_allocObject();
  *a2 = v8;
  v8[2] = v5;
  _OWORD v8[3] = v4;
  v8[4] = v7;
  uint64_t v8[5] = v6;
  void v8[6] = v10;
  sub_240BB4850();
  sub_240BB4850();

  return v10;
}

uint64_t sub_240B5DA28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a2 + 32);
  uint64_t v3 = type metadata accessor for AFibBurdenPDFProvider();
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = v2;
  uint64_t v5 = sub_240BB4870();
  id v6 = v2;
  uint64_t v7 = sub_240BB4860();
  uint64_t v8 = MEMORY[0x263F442B0];
  v4[6] = v5;
  v4[7] = v8;
  v4[3] = v7;
  id v9 = (id)HKHRAFibBurdenLogForCategory();
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A0C0]), sel_initWithLoggingCategory_healthDataSource_, v9, v6);

  v4[8] = v10;
  void v12[3] = v3;
  v12[4] = sub_240B5E008(&qword_268CA1900, (void (*)(uint64_t))type metadata accessor for AFibBurdenPDFProvider);
  v12[0] = v4;
  sub_240BB7250();
  return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v12);
}

uint64_t sub_240B5DB64(uint64_t a1, void *a2)
{
  return sub_240B5DC9C(a2);
}

unint64_t sub_240B5DBAC()
{
  unint64_t result = qword_268CA18F0;
  if (!qword_268CA18F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA18F0);
  }
  return result;
}

unint64_t sub_240B5DC00()
{
  unint64_t result = qword_268CA18F8;
  if (!qword_268CA18F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA18F8);
  }
  return result;
}

uint64_t sub_240B5DC54()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_240B5DC9C(void *a1)
{
  uint64_t v3 = sub_240BB6B90();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_240BB6BC0();
  uint64_t v7 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  id v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B1A1B8();
  id v10 = (void *)sub_240BB7310();
  long long v11 = *v1;
  long long v22 = v1[1];
  long long v23 = v11;
  uint64_t v12 = (void *)*((void *)v1 + 4);
  uint64_t v13 = swift_allocObject();
  long long v14 = v1[1];
  *(_OWORD *)(v13 + 24) = *v1;
  *(void *)(v13 + 16) = a1;
  *(_OWORD *)(v13 + 40) = v14;
  *(void *)(v13 + 56) = *((void *)v1 + 4);
  aBlock[4] = sub_240B5DFFC;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_240A87354;
  aBlock[3] = &unk_26F50A2E0;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = a1;
  sub_240A334B8((uint64_t)&v23);
  sub_240A334B8((uint64_t)&v22);
  id v17 = v12;
  swift_release();
  sub_240BB6BB0();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_240B5E008((unint64_t *)&qword_26AFD98C8, MEMORY[0x263F8F030]);
  sub_240AAA4B8();
  sub_240B5E008((unint64_t *)&qword_26AFD98F8, (void (*)(uint64_t))sub_240AAA4B8);
  sub_240BB7670();
  MEMORY[0x24560A5E0](0, v9, v6, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v20);
}

uint64_t sub_240B5DFAC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_240B5DFFC()
{
  return sub_240B5DA28(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_240B5E008(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void destroy for AFibBurdenPDFItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 32);
}

void *initializeWithCopy for AFibBurdenPDFItem(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = (void *)a2[4];
  a1[4] = v5;
  sub_240BB4850();
  sub_240BB4850();
  id v6 = v5;
  return a1;
}

void *assignWithCopy for AFibBurdenPDFItem(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[4];
  uint64_t v5 = (void *)a1[4];
  a1[4] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for AFibBurdenPDFItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFItem()
{
  return &type metadata for AFibBurdenPDFItem;
}

uint64_t sub_240B5E288(void *a1)
{
  id v2 = objc_msgSend(a1, sel_healthDataSource);
  if (v2)
  {
    uint64_t v3 = v2;
    unint64_t v4 = sub_240AB7F9C(MEMORY[0x263F8EE78]);
    uint64_t v5 = sub_240B5E7B4();
    unint64_t v6 = MEMORY[0x263F8D310];
    unint64_t v39 = MEMORY[0x263F8D310];
    *(void *)&long long v38 = v5;
    *((void *)&v38 + 1) = v7;
    sub_240A7B714(&v38, v37);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v40 = v4;
    sub_240B6A138(v37, 0xD00000000000001BLL, 0x8000000240BD3D50, isUniquelyReferenced_nonNull_native);
    unint64_t v9 = v40;
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_240B5E8D0();
    unint64_t v39 = v6;
    *(void *)&long long v38 = v10;
    *((void *)&v38 + 1) = v11;
    sub_240A7B714(&v38, v37);
    char v12 = swift_isUniquelyReferenced_nonNull_native();
    sub_240B6A138(v37, 0xD000000000000010, 0x8000000240BD3D70, v12);
    unint64_t v40 = v9;
    swift_bridgeObjectRelease();
    id v13 = (id)HKHRAFibBurdenDetermineIsFocusModeOn();
    if (v13)
    {
      id v14 = v13;
      unint64_t v39 = sub_240A576E0();
      *(void *)&long long v38 = v14;
      sub_240A7B714(&v38, v37);
      char v15 = swift_isUniquelyReferenced_nonNull_native();
      sub_240B6A138(v37, 0x4D7375636F467369, 0xED00006E4F65646FLL, v15);
      unint64_t v40 = v9;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_240B69E5C(0x4D7375636F467369, 0xED00006E4F65646FLL, &v38);
      sub_240A7B53C((uint64_t)&v38);
    }
    uint64_t v16 = sub_240BB6DE0();
    uint64_t v18 = v17;
    if (qword_26AFD7BF0 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_240BB5990();
    uint64_t v20 = sub_240A395FC(v19, (uint64_t)qword_26AFDEB80);
    uint64_t v21 = sub_240B6A758(v3, v20);
    unint64_t v39 = v6;
    *(void *)&long long v38 = v21;
    *((void *)&v38 + 1) = v22;
    sub_240A7B714(&v38, v37);
    unint64_t v23 = v40;
    char v24 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v40 = 0x8000000000000000;
    sub_240B6A138(v37, v16, v18, v24);
    unint64_t v40 = v23;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v25 = sub_240BB6DE0();
    uint64_t v27 = v26;
    id v28 = objc_msgSend(a1, sel_environmentDataSource);
    id v29 = sub_240B6B04C(v3, v28, v20);

    unint64_t v39 = sub_240A576E0();
    *(void *)&long long v38 = v29;
    sub_240A7B714(&v38, v37);
    unint64_t v30 = v40;
    char v31 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v40 = 0x8000000000000000;
    sub_240B6A138(v37, v25, v27, v31);
    unint64_t v40 = v30;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v32 = sub_240B15B68(v3, (void *)*MEMORY[0x263F09728], 0, v20);
    if (v33)
    {
      unint64_t v39 = v6;
      *(void *)&long long v38 = v32;
      *((void *)&v38 + 1) = v33;
      sub_240A7B714(&v38, v37);
      unint64_t v34 = v40;
      char v35 = swift_isUniquelyReferenced_nonNull_native();
      sub_240B6A138(v37, 0x5665727574616566, 0xEE006E6F69737265, v35);
      sub_240BB50A0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_240B69E5C(0x5665727574616566, 0xEE006E6F69737265, &v38);
      sub_240A7B53C((uint64_t)&v38);
      sub_240BB50A0();
      return v40;
    }
    return v34;
  }
  else
  {
    uint64_t result = sub_240BB78D0();
    __break(1u);
  }
  return result;
}

uint64_t sub_240B5E7B4()
{
  uint64_t v1 = 0x7461642077656976;
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  if (sub_240BB6DE0() == v3 && v4 == v2) {
    goto LABEL_12;
  }
  char v6 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  if (v6) {
    return v1;
  }
  uint64_t v1 = 0x7373696D736964;
  if (sub_240BB6DE0() == v3 && v7 == v2)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    return v1;
  }
  char v9 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0) {
    return sub_240BB6DE0();
  }
  return v1;
}

uint64_t sub_240B5E8D0()
{
  unint64_t v1 = 0xD000000000000010;
  uint64_t v2 = *(void **)(v0 + 16);
  id v3 = objc_msgSend(v2, sel_content);
  id v4 = objc_msgSend(v3, sel_categoryIdentifier);

  uint64_t v5 = sub_240BB6DE0();
  uint64_t v7 = v6;

  if (sub_240BB6DE0() == v5 && v8 == v7)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v10 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      if (sub_240BB6DE0() == v5 && v11 == v7)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v13 = sub_240BB7AE0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0) {
          return sub_240BB6DE0();
        }
      }
      return v1;
    }
  }
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v2, sel_content);
  id v15 = objc_msgSend(v14, sel_userInfo);

  uint64_t v16 = sub_240BB6D30();
  *(void *)&long long v21 = 0xD000000000000012;
  *((void *)&v21 + 1) = 0x8000000240BD3C90;
  sub_240BB7760();
  if (*(void *)(v16 + 16) && (unint64_t v17 = sub_240AB9E80((uint64_t)v23), (v18 & 1) != 0))
  {
    sub_240A38A64(*(void *)(v16 + 56) + 32 * v17, (uint64_t)&v21);
  }
  else
  {
    long long v21 = 0u;
    long long v22 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_240ABA9A8((uint64_t)v23);
  uint64_t v19 = *((void *)&v22 + 1);
  sub_240A7B53C((uint64_t)&v21);
  if (v19) {
    return 0xD000000000000021;
  }
  else {
    return 0xD000000000000024;
  }
}

uint64_t sub_240B5EB4C()
{
  swift_bridgeObjectRelease();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 40);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AFibBurdenNotificationInteractionAnalyticsEvent()
{
  return self;
}

ValueMetadata *type metadata accessor for BiomeFocusModeOnDeterminer()
{
  return &type metadata for BiomeFocusModeOnDeterminer;
}

uint64_t PromotionAvailabilityState.rawValue.getter(char a1)
{
  if (!a1) {
    return 0xD000000000000015;
  }
  if (a1 == 1) {
    return 0xD000000000000014;
  }
  return 0x6E6564646968;
}

uint64_t sub_240B5EC24(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_240B65A34(*a1, *a2);
}

uint64_t sub_240B5EC30()
{
  return sub_240B66080();
}

uint64_t sub_240B5EC38()
{
  sub_240BB6E50();

  return swift_bridgeObjectRelease();
}

uint64_t sub_240B5ECC8()
{
  return sub_240B66500();
}

uint64_t sub_240B5ECD0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s5Heart26PromotionAvailabilityStateO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_240B5ED00(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xD000000000000014;
  unint64_t v3 = 0x8000000240BC7C50;
  if (*v1 != 1)
  {
    unint64_t v2 = 0x6E6564646968;
    unint64_t v3 = 0xE600000000000000;
  }
  if (*v1)
  {
    unint64_t v4 = v3;
  }
  else
  {
    unint64_t v2 = 0xD000000000000015;
    unint64_t v4 = 0x8000000240BC7C30;
  }
  *a1 = v2;
  a1[1] = v4;
}

uint64_t sub_240B5ED60()
{
  return sub_240BB6ED0();
}

uint64_t sub_240B5EDC0()
{
  return sub_240BB6EC0();
}

unint64_t sub_240B5EE10()
{
  return 0xD000000000000011;
}

uint64_t sub_240B5EE2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_240B61414(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_240B5EE58(uint64_t a1)
{
  unint64_t v2 = sub_240B6136C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240B5EE94(uint64_t a1)
{
  unint64_t v2 = sub_240B6136C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PromotionUserData.encode(to:)(void *a1, char a2)
{
  sub_240B61CA0(0, &qword_268CA1908, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v10[-v7];
  sub_240A3466C(a1, a1[3]);
  sub_240B6136C();
  sub_240BB7C40();
  v10[15] = a2;
  sub_240B613C0();
  sub_240BB7A90();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

void *PromotionUserData.init(from:)(void *a1)
{
  return sub_240B6149C(a1);
}

void *sub_240B5F040@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_240B6149C(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_240B5F06C(void *a1)
{
  return PromotionUserData.encode(to:)(a1, *v1);
}

BOOL sub_240B5F088(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return sub_240B60F7C(*a1, *a2);
}

uint64_t sub_240B5F094(unsigned int *a1, unsigned int *a2)
{
  return sub_240B610C0(*a1, *a2);
}

uint64_t sub_240B5F0A0()
{
  return sub_240B5F13C();
}

uint64_t sub_240B5F0B4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_240BB6290();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_240B5F128()
{
  return sub_240B5F13C();
}

uint64_t sub_240B5F13C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_240BB6290();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_240B5F1A8()
{
  return sub_240B5F1D0();
}

uint64_t sub_240B5F1BC()
{
  return sub_240B5F1D0();
}

uint64_t sub_240B5F1D0()
{
  sub_240A3951C();
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  sub_240BB35D0();

  swift_release();
  return swift_release();
}

id sub_240B5F26C()
{
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Heart26HeartPromotionAvailability_heartRhythmAvailability], sel_removeHeartRhythmAvailabilityObserver_, v0);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HeartPromotionAvailability();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240B5F4B0(uint64_t a1, uint64_t a2)
{
  sub_240A39410(0, &qword_26AFD7BC0, MEMORY[0x263F44998]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)v25 - v8;
  swift_beginAccess();
  uint64_t result = MEMORY[0x24560BA20](a2 + 16);
  if (result)
  {
    uint64_t v11 = (void *)result;
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_240BB5990();
    sub_240A395FC(v12, (uint64_t)qword_26AFDEC70);
    char v13 = sub_240BB5970();
    os_log_type_t v14 = sub_240BB71A0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      v25[0] = a1;
      uint64_t v16 = (uint8_t *)v15;
      uint64_t v17 = swift_slowAlloc();
      uint64_t v26 = v17;
      *(_DWORD *)uint64_t v16 = 136446210;
      uint64_t v18 = sub_240BB7C80();
      v25[1] = sub_240A38940(v18, v19, &v26);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v13, v14, "[%{public}s]: Received IRN feature status update", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v17, -1, -1);
      uint64_t v20 = v16;
      a1 = v25[0];
      MEMORY[0x24560B930](v20, -1, -1);
    }

    uint64_t v21 = sub_240BB56E0();
    uint64_t v22 = *(void *)(v21 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v9, a1, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v9, 0, 1, v21);
    sub_240A3951C();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_240A3FC88((uint64_t)v9, (uint64_t)v7);
    uint64_t v26 = (uint64_t)v11;
    id v23 = v11;
    sub_240BB35E0();
    sub_240A395A0((uint64_t)v9, &qword_26AFD7BC0, MEMORY[0x263F44998]);
    __int16 v24 = sub_240A382AC(0);
    swift_getKeyPath();
    swift_getKeyPath();
    LOWORD(v26) = v24;
    v23;
    sub_240BB62A0();
    sub_240A27F1C();
    LOWORD(v21) = sub_240A382AC(2);
    swift_getKeyPath();
    swift_getKeyPath();
    LOWORD(v26) = v21;
    return sub_240BB62A0();
  }
  return result;
}

uint64_t sub_240B5F890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240A39410(0, &qword_26AFD7BC0, MEMORY[0x263F44998]);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  char v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v24 - v10;
  sub_240A3FB28();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x24560BA20](a2 + 16);
  if (result)
  {
    uint64_t v18 = (void *)result;
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_240A395FC(v13, (uint64_t)qword_26AFDEB68);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v19, v13);
    *(void *)(swift_allocObject() + 16) = a3;
    __int16 v24 = 0;
    sub_240BB5700();
    swift_release();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v20 = sub_240BB56E0();
    uint64_t v21 = *(void *)(v20 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v11, a1, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v11, 0, 1, v20);
    sub_240A3951C();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_240A3FC88((uint64_t)v11, (uint64_t)v9);
    __int16 v24 = v18;
    id v22 = v18;
    sub_240BB35E0();
    sub_240A395A0((uint64_t)v11, &qword_26AFD7BC0, MEMORY[0x263F44998]);
    sub_240A27F1C();
    __int16 v23 = sub_240A382AC(2);
    swift_getKeyPath();
    swift_getKeyPath();
    LOWORD(v24) = v23;
    v22;
    sub_240BB62A0();
    LOWORD(v20) = sub_240A382AC(0);
    swift_getKeyPath();
    swift_getKeyPath();
    LOWORD(v24) = v20;
    return sub_240BB62A0();
  }
  return result;
}

uint64_t sub_240B5FC54()
{
  return 0;
}

uint64_t sub_240B5FCEC(char a1)
{
  if (sub_240B606A4())
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_240BB5990();
    sub_240A395FC(v3, (uint64_t)qword_26AFDEC70);
    id v4 = v1;
    uint64_t v5 = sub_240BB5970();
    os_log_type_t v6 = sub_240BB71A0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = 0xD000000000000012;
      uint64_t v8 = swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v24 = v9;
      *(_DWORD *)uint64_t v8 = 136446722;
      swift_getObjectType();
      sub_240A394E0();
      uint64_t v10 = sub_240BB6E10();
      sub_240A38940(v10, v11, &v24);
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2082;
      sub_240A38940(0xD000000000000017, 0x8000000240BD3F60, &v24);
      sub_240BB75F0();
      *(_WORD *)(v8 + 22) = 2082;
      if (a1)
      {
        if (a1 == 1) {
          uint64_t v7 = 0x6472754262694661;
        }
        else {
          uint64_t v7 = 0x7461654662694661;
        }
        if (a1 == 1) {
          unint64_t v12 = 0xEA00000000006E65;
        }
        else {
          unint64_t v12 = 0xEC00000073657275;
        }
      }
      else
      {
        unint64_t v12 = 0x8000000240BD3F80;
      }
      sub_240A38940(v7, v12, &v24);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v5, v6, "[%{public}s.%{public}s] Age set. Showing %{public}s promotion with high priority.", (uint8_t *)v8, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v9, -1, -1);
      MEMORY[0x24560B930](v8, -1, -1);

      return 0;
    }
    else
    {

      return 0;
    }
  }
  else
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_240BB5990();
    sub_240A395FC(v13, (uint64_t)qword_26AFDEC70);
    id v14 = v1;
    uint64_t v15 = sub_240BB5970();
    os_log_type_t v16 = sub_240BB71A0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = 0xD000000000000012;
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v24 = v19;
      *(_DWORD *)uint64_t v18 = 136446722;
      swift_getObjectType();
      sub_240A394E0();
      uint64_t v20 = sub_240BB6E10();
      sub_240A38940(v20, v21, &v24);
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2082;
      sub_240A38940(0xD000000000000017, 0x8000000240BD3F60, &v24);
      sub_240BB75F0();
      *(_WORD *)(v18 + 22) = 2082;
      if (a1)
      {
        if (a1 == 1) {
          uint64_t v17 = 0x6472754262694661;
        }
        else {
          uint64_t v17 = 0x7461654662694661;
        }
        if (a1 == 1) {
          unint64_t v22 = 0xEA00000000006E65;
        }
        else {
          unint64_t v22 = 0xEC00000073657275;
        }
      }
      else
      {
        unint64_t v22 = 0x8000000240BD3F80;
      }
      sub_240A38940(v17, v22, &v24);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v15, v16, "[%{public}s.%{public}s] Age not set. Showing %{public}s promotion with low priority.", (uint8_t *)v18, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v19, -1, -1);
      MEMORY[0x24560B930](v18, -1, -1);
    }
    else
    {
    }
    return 1;
  }
}

uint64_t sub_240B601F0(void *a1)
{
  if (sub_240B606A4())
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_240BB5990();
    sub_240A395FC(v3, (uint64_t)qword_26AFDEC70);
    id v4 = v1;
    id v5 = a1;
    id v6 = v4;
    id v7 = v5;
    uint64_t v8 = sub_240BB5970();
    os_log_type_t v9 = sub_240BB71A0();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v34 = v11;
      *(_DWORD *)uint64_t v10 = 136446722;
      swift_getObjectType();
      sub_240A394E0();
      uint64_t v12 = sub_240BB6E10();
      sub_240A38940(v12, v13, &v34);
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2082;
      sub_240A38940(0xD000000000000028, 0x8000000240BD3F30, &v34);
      sub_240BB75F0();
      *(_WORD *)(v10 + 22) = 2082;
      id v14 = v7;
      uint64_t v15 = sub_240BB73A0();
      unint64_t v17 = v16;

      sub_240A38940(v15, v17, &v34);
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v8, v9, "[%{public}s.%{public}s] Age set. Showing %{public}s promotion with high priority.", (uint8_t *)v10, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v11, -1, -1);
      MEMORY[0x24560B930](v10, -1, -1);
    }
    else
    {
    }
    return 0;
  }
  else
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_240BB5990();
    sub_240A395FC(v19, (uint64_t)qword_26AFDEC70);
    id v20 = v1;
    id v21 = a1;
    id v22 = v20;
    id v23 = v21;
    uint64_t v24 = sub_240BB5970();
    os_log_type_t v25 = sub_240BB71A0();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v34 = v27;
      *(_DWORD *)uint64_t v26 = 136446722;
      swift_getObjectType();
      sub_240A394E0();
      uint64_t v28 = sub_240BB6E10();
      sub_240A38940(v28, v29, &v34);
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2082;
      sub_240A38940(0xD000000000000028, 0x8000000240BD3F30, &v34);
      sub_240BB75F0();
      *(_WORD *)(v26 + 22) = 2082;
      id v30 = v23;
      uint64_t v31 = sub_240BB73A0();
      unint64_t v33 = v32;

      sub_240A38940(v31, v33, &v34);
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v24, v25, "[%{public}s.%{public}s] Age not set. Showing %{public}s promotion with low priority.", (uint8_t *)v26, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v27, -1, -1);
      MEMORY[0x24560B930](v26, -1, -1);
    }
    else
    {
    }
    return 1;
  }
}

uint64_t sub_240B606A4()
{
  v18[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = sub_240BB28D0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  id v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_240A39410(0, (unint64_t *)&qword_268C9F2A0, MEMORY[0x263F063B0]);
  MEMORY[0x270FA5388](v5 - 8);
  id v7 = &v17[-v6];
  uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC5Heart26HeartPromotionAvailability_healthStore);
  v18[0] = 0;
  id v9 = objc_msgSend(v8, sel_dateOfBirthComponentsWithError_, v18);
  id v10 = v18[0];
  if (v9)
  {
    uint64_t v11 = v9;
    sub_240BB28B0();
    id v12 = v10;

    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 32))(v7, v4, v1);
    uint64_t v13 = 1;
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v2 + 56))(v7, 0, 1, v1);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) != 1) {
      goto LABEL_6;
    }
  }
  else
  {
    id v14 = v18[0];
    uint64_t v15 = (void *)sub_240BB2A50();

    swift_willThrow();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v7, 1, 1, v1);
  }
  uint64_t v13 = 0;
LABEL_6:
  sub_240A395A0((uint64_t)v7, (unint64_t *)&qword_268C9F2A0, MEMORY[0x263F063B0]);
  return v13;
}

uint64_t sub_240B60938()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_240BB5990();
  sub_240A395FC(v2, (uint64_t)qword_26AFDEC70);
  uint64_t v3 = sub_240BB5970();
  os_log_type_t v4 = sub_240BB71A0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v14 = v6;
    *(_DWORD *)uint64_t v5 = 136446210;
    uint64_t v7 = sub_240BB7C80();
    sub_240A38940(v7, v8, &v14);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v3, v4, "[%{public}s]: Heart rhythm availability did update", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v6, -1, -1);
    MEMORY[0x24560B930](v5, -1, -1);
  }

  __int16 v9 = sub_240A382AC(0);
  swift_getKeyPath();
  swift_getKeyPath();
  LOWORD(v14) = v9;
  id v10 = v1;
  sub_240BB62A0();
  sub_240A27F1C();
  __int16 v11 = sub_240A382AC(2);
  swift_getKeyPath();
  swift_getKeyPath();
  LOWORD(v14) = v11;
  id v12 = v10;
  return sub_240BB62A0();
}

uint64_t sub_240B60BA8(uint64_t a1, void *a2)
{
  sub_240BB77C0();
  sub_240BB6E70();
  swift_getObjectType();
  sub_240BB7C80();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  id v3 = a2;
  sub_240A39BC8(0, (unint64_t *)&qword_26AFD99E0);
  sub_240BB6E10();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return 0;
}

uint64_t sub_240B60CA4@<X0>(_DWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_240BB6290();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_240B60D24(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return sub_240BB62A0();
}

uint64_t sub_240B60D98(void **a1)
{
  uint64_t v1 = *a1;
  sub_240A3951C();
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  sub_240BB35D0();

  swift_release();
  return swift_release();
}

uint64_t sub_240B60E38(uint64_t a1, void **a2)
{
  os_log_type_t v4 = (void (*)(uint64_t))MEMORY[0x263F44998];
  sub_240A39410(0, &qword_26AFD7BC0, MEMORY[0x263F44998]);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  unint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  id v10 = (char *)v14 - v9;
  sub_240A3FC88(a1, (uint64_t)v14 - v9);
  __int16 v11 = *a2;
  sub_240A3951C();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_240A3FC88((uint64_t)v10, (uint64_t)v8);
  v14[1] = v11;
  id v12 = v11;
  sub_240BB35E0();
  return sub_240A395A0((uint64_t)v10, &qword_26AFD7BC0, v4);
}

BOOL sub_240B60F7C(unsigned __int16 a1, unsigned __int16 a2)
{
  unint64_t v4 = 0x8000000240BC7C30;
  if (!(_BYTE)a1)
  {
    unint64_t v6 = 0xD000000000000015;
    unint64_t v5 = 0x8000000240BC7C30;
    if (!(_BYTE)a2) {
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  if (a1 != 1)
  {
    unint64_t v5 = 0xE600000000000000;
    unint64_t v6 = 0x6E6564646968;
    if (!(_BYTE)a2) {
      goto LABEL_10;
    }
LABEL_6:
    if (a2 == 1)
    {
      unint64_t v4 = 0x8000000240BC7C50;
      if (v6 != 0xD000000000000014) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v4 = 0xE600000000000000;
      if (v6 != 0x6E6564646968) {
        goto LABEL_15;
      }
    }
    goto LABEL_13;
  }
  unint64_t v5 = 0x8000000240BC7C50;
  unint64_t v6 = 0xD000000000000014;
  if ((_BYTE)a2) {
    goto LABEL_6;
  }
LABEL_10:
  if (v6 != 0xD000000000000015)
  {
LABEL_15:
    char v7 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v7 & 1) == 0) {
      return result;
    }
    return (a2 ^ a1) < 0x100;
  }
LABEL_13:
  if (v5 != v4) {
    goto LABEL_15;
  }
  swift_bridgeObjectRelease_n();
  return (a2 ^ a1) < 0x100;
}

uint64_t sub_240B610C0(unsigned int a1, unsigned int a2)
{
  unint64_t v4 = 0xD000000000000014;
  unint64_t v5 = 0x8000000240BC7C30;
  if (!(_BYTE)a1)
  {
    unint64_t v7 = 0xD000000000000015;
    unint64_t v6 = 0x8000000240BC7C30;
    int v8 = a2;
    if ((_BYTE)a2) {
      goto LABEL_6;
    }
    goto LABEL_9;
  }
  if (a1 != 1)
  {
    unint64_t v6 = 0xE600000000000000;
    unint64_t v7 = 0x6E6564646968;
    int v8 = a2;
    if ((_BYTE)a2) {
      goto LABEL_6;
    }
LABEL_9:
    unint64_t v9 = 0xD000000000000015;
    goto LABEL_11;
  }
  unint64_t v6 = 0x8000000240BC7C50;
  unint64_t v7 = 0xD000000000000014;
  int v8 = a2;
  if (!(_BYTE)a2) {
    goto LABEL_9;
  }
LABEL_6:
  if (v8 == 1)
  {
    unint64_t v5 = 0x8000000240BC7C50;
    unint64_t v9 = 0xD000000000000014;
  }
  else
  {
    unint64_t v5 = 0xE600000000000000;
    unint64_t v9 = 0x6E6564646968;
  }
LABEL_11:
  unsigned int v10 = a2 >> 8;
  if (v7 == v9 && v6 == v5)
  {
    swift_bridgeObjectRelease_n();
    if (v10 != BYTE1(a1)) {
      return 0;
    }
LABEL_17:
    unint64_t v13 = 0x8000000240BC7C30;
    if (BYTE2(a1))
    {
      if (BYTE2(a1) == 1)
      {
        unint64_t v14 = 0x8000000240BC7C50;
        unint64_t v15 = 0xD000000000000014;
        int v16 = BYTE2(a2);
        if (!BYTE2(a2)) {
          goto LABEL_25;
        }
LABEL_22:
        if (v16 == 1)
        {
          unint64_t v13 = 0x8000000240BC7C50;
        }
        else
        {
          unint64_t v13 = 0xE600000000000000;
          unint64_t v4 = 0x6E6564646968;
        }
        goto LABEL_27;
      }
      unint64_t v14 = 0xE600000000000000;
      unint64_t v15 = 0x6E6564646968;
      int v16 = BYTE2(a2);
      if (BYTE2(a2)) {
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v15 = 0xD000000000000015;
      unint64_t v14 = 0x8000000240BC7C30;
      int v16 = BYTE2(a2);
      if (BYTE2(a2)) {
        goto LABEL_22;
      }
    }
LABEL_25:
    unint64_t v4 = 0xD000000000000015;
LABEL_27:
    unsigned int v17 = HIBYTE(a1);
    unsigned int v18 = HIBYTE(a2);
    if (v15 == v4 && v14 == v13)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_31;
    }
    char v19 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v19)
    {
LABEL_31:
      if (v17 == v18) {
        return 1;
      }
    }
    return 0;
  }
  char v11 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  if ((v11 & 1) != 0 && v10 == BYTE1(a1)) {
    goto LABEL_17;
  }
  return result;
}

uint64_t _s5Heart26PromotionAvailabilityStateO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_240BB7990();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unint64_t sub_240B6136C()
{
  unint64_t result = qword_268CA1910;
  if (!qword_268CA1910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1910);
  }
  return result;
}

unint64_t sub_240B613C0()
{
  unint64_t result = qword_268CA1918;
  if (!qword_268CA1918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1918);
  }
  return result;
}

uint64_t sub_240B61414(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x8000000240BD3F10)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

void *sub_240B6149C(void *a1)
{
  sub_240B61CA0(0, &qword_268CA1948, MEMORY[0x263F8E040]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v7 = &v10[-v6];
  int v8 = sub_240A3466C(a1, a1[3]);
  sub_240B6136C();
  sub_240BB7C30();
  if (!v1)
  {
    sub_240B61D04();
    sub_240BB7A10();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    int v8 = (void *)v10[15];
  }
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  return v8;
}

unint64_t sub_240B61638()
{
  unint64_t result = qword_268CA1920;
  if (!qword_268CA1920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1920);
  }
  return result;
}

ValueMetadata *type metadata accessor for PromotionAvailabilityState()
{
  return &type metadata for PromotionAvailabilityState;
}

ValueMetadata *type metadata accessor for PromotionUserData()
{
  return &type metadata for PromotionUserData;
}

uint64_t sub_240B616B4()
{
  return type metadata accessor for HeartPromotionAvailability();
}

void sub_240B616BC()
{
  sub_240B617E8(319, &qword_26AFD8B30);
  if (v0 <= 0x3F)
  {
    sub_240B617E8(319, &qword_26AFD8B38);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_240B617E8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_240BB62B0();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

ValueMetadata *type metadata accessor for HeartFeaturePromotionResult()
{
  return &type metadata for HeartFeaturePromotionResult;
}

ValueMetadata *type metadata accessor for HeartPromotionResult()
{
  return &type metadata for HeartPromotionResult;
}

unsigned char *storeEnumTagSinglePayload for PromotionUserData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x240B61914);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PromotionUserData.CodingKeys()
{
  return &type metadata for PromotionUserData.CodingKeys;
}

unint64_t sub_240B61950()
{
  unint64_t result = qword_268CA1928;
  if (!qword_268CA1928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1928);
  }
  return result;
}

unint64_t sub_240B619A8()
{
  unint64_t result = qword_268CA1930;
  if (!qword_268CA1930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1930);
  }
  return result;
}

unint64_t sub_240B61A00()
{
  unint64_t result = qword_268CA1938;
  if (!qword_268CA1938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1938);
  }
  return result;
}

uint64_t sub_240B61A54(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_240B61AB4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B61AF4()
{
  return sub_240B60BA8(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_240B61B0C(void **a1)
{
  return sub_240B60D98(a1);
}

uint64_t sub_240B61B34(uint64_t a1, void **a2)
{
  return sub_240B60E38(a1, a2);
}

uint64_t sub_240B61B5C(void **a1)
{
  return sub_240B60D98(a1);
}

uint64_t sub_240B61B84(uint64_t a1, void **a2)
{
  return sub_240B60E38(a1, a2);
}

uint64_t sub_240B61BB4()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B61BEC()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B61C24(uint64_t a1)
{
  return sub_240B5F890(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_240B61C2C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B61C3C()
{
  return sub_240B5FC54();
}

uint64_t sub_240B61C44(uint64_t a1)
{
  return sub_240B5F4B0(a1, *(void *)(v1 + 16));
}

unint64_t sub_240B61C4C()
{
  unint64_t result = qword_268CA1940;
  if (!qword_268CA1940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1940);
  }
  return result;
}

void sub_240B61CA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_240B6136C();
    unint64_t v7 = a3(a1, &type metadata for PromotionUserData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_240B61D04()
{
  unint64_t result = qword_268CA1950;
  if (!qword_268CA1950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1950);
  }
  return result;
}

unsigned char *_s5Heart26PromotionAvailabilityStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240B61E24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeartPromotionType()
{
  return &type metadata for HeartPromotionType;
}

unint64_t sub_240B61E60()
{
  unint64_t result = qword_268CA1958;
  if (!qword_268CA1958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1958);
  }
  return result;
}

id sub_240B61EB8@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_240BB2EE0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 1:
      sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
      unsigned int v17 = (id *)MEMORY[0x263F09BC8];
      goto LABEL_10;
    case 2:
      uint64_t v18 = type metadata accessor for AFibBurdenPDFChartSleepQuery();
      a2[3] = v18;
      a2[4] = (uint64_t)&off_26F50C620;
      char v19 = sub_240A23B08(a2);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v19, v3, v6);
      int v16 = *(void **)(v3 + *(int *)(type metadata accessor for AFibBurdenPDFChartPointProviderFactory() + 20));
      *(uint64_t *)((char *)v19 + *(int *)(v18 + 20)) = (uint64_t)v16;
      goto LABEL_6;
    case 3:
      sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
      uint64_t v20 = MEMORY[0x24560A470]((id)*MEMORY[0x263F09C38]);
      uint64_t v21 = type metadata accessor for AFibBurdenPDFChartAverageQuery();
      a2[3] = v21;
      a2[4] = (uint64_t)&off_26F5053F8;
      id v22 = sub_240A23B08(a2);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v22, v3, v6);
      int v16 = *(void **)(v3 + *(int *)(type metadata accessor for AFibBurdenPDFChartPointProviderFactory() + 20));
      *(uint64_t *)((char *)v22 + *(int *)(v21 + 20)) = (uint64_t)v16;
      *(uint64_t *)((char *)v22 + *(int *)(v21 + 24)) = v20;
      goto LABEL_6;
    case 4:
      sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
      unsigned int v17 = (id *)MEMORY[0x263F09E78];
LABEL_10:
      uint64_t v24 = MEMORY[0x24560A470](*v17);
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v3, v6);
      os_log_type_t v25 = *(void **)(v3 + *(int *)(type metadata accessor for AFibBurdenPDFChartPointProviderFactory() + 20));
      a2[3] = type metadata accessor for AFibBurdenPDFChartDailySumQuery();
      a2[4] = (uint64_t)&off_26F5067E0;
      uint64_t v26 = sub_240A23B08(a2);
      id v27 = v25;
      uint64_t v28 = (uint64_t)v26;
      unint64_t v29 = (void *)v24;
      char v30 = 0;
      goto LABEL_12;
    case 5:
      sub_240A34DC4(0, (unint64_t *)&qword_26AFD9940);
      uint64_t v31 = MEMORY[0x24560A460]((id)*MEMORY[0x263F09388]);
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v3, v6);
      unint64_t v32 = *(void **)(v3 + *(int *)(type metadata accessor for AFibBurdenPDFChartPointProviderFactory() + 20));
      a2[3] = type metadata accessor for AFibBurdenPDFChartDailySumQuery();
      a2[4] = (uint64_t)&off_26F5067E0;
      unint64_t v33 = sub_240A23B08(a2);
      id v27 = v32;
      uint64_t v28 = (uint64_t)v33;
      unint64_t v29 = (void *)v31;
      char v30 = 1;
LABEL_12:
      id result = (id)sub_240AD7AFC(v29, v30, (uint64_t)v9, v27, v28);
      break;
    default:
      sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
      uint64_t v10 = MEMORY[0x24560A470]((id)*MEMORY[0x263F09BF8]);
      char v11 = (int *)type metadata accessor for AFibBurdenPDFChartJulianIndexedSevenDaySampleQuery();
      a2[3] = (uint64_t)v11;
      a2[4] = (uint64_t)&off_26F50C7B0;
      id v12 = sub_240A23B08(a2);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v12, v3, v6);
      uint64_t v13 = type metadata accessor for AFibBurdenPDFChartPointProviderFactory();
      unint64_t v14 = *(void **)(v3 + *(int *)(v13 + 24));
      char v35 = *(void **)(v3 + *(int *)(v13 + 20));
      *(uint64_t *)((char *)v12 + v11[5]) = (uint64_t)v35;
      *(uint64_t *)((char *)v12 + v11[6]) = v10;
      *(uint64_t *)((char *)v12 + v11[7]) = (uint64_t)v14;
      id v15 = v14;
      int v16 = v35;
LABEL_6:
      id result = v16;
      break;
  }
  return result;
}

uint64_t type metadata accessor for AFibBurdenPDFChartPointProviderFactory()
{
  uint64_t result = qword_268CA1960;
  if (!qword_268CA1960) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240B62310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240B62324);
}

uint64_t sub_240B62324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240BB2EE0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_240B623E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240B623F8);
}

uint64_t sub_240B623F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_240BB2EE0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

id sub_240B624B4()
{
  *(void *)&v0[OBJC_IVAR____TtC5Heart50CardioFitnessOnboardingSetupCompleteViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_240BB2980();

  unsigned int v4 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v6 = (void *)sub_240BB6DA0();
  id v7 = objc_msgSend(self, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v6, v5, 0);

  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for CardioFitnessOnboardingSetupCompleteViewController();
  id v8 = objc_msgSendSuper2(&v10, sel_initWithTitle_detailText_icon_contentLayout_, v4, 0, v7, 2);

  return v8;
}

void sub_240B62660()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for CardioFitnessOnboardingSetupCompleteViewController();
  objc_msgSendSuper2(&v5, sel_viewDidLoad);
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v2 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_240BB2980();

  id v3 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();

  id v4 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v4, sel_setHidesBackButton_, 1);
}

uint64_t sub_240B62824(char *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t result = MEMORY[0x24560BA20](&a1[OBJC_IVAR____TtC5Heart50CardioFitnessOnboardingSetupCompleteViewController_delegate]);
  if (result)
  {
    uint64_t v6 = a1;
    a3();

    return sub_240BB50A0();
  }
  return result;
}

id sub_240B62908()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardioFitnessOnboardingSetupCompleteViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CardioFitnessOnboardingSetupCompleteViewController()
{
  return self;
}

uint64_t sub_240B62970(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC5Heart50CardioFitnessOnboardingSetupCompleteViewController_delegate + 8) = a2;
  swift_unknownObjectWeakAssign();

  return sub_240BB50A0();
}

void sub_240B629BC(void *a1, void *a2)
{
  uint64_t ObjectType = swift_getObjectType();
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_240BB5990();
  sub_240A395FC(v5, (uint64_t)qword_26AFDEC70);
  id v6 = a1;
  id v7 = sub_240BB5970();
  os_log_type_t v8 = sub_240BB71A0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = v10;
    *(_DWORD *)uint64_t v9 = 136446722;
    nullsub_1(ObjectType);
    uint64_t v11 = sub_240BB7C80();
    sub_240A38940(v11, v12, &v15);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    sub_240A38940(0xD00000000000002FLL, 0x8000000240BD3330, &v15);
    sub_240BB75F0();
    *(_WORD *)(v9 + 22) = 2082;
    uint64_t v13 = sub_240BB6E10();
    sub_240A38940(v13, v14, &v15);
    sub_240BB75F0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v7, v8, "[%{public}s.%{public}s]: Primary button tapped for stage: %{public}s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v10, -1, -1);
    MEMORY[0x24560B930](v9, -1, -1);
  }
  else
  {
  }
  sub_240B63348(v6, 0, a2);
}

void sub_240B62C1C(void *a1, void *a2)
{
  uint64_t ObjectType = swift_getObjectType();
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_240BB5990();
  sub_240A395FC(v5, (uint64_t)qword_26AFDEC70);
  id v6 = a1;
  id v7 = sub_240BB5970();
  os_log_type_t v8 = sub_240BB71A0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = v10;
    *(_DWORD *)uint64_t v9 = 136446722;
    nullsub_1(ObjectType);
    uint64_t v11 = sub_240BB7C80();
    sub_240A38940(v11, v12, &v15);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    sub_240A38940(0xD00000000000002FLL, 0x8000000240BD3330, &v15);
    sub_240BB75F0();
    *(_WORD *)(v9 + 22) = 2082;
    uint64_t v13 = sub_240BB6E10();
    sub_240A38940(v13, v14, &v15);
    sub_240BB75F0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v7, v8, "[%{public}s.%{public}s]: Primary button tapped for stage: %{public}s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v10, -1, -1);
    MEMORY[0x24560B930](v9, -1, -1);
  }
  else
  {
  }
  sub_240B633D8(v6, 0, a2);
}

uint64_t sub_240B62E80(void *a1, void *a2)
{
  uint64_t ObjectType = swift_getObjectType();
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_240BB5990();
  sub_240A395FC(v5, (uint64_t)qword_26AFDEC70);
  id v6 = a1;
  id v7 = sub_240BB5970();
  os_log_type_t v8 = sub_240BB71A0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v16 = v10;
    *(_DWORD *)uint64_t v9 = 136446722;
    nullsub_1(ObjectType);
    uint64_t v11 = sub_240BB7C80();
    sub_240A38940(v11, v12, &v16);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    sub_240A38940(0xD00000000000002FLL, 0x8000000240BD3330, &v16);
    sub_240BB75F0();
    *(_WORD *)(v9 + 22) = 2082;
    uint64_t v13 = sub_240BB6E10();
    sub_240A38940(v13, v14, &v16);
    sub_240BB75F0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v7, v8, "[%{public}s.%{public}s]: Primary button tapped for stage: %{public}s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v10, -1, -1);
    MEMORY[0x24560B930](v9, -1, -1);
  }
  else
  {
  }
  return sub_240B63468(v6, 0, a2);
}

void sub_240B630E4(void *a1, void *a2)
{
  uint64_t ObjectType = swift_getObjectType();
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_240BB5990();
  sub_240A395FC(v5, (uint64_t)qword_26AFDEC70);
  id v6 = a1;
  id v7 = sub_240BB5970();
  os_log_type_t v8 = sub_240BB71A0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = v10;
    *(_DWORD *)uint64_t v9 = 136446722;
    nullsub_1(ObjectType);
    uint64_t v11 = sub_240BB7C80();
    sub_240A38940(v11, v12, &v15);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    sub_240A38940(0xD00000000000002FLL, 0x8000000240BD3330, &v15);
    sub_240BB75F0();
    *(_WORD *)(v9 + 22) = 2082;
    uint64_t v13 = sub_240BB6E10();
    sub_240A38940(v13, v14, &v15);
    sub_240BB75F0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v7, v8, "[%{public}s.%{public}s]: Primary button tapped for stage: %{public}s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v10, -1, -1);
    MEMORY[0x24560B930](v9, -1, -1);
  }
  else
  {
  }
  sub_240B635C0(v6, 0, a2);
}

void sub_240B63348(void *a1, char a2, void *a3)
{
  uint64_t ObjectType = swift_getObjectType();
  os_log_type_t v8 = a3;
  id v7 = a1;
  sub_240B2D948(v8, 0, v7, (uint64_t)&off_26F503DC8, a2 & 1, ObjectType);
}

void sub_240B633D8(void *a1, char a2, void *a3)
{
  uint64_t ObjectType = swift_getObjectType();
  os_log_type_t v8 = a3;
  id v7 = a1;
  sub_240B2D948(v8, 1, v7, (uint64_t)&off_26F5054C8, a2 & 1, ObjectType);
}

uint64_t sub_240B63468(void *a1, char a2, void *a3)
{
  uint64_t ObjectType = swift_getObjectType();
  char v7 = a2 & 1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  *(unsigned char *)(v8 + 24) = 2;
  *(void *)(v8 + 32) = a1;
  *(void *)(v8 + 40) = &off_26F5064F0;
  *(unsigned char *)(v8 + 48) = v7;
  *(void *)(v8 + 56) = ObjectType;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_240B638F4;
  *(void *)(v9 + 24) = v8;
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a1;
  void v10[4] = &off_26F5064F0;
  void v10[5] = sub_240B63944;
  void v10[6] = v9;
  v10[7] = ObjectType;
  id v11 = a1;
  id v12 = a3;
  id v13 = v11;
  swift_retain();
  swift_retain();
  sub_240BA019C((uint64_t)sub_240B63994, (uint64_t)v10);
  swift_release();
  swift_release();

  return swift_release();
}

void sub_240B635C0(void *a1, char a2, void *a3)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = a3;
  id v7 = a1;
  sub_240B2D948(v8, 3, v7, (uint64_t)&off_26F50A7D0, a2 & 1, ObjectType);
}

void sub_240B63650(void *a1, void *a2)
{
  uint64_t ObjectType = swift_getObjectType();
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_240BB5990();
  sub_240A395FC(v5, (uint64_t)qword_26AFDEC70);
  id v6 = a1;
  id v7 = sub_240BB5970();
  os_log_type_t v8 = sub_240BB71A0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = v10;
    *(_DWORD *)uint64_t v9 = 136446722;
    nullsub_1(ObjectType);
    uint64_t v11 = sub_240BB7C80();
    sub_240A38940(v11, v12, &v15);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    sub_240A38940(0xD000000000000031, 0x8000000240BD4140, &v15);
    sub_240BB75F0();
    *(_WORD *)(v9 + 22) = 2082;
    uint64_t v13 = sub_240BB6E10();
    sub_240A38940(v13, v14, &v15);
    sub_240BB75F0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v7, v8, "[%{public}s.%{public}s]: Secondary button tapped for stage: %{public}s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v10, -1, -1);
    MEMORY[0x24560B930](v9, -1, -1);
  }
  else
  {
  }
  sub_240B635C0(v6, 1, a2);
}

uint64_t sub_240B638B4()
{
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_240B638F4()
{
  return sub_240B2D948(*(char **)(v0 + 16), *(unsigned char *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_240B6390C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B63944(uint64_t a1)
{
  return sub_240B2EC60(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_240B6394C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

void sub_240B63994(uint64_t a1, void *a2)
{
  sub_240B2F5A8(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void (**)(void))(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_240B639A4(char a1)
{
  switch(a1)
  {
    case 1:
      id v4 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenOnboardingGetStartedViewController());
      uint64_t result = (uint64_t)sub_240A7902C();
      break;
    case 2:
      id v5 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenOnboardingHowItWorksViewController());
      uint64_t result = (uint64_t)sub_240B56F20(1);
      break;
    case 3:
      id v6 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenOnboardingResultsViewController());
      uint64_t result = (uint64_t)sub_240B47C4C(1);
      break;
    case 4:
      id v7 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenOnboardingLifeFactorsViewController());
      uint64_t result = (uint64_t)sub_240A995B8(1);
      break;
    case 5:
      id v8 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenOnboardingShouldKnowViewController());
      uint64_t result = sub_240B72D90(1);
      break;
    case 6:
      sub_240A1E37C(v1 + 16, (uint64_t)v11);
      sub_240A1E37C(v1 + 64, (uint64_t)v10);
      id v9 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenOnboardingSetupCompleteViewController());
      uint64_t result = (uint64_t)sub_240BA9F94((uint64_t)v11, v10);
      break;
    default:
      id v2 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenOnboardingStartViewController());
      uint64_t result = sub_240B37A08(1, 0, 0);
      break;
  }
  return result;
}

uint64_t sub_240B63B28()
{
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 16);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 64);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AFibBurdenOnboardingViewControllerFactory()
{
  return self;
}

uint64_t *sub_240B63B8C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_240BB27F0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    sub_240BB4850();
  }
  return a1;
}

uint64_t sub_240B63C64(uint64_t a1)
{
  uint64_t v2 = sub_240BB27F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_240B63CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240BB27F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  sub_240BB4850();
  return a1;
}

uint64_t sub_240B63D60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240BB27F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  sub_240BB4850();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_240B63DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240BB27F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_240B63E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240BB27F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_240B63F08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240B63F1C);
}

uint64_t sub_240B63F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240BB27F0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_240B63FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240B63FF0);
}

uint64_t sub_240B63FF0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_240BB27F0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for AFibBurdenPDFChartPoint()
{
  uint64_t result = qword_268CA1978;
  if (!qword_268CA1978) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240B640F8()
{
  uint64_t result = sub_240BB27F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_240B641A4()
{
  unint64_t result = qword_268C9F050;
  if (!qword_268C9F050)
  {
    sub_240BB27F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F050);
  }
  return result;
}

uint64_t sub_240B641FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_240BB27F0();
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

unsigned char *storeEnumTagSinglePayload for AFibBurdenPDFChartPoint.Tag(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x240B64300);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFChartPoint.Tag()
{
  return &type metadata for AFibBurdenPDFChartPoint.Tag;
}

unint64_t sub_240B6433C()
{
  unint64_t result = qword_268CA1988;
  if (!qword_268CA1988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1988);
  }
  return result;
}

uint64_t sub_240B64390()
{
  uint64_t v1 = v0;
  sub_240B6546C(0, (unint64_t *)&unk_26AFD9960, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  unsigned int v4 = (char *)&v21 - v3;
  sub_240B656A8();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B657AC();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = objc_allocWithZone((Class)type metadata accessor for CMVO2MaxRetrocomputeStatePublisher());
  uint64_t v16 = sub_240A2C1D0(0);
  unsigned int v17 = (void *)sub_240A21D90();

  id v22 = v17;
  *(void *)(swift_allocObject() + 16) = v1;
  sub_240B65744();
  sub_240A33B10((unint64_t *)&qword_26AFD7548, (void (*)(uint64_t))sub_240B65744);
  sub_240BB6330();
  swift_release();
  swift_release();
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9980);
  id v22 = (id)sub_240BB7310();
  uint64_t v18 = sub_240BB72F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v4, 1, 1, v18);
  sub_240A33B10(&qword_268CA19B8, (void (*)(uint64_t))sub_240B656A8);
  sub_240A805DC();
  sub_240BB6400();
  sub_240A9D678((uint64_t)v4);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_240A33B10(&qword_268CA19C0, (void (*)(uint64_t))sub_240B657AC);
  uint64_t v19 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v19;
}

uint64_t sub_240B64754()
{
  uint64_t v1 = *v0;
  sub_240AE895C();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v0[4]) {
    uint64_t v7 = v0[4];
  }
  else {
    uint64_t v7 = sub_240B64390();
  }
  v10[1] = v7;
  *(void *)(swift_allocObject() + 16) = v1;
  sub_240A3B664();
  sub_240B6546C(0, &qword_268CA0550, MEMORY[0x263F44068], MEMORY[0x263F8D488]);
  sub_240A33B10(&qword_26AFD7528, (void (*)(uint64_t))sub_240A3B664);
  swift_retain();
  sub_240BB6330();
  swift_release();
  swift_release();
  sub_240A33B10((unint64_t *)&qword_268CA0570, (void (*)(uint64_t))sub_240AE895C);
  sub_240BB62C0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_240BB4CE0();
  sub_240BB4140();
  swift_release();
  sub_240AE8D78();
  sub_240A33B10(&qword_268CA0580, (void (*)(uint64_t))sub_240AE8D78);
  uint64_t v8 = sub_240BB4170();
  swift_release();
  sub_240A33B10(&qword_268CA0588, (void (*)(uint64_t))sub_240AE8E2C);
  return v8;
}

uint64_t sub_240B64A88@<X0>(unsigned char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_240BB2D40();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 1)
  {
    sub_240B6546C(0, &qword_268CA0B10, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
    sub_240BB44D0();
    uint64_t v9 = swift_allocObject();
    long long v14 = xmmword_240BB97E0;
    *(_OWORD *)(v9 + 16) = xmmword_240BB97E0;
    sub_240AB24FC();
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = v14;
    sub_240B654D0(v15);
    *(void *)(v10 + 56) = &type metadata for CenteredLabelWithSpinnerItem;
    *(void *)(v10 + 64) = sub_240B6560C();
    uint64_t v11 = (_OWORD *)swift_allocObject();
    *(void *)(v10 + 32) = v11;
    long long v12 = v15[3];
    void v11[3] = v15[2];
    v11[4] = v12;
    v11[5] = v15[4];
    long long v13 = v15[1];
    v11[1] = v15[0];
    v11[2] = v13;
    sub_240BB2D30();
    sub_240BB2D00();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    uint64_t result = sub_240BB44C0();
  }
  else
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
  }
  *a2 = v9;
  return result;
}

uint64_t sub_240B64CD4()
{
  return sub_240BB7220();
}

uint64_t sub_240B64D44()
{
  sub_240B6546C(0, &qword_268CA1990, MEMORY[0x263F43EB0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = &v16[-v1];
  uint64_t v3 = sub_240BB4220();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v16[-v8];
  sub_240BB4210();
  uint64_t v10 = (void (*)(unsigned char *, void))sub_240BB41B0();
  *(void *)(v11 + 16) = 0;
  v10(v16, 0);
  uint64_t v12 = sub_240BB41C0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v2, 1, 1, v12);
  sub_240BB4200();
  sub_240BB4DA0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v7, v9, v3);
  uint64_t v13 = sub_240BB4190();
  long long v14 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
  v14(v7, v3);
  v14(v9, v3);
  return v13;
}

void sub_240B64F74(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v3 = *(void **)a1;
  if (*(unsigned char *)(a1 + 8))
  {
    id v4 = v3;
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_240BB5990();
    sub_240A395FC(v5, (uint64_t)qword_26AFDEC70);
    id v6 = v3;
    id v7 = v3;
    uint64_t v8 = sub_240BB5970();
    os_log_type_t v9 = sub_240BB7180();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v32 = v11;
      *(_DWORD *)uint64_t v10 = 136446466;
      uint64_t v12 = sub_240BB7C80();
      sub_240A38940(v12, v13, &v32);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2082;
      id v14 = v3;
      sub_240A39BC8(0, (unint64_t *)&qword_26AFD99E0);
      uint64_t v15 = sub_240BB6E10();
      sub_240A38940(v15, v16, &v32);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      sub_240A2D5FC(v3);
      sub_240A2D5FC(v3);
      _os_log_impl(&dword_240A1B000, v8, v9, "[%{public}s] Failed to get retrocompute state: %{public}s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v11, -1, -1);
      MEMORY[0x24560B930](v10, -1, -1);

      sub_240A2D5FC(v3);
    }
    else
    {
      sub_240A2D5FC(v3);
      sub_240A2D5FC(v3);
    }
    BOOL v29 = 0;
  }
  else
  {
    uint64_t v17 = qword_26AFD9A18;
    id v18 = v3;
    if (v17 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_240BB5990();
    sub_240A395FC(v19, (uint64_t)qword_26AFDEC70);
    id v20 = v18;
    uint64_t v21 = sub_240BB5970();
    os_log_type_t v22 = sub_240BB71A0();
    id v23 = &off_2650DD000;
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v32 = v25;
      *(_DWORD *)uint64_t v24 = 136446466;
      uint64_t v26 = sub_240BB7C80();
      uint64_t v31 = sub_240A38940(v26, v27, &v32);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2048;
      objc_msgSend(v20, sel_status, v31, v32);
      sub_240A2D5FC(v3);
      sub_240BB75F0();
      sub_240A2D5FC(v3);
      _os_log_impl(&dword_240A1B000, v21, v22, "[%{public}s] Received retrocompute status: %ld", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v25, -1, -1);
      uint64_t v28 = v24;
      id v23 = &off_2650DD000;
      MEMORY[0x24560B930](v28, -1, -1);
    }
    else
    {
      sub_240A2D5FC(v3);
      sub_240A2D5FC(v3);
    }

    id v30 = [v20 (SEL)v23[127]];
    sub_240A2D5FC(v3);
    BOOL v29 = v30 == (id)2;
  }
  *a2 = v29;
}

uint64_t sub_240B653CC()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t _s29CardioFitnessSpinnerComponentCMa()
{
  return self;
}

uint64_t sub_240B65430()
{
  return sub_240B64754();
}

uint64_t sub_240B65454()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B65464@<X0>(unsigned char *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_240B64A88(a1, a2);
}

void sub_240B6546C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_240B654D0@<X0>(void *a1@<X8>)
{
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v4 = sub_240BB2980();
  uint64_t v6 = v5;

  if (qword_268C9E630 != -1) {
    swift_once();
  }
  uint64_t v7 = unk_268CA27C0;
  *a1 = qword_268CA27B8;
  a1[1] = v7;
  a1[2] = 0xD000000000000014;
  a1[3] = 0x8000000240BD4290;
  a1[4] = v4;
  a1[5] = v6;
  a1[6] = 0x4020000000000000;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = 0;

  return sub_240BB4850();
}

unint64_t sub_240B6560C()
{
  unint64_t result = qword_268CA19A0;
  if (!qword_268CA19A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA19A0);
  }
  return result;
}

uint64_t sub_240B65660()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 96, 7);
}

void sub_240B656A8()
{
  if (!qword_268CA19A8)
  {
    sub_240B65744();
    sub_240A33B10((unint64_t *)&qword_26AFD7548, (void (*)(uint64_t))sub_240B65744);
    unint64_t v0 = sub_240BB6010();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA19A8);
    }
  }
}

void sub_240B65744()
{
  if (!qword_26AFD7550)
  {
    sub_240A39B48();
    unint64_t v0 = sub_240BB6100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD7550);
    }
  }
}

void sub_240B657AC()
{
  if (!qword_268CA19B0)
  {
    sub_240B656A8();
    sub_240A34DC4(255, (unint64_t *)&qword_26AFD9980);
    sub_240A33B10(&qword_268CA19B8, (void (*)(uint64_t))sub_240B656A8);
    sub_240A805DC();
    unint64_t v0 = sub_240BB60E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA19B0);
    }
  }
}

uint64_t sub_240B65878()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_240B65888(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
}

unsigned char *storeEnumTagSinglePayload for ArticleIdentifiers(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240B6595CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArticleIdentifiers()
{
  return &type metadata for ArticleIdentifiers;
}

uint64_t sub_240B65994()
{
  return sub_240B66974(&qword_268CA19C8, (void (*)(uint64_t))sub_240B659DC);
}

void sub_240B659DC()
{
  if (!qword_268CA19D0)
  {
    unint64_t v0 = sub_240BB6F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA19D0);
    }
  }
}

uint64_t sub_240B65A34(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0x8000000240BC7C30;
  int v3 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v4 = 0xD000000000000014;
    }
    else {
      unint64_t v4 = 0x6E6564646968;
    }
    if (v3 == 1) {
      unint64_t v5 = 0x8000000240BC7C50;
    }
    else {
      unint64_t v5 = 0xE600000000000000;
    }
    int v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1) {
        unint64_t v7 = 0xD000000000000014;
      }
      else {
        unint64_t v7 = 0x6E6564646968;
      }
      if (v6 == 1) {
        unint64_t v2 = 0x8000000240BC7C50;
      }
      else {
        unint64_t v2 = 0xE600000000000000;
      }
      if (v4 != v7) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xD000000000000015;
    unint64_t v5 = 0x8000000240BC7C30;
    int v6 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  if (v4 != 0xD000000000000015)
  {
LABEL_21:
    char v8 = sub_240BB7AE0();
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v2) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_240B65B34(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1701736302;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 1701736302;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x694465746F6D6572;
      unint64_t v3 = 0xED0000656C626173;
      break;
    case 2:
      unint64_t v5 = 0x6970784564656573;
      unint64_t v3 = 0xEA00000000007972;
      break;
    case 3:
      unint64_t v5 = 0x61476E6F69676572;
      unint64_t v3 = 0xEB00000000646574;
      break;
    case 4:
      unint64_t v3 = 0x8000000240BC7C10;
      unint64_t v5 = 0xD000000000000012;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xED0000656C626173;
      if (v5 == 0x694465746F6D6572) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xEA00000000007972;
      if (v5 != 0x6970784564656573) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x61476E6F69676572;
      unint64_t v6 = 0xEB00000000646574;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0x8000000240BC7C10;
      if (v5 != 0xD000000000000012) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_240BB7AE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_240B65D28(char a1, char a2)
{
  unint64_t v3 = 0xD000000000000024;
  unint64_t v4 = 0x8000000240BC7C70;
  switch(a1)
  {
    case 1:
      unint64_t v3 = 0xD000000000000030;
      unint64_t v5 = "com.apple.health.Education.CardioFitnessOverview";
      goto LABEL_6;
    case 2:
      unint64_t v3 = 0xD00000000000002BLL;
      unint64_t v5 = "com.apple.health.Education.LowCardioFitness";
      goto LABEL_6;
    case 3:
      unint64_t v4 = 0x8000000240BC7D10;
      unint64_t v3 = 0xD00000000000001FLL;
      break;
    case 4:
      unint64_t v3 = 0xD000000000000025;
      unint64_t v5 = "com.apple.health.Education.AFibBurden";
LABEL_6:
      unint64_t v4 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xD000000000000024;
  unint64_t v7 = 0x8000000240BC7C70;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xD000000000000030;
      char v8 = "com.apple.health.Education.CardioFitnessOverview";
      goto LABEL_12;
    case 2:
      unint64_t v6 = 0xD00000000000002BLL;
      char v8 = "com.apple.health.Education.LowCardioFitness";
      goto LABEL_12;
    case 3:
      unint64_t v7 = 0x8000000240BC7D10;
      unint64_t v6 = 0xD00000000000001FLL;
      break;
    case 4:
      unint64_t v6 = 0xD000000000000025;
      char v8 = "com.apple.health.Education.AFibBurden";
LABEL_12:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v3 == v6 && v4 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_240BB7AE0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

unint64_t sub_240B65EC8(char a1)
{
  unint64_t result = 0xD000000000000024;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000030;
      break;
    case 2:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 3:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000025;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_240B65F74()
{
  return sub_240BB7C00();
}

uint64_t sub_240B66080()
{
  return sub_240BB7C00();
}

uint64_t sub_240B66124()
{
  return sub_240BB7C00();
}

uint64_t sub_240B66220()
{
  sub_240BB6E50();

  return swift_bridgeObjectRelease();
}

uint64_t sub_240B66300()
{
  return sub_240BB7C00();
}

uint64_t sub_240B663F8()
{
  return sub_240BB7C00();
}

uint64_t sub_240B66500()
{
  return sub_240BB7C00();
}

id sub_240B665A0@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  switch(a2)
  {
    case 1:
      a3[3] = (uint64_t)&type metadata for CardioFitnessOverviewArticleDataProvider;
      a3[4] = sub_240A3E4F4();
      a3[5] = sub_240A3E4A0();
      *a3 = (uint64_t)a1;
      return a1;
    case 2:
      uint64_t v5 = *MEMORY[0x263F09730];
      id v6 = objc_allocWithZone(MEMORY[0x263F0A3D0]);
      id v7 = a1;
      id v8 = objc_msgSend(v6, sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v5, v7, 0);
      uint64_t v16 = sub_240A34DC4(0, (unint64_t *)&qword_26AFD75D0);
      uint64_t v17 = MEMORY[0x263F44B48];
      *(void *)&long long v15 = v8;
      uint64_t v9 = type metadata accessor for LowCardioFitnessArticleDataProvider();
      uint64_t v10 = swift_allocObject();
      uint64_t v11 = v10 + OBJC_IVAR____TtC5Heart35LowCardioFitnessArticleDataProvider____lazy_storage___featureStatus;
      sub_240A35CBC(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
      *(unsigned char *)(v10 + OBJC_IVAR____TtC5Heart35LowCardioFitnessArticleDataProvider____lazy_storage___showBridgeLink) = 2;
      *(void *)(v10 + 16) = v7;
      sub_240A37388(&v15, v10 + 24);
      a3[3] = v9;
      a3[4] = sub_240B66974(&qword_26AFDA058, (void (*)(uint64_t))type metadata accessor for LowCardioFitnessArticleDataProvider);
      id result = (id)sub_240B66974(qword_26AFDA0A0, (void (*)(uint64_t))type metadata accessor for LowCardioFitnessArticleDataProvider);
      a3[5] = (uint64_t)result;
      *a3 = v10;
      return result;
    case 3:
      a3[3] = (uint64_t)&type metadata for AFibBurdenArticleProviderLearnAboutAFib;
      a3[4] = sub_240A3F964();
      id result = (id)sub_240A3F910();
      goto LABEL_9;
    case 4:
      a3[3] = (uint64_t)&type metadata for AFibBurdenArticleProviderLearnAboutAFibBurden;
      a3[4] = sub_240A3F8BC();
      id result = (id)sub_240A3F868();
      goto LABEL_9;
    default:
      a3[3] = (uint64_t)&type metadata for HeartRateArticleDataProvider;
      a3[4] = sub_240A3F524();
      id result = (id)sub_240A3F4D0();
LABEL_9:
      a3[5] = (uint64_t)result;
      return result;
  }
}

id sub_240B66820(char a1)
{
  uint64_t v1 = (void *)qword_2650DCAD0[a1];
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
  id v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_quantityTypeForIdentifier_, *v1);

  return v2;
}

uint64_t sub_240B6688C(char *a1, char *a2)
{
  return sub_240B65D28(*a1, *a2);
}

uint64_t sub_240B66898()
{
  return sub_240B66124();
}

uint64_t sub_240B668A0()
{
  return sub_240B66220();
}

uint64_t sub_240B668A8()
{
  return sub_240B66300();
}

uint64_t sub_240B668B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_240B66C9C();
  *a1 = result;
  return result;
}

unint64_t sub_240B668E0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_240B65EC8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_240B6690C(void *a1@<X8>)
{
  *a1 = &unk_26F503718;
}

unint64_t sub_240B66920()
{
  unint64_t result = qword_268CA19D8;
  if (!qword_268CA19D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA19D8);
  }
  return result;
}

uint64_t sub_240B66974(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_240B669BC@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_240BB5990();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB4850();
  char v10 = sub_240B66C9C();
  if (v10 == 5)
  {
    sub_240BB3BF0();
    swift_bridgeObjectRetain_n();
    uint64_t v11 = sub_240BB5970();
    os_log_type_t v12 = sub_240BB7180();
    int v13 = v12;
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v14 = swift_slowAlloc();
      int v25 = v13;
      uint64_t v15 = v14;
      uint64_t v26 = (void *)swift_slowAlloc();
      uint64_t v28 = v26;
      *(_DWORD *)uint64_t v15 = 136446466;
      os_log_t v24 = v11;
      uint64_t v16 = sub_240BB6E10();
      uint64_t v27 = sub_240A38940(v16, v17, (uint64_t *)&v28);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2082;
      sub_240BB4850();
      uint64_t v27 = sub_240A38940(a1, a2, (uint64_t *)&v28);
      sub_240BB75F0();
      swift_bridgeObjectRelease_n();
      os_log_t v18 = v24;
      _os_log_impl(&dword_240A1B000, v24, (os_log_type_t)v25, "[%{public}s] Article identifier %{public}s could not be found", (uint8_t *)v15, 0x16u);
      uint64_t v19 = v26;
      swift_arrayDestroy();
      MEMORY[0x24560B930](v19, -1, -1);
      MEMORY[0x24560B930](v15, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    double result = 0.0;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
  else
  {
    char v20 = v10;
    uint64_t v26 = (void *)sub_240BB42C0();
    sub_240B665A0(v26, v20, (uint64_t *)a3);
    uint64_t v21 = v26;
  }
  return result;
}

uint64_t sub_240B66C9C()
{
  unint64_t v0 = sub_240BB7990();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

ValueMetadata *type metadata accessor for EducationArticleTileDataController()
{
  return &type metadata for EducationArticleTileDataController;
}

uint64_t type metadata accessor for AFibFeaturesPromotionTileActionHandler()
{
  uint64_t result = qword_268CA19E8;
  if (!qword_268CA19E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240B66D44()
{
  return swift_initClassMetadata2();
}

void sub_240B66D90()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v1 = sub_240BB4EC0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  unint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3FB28();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFD7158 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_240A395FC(v6, (uint64_t)qword_26AFDEB68);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  *(void *)(swift_allocObject() + 16) = ObjectType;
  v15[1] = 0;
  sub_240BB5700();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  id v11 = objc_allocWithZone((Class)type metadata accessor for AFibFeaturesOnboardingViewController());
  os_log_type_t v12 = (char *)sub_240BAA860();
  *(void *)&v12[qword_268CA24B8 + 8] = &off_26F50AA28;
  swift_unknownObjectWeakAssign();
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v12);
  sub_240BB5250();
  uint64_t v14 = (void *)sub_240BB4EA0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v14, sel_presentViewController_animated_completion_, v13, 1, 0);
}

uint64_t sub_240B67050()
{
  return 0;
}

void sub_240B67114(char a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  sub_240A3FB28();
  uint64_t v5 = v4;
  uint64_t v48 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v47 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for AFibBurdenOnboardingPresentationContext();
  MEMORY[0x270FA5388](v49);
  uint64_t v50 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_240BB4EC0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  os_log_type_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v45 - v14;
  MEMORY[0x270FA5388](v13);
  unint64_t v17 = (char *)&v45 - v16;
  sub_240BB5250();
  os_log_t v18 = (void (**)(char *, uint64_t))(v9 + 8);
  if ((a1 & 1) == 0)
  {
    sub_240BB4E90();
    uint64_t v19 = v8;
    char v20 = *v18;
    uint64_t v48 = (unint64_t)v18 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v20(v17, v19);
    sub_240A3466C(aBlock, (uint64_t)v55);
    uint64_t v21 = (void *)sub_240BB4E10();
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)aBlock);
    sub_240BB5250();
    os_log_type_t v22 = (void *)sub_240BB4EA0();
    v20(v17, v19);
    sub_240BB7240();

    sub_240BB5250();
    sub_240BB4E90();
    v20(v15, v19);
    sub_240A3466C(v53, v53[3]);
    sub_240BB4E30();
    sub_240BB5250();
    sub_240BB4E90();
    uint64_t v23 = v12;
    os_log_t v24 = v20;
    uint64_t v8 = v19;
    v24(v23, v19);
    sub_240A3466C(v51, v51[3]);
    uint64_t v25 = (uint64_t)v50;
    sub_240BB4E20();
    swift_storeEnumTagMultiPayload();
    id v26 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenOnboardingController());
    uint64_t v27 = sub_240B4A0D8(v21, (uint64_t)aBlock, (uint64_t)v52, v25, 1, 1);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v51);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v53);
LABEL_3:
    sub_240BB5250();
    uint64_t v28 = (void *)sub_240BB4EA0();
    v24(v17, v8);
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v2;
    *(void *)(v29 + 24) = v27;
    uint64_t v56 = sub_240B68B34;
    uint64_t v57 = v29;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_240A87354;
    uint64_t v55 = &unk_26F50AB50;
    id v30 = _Block_copy(aBlock);
    uint64_t v31 = v2;
    uint64_t v32 = v27;
    swift_release();
    objc_msgSend(v28, sel_dismissViewControllerAnimated_completion_, 1, v30);

    _Block_release(v30);
    return;
  }
  sub_240BB4E90();
  os_log_t v24 = *v18;
  (*v18)(v17, v8);
  sub_240A3466C(aBlock, (uint64_t)v55);
  unint64_t v33 = (void *)sub_240BB4E10();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)aBlock);
  if (qword_268C9E770 != -1) {
    swift_once();
  }
  id v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F476A8]), sel_initWithOnboardingType_isFirstTimeOnboarding_healthStore_dateCache_provenance_delegate_, 0, 1, v33, qword_268CA2BA8, 3, v2);

  uint64_t v35 = qword_268CA19E0;
  uint64_t v36 = *(void **)&v2[qword_268CA19E0];
  *(void *)&v2[qword_268CA19E0] = v34;

  unint64_t v37 = *(void **)&v2[v35];
  if (v37)
  {
    sub_240A576E0();
    id v38 = v37;
    unint64_t v39 = (void *)sub_240BB74D0();
    objc_msgSend(v38, sel_setHasAtrialFibrillationDiagnosis_, v39);

    unint64_t v40 = *(void **)&v2[v35];
    if (v40)
    {
      os_log_type_t v41 = (char *)objc_msgSend(v40, sel_onboardingNavigationController);
      if (v41)
      {
        uint64_t v27 = v41;
        goto LABEL_3;
      }
    }
  }
  if (qword_26AFD7158 != -1) {
    swift_once();
  }
  uint64_t v42 = sub_240A395FC(v5, (uint64_t)qword_26AFDEB68);
  uint64_t v43 = v48;
  uint64_t v44 = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v47, v42, v5);
  *(void *)(swift_allocObject() + 16) = ObjectType;
  aBlock[0] = 0;
  sub_240BB5730();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v5);
}

uint64_t sub_240B677B8()
{
  return 0;
}

void sub_240B67884(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_240BB4EC0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB5250();
  uint64_t v7 = (void *)sub_240BB4EA0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  objc_msgSend(v7, sel_presentViewController_animated_completion_, a2, 1, 0);
}

void sub_240B67980()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v1 = sub_240BB4EC0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v22[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v22[-1] - v6;
  sub_240A3FB28();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  os_log_type_t v12 = (char *)&v22[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFD7158 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_240A395FC(v9, (uint64_t)qword_26AFDEB68);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  *(void *)(swift_allocObject() + 16) = ObjectType;
  v22[0] = 0;
  sub_240BB5700();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_240BB5250();
  sub_240BB4E90();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v2 + 8);
  v14(v7, v1);
  sub_240A3466C(v22, v22[3]);
  uint64_t v15 = (void *)sub_240BB4E10();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v22);
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  sub_240BB2980();
  sub_240A8C17C();
  id v16 = objc_allocWithZone((Class)sub_240BB3510());
  unint64_t v17 = (void *)sub_240BB3500();

  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v17);
  sub_240BB5250();
  uint64_t v19 = (void *)sub_240BB4EA0();
  v14(v5, v1);
  id v20 = objc_msgSend(v19, sel_presentedViewController);

  if (v20)
  {
    objc_msgSend(v20, sel_presentViewController_animated_completion_, v18, 1, 0);
  }
}

uint64_t sub_240B67D68()
{
  return 0;
}

void sub_240B67E34()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v1 = sub_240BB4EC0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3FB28();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFD7158 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_240A395FC(v6, (uint64_t)qword_26AFDEB68);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  *(void *)(swift_allocObject() + 16) = ObjectType;
  v12[1] = 0;
  sub_240BB5700();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_240BB5250();
  uint64_t v11 = (void *)sub_240BB4EA0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v11, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

uint64_t sub_240B6808C()
{
  return 0;
}

void sub_240B68158()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_240BB4EC0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3FB28();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFD7158 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_240A395FC(v8, (uint64_t)qword_26AFDEB68);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  *(void *)(swift_allocObject() + 16) = ObjectType;
  v20[1] = 0;
  sub_240BB5700();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v13 = *(void **)(v1 + qword_268CA19E0);
  *(void *)(v1 + qword_268CA19E0) = 0;

  sub_240BB5250();
  uint64_t v14 = (void *)sub_240BB4EA0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  id v15 = objc_msgSend(v14, sel_tabBarController);

  if (v15)
  {
    id v16 = objc_msgSend(self, sel_atrialFibrillationEventType);
    if (v16)
    {
      id v17 = v16;
      type metadata accessor for AFibFeaturesPromotionTileActionHandler();
      sub_240B68A64(&qword_268CA0D80, (void (*)(uint64_t))type metadata accessor for AFibFeaturesPromotionTileActionHandler);
      id v18 = (void *)sub_240BB51D0();
      if (v18)
      {
        uint64_t v19 = v18;
        sub_240AA7788(v18, 0);

        id v15 = v17;
        id v17 = v19;
      }

      id v15 = v17;
    }
  }
}

uint64_t sub_240B68474()
{
  return 0;
}

void sub_240B68540(void *a1)
{
  id v1 = a1;
  sub_240B68158();
}

void sub_240B68588()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  sub_240A3FB28();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFD7158 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_240A395FC(v4, (uint64_t)qword_26AFDEB68);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  *(void *)(swift_allocObject() + 16) = ObjectType;
  v10[1] = 0;
  sub_240BB5700();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v9 = *(void **)(v1 + qword_268CA19E0);
  *(void *)(v1 + qword_268CA19E0) = 0;
}

uint64_t sub_240B68720()
{
  return 0;
}

void sub_240B687EC(void *a1)
{
  id v1 = a1;
  sub_240B68588();
}

uint64_t sub_240B68834(uint64_t a1)
{
  uint64_t v3 = sub_240BB4EC0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (char *)objc_allocWithZone(v1);
  *(void *)&v7[qword_268CA19E0] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t v8 = sub_240BB5260();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v8;
}

void sub_240B68940()
{
}

id sub_240B68950()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibFeaturesPromotionTileActionHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_240B68988(uint64_t a1)
{
}

uint64_t sub_240B68998()
{
  return type metadata accessor for AFibFeaturesPromotionTileActionHandler();
}

uint64_t sub_240B689A0()
{
  return sub_240B68A64(&qword_26AFD7A28, MEMORY[0x263F43E20]);
}

uint64_t sub_240B689E8()
{
  return sub_240B68A64(&qword_268CA1A00, (void (*)(uint64_t))type metadata accessor for AFibFeaturesPromotionTileActionHandler);
}

uint64_t sub_240B68A34()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B68A44()
{
  return sub_240B68720();
}

uint64_t sub_240B68A4C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B68A5C()
{
  return sub_240B68474();
}

uint64_t sub_240B68A64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240B68AAC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B68ABC()
{
  return sub_240B6808C();
}

uint64_t sub_240B68AC4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B68AD4()
{
  return sub_240B67D68();
}

uint64_t sub_240B68ADC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B68AEC()
{
  return sub_240B677B8();
}

uint64_t sub_240B68AF4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_240B68B34()
{
  sub_240B67884(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_240B68B3C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B68B4C()
{
  return sub_240B67050();
}

uint64_t sub_240B68B54()
{
  uint64_t v0 = sub_240BB2EE0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB2EA0();
  id v4 = objc_allocWithZone(MEMORY[0x263F466D0]);
  uint64_t v5 = (void *)sub_240BB2E30();
  id v6 = objc_msgSend(v4, sel_initWithCalendar_, v5);

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_268CA2BA8 = (uint64_t)v6;
  return result;
}

uint64_t sub_240B68C58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240BB5990();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v47 = v4;
  uint64_t v48 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v46 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v46 - v12;
  swift_getObjectType();
  uint64_t v14 = swift_conformsToProtocol2();
  if (v14) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  if (v14) {
    uint64_t v16 = a1;
  }
  else {
    uint64_t v16 = 0;
  }
  if (v16)
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    id v17 = (void *)sub_240BB2FC0();
    if (v17)
    {
      id v18 = v17;
      id v19 = objc_msgSend(v17, sel_profileIdentifier);
      id v20 = objc_msgSend(v19, sel_type);

      if (v20 != (id)1)
      {
        sub_240BB5800();
        swift_unknownObjectRetain_n();
        uint64_t v21 = sub_240BB5970();
        os_log_type_t v22 = sub_240BB71A0();
        if (os_log_type_enabled(v21, v22))
        {
          uint64_t v23 = swift_slowAlloc();
          uint64_t v46 = swift_slowAlloc();
          uint64_t v51 = v46;
          *(_DWORD *)uint64_t v23 = 136446466;
          uint64_t v24 = sub_240BB7C80();
          uint64_t v49 = sub_240A38940(v24, v25, &v51);
          sub_240BB75F0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v23 + 12) = 2080;
          uint64_t v49 = v16;
          uint64_t v50 = v15;
          sub_240A3FD54(0, &qword_268CA1A10);
          swift_unknownObjectRetain();
          uint64_t v26 = sub_240BB6E10();
          uint64_t v49 = sub_240A38940(v26, v27, &v51);
          sub_240BB75F0();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_240A1B000, v21, v22, "[%{public}s] Heart plugin only supports primary profile, ignoring context: %s", (uint8_t *)v23, 0x16u);
          uint64_t v28 = v46;
          swift_arrayDestroy();
          MEMORY[0x24560B930](v28, -1, -1);
          MEMORY[0x24560B930](v23, -1, -1);
        }
        else
        {

          swift_unknownObjectRelease_n();
        }
        (*(void (**)(char *, uint64_t))(v48 + 8))(v13, v47);
      }
      sub_240BB50A0();
    }
    else
    {
      sub_240BB5800();
      swift_unknownObjectRetain_n();
      unint64_t v37 = sub_240BB5970();
      os_log_type_t v38 = sub_240BB71A0();
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v39 = swift_slowAlloc();
        uint64_t v40 = swift_slowAlloc();
        uint64_t v51 = v40;
        *(_DWORD *)uint64_t v39 = 136446466;
        uint64_t v41 = sub_240BB7C80();
        uint64_t v49 = sub_240A38940(v41, v42, &v51);
        sub_240BB75F0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v39 + 12) = 2080;
        uint64_t v49 = v16;
        uint64_t v50 = v15;
        sub_240A3FD54(0, &qword_268CA1A10);
        swift_unknownObjectRetain();
        uint64_t v43 = sub_240BB6E10();
        uint64_t v49 = sub_240A38940(v43, v44, &v51);
        sub_240BB75F0();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240A1B000, v37, v38, "[%{public}s] Heart plugin cannot perform work without a health store, ignoring context: %s", (uint8_t *)v39, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24560B930](v40, -1, -1);
        MEMORY[0x24560B930](v39, -1, -1);
      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v47);
      sub_240BB50A0();
    }
  }
  else
  {
    sub_240BB5800();
    swift_unknownObjectRetain_n();
    uint64_t v29 = sub_240BB5970();
    os_log_type_t v30 = sub_240BB71A0();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v51 = v32;
      *(_DWORD *)uint64_t v31 = 136446466;
      uint64_t v33 = sub_240BB7C80();
      uint64_t v49 = sub_240A38940(v33, v34, &v51);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2080;
      uint64_t v49 = a1;
      uint64_t v50 = a2;
      sub_240A3FD54(0, &qword_268CA1A08);
      swift_unknownObjectRetain();
      uint64_t v35 = sub_240BB6E10();
      uint64_t v49 = sub_240A38940(v35, v36, &v51);
      sub_240BB75F0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v29, v30, "[%{public}s] Heart plugin cannot perform work without a HealthPlatformOrchestrationContext, ignoring context: %s", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v32, -1, -1);
      MEMORY[0x24560B930](v31, -1, -1);
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v48 + 8))(v8, v47);
  }
  return MEMORY[0x263F8EE78];
}

uint64_t sub_240B69380(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x263F8EE78];
}

uint64_t sub_240B693AC(uint64_t a1)
{
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = 0;
  }
  if (v2)
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    uint64_t v3 = (void *)sub_240BB2FC0();
    sub_240BB50A0();
    if (v3) {
  }
    }
  return MEMORY[0x263F8EE78];
}

uint64_t sub_240B6943C@<X0>(_WORD *a1@<X8>)
{
  return sub_240B69478(a1);
}

uint64_t sub_240B69450(uint64_t a1, void **a2)
{
  return sub_240B69508(a1, a2);
}

uint64_t sub_240B69464@<X0>(_WORD *a1@<X8>)
{
  return sub_240B69478(a1);
}

uint64_t sub_240B69478@<X0>(_WORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_240BB6290();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_240B694F4(uint64_t a1, void **a2)
{
  return sub_240B69508(a1, a2);
}

uint64_t sub_240B69508(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return sub_240BB62A0();
}

unint64_t sub_240B69574()
{
  unint64_t result = qword_26AFD83B8;
  if (!qword_26AFD83B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD83B8);
  }
  return result;
}

uint64_t sub_240B695C8()
{
  sub_240A373A0();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v5 = sub_240BB3390();
  }
  else {
    uint64_t v5 = sub_240BB33F0();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_240B696C4@<X0>(_WORD *a1@<X8>)
{
  return sub_240B69478(a1);
}

uint64_t sub_240B696EC(uint64_t a1, void **a2)
{
  return sub_240B69508(a1, a2);
}

uint64_t sub_240B69714@<X0>(_WORD *a1@<X8>)
{
  return sub_240B69478(a1);
}

uint64_t sub_240B6973C(uint64_t a1, void **a2)
{
  return sub_240B69508(a1, a2);
}

unint64_t sub_240B69764()
{
  unint64_t result = qword_26AFD8FC0;
  if (!qword_26AFD8FC0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD8FC0);
  }
  return result;
}

uint64_t sub_240B69878(void *a1)
{
  unint64_t v3 = 0xD000000000000010;
  id v4 = objc_msgSend(a1, sel_healthDataSource);
  if (!v4)
  {
    uint64_t result = sub_240BB78D0();
    __break(1u);
    return result;
  }
  uint64_t v5 = v4;
  unint64_t v6 = sub_240AB7F9C(MEMORY[0x263F8EE78]);
  if (!*(unsigned char *)(v1 + 16))
  {
    uint64_t v8 = "Data Type Viewed";
LABEL_7:
    unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
    goto LABEL_8;
  }
  if (*(unsigned char *)(v1 + 16) != 1)
  {
    unint64_t v3 = 0xD00000000000001ALL;
    uint64_t v8 = "PDF Shared from PDF Viewer";
    goto LABEL_7;
  }
  unint64_t v7 = 0xEA00000000006465;
  unint64_t v3 = 0x7765695620464450;
LABEL_8:
  unint64_t v9 = MEMORY[0x263F8D310];
  unint64_t v34 = MEMORY[0x263F8D310];
  *(void *)&long long v33 = v3;
  *((void *)&v33 + 1) = v7;
  sub_240A7B714(&v33, v32);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_240B6A138(v32, 1701869940, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
  unint64_t v35 = v6;
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_240BB6DE0();
  uint64_t v13 = v12;
  if (qword_26AFD7BF0 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_240BB5990();
  uint64_t v15 = sub_240A395FC(v14, (uint64_t)qword_26AFDEB80);
  uint64_t v16 = sub_240B6A7E0(v5);
  unint64_t v34 = v9;
  *(void *)&long long v33 = v16;
  *((void *)&v33 + 1) = v17;
  sub_240A7B714(&v33, v32);
  unint64_t v18 = v35;
  char v19 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v35 = 0x8000000000000000;
  sub_240B6A138(v32, v11, v13, v19);
  unint64_t v35 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_240BB6DE0();
  uint64_t v22 = v21;
  id v23 = objc_msgSend(a1, sel_environmentDataSource);
  id v24 = sub_240B6B0D4(v5, v23);

  unint64_t v34 = sub_240A576E0();
  *(void *)&long long v33 = v24;
  sub_240A7B714(&v33, v32);
  unint64_t v25 = v35;
  char v26 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v35 = 0x8000000000000000;
  sub_240B6A138(v32, v20, v22, v26);
  unint64_t v35 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v27 = sub_240B15BF0(v5, (void *)*MEMORY[0x263F09728], 1, v15);
  if (v28)
  {
    unint64_t v34 = v9;
    *(void *)&long long v33 = v27;
    *((void *)&v33 + 1) = v28;
    sub_240A7B714(&v33, v32);
    unint64_t v29 = v35;
    char v30 = swift_isUniquelyReferenced_nonNull_native();
    sub_240B6A138(v32, 0x5665727574616566, 0xEE006E6F69737265, v30);
    sub_240BB50A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_240B69E5C(0x5665727574616566, 0xEE006E6F69737265, &v33);
    sub_240A7B53C((uint64_t)&v33);
    sub_240BB50A0();
    return v35;
  }
  return v29;
}

uint64_t sub_240B69CCC()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AFibBurdenDataTypeInteractionAnalyticsEvent()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for AFibBurdenDataTypeInteractionAnalyticsEvent.Interaction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240B69DCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenDataTypeInteractionAnalyticsEvent.Interaction()
{
  return &type metadata for AFibBurdenDataTypeInteractionAnalyticsEvent.Interaction;
}

unint64_t sub_240B69E08()
{
  unint64_t result = qword_268CA1A18;
  if (!qword_268CA1A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1A18);
  }
  return result;
}

double sub_240B69E5C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  unsigned int v4 = v3;
  sub_240BB4850();
  unint64_t v8 = sub_240AB9E08(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_240B086B8();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_240A7B714((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_240B69F60(v8, v11);
    uint64_t *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

unint64_t sub_240B69F60(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_240BB7680();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_240BB7BC0();
        sub_240BB4850();
        sub_240BB6E50();
        uint64_t v10 = sub_240BB7C00();
        double result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          uint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *uint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *unint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_OWORD *sub_240B6A138(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_240AB9E08(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_240B086B8();
      goto LABEL_7;
    }
    sub_240B07CEC(v15, a4 & 1);
    unint64_t v21 = sub_240AB9E08(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    double result = (_OWORD *)sub_240BB7B30();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v19);
    return sub_240A7B714(a1, v19);
  }
LABEL_13:
  sub_240B6A28C(v12, a2, a3, a1, v18);

  return (_OWORD *)sub_240BB4850();
}

_OWORD *sub_240B6A28C(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v6 = (void *)(a5[6] + 16 * a1);
  *unint64_t v6 = a2;
  v6[1] = a3;
  double result = sub_240A7B714(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_240B6A2F8(void *a1, uint64_t a2)
{
  return sub_240B6A490(a1, a2, (void (*)(void))type metadata accessor for AFibBurdenOnboardingErrorAnalyticsEvent, &qword_268CA1A28, (void (*)(uint64_t))type metadata accessor for AFibBurdenOnboardingErrorAnalyticsEvent);
}

id sub_240B6A380(void *a1, void *a2, uint64_t a3)
{
  return sub_240B6AB24(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for AFibBurdenOnboardingErrorAnalyticsEvent, &qword_268CA1A28, (void (*)(uint64_t))type metadata accessor for AFibBurdenOnboardingErrorAnalyticsEvent);
}

uint64_t sub_240B6A408(void *a1, uint64_t a2)
{
  return sub_240B6A490(a1, a2, (void (*)(void))type metadata accessor for AFibBurdenOnboardingStepAnalyticsEvent, &qword_268CA1A20, (void (*)(uint64_t))type metadata accessor for AFibBurdenOnboardingStepAnalyticsEvent);
}

uint64_t sub_240B6A490(void *a1, uint64_t a2, void (*a3)(void), unint64_t *a4, void (*a5)(uint64_t))
{
  v27[1] = *(id *)MEMORY[0x263EF8340];
  v27[0] = 0;
  id v8 = objc_msgSend(a1, sel_biologicalSexWithError_, v27);
  if (v8)
  {
    BOOL v9 = v8;
    id v10 = v27[0];
    id v11 = (id)HKAnalyticsPropertyValueForBiologicalSex();
    uint64_t v12 = sub_240BB6DE0();
  }
  else
  {
    id v13 = v27[0];
    BOOL v14 = (void *)sub_240BB2A50();

    swift_willThrow();
    id v15 = v14;
    id v16 = v14;
    uint64_t v17 = sub_240BB5970();
    os_log_type_t v18 = sub_240BB7180();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v20 = (void *)swift_slowAlloc();
      v27[0] = v20;
      *(_DWORD *)uint64_t v19 = 136446466;
      a3(0);
      sub_240B6B5D8(0, a4, 255, a5);
      uint64_t v21 = sub_240BB6E10();
      sub_240A38940(v21, v22, (uint64_t *)v27);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2082;
      id v23 = v14;
      sub_240A49AC0();
      uint64_t v24 = sub_240BB6E10();
      sub_240A38940(v24, v25, (uint64_t *)v27);
      sub_240BB75F0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_240A1B000, v17, v18, "[%{public}s] Error when retrieving biological sex: %{public}s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v20, -1, -1);
      MEMORY[0x24560B930](v19, -1, -1);
    }
    else
    {
    }
    uint64_t v12 = sub_240BB6DE0();
  }
  return v12;
}

uint64_t sub_240B6A758(void *a1, uint64_t a2)
{
  return sub_240B6A490(a1, a2, (void (*)(void))type metadata accessor for AFibBurdenNotificationInteractionAnalyticsEvent, &qword_268CA0CF0, (void (*)(uint64_t))type metadata accessor for AFibBurdenNotificationInteractionAnalyticsEvent);
}

uint64_t sub_240B6A7E0(void *a1)
{
  v21[1] = *(id *)MEMORY[0x263EF8340];
  v21[0] = 0;
  id v1 = objc_msgSend(a1, sel_biologicalSexWithError_, v21);
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = v21[0];
    id v4 = (id)HKAnalyticsPropertyValueForBiologicalSex();
    uint64_t v5 = sub_240BB6DE0();
  }
  else
  {
    id v6 = v21[0];
    uint64_t v7 = (void *)sub_240BB2A50();

    swift_willThrow();
    id v8 = v7;
    id v9 = v7;
    id v10 = sub_240BB5970();
    os_log_type_t v11 = sub_240BB7180();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      id v13 = (void *)swift_slowAlloc();
      v21[0] = v13;
      *(_DWORD *)uint64_t v12 = 136446466;
      type metadata accessor for AFibBurdenDataTypeInteractionAnalyticsEvent();
      sub_240B6B5D8(0, &qword_268CA0CE8, v14, (void (*)(uint64_t))type metadata accessor for AFibBurdenDataTypeInteractionAnalyticsEvent);
      uint64_t v15 = sub_240BB6E10();
      sub_240A38940(v15, v16, (uint64_t *)v21);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2082;
      id v17 = v7;
      sub_240A49AC0();
      uint64_t v18 = sub_240BB6E10();
      sub_240A38940(v18, v19, (uint64_t *)v21);
      sub_240BB75F0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_240A1B000, v10, v11, "[%{public}s] Error when retrieving biological sex: %{public}s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v13, -1, -1);
      MEMORY[0x24560B930](v12, -1, -1);
    }
    else
    {
    }
    uint64_t v5 = sub_240BB6DE0();
  }
  return v5;
}

id sub_240B6AA9C(void *a1, void *a2, uint64_t a3)
{
  return sub_240B6AB24(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for AFibBurdenOnboardingStepAnalyticsEvent, &qword_268CA1A20, (void (*)(uint64_t))type metadata accessor for AFibBurdenOnboardingStepAnalyticsEvent);
}

id sub_240B6AB24(void *a1, void *a2, uint64_t a3, uint64_t (*a4)(void), unint64_t *a5, void (*a6)(uint64_t))
{
  v46[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v11 = sub_240BB2CF0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = objc_msgSend(a2, sel_currentDate);
  sub_240BB2CB0();

  unint64_t v16 = (void *)sub_240BB2C90();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v46[0] = 0;
  id v17 = objc_msgSend(a1, sel_ageWithCurrentDate_error_, v16, v46);

  id v18 = v46[0];
  if (v17)
  {
    uint64_t v19 = *MEMORY[0x263F0AC28];
    id v20 = objc_allocWithZone(NSNumber);
    id v21 = v17;
    id v22 = objc_msgSend(v20, sel_initWithInteger_, v19);
    id v23 = (id)HKAnalyticsDecadeBucketedAgeForAgeWithMinimumAge();

    if (v23)
    {

      return v23;
    }
    os_log_type_t v38 = sub_240BB5970();
    os_log_type_t v39 = sub_240BB7180();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v41 = (void *)swift_slowAlloc();
      v46[0] = v41;
      *(_DWORD *)uint64_t v40 = 136446210;
      uint64_t v45 = a4(0);
      sub_240B6B5D8(0, a5, 255, a6);
      uint64_t v42 = sub_240BB6E10();
      uint64_t v45 = sub_240A38940(v42, v43, (uint64_t *)v46);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v38, v39, "[%{public}s] Error when bucketing retrieved age", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v41, -1, -1);
      MEMORY[0x24560B930](v40, -1, -1);
    }

    id v44 = (id)*MEMORY[0x263F091B0];
  }
  else
  {
    unint64_t v25 = v18;
    char v26 = (void *)sub_240BB2A50();

    swift_willThrow();
    id v27 = v26;
    id v28 = v26;
    unint64_t v29 = sub_240BB5970();
    os_log_type_t v30 = sub_240BB7180();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v32 = (void *)swift_slowAlloc();
      v46[0] = v32;
      *(_DWORD *)uint64_t v31 = 136446466;
      uint64_t v45 = a4(0);
      sub_240B6B5D8(0, a5, 255, a6);
      uint64_t v33 = sub_240BB6E10();
      uint64_t v45 = sub_240A38940(v33, v34, (uint64_t *)v46);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2082;
      uint64_t v45 = (uint64_t)v26;
      id v35 = v26;
      sub_240A49AC0();
      uint64_t v36 = sub_240BB6E10();
      uint64_t v45 = sub_240A38940(v36, v37, (uint64_t *)v46);
      sub_240BB75F0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_240A1B000, v29, v30, "[%{public}s] Error when retrieving bucketed age: %{public}s", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v32, -1, -1);
      MEMORY[0x24560B930](v31, -1, -1);
    }
    else
    {
    }
    id v44 = (id)*MEMORY[0x263F091B0];
  }
  return v44;
}

id sub_240B6B04C(void *a1, void *a2, uint64_t a3)
{
  return sub_240B6AB24(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for AFibBurdenNotificationInteractionAnalyticsEvent, &qword_268CA0CF0, (void (*)(uint64_t))type metadata accessor for AFibBurdenNotificationInteractionAnalyticsEvent);
}

id sub_240B6B0D4(void *a1, void *a2)
{
  v40[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = sub_240BB2CF0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(a2, sel_currentDate);
  sub_240BB2CB0();

  id v9 = (void *)sub_240BB2C90();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v40[0] = 0;
  id v10 = objc_msgSend(a1, sel_ageWithCurrentDate_error_, v9, v40);

  id v11 = v40[0];
  if (v10)
  {
    uint64_t v12 = *MEMORY[0x263F0AC28];
    id v13 = objc_allocWithZone(NSNumber);
    id v14 = v10;
    id v15 = objc_msgSend(v13, sel_initWithInteger_, v12);
    id v16 = (id)HKAnalyticsDecadeBucketedAgeForAgeWithMinimumAge();

    if (!v16)
    {
      id v17 = sub_240BB5970();
      os_log_type_t v18 = sub_240BB7180();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = (uint8_t *)swift_slowAlloc();
        id v20 = (void *)swift_slowAlloc();
        v40[0] = v20;
        *(_DWORD *)uint64_t v19 = 136446210;
        uint64_t v39 = type metadata accessor for AFibBurdenDataTypeInteractionAnalyticsEvent();
        sub_240B6B5D8(0, &qword_268CA0CE8, v21, (void (*)(uint64_t))type metadata accessor for AFibBurdenDataTypeInteractionAnalyticsEvent);
        uint64_t v22 = sub_240BB6E10();
        uint64_t v39 = sub_240A38940(v22, v23, (uint64_t *)v40);
        sub_240BB75F0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240A1B000, v17, v18, "[%{public}s] Error when bucketing retrieved age", v19, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24560B930](v20, -1, -1);
        MEMORY[0x24560B930](v19, -1, -1);
      }

      id v16 = (id)*MEMORY[0x263F091B0];
    }
  }
  else
  {
    uint64_t v24 = v11;
    unint64_t v25 = (void *)sub_240BB2A50();

    swift_willThrow();
    id v26 = v25;
    id v27 = v25;
    id v28 = sub_240BB5970();
    os_log_type_t v29 = sub_240BB7180();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = (void *)swift_slowAlloc();
      v40[0] = v31;
      *(_DWORD *)uint64_t v30 = 136446466;
      uint64_t v39 = type metadata accessor for AFibBurdenDataTypeInteractionAnalyticsEvent();
      sub_240B6B5D8(0, &qword_268CA0CE8, v32, (void (*)(uint64_t))type metadata accessor for AFibBurdenDataTypeInteractionAnalyticsEvent);
      uint64_t v33 = sub_240BB6E10();
      uint64_t v39 = sub_240A38940(v33, v34, (uint64_t *)v40);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2082;
      uint64_t v39 = (uint64_t)v25;
      id v35 = v25;
      sub_240A49AC0();
      uint64_t v36 = sub_240BB6E10();
      uint64_t v39 = sub_240A38940(v36, v37, (uint64_t *)v40);
      sub_240BB75F0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_240A1B000, v28, v29, "[%{public}s] Error when retrieving bucketed age: %{public}s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v31, -1, -1);
      MEMORY[0x24560B930](v30, -1, -1);
    }
    else
    {
    }
    id v16 = (id)*MEMORY[0x263F091B0];
  }
  return v16;
}

uint64_t sub_240B6B5D8(uint64_t a1, unint64_t *a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t result = *a2;
  if (!*a2)
  {
    a4(a3);
    uint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_240B6B618(char a1)
{
  switch(a1)
  {
    case 1:
      sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
      id v1 = (id *)MEMORY[0x263F09BC8];
      goto LABEL_7;
    case 2:
      sub_240A34DC4(0, (unint64_t *)&qword_26AFD9940);
      uint64_t v2 = (id *)MEMORY[0x263F09410];
      goto LABEL_9;
    case 3:
      sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
      id v1 = (id *)MEMORY[0x263F09C38];
      goto LABEL_7;
    case 4:
      sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
      id v1 = (id *)MEMORY[0x263F09E78];
      goto LABEL_7;
    case 5:
      sub_240A34DC4(0, (unint64_t *)&qword_26AFD9940);
      uint64_t v2 = (id *)MEMORY[0x263F09388];
LABEL_9:
      uint64_t result = MEMORY[0x24560A460](*v2);
      break;
    default:
      sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
      id v1 = (id *)MEMORY[0x263F09BF8];
LABEL_7:
      uint64_t result = MEMORY[0x24560A470](*v1);
      break;
  }
  return result;
}

id sub_240B6B774(uint64_t a1, char a2)
{
  id result = objc_msgSend(self, sel_sharedInstanceForHealthStore_, a1);
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = (void *)sub_240B6B618(a2);
    id v6 = objc_msgSend(v4, sel_displayTypeForObjectType_, v5);

    if (!v6)
    {
      if (qword_26AFD7BF0 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_240BB5990();
      sub_240A395FC(v7, (uint64_t)qword_26AFDEB80);
      id v8 = sub_240BB5970();
      os_log_type_t v9 = sub_240BB7180();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = swift_slowAlloc();
        uint64_t v19 = swift_slowAlloc();
        uint64_t v20 = v19;
        *(_DWORD *)uint64_t v10 = 136446466;
        sub_240B6BDF8();
        uint64_t v11 = sub_240BB6E10();
        sub_240A38940(v11, v12, &v20);
        sub_240BB75F0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v10 + 12) = 2080;
        id v13 = (void *)sub_240B6B618(a2);
        id v14 = objc_msgSend(v13, sel_description);

        uint64_t v15 = sub_240BB6DE0();
        unint64_t v17 = v16;

        sub_240A38940(v15, v17, &v20);
        sub_240BB75F0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240A1B000, v8, v9, "[%{public}s] DisplayType not found for quantityType %s", (uint8_t *)v10, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24560B930](v19, -1, -1);
        MEMORY[0x24560B930](v10, -1, -1);
      }

      sub_240B6BD58();
      swift_allocError();
      *os_log_type_t v18 = 0;
      swift_willThrow();
    }

    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_240B6BA30(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 2 || a3 == 5) {
    return objc_msgSend(self, sel_secondUnit);
  }
  id v6 = objc_msgSend(self, sel_sharedInstanceForHealthStore_, a2);
  id v7 = objc_msgSend(v6, sel_createHKUnitPreferenceController);

  id v8 = objc_msgSend(v7, sel_unitForDisplayType_, a1);
  if (v8)
  {
    a1 = (uint64_t)v8;
  }
  else
  {
    if (qword_26AFD7BF0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_240BB5990();
    sub_240A395FC(v9, (uint64_t)qword_26AFDEB80);
    uint64_t v10 = sub_240BB5970();
    os_log_type_t v11 = sub_240BB7180();
    if (os_log_type_enabled(v10, v11))
    {
      a1 = swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v21 = v20;
      *(_DWORD *)a1 = 136446466;
      sub_240B6BDF8();
      uint64_t v12 = sub_240BB6E10();
      sub_240A38940(v12, v13, &v21);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(a1 + 12) = 2080;
      id v14 = (void *)sub_240B6B618(a3);
      id v15 = objc_msgSend(v14, sel_description);

      uint64_t v16 = sub_240BB6DE0();
      unint64_t v18 = v17;

      sub_240A38940(v16, v18, &v21);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v10, v11, "[%{public}s] Unit not found for sampleType %s", (uint8_t *)a1, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v20, -1, -1);
      MEMORY[0x24560B930](a1, -1, -1);
    }

    sub_240B6BD58();
    swift_allocError();
    *uint64_t v19 = 1;
    swift_willThrow();
  }
  return (id)a1;
}

unint64_t sub_240B6BD58()
{
  unint64_t result = qword_268CA1A30;
  if (!qword_268CA1A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1A30);
  }
  return result;
}

void sub_240B6BDAC(void *a1@<X8>)
{
  *a1 = &unk_26F5035F0;
}

uint64_t sub_240B6BDBC()
{
  return sub_240BB6E10();
}

unint64_t sub_240B6BDF8()
{
  unint64_t result = qword_268CA1A38;
  if (!qword_268CA1A38)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CA1A38);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AFibBurdenPDFChartDisplayTypeError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240B6BF00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFChartDisplayTypeError()
{
  return &type metadata for AFibBurdenPDFChartDisplayTypeError;
}

unsigned char *storeEnumTagSinglePayload for AFibBurdenPDFChartType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240B6C004);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFChartType()
{
  return &type metadata for AFibBurdenPDFChartType;
}

unint64_t sub_240B6C040()
{
  unint64_t result = qword_268CA1A40;
  if (!qword_268CA1A40)
  {
    sub_240B6C098();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1A40);
  }
  return result;
}

void sub_240B6C098()
{
  if (!qword_268CA1A48)
  {
    unint64_t v0 = sub_240BB6F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA1A48);
    }
  }
}

unint64_t sub_240B6C0F4()
{
  unint64_t result = qword_268CA1A50;
  if (!qword_268CA1A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1A50);
  }
  return result;
}

unint64_t sub_240B6C150()
{
  unint64_t result = qword_268CA1A58;
  if (!qword_268CA1A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1A58);
  }
  return result;
}

uint64_t sub_240B6C1A4(uint64_t a1)
{
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = v1;
  return MEMORY[0x270FA2498](sub_240B6C1C4, 0, 0);
}

uint64_t sub_240B6C1C4()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3B8]), sel_initWithFeatureIdentifier_healthStore_, *MEMORY[0x263F09728], v0[8]);
  v0[10] = v1;
  sub_240B6EB28();
  unsigned int v4 = (uint64_t (*)(uint64_t))((char *)&dword_268CA0210 + dword_268CA0210);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[11] = v2;
  void *v2 = v0;
  v2[1] = sub_240B6C2AC;
  return v4((uint64_t)v1);
}

uint64_t sub_240B6C2AC()
{
  uint64_t v2 = (void *)*v1;
  v2[12] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_240B6C54C, 0, 0);
  }
  else
  {
    unsigned int v6 = (uint64_t (*)(uint64_t))((char *)&dword_268CA01A8 + dword_268CA01A8);
    int v3 = (void *)swift_task_alloc();
    v2[13] = v3;
    *int v3 = v2;
    v3[1] = sub_240B6C438;
    uint64_t v4 = v2[8];
    return v6(v4);
  }
}

uint64_t sub_240B6C438()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_240B6C834;
  }
  else {
    uint64_t v2 = sub_240B6C7CC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_240B6C54C()
{
  unint64_t v18 = v0;
  if (qword_268C9E778 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[12];
  uint64_t v2 = sub_240BB5990();
  sub_240A395FC(v2, (uint64_t)qword_268CA2BB0);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_240BB5970();
  os_log_type_t v6 = sub_240BB7180();
  BOOL v7 = os_log_type_enabled(v5, v6);
  id v8 = (void *)v0[12];
  if (v7)
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v17[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    v0[2] = sub_240A38940(0xD000000000000020, 0x8000000240BD4770, v17);
    sub_240BB75F0();
    *(_WORD *)(v9 + 12) = 2080;
    v0[3] = v8;
    id v11 = v8;
    sub_240A3FD54(0, (unint64_t *)&qword_26AFD99E0);
    uint64_t v12 = sub_240BB6E10();
    v0[4] = sub_240A38940(v12, v13, v17);
    sub_240BB75F0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240A1B000, v5, v6, "[%s] Error when onboarding feature: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v10, -1, -1);
    MEMORY[0x24560B930](v9, -1, -1);
  }
  else
  {
  }
  id v14 = (void *)v0[10];
  sub_240B6DA40();
  swift_willThrow();

  id v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_240B6C7CC()
{
  uint64_t v1 = *(void **)(v0 + 80);
  sub_240B6DA40();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_240B6C834()
{
  unint64_t v18 = v0;
  if (qword_268C9E778 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[14];
  uint64_t v2 = sub_240BB5990();
  sub_240A395FC(v2, (uint64_t)qword_268CA2BB0);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_240BB5970();
  os_log_type_t v6 = sub_240BB7180();
  BOOL v7 = os_log_type_enabled(v5, v6);
  id v8 = (void *)v0[14];
  if (v7)
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v17[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    v0[5] = sub_240A38940(0xD000000000000020, 0x8000000240BD4770, v17);
    sub_240BB75F0();
    *(_WORD *)(v9 + 12) = 2080;
    v0[6] = v8;
    id v11 = v8;
    sub_240A3FD54(0, (unint64_t *)&qword_26AFD99E0);
    uint64_t v12 = sub_240BB6E10();
    v0[7] = sub_240A38940(v12, v13, v17);
    sub_240BB75F0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240A1B000, v5, v6, "[%s] Error when running test: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v10, -1, -1);
    MEMORY[0x24560B930](v9, -1, -1);
  }
  else
  {
  }
  id v14 = (void *)v0[10];
  sub_240B6DA40();
  swift_willThrow();

  id v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_240B6CAB4()
{
  *(void *)(v1 + 296) = v0;
  return MEMORY[0x270FA2498](sub_240B6CAD4, 0, 0);
}

uint64_t sub_240B6CAD4()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
  v0[38] = v1;
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A620]), sel_initWithHealthStore_, v1);
  v0[39] = v2;
  uint64_t v3 = sub_240BB6DA0();
  v0[40] = v3;
  v0[10] = v0;
  v0[15] = v0 + 30;
  v0[11] = sub_240B6CC48;
  uint64_t v4 = swift_continuation_init();
  v0[18] = MEMORY[0x263EF8330];
  v0[19] = 0x40000000;
  v0[20] = sub_240B6DC80;
  v0[21] = &unk_2650DCAF8;
  v0[22] = v4;
  objc_msgSend(v2, sel_createProfileOfType_displayName_completion_, 100, v3, v0 + 18);
  return MEMORY[0x270FA23F0](v0 + 10);
}

uint64_t sub_240B6CC48()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 328) = v1;
  if (v1) {
    id v2 = sub_240B6D03C;
  }
  else {
    id v2 = sub_240B6CD58;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_240B6CD58()
{
  uint64_t v20 = v0;
  uint64_t v1 = (void *)v0[40];
  id v2 = (void *)v0[30];
  v0[42] = v2;
  id v3 = v2;

  if (qword_268C9E778 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_240BB5990();
  v0[43] = sub_240A395FC(v4, (uint64_t)qword_268CA2BB0);
  id v5 = v3;
  uint64_t v6 = sub_240BB5970();
  os_log_type_t v7 = sub_240BB71A0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v19 = v9;
    *(_DWORD *)uint64_t v8 = 136315394;
    v0[35] = sub_240A38940(0xD000000000000020, 0x8000000240BD4770, &v19);
    sub_240BB75F0();
    *(_WORD *)(v8 + 12) = 2080;
    id v10 = v5;
    id v11 = objc_msgSend(v10, sel_description);
    uint64_t v12 = sub_240BB6DE0();
    unint64_t v14 = v13;

    v0[36] = sub_240A38940(v12, v14, &v19);
    sub_240BB75F0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240A1B000, v6, v7, "[%s] Created profile with identifier %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v9, -1, -1);
    MEMORY[0x24560B930](v8, -1, -1);
  }
  else
  {
  }
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
  v0[44] = v15;
  objc_msgSend(v15, sel_setProfileIdentifier_, v5);
  objc_msgSend(v15, sel_resume);
  sub_240BB6FC0();
  v0[45] = sub_240BB6FB0();
  uint64_t v17 = sub_240BB6FA0();
  return MEMORY[0x270FA2498](sub_240B6D2CC, v17, v16);
}

uint64_t sub_240B6D03C()
{
  uint64_t v19 = v0;
  uint64_t v1 = *(void **)(v0 + 320);
  swift_willThrow();

  if (qword_268C9E778 != -1) {
    swift_once();
  }
  id v2 = *(void **)(v0 + 328);
  uint64_t v3 = sub_240BB5990();
  sub_240A395FC(v3, (uint64_t)qword_268CA2BB0);
  id v4 = v2;
  id v5 = v2;
  uint64_t v6 = sub_240BB5970();
  os_log_type_t v7 = sub_240BB7180();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = *(void **)(v0 + 328);
  if (v8)
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    v18[0] = v11;
    *(_DWORD *)uint64_t v10 = 136315394;
    *(void *)(v0 + 248) = sub_240A38940(0xD000000000000020, 0x8000000240BD4770, v18);
    sub_240BB75F0();
    *(_WORD *)(v10 + 12) = 2080;
    *(void *)(v0 + 224) = v9;
    id v12 = v9;
    sub_240A3FD54(0, (unint64_t *)&qword_26AFD99E0);
    uint64_t v13 = sub_240BB6E10();
    *(void *)(v0 + 232) = sub_240A38940(v13, v14, v18);
    sub_240BB75F0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240A1B000, v6, v7, "[%s] Error when creating temporary profile: %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v11, -1, -1);
    MEMORY[0x24560B930](v10, -1, -1);
  }
  else
  {
  }
  swift_willThrow();
  id v15 = *(void **)(v0 + 312);

  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_240B6D2CC()
{
  uint64_t v1 = *(void **)(v0 + 352);
  swift_release();
  id v2 = objc_msgSend(v1, sel_viewControllerFactory);
  id v3 = objc_msgSend(v2, sel_createHKUnitPreferenceController);

  os_log_type_t v7 = (uint64_t (*)(uint64_t))((char *)&dword_268CA1AF8 + dword_268CA1AF8);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 368) = v4;
  void *v4 = v0;
  v4[1] = sub_240B6D3C0;
  uint64_t v5 = *(void *)(v0 + 352);
  return v7(v5);
}

uint64_t sub_240B6D3C0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 376) = v0;
  swift_task_dealloc();
  if (v0)
  {

    id v3 = sub_240B6D6E8;
  }
  else
  {
    id v3 = sub_240B6D4DC;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_240B6D4DC()
{
  uint64_t v1 = v0[42];
  uint64_t v2 = (void *)v0[39];
  v0[2] = v0;
  v0[3] = sub_240B6D5D8;
  uint64_t v3 = swift_continuation_init();
  v0[23] = MEMORY[0x263EF8330];
  v0[24] = 0x40000000;
  v0[25] = sub_240B6DD74;
  v0[26] = &unk_2650DCB10;
  v0[27] = v3;
  objc_msgSend(v2, sel_deleteProfile_completion_, v1, v0 + 23);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_240B6D5D8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 384) = v1;
  if (v1) {
    uint64_t v2 = sub_240B6D7E8;
  }
  else {
    uint64_t v2 = sub_240B6D764;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_240B6D6E8()
{
  uint64_t v1 = *(void **)(v0 + 312);

  uint64_t v2 = *(void **)(v0 + 304);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_240B6D764()
{
  uint64_t v1 = (void *)v0[44];
  uint64_t v2 = (void *)v0[42];
  uint64_t v4 = (void *)v0[38];
  uint64_t v3 = (void *)v0[39];

  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_240B6D7E8()
{
  uint64_t v20 = v0;
  uint64_t v1 = *(void **)(v0 + 384);
  uint64_t v2 = *(void **)(v0 + 336);
  swift_willThrow();

  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_240BB5970();
  os_log_type_t v6 = sub_240BB7180();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = *(void **)(v0 + 384);
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    v19[0] = v9;
    *(_DWORD *)uint64_t v8 = 136315394;
    *(void *)(v0 + 256) = sub_240A38940(0xD000000000000020, 0x8000000240BD4770, v19);
    sub_240BB75F0();
    *(_WORD *)(v8 + 12) = 2080;
    *(void *)(v0 + 264) = v7;
    id v10 = v7;
    sub_240A3FD54(0, (unint64_t *)&qword_26AFD99E0);
    uint64_t v11 = sub_240BB6E10();
    *(void *)(v0 + 272) = sub_240A38940(v11, v12, v19);
    sub_240BB75F0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240A1B000, v5, v6, "[%s] Error when deleting temporary profile: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v9, -1, -1);
    MEMORY[0x24560B930](v8, -1, -1);
  }
  else
  {
    uint64_t v13 = *(void **)(v0 + 384);
  }
  unint64_t v14 = *(void **)(v0 + 352);
  id v15 = *(void **)(v0 + 312);
  swift_willThrow();

  uint64_t v16 = *(void **)(v0 + 304);
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

void sub_240B6DA40()
{
  if (qword_268C9E778 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_240BB5990();
  sub_240A395FC(v0, (uint64_t)qword_268CA2BB0);
  swift_retain();
  uint64_t v1 = sub_240BB5970();
  os_log_type_t v2 = sub_240BB71A0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v10 = v4;
    *(_DWORD *)uint64_t v3 = 136315394;
    sub_240A38940(0xD000000000000020, 0x8000000240BD4770, &v10);
    sub_240BB75F0();
    *(_WORD *)(v3 + 12) = 2080;
    id v5 = (id)*MEMORY[0x263F09728];
    uint64_t v6 = sub_240BB73A0();
    unint64_t v8 = v7;

    sub_240A38940(v6, v8, &v10);
    sub_240BB75F0();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v1, v2, "[%s] Tearing down overrides for feature with identifier %s", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v4, -1, -1);
    MEMORY[0x24560B930](v3, -1, -1);
  }
  else
  {

    swift_release();
    id v5 = (id)*MEMORY[0x263F09728];
  }
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A398]), sel_initWithFeatureIdentifier_, v5);
  objc_msgSend(v9, sel_resetAllRequirementSatisfactionOverrides);
}

uint64_t sub_240B6DC80(uint64_t a1, void *a2, void *a3)
{
  uint64_t result = sub_240A3FD54(0, (unint64_t *)&unk_268CA1B00);
  uint64_t v7 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_240A3FD54(0, (unint64_t *)&qword_26AFD99E0);
    swift_allocError();
    *unint64_t v8 = a3;
    id v9 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(void **)(*(void *)(v7 + 64) + 40) = a2;
    id v10 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240B6DD74(uint64_t a1, int a2, void *a3)
{
  uint64_t result = sub_240A3FD54(0, (unint64_t *)&unk_268CA1B00);
  if (a2)
  {
    return swift_continuation_throwingResume();
  }
  else if (a3)
  {
    sub_240A3FD54(0, (unint64_t *)&qword_26AFD99E0);
    swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240B6DE48()
{
  uint64_t v0 = sub_240BB5990();
  sub_240A4C570(v0, qword_268CA2BB0);
  sub_240A395FC(v0, (uint64_t)qword_268CA2BB0);
  return sub_240BB5980();
}

uint64_t sub_240B6DEB8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_240BB3E20();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a4)
  {
    __break(1u);
    goto LABEL_10;
  }
  sub_240BB4850();
  sub_240BB3E30();
  uint64_t v12 = sub_240BB3E10();
  uint64_t v14 = v13;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  if (!a3)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_240BB4850();
  unint64_t v15 = sub_240BB7990();
  uint64_t result = swift_bridgeObjectRelease();
  if (v15 <= 2)
  {
    if (a1)
    {
      char v16 = sub_240B6E0D4(a1, v15, v12, v14, a4);
      swift_bridgeObjectRelease();
      return v16 & 1;
    }
    goto LABEL_11;
  }
  if (a1)
  {
    uint64_t v17 = (void *)sub_240BB6DA0();
    unint64_t v19 = 0;
    unint64_t v20 = 0xE000000000000000;
    sub_240BB77C0();
    swift_bridgeObjectRelease();
    unint64_t v19 = 0xD000000000000011;
    unint64_t v20 = 0x8000000240BD4700;
    sub_240BB6E70();
    swift_bridgeObjectRelease();
    unint64_t v18 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
    objc_msgSend(a1, sel_failedTest_withFailure_, v17, v18);

    char v16 = 0;
    return v16 & 1;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_240B6E0D4(void *a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_240B6EDE8();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = 0;
  memset(v25, 0, sizeof(v25));
  if (a2 > 1u)
  {
    unint64_t v20 = v25;
LABEL_6:
    sub_240B6EE40((uint64_t)v20);
    return 0;
  }
  uint64_t v14 = type metadata accessor for AFibBurdenPDFExportPPTTestRunner();
  swift_allocObject();
  sub_240BB4850();
  id v15 = a1;
  sub_240BB4850();
  uint64_t v16 = sub_240ACE898(a3, a4, v15, a5);
  void v24[3] = v14;
  v24[4] = &off_26F506600;
  v24[0] = v16;
  sub_240B6EE40((uint64_t)v25);
  sub_240B6EF08((uint64_t)v24, (uint64_t)v25);
  sub_240B6EF6C((uint64_t)v25, (uint64_t)&v22);
  if (!v23)
  {
    sub_240B6EE40((uint64_t)v25);
    unint64_t v20 = &v22;
    goto LABEL_6;
  }
  sub_240A37388(&v22, (uint64_t)v24);
  uint64_t v17 = sub_240BB6FE0();
  uint64_t v18 = 1;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v13, 1, 1, v17);
  sub_240A1E37C((uint64_t)v24, (uint64_t)&v22);
  unint64_t v19 = (void *)swift_allocObject();
  uint64_t v19[2] = 0;
  v19[3] = 0;
  v19[4] = a3;
  v19[5] = a4;
  sub_240A37388(&v22, (uint64_t)(v19 + 6));
  v19[11] = ObjectType;
  sub_240BB4850();
  sub_240B17230((uint64_t)v13, (uint64_t)&unk_268CA1AE0, (uint64_t)v19);
  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v24);
  sub_240B6EE40((uint64_t)v25);
  return v18;
}

uint64_t sub_240B6E3D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[9] = a6;
  id v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  return MEMORY[0x270FA2498](sub_240B6E3F8, 0, 0);
}

uint64_t sub_240B6E3F8()
{
  uint64_t v14 = v0;
  if (qword_268C9E778 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_240BB5990();
  *(void *)(v0 + 88) = sub_240A395FC(v1, (uint64_t)qword_268CA2BB0);
  swift_bridgeObjectRetain_n();
  os_log_type_t v2 = sub_240BB5970();
  os_log_type_t v3 = sub_240BB71A0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v11 = *(void *)(v0 + 56);
    unint64_t v4 = *(void *)(v0 + 64);
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v13 = v6;
    *(_DWORD *)uint64_t v5 = 136315394;
    uint64_t v7 = sub_240BB7C80();
    *(void *)(v0 + 40) = sub_240A38940(v7, v8, &v13);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    sub_240BB4850();
    *(void *)(v0 + 48) = sub_240A38940(v11, v4, &v13);
    sub_240BB75F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_240A1B000, v2, v3, "[%s] Running test with name %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v6, -1, -1);
    MEMORY[0x24560B930](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_240A3466C(*(void **)(v0 + 72), *(void *)(*(void *)(v0 + 72) + 24));
  uint64_t v12 = (uint64_t (__cdecl *)())((char *)&dword_268CA1AE8 + dword_268CA1AE8);
  id v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v9;
  *id v9 = v0;
  v9[1] = sub_240B6E688;
  return v12();
}

uint64_t sub_240B6E688()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_240B6E934;
  }
  else {
    os_log_type_t v2 = sub_240B6E79C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_240B6E79C()
{
  uint64_t v10 = v0;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_240BB5970();
  os_log_type_t v2 = sub_240BB71A0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v4 = v0[7];
    unint64_t v3 = v0[8];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v9 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    sub_240BB4850();
    v0[4] = sub_240A38940(v4, v3, &v9);
    sub_240BB75F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_240A1B000, v1, v2, "Successfully completed run of test with name %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v6, -1, -1);
    MEMORY[0x24560B930](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_240B6E934()
{
  uint64_t v13 = v0;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_240BB5970();
  os_log_type_t v2 = sub_240BB71A0();
  if (os_log_type_enabled(v1, v2))
  {
    id v11 = *(id *)(v0 + 104);
    uint64_t v4 = *(void *)(v0 + 56);
    unint64_t v3 = *(void *)(v0 + 64);
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v12 = v6;
    *(_DWORD *)uint64_t v5 = 136315394;
    uint64_t v7 = sub_240BB7C80();
    *(void *)(v0 + 16) = sub_240A38940(v7, v8, &v12);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    sub_240BB4850();
    *(void *)(v0 + 24) = sub_240A38940(v4, v3, &v12);
    sub_240BB75F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_240A1B000, v1, v2, "[%s] Failed run of test with name %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v6, -1, -1);
    MEMORY[0x24560B930](v5, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }

  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_240B6EB28()
{
  if (qword_268C9E778 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_240BB5990();
  sub_240A395FC(v0, (uint64_t)qword_268CA2BB0);
  swift_retain();
  uint64_t v1 = sub_240BB5970();
  os_log_type_t v2 = sub_240BB71A0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v18 = v4;
    *(_DWORD *)uint64_t v3 = 136315394;
    sub_240A38940(0xD000000000000020, 0x8000000240BD4770, &v18);
    sub_240BB75F0();
    *(_WORD *)(v3 + 12) = 2080;
    id v5 = (id)*MEMORY[0x263F09728];
    uint64_t v6 = sub_240BB73A0();
    unint64_t v8 = v7;

    sub_240A38940(v6, v8, &v18);
    sub_240BB75F0();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v1, v2, "[%s] Setting up overrides for feature with identifier %s", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v4, -1, -1);
    MEMORY[0x24560B930](v3, -1, -1);
  }
  else
  {

    swift_release();
    id v5 = (id)*MEMORY[0x263F09728];
  }
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A398]), sel_initWithFeatureIdentifier_, v5);
  id v10 = (id)HKAllFeatureAvailabilityRequirementIdentifiers();
  type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(0);
  uint64_t v11 = sub_240BB6F10();

  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    sub_240A576E0();
    uint64_t v13 = (void **)(v11 + 32);
    do
    {
      uint64_t v14 = *v13++;
      id v15 = v14;
      uint64_t v16 = (void *)sub_240BB74D0();
      objc_msgSend(v9, sel_overrideSatisfactionOfRequirementWithIdentifier_isSatisfied_, v15, v16);

      --v12;
    }
    while (v12);
  }

  return swift_bridgeObjectRelease();
}

void sub_240B6EDE8()
{
  if (!qword_268CA1AC0)
  {
    sub_240BB6FE0();
    unint64_t v0 = sub_240BB75E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA1AC0);
    }
  }
}

uint64_t sub_240B6EE40(uint64_t a1)
{
  sub_240B6EE9C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_240B6EE9C()
{
  if (!qword_268CA1AC8)
  {
    sub_240A3FD54(255, &qword_268CA1AD0);
    unint64_t v0 = sub_240BB75E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA1AC8);
    }
  }
}

uint64_t sub_240B6EF08(uint64_t a1, uint64_t a2)
{
  sub_240B6EE9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_240B6EF6C(uint64_t a1, uint64_t a2)
{
  sub_240B6EE9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240B6EFD0()
{
  sub_240BB50A0();
  swift_bridgeObjectRelease();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 48);

  return MEMORY[0x270FA0238](v0, 96, 7);
}

uint64_t sub_240B6F018()
{
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0 + 6;
  uint64_t v5 = v0[11];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_240AA62AC;
  v6[9] = v4;
  v6[10] = v5;
  v6[7] = v2;
  v6[8] = v3;
  return MEMORY[0x270FA2498](sub_240B6E3F8, 0, 0);
}

void sub_240B6F0D8()
{
}

void sub_240B6F134()
{
}

void sub_240B6F190()
{
}

void sub_240B6F1EC()
{
}

void sub_240B6F248()
{
}

uint64_t sub_240B6F2A4@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, char a3@<W3>, int a4@<W4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t *a8@<X8>)
{
  uint64_t v16 = sub_240BB2CF0();
  BOOL v17 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(a1, 1, v16) != 1;
  uint64_t result = sub_240B6F370((a2 | v17) & 1, a3, a4, a5, a6, a7);
  *a8 = result;
  return result;
}

uint64_t sub_240B6F370(int a1, char a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v61 = a3;
  int v63 = a1;
  uint64_t v69 = sub_240BB31D0();
  uint64_t v9 = *(void *)(v69 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v69);
  id v65 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v62 = (char *)&v57 - v12;
  sub_240A3FF50(0);
  uint64_t v66 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  BOOL v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v64 = (uint64_t)&v57 - v18;
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_240BB5990();
  uint64_t v67 = sub_240A395FC(v19, (uint64_t)qword_26AFDEC70);
  unint64_t v20 = sub_240BB5970();
  os_log_type_t v21 = sub_240BB71A0();
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v68 = v9;
  if (v22)
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v60 = a6;
    uint64_t v24 = v23;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v59 = a5;
    uint64_t v26 = v25;
    v72[0] = v25;
    *(_DWORD *)uint64_t v24 = 136446722;
    uint64_t v27 = sub_240BB7C80();
    uint64_t v58 = v17;
    uint64_t v71 = sub_240A38940(v27, v28, v72);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 1026;
    LODWORD(v71) = v63 & 1;
    sub_240BB75F0();
    *(_WORD *)(v24 + 18) = 1026;
    BOOL v17 = v58;
    LODWORD(v71) = a2 & 1;
    sub_240BB75F0();
    _os_log_impl(&dword_240A1B000, v20, v21, "[%{public}s] hideInDiscover: %{BOOL,public}d shouldShowPromotion: %{BOOL,public}d", (uint8_t *)v24, 0x18u);
    swift_arrayDestroy();
    uint64_t v29 = v26;
    a5 = v59;
    MEMORY[0x24560B930](v29, -1, -1);
    uint64_t v30 = v24;
    a6 = v60;
    MEMORY[0x24560B930](v30, -1, -1);
  }

  if (a2)
  {
    sub_240A3FDFC(0, &qword_268C9E870, MEMORY[0x263F45630], MEMORY[0x263F8E0F8]);
    uint64_t v31 = v68;
    unint64_t v32 = (*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_240BB97E0;
    uint64_t v34 = v70;
    sub_240B6FFCC(v61, v63 & 1, a5, a6, v33 + v32);
  }
  else
  {
    uint64_t v34 = v70;
    uint64_t v31 = v68;
  }
  sub_240A3FDFC(0, (unint64_t *)&unk_26AFD99A8, (uint64_t (*)(uint64_t))sub_240A3FF50, MEMORY[0x263F8E0F8]);
  unint64_t v35 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_240BB97E0;
  uint64_t v37 = v36 + v35;
  sub_240BB3250();
  sub_240A3466C(v72, v72[3]);
  (*(void (**)(void))(v34 + 104))();
  sub_240BB3200();
  swift_bridgeObjectRelease();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v72);
  sub_240BB4850();
  uint64_t v38 = v64;
  sub_240A3E24C(v37, v64, (uint64_t (*)(void))sub_240A3FF50);
  sub_240A5A5D8(v38, (uint64_t)v17);
  uint64_t v39 = v69;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v17, 1, v69) == 1)
  {
    sub_240A3E1EC((uint64_t)v17, (uint64_t (*)(void))sub_240A3FF50);
  }
  else
  {
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
    uint64_t v41 = v62;
    v40(v62, v17, v39);
    v40(v65, v41, v39);
    unint64_t v42 = MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v42 = sub_240A4297C(0, *(void *)(v42 + 16) + 1, 1, v42);
    }
    unint64_t v44 = *(void *)(v42 + 16);
    unint64_t v43 = *(void *)(v42 + 24);
    if (v44 >= v43 >> 1) {
      unint64_t v42 = sub_240A4297C(v43 > 1, v44 + 1, 1, v42);
    }
    *(void *)(v42 + 16) = v44 + 1;
    v40((char *)(v42+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))+ *(void *)(v68 + 72) * v44), v65, v69);
  }
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v45 = sub_240BB6F40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  uint64_t v46 = sub_240BB5970();
  uint64_t v47 = sub_240BB71A0();
  if (os_log_type_enabled(v46, (os_log_type_t)v47))
  {
    uint64_t v48 = swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    v72[0] = v49;
    *(_DWORD *)uint64_t v48 = 136446466;
    uint64_t v50 = sub_240BB7C80();
    uint64_t v71 = sub_240A38940(v50, v51, v72);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v48 + 12) = 2080;
    uint64_t v52 = sub_240BB4850();
    uint64_t v53 = MEMORY[0x24560A1D0](v52, MEMORY[0x263F45828]);
    unint64_t v55 = v54;
    swift_bridgeObjectRelease();
    uint64_t v71 = sub_240A38940(v53, v55, v72);
    sub_240BB75F0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v46, (os_log_type_t)v47, "%{public}s Submitting these changes: %s", (uint8_t *)v48, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v49, -1, -1);
    MEMORY[0x24560B930](v48, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return v45;
}

uint64_t sub_240B6FD30(void **a1)
{
  uint64_t v1 = *a1;
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_240BB5990();
  sub_240A395FC(v2, (uint64_t)qword_26AFDEC70);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_240BB5970();
  os_log_type_t v6 = sub_240BB7180();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v14 = v8;
    *(_DWORD *)uint64_t v7 = 136446466;
    uint64_t v9 = sub_240BB7C80();
    sub_240A38940(v9, v10, &v14);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v11 = sub_240BB7B60();
    sub_240A38940(v11, v12, &v14);
    sub_240BB75F0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240A1B000, v5, v6, "[%{public}s] error fetching onboarding title dismissed date: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v8, -1, -1);
    MEMORY[0x24560B930](v7, -1, -1);
  }
  else
  {
  }
  uint64_t v14 = MEMORY[0x263F8EE78];
  sub_240A3A454();
  return sub_240BB6200();
}

uint64_t sub_240B6FF68(uint64_t a1, int a2, char a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_240BB6200();
}

uint64_t sub_240B6FFCC@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v49 = a3;
  uint64_t v50 = a4;
  int v46 = a2;
  int v51 = a1;
  uint64_t v52 = a5;
  uint64_t v6 = sub_240BB3370();
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v42 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v40 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AB7B08(0);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v44 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_240BB3340();
  uint64_t v43 = *(void *)(v45 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v45);
  uint64_t v38 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v39 = (char *)&v38 - v12;
  uint64_t v48 = sub_240BB3950();
  uint64_t v13 = *(void *)(v48 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v48);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(v5 + 136))(v14);
  uint64_t v47 = v17;
  (*(void (**)(void))(v5 + 104))();
  (*(void (**)(void))(v5 + 128))();
  uint64_t v18 = (void *)sub_240BB3270();
  (*(void (**)(void))(v5 + 120))();
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_240BB7900()) {
    sub_240B21774(MEMORY[0x263F8EE78]);
  }
  sub_240BB3120();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v48);
  if (BYTE2(v51))
  {
    if (BYTE2(v51) != 1)
    {
      uint64_t v26 = (uint64_t)v44;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56))(v44, 1, 1, v45);
      sub_240A3E1EC(v26, (uint64_t (*)(void))sub_240AB7B08);
      goto LABEL_8;
    }
    uint64_t v19 = (unsigned int *)MEMORY[0x263F456F0];
  }
  else
  {
    uint64_t v19 = (unsigned int *)MEMORY[0x263F456F8];
  }
  uint64_t v20 = v43;
  os_log_type_t v21 = v44;
  uint64_t v22 = v45;
  (*(void (**)(char *, void, uint64_t))(v43 + 104))(v44, *v19, v45);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v21, 0, 1, v22);
  uint64_t v23 = v39;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v39, v21, v22);
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v38, v23, v22);
  uint64_t v24 = v40;
  sub_240BB3380();
  uint64_t v25 = v42;
  sub_240BB3140();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v24, v25);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v22);
LABEL_8:
  uint64_t v27 = sub_240BB3300();
  uint64_t v29 = v28;
  uint64_t v30 = (uint64_t (*)(unsigned char *, void))sub_240BB31A0();
  sub_240BB4850();
  sub_240B8DB44(&v53, v27, v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v31 = v30(v54, 0);
  unint64_t v32 = *(void (**)(uint64_t))(v5 + 112);
  v32(v31);
  sub_240B70AE0();
  uint64_t v33 = sub_240BB7080();
  swift_bridgeObjectRelease();
  uint64_t v34 = (uint64_t (*)(unsigned char *, void))sub_240BB31A0();
  sub_240AFE834(v33);
  uint64_t v35 = v34(v54, 0);
  uint64_t v36 = ((uint64_t (*)(uint64_t))v32)(v35);
  sub_240A39F7C(v36);
  swift_bridgeObjectRelease();
  sub_240BB3190();
  sub_240BB3160();
  return sub_240BB3150();
}

uint64_t sub_240B705C0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Heart30HeartFeaturePromotionGenerator_domain;
  uint64_t v2 = sub_240BB3240();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_240B70670()
{
  return type metadata accessor for HeartFeaturePromotionGenerator();
}

uint64_t type metadata accessor for HeartFeaturePromotionGenerator()
{
  uint64_t result = qword_26AFD7C70;
  if (!qword_26AFD7C70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240B706C4()
{
  uint64_t result = sub_240BB3240();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_240B7076C()
{
  return swift_retain();
}

uint64_t sub_240B70780@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC5Heart30HeartFeaturePromotionGenerator_domain;
  uint64_t v4 = sub_240BB3240();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_240B707F8()
{
  uint64_t v1 = sub_240BB32A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 30) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  unint64_t v6 = *(void *)(v0 + v5 + 8);
  if (v6 >> 60 != 15) {
    sub_240A4C4D8(*(void *)(v0 + v5), v6);
  }

  return MEMORY[0x270FA0238](v0, v5 + 16, v3 | 7);
}

uint64_t sub_240B708A8()
{
  uint64_t v1 = *(void *)(sub_240BB32A0() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 30) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  int v5 = *(unsigned __int8 *)(v0 + 24);
  char v6 = *(unsigned char *)(v0 + 25);
  int v7 = *(_DWORD *)(v0 + 26);
  uint64_t v8 = *(void *)(v0 + v3);
  uint64_t v9 = *(void *)(v0 + v3 + 8);

  return sub_240B6FF68(v4, v5, v6, v7, v0 + v2, v8, v9);
}

uint64_t sub_240B70958()
{
  uint64_t v1 = sub_240BB32A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 37) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  unint64_t v6 = *(void *)(v0 + v5 + 8);
  if (v6 >> 60 != 15) {
    sub_240A4C4D8(*(void *)(v0 + v5), v6);
  }

  return MEMORY[0x270FA0238](v0, v5 + 16, v3 | 7);
}

uint64_t sub_240B70A08@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_240BB32A0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 37) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unsigned __int8 v8 = *(unsigned char *)(v2 + 16);
  char v9 = *(unsigned char *)(v2 + 32);
  int v10 = *(_DWORD *)(v2 + 33);
  uint64_t v11 = *(void *)(v2 + v7);
  uint64_t v12 = *(void *)(v2 + v7 + 8);

  return sub_240B6F2A4(a1, v8, v9, v10, v2 + v6, v11, v12, a2);
}

uint64_t sub_240B70AC8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B70AD8(void **a1)
{
  return sub_240B6FD30(a1);
}

unint64_t sub_240B70AE0()
{
  unint64_t result = qword_26AFD9930;
  if (!qword_26AFD9930)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD9930);
  }
  return result;
}

uint64_t sub_240B70B20()
{
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_240BB2980();

  return v2;
}

uint64_t sub_240B70BE8()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v0 = (id)qword_26AFDECD8;

  return sub_240BB36C0();
}

unint64_t sub_240B70C74()
{
  return 0xD000000000000025;
}

unint64_t sub_240B70C94()
{
  return 0xD000000000000025;
}

uint64_t sub_240B70CB0()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  return sub_240BB2980();
}

uint64_t sub_240B70D50()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  return sub_240BB2980();
}

uint64_t sub_240B70DF8()
{
  sub_240A8CC68();
  uint64_t v0 = sub_240BB34F0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_240BC4B30;
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v5 = (id)qword_26AFDECD8;
  unint64_t v6 = (void *)sub_240BB6DA0();
  id v7 = objc_msgSend(self, sel_imageNamed_inBundle_, v6, v5);

  if (!v7) {
    id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init);
  }
  unint64_t v8 = v4 + v3;
  *(void *)unint64_t v8 = v7;
  *(unsigned char *)(v8 + 8) = 0;
  char v9 = *(void (**)(void))(v1 + 104);
  ((void (*)(unint64_t, void, uint64_t))v9)(v4 + v3, *MEMORY[0x263F42AB8], v0);
  int v10 = (uint64_t *)(v4 + v3 + v2);
  uint64_t *v10 = sub_240BB2980();
  v10[1] = v11;
  ((void (*)(uint64_t *, void, uint64_t))v9)(v10, *MEMORY[0x263F42AC0], v0);
  uint64_t v12 = (uint64_t *)(v4 + v3 + 2 * v2);
  uint64_t *v12 = sub_240BB2980();
  v12[1] = v13;
  void v12[2] = 0;
  unsigned int v41 = *MEMORY[0x263F42A80];
  v9(v8 + 2 * v2);
  uint64_t v40 = v4;
  unint64_t v14 = v8 + 3 * v2;
  *(void *)unint64_t v14 = sub_240BB2980();
  *(void *)(v14 + 8) = v15;
  *(unsigned char *)(v14 + 16) = 0;
  uint64_t v16 = *MEMORY[0x263F42AE0];
  v9(v14);
  unint64_t v17 = v8 + 4 * v2;
  *(void *)unint64_t v17 = sub_240BB2980();
  *(void *)(v17 + 8) = v18;
  *(unsigned char *)(v17 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v17, v16, v0);
  unint64_t v19 = v8 + 5 * v2;
  *(void *)unint64_t v19 = sub_240BB2980();
  *(void *)(v19 + 8) = v20;
  *(unsigned char *)(v19 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v19, v16, v0);
  os_log_type_t v21 = (uint64_t *)(v8 + 6 * v2);
  uint64_t *v21 = sub_240BB2980();
  v21[1] = v22;
  id v21[2] = 0;
  ((void (*)(uint64_t *, void, uint64_t))v9)(v21, v41, v0);
  unint64_t v23 = v8 + 7 * v2;
  *(void *)unint64_t v23 = sub_240BB2980();
  *(void *)(v23 + 8) = v24;
  *(unsigned char *)(v23 + 16) = 0;
  ((void (*)(unint64_t, void, uint64_t))v9)(v23, v16, v0);
  unint64_t v25 = v8 + 8 * v2;
  *(void *)unint64_t v25 = sub_240BB2980();
  *(void *)(v25 + 8) = v26;
  *(unsigned char *)(v25 + 16) = 0;
  ((void (*)(unint64_t, void, uint64_t))v9)(v25, v16, v0);
  unint64_t v27 = v8 + 9 * v2;
  *(void *)unint64_t v27 = sub_240BB2980();
  *(void *)(v27 + 8) = v28;
  *(unsigned char *)(v27 + 16) = 0;
  ((void (*)(unint64_t, void, uint64_t))v9)(v27, v16, v0);
  uint64_t v29 = (uint64_t *)(v8 + 10 * v2);
  *uint64_t v29 = sub_240BB2980();
  v29[1] = v30;
  long long v29[2] = 0;
  ((void (*)(uint64_t *, void, uint64_t))v9)(v29, v41, v0);
  unint64_t v31 = v8 + 11 * v2;
  *(void *)unint64_t v31 = sub_240BB2980();
  *(void *)(v31 + 8) = v32;
  *(unsigned char *)(v31 + 16) = 0;
  ((void (*)(unint64_t, void, uint64_t))v9)(v31, v16, v0);
  unint64_t v33 = v8 + 12 * v2;
  *(void *)unint64_t v33 = sub_240BB2980();
  *(void *)(v33 + 8) = v34;
  *(unsigned char *)(v33 + 16) = 0;
  ((void (*)(unint64_t, void, uint64_t))v9)(v33, v16, v0);
  uint64_t v35 = (uint64_t *)(v8 + 13 * v2);
  *uint64_t v35 = sub_240BB2980();
  v35[1] = v36;
  void v35[2] = 0;
  ((void (*)(uint64_t *, void, uint64_t))v9)(v35, v41, v0);
  unint64_t v37 = v8 + 14 * v2;
  *(void *)unint64_t v37 = sub_240BB2980();
  *(void *)(v37 + 8) = v38;
  *(unsigned char *)(v37 + 16) = 0;
  ((void (*)(unint64_t, void, uint64_t))v9)(v37, v16, v0);
  return v40;
}

ValueMetadata *type metadata accessor for AFibBurdenArticleProviderLearnAboutAFibBurden()
{
  return &type metadata for AFibBurdenArticleProviderLearnAboutAFibBurden;
}

id sub_240B715E8()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v0 = (id)qword_26AFDECD8;
  uint64_t v1 = (void *)sub_240BB6DA0();
  id v2 = objc_msgSend(self, sel_imageNamed_inBundle_, v1, v0);

  if (v2) {
    return v2;
  }
  id v4 = objc_allocWithZone(MEMORY[0x263F827E8]);

  return objc_msgSend(v4, sel_init);
}

uint64_t sub_240B716D8()
{
  sub_240A34E00();
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240BBAD40;
  sub_240A4C530();
  *(void *)(inited + 32) = MEMORY[0x24560A470]((id)*MEMORY[0x263F09BF8]);
  sub_240BB6F30();
  if (inited >> 62)
  {
    sub_240BB4850();
    uint64_t v3 = sub_240BB7900();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v2 = MEMORY[0x263F8EE88];
    goto LABEL_6;
  }
  if (!*(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  sub_240A3A2D0(inited);
  uint64_t v2 = v1;
LABEL_6:
  swift_bridgeObjectRelease();
  return v2;
}

id sub_240B71860()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ElectrocardiogramOnboardingSessionSimulationHeroView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ElectrocardiogramOnboardingSessionSimulationHeroView()
{
  return self;
}

uint64_t sub_240B718B8(uint64_t a1, uint64_t a2)
{
  sub_240A4958C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  sub_240A3FB28();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFD7158 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_240A395FC(v8, (uint64_t)qword_26AFDEB68);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  sub_240A496B8(a1, (uint64_t)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  sub_240A4971C((uint64_t)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13);
  *(void *)(v14 + ((v6 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  v16[1] = 0;
  sub_240BB5700();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_240B71AD8(uint64_t a1)
{
  sub_240A4958C();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  sub_240BB77C0();
  sub_240BB6E70();
  sub_240BB7C80();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240A496B8(a1, (uint64_t)v4);
  sub_240BB6E10();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return v6[0];
}

uint64_t sub_240B71C24(void **a1, uint64_t a2)
{
  sub_240A3FB28();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  if (v9)
  {
    id v10 = v9;
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_240A395FC(v5, (uint64_t)qword_26AFDEB68);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v11, v5);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v9;
    *(void *)(v12 + 24) = a2;
    uint64_t v17 = 0;
    id v13 = v9;
    sub_240BB5720();
    swift_release();
  }
  else
  {
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_240A395FC(v5, (uint64_t)qword_26AFDEB68);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v14, v5);
    *(void *)(swift_allocObject() + 16) = a2;
    uint64_t v17 = 0;
    sub_240BB5700();
    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_240B71E6C(void *a1)
{
  sub_240BB77C0();
  sub_240BB6E70();
  sub_240BB7C80();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  id v2 = a1;
  sub_240A49AC0();
  sub_240BB6E10();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return 0;
}

uint64_t sub_240B71F88()
{
  return 0;
}

uint64_t sub_240B72054(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_240A4958C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  sub_240BB6DE0();
  uint64_t v7 = sub_240BB3420();
  swift_bridgeObjectRelease();
  v11[1] = v7;
  sub_240A496B8(a1, (uint64_t)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  sub_240A4971C((uint64_t)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8);
  *(void *)(v9 + ((v6 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)) = v3;
  sub_240B729F0();
  sub_240A3AC5C(&qword_268C9EDE8, (void (*)(uint64_t))sub_240B729F0);
  sub_240BB6340();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_240BB6120();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_240B7227C(void **a1, uint64_t a2, uint64_t a3)
{
  sub_240A4958C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6 - 8);
  sub_240A3FB28();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a1;
  if (v14)
  {
    id v15 = v14;
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_240A395FC(v10, (uint64_t)qword_26AFDEB68);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v16, v10);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v14;
    *(void *)(v17 + 24) = a3;
    uint64_t v24 = 0;
    id v18 = v14;
    sub_240BB5720();
    swift_release();
  }
  else
  {
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_240A395FC(v10, (uint64_t)qword_26AFDEB68);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v19, v10);
    sub_240A496B8(a2, (uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v20 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v21 = swift_allocObject();
    sub_240A4971C((uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20);
    *(void *)(v21 + ((v8 + v20 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
    uint64_t v24 = 0;
    sub_240BB5700();
    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_240B72578(void *a1)
{
  sub_240BB77C0();
  sub_240BB6E70();
  sub_240BB7C80();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  id v2 = a1;
  sub_240A49AC0();
  sub_240BB6E10();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return 0;
}

uint64_t sub_240B72694(uint64_t a1)
{
  uint64_t v2 = sub_240BB2CF0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v16 - v7;
  sub_240A4958C();
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v16 - v13;
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  sub_240BB77C0();
  sub_240BB6E70();
  sub_240BB7C80();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240A496B8(a1, (uint64_t)v14);
  sub_240A496B8((uint64_t)v14, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v12, 1, v2) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v12, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    sub_240BB6E10();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
  sub_240A49B18((uint64_t)v14);
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return v16[0];
}

uint64_t sub_240B72954(void **a1)
{
  sub_240A4958C();
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_240B7227C(a1, v1 + v5, v6);
}

void sub_240B729F0()
{
  if (!qword_268C9EDE0)
  {
    sub_240A49AC0();
    unint64_t v0 = sub_240BB6220();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9EDE0);
    }
  }
}

uint64_t sub_240B72A60()
{
  return sub_240B72C4C((uint64_t (*)(unint64_t, uint64_t))sub_240B72694);
}

uint64_t sub_240B72A78()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B72AB0()
{
  return sub_240B72578(*(void **)(v0 + 16));
}

uint64_t sub_240B72AB8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B72AC8(uint64_t a1)
{
  return sub_240B718B8(a1, *(void *)(v1 + 16));
}

uint64_t sub_240B72AD0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B72AE0(void **a1)
{
  return sub_240B71C24(a1, *(void *)(v1 + 16));
}

uint64_t sub_240B72AE8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B72AF8()
{
  return sub_240B71F88();
}

uint64_t sub_240B72B00()
{
  return sub_240B71E6C(*(void **)(v0 + 16));
}

uint64_t sub_240B72B0C()
{
  sub_240A4958C();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = sub_240BB2CF0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }

  return MEMORY[0x270FA0238](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_240B72C34()
{
  return sub_240B72C4C((uint64_t (*)(unint64_t, uint64_t))sub_240B71AD8);
}

uint64_t sub_240B72C4C(uint64_t (*a1)(unint64_t, uint64_t))
{
  sub_240A4958C();
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return a1(v1 + v4, v5);
}

uint64_t type metadata accessor for AFibBurdenOnboardingShouldKnowViewController()
{
  uint64_t result = qword_268CA1B80;
  if (!qword_268CA1B80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240B72D3C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_240B72D90(char a1)
{
  *(void *)&v1[qword_268CA1B70 + 8] = 0;
  swift_unknownObjectWeakInit();
  sub_240B73E9C();
  sub_240BB4040();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_240BBD8D0;
  uint64_t v2 = qword_268C9E7A8;
  uint64_t v26 = v1;
  if (v2 != -1) {
    swift_once();
  }
  sub_240BB2980();
  sub_240A57608();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_240BBAE40;
  *(void *)(v3 + 32) = 0xD000000000000014;
  *(void *)(v3 + 40) = 0x8000000240BCA120;
  *(void *)(v3 + 48) = 0xD000000000000013;
  *(void *)(v3 + 56) = 0x8000000240BD4DE0;
  unint64_t v4 = sub_240A42A0C((void *)1, 3, 1, (void *)v3);
  v4[2] = 3;
  v4[8] = 6647375;
  v4[9] = 0xE300000000000000;
  uint64_t v5 = (void *)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  id v6 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (!v6)
  {
    swift_arrayDestroy();
    __break(1u);
    goto LABEL_13;
  }
  sub_240BB6DE0();

  swift_arrayDestroy();
  sub_240BB4030();
  sub_240BB2980();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_240BBAE40;
  *(void *)(v7 + 32) = 0xD000000000000014;
  *(void *)(v7 + 40) = 0x8000000240BCA120;
  *(void *)(v7 + 48) = 0xD000000000000013;
  *(void *)(v7 + 56) = 0x8000000240BD4DE0;
  uint64_t v8 = sub_240A42A0C((void *)1, 3, 1, (void *)v7);
  v8[2] = 3;
  v8[8] = 7305044;
  v8[9] = 0xE300000000000000;
  uint64_t v9 = (void *)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  id v10 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (!v10)
  {
LABEL_13:
    swift_arrayDestroy();
    __break(1u);
    goto LABEL_14;
  }
  sub_240BB6DE0();

  swift_arrayDestroy();
  sub_240BB4030();
  sub_240BB2980();
  sub_240BB2980();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_240BBAE40;
  *(void *)(v11 + 32) = 0xD000000000000014;
  *(void *)(v11 + 40) = 0x8000000240BCA120;
  *(void *)(v11 + 48) = 0xD000000000000013;
  *(void *)(v11 + 56) = 0x8000000240BD4DE0;
  uint64_t v12 = sub_240A42A0C((void *)1, 3, 1, (void *)v11);
  void v12[2] = 3;
  v12[8] = 0x6565726854;
  v12[9] = 0xE500000000000000;
  uint64_t v13 = (void *)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  id v14 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (!v14)
  {
LABEL_14:
    swift_arrayDestroy();
    __break(1u);
    goto LABEL_15;
  }
  sub_240BB6DE0();

  swift_arrayDestroy();
  sub_240BB4030();
  sub_240BB2980();
  sub_240BB2980();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_240BBAE40;
  *(void *)(v15 + 32) = 0xD000000000000014;
  *(void *)(v15 + 40) = 0x8000000240BCA120;
  *(void *)(v15 + 48) = 0xD000000000000013;
  *(void *)(v15 + 56) = 0x8000000240BD4DE0;
  uint64_t v16 = sub_240A42A0C((void *)1, 3, 1, (void *)v15);
  void v16[2] = 3;
  v16[8] = 1920298822;
  v16[9] = 0xE400000000000000;
  uint64_t v17 = (void *)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  id v18 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (!v18)
  {
LABEL_15:
    swift_arrayDestroy();
    __break(1u);
    goto LABEL_16;
  }
  sub_240BB6DE0();

  swift_arrayDestroy();
  sub_240BB4030();
  sub_240BB2980();
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_240BBAE40;
  *(void *)(v19 + 32) = 0xD000000000000014;
  *(void *)(v19 + 40) = 0x8000000240BCA120;
  *(void *)(v19 + 48) = 0xD000000000000013;
  *(void *)(v19 + 56) = 0x8000000240BD4DE0;
  unint64_t v20 = sub_240A42A0C((void *)1, 3, 1, (void *)v19);
  void v20[2] = 3;
  v20[8] = 1702259014;
  v20[9] = 0xE400000000000000;
  uint64_t v21 = (void *)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  id v22 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (!v22)
  {
LABEL_16:
    uint64_t result = swift_arrayDestroy();
    __break(1u);
    return result;
  }
  sub_240BB6DE0();

  swift_arrayDestroy();
  sub_240BB4030();
  v26[qword_268CA1B78] = a1 & 1;

  sub_240BB2980();
  if (a1) {
    return sub_240BB5240();
  }
  id v23 = (id)sub_240BB5240();
  id v24 = objc_msgSend(v23, sel_navigationItem, 0);
  objc_msgSend(v24, sel_setRightBarButtonItem_, 0);

  return (uint64_t)v23;
}

uint64_t sub_240B736E0()
{
  uint64_t v1 = v0;
  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for AFibBurdenOnboardingShouldKnowViewController();
  objc_msgSendSuper2(&v11, sel_viewDidLoad);
  int v2 = v0[qword_268CA1B78];
  if (v2 == 1) {
    objc_msgSend(v0, sel_hxui_addCancelButton);
  }
  id v3 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v3, sel_setBackButtonDisplayMode_, 1);

  id v4 = objc_msgSend(v1, sel_headerView);
  if (qword_268C9E660 != -1) {
    swift_once();
  }
  sub_240BB4850();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  uint64_t v5 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5);

  if ((v2 & 1) == 0) {
    return sub_240BB5300();
  }
  sub_240A57608();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_240BBAE40;
  *(void *)(v6 + 32) = 0xD000000000000014;
  *(void *)(v6 + 40) = 0x8000000240BCA120;
  *(void *)(v6 + 48) = 0xD000000000000013;
  *(void *)(v6 + 56) = 0x8000000240BD4DE0;
  uint64_t v7 = (char *)sub_240A42A0C((void *)1, 3, 1, (void *)v6);
  *((void *)v7 + 2) = 3;
  strcpy(v7 + 64, "ContinueButton");
  v7[79] = -18;
  uint64_t v8 = (void *)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  id v9 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v9)
  {
    sub_240BB6DE0();

    swift_arrayDestroy();
    sub_240BB52F0();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_arrayDestroy();
    __break(1u);
  }
  return result;
}

void sub_240B739D4(void *a1)
{
  id v1 = a1;
  sub_240B736E0();
}

uint64_t sub_240B73A1C()
{
  uint64_t v1 = v0 + qword_268CA1B70;
  uint64_t result = MEMORY[0x24560BA20](v0 + qword_268CA1B70);
  if (result)
  {
    uint64_t v3 = *(void *)(v1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v3 + 8))(v0, &off_26F50AF98, ObjectType, v3);
    return sub_240BB50A0();
  }
  return result;
}

uint64_t sub_240B73AB4(char *a1)
{
  int v2 = &a1[qword_268CA1B70];
  uint64_t result = MEMORY[0x24560BA20](&a1[qword_268CA1B70]);
  if (result)
  {
    uint64_t v4 = *((void *)v2 + 1);
    swift_getObjectType();
    uint64_t v5 = *(void (**)(void))(v4 + 16);
    uint64_t v6 = a1;
    v5();

    return sub_240BB50A0();
  }
  return result;
}

void sub_240B73B64()
{
}

uint64_t sub_240B73B94()
{
  return sub_240A484BC(v0 + qword_268CA1B70);
}

id sub_240B73BA4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenOnboardingShouldKnowViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240B73BDC(uint64_t a1)
{
  return sub_240A484BC(a1 + qword_268CA1B70);
}

uint64_t sub_240B73BEC()
{
  return type metadata accessor for AFibBurdenOnboardingShouldKnowViewController();
}

uint64_t sub_240B73BF4()
{
  return 5;
}

uint64_t sub_240B73BFC()
{
  return MEMORY[0x24560BA20](v0 + qword_268CA1B70);
}

uint64_t sub_240B73C30(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + qword_268CA1B70 + 8) = a2;
  swift_unknownObjectWeakAssign();

  return sub_240BB50A0();
}

void sub_240B73C7C()
{
  id v1 = objc_msgSend(v0, sel_navigationItem);
  sub_240A34DC4(0, (unint64_t *)&qword_268C9F670);
  sub_240A34DC4(0, &qword_268C9F9B0);
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_240BB7520();
  id v3 = (id)sub_240BB71E0();
  objc_msgSend(v1, sel_setRightBarButtonItem_, v3, 0, 0, 0, sub_240A9A5C4, v2);
}

void sub_240B73DB0(void *a1)
{
  id v1 = a1;
  sub_240B73C7C();
}

void sub_240B73DF8(void *a1)
{
  id v1 = a1;
  id v2 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v2, sel_setRightBarButtonItem_, 0);
}

uint64_t sub_240B73E64()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_240B73E9C()
{
  if (!qword_268CA1B90)
  {
    sub_240BB4040();
    unint64_t v0 = sub_240BB7AB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA1B90);
    }
  }
}

uint64_t *sub_240B73EF4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    id v9 = (char *)a2 + v7;
    uint64_t v10 = sub_240BB3660();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v12 = (uint64_t *)((char *)v4 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    uint64_t v14 = *(uint64_t *)((char *)a2 + v11 + 8);
    void *v12 = *(uint64_t *)((char *)a2 + v11);
    v12[1] = v14;
    uint64_t v15 = *(uint64_t *)((char *)a2 + v11 + 24);
    sub_240BB4850();
    sub_240BB4850();
    if (v15)
    {
      void v12[2] = v13[2];
      void v12[3] = v15;
      uint64_t v16 = v13[5];
      v12[4] = v13[4];
      void v12[5] = v16;
      sub_240BB4850();
      sub_240BB4850();
    }
    else
    {
      long long v18 = *((_OWORD *)v13 + 2);
      *((_OWORD *)v12 + 1) = *((_OWORD *)v13 + 1);
      *((_OWORD *)v12 + 2) = v18;
    }
  }
  return v4;
}

uint64_t sub_240B74034(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_240BB3660();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(v6 + 24);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unsigned char *sub_240B740EC(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_240BB3660();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = *(void *)&a2[v10];
  uint64_t v14 = *(void *)&a2[v10 + 8];
  *uint64_t v11 = v13;
  v11[1] = v14;
  uint64_t v15 = v12[3];
  sub_240BB4850();
  sub_240BB4850();
  if (v15)
  {
    v11[2] = v12[2];
    void v11[3] = v15;
    uint64_t v16 = v12[5];
    void v11[4] = v12[4];
    v11[5] = v16;
    sub_240BB4850();
    sub_240BB4850();
  }
  else
  {
    long long v17 = *((_OWORD *)v12 + 2);
    *((_OWORD *)v11 + 1) = *((_OWORD *)v12 + 1);
    *((_OWORD *)v11 + 2) = v17;
  }
  return a1;
}

unsigned char *sub_240B741DC(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_240BB3660();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[7];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  *uint64_t v11 = *(void *)&a2[v10];
  v11[1] = *(void *)&a2[v10 + 8];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  uint64_t v13 = v11 + 2;
  uint64_t v14 = v12 + 2;
  uint64_t v15 = v12[3];
  if (v11[3])
  {
    if (v15)
    {
      v11[2] = v12[2];
      void v11[3] = v12[3];
      sub_240BB4850();
      swift_bridgeObjectRelease();
      void v11[4] = v12[4];
      v11[5] = v12[5];
      sub_240BB4850();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_240B74358((uint64_t)(v11 + 2));
      long long v16 = *((_OWORD *)v12 + 2);
      *uint64_t v13 = *v14;
      *((_OWORD *)v11 + 2) = v16;
    }
  }
  else if (v15)
  {
    v11[2] = v12[2];
    void v11[3] = v12[3];
    void v11[4] = v12[4];
    v11[5] = v12[5];
    sub_240BB4850();
    sub_240BB4850();
  }
  else
  {
    long long v17 = *((_OWORD *)v12 + 2);
    *uint64_t v13 = *v14;
    *((_OWORD *)v11 + 2) = v17;
  }
  return a1;
}

uint64_t sub_240B74358(uint64_t a1)
{
  return a1;
}

unsigned char *sub_240B7438C(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_240BB3660();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  long long v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  v11[2] = v12[2];
  return a1;
}

unsigned char *sub_240B7443C(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_240BB3660();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[7];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = *((void *)v12 + 1);
  *(void *)uint64_t v11 = *(void *)v12;
  *((void *)v11 + 1) = v13;
  swift_bridgeObjectRelease();
  if (!*((void *)v11 + 3)) {
    goto LABEL_5;
  }
  uint64_t v14 = *((void *)v12 + 3);
  if (!v14)
  {
    sub_240B74358((uint64_t)(v11 + 16));
LABEL_5:
    long long v16 = *((_OWORD *)v12 + 2);
    *((_OWORD *)v11 + 1) = *((_OWORD *)v12 + 1);
    *((_OWORD *)v11 + 2) = v16;
    return a1;
  }
  *((void *)v11 + 2) = *((void *)v12 + 2);
  *((void *)v11 + 3) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *((void *)v12 + 5);
  *((void *)v11 + 4) = *((void *)v12 + 4);
  *((void *)v11 + 5) = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_240B74540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240B74554);
}

uint64_t sub_240B74554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240BB3660();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_240B74618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240B7462C);
}

uint64_t sub_240B7462C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_240BB3660();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for CardioFitnessHealthChecklistSettingsState()
{
  uint64_t result = qword_268CA1B98;
  if (!qword_268CA1B98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240B74738()
{
  uint64_t result = sub_240BB3660();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessHealthChecklistSettingsState.Footer.Link()
{
  return &type metadata for CardioFitnessHealthChecklistSettingsState.Footer.Link;
}

uint64_t sub_240B747F8(void *a1, int a2)
{
  int v28 = a2;
  id v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F8E0C0];
  sub_240B77B48(0, &qword_268CA1C98, (uint64_t (*)(void))sub_240B77950, (uint64_t)&type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.OffCodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v26 = *(void *)(v4 - 8);
  uint64_t v27 = v4;
  MEMORY[0x270FA5388](v4);
  unint64_t v25 = (char *)&v21 - v5;
  sub_240B77B48(0, &qword_268CA1CA0, (uint64_t (*)(void))sub_240B779A4, (uint64_t)&type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.OnCodingKeys, v3);
  uint64_t v23 = *(void *)(v6 - 8);
  uint64_t v24 = v6;
  MEMORY[0x270FA5388](v6);
  id v22 = (char *)&v21 - v7;
  sub_240B77B48(0, &qword_268CA1CA8, (uint64_t (*)(void))sub_240B779F8, (uint64_t)&type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.DisabledCodingKeys, v3);
  uint64_t v9 = v8;
  uint64_t v21 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v21 - v10;
  sub_240B77B48(0, &qword_268CA1CB0, (uint64_t (*)(void))sub_240B77A4C, (uint64_t)&type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.CodingKeys, v3);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  long long v16 = (char *)&v21 - v15;
  sub_240A3466C(a1, a1[3]);
  sub_240B77A4C();
  sub_240BB7C40();
  if ((_BYTE)v28)
  {
    if (v28 == 1)
    {
      char v30 = 1;
      sub_240B779A4();
      long long v17 = v22;
      sub_240BB7A30();
      uint64_t v19 = v23;
      uint64_t v18 = v24;
    }
    else
    {
      char v31 = 2;
      sub_240B77950();
      long long v17 = v25;
      sub_240BB7A30();
      uint64_t v19 = v26;
      uint64_t v18 = v27;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
  }
  else
  {
    char v29 = 0;
    sub_240B779F8();
    sub_240BB7A30();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v9);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_240B74BF8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v13[2] = a5;
  v13[1] = a4;
  sub_240B77B48(0, &qword_268CA1C00, (uint64_t (*)(void))sub_240B76DC8, (uint64_t)&type metadata for CardioFitnessHealthChecklistSettingsState.Footer.Link.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v13 - v9;
  sub_240A3466C(a1, a1[3]);
  sub_240B76DC8();
  sub_240BB7C40();
  char v15 = 0;
  uint64_t v11 = v13[3];
  sub_240BB7A70();
  if (!v11)
  {
    char v14 = 1;
    sub_240BB7A70();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_240B74D9C(void *a1)
{
  uint64_t v3 = v1;
  sub_240B77B48(0, &qword_268CA1CB8, (uint64_t (*)(void))sub_240B77AA0, (uint64_t)&type metadata for CardioFitnessHealthChecklistSettingsState.Footer.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v11[-v8];
  sub_240A3466C(a1, a1[3]);
  sub_240B77AA0();
  sub_240BB7C40();
  v11[0] = 0;
  sub_240BB7A70();
  if (!v2)
  {
    sub_240B77BB0(v3 + 16, (uint64_t)v12);
    sub_240B77BB0((uint64_t)v12, (uint64_t)v11);
    v12[47] = 1;
    sub_240B77C84();
    sub_240BB7A60();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_240B74F5C(void *a1)
{
  uint64_t v3 = v1;
  sub_240B77B48(0, &qword_268CA1BD0, (uint64_t (*)(void))sub_240B75E34, (uint64_t)&type metadata for CardioFitnessHealthChecklistSettingsState.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v15 - v8;
  sub_240A3466C(a1, a1[3]);
  sub_240B75E34();
  sub_240BB7C40();
  LOBYTE(v15[0]) = *v3;
  char v18 = 0;
  sub_240B75F30();
  sub_240BB7A90();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
    LOBYTE(v15[0]) = 1;
    sub_240BB3660();
    sub_240B59F58(&qword_268CA17C8);
    sub_240BB7A90();
    v15[0] = *(void *)&v3[*(int *)(v10 + 24)];
    char v18 = 2;
    sub_240B77C38(0, &qword_268C9F958, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    sub_240B75F84(&qword_268CA1BE0);
    sub_240BB7A90();
    uint64_t v11 = &v3[*(int *)(v10 + 28)];
    uint64_t v12 = *((void *)v11 + 1);
    v15[0] = *(void *)v11;
    v15[1] = v12;
    long long v13 = *((_OWORD *)v11 + 2);
    long long v16 = *((_OWORD *)v11 + 1);
    long long v17 = v13;
    char v18 = 3;
    sub_240B76008();
    sub_240BB7A90();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_240B75238@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v3 = sub_240BB3660();
  uint64_t v29 = *(void *)(v3 - 8);
  uint64_t v30 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B77B48(0, &qword_268CA1BA8, (uint64_t (*)(void))sub_240B75E34, (uint64_t)&type metadata for CardioFitnessHealthChecklistSettingsState.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v31 = v6;
  uint64_t v28 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v26 - v7;
  uint64_t v9 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3466C(a1, a1[3]);
  sub_240B75E34();
  uint64_t v32 = v8;
  uint64_t v12 = v33;
  sub_240BB7C30();
  if (v12) {
    return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  }
  long long v13 = v5;
  uint64_t v26 = v9;
  unint64_t v33 = a1;
  uint64_t v15 = v28;
  uint64_t v14 = v29;
  uint64_t v16 = v30;
  char v38 = 0;
  sub_240B75E88();
  sub_240BB7A10();
  uint64_t v17 = (uint64_t)v11;
  *uint64_t v11 = v34;
  LOBYTE(v34) = 1;
  sub_240B59F58(&qword_268CA17A0);
  char v18 = v13;
  sub_240BB7A10();
  uint64_t v19 = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v17 + *(int *)(v26 + 20), v18, v16);
  sub_240B77C38(0, &qword_268C9F958, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  char v38 = 2;
  sub_240B75F84(&qword_268CA1BC0);
  sub_240BB7A10();
  *(void *)(v17 + *(int *)(v19 + 24)) = v34;
  char v38 = 3;
  sub_240B75EDC();
  sub_240BB7A10();
  uint64_t v20 = (uint64_t)v33;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v32, v31);
  uint64_t v21 = v35;
  uint64_t v22 = v27;
  uint64_t v23 = v17 + *(int *)(v26 + 28);
  *(void *)uint64_t v23 = v34;
  *(void *)(v23 + 8) = v21;
  long long v24 = v37;
  *(_OWORD *)(v23 + 16) = v36;
  *(_OWORD *)(v23 + 32) = v24;
  sub_240AC240C(v17, v22);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v20);
  return sub_240AC2880(v17);
}

uint64_t sub_240B756CC()
{
  uint64_t v1 = 28271;
  if (*v0 != 1) {
    uint64_t v1 = 6710895;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x64656C6261736964;
  }
}

uint64_t sub_240B75714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_240B763F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_240B7573C(uint64_t a1)
{
  unint64_t v2 = sub_240B77A4C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240B75778(uint64_t a1)
{
  unint64_t v2 = sub_240B77A4C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240B757B4(uint64_t a1)
{
  unint64_t v2 = sub_240B779F8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240B757F0(uint64_t a1)
{
  unint64_t v2 = sub_240B779F8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240B7582C(uint64_t a1)
{
  unint64_t v2 = sub_240B77950();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240B75868(uint64_t a1)
{
  unint64_t v2 = sub_240B77950();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240B758A4(uint64_t a1)
{
  unint64_t v2 = sub_240B779A4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240B758E0(uint64_t a1)
{
  unint64_t v2 = sub_240B779A4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240B7591C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_240B76528(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_240B75948(void *a1)
{
  return sub_240B747F8(a1, *v1);
}

uint64_t sub_240B75964()
{
  if (*v0) {
    return 7107189;
  }
  else {
    return 1954047348;
  }
}

uint64_t sub_240B75990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_240B76AB8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_240B759B8(uint64_t a1)
{
  unint64_t v2 = sub_240B76DC8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240B759F4(uint64_t a1)
{
  unint64_t v2 = sub_240B76DC8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240B75A30@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_240B76B8C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_240B75A60(void *a1)
{
  return sub_240B74BF8(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_240B75A80(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = sub_240BB7AE0(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_240BB7AE0();
    }
  }
  return result;
}

uint64_t sub_240B75B24()
{
  if (*v0) {
    return 1802398060;
  }
  else {
    return 1954047348;
  }
}

uint64_t sub_240B75B48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_240B77418(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_240B75B70(uint64_t a1)
{
  unint64_t v2 = sub_240B77AA0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240B75BAC(uint64_t a1)
{
  unint64_t v2 = sub_240B77AA0();

  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_240B75BE8@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_240B774EC(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_240B75C2C(void *a1)
{
  return sub_240B74D9C(a1);
}

BOOL sub_240B75C68(_OWORD *a1, long long *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *a2;
  long long v4 = a2[1];
  void v7[2] = a1[2];
  v8[0] = v3;
  long long v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_240B7605C(v7, v8);
}

unint64_t sub_240B75CB0()
{
  unint64_t result = 0x7453686374697773;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x73696C6B63656863;
      break;
    case 2:
      unint64_t result = 0xD000000000000019;
      break;
    case 3:
      unint64_t result = 0x7265746F6F66;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_240B75D54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_240B77768(a1, a2);
  *a3 = result;
  return result;
}

void sub_240B75D7C(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_240B75D88(uint64_t a1)
{
  unint64_t v2 = sub_240B75E34();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240B75DC4(uint64_t a1)
{
  unint64_t v2 = sub_240B75E34();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240B75E00@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240B75238(a1, a2);
}

uint64_t sub_240B75E18(void *a1)
{
  return sub_240B74F5C(a1);
}

unint64_t sub_240B75E34()
{
  unint64_t result = qword_268CA1BB0;
  if (!qword_268CA1BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1BB0);
  }
  return result;
}

unint64_t sub_240B75E88()
{
  unint64_t result = qword_268CA1BB8;
  if (!qword_268CA1BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1BB8);
  }
  return result;
}

unint64_t sub_240B75EDC()
{
  unint64_t result = qword_268CA1BC8;
  if (!qword_268CA1BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1BC8);
  }
  return result;
}

unint64_t sub_240B75F30()
{
  unint64_t result = qword_268CA1BD8;
  if (!qword_268CA1BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1BD8);
  }
  return result;
}

uint64_t sub_240B75F84(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240B77C38(255, &qword_268C9F958, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_240B76008()
{
  unint64_t result = qword_268CA1BE8;
  if (!qword_268CA1BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1BE8);
  }
  return result;
}

BOOL sub_240B7605C(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = sub_240BB7AE0(), result = 0, (v5 & 1) != 0))
  {
    uint64_t v8 = a1[2];
    uint64_t v7 = a1[3];
    uint64_t v10 = a1[4];
    uint64_t v9 = a1[5];
    uint64_t v12 = a2[2];
    uint64_t v11 = a2[3];
    uint64_t v14 = a2[4];
    uint64_t v13 = a2[5];
    if (v7)
    {
      if (v11)
      {
        if (v8 == v12 && v7 == v11 || (sub_240BB7AE0() & 1) != 0)
        {
          if (v10 == v14 && v9 == v13)
          {
            sub_240AC28DC(v8, v7);
            sub_240AC28DC(v8, v7);
            sub_240AC28DC(v12, v11);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_240B763B4(v8, v7);
            return 1;
          }
          char v17 = sub_240BB7AE0();
          sub_240AC28DC(v8, v7);
          sub_240AC28DC(v8, v7);
          sub_240AC28DC(v12, v11);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_240B763B4(v8, v7);
          return (v17 & 1) != 0;
        }
        sub_240AC28DC(v8, v7);
        sub_240AC28DC(v8, v7);
        sub_240AC28DC(v12, v11);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v15 = v8;
        uint64_t v16 = v7;
LABEL_16:
        sub_240B763B4(v15, v16);
        return 0;
      }
    }
    else if (!v11)
    {
      return 1;
    }
    sub_240AC28DC(v8, v7);
    sub_240AC28DC(v12, v11);
    sub_240B763B4(v8, v7);
    uint64_t v15 = v12;
    uint64_t v16 = v11;
    goto LABEL_16;
  }
  return result;
}

BOOL sub_240B762F4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2
    && (uint64_t v4 = type metadata accessor for CardioFitnessHealthChecklistSettingsState(), (sub_240BB3650() & 1) != 0)
    && (sub_240B2B4C0(*(void **)&a1[*(int *)(v4 + 24)], *(void **)&a2[*(int *)(v4 + 24)]) & 1) != 0)
  {
    char v5 = &a1[*(int *)(v4 + 28)];
    long long v6 = *((_OWORD *)v5 + 2);
    long long v7 = *(_OWORD *)v5;
    v13[1] = *((_OWORD *)v5 + 1);
    v13[2] = v6;
    v13[0] = v7;
    uint64_t v8 = &a2[*(int *)(v4 + 28)];
    long long v9 = *((_OWORD *)v8 + 2);
    long long v10 = *(_OWORD *)v8;
    v14[1] = *((_OWORD *)v8 + 1);
    void v14[2] = v9;
    v14[0] = v10;
    return sub_240B7605C(v13, v14);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_240B763B4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_240B763F8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64656C6261736964 && a2 == 0xE800000000000000;
  if (v2 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 28271 && a2 == 0xE200000000000000 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 6710895 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_240B76528(uint64_t a1)
{
  BOOL v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F8E040];
  sub_240B77B48(0, &qword_268CA1C40, (uint64_t (*)(void))sub_240B77950, (uint64_t)&type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.OffCodingKeys, MEMORY[0x263F8E040]);
  uint64_t v30 = v3;
  uint64_t v28 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v33 = (char *)&v25 - v4;
  sub_240B77B48(0, &qword_268CA1C50, (uint64_t (*)(void))sub_240B779A4, (uint64_t)&type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.OnCodingKeys, v2);
  uint64_t v29 = v5;
  uint64_t v27 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v32 = (char *)&v25 - v6;
  sub_240B77B48(0, &qword_268CA1C60, (uint64_t (*)(void))sub_240B779F8, (uint64_t)&type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.DisabledCodingKeys, v2);
  uint64_t v8 = v7;
  uint64_t v26 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  long long v10 = (char *)&v25 - v9;
  sub_240B77B48(0, &qword_268CA1C70, (uint64_t (*)(void))sub_240B77A4C, (uint64_t)&type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.CodingKeys, v2);
  uint64_t v12 = v11;
  uint64_t v31 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v25 - v13;
  sub_240A3466C((void *)a1, *(void *)(a1 + 24));
  sub_240B77A4C();
  uint64_t v15 = v34;
  sub_240BB7C30();
  if (v15) {
    goto LABEL_7;
  }
  uint64_t v25 = v8;
  uint64_t v16 = v32;
  char v17 = v33;
  uint64_t v34 = a1;
  char v18 = v14;
  uint64_t v19 = sub_240BB7A20();
  if (*(void *)(v19 + 16) != 1)
  {
    uint64_t v21 = sub_240BB7830();
    swift_allocError();
    uint64_t v23 = v22;
    sub_240A7CBF0();
    *uint64_t v23 = &type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState;
    sub_240BB79B0();
    sub_240BB7810();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x263F8DCB0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v18, v12);
    a1 = v34;
LABEL_7:
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1);
    return a1;
  }
  a1 = *(unsigned __int8 *)(v19 + 32);
  if (*(unsigned char *)(v19 + 32))
  {
    if (a1 == 1)
    {
      char v36 = 1;
      sub_240B779A4();
      sub_240BB79A0();
      uint64_t v20 = v31;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v29);
    }
    else
    {
      char v37 = 2;
      sub_240B77950();
      sub_240BB79A0();
      uint64_t v20 = v31;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v30);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v35 = 0;
    sub_240B779F8();
    sub_240BB79A0();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v25);
    swift_bridgeObjectRelease();
    uint64_t v20 = v31;
  }
  (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v12);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v34);
  return a1;
}

uint64_t sub_240B76AB8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1954047348 && a2 == 0xE400000000000000;
  if (v2 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_240B76B8C(void *a1)
{
  sub_240B77B48(0, &qword_268CA1BF0, (uint64_t (*)(void))sub_240B76DC8, (uint64_t)&type metadata for CardioFitnessHealthChecklistSettingsState.Footer.Link.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = a1[4];
  sub_240A3466C(a1, a1[3]);
  sub_240B76DC8();
  sub_240BB7C30();
  if (v1)
  {
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    uint64_t v8 = sub_240BB79F0();
    char v11 = 1;
    sub_240BB4850();
    sub_240BB79F0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_240BB4850();
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_240B76DC8()
{
  unint64_t result = qword_268CA1BF8;
  if (!qword_268CA1BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1BF8);
  }
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessHealthChecklistSettingsState.Footer.Link.CodingKeys()
{
  return &type metadata for CardioFitnessHealthChecklistSettingsState.Footer.Link.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for CardioFitnessHealthChecklistSettingsState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240B76F00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessHealthChecklistSettingsState.CodingKeys()
{
  return &type metadata for CardioFitnessHealthChecklistSettingsState.CodingKeys;
}

ValueMetadata *type metadata accessor for CardioFitnessHealthChecklistSettingsState.SwitchState()
{
  return &type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState;
}

uint64_t destroy for CardioFitnessHealthChecklistSettingsState.Footer(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 24);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for CardioFitnessHealthChecklistSettingsState.Footer(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  sub_240BB4850();
  if (v5)
  {
    a1[2] = a2[2];
    a1[3] = v5;
    uint64_t v6 = a2[4];
    uint64_t v7 = a2[5];
    a1[4] = v6;
    a1[5] = v7;
    sub_240BB4850();
    sub_240BB4850();
  }
  else
  {
    long long v8 = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    *((_OWORD *)a1 + 2) = v8;
  }
  return a1;
}

void *assignWithCopy for CardioFitnessHealthChecklistSettingsState.Footer(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + 2;
  uint64_t v5 = a2 + 2;
  uint64_t v6 = a2[3];
  if (a1[3])
  {
    if (v6)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      sub_240BB4850();
      swift_bridgeObjectRelease();
      a1[4] = a2[4];
      a1[5] = a2[5];
      sub_240BB4850();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_240B74358((uint64_t)(a1 + 2));
      long long v7 = *((_OWORD *)a2 + 2);
      _OWORD *v4 = *v5;
      *((_OWORD *)a1 + 2) = v7;
    }
  }
  else if (v6)
  {
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    sub_240BB4850();
    sub_240BB4850();
  }
  else
  {
    long long v8 = *((_OWORD *)a2 + 2);
    _OWORD *v4 = *v5;
    *((_OWORD *)a1 + 2) = v8;
  }
  return a1;
}

uint64_t assignWithTake for CardioFitnessHealthChecklistSettingsState.Footer(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 24)) {
    goto LABEL_5;
  }
  uint64_t v5 = *(void *)(a2 + 24);
  if (!v5)
  {
    sub_240B74358(a1 + 16);
LABEL_5:
    long long v7 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v7;
    return a1;
  }
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CardioFitnessHealthChecklistSettingsState.Footer()
{
  return &type metadata for CardioFitnessHealthChecklistSettingsState.Footer;
}

unint64_t sub_240B771B4()
{
  unint64_t result = qword_268CA1C08;
  if (!qword_268CA1C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1C08);
  }
  return result;
}

unint64_t sub_240B7720C()
{
  unint64_t result = qword_268CA1C10;
  if (!qword_268CA1C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1C10);
  }
  return result;
}

unint64_t sub_240B77264()
{
  unint64_t result = qword_268CA1C18;
  if (!qword_268CA1C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1C18);
  }
  return result;
}

unint64_t sub_240B772BC()
{
  unint64_t result = qword_268CA1C20;
  if (!qword_268CA1C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1C20);
  }
  return result;
}

unint64_t sub_240B77314()
{
  unint64_t result = qword_268CA1C28;
  if (!qword_268CA1C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1C28);
  }
  return result;
}

unint64_t sub_240B7736C()
{
  unint64_t result = qword_268CA1C30;
  if (!qword_268CA1C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1C30);
  }
  return result;
}

unint64_t sub_240B773C4()
{
  unint64_t result = qword_268CA1C38;
  if (!qword_268CA1C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1C38);
  }
  return result;
}

uint64_t sub_240B77418(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1954047348 && a2 == 0xE400000000000000;
  if (v2 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1802398060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_240B774EC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v20 = a2;
  sub_240B77B48(0, &qword_268CA1C80, (uint64_t (*)(void))sub_240B77AA0, (uint64_t)&type metadata for CardioFitnessHealthChecklistSettingsState.Footer.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  long long v8 = (char *)&v19 - v7;
  sub_240A3466C(a1, a1[3]);
  sub_240B77AA0();
  sub_240BB7C30();
  if (v2) {
    return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v20;
  LOBYTE(v21) = 0;
  uint64_t v11 = sub_240BB79F0();
  uint64_t v13 = v12;
  char v25 = 1;
  sub_240B77AF4();
  sub_240BB4850();
  sub_240BB79E0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v14 = v21;
  uint64_t v15 = v22;
  uint64_t v16 = v23;
  uint64_t v17 = v24;
  sub_240AC28DC(v21, v22);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t result = sub_240B763B4(v14, v15);
  uint64_t *v10 = v11;
  v10[1] = v13;
  void v10[2] = v14;
  v10[3] = v15;
  void v10[4] = v16;
  void v10[5] = v17;
  return result;
}

uint64_t sub_240B77768(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7453686374697773 && a2 == 0xEB00000000657461;
  if (v2 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73696C6B63656863 && a2 == 0xEF73757461745374 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000240BD4EE0 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7265746F6F66 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_240B77950()
{
  unint64_t result = qword_268CA1C48;
  if (!qword_268CA1C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1C48);
  }
  return result;
}

unint64_t sub_240B779A4()
{
  unint64_t result = qword_268CA1C58;
  if (!qword_268CA1C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1C58);
  }
  return result;
}

unint64_t sub_240B779F8()
{
  unint64_t result = qword_268CA1C68;
  if (!qword_268CA1C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1C68);
  }
  return result;
}

unint64_t sub_240B77A4C()
{
  unint64_t result = qword_268CA1C78;
  if (!qword_268CA1C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1C78);
  }
  return result;
}

unint64_t sub_240B77AA0()
{
  unint64_t result = qword_268CA1C88;
  if (!qword_268CA1C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1C88);
  }
  return result;
}

unint64_t sub_240B77AF4()
{
  unint64_t result = qword_268CA1C90;
  if (!qword_268CA1C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1C90);
  }
  return result;
}

void sub_240B77B48(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_240B77BB0(uint64_t a1, uint64_t a2)
{
  sub_240B77C38(0, &qword_268CA1CC0, (uint64_t)&type metadata for CardioFitnessHealthChecklistSettingsState.Footer.Link, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_240B77C38(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_240B77C84()
{
  unint64_t result = qword_268CA1CC8;
  if (!qword_268CA1CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1CC8);
  }
  return result;
}

unsigned char *_s5Heart41CardioFitnessHealthChecklistSettingsStateV6FooterV4LinkV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240B77DA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessHealthChecklistSettingsState.Footer.CodingKeys()
{
  return &type metadata for CardioFitnessHealthChecklistSettingsState.Footer.CodingKeys;
}

unsigned char *_s5Heart41CardioFitnessHealthChecklistSettingsStateV11SwitchStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240B77EA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessHealthChecklistSettingsState.SwitchState.CodingKeys()
{
  return &type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.CodingKeys;
}

ValueMetadata *type metadata accessor for CardioFitnessHealthChecklistSettingsState.SwitchState.DisabledCodingKeys()
{
  return &type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.DisabledCodingKeys;
}

ValueMetadata *type metadata accessor for CardioFitnessHealthChecklistSettingsState.SwitchState.OnCodingKeys()
{
  return &type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.OnCodingKeys;
}

ValueMetadata *type metadata accessor for CardioFitnessHealthChecklistSettingsState.SwitchState.OffCodingKeys()
{
  return &type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.OffCodingKeys;
}

unint64_t sub_240B77F14()
{
  unint64_t result = qword_268CA1CD0;
  if (!qword_268CA1CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1CD0);
  }
  return result;
}

unint64_t sub_240B77F6C()
{
  unint64_t result = qword_268CA1CD8;
  if (!qword_268CA1CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1CD8);
  }
  return result;
}

unint64_t sub_240B77FC4()
{
  unint64_t result = qword_268CA1CE0;
  if (!qword_268CA1CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1CE0);
  }
  return result;
}

unint64_t sub_240B7801C()
{
  unint64_t result = qword_268CA1CE8;
  if (!qword_268CA1CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1CE8);
  }
  return result;
}

unint64_t sub_240B78074()
{
  unint64_t result = qword_268CA1CF0;
  if (!qword_268CA1CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1CF0);
  }
  return result;
}

unint64_t sub_240B780CC()
{
  unint64_t result = qword_268CA1CF8;
  if (!qword_268CA1CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1CF8);
  }
  return result;
}

unint64_t sub_240B78124()
{
  unint64_t result = qword_268CA1D00;
  if (!qword_268CA1D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1D00);
  }
  return result;
}

unint64_t sub_240B7817C()
{
  unint64_t result = qword_268CA1D08;
  if (!qword_268CA1D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1D08);
  }
  return result;
}

unint64_t sub_240B781D4()
{
  unint64_t result = qword_268CA1D10;
  if (!qword_268CA1D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1D10);
  }
  return result;
}

unint64_t sub_240B7822C()
{
  unint64_t result = qword_268CA1D18;
  if (!qword_268CA1D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1D18);
  }
  return result;
}

unint64_t sub_240B78284()
{
  unint64_t result = qword_268CA1D20;
  if (!qword_268CA1D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1D20);
  }
  return result;
}

unint64_t sub_240B782DC()
{
  unint64_t result = qword_268CA1D28;
  if (!qword_268CA1D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1D28);
  }
  return result;
}

ValueMetadata *type metadata accessor for RelatedSampleTypesCacheObject()
{
  return &type metadata for RelatedSampleTypesCacheObject;
}

uint64_t *sub_240B78348(uint64_t *a1, uint64_t *a2)
{
  sub_240B7BB18(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(v4 - 8);
    uint64_t v7 = sub_240BB2CF0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_240B784CC(uint64_t a1)
{
  uint64_t v2 = sub_240BB2CF0();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *sub_240B7859C(void *a1, const void *a2)
{
  uint64_t v4 = sub_240BB2CF0();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    sub_240B7BB18(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *sub_240B786D8(void *a1, void *a2)
{
  uint64_t v4 = sub_240BB2CF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    sub_240B7BB18(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, v4);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

void *sub_240B78880(void *a1, const void *a2)
{
  uint64_t v4 = sub_240BB2CF0();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    sub_240B7BB18(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *sub_240B789BC(void *a1, void *a2)
{
  uint64_t v4 = sub_240BB2CF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    sub_240B7BB18(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, v4);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_240B78B64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240B78B78);
}

uint64_t sub_240B78B78(uint64_t a1, uint64_t a2)
{
  sub_240B7BB18(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_240B78C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240B78C28);
}

uint64_t sub_240B78C28(uint64_t a1, uint64_t a2)
{
  sub_240B7BB18(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(uint64_t a1)
{
  return sub_240A3E6AC(a1, (uint64_t *)&unk_268CA1D30);
}

void sub_240B78CE8()
{
  sub_240B7BB18(319, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_240B78DA4(uint64_t a1)
{
  sub_240B7BD2C();
  uint64_t v57 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v56 = (void *)((char *)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  unint64_t v55 = (void *)((char *)v45 - v7);
  MEMORY[0x270FA5388](v6);
  unint64_t v54 = (char *)v45 - v8;
  uint64_t v9 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState(0);
  uint64_t v52 = *(void *)(v9 - 8);
  uint64_t v53 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = MEMORY[0x263F8EE78];
  if (!v12) {
    return v13;
  }
  v45[1] = v1;
  uint64_t v60 = MEMORY[0x263F8EE78];
  sub_240B0CC94(0, v12, 0);
  uint64_t result = sub_240B7AFC0(a1);
  uint64_t v16 = result;
  uint64_t v17 = 0;
  uint64_t v18 = a1 + 64;
  uint64_t v46 = a1 + 80;
  int64_t v47 = v12;
  uint64_t v50 = v11;
  uint64_t v51 = a1;
  uint64_t v48 = v15;
  uint64_t v49 = a1 + 64;
  uint64_t v19 = v54;
  while ((v16 & 0x8000000000000000) == 0 && v16 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v22 = (unint64_t)v16 >> 6;
    if ((*(void *)(v18 + 8 * ((unint64_t)v16 >> 6)) & (1 << v16)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v15) {
      goto LABEL_26;
    }
    uint64_t v58 = v17;
    uint64_t v59 = 1 << v16;
    uint64_t v23 = v57;
    uint64_t v24 = (uint64_t)v19 + *(int *)(v57 + 48);
    uint64_t v25 = *(void *)(a1 + 48);
    uint64_t v26 = *(void *)(a1 + 56);
    uint64_t v27 = (uint64_t *)(v25 + 16 * v16);
    uint64_t v28 = *v27;
    uint64_t v29 = v27[1];
    uint64_t v30 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
    sub_240B7BB7C(v26 + *(void *)(*(void *)(v30 - 8) + 72) * v16, v24, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
    *uint64_t v19 = v28;
    v19[1] = v29;
    uint64_t v31 = v55;
    *unint64_t v55 = v28;
    v31[1] = v29;
    sub_240B7BB7C(v24, (uint64_t)v31 + *(int *)(v23 + 48), type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
    uint64_t v32 = (uint64_t)v31;
    unint64_t v33 = v56;
    sub_240B7BD98(v32, (uint64_t)v56, (uint64_t (*)(void))sub_240B7BD2C);
    swift_bridgeObjectRetain_n();
    sub_240B7BE94((uint64_t)v19, (uint64_t (*)(void))sub_240B7BD2C);
    uint64_t v34 = *v33;
    uint64_t v35 = v33[1];
    uint64_t v36 = *(int *)(v23 + 48);
    char v37 = v50;
    sub_240B7BB7C((uint64_t)v33 + v36, (uint64_t)v50 + *(int *)(v53 + 20), type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
    *char v37 = v34;
    v37[1] = v35;
    sub_240BB4850();
    sub_240B7BE94((uint64_t)v33, (uint64_t (*)(void))sub_240B7BD2C);
    uint64_t v13 = v60;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_240B0CC94(0, *(void *)(v13 + 16) + 1, 1);
      uint64_t v13 = v60;
    }
    unint64_t v39 = *(void *)(v13 + 16);
    unint64_t v38 = *(void *)(v13 + 24);
    if (v39 >= v38 >> 1)
    {
      sub_240B0CC94(v38 > 1, v39 + 1, 1);
      uint64_t v13 = v60;
    }
    *(void *)(v13 + 16) = v39 + 1;
    uint64_t result = sub_240B7BD98((uint64_t)v37, v13+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(void *)(v52 + 72) * v39, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState);
    a1 = v51;
    int64_t v20 = 1 << *(unsigned char *)(v51 + 32);
    if (v16 >= v20) {
      goto LABEL_27;
    }
    uint64_t v18 = v49;
    uint64_t v40 = *(void *)(v49 + 8 * v22);
    if ((v40 & v59) == 0) {
      goto LABEL_28;
    }
    LODWORD(v15) = v48;
    if (*(_DWORD *)(v51 + 36) != v48) {
      goto LABEL_29;
    }
    unint64_t v41 = v40 & (-2 << (v16 & 0x3F));
    if (v41)
    {
      int64_t v20 = __clz(__rbit64(v41)) | v16 & 0xFFFFFFFFFFFFFFC0;
      int64_t v21 = v47;
    }
    else
    {
      unint64_t v42 = v22 + 1;
      unint64_t v43 = (unint64_t)(v20 + 63) >> 6;
      int64_t v21 = v47;
      if (v22 + 1 < v43)
      {
        unint64_t v44 = *(void *)(v49 + 8 * v42);
        if (v44)
        {
LABEL_22:
          int64_t v20 = __clz(__rbit64(v44)) + (v42 << 6);
        }
        else
        {
          while (v43 - 2 != v22)
          {
            unint64_t v44 = *(void *)(v46 + 8 * v22++);
            if (v44)
            {
              unint64_t v42 = v22 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v17 = v58 + 1;
    uint64_t v16 = v20;
    if (v58 + 1 == v21) {
      return v13;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_240B79218@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  sub_240B7BB18(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  int64_t v20 = (char *)&v17 - v4;
  sub_240B7CD54(0, &qword_268CA1DA0, (uint64_t (*)(void))sub_240B7BEF4, (uint64_t)&type metadata for RelatedSampleTypesCacheObject.DataTypeState.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v19 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_240BB2CF0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_240A3466C(a1, a1[3]);
  sub_240B7BEF4();
  uint64_t v13 = v21;
  sub_240BB7C30();
  if (!v13)
  {
    uint64_t v14 = v19;
    sub_240B7CDBC(&qword_268CA1DB0, MEMORY[0x263F07490]);
    uint64_t v15 = (uint64_t)v20;
    sub_240BB79E0();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
    sub_240A49780(v15, (uint64_t)v11);
    sub_240B7BB7C((uint64_t)v11, v18, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
  }
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  return sub_240B7BE94((uint64_t)v11, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
}

uint64_t sub_240B79540(void *a1)
{
  sub_240B7CD54(0, &qword_268CA1E20, (uint64_t (*)(void))sub_240B7CD00, (uint64_t)&type metadata for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_240A3466C(a1, a1[3]);
  sub_240B7CD00();
  sub_240BB7C40();
  char v11 = 0;
  sub_240BB7A70();
  if (!v1)
  {
    type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState(0);
    char v10 = 1;
    type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
    sub_240B7CDBC(&qword_268CA1E28, (void (*)(uint64_t))type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
    sub_240BB7A90();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_240B7972C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v21 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
  MEMORY[0x270FA5388](v21);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B7CD54(0, &qword_268CA1E08, (uint64_t (*)(void))sub_240B7CD00, (uint64_t)&type metadata for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v22 = v5;
  uint64_t v20 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v18 - v6;
  uint64_t v8 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState(0);
  MEMORY[0x270FA5388](v8);
  char v10 = (uint64_t *)((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_240A3466C(a1, a1[3]);
  sub_240B7CD00();
  uint64_t v11 = (uint64_t)v23;
  sub_240BB7C30();
  if (v11) {
    return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  }
  uint64_t v23 = a1;
  uint64_t v12 = v20;
  char v25 = 0;
  uint64_t v13 = v22;
  uint64_t *v10 = sub_240BB79F0();
  v10[1] = v14;
  uint64_t v18 = v10;
  char v24 = 1;
  sub_240B7CDBC(&qword_268CA1E18, (void (*)(uint64_t))type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
  sub_240BB7A10();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v13);
  uint64_t v15 = *(int *)(v8 + 20);
  uint64_t v16 = (uint64_t)v18;
  sub_240B7BD98((uint64_t)v4, (uint64_t)v18 + v15, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
  sub_240B7BB7C(v16, v19, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v23);
  return sub_240B7BE94(v16, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState);
}

uint64_t sub_240B79A84()
{
  return 0x616470557473616CLL;
}

uint64_t sub_240B79AA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x616470557473616CLL && a2 == 0xEF65746144646574)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_240BB7AE0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_240B79B64(uint64_t a1)
{
  unint64_t v2 = sub_240B7BEF4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240B79BA0(uint64_t a1)
{
  unint64_t v2 = sub_240B7BEF4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240B79BDC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240B79218(a1, a2);
}

uint64_t sub_240B79BF4(void *a1)
{
  sub_240B7CD54(0, &qword_268CA1DB8, (uint64_t (*)(void))sub_240B7BEF4, (uint64_t)&type metadata for RelatedSampleTypesCacheObject.DataTypeState.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - v5;
  sub_240A3466C(a1, a1[3]);
  sub_240B7BEF4();
  sub_240BB7C40();
  sub_240BB2CF0();
  sub_240B7CDBC(&qword_268CA1DC0, MEMORY[0x263F07490]);
  sub_240BB7A60();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_240B79DA4(uint64_t *a1, uint64_t *a2)
{
  return sub_240B7A228(*a1, *a2);
}

uint64_t sub_240B79DB0()
{
  if (*v0) {
    return 0x6574617473;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_240B79DEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_240B7B3D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_240B79E14(uint64_t a1)
{
  unint64_t v2 = sub_240B7CD00();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240B79E50(uint64_t a1)
{
  unint64_t v2 = sub_240B7CD00();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240B79E8C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240B7972C(a1, a2);
}

uint64_t sub_240B79EA4(void *a1)
{
  return sub_240B79540(a1);
}

unint64_t sub_240B79EBC()
{
  return 0xD000000000000013;
}

uint64_t sub_240B79ED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_240B7B4CC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_240B79F04(uint64_t a1)
{
  unint64_t v2 = sub_240B7BAC4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240B79F40(uint64_t a1)
{
  unint64_t v2 = sub_240B7BAC4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240B79F7C(void *a1)
{
  sub_240B7CD54(0, &qword_268CA1D68, (uint64_t (*)(void))sub_240B7BAC4, (uint64_t)&type metadata for RelatedSampleTypesCacheObject.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = sub_240BB4850();
  uint64_t v8 = sub_240B78DA4(v7);
  swift_bridgeObjectRelease();
  uint64_t v12 = v8;
  swift_getKeyPath();
  sub_240B7BB18(0, &qword_268CA1D50, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState, MEMORY[0x263F8D488]);
  sub_240B7BBE4();
  uint64_t v9 = sub_240BB6EA0();
  swift_release();
  swift_bridgeObjectRelease();
  sub_240A3466C(a1, a1[3]);
  sub_240B7BAC4();
  sub_240BB7C40();
  uint64_t v12 = v9;
  sub_240B7BC6C(&qword_268CA1D78, &qword_268CA1D80);
  sub_240BB7A90();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_240B7A1E0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_240B7B554(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_240B7A20C(void *a1)
{
  return sub_240B79F7C(a1);
}

uint64_t sub_240B7A228(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240BB2CF0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v67 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240B7BB18(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  char v10 = (char *)&v60 - v9;
  sub_240A5074C();
  uint64_t v71 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
  uint64_t v74 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v75 = (uint64_t)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v60 - v17;
  sub_240B7BB18(0, &qword_268CA1D90, (uint64_t (*)(uint64_t))sub_240B7BD2C, v7);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (uint64_t *)((char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = MEMORY[0x270FA5388](v20);
  char v25 = (uint64_t *)((char *)&v60 - v24);
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v72 = 0;
  uint64_t v68 = a1;
  uint64_t v26 = *(void *)(a1 + 64);
  uint64_t v62 = a1 + 64;
  uint64_t v27 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v28 = -1;
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  unint64_t v29 = v28 & v26;
  uint64_t v30 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  int v63 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  int64_t v64 = (unint64_t)(v27 + 63) >> 6;
  id v65 = v10;
  uint64_t v66 = (void (**)(uint64_t, uint64_t))(v5 + 8);
  int64_t v61 = v64 - 1;
  uint64_t v70 = a2;
  while (1)
  {
    if (v29)
    {
      unint64_t v31 = __clz(__rbit64(v29));
      uint64_t v32 = (v29 - 1) & v29;
      unint64_t v33 = v31 | (v72 << 6);
LABEL_9:
      uint64_t v34 = *(void *)(v68 + 56);
      uint64_t v35 = (void *)(*(void *)(v68 + 48) + 16 * v33);
      uint64_t v36 = v35[1];
      *uint64_t v22 = *v35;
      v22[1] = v36;
      uint64_t v37 = v34 + *(void *)(v74 + 72) * v33;
      sub_240B7BD2C();
      uint64_t v39 = v38;
      sub_240B7BB7C(v37, (uint64_t)v22 + *(int *)(v38 + 48), type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v22, 0, 1, v39);
      sub_240BB4850();
      goto LABEL_31;
    }
    int64_t v40 = v72 + 1;
    if (__OFADD__(v72, 1))
    {
      __break(1u);
      goto LABEL_47;
    }
    if (v40 < v64)
    {
      unint64_t v41 = *(void *)(v62 + 8 * v40);
      if (v41) {
        goto LABEL_13;
      }
      int64_t v42 = v72 + 2;
      ++v72;
      if (v40 + 1 < v64)
      {
        unint64_t v41 = *(void *)(v62 + 8 * v42);
        if (v41) {
          goto LABEL_16;
        }
        int64_t v72 = v40 + 1;
        if (v40 + 2 < v64)
        {
          unint64_t v41 = *(void *)(v62 + 8 * (v40 + 2));
          if (v41)
          {
            v40 += 2;
            goto LABEL_13;
          }
          int64_t v72 = v40 + 2;
          if (v40 + 3 < v64)
          {
            unint64_t v41 = *(void *)(v62 + 8 * (v40 + 3));
            if (v41)
            {
              v40 += 3;
              goto LABEL_13;
            }
            int64_t v42 = v40 + 4;
            int64_t v72 = v40 + 3;
            if (v40 + 4 < v64) {
              break;
            }
          }
        }
      }
    }
LABEL_30:
    sub_240B7BD2C();
    uint64_t v39 = v43;
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v22, 1, 1, v43);
    uint64_t v32 = 0;
LABEL_31:
    sub_240B7BE00((uint64_t)v22, (uint64_t)v25);
    sub_240B7BD2C();
    uint64_t v44 = 1;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v25, 1, v39) == 1) {
      return v44;
    }
    unint64_t v73 = v32;
    uint64_t v45 = (uint64_t)v25 + *(int *)(v39 + 48);
    uint64_t v46 = *v25;
    uint64_t v47 = v25[1];
    sub_240B7BD98(v45, (uint64_t)v18, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
    uint64_t v48 = v46;
    uint64_t v49 = v70;
    unint64_t v50 = sub_240AB9E08(v48, v47);
    char v52 = v51;
    swift_bridgeObjectRelease();
    if ((v52 & 1) == 0) {
      goto LABEL_43;
    }
    uint64_t v53 = *(void *)(v49 + 56) + *(void *)(v74 + 72) * v50;
    uint64_t v54 = v75;
    sub_240B7BB7C(v53, v75, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
    uint64_t v55 = (uint64_t)&v13[*(int *)(v71 + 48)];
    sub_240A496B8(v54, (uint64_t)v13);
    sub_240A496B8((uint64_t)v18, v55);
    uint64_t v56 = *v30;
    if ((*v30)(v13, 1, v4) == 1)
    {
      if (v56((char *)v55, 1, v4) != 1) {
        goto LABEL_41;
      }
      sub_240A49B18((uint64_t)v13);
    }
    else
    {
      uint64_t v57 = (uint64_t)v65;
      sub_240A496B8((uint64_t)v13, (uint64_t)v65);
      if (v56((char *)v55, 1, v4) == 1)
      {
        (*v66)(v57, v4);
LABEL_41:
        sub_240B7BE94((uint64_t)v13, (uint64_t (*)(void))sub_240A5074C);
LABEL_42:
        sub_240B7BE94(v75, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
LABEL_43:
        sub_240B7BE94((uint64_t)v18, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
        return 0;
      }
      uint64_t v58 = v67;
      (*v63)(v67, v55, v4);
      sub_240B7CDBC(&qword_268CA1D98, MEMORY[0x263F07490]);
      int v69 = sub_240BB6D90();
      uint64_t v59 = *v66;
      (*v66)(v57, v4);
      v59((uint64_t)v58, v4);
      sub_240A49B18((uint64_t)v13);
      if ((v69 & 1) == 0) {
        goto LABEL_42;
      }
    }
    sub_240B7BE94(v75, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
    uint64_t result = sub_240B7BE94((uint64_t)v18, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
    unint64_t v29 = v73;
  }
  unint64_t v41 = *(void *)(v62 + 8 * v42);
  if (v41)
  {
LABEL_16:
    int64_t v40 = v42;
LABEL_13:
    uint64_t v32 = (v41 - 1) & v41;
    unint64_t v33 = __clz(__rbit64(v41)) + (v40 << 6);
    int64_t v72 = v40;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v40 = v42 + 1;
    if (__OFADD__(v42, 1)) {
      break;
    }
    if (v40 >= v64)
    {
      int64_t v72 = v61;
      goto LABEL_30;
    }
    unint64_t v41 = *(void *)(v62 + 8 * v40);
    ++v42;
    if (v41) {
      goto LABEL_13;
    }
  }
LABEL_47:
  __break(1u);
  return result;
}

void sub_240B7AA48(uint64_t a1, char a2, void *a3)
{
  uint64_t v7 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7 - 8);
  char v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B0DC0C();
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (uint64_t *)((char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v59 = a1;
  uint64_t v60 = v8;
  char v17 = a2;
  uint64_t v57 = v3;
  uint64_t v58 = v16;
  uint64_t v18 = (uint64_t)v15 + *(int *)(v12 + 48);
  unint64_t v56 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v19 = a1 + v56;
  uint64_t v62 = *(void *)(v13 + 72);
  sub_240BB4850();
  sub_240B7BB7C(v19, (uint64_t)v15, (uint64_t (*)(void))sub_240B0DC0C);
  uint64_t v20 = v15[1];
  uint64_t v65 = *v15;
  uint64_t v21 = v65;
  uint64_t v66 = v20;
  uint64_t v61 = v18;
  sub_240B7BD98(v18, (uint64_t)v10, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
  uint64_t v22 = (void *)*a3;
  unint64_t v24 = sub_240AB9E08(v21, v20);
  uint64_t v25 = v22[2];
  BOOL v26 = (v23 & 1) == 0;
  uint64_t v27 = v25 + v26;
  if (__OFADD__(v25, v26)) {
    goto LABEL_23;
  }
  char v28 = v23;
  if (v22[3] >= v27)
  {
    if (v17)
    {
      if (v23) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_240B088B0();
      if (v28) {
        goto LABEL_10;
      }
    }
LABEL_13:
    unint64_t v33 = (void *)*a3;
    *(void *)(*a3 + 8 * (v24 >> 6) + 64) |= 1 << v24;
    uint64_t v34 = (uint64_t *)(v33[6] + 16 * v24);
    uint64_t *v34 = v21;
    v34[1] = v20;
    uint64_t v35 = v33[7];
    uint64_t v60 = *(void *)(v60 + 72);
    sub_240B7BD98((uint64_t)v10, v35 + v60 * v24, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
    uint64_t v36 = v33[2];
    BOOL v37 = __OFADD__(v36, 1);
    uint64_t v38 = v36 + 1;
    if (v37)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v33[2] = v38;
    uint64_t v39 = v58 - 1;
    if (v58 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v40 = v59 + v62 + v56;
    while (1)
    {
      sub_240B7BB7C(v40, (uint64_t)v15, (uint64_t (*)(void))sub_240B0DC0C);
      uint64_t v42 = v15[1];
      uint64_t v65 = *v15;
      uint64_t v41 = v65;
      uint64_t v66 = v42;
      sub_240B7BD98(v61, (uint64_t)v10, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
      uint64_t v43 = (void *)*a3;
      unint64_t v44 = sub_240AB9E08(v41, v42);
      uint64_t v46 = v43[2];
      BOOL v47 = (v45 & 1) == 0;
      BOOL v37 = __OFADD__(v46, v47);
      uint64_t v48 = v46 + v47;
      if (v37) {
        break;
      }
      char v49 = v45;
      if (v43[3] < v48)
      {
        sub_240B08000(v48, 1);
        unint64_t v44 = sub_240AB9E08(v41, v42);
        if ((v49 & 1) != (v50 & 1)) {
          goto LABEL_25;
        }
      }
      if (v49) {
        goto LABEL_10;
      }
      char v51 = (void *)*a3;
      *(void *)(*a3 + 8 * (v44 >> 6) + 64) |= 1 << v44;
      char v52 = (uint64_t *)(v51[6] + 16 * v44);
      *char v52 = v41;
      v52[1] = v42;
      sub_240B7BD98((uint64_t)v10, v51[7] + v60 * v44, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
      uint64_t v53 = v51[2];
      BOOL v37 = __OFADD__(v53, 1);
      uint64_t v54 = v53 + 1;
      if (v37) {
        goto LABEL_24;
      }
      void v51[2] = v54;
      v40 += v62;
      if (!--v39) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_240B08000(v27, v17 & 1);
  unint64_t v29 = sub_240AB9E08(v21, v20);
  if ((v28 & 1) == (v30 & 1))
  {
    unint64_t v24 = v29;
    if ((v28 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    unint64_t v31 = (void *)swift_allocError();
    swift_willThrow();
    id v67 = v31;
    id v32 = v31;
    sub_240A49AC0();
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_240B7BE94((uint64_t)v10, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_240BB7B30();
  __break(1u);
LABEL_26:
  uint64_t v63 = 0;
  unint64_t v64 = 0xE000000000000000;
  sub_240BB77C0();
  sub_240BB6E70();
  sub_240BB78B0();
  sub_240BB6E70();
  sub_240BB78D0();
  __break(1u);
}

uint64_t sub_240B7AFC0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

BOOL sub_240B7B048(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240BB2CF0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A5074C();
  uint64_t v9 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B7BB18(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v26 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v26 - v19;
  sub_240A496B8(a1, (uint64_t)&v26 - v19);
  sub_240A496B8(a2, (uint64_t)v18);
  uint64_t v21 = (uint64_t)&v11[*(int *)(v9 + 56)];
  sub_240A496B8((uint64_t)v20, (uint64_t)v11);
  sub_240A496B8((uint64_t)v18, v21);
  uint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v22((uint64_t)v11, 1, v4) == 1)
  {
    sub_240A49B18((uint64_t)v18);
    sub_240A49B18((uint64_t)v20);
    if (v22(v21, 1, v4) == 1)
    {
      sub_240A49B18((uint64_t)v11);
      return 1;
    }
    goto LABEL_6;
  }
  sub_240A496B8((uint64_t)v11, (uint64_t)v15);
  if (v22(v21, 1, v4) == 1)
  {
    sub_240A49B18((uint64_t)v18);
    sub_240A49B18((uint64_t)v20);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v15, v4);
LABEL_6:
    sub_240B7BE94((uint64_t)v11, (uint64_t (*)(void))sub_240A5074C);
    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v21, v4);
  sub_240B7CDBC(&qword_268CA1D98, MEMORY[0x263F07490]);
  char v23 = sub_240BB6D90();
  unint64_t v24 = *(void (**)(char *, uint64_t))(v5 + 8);
  v24(v7, v4);
  sub_240A49B18((uint64_t)v18);
  sub_240A49B18((uint64_t)v20);
  v24(v15, v4);
  sub_240A49B18((uint64_t)v11);
  return (v23 & 1) != 0;
}

uint64_t sub_240B7B3D4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_240B7B4CC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x8000000240BD4F70)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_240B7B554(void *a1)
{
  uint64_t v38 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState(0);
  uint64_t v36 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  char v3 = (uint64_t *)((char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_240B0DC0C();
  uint64_t v5 = v4;
  uint64_t v39 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (uint64_t *)((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_240B7CD54(0, &qword_268CA1D40, (uint64_t (*)(void))sub_240B7BAC4, (uint64_t)&type metadata for RelatedSampleTypesCacheObject.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v34 = *(void *)(v8 - 8);
  uint64_t v35 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v30 - v9;
  sub_240A3466C(a1, a1[3]);
  sub_240B7BAC4();
  uint64_t v11 = v37;
  sub_240BB7C30();
  uint64_t v12 = v11;
  if (v11)
  {
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
    return v5;
  }
  uint64_t v13 = v36;
  uint64_t v37 = v5;
  unint64_t v33 = a1;
  sub_240B7BB18(0, &qword_268CA1D50, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState, MEMORY[0x263F8D488]);
  sub_240B7BC6C(&qword_268CA1D58, &qword_268CA1D60);
  uint64_t v14 = v35;
  sub_240BB7A10();
  id v32 = v10;
  uint64_t v16 = v40;
  int64_t v17 = *(void *)(v40 + 16);
  if (v17)
  {
    uint64_t v31 = 0;
    uint64_t v40 = MEMORY[0x263F8EE78];
    uint64_t v18 = v16;
    sub_240B0CC44(0, v17, 0);
    uint64_t v19 = v18 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v36 = *(void *)(v13 + 72);
    uint64_t v20 = v40;
    do
    {
      sub_240B7BB7C(v19, (uint64_t)v3, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState);
      uint64_t v21 = (uint64_t)v7 + *(int *)(v37 + 48);
      uint64_t v22 = v3[1];
      void *v7 = *v3;
      v7[1] = v22;
      sub_240B7BB7C((uint64_t)v3 + *(int *)(v38 + 20), v21, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
      sub_240BB4850();
      sub_240B7BE94((uint64_t)v3, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_240B0CC44(0, *(void *)(v20 + 16) + 1, 1);
        uint64_t v20 = v40;
      }
      uint64_t v23 = v39;
      unint64_t v25 = *(void *)(v20 + 16);
      unint64_t v24 = *(void *)(v20 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_240B0CC44(v24 > 1, v25 + 1, 1);
        uint64_t v23 = v39;
        uint64_t v20 = v40;
      }
      *(void *)(v20 + 16) = v25 + 1;
      sub_240B7BD98((uint64_t)v7, v20+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v25, (uint64_t (*)(void))sub_240B0DC0C);
      v19 += v36;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    uint64_t v14 = v35;
    uint64_t v12 = v31;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = MEMORY[0x263F8EE78];
  }
  uint64_t v26 = v34;
  if (*(void *)(v20 + 16))
  {
    sub_240ABAA68();
    uint64_t v27 = sub_240BB7950();
  }
  else
  {
    uint64_t v27 = MEMORY[0x263F8EE80];
  }
  uint64_t v28 = (uint64_t)v33;
  uint64_t v40 = v27;
  uint64_t v29 = sub_240BB4850();
  sub_240B7AA48(v29, 1, &v40);
  if (!v12)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = v40;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v32, v14);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v28);
    return v5;
  }
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState(uint64_t a1)
{
  return sub_240A3E6AC(a1, (uint64_t *)&unk_268CA1DC8);
}

unint64_t sub_240B7BAC4()
{
  unint64_t result = qword_268CA1D48;
  if (!qword_268CA1D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1D48);
  }
  return result;
}

void sub_240B7BB18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_240B7BB7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_240B7BBE4()
{
  unint64_t result = qword_268CA1D70;
  if (!qword_268CA1D70)
  {
    sub_240B7BB18(255, &qword_268CA1D50, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1D70);
  }
  return result;
}

uint64_t sub_240B7BC6C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240B7BB18(255, &qword_268CA1D50, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState, MEMORY[0x263F8D488]);
    sub_240B7CDBC(a2, (void (*)(uint64_t))type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240B7BD2C()
{
  if (!qword_268CA1D88)
  {
    type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CA1D88);
    }
  }
}

uint64_t sub_240B7BD98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_240B7BE00(uint64_t a1, uint64_t a2)
{
  sub_240B7BB18(0, &qword_268CA1D90, (uint64_t (*)(uint64_t))sub_240B7BD2C, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_240B7BE94(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_240B7BEF4()
{
  unint64_t result = qword_268CA1DA8;
  if (!qword_268CA1DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1DA8);
  }
  return result;
}

ValueMetadata *type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState.CodingKeys()
{
  return &type metadata for RelatedSampleTypesCacheObject.DataTypeState.CodingKeys;
}

unsigned char *_s5Heart29RelatedSampleTypesCacheObjectV13DataTypeStateV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x240B7BFF8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RelatedSampleTypesCacheObject.CodingKeys()
{
  return &type metadata for RelatedSampleTypesCacheObject.CodingKeys;
}

uint64_t *sub_240B7C030(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    unint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_240BB2CF0();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    sub_240BB4850();
    if (v11(v8, 1, v9))
    {
      sub_240B7BB18(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t sub_240B7C1D0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_240BB2CF0();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_240B7C2A0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_240BB2CF0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  sub_240BB4850();
  if (v10(v7, 1, v8))
  {
    sub_240B7BB18(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *sub_240B7C3F0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_240BB2CF0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_240B7BB18(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *sub_240B7C5B4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_240BB2CF0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_240B7BB18(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *sub_240B7C6F4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_240BB2CF0();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_240B7BB18(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_240B7C8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240B7C8BC);
}

uint64_t sub_240B7C8BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_240B7C96C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240B7C980);
}

uint64_t sub_240B7C980(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_240B7CA28()
{
  sub_240B7BB18(319, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_240B7CAF4()
{
  unint64_t result = qword_268CA1DD8;
  if (!qword_268CA1DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1DD8);
  }
  return result;
}

unint64_t sub_240B7CB4C()
{
  unint64_t result = qword_268CA1DE0;
  if (!qword_268CA1DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1DE0);
  }
  return result;
}

unint64_t sub_240B7CBA4()
{
  unint64_t result = qword_268CA1DE8;
  if (!qword_268CA1DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1DE8);
  }
  return result;
}

unint64_t sub_240B7CBFC()
{
  unint64_t result = qword_268CA1DF0;
  if (!qword_268CA1DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1DF0);
  }
  return result;
}

unint64_t sub_240B7CC54()
{
  unint64_t result = qword_268CA1DF8;
  if (!qword_268CA1DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1DF8);
  }
  return result;
}

unint64_t sub_240B7CCAC()
{
  unint64_t result = qword_268CA1E00;
  if (!qword_268CA1E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1E00);
  }
  return result;
}

unint64_t sub_240B7CD00()
{
  unint64_t result = qword_268CA1E10;
  if (!qword_268CA1E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1E10);
  }
  return result;
}

void sub_240B7CD54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_240B7CDBC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240B7CED0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState.CodingKeys()
{
  return &type metadata for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState.CodingKeys;
}

unint64_t sub_240B7CF0C()
{
  unint64_t result = qword_268CA1E30;
  if (!qword_268CA1E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1E30);
  }
  return result;
}

unint64_t sub_240B7CF64()
{
  unint64_t result = qword_268CA1E38;
  if (!qword_268CA1E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1E38);
  }
  return result;
}

unint64_t sub_240B7CFBC()
{
  unint64_t result = qword_268CA1E40;
  if (!qword_268CA1E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1E40);
  }
  return result;
}

uint64_t type metadata accessor for CardioFitnessChartSection()
{
  uint64_t result = qword_268CA1E48;
  if (!qword_268CA1E48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240B7D05C()
{
  return swift_initClassMetadata2();
}

void sub_240B7D09C()
{
}

uint64_t sub_240B7D0CC()
{
  return type metadata accessor for CardioFitnessChartSection();
}

uint64_t sub_240B7D0D4()
{
  uint64_t v0 = sub_240BB4220();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB41F0();
  uint64_t v4 = sub_240BB4190();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_240B7D1AC()
{
  return sub_240BB5500();
}

void *sub_240B7D208()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

void *sub_240B7D230()
{
  uint64_t v1 = *(void **)(v0 + 40);
  id v2 = v1;
  return v1;
}

uint64_t sub_240B7D258(void *a1)
{
  return sub_240B7D294(a1);
}

uint64_t sub_240B7D294(void *a1)
{
  uint64_t v2 = v1;
  sub_240B7D974(v1 + 8, (uint64_t)&v12);
  sub_240B7D974((uint64_t)&v12, (uint64_t)&v13);
  uint64_t v4 = v13 & 1;
  id v5 = objc_msgSend(a1, sel_healthStore);
  id v6 = objc_msgSend(objc_allocWithZone((Class)HKHRCardioFitnessDataSource), sel_initWithHealthStore_classificationsAvailable_, v5, v4);

  sub_240BB6DE0();
  id v7 = v6;
  uint64_t v8 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_registerInteractiveChartViewControllerProvider_typeIdentifier_, v7, v8);

  if (*(void *)(v2 + 40)) {
    uint64_t v9 = (void *)sub_240BB7420();
  }
  else {
    uint64_t v9 = 0;
  }
  sub_240B7DA30();
  uint64_t v10 = sub_240BB4970();

  return v10;
}

unint64_t sub_240B7D3F8()
{
  return 0xD000000000000016;
}

unint64_t sub_240B7D418()
{
  unint64_t result = qword_268CA1E58;
  if (!qword_268CA1E58)
  {
    type metadata accessor for CardioFitnessChartSection();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1E58);
  }
  return result;
}

void destroy for CardioFitnessChartItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 40);
}

uint64_t initializeWithCopy for CardioFitnessChartItem(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  id v5 = *(void **)(a2 + 32);
  id v6 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  id v7 = v3;
  sub_240BB4850();
  id v8 = v5;
  id v9 = v6;
  return a1;
}

uint64_t assignWithCopy for CardioFitnessChartItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_240BB4850();
  swift_bridgeObjectRelease();
  id v7 = *(void **)(a1 + 32);
  id v8 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v8;
  id v9 = v8;

  uint64_t v10 = *(void **)(a1 + 40);
  uint64_t v11 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v11;
  id v12 = v11;

  return a1;
}

uint64_t assignWithTake for CardioFitnessChartItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  id v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  id v6 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  return a1;
}

ValueMetadata *type metadata accessor for CardioFitnessChartItem()
{
  return &type metadata for CardioFitnessChartItem;
}

uint64_t sub_240B7D630(void *a1, char a2, void *a3)
{
  uint64_t v6 = sub_240BB2D40();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v17[-2] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B7D8D0(0, &qword_268CA0B10, MEMORY[0x263F44068]);
  sub_240BB44D0();
  uint64_t v10 = swift_allocObject();
  long long v16 = xmmword_240BB97E0;
  *(_OWORD *)(v10 + 16) = xmmword_240BB97E0;
  sub_240B7D8D0(0, (unint64_t *)&qword_268C9E840, (void (*)(uint64_t))sub_240A47830);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = v16;
  *(void *)(v11 + 56) = &type metadata for CardioFitnessChartItem;
  *(void *)(v11 + 64) = sub_240B567A8();
  uint64_t v12 = swift_allocObject();
  *(void *)(v11 + 32) = v12;
  *(void *)(v12 + 16) = a1;
  *(unsigned char *)(v12 + 24) = a2;
  *(void *)(v12 + 32) = 0;
  *(void *)(v12 + 40) = 0;
  *(void *)(v12 + 48) = a3;
  *(void *)(v12 + 56) = 0;
  id v13 = a3;
  id v14 = a1;
  sub_240BB44B0();
  v17[0] = 0;
  v17[1] = 0xE000000000000000;
  sub_240BB77C0();
  swift_bridgeObjectRelease();
  strcpy((char *)v17, "MutableArray<");
  HIWORD(v17[1]) = -4864;
  sub_240BB2D30();
  sub_240BB2D00();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return sub_240BB45E0();
}

void sub_240B7D8D0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240BB7AB0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_240B7D924()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_240B7D974(uint64_t a1, uint64_t a2)
{
  sub_240B7D9D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_240B7D9D8()
{
  if (!qword_268CA1E60)
  {
    unint64_t v0 = sub_240BB75E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA1E60);
    }
  }
}

unint64_t sub_240B7DA30()
{
  unint64_t result = qword_268CA1E68;
  if (!qword_268CA1E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1E68);
  }
  return result;
}

double sub_240B7DA84(void *a1, char a2, uint64_t a3)
{
  if (!a2)
  {
    id v9 = objc_msgSend(self, sel_sleepDurationNoDataRange);
    id v10 = objc_msgSend(self, sel_secondUnit);
    double v3 = sub_240B7DBA8((uint64_t)v10);

    return v3;
  }
  double v3 = 0.0;
  if (a2 == 1)
  {
    id v5 = a1;
    id v6 = objc_msgSend(v5, sel_hk_axisScalingRuleForChartSizeClass_unitController_, 1, a3);
    if (v6)
    {
      id v7 = objc_msgSend(v6, sel_noDataStartingRange);
      if (v7)
      {
        uint64_t v8 = v7;
        double v3 = sub_240B7DDC4();

        sub_240BB50A0();
        return v3;
      }
      sub_240BB50A0();
    }
  }
  return v3;
}

double sub_240B7DBA8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  sub_240A3FB28();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(v2, sel_minValue);
  if (v10)
  {
    uint64_t v11 = v10;
    objc_msgSend(v10, sel_doubleValueForUnit_, a1);
    double v13 = v12;

    id v14 = objc_msgSend(v2, sel_maxValue);
    if (v14)
    {
      uint64_t v15 = v14;
      objc_msgSend(v14, sel_doubleValueForUnit_, a1);
      double v17 = v16;

      if (v13 <= v17) {
        return v13;
      }
      __break(1u);
    }
  }
  if (qword_26AFD7158 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_240A395FC(v6, (uint64_t)qword_26AFDEB68);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v18, v6);
  *(void *)(swift_allocObject() + 16) = ObjectType;
  v20[1] = 0;
  sub_240BB5730();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return 0.0;
}

double sub_240B7DDC4()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  sub_240A3FB28();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(v1, sel_minValue);
  if (v8)
  {
    id v9 = v8;
    objc_msgSend(v8, sel_doubleValue);
    double v11 = v10;

    id v12 = objc_msgSend(v1, sel_maxValue);
    if (v12)
    {
      double v13 = v12;
      objc_msgSend(v12, sel_doubleValue);
      double v15 = v14;

      if (v11 <= v15) {
        return v11;
      }
      __break(1u);
    }
  }
  if (qword_26AFD7158 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_240A395FC(v4, (uint64_t)qword_26AFDEB68);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v16, v4);
  *(void *)(swift_allocObject() + 16) = ObjectType;
  v18[1] = 0;
  sub_240BB5730();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return 0.0;
}

uint64_t sub_240B7DFD4(uint64_t a1, void *a2, unsigned __int8 a3, void *a4)
{
  if (a3 >= 2u)
  {
    id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F463E8]), sel_init);
    id v9 = 0;
  }
  else
  {
    id v6 = a2;
    id v7 = objc_msgSend(v6, sel_hk_dimensionForChartAxisWithUnitController_, a4);
    if (!v7) {
      id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F463E8]), sel_init);
    }
    id v8 = objc_msgSend(v6, sel_chartingRules);
    id v9 = objc_msgSend(v8, sel_axisScalingRule);

    id v10 = objc_msgSend(a4, sel_unitForDisplayType_, v6);
    if (v10)
    {
      if (v9 && (objc_msgSend(v9, sel_respondsToSelector_, sel_setUnit_) & 1) != 0) {
        objc_msgSend(v9, sel_setUnit_, v10);
      }
    }
  }
  double v11 = (void *)sub_240BB6FF0();
  id v12 = (void *)sub_240BB6FF0();
  id v13 = objc_msgSend(self, sel_valueRangeWithMinValue_maxValue_, v11, v12);

  if (v9) {
    id v14 = objc_msgSend(v9, sel_yValueRangeForRange_zoomLevel_, v13, 3);
  }
  else {
    id v14 = v13;
  }
  double v15 = v14;
  id v16 = objc_msgSend(v14, sel_minValue);
  id v17 = objc_msgSend(v15, sel_maxValue);
  id v18 = objc_msgSend(self, sel_valueRangeWithMinValue_maxValue_, v16, v17);

  id v19 = objc_msgSend(self, sel_ticksAndLabelsForRangeInModelCoordinates_maximumLabelCount_endingOptions_dimension_, v18, a1, 0, v7);
  if (v19)
  {
    uint64_t v20 = v19;
    sub_240A34DC4(0, &qword_268CA1E80);
    uint64_t v21 = sub_240BB6F10();

    sub_240BB50A0();
  }
  else
  {

    sub_240BB50A0();
    uint64_t v21 = 0;
  }
  sub_240BB50A0();
  return v21;
}

uint64_t sub_240B7E2AC@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v99 = a5;
  uint64_t v98 = a4;
  int v97 = a3;
  uint64_t v96 = a2;
  sub_240B7FB30(0, &qword_268CA1E70, (void (*)(uint64_t))sub_240A61D4C, (void (*)(uint64_t))sub_240B7F894);
  uint64_t v90 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v89 = (char *)&v84 - v9;
  uint64_t v86 = sub_240BB5C30();
  uint64_t v85 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  double v11 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B7F894();
  uint64_t v88 = v12;
  uint64_t v87 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v107 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v106 = (char *)&v84 - v15;
  uint64_t v16 = sub_240BB5F40();
  uint64_t v101 = *(void *)(v16 - 8);
  uint64_t v102 = (void (*)(void, void, void))v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v100 = (char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_240BB5DD0();
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v19 = sub_240BB5E00();
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A84684();
  uint64_t v23 = v22;
  uint64_t v93 = *((void *)v22 - 1);
  MEMORY[0x270FA5388](v22);
  unint64_t v25 = (char *)&v84 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A61E60();
  uint64_t v95 = v26;
  uint64_t v94 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v84 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A61D4C();
  uint64_t v30 = v29;
  uint64_t v110 = (void *)*((void *)v29 - 1);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v105 = (char *)&v84 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v92 = (char *)&v84 - v34;
  MEMORY[0x270FA5388](v33);
  uint64_t v109 = (char *)&v84 - v35;
  uint64_t v36 = sub_240BB5F30();
  uint64_t v91 = a6;
  uint64_t v103 = v30;
  uint64_t v104 = (void (*)(void, void, void))v11;
  uint64_t v108 = a1;
  if (v36)
  {
    uint64_t v37 = (void (*)(char *, char *, char *))sub_240BB5F30();
    uint64_t v38 = sub_240BB5F20();
    if (__OFSUB__(v38, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v37 == (void (*)(char *, char *, char *))(v38 - 1)) {
      uint64_t v39 = sub_240BB6B60();
    }
    else {
      uint64_t v39 = sub_240BB6B80();
    }
  }
  else
  {
    uint64_t v39 = sub_240BB6B70();
  }
  MEMORY[0x270FA5388](v39);
  sub_240BB5DF0();
  sub_240BB5DC0();
  sub_240A61FBC();
  uint64_t v82 = v40;
  unint64_t v83 = sub_240A62074();
  uint64_t v80 = sub_240B7F92C;
  uint64_t v81 = &v76;
  char v79 = 0;
  uint64_t v78 = 0;
  char v77 = 0;
  uint64_t v76 = 0x4010000000000000;
  sub_240BB5D20();
  if (qword_268C9E720 != -1) {
    swift_once();
  }
  uint64_t v112 = qword_268CA2B38;
  uint64_t v41 = sub_240B7FBAC((unint64_t *)&qword_268C9F140, (void (*)(uint64_t))sub_240A84684);
  uint64_t v42 = MEMORY[0x263F1B440];
  uint64_t v43 = MEMORY[0x263F1B420];
  sub_240BB5E40();
  (*(void (**)(char *, void (*)(void, void, void)))(v93 + 8))(v25, v23);
  unint64_t v44 = v102;
  double v11 = v103;
  if (qword_268C9E728 != -1) {
    swift_once();
  }
  uint64_t v112 = (uint64_t)v23;
  uint64_t v113 = v42;
  uint64_t v114 = v41;
  uint64_t v115 = v43;
  swift_getOpaqueTypeConformance2();
  char v45 = v92;
  uint64_t v46 = v95;
  sub_240BB5E50();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v28, v46);
  uint64_t v21 = (char *)(v110 + 4);
  uint64_t v37 = (void (*)(char *, char *, char *))v110[4];
  v37(v109, v45, v11);
  BOOL v47 = v108;
  uint64_t v48 = sub_240BB5F30();
  char v50 = v100;
  uint64_t v49 = v101;
  (*(void (**)(char *, char *, void))(v101 + 16))(v100, v47, v44);
  uint64_t v23 = v104;
  if (!v48)
  {
    (*(void (**)(char *, void (*)(void, void, void)))(v49 + 8))(v50, v44);
    goto LABEL_17;
  }
  uint64_t v51 = sub_240BB5F30();
  uint64_t v52 = sub_240BB5F20();
  (*(void (**)(char *, void (*)(void, void, void)))(v49 + 8))(v50, v44);
  if (__OFSUB__(v52, 1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v51 != v52 - 1)
  {
    if (qword_268C9E718 == -1)
    {
LABEL_15:
      uint64_t v53 = &xmmword_268CA2B10;
      goto LABEL_20;
    }
LABEL_25:
    swift_once();
    goto LABEL_15;
  }
LABEL_17:
  if (qword_268C9E710 != -1) {
    swift_once();
  }
  uint64_t v53 = &xmmword_268CA2AE8;
LABEL_20:
  uint64_t v54 = v11;
  uint64_t v102 = (void (*)(void, void, void))v37;
  uint64_t v108 = v21;
  uint64_t v55 = *((void *)v53 + 2);
  uint64_t v56 = *(void *)v53;
  uint64_t v57 = *((void *)v53 + 4);
  uint64_t v58 = *((void *)v53 + 1);
  uint64_t v59 = sub_240BB4850();
  uint64_t v112 = v56;
  uint64_t v113 = v58;
  uint64_t v114 = v55;
  uint64_t v115 = v59;
  uint64_t v116 = v57;
  sub_240BB5C20();
  if (qword_268C9E708 != -1) {
    swift_once();
  }
  uint64_t v111 = qword_268CA2AE0;
  uint64_t v60 = v107;
  uint64_t v61 = v86;
  sub_240BB5E40();
  (*(void (**)(void (*)(void, void, void), uint64_t))(v85 + 8))(v23, v61);
  uint64_t v62 = v87;
  uint64_t v63 = *(void (**)(void, void, void))(v87 + 32);
  uint64_t v101 = v87 + 32;
  uint64_t v104 = v63;
  unint64_t v64 = v106;
  uint64_t v65 = v88;
  v63(v106, v60, v88);
  uint64_t v66 = (void (*)(char *, char *, char *))v110[2];
  id v67 = v105;
  v66(v105, v109, v54);
  uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
  v68(v60, v64, v65);
  int v69 = v89;
  v66(v89, v67, v54);
  uint64_t v70 = v90;
  uint64_t v71 = &v69[*(int *)(v90 + 48)];
  v68(v71, v60, v65);
  uint64_t v72 = v91;
  v102(v91, v69, v54);
  v104(v72 + *(int *)(v70 + 48), v71, v65);
  unint64_t v73 = *(void (**)(char *, uint64_t))(v62 + 8);
  v73(v106, v65);
  uint64_t v74 = (void (*)(char *, char *))v110[1];
  v74(v109, v54);
  v73(v107, v65);
  return ((uint64_t (*)(char *, char *))v74)(v105, v54);
}

uint64_t sub_240B7EDA0@<X0>(unint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t result = sub_240BB5F10();
  if (v14)
  {
    __break(1u);
  }
  else
  {
    sub_240B7F940(a1, v13);
    sub_240A46960();
    uint64_t v5 = sub_240BB68D0();
    uint64_t v7 = v6;
    char v9 = v8;
    uint64_t v11 = v10;
    if (qword_268C9E730 != -1) {
      swift_once();
    }
    uint64_t v12 = qword_268CA2B48;
    uint64_t result = swift_getKeyPath();
    *(void *)a2 = v5;
    *(void *)(a2 + 8) = v7;
    *(unsigned char *)(a2 + 16) = v9 & 1;
    *(void *)(a2 + 24) = v11;
    *(void *)(a2 + 32) = result;
    *(void *)(a2 + 40) = v12;
  }
  return result;
}

uint64_t sub_240B7EEA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v37 = a1;
  sub_240B7FB30(0, &qword_268CA1E78, MEMORY[0x263EFCB08], MEMORY[0x263EFCD40]);
  uint64_t v36 = v1 - 8;
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v35 = (char *)&v30 - v2;
  uint64_t v3 = sub_240BB5E70();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v34 = sub_240BB5E90();
  uint64_t v30 = *(void *)(v34 - 8);
  uint64_t v4 = v30;
  uint64_t v5 = MEMORY[0x270FA5388](v34);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v30 - v8;
  uint64_t v10 = sub_240BB5C30();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  char v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v40 = 0;
  long long v38 = 0u;
  long long v39 = 0u;
  uint64_t v16 = (char *)&v30 - v15;
  uint64_t v33 = (char *)&v30 - v15;
  sub_240BB5C20();
  sub_240BB5E60();
  uint64_t v32 = v9;
  sub_240BB5E80();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v17(v14, v16, v10);
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  uint64_t v31 = v7;
  uint64_t v19 = v34;
  v18(v7, v9, v34);
  uint64_t v20 = v35;
  v17(v35, v14, v10);
  uint64_t v21 = v36;
  uint64_t v22 = &v20[*(int *)(v36 + 56)];
  uint64_t v23 = v7;
  uint64_t v24 = v19;
  v18(v22, v23, v19);
  uint64_t v25 = v37;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v37, v20, v10);
  uint64_t v26 = v30;
  (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v25 + *(int *)(v21 + 56), v22, v24);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v26 + 8);
  v27(v32, v24);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v11 + 8);
  v28(v33, v10);
  v27(v31, v24);
  return ((uint64_t (*)(char *, uint64_t))v28)(v14, v10);
}

uint64_t sub_240B7F248()
{
  return 0;
}

void sub_240B7F310(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_31;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_240BB4850();
  for (; v2; uint64_t v2 = sub_240BB7900())
  {
    unint64_t v3 = 0;
    unint64_t v4 = a1 & 0xC000000000000001;
    while (1)
    {
      if (v4)
      {
        id v5 = (id)MEMORY[0x24560AAA0](v3, a1);
      }
      else
      {
        if (v3 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_30;
        }
        id v5 = *(id *)(a1 + 8 * v3 + 32);
      }
      uint64_t v6 = v5;
      unint64_t v7 = v3 + 1;
      if (__OFADD__(v3, 1)) {
        break;
      }
      id v8 = objc_msgSend(v5, sel_text);
      if (v8)
      {
        char v9 = v8;
        sub_240BB6DE0();

        uint64_t v10 = sub_240BB6E60();
        swift_bridgeObjectRelease();
        if (v10 > 0)
        {
          id v11 = objc_msgSend(v6, sel_location);
          sub_240BB7650();
          sub_240BB50A0();
          sub_240A34DC4(0, (unint64_t *)&qword_268CA10E0);
          if (swift_dynamicCast())
          {
            objc_msgSend(v21, sel_doubleValue);

            if (v7 == v2) {
              goto LABEL_16;
            }
          }
          else
          {

            if (v7 == v2) {
              goto LABEL_16;
            }
          }
          unint64_t v12 = v3 + 5;
          while (1)
          {
            unint64_t v13 = v12 - 4;
            if (v4)
            {
              id v14 = (id)MEMORY[0x24560AAA0](v12 - 4, a1);
            }
            else
            {
              if (v13 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_30;
              }
              id v14 = *(id *)(a1 + 8 * v12);
            }
            uint64_t v15 = v14;
            unint64_t v16 = v12 - 3;
            if (__OFADD__(v13, 1)) {
              goto LABEL_29;
            }
            id v17 = objc_msgSend(v14, sel_text);
            if (v17)
            {
              uint64_t v18 = v17;
              sub_240BB6DE0();

              uint64_t v19 = sub_240BB6E60();
              swift_bridgeObjectRelease();
              if (v19 > 0)
              {
                swift_bridgeObjectRelease();
                id v20 = objc_msgSend(v15, sel_location);
                sub_240BB7650();
                sub_240BB50A0();
                if (swift_dynamicCast())
                {
                  objc_msgSend(v21, sel_doubleValue);
                }
                else
                {
                }
                return;
              }
            }

            ++v12;
            if (v16 == v2) {
              goto LABEL_16;
            }
          }
        }
      }

      ++v3;
      if (v7 == v2) {
        goto LABEL_16;
      }
    }
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    sub_240BB4850();
  }
LABEL_16:
  swift_bridgeObjectRelease();
}

void sub_240B7F644(unint64_t a1)
{
  uint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_240BB4850();
  if (!v2)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return;
  }
  while (1)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      id v4 = (id)MEMORY[0x24560AAA0](0, v1);
      swift_bridgeObjectRelease();
      BOOL v13 = __OFSUB__(v2, 1);
      uint64_t v14 = v2 - 1;
      if (v13) {
        goto LABEL_24;
      }
      sub_240BB4850();
      id v6 = (id)MEMORY[0x24560AAA0](v14, v1);
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    unint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      break;
    }
    id v4 = *(id *)(v1 + 32);
    swift_bridgeObjectRelease();
    unint64_t v5 = v2 - 1;
    if (__OFSUB__(v2, 1)) {
      goto LABEL_22;
    }
    if (v5 >= v3) {
      goto LABEL_23;
    }
    id v6 = *(id *)(v1 + 32 + 8 * v5);
LABEL_8:
    id v7 = objc_msgSend(v4, sel_location);
    sub_240BB7650();
    sub_240BB50A0();
    uint64_t v1 = sub_240A34DC4(0, (unint64_t *)&qword_268CA10E0);
    if (swift_dynamicCast())
    {
      objc_msgSend(v15, sel_doubleValue);
      double v9 = v8;
    }
    else
    {
      double v9 = 0.0;
    }
    id v10 = objc_msgSend(v6, sel_location);
    sub_240BB7650();
    sub_240BB50A0();
    if (swift_dynamicCast())
    {
      uint64_t v1 = (uint64_t)v15;
      objc_msgSend(v15, sel_doubleValue);
      double v12 = v11;

      if (v9 <= v12) {
        return;
      }
      __break(1u);
    }

    if (v9 <= 0.0) {
      return;
    }
    __break(1u);
LABEL_16:
    sub_240BB4850();
    uint64_t v2 = sub_240BB7900();
    if (!v2) {
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
}

void sub_240B7F894()
{
  if (!qword_268C9F148)
  {
    sub_240BB5C30();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9F148);
    }
  }
}

uint64_t sub_240B7F92C@<X0>(uint64_t a1@<X8>)
{
  return sub_240B7EDA0(*(void *)(v1 + 40), a1);
}

uint64_t sub_240B7F940(unint64_t a1, double a2)
{
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_240BB4850();
  for (; v4; uint64_t v4 = sub_240BB7900())
  {
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24560AAA0](v5 - 4, a1) : *(id *)(a1 + 8 * v5);
      id v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      id v9 = objc_msgSend(v6, sel_location);
      sub_240BB7650();
      sub_240BB50A0();
      sub_240A34DC4(0, (unint64_t *)&qword_268CA10E0);
      if (swift_dynamicCast())
      {
        objc_msgSend(v16, sel_doubleValue);
        double v11 = v10;
      }
      else
      {
        double v11 = 0.0;
      }
      id v12 = objc_msgSend(v7, sel_text);
      if (v12)
      {
        BOOL v13 = v12;
        uint64_t v14 = sub_240BB6DE0();

        if (vabdd_f64(v11, a2) <= 2.22044605e-16)
        {
          swift_bridgeObjectRelease();
          return v14;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
      }
      ++v5;
      if (v8 == v4) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_18:
    sub_240BB4850();
  }
LABEL_19:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_240B7FB30(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_240B7FBAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240B7FBF4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B7FC04()
{
  return sub_240B7F248();
}

uint64_t sub_240B7FC38()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B7FC48()
{
  return sub_240B7F248();
}

uint64_t destroy for AFibBurdenPDFChartVerticalAxisProvider.AxisResult(uint64_t a1)
{
  return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 16);
}

_OWORD *initializeWithCopy for AFibBurdenPDFChartVerticalAxisProvider.AxisResult(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  long long v3 = *(_OWORD *)((char *)a2 + 40);
  *(_OWORD *)((char *)a1 + 40) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))((uint64_t)(a1 + 1), (uint64_t)(a2 + 1));
  return a1;
}

void *assignWithCopy for AFibBurdenPDFChartVerticalAxisProvider.AxisResult(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_240A51F9C(a1 + 2, a2 + 2);
  return a1;
}

uint64_t assignWithTake for AFibBurdenPDFChartVerticalAxisProvider.AxisResult(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for AFibBurdenPDFChartVerticalAxisProvider.AxisResult(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AFibBurdenPDFChartVerticalAxisProvider.AxisResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFChartVerticalAxisProvider.AxisResult()
{
  return &type metadata for AFibBurdenPDFChartVerticalAxisProvider.AxisResult;
}

uint64_t initializeBufferWithCopyOfBuffer for AFibBurdenPDFChartVerticalAxisProvider(uint64_t a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  id v6 = v3;
  id v7 = v5;
  return a1;
}

void destroy for AFibBurdenPDFChartVerticalAxisProvider(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 16);
}

uint64_t assignWithCopy for AFibBurdenPDFChartVerticalAxisProvider(uint64_t a1, uint64_t a2)
{
  char v4 = *(void **)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  id v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v5;
  id v7 = v4;

  uint64_t v8 = *(void **)(a2 + 16);
  id v9 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v8;
  id v10 = v8;

  return a1;
}

uint64_t assignWithTake for AFibBurdenPDFChartVerticalAxisProvider(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  char v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;

  id v6 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for AFibBurdenPDFChartVerticalAxisProvider(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AFibBurdenPDFChartVerticalAxisProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFChartVerticalAxisProvider()
{
  return &type metadata for AFibBurdenPDFChartVerticalAxisProvider;
}

uint64_t initializeBufferWithCopyOfBuffer for AFibBurdenPDFChartVerticalAxisProvider.AxisStyle(uint64_t a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v5 = v3;
  return a1;
}

uint64_t assignWithCopy for AFibBurdenPDFChartVerticalAxisProvider.AxisStyle(uint64_t a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v6 = v3;

  return a1;
}

uint64_t assignWithTake for AFibBurdenPDFChartVerticalAxisProvider.AxisStyle(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;

  return a1;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFChartVerticalAxisProvider.AxisStyle()
{
  return &type metadata for AFibBurdenPDFChartVerticalAxisProvider.AxisStyle;
}

uint64_t sub_240B800B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v20 = a3;
  uint64_t v21 = a1;
  sub_240A3FF50(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B806CC(0, (unint64_t *)&unk_26AFD8AA0, (uint64_t (*)(uint64_t))sub_240A3FF50, MEMORY[0x263EFDDF8]);
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = sub_240BB3240();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  BOOL v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_240BB32A0();
  MEMORY[0x270FA5388](v14);
  (*(void (**)(char *, uint64_t))(v16 + 16))((char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v20, v10);
  sub_240A1F890(v21, (uint64_t)v8, (uint64_t (*)(void))sub_240A3FF50);
  sub_240BB6200();
  uint64_t v17 = sub_240BB32E0();
  uint64_t v18 = MEMORY[0x263F456B8];
  a4[3] = v17;
  a4[4] = v18;
  sub_240A23B08(a4);
  sub_240A3B1B8();
  return sub_240BB32D0();
}

uint64_t sub_240B80370()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Heart36AFibBurdenRescindedGeneratorPipeline_domain;
  uint64_t v2 = sub_240BB3240();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_240B80420()
{
  return type metadata accessor for AFibBurdenRescindedGeneratorPipeline();
}

uint64_t sub_240B80428@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_240AEA374();
  *a1 = result;
  return result;
}

uint64_t sub_240B80450()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B80488@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240AE9A00(*(void **)(v2 + 16), *a1, a2);
}

uint64_t sub_240B80498()
{
  uint64_t v1 = sub_240BB32A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_240BB3240();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return MEMORY[0x270FA0238](v0, v10, v11);
}

uint64_t sub_240B805E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_240BB32A0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_240BB3240() - 8);
  uint64_t v9 = v2 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  return sub_240B800B0(a1, v2 + v6, v9, a2);
}

void sub_240B806CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for AFibBurdenSpecifierDataSource(uint64_t a1)
{
  return sub_240A3E6AC(a1, (uint64_t *)&unk_268CA1EC8);
}

void sub_240B80750()
{
  sub_240A3EDEC(319, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t sub_240B8086C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = _s14descr26F502E21O15SettingsContentVMa();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3EDEC(0, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = sub_240BB3660();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  BOOL v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v1 + qword_268CA1EB8;
  swift_beginAccess();
  sub_240B859C4(v14, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3))
  {
    sub_240B86F7C((uint64_t)v9, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa);
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(v11 + 104))(a1, *MEMORY[0x263F435D0], v10);
  }
  else
  {
    sub_240A73154((uint64_t)v9, (uint64_t)v6);
    sub_240B86F7C((uint64_t)v9, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v6, v10);
    sub_240A73200((uint64_t)v6);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a1, v13, v10);
  }
}

uint64_t sub_240B80B20()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v52 = sub_240BB6BA0();
  uint64_t v51 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  char v50 = (char *)&v44 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_240BB73C0();
  uint64_t v55 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  BOOL v47 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = (void (*)(uint64_t))MEMORY[0x263F07CB0];
  uint64_t v57 = sub_240B86D68;
  sub_240B86EA0(0, &qword_268CA1F00, MEMORY[0x263F07CB0], (void (*)(void))sub_240B86D68);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v59 = v3;
  uint64_t v60 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v49 = (char *)&v44 - v5;
  sub_240B86D9C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v61 = v6;
  uint64_t v62 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v54 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v64 = sub_240B86D9C;
  uint64_t v63 = sub_240B86F48;
  sub_240B86EA0(0, &qword_268CA1F18, (void (*)(uint64_t))sub_240B86D9C, (void (*)(void))sub_240B86F48);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v65 = v9;
  uint64_t v66 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v56 = (char *)&v44 - v11;
  uint64_t v12 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F110];
  uint64_t v48 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  char v45 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F110];
  sub_240A3EDEC(0, (unint64_t *)&unk_26AFD9960, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v44 - v14;
  uint64_t v46 = sub_240A22390;
  unint64_t v44 = sub_240A3B92C;
  sub_240B86EA0(0, (unint64_t *)&qword_268C9F8C0, (void (*)(uint64_t))sub_240A22390, (void (*)(void))sub_240A3B92C);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v44 - v19;
  sub_240A3466C((void *)(v0 + qword_268CA1E98), *(void *)(v0 + qword_268CA1E98 + 24));
  id v73 = (id)sub_240BB5790();
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9980);
  id v74 = (id)sub_240BB7310();
  uint64_t v70 = sub_240BB72F0();
  uint64_t v21 = *(void *)(v70 - 8);
  int v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v71 = v21 + 56;
  v69(v15, 1, 1, v70);
  sub_240A22390();
  sub_240A3B92C();
  unint64_t v68 = sub_240A805DC();
  sub_240BB6400();
  sub_240B86F7C((uint64_t)v15, (unint64_t *)&unk_26AFD9960, v12);

  swift_release();
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v67;
  swift_unknownObjectWeakInit();
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = ObjectType;
  *(void *)(v24 + 16) = v22;
  *(void *)(v24 + 24) = v25;
  sub_240B87068(&qword_268C9F8C8, (unint64_t *)&qword_268C9F8C0, (void (*)(uint64_t))v46, (void (*)(void))v44);
  sub_240BB6450();
  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  uint64_t v46 = (void (*)())(v23 + qword_268CA1EA0);
  swift_beginAccess();
  sub_240BB6120();
  swift_endAccess();
  swift_release();
  id v26 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v27 = v47;
  sub_240BB73D0();

  uint64_t v28 = v51;
  uint64_t v29 = v50;
  uint64_t v30 = v52;
  (*(void (**)(char *, void, uint64_t))(v51 + 104))(v50, *MEMORY[0x263F8F068], v52);
  uint64_t v31 = (void *)sub_240BB7350();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);
  id v73 = v31;
  v69(v15, 1, 1, v70);
  sub_240B86D68();
  uint64_t v32 = v49;
  uint64_t v33 = v53;
  sub_240BB6400();
  uint64_t v34 = v45;
  sub_240B86F7C((uint64_t)v15, (unint64_t *)&unk_26AFD9960, v45);

  (*(void (**)(char *, uint64_t))(v55 + 8))(v27, v33);
  uint64_t v35 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v36 = swift_allocObject();
  uint64_t v37 = ObjectType;
  *(void *)(v36 + 16) = v35;
  *(void *)(v36 + 24) = v37;
  sub_240A3EDEC(0, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa, v48);
  sub_240B87068(&qword_268CA1F10, &qword_268CA1F00, v58, (void (*)(void))v57);
  long long v38 = v54;
  uint64_t v39 = v59;
  sub_240BB6390();
  swift_release();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v32, v39);
  id v73 = (id)sub_240BB7310();
  v69(v15, 1, 1, v70);
  sub_240B86F48();
  uint64_t v40 = v56;
  uint64_t v41 = v61;
  sub_240BB6400();
  sub_240B86F7C((uint64_t)v15, (unint64_t *)&unk_26AFD9960, v34);

  (*(void (**)(char *, uint64_t))(v62 + 8))(v38, v41);
  *(void *)(swift_allocObject() + 16) = v37;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_240B87068(&qword_268CA1F28, &qword_268CA1F18, (void (*)(uint64_t))v64, (void (*)(void))v63);
  uint64_t v42 = v65;
  sub_240BB6340();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v40, v42);
  swift_beginAccess();
  sub_240BB6120();
  swift_endAccess();
  return swift_release();
}

void sub_240B81564(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a3;
  sub_240A3EDEC(0, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v31 - v6;
  uint64_t v8 = sub_240BB56E0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3FB28();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v17 = MEMORY[0x24560BA20](a2 + 16);
  if (v17)
  {
    uint64_t v18 = (char *)v17;
    uint64_t v33 = v7;
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_240A395FC(v13, (uint64_t)qword_26AFDEB68);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v19, v13);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))((char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
    uint64_t v20 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v32 = a1;
    uint64_t v21 = (v20 + 16) & ~v20;
    unint64_t v22 = (v10 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v23 = swift_allocObject();
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v23 + v21, v11, v8);
    *(void *)(v23 + v22) = v34;
    v35[0] = 0;
    sub_240BB5700();
    swift_release();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v25 = *(void *)&v18[qword_268CA1EC0 + 24];
    uint64_t v24 = *(void *)&v18[qword_268CA1EC0 + 32];
    id v26 = sub_240A3466C(&v18[qword_268CA1EC0], v25);
    v35[3] = v25;
    v35[4] = *(void *)(v24 + 8);
    uint64_t v27 = sub_240A23B08(v35);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v27, v26, v25);
    uint64_t v28 = (uint64_t)v33;
    sub_240B2A748(v32, v35, (uint64_t)v33);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v35);
    uint64_t v29 = (uint64_t)&v18[qword_268CA1EB8];
    swift_beginAccess();
    sub_240A7325C(v28, v29);
    swift_endAccess();
    uint64_t v30 = &v18[qword_268CA2BE8];
    swift_beginAccess();
    if (MEMORY[0x24560BA20](v30))
    {
      swift_getObjectType();
      sub_240BB4F80();

      sub_240BB50A0();
    }
    else
    {
    }
  }
}

uint64_t sub_240B81964()
{
  return 0;
}

void sub_240B81A40(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_240BB56E0();
  uint64_t v26 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3FB28();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v15 = MEMORY[0x24560BA20](a1 + 16);
  if (v15)
  {
    uint64_t v16 = (char *)v15;
    uint64_t v24 = a3;
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_240A395FC(v11, (uint64_t)qword_26AFDEB68);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v17, v11);
    *(void *)(swift_allocObject() + 16) = a2;
    v25[0] = 0;
    sub_240BB5700();
    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    sub_240A3466C(&v16[qword_268CA1E98], *(void *)&v16[qword_268CA1E98 + 24]);
    sub_240BB5770();
    if (v3)
    {
    }
    else
    {
      uint64_t v19 = *(void *)&v16[qword_268CA1EC0 + 24];
      uint64_t v20 = *(void *)&v16[qword_268CA1EC0 + 32];
      uint64_t v21 = sub_240A3466C(&v16[qword_268CA1EC0], v19);
      v25[3] = v19;
      v25[4] = *(void *)(v20 + 8);
      unint64_t v22 = sub_240A23B08(v25);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v22, v21, v19);
      sub_240B2A748(v9, v25, v24);

      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v7);
      _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v25);
    }
  }
  else
  {
    uint64_t v18 = _s14descr26F502E21O15SettingsContentVMa();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a3, 1, 1, v18);
  }
}

uint64_t sub_240B81D94(void **a1, uint64_t a2)
{
  sub_240A3FB28();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  if (v10)
  {
    id v11 = v10;
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_240A395FC(v5, (uint64_t)qword_26AFDEB68);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v12, v5);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v10;
    *(void *)(v13 + 24) = a2;
    v15[1] = 0;
    id v14 = v10;
    sub_240BB5720();
    swift_release();

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return result;
}

uint64_t sub_240B81F2C(void *a1)
{
  sub_240BB77C0();
  sub_240BB6E70();
  sub_240BB7C80();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  id v2 = a1;
  sub_240A49AC0();
  sub_240BB6E10();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return 0;
}

void sub_240B82014(uint64_t a1, uint64_t a2)
{
  sub_240A3EDEC(0, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v15 - v5;
  uint64_t v7 = a2 + 16;
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x24560BA20](v7);
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    sub_240B859C4(a1, (uint64_t)v6);
    uint64_t v10 = (uint64_t)v9 + qword_268CA1EB8;
    swift_beginAccess();
    sub_240A7325C((uint64_t)v6, v10);
    swift_endAccess();
  }
  swift_beginAccess();
  uint64_t v11 = MEMORY[0x24560BA20](v7);
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    uint64_t v13 = v11 + qword_268CA2BE8;
    swift_beginAccess();
    uint64_t v14 = MEMORY[0x24560BA20](v13);

    if (v14)
    {
      swift_getObjectType();
      sub_240BB4F80();
      sub_240BB50A0();
    }
  }
}

uint64_t sub_240B82198@<X0>(uint64_t a1@<X8>)
{
  uint64_t v49 = a1;
  uint64_t ObjectType = swift_getObjectType();
  sub_240A3FB28();
  uint64_t v3 = v2;
  uint64_t v48 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v46 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_240BB3660();
  uint64_t v44 = *(void *)(v5 - 8);
  uint64_t v45 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v42 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v43 = (char *)&v42 - v8;
  uint64_t v9 = _s14descr26F502E21O15SettingsContentVMa();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3EDEC(0, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa, MEMORY[0x263F8D8F0]);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v42 - v17;
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v19 = (id)qword_26AFDECD8;
  uint64_t v20 = (void *)sub_240BB6DA0();
  id v21 = objc_msgSend(self, sel_imageNamed_inBundle_, v20, v19);

  if (v21)
  {
    uint64_t v22 = v1 + qword_268CA1EB8;
    swift_beginAccess();
    sub_240B859C4(v22, (uint64_t)v18);
    uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    if (v23(v18, 1, v9))
    {
      sub_240B86F7C((uint64_t)v18, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa);
LABEL_6:
      if (qword_26AFD7158 != -1) {
        swift_once();
      }
      uint64_t v24 = sub_240A395FC(v3, (uint64_t)qword_26AFDEB68);
      uint64_t v25 = v48;
      uint64_t v26 = v46;
      (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v46, v24, v3);
      *(void *)(swift_allocObject() + 16) = ObjectType;
      uint64_t v50 = 0;
      sub_240BB5720();
      swift_release();

      (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v3);
      uint64_t v27 = sub_240BB5020();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v49, 1, 1, v27);
    }
    sub_240A73154((uint64_t)v18, (uint64_t)v12);
    sub_240B86F7C((uint64_t)v18, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa);
    uint64_t v33 = &v12[*(int *)(v9 + 28)];
    uint64_t v35 = *(void *)v33;
    uint64_t v34 = *((void *)v33 + 1);
    sub_240BB4850();
    sub_240A73200((uint64_t)v12);
    if (!v34) {
      goto LABEL_6;
    }
    uint64_t v48 = v35;
    sub_240B859C4(v22, (uint64_t)v16);
    if (v23(v16, 1, v9))
    {
      sub_240B86F7C((uint64_t)v16, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa);
      uint64_t v37 = v43;
      uint64_t v36 = v44;
      uint64_t v38 = v45;
      (*(void (**)(char *, void, uint64_t))(v44 + 104))(v43, *MEMORY[0x263F435D0], v45);
    }
    else
    {
      sub_240A73154((uint64_t)v16, (uint64_t)v12);
      sub_240B86F7C((uint64_t)v16, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa);
      uint64_t v36 = v44;
      uint64_t v38 = v45;
      uint64_t v39 = v42;
      (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v42, v12, v45);
      sub_240A73200((uint64_t)v12);
      uint64_t v37 = v43;
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v43, v39, v38);
    }
    uint64_t v40 = v49;
    sub_240BB3700();
    sub_240BB36E0();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
    sub_240BB5000();
    uint64_t v41 = sub_240BB5020();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 0, 1, v41);
  }
  else
  {
    uint64_t v29 = sub_240BB5020();
    uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56);
    uint64_t v31 = v29;
    uint64_t v32 = v49;
    return v30(v32, 1, 1, v31);
  }
}

uint64_t sub_240B8287C()
{
  unint64_t v8 = MEMORY[0x263F8EE78];
  unint64_t v0 = sub_240B829A0();
  sub_240B85C0C(v0, (uint64_t (*)(uint64_t, void, unint64_t))sub_240B86230);
  unint64_t v1 = sub_240B830B0();
  sub_240B85C0C(v1, (uint64_t (*)(uint64_t, void, unint64_t))sub_240B86230);
  unint64_t v2 = v8;
  if (v8 >> 62)
  {
    sub_240BB4850();
    uint64_t v7 = sub_240BB78F0();
    swift_bridgeObjectRelease_n();
    return v7;
  }
  else
  {
    uint64_t v3 = v8 & 0xFFFFFFFFFFFFFF8;
    sub_240BB4850();
    sub_240BB7AF0();
    if (swift_dynamicCastMetatype() || (uint64_t v5 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_3:
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v6 = (void *)(v3 + 32);
      while (*v6)
      {
        ++v6;
        if (!--v5) {
          goto LABEL_3;
        }
      }
      swift_bridgeObjectRelease();
      return v3 | 1;
    }
    return v2;
  }
}

uint64_t sub_240B829A0()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  sub_240A3FB28();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s14descr26F502E21O15SettingsContentVMa();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3EDEC(0, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v40 - v12;
  uint64_t v45 = MEMORY[0x263F8EE78];
  uint64_t v14 = self;
  uint64_t v15 = (void *)sub_240BB6DA0();
  id v16 = objc_msgSend(v14, sel_groupSpecifierWithID_, v15);

  if (!v16)
  {
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_240A395FC(v3, (uint64_t)qword_26AFDEB68);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v19, v3);
    *(void *)(swift_allocObject() + 16) = ObjectType;
    uint64_t v44 = 0;
    sub_240BB5720();
    goto LABEL_10;
  }
  uint64_t v17 = v1 + qword_268CA1EB8;
  swift_beginAccess();
  sub_240B859C4(v17, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7))
  {
    sub_240B86F7C((uint64_t)v13, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa);
LABEL_4:
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_240A395FC(v3, (uint64_t)qword_26AFDEB68);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v18, v3);
    *(void *)(swift_allocObject() + 16) = ObjectType;
    uint64_t v43 = 0;
    sub_240BB5720();

LABEL_10:
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return v45;
  }
  uint64_t v41 = v1;
  sub_240A73154((uint64_t)v13, (uint64_t)v10);
  sub_240B86F7C((uint64_t)v13, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa);
  id v21 = (uint64_t *)&v10[*(int *)(v7 + 32)];
  uint64_t v22 = v21[1];
  uint64_t v23 = v21[4];
  uint64_t v24 = v21[5];
  uint64_t v40 = *v21;
  sub_240B5A194(v40, v22);
  sub_240A73200((uint64_t)v10);
  if (!v22) {
    goto LABEL_4;
  }
  uint64_t v25 = (uint64_t *)(v41 + qword_268CA1EA8);
  *uint64_t v25 = v23;
  v25[1] = v24;
  swift_bridgeObjectRelease();
  id v26 = objc_allocWithZone(NSString);
  sub_240BB4850();
  uint64_t v27 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  id v28 = objc_msgSend(v26, sel_initWithString_, v27);

  uint64_t v29 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  id v30 = objc_msgSend(v28, sel_localizedStandardRangeOfString_, v29);
  NSUInteger v32 = v31;

  sub_240A34DC4(0, &qword_268C9F5A8);
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  uint64_t v34 = NSStringFromClass(ObjCClassFromMetadata);
  if (!v34)
  {
    sub_240BB6DE0();
    uint64_t v34 = (NSString *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v16, sel_setProperty_forKey_, v34, *MEMORY[0x263F600C0]);

  uint64_t v35 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  objc_msgSend(v16, sel_setProperty_forKey_, v35, *MEMORY[0x263F600E8]);

  v46.location = (NSUInteger)v30;
  v46.length = v32;
  uint64_t v36 = NSStringFromRange(v46);
  if (!v36)
  {
    sub_240BB6DE0();
    uint64_t v36 = (NSString *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v16, sel_setProperty_forKey_, v36, *MEMORY[0x263F600D0]);

  id v37 = objc_msgSend(self, sel_valueWithNonretainedObject_, v41);
  objc_msgSend(v16, sel_setProperty_forKey_, v37, *MEMORY[0x263F600E0]);
  sub_240BB2F90();
  uint64_t v38 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  objc_msgSend(v16, sel_setProperty_forKey_, v38, *MEMORY[0x263F600C8]);

  id v39 = v16;
  MEMORY[0x24560A190]();
  if (*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_240BB6F60();
  }
  sub_240BB6F70();
  sub_240BB6F30();

  return v45;
}

uint64_t sub_240B830B0()
{
  uint64_t v1 = _s14descr26F502E21O15SettingsContentVMa();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3EDEC(0, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa, MEMORY[0x263F8D8F0]);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v30 - v9;
  id v11 = 0;
  uint64_t v12 = v0 + qword_268CA1E88;
  if (*(unsigned char *)(v0 + qword_268CA1E88) == 1)
  {
    uint64_t v13 = v0 + qword_268CA1EB8;
    swift_beginAccess();
    sub_240B859C4(v13, (uint64_t)v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v10, 1, v1))
    {
      sub_240B86F7C((uint64_t)v10, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa);
      char v14 = 2;
    }
    else
    {
      sub_240A73154((uint64_t)v10, (uint64_t)v4);
      sub_240B86F7C((uint64_t)v10, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa);
      char v14 = v4[*(int *)(v1 + 20)];
      sub_240A73200((uint64_t)v4);
    }
    id v15 = objc_msgSend(self, sel_aFibBurdenTitleDescription);
    uint64_t v16 = sub_240BB6DE0();
    uint64_t v18 = v17;

    id v11 = sub_240B835EC(v14, v16, v18, 0xD00000000000001ALL, 0x8000000240BD5320, (uint64_t)sel_setAFibBurdenFeatureEnabledWithValue_, (uint64_t)sel_isAFibBurdenFeatureEnabled);
    swift_bridgeObjectRelease();
  }
  if (*(unsigned char *)(v12 + 1) == 1)
  {
    uint64_t v19 = v0 + qword_268CA1EB8;
    swift_beginAccess();
    sub_240B859C4(v19, (uint64_t)v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v8, 1, v1))
    {
      sub_240B86F7C((uint64_t)v8, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa);
      char v20 = 2;
    }
    else
    {
      sub_240A73154((uint64_t)v8, (uint64_t)v4);
      sub_240B86F7C((uint64_t)v8, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa);
      char v20 = v4[*(int *)(v1 + 24)];
      sub_240A73200((uint64_t)v4);
    }
    if (qword_268C9E7A8 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_240BB2980();
    id v21 = sub_240B835EC(v20, v22, v23, 0xD00000000000001FLL, 0x8000000240BD5300, (uint64_t)sel_setAFibBurdenNotificationEnabledWithValue_, (uint64_t)sel_isAFibBurdenNotificationEnabled);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v21 = 0;
  }
  uint64_t v31 = MEMORY[0x263F8EE78];
  if (!v11)
  {
    id v26 = v21;
    if (!v21) {
      goto LABEL_23;
    }
    goto LABEL_20;
  }
  id v24 = v21;
  id v25 = v11;
  MEMORY[0x24560A190]();
  if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_240BB6F60();
  }
  sub_240BB6F70();
  sub_240BB6F30();
  if (v21)
  {
LABEL_20:
    id v27 = v21;
    MEMORY[0x24560A190]();
    if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_240BB6F60();
    }
    sub_240BB6F70();
    sub_240BB6F30();
  }
LABEL_23:
  uint64_t v28 = v31;

  return v28;
}

id sub_240B835EC(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a1 == 2) {
    return 0;
  }
  id v11 = self;
  uint64_t v12 = (void *)sub_240BB6DA0();
  id v8 = objc_msgSend(v11, sel_preferenceSpecifierNamed_target_set_get_detail_cell_edit_, v12, v7, a6, a7, 0, 6, 0);

  if (v8)
  {
    uint64_t v13 = (void *)sub_240BB6DA0();
    objc_msgSend(v8, sel_setIdentifier_, v13);

    char v14 = (void *)sub_240BB6F90();
    objc_msgSend(v8, sel_setProperty_forKey_, v14, *MEMORY[0x263F600A8]);

    id v15 = (void *)sub_240BB6F90();
    objc_msgSend(v8, sel_setProperty_forKey_, v15, *MEMORY[0x263F5FEF8]);
  }
  return v8;
}

uint64_t sub_240B83750()
{
  uint64_t v1 = _s14descr26F502E21O15SettingsContentVMa();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3EDEC(0, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = v0 + qword_268CA1EB8;
  swift_beginAccess();
  sub_240B859C4(v8, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
  {
    sub_240B86F7C((uint64_t)v7, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa);
  }
  else
  {
    sub_240A73154((uint64_t)v7, (uint64_t)v4);
    sub_240B86F7C((uint64_t)v7, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa);
    sub_240A73200((uint64_t)v4);
  }
  return sub_240BB6F90();
}

id sub_240B8392C(void *a1)
{
  id v1 = a1;
  uint64_t v2 = (void *)sub_240B83750();

  return v2;
}

void sub_240B83970(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  sub_240A3FB28();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFD7158 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_240A395FC(v6, (uint64_t)qword_26AFDEB68);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = ObjectType;
  aBlock[0] = 0;
  id v12 = a1;
  sub_240BB5700();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v13 = *(void **)(v2 + qword_268CA1E90);
  char v14 = (void *)*MEMORY[0x263F09820];
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = ObjectType;
  aBlock[4] = sub_240B86B58;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_240AB0D44;
  void aBlock[3] = &unk_26F50BB48;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = v14;
  swift_release();
  objc_msgSend(v13, sel_setFeatureSettingNumber_forKey_completion_, v12, v17, v16);
  _Block_release(v16);
}

void sub_240B83BE0(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_240B83970(v4);
}

uint64_t sub_240B83C48()
{
  uint64_t v1 = _s14descr26F502E21O15SettingsContentVMa();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  id v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3EDEC(0, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = v0 + qword_268CA1EB8;
  swift_beginAccess();
  sub_240B859C4(v8, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
  {
    sub_240B86F7C((uint64_t)v7, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa);
  }
  else
  {
    sub_240A73154((uint64_t)v7, (uint64_t)v4);
    sub_240B86F7C((uint64_t)v7, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa);
    sub_240A73200((uint64_t)v4);
  }
  return sub_240BB6F90();
}

id sub_240B83E24(void *a1)
{
  id v1 = a1;
  uint64_t v2 = (void *)sub_240B83C48();

  return v2;
}

void sub_240B83E68(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v39 = a4;
  uint64_t v34 = a3;
  uint64_t v6 = sub_240BB6B90();
  uint64_t v38 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240BB6BC0();
  uint64_t v36 = *(void *)(v9 - 8);
  uint64_t v37 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A86F10();
  uint64_t v13 = v12;
  uint64_t v35 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3FB28();
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  char v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v21 = MEMORY[0x24560BA20](a2 + 16);
  if (v21)
  {
    uint64_t v22 = (void *)v21;
    if (objc_msgSend(a1, sel_authorizationStatus) == (id)2)
    {
      if (qword_26AFD7158 != -1) {
        swift_once();
      }
      uint64_t v23 = sub_240A395FC(v17, (uint64_t)qword_26AFDEB68);
      (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v23, v17);
      uint64_t v24 = swift_allocObject();
      id v25 = v34;
      uint64_t v26 = v39;
      *(void *)(v24 + 16) = v34;
      *(void *)(v24 + 24) = v26;
      aBlock[0] = 0;
      id v27 = v25;
      sub_240BB5700();
      swift_release();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      swift_getObjectType();
      objc_msgSend(v27, sel_BOOLValue);
      sub_240BB6DE0();
      sub_240BB7290();
      *(void *)(swift_allocObject() + 16) = v26;
      sub_240BB7450();
      swift_release();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v13);
    }
    else
    {
      if (qword_26AFD7158 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_240A395FC(v17, (uint64_t)qword_26AFDEB68);
      (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v28, v17);
      *(void *)(swift_allocObject() + 16) = v39;
      aBlock[0] = 0;
      sub_240BB5700();
      swift_release();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      sub_240A34DC4(0, (unint64_t *)&qword_26AFD9980);
      uint64_t v29 = (void *)sub_240BB7310();
      uint64_t v30 = swift_allocObject();
      *(void *)(v30 + 16) = v22;
      aBlock[4] = sub_240B85894;
      aBlock[5] = v30;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_240A87354;
      void aBlock[3] = &unk_26F50BA30;
      uint64_t v31 = _Block_copy(aBlock);
      id v32 = v22;
      swift_release();
      sub_240BB6BB0();
      aBlock[0] = MEMORY[0x263F8EE78];
      sub_240A21010((unint64_t *)&qword_26AFD98C8, MEMORY[0x263F8F030]);
      sub_240A3EDEC(0, (unint64_t *)&qword_26AFD98F0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
      sub_240AD7290();
      sub_240BB7670();
      MEMORY[0x24560A5E0](0, v11, v8, v31);
      _Block_release(v31);

      (*(void (**)(char *, uint64_t))(v38 + 8))(v8, v6);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v37);
    }
  }
}

uint64_t sub_240B844E4()
{
  return 0;
}

void sub_240B8457C(uint64_t a1)
{
  uint64_t v1 = a1 + qword_268CA2BE8;
  swift_beginAccess();
  if (MEMORY[0x24560BA20](v1))
  {
    swift_getObjectType();
    sub_240BB4F80();
    sub_240BB50A0();
  }
  sub_240B84D98();
}

uint64_t sub_240B84600(void *a1)
{
  sub_240BB77C0();
  sub_240BB6E70();
  sub_240BB7C80();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  id v2 = a1;
  id v3 = objc_msgSend(v2, sel_description);
  sub_240BB6DE0();

  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return 0;
}

uint64_t sub_240B84700(char a1, void *a2, uint64_t a3)
{
  sub_240A3FB28();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_240A395FC(v7, (uint64_t)qword_26AFDEB68);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v12, v7);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a2;
    *(void *)(v13 + 24) = a3;
    v15[1] = 0;
    id v14 = a2;
    sub_240BB5720();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  return result;
}

uint64_t sub_240B84888(void *a1)
{
  sub_240BB77C0();
  sub_240BB6E70();
  sub_240BB7C80();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  id v2 = a1;
  sub_240A3EDEC(0, (unint64_t *)&unk_268CA21D0, (uint64_t (*)(uint64_t))sub_240A49AC0, MEMORY[0x263F8D8F0]);
  sub_240BB6E10();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return 0;
}

uint64_t sub_240B849A0(char *a1, uint64_t a2, void *a3)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_240A3466C(&a1[qword_268CA1EC0], *(void *)&a1[qword_268CA1EC0 + 24]);
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v7 = (void *)swift_allocObject();
  void v7[2] = v6;
  _OWORD v7[3] = a3;
  void v7[4] = ObjectType;
  id v8 = a3;
  uint64_t v9 = a1;
  swift_retain();
  sub_240BB2FF0();

  swift_release();

  return swift_release();
}

void sub_240B84AA0()
{
  uint64_t v1 = *(void *)(v0 + qword_268CA1EA8 + 8);
  if (!v1) {
    return;
  }
  uint64_t v2 = *(void *)(v0 + qword_268CA1EA8);
  id v3 = self;
  sub_240BB4850();
  id v4 = objc_msgSend(v3, sel_aFibBurdenArticleLinkURL);
  uint64_t v5 = sub_240BB6DE0();
  uint64_t v7 = v6;

  if (v2 == v5 && v1 == v7)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    swift_bridgeObjectRelease();
    sub_240B84C14();
    return;
  }
  char v9 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  if (v9) {
    goto LABEL_10;
  }
  sub_240BB6E40();

  swift_bridgeObjectRelease();
}

void sub_240B84BCC(void *a1)
{
  id v1 = a1;
  sub_240B84AA0();
}

void sub_240B84C14()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  sub_240BB2980();
  sub_240B70DF8();
  id v1 = objc_allocWithZone((Class)sub_240BB3510());
  uint64_t v2 = (void *)sub_240BB3500();
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v2, 0xE000000000000000);
  uint64_t v4 = v0 + qword_268CA2BF0;
  swift_beginAccess();
  if (MEMORY[0x24560BA20](v4))
  {
    swift_getObjectType();
    uint64_t v5 = (void *)sub_240BB54F0();
    sub_240BB50A0();
    objc_msgSend(v5, sel_presentViewController_animated_completion_, v3, 1, 0);
  }
}

void sub_240B84D98()
{
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  sub_240BB2980();
  sub_240BB2980();
  id v1 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  uint64_t v2 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v1, v2, 1, 0xE000000000000000);

  sub_240BB2980();
  uint64_t v4 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  uint64_t v5 = self;
  id v6 = objc_msgSend(v5, sel_actionWithTitle_style_handler_, v4, 1, 0, 0xE000000000000000);

  sub_240BB2980();
  uint64_t v7 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_240B85118;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_240B187EC;
  void aBlock[3] = &unk_26F50BAD0;
  id v8 = _Block_copy(aBlock);
  swift_release();
  id v9 = objc_msgSend(v5, sel_actionWithTitle_style_handler_, v7, 0, v8, 0xE000000000000000);
  _Block_release(v8);

  objc_msgSend(v3, sel_addAction_, v6);
  objc_msgSend(v3, sel_addAction_, v9);
  objc_msgSend(v3, sel_setPreferredAction_, v9);
  uint64_t v10 = v0 + qword_268CA2BF0;
  swift_beginAccess();
  if (MEMORY[0x24560BA20](v10))
  {
    swift_getObjectType();
    uint64_t v11 = (void *)sub_240BB54F0();
    sub_240BB50A0();
    objc_msgSend(v11, sel_presentViewController_animated_completion_, v3, 1, 0);
  }
}

uint64_t sub_240B85118()
{
  uint64_t v0 = sub_240BB3630();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F43580], v0);
  sub_240BB3620();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_240B851FC()
{
}

uint64_t sub_240B8522C()
{
  sub_240BB50A0();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + qword_268CA1E98);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_240B86F7C(v0 + qword_268CA1EB8, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + qword_268CA1EC0);
  sub_240A484BC(v0 + qword_268CA2BE8);
  uint64_t v1 = v0 + qword_268CA2BF0;

  return sub_240A484BC(v1);
}

id sub_240B852FC()
{
  return sub_240B85644(type metadata accessor for AFibBurdenSpecifierDataSource);
}

uint64_t sub_240B85314(uint64_t a1)
{
  sub_240BB50A0();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + qword_268CA1E98);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_240B86F7C(a1 + qword_268CA1EB8, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + qword_268CA1EC0);
  sub_240A484BC(a1 + qword_268CA2BE8);
  uint64_t v2 = a1 + qword_268CA2BF0;

  return sub_240A484BC(v2);
}

uint64_t sub_240B853F0()
{
  return type metadata accessor for AFibBurdenSpecifierDataSource(0);
}

uint64_t type metadata accessor for AFibBurdenSettingsViewController(uint64_t a1)
{
  return sub_240A3E6AC(a1, (uint64_t *)&unk_268CA1ED8);
}

uint64_t sub_240B85418()
{
  return swift_initClassMetadata2();
}

uint64_t sub_240B85458(uint64_t a1, uint64_t a2)
{
  return sub_240AC1F8C(a1, a2, &qword_268CA2BE8);
}

uint64_t sub_240B85464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_240AC1FE4(a1, a2, a3, a4, &qword_268CA2BE8);
}

void (*sub_240B85470(void *a1))(uint64_t, char)
{
  id v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = qword_268CA2BE8;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x24560BA20](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_240AC1F7C;
}

uint64_t sub_240B854F8(uint64_t a1, uint64_t a2)
{
  return sub_240AC1F8C(a1, a2, &qword_268CA2BF0);
}

uint64_t sub_240B85504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_240AC1FE4(a1, a2, a3, a4, &qword_268CA2BF0);
}

void (*sub_240B85510(void *a1))(uint64_t, char)
{
  id v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = qword_268CA2BF0;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x24560BA20](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_240AC1F7C;
}

void sub_240B855A0()
{
}

void sub_240B855FC()
{
}

id sub_240B8562C()
{
  return sub_240B85644(type metadata accessor for AFibBurdenSettingsViewController);
}

id sub_240B85644(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_240B85684()
{
  return type metadata accessor for AFibBurdenSettingsViewController(0);
}

uint64_t storeEnumTagSinglePayload for AFibBurdenSpecifierDataSource.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240B85758);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenSpecifierDataSource.Configuration()
{
  return &type metadata for AFibBurdenSpecifierDataSource.Configuration;
}

uint64_t sub_240B85790()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B857C8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_240B85808(void *a1)
{
  sub_240B83E68(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_240B85814()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B85824()
{
  return sub_240B844E4();
}

uint64_t sub_240B8585C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_240B85894()
{
  sub_240B8457C(*(void *)(v0 + 16));
}

uint64_t sub_240B8589C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B858D4()
{
  return sub_240B84600(*(void **)(v0 + 16));
}

uint64_t sub_240B8590C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B8591C(char a1, void *a2)
{
  return sub_240B84700(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_240B85954()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B8598C()
{
  return sub_240B84888(*(void **)(v0 + 16));
}

uint64_t sub_240B859C4(uint64_t a1, uint64_t a2)
{
  sub_240A3EDEC(0, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240B85A58(unint64_t a1)
{
  return sub_240B85C0C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_240B85DE0);
}

uint64_t sub_240B85A70(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  int v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  int v3 = sub_240A42A0C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_240BB7970();
  __break(1u);
  return result;
}

uint64_t sub_240B85BC4(unint64_t a1)
{
  return sub_240B85C0C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_240B86008);
}

uint64_t sub_240B85BDC(unint64_t a1)
{
  return sub_240B85C0C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_240B86230);
}

uint64_t sub_240B85BF4(unint64_t a1)
{
  return sub_240B85C0C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_240B86458);
}

uint64_t sub_240B85C0C(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    sub_240BB4850();
    uint64_t v5 = sub_240BB7900();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v6 = *v2;
  if (*v2 >> 62)
  {
    sub_240BB4850();
    uint64_t v7 = sub_240BB7900();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v5;
  if (__OFADD__(v7, v5)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v6 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t *v2 = v6;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v7 = 1;
  }
  if (v6 >> 62) {
    goto LABEL_27;
  }
  uint64_t v11 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8) {
      uint64_t v11 = v8;
    }
    sub_240BB4850();
    unint64_t v6 = MEMORY[0x24560AAB0](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    unint64_t *v2 = v6;
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    sub_240BB4850();
    uint64_t v11 = sub_240BB7900();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();

  return sub_240BB6F30();
}

uint64_t sub_240B85DE0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    sub_240BB4850();
    uint64_t v7 = sub_240BB7900();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    sub_240BB4850();
    uint64_t v10 = sub_240BB7900();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_240B86C58(0, &qword_268CA1F30, (unint64_t *)&qword_268CA2490);
        sub_240B8777C();
        sub_240BB4850();
        for (unint64_t i = 0; i != v7; ++i)
        {
          BOOL v12 = sub_240B08CCC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_240A34DC4(0, (unint64_t *)&qword_268CA2490);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_240BB7970();
  __break(1u);
  return result;
}

uint64_t sub_240B86008(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    sub_240BB4850();
    uint64_t v7 = sub_240BB7900();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    sub_240BB4850();
    uint64_t v10 = sub_240BB7900();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_240B86C58(0, &qword_268CA1F50, (unint64_t *)&unk_268CA0B90);
        sub_240B8785C();
        sub_240BB4850();
        for (unint64_t i = 0; i != v7; ++i)
        {
          BOOL v12 = sub_240B08CCC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_240A34DC4(0, (unint64_t *)&unk_268CA0B90);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_240BB7970();
  __break(1u);
  return result;
}

uint64_t sub_240B86230(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    sub_240BB4850();
    uint64_t v7 = sub_240BB7900();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    sub_240BB4850();
    uint64_t v10 = sub_240BB7900();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_240B86C58(0, &qword_268CA1EF0, &qword_268CA1EE8);
        sub_240B86CB0();
        sub_240BB4850();
        for (unint64_t i = 0; i != v7; ++i)
        {
          BOOL v12 = sub_240B08D38(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_240A34DC4(0, &qword_268CA1EE8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_240BB7970();
  __break(1u);
  return result;
}

uint64_t sub_240B86458(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    sub_240BB4850();
    uint64_t v7 = sub_240BB7900();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    sub_240BB4850();
    uint64_t v10 = sub_240BB7900();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_240B86C58(0, &qword_268CA1F40, (unint64_t *)&qword_268CA00D8);
        sub_240B877EC();
        sub_240BB4850();
        for (unint64_t i = 0; i != v7; ++i)
        {
          BOOL v12 = sub_240B08CCC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_240A34DC4(0, (unint64_t *)&qword_268CA00D8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_240BB7970();
  __break(1u);
  return result;
}

id sub_240B86680(int a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v54 = a8;
  int v53 = a7;
  uint64_t v60 = a4;
  uint64_t v48 = a3;
  int v49 = a1;
  uint64_t v51 = a9;
  uint64_t v52 = a5;
  uint64_t v50 = a11;
  uint64_t v13 = sub_240BB3B20();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v47 = v16;
  uint64_t v17 = _s14descr26F502E21O15SettingsContentVMa();
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  char v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void *)(a10 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v18);
  uint64_t v24 = (char *)&v47 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v47 - v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))((char *)&v47 - v25, v60, a10);
  uint64_t v60 = a2;
  sub_240A73154(a2, (uint64_t)v20);
  uint64_t v57 = v14;
  uint64_t v58 = v13;
  uint64_t v27 = v14;
  uint64_t v28 = v48;
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  uint64_t v59 = a6;
  v29(v16, a6, v13);
  uint64_t v30 = sub_240BB3020();
  uint64_t v31 = sub_240BB3010();
  uint64_t v62 = v30;
  uint64_t v63 = &off_26F50B8F0;
  v61[0] = v31;
  id v32 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenSpecifierDataSource(0));
  uint64_t v33 = sub_240A346B0((uint64_t)v61, v62);
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (uint64_t *)((char *)&v47 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v36 + 16))(v35);
  uint64_t v37 = *v35;
  uint64_t v55 = v21;
  uint64_t v56 = v26;
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v24, v26, a10);
  LOWORD(v35) = v49 & 0x101;
  swift_retain();
  __int16 v38 = (__int16)v35;
  uint64_t v39 = v52;
  id v40 = sub_240B87230(v38, (uint64_t)v20, v28, (uint64_t)v24, v52, (uint64_t)v47, v37, v32, v51, a10, v50);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v61);
  swift_release();
  sub_240A21010(&qword_268C9F210, (void (*)(uint64_t))type metadata accessor for AFibBurdenSpecifierDataSource);
  id v41 = v40;
  uint64_t v42 = (void *)sub_240BB4E60();
  uint64_t v43 = self;
  id v44 = v42;
  id v45 = objc_msgSend(v43, sel_aFibBurdenSectionTitle);
  if (!v45)
  {
    sub_240BB6DE0();
    id v45 = (id)sub_240BB6DA0();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v44, sel_setTitle_, v45);

  sub_240BB50A0();
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v59, v58);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v56, a10);
  sub_240A73200(v60);
  return v44;
}

uint64_t sub_240B86B10()
{
  return sub_240B84600(*(void **)(v0 + 16));
}

uint64_t sub_240B86B48()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B86B58(char a1, void *a2)
{
  return sub_240B84700(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_240B86B90()
{
  return sub_240B84888(*(void **)(v0 + 16));
}

uint64_t sub_240B86BC8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B86BD8()
{
  return sub_240B844E4();
}

uint64_t sub_240B86C10()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B86C20()
{
  return sub_240B844E4();
}

void sub_240B86C58(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_240A34DC4(255, a3);
    unint64_t v4 = sub_240BB6F80();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_240B86CB0()
{
  unint64_t result = qword_268CA1EF8;
  if (!qword_268CA1EF8)
  {
    sub_240B86C58(255, &qword_268CA1EF0, &qword_268CA1EE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1EF8);
  }
  return result;
}

uint64_t sub_240B86D20()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B86D30()
{
  return sub_240B844E4();
}

uint64_t sub_240B86D68()
{
  return sub_240A21010(&qword_26AFD9988, MEMORY[0x263F07CB0]);
}

void sub_240B86D9C()
{
  if (!qword_268CA1F08)
  {
    uint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F07CB0];
    sub_240B86EA0(255, &qword_268CA1F00, MEMORY[0x263F07CB0], (void (*)(void))sub_240B86D68);
    sub_240A3EDEC(255, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa, MEMORY[0x263F8D8F0]);
    sub_240B87068(&qword_268CA1F10, &qword_268CA1F00, v0, (void (*)(void))sub_240B86D68);
    unint64_t v1 = sub_240BB6090();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268CA1F08);
    }
  }
}

void sub_240B86EA0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_240A34DC4(255, (unint64_t *)&qword_26AFD9980);
    a4();
    sub_240A805DC();
    unint64_t v6 = sub_240BB60E0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_240B86F48()
{
  return sub_240A21010(&qword_268CA1F20, (void (*)(uint64_t))sub_240B86D9C);
}

uint64_t sub_240B86F7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_240A3EDEC(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_240B86FEC()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_240B87024(char *a1)
{
  sub_240B81564(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_240B8702C(uint64_t a1@<X8>)
{
  sub_240B81A40(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_240B87048()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B87058(void **a1)
{
  return sub_240B81D94(a1, *(void *)(v1 + 16));
}

void sub_240B87060(uint64_t a1)
{
  sub_240B82014(a1, v1);
}

uint64_t sub_240B87068(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240B86EA0(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240B870B8()
{
  return sub_240B81F2C(*(void **)(v0 + 16));
}

uint64_t sub_240B870C0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B870D0()
{
  return sub_240B844E4();
}

uint64_t sub_240B87108()
{
  uint64_t v1 = sub_240BB56E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_240B871A4()
{
  sub_240BB56E0();

  return sub_240B81964();
}

id sub_240B87230(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v40 = a6;
  uint64_t v41 = a2;
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240A3EDEC(0, (unint64_t *)&qword_268C9F218, MEMORY[0x263F43A90], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v18 - 8);
  char v20 = (char *)&v39 - v19;
  sub_240A3EDEC(0, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa, v17);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (char *)&v39 - v22;
  v43[3] = a10;
  v43[4] = a11;
  uint64_t v24 = sub_240A23B08(v43);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a10 - 8) + 32))(v24, a4, a10);
  v42[3] = sub_240BB3020();
  unsigned char v42[4] = &off_26F50B8F0;
  v42[0] = a7;
  uint64_t v25 = a8;
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_240BB7900()) {
    unint64_t v26 = sub_240A71C94(MEMORY[0x263F8EE78]);
  }
  else {
    unint64_t v26 = MEMORY[0x263F8EE88];
  }
  *(void *)&v25[qword_268CA1EA0] = v26;
  uint64_t v27 = &v25[qword_268CA1EA8];
  *(void *)uint64_t v27 = 0;
  *((void *)v27 + 1) = 0;
  uint64_t v28 = (uint64_t)&v25[qword_268CA1EB8];
  uint64_t v29 = _s14descr26F502E21O15SettingsContentVMa();
  uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56);
  v30(v28, 1, 1, v29);
  *(void *)&v25[qword_268CA2BE8 + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v25[qword_268CA2BF0 + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v31 = &v25[qword_268CA1E88];
  char *v31 = a1 & 1;
  v31[1] = HIBYTE(a1) & 1;
  *(void *)&v25[qword_268CA1E90] = a3;
  sub_240A1E37C((uint64_t)v43, (uint64_t)&v25[qword_268CA1E98]);
  *(void *)&v25[qword_268CA1EB0] = a5;
  uint64_t v32 = v41;
  sub_240A73154(v41, (uint64_t)v23);
  v30((uint64_t)v23, 0, 1, v29);
  swift_beginAccess();
  swift_unknownObjectRetain();
  id v33 = a5;
  sub_240A7325C((uint64_t)v23, v28);
  swift_endAccess();
  sub_240A1E37C((uint64_t)v42, (uint64_t)&v25[qword_268CA1EC0]);

  uint64_t v34 = sub_240BB3B20();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v20, v40, v34);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v20, 0, 1, v34);
  sub_240BB4850();
  HKImproveHealthAndActivityAnalyticsAllowed();
  id v37 = (id)sub_240BB3B10();
  sub_240B80B20();

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v42);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v34);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v43);
  sub_240A73200(v32);
  return v37;
}

id sub_240B8764C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v23 = a7;
  uint64_t v21 = a5;
  uint64_t v22 = a6;
  __int16 v14 = a1;
  uint64_t v15 = *(void *)(a10 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenSettingsViewController(0));
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a4, a10);
  return sub_240B86680(v14 & 0x101, a2, a3, (uint64_t)v17, v21, v22, v23, (uint64_t)v18, a9, a10, a11);
}

unint64_t sub_240B8777C()
{
  unint64_t result = qword_268CA1F38;
  if (!qword_268CA1F38)
  {
    sub_240B86C58(255, &qword_268CA1F30, (unint64_t *)&qword_268CA2490);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1F38);
  }
  return result;
}

unint64_t sub_240B877EC()
{
  unint64_t result = qword_268CA1F48;
  if (!qword_268CA1F48)
  {
    sub_240B86C58(255, &qword_268CA1F40, (unint64_t *)&qword_268CA00D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1F48);
  }
  return result;
}

unint64_t sub_240B8785C()
{
  unint64_t result = qword_268CA1F58;
  if (!qword_268CA1F58)
  {
    sub_240B86C58(255, &qword_268CA1F50, (unint64_t *)&unk_268CA0B90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1F58);
  }
  return result;
}

uint64_t sub_240B878EC()
{
  uint64_t v1 = v0;
  char v2 = *(unsigned char *)(v0 + 40);
  uint64_t v3 = sub_240BB4C30();
  type metadata accessor for AFibBurdenEducationSectionGenerator();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(v1 + 24);
  *(unsigned char *)(v4 + 40) = v2;
  swift_unknownObjectRetain();
  uint64_t v5 = sub_240AF2124();
  swift_release();
  return v5;
}

uint64_t sub_240B87974@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  *(void *)a5 = result;
  *(void *)(a5 + 8) = 0xD000000000000013;
  *(void *)(a5 + 16) = 0x8000000240BCB510;
  *(void *)(a5 + 24) = a2;
  *(void *)(a5 + 32) = a4;
  *(unsigned char *)(a5 + 40) = a3;
  return result;
}

uint64_t _s28AFibBurdenEducationComponentVwxx(id *a1)
{
  swift_bridgeObjectRelease();

  return sub_240BB50A0();
}

uint64_t _s28AFibBurdenEducationComponentVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  id v5 = v3;
  sub_240BB4850();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t _s28AFibBurdenEducationComponentVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  sub_240BB4850();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_unknownObjectRetain();
  sub_240BB50A0();
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

__n128 _s28AFibBurdenEducationComponentVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s28AFibBurdenEducationComponentVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_240BB50A0();
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t _s28AFibBurdenEducationComponentVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s28AFibBurdenEducationComponentVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s28AFibBurdenEducationComponentVMa()
{
  return &_s28AFibBurdenEducationComponentVN;
}

uint64_t type metadata accessor for ElectrocardiogramSpecifierDataSource(uint64_t a1)
{
  return sub_240A3E6AC(a1, (uint64_t *)&unk_268CA1F68);
}

uint64_t sub_240B87C1C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_240B87C68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F435C8];
  uint64_t v3 = sub_240BB3660();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_240B87CDC(uint64_t a1)
{
  swift_getObjectType();
  sub_240B885F0();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + qword_268CA1F60 + 8) = 0;
  swift_unknownObjectWeakInit();
  sub_240BAEEA8();
  uint64_t v6 = sub_240BB3B20();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  uint64_t v8 = sub_240BB3B10();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  return v8;
}

uint64_t sub_240B87E50@<X0>(uint64_t a1@<X8>)
{
  swift_getObjectType();
  uint64_t v2 = sub_240BB3660();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240BB36D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BAEEC0();
  uint64_t v10 = sub_240BB36B0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    type metadata accessor for ElectrocardiogramRecordingHealthChecklistFeedItemProvider();
    swift_initStackObject();
    sub_240BA2A94(0, 0xE000000000000000);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F435C8], v2);
    sub_240BB4850();
    sub_240BB3700();
    sub_240BB36E0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_240BB5010();
    swift_release();
    uint64_t v11 = sub_240BB5020();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 0, 1, v11);
  }
  else
  {
    uint64_t v13 = sub_240BB5020();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 1, 1, v13);
  }
}

void sub_240B880F0()
{
}

uint64_t sub_240B88120()
{
  return sub_240A484BC(v0 + qword_268CA1F60);
}

id sub_240B88130()
{
  return sub_240B88550(type metadata accessor for ElectrocardiogramSpecifierDataSource);
}

uint64_t sub_240B88148(uint64_t a1)
{
  return sub_240A484BC(a1 + qword_268CA1F60);
}

uint64_t sub_240B88158()
{
  return type metadata accessor for ElectrocardiogramSpecifierDataSource(0);
}

uint64_t type metadata accessor for ElectrocardiogramSettingsViewController(uint64_t a1)
{
  return sub_240A3E6AC(a1, (uint64_t *)&unk_268CA1F78);
}

uint64_t sub_240B88180()
{
  return swift_initClassMetadata2();
}

uint64_t sub_240B881C0()
{
  uint64_t v1 = v0 + qword_268CA1F60;
  swift_beginAccess();
  return MEMORY[0x24560BA20](v1);
}

uint64_t sub_240B88210(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + qword_268CA1F60;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return sub_240BB50A0();
}

void (*sub_240B8827C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = qword_268CA1F60;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x24560BA20](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_240A8003C;
}

id sub_240B88308(uint64_t a1)
{
  swift_getObjectType();
  uint64_t v2 = sub_240BB3B20();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  id v6 = objc_allocWithZone((Class)type metadata accessor for ElectrocardiogramSpecifierDataSource(0));
  uint64_t v7 = (void *)sub_240B87CDC((uint64_t)v5);
  sub_240B88598();
  id v8 = v7;
  id v9 = (id)sub_240BB4E60();
  sub_240BAEF4C();
  uint64_t v10 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setTitle_, v10);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v9;
}

void sub_240B884AC()
{
}

void sub_240B88508()
{
}

id sub_240B88538()
{
  return sub_240B88550(type metadata accessor for ElectrocardiogramSettingsViewController);
}

id sub_240B88550(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_240B88590()
{
  return type metadata accessor for ElectrocardiogramSettingsViewController(0);
}

unint64_t sub_240B88598()
{
  unint64_t result = qword_268CA1F88;
  if (!qword_268CA1F88)
  {
    type metadata accessor for ElectrocardiogramSpecifierDataSource(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1F88);
  }
  return result;
}

void sub_240B885F0()
{
  if (!qword_268C9F218)
  {
    sub_240BB3B20();
    unint64_t v0 = sub_240BB75E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9F218);
    }
  }
}

void sub_240B88648()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  objc_super v3 = (void *)(v0 + OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_context);
  swift_beginAccess();
  uint64_t v4 = v3[3];
  if (!v4)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v5 = sub_240A3466C(v3, v3[3]);
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  uint64_t v9 = sub_240BB4E40();
  unint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  if (v11 >> 60 != 15)
  {
    uint64_t v34 = ObjectType;
    if (qword_26AFD7BF0 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_240BB5990();
    sub_240A395FC(v19, (uint64_t)qword_26AFDEB80);
    uint64_t v20 = sub_240BB5970();
    os_log_type_t v21 = sub_240BB71A0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      unint64_t v33 = v11;
      uint64_t v24 = v23;
      uint64_t v35 = v23;
      *(_DWORD *)uint64_t v22 = 136446210;
      uint64_t v36 = v34;
      swift_getMetatypeMetadata();
      uint64_t v25 = sub_240BB6E10();
      uint64_t v36 = sub_240A38940(v25, v26, &v35);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v20, v21, "[%{public}s] Cache object set, decoding", v22, 0xCu);
      swift_arrayDestroy();
      uint64_t v27 = v24;
      unint64_t v11 = v33;
      MEMORY[0x24560B930](v27, -1, -1);
      MEMORY[0x24560B930](v22, -1, -1);
    }

    sub_240BB2740();
    swift_allocObject();
    sub_240BB2730();
    sub_240B89DB8();
    sub_240BB2720();
    swift_release();
    uint64_t v28 = OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_cacheObject;
    *(void *)(v1 + OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_cacheObject) = v36;
    swift_bridgeObjectRelease();
    uint64_t v29 = *(void **)(v1 + OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_tileView);
    if (!v29) {
      goto LABEL_15;
    }
    uint64_t v30 = *(void *)(v1 + v28);
    if (v30)
    {
      id v31 = v29;
      sub_240BB4850();
      uint64_t v32 = sub_240B364E4();
      sub_240ACC1E4(v30);

      swift_bridgeObjectRelease();
LABEL_15:
      sub_240A8B070(v9, v11);
      return;
    }
LABEL_17:
    __break(1u);
    return;
  }
  if (qword_26AFD7BF0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_240BB5990();
  sub_240A395FC(v12, (uint64_t)qword_26AFDEB80);
  uint64_t v13 = sub_240BB5970();
  os_log_type_t v14 = sub_240BB7190();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v35 = v16;
    *(_DWORD *)uint64_t v15 = 136446210;
    uint64_t v36 = ObjectType;
    swift_getMetatypeMetadata();
    uint64_t v17 = sub_240BB6E10();
    uint64_t v36 = sub_240A38940(v17, v18, &v35);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v13, v14, "[%{public}s] No user data found, expected related sample types cache object", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v16, -1, -1);
    MEMORY[0x24560B930](v15, -1, -1);
  }
}

id sub_240B88CC4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = &v3[OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_context];
  *(_OWORD *)uint64_t v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((void *)v5 + 4) = 0;
  *(void *)&v3[OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_cacheObject] = 0;
  *(void *)&v3[OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_tileView] = 0;
  if (a2)
  {
    uint64_t v6 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for AFibBurdenLifeFactorsTileViewController();
  id v7 = objc_msgSendSuper2(&v9, sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void sub_240B88E4C()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_cacheObject];
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = (uint64_t)&v0[OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_context];
    swift_beginAccess();
    sub_240A8ACAC(v3, (uint64_t)v16);
    uint64_t v4 = v17;
    if (v17)
    {
      uint64_t v5 = sub_240A3466C(v16, v17);
      uint64_t v6 = *(void *)(v4 - 8);
      MEMORY[0x270FA5388](v5);
      id v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
      (*(void (**)(unsigned char *))(v6 + 16))(v8);
      sub_240BB4850();
      objc_super v9 = (void *)sub_240BB4E10();
      (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v4);
      unint64_t v10 = (char *)objc_allocWithZone((Class)type metadata accessor for AFibBurdenLifeFactorsTileView());
      unint64_t v11 = v2;
      uint64_t v12 = sub_240B89E74(v1, v9, v11, v10);
      _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v16);
      uint64_t v13 = OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_tileView;
      os_log_type_t v14 = *(void **)&v11[OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_tileView];
      *(void *)&v11[OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_tileView] = v12;

      objc_msgSend(v11, sel_setView_, *(void *)&v11[v13]);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_240B89054()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenLifeFactorsTileViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240B890F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_context;
  swift_beginAccess();
  return sub_240A8ACAC(v3, a1);
}

uint64_t sub_240B8914C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_context;
  swift_beginAccess();
  sub_240A8ABD4(a1, v3);
  swift_endAccess();
  sub_240B88648();
  return sub_240B8A574(a1, (uint64_t (*)(void))sub_240B89E0C);
}

void (*sub_240B891D0(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_240B89230;
}

void sub_240B89230(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_240B88648();
  }
}

void sub_240B89264()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = v0 + OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_context;
  swift_beginAccess();
  sub_240A8ACAC(v2, (uint64_t)v22);
  uint64_t v3 = v23;
  if (!v23)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v4 = sub_240A3466C(v22, v23);
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  id v8 = (void *)sub_240BB4E10();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
  id v9 = objc_msgSend(v8, sel_displayTypeController);

  if (!v9)
  {
LABEL_11:
    __break(1u);
    return;
  }
  sub_240A4C530();
  unint64_t v10 = (void *)MEMORY[0x24560A470]((id)*MEMORY[0x263F09BF8]);
  id v11 = objc_msgSend(v9, sel_displayTypeForObjectType_, v10);

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v22);
  if (v11)
  {
    id v12 = objc_msgSend(v11, sel_displayCategory);
    objc_msgSend(v12, sel_color);
  }
  else
  {
    if (qword_26AFD7BF0 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_240BB5990();
    sub_240A395FC(v13, (uint64_t)qword_26AFDEB80);
    os_log_type_t v14 = sub_240BB5970();
    os_log_type_t v15 = sub_240BB7190();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v21 = v17;
      *(_DWORD *)uint64_t v16 = 136446210;
      v22[0] = ObjectType;
      swift_getMetatypeMetadata();
      uint64_t v18 = sub_240BB6E10();
      v22[0] = sub_240A38940(v18, v19, &v21);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v14, v15, "[%{public}s] No display type found for burden quantity type", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v17, -1, -1);
      MEMORY[0x24560B930](v16, -1, -1);
    }

    objc_msgSend(self, sel_blueColor);
  }
}

void sub_240B896C4()
{
}

uint64_t sub_240B896E8()
{
  return 0;
}

uint64_t sub_240B896F4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F326F8](a1, WitnessTable);
}

uint64_t sub_240B89758()
{
  return sub_240A55368(261);
}

uint64_t sub_240B89764(uint64_t a1, uint64_t a2)
{
  return sub_240B8A4D4(&qword_268CA1FA8, a2, (void (*)(uint64_t))type metadata accessor for AFibBurdenLifeFactorsTileViewController);
}

uint64_t sub_240B897AC(uint64_t a1, uint64_t a2)
{
  return sub_240B8A4D4(&qword_268CA1FB0, a2, (void (*)(uint64_t))type metadata accessor for AFibBurdenLifeFactorsTileViewController);
}

uint64_t sub_240B897F4(char a1, uint64_t a2)
{
  sub_240A87BE4(v27);
  type metadata accessor for AFibBurdenLifeFactorDescriptionDataSource(0);
  swift_allocObject();
  uint64_t v4 = sub_240AEC9DC(v27);
  sub_240B8A418((uint64_t)v27);
  uint64_t v5 = sub_240B89AB4(a2);
  uint64_t v7 = v6;
  swift_retain();
  sub_240BB7240();
  sub_240A3466C(v26, v26[3]);
  sub_240BB2FE0();
  id v8 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenLifeFactorAppRecommendationsFetchedResultsControllerDataSource(0));
  v8[qword_268CA0628] = a1;
  *(void *)&v8[qword_268CA0630] = a2;
  swift_retain();
  sub_240A942A0(a1);
  sub_240B8A47C();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_240BB97E0;
  *(void *)(v9 + 32) = sub_240BB30E0();
  unint64_t v10 = (void *)sub_240BB5520();
  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v26);
  swift_retain();
  id v11 = sub_240A42BA0(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v12 = v11[2];
  unint64_t v13 = v11[3];
  unint64_t v14 = v12 + 1;
  if (v12 >= v13 >> 1) {
    id v11 = sub_240A42BA0((void *)(v13 > 1), v12 + 1, 1, v11);
  }
  v11[2] = v14;
  uint64_t v15 = MEMORY[0x263F43CC0];
  uint64_t v16 = &v11[2 * v12];
  v16[4] = v4;
  v16[5] = v15;
  if (v5)
  {
    unint64_t v17 = v11[3];
    int64_t v18 = v12 + 2;
    swift_unknownObjectRetain();
    if (v14 >= v17 >> 1) {
      id v11 = sub_240A42BA0((void *)(v17 > 1), v18, 1, v11);
    }
    v11[2] = v18;
    unint64_t v19 = &v11[2 * v14];
    v19[4] = v5;
    v19[5] = v7;
  }
  unint64_t v20 = v11[2];
  unint64_t v21 = v11[3];
  id v22 = v10;
  if (v20 >= v21 >> 1) {
    id v11 = sub_240A42BA0((void *)(v21 > 1), v20 + 1, 1, v11);
  }
  uint64_t v23 = sub_240B8A4D4(&qword_268CA1FC0, 255, (void (*)(uint64_t))type metadata accessor for AFibBurdenLifeFactorAppRecommendationsFetchedResultsControllerDataSource);
  v11[2] = v20 + 1;
  uint64_t v24 = &v11[2 * v20];
  v24[4] = v22;
  void v24[5] = v23;
  swift_release();

  sub_240BB50A0();
  sub_240BB4930();
  swift_allocObject();
  return sub_240BB4940();
}

uint64_t sub_240B89AB4(uint64_t a1)
{
  uint64_t v21 = sub_240BB49C0();
  uint64_t v2 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B8A51C();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_240BB4C70();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = *(void **)(a1 + 24);
  uint64_t v13 = sub_240BB2FB0();
  uint64_t v14 = sub_240BB2FA0();
  uint64_t v24 = v13;
  uint64_t v25 = MEMORY[0x263F45450];
  uint64_t v23 = v14;
  id v15 = objc_msgSend(v12, sel_profileIdentifier);
  uint64_t v16 = sub_240BB3E60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v7, 1, 1, v16);
  sub_240BB40F0();

  sub_240B8A574((uint64_t)v7, (uint64_t (*)(void))sub_240B8A51C);
  sub_240A1E37C(a1 + 32, (uint64_t)v22);
  sub_240BB7280();
  sub_240BB4C20();
  int v17 = *(unsigned __int8 *)(a1 + 16);
  if (v17 == 1)
  {
    sub_240BB34D0();
    sub_240BB34A0();
  }
  else
  {
    sub_240A942A0(v17);
  }
  sub_240BB49A0();
  uint64_t v18 = sub_240BB49B0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v21);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v18;
}

unint64_t sub_240B89DB8()
{
  unint64_t result = qword_268CA1FB8;
  if (!qword_268CA1FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA1FB8);
  }
  return result;
}

void sub_240B89E0C()
{
  if (!qword_268CA2470)
  {
    sub_240A39BC8(255, (unint64_t *)&qword_268C9F700);
    unint64_t v0 = sub_240BB75E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA2470);
    }
  }
}

char *sub_240B89E74(uint64_t a1, void *a2, void *a3, char *a4)
{
  *(void *)&a4[OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView____lazy_storage___textLabel] = 0;
  *(void *)&a4[OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView____lazy_storage___horizontalRule] = 0;
  *(void *)&a4[OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView____lazy_storage___contentView] = 0;
  uint64_t v8 = &a4[OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView_contentViewDelegate];
  *(void *)&a4[OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView_contentViewDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v9 = (uint64_t *)&a4[OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView_baseIdentifier];
  uint64_t v10 = a4;
  uint64_t v27 = sub_240A55368(261);
  uint64_t v28 = v11;
  sub_240BB6E70();
  uint64_t v12 = v28;
  *uint64_t v9 = v27;
  v9[1] = v12;
  *(void *)&v10[OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView_cacheObject] = a1;
  *(void *)&v10[OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView_healthStore] = a2;
  *((void *)v8 + 1) = &off_26F50BDA0;
  swift_unknownObjectWeakAssign();
  id v13 = a2;

  v26.receiver = v10;
  v26.super_class = (Class)type metadata accessor for AFibBurdenLifeFactorsTileView();
  id v14 = objc_msgSendSuper2(&v26, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  id v15 = sub_240B36240();
  objc_msgSend(v14, sel_addSubview_, v15);

  id v16 = v14;
  id v17 = sub_240B36414();
  objc_msgSend(v16, sel_addSubview_, v17);

  uint64_t v18 = (char *)v16;
  unint64_t v19 = sub_240B364E4();
  objc_msgSend(v18, sel_addSubview_, v19);

  sub_240B366AC();
  uint64_t v21 = *(void *)&v18[OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView_baseIdentifier];
  uint64_t v20 = *(void *)&v18[OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView_baseIdentifier + 8];
  sub_240BB4850();
  id v22 = (void *)sub_240BB6DA0();
  objc_msgSend(v18, sel_setAccessibilityIdentifier_, v22);

  id v23 = sub_240B36240();
  uint64_t v27 = v21;
  uint64_t v28 = v20;
  sub_240BB4850();
  sub_240BB6E70();
  uint64_t v24 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  objc_msgSend(v23, sel_setAccessibilityIdentifier_, v24);
  swift_bridgeObjectRelease();

  return v18;
}

void sub_240B8A0F4(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (uint64_t)v1 + OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_context;
  swift_beginAccess();
  sub_240A8ACAC(v4, (uint64_t)v23);
  uint64_t v5 = v24;
  if (v24)
  {
    uint64_t v6 = sub_240A3466C(v23, v24);
    uint64_t v7 = *(void *)(v5 - 8);
    MEMORY[0x270FA5388](v6);
    uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v7 + 16))(v9);
    uint64_t v10 = sub_240BB4E10();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
    sub_240A8ACAC(v4, (uint64_t)v21);
    uint64_t v11 = v22;
    if (v22)
    {
      uint64_t v12 = sub_240A3466C(v21, v22);
      uint64_t v13 = *(void *)(v11 - 8);
      MEMORY[0x270FA5388](v12);
      id v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v13 + 16))(v15);
      sub_240BB4E30();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v11);
      type metadata accessor for AFibBurdenLifeFactorDetailViewModel();
      uint64_t v16 = swift_allocObject();
      swift_unknownObjectWeakInit();
      *(unsigned char *)(v16 + 16) = a1;
      *(void *)(v16 + 24) = v10;
      sub_240A37388(v20, v16 + 32);
      swift_unknownObjectWeakAssign();
      _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v21);
      _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v23);
      sub_240B897F4(a1, v16);
      id v17 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenLifeFactorDetailViewController());
      swift_retain();
      uint64_t v18 = (void *)sub_240BB53F0();
      swift_unknownObjectWeakAssign();
      id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v18);
      objc_msgSend(v2, sel_hk_presentModalCardViewController_fullScreen_animated_completion_, v19, 0, 1, 0);
      swift_release();
      swift_release();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_240B8A418(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_240A87A1C(v2);
  return a1;
}

void sub_240B8A47C()
{
  if (!qword_268CA06B8)
  {
    unint64_t v0 = sub_240BB7AB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA06B8);
    }
  }
}

uint64_t sub_240B8A4D4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240B8A51C()
{
  if (!qword_268CA0B80)
  {
    sub_240BB3E60();
    unint64_t v0 = sub_240BB75E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA0B80);
    }
  }
}

uint64_t sub_240B8A574(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_240B8A5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a3;
  v4[11] = a4;
  v4[8] = a1;
  v4[9] = a2;
  sub_240B8B5D8(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490]);
  v4[12] = swift_task_alloc();
  uint64_t v5 = sub_240BB2CF0();
  v4[13] = v5;
  v4[14] = *(void *)(v5 - 8);
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  sub_240B8B5D8(0, &qword_268C9FBE0, MEMORY[0x263F062D0]);
  v4[23] = swift_task_alloc();
  uint64_t v6 = sub_240BB27F0();
  v4[24] = v6;
  v4[25] = *(void *)(v6 - 8);
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  v4[28] = swift_task_alloc();
  uint64_t v7 = sub_240BB57F0();
  v4[29] = v7;
  v4[30] = *(void *)(v7 - 8);
  v4[31] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_240B8A854, 0, 0);
}

uint64_t sub_240B8A854()
{
  v0[32] = sub_240BB2E30();
  sub_240BB57E0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[33] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_240B8A908;
  uint64_t v2 = v0[9];
  return MEMORY[0x270F35048](v2);
}

uint64_t sub_240B8A908(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 272) = a1;
  *(void *)(v3 + 280) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_240B8B490;
  }
  else {
    uint64_t v4 = sub_240B8AA1C;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_240B8AA1C()
{
  uint64_t v105 = v0;
  uint64_t v1 = *(void *)(v0 + 272);
  sub_240A4C530();
  uint64_t v2 = MEMORY[0x24560A470]((id)*MEMORY[0x263F09BF8]);
  uint64_t v3 = (void *)v2;
  if (*(void *)(v1 + 16) && (unint64_t v4 = sub_240AB9F58(v2), (v5 & 1) != 0))
  {
    (*(void (**)(void, unint64_t, void))(*(void *)(v0 + 200) + 16))(*(void *)(v0 + 184), *(void *)(*(void *)(v0 + 272) + 56) + *(void *)(*(void *)(v0 + 200) + 72) * v4, *(void *)(v0 + 192));
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v6 = 1;
  }
  uint64_t v7 = *(void *)(v0 + 192);
  uint64_t v8 = *(void *)(v0 + 200);
  uint64_t v9 = *(void *)(v0 + 184);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v9, v6, 1, v7);
  swift_bridgeObjectRelease();

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7) == 1)
  {
    uint64_t v10 = *(void *)(v0 + 176);
    uint64_t v12 = *(void *)(v0 + 160);
    uint64_t v11 = *(void *)(v0 + 168);
    uint64_t v13 = *(void *)(v0 + 104);
    uint64_t v14 = *(void *)(v0 + 112);
    id v15 = *(void (**)(uint64_t))(v0 + 80);
    uint64_t v16 = sub_240B8B62C(*(void *)(v0 + 184), &qword_268C9FBE0, MEMORY[0x263F062D0]);
    v15(v16);
    id v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
    v17(v11, v10, v13);
    uint64_t v100 = v17;
    v17(v12, v10, v13);
    sub_240BB27B0();
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v18(v10, v13);
    id v19 = v18;
  }
  else
  {
    uint64_t v20 = *(void *)(v0 + 216);
    uint64_t v21 = *(void *)(v0 + 192);
    uint64_t v22 = *(void *)(v0 + 200);
    uint64_t v23 = *(void *)(v0 + 176);
    uint64_t v24 = *(void *)(v0 + 168);
    uint64_t v25 = *(void *)(v0 + 104);
    uint64_t v26 = *(void *)(v0 + 112);
    (*(void (**)(uint64_t, void, uint64_t))(v22 + 32))(v20, *(void *)(v0 + 184), v21);
    sub_240BB27D0();
    sub_240BB27E0();
    uint64_t v100 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16);
    v100(v24, v23, v25);
    sub_240BB27C0();
    uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v27(v23, v25);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    id v19 = v27;
  }
  uint64_t v28 = *(void **)(v0 + 256);
  uint64_t v29 = *(void *)(v0 + 176);
  uint64_t v91 = *(void *)(v0 + 144);
  uint64_t v93 = *(void *)(v0 + 136);
  uint64_t v30 = *(void *)(v0 + 104);
  uint64_t v31 = sub_240BB2DC0();
  sub_240BB27D0();
  uint64_t v32 = (void *)sub_240BB2C90();
  v19(v29, v30);
  id v33 = objc_msgSend(v28, sel_hk_startOfWeekWithFirstWeekday_beforeDate_addingWeeks_, v31, v32, 0);

  sub_240BB2CB0();
  uint64_t v34 = sub_240BB2DC0();
  sub_240BB27A0();
  uint64_t v35 = (void *)sub_240BB2C90();
  int v97 = v19;
  v19(v29, v30);
  id v36 = objc_msgSend(v28, sel_hk_startOfWeekWithFirstWeekday_beforeDate_addingWeeks_, v34, v35, 1);

  sub_240BB2CB0();
  id v37 = v100;
  v100(v93, v91, v30);
  if (sub_240BB2CC0() == -1)
  {
    uint64_t v46 = *(void *)(v0 + 112);
    uint64_t v92 = (void (**)(uint64_t, uint64_t, uint64_t))(v46 + 32);
    uint64_t v95 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56);
    uint64_t v89 = *(void *)(v0 + 200);
    uint64_t v90 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48);
    uint64_t v88 = (void (**)(uint64_t, uint64_t, uint64_t))(v46 + 40);
    unint64_t v38 = MEMORY[0x263F8EE78];
    while (1)
    {
      BOOL v47 = *(void **)(v0 + 256);
      v37(*(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 104));
      uint64_t v48 = (void *)sub_240BB2C90();
      id v49 = objc_msgSend(v47, sel_dateByAddingUnit_value_toDate_options_, 0x2000, -26, v48, 0);

      if (!v49) {
        break;
      }
      uint64_t v50 = *(void *)(v0 + 176);
      uint64_t v52 = *(void *)(v0 + 96);
      uint64_t v51 = *(void *)(v0 + 104);
      sub_240BB2CB0();

      int v53 = *v92;
      (*v92)(v52, v50, v51);
      (*v95)(v52, 0, 1, v51);
      if ((*v90)(v52, 1, v51) == 1) {
        goto LABEL_21;
      }
      uint64_t v55 = *(void *)(v0 + 168);
      uint64_t v54 = *(void *)(v0 + 176);
      uint64_t v57 = *(void *)(v0 + 120);
      uint64_t v56 = *(void *)(v0 + 128);
      uint64_t v58 = *(void *)(v0 + 104);
      v53(v57, *(void *)(v0 + 96), v58);
      v100(v54, v57, v58);
      v100(v55, v56, v58);
      sub_240BB27B0();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v38 = sub_240A42D10(0, *(void *)(v38 + 16) + 1, 1, v38);
      }
      unint64_t v60 = *(void *)(v38 + 16);
      unint64_t v59 = *(void *)(v38 + 24);
      if (v60 >= v59 >> 1) {
        unint64_t v38 = sub_240A42D10(v59 > 1, v60 + 1, 1, v38);
      }
      uint64_t v61 = *(void *)(v0 + 208);
      uint64_t v62 = *(void *)(v0 + 192);
      uint64_t v64 = *(void *)(v0 + 128);
      uint64_t v63 = *(void *)(v0 + 136);
      uint64_t v65 = *(void *)(v0 + 120);
      uint64_t v66 = *(void *)(v0 + 104);
      *(void *)(v38 + 16) = v60 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v89 + 32))(v38+ ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80))+ *(void *)(v89 + 72) * v60, v61, v62);
      v97(v64, v66);
      (*v88)(v63, v65, v66);
      id v37 = v100;
      if (sub_240BB2CC0() != -1) {
        goto LABEL_10;
      }
    }
    (*v95)(*(void *)(v0 + 96), 1, 1, *(void *)(v0 + 104));
LABEL_21:
    uint64_t v67 = *(void *)(v0 + 96);
    swift_bridgeObjectRelease();
    sub_240B8B62C(v67, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490]);
    if (qword_26AFD7BF0 != -1) {
      swift_once();
    }
    uint64_t v68 = sub_240BB5990();
    sub_240A395FC(v68, (uint64_t)qword_26AFDEB80);
    int v69 = sub_240BB5970();
    os_log_type_t v70 = sub_240BB7190();
    BOOL v71 = os_log_type_enabled(v69, v70);
    uint64_t v72 = *(void **)(v0 + 256);
    if (v71)
    {
      uint64_t v102 = *(void **)(v0 + 256);
      uint64_t v73 = swift_slowAlloc();
      uint64_t v74 = swift_slowAlloc();
      uint64_t v104 = v74;
      *(_DWORD *)uint64_t v73 = 136446467;
      *(void *)(v0 + 40) = &type metadata for AFibBurdenPDFChartDateIntervalProvider;
      sub_240B8B688();
      uint64_t v75 = sub_240BB6E10();
      *(void *)(v0 + 48) = sub_240A38940(v75, v76, &v104);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v73 + 12) = 2085;
      swift_beginAccess();
      uint64_t v77 = sub_240BB2C70();
      *(void *)(v0 + 56) = sub_240A38940(v77, v78, &v104);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v69, v70, "[%{public}s] Hitting critical error while trying to add -26 weeks to: %{sensitive}s", (uint8_t *)v73, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v74, -1, -1);
      MEMORY[0x24560B930](v73, -1, -1);
    }
    else
    {
    }
    uint64_t v79 = *(void *)(v0 + 240);
    uint64_t v103 = *(void *)(v0 + 248);
    uint64_t v80 = *(void *)(v0 + 224);
    uint64_t v99 = *(void *)(v0 + 232);
    uint64_t v82 = *(void *)(v0 + 192);
    uint64_t v81 = *(void *)(v0 + 200);
    uint64_t v84 = *(void *)(v0 + 144);
    uint64_t v83 = *(void *)(v0 + 152);
    uint64_t v96 = *(void *)(v0 + 136);
    uint64_t v85 = *(void *)(v0 + 104);
    v97(*(void *)(v0 + 128), v85);
    v97(v84, v85);
    v97(v83, v85);
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v80, v82);
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v103, v99);
    v97(v96, v85);
    unint64_t v38 = MEMORY[0x263F8EE78];
  }
  else
  {
    unint64_t v38 = MEMORY[0x263F8EE78];
LABEL_10:
    uint64_t v101 = *(void *)(v0 + 248);
    uint64_t v39 = *(void *)(v0 + 240);
    uint64_t v98 = *(void *)(v0 + 232);
    uint64_t v40 = *(void *)(v0 + 224);
    uint64_t v42 = *(void *)(v0 + 192);
    uint64_t v41 = *(void *)(v0 + 200);
    uint64_t v43 = *(void *)(v0 + 144);
    uint64_t v44 = *(void *)(v0 + 152);
    uint64_t v94 = *(void *)(v0 + 136);
    uint64_t v45 = *(void *)(v0 + 104);

    v97(v43, v45);
    v97(v44, v45);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v101, v98);
    v97(v94, v45);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v86 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v86(v38);
}

uint64_t sub_240B8B490()
{
  uint64_t v1 = *(void *)(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 240);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

void sub_240B8B5D8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240BB75E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_240B8B62C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_240B8B5D8(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_240B8B688()
{
  unint64_t result = qword_268CA1FD0;
  if (!qword_268CA1FD0)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CA1FD0);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for AFibBurdenPDFChartDateIntervalProvider(uint64_t a1, long long *a2)
{
  uint64_t v3 = *((void *)a2 + 2);
  long long v4 = *a2;
  *(_OWORD *)a1 = *a2;
  *(void *)(a1 + 16) = v3;
  id v5 = (id)v4;
  swift_retain();
  return a1;
}

uint64_t destroy for AFibBurdenPDFChartDateIntervalProvider(id *a1)
{
  return swift_release();
}

uint64_t assignWithCopy for AFibBurdenPDFChartDateIntervalProvider(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for AFibBurdenPDFChartDateIntervalProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFChartDateIntervalProvider()
{
  return &type metadata for AFibBurdenPDFChartDateIntervalProvider;
}

uint64_t sub_240B8B7FC@<X0>(uint64_t a1@<X8>)
{
  sub_240B8D598(0);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  id v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v14[-v7];
  uint64_t v9 = v1 + OBJC_IVAR____TtC5Heart35LowCardioFitnessArticleDataProvider____lazy_storage___featureStatus;
  swift_beginAccess();
  sub_240B8FCCC(v9, (uint64_t)v8, (uint64_t (*)(void))sub_240B8D598);
  sub_240A35CBC(0);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v10) != 1) {
    return sub_240B8FD98((uint64_t)v8, a1, (uint64_t (*)(void))sub_240A35CBC);
  }
  sub_240B8FC6C((uint64_t)v8, (uint64_t (*)(void))sub_240B8D598);
  sub_240B8BA20(v1, a1);
  sub_240B8FCCC(a1, (uint64_t)v6, (uint64_t (*)(void))sub_240A35CBC);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v6, 0, 1, v11);
  swift_beginAccess();
  sub_240B8FD34((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t sub_240B8BA20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_240A3466C((void *)(a1 + 24), *(void *)(a1 + 48));
  sub_240BB5770();
  uint64_t v3 = sub_240BB56E0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(a2, 0, 1, v3);
}

uint64_t sub_240B8BC90()
{
  uint64_t v1 = OBJC_IVAR____TtC5Heart35LowCardioFitnessArticleDataProvider____lazy_storage___showBridgeLink;
  int v2 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC5Heart35LowCardioFitnessArticleDataProvider____lazy_storage___showBridgeLink);
  if (v2 == 2)
  {
    unsigned __int8 v3 = sub_240B8BCDC();
    *(unsigned char *)(v0 + v1) = v3 & 1;
  }
  else
  {
    unsigned __int8 v3 = v2 & 1;
  }
  return v3 & 1;
}

id sub_240B8BCDC()
{
  sub_240A35CBC(0);
  MEMORY[0x270FA5388](v0 - 8);
  int v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_240BB56E0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B8B7FC((uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_240B8FC6C((uint64_t)v2, (uint64_t (*)(void))sub_240A35CBC);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  uint64_t v7 = (void *)sub_240BB56F0();
  unsigned int v8 = objc_msgSend(v7, sel_areAllRequirementsSatisfied);

  if (!v8)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return 0;
  }
  uint64_t v9 = (void *)sub_240BB56F0();
  id v10 = objc_msgSend(v9, sel_areAllRequirementsSatisfied);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v10;
}

id sub_240B8BED0()
{
  uint64_t v1 = self;
  uint64_t v2 = *(void *)(v0 + 16);
  id v3 = objc_msgSend(v1, sel_sharedInstanceForHealthStore_, v2);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = v3;
  uint64_t v5 = (void *)sub_240BB70C0();
  id v6 = objc_msgSend(v4, sel_displayTypeWithIdentifier_, v5);

  if (!v6)
  {

    return 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46908]), sel_initWithDisplayType_healthStore_shouldEmbedInScrollView_, v6, v2, 0);

  return v7;
}

uint64_t sub_240B8BF98@<X0>(uint64_t *a1@<X8>)
{
  sub_240B8D5CC(0, &qword_26AFD7B70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v31 - v4;
  id v6 = objc_msgSend(*(id *)(v1 + 16), sel_profileIdentifier);
  id v7 = objc_msgSend(v6, sel_type);

  if (v7 == (id)1 && (sub_240B8BC90() & 1) != 0)
  {
    if (qword_26AFDA090 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_240BB2980();
    uint64_t v10 = v9;
    uint64_t v11 = sub_240B8F9B8();
    uint64_t v13 = HIBYTE(v12) & 0xF;
    if ((v12 & 0x2000000000000000) == 0) {
      uint64_t v13 = v11 & 0xFFFFFFFFFFFFLL;
    }
    if (v13)
    {
      *a1 = v8;
      a1[1] = v10;
      a1[2] = v11;
      a1[3] = v12;
      sub_240BB2B10();
      uint64_t v14 = sub_240BB2B20();
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v5, 1, v14);
      if (result == 1)
      {
        __break(1u);
      }
      else
      {
        sub_240A78190();
        uint64_t v18 = (char *)a1 + *(int *)(v17 + 64);
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v5, v14);
        uint64_t v19 = *MEMORY[0x263F42A70];
        uint64_t v20 = sub_240BB34E0();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v18, v19, v20);
        uint64_t v21 = *MEMORY[0x263F42A98];
        uint64_t v22 = sub_240BB34F0();
        uint64_t v23 = *(void *)(v22 - 8);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v23 + 104))(a1, v21, v22);
        return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(v23 + 56))(a1, 0, 1, v22);
      }
      return result;
    }
    swift_bridgeObjectRelease();
    *a1 = v8;
    a1[1] = v10;
    *((unsigned char *)a1 + 16) = 0;
    uint64_t v29 = *MEMORY[0x263F42AE0];
    uint64_t v30 = sub_240BB34F0();
    uint64_t v32 = *(void *)(v30 - 8);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v32 + 104))(a1, v29, v30);
    uint64_t v25 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v32 + 56);
    uint64_t v27 = a1;
    uint64_t v28 = 0;
    uint64_t v26 = v30;
  }
  else
  {
    uint64_t v24 = sub_240BB34F0();
    uint64_t v25 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
    uint64_t v26 = v24;
    uint64_t v27 = a1;
    uint64_t v28 = 1;
  }

  return v25(v27, v28, 1, v26);
}

void sub_240B8C3BC()
{
  uint64_t v1 = sub_240BB34F0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)v105 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v119 = (char *)v105 - v6;
  sub_240A77E08(0);
  uint64_t v107 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v120 = (char *)v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v121 = (uint64_t)v105 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v105 - v13;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
  v15((char *)v105 - v13, 1, 1, v1);
  uint64_t v106 = v0;
  id v16 = sub_240B8BED0();
  if (v16)
  {
    id v17 = v16;
    sub_240B8FC6C((uint64_t)v14, (uint64_t (*)(void))sub_240A77E08);
    *(void *)uint64_t v14 = v17;
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v14, *MEMORY[0x263F42A50], v1);
    v15(v14, 0, 1, v1);
  }
  uint64_t v110 = v14;
  uint64_t v115 = v15;
  uint64_t v116 = v2 + 56;
  sub_240B8D5CC(0, &qword_268C9F2F0, (uint64_t (*)(uint64_t))sub_240A77E08, MEMORY[0x263F8E0F8]);
  unint64_t v18 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v122 = *(void *)(v8 + 72);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_240BC6670;
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v20 = (id)qword_26AFDECD8;
  uint64_t v21 = (void *)sub_240BB6DA0();
  id v22 = objc_msgSend(self, sel_imageNamed_inBundle_, v21, v20);

  if (v22)
  {
    v105[1] = v19;
    unint64_t v23 = v19 + v18;
    *(void *)unint64_t v23 = v22;
    *(unsigned char *)(v23 + 8) = 0;
    uint64_t v24 = *MEMORY[0x263F42AB8];
    uint64_t v118 = v2;
    uint64_t v25 = v2 + 104;
    uint64_t v26 = *(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 104);
    v26(v23, v24, v1);
    uint64_t v27 = v115;
    v115((char *)v23, 0, 1, v1);
    uint64_t v28 = v122;
    uint64_t v29 = (uint64_t *)(v23 + v122);
    *uint64_t v29 = sub_240BB2980();
    v29[1] = v30;
    v26(v23 + v28, *MEMORY[0x263F42AC0], v1);
    v27((char *)(v23 + v28), 0, 1, v1);
    uint64_t v112 = 2 * v28;
    unint64_t v31 = v23 + 2 * v28;
    unint64_t v113 = 0xD000000000000013;
    *(void *)unint64_t v31 = sub_240BB2980();
    *(void *)(v31 + 8) = v32;
    *(unsigned char *)(v31 + 16) = 0;
    unsigned int v114 = *MEMORY[0x263F42AE0];
    ((void (*)(unint64_t))v26)(v31);
    v27((char *)v31, 0, 1, v1);
    id v33 = (uint64_t *)(v23 + v112 + v28);
    uint64_t v117 = v23;
    uint64_t *v33 = sub_240BB2980();
    v33[1] = v34;
    v33[2] = 0;
    LODWORD(v112) = *MEMORY[0x263F42A80];
    ((void (*)(uint64_t *))v26)(v33);
    v27((char *)v33, 0, 1, v1);
    unint64_t v35 = v23 + 4 * v28;
    *(void *)unint64_t v35 = sub_240BB2980();
    *(void *)(v35 + 8) = v36;
    *(unsigned char *)(v35 + 16) = 0;
    uint64_t v37 = v114;
    v26(v35, v114, v1);
    v115((char *)v35, 0, 1, v1);
    uint64_t v38 = v117 + 5 * v28;
    *(void *)uint64_t v38 = sub_240BB2980();
    *(void *)(v38 + 8) = v39;
    *(unsigned char *)(v38 + 16) = 0;
    v26(v38, v37, v1);
    uint64_t v40 = v25;
    uint64_t v109 = v26;
    uint64_t v41 = v115;
    v115((char *)v38, 0, 1, v1);
    uint64_t v42 = (uint64_t *)(v117 + 6 * v28);
    uint64_t *v42 = sub_240BB2980();
    v42[1] = v43;
    void v42[2] = 0;
    uint64_t v44 = v112;
    v26((unint64_t)v42, v112, v1);
    v41((char *)v42, 0, 1, v1);
    uint64_t v45 = v117;
    sub_240B8FCCC((uint64_t)v110, v117 + 7 * v28, (uint64_t (*)(void))sub_240A77E08);
    uint64_t v46 = (uint64_t *)(v45 + 8 * v28);
    *uint64_t v46 = sub_240BB2980();
    v46[1] = v47;
    id v46[2] = 0;
    uint64_t v108 = v40;
    uint64_t v48 = v109;
    v109((unint64_t)v46, v44, v1);
    id v49 = v115;
    v115((char *)v46, 0, 1, v1);
    uint64_t v50 = v45 + 8 * v28 + v122;
    *(void *)uint64_t v50 = sub_240BB2980();
    *(void *)(v50 + 8) = v51;
    *(unsigned char *)(v50 + 16) = 0;
    uint64_t v52 = v114;
    v48(v50, v114, v1);
    v49((char *)v50, 0, 1, v1);
    uint64_t v53 = v122;
    uint64_t v54 = v117 + 10 * v122;
    *(void *)uint64_t v54 = sub_240BB2980();
    *(void *)(v54 + 8) = v55;
    *(unsigned char *)(v54 + 16) = 0;
    v48(v54, v52, v1);
    uint64_t v56 = v48;
    uint64_t v57 = v115;
    v115((char *)v54, 0, 1, v1);
    uint64_t v58 = v117;
    unint64_t v59 = (uint64_t *)(v117 + 11 * v53);
    *unint64_t v59 = sub_240BB2980();
    v59[1] = v60;
    v59[2] = 0;
    v56(v58 + 11 * v53, v112, v1);
    v57((char *)(v58 + 11 * v53), 0, 1, v1);
    uint64_t v61 = (uint64_t *)(v58 + 12 * v53);
    uint64_t v62 = v58;
    unint64_t v111 = 0x8000000240BD5750;
    uint64_t v63 = sub_240BB2980();
    v105[0] = v64;
    sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
    uint64_t v65 = swift_allocObject();
    *(_OWORD *)(v65 + 16) = xmmword_240BBD020;
    *(void *)(v65 + 32) = sub_240BB2980();
    *(void *)(v65 + 40) = v66;
    *(void *)(v65 + 48) = sub_240BB2980();
    *(void *)(v65 + 56) = v67;
    *(void *)(v65 + 64) = sub_240BB2980();
    *(void *)(v65 + 72) = v68;
    uint64_t v69 = v105[0];
    *uint64_t v61 = v63;
    v61[1] = v69;
    _OWORD v61[2] = v65;
    uint64_t v71 = v108;
    os_log_type_t v70 = v109;
    v109((unint64_t)v61, *MEMORY[0x263F42AA0], v1);
    uint64_t v72 = v115;
    v115((char *)v61, 0, 1, v1);
    uint64_t v73 = v122;
    sub_240B8BF98((uint64_t *)(v62 + 13 * v122));
    uint64_t v74 = (uint64_t *)(v62 + 14 * v73);
    *uint64_t v74 = sub_240BB2980();
    v74[1] = v75;
    v74[2] = 0;
    v70((unint64_t)v74, v112, v1);
    uint64_t v76 = v71;
    uint64_t v77 = v72;
    v72((char *)v74, 0, 1, v1);
    uint64_t v78 = 16 * v122;
    uint64_t v106 = 16 * v122;
    uint64_t v79 = v117;
    uint64_t v80 = v117 + 15 * v122;
    *(void *)uint64_t v80 = sub_240BB2980();
    *(void *)(v80 + 8) = v81;
    *(unsigned char *)(v80 + 16) = 0;
    v70(v80, v114, v1);
    v77((char *)v80, 0, 1, v1);
    uint64_t v82 = (uint64_t *)(v79 + v78);
    uint64_t *v82 = sub_240BB2980();
    v82[1] = v83;
    v82[2] = 0;
    uint64_t v84 = v70;
    uint64_t v85 = v76;
    v70((unint64_t)v82, v112, v1);
    v77((char *)v82, 0, 1, v1);
    uint64_t v86 = v122;
    uint64_t v87 = v117;
    uint64_t v88 = v117 + v106 + v122;
    *(void *)uint64_t v88 = sub_240BB2980();
    *(void *)(v88 + 8) = v89;
    *(unsigned char *)(v88 + 16) = 0;
    v84(v88, v114, v1);
    v77((char *)v88, 0, 1, v1);
    uint64_t v90 = v87 + 18 * v86;
    *(void *)uint64_t v90 = sub_240BB2980();
    *(void *)(v90 + 8) = v91;
    *(unsigned char *)(v90 + 16) = 0;
    v84(v90, v114, v1);
    v77((char *)v90, 0, 1, v1);
    uint64_t v92 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 - 56);
    uint64_t v93 = (void (**)(char *, uint64_t, uint64_t))(v85 - 72);
    unint64_t v94 = MEMORY[0x263F8EE78];
    uint64_t v95 = 19;
    uint64_t v96 = v5;
    uint64_t v97 = (uint64_t)v120;
    do
    {
      uint64_t v98 = v121;
      sub_240B8FCCC(v87, v121, (uint64_t (*)(void))sub_240A77E08);
      sub_240B8FD98(v98, v97, (uint64_t (*)(void))sub_240A77E08);
      if ((*v92)(v97, 1, v1) == 1)
      {
        sub_240B8FC6C(v97, (uint64_t (*)(void))sub_240A77E08);
      }
      else
      {
        uint64_t v99 = v97;
        uint64_t v100 = *v93;
        uint64_t v101 = v119;
        (*v93)(v119, v99, v1);
        v100(v5, (uint64_t)v101, v1);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v94 = sub_240A429C4(0, *(void *)(v94 + 16) + 1, 1, v94);
        }
        unint64_t v103 = *(void *)(v94 + 16);
        unint64_t v102 = *(void *)(v94 + 24);
        if (v103 >= v102 >> 1) {
          unint64_t v94 = sub_240A429C4(v102 > 1, v103 + 1, 1, v94);
        }
        *(void *)(v94 + 16) = v103 + 1;
        unint64_t v104 = v94
             + ((*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80))
             + *(void *)(v118 + 72) * v103;
        uint64_t v5 = v96;
        v100((char *)v104, (uint64_t)v96, v1);
        uint64_t v97 = (uint64_t)v120;
      }
      v87 += v122;
      --v95;
    }
    while (v95);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_240B8FC6C((uint64_t)v110, (uint64_t (*)(void))sub_240A77E08);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_240B8D458()
{
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 24);
  sub_240B8FC6C(v0 + OBJC_IVAR____TtC5Heart35LowCardioFitnessArticleDataProvider____lazy_storage___featureStatus, (uint64_t (*)(void))sub_240B8D598);

  return swift_deallocClassInstance();
}

uint64_t sub_240B8D4E0()
{
  return type metadata accessor for LowCardioFitnessArticleDataProvider();
}

void sub_240B8D4E8()
{
  sub_240B8D598(319);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_240B8D598(uint64_t a1)
{
}

void sub_240B8D5CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_240B8D630()
{
}

unint64_t sub_240B8D654()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_240B8D670()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  return sub_240BB2980();
}

uint64_t sub_240B8D70C()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  return sub_240BB2980();
}

uint64_t sub_240B8D7B0()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  return sub_240BB2980();
}

void sub_240B8D850()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v0 = (id)qword_26AFDECD8;
  uint64_t v1 = (void *)sub_240BB6DA0();
  id v2 = objc_msgSend(self, sel_imageNamed_inBundle_, v1, v0);

  if (!v2) {
    __break(1u);
  }
}

uint64_t sub_240B8D918(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  sub_240BB6DE0();
  sub_240BB7BC0();
  sub_240BB4850();
  sub_240BB6E50();
  uint64_t v7 = sub_240BB7C00();
  swift_bridgeObjectRelease();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    id v24 = a2;
    sub_240B8E828((uint64_t)v24, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v28;
    swift_bridgeObjectRelease();
    *a1 = v24;
    return 1;
  }
  uint64_t v10 = sub_240BB6DE0();
  uint64_t v12 = v11;
  if (v10 == sub_240BB6DE0() && v12 == v13)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      uint64_t v16 = ~v8;
      do
      {
        unint64_t v9 = (v9 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
          goto LABEL_15;
        }
        uint64_t v17 = sub_240BB6DE0();
        uint64_t v19 = v18;
        if (v17 == sub_240BB6DE0() && v19 == v20) {
          goto LABEL_16;
        }
        char v22 = sub_240BB7AE0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v22 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease();
  uint64_t v26 = *(void **)(*(void *)(*v3 + 48) + 8 * v9);
  *a1 = v26;
  id v27 = v26;
  return 0;
}

uint64_t sub_240B8DB44(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_240BB7BC0();
  sub_240BB4850();
  sub_240BB6E50();
  uint64_t v8 = sub_240BB7C00();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_240BB7AE0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      sub_240BB4850();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_240BB7AE0() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_240BB4850();
  sub_240B8EA58(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_240B8DCF4(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  if (a2)
  {
    sub_240A351D0(0, a3, a4, a5, a6);
    uint64_t v10 = sub_240BB7790();
    uint64_t v23 = v10;
    sub_240BB76B0();
    if (sub_240BB7720())
    {
      sub_240A34DC4(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v10 = v23;
        unint64_t v17 = *(void *)(v23 + 16);
        if (*(void *)(v23 + 24) <= v17)
        {
          sub_240B8E508(v17 + 1, a3, a4, a5, a6);
          uint64_t v10 = v23;
        }
        uint64_t result = sub_240BB74F0();
        uint64_t v12 = v10 + 56;
        uint64_t v13 = -1 << *(unsigned char *)(v10 + 32);
        unint64_t v14 = result & ~v13;
        unint64_t v15 = v14 >> 6;
        if (((-1 << v14) & ~*(void *)(v10 + 56 + 8 * (v14 >> 6))) != 0)
        {
          unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 56 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v18 = 0;
          unint64_t v19 = (unint64_t)(63 - v13) >> 6;
          do
          {
            if (++v15 == v19 && (v18 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v20 = v15 == v19;
            if (v15 == v19) {
              unint64_t v15 = 0;
            }
            v18 |= v20;
            uint64_t v21 = *(void *)(v12 + 8 * v15);
          }
          while (v21 == -1);
          unint64_t v16 = __clz(__rbit64(~v21)) + (v15 << 6);
        }
        *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        *(void *)(*(void *)(v10 + 48) + 8 * v16) = v22;
        ++*(void *)(v10 + 16);
      }
      while (sub_240BB7720());
    }
    swift_release();
  }
  else
  {
    sub_240BB50A0();
    return MEMORY[0x263F8EE88];
  }
  return v10;
}

uint64_t sub_240B8DF1C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_240B8FE58();
  uint64_t v3 = sub_240BB7780();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    id v27 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v29 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v28 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v28) {
          goto LABEL_33;
        }
        unint64_t v15 = v29[v14];
        ++v10;
        if (!v15)
        {
          int64_t v10 = v14 + 1;
          if (v14 + 1 >= v28) {
            goto LABEL_33;
          }
          unint64_t v15 = v29[v10];
          if (!v15)
          {
            int64_t v10 = v14 + 2;
            if (v14 + 2 >= v28) {
              goto LABEL_33;
            }
            unint64_t v15 = v29[v10];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v28)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v27;
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero(v29, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v29 = -1 << v26;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v29[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v28) {
                    goto LABEL_33;
                  }
                  unint64_t v15 = v29[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
      sub_240BB6DE0();
      sub_240BB7BC0();
      sub_240BB6E50();
      uint64_t v18 = sub_240BB7C00();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v8 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v11 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_240B8E22C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_240A73768();
  uint64_t v3 = sub_240BB7780();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_240BB7BC0();
      sub_240BB6E50();
      uint64_t result = sub_240BB7C00();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_240B8E508(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v6 = v5;
  uint64_t v7 = *v5;
  sub_240A351D0(0, a2, a3, a4, a5);
  uint64_t v8 = sub_240BB7780();
  uint64_t v9 = v8;
  if (*(void *)(v7 + 16))
  {
    id v33 = v5;
    uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
    int64_t v11 = (void *)(v7 + 56);
    if (v10 < 64) {
      uint64_t v12 = ~(-1 << v10);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v7 + 56);
    int64_t v14 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v15 = v8 + 56;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v13)
      {
        unint64_t v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v21 >= v14) {
          goto LABEL_33;
        }
        unint64_t v22 = v11[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v14) {
            goto LABEL_33;
          }
          unint64_t v22 = v11[v17];
          if (!v22)
          {
            int64_t v17 = v21 + 2;
            if (v21 + 2 >= v14) {
              goto LABEL_33;
            }
            unint64_t v22 = v11[v17];
            if (!v22)
            {
              int64_t v23 = v21 + 3;
              if (v23 >= v14)
              {
LABEL_33:
                swift_release();
                uint64_t v6 = v33;
                uint64_t v32 = 1 << *(unsigned char *)(v7 + 32);
                if (v32 > 63) {
                  bzero((void *)(v7 + 56), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v11 = -1 << v32;
                }
                *(void *)(v7 + 16) = 0;
                break;
              }
              unint64_t v22 = v11[v23];
              if (!v22)
              {
                while (1)
                {
                  int64_t v17 = v23 + 1;
                  if (__OFADD__(v23, 1)) {
                    goto LABEL_39;
                  }
                  if (v17 >= v14) {
                    goto LABEL_33;
                  }
                  unint64_t v22 = v11[v17];
                  ++v23;
                  if (v22) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v17 = v23;
            }
          }
        }
LABEL_23:
        unint64_t v13 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(v7 + 48) + 8 * v20);
      uint64_t result = sub_240BB74F0();
      uint64_t v25 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v15 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v18 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v9 + 48) + 8 * v18) = v24;
      ++*(void *)(v9 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v6 = v9;
  return result;
}

unint64_t sub_240B8E7A4(uint64_t a1, uint64_t a2)
{
  sub_240BB74F0();
  unint64_t result = sub_240BB7690();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_240B8E828(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_22;
  }
  if (a3)
  {
    sub_240B8DF1C();
  }
  else
  {
    if (v8 > v7)
    {
      unint64_t result = (uint64_t)sub_240B8EBF4();
LABEL_22:
      uint64_t v25 = *v4;
      *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(void *)(*(void *)(v25 + 48) + 8 * a2) = v6;
      uint64_t v26 = *(void *)(v25 + 16);
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (!v27)
      {
        *(void *)(v25 + 16) = v28;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_240B8EF4C();
  }
  uint64_t v9 = *v3;
  sub_240BB6DE0();
  sub_240BB7BC0();
  sub_240BB6E50();
  uint64_t v10 = sub_240BB7C00();
  unint64_t result = swift_bridgeObjectRelease();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v12 = sub_240BB6DE0();
  uint64_t v14 = v13;
  if (v12 == sub_240BB6DE0() && v14 == v15)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  char v17 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  unint64_t result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    uint64_t v18 = ~v11;
    do
    {
      a2 = (a2 + 1) & v18;
      if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_22;
      }
      uint64_t v19 = sub_240BB6DE0();
      uint64_t v21 = v20;
      if (v19 == sub_240BB6DE0() && v21 == v22) {
        goto LABEL_25;
      }
      char v24 = sub_240BB7AE0();
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
    }
    while ((v24 & 1) == 0);
  }
LABEL_26:
  type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(0);
  unint64_t result = sub_240BB7B20();
  __break(1u);
  return result;
}

uint64_t sub_240B8EA58(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_240B8E22C();
  }
  else
  {
    if (v10 > v9)
    {
      unint64_t result = (uint64_t)sub_240B8ED9C();
      goto LABEL_22;
    }
    sub_240B8F228();
  }
  uint64_t v11 = *v4;
  sub_240BB7BC0();
  sub_240BB6E50();
  unint64_t result = sub_240BB7C00();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (unint64_t result = sub_240BB7AE0(), (result & 1) != 0))
    {
LABEL_21:
      unint64_t result = sub_240BB7B20();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          unint64_t result = sub_240BB7AE0();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  uint64_t *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

id sub_240B8EBF4()
{
  uint64_t v1 = v0;
  sub_240B8FE58();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_240BB7770();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_240B8ED9C()
{
  uint64_t v1 = v0;
  sub_240A73768();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_240BB7770();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v19 = *v17;
    v19[1] = v18;
    id result = (void *)sub_240BB4850();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_240B8EF4C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_240B8FE58();
  uint64_t v3 = sub_240BB7780();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  BOOL v27 = v0;
  uint64_t v28 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v28 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v28 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v13);
    sub_240BB6DE0();
    sub_240BB7BC0();
    id v18 = v17;
    sub_240BB6E50();
    uint64_t v19 = sub_240BB7C00();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v8 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v11 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v4 + 48) + 8 * v11) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v27;
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v28 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_240B8F228()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_240A73768();
  uint64_t v3 = sub_240BB7780();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_240BB7BC0();
    sub_240BB4850();
    sub_240BB6E50();
    uint64_t result = sub_240BB7C00();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_240B8F4D4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v6 = v5;
  uint64_t v7 = *v5;
  sub_240A351D0(0, a2, a3, a4, a5);
  uint64_t v8 = sub_240BB7780();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v6 = v9;
    return result;
  }
  uint64_t v32 = v5;
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = v7 + 56;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v7 + 56);
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v15 = v8 + 56;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v21 >= v14) {
      goto LABEL_33;
    }
    unint64_t v22 = *(void *)(v11 + 8 * v21);
    ++v17;
    if (!v22)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_33;
      }
      unint64_t v22 = *(void *)(v11 + 8 * v17);
      if (!v22)
      {
        int64_t v17 = v21 + 2;
        if (v21 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v22 = *(void *)(v11 + 8 * v17);
        if (!v22) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_24:
    id v24 = *(id *)(*(void *)(v7 + 48) + 8 * v20);
    uint64_t result = sub_240BB74F0();
    uint64_t v25 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v15 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v18 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v9 + 48) + 8 * v18) = v24;
    ++*(void *)(v9 + 16);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v14)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v6 = v32;
    goto LABEL_35;
  }
  unint64_t v22 = *(void *)(v11 + 8 * v23);
  if (v22)
  {
    int64_t v17 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v17 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v22 = *(void *)(v11 + 8 * v17);
    ++v23;
    if (v22) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_240B8F74C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(0);
  sub_240B8FE00();
  uint64_t result = sub_240BB7070();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (void **)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      sub_240B8D918(&v6, v5);

      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_240B8F7D8(unint64_t a1)
{
  return sub_240B8F820(a1, (unint64_t *)&qword_26AFD9918, 0x263F0A598, (unint64_t *)&unk_26AFD9920, (unint64_t *)&qword_26AFD9ED0);
}

uint64_t sub_240B8F7FC(unint64_t a1)
{
  return sub_240B8F820(a1, (unint64_t *)&qword_26AFD9948, 0x263F0A658, &qword_268CA1FD8, &qword_268CA1FE0);
}

uint64_t sub_240B8F820(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, unint64_t *a5)
{
  unint64_t v10 = a1 >> 62;
  if (a1 >> 62)
  {
    sub_240BB4850();
    sub_240BB7900();
    swift_bridgeObjectRelease();
  }
  sub_240A34DC4(0, a2);
  sub_240A73718(a4, a2);
  uint64_t result = sub_240BB7070();
  uint64_t v18 = result;
  if (v10)
  {
    sub_240BB4850();
    uint64_t v12 = sub_240BB7900();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v12) {
      return v18;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v12) {
      return v18;
    }
  }
  if (v12 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v12; ++i)
      {
        int64_t v14 = (void *)MEMORY[0x24560AAA0](i, a1);
        sub_240A23B6C(&v17, v14, a2, a3, a5, a4);
      }
    }
    else
    {
      uint64_t v15 = (void **)(a1 + 32);
      do
      {
        int64_t v16 = *v15++;
        sub_240A23B6C(&v17, v16, a2, a3, a5, a4);

        --v12;
      }
      while (v12);
    }
    return v18;
  }
  __break(1u);
  return result;
}

uint64_t sub_240B8F9B8()
{
  id v0 = self;
  uint64_t v1 = (void *)sub_240BB6DA0();
  id v2 = objc_msgSend(v0, sel_modelSpecificLocalizedStringKeyForKey_, v1);

  if (v2)
  {
    sub_240BB6DE0();

    if (qword_26AFDA090 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_240BB2980();
    swift_bridgeObjectRelease();
    return v3;
  }
  else
  {
    if (qword_26AFDA090 != -1) {
      swift_once();
    }
    return sub_240BB2980();
  }
}

uint64_t sub_240B8FB4C()
{
  sub_240A39C18(0, (unint64_t *)&qword_26AFD77C0);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240BBB440;
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
  *(void *)(inited + 32) = MEMORY[0x24560A470]((id)*MEMORY[0x263F09F20]);
  *(void *)(inited + 40) = MEMORY[0x24560A470]((id)*MEMORY[0x263F09E38]);
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9940);
  *(void *)(inited + 48) = MEMORY[0x24560A460]((id)*MEMORY[0x263F09360]);
  sub_240BB6F30();
  uint64_t v1 = sub_240B8F820(inited, (unint64_t *)&qword_26AFD9918, 0x263F0A598, (unint64_t *)&unk_26AFD9920, (unint64_t *)&qword_26AFD9ED0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_240B8FC6C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_240B8FCCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_240B8FD34(uint64_t a1, uint64_t a2)
{
  sub_240B8D598(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_240B8FD98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_240B8FE00()
{
  unint64_t result = qword_268C9EA58;
  if (!qword_268C9EA58)
  {
    type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9EA58);
  }
  return result;
}

void sub_240B8FE58()
{
  if (!qword_268CA1FE8)
  {
    type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(255);
    sub_240B8FE00();
    unint64_t v0 = sub_240BB77B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA1FE8);
    }
  }
}

void sub_240B8FEBC()
{
  qword_268CA1FF0 = 0x402C000000000000;
}

id sub_240B8FECC()
{
  id result = objc_msgSend(self, sel_systemFontOfSize_weight_, 17.0, *MEMORY[0x263F81840]);
  qword_268CA1FF8 = (uint64_t)result;
  return result;
}

id sub_240B8FF18()
{
  id result = objc_msgSend(self, sel_systemBackgroundColor);
  qword_268CA2000 = (uint64_t)result;
  return result;
}

id sub_240B8FF54()
{
  if (qword_268C9E678 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_268CA2890;
  qword_268CA2008 = qword_268CA2890;

  return v0;
}

id sub_240B8FFB8()
{
  uint64_t v1 = OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___numberBubbleView;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___numberBubbleView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___numberBubbleView);
  }
  else
  {
    id v4 = sub_240B90018();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_240B90018()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v1 = objc_msgSend(v0, sel_layer);
  if (qword_268C9E780 != -1) {
    swift_once();
  }
  objc_msgSend(v1, sel_setCornerRadius_, *(double *)&qword_268CA1FF0);

  id v2 = objc_msgSend(v0, sel_tintColor);
  objc_msgSend(v0, sel_setBackgroundColor_, v2);

  id v3 = self;
  sub_240A34E00();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_240BBAEF0;
  id v5 = objc_msgSend(v0, sel_heightAnchor);
  id v6 = objc_msgSend(v5, sel_constraintEqualToConstant_, *(double *)&qword_268CA1FF0 + *(double *)&qword_268CA1FF0);

  *(void *)(v4 + 32) = v6;
  id v7 = objc_msgSend(v0, sel_widthAnchor);
  id v8 = objc_msgSend(v7, sel_constraintEqualToConstant_, *(double *)&qword_268CA1FF0 + *(double *)&qword_268CA1FF0);

  *(void *)(v4 + 40) = v8;
  sub_240BB6F30();
  sub_240A34DC4(0, (unint64_t *)&qword_268CA2490);
  uint64_t v9 = (void *)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_activateConstraints_, v9);

  return v0;
}

id sub_240B90230()
{
  uint64_t v1 = OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___numberLabel;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___numberLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___numberLabel);
  }
  else
  {
    id v4 = sub_240B90294();
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_240B90294()
{
  if (qword_268C9E798 != -1) {
    swift_once();
  }
  sub_240AAAC44();
  if (qword_268C9E790 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_268C9E788;
  id v1 = (id)qword_268CA2000;
  if (v0 != -1) {
    swift_once();
  }
  id v2 = (void *)qword_268CA1FF8;
  id v3 = objc_allocWithZone(MEMORY[0x263F828E0]);
  id v4 = v2;
  id v5 = objc_msgSend(v3, sel_init);
  objc_msgSend(v5, sel_setTextColor_, v1);
  id v6 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setText_, v6);

  objc_msgSend(v5, sel_setFont_, v4);
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v5;
}

id sub_240B90434()
{
  uint64_t v1 = OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___titleLabel;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___titleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___titleLabel);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    if (*(void *)(v0 + OBJC_IVAR____TtC5Heart16NumberedTextView_title + 8))
    {
      sub_240BB4850();
      id v5 = (void *)sub_240BB6DA0();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v5 = 0;
    }
    objc_msgSend(v4, sel_setText_, v5);

    id v6 = objc_msgSend(self, sel_labelColor);
    objc_msgSend(v4, sel_setTextColor_, v6);

    objc_msgSend(v4, sel_setNumberOfLines_, 0);
    id v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_240B9056C()
{
  uint64_t v1 = OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___detailLabel;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___detailLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___detailLabel);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    sub_240BB4850();
    id v5 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setText_, v5);

    id v6 = objc_msgSend(self, sel_labelColor);
    objc_msgSend(v4, sel_setTextColor_, v6);

    objc_msgSend(v4, sel_setNumberOfLines_, 0);
    id v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_240B90694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v8 = &v5[OBJC_IVAR____TtC5Heart16NumberedTextView_title];
  *(void *)id v8 = 0;
  *((void *)v8 + 1) = 0;
  *(void *)&v5[OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___numberBubbleView] = 0;
  *(void *)&v5[OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___numberLabel] = 0;
  *(void *)&v5[OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___titleLabel] = 0;
  *(void *)&v5[OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___detailLabel] = 0;
  *(void *)&v5[OBJC_IVAR____TtC5Heart16NumberedTextView_number] = a1;
  *(void *)id v8 = a2;
  *((void *)v8 + 1) = a3;
  uint64_t v9 = v5;
  swift_bridgeObjectRelease();
  unint64_t v10 = &v9[OBJC_IVAR____TtC5Heart16NumberedTextView_details];
  *(void *)unint64_t v10 = a4;
  *((void *)v10 + 1) = a5;

  v13.receiver = v9;
  v13.super_class = (Class)type metadata accessor for NumberedTextView();
  id v11 = objc_msgSendSuper2(&v13, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_240B90828();

  return v11;
}

uint64_t sub_240B90828()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  sub_240A34E00();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_240BBCBA0;
  *(void *)(v2 + 32) = sub_240B8FFB8();
  *(void *)(v2 + 40) = sub_240B90230();
  *(void *)(v2 + 48) = sub_240B90434();
  *(void *)(v2 + 56) = sub_240B9056C();
  sub_240BB6F30();
  sub_240BB7480();
  swift_bridgeObjectRelease();
  id v70 = self;
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_240BBE670;
  id v4 = sub_240B8FFB8();
  id v5 = objc_msgSend(v4, sel_leadingAnchor);

  id v6 = objc_msgSend(v1, sel_leadingAnchor);
  id v7 = objc_msgSend(v5, sel_constraintEqualToAnchor_constant_, v6, 12.0);

  *(void *)(v3 + 32) = v7;
  id v8 = sub_240B8FFB8();
  id v9 = objc_msgSend(v8, sel_topAnchor);

  id v10 = objc_msgSend(v1, sel_topAnchor);
  id v11 = objc_msgSend(v9, sel_constraintGreaterThanOrEqualToAnchor_, v10);

  *(void *)(v3 + 40) = v11;
  id v12 = sub_240B90230();
  id v13 = objc_msgSend(v12, sel_centerYAnchor);

  id v14 = sub_240B8FFB8();
  id v15 = objc_msgSend(v14, sel_centerYAnchor);

  id v16 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v15);
  *(void *)(v3 + 48) = v16;
  id v17 = sub_240B90230();
  id v18 = objc_msgSend(v17, sel_centerXAnchor);

  id v19 = sub_240B8FFB8();
  id v20 = objc_msgSend(v19, sel_centerXAnchor);

  id v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v20);
  *(void *)(v3 + 56) = v21;
  id v22 = sub_240B90230();
  id v23 = objc_msgSend(v22, sel_firstBaselineAnchor);

  id v24 = sub_240B90434();
  id v25 = objc_msgSend(v24, sel_firstBaselineAnchor);

  id v26 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v25);
  *(void *)(v3 + 64) = v26;
  id v27 = sub_240B90434();
  id v28 = objc_msgSend(v27, sel_topAnchor);

  id v29 = objc_msgSend(v1, sel_topAnchor);
  id v30 = objc_msgSend(v28, sel_constraintGreaterThanOrEqualToAnchor_, v29);

  *(void *)(v3 + 72) = v30;
  id v31 = sub_240B90434();
  id v32 = objc_msgSend(v31, sel_leadingAnchor);

  id v33 = sub_240B8FFB8();
  id v34 = objc_msgSend(v33, sel_trailingAnchor);

  id v35 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v34, 6.0);
  *(void *)(v3 + 80) = v35;
  id v36 = sub_240B90434();
  id v37 = objc_msgSend(v36, sel_trailingAnchor);

  id v38 = objc_msgSend(v1, sel_trailingAnchor);
  id v39 = objc_msgSend(v37, sel_constraintEqualToAnchor_constant_, v38, -12.0);

  *(void *)(v3 + 88) = v39;
  id v40 = sub_240B9056C();
  id v41 = objc_msgSend(v40, sel_topAnchor);

  id v42 = sub_240B90434();
  id v43 = objc_msgSend(v42, sel_bottomAnchor);

  id v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v43, 4.0);
  *(void *)(v3 + 96) = v44;
  id v45 = sub_240B9056C();
  id v46 = objc_msgSend(v45, sel_leadingAnchor);

  id v47 = sub_240B90434();
  id v48 = objc_msgSend(v47, sel_leadingAnchor);

  id v49 = objc_msgSend(v46, sel_constraintEqualToAnchor_, v48);
  *(void *)(v3 + 104) = v49;
  id v50 = sub_240B9056C();
  id v51 = objc_msgSend(v50, sel_trailingAnchor);

  id v52 = sub_240B90434();
  id v53 = objc_msgSend(v52, sel_trailingAnchor);

  id v54 = objc_msgSend(v51, sel_constraintEqualToAnchor_, v53);
  *(void *)(v3 + 112) = v54;
  id v55 = sub_240B9056C();
  id v56 = objc_msgSend(v55, sel_bottomAnchor);

  id v57 = objc_msgSend(v1, sel_bottomAnchor);
  id v58 = objc_msgSend(v56, sel_constraintEqualToAnchor_, v57);

  *(void *)(v3 + 120) = v58;
  sub_240BB6F30();
  sub_240A34DC4(0, (unint64_t *)&qword_268CA2490);
  unint64_t v59 = (void *)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v70, sel_activateConstraints_, v59);

  id v60 = sub_240B90434();
  sub_240A34DC4(0, (unint64_t *)&qword_268C9EEE0);
  uint64_t v61 = (void *)sub_240BB7470();
  objc_msgSend(v60, sel_setFont_, v61);

  id v62 = sub_240B9056C();
  uint64_t v63 = (void *)sub_240BB7470();
  objc_msgSend(v62, sel_setFont_, v63);

  sub_240A51C7C();
  uint64_t v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_240BBAE40;
  uint64_t v65 = sub_240BB5C10();
  uint64_t v66 = MEMORY[0x263F82018];
  *(void *)(v64 + 32) = v65;
  *(void *)(v64 + 40) = v66;
  uint64_t v67 = sub_240BB5A30();
  uint64_t v68 = MEMORY[0x263F81EC8];
  *(void *)(v64 + 48) = v67;
  *(void *)(v64 + 56) = v68;
  sub_240BB74A0();
  sub_240BB50A0();

  return swift_bridgeObjectRelease();
}

id sub_240B91034()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NumberedTextView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for NumberedTextView()
{
  return self;
}

void sub_240B91124()
{
  id v0 = sub_240B90434();
  sub_240A34DC4(0, (unint64_t *)&qword_268C9EEE0);
  uint64_t v1 = (void *)sub_240BB7470();
  objc_msgSend(v0, sel_setFont_, v1);

  id v2 = sub_240B9056C();
  id v3 = (id)sub_240BB7470();
  objc_msgSend(v2, sel_setFont_, v3);
}

uint64_t type metadata accessor for AFibBurdenLifeFactorsPlatterDataSource()
{
  uint64_t result = qword_268CA2048;
  if (!qword_268CA2048) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240B91284()
{
  return swift_initClassMetadata2();
}

uint64_t sub_240B912C4(void *a1, void *a2)
{
  sub_240BB34D0();
  id v4 = (void *)sub_240BB34A0();
  sub_240A34E00();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240BBAD40;
  sub_240B91A34();
  swift_getKeyPath();
  *(void *)(v5 + 32) = sub_240BB7210();
  sub_240BB6F30();
  id v6 = v4;
  id v7 = (void *)sub_240BB34B0();

  id v8 = (void *)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setSortDescriptors_, v8);

  sub_240A3466C(a2, a2[3]);
  id v9 = v7;
  id v10 = (void *)sub_240BB2FE0();
  objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF270]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v9, v10, 0, 0);

  uint64_t v11 = sub_240BB5110();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a2);
  return v11;
}

uint64_t sub_240B91478@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_relevantStartDate);
  if (v3)
  {
    id v4 = v3;
    sub_240BB2CB0();

    uint64_t v5 = sub_240BB2CF0();
    id v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_240BB2CF0();
    id v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

void sub_240B91540(uint64_t a1, void **a2)
{
  sub_240A4958C();
  MEMORY[0x270FA5388](v4 - 8);
  id v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A496B8(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  uint64_t v8 = sub_240BB2CF0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_240BB2C90();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setRelevantStartDate_, v10);
}

uint64_t sub_240B91668@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_240BB5BD0();
  MEMORY[0x270FA5388](v2 - 8);
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  sub_240BB2980();
  sub_240BB5B90();
  uint64_t v3 = sub_240BB3C10();
  swift_allocObject();
  uint64_t v4 = sub_240BB3C00();
  a1[3] = v3;
  uint64_t result = sub_240B919EC(&qword_268CA0718, MEMORY[0x263F43AA8]);
  a1[4] = result;
  *a1 = v4;
  return result;
}

void sub_240B917F4()
{
}

id sub_240B91824()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenLifeFactorsPlatterDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240B9185C()
{
  return type metadata accessor for AFibBurdenLifeFactorsPlatterDataSource();
}

uint64_t sub_240B91864@<X0>(uint64_t *a1@<X8>)
{
  return sub_240B91668(a1);
}

uint64_t sub_240B9187C()
{
  uint64_t v0 = sub_240BB4220();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB41E0();
  uint64_t v4 = sub_240BB4190();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_240B91948()
{
  return sub_240BB5500();
}

uint64_t sub_240B919A4()
{
  return sub_240B919EC(&qword_268CA2058, (void (*)(uint64_t))type metadata accessor for AFibBurdenLifeFactorsPlatterDataSource);
}

uint64_t sub_240B919EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_240B91A34()
{
  unint64_t result = qword_268CA06D0;
  if (!qword_268CA06D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268CA06D0);
  }
  return result;
}

char *sub_240B91A74()
{
  return sel_relevantStartDate;
}

uint64_t *LocalizationSource.cardioFitness.unsafeMutableAddressor()
{
  if (qword_268C9E7B0 != -1) {
    swift_once();
  }
  return &static LocalizationSource.cardioFitness;
}

uint64_t localized(_:locale:source:value:comment:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t result = sub_240BB2980();
  if (*(void *)(a11 + 16))
  {
    uint64_t v12 = sub_240BB6DF0();
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

uint64_t *LocalizationSource.aFibBurden.unsafeMutableAddressor()
{
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  return &static LocalizationSource.aFibBurden;
}

uint64_t *LocalizationSource.pregnancy.unsafeMutableAddressor()
{
  if (qword_268C9E7D8 != -1) {
    swift_once();
  }
  return &static LocalizationSource.pregnancy;
}

uint64_t *LocalizationSource.electrocardiogramRecording.unsafeMutableAddressor()
{
  if (qword_268C9E7C0 != -1) {
    swift_once();
  }
  return &static LocalizationSource.electrocardiogramRecording;
}

uint64_t sub_240B91C50(void *a1, uint64_t a2)
{
  if (a1)
  {
    objc_msgSend(a1, sel_doubleValue);
    double v4 = v3;
    id v5 = objc_msgSend(self, sel_sharedInstanceForHealthStore_, a2);
    if (v5)
    {
      uint64_t v6 = v5;
      id v7 = objc_msgSend(self, sel_quantityTypeForIdentifier_, *MEMORY[0x263F09E38]);
      id v8 = objc_msgSend(v6, sel_displayTypeForObjectType_, v7);

      if (v8)
      {
        id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46A40]), sel_initWithHealthStore_, a2);
        id v10 = objc_msgSend(self, sel__quantityWithBeatsPerMinute_, v4);
        id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46768]), sel_initWithQuantity_, v10);
        id v12 = objc_msgSend(v11, sel_stringWithDisplayType_unitController_, v8, v9);
        if (v12)
        {
          id v13 = v12;
          uint64_t v14 = sub_240BB6DE0();

          return v14;
        }
      }
      else
      {
      }
    }
  }
  uint64_t result = sub_240BB78D0();
  __break(1u);
  return result;
}

id sub_240B91E7C()
{
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  qword_26AFDECD8 = (uint64_t)result;
  return result;
}

id sub_240B91ED4()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26AFDECD8;
  static LocalizationSource.aFibBurden = qword_26AFDECD8;
  unk_268CA2C50 = 0xD000000000000016;
  qword_268CA2C58 = 0x8000000240BCAFB0;

  return v0;
}

uint64_t static LocalizationSource.aFibBurden.getter()
{
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  uint64_t v0 = static LocalizationSource.aFibBurden;
  id v1 = (id)static LocalizationSource.aFibBurden;
  sub_240BB4850();
  return v0;
}

id sub_240B91FD4()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26AFDECD8;
  static LocalizationSource.cardioFitness = qword_26AFDECD8;
  *(void *)algn_268CA2C68 = 0xD000000000000019;
  qword_268CA2C70 = 0x8000000240BC80B0;

  return v0;
}

uint64_t static LocalizationSource.cardioFitness.getter()
{
  if (qword_268C9E7B0 != -1) {
    swift_once();
  }
  uint64_t v0 = static LocalizationSource.cardioFitness;
  id v1 = (id)static LocalizationSource.cardioFitness;
  sub_240BB4850();
  return v0;
}

id sub_240B920D4()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26AFDECD8;
  static LocalizationSource.cardioFitnessDict = qword_26AFDECD8;
  unk_268CA2C80 = 0xD00000000000001DLL;
  qword_268CA2C88 = 0x8000000240BD5A90;

  return v0;
}

uint64_t *LocalizationSource.cardioFitnessDict.unsafeMutableAddressor()
{
  if (qword_268C9E7B8 != -1) {
    swift_once();
  }
  return &static LocalizationSource.cardioFitnessDict;
}

uint64_t static LocalizationSource.cardioFitnessDict.getter()
{
  if (qword_268C9E7B8 != -1) {
    swift_once();
  }
  uint64_t v0 = static LocalizationSource.cardioFitnessDict;
  id v1 = (id)static LocalizationSource.cardioFitnessDict;
  sub_240BB4850();
  return v0;
}

id sub_240B92220()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26AFDECD8;
  static LocalizationSource.electrocardiogramRecording = qword_26AFDECD8;
  *(void *)algn_268CA2C98 = 0xD000000000000026;
  qword_268CA2CA0 = 0x8000000240BD5AB0;

  return v0;
}

uint64_t static LocalizationSource.electrocardiogramRecording.getter()
{
  if (qword_268C9E7C0 != -1) {
    swift_once();
  }
  uint64_t v0 = static LocalizationSource.electrocardiogramRecording;
  id v1 = (id)static LocalizationSource.electrocardiogramRecording;
  sub_240BB4850();
  return v0;
}

id sub_240B92320()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26AFDECD8;
  static LocalizationSource.heart = qword_26AFDECD8;
  unk_268CA2CB0 = 0x617A696C61636F4CLL;
  qword_268CA2CB8 = 0xEB00000000656C62;

  return v0;
}

uint64_t *LocalizationSource.heart.unsafeMutableAddressor()
{
  if (qword_268C9E7C8 != -1) {
    swift_once();
  }
  return &static LocalizationSource.heart;
}

uint64_t static LocalizationSource.heart.getter()
{
  if (qword_268C9E7C8 != -1) {
    swift_once();
  }
  uint64_t v0 = static LocalizationSource.heart;
  id v1 = (id)static LocalizationSource.heart;
  sub_240BB4850();
  return v0;
}

id sub_240B92470()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26AFDECD8;
  qword_268CA2CC0 = qword_26AFDECD8;
  *(void *)algn_268CA2CC8 = 0xD000000000000028;
  qword_268CA2CD0 = 0x8000000240BD5A60;

  return v0;
}

id sub_240B924F4()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26AFDECD8;
  static LocalizationSource.pregnancy = qword_26AFDECD8;
  unk_268CA2CE0 = 0xD000000000000015;
  qword_268CA2CE8 = 0x8000000240BD5AE0;

  return v0;
}

uint64_t static LocalizationSource.pregnancy.getter()
{
  if (qword_268C9E7D8 != -1) {
    swift_once();
  }
  uint64_t v0 = static LocalizationSource.pregnancy;
  id v1 = (id)static LocalizationSource.pregnancy;
  sub_240BB4850();
  return v0;
}

uint64_t localized(_:locale:source:value:comment:arguments:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t result = sub_240BB2980();
  if (*(void *)(a11 + 16))
  {
    uint64_t v12 = sub_240BB6DF0();
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizationSource()
{
  return &type metadata for LocalizationSource;
}

uint64_t sub_240B9269C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240B96B48(a1, a2, (uint64_t (*)(void))sub_240A35CBC);
}

uint64_t sub_240B926DC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + *(int *)(type metadata accessor for AFibBurdenOnboardingFlowManager.State() + 20));
  return swift_unknownObjectRetain();
}

uint64_t sub_240B92728@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = type metadata accessor for AFibBurdenOnboardingFlowManager.State();
  *a2 = *(unsigned char *)(a1 + *(int *)(result + 24));
  return result;
}

uint64_t sub_240B92770(char a1, void *a2, uint64_t a3)
{
  sub_240A3FB28();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x270FA5388](v6);
  id v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_240A395FC(v7, (uint64_t)qword_26AFDEB68);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v12, v7);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a2;
    *(void *)(v13 + 24) = a3;
    v15[1] = 0;
    id v14 = a2;
    sub_240BB5720();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  return result;
}

uint64_t sub_240B928F8(void *a1)
{
  sub_240BB77C0();
  sub_240BB6E70();
  sub_240BB7C80();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  id v2 = a1;
  sub_240A39464(0, (unint64_t *)&unk_268CA21D0, (uint64_t (*)(uint64_t))sub_240A49AC0, MEMORY[0x263F8D8F0]);
  sub_240BB6E20();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return 0;
}

uint64_t sub_240B92A10(void *a1)
{
  sub_240A35E3C();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v24 = v2;
  uint64_t v25 = v3;
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B96CF8(0, (unint64_t *)&qword_26AFD8AF0, sub_240A35E08, (void (*)(void))sub_240B9626C);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v21 - v9;
  sub_240A35F28();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v22 = v11;
  uint64_t v23 = v12;
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_240A35E08(0);
  sub_240B9626C();
  sub_240BB6240();
  sub_240BB56E0();
  sub_240B962A0((unint64_t *)&unk_26AFD8AE0, (unint64_t *)&qword_26AFD8AF0, sub_240A35E08, (void (*)(void))sub_240B9626C);
  sub_240BB62F0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD75D0);
  id v15 = a1;
  uint64_t v16 = sub_240BB57C0();

  uint64_t v26 = v16;
  sub_240A22390();
  sub_240A35980((unint64_t *)&qword_26AFD8A30, (void (*)(uint64_t))sub_240A22390);
  sub_240A35980(&qword_26AFD8860, (void (*)(uint64_t))sub_240A35F28);
  uint64_t v17 = v22;
  sub_240BB63F0();
  swift_release();
  sub_240A35980((unint64_t *)&unk_26AFD8880, (void (*)(uint64_t))sub_240A35E3C);
  uint64_t v18 = v24;
  uint64_t v19 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v18);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v17);
  return v19;
}

uint64_t sub_240B92E24()
{
  uint64_t v1 = *v0;
  ((void (*)(void))v0[3])();
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  sub_240A22390();
  sub_240A35980((unint64_t *)&qword_26AFD8A30, (void (*)(uint64_t))sub_240A22390);
  sub_240BB6450();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_240BB6120();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_240B92F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240A3FB28();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFD7158 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_240A395FC(v6, (uint64_t)qword_26AFDEB68);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  *(void *)(swift_allocObject() + 16) = a3;
  void v17[5] = 0;
  sub_240BB5700();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v12 = *(void *)(Strong + 104);
    swift_retain();
    uint64_t v13 = swift_release();
    MEMORY[0x270FA5388](v13);
    v17[-2] = a1;
    uint64_t v14 = v12 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v12 + 16);
    id v15 = (os_unfair_lock_s *)(v12 + ((*(unsigned int *)(*(void *)v12 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v15);
    sub_240B96F30(v14);
    os_unfair_lock_unlock(v15);
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_240B931FC()
{
  return 0;
}

uint64_t sub_240B93294(uint64_t a1, uint64_t a2)
{
  sub_240B96664(a1);
  uint64_t v4 = sub_240BB56E0();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, v4);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
}

uint64_t sub_240B93360()
{
  uint64_t v1 = *v0;
  sub_240B96CF8(0, &qword_268CA21F8, (void (*)(uint64_t))sub_240B96D68, (void (*)(void))sub_240B96DE8);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v1;
  sub_240B96D68();
  swift_allocObject();
  sub_240BB6230();
  sub_240B96DE8();
  swift_retain();
  sub_240BB6240();
  sub_240B962A0(&qword_268CA2218, &qword_268CA21F8, (void (*)(uint64_t))sub_240B96D68, (void (*)(void))sub_240B96DE8);
  uint64_t v9 = sub_240BB62E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v9;
}

uint64_t sub_240B93580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = Strong;
    uint64_t v10 = *(void **)(Strong + 48);
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = sub_240B96898;
    void v11[3] = v7;
    void v11[4] = v9;
    v11[5] = a4;
    aBlock[4] = sub_240B96E9C;
    aBlock[5] = v11;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_240B93E48;
    void aBlock[3] = &unk_26F50C1C0;
    uint64_t v12 = _Block_copy(aBlock);
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    swift_release();
    objc_msgSend(v10, sel_fetchMobileCountryCodeFromCellularWithCompletion_, v12);
    _Block_release(v12);
    swift_release();
    return sub_240BB50A0();
  }
  else
  {
    swift_retain();
    return swift_release();
  }
}

void sub_240B93700(uint64_t a1, void *a2, void (*a3)(id, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  v41[1] = *(id *)MEMORY[0x263EF8340];
  sub_240A3FB28();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v39 = a3;
    uint64_t v16 = *(void **)(a5 + 16);
    id v17 = objc_msgSend((id)swift_unknownObjectRetain(), sel_ISOCode);
    if (!v17)
    {
      sub_240BB6DE0();
      id v17 = (id)sub_240BB6DA0();
      swift_bridgeObjectRelease();
    }
    v41[0] = 0;
    id v18 = objc_msgSend(v16, sel_onboardingEligibilityForCountryCode_error_, v17, v41);

    id v20 = v41[0];
    if (v18)
    {
      uint64_t v21 = *(void *)(a5 + 104);
      MEMORY[0x270FA5388](v19);
      *(&v38 - 2) = a1;
      uint64_t v22 = v21 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v21 + 16);
      uint64_t v23 = (os_unfair_lock_s *)(v21 + ((*(unsigned int *)(*(void *)v21 + 48) + 3) & 0x1FFFFFFFCLL));
      id v24 = v20;
      swift_retain();
      os_unfair_lock_lock(v23);
      sub_240B96EB8(v22);
      os_unfair_lock_unlock(v23);
      swift_release();
      id v25 = v18;
      v39(v18, 0);

      sub_240BB50A0();
      return;
    }
    id v32 = v41[0];
    id v33 = (void *)sub_240BB2A50();

    swift_willThrow();
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_240A395FC(v12, (uint64_t)qword_26AFDEB68);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v34, v12);
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = v33;
    *(void *)(v35 + 24) = a6;
    v41[0] = 0;
    id v36 = v33;
    sub_240BB5720();
    swift_release();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    id v37 = v33;
    v39(v33, 1);
    sub_240BB50A0();

    id v31 = v33;
  }
  else
  {
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_240A395FC(v12, (uint64_t)qword_26AFDEB68);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v26, v12);
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = a2;
    *(void *)(v27 + 24) = a6;
    v41[0] = 0;
    id v28 = a2;
    sub_240BB5720();
    swift_release();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    id v29 = a2;
    if (!a2)
    {
      type metadata accessor for HKError(0);
      uint64_t v40 = 3;
      sub_240B96528(MEMORY[0x263F8EE78]);
      sub_240A35980((unint64_t *)&qword_268C9EA10, type metadata accessor for HKError);
      sub_240BB2A20();
      id v29 = v41[0];
    }
    id v30 = a2;
    a3(v29, 1);
    id v31 = v29;
  }
}

uint64_t sub_240B93BEC(uint64_t a1)
{
  if (a1)
  {
    swift_getErrorValue();
    sub_240BB7B60();
    sub_240BB6E10();
  }
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return 0;
}

uint64_t sub_240B93D30()
{
  return 0;
}

uint64_t sub_240B93E48(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();

  return sub_240BB50A0();
}

uint64_t sub_240B93EC8()
{
  uint64_t v1 = v0;
  uint64_t v78 = *v0;
  sub_240B96490(0, (unint64_t *)&qword_26AFD9858, MEMORY[0x263EFDDF8]);
  uint64_t v74 = v2;
  uint64_t v72 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v63 - v3;
  sub_240B963DC(0, &qword_26AFD9A00, MEMORY[0x263EFDEA0]);
  uint64_t v75 = v5;
  uint64_t v73 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v63 - v6;
  sub_240B963DC(0, &qword_268CA2190, MEMORY[0x263EFDDE8]);
  uint64_t v67 = *(void *)(v8 - 8);
  uint64_t v68 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v66 = (char *)&v63 - v9;
  sub_240B96328();
  uint64_t v70 = *(void *)(v10 - 8);
  uint64_t v71 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v69 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B96490(0, (unint64_t *)&qword_268C9E890, MEMORY[0x263F44B40]);
  uint64_t v64 = *(void *)(v12 - 8);
  uint64_t v65 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v63 = (char *)&v63 - v13;
  sub_240A3FB28();
  uint64_t v15 = v14;
  uint64_t v77 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v76 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A35CBC(0);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v0[13];
  uint64_t v21 = (void *)MEMORY[0x263F8DD00];
  uint64_t v22 = v20 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v20 + 16);
  uint64_t v23 = (os_unfair_lock_s *)(v20 + ((*(unsigned int *)(*(void *)v20 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v23);
  sub_240B92728(v22, v80);
  os_unfair_lock_unlock(v23);
  LOBYTE(v22) = v80[0];
  swift_release();
  if (v22)
  {
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_240A395FC(v15, (uint64_t)qword_26AFDEB68);
    id v25 = v76;
    uint64_t v26 = v77;
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v76, v24, v15);
    *(void *)(swift_allocObject() + 16) = v78;
    v80[0] = 0;
    sub_240BB5720();
    swift_release();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v25, v15);
    LOBYTE(v80[0]) = 1;
    sub_240BB6200();
    sub_240A49AC0();
    uint64_t v27 = v74;
    sub_240BB61E0();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v4, v27);
    sub_240B9644C((unint64_t *)&qword_26AFD99F0, &qword_26AFD9A00, MEMORY[0x263EFDEA0]);
    uint64_t v28 = v75;
    uint64_t v29 = sub_240BB62E0();
    id v30 = *(void (**)(char *, uint64_t))(v73 + 8);
    id v31 = v7;
LABEL_11:
    uint64_t v50 = v28;
    goto LABEL_19;
  }
  uint64_t v32 = v1[13];
  uint64_t v33 = v32 + *(void *)(*v21 + *(void *)v32 + 16);
  uint64_t v34 = (os_unfair_lock_s *)(v32 + ((*(unsigned int *)(*(void *)v32 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v34);
  sub_240B926DC(v33, v80);
  os_unfair_lock_unlock(v34);
  uint64_t v35 = v80[0];
  swift_release();
  if (!v35)
  {
    uint64_t v45 = v78;
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v46 = sub_240A395FC(v15, (uint64_t)qword_26AFDEB68);
    id v48 = v76;
    uint64_t v47 = v77;
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v76, v46, v15);
    *(void *)(swift_allocObject() + 16) = v45;
    v80[0] = 0;
    sub_240BB5720();
    swift_release();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v15);
    type metadata accessor for HKError(0);
    uint64_t v79 = 3;
    sub_240B96528(MEMORY[0x263F8EE78]);
    sub_240A35980((unint64_t *)&qword_268C9EA10, type metadata accessor for HKError);
    sub_240BB2A20();
    uint64_t v79 = v80[0];
    sub_240A49AC0();
    id v49 = v66;
    sub_240BB61D0();
    sub_240B9644C((unint64_t *)&unk_268CA21B0, &qword_268CA2190, MEMORY[0x263EFDDE8]);
    uint64_t v28 = v68;
    uint64_t v29 = sub_240BB62E0();
    id v30 = *(void (**)(char *, uint64_t))(v67 + 8);
    id v31 = v49;
    goto LABEL_11;
  }
  uint64_t v36 = v1[13];
  uint64_t v37 = v36 + *(void *)(*v21 + *(void *)v36 + 16);
  uint64_t v38 = (os_unfair_lock_s *)(v36 + ((*(unsigned int *)(*(void *)v36 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v38);
  sub_240B9269C(v37, (uint64_t)v19);
  os_unfair_lock_unlock(v38);
  swift_release();
  uint64_t v39 = sub_240BB56E0();
  uint64_t v40 = *(void *)(v39 - 8);
  int v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48))(v19, 1, v39);
  uint64_t v42 = v78;
  if (v41 == 1)
  {
    sub_240B96664((uint64_t)v19);
    id v44 = v76;
    uint64_t v43 = v77;
  }
  else
  {
    id v51 = (void *)sub_240BB56F0();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v39);
    unsigned __int8 v52 = objc_msgSend(v51, sel_isRequirementSatisfiedWithIdentifier_, *MEMORY[0x263F096A0]);

    id v44 = v76;
    uint64_t v43 = v77;
    if ((v52 & 1) == 0)
    {
      if (qword_26AFD7158 != -1) {
        swift_once();
      }
      uint64_t v53 = sub_240A395FC(v15, (uint64_t)qword_26AFDEB68);
      (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v44, v53, v15);
      *(void *)(swift_allocObject() + 16) = v42;
      v80[0] = 0;
      sub_240BB5700();
      swift_release();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v15);
      swift_getObjectType();
      id v54 = v63;
      sub_240BB72A0();
      *(void *)(swift_allocObject() + 16) = v42;
      sub_240BB7450();
      swift_release();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v54, v65);
    }
  }
  if (qword_26AFD7158 != -1) {
    swift_once();
  }
  uint64_t v55 = sub_240A395FC(v15, (uint64_t)qword_26AFDEB68);
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v44, v55, v15);
  *(void *)(swift_allocObject() + 16) = v42;
  v80[0] = 0;
  sub_240BB5700();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v15);
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
  id v56 = (void *)MEMORY[0x24560A470]((id)*MEMORY[0x263F09BF8]);
  sub_240A3466C(v1 + 7, v1[10]);
  sub_240BB33C0();
  uint64_t v57 = swift_allocObject();
  swift_weakInit();
  id v58 = (void *)swift_allocObject();
  v58[2] = v57;
  v58[3] = v35;
  v58[4] = v42;
  unint64_t v59 = (uint64_t (*)(uint64_t, void, unint64_t, void))MEMORY[0x263EFDE20];
  sub_240B963DC(0, &qword_268CA21A0, MEMORY[0x263EFDE20]);
  swift_allocObject();
  swift_unknownObjectRetain();
  sub_240BB6230();
  sub_240B9644C(&qword_268CA21A8, &qword_268CA21A0, v59);
  swift_retain();
  id v60 = v69;
  sub_240BB6240();
  sub_240A35980((unint64_t *)&unk_268CA21C0, (void (*)(uint64_t))sub_240B96328);
  uint64_t v61 = v71;
  uint64_t v29 = sub_240BB62E0();
  sub_240BB50A0();
  swift_release();

  id v30 = *(void (**)(char *, uint64_t))(v70 + 8);
  id v31 = v60;
  uint64_t v50 = v61;
LABEL_19:
  v30(v31, v50);
  return v29;
}

void sub_240B94C6C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  sub_240A3FB28();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v16 = Strong;
    uint64_t v17 = qword_26AFD7158;
    swift_retain();
    if (v17 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_240A395FC(v10, (uint64_t)qword_26AFDEB68);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v18, v10);
    *(void *)(swift_allocObject() + 16) = a5;
    aBlock[0] = 0;
    sub_240BB5700();
    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    sub_240A39464(0, &qword_268C9FBE8, (uint64_t (*)(uint64_t))sub_240AA643C, MEMORY[0x263F8E0F8]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_240BB97E0;
    *(void *)(inited + 32) = sub_240BB6DE0();
    *(void *)(inited + 40) = v20;
    *(void *)(inited + 72) = MEMORY[0x263F8D4F8];
    *(unsigned char *)(inited + 48) = 1;
    sub_240AB7F9C(inited);
    id v21 = objc_allocWithZone(MEMORY[0x263F0A3C0]);
    uint64_t v22 = (void *)sub_240BB6D20();
    swift_bridgeObjectRelease();
    id v23 = objc_msgSend(v21, sel_initWithDictionary_, v22);

    uint64_t v24 = *(void **)(v16 + 16);
    swift_unknownObjectRetain();
    id v25 = objc_msgSend(a4, sel_ISOCode);
    if (!v25)
    {
      sub_240BB6DE0();
      id v25 = (id)sub_240BB6DA0();
      swift_bridgeObjectRelease();
    }
    id v26 = objc_msgSend(a4, sel_provenance);
    uint64_t v27 = (void *)swift_allocObject();
    id v27[2] = a4;
    v27[3] = sub_240B96898;
    v27[4] = v14;
    uint64_t v27[5] = v16;
    v27[6] = a5;
    aBlock[4] = sub_240B9692C;
    aBlock[5] = v27;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_240AB0D44;
    void aBlock[3] = &unk_26F50C0D0;
    uint64_t v28 = _Block_copy(aBlock);
    id v29 = v23;
    swift_unknownObjectRetain();
    swift_retain();
    swift_release();
    objc_msgSend(v24, sel_setCurrentOnboardingVersionCompletedForCountryCode_countryCodeProvenance_date_settings_completion_, v25, v26, 0, v29, v28);
    _Block_release(v28);
    swift_release();
    sub_240BB50A0();
  }
  else
  {
    swift_retain();
    swift_release();
  }
}

uint64_t sub_240B95098()
{
  return 0;
}

void sub_240B95160(uint64_t a1, void *a2, uint64_t a3, void (*a4)(void *, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_240A3FB28();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v17 = a2;
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_240A395FC(v13, (uint64_t)qword_26AFDEB68);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v18, v13);
    uint64_t v19 = (void *)swift_allocObject();
    uint64_t v19[2] = a3;
    v19[3] = a2;
    v19[4] = a7;
    uint64_t v28 = 0;
    swift_unknownObjectRetain();
    id v20 = a2;
    sub_240BB5720();
    swift_release();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    id v21 = a2;
    a4(a2, 1);
  }
  else
  {
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_240A395FC(v13, (uint64_t)qword_26AFDEB68);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v22, v13);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = a3;
    *(void *)(v23 + 24) = a7;
    uint64_t v28 = 0;
    swift_unknownObjectRetain();
    sub_240BB5700();
    swift_release();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v24 = *(void *)(a6 + 104);
    uint64_t v25 = v24 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v24 + 16);
    id v26 = (os_unfair_lock_s *)(v24 + ((*(unsigned int *)(*(void *)v24 + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v26);
    sub_240B95720(v25);
    os_unfair_lock_unlock(v26);
    swift_release();
    a4((void *)1, 0);
  }
}

uint64_t sub_240B954A8()
{
  return 0;
}

uint64_t sub_240B9560C()
{
  return 0;
}

uint64_t sub_240B95720(uint64_t a1)
{
  uint64_t result = type metadata accessor for AFibBurdenOnboardingFlowManager.State();
  *(unsigned char *)(a1 + *(int *)(result + 24)) = 1;
  return result;
}

uint64_t sub_240B9575C()
{
  sub_240BB50A0();
  swift_release();
  sub_240BB50A0();
  sub_240BB50A0();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 56);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AFibBurdenOnboardingFlowManager()
{
  return self;
}

uint64_t *sub_240B957E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_240BB56E0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_240A35CBC(0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
    swift_unknownObjectRetain();
  }
  return a1;
}

uint64_t sub_240B95968(uint64_t a1)
{
  uint64_t v2 = sub_240BB56E0();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }

  return sub_240BB50A0();
}

char *sub_240B95A34(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_240BB56E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_240A35CBC(0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  a1[v9] = a2[v9];
  swift_unknownObjectRetain();
  return a1;
}

char *sub_240B95B64(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_240BB56E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_240A35CBC(0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_unknownObjectRetain();
  sub_240BB50A0();
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_240B95D08(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_240BB56E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_240A35CBC(0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  a1[v9] = a2[v9];
  return a1;
}

char *sub_240B95E34(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_240BB56E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_240A35CBC(0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  sub_240BB50A0();
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_240B95FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240B95FE4);
}

uint64_t sub_240B95FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240A35CBC(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_240B960B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240B960C4);
}

void sub_240B960C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_240A35CBC(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
}

uint64_t type metadata accessor for AFibBurdenOnboardingFlowManager.State()
{
  uint64_t result = qword_268CA2120;
  if (!qword_268CA2120) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_240B961CC()
{
  sub_240A35CBC(319);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_240B9626C()
{
  return sub_240A35980(&qword_26AFD8AB0, sub_240A35E08);
}

uint64_t sub_240B962A0(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240B96CF8(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240B962F0()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_240B96328()
{
  if (!qword_268CA2198)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, void, unint64_t, void))MEMORY[0x263EFDE20];
    sub_240B963DC(255, &qword_268CA21A0, MEMORY[0x263EFDE20]);
    sub_240B9644C(&qword_268CA21A8, &qword_268CA21A0, v0);
    unint64_t v1 = sub_240BB6250();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268CA2198);
    }
  }
}

void sub_240B963DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void, unint64_t, void))
{
  if (!*a2)
  {
    unint64_t v6 = sub_240A49AC0();
    unint64_t v7 = a3(a1, MEMORY[0x263F8D4F8], v6, MEMORY[0x263F8E4E0]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_240B9644C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240B963DC(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240B96490(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x263F8D4F8]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_240B964E0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B964F0()
{
  return sub_240B95098();
}

unint64_t sub_240B96528(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_240B96A64();
  uint64_t v2 = sub_240BB7950();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_240B96B48(v6, (uint64_t)&v15, (uint64_t (*)(void))sub_240AA643C);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_240B96AD0(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    int v11 = (uint64_t *)(v3[6] + 16 * result);
    *int v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_240A7B714(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_240B96664(uint64_t a1)
{
  sub_240A35CBC(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240B966C0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B966D0()
{
  return sub_240B95098();
}

uint64_t sub_240B96708()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B96740()
{
  return sub_240B969A8(MEMORY[0x263F8EED8], MEMORY[0x263F8EEE8]);
}

void sub_240B9676C(uint64_t a1, uint64_t a2)
{
  sub_240B94C6C(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_240B96778()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B96788()
{
  return sub_240B95098();
}

uint64_t sub_240B967C0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B967D0(char a1, void *a2)
{
  return sub_240B92770(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_240B967D8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B967E8()
{
  return sub_240B95098();
}

uint64_t sub_240B96820()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B96858()
{
  return sub_240B928F8(*(void **)(v0 + 16));
}

uint64_t sub_240B96860()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B9689C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B968AC()
{
  return sub_240B95098();
}

uint64_t sub_240B968E4()
{
  sub_240BB50A0();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_240B9692C(uint64_t a1, void *a2)
{
  sub_240B95160(a1, a2, *(void *)(v2 + 16), *(void (**)(void *, uint64_t))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_240B9693C()
{
  sub_240BB50A0();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B96974()
{
  return sub_240B9560C();
}

uint64_t sub_240B9697C()
{
  return sub_240B969A8(MEMORY[0x263F8EEE8], MEMORY[0x263F8EEB0]);
}

uint64_t sub_240B969A8(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 16));
  a2(*(void *)(v2 + 24));

  return MEMORY[0x270FA0238](v2, 40, 7);
}

uint64_t sub_240B96A00()
{
  return sub_240B954A8();
}

unint64_t sub_240B96A0C()
{
  unint64_t result = qword_268CA21E8;
  if (!qword_268CA21E8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CA21E8);
  }
  return result;
}

void sub_240B96A64()
{
  if (!qword_268CA21F0)
  {
    unint64_t v0 = sub_240BB7960();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA21F0);
    }
  }
}

unint64_t sub_240B96AD0(uint64_t a1, uint64_t a2)
{
  sub_240BB7BC0();
  sub_240BB6E50();
  uint64_t v4 = sub_240BB7C00();

  return sub_240B96BB0(a1, a2, v4);
}

uint64_t sub_240B96B48(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_240B96BB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_240BB7AE0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_240BB7AE0() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_240BB7AE0()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

void sub_240B96CF8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_240BB6250();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_240B96D68()
{
  if (!qword_268CA2200)
  {
    sub_240A34DC4(255, (unint64_t *)&qword_268C9F2D0);
    sub_240A49AC0();
    unint64_t v0 = sub_240BB6220();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA2200);
    }
  }
}

uint64_t sub_240B96DE8()
{
  return sub_240A35980(&qword_268CA2210, (void (*)(uint64_t))sub_240B96D68);
}

uint64_t sub_240B96E1C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240B96E54(uint64_t a1, uint64_t a2)
{
  return sub_240B93580(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_240B96E5C()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_240B96E9C(uint64_t a1, void *a2)
{
  sub_240B93700(a1, a2, *(void (**)(id, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_240B96EA8()
{
  return sub_240B93BEC(*(void *)(v0 + 16));
}

uint64_t sub_240B96EB0()
{
  return sub_240B93D30();
}

uint64_t sub_240B96EB8(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(int *)(type metadata accessor for AFibBurdenOnboardingFlowManager.State() + 20);
  swift_unknownObjectRetain();
  uint64_t result = sub_240BB50A0();
  *(void *)(a1 + v4) = v3;
  return result;
}

uint64_t sub_240B96F10(uint64_t a1)
{
  return sub_240B92F78(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_240B96F18()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240B96F28()
{
  return sub_240B931FC();
}

uint64_t sub_240B96F30(uint64_t a1)
{
  return sub_240B93294(a1, *(void *)(v1 + 16));
}

uint64_t *sub_240B96F68(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_240BB27F0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    uint64_t v10 = a3[7];
    uint64_t v11 = a3[8];
    uint64_t v12 = *(void **)((char *)a2 + v10);
    *(uint64_t *)((char *)a1 + v10) = (uint64_t)v12;
    BOOL v13 = (char *)a1 + v11;
    uint64_t v14 = (char *)a2 + v11;
    *(_OWORD *)BOOL v13 = *(_OWORD *)v14;
    *((void *)v13 + 2) = *((void *)v14 + 2);
    sub_240BB4850();
    id v15 = v9;
    id v16 = v12;
  }
  return a1;
}

void sub_240B9706C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240BB27F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();

  int v5 = *(void **)(a1 + *(int *)(a2 + 28));
}

uint64_t sub_240B970F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_240BB27F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v8;
  uint64_t v9 = a3[7];
  uint64_t v10 = a3[8];
  uint64_t v11 = *(void **)(a2 + v9);
  *(void *)(a1 + v9) = v11;
  uint64_t v12 = a1 + v10;
  uint64_t v13 = a2 + v10;
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  sub_240BB4850();
  id v14 = v8;
  id v15 = v11;
  return a1;
}

uint64_t sub_240B971AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_240BB27F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  sub_240BB4850();
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  uint64_t v11 = a3[7];
  uint64_t v12 = *(void **)(a2 + v11);
  uint64_t v13 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = v12;
  id v14 = v12;

  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (long long *)(a2 + v15);
  long long v18 = *v17;
  *(void *)(v16 + 16) = *((void *)v17 + 2);
  *(_OWORD *)uint64_t v16 = v18;
  return a1;
}

uint64_t sub_240B97284(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_240BB27F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  return a1;
}

uint64_t sub_240B9732C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_240BB27F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  uint64_t v9 = a3[7];
  uint64_t v10 = *(void **)(a1 + v9);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);

  uint64_t v11 = a3[8];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  return a1;
}

uint64_t sub_240B973F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240B97408);
}

uint64_t sub_240B97408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240BB27F0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_240B974C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240B974DC);
}

uint64_t sub_240B974DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_240BB27F0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for AFibBurdenPDFChartViewModel()
{
  uint64_t result = qword_268CA2220;
  if (!qword_268CA2220) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240B975E4()
{
  uint64_t result = sub_240BB27F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AFibBurdenPDFChartViewModel.DataRange(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[24]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AFibBurdenPDFChartViewModel.DataRange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFChartViewModel.DataRange()
{
  return &type metadata for AFibBurdenPDFChartViewModel.DataRange;
}

uint64_t sub_240B97740()
{
  uint64_t v1 = type metadata accessor for AFibBurdenPDFChartViewModel();
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  BOOL v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(*(id *)(v0 + *(int *)(v2 + 28)), sel_displayCategory);
  id v6 = objc_msgSend(v5, sel_color);

  if (v6)
  {
    JUMPOUT(0x245609CA0);
  }
  if (qword_26AFD7BF0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_240BB5990();
  sub_240A395FC(v7, (uint64_t)qword_26AFDEB80);
  sub_240B9800C(v0, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartViewModel);
  uint64_t v8 = sub_240BB5970();
  os_log_type_t v9 = sub_240BB7190();
  if (os_log_type_enabled(v8, v9))
  {
    unint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v18 = v11;
    *(_DWORD *)unint64_t v10 = 136315138;
    id v12 = objc_msgSend(*(id *)&v4[*(int *)(v1 + 28)], sel_description);
    uint64_t v13 = sub_240BB6DE0();
    unint64_t v15 = v14;

    uint64_t v17 = sub_240A38940(v13, v15, &v18);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    sub_240B98074((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartViewModel);
    _os_log_impl(&dword_240A1B000, v8, v9, "%s doesn't have a displayCategory color", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v11, -1, -1);
    MEMORY[0x24560B930](v10, -1, -1);
  }
  else
  {
    sub_240B98074((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartViewModel);
  }

  return sub_240BB69D0();
}

uint64_t sub_240B97A10(uint64_t a1, uint64_t (*a2)(), uint64_t a3)
{
  uint64_t v6 = sub_240BB27F0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  os_log_type_t v9 = &v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for AFibBurdenPDFChartPoint();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = &v42[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v11);
  uint64_t v16 = &v42[-v15];
  uint64_t v17 = *(void *)(a1 + 16);
  if (v17)
  {
    uint64_t v6 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    double v18 = *(double *)(v6 + *(int *)(v10 + 20));
    os_log_type_t v9 = *(unsigned char **)(v14 + 72);
    sub_240BB4850();
    LOBYTE(v7) = 0;
    a3 = -1;
    double v19 = v18;
    do
    {
      sub_240B9800C(v6, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartPoint);
      uint64_t v20 = *(int *)(v10 + 20);
      double v21 = *(double *)&v16[v20];
      if (v18 <= v21) {
        double v18 = *(double *)&v16[v20];
      }
      if (v21 < v19) {
        double v19 = *(double *)&v16[v20];
      }
      sub_240B9800C((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartPoint);
      if (v7)
      {
        uint64_t v7 = 1;
      }
      else
      {
        uint64_t v22 = *(void *)&v13[*(int *)(v10 + 24)];
        if (*(void *)(v22 + 16))
        {
          sub_240BB7BC0();
          sub_240BB7BD0();
          unint64_t v23 = sub_240BB7C00() & ~(-1 << *(unsigned char *)(v22 + 32));
          uint64_t v7 = (*(void *)(v22 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v23) & 1;
        }
        else
        {
          uint64_t v7 = 0;
        }
      }
      a2 = type metadata accessor for AFibBurdenPDFChartPoint;
      sub_240B98074((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartPoint);
      sub_240B98074((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartPoint);
      v6 += (uint64_t)v9;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    if (v19 <= v18) {
      return v7;
    }
    __break(1u);
    goto LABEL_21;
  }
  if (qword_26AFD7BF0 != -1) {
LABEL_21:
  }
    swift_once();
  uint64_t v25 = sub_240BB5990();
  sub_240A395FC(v25, (uint64_t)qword_26AFDEB80);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
  id v26 = a2;
  uint64_t v27 = sub_240BB5970();
  os_log_type_t v28 = sub_240BB71A0();
  int v29 = v28;
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v30 = swift_slowAlloc();
    uint64_t v45 = swift_slowAlloc();
    v47[0] = v45;
    *(_DWORD *)uint64_t v30 = 136446723;
    os_log_t v44 = v27;
    uint64_t v46 = type metadata accessor for AFibBurdenPDFChartViewModel();
    sub_240B97F78();
    int v43 = v29;
    uint64_t v31 = sub_240BB6E10();
    uint64_t v46 = sub_240A38940(v31, v32, v47);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2085;
    id v33 = objc_msgSend(v26, sel_localization);
    id v34 = objc_msgSend(v33, sel_displayName);

    uint64_t v35 = sub_240BB6DE0();
    unint64_t v37 = v36;

    uint64_t v46 = sub_240A38940(v35, v37, v47);
    sub_240BB75F0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 22) = 2085;
    sub_240B97FB4();
    uint64_t v38 = sub_240BB7AA0();
    uint64_t v46 = sub_240A38940(v38, v39, v47);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
    os_log_t v40 = v44;
    _os_log_impl(&dword_240A1B000, v44, (os_log_type_t)v43, "[%{public}s] No data for display type %{sensitive}s in PDF page for %{sensitive}s", (uint8_t *)v30, 0x20u);
    uint64_t v41 = v45;
    swift_arrayDestroy();
    MEMORY[0x24560B930](v41, -1, -1);
    MEMORY[0x24560B930](v30, -1, -1);
  }
  else
  {

    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return 2;
}

unint64_t sub_240B97F78()
{
  unint64_t result = qword_268CA2230;
  if (!qword_268CA2230)
  {
    type metadata accessor for AFibBurdenPDFChartViewModel();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CA2230);
  }
  return result;
}

unint64_t sub_240B97FB4()
{
  unint64_t result = qword_268C9FC10;
  if (!qword_268C9FC10)
  {
    sub_240BB27F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9FC10);
  }
  return result;
}

uint64_t sub_240B9800C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_240B98074(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_240B980D4(uint64_t a1, uint64_t *a2, int *a3)
{
  BOOL v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v36 = *a2;
    void *v4 = *a2;
    BOOL v4 = (void *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v7 = a3[6];
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_240BB27F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
    *(void *)(v8 + v11[5]) = *(void *)(v9 + v11[5]);
    uint64_t v12 = v11[6];
    uint64_t v13 = *(void **)(v9 + v12);
    *(void *)(v8 + v12) = v13;
    uint64_t v14 = v11[7];
    unint64_t v39 = *(void **)(v9 + v14);
    *(void *)(v8 + v14) = v39;
    uint64_t v15 = v11[8];
    uint64_t v16 = v8 + v15;
    uint64_t v17 = v9 + v15;
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *(void *)(v16 + 16) = *(void *)(v17 + 16);
    uint64_t v18 = a3[7];
    uint64_t v19 = a3[8];
    uint64_t v20 = (char *)v4 + v18;
    uint64_t v21 = (uint64_t)a2 + v18;
    uint64_t v22 = *(void **)v21;
    char v23 = *(unsigned char *)(v21 + 8);
    *(void *)uint64_t v20 = *(void *)v21;
    v20[8] = v23;
    uint64_t v24 = *(void **)(v21 + 16);
    *((void *)v20 + 2) = v24;
    uint64_t v25 = (char *)v4 + v19;
    uint64_t v26 = (uint64_t)a2 + v19;
    long long v27 = *(_OWORD *)((char *)a2 + v19 + 24);
    *(_OWORD *)((char *)v4 + v19 + 24) = v27;
    uint64_t v28 = v27;
    uint64_t v38 = **(void (***)(char *, uint64_t, uint64_t))(v27 - 8);
    sub_240BB4850();
    id v29 = v13;
    id v30 = v39;
    id v31 = v22;
    id v32 = v24;
    v38(v25, v26, v28);
    uint64_t v33 = a3[9];
    id v34 = *(void **)((char *)a2 + v33);
    *(void *)((char *)v4 + v33) = v34;
    id v35 = v34;
  }
  return v4;
}

void sub_240B982E0(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_240BB27F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = type metadata accessor for AFibBurdenPDFChartViewModel();
  swift_bridgeObjectRelease();

  uint64_t v7 = (id *)(a1 + a2[7]);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + a2[8]);
  uint64_t v8 = *(void **)(a1 + a2[9]);
}

uint64_t sub_240B983B8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_240BB27F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
  *(void *)(v7 + v10[5]) = *(void *)(v8 + v10[5]);
  uint64_t v11 = v10[6];
  uint64_t v12 = *(void **)(v8 + v11);
  *(void *)(v7 + v11) = v12;
  uint64_t v13 = v10[7];
  uint64_t v14 = *(void **)(v8 + v13);
  *(void *)(v7 + v13) = v14;
  uint64_t v15 = v10[8];
  uint64_t v16 = v7 + v15;
  uint64_t v17 = v8 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  uint64_t v22 = *(void **)v21;
  char v23 = *(unsigned char *)(v21 + 8);
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = v23;
  uint64_t v24 = *(void **)(v21 + 16);
  *(void *)(v20 + 16) = v24;
  uint64_t v25 = a1 + v19;
  uint64_t v26 = a2 + v19;
  long long v27 = *(_OWORD *)(a2 + v19 + 24);
  *(_OWORD *)(a1 + v19 + 24) = v27;
  uint64_t v28 = v27;
  unint64_t v37 = **(void (***)(uint64_t, uint64_t, uint64_t))(v27 - 8);
  sub_240BB4850();
  id v29 = v12;
  id v30 = v14;
  id v31 = v22;
  id v32 = v24;
  v37(v25, v26, v28);
  uint64_t v33 = a3[9];
  id v34 = *(void **)(a2 + v33);
  *(void *)(a1 + v33) = v34;
  id v35 = v34;
  return a1;
}

uint64_t sub_240B98574(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = (uint64_t)a2 + v8;
  uint64_t v11 = sub_240BB27F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  uint64_t v12 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
  *(void *)(v9 + v12[5]) = *(void *)(v10 + v12[5]);
  sub_240BB4850();
  swift_bridgeObjectRelease();
  uint64_t v13 = v12[6];
  uint64_t v14 = *(void **)(v10 + v13);
  uint64_t v15 = *(void **)(v9 + v13);
  *(void *)(v9 + v13) = v14;
  id v16 = v14;

  uint64_t v17 = v12[7];
  uint64_t v18 = *(void **)(v10 + v17);
  uint64_t v19 = *(void **)(v9 + v17);
  *(void *)(v9 + v17) = v18;
  id v20 = v18;

  uint64_t v21 = v12[8];
  uint64_t v22 = v9 + v21;
  uint64_t v23 = v10 + v21;
  uint64_t v24 = *(void *)(v23 + 16);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(void *)(v22 + 16) = v24;
  uint64_t v25 = a3[7];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = (uint64_t)a2 + v25;
  uint64_t v28 = *(void **)((char *)a2 + v25);
  LOBYTE(v22) = *(unsigned char *)(v27 + 8);
  id v29 = *(void **)v26;
  *(void *)uint64_t v26 = v28;
  *(unsigned char *)(v26 + 8) = v22;
  id v30 = v28;

  id v31 = *(void **)(v27 + 16);
  id v32 = *(void **)(v26 + 16);
  *(void *)(v26 + 16) = v31;
  id v33 = v31;

  sub_240A51F9C((uint64_t *)(a1 + a3[8]), (uint64_t *)((char *)a2 + a3[8]));
  uint64_t v34 = a3[9];
  id v35 = *(void **)((char *)a2 + v34);
  uint64_t v36 = *(void **)(a1 + v34);
  *(void *)(a1 + v34) = v35;
  id v37 = v35;

  return a1;
}

uint64_t sub_240B986F8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_240BB27F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
  *(void *)(v7 + v10[5]) = *(void *)(v8 + v10[5]);
  *(void *)(v7 + v10[6]) = *(void *)(v8 + v10[6]);
  *(void *)(v7 + v10[7]) = *(void *)(v8 + v10[7]);
  uint64_t v11 = v10[8];
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  uint64_t v18 = a1 + v15;
  uint64_t v19 = a2 + v15;
  long long v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  *(void *)(v18 + 32) = *(void *)(v19 + 32);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_240B98824(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_240BB27F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
  *(void *)(v7 + v10[5]) = *(void *)(v8 + v10[5]);
  swift_bridgeObjectRelease();
  uint64_t v11 = v10[6];
  uint64_t v12 = *(void **)(v7 + v11);
  *(void *)(v7 + v11) = *(void *)(v8 + v11);

  uint64_t v13 = v10[7];
  uint64_t v14 = *(void **)(v7 + v13);
  *(void *)(v7 + v13) = *(void *)(v8 + v13);

  uint64_t v15 = v10[8];
  uint64_t v16 = v7 + v15;
  uint64_t v17 = v8 + v15;
  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  LOBYTE(v16) = *(unsigned char *)(a2 + v18 + 8);
  uint64_t v21 = *(void **)(a1 + v18);
  *(void *)uint64_t v19 = *(void *)(a2 + v18);
  *(unsigned char *)(v19 + 8) = v16;

  uint64_t v22 = *(void **)(v19 + 16);
  *(void *)(v19 + 16) = *(void *)(v20 + 16);

  uint64_t v23 = a3[8];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + v23);
  long long v26 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v26;
  *(void *)(v24 + 32) = *(void *)(v25 + 32);
  uint64_t v27 = a3[9];
  uint64_t v28 = *(void **)(a1 + v27);
  *(void *)(a1 + v27) = *(void *)(a2 + v27);

  return a1;
}

uint64_t sub_240B98998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240B989AC);
}

uint64_t sub_240B989AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AFibBurdenPDFChartViewModel();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 28) + 16);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_240B98A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240B98A88);
}

uint64_t sub_240B98A88(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for AFibBurdenPDFChartViewModel();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28) + 16) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for AFibBurdenPDFAFibChart()
{
  uint64_t result = qword_268CA2238;
  if (!qword_268CA2238) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240B98B98()
{
  uint64_t result = type metadata accessor for AFibBurdenPDFChartViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_240B98C50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240B98CD0(a1, (uint64_t (*)(void))sub_240B9DBFC, (uint64_t (*)(void))sub_240A60A74, (void (*)(void))sub_240A60F14, a2);
}

uint64_t sub_240B98C90@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240B98CD0(a1, (uint64_t (*)(void))sub_240B9DAD8, (uint64_t (*)(void))sub_240AF7584, (void (*)(void))sub_240AF7D68, a2);
}

uint64_t sub_240B98CD0@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a5;
  uint64_t v8 = a2(0);
  uint64_t v9 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v26 - v10;
  uint64_t v12 = a3(0);
  a4();
  uint64_t v13 = *a1;
  uint64_t v14 = a1;
  uint64_t v26 = v12;
  uint64_t v15 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v11, v13, v12);
  sub_240A60CF8();
  uint64_t v17 = v16;
  sub_240B9DC94(255, &qword_268C9F060, MEMORY[0x263EFCD68]);
  sub_240BB5EE0();
  uint64_t v18 = &v11[*(int *)(v9 + 56)];
  uint64_t v19 = a1[1];
  uint64_t v20 = *(void *)(v17 - 8);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v21(v18, v19, v17);
  uint64_t v22 = &v11[*(int *)(v9 + 72)];
  v21(v22, v14[2], v17);
  uint64_t v23 = v27;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v27, v11, v26);
  uint64_t v24 = *(void (**)(uint64_t, char *, uint64_t))(v20 + 32);
  v24(v23 + *(int *)(v9 + 56), v18, v17);
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v24)(v23 + *(int *)(v9 + 72), v22, v17);
}

uint64_t sub_240B98EFC()
{
  return sub_240BB6630();
}

uint64_t sub_240B98F20(uint64_t a1)
{
  uint64_t v2 = sub_240BB6570();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_240BB6640();
}

uint64_t sub_240B98FE8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char a3@<W2>, void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v126 = a6;
  uint64_t v136 = a5;
  uint64_t v151 = a7;
  uint64_t v150 = sub_240BB6570();
  uint64_t v149 = *(void *)(v150 - 8);
  MEMORY[0x270FA5388](v150);
  id v148 = (char *)&v119 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AF86E4(0, &qword_268C9F010, MEMORY[0x263EFCD98], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v144 = (char *)&v119 - v13;
  sub_240B9C19C(0);
  uint64_t v130 = v14;
  uint64_t v128 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v127 = (char *)&v119 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B9CC24();
  uint64_t v132 = v16;
  uint64_t v131 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v129 = (char *)&v119 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B9CCF8();
  uint64_t v138 = v18;
  uint64_t v134 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v133 = (char *)&v119 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B9CE18();
  uint64_t v140 = v20;
  uint64_t v139 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v137 = (char *)&v119 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B9CFAC();
  uint64_t v143 = v22;
  uint64_t v142 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v141 = (char *)&v119 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B9D604(0, &qword_268CA2310, (uint64_t (*)(uint64_t))sub_240B9CFAC, MEMORY[0x263F18868], MEMORY[0x263F18E28]);
  uint64_t v135 = v24;
  MEMORY[0x270FA5388](v24);
  uint64_t v145 = (char *)&v119 - v25;
  sub_240B9C258(0);
  uint64_t v147 = v26;
  uint64_t v146 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v156 = (uint64_t)&v119 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A617D4();
  uint64_t v154 = v28;
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  uint64_t v121 = (char *)&v119 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v123 = (char *)&v119 - v31;
  uint64_t v157 = sub_240BB2CF0();
  uint64_t v124 = *(void *)(v157 - 8);
  uint64_t v32 = MEMORY[0x270FA5388](v157);
  uint64_t v34 = (char *)&v119 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  uint64_t v36 = (char *)&v119 - v35;
  sub_240A61110(0);
  uint64_t v125 = v37;
  uint64_t v38 = MEMORY[0x270FA5388](v37);
  uint64_t v122 = (char *)&v119 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v38);
  uint64_t v155 = (uint64_t)&v119 - v40;
  uint64_t v41 = sub_240BB27F0();
  uint64_t v159 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  long long v160 = (char *)&v119 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_240BB5D70();
  MEMORY[0x270FA5388](v43 - 8);
  uint64_t v44 = sub_240BB5CD0();
  MEMORY[0x270FA5388](v44 - 8);
  uint64_t v45 = sub_240BB5D10();
  MEMORY[0x270FA5388](v45 - 8);
  uint64_t v46 = *(int *)(type metadata accessor for AFibBurdenPDFChartViewModel() + 32);
  uint64_t v158 = (uint64_t *)a1;
  BOOL v47 = *(unsigned char *)(a1 + v46) == 2;
  uint64_t v152 = v34;
  if (v47) {
    sub_240B7DA84(a2, a3, (uint64_t)a4);
  }
  unint64_t v48 = sub_240B7DFD4(2, a2, a3, a4);
  uint64_t v153 = v41;
  if (v48)
  {
    unint64_t v49 = v48;
    sub_240B7F310(v48);
    uint64_t v51 = v50;
    sub_240B9D4CC(0);
    *((void *)&v165 + 1) = v52;
    *(void *)&long long v166 = sub_240B9D858((unint64_t *)&qword_268C9F158, sub_240B9D4CC);
    sub_240A23B08((uint64_t *)&v164);
    *(void *)&long long v162 = v51;
    sub_240A62450();
    sub_240BB5CE0();
    uint64_t v53 = swift_allocObject();
    *(void *)(v53 + 16) = a2;
    *(unsigned char *)(v53 + 24) = a3;
    *(void *)(v53 + 32) = a4;
    *(void *)(v53 + 40) = v49;
    id v54 = a2;
    id v55 = a4;
    sub_240BB4850();
    sub_240BB5CC0();
    sub_240BB5D60();
    sub_240A61CA0();
    sub_240A62244();
    uint64_t v41 = v153;
    sub_240BB5EF0();
    sub_240A37388(&v164, (uint64_t)v163);
    sub_240B7F644(v49);
    uint64_t v57 = v56;
    uint64_t v59 = v58;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_240BB5CC0();
    sub_240BB5D60();
    sub_240BB5D00();
    sub_240B9D174(0);
    v163[3] = v60;
    v163[4] = sub_240B9D858((unint64_t *)&qword_268C9F0F0, sub_240B9D174);
    sub_240A23B08(v163);
    sub_240A6183C();
    sub_240A618B0();
    sub_240BB5F00();
    uint64_t v57 = 0;
    uint64_t v59 = 0;
  }
  *(void *)&long long v162 = v57;
  *((void *)&v162 + 1) = v59;
  (*(void (**)(char *, uint64_t *, uint64_t))(v159 + 16))(v160, v158, v41);
  sub_240BB27D0();
  uint64_t v61 = v152;
  sub_240BB27A0();
  sub_240B9D858(&qword_268C9F088, MEMORY[0x263F07490]);
  uint64_t result = sub_240BB6D80();
  if (result)
  {
    uint64_t v63 = v157;
    uint64_t v64 = v154;
    uint64_t v65 = v36;
    uint64_t v66 = v121;
    uint64_t v67 = v123;
    uint64_t v68 = &v123[*(int *)(v154 + 48)];
    uint64_t v69 = v124;
    uint64_t v70 = *(void (**)(char *, char *, uint64_t))(v124 + 32);
    v70(v123, v65, v157);
    uint64_t v120 = v68;
    v70(v68, v61, v63);
    uint64_t v71 = &v66[*(int *)(v64 + 48)];
    uint64_t v72 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
    v72(v66, v67, v63);
    v72(v71, v68, v63);
    uint64_t v73 = (uint64_t)v122;
    v70(v122, v66, v63);
    uint64_t v74 = *(void (**)(char *, uint64_t))(v69 + 8);
    v74(v71, v63);
    uint64_t v75 = &v66[*(int *)(v154 + 48)];
    v70(v66, v67, v63);
    v70(v75, v120, v63);
    uint64_t v76 = v125;
    v70((char *)(v73 + *(int *)(v125 + 36)), v75, v63);
    v74(v66, v63);
    sub_240B9D998(v73, v155, (uint64_t (*)(void))sub_240A61110);
    uint64_t v77 = v156;
    uint64_t v78 = sub_240B9A2B8((uint64_t)v158, v126, v156);
    uint64_t v158 = &v119;
    MEMORY[0x270FA5388](v78);
    uint64_t v79 = v160;
    *(&v119 - 2) = v77;
    *(&v119 - 1) = (uint64_t)v79;
    sub_240B9C1E4();
    sub_240B9C964();
    uint64_t v80 = v127;
    sub_240BB5E10();
    uint64_t v81 = sub_240BB5F50();
    uint64_t v82 = *(void *)(v81 - 8);
    uint64_t v154 = *(void *)(v82 + 56);
    uint64_t v157 = v82 + 56;
    uint64_t v83 = (uint64_t)v144;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v154)(v144, 1, 1, v81);
    uint64_t v84 = sub_240B9D858(&qword_268CA22F0, sub_240B9C19C);
    unint64_t v85 = sub_240A61228();
    uint64_t v86 = v129;
    uint64_t v87 = v130;
    sub_240BB6900();
    sub_240AF8580(v83);
    uint64_t v88 = (*(uint64_t (**)(char *, uint64_t))(v128 + 8))(v80, v87);
    MEMORY[0x270FA5388](v88);
    *(&v119 - 2) = v136;
    *(void *)&long long v164 = v87;
    *((void *)&v164 + 1) = v76;
    *(void *)&long long v165 = v84;
    *((void *)&v165 + 1) = v85;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v90 = MEMORY[0x263EFCC38];
    uint64_t v91 = MEMORY[0x263EFCC30];
    uint64_t v92 = v133;
    uint64_t v93 = v132;
    sub_240BB68E0();
    (*(void (**)(char *, uint64_t))(v131 + 8))(v86, v93);
    long long v161 = v162;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v154)(v83, 1, 1, v81);
    sub_240A62844(0, &qword_268C9F0B0, MEMORY[0x263F8D560], MEMORY[0x263F8D1A0]);
    uint64_t v95 = v94;
    *(void *)&long long v164 = v93;
    *((void *)&v164 + 1) = v90;
    *(void *)&long long v165 = OpaqueTypeConformance2;
    *((void *)&v165 + 1) = v91;
    uint64_t v96 = swift_getOpaqueTypeConformance2();
    unint64_t v97 = sub_240A6156C();
    uint64_t v98 = v137;
    uint64_t v99 = v138;
    sub_240BB6910();
    sub_240AF8580(v83);
    uint64_t v100 = (*(uint64_t (**)(char *, uint64_t))(v134 + 8))(v92, v99);
    MEMORY[0x270FA5388](v100);
    *(&v119 - 2) = (uint64_t)&v162;
    *(void *)&long long v164 = v99;
    *((void *)&v164 + 1) = v95;
    *(void *)&long long v165 = v96;
    *((void *)&v165 + 1) = v97;
    swift_getOpaqueTypeConformance2();
    uint64_t v101 = v141;
    uint64_t v102 = v140;
    sub_240BB68F0();
    (*(void (**)(char *, uint64_t))(v139 + 8))(v98, v102);
    sub_240BB6B40();
    sub_240BB64E0();
    uint64_t v103 = v142;
    uint64_t v104 = (uint64_t)v145;
    uint64_t v105 = v143;
    (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v145, v101, v143);
    uint64_t v106 = (_OWORD *)(v104 + *(int *)(v135 + 36));
    long long v107 = v165;
    _OWORD *v106 = v164;
    v106[1] = v107;
    v106[2] = v166;
    (*(void (**)(char *, uint64_t))(v103 + 8))(v101, v105);
    uint64_t KeyPath = swift_getKeyPath();
    id v109 = objc_msgSend(self, sel_sharedApplication);
    id v110 = objc_msgSend(v109, sel_userInterfaceLayoutDirection);

    uint64_t v111 = v149;
    uint64_t v112 = (unsigned int *)MEMORY[0x263F18DD0];
    if (v110 != (id)1) {
      uint64_t v112 = (unsigned int *)MEMORY[0x263F18DC8];
    }
    unint64_t v113 = v148;
    uint64_t v114 = v150;
    (*(void (**)(char *, void, uint64_t))(v149 + 104))(v148, *v112, v150);
    sub_240B9D26C();
    uint64_t v116 = v151;
    uint64_t v117 = (uint64_t *)(v151 + *(int *)(v115 + 36));
    sub_240AF86E4(0, &qword_268C9F100, MEMORY[0x263F18DD8], MEMORY[0x263F1A418]);
    (*(void (**)(char *, char *, uint64_t))(v111 + 16))((char *)v117 + *(int *)(v118 + 28), v113, v114);
    *uint64_t v117 = KeyPath;
    sub_240B9D33C(v104, v116);
    (*(void (**)(char *, uint64_t))(v111 + 8))(v113, v114);
    sub_240B9D3D8(v104);
    sub_240B9D46C(v155, (uint64_t (*)(void))sub_240A61110);
    (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v156, v147);
    (*(void (**)(char *, uint64_t))(v159 + 8))(v160, v153);
    return sub_240A61C4C((uint64_t)&v162);
  }
  else
  {
    __break(1u);
  }
  return result;
}