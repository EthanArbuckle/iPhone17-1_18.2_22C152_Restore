uint64_t sub_240A1E37C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for LocalizedImageView.ImageConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_240A1E414@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_240A3466C((void *)(*a1 + OBJC_IVAR____TtC5Heart26HeartPromotionAvailability_irregularRhythmNotificationsStatusManager), *(void *)(*a1 + OBJC_IVAR____TtC5Heart26HeartPromotionAvailability_irregularRhythmNotificationsStatusManager + 24));
  sub_240BB5770();
  uint64_t v3 = sub_240BB56E0();
  v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(a2, 0, 1, v3);
}

void *sub_240A1E750(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  uint64_t v7 = sub_240BB3240();
  v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_retain();
  v8(v5, v6, v7);
  return a1;
}

uint64_t sub_240A1E7E8@<X0>(_WORD *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_240BB32A0();
  MEMORY[0x270FA5388](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOWORD(a1) = *a1;
  (*(void (**)(char *, uint64_t))(v9 + 16))(v8, a2);
  uint64_t v10 = type metadata accessor for AFibFeaturesPromotionGenerator();
  swift_allocObject();
  v11 = sub_240A1F984((__int16)a1, (uint64_t)v8);
  a3[3] = v10;
  uint64_t result = sub_240A31F04(&qword_26AFD8140, (void (*)(uint64_t))type metadata accessor for AFibFeaturesPromotionGenerator);
  a3[4] = result;
  *a3 = v11;
  return result;
}

id sub_240A1E924(uint64_t a1, uint64_t a2)
{
  v28[1] = a2;
  uint64_t v3 = sub_240BB56B0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240BB56E0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_240BB5690();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  if ((*(unsigned int (**)(char *, uint64_t))(v8 + 88))(v10, v7) == *MEMORY[0x263F44990])
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v10, v7);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_240BB5650();
    v15 = (void *)sub_240BB56C0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    id v16 = objc_msgSend(v15, sel_areAllRequirementsSatisfied);

    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_240BB5990();
    sub_240A395FC(v17, (uint64_t)qword_26AFDEC70);
    swift_retain_n();
    v18 = sub_240BB5970();
    os_log_type_t v19 = sub_240BB71A0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      v28[0] = swift_slowAlloc();
      uint64_t v30 = v28[0];
      *(_DWORD *)uint64_t v20 = 136446722;
      sub_240A3B064(0, &qword_268CA0D60, type metadata accessor for ElectrocardiogramUpdateAvailability, MEMORY[0x263F8D8F0]);
      uint64_t v29 = v21;
      sub_240B1EA28();
      uint64_t v22 = sub_240BB6E10();
      uint64_t v29 = sub_240A38940(v22, v23, &v30);
      sub_240BB75F0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2082;
      uint64_t v29 = sub_240A38940(0xD000000000000023, 0x8000000240BD0AA0, &v30);
      sub_240BB75F0();
      *(_WORD *)(v20 + 22) = 2082;
      if (v16) {
        uint64_t v24 = 1702195828;
      }
      else {
        uint64_t v24 = 0x65736C6166;
      }
      if (v16) {
        unint64_t v25 = 0xE400000000000000;
      }
      else {
        unint64_t v25 = 0xE500000000000000;
      }
      uint64_t v29 = sub_240A38940(v24, v25, &v30);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v18, v19, "[%{public}s.%{public}s] User onboarded. (shouldAdvertise: %{public}s).", (uint8_t *)v20, 0x20u);
      uint64_t v26 = v28[0];
      swift_arrayDestroy();
      MEMORY[0x24560B930](v26, -1, -1);
      MEMORY[0x24560B930](v20, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return 0;
  }
  return v16;
}

uint64_t sub_240A1EE40()
{
  return sub_240BB7C00();
}

uint64_t sub_240A1EE84(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v7 = v6;
  *(_DWORD *)(v6 + OBJC_IVAR____TtC5Heart30HeartFeaturePromotionGenerator_featurePromotionResult) = a1;
  uint64_t v12 = v6 + OBJC_IVAR____TtC5Heart30HeartFeaturePromotionGenerator_domain;
  uint64_t v13 = sub_240BB3240();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, a4, v13);
  if (a1 > 1u)
  {
    swift_bridgeObjectRelease();
    char v16 = 0;
  }
  else
  {
    char v15 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    char v16 = v15 ^ 1;
  }
  uint64_t v17 = sub_240A25B94(a1, v16 & 1, a3, a2, a5, a6);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a4, v13);
  uint64_t v18 = sub_240BB32A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(a3, v18);
  sub_240A3E1EC(a2, (uint64_t (*)(void))sub_240A3E2B4);
  *(void *)(v7 + OBJC_IVAR____TtC5Heart30HeartFeaturePromotionGenerator_publisher) = v17;
  return v7;
}

uint64_t sub_240A1F08C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_240A1F0CC@<X0>(__int16 a1@<W0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_240BB32A0();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v9 + 16))(v8, a2);
  uint64_t v10 = type metadata accessor for AtrialFibrillationPromotionGenerator();
  swift_allocObject();
  uint64_t v11 = sub_240A20680(a1, (uint64_t)v8);
  a3[3] = v10;
  uint64_t result = sub_240A31F04(&qword_26AFD9560, (void (*)(uint64_t))type metadata accessor for AtrialFibrillationPromotionGenerator);
  a3[4] = result;
  *a3 = v11;
  return result;
}

uint64_t sub_240A1F204()
{
  uint64_t v1 = *v0;
  sub_240BB4850();
  return v1;
}

uint64_t sub_240A1F234@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_240A3FB28();
  MEMORY[0x270FA5388](v4);
  sub_240A1F828(*a1 + OBJC_IVAR____TtC5Heart26HeartPromotionAvailability_aFibBurdenFeatureStatusManager, (uint64_t)v8, (uint64_t (*)(void))sub_240A1F8F8);
  if (v9)
  {
    sub_240A3466C(v8, v9);
    sub_240BB5770();
    uint64_t v6 = sub_240BB56E0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a2, 0, 1, v6);
    return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v8);
  }
  else
  {
    sub_240B61A54((uint64_t)v8, (uint64_t (*)(void))sub_240A1F8F8);
    uint64_t v5 = sub_240BB56E0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a2, 1, 1, v5);
  }
}

uint64_t *sub_240A1F4E8(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v9 = *a5;
  char v10 = a4 & 1;
  uint64_t v11 = sub_240BB3240();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v18[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v19 = &type metadata for RelatedSampleTypesGeneratorFactory;
  uint64_t v20 = &off_26F508E18;
  sub_240A284A8((uint64_t)v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))((uint64_t)a5 + OBJC_IVAR____TtC5Heart35RelatedSampleTypesGeneratorPipeline_domain, v14, v11);
  *(uint64_t *)((char *)a5 + OBJC_IVAR____TtC5Heart35RelatedSampleTypesGeneratorPipeline_feedItemRequirements) = a3;
  sub_240A3466C(v18, (uint64_t)v19);
  sub_240BB4850();
  uint64_t v15 = sub_240A325BC(a1, a2, a3, v10, v9);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v18);
  *(uint64_t *)((char *)a5 + OBJC_IVAR____TtC5Heart35RelatedSampleTypesGeneratorPipeline_publisher) = v15;
  return a5;
}

uint64_t sub_240A1F674(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_240BB3240();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

unint64_t sub_240A1F6EC(unint64_t result, uint64_t a2)
{
  unint64_t v2 = result;
  uint64_t v9 = a2;
  if (!(result >> 62))
  {
    uint64_t v3 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
    return v9;
  }
  uint64_t result = sub_240BB7900();
  uint64_t v3 = result;
  if (!result) {
    return v9;
  }
LABEL_3:
  if (v3 >= 1)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        uint64_t v5 = (void *)MEMORY[0x24560AAA0](i, v2);
        sub_240A3A2AC(&v8, v5);
      }
    }
    else
    {
      uint64_t v6 = (void **)(v2 + 32);
      do
      {
        uint64_t v7 = *v6++;
        sub_240A3A2AC(&v8, v7);

        --v3;
      }
      while (v3);
    }
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_240A1F7CC(uint64_t a1)
{
  sub_240A373A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240A1F828(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_240A1F890(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_240A1F8F8()
{
  if (!qword_26AFD7BD8)
  {
    sub_240A39BC8(255, &qword_26AFD7BD0);
    unint64_t v0 = sub_240BB75E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD7BD8);
    }
  }
}

id sub_240A1F960(uint64_t *a1)
{
  return sub_240A35FD4(a1);
}

void *sub_240A1F984(__int16 a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v23 = *v2;
  uint64_t v24 = a2;
  uint64_t v5 = sub_240BB32A0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  sub_240A3A624(0, (unint64_t *)&qword_26AFD98A8, (uint64_t (*)(uint64_t))sub_240A3B6CC, sub_240A3B758, MEMORY[0x263EFDE30]);
  uint64_t v21 = *(void *)(v8 - 8);
  uint64_t v22 = v8;
  MEMORY[0x270FA5388](v8);
  char v10 = (char *)&v21 - v9;
  uint64_t v11 = OBJC_IVAR____TtC5Heart30AFibFeaturesPromotionGenerator_domain;
  if (qword_26AFD7B88 != -1) {
    swift_once();
  }
  uint64_t v12 = (char *)v3 + v11;
  uint64_t v13 = sub_240BB3240();
  uint64_t v14 = sub_240A395FC(v13, (uint64_t)qword_26AFDEB50);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v12, v14, v13);
  *(_WORD *)((char *)v3 + OBJC_IVAR____TtC5Heart30AFibFeaturesPromotionGenerator_result) = a1;
  uint64_t v15 = v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v5);
  unint64_t v16 = (*(unsigned __int8 *)(v6 + 80) + 18) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v17 = swift_allocObject();
  *(_WORD *)(v17 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v17 + v16, (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  *(void *)(v17 + ((v7 + v16 + 7) & 0xFFFFFFFFFFFFFFF8)) = v23;
  sub_240A3B6CC();
  sub_240A3B758();
  sub_240BB6240();
  sub_240A3A738();
  uint64_t v18 = v22;
  uint64_t v19 = sub_240BB62E0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v15, v5);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v18);
  v3[2] = v19;
  return v3;
}

id sub_240A1FCC8()
{
  uint64_t v1 = (void *)v0[5];
  if (v1)
  {
    id v2 = (id)v0[5];
  }
  else
  {
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3D0]), sel_initWithFeatureIdentifier_healthStore_, v0[2], v0[4]);
    uint64_t v4 = (void *)v0[5];
    v0[5] = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

void sub_240A1FD44(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void *initializeWithCopy for CardioFitnessRetroComputeDismissalStateManager(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_retain();
  sub_240BB4850();
  sub_240BB4850();
  sub_240BB4850();
  return a1;
}

uint64_t sub_240A1FE38(uint64_t a1, uint64_t a2)
{
  sub_240A373A0();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240BB33F0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = (void *)*MEMORY[0x263F09728];
  sub_240A3FEE8(a2, (uint64_t)v5, (uint64_t (*)(void))sub_240A373A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_240A1F7CC((uint64_t)v5);
    uint64_t v11 = 0;
    uint64_t v12 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    uint64_t v11 = sub_240BB33E0();
    uint64_t v12 = v13;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  uint64_t v14 = sub_240A35280(v10, 1, v11, v12);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_240A20078()
{
  sub_240A39C18(0, (unint64_t *)&qword_26AFD77C0);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240BBAD40;
  sub_240A3A1D8();
  *(void *)(inited + 32) = MEMORY[0x24560A460]((id)*MEMORY[0x263F09338]);
  sub_240BB6F30();
  if (inited >> 62)
  {
    sub_240BB4850();
    uint64_t v3 = sub_240BB7900();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v2 = MEMORY[0x263F8EE88];
    goto LABEL_6;
  }
  if (!*(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  sub_240A3A2D0(inited);
  uint64_t v2 = v1;
LABEL_6:
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_240A20168(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = sub_240BB76F0();
    if (v2) {
      goto LABEL_3;
    }
    return MEMORY[0x263F8EE78];
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
LABEL_3:
  if (v2 <= 0)
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    sub_240A34E00();
    uint64_t v3 = (void *)swift_allocObject();
    int64_t v4 = j__malloc_size(v3);
    uint64_t v5 = v4 - 32;
    if (v4 < 32) {
      uint64_t v5 = v4 - 25;
    }
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  sub_240BB4850();
  uint64_t v6 = sub_240A2031C(&v8, v3 + 4, v2, a1);
  uint64_t result = sub_240A325B4();
  if (v6 == (void *)v2) {
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_240A20260@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_240BB3250();
  sub_240A3466C(v8, v8[3]);
  int64_t v4 = (void *)sub_240BB31F0();
  uint64_t v5 = sub_240A35280((void *)*MEMORY[0x263F09728], 1, 0, 0);

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v8);
  uint64_t v6 = sub_240A21FD0(a1, v5);
  uint64_t result = swift_release();
  *a2 = v6;
  return result;
}

void *sub_240A2031C(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_240BB76B0();
    sub_240A34DC4(0, (unint64_t *)&qword_26AFD9930);
    sub_240AAE04C();
    uint64_t result = (void *)sub_240BB70B0();
    uint64_t v4 = v27;
    uint64_t v8 = v28;
    uint64_t v9 = v29;
    int64_t v10 = v30;
    unint64_t v11 = v31;
    uint64_t v24 = v7;
    if (v6) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v12 = 0;
LABEL_46:
    *uint64_t v24 = v4;
    v24[1] = v8;
    v24[2] = v9;
    v24[3] = v10;
    v24[4] = v11;
    return (void *)v12;
  }
  int64_t v10 = 0;
  uint64_t v20 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v8 = a4 + 56;
  uint64_t v9 = ~v20;
  uint64_t v21 = -v20;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  else {
    uint64_t v22 = -1;
  }
  unint64_t v11 = v22 & *(void *)(a4 + 56);
  uint64_t v24 = result;
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v12 = 0;
    goto LABEL_46;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v12 = 0;
  int64_t v25 = (unint64_t)(v9 + 64) >> 6;
  uint64_t v23 = v9;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_240BB7720()) {
        goto LABEL_45;
      }
      sub_240A34DC4(0, (unint64_t *)&qword_26AFD9930);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v15 = v26;
      uint64_t result = (void *)sub_240BB50A0();
      if (!v26) {
        goto LABEL_45;
      }
      goto LABEL_8;
    }
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_7;
    }
    int64_t v16 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v16 >= v25)
    {
      unint64_t v11 = 0;
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v16);
    if (v17) {
      goto LABEL_23;
    }
    int64_t v18 = v10 + 2;
    if (v10 + 2 >= v25)
    {
      unint64_t v11 = 0;
      ++v10;
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v18);
    if (!v17)
    {
      if (v10 + 3 >= v25) {
        goto LABEL_42;
      }
      unint64_t v17 = *(void *)(v8 + 8 * (v10 + 3));
      if (v17)
      {
        int64_t v16 = v10 + 3;
        goto LABEL_23;
      }
      int64_t v18 = v10 + 4;
      if (v10 + 4 >= v25)
      {
        unint64_t v11 = 0;
        v10 += 3;
        goto LABEL_45;
      }
      unint64_t v17 = *(void *)(v8 + 8 * v18);
      if (!v17)
      {
        int64_t v16 = v10 + 5;
        if (v10 + 5 >= v25)
        {
LABEL_42:
          unint64_t v11 = 0;
          int64_t v10 = v18;
          goto LABEL_45;
        }
        unint64_t v17 = *(void *)(v8 + 8 * v16);
        if (!v17)
        {
          int64_t v19 = v10 + 6;
          while (v25 != v19)
          {
            unint64_t v17 = *(void *)(v8 + 8 * v19++);
            if (v17)
            {
              int64_t v16 = v19 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v11 = 0;
          int64_t v10 = v25 - 1;
          goto LABEL_45;
        }
        goto LABEL_23;
      }
    }
    int64_t v16 = v18;
LABEL_23:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v10 = v16;
LABEL_7:
    uint64_t result = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t v15 = result;
    if (!result) {
      goto LABEL_45;
    }
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3)
    {
      uint64_t v12 = a3;
LABEL_45:
      uint64_t v9 = v23;
      goto LABEL_46;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_240A20628@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t result = swift_allocObject();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for HeartHealthPluginDelegate()
{
  return self;
}

void *sub_240A20680(__int16 a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v24 = a2;
  uint64_t v21 = *v2;
  uint64_t v5 = sub_240BB32A0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  sub_240A3A6A4();
  uint64_t v22 = *(void *)(v8 - 8);
  uint64_t v23 = v8;
  MEMORY[0x270FA5388](v8);
  int64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = OBJC_IVAR____TtC5Heart36AtrialFibrillationPromotionGenerator_domain;
  if (qword_26AFD9D00 != -1) {
    swift_once();
  }
  uint64_t v12 = (char *)v3 + v11;
  uint64_t v13 = sub_240BB3240();
  uint64_t v14 = sub_240A395FC(v13, (uint64_t)qword_26AFDEC58);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v12, v14, v13);
  *(_WORD *)((char *)v3 + OBJC_IVAR____TtC5Heart36AtrialFibrillationPromotionGenerator_result) = a1;
  uint64_t v15 = v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v5);
  unint64_t v16 = (*(unsigned __int8 *)(v6 + 80) + 18) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v17 = swift_allocObject();
  *(_WORD *)(v17 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v17 + v16, (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  *(void *)(v17 + ((v7 + v16 + 7) & 0xFFFFFFFFFFFFFFF8)) = v21;
  sub_240A3B6CC();
  sub_240A20A2C(&qword_26AFD9810, (void (*)(uint64_t))sub_240A3B6CC);
  sub_240BB6240();
  sub_240A20A2C((unint64_t *)&qword_26AFD98A0, (void (*)(uint64_t))sub_240A3A6A4);
  uint64_t v18 = v23;
  uint64_t v19 = sub_240BB62E0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v15, v5);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v18);
  v3[2] = v19;
  return v3;
}

uint64_t sub_240A209E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A20A2C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A20A74(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A20ABC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A20B04(uint64_t a1)
{
  uint64_t v2 = sub_240BB3050();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_240A20E18();
    uint64_t v9 = sub_240BB77A0();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    unint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_240A20EF4(&qword_26AFD8F88, MEMORY[0x263F45588]);
      uint64_t v16 = sub_240BB6D40();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_240A20EF4(&qword_26AFD8F58, MEMORY[0x263F45588]);
          char v23 = sub_240BB6D90();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        int64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

void sub_240A20E18()
{
  if (!qword_26AFD9990)
  {
    sub_240BB3050();
    sub_240A20EF4(&qword_26AFD8F88, MEMORY[0x263F45588]);
    unint64_t v0 = sub_240BB77B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD9990);
    }
  }
}

uint64_t sub_240A20EAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A20EF4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A20F3C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for HKHRAFibBurdenLoggingCategory(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A20F80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A20FC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A21010(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A21058(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_240A210A0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x263F8EE78];
    sub_240BB7880();
    uint64_t v4 = a1 + 32;
    do
    {
      sub_240A1E37C(v4, (uint64_t)v9);
      uint64_t v5 = v10;
      uint64_t v6 = v11;
      sub_240A3466C(v9, v10);
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
      _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v9);
      sub_240BB7860();
      sub_240BB7890();
      sub_240BB78A0();
      sub_240BB7870();
      v4 += 40;
      --v1;
    }
    while (v1);
    uint64_t v2 = v12;
  }
  uint64_t v7 = sub_240A335D4(v2);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_240A211A0()
{
  sub_240A39C18(0, (unint64_t *)&qword_26AFD77C0);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240BBAD40;
  *(void *)(inited + 32) = objc_msgSend(self, sel_electrocardiogramType);
  sub_240BB6F30();
  if (inited >> 62)
  {
    sub_240BB4850();
    uint64_t v3 = sub_240BB7900();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v2 = MEMORY[0x263F8EE88];
    goto LABEL_6;
  }
  if (!*(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  sub_240A3A2D0(inited);
  uint64_t v2 = v1;
LABEL_6:
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_240A21290@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_240BB32A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v7 = (char *)&v17[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB3250();
  sub_240A3466C(v17, v18);
  uint64_t v8 = sub_240BB31F0();
  uint64_t v9 = type metadata accessor for ElectrocardiogramRecordingOnboardingPromotionConfigurationProvider();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v8;
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v11 = (void *)*MEMORY[0x263F09740];
  uint64_t v18 = v9;
  uint64_t v19 = sub_240A375CC(&qword_26AFD86E8, (void (*)(uint64_t))type metadata accessor for ElectrocardiogramRecordingOnboardingPromotionConfigurationProvider);
  v17[0] = v10;
  uint64_t v12 = sub_240BB3480();
  uint64_t v13 = MEMORY[0x263F459B0];
  a2[3] = v12;
  a2[4] = v13;
  sub_240A23B08(a2);
  id v14 = v11;
  return sub_240BB3460();
}

uint64_t _s5Heart66ElectrocardiogramRecordingOnboardingPromotionConfigurationProviderC17associatedHKTypesShySo12HKObjectTypeCGvg_0()
{
  sub_240A39C60(0, (unint64_t *)&qword_26AFD77C0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240BBAD40;
  *(void *)(inited + 32) = objc_msgSend(self, sel_electrocardiogramType);
  sub_240BB6F30();
  if (inited >> 62)
  {
    sub_240BB4850();
    uint64_t v3 = sub_240BB7900();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v2 = MEMORY[0x263F8EE88];
    goto LABEL_6;
  }
  if (!*(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  sub_240A3A2D0(inited);
  uint64_t v2 = v1;
LABEL_6:
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_240A21548@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (void *)sub_240BB3270();
  char v5 = objc_msgSend(self, sel_hasPairedWatch);
  v7[3] = sub_240BB3020();
  v7[4] = &off_26F508120;
  v7[0] = sub_240BB3010();
  sub_240A22BC8((uint64_t)v4, a1, v5, v7, a2);

  return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v7);
}

uint64_t sub_240A215F0()
{
  v18[1] = *v0;
  sub_240A21CBC(0, &qword_26AFD8AC0, MEMORY[0x263EFDE08]);
  void v18[3] = *(void *)(v1 - 8);
  v18[4] = v1;
  MEMORY[0x270FA5388](v1);
  v18[2] = (char *)v18 - v2;
  uint64_t v3 = sub_240BB5990();
  uint64_t v20 = *(void *)(v3 - 8);
  uint64_t v21 = v3;
  MEMORY[0x270FA5388](v3);
  sub_240A3D3E0();
  uint64_t v5 = v4;
  uint64_t v19 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_240BB56E0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v0;
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD75D0);
  uint64_t v12 = sub_240BB57C0();
  sub_240BB57B0();
  uint64_t v23 = v12;
  sub_240A3B064(0, &qword_26AFD8BA0, MEMORY[0x263F44998], MEMORY[0x263F8E0F8]);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_240BB97E0;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 16))(v14 + v13, v11, v8);
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
  sub_240A21CBC(0, (unint64_t *)&qword_26AFD8A40, MEMORY[0x263EFDCF0]);
  sub_240A3B8A0((unint64_t *)&qword_26AFD8A30, (unint64_t *)&qword_26AFD8A40, v15);
  sub_240BB63E0();
  swift_bridgeObjectRelease();
  sub_240A3CA50(&qword_26AFD8898, (void (*)(uint64_t))sub_240A3D3E0);
  uint64_t v16 = sub_240BB62E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v16;
}

void sub_240A21CBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    uint64_t v6 = sub_240BB56E0();
    unint64_t v7 = a3(a1, v6, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_240A21D2C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240BB6100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_240A21D90()
{
  sub_240A3D598();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)&v0[OBJC_IVAR____TtC5HeartP33_1983BB941A89CE37AE5E37B88EF7D39A34CMVO2MaxRetrocomputeStatePublisher_subject];
  unint64_t v7 = (os_unfair_lock_s *)(v6 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v6 + 24));
  uint64_t v8 = *(void *)(v6 + 16);
  swift_retain();
  os_unfair_lock_unlock(v7);
  v12[1] = v8;
  *(void *)(swift_allocObject() + 16) = v0;
  sub_240A3B240();
  sub_240A39B48();
  sub_240A21F88((unint64_t *)&unk_26AFD8A80, (void (*)(uint64_t))sub_240A3B240);
  uint64_t v9 = v0;
  sub_240BB62F0();
  swift_release();
  swift_release();
  sub_240A21F88((unint64_t *)&unk_26AFD8848, (void (*)(uint64_t))sub_240A3D598);
  uint64_t v10 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v10;
}

uint64_t sub_240A21F88(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A21FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = sub_240BB32A0();
  uint64_t v4 = *(void *)(v22 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v22);
  sub_240A3A938(0, (unint64_t *)&qword_26AFD89D0, (uint64_t (*)(uint64_t))sub_240A22390, (uint64_t (*)(void))sub_240A3B92C, MEMORY[0x263EFDB80]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v21 - v9;
  sub_240A3CBE8();
  uint64_t v23 = *(void *)(v11 - 8);
  uint64_t v24 = v11;
  MEMORY[0x270FA5388](v11);
  unint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = a2;
  uint64_t v21 = a1;
  LOBYTE(a2) = sub_240BB3260();
  sub_240A22390();
  sub_240A3B92C();
  if (a2)
  {
    uint64_t v14 = sub_240BB62E0();
  }
  else
  {
    sub_240BB6360();
    sub_240B00908();
    uint64_t v14 = sub_240BB62E0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v26 = v14;
  uint64_t v15 = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v21, v22);
  unint64_t v16 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v17 + v16, (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v15);
  *(void *)(v17 + ((v5 + v16 + 7) & 0xFFFFFFFFFFFFFFF8)) = v25;
  sub_240A22390();
  sub_240A39BC8(0, (unint64_t *)&qword_26AFD8FB0);
  sub_240BB6330();
  swift_release();
  swift_release();
  sub_240A31EBC((unint64_t *)&qword_26AFD8900, (void (*)(uint64_t))sub_240A3CBE8);
  uint64_t v18 = v24;
  uint64_t v19 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v18);
  return v19;
}

void sub_240A22390()
{
  if (!qword_26AFD8A40)
  {
    sub_240BB56E0();
    unint64_t v0 = sub_240BB6100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD8A40);
    }
  }
}

uint64_t sub_240A223F8()
{
  uint64_t v1 = *v0;
  sub_240BB6DE0();
  sub_240BB3410();
  swift_bridgeObjectRelease();
  *(void *)(swift_allocObject() + 16) = v1;
  *(void *)(swift_allocObject() + 16) = v1;
  sub_240A3AD5C();
  sub_240A3AC5C(&qword_26AFD8AC8, (void (*)(uint64_t))sub_240A3AD5C);
  sub_240BB6300();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_240A22568@<X0>(uint64_t a1@<X8>)
{
  v13[1] = a1;
  uint64_t v1 = sub_240BB3210();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB3270();
  sub_240A32064(0, (unint64_t *)&qword_26AFD99A0, MEMORY[0x263F45588]);
  uint64_t v5 = sub_240BB3050();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_240BB97E0;
  unint64_t v9 = v8 + v7;
  if (qword_26AFD7AC8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_240A395FC(v5, (uint64_t)qword_26AFD7AA8);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 16))(v9, v10, v5);
  if (*(void *)(v8 + 16)) {
    sub_240A20B04(v8);
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v11 = sub_240A34CA4();
  sub_240A39F7C(v11);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F45688], v1);
  return sub_240BB3230();
}

uint64_t sub_240A227E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v29 = a4;
  uint64_t v7 = sub_240BB32A0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  sub_240A3C640();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v31 = v10;
  uint64_t v32 = v11;
  MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3D1DC(0, &qword_26AFD7498, (void (*)(uint64_t))sub_240A3C640, (void (*)(void))sub_240A3C708);
  uint64_t v30 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v28 - v16;
  v35[3] = &type metadata for CardioFitnessRetroComputeDismissalStateManager;
  v35[4] = &off_26F5041B0;
  uint64_t v18 = swift_allocObject();
  uint64_t v34 = a2;
  v35[0] = v18;
  long long v19 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v18 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v18 + 32) = v19;
  *(_OWORD *)(v18 + 48) = *(_OWORD *)(a3 + 32);
  *(void *)(v18 + 64) = *(void *)(a3 + 48);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  sub_240A1E37C((uint64_t)v35, (uint64_t)v33);
  unint64_t v20 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v29;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v21 + v20, (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  sub_240A37388(v33, v21 + ((v9 + v20 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_240A28D58(a3);
  sub_240A3B3D0(0, (unint64_t *)&qword_26AFD7550, (unint64_t *)&qword_26AFD7678, &qword_26AFD75E0);
  sub_240A255FC(0, (unint64_t *)&qword_26AFD97E8, (uint64_t)&qword_26AFD8FB0, MEMORY[0x263F459E0], (void (*)(uint64_t, uint64_t, uint64_t))sub_240A39BC8);
  sub_240A3B4B4();
  sub_240BB6330();
  swift_release();
  uint64_t v22 = sub_240A3C708();
  unint64_t v23 = sub_240A3B9FC();
  uint64_t v24 = v31;
  MEMORY[0x2456096E0](v31, v22, v23);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v24);
  sub_240A3D154();
  uint64_t v25 = v30;
  uint64_t v26 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v25);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v35);
  return v26;
}

uint64_t sub_240A22BC8@<X0>(uint64_t a1@<X0>, char *a2@<X1>, char a3@<W2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  v99 = a4;
  v107 = a2;
  uint64_t v108 = a5;
  uint64_t v95 = _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa(0);
  MEMORY[0x270FA5388](v95);
  uint64_t v96 = (uint64_t)v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3ED34(0, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa, MEMORY[0x263F8D8F0]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v90 = (uint64_t)v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v91 = (uint64_t)v86 - v11;
  uint64_t v12 = _s14descr26F502E21O15SettingsContentVMa();
  uint64_t v97 = *(void *)(v12 - 8);
  uint64_t v98 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v88 = (uint64_t)v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v89 = (uint64_t)v86 - v15;
  uint64_t v94 = sub_240BB5660();
  uint64_t v93 = *(void *)(v94 - 8);
  MEMORY[0x270FA5388](v94);
  v92 = (char *)v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_240BB56B0();
  uint64_t v103 = *(void *)(v106 - 8);
  MEMORY[0x270FA5388](v106);
  v105 = (char *)v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_240BB5690();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v101 = v18;
  uint64_t v102 = v19;
  MEMORY[0x270FA5388](v18);
  v104 = (char *)v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_240BB56E0();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void *)(v22 + 64);
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)v86 - v26;
  sub_240A3FB28();
  uint64_t v109 = v28;
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)v86 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = (void *)sub_240BB30E0();
  uint64_t v100 = a1;
  LOBYTE(a1) = sub_240BB30D0();

  if ((a1 & 1) == 0)
  {
    if (qword_26AFD7158 == -1) {
      goto LABEL_15;
    }
    goto LABEL_29;
  }
  if ((a3 & 1) == 0)
  {
    if (qword_26AFD7158 == -1) {
      goto LABEL_15;
    }
    goto LABEL_29;
  }
  uint64_t v33 = *MEMORY[0x263F09600];
  uint64_t v34 = (void *)sub_240BB56F0();
  unsigned __int8 v35 = objc_msgSend(v34, sel_isRequirementSatisfiedWithIdentifier_, *MEMORY[0x263F09688]);

  if ((v35 & 1) == 0)
  {
    if (qword_26AFD7158 == -1)
    {
LABEL_15:
      sub_240A395FC(v109, (uint64_t)qword_26AFDEB68);
      uint64_t v110 = 0;
      sub_240BB5700();
      goto LABEL_16;
    }
LABEL_29:
    swift_once();
    goto LABEL_15;
  }
  v86[1] = v33;
  if (qword_26AFD7158 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_240A395FC(v109, (uint64_t)qword_26AFDEB68);
  v37 = *(void (**)(char *))(v29 + 16);
  v86[0] = v36;
  v37(v31);
  v87 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
  v87(v27, v107, v21);
  unint64_t v38 = (*(unsigned __int8 *)(v22 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v39 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v22 + 32))(v39 + v38, v27, v21);
  uint64_t v110 = 0;
  uint64_t v40 = v109;
  sub_240BB5700();
  swift_release();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v40);
  v87(v25, v107, v21);
  int v41 = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v25, v21);
  if (v41 == *MEMORY[0x263F44990])
  {
    (*(void (**)(char *, uint64_t))(v22 + 96))(v25, v21);
    uint64_t v43 = v101;
    uint64_t v42 = v102;
    v44 = v104;
    (*(void (**)(void))(v102 + 32))();
    v45 = v105;
    sub_240BB5650();
    v46 = (void *)sub_240BB56C0();
    v47 = *(void (**)(char *, uint64_t))(v103 + 8);
    uint64_t v48 = v106;
    v47(v45, v106);
    unsigned __int8 v49 = objc_msgSend(v46, sel_areAllRequirementsSatisfied);

    if (v49)
    {
      uint64_t v50 = v91;
      sub_240B2A748(v107, v99, v91);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v97 + 48))(v50, 1, v98) == 1)
      {
        sub_240A4C2E4(v50, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa);
        uint64_t v110 = 0;
        sub_240BB5730();
        (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v43);
LABEL_16:
        uint64_t v51 = sub_240BB31D0();
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v108, 1, 1, v51);
      }
      uint64_t v76 = v89;
      sub_240A4C354(v50, v89);
      uint64_t v110 = 0;
      sub_240BB5700();
      uint64_t v77 = v96;
      sub_240A4C418(v76, v96, (uint64_t (*)(void))_s14descr26F502E21O15SettingsContentVMa);
      swift_storeEnumTagMultiPayload();
      sub_240A49FB8(v100, v77, v108);
      sub_240A4C3B8(v77, _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa);
      sub_240A4C3B8(v76, (uint64_t (*)(void))_s14descr26F502E21O15SettingsContentVMa);
      return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v44, v43);
    }
    else
    {
      sub_240BB5650();
      v65 = (void *)sub_240BB56C0();
      v47(v45, v48);
      id v66 = objc_msgSend(v65, sel_unsatisfiedRequirementIdentifiers);

      type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(0);
      uint64_t v67 = sub_240BB6F10();

      sub_240A3ED34(0, (unint64_t *)&qword_268C9ED90, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureAvailabilityRequirementIdentifier, MEMORY[0x263F8E0F8]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_240BB97E0;
      v69 = (void *)*MEMORY[0x263F09678];
      *(void *)(inited + 32) = *MEMORY[0x263F09678];
      id v70 = v69;
      uint64_t v71 = v48;
      char v72 = sub_240B2B588(v67, inited);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_bridgeObjectRelease();
      if (v72)
      {
        v73 = v104;
        uint64_t v74 = v90;
        sub_240B2A748(v107, v99, v90);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v97 + 48))(v74, 1, v98) == 1)
        {
          sub_240A4C2E4(v74, &qword_26AFD7E50, (uint64_t (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa);
          uint64_t v110 = 0;
          sub_240BB5730();
          (*(void (**)(char *, uint64_t))(v102 + 8))(v73, v101);
          goto LABEL_16;
        }
        uint64_t v81 = v88;
        sub_240A4C354(v74, v88);
        uint64_t v110 = 0;
        sub_240BB5700();
        v82 = (char *)sub_240BB3720();
        uint64_t v84 = v83;
        uint64_t v85 = v96;
        sub_240A4C418(v81, v96, (uint64_t (*)(void))_s14descr26F502E21O15SettingsContentVMa);
        swift_storeEnumTagMultiPayload();
        sub_240A4A270(v100, v82, v84, 1, v85, v108);
        swift_bridgeObjectRelease();
        sub_240A4C3B8(v85, _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa);
        sub_240A4C3B8(v81, (uint64_t (*)(void))_s14descr26F502E21O15SettingsContentVMa);
        return (*(uint64_t (**)(char *, uint64_t))(v102 + 8))(v73, v101);
      }
      else
      {
        v79 = v104;
        sub_240BB5650();
        v80 = (void *)sub_240BB56C0();
        v47(v45, v71);
        sub_240A4A544(v80, v100, 1, v108);

        return (*(uint64_t (**)(char *, uint64_t))(v102 + 8))(v79, v101);
      }
    }
  }
  else
  {
    v54 = v105;
    uint64_t v53 = v106;
    if (v41 == *MEMORY[0x263F44988])
    {
      (*(void (**)(char *, uint64_t))(v22 + 96))(v25, v21);
      uint64_t v55 = v93;
      v56 = v92;
      uint64_t v57 = v94;
      (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v92, v25, v94);
      sub_240BB5650();
      v58 = (void *)sub_240BB56C0();
      v59 = *(void (**)(char *, uint64_t))(v103 + 8);
      v59(v54, v53);
      unsigned __int8 v60 = objc_msgSend(v58, sel_areAllRequirementsSatisfied);

      if (v60)
      {
        uint64_t v110 = 0;
        sub_240BB5700();
        v61 = (char *)sub_240BB3710();
        uint64_t v63 = v62;
        uint64_t v64 = v96;
        swift_storeEnumTagMultiPayload();
        sub_240A4A270(v100, v61, v63, 0, v64, v108);
        swift_bridgeObjectRelease();
        sub_240A4C3B8(v64, _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa);
      }
      else
      {
        sub_240BB5650();
        v78 = (void *)sub_240BB56C0();
        v59(v54, v53);
        sub_240A4A544(v78, v100, 0, v108);
      }
      return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v56, v57);
    }
    else
    {
      uint64_t v75 = sub_240BB31D0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v108, 1, 1, v75);
      return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v25, v21);
    }
  }
}

uint64_t *sub_240A23B08(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_240A23B6C(void *a1, void *a2, unint64_t *a3, uint64_t a4, unint64_t *a5, unint64_t *a6)
{
  uint64_t v11 = v6;
  uint64_t v14 = *v6;
  if ((*v6 & 0xC000000000000001) != 0)
  {
    if (v14 < 0) {
      uint64_t v15 = *v6;
    }
    else {
      uint64_t v15 = v14 & 0xFFFFFFFFFFFFFF8;
    }
    sub_240BB4850();
    id v16 = a2;
    uint64_t v17 = sub_240BB7700();

    if (v17)
    {
      swift_bridgeObjectRelease();

      sub_240A34DC4(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v42;
      sub_240BB50A0();
      return 0;
    }
    uint64_t result = sub_240BB76F0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v29 = sub_240B8DCF4(v15, result + 1, a5, a3, a4, a6);
    uint64_t v43 = v29;
    unint64_t v30 = *(void *)(v29 + 16);
    if (*(void *)(v29 + 24) <= v30)
    {
      unsigned __int8 v35 = a5;
      uint64_t v36 = v30 + 1;
      id v37 = v16;
      sub_240B8E508(v36, v35, a3, a4, a6);
      uint64_t v31 = v43;
    }
    else
    {
      uint64_t v31 = v29;
      id v32 = v16;
    }
    sub_240B8E7A4((uint64_t)v16, v31);
    uint64_t *v11 = v31;
    swift_bridgeObjectRelease();
    *a1 = v16;
  }
  else
  {
    sub_240BB4850();
    uint64_t v19 = sub_240BB74F0();
    uint64_t v20 = -1 << *(unsigned char *)(v14 + 32);
    unint64_t v21 = v19 & ~v20;
    uint64_t v40 = a4;
    if ((*(void *)(v14 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21))
    {
      sub_240A34DC4(0, a3);
      id v22 = *(id *)(*(void *)(v14 + 48) + 8 * v21);
      char v23 = sub_240BB7500();

      if (v23)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v27 = *(void **)(*(void *)(*v6 + 48) + 8 * v21);
        *a1 = v27;
        id v28 = v27;
        return 0;
      }
      uint64_t v24 = ~v20;
      while (1)
      {
        unint64_t v21 = (v21 + 1) & v24;
        if (((*(void *)(v14 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          break;
        }
        id v25 = *(id *)(*(void *)(v14 + 48) + 8 * v21);
        char v26 = sub_240BB7500();

        if (v26) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v44 = *v6;
    uint64_t *v6 = 0x8000000000000000;
    id v34 = a2;
    sub_240A39F98((uint64_t)v34, v21, isUniquelyReferenced_nonNull_native, a5, a3, v40, a6);
    uint64_t *v6 = v44;
    swift_bridgeObjectRelease();
    *a1 = v34;
  }
  return 1;
}

id sub_240A23E58(unint64_t *a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v5 = v4;
  sub_240A351D0(0, a1, a2, a3, a4);
  uint64_t v6 = *v4;
  uint64_t v7 = sub_240BB7770();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    uint64_t *v5 = v8;
    return result;
  }
  id result = (id)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11) {
    id result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v6 + 56);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v17) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v22);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v17) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v10 + 8 * v13);
      if (!v23)
      {
        int64_t v13 = v22 + 2;
        if (v22 + 2 >= v17) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v10 + 8 * v13);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v16 = (v23 - 1) & v23;
    unint64_t v19 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    uint64_t v20 = 8 * v19;
    unint64_t v21 = *(void **)(*(void *)(v6 + 48) + v20);
    *(void *)(*(void *)(v8 + 48) + v20) = v21;
    id result = v21;
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v17) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v10 + 8 * v24);
  if (v23)
  {
    int64_t v13 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v13 >= v17) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v13);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_240A24010()
{
  sub_240A39C18(0, (unint64_t *)&qword_26AFD77C0);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240BBAEF0;
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9940);
  *(void *)(inited + 32) = MEMORY[0x24560A460]((id)*MEMORY[0x263F09318]);
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
  *(void *)(inited + 40) = MEMORY[0x24560A470]((id)*MEMORY[0x263F09E38]);
  sub_240BB6F30();
  if (inited >> 62)
  {
    sub_240BB4850();
    uint64_t v3 = sub_240BB7900();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v2 = MEMORY[0x263F8EE88];
    goto LABEL_6;
  }
  if (!*(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  sub_240A3A2D0(inited);
  uint64_t v2 = v1;
LABEL_6:
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_240A24144()
{
  sub_240A39C18(0, (unint64_t *)&qword_26AFD77C0);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240BBAEF0;
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9940);
  *(void *)(inited + 32) = MEMORY[0x24560A460]((id)*MEMORY[0x263F09368]);
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
  *(void *)(inited + 40) = MEMORY[0x24560A470]((id)*MEMORY[0x263F09E38]);
  sub_240BB6F30();
  if (inited >> 62)
  {
    sub_240BB4850();
    uint64_t v3 = sub_240BB7900();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v2 = MEMORY[0x263F8EE88];
    goto LABEL_6;
  }
  if (!*(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  sub_240A3A2D0(inited);
  uint64_t v2 = v1;
LABEL_6:
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_240A24278(void *a1)
{
  sub_240A37614(0, &qword_26AFD99C0, (uint64_t (*)(uint64_t))sub_240B69764, MEMORY[0x263F8E0F8]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_240BBD8D0;
  *(void *)(v2 + 56) = &type metadata for HeartRateArticleDataProvider;
  *(void *)(v2 + 64) = sub_240A3F524();
  *(void *)(v2 + 72) = sub_240A3F4D0();
  *(void *)(v2 + 104) = &type metadata for CardioFitnessOverviewArticleDataProvider;
  *(void *)(v2 + 112) = sub_240A3E4F4();
  *(void *)(v2 + 120) = sub_240A3E4A0();
  *(void *)(v2 + 80) = a1;
  uint64_t v3 = *MEMORY[0x263F09730];
  id v4 = objc_allocWithZone(MEMORY[0x263F0A3D0]);
  id v5 = a1;
  id v6 = objc_msgSend(v4, sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v3, v5, 0);
  unint64_t v13 = sub_240A35CF0();
  uint64_t v14 = MEMORY[0x263F44B48];
  *(void *)&long long v12 = v6;
  uint64_t v7 = type metadata accessor for LowCardioFitnessArticleDataProvider();
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = v8 + OBJC_IVAR____TtC5Heart35LowCardioFitnessArticleDataProvider____lazy_storage___featureStatus;
  sub_240A37614(0, &qword_26AFD7BC0, MEMORY[0x263F44998], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(unsigned char *)(v8 + OBJC_IVAR____TtC5Heart35LowCardioFitnessArticleDataProvider____lazy_storage___showBridgeLink) = 2;
  *(void *)(v8 + 16) = v5;
  sub_240A37388(&v12, v8 + 24);
  *(void *)(v2 + 152) = v7;
  *(void *)(v2 + 160) = sub_240A375CC(&qword_26AFDA058, (void (*)(uint64_t))type metadata accessor for LowCardioFitnessArticleDataProvider);
  *(void *)(v2 + 168) = sub_240A375CC(qword_26AFDA0A0, (void (*)(uint64_t))type metadata accessor for LowCardioFitnessArticleDataProvider);
  *(void *)(v2 + 128) = v8;
  *(void *)(v2 + 200) = &type metadata for AFibBurdenArticleProviderLearnAboutAFib;
  *(void *)(v2 + 208) = sub_240A3F964();
  *(void *)(v2 + 216) = sub_240A3F910();
  *(void *)(v2 + 248) = &type metadata for AFibBurdenArticleProviderLearnAboutAFibBurden;
  *(void *)(v2 + 256) = sub_240A3F8BC();
  *(void *)(v2 + 264) = sub_240A3F868();
  return v2;
}

id sub_240A24500(char a1)
{
  while (1)
  {
    char v2 = a1;
    uint64_t v3 = sub_240BB56E0();
    uint64_t v4 = *(void *)(v3 - 8);
    MEMORY[0x270FA5388](v3);
    id v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_240A39410(0, &qword_26AFD7BC0, MEMORY[0x263F44998]);
    uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
    uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x270FA5388](v8);
    long long v12 = (char *)&v22 - v11;
    if (!v2) {
      break;
    }
    if (v2 == 1)
    {
      sub_240A3951C();
      swift_getKeyPath();
      swift_getKeyPath();
      unint64_t v23 = v1;
      id v13 = v1;
      sub_240BB35D0();

      swift_release();
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3))
      {
        uint64_t v14 = (void (*)(uint64_t))MEMORY[0x263F44998];
        uint64_t v15 = (uint64_t)v10;
LABEL_7:
        sub_240A395A0(v15, &qword_26AFD7BC0, v14);
        return 0;
      }
      (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v10, v3);
      unint64_t v18 = (void (*)(uint64_t))MEMORY[0x263F44998];
      uint64_t v19 = (uint64_t)v10;
      goto LABEL_14;
    }
    id v17 = 0;
    if ((sub_240A24500(0) & 1) == 0) {
      return v17;
    }
    a1 = 1;
    uint64_t v1 = v24;
  }
  sub_240A3951C();
  swift_getKeyPath();
  swift_getKeyPath();
  unint64_t v23 = v1;
  id v16 = v1;
  sub_240BB35D0();

  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3))
  {
    uint64_t v14 = (void (*)(uint64_t))MEMORY[0x263F44998];
    uint64_t v15 = (uint64_t)v12;
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v12, v3);
  unint64_t v18 = (void (*)(uint64_t))MEMORY[0x263F44998];
  uint64_t v19 = (uint64_t)v12;
LABEL_14:
  sub_240A395A0(v19, &qword_26AFD7BC0, v18);
  uint64_t v20 = (void *)sub_240BB56F0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  id v17 = objc_msgSend(v20, sel_areAllRequirementsSatisfied);

  return v17;
}

uint64_t sub_240A248C8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_240BB32A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  sub_240BB77C0();
  swift_bridgeObjectRelease();
  unint64_t v17 = 0xD00000000000002BLL;
  unint64_t v18 = 0x8000000240BD4520;
  uint64_t v8 = (void *)sub_240BB3270();
  sub_240BB30B0();

  sub_240BB6E70();
  swift_bridgeObjectRelease();
  unint64_t v9 = v17;
  unint64_t v10 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v11 = (void *)*MEMORY[0x263F09778];
  uint64_t v19 = &type metadata for IrregularRhythmNotificationsHealthChecklistConfigurationProvider;
  unint64_t v20 = sub_240A3DA50();
  unint64_t v17 = v9;
  unint64_t v18 = v10;
  uint64_t v12 = sub_240BB3480();
  uint64_t v13 = MEMORY[0x263F459B0];
  a2[3] = v12;
  a2[4] = v13;
  sub_240A23B08(a2);
  id v14 = v11;
  return sub_240BB3460();
}

uint64_t sub_240A24A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v32 = a1;
  uint64_t v39 = *v2;
  uint64_t v40 = a2;
  uint64_t v37 = sub_240BB32A0();
  uint64_t v3 = *(void *)(v37 - 8);
  uint64_t v36 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v37);
  id v34 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v41 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263EFDE30];
  sub_240A3A890(0, &qword_26AFD9888, MEMORY[0x263EFDE30]);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v42 = v5;
  uint64_t v43 = v6;
  MEMORY[0x270FA5388](v5);
  unint64_t v38 = (char *)v31 - v7;
  uint64_t v33 = sub_240BB3210();
  uint64_t v8 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  unint64_t v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_240BB3240();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[1] = sub_240BB3270();
  sub_240A320B8(0, (unint64_t *)&qword_26AFD99A0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v15 = sub_240BB3050();
  uint64_t v16 = *(void *)(v15 - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_240BB97E0;
  (*(void (**)(unint64_t, void, uint64_t))(v16 + 104))(v18 + v17, *MEMORY[0x263F454E0], v15);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F45688], v33);
  sub_240BB3220();
  uint64_t v19 = v35;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v35 + OBJC_IVAR____TtC5Heart35HeartFeatureStatusGeneratorPipeline_domain, v14, v11);
  unint64_t v20 = v34;
  uint64_t v21 = v32;
  uint64_t v22 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v34, v32, v37);
  unint64_t v23 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v24 = (v36 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v25 + v23, v20, v22);
  uint64_t v26 = v39;
  *(void *)(v25 + v24) = v40;
  *(void *)(v25 + ((v24 + 15) & 0xFFFFFFFFFFFFFFF8)) = v26;
  sub_240A31828(0, (unint64_t *)&qword_26AFD97E8, (void (*)(uint64_t))sub_240A3FDA4);
  sub_240A31E6C((unint64_t *)&qword_26AFD97E0, (unint64_t *)&qword_26AFD97E8, (void (*)(uint64_t))sub_240A3FDA4);
  swift_retain();
  uint64_t v27 = v38;
  sub_240BB6240();
  sub_240A3AAB8((unint64_t *)&qword_26AFD9880, &qword_26AFD9888, v41);
  uint64_t v28 = v42;
  uint64_t v29 = sub_240BB62E0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v21, v22);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v27, v28);
  uint64_t result = v19;
  *(void *)(v19 + OBJC_IVAR____TtC5Heart35HeartFeatureStatusGeneratorPipeline_publisher) = v29;
  return result;
}

uint64_t sub_240A24FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v48 = a5;
  uint64_t v49 = a2;
  uint64_t v44 = a1;
  uint64_t v43 = sub_240BB32A0();
  uint64_t v7 = *(void *)(v43 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v43);
  sub_240A3C2F0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v52 = v9;
  uint64_t v53 = v10;
  MEMORY[0x270FA5388](v9);
  v47 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3D1DC(0, &qword_26AFD7488, (void (*)(uint64_t))sub_240A3C2F0, (void (*)(void))sub_240A3C3C8);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v50 = v12;
  uint64_t v51 = v13;
  MEMORY[0x270FA5388](v12);
  v45 = (char *)&v41 - v14;
  sub_240A3C73C();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3CE50(0, &qword_26AFD74A8, (void (*)(uint64_t))sub_240A3C73C, (void (*)(void))sub_240A3C7D4);
  uint64_t v42 = v20;
  uint64_t v46 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v41 - v21;
  v55[3] = &type metadata for CardioFitnessRetroComputeDismissalStateManager;
  v55[4] = &off_26F5041B0;
  uint64_t v23 = swift_allocObject();
  v55[0] = v23;
  long long v24 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v23 + 16) = *(_OWORD *)a4;
  *(_OWORD *)(v23 + 32) = v24;
  *(_OWORD *)(v23 + 48) = *(_OWORD *)(a4 + 32);
  *(void *)(v23 + 64) = *(void *)(a4 + 48);
  *(void *)&v54[0] = a3;
  sub_240A28D58(a4);
  sub_240A255FC(0, &qword_26AFD7540, (uint64_t)&unk_26AFD75E8, 0x263F0A1C0, (void (*)(uint64_t, uint64_t, uint64_t))sub_240A34DC4);
  sub_240A3B5E0();
  sub_240BB6330();
  sub_240A3C7D4();
  sub_240BB6420();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t v25 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v25, v44, v43);
  sub_240A1E37C((uint64_t)v55, (uint64_t)v54);
  unint64_t v27 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v28 = (v8 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = (v28 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = v48;
  *(void *)(v30 + 16) = v48;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v30 + v27, v25, v26);
  *(void *)(v30 + v28) = v49;
  sub_240A37388(v54, v30 + v29);
  *(void *)(v30 + ((v29 + 47) & 0xFFFFFFFFFFFFFFF8)) = v31;
  sub_240A255FC(0, (unint64_t *)&qword_26AFD97E8, (uint64_t)&qword_26AFD8FB0, MEMORY[0x263F459E0], (void (*)(uint64_t, uint64_t, uint64_t))sub_240A39BC8);
  sub_240A3CEC0();
  swift_retain();
  uint64_t v32 = v47;
  uint64_t v33 = v42;
  sub_240BB6330();
  swift_release();
  uint64_t v34 = sub_240A3C3C8();
  unint64_t v35 = sub_240A3B9FC();
  uint64_t v36 = v45;
  uint64_t v37 = v52;
  MEMORY[0x2456096E0](v52, v34, v35);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v32, v37);
  sub_240A3D2A4();
  uint64_t v38 = v50;
  uint64_t v39 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v36, v38);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v22, v33);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v55);
  return v39;
}

uint64_t sub_240A255B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240A255FC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_240BB6100();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_240A25668@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_240BB32A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  sub_240BB77C0();
  swift_bridgeObjectRelease();
  unint64_t v17 = 0xD000000000000029;
  unint64_t v18 = 0x8000000240BD4550;
  uint64_t v8 = (void *)sub_240BB3270();
  sub_240BB30B0();

  sub_240BB6E70();
  swift_bridgeObjectRelease();
  unint64_t v9 = v17;
  unint64_t v10 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v11 = (void *)*MEMORY[0x263F09770];
  uint64_t v19 = &type metadata for HighHeartRateNotificationsHealthChecklistConfigurationProvider;
  unint64_t v20 = sub_240A3F678();
  unint64_t v17 = v9;
  unint64_t v18 = v10;
  uint64_t v12 = sub_240BB3480();
  uint64_t v13 = MEMORY[0x263F459B0];
  a2[3] = v12;
  a2[4] = v13;
  sub_240A23B08(a2);
  id v14 = v11;
  return sub_240BB3460();
}

uint64_t *sub_240A2580C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v10 = *a5;
  sub_240A3BE88();
  uint64_t v12 = v11;
  uint64_t v27 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = &type metadata for CardioFitnessRetroComputeDismissalStateManager;
  uint64_t v31 = &off_26F5041B0;
  uint64_t v15 = swift_allocObject();
  v29[0] = v15;
  long long v16 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v15 + 16) = *(_OWORD *)a4;
  *(_OWORD *)(v15 + 32) = v16;
  *(_OWORD *)(v15 + 48) = *(_OWORD *)(a4 + 32);
  *(void *)(v15 + 64) = *(void *)(a4 + 48);
  if (qword_26AFD72C0 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_240BB3240();
  uint64_t v18 = sub_240A395FC(v17, (uint64_t)qword_26AFDEAA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))((uint64_t)a5 + OBJC_IVAR____TtC5Heart42CardioFitnessRetroComputeGeneratorPipeline_domain, v18, v17);
  sub_240A1E37C((uint64_t)v29, (uint64_t)a5 + OBJC_IVAR____TtC5Heart42CardioFitnessRetroComputeGeneratorPipeline_dismissalStateManaging);
  uint64_t v19 = sub_240A3466C(v29, (uint64_t)v30);
  long long v20 = *((_OWORD *)v19 + 1);
  v32[0] = *(_OWORD *)v19;
  v32[1] = v20;
  v32[2] = *((_OWORD *)v19 + 2);
  uint64_t v33 = v19[6];
  uint64_t v28 = sub_240A24FD0(a1, a2, a3, (uint64_t)v32, v10);
  char v21 = sub_240BB3260();
  sub_240A255FC(0, (unint64_t *)&qword_26AFD97E8, (uint64_t)&qword_26AFD8FB0, MEMORY[0x263F459E0], (void (*)(uint64_t, uint64_t, uint64_t))sub_240A39BC8);
  sub_240A3B9FC();
  if (v21)
  {
    uint64_t v22 = sub_240BB62E0();
  }
  else
  {
    sub_240BB6360();
    sub_240A255B4(&qword_26AFD7100, (void (*)(uint64_t))sub_240A3BE88);
    uint64_t v22 = sub_240BB62E0();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v12);
  }
  swift_release();
  uint64_t v28 = v22;
  uint64_t v23 = sub_240BB62E0();
  swift_release();
  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v29);
  uint64_t v24 = sub_240BB32A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(a1, v24);
  swift_release();
  *(uint64_t *)((char *)a5 + OBJC_IVAR____TtC5Heart42CardioFitnessRetroComputeGeneratorPipeline_publisher) = v23;
  return a5;
}

uint64_t sub_240A25B94(unsigned int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  unint64_t v58 = a6;
  uint64_t v57 = a5;
  uint64_t v54 = a4;
  uint64_t v55 = a3;
  int v56 = a2;
  sub_240A3A510();
  uint64_t v46 = v7;
  uint64_t v45 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v44 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240BB32A0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3D32C();
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3CD84();
  uint64_t v49 = *(void *)(v18 - 8);
  uint64_t v50 = v18;
  MEMORY[0x270FA5388](v18);
  v47 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3C090();
  uint64_t v51 = *(void *)(v20 - 8);
  uint64_t v52 = v20;
  MEMORY[0x270FA5388](v20);
  uint64_t v48 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (BYTE2(a1) && BYTE2(a1) != 1) {
    int v53 = 1;
  }
  else {
    int v53 = sub_240BB7AE0();
  }
  swift_bridgeObjectRelease();
  sub_240A3E24C(v54, (uint64_t)&v60, (uint64_t (*)(void))sub_240A3E2B4);
  if (v61)
  {
    LODWORD(v54) = HIBYTE(a1);
    LODWORD(v46) = HIWORD(a1);
    sub_240A37388(&v60, (uint64_t)v62);
    sub_240A3466C(v62, v62[3]);
    sub_240A223F8();
    sub_240A26420(&qword_26AFD88A8, (void (*)(uint64_t))sub_240A3D32C);
    uint64_t v22 = sub_240BB62E0();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    *(void *)&long long v60 = v22;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v55, v9);
    unint64_t v23 = (*(unsigned __int8 *)(v10 + 80) + 37) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v24 = swift_allocObject();
    *(unsigned char *)(v24 + 16) = v53 & 1;
    uint64_t v25 = v59;
    *(void *)(v24 + 24) = v59;
    *(unsigned char *)(v24 + 32) = v56 & 1;
    *(_WORD *)(v24 + 33) = a1;
    *(unsigned char *)(v24 + 35) = v46;
    *(unsigned char *)(v24 + 36) = v54;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v24 + v23, v12, v9);
    uint64_t v26 = (uint64_t *)(v24 + ((v11 + v23 + 7) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v27 = v57;
    unint64_t v28 = v58;
    *uint64_t v26 = v57;
    v26[1] = v28;
    sub_240A3FF84(v27, v28);
    unint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
    sub_240A3ACA4(0, (unint64_t *)&unk_26AFD8A20, MEMORY[0x263EFDCF0]);
    sub_240A3A454();
    sub_240A3AE14(&qword_26AFD8A18, (unint64_t *)&unk_26AFD8A20, v29);
    uint64_t v30 = v47;
    sub_240BB6330();
    swift_release();
    swift_release();
    *(void *)(swift_allocObject() + 16) = v25;
    sub_240A3FDFC(0, &qword_26AFD9850, (uint64_t (*)(uint64_t))sub_240A3A454, MEMORY[0x263EFDDF8]);
    sub_240A26420(&qword_26AFD88E8, (void (*)(uint64_t))sub_240A3CD84);
    sub_240A3AFDC();
    uint64_t v31 = v48;
    uint64_t v32 = v50;
    sub_240BB6350();
    swift_release();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v30, v32);
    sub_240A26420(&qword_26AFD89A0, (void (*)(uint64_t))sub_240A3C090);
    uint64_t v33 = v52;
    uint64_t v34 = sub_240BB62E0();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v31, v33);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v62);
  }
  else
  {
    sub_240A3E1EC((uint64_t)&v60, (uint64_t (*)(void))sub_240A3E2B4);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v55, v9);
    unint64_t v35 = (*(unsigned __int8 *)(v10 + 80) + 30) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = v59;
    *(unsigned char *)(v36 + 24) = v53 & 1;
    *(unsigned char *)(v36 + 25) = v56 & 1;
    *(_DWORD *)(v36 + 26) = a1;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v36 + v35, v12, v9);
    uint64_t v37 = (uint64_t *)(v36 + ((v11 + v35 + 7) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v38 = v57;
    unint64_t v39 = v58;
    uint64_t *v37 = v57;
    v37[1] = v39;
    sub_240A3FF84(v38, v39);
    sub_240A3FDFC(0, &qword_26AFD9850, (uint64_t (*)(uint64_t))sub_240A3A454, MEMORY[0x263EFDDF8]);
    sub_240A3AFDC();
    uint64_t v40 = v44;
    sub_240BB6240();
    sub_240A26420((unint64_t *)&unk_26AFD8F18, (void (*)(uint64_t))sub_240A3A510);
    uint64_t v41 = v46;
    uint64_t v34 = sub_240BB62E0();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v40, v41);
  }
  return v34;
}

uint64_t sub_240A26420(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A26468(uint64_t a1)
{
  uint64_t v2 = sub_240BB33F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v26[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A373A0();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v26[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v26[-1] - v10;
  sub_240BB3250();
  sub_240A3466C(v26, v26[3]);
  uint64_t v12 = (void *)sub_240BB31F0();
  uint64_t v13 = (void *)*MEMORY[0x263F09728];
  sub_240BB3290();
  sub_240A1F890((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(void))sub_240A373A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_240A1F7CC((uint64_t)v9);
    uint64_t v14 = 0;
    uint64_t v15 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    uint64_t v14 = sub_240BB33E0();
    uint64_t v15 = v16;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  uint64_t v17 = sub_240A35280(v13, 1, v14, v15);

  swift_bridgeObjectRelease();
  sub_240A1F7CC((uint64_t)v11);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v26);
  if (qword_26AFD7198 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_240BB3240();
  uint64_t v19 = sub_240A395FC(v18, (uint64_t)qword_26AFDEA70);
  uint64_t v20 = v25;
  uint64_t v21 = v25 + OBJC_IVAR____TtC5Heart36AFibBurdenRescindedGeneratorPipeline_domain;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v25 + OBJC_IVAR____TtC5Heart36AFibBurdenRescindedGeneratorPipeline_domain, v19, v18);
  uint64_t v22 = sub_240A2D608(a1, v21, v17);
  swift_release();
  uint64_t v23 = sub_240BB32A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(a1, v23);
  *(void *)(v20 + OBJC_IVAR____TtC5Heart36AFibBurdenRescindedGeneratorPipeline_publisher) = v22;
  return v20;
}

uint64_t sub_240A26798@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_240BB32A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  sub_240BB77C0();
  swift_bridgeObjectRelease();
  unint64_t v17 = 0xD000000000000028;
  unint64_t v18 = 0x8000000240BD4580;
  uint64_t v8 = (void *)sub_240BB3270();
  sub_240BB30B0();

  sub_240BB6E70();
  swift_bridgeObjectRelease();
  unint64_t v9 = v17;
  unint64_t v10 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v11 = (void *)*MEMORY[0x263F09790];
  uint64_t v19 = &type metadata for LowHeartRateNotificationsHealthChecklistConfigurationProvider;
  unint64_t v20 = sub_240A3F770();
  unint64_t v17 = v9;
  unint64_t v18 = v10;
  uint64_t v12 = sub_240BB3480();
  uint64_t v13 = MEMORY[0x263F459B0];
  a2[3] = v12;
  a2[4] = v13;
  sub_240A23B08(a2);
  id v14 = v11;
  return sub_240BB3460();
}

uint64_t sub_240A2693C@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_240BB3240();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v31 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240BB32A0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v28 - v14;
  unsigned int v30 = *a1;
  uint64_t v29 = a2;
  sub_240BB3250();
  sub_240A3466C(v35, v36);
  sub_240BB31F0();
  uint64_t v16 = type metadata accessor for AFibBurdenSettingsManager();
  uint64_t v17 = swift_allocObject();
  uint64_t v33 = v6;
  uint64_t v34 = a3;
  uint64_t v32 = v7;
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_240BB7900()) {
    unint64_t v18 = sub_240A71C94(MEMORY[0x263F8EE78]);
  }
  else {
    unint64_t v18 = MEMORY[0x263F8EE88];
  }
  *(void *)(v17 + 24) = v18;
  sub_240BB6DE0();
  sub_240BB3440();
  swift_allocObject();
  *(void *)(v17 + 16) = sub_240BB3400();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v35);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v19(v15, v29, v9);
  uint64_t v20 = type metadata accessor for AFibBurdenPromotionGenerator();
  swift_allocObject();
  uint64_t v36 = v16;
  uint64_t v37 = &off_26F50AE48;
  v35[0] = v17;
  v19(v13, (uint64_t)v15, v9);
  uint64_t v21 = qword_26AFD7B78;
  swift_retain();
  if (v21 != -1) {
    swift_once();
  }
  uint64_t v22 = v33;
  uint64_t v23 = sub_240A395FC(v33, (uint64_t)qword_26AFDEB38);
  uint64_t v24 = (uint64_t)v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v31, v23, v22);
  uint64_t v25 = sub_240A1EE84(v30, (uint64_t)v35, (uint64_t)v13, v24, 0, 0xF000000000000000);
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  uint64_t v26 = v34;
  v34[3] = v20;
  uint64_t result = sub_240A31F04(&qword_26AFD8048, (void (*)(uint64_t))type metadata accessor for AFibBurdenPromotionGenerator);
  void v26[4] = result;
  *uint64_t v26 = v25;
  return result;
}

uint64_t sub_240A26CE4()
{
  uint64_t ObjectType = swift_getObjectType();
  sub_240A1F828(v0 + OBJC_IVAR____TtC5Heart26HeartPromotionAvailability_aFibBurdenFeatureStatusManager, (uint64_t)v5, (uint64_t (*)(void))sub_240A1F8F8);
  if (!v6) {
    return sub_240B61A54((uint64_t)v5, (uint64_t (*)(void))sub_240A1F8F8);
  }
  sub_240A3466C(v5, v6);
  sub_240BB5790();
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = ObjectType;
  sub_240A22390();
  sub_240A2E460((unint64_t *)&qword_26AFD8A30, (void (*)(uint64_t))sub_240A22390);
  sub_240BB6450();
  swift_release();
  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v5);
  swift_beginAccess();
  sub_240BB6120();
  swift_endAccess();
  return swift_release();
}

void *initializeBufferWithCopyOfBuffer for LowHeartRateNotificationsHealthChecklistConfigurationProvider(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_240BB4850();
  return a1;
}

uint64_t sub_240A26EC8()
{
  uint64_t ObjectType = swift_getObjectType();
  sub_240A3466C((void *)(v0 + OBJC_IVAR____TtC5Heart26HeartPromotionAvailability_irregularRhythmNotificationsStatusManager), *(void *)(v0 + OBJC_IVAR____TtC5Heart26HeartPromotionAvailability_irregularRhythmNotificationsStatusManager + 24));
  sub_240BB5790();
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = ObjectType;
  sub_240A22390();
  sub_240A2E460((unint64_t *)&qword_26AFD8A30, (void (*)(uint64_t))sub_240A22390);
  sub_240BB6450();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_240BB6120();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_240A2702C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v27 = a3;
  sub_240A3FF50(0);
  uint64_t v24 = v4;
  MEMORY[0x270FA5388]();
  uint64_t v23 = (uint64_t)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A320B8(0, (unint64_t *)&unk_26AFD8AA0, (uint64_t (*)(uint64_t))sub_240A3FF50, MEMORY[0x263EFDDF8]);
  uint64_t v26 = v6;
  MEMORY[0x270FA5388]();
  uint64_t v22 = (char *)&v22 - v7;
  uint64_t v8 = sub_240BB3210();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB3240();
  MEMORY[0x270FA5388]();
  sub_240BB32A0();
  MEMORY[0x270FA5388]();
  (*(void (**)(char *, uint64_t))(v13 + 16))((char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  sub_240BB3270();
  sub_240A320B8(0, (unint64_t *)&qword_26AFD99A0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v14 = sub_240BB3050();
  uint64_t v15 = *(void *)(v14 - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_240BB97E0;
  (*(void (**)(unint64_t, void, uint64_t))(v15 + 104))(v17 + v16, *MEMORY[0x263F454E0], v14);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F45688], v8);
  sub_240BB3220();
  sub_240A3FEE8(v25, v23, (uint64_t (*)(void))sub_240A3FF50);
  sub_240BB6200();
  uint64_t v18 = sub_240BB32E0();
  uint64_t v19 = MEMORY[0x263F456B8];
  uint64_t v20 = v27;
  v27[3] = v18;
  v20[4] = v19;
  sub_240A23B08(v20);
  sub_240A3B1B8();
  return sub_240BB32D0();
}

uint64_t sub_240A2744C(uint64_t a1, void *a2)
{
  uint64_t v36 = a1;
  uint64_t v45 = *v2;
  uint64_t v46 = a2;
  uint64_t v43 = sub_240BB32A0();
  uint64_t v40 = *(void *)(v43 - 8);
  uint64_t v42 = *(void *)(v40 + 64);
  MEMORY[0x270FA5388](v43);
  unint64_t v39 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3AA54(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v47 = v4;
  uint64_t v48 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v44 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_240BB3210();
  uint64_t v7 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_240BB3240();
  uint64_t v10 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_240BB3270();
  sub_240A3211C(0, (unint64_t *)&qword_26AFD99A0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v13 = sub_240BB3050();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_240BBAE40;
  unint64_t v18 = v17 + v16;
  uint64_t v19 = *(void (**)(unint64_t, void, uint64_t))(v14 + 104);
  v19(v18, *MEMORY[0x263F454E0], v13);
  v19(v18 + v15, *MEMORY[0x263F45580], v13);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F45688], v38);
  sub_240BB3220();
  uint64_t v20 = v41;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v41 + OBJC_IVAR____TtC5Heart31HeartPromotionGeneratorPipeline_domain, v12, v37);
  uint64_t v22 = v39;
  uint64_t v21 = v40;
  uint64_t v23 = v36;
  uint64_t v24 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v39, v36, v43);
  unint64_t v25 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v26 = (v42 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v21 + 32))(v27 + v25, v22, v24);
  uint64_t v28 = v45;
  uint64_t v29 = v46;
  *(void *)(v27 + v26) = v46;
  *(void *)(v27 + ((v26 + 15) & 0xFFFFFFFFFFFFFFF8)) = v28;
  sub_240A3B984();
  sub_240A31F04((unint64_t *)&qword_26AFD97E0, (void (*)(uint64_t))sub_240A3B984);
  id v30 = v29;
  uint64_t v31 = v44;
  sub_240BB6240();
  sub_240A31F04((unint64_t *)&qword_26AFD9880, sub_240A3AA54);
  uint64_t v32 = v47;
  uint64_t v33 = sub_240BB62E0();
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v24);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v31, v32);
  uint64_t result = v20;
  *(void *)(v20 + OBJC_IVAR____TtC5Heart31HeartPromotionGeneratorPipeline_publisher) = v33;
  return result;
}

uint64_t sub_240A279B8@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v46 = a6;
  uint64_t v47 = a5;
  uint64_t v48 = (uint64_t *)a2;
  uint64_t v49 = a4;
  sub_240A3B0C8();
  uint64_t v11 = v10;
  uint64_t v12 = *(v10 - 1);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_240BB5990();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v43 - v20;
  if (*a1 == 1)
  {
    sub_240BB3BF0();
    uint64_t v22 = sub_240BB5970();
    os_log_type_t v23 = sub_240BB71A0();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v44 = v15;
      unint64_t v25 = (uint8_t *)v24;
      uint64_t v26 = swift_slowAlloc();
      *(void *)&long long v51 = v26;
      uint64_t v45 = a3;
      *(_DWORD *)unint64_t v25 = 136446210;
      uint64_t v27 = sub_240BB7C80();
      uint64_t v50 = sub_240A38940(v27, v28, (uint64_t *)&v51);
      a3 = v45;
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v22, v23, "[%{public}s] First restore is complete, creating generation publisher from result state publisher", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v26, -1, -1);
      MEMORY[0x24560B930](v25, -1, -1);

      (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v44);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
    }
    uint64_t v38 = sub_240A3466C(v47, v47[3]);
    long long v51 = *(_OWORD *)v38;
    long long v52 = *((_OWORD *)v38 + 1);
    long long v53 = *((_OWORD *)v38 + 2);
    uint64_t v54 = v38[6];
    uint64_t result = sub_240A227E8(a3, v49, (uint64_t)&v51, (uint64_t)v48);
    uint64_t v40 = result;
  }
  else
  {
    uint64_t v49 = v12;
    sub_240BB3BF0();
    uint64_t v29 = sub_240BB5970();
    os_log_type_t v30 = sub_240BB71A0();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v45 = a3;
      uint64_t v31 = swift_slowAlloc();
      uint64_t v44 = v15;
      uint64_t v32 = (uint8_t *)v31;
      uint64_t v33 = swift_slowAlloc();
      uint64_t v48 = a7;
      uint64_t v34 = v33;
      *(void *)&long long v51 = v33;
      *(_DWORD *)uint64_t v32 = 136446210;
      uint64_t v47 = v11;
      uint64_t v35 = sub_240BB7C80();
      uint64_t v50 = sub_240A38940(v35, v36, (uint64_t *)&v51);
      uint64_t v11 = v47;
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v29, v30, "[%{public}s] First restore is not complete yet, deleting feed item", v32, 0xCu);
      swift_arrayDestroy();
      uint64_t v37 = v34;
      a7 = v48;
      MEMORY[0x24560B930](v37, -1, -1);
      MEMORY[0x24560B930](v32, -1, -1);

      (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v44);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    }
    *((void *)&v52 + 1) = sub_240BB32E0();
    *(void *)&long long v53 = MEMORY[0x263F456B8];
    sub_240A23B08((uint64_t *)&v51);
    uint64_t v41 = v49;
    if (qword_26AFD72C0 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_240BB3240();
    sub_240A395FC(v42, (uint64_t)qword_26AFDEAA0);
    sub_240BB32B0();
    sub_240A39BC8(0, (unint64_t *)&qword_26AFD8FB0);
    sub_240BB6200();
    sub_240A255B4((unint64_t *)&qword_26AFD9830, (void (*)(uint64_t))sub_240A3B0C8);
    uint64_t v40 = sub_240BB62E0();
    uint64_t result = (*(uint64_t (**)(char *, void *))(v41 + 8))(v14, v11);
  }
  *a7 = v40;
  return result;
}

uint64_t sub_240A27F1C()
{
  sub_240A39410(0, &qword_26AFD7BC0, MEMORY[0x263F44998]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v15 - v2;
  uint64_t v4 = sub_240BB56E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3951C();
  swift_getKeyPath();
  swift_getKeyPath();
  v17[0] = v0;
  id v8 = v0;
  sub_240BB35D0();

  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1) {
    return sub_240A395A0((uint64_t)v3, &qword_26AFD7BC0, MEMORY[0x263F44998]);
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  sub_240A1F828((uint64_t)v8 + OBJC_IVAR____TtC5Heart26HeartPromotionAvailability_aFibBurdenFeatureStatusManager, (uint64_t)&v15, (uint64_t (*)(void))sub_240A1F8F8);
  if (v16)
  {
    sub_240A37388(&v15, (uint64_t)v17);
    sub_240A3466C(v17, v17[3]);
    uint64_t v10 = (void *)sub_240BB5780();
    unsigned int v11 = sub_240A34700((uint64_t)v7, 1, v10);

    if (sub_240A382AC(2) > 1u)
    {
      unsigned int v13 = HIWORD(v11);
      swift_bridgeObjectRelease();
    }
    else
    {
      char v12 = sub_240BB7AE0();
      swift_bridgeObjectRelease();
      if (v12) {
        LOBYTE(v13) = BYTE2(v11);
      }
      else {
        LOBYTE(v13) = 2;
      }
    }
    swift_getKeyPath();
    swift_getKeyPath();
    LOWORD(v15) = v11;
    BYTE2(v15) = v13;
    BYTE3(v15) = HIBYTE(v11);
    id v14 = v8;
    sub_240BB62A0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v17);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return sub_240B61A54((uint64_t)&v15, (uint64_t (*)(void))sub_240A1F8F8);
  }
}

uint64_t sub_240A282B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_240BB32A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (void *)sub_240BB3270();
  uint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  sub_240BB77C0();
  sub_240BB6E70();
  sub_240BB30B0();
  sub_240BB6E70();
  swift_bridgeObjectRelease();

  uint64_t v9 = (uint64_t)v19;
  uint64_t v10 = v20;
  uint64_t v11 = type metadata accessor for ElectrocardiogramRecordingHealthChecklistFeedItemProvider();
  swift_allocObject();
  char v12 = sub_240BA2A94(v9, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  unsigned int v13 = (void *)*MEMORY[0x263F09740];
  uint64_t v21 = v11;
  uint64_t v22 = sub_240A375CC(&qword_26AFD8518, (void (*)(uint64_t))type metadata accessor for ElectrocardiogramRecordingHealthChecklistFeedItemProvider);
  uint64_t v19 = v12;
  uint64_t v14 = sub_240BB3480();
  uint64_t v15 = MEMORY[0x263F459B0];
  a2[3] = v14;
  a2[4] = v15;
  sub_240A23B08(a2);
  id v16 = v13;
  return sub_240BB3460();
}

uint64_t sub_240A284A8@<X0>(uint64_t a1@<X8>)
{
  v17[1] = a1;
  uint64_t v2 = sub_240BB3210();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB30E0();
  sub_240A32000(0, (unint64_t *)&qword_26AFD99A0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v6 = sub_240BB3050();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_240BB97E0;
  (*(void (**)(unint64_t, void, uint64_t))(v7 + 104))(v9 + v8, *MEMORY[0x263F45530], v6);
  sub_240A20B04(v9);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v10 = *(void *)(v1 + 8);
  sub_240A3A3B8(0, (unint64_t *)&qword_26AFD77C0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240BBAD40;
  char v12 = *(void **)v1;
  *(void *)(inited + 32) = *(void *)v1;
  unint64_t v18 = inited;
  sub_240BB6F30();
  unint64_t v13 = v18;
  sub_240BB4850();
  id v14 = v12;
  unint64_t v15 = sub_240A1F6EC(v13, v10);
  swift_bridgeObjectRelease();
  sub_240A39F7C(v15);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F45688], v2);
  return sub_240BB3230();
}

void *sub_240A28758(uint64_t a1)
{
  uint64_t v40 = *v1;
  uint64_t v3 = sub_240BB32A0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v37 = v5;
  uint64_t v38 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3A938(0, &qword_26AFD9888, (uint64_t (*)(uint64_t))sub_240A3B984, (uint64_t (*)(void))sub_240A3B9FC, MEMORY[0x263EFDE30]);
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v42 = v6;
  MEMORY[0x270FA5388](v6);
  unint64_t v39 = (char *)&v31 - v7;
  uint64_t v35 = sub_240BB3210();
  uint64_t v33 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_240BB3240();
  uint64_t v34 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v43 = v3;
  uint64_t v31 = v1;
  uint64_t v32 = v12;
  v12((char *)v1 + OBJC_IVAR____TtC5Heart47AFibBurdenNotificationSettingsGeneratorPipeline_context, a1, v3);
  uint64_t v44 = a1;
  unint64_t v13 = (void *)sub_240BB3270();
  sub_240A320B8(0, (unint64_t *)&qword_26AFD99A0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v14 = sub_240BB3050();
  uint64_t v15 = *(void *)(v14 - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_240BB97E0;
  (*(void (**)(unint64_t, void, uint64_t))(v15 + 104))(v17 + v16, *MEMORY[0x263F45570], v14);
  uint64_t v18 = qword_26AFD73A0;
  id v19 = v13;
  if (v18 != -1) {
    swift_once();
  }
  if ((unint64_t)qword_26AFDEAC8 >> 62)
  {
    sub_240A34DC4(0, (unint64_t *)&qword_26AFD9918);
    sub_240BB4850();
    sub_240BB78F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_240BB4850();
    sub_240BB7AF0();
    sub_240A34DC4(0, (unint64_t *)&qword_26AFD9918);
  }
  (*(void (**)(char *, void, uint64_t))(v33 + 104))(v9, *MEMORY[0x263F45688], v35);
  sub_240BB3220();

  unint64_t v20 = v31;
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))((uint64_t)v31 + OBJC_IVAR____TtC5Heart47AFibBurdenNotificationSettingsGeneratorPipeline_domain, v11, v36);
  uint64_t v21 = v38;
  uint64_t v23 = v43;
  uint64_t v22 = v44;
  v32(v38, v44, v43);
  unint64_t v24 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v25 = (v37 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v26 + v24, v21, v23);
  *(void *)(v26 + v25) = v40;
  sub_240A3B984();
  sub_240A3B9FC();
  uint64_t v27 = v39;
  sub_240BB6240();
  sub_240A3AAFC();
  uint64_t v28 = v42;
  uint64_t v29 = sub_240BB62E0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v22, v23);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v27, v28);
  *(void *)((char *)v20 + OBJC_IVAR____TtC5Heart47AFibBurdenNotificationSettingsGeneratorPipeline_publisher) = v29;
  return v20;
}

uint64_t sub_240A28D58(uint64_t a1)
{
  return a1;
}

uint64_t sub_240A28DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240BB32A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v40 = v6;
  uint64_t v47 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3BDE8();
  uint64_t v36 = *(v7 - 1);
  uint64_t v37 = (void (*)(void, void, void))v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A29318(0, &qword_26AFD88F8, sub_240A3FF50);
  uint64_t v45 = *(void *)(v10 - 8);
  uint64_t v46 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v42 = (char *)&v35 - v11;
  sub_240A29318(0, (unint64_t *)&qword_26AFD8908, (void (*)(uint64_t))sub_240A3FDA4);
  uint64_t v43 = *(void *)(v12 - 8);
  uint64_t v44 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v41 = (char *)&v35 - v13;
  uint64_t v14 = *(uint64_t (**)(void))(a2 + 16);
  swift_retain();
  sub_240BB3250();
  sub_240A3466C(v48, v48[3]);
  uint64_t v15 = (void *)sub_240BB31F0();
  uint64_t v16 = v14();

  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v48);
  v48[0] = v16;
  LOBYTE(a2) = sub_240BB3260();
  uint64_t v17 = (void (*)(uint64_t))MEMORY[0x263F44998];
  sub_240A31828(0, (unint64_t *)&qword_26AFD8A40, MEMORY[0x263F44998]);
  uint64_t v19 = v18;
  uint64_t v38 = sub_240A31E6C((unint64_t *)&qword_26AFD8A30, (unint64_t *)&qword_26AFD8A40, v17);
  uint64_t v39 = v19;
  if (a2)
  {
    uint64_t v21 = sub_240BB62E0();
  }
  else
  {
    sub_240BB6360();
    sub_240A2E418((unint64_t *)&qword_26AFD8CA8, (void (*)(uint64_t))sub_240A3BDE8);
    unint64_t v20 = v37;
    uint64_t v21 = sub_240BB62E0();
    (*(void (**)(char *, void (*)(void, void, void)))(v36 + 8))(v9, v20);
  }
  swift_release();
  v48[0] = v21;
  uint64_t v37 = *(void (**)(void, void, void))(v5 + 16);
  uint64_t v22 = v47;
  v37(v47, a1, v4);
  uint64_t v23 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v36 = a1;
  uint64_t v24 = v4;
  uint64_t v25 = (v23 + 16) & ~v23;
  uint64_t v40 = v23 | 7;
  uint64_t v26 = swift_allocObject();
  uint64_t v27 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v27(v26 + v25, v22, v24);
  sub_240A3FF50(0);
  uint64_t v28 = v42;
  sub_240BB6330();
  swift_release();
  swift_release();
  v37(v22, v36, v24);
  uint64_t v29 = swift_allocObject();
  v27(v29 + v25, v22, v24);
  sub_240A3FDA4();
  os_log_type_t v30 = v41;
  uint64_t v31 = v46;
  sub_240BB6000();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v28, v31);
  sub_240A3CC74();
  uint64_t v32 = v44;
  uint64_t v33 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v30, v32);
  return v33;
}

void sub_240A29318(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    uint64_t v5 = (void (*)(uint64_t))MEMORY[0x263F44998];
    sub_240A31828(255, (unint64_t *)&qword_26AFD8A40, MEMORY[0x263F44998]);
    a3(255);
    sub_240A31E6C((unint64_t *)&qword_26AFD8A30, (unint64_t *)&qword_26AFD8A40, v5);
    unint64_t v6 = sub_240BB6010();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_240A293D0(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  os_log_type_t v30 = a1;
  sub_240A373A0();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_240BB33F0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = objc_msgSend(a2, sel_profileIdentifier);
  id v15 = objc_msgSend(v14, sel_type);

  if (v15 == (id)1)
  {
    uint64_t v16 = v11;
    sub_240A1F828(a3, (uint64_t)v9, (uint64_t (*)(void))sub_240A373A0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v18 = v30;
    if (EnumCaseMultiPayload == 1)
    {
      sub_240B61A54((uint64_t)v9, (uint64_t (*)(void))sub_240A373A0);
      id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3D0]), sel_initWithFeatureIdentifier_healthStore_, v18, a2);
      unint64_t v20 = sub_240A35CF0();
      uint64_t v21 = MEMORY[0x263F44B48];
      *(void *)(a4 + 24) = v20;
      *(void *)(a4 + 32) = v21;
      *(void *)a4 = v19;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v9, v10);
      id v22 = v18;
      id v23 = a2;
      sub_240BB33E0();
      id v24 = objc_allocWithZone(MEMORY[0x263F0A3D0]);
      uint64_t v25 = (void *)sub_240BB6DA0();
      swift_bridgeObjectRelease();
      id v26 = objc_msgSend(v24, sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v22, v23, v25);

      unint64_t v27 = sub_240A35CF0();
      uint64_t v28 = MEMORY[0x263F44B48];
      *(void *)(a4 + 24) = v27;
      *(void *)(a4 + 32) = v28;
      *(void *)a4 = v26;
      (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v10);
    }
  }
  else
  {
    *(void *)(a4 + 32) = 0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
}

uint64_t sub_240A29688(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  sub_240A29BC8(0, &qword_26AFD8B28, MEMORY[0x263EFDE48]);
  uint64_t v38 = *(void *)(v6 - 8);
  uint64_t v39 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v37 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v33 - v9;
  sub_240A3C968();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v35 = v11;
  uint64_t v36 = v12;
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A29BC8(0, &qword_26AFD8B40, MEMORY[0x263EFDE58]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  id v19 = (char *)&v33 - v18;
  uint64_t v20 = v3 + OBJC_IVAR____TtC5Heart35ElectrocardiogramUpdateAvailability__isElectrocardiogramUpdateAvailable;
  LOBYTE(v40[0]) = 2;
  sub_240A3A2F4(0, &qword_26AFD9910, MEMORY[0x263F8D8F0]);
  uint64_t v33 = v21;
  sub_240BB6260();
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v20, v19, v16);
  uint64_t v34 = a1;
  sub_240BB3250();
  sub_240A3466C(v40, v40[3]);
  *(void *)(v3 + 16) = sub_240BB31F0();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v40);
  uint64_t v22 = v3 + OBJC_IVAR____TtC5Heart35ElectrocardiogramUpdateAvailability_context;
  uint64_t v23 = sub_240BB32A0();
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v22, a1, v23);
  *(void *)(v3 + OBJC_IVAR____TtC5Heart35ElectrocardiogramUpdateAvailability_featureStatusManager) = a2;
  id v25 = a2;
  v40[0] = sub_240A215F0();
  uint64_t v26 = swift_allocObject();
  swift_weakInit();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = sub_240A3E94C;
  *(void *)(v27 + 24) = v26;
  uint64_t v28 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
  sub_240A21CBC(0, (unint64_t *)&qword_26AFD8A40, MEMORY[0x263EFDCF0]);
  sub_240A3B8A0((unint64_t *)&qword_26AFD8A30, (unint64_t *)&qword_26AFD8A40, v28);
  sub_240BB6330();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_240BB6270();
  swift_endAccess();
  sub_240A3CA50(&qword_26AFD8920, (void (*)(uint64_t))sub_240A3C968);
  uint64_t v29 = v35;
  sub_240BB6460();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v29);
  uint64_t v30 = v38;
  uint64_t v31 = v39;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v37, v10, v39);
  swift_beginAccess();
  sub_240BB6280();
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v31);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v34, v23);
  return v3;
}

void sub_240A29BC8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_240A3A2F4(255, &qword_26AFD9910, MEMORY[0x263F8D8F0]);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_240A29C44(uint64_t a1)
{
  uint64_t v2 = sub_240BB32A0();
  uint64_t v33 = *(void *)(v2 - 8);
  uint64_t v34 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v32 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_240BB3390();
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v31 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A373A0();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_240BB33F0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB3250();
  sub_240A3466C(v36, v36[3]);
  id v14 = (void *)sub_240BB31F0();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v36);
  uint64_t v35 = a1;
  sub_240BB3290();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = v30;
    uint64_t v15 = v31;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v6, v9, v31);
    sub_240A2E3D0((unint64_t *)&qword_26AFD7140, MEMORY[0x263F457B0]);
    swift_willThrowTypedImpl();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v15);
    id v17 = (id)*MEMORY[0x263F09730];
    id v18 = v14;
    id v19 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    sub_240BB33E0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v20 = (void *)*MEMORY[0x263F09730];
    id v21 = v14;
    id v17 = v20;
    id v19 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
  }
  id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3D0]), sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v17, v14, v19);

  uint64_t v24 = (uint64_t)v32;
  uint64_t v23 = v33;
  uint64_t v26 = v34;
  uint64_t v25 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v32, v35, v34);
  type metadata accessor for CardioFitnessClassificationStatusGeneratorPipeline(0);
  uint64_t v27 = swift_allocObject();
  sub_240A30DE4(v24, v22);

  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v26);
  return v27;
}

uint64_t sub_240A2A050(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_240BB5990();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3BAF4();
  uint64_t v9 = v8;
  uint64_t v37 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3BFB4();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(self, sel_isAppleInternalInstall))
  {
    sub_240BB3440();
    swift_allocObject();
    id v17 = a1;
    uint64_t v36 = sub_240BB3400();
    uint64_t v39 = sub_240BB3430();
    uint64_t v18 = swift_allocObject();
    uint64_t v35 = v9;
    *(void *)(v18 + 16) = v2;
    *(void *)(v18 + 24) = v2;
    v33[1] = sub_240BB60F0();
    sub_240A54FA0();
    sub_240A3B3D0(0, (unint64_t *)&qword_26AFD7550, (unint64_t *)&qword_26AFD7678, &qword_26AFD75E0);
    sub_240A255B4(&qword_26AFD7568, (void (*)(uint64_t))sub_240A54FA0);
    uint64_t v19 = v14;
    sub_240A3B4B4();
    uint64_t v34 = v13;
    sub_240BB63C0();
    swift_release();
    swift_release();
    *(void *)(swift_allocObject() + 16) = v2;
    sub_240A255B4(&qword_26AFD7508, (void (*)(uint64_t))sub_240A3BAF4);
    uint64_t v20 = v35;
    sub_240BB6350();
    swift_release();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v20);
    sub_240A255B4(&qword_26AFD89B0, (void (*)(uint64_t))sub_240A3BFB4);
    uint64_t v21 = v34;
    uint64_t v22 = sub_240BB62E0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v21);
  }
  else
  {
    sub_240BB3BF0();
    uint64_t v23 = sub_240BB5970();
    os_log_type_t v24 = sub_240BB71A0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v39 = v26;
      *(_DWORD *)uint64_t v25 = 136446210;
      uint64_t v27 = sub_240BB7C80();
      uint64_t v38 = sub_240A38940(v27, v28, &v39);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v23, v24, "[%{public}s] Creating real state publisher for non-internal install", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v26, -1, -1);
      MEMORY[0x24560B930](v25, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    id v29 = objc_allocWithZone((Class)type metadata accessor for CMVO2MaxRetrocomputeStatePublisher());
    uint64_t v30 = sub_240A2C1D0(0);
    uint64_t v31 = sub_240A21D90();

    uint64_t v39 = v31;
    sub_240A3B3D0(0, (unint64_t *)&qword_26AFD7550, (unint64_t *)&qword_26AFD7678, &qword_26AFD75E0);
    sub_240A3B4B4();
    uint64_t v22 = sub_240BB62E0();
    swift_release();
  }
  return v22;
}

uint64_t sub_240A2A634(uint64_t a1, uint64_t a2)
{
  uint64_t v44 = a2;
  sub_240A3BBE0();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v41 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3A7D4(0, (unint64_t *)&qword_26AFD9788, MEMORY[0x263EFDB80]);
  uint64_t v8 = v7;
  uint64_t v43 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v39 - v9;
  uint64_t v11 = sub_240BB5990();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  id v17 = (char *)&v39 - v16;
  if (sub_240BB3260())
  {
    sub_240BB3BF0();
    uint64_t v26 = sub_240BB5970();
    os_log_type_t v27 = sub_240BB71A0();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v40 = a1;
      unint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v45 = v29;
      uint64_t v39 = v11;
      *(_DWORD *)unint64_t v28 = 136446210;
      uint64_t v46 = v42;
      swift_getMetatypeMetadata();
      uint64_t v30 = sub_240BB6E10();
      uint64_t v43 = v5;
      uint64_t v46 = sub_240A38940(v30, v31, &v45);
      a1 = v40;
      sub_240BB75F0();
      uint64_t v5 = v43;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v26, v27, "[%{public}s]: In foreground mode, so will continue to listen for updates", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v29, -1, -1);
      MEMORY[0x24560B930](v28, -1, -1);

      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v39);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    }
    if (v44)
    {
      uint64_t v45 = v44;
      uint64_t v46 = a1;
      uint64_t v35 = (uint64_t (*)(uint64_t, unint64_t, void, void))MEMORY[0x263EFDCF0];
      sub_240A317B8(0, (unint64_t *)&qword_26AFD97E8, MEMORY[0x263EFDCF0]);
      sub_240A31E28((unint64_t *)&qword_26AFD97E0, (unint64_t *)&qword_26AFD97E8, v35);
      swift_retain();
      swift_retain();
      uint64_t v36 = v41;
      sub_240BB6060();
      sub_240A30380(&qword_26AFD9790, (void (*)(uint64_t))sub_240A3BBE0);
      uint64_t v34 = sub_240BB62E0();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v36, v4);
    }
    else
    {
      uint64_t v46 = a1;
      uint64_t v37 = (uint64_t (*)(uint64_t, unint64_t, void, void))MEMORY[0x263EFDCF0];
      sub_240A317B8(0, (unint64_t *)&qword_26AFD97E8, MEMORY[0x263EFDCF0]);
      sub_240A31E28((unint64_t *)&qword_26AFD97E0, (unint64_t *)&qword_26AFD97E8, v37);
      return sub_240BB62E0();
    }
  }
  else
  {
    sub_240BB3BF0();
    uint64_t v18 = sub_240BB5970();
    os_log_type_t v19 = sub_240BB71A0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v39 = v11;
      uint64_t v20 = swift_slowAlloc();
      uint64_t v40 = a1;
      uint64_t v21 = (uint8_t *)v20;
      uint64_t v22 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136446210;
      uint64_t v44 = (uint64_t)(v21 + 4);
      uint64_t v45 = v22;
      uint64_t v46 = v42;
      swift_getMetatypeMetadata();
      uint64_t v23 = sub_240BB6E10();
      uint64_t v46 = sub_240A38940(v23, v24, &v45);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v18, v19, "[%{public}s]: In background mode, so will finish after 1 update", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v22, -1, -1);
      uint64_t v25 = v21;
      a1 = v40;
      MEMORY[0x24560B930](v25, -1, -1);

      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v39);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    }
    uint64_t v32 = v43;
    uint64_t v46 = a1;
    uint64_t v33 = (uint64_t (*)(uint64_t, unint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_240A317B8(0, (unint64_t *)&qword_26AFD97E8, MEMORY[0x263EFDCF0]);
    sub_240A31E28((unint64_t *)&qword_26AFD97E0, (unint64_t *)&qword_26AFD97E8, v33);
    sub_240BB6360();
    sub_240A3AA74(&qword_26AFD7100, (unint64_t *)&qword_26AFD9788, MEMORY[0x263EFDB80]);
    uint64_t v34 = sub_240BB62E0();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v8);
  }
  return v34;
}

uint64_t sub_240A2AD24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v42 = a4;
  sub_240A3A890(0, &qword_26AFD97D8, MEMORY[0x263EFDC90]);
  uint64_t v40 = *(void *)(v7 - 8);
  uint64_t v41 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v37 - v8;
  uint64_t v10 = sub_240BB5990();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v37 - v15;
  sub_240A2B29C(0, &qword_26AFD99C8, MEMORY[0x263F8E0F8]);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_240BB97E0;
  *(void *)(v17 + 32) = sub_240A28DB0(a1, a2);
  uint64_t v44 = v17;
  sub_240BB6F30();
  uint64_t v18 = v44;
  sub_240BB3260();
  if ((sub_240BB3450() & 1) == 0)
  {
    sub_240BB3BF0();
    uint64_t v26 = sub_240BB5970();
    os_log_type_t v27 = sub_240BB71A0();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v39 = v18;
      unint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v43 = v29;
      uint64_t v44 = a3;
      uint64_t v38 = v10;
      *(_DWORD *)unint64_t v28 = 136446210;
      swift_getMetatypeMetadata();
      uint64_t v30 = sub_240BB6E10();
      uint64_t v44 = sub_240A38940(v30, v31, &v43);
      uint64_t v18 = v39;
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v26, v27, "[%{public}s]: In foreground mode, so will continue to listen for updates", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v29, -1, -1);
      MEMORY[0x24560B930](v28, -1, -1);

      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v38);
      goto LABEL_9;
    }

    uint64_t v32 = *(void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v33 = v14;
LABEL_8:
    v32(v33, v10);
    goto LABEL_9;
  }
  sub_240BB3BF0();
  os_log_type_t v19 = sub_240BB5970();
  os_log_type_t v20 = sub_240BB71A0();
  if (!os_log_type_enabled(v19, v20))
  {

    uint64_t v32 = *(void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v33 = v16;
    goto LABEL_8;
  }
  uint64_t v39 = v18;
  uint64_t v21 = swift_slowAlloc();
  uint64_t v38 = v10;
  uint64_t v22 = (uint8_t *)v21;
  uint64_t v23 = swift_slowAlloc();
  uint64_t v43 = v23;
  uint64_t v44 = a3;
  *(_DWORD *)uint64_t v22 = 136446210;
  swift_getMetatypeMetadata();
  uint64_t v24 = sub_240BB6E10();
  uint64_t v44 = sub_240A38940(v24, v25, &v43);
  uint64_t v18 = v39;
  sub_240BB75F0();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_240A1B000, v19, v20, "[%{public}s]: In background mode, so will finish after 1 update", v22, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x24560B930](v23, -1, -1);
  MEMORY[0x24560B930](v22, -1, -1);

  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v38);
LABEL_9:
  uint64_t v44 = v18;
  sub_240A31828(0, (unint64_t *)&qword_26AFD97E8, (void (*)(uint64_t))sub_240A3FDA4);
  sub_240A2B29C(0, &qword_26AFD98E0, MEMORY[0x263F8D488]);
  sub_240A31E6C((unint64_t *)&qword_26AFD97E0, (unint64_t *)&qword_26AFD97E8, (void (*)(uint64_t))sub_240A3FDA4);
  sub_240A3A344();
  sub_240BB60D0();
  sub_240A3AAB8(&qword_26AFD97D0, &qword_26AFD97D8, MEMORY[0x263EFDC90]);
  uint64_t v34 = v41;
  uint64_t v35 = sub_240BB62E0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v9, v34);
  *uint64_t v42 = v35;
  return result;
}

void sub_240A2B29C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_240A31828(255, (unint64_t *)&qword_26AFD97E8, (void (*)(uint64_t))sub_240A3FDA4);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_240A2B318(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v102 = a4;
  uint64_t v105 = a1;
  uint64_t v93 = sub_240BB32A0();
  uint64_t v92 = *(void *)(v93 - 8);
  uint64_t v6 = *(void *)(v92 + 64);
  MEMORY[0x270FA5388](v93);
  uint64_t v91 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3CE50(0, &qword_26AFD88D0, (void (*)(uint64_t))sub_240A3B664, (void (*)(void))sub_240A54980);
  uint64_t v95 = v7;
  uint64_t v94 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v90 - v8;
  sub_240A3C498();
  uint64_t v98 = v10;
  uint64_t v97 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v96 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3B0C8();
  uint64_t v100 = *((void *)v12 - 1);
  uint64_t v101 = v12;
  MEMORY[0x270FA5388](v12);
  v99 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_240BB5990();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v103 = v14;
  uint64_t v104 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v90 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (char *)&v90 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  os_log_type_t v27 = (char *)&v90 - v26;
  MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v90 - v28;
  uint64_t v108 = &type metadata for CardioFitnessRetroComputeDismissalStateManager;
  uint64_t v109 = &off_26F5041B0;
  uint64_t v30 = swift_allocObject();
  v107[0] = v30;
  long long v31 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v30 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v30 + 32) = v31;
  *(_OWORD *)(v30 + 48) = *(_OWORD *)(a3 + 32);
  *(void *)(v30 + 64) = *(void *)(a3 + 48);
  sub_240A28D58(a3);
  switch((unint64_t)objc_msgSend(a2, sel_status))
  {
    case 0uLL:
      sub_240BB3BF0();
      uint64_t v32 = sub_240BB5970();
      os_log_type_t v33 = sub_240BB71A0();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = (uint8_t *)swift_slowAlloc();
        uint64_t v35 = swift_slowAlloc();
        *(void *)&long long v110 = v35;
        *(_DWORD *)uint64_t v34 = 136446210;
        uint64_t v36 = sub_240BB7C80();
        uint64_t v106 = sub_240A38940(v36, v37, (uint64_t *)&v110);
        sub_240BB75F0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240A1B000, v32, v33, "[%{public}s] Creating delete generator since status is unavailable", v34, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24560B930](v35, -1, -1);
        MEMORY[0x24560B930](v34, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v104 + 8))(v29, v103);
      goto LABEL_17;
    case 1uLL:
      sub_240BB3BF0();
      uint64_t v46 = sub_240BB5970();
      os_log_type_t v47 = sub_240BB71A0();
      if (os_log_type_enabled(v46, v47))
      {
        uint64_t v48 = (uint8_t *)swift_slowAlloc();
        uint64_t v49 = swift_slowAlloc();
        *(void *)&long long v110 = v49;
        *(_DWORD *)uint64_t v48 = 136446210;
        uint64_t v101 = v48 + 4;
        uint64_t v50 = v102;
        uint64_t v51 = sub_240BB7C80();
        uint64_t v106 = sub_240A38940(v51, v52, (uint64_t *)&v110);
        sub_240BB75F0();
        uint64_t v53 = v50;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240A1B000, v46, v47, "[%{public}s] Creating available status generator publisher", v48, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24560B930](v49, -1, -1);
        MEMORY[0x24560B930](v48, -1, -1);

        (*(void (**)(char *, uint64_t))(v104 + 8))(v27, v103);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v104 + 8))(v27, v103);
        uint64_t v53 = v102;
      }
      v80 = sub_240A3466C(v107, (uint64_t)v108);
      long long v110 = *(_OWORD *)v80;
      long long v111 = *((_OWORD *)v80 + 1);
      long long v112 = *((_OWORD *)v80 + 2);
      uint64_t v113 = v80[6];
      uint64_t v106 = sub_240A4C6C0();
      sub_240A3B664();
      sub_240A54980();
      sub_240BB6420();
      uint64_t v81 = v92;
      v82 = v91;
      uint64_t v83 = v93;
      (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v91, v105, v93);
      unint64_t v84 = (*(unsigned __int8 *)(v81 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
      uint64_t v85 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v81 + 32))(v85 + v84, v82, v83);
      *(void *)(v85 + ((v6 + v84 + 7) & 0xFFFFFFFFFFFFFFF8)) = v53;
      sub_240A39BC8(0, (unint64_t *)&qword_26AFD8FB0);
      sub_240A3D0CC();
      goto LABEL_22;
    case 2uLL:
      sub_240BB3BF0();
      uint64_t v54 = sub_240BB5970();
      os_log_type_t v55 = sub_240BB71A0();
      if (os_log_type_enabled(v54, v55))
      {
        int v56 = (uint8_t *)swift_slowAlloc();
        uint64_t v57 = swift_slowAlloc();
        *(void *)&long long v110 = v57;
        *(_DWORD *)int v56 = 136446210;
        uint64_t v58 = sub_240BB7C80();
        uint64_t v106 = sub_240A38940(v58, v59, (uint64_t *)&v110);
        sub_240BB75F0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240A1B000, v54, v55, "[%{public}s] Creating delete generator since status is inProgress", v56, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24560B930](v57, -1, -1);
        MEMORY[0x24560B930](v56, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v104 + 8))(v24, v103);
      goto LABEL_17;
    case 3uLL:
      id v60 = objc_msgSend(a2, sel_meanDelta);
      objc_msgSend(v60, sel_doubleValue);
      uint64_t v62 = v61;

      sub_240BB3BF0();
      uint64_t v63 = sub_240BB5970();
      os_log_type_t v64 = sub_240BB71A0();
      if (os_log_type_enabled(v63, v64))
      {
        uint64_t v65 = swift_slowAlloc();
        uint64_t v66 = swift_slowAlloc();
        *(void *)&long long v110 = v66;
        *(_DWORD *)uint64_t v65 = 136446466;
        uint64_t v67 = sub_240BB7C80();
        uint64_t v106 = sub_240A38940(v67, v68, (uint64_t *)&v110);
        sub_240BB75F0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v65 + 12) = 2048;
        uint64_t v106 = v62;
        sub_240BB75F0();
        _os_log_impl(&dword_240A1B000, v63, v64, "[%{public}s] Creating complete status generator publisher with deltaVO2MaxValue: %f", (uint8_t *)v65, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24560B930](v66, -1, -1);
        MEMORY[0x24560B930](v65, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v104 + 8))(v21, v103);
      v69 = sub_240A3466C(v107, (uint64_t)v108);
      long long v110 = *(_OWORD *)v69;
      long long v111 = *((_OWORD *)v69 + 1);
      long long v112 = *((_OWORD *)v69 + 2);
      uint64_t v113 = v69[6];
      uint64_t v106 = sub_240A4D598();
      sub_240A3B664();
      sub_240A54980();
      sub_240BB6420();
      uint64_t v70 = v92;
      uint64_t v71 = v91;
      uint64_t v72 = v93;
      (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v91, v105, v93);
      unint64_t v73 = (*(unsigned __int8 *)(v70 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
      unint64_t v74 = (v6 + v73 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v75 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v70 + 32))(v75 + v73, v71, v72);
      *(void *)(v75 + v74) = v62;
      *(void *)(v75 + ((v74 + 15) & 0xFFFFFFFFFFFFFFF8)) = v102;
      sub_240A39BC8(0, (unint64_t *)&qword_26AFD8FB0);
      sub_240A3D0CC();
LABEL_22:
      v86 = v96;
      uint64_t v87 = v95;
      sub_240BB6330();
      swift_release();
      (*(void (**)(char *, uint64_t))(v94 + 8))(v9, v87);
      sub_240A255B4(&qword_268C9EF18, (void (*)(uint64_t))sub_240A3C498);
      uint64_t v88 = v98;
      uint64_t v79 = sub_240BB62E0();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v86, v88);
      swift_release();
      break;
    default:
      sub_240BB3BF0();
      id v38 = a2;
      uint64_t v39 = sub_240BB5970();
      os_log_type_t v40 = sub_240BB7180();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = swift_slowAlloc();
        uint64_t v42 = swift_slowAlloc();
        *(void *)&long long v110 = v42;
        *(_DWORD *)uint64_t v41 = 136446466;
        uint64_t v43 = sub_240BB7C80();
        uint64_t v106 = sub_240A38940(v43, v44, (uint64_t *)&v110);
        sub_240BB75F0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v41 + 12) = 2048;
        id v45 = objc_msgSend(v38, sel_status);

        uint64_t v106 = (uint64_t)v45;
        sub_240BB75F0();

        _os_log_impl(&dword_240A1B000, v39, v40, "[%{public}s] Creating delete generator due to unknown status received: %ld", (uint8_t *)v41, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24560B930](v42, -1, -1);
        MEMORY[0x24560B930](v41, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v104 + 8))(v18, v103);
LABEL_17:
      *((void *)&v111 + 1) = sub_240BB32E0();
      *(void *)&long long v112 = MEMORY[0x263F456B8];
      sub_240A23B08((uint64_t *)&v110);
      if (qword_26AFD72C0 != -1) {
        swift_once();
      }
      uint64_t v76 = sub_240BB3240();
      sub_240A395FC(v76, (uint64_t)qword_26AFDEAA0);
      sub_240BB32B0();
      sub_240A39BC8(0, (unint64_t *)&qword_26AFD8FB0);
      uint64_t v77 = v99;
      sub_240BB6200();
      sub_240A255B4((unint64_t *)&qword_26AFD9830, (void (*)(uint64_t))sub_240A3B0C8);
      v78 = v101;
      uint64_t v79 = sub_240BB62E0();
      (*(void (**)(char *, uint8_t *))(v100 + 8))(v77, v78);
      break;
  }
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v107);
  return v79;
}

char *sub_240A2C1D0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = OBJC_IVAR____TtC5HeartP33_1983BB941A89CE37AE5E37B88EF7D39A34CMVO2MaxRetrocomputeStatePublisher_subject;
  uint64_t v19 = 0;
  LOBYTE(v20) = 0;
  sub_240A3B240();
  swift_allocObject();
  uint64_t v6 = v1;
  uint64_t v7 = sub_240BB61A0();
  sub_240A39DFC();
  uint64_t v8 = swift_allocObject();
  *(_DWORD *)(v8 + 24) = 0;
  *(void *)(v8 + 16) = v7;
  *(void *)&v2[v5] = v8;
  if (a1) {
    id v9 = a1;
  }
  else {
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F017B8]), sel_init, v19, v20);
  }
  *(void *)&v6[OBJC_IVAR____TtC5HeartP33_1983BB941A89CE37AE5E37B88EF7D39A34CMVO2MaxRetrocomputeStatePublisher_manager] = v9;
  id v10 = a1;

  v25.receiver = v6;
  v25.super_class = ObjectType;
  uint64_t v11 = (char *)objc_msgSendSuper2(&v25, sel_init);
  uint64_t v12 = *(void **)&v11[OBJC_IVAR____TtC5HeartP33_1983BB941A89CE37AE5E37B88EF7D39A34CMVO2MaxRetrocomputeStatePublisher_manager];
  uint64_t v13 = v11;
  objc_msgSend(v12, sel_setDelegate_, v13);
  objc_msgSend(v12, sel_startRetrocomputeStatusUpdates);
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = ObjectType;
  uint64_t v23 = sub_240A3E954;
  uint64_t v24 = v15;
  uint64_t v19 = MEMORY[0x263EF8330];
  uint64_t v20 = 1107296256;
  uint64_t v21 = sub_240A1FD44;
  uint64_t v22 = &unk_26F508920;
  uint64_t v16 = _Block_copy(&v19);
  id v17 = v12;
  swift_release();
  objc_msgSend(v17, sel_retrocomputeStateWithHandler_, v16);

  _Block_release(v16);
  return v13;
}

char *sub_240A2C3D4(void *a1, void *a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v41 = a4;
  id v38 = a1;
  uint64_t v39 = a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = (uint64_t (*)(void, uint64_t))MEMORY[0x263EFDE58];
  sub_240A2C928(0, &qword_26AFD8B38, (uint64_t)&type metadata for HeartFeaturePromotionResult, MEMORY[0x263EFDE58]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v38 - v11;
  sub_240A2C928(0, &qword_26AFD8B30, (uint64_t)&type metadata for HeartPromotionResult, v7);
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  id v17 = (char *)&v38 - v16;
  v44[3] = sub_240A35CF0();
  v44[4] = MEMORY[0x263F44B48];
  v44[0] = a3;
  uint64_t v18 = &a5[OBJC_IVAR____TtC5Heart26HeartPromotionAvailability__atrialFibrillationAvailabilityResult];
  LOWORD(v43[0]) = 2;
  uint64_t v19 = a5;
  sub_240BB6260();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v20(v18, v17, v14);
  uint64_t v21 = &v19[OBJC_IVAR____TtC5Heart26HeartPromotionAvailability__aFibBurdenAvailabilityResult];
  v43[0] = 131074;
  sub_240BB6260();
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v21, v12, v9);
  uint64_t v22 = &v19[OBJC_IVAR____TtC5Heart26HeartPromotionAvailability__aFibFeaturesAvailabilityResult];
  LOWORD(v43[0]) = 2;
  sub_240BB6260();
  v20(v22, v17, v14);
  uint64_t v23 = OBJC_IVAR____TtC5Heart26HeartPromotionAvailability__irregularRhythmNotificationsFeatureStatus;
  sub_240A3951C();
  swift_allocObject();
  *(void *)&v19[v23] = sub_240BB3600();
  uint64_t v24 = OBJC_IVAR____TtC5Heart26HeartPromotionAvailability__aFibBurdenFeatureStatus;
  swift_allocObject();
  *(void *)&v19[v24] = sub_240BB3600();
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_240BB7900()) {
    unint64_t v25 = sub_240A71C94(MEMORY[0x263F8EE78]);
  }
  else {
    unint64_t v25 = MEMORY[0x263F8EE88];
  }
  uint64_t v26 = v41;
  os_log_type_t v27 = v38;
  uint64_t v28 = v39;
  *(void *)&v19[OBJC_IVAR____TtC5Heart26HeartPromotionAvailability_subscriptions] = v25;
  *(void *)&v19[OBJC_IVAR____TtC5Heart26HeartPromotionAvailability_healthStore] = v27;
  *(void *)&v19[OBJC_IVAR____TtC5Heart26HeartPromotionAvailability_heartRhythmAvailability] = v28;
  sub_240A1E37C((uint64_t)v44, (uint64_t)&v19[OBJC_IVAR____TtC5Heart26HeartPromotionAvailability_irregularRhythmNotificationsStatusManager]);
  uint64_t v29 = (void *)*MEMORY[0x263F09728];
  id v30 = v27;
  id v31 = v28;
  sub_240A293D0(v29, v30, v26, (uint64_t)v43);
  sub_240A374DC((uint64_t)v43, (uint64_t)&v19[OBJC_IVAR____TtC5Heart26HeartPromotionAvailability_aFibBurdenFeatureStatusManager], (unint64_t *)&qword_26AFD7BD8, &qword_26AFD7BD0, MEMORY[0x263F449A0]);

  uint64_t v32 = (objc_class *)type metadata accessor for HeartPromotionAvailability();
  v42.receiver = v19;
  v42.super_class = v32;
  os_log_type_t v33 = (char *)objc_msgSendSuper2(&v42, sel_init);
  uint64_t v34 = *(void **)&v33[OBJC_IVAR____TtC5Heart26HeartPromotionAvailability_heartRhythmAvailability];
  uint64_t v35 = v33;
  objc_msgSend(v34, sel_addHeartRhythmAvailabilityObserver_, v35);
  sub_240A26EC8();
  sub_240A26CE4();
  LOWORD(v34) = sub_240A382AC(0);
  swift_getKeyPath();
  swift_getKeyPath();
  LOWORD(v43[0]) = (_WORD)v34;
  uint64_t v36 = v35;
  sub_240BB62A0();
  sub_240A27F1C();
  LOWORD(v34) = sub_240A382AC(2);
  swift_getKeyPath();
  swift_getKeyPath();
  LOWORD(v43[0]) = (_WORD)v34;
  sub_240BB62A0();
  sub_240A1F7CC(v26);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v44);
  return v36;
}

void sub_240A2C890(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_240A2C8DC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_240A2C928(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_240A2C974()
{
  sub_240A35E3C();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v27 = v0;
  uint64_t v28 = v1;
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A35D30();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A35F28();
  uint64_t v10 = v9;
  uint64_t v26 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3D7E0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v29 = v13;
  uint64_t v30 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = sub_240A1FCC8();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_240A35E08(0);
  sub_240A358F0(&qword_26AFD8AB0, sub_240A35E08);
  sub_240BB6240();
  sub_240BB56E0();
  sub_240A358F0((unint64_t *)&unk_26AFD8AE0, (void (*)(uint64_t))sub_240A35D30);
  sub_240BB62F0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_240A35CF0();
  id v18 = v17;
  uint64_t v19 = sub_240BB57C0();

  uint64_t v31 = v19;
  sub_240A22390();
  sub_240A358F0((unint64_t *)&qword_26AFD8A30, (void (*)(uint64_t))sub_240A22390);
  sub_240A358F0(&qword_26AFD8860, (void (*)(uint64_t))sub_240A35F28);
  sub_240BB63F0();
  swift_release();
  sub_240A358F0((unint64_t *)&unk_26AFD8880, (void (*)(uint64_t))sub_240A35E3C);
  uint64_t v20 = v27;
  uint64_t v21 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v3, v20);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v10);

  uint64_t v31 = v21;
  swift_allocObject();
  swift_weakInit();
  sub_240BB62F0();
  swift_release();
  swift_release();
  sub_240A358F0(&qword_26AFD8820, (void (*)(uint64_t))sub_240A3D7E0);
  uint64_t v22 = v29;
  uint64_t v23 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v16, v22);
  return v23;
}

uint64_t sub_240A2CED8(uint64_t a1, void *a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v56 = a5;
  sub_240A3B0C8();
  uint64_t v10 = v9;
  os_log_type_t v55 = *(void (***)(void, void))(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_240BB5990();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  id v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v51 - v18;
  unint64_t v59 = &type metadata for CardioFitnessRetroComputeDismissalStateManager;
  id v60 = &off_26F5041B0;
  uint64_t v20 = swift_allocObject();
  v58[0] = v20;
  long long v21 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v20 + 16) = *(_OWORD *)a4;
  *(_OWORD *)(v20 + 32) = v21;
  *(_OWORD *)(v20 + 48) = *(_OWORD *)(a4 + 32);
  *(void *)(v20 + 64) = *(void *)(a4 + 48);
  sub_240A28D58(a4);
  if (a3)
  {
    uint64_t v53 = v10;
    sub_240A39B3C(a2);
    sub_240BB3BF0();
    id v22 = a2;
    id v23 = a2;
    uint64_t v24 = sub_240BB5970();
    os_log_type_t v25 = sub_240BB7180();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v52 = v13;
      uint64_t v27 = v26;
      uint64_t v28 = swift_slowAlloc();
      *(void *)&long long v61 = v28;
      *(_DWORD *)uint64_t v27 = 136446466;
      uint64_t v54 = a1;
      uint64_t v29 = sub_240BB7C80();
      LODWORD(v56) = a3;
      id v57 = (id)sub_240A38940(v29, v30, (uint64_t *)&v61);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2082;
      id v57 = a2;
      id v31 = a2;
      sub_240A39BC8(0, (unint64_t *)&qword_26AFD99E0);
      uint64_t v32 = sub_240BB6E10();
      id v57 = (id)sub_240A38940(v32, v33, (uint64_t *)&v61);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      sub_240A2D5FC(a2);
      sub_240A2D5FC(a2);
      _os_log_impl(&dword_240A1B000, v24, v25, "[%{public}s] Creating delete generator due to get retrocompute state failure: %{public}s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v28, -1, -1);
      MEMORY[0x24560B930](v27, -1, -1);

      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v52);
    }
    else
    {
      sub_240A2D5FC(a2);
      sub_240A2D5FC(a2);

      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    }
    *((void *)&v62 + 1) = sub_240BB32E0();
    *(void *)&long long v63 = MEMORY[0x263F456B8];
    sub_240A23B08((uint64_t *)&v61);
    uint64_t v46 = v53;
    if (qword_26AFD72C0 != -1) {
      swift_once();
    }
    uint64_t v47 = sub_240BB3240();
    sub_240A395FC(v47, (uint64_t)qword_26AFDEAA0);
    sub_240BB32B0();
    sub_240A39BC8(0, (unint64_t *)&qword_26AFD8FB0);
    sub_240BB6200();
    sub_240A255B4((unint64_t *)&qword_26AFD9830, (void (*)(uint64_t))sub_240A3B0C8);
    uint64_t v48 = sub_240BB62E0();
    ((void (**)(char *, uint64_t))v55)[1](v12, v46);
  }
  else
  {
    sub_240A39B3C(a2);
    sub_240BB3BF0();
    id v34 = a2;
    uint64_t v35 = sub_240BB5970();
    os_log_type_t v36 = sub_240BB71A0();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      os_log_type_t v55 = (void (**)(void, void))v34;
      uint64_t v39 = v38;
      *(void *)&long long v61 = v38;
      *(_DWORD *)uint64_t v37 = 136446466;
      uint64_t v52 = v13;
      uint64_t v40 = sub_240BB7C80();
      uint64_t v54 = a1;
      id v57 = (id)sub_240A38940(v40, v41, (uint64_t *)&v61);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2082;
      id v57 = objc_msgSend(v55, sel_status);
      type metadata accessor for CMVO2MaxRetrocomputeStatus(0);
      uint64_t v42 = sub_240BB6E10();
      id v57 = (id)sub_240A38940(v42, v43, (uint64_t *)&v61);
      a1 = v54;
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      sub_240A2D5FC(a2);
      sub_240A2D5FC(a2);
      _os_log_impl(&dword_240A1B000, v35, v36, "[%{public}s] Creating generator publisher for retrocompute state status: %{public}s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      uint64_t v44 = v39;
      id v34 = v55;
      MEMORY[0x24560B930](v44, -1, -1);
      MEMORY[0x24560B930](v37, -1, -1);

      uint64_t v45 = v56;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v52);
    }
    else
    {
      sub_240A2D5FC(a2);
      sub_240A2D5FC(a2);

      (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
      uint64_t v45 = v56;
    }
    uint64_t v49 = sub_240A3466C(v58, (uint64_t)v59);
    long long v61 = *(_OWORD *)v49;
    long long v62 = *((_OWORD *)v49 + 1);
    long long v63 = *((_OWORD *)v49 + 2);
    uint64_t v64 = v49[6];
    uint64_t v48 = sub_240A2B318(a1, v34, (uint64_t)&v61, v45);
  }
  sub_240A2D5FC(a2);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v58);
  return v48;
}

void sub_240A2D5FC(id a1)
{
}

uint64_t sub_240A2D608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v68 = a2;
  uint64_t v53 = a1;
  sub_240A3BCA0();
  uint64_t v51 = *(void *)(v4 - 8);
  uint64_t v52 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v50 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240BB3240();
  uint64_t v63 = *(void *)(v6 - 8);
  uint64_t v64 = v6;
  uint64_t v65 = *(void *)(v63 + 64);
  MEMORY[0x270FA5388](v6);
  long long v62 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_240BB32A0();
  uint64_t v59 = *(void *)(v8 - 8);
  uint64_t v60 = v8;
  uint64_t v61 = *(void *)(v59 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v58 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3CA98();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3CF48();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v55 = v15;
  uint64_t v56 = v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A2DEB4(0, &qword_26AFD8988, (void (*)(uint64_t))sub_240A3CF48, sub_240A3FF50, (void (*)(void))sub_240A3CFDC);
  uint64_t v54 = v19;
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  id v22 = (char *)&v49 - v21;
  sub_240A2DEB4(0, &qword_26AFD74B8, sub_240A3BA80, (void (*)(uint64_t))sub_240A3FDA4, (void (*)(void))sub_240A3BAA0);
  uint64_t v66 = *(void *)(v23 - 8);
  uint64_t v67 = v23;
  MEMORY[0x270FA5388](v23);
  id v57 = (char *)&v49 - v24;
  os_log_type_t v25 = (void *)sub_240BB3270();
  uint64_t v69 = a3;
  uint64_t v26 = (void (*)(uint64_t))MEMORY[0x263F44998];
  sub_240A2DE50(0, (unint64_t *)&qword_26AFD8A40, MEMORY[0x263F44998]);
  sub_240A31F4C((unint64_t *)&qword_26AFD8A30, (unint64_t *)&qword_26AFD8A40, v26);
  sub_240BB6330();
  sub_240A2E4A8(&qword_26AFD8910, (void (*)(uint64_t))sub_240A3CA98);
  sub_240A3ECE0();
  sub_240BB6420();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  *(void *)(swift_allocObject() + 16) = v25;
  sub_240A3FF50(0);
  sub_240A3CFDC();
  id v27 = v25;
  uint64_t v28 = v55;
  sub_240BB6330();
  swift_release();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v18, v28);
  sub_240A3C3FC();
  uint64_t v29 = v54;
  uint64_t v30 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v29);

  uint64_t v69 = v30;
  uint64_t v32 = v58;
  uint64_t v31 = v59;
  uint64_t v33 = v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v58, v53, v60);
  uint64_t v35 = v62;
  uint64_t v34 = v63;
  uint64_t v36 = v64;
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v62, v68, v64);
  uint64_t v37 = v31;
  unint64_t v38 = (*(unsigned __int8 *)(v31 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  uint64_t v39 = v34;
  unint64_t v40 = (v61 + *(unsigned __int8 *)(v34 + 80) + v38) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  uint64_t v41 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v41 + v38, v32, v33);
  (*(void (**)(unint64_t, char *, uint64_t))(v39 + 32))(v41 + v40, v35, v36);
  uint64_t v42 = v57;
  sub_240A3BA80(0);
  sub_240A3FDA4();
  sub_240A3BAA0();
  sub_240BB6330();
  swift_release();
  swift_release();
  LOBYTE(v41) = sub_240BB3260();
  sub_240A3CCE8();
  if (v41)
  {
    uint64_t v44 = v67;
    uint64_t v46 = sub_240BB62E0();
  }
  else
  {
    unint64_t v43 = v50;
    uint64_t v44 = v67;
    sub_240BB6360();
    sub_240A2E4A8(&qword_26AFD7118, (void (*)(uint64_t))sub_240A3BCA0);
    uint64_t v45 = v52;
    uint64_t v46 = sub_240BB62E0();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v43, v45);
  }
  (*(void (**)(char *, uint64_t))(v66 + 8))(v42, v44);
  uint64_t v69 = v46;
  sub_240A2DE50(0, (unint64_t *)&qword_26AFD97E8, (void (*)(uint64_t))sub_240A3FDA4);
  sub_240A31F4C((unint64_t *)&qword_26AFD97E0, (unint64_t *)&qword_26AFD97E8, (void (*)(uint64_t))sub_240A3FDA4);
  uint64_t v47 = sub_240BB62E0();
  swift_release();
  return v47;
}

void sub_240A2DE50(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240BB6100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_240A2DEB4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    unint64_t v8 = sub_240BB6010();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_240A2DF44(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = a1;
  uint64_t v26 = sub_240BB32A0();
  uint64_t v3 = *(void *)(v26 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v26);
  os_log_type_t v25 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3CB40();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3C808();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v28 = v10;
  uint64_t v29 = v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB3260();
  sub_240BB3450();
  uint64_t v30 = a2;
  sub_240A35CF0();
  uint64_t v30 = sub_240BB57A0();
  uint64_t v14 = (void (*)(uint64_t))MEMORY[0x263F44998];
  sub_240A31828(0, (unint64_t *)&qword_26AFD8A40, MEMORY[0x263F44998]);
  sub_240A31E6C((unint64_t *)&qword_26AFD8A30, (unint64_t *)&qword_26AFD8A40, v14);
  sub_240BB6330();
  swift_release();
  sub_240A2E3D0(&qword_26AFD7B10, (void (*)(uint64_t))sub_240A3CB40);
  uint64_t v15 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v30 = v15;
  uint64_t v16 = v25;
  uint64_t v17 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v25, v24, v26);
  unint64_t v18 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v19 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v19 + v18, v16, v17);
  *(void *)(v19 + ((v4 + v18 + 7) & 0xFFFFFFFFFFFFFFF8)) = v27;
  sub_240A3B78C();
  sub_240A3FDA4();
  sub_240A2E3D0(&qword_26AFD7B30, (void (*)(uint64_t))sub_240A3B78C);
  sub_240BB6330();
  swift_release();
  swift_release();
  sub_240A2E3D0(&qword_26AFD7B20, (void (*)(uint64_t))sub_240A3C808);
  uint64_t v20 = v28;
  uint64_t v21 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v20);
  return v21;
}

uint64_t sub_240A2E388(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A2E3D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A2E418(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A2E460(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A2E4A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A2E4F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A2E538(uint64_t a1)
{
  uint64_t v33 = sub_240BB32A0();
  uint64_t v2 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v29 = v3;
  uint64_t v31 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3BD48(0, &qword_26AFD89E8, &qword_26AFD8B08, (uint64_t)&type metadata for HeartPromotionResult, &qword_26AFD8B00);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v27 = v4;
  uint64_t v28 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v27 - v6;
  sub_240A2F3F0(0, &qword_26AFD8B08, (uint64_t)&type metadata for HeartPromotionResult, MEMORY[0x263EFDE48]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v27 - v11;
  sub_240A3C8B4(0, &qword_26AFD8938, MEMORY[0x263EFDB28]);
  uint64_t v32 = v13;
  uint64_t v30 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v27 - v14;
  swift_beginAccess();
  sub_240A2F3F0(0, &qword_26AFD8B30, (uint64_t)&type metadata for HeartPromotionResult, MEMORY[0x263EFDE58]);
  sub_240BB6270();
  swift_endAccess();
  uint64_t v16 = a1;
  char v17 = sub_240BB3260();
  sub_240A3A4AC(&qword_26AFD8B00, &qword_26AFD8B08, (uint64_t)&type metadata for HeartPromotionResult);
  if (v17)
  {
    uint64_t v19 = sub_240BB62E0();
  }
  else
  {
    sub_240BB6360();
    sub_240B44330();
    uint64_t v18 = v27;
    uint64_t v19 = sub_240BB62E0();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v18);
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v34 = v19;
  uint64_t v20 = v31;
  uint64_t v21 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v31, v16, v33);
  unint64_t v22 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v23 + v22, v20, v21);
  sub_240A3B844(0, &qword_26AFD97F8);
  sub_240A3FDA4();
  sub_240A3B7F4(&qword_26AFD97F0, &qword_26AFD97F8);
  sub_240BB6330();
  swift_release();
  swift_release();
  sub_240A3D79C(&qword_26AFD8930, &qword_26AFD8938, MEMORY[0x263EFDB28]);
  uint64_t v24 = v32;
  uint64_t v25 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v24);
  return v25;
}

uint64_t sub_240A2EA20(uint64_t a1)
{
  uint64_t v33 = sub_240BB32A0();
  uint64_t v2 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v29 = v3;
  uint64_t v30 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3BD48(0, &qword_26AFD89F0, &qword_26AFD8B18, (uint64_t)&type metadata for HeartFeaturePromotionResult, &qword_26AFD8B10);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v27 = v4;
  uint64_t v28 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v27 - v6;
  sub_240A2F3F0(0, &qword_26AFD8B18, (uint64_t)&type metadata for HeartFeaturePromotionResult, MEMORY[0x263EFDE48]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v27 - v11;
  sub_240A3D6F0();
  uint64_t v31 = *(void *)(v13 - 8);
  uint64_t v32 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_240A2F3F0(0, &qword_26AFD8B38, (uint64_t)&type metadata for HeartFeaturePromotionResult, MEMORY[0x263EFDE58]);
  sub_240BB6270();
  swift_endAccess();
  uint64_t v16 = a1;
  char v17 = sub_240BB3260();
  sub_240A3A4AC(&qword_26AFD8B10, &qword_26AFD8B18, (uint64_t)&type metadata for HeartFeaturePromotionResult);
  if (v17)
  {
    uint64_t v19 = sub_240BB62E0();
  }
  else
  {
    sub_240BB6360();
    sub_240B443AC();
    uint64_t v18 = v27;
    uint64_t v19 = sub_240BB62E0();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v18);
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v34 = v19;
  uint64_t v20 = v30;
  uint64_t v21 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v30, v16, v33);
  unint64_t v22 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v23 + v22, v20, v21);
  sub_240A3B844(0, &qword_26AFD8A50);
  sub_240A3FDA4();
  sub_240A3B7F4(&qword_26AFD8A48, &qword_26AFD8A50);
  sub_240BB62F0();
  swift_release();
  swift_release();
  sub_240A31F04(&qword_26AFD8830, (void (*)(uint64_t))sub_240A3D6F0);
  uint64_t v24 = v32;
  uint64_t v25 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v24);
  return v25;
}

uint64_t sub_240A2EEE0(uint64_t a1)
{
  uint64_t v33 = sub_240BB32A0();
  uint64_t v2 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v30 = v3;
  uint64_t v31 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3BD48(0, &qword_26AFD89E8, &qword_26AFD8B08, (uint64_t)&type metadata for HeartPromotionResult, &qword_26AFD8B00);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v28 = v4;
  uint64_t v29 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v28 - v6;
  sub_240A2F3F0(0, &qword_26AFD8B08, (uint64_t)&type metadata for HeartPromotionResult, MEMORY[0x263EFDE48]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v28 - v11;
  sub_240A3C8B4(0, &qword_26AFD9740, MEMORY[0x263EFDA30]);
  uint64_t v34 = v13;
  uint64_t v32 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v28 - v14;
  swift_beginAccess();
  sub_240A2F3F0(0, &qword_26AFD8B30, (uint64_t)&type metadata for HeartPromotionResult, MEMORY[0x263EFDE58]);
  sub_240BB6270();
  swift_endAccess();
  uint64_t v16 = a1;
  char v17 = sub_240BB3260();
  sub_240A3A4AC(&qword_26AFD8B00, &qword_26AFD8B08, (uint64_t)&type metadata for HeartPromotionResult);
  if (v17)
  {
    uint64_t v19 = sub_240BB62E0();
  }
  else
  {
    sub_240BB6360();
    sub_240B44330();
    uint64_t v18 = v28;
    uint64_t v19 = sub_240BB62E0();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v18);
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v35 = v19;
  uint64_t v20 = v31;
  uint64_t v21 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v31, v16, v33);
  unint64_t v22 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v23 + v22, v20, v21);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_240A3F350;
  *(void *)(v24 + 24) = v23;
  sub_240A3B844(0, &qword_26AFD97F8);
  sub_240A3FDA4();
  sub_240A3B7F4(&qword_26AFD97F0, &qword_26AFD97F8);
  sub_240BB62F0();
  swift_release();
  swift_release();
  sub_240A3D79C(&qword_26AFD9738, &qword_26AFD9740, MEMORY[0x263EFDA30]);
  uint64_t v25 = v34;
  uint64_t v26 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v25);
  return v26;
}

void sub_240A2F3F0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_240A2F43C(void *a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_240BB5990();
  sub_240A395FC(v4, (uint64_t)qword_26AFDEC70);
  id v5 = a1;
  uint64_t v6 = sub_240BB5970();
  os_log_type_t v7 = sub_240BB71A0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = v17;
    *(_DWORD *)uint64_t v8 = 136446722;
    uint64_t v10 = sub_240BB7C80();
    sub_240A38940(v10, v11, &v18);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2050;
    objc_msgSend(v5, sel_status);

    sub_240BB75F0();
    *(_WORD *)(v8 + 22) = 2112;
    uint64_t v12 = v2;
    id v13 = v5;
    sub_240BB75F0();
    *uint64_t v9 = v5;

    uint64_t v2 = v12;
    _os_log_impl(&dword_240A1B000, v6, v7, "[%{public}s] Received new state with status %{public}ld: %@", (uint8_t *)v8, 0x20u);
    sub_240A3A180(0, (unint64_t *)&qword_26AFD77A0, (unint64_t *)&qword_26AFD77B0);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v17, -1, -1);
    MEMORY[0x24560B930](v8, -1, -1);
  }
  else
  {
  }
  uint64_t v14 = (os_unfair_lock_s *)(*(void *)(v2
                                       + OBJC_IVAR____TtC5HeartP33_1983BB941A89CE37AE5E37B88EF7D39A34CMVO2MaxRetrocomputeStatePublisher_subject)
                           + 24);
  os_unfair_lock_lock(v14);
  swift_retain();
  os_unfair_lock_unlock(v14);
  uint64_t v18 = (uint64_t)v5;
  char v19 = 0;
  id v15 = v5;
  sub_240BB6180();

  return swift_release();
}

uint64_t sub_240A2F728@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v59 = a3;
  uint64_t v55 = a2;
  uint64_t v63 = a4;
  sub_240A31F9C(0, (unint64_t *)&qword_26AFD9838, (uint64_t (*)(uint64_t))sub_240A3FDA4, MEMORY[0x263EFDDF8]);
  uint64_t v61 = *(void *)(v5 - 8);
  uint64_t v62 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v60 = (char *)v46 - v6;
  sub_240A3A6A4();
  uint64_t v57 = *(void *)(v7 - 8);
  uint64_t v58 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v56 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240BB3210();
  uint64_t v52 = *(void *)(v9 - 8);
  uint64_t v53 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v51 = (char *)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_240BB32A0();
  uint64_t v11 = *(void *)(v64 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = MEMORY[0x270FA5388](v64);
  uint64_t v54 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  id v15 = (char *)v46 - v14;
  uint64_t updated = type metadata accessor for ElectrocardiogramUpdateGenerator();
  MEMORY[0x270FA5388](updated);
  uint64_t v18 = (void *)((char *)v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_240A317B8(0, &qword_26AFD9868, MEMORY[0x263EFDE08]);
  uint64_t v20 = v19;
  uint64_t v21 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)v46 - v22;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v50 = a1;
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v49 = Strong;
    v25(v15, a1, v64);
    uint64_t v48 = updated;
    v46[2] = (char *)v18 + *(int *)(updated + 20);
    uint64_t v47 = v18;
    uint64_t v26 = v55;
    swift_retain();
    v46[1] = sub_240BB3270();
    sub_240A31F9C(0, (unint64_t *)&qword_26AFD99A0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
    uint64_t v27 = sub_240BB3050();
    uint64_t v28 = *(void *)(v27 - 8);
    unint64_t v29 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_240BB97E0;
    (*(void (**)(unint64_t, void, uint64_t))(v28 + 104))(v30 + v29, *MEMORY[0x263F45548], v27);
    (*(void (**)(char *, void, uint64_t))(v52 + 104))(v51, *MEMORY[0x263F45688], v53);
    sub_240BB3220();
    uint64_t v31 = v54;
    uint64_t v32 = v64;
    v25(v54, (uint64_t)v15, v64);
    unint64_t v33 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = v26;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v34 + v33, v31, v32);
    sub_240A3B6CC();
    sub_240A30380(&qword_26AFD9810, (void (*)(uint64_t))sub_240A3B6CC);
    swift_retain();
    uint64_t v35 = v56;
    sub_240BB6240();
    sub_240A30380((unint64_t *)&qword_26AFD98A0, (void (*)(uint64_t))sub_240A3A6A4);
    uint64_t v36 = v58;
    uint64_t v37 = sub_240BB62E0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v32);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v35, v36);
    uint64_t v38 = (uint64_t)v47;
    uint64_t *v47 = v37;
    v65[3] = v48;
    v65[4] = sub_240A30380(&qword_26AFD9210, (void (*)(uint64_t))type metadata accessor for ElectrocardiogramUpdateGenerator);
    uint64_t v39 = sub_240A23B08(v65);
    sub_240A3EA88(v38, (uint64_t)v39);
    sub_240A3FDA4();
    unint64_t v40 = v60;
    sub_240BB6200();
    sub_240A3B130();
    uint64_t v41 = v62;
    uint64_t v42 = sub_240BB62E0();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v40, v41);
    uint64_t v43 = *(void *)(v49 + OBJC_IVAR____TtC5Heart40ElectrocardiogramUpdateGeneratorPipeline_notificationPublisher);
    swift_retain();
    uint64_t v44 = sub_240A2A634(v42, v43);
    swift_release();
    swift_release();
    swift_release();
    uint64_t result = sub_240A3EA2C(v38);
  }
  else
  {
    sub_240A3FDA4();
    sub_240BB6210();
    sub_240A31E28(&qword_26AFD9860, &qword_26AFD9868, MEMORY[0x263EFDE08]);
    uint64_t v44 = sub_240BB62E0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  }
  *uint64_t v63 = v44;
  return result;
}

uint64_t sub_240A2FF54()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_240BB73C0();
  uint64_t v17 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3C17C();
  uint64_t v6 = v5;
  uint64_t v18 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3D4EC();
  uint64_t v10 = v9;
  uint64_t v19 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB3250();
  sub_240A3466C(v20, v20[3]);
  sub_240BB31E0();
  char v13 = sub_240BB3450();
  uint64_t result = _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v20);
  if (v13)
  {
    id v15 = objc_msgSend(self, sel_defaultCenter);
    sub_240BB73D0();

    swift_allocObject();
    swift_weakInit();
    sub_240A31F9C(0, &qword_26AFD8FB8, (uint64_t (*)(uint64_t))sub_240A3FDA4, MEMORY[0x263F8D8F0]);
    sub_240A30380(&qword_26AFD9988, MEMORY[0x263F07CB0]);
    sub_240BB6330();
    swift_release();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v4, v2);
    sub_240A3FDA4();
    sub_240A30380(&qword_26AFD9768, (void (*)(uint64_t))sub_240A3C17C);
    sub_240BB62F0();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v6);
    sub_240A30380(&qword_26AFD9748, (void (*)(uint64_t))sub_240A3D4EC);
    uint64_t v16 = sub_240BB62E0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v10);
    *(void *)(v1 + OBJC_IVAR____TtC5Heart40ElectrocardiogramUpdateGeneratorPipeline_notificationPublisher) = v16;
    return swift_release();
  }
  return result;
}

uint64_t sub_240A30380(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_240A303C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a2;
  uint64_t v6 = *v3;
  uint64_t v33 = sub_240BB32A0();
  uint64_t v7 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFD7790 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_240BB5990();
  sub_240A395FC(v10, (uint64_t)qword_26AFDEAF8);
  swift_bridgeObjectRetain_n();
  uint64_t v11 = sub_240BB5970();
  os_log_type_t v12 = sub_240BB71A0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v32 = a1;
    uint64_t v15 = v14;
    uint64_t v35 = v14;
    v36[0] = v6;
    *(_DWORD *)uint64_t v13 = 136446466;
    swift_getMetatypeMetadata();
    uint64_t v16 = sub_240BB6E10();
    v36[0] = sub_240A38940(v16, v17, &v35);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2082;
    v36[0] = v34;
    v36[1] = a3;
    sub_240A2C928(0, (unint64_t *)&qword_26AFD7580, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
    sub_240BB4850();
    uint64_t v18 = sub_240BB6E10();
    v36[0] = sub_240A38940(v18, v19, &v35);
    sub_240BB75F0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v11, v12, "[%{public}s] Creating Electrocardiogram update pipeline for single country: %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    uint64_t v20 = v15;
    a1 = v32;
    MEMORY[0x24560B930](v20, -1, -1);
    MEMORY[0x24560B930](v13, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v21 = (id)*MEMORY[0x263F09740];
  sub_240BB3250();
  sub_240A3466C(v36, v36[3]);
  uint64_t v22 = (void *)sub_240BB31F0();
  if (a3)
  {
    sub_240BB4850();
    uint64_t v23 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = 0;
  }
  id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3D0]), sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v21, v22, v23);

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v36);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v26 = v33;
  v25(v9, a1, v33);
  type metadata accessor for ElectrocardiogramUpdateAvailability(0);
  swift_allocObject();
  id v27 = v24;
  uint64_t v28 = sub_240A29688((uint64_t)v9, v27);

  v25(v9, a1, v26);
  type metadata accessor for ElectrocardiogramUpdateGeneratorPipeline();
  swift_allocObject();
  unint64_t v29 = sub_240A310B4((uint64_t)v9, v28);

  swift_release();
  return v29;
}

void sub_240A30800(void *a1, id a2, uint64_t a3)
{
  uint64_t v3 = a3 + 16;
  if (a1)
  {
    uint64_t v5 = qword_26AFD9A18;
    id v6 = a1;
    if (v5 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_240BB5990();
    sub_240A395FC(v7, (uint64_t)qword_26AFDEC70);
    id v8 = v6;
    uint64_t v9 = sub_240BB5970();
    os_log_type_t v10 = sub_240BB71A0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      os_log_type_t v12 = (void *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      v38[0] = v36;
      *(_DWORD *)uint64_t v11 = 136446722;
      uint64_t v13 = sub_240BB7C80();
      sub_240A38940(v13, v14, v38);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2050;
      objc_msgSend(v8, sel_status);

      sub_240BB75F0();
      *(_WORD *)(v11 + 22) = 2112;
      id v15 = v8;
      sub_240BB75F0();
      *os_log_type_t v12 = a1;

      _os_log_impl(&dword_240A1B000, v9, v10, "[%{public}s] Received initial state with status %{public}ld: %@", (uint8_t *)v11, 0x20u);
      sub_240A3A180(0, (unint64_t *)&qword_26AFD77A0, (unint64_t *)&qword_26AFD77B0);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v12, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v36, -1, -1);
      MEMORY[0x24560B930](v11, -1, -1);
    }
    else
    {
    }
    swift_beginAccess();
    uint64_t v28 = MEMORY[0x24560BA20](v3);
    if (v28)
    {
      unint64_t v29 = (void *)v28;
      uint64_t v30 = *(os_unfair_lock_s **)(v28
                                 + OBJC_IVAR____TtC5HeartP33_1983BB941A89CE37AE5E37B88EF7D39A34CMVO2MaxRetrocomputeStatePublisher_subject);
      swift_retain();

      os_unfair_lock_lock(v30 + 6);
      swift_retain();
      os_unfair_lock_unlock(v30 + 6);
      swift_release();
      id v31 = v8;
      sub_240BB6180();

      swift_release();
      return;
    }
  }
  else
  {
    id v8 = a2;
    if (!a2) {
      return;
    }
    id v16 = a2;
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_240BB5990();
    sub_240A395FC(v17, (uint64_t)qword_26AFDEC70);
    id v18 = v8;
    id v19 = v8;
    uint64_t v20 = sub_240BB5970();
    os_log_type_t v21 = sub_240BB7180();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v23 = (void *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      v38[0] = v24;
      *(_DWORD *)uint64_t v22 = 136446466;
      uint64_t v25 = sub_240BB7C80();
      sub_240A38940(v25, v26, v38);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2112;
      id v27 = v8;
      uint64_t v37 = _swift_stdlib_bridgeErrorToNSError();
      sub_240BB75F0();
      *uint64_t v23 = v37;

      _os_log_impl(&dword_240A1B000, v20, v21, "[%{public}s] Failed to get initial retrocompute state: %@", (uint8_t *)v22, 0x16u);
      sub_240A3A180(0, (unint64_t *)&qword_26AFD77A0, (unint64_t *)&qword_26AFD77B0);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v23, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v24, -1, -1);
      MEMORY[0x24560B930](v22, -1, -1);
    }
    else
    {
    }
    swift_beginAccess();
    uint64_t v32 = MEMORY[0x24560BA20](v3);
    if (v32)
    {
      uint64_t v33 = (void *)v32;
      uint64_t v34 = *(os_unfair_lock_s **)(v32
                                 + OBJC_IVAR____TtC5HeartP33_1983BB941A89CE37AE5E37B88EF7D39A34CMVO2MaxRetrocomputeStatePublisher_subject);
      swift_retain();

      os_unfair_lock_lock(v34 + 6);
      swift_retain();
      os_unfair_lock_unlock(v34 + 6);
      swift_release();
      id v35 = v8;
      sub_240BB6180();
      swift_release();
    }
  }
}

uint64_t sub_240A30DE4(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  sub_240A3BE88();
  uint64_t v17 = *(void *)(v6 - 8);
  uint64_t v18 = v6;
  MEMORY[0x270FA5388](v6);
  id v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v2 + OBJC_IVAR____TtC5Heart50CardioFitnessClassificationStatusGeneratorPipeline_context;
  uint64_t v10 = sub_240BB32A0();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  id v19 = a2;
  uint64_t v20 = sub_240A2DF44(a1, (uint64_t)a2);
  char v12 = sub_240BB3260();
  sub_240A31828(0, (unint64_t *)&qword_26AFD97E8, (void (*)(uint64_t))sub_240A3FDA4);
  sub_240A31E6C((unint64_t *)&qword_26AFD97E0, (unint64_t *)&qword_26AFD97E8, (void (*)(uint64_t))sub_240A3FDA4);
  if (v12)
  {
    uint64_t v14 = sub_240BB62E0();
  }
  else
  {
    sub_240BB6360();
    sub_240A2E3D0(&qword_26AFD7100, (void (*)(uint64_t))sub_240A3BE88);
    uint64_t v13 = v18;
    uint64_t v14 = sub_240BB62E0();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v13);
  }
  swift_release();
  uint64_t v20 = v14;
  sub_240A31828(0, (unint64_t *)&qword_26AFD97E8, (void (*)(uint64_t))sub_240A3FDA4);
  uint64_t v15 = sub_240BB62E0();

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  swift_release();
  *(void *)(v3 + OBJC_IVAR____TtC5Heart50CardioFitnessClassificationStatusGeneratorPipeline_publisher) = v15;
  return v3;
}

uint64_t *sub_240A310B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v54 = *v3;
  uint64_t v55 = a2;
  uint64_t v5 = sub_240BB32A0();
  uint64_t v45 = v5;
  uint64_t v47 = *(void *)(v5 - 8);
  uint64_t v6 = v47;
  uint64_t v52 = *(void *)(v47 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v51 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263EFDE30];
  sub_240A3A7D4(0, &qword_26AFD9888, MEMORY[0x263EFDE30]);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v57 = v8;
  uint64_t v58 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v53 = (char *)&v41 - v10;
  uint64_t v48 = (uint64_t (*)(uint64_t, unint64_t, void, void))MEMORY[0x263EFDE08];
  sub_240A317B8(0, &qword_26AFD9868, MEMORY[0x263EFDE08]);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v49 = v11;
  uint64_t v50 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v44 = (char *)&v41 - v13;
  uint64_t v43 = sub_240BB3210();
  uint64_t v14 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  id v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_240BB3240();
  uint64_t v17 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  id v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC5Heart40ElectrocardiogramUpdateGeneratorPipeline_notificationPublisher) = 0;
  uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v59 = a1;
  v46((char *)v3 + OBJC_IVAR____TtC5Heart40ElectrocardiogramUpdateGeneratorPipeline_context, a1, v5);
  uint64_t v41 = sub_240BB3270();
  sub_240A31F9C(0, (unint64_t *)&qword_26AFD99A0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v20 = sub_240BB3050();
  uint64_t v21 = *(void *)(v20 - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_240BB97E0;
  (*(void (**)(unint64_t, void, uint64_t))(v21 + 104))(v23 + v22, *MEMORY[0x263F45548], v20);
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x263F45688], v43);
  sub_240BB3220();
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))((uint64_t)v3 + OBJC_IVAR____TtC5Heart40ElectrocardiogramUpdateGeneratorPipeline_domain, v19, v42);
  sub_240A3FDA4();
  uint64_t v24 = v44;
  sub_240BB6210();
  sub_240A31E28(&qword_26AFD9860, &qword_26AFD9868, v48);
  uint64_t v25 = v49;
  uint64_t v26 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v24, v25);
  uint64_t v27 = OBJC_IVAR____TtC5Heart40ElectrocardiogramUpdateGeneratorPipeline_publisher;
  *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC5Heart40ElectrocardiogramUpdateGeneratorPipeline_publisher) = v26;
  uint64_t v28 = swift_allocObject();
  swift_weakInit();
  unint64_t v29 = v51;
  uint64_t v30 = v45;
  v46(v51, v59, v45);
  uint64_t v31 = v47;
  unint64_t v32 = (*(unsigned __int8 *)(v47 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  unint64_t v33 = (v52 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v28;
  (*(void (**)(unint64_t, char *, uint64_t))(v31 + 32))(v34 + v32, v29, v30);
  uint64_t v35 = v54;
  *(void *)(v34 + v33) = v55;
  *(void *)(v34 + ((v33 + 15) & 0xFFFFFFFFFFFFFFF8)) = v35;
  uint64_t v36 = (uint64_t (*)(uint64_t, unint64_t, void, void))MEMORY[0x263EFDCF0];
  sub_240A317B8(0, (unint64_t *)&qword_26AFD97E8, MEMORY[0x263EFDCF0]);
  sub_240A31E28((unint64_t *)&qword_26AFD97E0, (unint64_t *)&qword_26AFD97E8, v36);
  swift_retain();
  uint64_t v37 = v53;
  sub_240BB6240();
  sub_240A3AA74((unint64_t *)&qword_26AFD9880, &qword_26AFD9888, v56);
  uint64_t v38 = v57;
  uint64_t v39 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v37, v38);
  *(uint64_t *)((char *)v3 + v27) = v39;
  swift_release();
  sub_240A2FF54();
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v59, v30);
  return v3;
}

void sub_240A317B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, unint64_t, void, void))
{
  if (!*a2)
  {
    unint64_t v6 = sub_240A3FDA4();
    unint64_t v7 = a3(a1, v6, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_240A31828(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240BB6100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_240A3188C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  unint64_t v40 = a3;
  sub_240A3BAD4(0);
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v39 = v5;
  MEMORY[0x270FA5388](v5);
  unint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_240BB5990();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v35 - v13;
  sub_240A3211C(0, &qword_26AFD99C8, (uint64_t (*)(uint64_t))sub_240A3B984, MEMORY[0x263F8E0F8]);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_240BBD020;
  *(void *)(v15 + 32) = sub_240A2EEE0(a1);
  *(void *)(v15 + 40) = sub_240A2EA20(a1);
  *(void *)(v15 + 48) = sub_240A2E538(a1);
  uint64_t v42 = v15;
  sub_240BB6F30();
  uint64_t v16 = v42;
  sub_240BB3260();
  if ((sub_240BB3450() & 1) == 0)
  {
    sub_240BB3BF0();
    uint64_t v24 = sub_240BB5970();
    os_log_type_t v25 = sub_240BB71A0();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v37 = v16;
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v41 = v27;
      uint64_t v42 = a2;
      uint64_t v36 = v8;
      *(_DWORD *)uint64_t v26 = 136446210;
      swift_getMetatypeMetadata();
      uint64_t v28 = sub_240BB6E10();
      uint64_t v42 = sub_240A38940(v28, v29, &v41);
      uint64_t v16 = v37;
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v24, v25, "[%{public}s]: In foreground mode, so will continue to listen for updates", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v27, -1, -1);
      MEMORY[0x24560B930](v26, -1, -1);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v36);
      goto LABEL_9;
    }

    uint64_t v30 = *(void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v31 = v12;
LABEL_8:
    v30(v31, v8);
    goto LABEL_9;
  }
  sub_240BB3BF0();
  uint64_t v17 = sub_240BB5970();
  os_log_type_t v18 = sub_240BB71A0();
  if (!os_log_type_enabled(v17, v18))
  {

    uint64_t v30 = *(void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v31 = v14;
    goto LABEL_8;
  }
  uint64_t v37 = v16;
  uint64_t v19 = swift_slowAlloc();
  uint64_t v36 = v8;
  uint64_t v20 = (uint8_t *)v19;
  uint64_t v21 = swift_slowAlloc();
  uint64_t v41 = v21;
  uint64_t v42 = a2;
  *(_DWORD *)uint64_t v20 = 136446210;
  swift_getMetatypeMetadata();
  uint64_t v22 = sub_240BB6E10();
  uint64_t v42 = sub_240A38940(v22, v23, &v41);
  uint64_t v16 = v37;
  sub_240BB75F0();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_240A1B000, v17, v18, "[%{public}s]: In background mode, so will finish after 1 update", v20, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x24560B930](v21, -1, -1);
  MEMORY[0x24560B930](v20, -1, -1);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v36);
LABEL_9:
  uint64_t v42 = v16;
  sub_240A3B984();
  sub_240A3211C(0, &qword_26AFD98E0, (uint64_t (*)(uint64_t))sub_240A3B984, MEMORY[0x263F8D488]);
  sub_240A31F04((unint64_t *)&qword_26AFD97E0, (void (*)(uint64_t))sub_240A3B984);
  sub_240A3A344();
  sub_240BB60D0();
  sub_240A31F04(&qword_26AFD97D0, sub_240A3BAD4);
  uint64_t v32 = v39;
  uint64_t v33 = sub_240BB62E0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v7, v32);
  *unint64_t v40 = v33;
  return result;
}

uint64_t sub_240A31E28(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, unint64_t, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240A317B8(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A31E6C(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240A31828(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A31EBC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A31F04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A31F4C(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240A2DE50(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240A31F9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_240A32000(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_240A32064(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240BB7AB0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_240A320B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_240A3211C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_240A32180(uint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v5 = a1;
  unint64_t v6 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_240BB76F0()) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v7 = MEMORY[0x263F8EE88];
    if (v6) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v12 = -1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = v5 + 56;
    uint64_t v9 = ~v12;
    uint64_t v13 = -v12;
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v11 = v14 & *(void *)(v5 + 56);
    sub_240BB4850();
    uint64_t result = swift_retain();
    uint64_t v10 = 0;
    goto LABEL_11;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_6;
  }
LABEL_3:
  sub_240A32520();
  uint64_t v7 = sub_240BB77A0();
  if (!v6) {
    goto LABEL_7;
  }
LABEL_4:
  sub_240BB4850();
  swift_retain();
  sub_240BB76B0();
  sub_240A34DC4(0, a2);
  sub_240A73718(a4, a2);
  uint64_t result = sub_240BB70B0();
  uint64_t v5 = v36;
  uint64_t v34 = v37;
  uint64_t v9 = v38;
  uint64_t v10 = v39;
  unint64_t v11 = v40;
LABEL_11:
  int64_t v15 = (unint64_t)(v9 + 64) >> 6;
  uint64_t v16 = v7 + 56;
  while (v5 < 0)
  {
    if (!sub_240BB7720()) {
      goto LABEL_45;
    }
    sub_240A34DC4(0, a2);
    swift_dynamicCast();
    uint64_t v20 = v35;
LABEL_36:
    uint64_t result = sub_240BB74F0();
    uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v16 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(void *)(*(void *)(v7 + 48) + 8 * v17) = v20;
    ++*(void *)(v7 + 16);
  }
  if (v11)
  {
    unint64_t v18 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v19 = v18 | (v10 << 6);
LABEL_35:
    uint64_t v20 = *(void **)(*(void *)(v5 + 48) + 8 * v19);
    uint64_t v35 = v20;
    id v25 = v20;
    goto LABEL_36;
  }
  int64_t v21 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v21 >= v15) {
      goto LABEL_45;
    }
    unint64_t v22 = *(void *)(v34 + 8 * v21);
    uint64_t v23 = v10 + 1;
    if (!v22)
    {
      uint64_t v23 = v10 + 2;
      if (v10 + 2 >= v15) {
        goto LABEL_45;
      }
      unint64_t v22 = *(void *)(v34 + 8 * v23);
      if (!v22)
      {
        uint64_t v23 = v10 + 3;
        if (v10 + 3 >= v15) {
          goto LABEL_45;
        }
        unint64_t v22 = *(void *)(v34 + 8 * v23);
        if (!v22)
        {
          uint64_t v23 = v10 + 4;
          if (v10 + 4 >= v15) {
            goto LABEL_45;
          }
          unint64_t v22 = *(void *)(v34 + 8 * v23);
          if (!v22)
          {
            uint64_t v23 = v10 + 5;
            if (v10 + 5 >= v15) {
              goto LABEL_45;
            }
            unint64_t v22 = *(void *)(v34 + 8 * v23);
            if (!v22)
            {
              uint64_t v24 = v10 + 6;
              while (v15 != v24)
              {
                unint64_t v22 = *(void *)(v34 + 8 * v24++);
                if (v22)
                {
                  uint64_t v23 = v24 - 1;
                  goto LABEL_34;
                }
              }
LABEL_45:
              swift_release();
              sub_240A325B4();
              return v7;
            }
          }
        }
      }
    }
LABEL_34:
    unint64_t v11 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v23 << 6);
    uint64_t v10 = v23;
    goto LABEL_35;
  }
LABEL_46:
  __break(1u);
  return result;
}

void sub_240A32520()
{
  if (!qword_26AFD9ED0)
  {
    sub_240A34DC4(255, (unint64_t *)&qword_26AFD9918);
    sub_240A73718((unint64_t *)&unk_26AFD9920, (unint64_t *)&qword_26AFD9918);
    unint64_t v0 = sub_240BB77B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD9ED0);
    }
  }
}

uint64_t sub_240A325B4()
{
  return swift_release();
}

uint64_t sub_240A325BC(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  sub_240A3AB98();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = &type metadata for RelatedSampleTypesGeneratorFactory;
  uint64_t v59 = &off_26F508E18;
  int64_t v15 = sub_240A210A0(a3);
  uint64_t v16 = (void *)*a1;
  if (a4)
  {
    v56[0] = a1[1];
    uint64_t v32 = a1[2];
    unint64_t v31 = a1[3];
    id v33 = v16;
    sub_240A32CD8((uint64_t)v56);
    sub_240BB4850();
    id v34 = v33;
    sub_240A32CD8((uint64_t)v56);
    sub_240BB4850();
    uint64_t v35 = sub_240BB5970();
    os_log_type_t v36 = sub_240BB7160();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v51 = (char *)v32;
      uint64_t v38 = v37;
      uint64_t v39 = swift_slowAlloc();
      uint64_t v54 = v15;
      *(void *)&v55[0] = v39;
      uint64_t v52 = v39;
      *(_DWORD *)uint64_t v38 = 136446466;
      v60[0] = a5;
      sub_240B4297C();
      uint64_t v53 = a5;
      uint64_t v40 = sub_240BB6E10();
      v60[0] = sub_240A38940(v40, v41, (uint64_t *)v55);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2082;
      sub_240BB4850();
      v60[0] = sub_240A38940((uint64_t)v51, v31, (uint64_t *)v55);
      a5 = v53;
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      sub_240A32CAC((uint64_t)v56);

      swift_bridgeObjectRelease();
      sub_240A32CAC((uint64_t)v56);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v35, v36, "[%{public}s(%{public}s)] Started in foreground, sending initial publisher as well as database changes publisher", (uint8_t *)v38, 0x16u);
      uint64_t v42 = v52;
      swift_arrayDestroy();
      int64_t v15 = v54;
      MEMORY[0x24560B930](v42, -1, -1);
      MEMORY[0x24560B930](v38, -1, -1);
    }
    else
    {

      sub_240A32CAC((uint64_t)v56);
      swift_bridgeObjectRelease();
      sub_240A32CAC((uint64_t)v56);
      swift_bridgeObjectRelease();
    }
    sub_240A3466C(v57, (uint64_t)v58);
    uint64_t v46 = sub_240A32D04((uint64_t)a1, a2, (uint64_t)v15, a5);
  }
  else
  {
    uint64_t v17 = a5;
    v60[0] = a1[1];
    uint64_t v52 = a1[2];
    uint64_t v53 = v12;
    unint64_t v18 = a1[3];
    id v19 = v16;
    sub_240A32CD8((uint64_t)v60);
    sub_240BB4850();
    id v20 = v19;
    sub_240A32CD8((uint64_t)v60);
    sub_240BB4850();
    int64_t v21 = sub_240BB5970();
    os_log_type_t v22 = sub_240BB7160();
    int v23 = v22;
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v54 = v15;
      uint64_t v25 = v24;
      uint64_t v50 = swift_slowAlloc();
      v56[0] = v50;
      *(_DWORD *)uint64_t v25 = 136446466;
      uint64_t v51 = v14;
      int v49 = v23;
      *(void *)&v55[0] = v17;
      sub_240B4297C();
      uint64_t v26 = sub_240BB6E10();
      os_log_t v48 = v21;
      *(void *)&v55[0] = sub_240A38940(v26, v27, v56);
      uint64_t v14 = v51;
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2082;
      sub_240BB4850();
      *(void *)&v55[0] = sub_240A38940(v52, v18, v56);
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      sub_240A32CAC((uint64_t)v60);

      swift_bridgeObjectRelease();
      sub_240A32CAC((uint64_t)v60);
      swift_bridgeObjectRelease();
      os_log_t v28 = v48;
      _os_log_impl(&dword_240A1B000, v48, (os_log_type_t)v49, "[%{public}s(%{public}s)] Started in background, only sending one generator", (uint8_t *)v25, 0x16u);
      uint64_t v29 = v50;
      swift_arrayDestroy();
      MEMORY[0x24560B930](v29, -1, -1);
      uint64_t v30 = v25;
      int64_t v15 = v54;
      MEMORY[0x24560B930](v30, -1, -1);
    }
    else
    {

      sub_240A32CAC((uint64_t)v60);
      swift_bridgeObjectRelease();
      sub_240A32CAC((uint64_t)v60);
      swift_bridgeObjectRelease();
    }
    sub_240A3466C(v57, (uint64_t)v58);
    v56[3] = (uint64_t)&type metadata for RelatedSampleTypesGeneratorFactory;
    v56[4] = (uint64_t)&off_26F508E18;
    sub_240A1E37C((uint64_t)v56, (uint64_t)v55);
    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 16) = v15;
    *(void *)(v43 + 24) = a2;
    *(void *)(v43 + 32) = v17;
    long long v44 = *((_OWORD *)a1 + 1);
    *(_OWORD *)(v43 + 40) = *(_OWORD *)a1;
    *(_OWORD *)(v43 + 56) = v44;
    *(void *)(v43 + 72) = a1[4];
    sub_240A37388(v55, v43 + 80);
    id v45 = v20;
    sub_240A32CD8((uint64_t)v60);
    sub_240A3C258(0, &qword_26AFD8998, sub_240B42928, (void (*)(void))sub_240B42948);
    sub_240A3C554(&qword_26AFD8990, &qword_26AFD8998, sub_240B42928, (void (*)(void))sub_240B42948);
    sub_240BB4850();
    swift_retain();
    swift_retain();
    sub_240BB6240();
    sub_240A33AC8(&qword_26AFD8CC0, (void (*)(uint64_t))sub_240A3AB98);
    uint64_t v46 = sub_240BB62E0();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v14, v11);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v56);
  }
  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v57);
  return v46;
}

uint64_t sub_240A32CAC(uint64_t a1)
{
  return a1;
}

uint64_t sub_240A32CD8(uint64_t a1)
{
  return a1;
}

uint64_t sub_240A32D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v48 = a4;
  uint64_t v52 = a3;
  sub_240A3D87C(0);
  uint64_t v58 = v7;
  uint64_t v60 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v53 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_240A3D87C;
  uint64_t v55 = sub_240A3D8C4;
  sub_240A3C258(0, &qword_26AFD8970, sub_240A3D87C, (void (*)(void))sub_240A3D8C4);
  uint64_t v57 = v9;
  uint64_t v59 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v54 = (char *)v42 - v10;
  sub_240A3D0AC(0);
  uint64_t v51 = v11;
  uint64_t v62 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v50 = (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v61 = (char *)v42 - v14;
  uint64_t v46 = sub_240BB7140();
  uint64_t v47 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v16 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A334E4(0, &qword_26AFD89C8, MEMORY[0x263F44B10], sub_240A3A264, MEMORY[0x263EFDB60]);
  uint64_t v43 = v17;
  uint64_t v44 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  id v19 = (char *)v42 - v18;
  uint64_t v65 = &type metadata for RelatedSampleTypesGeneratorFactory;
  uint64_t v66 = &off_26F508E18;
  uint64_t v20 = *(void *)(a1 + 8);
  uint64_t v21 = sub_240BB4850();
  sub_240A20168(v21);
  v42[1] = v20;
  swift_bridgeObjectRelease();
  sub_240BB7150();
  swift_release();
  os_log_type_t v22 = *(void **)a1;
  long long v67 = *(_OWORD *)(a1 + 16);
  uint64_t v23 = swift_allocObject();
  uint64_t v45 = a2;
  *(void *)(v23 + 16) = a2;
  *(void *)(v23 + 24) = a4;
  long long v24 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v23 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v23 + 48) = v24;
  *(void *)(v23 + 64) = *(void *)(a1 + 32);
  sub_240BB4850();
  swift_retain();
  id v49 = v22;
  sub_240A334B8((uint64_t)&v67);
  uint64_t v25 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
  sub_240A3B52C(0, &qword_26AFD8A60, MEMORY[0x263EFDCF0]);
  sub_240A3A264();
  sub_240A3B59C(&qword_26AFD8A58, &qword_26AFD8A60, v25);
  uint64_t v26 = v46;
  sub_240BB6350();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v16, v26);
  sub_240A3BF18();
  uint64_t v27 = v43;
  uint64_t v28 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v19, v27);
  *(void *)&v63[0] = v52;
  sub_240A3B664();
  sub_240A33AC8(&qword_26AFD7528, (void (*)(uint64_t))sub_240A3B664);
  uint64_t v29 = v61;
  sub_240BB6420();
  uint64_t v30 = v51;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v50, v29, v51);
  *(void *)&v63[0] = v28;
  sub_240A3D0CC();
  swift_retain();
  unint64_t v31 = v53;
  sub_240BB5F80();
  sub_240A1E37C((uint64_t)v64, (uint64_t)v63);
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = v48;
  *(void *)(v32 + 16) = v45;
  *(void *)(v32 + 24) = v33;
  long long v34 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v32 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v32 + 48) = v34;
  *(void *)(v32 + 64) = *(void *)(a1 + 32);
  sub_240A37388(v63, v32 + 72);
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = sub_240B42B78;
  *(void *)(v35 + 24) = v32;
  sub_240BB4850();
  swift_retain();
  id v36 = v49;
  sub_240A334B8((uint64_t)&v67);
  sub_240A39BC8(0, (unint64_t *)&qword_26AFD8FB0);
  sub_240A3D8C4();
  uint64_t v37 = v54;
  uint64_t v38 = v58;
  sub_240BB6330();
  swift_release();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v31, v38);
  sub_240A3C554(&qword_26AFD8968, &qword_26AFD8970, v56, (void (*)(void))v55);
  uint64_t v39 = v57;
  uint64_t v40 = sub_240BB62E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v37, v39);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v61, v30);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v64);
  return v40;
}

uint64_t sub_240A334B8(uint64_t a1)
{
  return a1;
}

void sub_240A334E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, void *))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_240A3B52C(255, &qword_26AFD8A60, MEMORY[0x263EFDCF0]);
    v14[0] = v9;
    v14[1] = v11;
    v14[2] = a4();
    v14[3] = sub_240A3B59C(&qword_26AFD8A58, &qword_26AFD8A60, v10);
    unint64_t v12 = a5(a1, v14);
    if (!v13) {
      atomic_store(v12, a2);
    }
  }
}

char *sub_240A335D4(uint64_t a1)
{
  sub_240A3D8F8();
  uint64_t v3 = v2;
  uint64_t v28 = *(char **)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3C5A4();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3AE58();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v36) = 1;
  sub_240BB6200();
  sub_240A3B2A8();
  uint64_t v16 = (char *)swift_allocObject();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v16[*(void *)(*MEMORY[0x263EFDD00] + *(void *)v16 + 16)], v15, v12);
  uint64_t v34 = a1;
  uint64_t v17 = *(void *)(a1 + 16);
  if (v17)
  {
    sub_240A3B664();
    uint64_t v31 = v7;
    uint64_t v32 = v3;
    uint64_t v33 = v18;
    uint64_t v29 = sub_240A33A80(&qword_26AFD7528, (void (*)(uint64_t))sub_240A3B664);
    uint64_t v30 = v10;
    id v19 = v5;
    uint64_t v20 = (void (**)(char *, uint64_t))(v28 + 8);
    uint64_t v21 = (void (**)(char *, char *, uint64_t))(v8 + 32);
    swift_retain();
    sub_240BB4850();
    uint64_t v22 = 0;
    uint64_t v28 = v16;
    uint64_t v23 = v30;
    uint64_t v24 = v32;
    do
    {
      uint64_t v25 = *(void *)(v34 + 8 * v22++ + 32);
      uint64_t v35 = v25;
      id v36 = v16;
      swift_retain();
      sub_240BB6320();
      sub_240A33A80(&qword_26AFD87F0, (void (*)(uint64_t))sub_240A3D8F8);
      sub_240BB6330();
      (*v20)(v19, v24);
      sub_240A3B33C();
      uint64_t v16 = (char *)swift_allocObject();
      (*v21)(&v16[*(void *)(*MEMORY[0x263EFDD00] + *(void *)v16 + 16)], v23, v31);
      swift_release();
      swift_release();
    }
    while (v17 != v22);
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v16;
}

uint64_t sub_240A339F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A33A38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A33A80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A33AC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A33B10(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_240A33B58(uint64_t a1)
{
  uint64_t v2 = sub_240BB32A0();
  uint64_t v24 = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v25 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3D644();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB3250();
  sub_240A3466C(&v30, *((uint64_t *)&v31 + 1));
  uint64_t v10 = (void *)sub_240BB31F0();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v30);
  id v28 = v10;
  uint64_t v27 = sub_240A2A050(v10);
  sub_240A34DC4(0, (unint64_t *)&unk_26AFD75C0);
  *(void *)&long long v30 = sub_240BB7390();
  sub_240A3B3D0(0, &qword_26AFD7B48, (unint64_t *)&unk_26AFD7B60, (unint64_t *)&unk_26AFD75E8);
  sub_240A3B43C();
  sub_240BB62D0();
  swift_release();
  sub_240A255B4(&qword_26AFD7B00, (void (*)(uint64_t))sub_240A3D644);
  uint64_t v26 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_240BB3250();
  sub_240A3466C(&v30, *((uint64_t *)&v31 + 1));
  uint64_t v11 = (void *)sub_240BB31F0();
  sub_240BB3440();
  swift_allocObject();
  id v12 = v11;
  uint64_t v13 = sub_240BB3400();

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v30);
  uint64_t v14 = (uint64_t)v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v25, a1, v2);
  void v29[3] = &type metadata for CardioFitnessRetroComputeDismissalStateManager;
  v29[4] = &off_26F5041B0;
  uint64_t v15 = (void *)swift_allocObject();
  v29[0] = v15;
  v15[2] = v13;
  v15[3] = 0xD000000000000016;
  v15[4] = 0x8000000240BC8DD0;
  v15[5] = 0xD000000000000016;
  v15[6] = 0x8000000240BC8DF0;
  v15[7] = 0xD000000000000020;
  v15[8] = 0x8000000240BC8E10;
  type metadata accessor for CardioFitnessRetroComputeGeneratorPipeline();
  uint64_t v16 = (uint64_t *)swift_allocObject();
  uint64_t v17 = sub_240A346B0((uint64_t)v29, (uint64_t)&type metadata for CardioFitnessRetroComputeDismissalStateManager);
  MEMORY[0x270FA5388](v17);
  id v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v20 + 16))(v19);
  long long v21 = *((_OWORD *)v19 + 1);
  long long v30 = *(_OWORD *)v19;
  long long v31 = v21;
  long long v32 = *((_OWORD *)v19 + 2);
  uint64_t v33 = *((void *)v19 + 6);
  swift_retain();
  sub_240BB4850();
  sub_240BB4850();
  sub_240BB4850();
  uint64_t v22 = sub_240A2580C(v14, v27, v26, (uint64_t)&v30, v16);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v24);
  return v22;
}

uint64_t *sub_240A34028(uint64_t a1)
{
  uint64_t v2 = sub_240BB5990();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
  uint64_t v6 = (void *)MEMORY[0x24560A470]((id)*MEMORY[0x263F09BF8]);
  sub_240A34E00();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240BC3090;
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9940);
  *(void *)(inited + 32) = MEMORY[0x24560A460]((id)*MEMORY[0x263F09410]);
  *(void *)(inited + 40) = MEMORY[0x24560A470]((id)*MEMORY[0x263F09E78]);
  *(void *)(inited + 48) = MEMORY[0x24560A470]((id)*MEMORY[0x263F09BC8]);
  *(void *)(inited + 56) = MEMORY[0x24560A460]((id)*MEMORY[0x263F09388]);
  *(void *)(inited + 64) = MEMORY[0x24560A470]((id)*MEMORY[0x263F09C38]);
  v42[0] = inited;
  sub_240BB6F30();
  unint64_t v8 = v42[0];
  if (v42[0] >> 62)
  {
    sub_240BB4850();
    uint64_t v11 = sub_240BB7900();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v42[0] & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    sub_240A3525C(v8);
    uint64_t v10 = v9;
    goto LABEL_6;
  }
  uint64_t v10 = MEMORY[0x263F8EE88];
LABEL_6:
  v34[2] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = type metadata accessor for AFibBurdenLifeFactorsTileViewController();
  v42[0] = v6;
  v42[1] = v10;
  void v42[2] = 0xD00000000000001CLL;
  v42[3] = 0x8000000240BCD530;
  v42[4] = v12;
  sub_240BB3250();
  sub_240A3466C(v40, v41);
  uint64_t v13 = sub_240BB31F0();
  sub_240BB3250();
  id v35 = v6;
  v34[1] = a1;
  if (qword_26AFD7BF0 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_240A395FC(v2, (uint64_t)qword_26AFDEB80);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v14, v2);
  v36[3] = &type metadata for FeedItemContextPreviousFeedItemFetcherBox;
  void v36[4] = &off_26F505F10;
  v36[0] = swift_allocObject();
  sub_240A3FA68((uint64_t)v37, v36[0] + 16);
  type metadata accessor for RelatedSampleTypesGenerator.Environment(0);
  uint64_t v15 = (void *)swift_allocObject();
  uint64_t v16 = sub_240A346B0((uint64_t)v36, (uint64_t)&type metadata for FeedItemContextPreviousFeedItemFetcherBox);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v19 + 16))(v18);
  v15[6] = &type metadata for FeedItemContextPreviousFeedItemFetcherBox;
  v15[7] = &off_26F505F10;
  uint64_t v20 = swift_allocObject();
  long long v21 = *((_OWORD *)v18 + 1);
  *(_OWORD *)(v20 + 16) = *(_OWORD *)v18;
  *(_OWORD *)(v20 + 32) = v21;
  *(void *)(v20 + 48) = *((void *)v18 + 4);
  v15[2] = v13;
  v15[3] = v20;
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))((uint64_t)v15 + OBJC_IVAR____TtCC5Heart27RelatedSampleTypesGenerator11Environment_logger, v5, v2);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v36);
  sub_240A3FA14((uint64_t)v37);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v40);
  sub_240A39D94();
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_240BB97E0;
  uint64_t v23 = (void *)*MEMORY[0x263F47580];
  id v24 = (id)*MEMORY[0x263F09728];
  id v25 = v23;
  sub_240BB3250();
  sub_240A3466C(v40, v41);
  uint64_t v26 = sub_240BB31F0();
  uint64_t v27 = type metadata accessor for FeatureStatusFeedItemRequirement();
  id v28 = (void *)swift_allocObject();
  void v28[2] = v24;
  v28[3] = v23;
  v28[4] = v26;
  v28[5] = 0;
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v40);
  *(void *)(v22 + 56) = v27;
  *(void *)(v22 + 64) = &off_26F5042E8;
  *(void *)(v22 + 32) = v28;
  sub_240BB3250();
  sub_240A3466C(v40, v41);
  LOBYTE(v26) = sub_240BB31E0() & 1;
  uint64_t v38 = &type metadata for RelatedSampleTypesGeneratorFactory;
  uint64_t v39 = &off_26F508E18;
  type metadata accessor for RelatedSampleTypesGeneratorPipeline();
  uint64_t v29 = (uint64_t *)swift_allocObject();
  uint64_t v30 = sub_240A346B0((uint64_t)v37, (uint64_t)&type metadata for RelatedSampleTypesGeneratorFactory);
  MEMORY[0x270FA5388](v30);
  (*(void (**)(void))(v31 + 16))();
  long long v32 = sub_240A1F4E8(v42, (uint64_t)v15, v22, v26, v29);
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v37);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v40);
  return v32;
}

void *sub_240A3466C(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_240A346B0(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_240A34700(uint64_t a1, int a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = (void *)sub_240BB56F0();
  unsigned int v8 = objc_msgSend(v7, sel_areAllRequirementsSatisfied);

  char v9 = sub_240BB56D0();
  char v10 = v9;
  if (v8 && (v9 & 1) == 0 && (_BYTE)a2)
  {
    int v11 = a2 << 24;
    int v12 = sub_240B601F0(a3) << 16;
  }
  else
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_240BB5990();
    sub_240A395FC(v13, (uint64_t)qword_26AFDEC70);
    uint64_t v50 = v4;
    id v14 = v4;
    id v15 = a3;
    id v16 = v14;
    id v17 = v15;
    uint64_t v18 = sub_240BB5970();
    os_log_type_t v19 = sub_240BB71A0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      uint64_t v51 = v48;
      *(_DWORD *)uint64_t v20 = 136446722;
      swift_getObjectType();
      sub_240A394E0();
      uint64_t v21 = sub_240BB6E10();
      id v49 = a3;
      sub_240A38940(v21, v22, &v51);
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2082;
      sub_240A38940(0xD00000000000004ELL, 0x8000000240BD3FC0, &v51);
      sub_240BB75F0();
      *(_WORD *)(v20 + 22) = 2082;
      id v23 = v17;
      uint64_t v24 = sub_240BB73A0();
      unint64_t v26 = v25;

      sub_240A38940(v24, v26, &v51);
      sub_240BB75F0();

      a3 = v49;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v18, v19, "[%{public}s.%{public}s] %{public}s discover promotion should be hidden.", (uint8_t *)v20, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v48, -1, -1);
      MEMORY[0x24560B930](v20, -1, -1);
    }
    else
    {
    }
    int v11 = 0;
    int v12 = 0x20000;
    uint64_t v4 = v50;
  }
  uint64_t v27 = (void *)sub_240BB56F0();
  unsigned __int8 v28 = objc_msgSend(v27, sel_areAllRequirementsSatisfied);

  if (v10 & 1 | ((v28 & 1) == 0) || !(_BYTE)a2)
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_240BB5990();
    sub_240A395FC(v32, (uint64_t)qword_26AFDEC70);
    id v33 = v4;
    id v34 = a3;
    id v35 = v33;
    id v36 = v34;
    uint64_t v37 = sub_240BB5970();
    os_log_type_t v38 = sub_240BB71A0();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      uint64_t v51 = v40;
      *(_DWORD *)uint64_t v39 = 136446722;
      swift_getObjectType();
      sub_240A394E0();
      uint64_t v41 = sub_240BB6E10();
      sub_240A38940(v41, v42, &v51);
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2082;
      sub_240A38940(0xD00000000000004ELL, 0x8000000240BD3FC0, &v51);
      sub_240BB75F0();
      *(_WORD *)(v39 + 22) = 2082;
      id v43 = v36;
      uint64_t v44 = sub_240BB73A0();
      unint64_t v46 = v45;

      sub_240A38940(v44, v46, &v51);
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v37, v38, "[%{public}s.%{public}s] %{public}s non-discover promotion should be hidden.", (uint8_t *)v39, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v40, -1, -1);
      MEMORY[0x24560B930](v39, -1, -1);
    }
    else
    {
    }
    int v30 = 0;
    int v31 = 2;
  }
  else
  {
    unsigned __int8 v29 = sub_240B601F0(a3);
    int v30 = a2 << 8;
    int v31 = v29;
  }
  return v11 | v12 | v31 | v30;
}

uint64_t sub_240A34CA4()
{
  sub_240A34E00();
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240BBAEF0;
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9940);
  *(void *)(inited + 32) = MEMORY[0x24560A460]((id)*MEMORY[0x263F09360]);
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
  *(void *)(inited + 40) = MEMORY[0x24560A470]((id)*MEMORY[0x263F09F20]);
  sub_240BB6F30();
  if (inited >> 62)
  {
    sub_240BB4850();
    uint64_t v3 = sub_240BB7900();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v2 = MEMORY[0x263F8EE88];
    goto LABEL_6;
  }
  if (!*(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  sub_240A3525C(inited);
  uint64_t v2 = v1;
LABEL_6:
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_240A34DC4(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_240A34E00()
{
  if (!qword_26AFD77C0)
  {
    unint64_t v0 = sub_240BB7AB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD77C0);
    }
  }
}

void sub_240A34E5C(unint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7 = a1;
  unint64_t v8 = a1 >> 62;
  if (a1 >> 62)
  {
    sub_240BB4850();
    uint64_t v12 = sub_240BB7900();
    swift_bridgeObjectRelease();
    if (v12)
    {
LABEL_3:
      sub_240A351D0(0, a2, a3, a4, a5);
      uint64_t v9 = sub_240BB77A0();
      uint64_t v10 = v7 & 0xFFFFFFFFFFFFFF8;
      if (!v8) {
        goto LABEL_4;
      }
LABEL_8:
      sub_240BB4850();
      uint64_t v11 = sub_240BB7900();
      swift_bridgeObjectRelease();
      if (!v11) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v9 = MEMORY[0x263F8EE88];
  uint64_t v10 = v7 & 0xFFFFFFFFFFFFFF8;
  if (v8) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v11 = *(void *)(v10 + 16);
  if (!v11) {
    return;
  }
LABEL_9:
  uint64_t v13 = v9 + 56;
  uint64_t v50 = v11;
  if ((v7 & 0xC000000000000001) != 0)
  {
    uint64_t v14 = 0;
    unint64_t v46 = v7;
    while (1)
    {
      uint64_t v15 = MEMORY[0x24560AAA0](v14, v7);
      BOOL v16 = __OFADD__(v14++, 1);
      if (v16)
      {
        __break(1u);
        goto LABEL_37;
      }
      uint64_t v17 = v15;
      uint64_t v18 = sub_240BB74F0();
      uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      uint64_t v22 = *(void *)(v13 + 8 * (v20 >> 6));
      uint64_t v23 = 1 << v20;
      if (((1 << v20) & v22) != 0)
      {
        sub_240A34DC4(0, a3);
        id v24 = *(id *)(*(void *)(v9 + 48) + 8 * v20);
        char v25 = sub_240BB7500();

        if (v25)
        {
LABEL_11:
          sub_240BB50A0();
          unint64_t v7 = v46;
          goto LABEL_12;
        }
        uint64_t v26 = ~v19;
        while (1)
        {
          unint64_t v20 = (v20 + 1) & v26;
          unint64_t v21 = v20 >> 6;
          uint64_t v22 = *(void *)(v13 + 8 * (v20 >> 6));
          uint64_t v23 = 1 << v20;
          if ((v22 & (1 << v20)) == 0) {
            break;
          }
          id v27 = *(id *)(*(void *)(v9 + 48) + 8 * v20);
          char v28 = sub_240BB7500();

          if (v28) {
            goto LABEL_11;
          }
        }
        unint64_t v7 = v46;
      }
      *(void *)(v13 + 8 * v21) = v23 | v22;
      *(void *)(*(void *)(v9 + 48) + 8 * v20) = v17;
      uint64_t v29 = *(void *)(v9 + 16);
      BOOL v16 = __OFADD__(v29, 1);
      uint64_t v30 = v29 + 1;
      if (v16) {
        goto LABEL_38;
      }
      *(void *)(v9 + 16) = v30;
LABEL_12:
      if (v14 == v50) {
        return;
      }
    }
  }
  uint64_t v31 = 0;
  uint64_t v47 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v31 != v47)
  {
    id v32 = *(id *)(v7 + 32 + 8 * v31);
    uint64_t v33 = sub_240BB74F0();
    uint64_t v34 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v35 = v33 & ~v34;
    unint64_t v36 = v35 >> 6;
    uint64_t v37 = *(void *)(v13 + 8 * (v35 >> 6));
    uint64_t v38 = 1 << v35;
    if (((1 << v35) & v37) != 0)
    {
      sub_240A34DC4(0, a3);
      id v39 = *(id *)(*(void *)(v9 + 48) + 8 * v35);
      char v40 = sub_240BB7500();

      if (v40) {
        goto LABEL_24;
      }
      uint64_t v41 = ~v34;
      unint64_t v35 = (v35 + 1) & v41;
      unint64_t v36 = v35 >> 6;
      uint64_t v37 = *(void *)(v13 + 8 * (v35 >> 6));
      uint64_t v38 = 1 << v35;
      if ((v37 & (1 << v35)) != 0)
      {
        while (1)
        {
          id v42 = *(id *)(*(void *)(v9 + 48) + 8 * v35);
          char v43 = sub_240BB7500();

          if (v43) {
            break;
          }
          unint64_t v35 = (v35 + 1) & v41;
          unint64_t v36 = v35 >> 6;
          uint64_t v37 = *(void *)(v13 + 8 * (v35 >> 6));
          uint64_t v38 = 1 << v35;
          if ((v37 & (1 << v35)) == 0) {
            goto LABEL_32;
          }
        }
LABEL_24:

        uint64_t v11 = v50;
        goto LABEL_25;
      }
LABEL_32:
      uint64_t v11 = v50;
    }
    *(void *)(v13 + 8 * v36) = v38 | v37;
    *(void *)(*(void *)(v9 + 48) + 8 * v35) = v32;
    uint64_t v44 = *(void *)(v9 + 16);
    BOOL v16 = __OFADD__(v44, 1);
    uint64_t v45 = v44 + 1;
    if (v16) {
      goto LABEL_39;
    }
    *(void *)(v9 + 16) = v45;
LABEL_25:
    if (++v31 == v11) {
      return;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

void sub_240A351D0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  if (!*a2)
  {
    sub_240A34DC4(255, a3);
    sub_240A73718(a5, a3);
    unint64_t v8 = sub_240BB77B0();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_240A3525C(unint64_t a1)
{
}

uint64_t sub_240A35280(void *a1, int a2, uint64_t a3, uint64_t a4)
{
  int v44 = a2;
  sub_240A35A10(0, &qword_26AFD8AC0, MEMORY[0x263EFDE08]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v36 - v10;
  sub_240A35E3C();
  uint64_t v42 = *(void *)(v12 - 8);
  uint64_t v43 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v41 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A35D30();
  uint64_t v36 = *(void *)(v14 - 8);
  uint64_t v37 = v14;
  MEMORY[0x270FA5388](v14);
  BOOL v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A35F28();
  uint64_t v39 = *(void *)(v17 - 8);
  uint64_t v40 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v38 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v19 = objc_msgSend(v4, sel_profileIdentifier);
  id v20 = objc_msgSend(v19, sel_type);

  if (v20 != (id)1) {
    goto LABEL_8;
  }
  id v21 = objc_allocWithZone(MEMORY[0x263F0A3D0]);
  uint64_t v22 = v21;
  if (!a4)
  {
    id v26 = objc_msgSend(v21, sel_initWithFeatureIdentifier_healthStore_, a1, v4);
    if (v26) {
      goto LABEL_4;
    }
LABEL_8:
    sub_240BB56E0();
    sub_240BB6210();
    sub_240A35DC4(&qword_268CA0D70, &qword_26AFD8AC0, MEMORY[0x263EFDE08]);
    uint64_t v34 = sub_240BB62E0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v34;
  }
  id v23 = a1;
  id v24 = v4;
  sub_240BB4850();
  char v25 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  id v26 = objc_msgSend(v22, sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v23, v24, v25);

  if (!v26) {
    goto LABEL_8;
  }
LABEL_4:
  if (v44)
  {
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_240A35E08(0);
    sub_240A359C8(&qword_26AFD8AB0, sub_240A35E08);
    sub_240BB6240();
    sub_240BB56E0();
    sub_240A359C8((unint64_t *)&unk_26AFD8AE0, (void (*)(uint64_t))sub_240A35D30);
    uint64_t v27 = v37;
    char v28 = v38;
    sub_240BB62F0();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v27);
    sub_240A35CF0();
    id v26 = v26;
    uint64_t v29 = sub_240BB57C0();

    uint64_t v45 = v29;
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_240A35A10(0, (unint64_t *)&qword_26AFD8A40, MEMORY[0x263EFDCF0]);
    sub_240A35DC4((unint64_t *)&qword_26AFD8A30, (unint64_t *)&qword_26AFD8A40, v30);
    sub_240A359C8(&qword_26AFD8860, (void (*)(uint64_t))sub_240A35F28);
    uint64_t v31 = v41;
    uint64_t v32 = v40;
    sub_240BB63F0();
    swift_release();
    sub_240A359C8((unint64_t *)&unk_26AFD8880, (void (*)(uint64_t))sub_240A35E3C);
    uint64_t v33 = v43;
    uint64_t v34 = sub_240BB62E0();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v31, v33);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v28, v32);
  }
  else
  {
    sub_240A35CF0();
    uint64_t v34 = sub_240BB57C0();
  }

  return v34;
}

uint64_t sub_240A358F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A35938(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A35980(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A359C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240A35A10(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    uint64_t v6 = sub_240BB56E0();
    unint64_t v7 = a3(a1, v6, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_240A35A80(uint64_t a1)
{
  sub_240A35CBC(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x24560BA20](a1 + 16);
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    sub_240A34DC4(0, (unint64_t *)&qword_26AFD75D0);
    sub_240BB57B0();

    uint64_t v8 = sub_240BB56E0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 0, 1, v8);
  }
  else
  {
    uint64_t v7 = sub_240BB56E0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
  }
  return sub_240BB6200();
}

void sub_240A35BF4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_240A35C58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_240A35CBC(uint64_t a1)
{
}

unint64_t sub_240A35CF0()
{
  unint64_t result = qword_26AFD75D0;
  if (!qword_26AFD75D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD75D0);
  }
  return result;
}

void sub_240A35D30()
{
  if (!qword_26AFD8AF0)
  {
    sub_240A35E08(255);
    sub_240A358F0(&qword_26AFD8AB0, sub_240A35E08);
    unint64_t v0 = sub_240BB6250();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD8AF0);
    }
  }
}

uint64_t sub_240A35DC4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240A35A10(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240A35E08(uint64_t a1)
{
}

void sub_240A35E3C()
{
  if (!qword_26AFD8890)
  {
    sub_240A35F28();
    sub_240A22390();
    sub_240A358F0(&qword_26AFD8860, (void (*)(uint64_t))sub_240A35F28);
    sub_240A358F0((unint64_t *)&qword_26AFD8A30, (void (*)(uint64_t))sub_240A22390);
    unint64_t v0 = sub_240BB5FA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD8890);
    }
  }
}

void sub_240A35F28()
{
  if (!qword_26AFD8868)
  {
    sub_240A35D30();
    sub_240BB56E0();
    sub_240A358F0((unint64_t *)&unk_26AFD8AE0, (void (*)(uint64_t))sub_240A35D30);
    unint64_t v0 = sub_240BB5F90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD8868);
    }
  }
}

id sub_240A35FD4(uint64_t *a1)
{
  uint64_t v3 = *v1;
  v143 = v1;
  uint64_t v144 = v3;
  sub_240A373A0();
  id v149 = v4;
  v147 = (char *)*((void *)v4 - 1);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v142 = (uint64_t)&v132 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = v6;
  MEMORY[0x270FA5388](v5);
  v141 = (char *)&v132 - v7;
  sub_240A37614(0, (unint64_t *)&qword_26AFD7670, (uint64_t (*)(uint64_t))sub_240A373A0, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v148 = (uint64_t)&v132 - v9;
  uint64_t v154 = sub_240BB32A0();
  uint64_t v10 = *(void *)(v154 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v154);
  v153 = (char *)&v132 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v132 - v13;
  uint64_t v15 = sub_240BB5990();
  uint64_t v150 = *(void *)(v15 - 8);
  uint64_t v151 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v132 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  v145 = (char *)&v132 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v132 - v21;
  id v23 = (void *)sub_240BB3270();
  id v24 = v23;
  char v25 = (void *)sub_240BB30E0();
  char v26 = sub_240BB30D0();

  if ((v26 & 1) == 0)
  {
    id v149 = v24;
    uint64_t v152 = v10;
    if (!v23) {
      return (id)MEMORY[0x263F8EE78];
    }
    sub_240BB3BF0();
    uint64_t v43 = sub_240BB5970();
    os_log_type_t v44 = sub_240BB71A0();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      v157[0] = v46;
      *(_DWORD *)uint64_t v45 = 136446210;
      v164[0] = v144;
      swift_getMetatypeMetadata();
      uint64_t v47 = sub_240BB6E10();
      v164[0] = sub_240A38940(v47, v48, v157);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v43, v44, "[%{public}s] Creating ArticlesGeneratorPipeline for single profile", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v46, -1, -1);
      MEMORY[0x24560B930](v45, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v150 + 8))(v18, v151);
    uint64_t v50 = v153;
    uint64_t v49 = v154;
    id v51 = v149;
    sub_240A37560(0, &qword_26AFD99B8, &qword_26AFD8FA0, MEMORY[0x263F456E8], MEMORY[0x263F8E0F8]);
    uint64_t v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = xmmword_240BB97E0;
    (*(void (**)(char *, uint64_t *, uint64_t))(v152 + 16))(v50, a1, v49);
    sub_240BB3250();
    sub_240A3466C(v164, v165);
    uint64_t v53 = (void *)sub_240BB31F0();
    sub_240A24278(v53);

    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v164);
    sub_240A3FAC4();
    uint64_t v55 = v54;
    swift_allocObject();
    uint64_t v56 = sub_240BB5840();
    *(void *)(v52 + 56) = v55;
    *(void *)(v52 + 64) = sub_240A375CC(&qword_26AFD7BE0, (void (*)(uint64_t))sub_240A3FAC4);
    *(void *)(v52 + 32) = v56;

    return (id)v52;
  }

  sub_240BB3BF0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v152 = v10 + 16;
  v146 = v27;
  v27(v14, (uint64_t)a1, v154);
  char v28 = sub_240BB5970();
  os_log_type_t v29 = sub_240BB71A0();
  int v30 = v29;
  uint64_t v31 = a1;
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v32 = swift_slowAlloc();
    v138 = (uint64_t *)swift_slowAlloc();
    v157[0] = v138;
    *(_DWORD *)uint64_t v32 = 136446466;
    LODWORD(v137) = v30;
    v164[0] = v144;
    swift_getMetatypeMetadata();
    uint64_t v33 = v10;
    os_log_t v136 = v28;
    uint64_t v34 = sub_240BB6E10();
    v164[0] = sub_240A38940(v34, v35, v157);
    v139 = v31;
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2082;
    uint64_t v36 = (void *)sub_240BB3270();
    uint64_t v37 = sub_240BB30C0();
    unint64_t v39 = v38;

    v164[0] = sub_240A38940(v37, v39, v157);
    uint64_t v31 = v139;
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    uint64_t v40 = v154;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v154);
    os_log_t v41 = v136;
    _os_log_impl(&dword_240A1B000, v136, (os_log_type_t)v137, "[%{public}s]: returning pipeline for sourceProfile %{public}s", (uint8_t *)v32, 0x16u);
    uint64_t v42 = v138;
    swift_arrayDestroy();
    MEMORY[0x24560B930](v42, -1, -1);
    MEMORY[0x24560B930](v32, -1, -1);

    (*(void (**)(char *, uint64_t))(v150 + 8))(v22, v151);
  }
  else
  {
    uint64_t v57 = v154;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v154);

    (*(void (**)(char *, uint64_t))(v150 + 8))(v22, v151);
    uint64_t v40 = v57;
  }
  sub_240BB3250();
  sub_240A3466C(v164, v165);
  uint64_t v58 = (void *)sub_240BB31F0();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v164);
  uint64_t v59 = v148;
  sub_240BB3290();
  v134 = (void (*)(uint64_t, void, uint64_t, id))*((void *)v147 + 7);
  v135 = v147 + 56;
  v134(v59, 0, 1, v149);
  uint64_t v60 = sub_240A3792C(v59);
  uint64_t v62 = v61;
  sub_240A378A0(v59);
  id v63 = objc_allocWithZone(MEMORY[0x263F0A448]);
  id v64 = v58;
  sub_240BB4850();
  os_log_t v136 = v60;
  uint64_t v65 = (void *)sub_240BB6DA0();
  uint64_t v137 = v62;
  swift_bridgeObjectRelease();
  id v132 = objc_msgSend(v63, sel_initWithHealthStore_currentCountryCode_, v64, v65);

  id v133 = v64;
  *(_OWORD *)&v157[7] = xmmword_240BC4B30;
  v158[3] = sub_240BB3480();
  v158[4] = MEMORY[0x263F459B0];
  v138 = v158;
  v139 = sub_240A23B08(v158);
  uint64_t v66 = (uint64_t)v153;
  long long v67 = v146;
  v146(v153, (uint64_t)v31, v40);
  uint64_t v68 = (void *)*MEMORY[0x263F09730];
  sub_240A37560(0, &qword_26AFD7B58, (unint64_t *)&unk_26AFD7780, MEMORY[0x263F45938], MEMORY[0x263F8E0F8]);
  uint64_t v69 = swift_allocObject();
  *(_OWORD *)(v69 + 16) = xmmword_240BBAE40;
  uint64_t v70 = v40;
  uint64_t v71 = (uint64_t)v31;
  uint64_t v72 = type metadata accessor for CardioFitnessHealthChecklistFeedItemProvider();
  uint64_t v73 = swift_allocObject();
  *(void *)(v69 + 56) = v72;
  *(void *)(v69 + 64) = sub_240A375CC(&qword_26AFD7798, (void (*)(uint64_t))type metadata accessor for CardioFitnessHealthChecklistFeedItemProvider);
  *(void *)(v69 + 32) = v73;
  uint64_t v74 = type metadata accessor for CardioFitnessPromotionFeedItemProvider();
  uint64_t v75 = swift_allocObject();
  *(void *)(v69 + 96) = v74;
  *(void *)(v69 + 104) = sub_240A375CC(&qword_26AFD7A80, (void (*)(uint64_t))type metadata accessor for CardioFitnessPromotionFeedItemProvider);
  *(void *)(v69 + 72) = v75;
  uint64_t v76 = v67;
  id v77 = v68;
  sub_240BB3470();
  v67((char *)v66, v71, v70);
  uint64_t v78 = sub_240A29C44(v66);
  v158[8] = type metadata accessor for CardioFitnessClassificationStatusGeneratorPipeline(0);
  v158[9] = sub_240A375CC(&qword_26AFD7AD8, (void (*)(uint64_t))type metadata accessor for CardioFitnessClassificationStatusGeneratorPipeline);
  v158[5] = v78;
  id result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    v80 = result;
    unsigned int v81 = objc_msgSend(result, sel_isCompanionCapable);

    if (v81)
    {
      uint64_t v82 = type metadata accessor for CardioFitnessRetroComputeGeneratorPipeline();
      uint64_t v83 = (uint64_t)v153;
      v76(v153, v71, v70);
      unint64_t v84 = sub_240A33B58(v83);
      uint64_t v85 = sub_240A375CC(&qword_26AFD72C8, (void (*)(uint64_t))type metadata accessor for CardioFitnessRetroComputeGeneratorPipeline);
    }
    else
    {
      uint64_t v82 = 0;
      uint64_t v85 = 0;
      unint64_t v84 = 0;
      v158[11] = 0;
      v158[12] = 0;
      uint64_t v83 = (uint64_t)v153;
    }
    v158[13] = v82;
    v158[14] = v85;
    v158[10] = (uint64_t)v84;
    uint64_t v86 = (uint64_t)v141;
    sub_240BB3290();
    type metadata accessor for HeartFeatureStatusAvailabilityProvider();
    uint64_t v87 = 4;
    uint64_t v88 = swift_allocObject();
    unint64_t v89 = (v147[80] + 16) & ~(unint64_t)v147[80];
    uint64_t v90 = swift_allocObject();
    sub_240A381E8(v86, v90 + v89);
    *(void *)(v88 + 16) = sub_240A3EEE0;
    *(void *)(v88 + 24) = v90;
    v76((char *)v83, v71, v154);
    uint64_t v91 = type metadata accessor for HeartFeatureStatusGeneratorPipeline();
    swift_allocObject();
    uint64_t v92 = sub_240A24A6C(v83, v88);
    swift_release();
    v158[18] = v91;
    v158[19] = sub_240A375CC(&qword_26AFD9098, (void (*)(uint64_t))type metadata accessor for HeartFeatureStatusGeneratorPipeline);
    v158[15] = v92;
    id v93 = v133;
    v147 = (char *)v132;
    sub_240BB3290();
    uint64_t v94 = v148;
    sub_240A3783C(v86, v148);
    v134(v94, 0, 1, v149);
    sub_240A3792C(v94);
    sub_240A378A0(v94);
    uint64_t v95 = (void *)*MEMORY[0x263F09778];
    id v96 = objc_allocWithZone(MEMORY[0x263F0A3D0]);
    id v97 = v93;
    id v98 = v95;
    v99 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
    id v100 = objc_msgSend(v96, sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v98, v97, v99);

    uint64_t v101 = v142;
    sub_240A3783C(v86, v142);
    uint64_t v102 = (char *)objc_allocWithZone((Class)type metadata accessor for HeartPromotionAvailability());
    uint64_t v103 = v147;
    uint64_t v104 = sub_240A2C3D4(v97, v147, (uint64_t)v100, v101, v102);
    sub_240A1F7CC(v86);
    id v149 = v97;

    uint64_t v105 = (uint64_t)v153;
    uint64_t v106 = v154;
    v146(v153, v71, v154);
    uint64_t v107 = type metadata accessor for HeartPromotionGeneratorPipeline();
    swift_allocObject();
    uint64_t v108 = sub_240A2744C(v105, v104);

    v158[23] = v107;
    v158[24] = sub_240A375CC(&qword_26AFD8FD8, (void (*)(uint64_t))type metadata accessor for HeartPromotionGeneratorPipeline);
    v158[20] = v108;
    sub_240A282B8(v71, v159);
    sub_240A21290(v71, v160);
    uint64_t v109 = sub_240A303C8(v71, (uint64_t)v136, v137);
    swift_bridgeObjectRelease();
    v160[8] = type metadata accessor for ElectrocardiogramUpdateGeneratorPipeline();
    v160[9] = sub_240A375CC(&qword_26AFD9638, (void (*)(uint64_t))type metadata accessor for ElectrocardiogramUpdateGeneratorPipeline);
    v160[5] = (uint64_t)v109;
    sub_240A26798(v71, v161);
    sub_240A25668(v71, v162);
    sub_240A248C8(v71, v163);
    uint64_t v110 = v106;
    uint64_t v111 = v106;
    long long v112 = (void (*)(uint64_t, uint64_t, uint64_t))v146;
    v146((char *)v105, v71, v110);
    sub_240BB3250();
    sub_240A3466C(v164, v165);
    uint64_t v113 = (void *)sub_240BB31F0();
    sub_240A24278(v113);

    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v164);
    sub_240A3FAC4();
    uint64_t v115 = v114;
    swift_allocObject();
    uint64_t v116 = sub_240BB5840();
    v163[8] = v115;
    v163[9] = sub_240A375CC(&qword_26AFD7BE0, (void (*)(uint64_t))sub_240A3FAC4);
    v163[5] = v116;
    v112(v105, v71, v111);
    uint64_t v117 = type metadata accessor for AFibBurdenNotificationSettingsGeneratorPipeline();
    swift_allocObject();
    v118 = sub_240A28758(v105);
    v163[13] = v117;
    v163[14] = sub_240A375CC(&qword_26AFD73A8, (void (*)(uint64_t))type metadata accessor for AFibBurdenNotificationSettingsGeneratorPipeline);
    v163[10] = (uint64_t)v118;
    v112(v105, v71, v111);
    uint64_t v119 = type metadata accessor for AFibBurdenRescindedGeneratorPipeline();
    swift_allocObject();
    uint64_t v120 = sub_240A26468(v105);
    v163[18] = v119;
    v163[19] = sub_240A375CC(&qword_26AFD71A0, (void (*)(uint64_t))type metadata accessor for AFibBurdenRescindedGeneratorPipeline);
    v163[15] = v120;
    v121 = sub_240A34028(v71);
    v163[23] = type metadata accessor for RelatedSampleTypesGeneratorPipeline();
    v163[24] = sub_240A375CC(&qword_26AFD83E0, (void (*)(uint64_t))type metadata accessor for RelatedSampleTypesGeneratorPipeline);
    uint64_t v52 = MEMORY[0x263F8EE78];
    v163[20] = (uint64_t)v121;
    uint64_t v122 = MEMORY[0x263F456E8];
    do
    {
      sub_240A3744C((uint64_t)&v157[v87 + 5], (uint64_t)v164);
      sub_240A374DC((uint64_t)v164, (uint64_t)&v155, &qword_26AFD7B90, &qword_26AFD8FA0, v122);
      if (v156)
      {
        sub_240A37388(&v155, (uint64_t)v157);
        sub_240A37388((long long *)v157, (uint64_t)&v155);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v52 = (uint64_t)sub_240A37820(0, *(void *)(v52 + 16) + 1, 1, (void *)v52);
        }
        unint64_t v124 = *(void *)(v52 + 16);
        unint64_t v123 = *(void *)(v52 + 24);
        if (v124 >= v123 >> 1) {
          uint64_t v52 = (uint64_t)sub_240A37820((void *)(v123 > 1), v124 + 1, 1, (void *)v52);
        }
        *(void *)(v52 + 16) = v124 + 1;
        sub_240A37388(&v155, v52 + 40 * v124 + 32);
      }
      else
      {
        sub_240A3FE60((uint64_t)&v155);
      }
      v87 += 5;
    }
    while (v87 != 79);
    sub_240A37560(0, &qword_26AFD7B90, &qword_26AFD8FA0, MEMORY[0x263F456E8], MEMORY[0x263F8D8F0]);
    swift_arrayDestroy();
    v125 = v145;
    sub_240BB3BF0();
    v126 = sub_240BB5970();
    os_log_type_t v127 = sub_240BB71A0();
    if (os_log_type_enabled(v126, v127))
    {
      v128 = (uint8_t *)swift_slowAlloc();
      uint64_t v129 = swift_slowAlloc();
      v157[0] = v129;
      *(_DWORD *)v128 = 136446210;
      v164[0] = v144;
      swift_getMetatypeMetadata();
      uint64_t v130 = sub_240BB6E10();
      v164[0] = sub_240A38940(v130, v131, v157);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v126, v127, "[%{public}s] Feature disabled - no onboarding pipeline", v128, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v129, -1, -1);
      MEMORY[0x24560B930](v128, -1, -1);

      (*(void (**)(char *, uint64_t))(v150 + 8))(v145, v151);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v150 + 8))(v125, v151);
    }
    return (id)v52;
  }
  __break(1u);
  return result;
}

uint64_t sub_240A37388(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void sub_240A373A0()
{
  if (!qword_26AFD7668)
  {
    sub_240BB33F0();
    sub_240BB3390();
    sub_240A2E388((unint64_t *)&qword_26AFD7140, MEMORY[0x263F457B0]);
    unint64_t v0 = sub_240BB7C20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD7668);
    }
  }
}

uint64_t sub_240A3744C(uint64_t a1, uint64_t a2)
{
  sub_240A37560(0, &qword_26AFD7B90, &qword_26AFD8FA0, MEMORY[0x263F456E8], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240A374DC(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  sub_240A37560(0, a3, a4, a5, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

void sub_240A37560(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_240A3FD54(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_240A375CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240A37614(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void *sub_240A37678(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, unint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_240A377C0(0, a5, a6);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = j__malloc_size(v13);
      void v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4]) {
          memmove(v15, a4 + 4, 40 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v15 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_240A39E64(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void sub_240A377C0(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_240A3FD54(255, a3);
    unint64_t v4 = sub_240BB7AB0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *sub_240A37820(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_240A37678(a1, a2, a3, a4, &qword_26AFD99B8, &qword_26AFD8FA0);
}

uint64_t sub_240A3783C(uint64_t a1, uint64_t a2)
{
  sub_240A373A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240A378A0(uint64_t a1)
{
  sub_240A37614(0, (unint64_t *)&qword_26AFD7670, (uint64_t (*)(uint64_t))sub_240A373A0, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240A3792C(uint64_t a1)
{
  uint64_t v2 = sub_240BB5990();
  uint64_t v71 = *(void *)(v2 - 8);
  uint64_t v72 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v69 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  id v63 = (char *)&v63 - v5;
  uint64_t v6 = sub_240BB3390();
  uint64_t v66 = *(void *)(v6 - 8);
  uint64_t v67 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  id v64 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v70 = (char *)&v63 - v9;
  uint64_t v10 = sub_240BB33F0();
  uint64_t v65 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A38190();
  size_t v14 = v13;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v68 = (uint64_t)&v63 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v63 - v20;
  sub_240A373A0();
  uint64_t v23 = v22;
  uint64_t v24 = *(void *)(v22 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v27 = (char *)&v63 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  os_log_type_t v29 = (char *)&v63 - v28;
  sub_240A38128(a1, (uint64_t)v21, (uint64_t (*)(void))sub_240A38190);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v21, 1, v23) == 1)
  {
    uint64_t v30 = (uint64_t)v17;
    uint64_t v70 = v14;
    sub_240A3824C((uint64_t)v21, (uint64_t (*)(void))sub_240A38190);
    uint64_t v31 = (uint64_t)v69;
    sub_240BB3BF0();
    uint64_t v32 = v68;
    sub_240A38128(a1, v68, (uint64_t (*)(void))sub_240A38190);
    uint64_t v33 = sub_240BB5970();
    os_log_type_t v34 = sub_240BB7180();
    if (os_log_type_enabled(v33, v34))
    {
      unint64_t v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v74 = v36;
      *(_DWORD *)unint64_t v35 = 136446210;
      sub_240A38128(v32, v30, (uint64_t (*)(void))sub_240A38190);
      uint64_t v37 = sub_240BB6E20();
      uint64_t v73 = sub_240A38940(v37, v38, &v74);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      sub_240A3824C(v32, (uint64_t (*)(void))sub_240A38190);
      _os_log_impl(&dword_240A1B000, v33, v34, "GeneratorContext.country is empty: %{public}s", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v36, -1, -1);
      MEMORY[0x24560B930](v35, -1, -1);
    }
    else
    {
      sub_240A3824C(v32, (uint64_t (*)(void))sub_240A38190);
    }

    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v31, v72);
    return 0;
  }
  unint64_t v39 = v12;
  uint64_t v40 = v65;
  uint64_t v41 = v66;
  uint64_t v42 = v10;
  uint64_t v43 = v70;
  uint64_t v44 = v67;
  sub_240A381E8((uint64_t)v21, (uint64_t)v29);
  sub_240A38128((uint64_t)v29, (uint64_t)v27, (uint64_t (*)(void))sub_240A373A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v69 = v29;
    uint64_t v45 = v41;
    uint64_t v46 = v43;
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v43, v27, v44);
    uint64_t v47 = v63;
    sub_240BB3BF0();
    unint64_t v48 = v64;
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v64, v43, v44);
    uint64_t v49 = sub_240BB5970();
    os_log_type_t v50 = sub_240BB7180();
    BOOL v51 = os_log_type_enabled(v49, v50);
    uint64_t v53 = v71;
    uint64_t v52 = v72;
    if (v51)
    {
      uint64_t v54 = v45;
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      uint64_t v74 = v56;
      *(_DWORD *)uint64_t v55 = 136446210;
      sub_240A9B944();
      uint64_t v57 = sub_240BB7B60();
      uint64_t v73 = sub_240A38940(v57, v58, &v74);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      uint64_t v59 = *(void (**)(char *, uint64_t))(v54 + 8);
      v59(v64, v44);
      _os_log_impl(&dword_240A1B000, v49, v50, "Could not reference Mobile Country Code from GeneratorContext with error: %{public}s", v55, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v56, -1, -1);
      MEMORY[0x24560B930](v55, -1, -1);

      (*(void (**)(char *, uint64_t))(v53 + 8))(v63, v72);
      v59(v70, v44);
    }
    else
    {

      uint64_t v61 = *(void (**)(char *, uint64_t))(v45 + 8);
      v61(v48, v44);
      (*(void (**)(char *, uint64_t))(v53 + 8))(v47, v52);
      v61(v46, v44);
    }
    sub_240A3824C((uint64_t)v69, (uint64_t (*)(void))sub_240A373A0);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v39, v27, v42);
  uint64_t v60 = sub_240BB33E0();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v39, v42);
  sub_240A3824C((uint64_t)v29, (uint64_t (*)(void))sub_240A373A0);
  return v60;
}

uint64_t sub_240A38128(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_240A38190()
{
  if (!qword_26AFD7670)
  {
    sub_240A373A0();
    unint64_t v0 = sub_240BB75E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD7670);
    }
  }
}

uint64_t sub_240A381E8(uint64_t a1, uint64_t a2)
{
  sub_240A373A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_240A3824C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_240A382AC(char a1)
{
  if (sub_240A394C8(a1)) {
    int v3 = 0;
  }
  else {
    int v3 = sub_240A24500(a1) & 1;
  }
  int v4 = sub_240A394C8(a1);
  int v5 = sub_240A39634(a1);
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_240BB5990();
  sub_240A395FC(v6, (uint64_t)qword_26AFDEC70);
  id v7 = v1;
  uint64_t v8 = sub_240BB5970();
  os_log_type_t v9 = sub_240BB71A0();
  if (os_log_type_enabled(v8, v9))
  {
    int v34 = v5;
    int v35 = v4;
    uint64_t v10 = 0xD000000000000012;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    uint64_t v36 = v33;
    *(_DWORD *)uint64_t v11 = 136447746;
    swift_getObjectType();
    sub_240A394E0();
    uint64_t v12 = sub_240BB6E10();
    sub_240A38940(v12, v13, &v36);
    sub_240BB75F0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    sub_240A38940(0xD000000000000018, 0x8000000240BD3FA0, &v36);
    sub_240BB75F0();
    *(_WORD *)(v11 + 22) = 2082;
    if (a1)
    {
      if (a1 == 1) {
        uint64_t v10 = 0x6472754262694661;
      }
      else {
        uint64_t v10 = 0x7461654662694661;
      }
      if (a1 == 1) {
        unint64_t v14 = 0xEA00000000006E65;
      }
      else {
        unint64_t v14 = 0xEC00000073657275;
      }
    }
    else
    {
      unint64_t v14 = 0x8000000240BD3F80;
    }
    sub_240A38940(v10, v14, &v36);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 32) = 2082;
    uint64_t v15 = sub_240BB6E10();
    sub_240A38940(v15, v16, &v36);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 42) = 2082;
    if (v35) {
      uint64_t v17 = 1702195828;
    }
    else {
      uint64_t v17 = 0x65736C6166;
    }
    if (v35) {
      unint64_t v18 = 0xE400000000000000;
    }
    else {
      unint64_t v18 = 0xE500000000000000;
    }
    sub_240A38940(v17, v18, &v36);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 52) = 2082;
    sub_240A38940(0x65736C6166, 0xE500000000000000, &v36);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 62) = 2082;
    if (v34) {
      uint64_t v19 = 1702195828;
    }
    else {
      uint64_t v19 = 0x65736C6166;
    }
    if (v34) {
      unint64_t v20 = 0xE400000000000000;
    }
    else {
      unint64_t v20 = 0xE500000000000000;
    }
    sub_240A38940(v19, v20, &v36);
    sub_240BB75F0();
    int v4 = v35;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v8, v9, "[%{public}s.%{public}s] promotion: %{public}s (shouldAdvertisePromotionType: %{public}s, isOnboardingCompleted: %{public}s, isRescinded: %{public}s, isExcluded: %{public}s)", (uint8_t *)v11, 0x48u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v33, -1, -1);
    uint64_t v21 = v11;
    int v5 = v34;
    MEMORY[0x24560B930](v21, -1, -1);
  }
  else
  {
  }
  if ((v3 == 0) | (v4 | v5) & 1)
  {
    id v22 = v7;
    uint64_t v23 = sub_240BB5970();
    os_log_type_t v24 = sub_240BB71A0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = 0xD000000000000012;
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v36 = v27;
      *(_DWORD *)uint64_t v26 = 136446722;
      swift_getObjectType();
      sub_240A394E0();
      uint64_t v28 = sub_240BB6E10();
      sub_240A38940(v28, v29, &v36);
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2082;
      sub_240A38940(0xD000000000000018, 0x8000000240BD3FA0, &v36);
      sub_240BB75F0();
      *(_WORD *)(v26 + 22) = 2082;
      if (a1)
      {
        if (a1 == 1)
        {
          uint64_t v25 = 0x6472754262694661;
          unint64_t v30 = 0xEA00000000006E65;
        }
        else
        {
          uint64_t v25 = 0x7461654662694661;
          unint64_t v30 = 0xEC00000073657275;
        }
      }
      else
      {
        unint64_t v30 = 0x8000000240BD3F80;
      }
      sub_240A38940(v25, v30, &v36);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v23, v24, "[%{public}s.%{public}s] %{public}s promotion should be hidden.", (uint8_t *)v26, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v27, -1, -1);
      MEMORY[0x24560B930](v26, -1, -1);

      unsigned __int8 v31 = 2;
    }
    else
    {

      unsigned __int8 v31 = 2;
    }
  }
  else
  {
    unsigned __int8 v31 = sub_240B5FCEC(a1);
  }
  return v31 | (v3 << 8);
}

uint64_t sub_240A38940(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_240A38AC0(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_240A38A64((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_240A38A64((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    sub_240BB4850();
  }
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v12);
  return v7;
}

uint64_t _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_240A38A64(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_240A38AC0(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_240BB7600();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_240A38C7C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_240BB7850();
  if (!v8)
  {
    sub_240BB78C0();
    __break(1u);
LABEL_17:
    uint64_t result = sub_240BB7970();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_240A38C7C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_240A38D14(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_240AB27C4(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_240AB27C4(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_240A38D14(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_240A38E8C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_240BB77D0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_240BB78C0();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_240BB6E90();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_240BB7970();
    __break(1u);
LABEL_14:
    uint64_t result = sub_240BB78C0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_240A38E8C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_240A38EF4();
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

void sub_240A38EF4()
{
  if (!qword_26AFD99D0)
  {
    unint64_t v0 = sub_240BB7AB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD99D0);
    }
  }
}

uint64_t sub_240A38F4C(char a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v23 = a2;
  uint64_t v4 = sub_240BB56E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A39410(0, &qword_26AFD7BC0, MEMORY[0x263F44998]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unint64_t v13 = (char *)&v23 - v12;
  if (!a1)
  {
    sub_240A3951C();
    swift_getKeyPath();
    swift_getKeyPath();
    os_log_type_t v24 = v2;
    id v17 = v2;
    sub_240BB35D0();

    swift_release();
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4))
    {
      uint64_t v15 = (void (*)(uint64_t))MEMORY[0x263F44998];
      uint64_t v16 = (uint64_t)v13;
      goto LABEL_7;
    }
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v13, v4);
    uint64_t v21 = (void (*)(uint64_t))MEMORY[0x263F44998];
    uint64_t v22 = (uint64_t)v13;
LABEL_14:
    sub_240A395A0(v22, &qword_26AFD7BC0, v21);
    char v18 = sub_240BB56D0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v18 & 1;
  }
  if (a1 == 1)
  {
    sub_240A3951C();
    swift_getKeyPath();
    swift_getKeyPath();
    os_log_type_t v24 = v2;
    id v14 = v2;
    sub_240BB35D0();

    swift_release();
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4))
    {
      uint64_t v15 = (void (*)(uint64_t))MEMORY[0x263F44998];
      uint64_t v16 = (uint64_t)v11;
LABEL_7:
      sub_240A395A0(v16, &qword_26AFD7BC0, v15);
      char v18 = 1;
      return v18 & 1;
    }
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v11, v4);
    uint64_t v21 = (void (*)(uint64_t))MEMORY[0x263F44998];
    uint64_t v22 = (uint64_t)v11;
    goto LABEL_14;
  }
  char v18 = 1;
  if (v23(1)) {
    return v18 & 1;
  }
  uint64_t v19 = v23;

  return v19(0);
}

void sub_240A39304(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240BB75E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_240A39358(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_240A393BC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240BB75E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_240A39410(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240BB75E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_240A39464(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_240A394C8(char a1)
{
  return sub_240A38F4C(a1, (uint64_t (*)(uint64_t))sub_240A394C8);
}

unint64_t sub_240A394E0()
{
  unint64_t result = qword_26AFD8FD0;
  if (!qword_26AFD8FD0)
  {
    type metadata accessor for HeartPromotionAvailability();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD8FD0);
  }
  return result;
}

void sub_240A3951C()
{
  if (!qword_26AFD7BA0)
  {
    type metadata accessor for HeartPromotionAvailability();
    sub_240A39410(255, &qword_26AFD7BC0, MEMORY[0x263F44998]);
    unint64_t v0 = sub_240BB35F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD7BA0);
    }
  }
}

uint64_t sub_240A395A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_240A39410(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_240A395FC(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_240A39634(unsigned __int8 a1)
{
  if (a1 > 1u) {
    goto LABEL_5;
  }
  if (sub_240A382AC(2) > 1u)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    char v2 = 0;
    return v2 & 1;
  }
  char v1 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  char v2 = v1 ^ 1;
  return v2 & 1;
}

unsigned char *initializeBufferWithCopyOfBuffer for AFibBurdenOnboardingStage(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

_WORD *initializeBufferWithCopyOfBuffer for HeartPromotionResult(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t destroy for CenteredLabelWithSpinnerContentConfiguration()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_240A39704(unsigned __int8 *a1)
{
  return *a1;
}

_DWORD *initializeBufferWithCopyOfBuffer for HeartFeaturePromotionResult(_DWORD *result, _DWORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t sub_240A39718()
{
  return sub_240A35A80(v0);
}

unint64_t sub_240A39720()
{
  return 0xD000000000000016;
}

uint64_t storeEnumTagSinglePayload for HeartPromotionResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65282 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65282 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 254;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for HeartPromotionResult(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 65282 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65282 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65282;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65282;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65282;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t sub_240A3989C()
{
  return swift_release();
}

uint64_t sub_240A398A4()
{
  return swift_release();
}

uint64_t sub_240A398AC()
{
  return swift_release();
}

uint64_t sub_240A398B4()
{
  return swift_release();
}

uint64_t sub_240A398BC()
{
  return swift_release();
}

uint64_t sub_240A398C4()
{
  return swift_release();
}

uint64_t sub_240A398CC()
{
  return swift_release();
}

uint64_t sub_240A398D4()
{
  return swift_release();
}

uint64_t sub_240A398DC()
{
  return swift_release();
}

uint64_t sub_240A398E4()
{
  return swift_release();
}

uint64_t sub_240A398EC()
{
  return swift_release();
}

uint64_t sub_240A398F4()
{
  return swift_release();
}

uint64_t sub_240A398FC()
{
  return swift_release();
}

uint64_t sub_240A39904()
{
  return swift_release();
}

uint64_t sub_240A3990C()
{
  return swift_release();
}

uint64_t sub_240A39914()
{
  return swift_release();
}

uint64_t sub_240A3991C()
{
  return swift_release();
}

uint64_t sub_240A39924()
{
  return swift_release();
}

uint64_t sub_240A3992C()
{
  return swift_release();
}

uint64_t sub_240A39934()
{
  return swift_release();
}

uint64_t sub_240A3993C()
{
  return swift_release();
}

uint64_t sub_240A39944()
{
  return swift_release();
}

uint64_t sub_240A3994C()
{
  return swift_release();
}

uint64_t sub_240A39954()
{
  return swift_release();
}

uint64_t sub_240A3995C()
{
  return swift_release();
}

uint64_t sub_240A39964()
{
  return swift_release();
}

uint64_t sub_240A3996C()
{
  return swift_release();
}

uint64_t sub_240A39974()
{
  return swift_release();
}

uint64_t sub_240A3997C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_240A3998C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_240A3999C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_240A399AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_240A399BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_240A399CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_240A399DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_240A399EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_240A399FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_240A39A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_240A39A1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_240A39A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_240A39A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_240A39A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_240A39A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_240A39A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_240A39A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_240A39A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_240A39A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_240A39AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_240A39ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_240A39ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_240A39ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_240A39AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_240A39AFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_240A39B0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_240A39B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_240A39B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

id sub_240A39B3C(id a1)
{
  return a1;
}

void sub_240A39B48()
{
  if (!qword_26AFD7678)
  {
    sub_240A34DC4(255, &qword_26AFD75E0);
    sub_240A49AC0();
    unint64_t v0 = sub_240BB7C20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD7678);
    }
  }
}

uint64_t sub_240A39BC8(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_240A39C18(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_240BB7AB0();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_240A39C60(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_240A39CAC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_240A39CF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x263F8D310]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_240A39D48(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_240A39D94()
{
  if (!qword_26AFD8BA8)
  {
    sub_240A39BC8(255, &qword_26AFD7D58);
    unint64_t v0 = sub_240BB7AB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD8BA8);
    }
  }
}

void sub_240A39DFC()
{
  if (!qword_26AFD7B50)
  {
    sub_240A3B240();
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_240BB7840();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD7B50);
    }
  }
}

uint64_t sub_240A39E64(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      sub_240A3FD54(0, a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_240BB7970();
  __break(1u);
  return result;
}

uint64_t sub_240A39F7C(uint64_t a1)
{
  return sub_240A32180(a1, (unint64_t *)&qword_26AFD9930, 0x263F0A6E8, (unint64_t *)&qword_26AFD9938);
}

void sub_240A39F98(uint64_t a1, unint64_t a2, char a3, unint64_t *a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  unint64_t v11 = *(void *)(*v7 + 16);
  unint64_t v12 = *(void *)(*v7 + 24);
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v13 = v11 + 1;
  if (a3)
  {
    sub_240B8E508(v13, a4, a5, a6, a7);
  }
  else
  {
    if (v12 > v11)
    {
      sub_240A23E58(a4, a5, a6, a7);
      goto LABEL_14;
    }
    sub_240B8F4D4(v13, a4, a5, a6, a7);
  }
  uint64_t v14 = *v7;
  uint64_t v15 = sub_240BB74F0();
  uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
  a2 = v15 & ~v16;
  if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_240A34DC4(0, a5);
    id v17 = *(id *)(*(void *)(v14 + 48) + 8 * a2);
    char v18 = sub_240BB7500();

    if (v18)
    {
LABEL_13:
      sub_240BB7B20();
      __break(1u);
    }
    else
    {
      uint64_t v19 = ~v16;
      while (1)
      {
        a2 = (a2 + 1) & v19;
        if (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v20 = *(id *)(*(void *)(v14 + 48) + 8 * a2);
        char v21 = sub_240BB7500();

        if (v21) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v22 = *v7;
  *(void *)(*v7 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v22 + 48) + 8 * a2) = a1;
  uint64_t v23 = *(void *)(v22 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24) {
    __break(1u);
  }
  else {
    *(void *)(v22 + 16) = v25;
  }
}

void type metadata accessor for CMVO2MaxRetrocomputeStatus(uint64_t a1)
{
}

void sub_240A3A180(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_240A34DC4(255, a3);
    unint64_t v4 = sub_240BB75E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_240A3A1D8()
{
  unint64_t result = qword_26AFD9940;
  if (!qword_26AFD9940)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD9940);
  }
  return result;
}

void sub_240A3A218(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_240A3A264()
{
  return sub_240A33AC8((unint64_t *)&unk_26AFD8B60, MEMORY[0x263F44B10]);
}

BOOL sub_240A3A298(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_240A3A2AC(void *a1, void *a2)
{
  return sub_240A23B6C(a1, a2, (unint64_t *)&qword_26AFD9930, 0x263F0A6E8, &qword_26AFD9998, (unint64_t *)&qword_26AFD9938);
}

void sub_240A3A2D0(unint64_t a1)
{
}

void sub_240A3A2F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x263F8D4F8]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_240A3A344()
{
  unint64_t result = qword_26AFD98E8;
  if (!qword_26AFD98E8)
  {
    sub_240A2B29C(255, &qword_26AFD98E0, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD98E8);
  }
  return result;
}

void sub_240A3A3B8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_240A3A404(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x263F45828]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_240A3A454()
{
  if (!qword_26AFD98D8)
  {
    unint64_t v0 = sub_240BB6F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD98D8);
    }
  }
}

uint64_t sub_240A3A4AC(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240A2F3F0(255, a2, a3, MEMORY[0x263EFDE48]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240A3A510()
{
  if (!qword_26AFD8AF8)
  {
    sub_240A3FDFC(255, &qword_26AFD9850, (uint64_t (*)(uint64_t))sub_240A3A454, MEMORY[0x263EFDDF8]);
    sub_240A3AFDC();
    unint64_t v0 = sub_240BB6250();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD8AF8);
    }
  }
}

void sub_240A3A5A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_240A3A624(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_240A3A6A4()
{
  if (!qword_26AFD98A8)
  {
    sub_240A3B6CC();
    sub_240A30380(&qword_26AFD9810, (void (*)(uint64_t))sub_240A3B6CC);
    unint64_t v0 = sub_240BB6250();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD98A8);
    }
  }
}

unint64_t sub_240A3A738()
{
  unint64_t result = qword_26AFD98A0;
  if (!qword_26AFD98A0)
  {
    sub_240A3A5A4(255, (unint64_t *)&qword_26AFD98A8, (uint64_t (*)(uint64_t))sub_240A3B6CC, sub_240A3B758, MEMORY[0x263EFDE30]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD98A0);
  }
  return result;
}

void sub_240A3A7D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t, unint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_240A317B8(255, (unint64_t *)&qword_26AFD97E8, MEMORY[0x263EFDCF0]);
    uint64_t v8 = v7;
    uint64_t v9 = sub_240A31E28((unint64_t *)&qword_26AFD97E0, (unint64_t *)&qword_26AFD97E8, v6);
    unint64_t v10 = a3(a1, v8, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_240A3A890(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_240A31828(255, (unint64_t *)&qword_26AFD97E8, (void (*)(uint64_t))sub_240A3FDA4);
    uint64_t v7 = v6;
    uint64_t v8 = sub_240A31E6C((unint64_t *)&qword_26AFD97E0, (unint64_t *)&qword_26AFD97E8, (void (*)(uint64_t))sub_240A3FDA4);
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_240A3A938(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_240A3A9B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_240A3B984();
    uint64_t v7 = v6;
    uint64_t v8 = sub_240A31F04((unint64_t *)&qword_26AFD97E0, (void (*)(uint64_t))sub_240A3B984);
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_240A3AA54(uint64_t a1)
{
}

uint64_t sub_240A3AA74(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240A3A7D4(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A3AAB8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240A3A890(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_240A3AAFC()
{
  unint64_t result = qword_26AFD9880;
  if (!qword_26AFD9880)
  {
    sub_240A3A938(255, &qword_26AFD9888, (uint64_t (*)(uint64_t))sub_240A3B984, (uint64_t (*)(void))sub_240A3B9FC, MEMORY[0x263EFDE30]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD9880);
  }
  return result;
}

void sub_240A3AB98()
{
  if (!qword_26AFD8AD8)
  {
    sub_240A3C258(255, &qword_26AFD8998, sub_240B42928, (void (*)(void))sub_240B42948);
    sub_240A3C554(&qword_26AFD8990, &qword_26AFD8998, sub_240B42928, (void (*)(void))sub_240B42948);
    unint64_t v0 = sub_240BB6250();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD8AD8);
    }
  }
}

uint64_t sub_240A3AC5C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240A3ACA4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    sub_240A3FDFC(255, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    uint64_t v7 = v6;
    uint64_t v8 = sub_240A39BC8(255, (unint64_t *)&qword_26AFD99E0);
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_240A3AD5C()
{
  if (!qword_26AFD8AD0)
  {
    sub_240A4958C();
    sub_240A49AC0();
    unint64_t v0 = sub_240BB6220();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD8AD0);
    }
  }
}

uint64_t sub_240A3ADCC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A3AE14(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240A3ACA4(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240A3AE58()
{
  if (!qword_26AFD9858)
  {
    unint64_t v0 = sub_240BB61F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD9858);
    }
  }
}

void sub_240A3AEB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_240A3AF14(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_240A3AF78(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_240A3AFDC()
{
  unint64_t result = qword_26AFD9848;
  if (!qword_26AFD9848)
  {
    sub_240A3AF78(255, &qword_26AFD9850, (uint64_t (*)(uint64_t))sub_240A3A454, MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD9848);
  }
  return result;
}

void sub_240A3B064(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_240A3B0C8()
{
  if (!qword_26AFD9838)
  {
    sub_240A39BC8(255, (unint64_t *)&qword_26AFD8FB0);
    unint64_t v0 = sub_240BB61F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD9838);
    }
  }
}

unint64_t sub_240A3B130()
{
  unint64_t result = qword_26AFD9830;
  if (!qword_26AFD9830)
  {
    sub_240A31F9C(255, (unint64_t *)&qword_26AFD9838, (uint64_t (*)(uint64_t))sub_240A3FDA4, MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD9830);
  }
  return result;
}

unint64_t sub_240A3B1B8()
{
  unint64_t result = qword_26AFD8A98;
  if (!qword_26AFD8A98)
  {
    sub_240A320B8(255, (unint64_t *)&unk_26AFD8AA0, (uint64_t (*)(uint64_t))sub_240A3FF50, MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD8A98);
  }
  return result;
}

void sub_240A3B240()
{
  if (!qword_26AFD8A90)
  {
    sub_240B37F80();
    unint64_t v0 = sub_240BB6190();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD8A90);
    }
  }
}

void sub_240A3B2A8()
{
  if (!qword_26AFD8A70)
  {
    sub_240A3AE58();
    sub_240A33A80((unint64_t *)&qword_26AFD7558, (void (*)(uint64_t))sub_240A3AE58);
    unint64_t v0 = sub_240BB6110();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD8A70);
    }
  }
}

void sub_240A3B33C()
{
  if (!qword_26AFD8A68)
  {
    sub_240A3C5A4();
    sub_240A33A80(&qword_26AFD8948, (void (*)(uint64_t))sub_240A3C5A4);
    unint64_t v0 = sub_240BB6110();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD8A68);
    }
  }
}

void sub_240A3B3D0(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  if (!*a2)
  {
    sub_240A54844(255, a3, a4);
    unint64_t v5 = sub_240BB6100();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_240A3B43C()
{
  unint64_t result = qword_26AFD7B40;
  if (!qword_26AFD7B40)
  {
    sub_240A3B3D0(255, &qword_26AFD7B48, (unint64_t *)&unk_26AFD7B60, (unint64_t *)&unk_26AFD75E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD7B40);
  }
  return result;
}

unint64_t sub_240A3B4B4()
{
  unint64_t result = qword_26AFD7548;
  if (!qword_26AFD7548)
  {
    sub_240A3B3D0(255, (unint64_t *)&qword_26AFD7550, (unint64_t *)&qword_26AFD7678, &qword_26AFD75E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD7548);
  }
  return result;
}

void sub_240A3B52C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    sub_240B42A40();
    unint64_t v7 = a3(a1, v6, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_240A3B59C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240A3B52C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_240A3B5E0()
{
  unint64_t result = qword_26AFD7538;
  if (!qword_26AFD7538)
  {
    sub_240A255FC(255, &qword_26AFD7540, (uint64_t)&unk_26AFD75E8, 0x263F0A1C0, (void (*)(uint64_t, uint64_t, uint64_t))sub_240A34DC4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD7538);
  }
  return result;
}

void sub_240A3B664()
{
  if (!qword_26AFD7530)
  {
    unint64_t v0 = sub_240BB6100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD7530);
    }
  }
}

void sub_240A3B6CC()
{
  if (!qword_26AFD9818)
  {
    sub_240A57E80(255, (unint64_t *)&qword_26AFD98D8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
    unint64_t v0 = sub_240BB6100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD9818);
    }
  }
}

uint64_t sub_240A3B758()
{
  return sub_240A209E4(&qword_26AFD9810, (void (*)(uint64_t))sub_240A3B6CC);
}

void sub_240A3B78C()
{
  if (!qword_26AFD7B38)
  {
    unint64_t v0 = sub_240BB6100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD7B38);
    }
  }
}

uint64_t sub_240A3B7F4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240A3B844(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240A3B844(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_240BB6100();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_240A3B8A0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240A21CBC(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A3B8E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_240A3B92C()
{
  unint64_t result = qword_26AFD8A30;
  if (!qword_26AFD8A30)
  {
    sub_240A22390();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD8A30);
  }
  return result;
}

void sub_240A3B984()
{
  if (!qword_26AFD97E8)
  {
    sub_240A39BC8(255, (unint64_t *)&qword_26AFD8FB0);
    unint64_t v0 = sub_240BB6100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD97E8);
    }
  }
}

unint64_t sub_240A3B9FC()
{
  unint64_t result = qword_26AFD97E0;
  if (!qword_26AFD97E0)
  {
    sub_240A255FC(255, (unint64_t *)&qword_26AFD97E8, (uint64_t)&qword_26AFD8FB0, MEMORY[0x263F459E0], (void (*)(uint64_t, uint64_t, uint64_t))sub_240A39BC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD97E0);
  }
  return result;
}

void sub_240A3BA80(uint64_t a1)
{
}

uint64_t sub_240A3BAA0()
{
  return sub_240A2E4A8(&qword_26AFD7518, sub_240A3BA80);
}

void sub_240A3BAD4(uint64_t a1)
{
}

void sub_240A3BAF4()
{
  if (!qword_26AFD7510)
  {
    sub_240A54EE4();
    sub_240A54FA0();
    sub_240A255B4(&qword_26AFD7470, (void (*)(uint64_t))sub_240A54EE4);
    sub_240A255B4(&qword_26AFD7568, (void (*)(uint64_t))sub_240A54FA0);
    unint64_t v0 = sub_240BB60A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD7510);
    }
  }
}

void sub_240A3BBE0()
{
  if (!qword_26AFD9798)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, unint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_240A317B8(255, (unint64_t *)&qword_26AFD97E8, MEMORY[0x263EFDCF0]);
    sub_240A31E28((unint64_t *)&qword_26AFD97E0, (unint64_t *)&qword_26AFD97E8, v0);
    unint64_t v1 = sub_240BB6050();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AFD9798);
    }
  }
}

void sub_240A3BCA0()
{
  if (!qword_26AFD74F0)
  {
    sub_240A2DEB4(255, &qword_26AFD74B8, sub_240A3BA80, (void (*)(uint64_t))sub_240A3FDA4, (void (*)(void))sub_240A3BAA0);
    sub_240A3CCE8();
    unint64_t v0 = sub_240BB6040();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD74F0);
    }
  }
}

void sub_240A3BD48(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  if (!*a2)
  {
    sub_240A2F3F0(255, a3, a4, MEMORY[0x263EFDE48]);
    sub_240A3A4AC(a5, a3, a4);
    unint64_t v9 = sub_240BB6040();
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_240A3BDE8()
{
  if (!qword_26AFD89D0)
  {
    unint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F44998];
    sub_240A31828(255, (unint64_t *)&qword_26AFD8A40, MEMORY[0x263F44998]);
    sub_240A31E6C((unint64_t *)&qword_26AFD8A30, (unint64_t *)&qword_26AFD8A40, v0);
    unint64_t v1 = sub_240BB6040();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AFD89D0);
    }
  }
}

void sub_240A3BE88()
{
  if (!qword_26AFD9788)
  {
    sub_240A255FC(255, (unint64_t *)&qword_26AFD97E8, (uint64_t)&qword_26AFD8FB0, MEMORY[0x263F459E0], (void (*)(uint64_t, uint64_t, uint64_t))sub_240A39BC8);
    sub_240A3B9FC();
    unint64_t v0 = sub_240BB6040();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD9788);
    }
  }
}

unint64_t sub_240A3BF18()
{
  unint64_t result = qword_26AFD89C0;
  if (!qword_26AFD89C0)
  {
    sub_240A334E4(255, &qword_26AFD89C8, MEMORY[0x263F44B10], sub_240A3A264, MEMORY[0x263EFDB60]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD89C0);
  }
  return result;
}

void sub_240A3BFB4()
{
  if (!qword_26AFD89B8)
  {
    sub_240A3BAF4();
    sub_240A3B3D0(255, (unint64_t *)&qword_26AFD7550, (unint64_t *)&qword_26AFD7678, &qword_26AFD75E0);
    sub_240A255B4(&qword_26AFD7508, (void (*)(uint64_t))sub_240A3BAF4);
    sub_240A3B4B4();
    unint64_t v0 = sub_240BB6030();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD89B8);
    }
  }
}

void sub_240A3C090()
{
  if (!qword_26AFD89A8)
  {
    sub_240A3CD84();
    sub_240A3FDFC(255, &qword_26AFD9850, (uint64_t (*)(uint64_t))sub_240A3A454, MEMORY[0x263EFDDF8]);
    sub_240A26420(&qword_26AFD88E8, (void (*)(uint64_t))sub_240A3CD84);
    sub_240A3AFDC();
    unint64_t v0 = sub_240BB6030();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD89A8);
    }
  }
}

void sub_240A3C17C()
{
  if (!qword_26AFD9770)
  {
    sub_240BB73C0();
    sub_240A31F9C(255, &qword_26AFD8FB8, (uint64_t (*)(uint64_t))sub_240A3FDA4, MEMORY[0x263F8D8F0]);
    sub_240A30380(&qword_26AFD9988, MEMORY[0x263F07CB0]);
    unint64_t v0 = sub_240BB6010();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD9770);
    }
  }
}

void sub_240A3C258(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_240A39BC8(255, (unint64_t *)&qword_26AFD8FB0);
    a4();
    unint64_t v6 = sub_240BB6010();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_240A3C2F0()
{
  if (!qword_26AFD74E8)
  {
    sub_240A3CE50(255, &qword_26AFD74A8, (void (*)(uint64_t))sub_240A3C73C, (void (*)(void))sub_240A3C7D4);
    sub_240A255FC(255, (unint64_t *)&qword_26AFD97E8, (uint64_t)&qword_26AFD8FB0, MEMORY[0x263F459E0], (void (*)(uint64_t, uint64_t, uint64_t))sub_240A39BC8);
    sub_240A3CEC0();
    unint64_t v0 = sub_240BB6010();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD74E8);
    }
  }
}

uint64_t sub_240A3C3C8()
{
  return sub_240A255B4(&qword_26AFD74E0, (void (*)(uint64_t))sub_240A3C2F0);
}

unint64_t sub_240A3C3FC()
{
  unint64_t result = qword_26AFD8980;
  if (!qword_26AFD8980)
  {
    sub_240A2DEB4(255, &qword_26AFD8988, (void (*)(uint64_t))sub_240A3CF48, sub_240A3FF50, (void (*)(void))sub_240A3CFDC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD8980);
  }
  return result;
}

void sub_240A3C498()
{
  if (!qword_26AFD8978)
  {
    sub_240A3CE50(255, &qword_26AFD88D0, (void (*)(uint64_t))sub_240A3B664, (void (*)(void))sub_240A54980);
    sub_240A39BC8(255, (unint64_t *)&qword_26AFD8FB0);
    sub_240A3D0CC();
    unint64_t v0 = sub_240BB6010();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD8978);
    }
  }
}

uint64_t sub_240A3C554(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240A3C258(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240A3C5A4()
{
  if (!qword_26AFD8950)
  {
    sub_240A3D8F8();
    sub_240A33A80(&qword_26AFD87F0, (void (*)(uint64_t))sub_240A3D8F8);
    unint64_t v0 = sub_240BB6010();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD8950);
    }
  }
}

void sub_240A3C640()
{
  if (!qword_26AFD74D8)
  {
    sub_240A3B3D0(255, (unint64_t *)&qword_26AFD7550, (unint64_t *)&qword_26AFD7678, &qword_26AFD75E0);
    sub_240A255FC(255, (unint64_t *)&qword_26AFD97E8, (uint64_t)&qword_26AFD8FB0, MEMORY[0x263F459E0], (void (*)(uint64_t, uint64_t, uint64_t))sub_240A39BC8);
    sub_240A3B4B4();
    unint64_t v0 = sub_240BB6010();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD74D8);
    }
  }
}

uint64_t sub_240A3C708()
{
  return sub_240A255B4(&qword_26AFD74D0, (void (*)(uint64_t))sub_240A3C640);
}

void sub_240A3C73C()
{
  if (!qword_26AFD74C8)
  {
    sub_240A255FC(255, &qword_26AFD7540, (uint64_t)&unk_26AFD75E8, 0x263F0A1C0, (void (*)(uint64_t, uint64_t, uint64_t))sub_240A34DC4);
    sub_240A3B5E0();
    unint64_t v0 = sub_240BB6010();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD74C8);
    }
  }
}

uint64_t sub_240A3C7D4()
{
  return sub_240A255B4(&qword_26AFD74C0, (void (*)(uint64_t))sub_240A3C73C);
}

void sub_240A3C808()
{
  if (!qword_26AFD7B28)
  {
    sub_240A3B78C();
    sub_240A3FDA4();
    sub_240A2E3D0(&qword_26AFD7B30, (void (*)(uint64_t))sub_240A3B78C);
    unint64_t v0 = sub_240BB6010();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD7B28);
    }
  }
}

void sub_240A3C8B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_240A3B844(255, &qword_26AFD97F8);
    uint64_t v7 = v6;
    unint64_t v8 = sub_240A3FDA4();
    uint64_t v9 = sub_240A3B7F4(&qword_26AFD97F0, &qword_26AFD97F8);
    unint64_t v10 = a3(a1, v7, v8, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_240A3C968()
{
  if (!qword_26AFD8928)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_240A21CBC(255, (unint64_t *)&qword_26AFD8A40, MEMORY[0x263EFDCF0]);
    sub_240A3A2F4(255, &qword_26AFD9910, MEMORY[0x263F8D8F0]);
    sub_240A3B8A0((unint64_t *)&qword_26AFD8A30, (unint64_t *)&qword_26AFD8A40, v0);
    unint64_t v1 = sub_240BB6010();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AFD8928);
    }
  }
}

uint64_t sub_240A3CA50(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240A3CA98()
{
  if (!qword_26AFD8918)
  {
    unint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F44998];
    sub_240A2DE50(255, (unint64_t *)&qword_26AFD8A40, MEMORY[0x263F44998]);
    sub_240A31F4C((unint64_t *)&qword_26AFD8A30, (unint64_t *)&qword_26AFD8A40, v0);
    unint64_t v1 = sub_240BB6010();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AFD8918);
    }
  }
}

void sub_240A3CB40()
{
  if (!qword_26AFD7B18)
  {
    unint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F44998];
    sub_240A31828(255, (unint64_t *)&qword_26AFD8A40, MEMORY[0x263F44998]);
    sub_240A31E6C((unint64_t *)&qword_26AFD8A30, (unint64_t *)&qword_26AFD8A40, v0);
    unint64_t v1 = sub_240BB6010();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AFD7B18);
    }
  }
}

void sub_240A3CBE8()
{
  if (!qword_26AFD8908)
  {
    sub_240A22390();
    sub_240A39BC8(255, (unint64_t *)&qword_26AFD8FB0);
    sub_240A3B92C();
    unint64_t v0 = sub_240BB6010();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD8908);
    }
  }
}

unint64_t sub_240A3CC74()
{
  unint64_t result = qword_26AFD8900;
  if (!qword_26AFD8900)
  {
    sub_240A29318(255, (unint64_t *)&qword_26AFD8908, (void (*)(uint64_t))sub_240A3FDA4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD8900);
  }
  return result;
}

unint64_t sub_240A3CCE8()
{
  unint64_t result = qword_26AFD74B0;
  if (!qword_26AFD74B0)
  {
    sub_240A2DEB4(255, &qword_26AFD74B8, sub_240A3BA80, (void (*)(uint64_t))sub_240A3FDA4, (void (*)(void))sub_240A3BAA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD74B0);
  }
  return result;
}

void sub_240A3CD84()
{
  if (!qword_26AFD88F0)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
    sub_240A3ACA4(255, (unint64_t *)&unk_26AFD8A20, MEMORY[0x263EFDCF0]);
    sub_240A3A454();
    sub_240A3AE14(&qword_26AFD8A18, (unint64_t *)&unk_26AFD8A20, v0);
    unint64_t v1 = sub_240BB6010();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AFD88F0);
    }
  }
}

void sub_240A3CE50(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_240BB5FF0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_240A3CEC0()
{
  unint64_t result = qword_26AFD74A0;
  if (!qword_26AFD74A0)
  {
    sub_240A3CE50(255, &qword_26AFD74A8, (void (*)(uint64_t))sub_240A3C73C, (void (*)(void))sub_240A3C7D4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD74A0);
  }
  return result;
}

void sub_240A3CF48()
{
  if (!qword_26AFD88E0)
  {
    sub_240A3CA98();
    sub_240A2E4A8(&qword_26AFD8910, (void (*)(uint64_t))sub_240A3CA98);
    unint64_t v0 = sub_240BB5FF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD88E0);
    }
  }
}

uint64_t sub_240A3CFDC()
{
  return sub_240A2E4A8(&qword_26AFD88D8, (void (*)(uint64_t))sub_240A3CF48);
}

void sub_240A3D010(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_240A3B664();
    uint64_t v7 = v6;
    uint64_t v8 = sub_240A33AC8(&qword_26AFD7528, (void (*)(uint64_t))sub_240A3B664);
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_240A3D0AC(uint64_t a1)
{
}

unint64_t sub_240A3D0CC()
{
  unint64_t result = qword_26AFD88C8;
  if (!qword_26AFD88C8)
  {
    sub_240A3CE50(255, &qword_26AFD88D0, (void (*)(uint64_t))sub_240A3B664, (void (*)(void))sub_240A54980);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD88C8);
  }
  return result;
}

unint64_t sub_240A3D154()
{
  unint64_t result = qword_26AFD7490;
  if (!qword_26AFD7490)
  {
    sub_240A3D1DC(255, &qword_26AFD7498, (void (*)(uint64_t))sub_240A3C640, (void (*)(void))sub_240A3C708);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD7490);
  }
  return result;
}

void sub_240A3D1DC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    sub_240A255FC(255, (unint64_t *)&qword_26AFD97E8, (uint64_t)&qword_26AFD8FB0, MEMORY[0x263F459E0], (void (*)(uint64_t, uint64_t, uint64_t))sub_240A39BC8);
    a3(255);
    sub_240A3B9FC();
    a4();
    unint64_t v7 = sub_240BB5FE0();
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_240A3D2A4()
{
  unint64_t result = qword_26AFD7480;
  if (!qword_26AFD7480)
  {
    sub_240A3D1DC(255, &qword_26AFD7488, (void (*)(uint64_t))sub_240A3C2F0, (void (*)(void))sub_240A3C3C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD7480);
  }
  return result;
}

void sub_240A3D32C()
{
  if (!qword_26AFD88B0)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDE20];
    sub_240A3ACA4(255, (unint64_t *)&qword_26AFD8AD0, MEMORY[0x263EFDE20]);
    sub_240A3AE14(&qword_26AFD8AC8, (unint64_t *)&qword_26AFD8AD0, v0);
    unint64_t v1 = sub_240BB5FB0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AFD88B0);
    }
  }
}

void sub_240A3D3E0()
{
  if (!qword_26AFD88A0)
  {
    sub_240B1ED10();
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_240A21CBC(255, (unint64_t *)&qword_26AFD8A40, MEMORY[0x263EFDCF0]);
    sub_240A3CA50(&qword_26AFD89F8, (void (*)(uint64_t))sub_240B1ED10);
    sub_240A3B8A0((unint64_t *)&qword_26AFD8A30, (unint64_t *)&qword_26AFD8A40, v0);
    unint64_t v1 = sub_240BB5FA0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AFD88A0);
    }
  }
}

void sub_240A3D4EC()
{
  if (!qword_26AFD9750)
  {
    sub_240A3C17C();
    sub_240A3FDA4();
    sub_240A30380(&qword_26AFD9768, (void (*)(uint64_t))sub_240A3C17C);
    unint64_t v0 = sub_240BB5F90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD9750);
    }
  }
}

void sub_240A3D598()
{
  if (!qword_26AFD8858)
  {
    sub_240A3B240();
    sub_240A39B48();
    sub_240A21F88((unint64_t *)&unk_26AFD8A80, (void (*)(uint64_t))sub_240A3B240);
    unint64_t v0 = sub_240BB5F90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD8858);
    }
  }
}

void sub_240A3D644()
{
  if (!qword_26AFD7B08)
  {
    sub_240A3B3D0(255, &qword_26AFD7B48, (unint64_t *)&unk_26AFD7B60, (unint64_t *)&unk_26AFD75E8);
    sub_240A34DC4(255, (unint64_t *)&unk_26AFD75E8);
    sub_240A3B43C();
    unint64_t v0 = sub_240BB5F90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD7B08);
    }
  }
}

void sub_240A3D6F0()
{
  if (!qword_26AFD8838)
  {
    sub_240A3B844(255, &qword_26AFD8A50);
    sub_240A3FDA4();
    sub_240A3B7F4(&qword_26AFD8A48, &qword_26AFD8A50);
    unint64_t v0 = sub_240BB5F90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD8838);
    }
  }
}

uint64_t sub_240A3D79C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240A3C8B4(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240A3D7E0()
{
  if (!qword_26AFD8828)
  {
    sub_240A22390();
    sub_240A358F0((unint64_t *)&qword_26AFD8A30, (void (*)(uint64_t))sub_240A22390);
    unint64_t v0 = sub_240BB5F90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD8828);
    }
  }
}

void sub_240A3D87C(uint64_t a1)
{
}

uint64_t sub_240A3D8C4()
{
  return sub_240A33AC8(&qword_26AFD8810, sub_240A3D87C);
}

void sub_240A3D8F8()
{
  if (!qword_26AFD87F8)
  {
    sub_240A3B664();
    sub_240A33A80(&qword_26AFD7528, (void (*)(uint64_t))sub_240A3B664);
    unint64_t v0 = sub_240BB5F70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD87F8);
    }
  }
}

uint64_t type metadata accessor for ElectrocardiogramRecordingOnboardingPromotionConfigurationProvider()
{
  return self;
}

uint64_t sub_240A3D9C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F45580];
  uint64_t v3 = sub_240BB3050();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

unint64_t sub_240A3DA34()
{
  return 0xD000000000000028;
}

unint64_t sub_240A3DA50()
{
  unint64_t result = qword_26AFD86E0;
  if (!qword_26AFD86E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD86E0);
  }
  return result;
}

unint64_t sub_240A3DAA4()
{
  unint64_t result = qword_26AFD7AF8;
  if (!qword_26AFD7AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD7AF8);
  }
  return result;
}

uint64_t sub_240A3DAFC(uint64_t a1)
{
  unint64_t v2 = sub_240A3DAA4();

  return MEMORY[0x270F32880](a1, v2);
}

uint64_t type metadata accessor for ElectrocardiogramRecordingHealthChecklistFeedItemProvider()
{
  return self;
}

uint64_t sub_240A3DB70(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F32880](a1, WitnessTable);
}

uint64_t type metadata accessor for CardioFitnessClassificationStatusGeneratorPipeline(uint64_t a1)
{
  return sub_240A3E6AC(a1, (uint64_t *)&unk_26AFD7AE0);
}

uint64_t sub_240A3DBF4@<X0>(uint64_t a1@<X8>)
{
  return sub_240A22568(a1);
}

uint64_t sub_240A3DC48()
{
  return swift_retain();
}

uint64_t sub_240A3DC5C@<X0>(uint64_t a1@<X8>)
{
  return sub_240A3DBF4(a1);
}

uint64_t type metadata accessor for AFibBurdenNotificationSettingsGeneratorPipeline()
{
  uint64_t result = qword_26AFD73B0;
  if (!qword_26AFD73B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240A3DCCC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_240BB32A0() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_240A20260(v4, a1);
}

uint64_t sub_240A3DD68()
{
  return swift_retain();
}

uint64_t sub_240A3DD7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC5Heart47AFibBurdenNotificationSettingsGeneratorPipeline_domain;
  uint64_t v4 = sub_240BB3240();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for CardioFitnessHealthChecklistFeedItemProvider()
{
  return self;
}

uint64_t sub_240A3DE18()
{
  uint64_t v0 = sub_240A34CA4();
  uint64_t v1 = sub_240A39F7C(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_240A3DE84()
{
  return sub_240A3DE18();
}

uint64_t sub_240A3DEA8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F32880](a1, WitnessTable);
}

unint64_t sub_240A3DF0C()
{
  return 0xD00000000000001ALL;
}

uint64_t type metadata accessor for CardioFitnessRetroComputeGeneratorPipeline()
{
  uint64_t result = qword_26AFD72D0;
  if (!qword_26AFD72D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240A3DF74()
{
  return swift_retain();
}

uint64_t sub_240A3DF88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC5Heart42CardioFitnessRetroComputeGeneratorPipeline_domain;
  uint64_t v4 = sub_240BB3240();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_240A3E000@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_240BB7430();
  *a1 = result & 1;
  return result;
}

uint64_t sub_240A3E038@<X0>(unsigned char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_240BB32A0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v2 + 16);
  uint64_t v10 = *(void *)(v2 + v7);
  uint64_t v11 = *(void *)(v2 + ((v8 + 47) & 0xFFFFFFFFFFFFFFF8));

  return sub_240A279B8(a1, v9, v2 + v6, v10, (void *)(v2 + v8), v11, a2);
}

uint64_t sub_240A3E100@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_240BB32A0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = v2 + v6;
  uint64_t v9 = (void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *(void **)a1;
  LODWORD(a1) = *(unsigned __int8 *)(a1 + 8);
  uint64_t v11 = sub_240A3466C(v9, v9[3]);
  long long v12 = *((_OWORD *)v11 + 1);
  v14[0] = *(_OWORD *)v11;
  v14[1] = v12;
  v14[2] = *((_OWORD *)v11 + 2);
  uint64_t v15 = v11[6];
  uint64_t result = sub_240A2CED8(v8, v10, a1, (uint64_t)v14, v7);
  *a2 = result;
  return result;
}

uint64_t sub_240A3E1EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_240A3E24C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_240A3E2B4()
{
  if (!qword_26AFD84B0)
  {
    sub_240A39BC8(255, &qword_26AFD84A8);
    unint64_t v0 = sub_240BB75E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD84B0);
    }
  }
}

uint64_t type metadata accessor for ElectrocardiogramUpdateGeneratorPipeline()
{
  uint64_t result = qword_26AFD9640;
  if (!qword_26AFD9640) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240A3E368@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_240BB32A0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + v5);
  uint64_t v7 = *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_240A2F728(v1 + v4, v6, v7, a1);
}

uint64_t sub_240A3E414()
{
  return swift_retain();
}

uint64_t sub_240A3E428@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC5Heart40ElectrocardiogramUpdateGeneratorPipeline_domain;
  uint64_t v4 = sub_240BB3240();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_240A3E4A0()
{
  unint64_t result = qword_26AFDA048;
  if (!qword_26AFDA048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFDA048);
  }
  return result;
}

unint64_t sub_240A3E4F4()
{
  unint64_t result = qword_26AFDA040;
  if (!qword_26AFDA040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFDA040);
  }
  return result;
}

uint64_t type metadata accessor for AFibBurdenLifeFactorsTileViewController()
{
  return self;
}

uint64_t type metadata accessor for CardioFitnessPromotionFeedItemProvider()
{
  return self;
}

uint64_t sub_240A3E590()
{
  uint64_t v0 = sub_240A34CA4();
  uint64_t v1 = sub_240A32180(v0, (unint64_t *)&qword_26AFD9930, 0x263F0A6E8, (unint64_t *)&qword_26AFD9938);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_240A3E614()
{
  return sub_240A3E590();
}

uint64_t sub_240A3E638(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F34878](a1, WitnessTable);
}

uint64_t sub_240A3E69C()
{
  return sub_240BB6DE0();
}

uint64_t sub_240A3E6AC(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for AtrialFibrillationPromotionGenerator()
{
  uint64_t result = qword_26AFD9568;
  if (!qword_26AFD9568) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for AFibBurdenRescindedGeneratorPipeline()
{
  uint64_t result = qword_26AFD71A8;
  if (!qword_26AFD71A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240A3E77C()
{
  return swift_retain();
}

uint64_t sub_240A3E790@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC5Heart36AFibBurdenRescindedGeneratorPipeline_domain;
  uint64_t v4 = sub_240BB3240();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for RelatedSampleTypesGeneratorPipeline()
{
  uint64_t result = qword_26AFD83E8;
  if (!qword_26AFD83E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240A3E854()
{
  return swift_retain();
}

uint64_t sub_240A3E868@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC5Heart35RelatedSampleTypesGeneratorPipeline_domain;
  uint64_t v4 = sub_240BB3240();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for LowCardioFitnessArticleDataProvider()
{
  uint64_t result = qword_26AFD7A70;
  if (!qword_26AFD7A70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for ElectrocardiogramUpdateAvailability(uint64_t a1)
{
  return sub_240A3E6AC(a1, (uint64_t *)&unk_26AFD83C8);
}

id sub_240A3E94C(uint64_t a1)
{
  return sub_240A1E924(a1, v1);
}

void sub_240A3E954(void *a1, void *a2)
{
  sub_240A30800(a1, a2, *(void *)(v2 + 16));
}

uint64_t type metadata accessor for CMVO2MaxRetrocomputeStatePublisher()
{
  return self;
}

unsigned char *sub_240A3E980@<X0>(unsigned char *result@<X0>, uint64_t a2@<X8>)
{
  return sub_240A3E988(result, a2);
}

unsigned char *sub_240A3E988@<X0>(unsigned char *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void **)result;
  if (result[8] == 1)
  {
    uint64_t result = v3;
    char v4 = 1;
  }
  else if (v3)
  {
    uint64_t result = v3;
    char v4 = 0;
  }
  else
  {
    char v4 = -1;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v4;
  return result;
}

uint64_t type metadata accessor for FeatureStatusFeedItemRequirement()
{
  return self;
}

uint64_t sub_240A3EA08()
{
  return sub_240A2C974();
}

uint64_t sub_240A3EA2C(uint64_t a1)
{
  uint64_t updated = type metadata accessor for ElectrocardiogramUpdateGenerator();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(updated - 8) + 8))(a1, updated);
  return a1;
}

uint64_t sub_240A3EA88(uint64_t a1, uint64_t a2)
{
  uint64_t updated = type metadata accessor for ElectrocardiogramUpdateGenerator();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 16))(a2, a1, updated);
  return a2;
}

uint64_t type metadata accessor for ElectrocardiogramUpdateGenerator()
{
  uint64_t result = qword_26AFD9218;
  if (!qword_26AFD9218) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for AFibFeaturesPromotionGenerator()
{
  uint64_t result = qword_26AFD8148;
  if (!qword_26AFD8148) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for AFibBurdenPromotionGenerator()
{
  uint64_t result = qword_26AFD8050;
  if (!qword_26AFD8050) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for RelatedSampleTypesGenerator.Environment(uint64_t a1)
{
  return sub_240A3E6AC(a1, (uint64_t *)&unk_26AFD7F88);
}

uint64_t type metadata accessor for AFibBurdenSettingsManager()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for AFibBurdenRescindedState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

unint64_t sub_240A3ECE0()
{
  unint64_t result = qword_26AFD7180;
  if (!qword_26AFD7180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD7180);
  }
  return result;
}

void sub_240A3ED34(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_240A3ED98(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240BB75E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_240A3EDEC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t _s14descr26F502E21O15SettingsContentVMa()
{
  uint64_t result = qword_26AFD7E08;
  if (!qword_26AFD7E08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa(uint64_t a1)
{
  return sub_240A3E6AC(a1, qword_26AFD7D60);
}

uint64_t type metadata accessor for HeartFeatureStatusAvailabilityProvider()
{
  return self;
}

uint64_t sub_240A3EEE0(uint64_t a1)
{
  sub_240A373A0();
  uint64_t v4 = v1
     + ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));

  return sub_240A1FE38(a1, v4);
}

uint64_t type metadata accessor for HeartFeatureStatusGeneratorPipeline()
{
  uint64_t result = qword_26AFD90A0;
  if (!qword_26AFD90A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240A3EF9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_240BB32A0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + v5);
  uint64_t v7 = *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_240A2AD24(v1 + v4, v6, v7, a1);
}

uint64_t sub_240A3F044()
{
  return swift_retain();
}

uint64_t sub_240A3F058@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC5Heart35HeartFeatureStatusGeneratorPipeline_domain;
  uint64_t v4 = sub_240BB3240();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_240A3F0D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_240BB32A0() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_240A2702C(a1, v6, a2);
}

uint64_t sub_240A3F150@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  sub_240BB32A0();

  return sub_240A21548(a1, a2);
}

uint64_t type metadata accessor for HeartPromotionGeneratorPipeline()
{
  uint64_t result = qword_26AFD8FE0;
  if (!qword_26AFD8FE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240A3F21C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_240BB32A0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + ((((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_240A3188C(v1 + v4, v5, a1);
}

uint64_t sub_240A3F2C4()
{
  return swift_retain();
}

uint64_t sub_240A3F2D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC5Heart31HeartPromotionGeneratorPipeline_domain;
  uint64_t v4 = sub_240BB3240();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_240A3F350@<X0>(__int16 a1@<W0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_240BB32A0() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_240A1F0CC(a1, v6, a2);
}

uint64_t sub_240A3F3D0@<X0>(_WORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_240BB32A0() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_240A1E7E8(a1, v6, a2);
}

uint64_t sub_240A3F450@<X0>(unsigned int *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_240BB32A0() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_240A2693C(a1, v6, a2);
}

unint64_t sub_240A3F4D0()
{
  unint64_t result = qword_26AFD9F20;
  if (!qword_26AFD9F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD9F20);
  }
  return result;
}

unint64_t sub_240A3F524()
{
  unint64_t result = qword_26AFD9F18;
  if (!qword_26AFD9F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD9F18);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for HeartFeaturePromotionResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_DWORD *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 4) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 4) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 2;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for HeartFeaturePromotionResult(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && a1[4]) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 3;
  int v5 = v3 - 3;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t type metadata accessor for HeartPromotionAvailability()
{
  uint64_t result = qword_26AFD7168;
  if (!qword_26AFD7168) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240A3F64C(unsigned __int16 *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

unint64_t sub_240A3F678()
{
  unint64_t result = qword_26AFD7C40;
  if (!qword_26AFD7C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD7C40);
  }
  return result;
}

unint64_t sub_240A3F6CC()
{
  unint64_t result = qword_26AFD7A40;
  if (!qword_26AFD7A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD7A40);
  }
  return result;
}

uint64_t sub_240A3F724(uint64_t a1)
{
  unint64_t v2 = sub_240A3F6CC();

  return MEMORY[0x270F32880](a1, v2);
}

unint64_t sub_240A3F770()
{
  unint64_t result = qword_26AFD7C18;
  if (!qword_26AFD7C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD7C18);
  }
  return result;
}

unint64_t sub_240A3F7C4()
{
  unint64_t result = qword_26AFD7A38;
  if (!qword_26AFD7A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD7A38);
  }
  return result;
}

uint64_t sub_240A3F81C(uint64_t a1)
{
  unint64_t v2 = sub_240A3F7C4();

  return MEMORY[0x270F32880](a1, v2);
}

unint64_t sub_240A3F868()
{
  unint64_t result = qword_26AFD8F78;
  if (!qword_26AFD8F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD8F78);
  }
  return result;
}

unint64_t sub_240A3F8BC()
{
  unint64_t result = qword_26AFD8F70;
  if (!qword_26AFD8F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD8F70);
  }
  return result;
}

unint64_t sub_240A3F910()
{
  unint64_t result = qword_26AFD8F68;
  if (!qword_26AFD8F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD8F68);
  }
  return result;
}

unint64_t sub_240A3F964()
{
  unint64_t result = qword_26AFD8F60;
  if (!qword_26AFD8F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD8F60);
  }
  return result;
}

uint64_t initializeWithCopy for FeedItemContextPreviousFeedItemFetcherBox(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t sub_240A3FA14(uint64_t a1)
{
  return a1;
}

uint64_t sub_240A3FA68(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_240A3FAC4()
{
  if (!qword_26AFD7BE8)
  {
    sub_240B69574();
    unint64_t v0 = sub_240BB5850();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD7BE8);
    }
  }
}

uint64_t sub_240A3FB20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240A3FC88(a1, a2);
}

void sub_240A3FB28()
{
  if (!qword_26AFD7BC8)
  {
    type metadata accessor for HKHRAFibBurdenLoggingCategory(255);
    sub_240A20EAC(&qword_26AFD8B90, type metadata accessor for HKHRAFibBurdenLoggingCategory);
    sub_240A20EAC(&qword_26AFD8B98, type metadata accessor for HKHRAFibBurdenLoggingCategory);
    sub_240A20EAC(&qword_26AFD7630, type metadata accessor for HKHRAFibBurdenLoggingCategory);
    sub_240A20EAC((unint64_t *)&unk_26AFD7600, type metadata accessor for HKHRAFibBurdenLoggingCategory);
    sub_240A20EAC((unint64_t *)&unk_26AFD7620, type metadata accessor for HKHRAFibBurdenLoggingCategory);
    unint64_t v0 = sub_240BB5750();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD7BC8);
    }
  }
}

uint64_t sub_240A3FC88(uint64_t a1, uint64_t a2)
{
  sub_240A35CBC(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240A3FCEC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result & 1;
  return result;
}

uint64_t sub_240A3FD20()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  sub_240BB4850();
  return v1;
}

uint64_t sub_240A3FD54(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_240A3FDA4()
{
  unint64_t result = qword_26AFD8FB0;
  if (!qword_26AFD8FB0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD8FB0);
  }
  return result;
}

void sub_240A3FDFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_240A3FE60(uint64_t a1)
{
  sub_240A37560(0, &qword_26AFD7B90, &qword_26AFD8FA0, MEMORY[0x263F456E8], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240A3FEE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_240A3FF50(uint64_t a1)
{
}

uint64_t sub_240A3FF84(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_240A4C480(a1, a2);
  }
  return a1;
}

id sub_240A3FF98(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v7 = a4;
  id v8 = a5;
  uint64_t v9 = HKHeartRateLocalizedString();
  uint64_t v10 = NSString;
  uint64_t v11 = HKHeartRateLocalizedString();
  long long v12 = objc_msgSend(v10, "localizedStringWithFormat:", v11, a3);

  uint64_t v13 = [MEMORY[0x263F82418] alertControllerWithTitle:v9 message:v12 preferredStyle:1];
  uint64_t v14 = NSString;
  uint64_t v15 = HKHeartRateLocalizedString();
  uint64_t v16 = objc_msgSend(v14, "localizedStringWithFormat:", v15, a3);

  id v17 = (void *)MEMORY[0x263F82400];
  v27[0] = MEMORY[0x263EF8330];
  v27[1] = 3221225472;
  v27[2] = sub_240A401E8;
  v27[3] = &unk_2650DC880;
  id v28 = v7;
  uint64_t v29 = a3;
  id v18 = v7;
  uint64_t v19 = [v17 actionWithTitle:v16 style:0 handler:v27];
  id v20 = (void *)MEMORY[0x263F82400];
  char v21 = HKHeartRateLocalizedString();
  v25[0] = MEMORY[0x263EF8330];
  v25[1] = 3221225472;
  v25[2] = sub_240A401FC;
  v25[3] = &unk_2650DC8A8;
  id v26 = v8;
  id v22 = v8;
  uint64_t v23 = [v20 actionWithTitle:v21 style:1 handler:v25];

  [v13 addAction:v19];
  [v13 addAction:v23];

  return v13;
}

uint64_t sub_240A401E8(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(void *)(a1 + 40));
}

uint64_t sub_240A401FC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id HKNRDeviceCapabilityECG2UpgradeBackgroundDelivery()
{
  uint64_t v0 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"253F2ED0-FFC6-4D36-A387-B6965C9E4682"];

  return v0;
}

id HKNRDeviceCapabilityHeartRateV2()
{
  uint64_t v0 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"E17D2903-B868-4E6C-8E76-6D4939BEED44"];

  return v0;
}

uint64_t HKNRActivePairedDeviceSupportsECG2UpgradeBackgroundDelivery()
{
  uint64_t v0 = [MEMORY[0x263F57730] sharedInstance];
  uint64_t v1 = [v0 getActivePairedDevice];
  uint64_t v2 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"253F2ED0-FFC6-4D36-A387-B6965C9E4682"];
  uint64_t v3 = [v1 supportsCapability:v2];

  return v3;
}

uint64_t sub_240A404EC()
{
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v3 = sub_240BB2980();
  uint64_t v5 = v4;

  id v6 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v7 = sub_240BB2980();
  uint64_t v9 = v8;

  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v10 = (id)qword_26AFDECD8;
  uint64_t v11 = (void *)sub_240BB6DA0();
  id v12 = objc_msgSend(self, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v11, v10, 0, 0xE000000000000000);

  return MEMORY[0x270F32468](v3, v5, v7, v9, v12);
}

void sub_240A406EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_240BB3690();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = (void *)sub_240BB56F0();
  id v7 = objc_msgSend(v6, sel_unsatisfiedRequirementIdentifiers);

  type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(0);
  uint64_t v8 = sub_240BB6F10();

  uint64_t v23 = MEMORY[0x263F8EE88];
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F43620], v2);
  LOBYTE(v7) = sub_240BB3680();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v7)
  {
    sub_240B8D918(&v22, (id)*MEMORY[0x263F09718]);
  }
  if (*(unsigned char *)(v1
                + OBJC_IVAR____TtC5Heart46CardioFitnessAdvertisableFeatureSourceProvider_includeFeaturesMadeAvailableByBuddy) == 1)
  {
    sub_240B8D918(&v22, (id)*MEMORY[0x263F09628]);
  }
  unint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    unint64_t v10 = 0;
    uint64_t v11 = v23;
    unint64_t v21 = v9 - 1;
    id v12 = (void *)MEMORY[0x263F8EE78];
    do
    {
      if (v10 <= v9) {
        unint64_t v13 = v9;
      }
      else {
        unint64_t v13 = v10;
      }
      unint64_t v14 = v10;
      while (1)
      {
        if (v13 == v14)
        {
          __break(1u);
          return;
        }
        unint64_t v10 = v14 + 1;
        id v15 = *(id *)(v8 + 32 + 8 * v14);
        sub_240BB4850();
        char v16 = sub_240BAF9A0((uint64_t)v15, v11);
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0) {
          break;
        }

        ++v14;
        if (v9 == v10) {
          goto LABEL_20;
        }
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      id v22 = v12;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_240B0CB04(0, v12[2] + 1, 1);
        id v12 = v22;
      }
      unint64_t v19 = v12[2];
      unint64_t v18 = v12[3];
      if (v19 >= v18 >> 1)
      {
        sub_240B0CB04(v18 > 1, v19 + 1, 1);
        id v12 = v22;
      }
      void v12[2] = v19 + 1;
      v12[v19 + 4] = v15;
    }
    while (v21 != v14);
  }
LABEL_20:
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
}

uint64_t sub_240A409F8(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = *v4;
  uint64_t v18 = a3;
  sub_240A3A218(0, (unint64_t *)&qword_268C9E890, MEMORY[0x263F8D4F8], MEMORY[0x263F44B40]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v16 - v10;
  sub_240BB35A0();
  sub_240A3466C(v19, v19[3]);
  sub_240BB5760();
  swift_getObjectType();
  sub_240BB6DE0();
  sub_240BB7290();
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = v18;
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = v14;
  *(void *)(v13 + 32) = a4;
  *(unsigned char *)(v13 + 40) = a2;
  *(void *)(v13 + 48) = v17;
  swift_retain();
  swift_retain();
  sub_240BB7450();
  sub_240BB50A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_release();
  return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v19);
}

uint64_t sub_240A40C24(char a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5, int a6, uint64_t a7)
{
  int v36 = a6;
  uint64_t v37 = a4;
  sub_240A3A218(0, (unint64_t *)&qword_268C9E890, MEMORY[0x263F8D4F8], MEMORY[0x263F44B40]);
  uint64_t v13 = v12;
  uint64_t v34 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v32 - v14;
  sub_240A43988();
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v19 = MEMORY[0x24560BA20](a3 + 16);
  if (v19)
  {
    uint64_t v20 = (void *)v19;
    uint64_t v35 = a7;
    if (a1)
    {
      if (qword_26AFD9A18 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_240BB5990();
      sub_240A395FC(v21, (uint64_t)qword_26AFDEC70);
      id v22 = sub_240BB5970();
      os_log_type_t v23 = sub_240BB71A0();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = swift_slowAlloc();
        uint64_t v33 = a5;
        uint64_t v25 = (uint8_t *)v24;
        uint64_t v26 = swift_slowAlloc();
        uint64_t v39 = v26;
        *(_DWORD *)uint64_t v25 = 136446210;
        uint64_t v32 = v25 + 4;
        uint64_t v27 = sub_240BB7C80();
        uint64_t v38 = sub_240A38940(v27, v28, &v39);
        sub_240BB75F0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240A1B000, v22, v23, "[%{public}s] Notification defaults written and synced", v25, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24560B930](v26, -1, -1);
        uint64_t v29 = v25;
        a5 = v33;
        MEMORY[0x24560B930](v29, -1, -1);
      }

      if (v36)
      {
        sub_240BB35A0();
        sub_240A3466C(&v39, v41);
        sub_240BB5760();
        swift_getObjectType();
        sub_240BB6DE0();
        sub_240BB7290();
        unint64_t v30 = (void *)swift_allocObject();
        v30[2] = v37;
        v30[3] = a5;
        v30[4] = v35;
        swift_retain();
        sub_240BB7450();

        sub_240BB50A0();
        swift_release();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v13);
        return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v39);
      }
      sub_240BB3830();
      sub_240A2E388(&qword_268C9E8A0, MEMORY[0x263F437A8]);
      sub_240BB7C10();
    }
    else
    {
      if (a2)
      {
        swift_getErrorValue();
        sub_240BB7B60();
      }
      else
      {
        uint64_t v39 = 0;
        unint64_t v40 = 0xE000000000000000;
        sub_240BB77C0();
        sub_240BB6E70();
        sub_240BB7C80();
        sub_240BB6E70();
        swift_bridgeObjectRelease();
        sub_240BB6E70();
      }
      sub_240BB3820();
      swift_storeEnumTagMultiPayload();
    }
    v37(v18);
  }
  else
  {
    uint64_t v39 = 0;
    unint64_t v40 = 0xE000000000000000;
    sub_240BB77C0();
    sub_240BB6E70();
    sub_240BB7C80();
    sub_240BB6E70();
    swift_bridgeObjectRelease();
    sub_240BB6E70();
    sub_240BB3820();
    swift_storeEnumTagMultiPayload();
    v37(v18);
  }
  return sub_240A43A94((uint64_t)v18, (uint64_t (*)(void))sub_240A43988);
}

uint64_t sub_240A4119C(char a1, uint64_t a2, void (*a3)(char *))
{
  sub_240A43988();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    sub_240BB3830();
    sub_240A2E388(&qword_268C9E8A0, MEMORY[0x263F437A8]);
    sub_240BB7C10();
  }
  else
  {
    if (a2)
    {
      swift_getErrorValue();
      sub_240BB7B60();
    }
    else
    {
      v10[4] = 0;
      v10[5] = 0xE000000000000000;
      sub_240BB77C0();
      sub_240BB6E70();
      sub_240BB7C80();
      sub_240BB6E70();
      swift_bridgeObjectRelease();
      sub_240BB6E70();
    }
    sub_240BB3820();
    swift_storeEnumTagMultiPayload();
  }
  a3(v8);
  return sub_240A43A94((uint64_t)v8, (uint64_t (*)(void))sub_240A43988);
}

uint64_t sub_240A4135C()
{
  sub_240A43A94(v0 + OBJC_IVAR____TtC5Heart46CardioFitnessAdvertisableFeatureSourceProvider_currentCountry, (uint64_t (*)(void))sub_240A373A0);
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Heart46CardioFitnessAdvertisableFeatureSourceProvider_presentationLocation;
  uint64_t v2 = sub_240BB3690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_240A41420@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F43610];
  uint64_t v3 = sub_240BB3670();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

id sub_240A41494()
{
  return (id)*MEMORY[0x263F09730];
}

uint64_t sub_240A414A4@<X0>(uint64_t a1@<X8>)
{
  return sub_240A3783C(*v1 + OBJC_IVAR____TtC5Heart46CardioFitnessAdvertisableFeatureSourceProvider_currentCountry, a1);
}

uint64_t sub_240A414BC()
{
  return sub_240A404EC();
}

uint64_t sub_240A414D4()
{
  sub_240A406EC();
  return v0 & 1;
}

uint64_t sub_240A414FC()
{
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_240BB5990();
  sub_240A395FC(v0, (uint64_t)qword_26AFDEC70);
  type metadata accessor for CardioFitnessAdvertisableFeatureSourceProvider();
  return sub_240BB3590();
}

uint64_t sub_240A415B8(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_240A409F8(a1, a2, a3, a4);
}

unint64_t sub_240A415DC(uint64_t a1, char a2)
{
  return sub_240A43108(a2);
}

uint64_t variable initialization expression of ElectrocardiogramRecordingOnboardingPromotionConfiguration.prominence@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_240BB3340();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t variable initialization expression of TitleSubtitleView.$__lazy_storage_$_titleLabel()
{
  return 0;
}

uint64_t variable initialization expression of TitleSubtitleView.$__lazy_storage_$_subtitleLabel()
{
  return 0;
}

double variable initialization expression of TitleSubtitleView.item@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_240A41690()
{
  return type metadata accessor for CardioFitnessAdvertisableFeatureSourceProvider();
}

uint64_t type metadata accessor for CardioFitnessAdvertisableFeatureSourceProvider()
{
  uint64_t result = qword_268C9E7F8;
  if (!qword_268C9E7F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_240A416E4()
{
  sub_240A373A0();
  if (v0 <= 0x3F)
  {
    sub_240BB3690();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void type metadata accessor for HKProfileType(uint64_t a1)
{
}

void type metadata accessor for HKFeatureIdentifier(uint64_t a1)
{
}

void type metadata accessor for HKHRAFibBurdenLoggingCategory(uint64_t a1)
{
}

uint64_t sub_240A41830()
{
  return sub_240A2E388((unint64_t *)&unk_26AFD7610, type metadata accessor for HKHRAFibBurdenLoggingCategory);
}

uint64_t sub_240A41878(uint64_t a1, uint64_t a2)
{
  return sub_240A426C4(a1, a2, MEMORY[0x263F07B58]);
}

void sub_240A418AC(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_240A418B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

uint64_t sub_240A418CC()
{
  return MEMORY[0x270EF1C48](*v0);
}

uint64_t sub_240A418D4(uint64_t a1, uint64_t a2)
{
  int v6 = 0;
  char v7 = 1;
  uint64_t result = MEMORY[0x24560A2E0](a1, &v6);
  char v4 = v7;
  int v5 = v6;
  if (v7) {
    int v5 = 0;
  }
  *(_DWORD *)a2 = v5;
  *(unsigned char *)(a2 + 4) = v4;
  return result;
}

uint64_t sub_240A41928(uint64_t a1, uint64_t a2)
{
  int v7 = 0;
  char v8 = 1;
  char v3 = MEMORY[0x24560A2F0](a1, &v7);
  char v4 = v8;
  int v5 = v7;
  if (v8) {
    int v5 = 0;
  }
  *(_DWORD *)a2 = v5;
  *(unsigned char *)(a2 + 4) = v4;
  return v3 & 1;
}

void sub_240A41980(float *a1@<X8>)
{
  *a1 = MEMORY[0x24560A300]();
}

BOOL sub_240A419A8(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_240A419D8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_240A419EC(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_240A41A00(void *result)
{
  *v1 &= *result;
  return result;
}

uint64_t sub_240A41A14(uint64_t a1)
{
  uint64_t v2 = sub_240A2E388(&qword_268C9E9D8, type metadata accessor for HKError);

  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_240A41A80(uint64_t a1)
{
  uint64_t v2 = sub_240A2E388(&qword_268C9E9D8, type metadata accessor for HKError);

  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t sub_240A41AF0(uint64_t a1)
{
  uint64_t v2 = sub_240A2E388((unint64_t *)&qword_268C9EA10, type metadata accessor for HKError);

  return MEMORY[0x270EEF788](a1, v2);
}

id sub_240A41B5C()
{
  return *v0;
}

uint64_t sub_240A41B64@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void *sub_240A41B6C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_240A41B80@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

void *sub_240A41B94@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_240A41BC0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_240A41BE4(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_240A41BF8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_240A41C0C(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_240A41C20(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_240A41C34(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_240A41C48()
{
  return *v0 == 0;
}

void *sub_240A41C58(void *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_240A41C6C(uint64_t a1, id *a2)
{
  uint64_t result = sub_240BB6DC0();
  *a2 = 0;
  return result;
}

uint64_t sub_240A41CE4(uint64_t a1, id *a2)
{
  char v3 = sub_240BB6DD0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_240A41D64@<X0>(uint64_t *a1@<X8>)
{
  sub_240BB6DE0();
  uint64_t v2 = sub_240BB6DA0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_240A41DAC()
{
  return sub_240BB6DE0();
}

uint64_t sub_240A41DBC(uint64_t a1)
{
  uint64_t v2 = sub_240A2E388((unint64_t *)&qword_268C9EA10, type metadata accessor for HKError);

  return MEMORY[0x270EEF7E8](a1, v2);
}

uint64_t sub_240A41E28(uint64_t a1)
{
  uint64_t v2 = sub_240A2E388((unint64_t *)&qword_268C9EA10, type metadata accessor for HKError);

  return MEMORY[0x270EEF7A0](a1, v2);
}

uint64_t sub_240A41E94(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_240A2E388((unint64_t *)&qword_268C9EA10, type metadata accessor for HKError);
  id v5 = a1;

  return MEMORY[0x270EEF790](v5, a2, v4);
}

uint64_t sub_240A41F24()
{
  id v1 = *v0;
  uint64_t v2 = sub_240BB7510();

  return v2;
}

uint64_t sub_240A41F5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240A2E388((unint64_t *)&qword_268C9EA10, type metadata accessor for HKError);

  return MEMORY[0x270EEF7D0](a1, a2, v4);
}

uint64_t sub_240A41FD8()
{
  return sub_240BB7C00();
}

void *sub_240A42038@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_240A42048(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_240A42054@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_240A44748(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

void *sub_240A42094@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_240A420A0()
{
  sub_240A2E388((unint64_t *)&qword_268C9EA58, type metadata accessor for HKFeatureAvailabilityRequirementIdentifier);
  sub_240A2E388(&qword_268C9EA60, type metadata accessor for HKFeatureAvailabilityRequirementIdentifier);

  return sub_240BB7980();
}

uint64_t sub_240A4215C()
{
  sub_240A2E388(&qword_268C9EA68, type metadata accessor for HKFeatureAvailabilityContext);
  sub_240A2E388(&qword_268C9EA70, type metadata accessor for HKFeatureAvailabilityContext);

  return sub_240BB7980();
}

uint64_t sub_240A42218@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_240BB6DE0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_240A42244()
{
  sub_240A2E388(&qword_268C9E850, type metadata accessor for HKFeatureIdentifier);
  sub_240A2E388(&qword_268C9E858, type metadata accessor for HKFeatureIdentifier);

  return sub_240BB7980();
}

uint64_t sub_240A42300()
{
  return sub_240A2E388(&qword_268C9E818, type metadata accessor for HKFeatureIdentifier);
}

uint64_t sub_240A42348()
{
  return sub_240A2E388(&qword_268C9E820, type metadata accessor for HKFeatureIdentifier);
}

_DWORD *sub_240A42390@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

float sub_240A423A0@<S0>(_DWORD *a1@<X8>)
{
  float result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t sub_240A423AC()
{
  return sub_240BB7980();
}

uint64_t sub_240A42468()
{
  sub_240A2E388((unint64_t *)&qword_268C9EA48, type metadata accessor for Key);
  sub_240A2E388(&qword_268C9EA50, type metadata accessor for Key);

  return sub_240BB7980();
}

uint64_t sub_240A42524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240A2E388((unint64_t *)&qword_268C9EA10, type metadata accessor for HKError);

  return MEMORY[0x270EEF7B8](a1, a2, a3, v6);
}

uint64_t sub_240A425A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_240BB6DA0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_240A425F0()
{
  sub_240A2E388((unint64_t *)&qword_268C9EA38, type metadata accessor for OpenExternalURLOptionsKey);
  sub_240A2E388(&qword_268C9EA40, type metadata accessor for OpenExternalURLOptionsKey);

  return sub_240BB7980();
}

uint64_t sub_240A426AC(uint64_t a1, uint64_t a2)
{
  return sub_240A426C4(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_240A426C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_240BB6DE0();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_240A42708()
{
  sub_240BB6DE0();
  sub_240BB6E50();

  return swift_bridgeObjectRelease();
}

uint64_t sub_240A4275C()
{
  sub_240BB6DE0();
  sub_240BB7BC0();
  sub_240BB6E50();
  uint64_t v0 = sub_240BB7C00();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_240A427D0()
{
  return MEMORY[0x270F9DE70](*v0);
}

uint64_t sub_240A427D8()
{
  return sub_240BB7BF0();
}

void sub_240A4280C()
{
}

uint64_t sub_240A42820()
{
  uint64_t v0 = sub_240BB6DE0();
  uint64_t v2 = v1;
  if (v0 == sub_240BB6DE0() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_240BB7AE0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_240A428AC()
{
  return sub_240A2E388(&qword_268C9E828, type metadata accessor for HKFeatureIdentifier);
}

BOOL sub_240A428F4(float *a1, float *a2)
{
  return *a1 == *a2;
}

uint64_t sub_240A42908()
{
  return sub_240BB7C00();
}

uint64_t sub_240A42950()
{
  return sub_240BB7BD0();
}

uint64_t sub_240A4297C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_240A42D58(a1, a2, a3, a4, &qword_268C9E870, MEMORY[0x263F45630], MEMORY[0x263F45630], MEMORY[0x263F45630]);
}

uint64_t sub_240A429C4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_240A42D58(a1, a2, a3, a4, (unint64_t *)&qword_268C9E868, MEMORY[0x263F42AE8], MEMORY[0x263F42AE8], MEMORY[0x263F42AE8]);
}

void *sub_240A42A0C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_240A3A218(0, (unint64_t *)&qword_26AFD7108, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_240A4340C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_240A42B3C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_240A42D58(a1, a2, a3, a4, (unint64_t *)&unk_268C9EAE0, (void (*)(uint64_t))type metadata accessor for AFibBurdenPDFChartPoint, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartPoint, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartPoint);
}

void *sub_240A42B84(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_240A37678(a1, a2, a3, a4, (unint64_t *)&qword_268C9E840, (unint64_t *)&qword_268CA0B00);
}

void *sub_240A42BA0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_240A377C0(0, (unint64_t *)&qword_268C9E880, &qword_268CA0B30);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_240A4357C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_240A42CC8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_240A42D58(a1, a2, a3, a4, &qword_268C9E878, MEMORY[0x263F441F0], MEMORY[0x263F441F0], MEMORY[0x263F441F0]);
}

uint64_t sub_240A42D10(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_240A42D58(a1, a2, a3, a4, &qword_268C9EA20, MEMORY[0x263F062D0], MEMORY[0x263F062D0], MEMORY[0x263F062D0]);
}

uint64_t sub_240A42D58(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, void (*a6)(uint64_t), uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  if (a3)
  {
    unint64_t v12 = *(void *)(a4 + 24);
    uint64_t v13 = v12 >> 1;
    if ((uint64_t)(v12 >> 1) < a2)
    {
      if (v13 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v12 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v13 = a2;
      }
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v13 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v13;
  }
  if (!v15)
  {
    uint64_t v19 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_240A43500(0, a5, a6);
  uint64_t v16 = *(void *)(a7(0) - 8);
  uint64_t v17 = *(void *)(v16 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = (void *)swift_allocObject();
  size_t v20 = j__malloc_size(v19);
  if (!v17 || (v20 - v18 == 0x8000000000000000 ? (BOOL v21 = v17 == -1) : (BOOL v21 = 0), v21))
  {
LABEL_29:
    uint64_t result = sub_240BB78C0();
    __break(1u);
    return result;
  }
  v19[2] = v14;
  v19[3] = 2 * ((uint64_t)(v20 - v18) / v17);
LABEL_19:
  uint64_t v22 = *(void *)(a7(0) - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v24 = (unint64_t)v19 + v23;
  if (a1)
  {
    if ((unint64_t)v19 < a4 || v24 >= a4 + v23 + *(void *)(v22 + 72) * v14)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v19 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_240A43698(0, v14, v24, a4, a8);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v19;
}

void *sub_240A42FE0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_240A43500(0, &qword_268C9E860, type metadata accessor for HKFeatureAvailabilityContext);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_240A437F4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_240A43108(char a1)
{
  uint64_t v2 = sub_240BB3980();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240BB3690();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0) {
    return MEMORY[0x263F8EE78];
  }
  sub_240A43500(0, (unint64_t *)&unk_268C9E830, MEMORY[0x263F43948]);
  unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v19 = *(void *)(v3 + 72);
  unint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_240BB97E0;
  unint64_t v18 = v10;
  uint64_t v12 = *(void (**)(unint64_t, void, uint64_t))(v3 + 104);
  v12(v11 + v10, *MEMORY[0x263F43940], v2);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F43628], v6);
  char v13 = sub_240BB3680();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v13)
  {
    id v14 = (id)HKHRCardioFitnessEventOnboardingDeepLink();
    sub_240BB2B00();

    v12((unint64_t)v5, *MEMORY[0x263F43938], v2);
    unint64_t v16 = *(void *)(v11 + 16);
    unint64_t v15 = *(void *)(v11 + 24);
    if (v16 >= v15 >> 1) {
      unint64_t v11 = sub_240A42D58(v15 > 1, v16 + 1, 1, v11, (unint64_t *)&unk_268C9E830, MEMORY[0x263F43948], MEMORY[0x263F43948], MEMORY[0x263F43948]);
    }
    *(void *)(v11 + 16) = v16 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v11 + v18 + v16 * v19, v5, v2);
  }
  return v11;
}

uint64_t sub_240A4340C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_240BB7970();
  __break(1u);
  return result;
}

void sub_240A43500(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240BB7AB0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void type metadata accessor for HKFeatureAvailabilityContext(uint64_t a1)
{
}

uint64_t sub_240A4357C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_240A3FD54(0, &qword_268CA0B30);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_240BB7970();
  __break(1u);
  return result;
}

uint64_t sub_240A43698(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_240BB7970();
  __break(1u);
  return result;
}

uint64_t sub_240A437F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      type metadata accessor for HKFeatureAvailabilityContext(0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_240BB7970();
  __break(1u);
  return result;
}

uint64_t sub_240A438FC()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240A43934()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_240A43974(char a1, uint64_t a2)
{
  return sub_240A40C24(a1, a2, *(void *)(v2 + 16), *(void (**)(char *))(v2 + 24), *(void *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), *(void *)(v2 + 48));
}

void sub_240A43988()
{
  if (!qword_268C9E898)
  {
    sub_240BB3830();
    sub_240A2E388(&qword_268C9E8A0, MEMORY[0x263F437A8]);
    unint64_t v0 = sub_240BB7C20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9E898);
    }
  }
}

uint64_t sub_240A43A28()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_240A43A60(char a1, uint64_t a2)
{
  return sub_240A4119C(a1, a2, *(void (**)(char *))(v2 + 16));
}

void type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(uint64_t a1)
{
}

uint64_t sub_240A43A94(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void type metadata accessor for UNAuthorizationStatus(uint64_t a1)
{
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
}

void type metadata accessor for UIUserInterfaceSizeClass(uint64_t a1)
{
}

void type metadata accessor for UNNotificationPresentationOptions(uint64_t a1)
{
}

__n128 initializeWithTake for LowHeartRateNotificationsHealthChecklistConfigurationProvider(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_240A43BA0(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_240A43BC0(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
}

void type metadata accessor for HKError(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for HKFeatureAvailabilityOnboardingIneligibilityReasons(uint64_t a1)
{
}

void type metadata accessor for SymbolWeight(uint64_t a1)
{
}

__n128 initializeWithTake for CardioFitnessHealthChecklistSettingsState.Footer.Link(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_240A43D0C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_240A43D2C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for NSDirectionalEdgeInsets(uint64_t a1)
{
}

uint64_t sub_240A43D80()
{
  return sub_240A2E388(&qword_268C9E910, type metadata accessor for HKFeatureAvailabilityContext);
}

uint64_t sub_240A43DC8()
{
  return sub_240A2E388(&qword_268C9E918, type metadata accessor for HKFeatureAvailabilityContext);
}

uint64_t sub_240A43E10()
{
  return sub_240A2E388(&qword_268C9E920, type metadata accessor for HKFeatureAvailabilityContext);
}

uint64_t sub_240A43E58()
{
  return sub_240A2E388(&qword_268C9E928, type metadata accessor for HKFeatureAvailabilityOnboardingIneligibilityReasons);
}

uint64_t sub_240A43EA0()
{
  return sub_240A2E388(&qword_268C9E930, type metadata accessor for HKFeatureAvailabilityOnboardingIneligibilityReasons);
}

uint64_t sub_240A43EE8()
{
  return sub_240A2E388(&qword_268C9E938, type metadata accessor for HKFeatureAvailabilityOnboardingIneligibilityReasons);
}

uint64_t sub_240A43F30()
{
  return sub_240A2E388(&qword_268C9E940, type metadata accessor for HKFeatureAvailabilityOnboardingIneligibilityReasons);
}

uint64_t sub_240A43F78()
{
  return sub_240A2E388(&qword_268C9E948, type metadata accessor for HKFeatureAvailabilityRequirementIdentifier);
}

uint64_t sub_240A43FC0()
{
  return sub_240A2E388(&qword_268C9E950, type metadata accessor for HKFeatureAvailabilityRequirementIdentifier);
}

uint64_t sub_240A44008()
{
  return sub_240A2E388(&qword_268C9E958, type metadata accessor for Key);
}

uint64_t sub_240A44050()
{
  return sub_240A2E388(&qword_268C9E960, type metadata accessor for Key);
}

uint64_t sub_240A44098()
{
  return sub_240A2E388(&qword_268C9E968, type metadata accessor for HKError);
}

uint64_t sub_240A440E0()
{
  return sub_240A2E388(&qword_268C9E970, type metadata accessor for HKError);
}

uint64_t sub_240A44128()
{
  return sub_240A2E388(&qword_268C9E978, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_240A44170()
{
  return sub_240A2E388(&qword_268C9E980, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_240A441B8()
{
  return sub_240A2E388(&qword_268C9E988, type metadata accessor for UNNotificationPresentationOptions);
}

uint64_t sub_240A44200()
{
  return sub_240A2E388(&qword_268C9E990, type metadata accessor for UNNotificationPresentationOptions);
}

uint64_t sub_240A44248()
{
  return sub_240A2E388(&qword_268C9E998, type metadata accessor for UNNotificationPresentationOptions);
}

uint64_t sub_240A44290()
{
  return sub_240A2E388(&qword_268C9E9A0, type metadata accessor for UNNotificationPresentationOptions);
}

uint64_t sub_240A442D8()
{
  return sub_240A2E388(&qword_268C9E9A8, type metadata accessor for UILayoutPriority);
}

uint64_t sub_240A44320()
{
  return sub_240A2E388(&qword_268C9E9B0, type metadata accessor for UILayoutPriority);
}

uint64_t sub_240A44368()
{
  return sub_240A2E388(&qword_268C9E9B8, type metadata accessor for UILayoutPriority);
}

uint64_t sub_240A443B0()
{
  return sub_240A2E388(&qword_268C9E9C0, type metadata accessor for UIUserInterfaceSizeClass);
}

uint64_t sub_240A443F8()
{
  return sub_240A2E388(&qword_268C9E9C8, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_240A44440()
{
  return sub_240A2E388(&qword_268C9E9D0, type metadata accessor for HKFeatureAvailabilityRequirementIdentifier);
}

uint64_t sub_240A44488()
{
  return sub_240A2E388(&qword_268C9E9D8, type metadata accessor for HKError);
}

uint64_t sub_240A444D0()
{
  return sub_240A2E388(&qword_268C9E9E0, type metadata accessor for HKError);
}

uint64_t sub_240A44518()
{
  return sub_240A2E388(&qword_268C9E9E8, type metadata accessor for HKError);
}

uint64_t sub_240A44560()
{
  return sub_240A2E388(&qword_268C9E9F0, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

uint64_t sub_240A445D0()
{
  return sub_240A2E388(&qword_268C9E9F8, type metadata accessor for Code);
}

unint64_t sub_240A4461C()
{
  unint64_t result = qword_268C9EA00;
  if (!qword_268C9EA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9EA00);
  }
  return result;
}

uint64_t sub_240A44670()
{
  return sub_240A2E388(&qword_268C9EA08, type metadata accessor for Code);
}

uint64_t sub_240A446B8()
{
  return sub_240A2E388((unint64_t *)&qword_268C9EA10, type metadata accessor for HKError);
}

uint64_t sub_240A44700()
{
  return sub_240A2E388(&qword_268C9EA18, type metadata accessor for Key);
}

uint64_t sub_240A44748(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t destroy for LocalizedImageView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LocalizedImageView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  sub_240BB4850();
  sub_240BB4850();
  sub_240BB4850();
  return a1;
}

uint64_t assignWithCopy for LocalizedImageView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_240BB4850();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  sub_240BB4850();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  sub_240BB4850();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for LocalizedImageView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for LocalizedImageView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizedImageView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalizedImageView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizedImageView()
{
  return &type metadata for LocalizedImageView;
}

void *sub_240A44A24(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  long long v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *long long v3 = *a2;
    long long v3 = (void *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    long long v7 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v7;
    long long v8 = *((_OWORD *)a2 + 5);
    uint64_t v9 = *(int *)(a3 + 44);
    uint64_t v10 = a1 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 80) = v8;
    uint64_t v12 = sub_240BB2D40();
    unint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    sub_240BB4850();
    swift_retain();
    swift_retain();
    v13(v10, v11, v12);
  }
  return v3;
}

uint64_t sub_240A44B3C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  uint64_t v5 = sub_240BB2D40();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_240A44BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  long long v7 = *(_OWORD *)(a2 + 80);
  uint64_t v8 = *(int *)(a3 + 44);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  uint64_t v11 = sub_240BB2D40();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  sub_240BB4850();
  swift_retain();
  swift_retain();
  v12(v9, v10, v11);
  return a1;
}

void *sub_240A44C8C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  uint64_t v6 = *(int *)(a3 + 44);
  long long v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_240BB2D40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_240A44D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  long long v6 = *(_OWORD *)(a2 + 80);
  uint64_t v7 = *(int *)(a3 + 44);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  uint64_t v10 = sub_240BB2D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_240A44E2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  long long v8 = *(_OWORD *)(a2 + 80);
  uint64_t v9 = *(int *)(a3 + 44);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(_OWORD *)(a1 + 80) = v8;
  uint64_t v12 = sub_240BB2D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_240A44EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240A44F0C);
}

uint64_t sub_240A44F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_240BB2D40();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_240A44FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240A44FD0);
}

uint64_t sub_240A44FD0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_240BB2D40();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 44);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for LocalizedImageView.TextConfiguration()
{
  uint64_t result = qword_268C9EBB0;
  if (!qword_268C9EBB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240A450C4()
{
  uint64_t result = sub_240BB2D40();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_240A45198()
{
  return sub_240A46450(&qword_268C9EBC0, MEMORY[0x263F07508]);
}

uint64_t sub_240A451E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 44);
  uint64_t v5 = sub_240BB2D40();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_240A45250()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_240A4526C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v23 = a1;
  uint64_t v3 = sub_240BB6A00();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A45C70(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v27 = *(unsigned char *)(v2 + 16);
  uint64_t v10 = qword_26AFDA090;
  sub_240BB4850();
  if (v10 != -1) {
    swift_once();
  }
  id v11 = (id)qword_26AFDECD8;
  sub_240BB6A20();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F1B4B8], v3);
  uint64_t v12 = sub_240BB6A10();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v24[0] = v12;
  v24[1] = 0;
  __int16 v25 = 1;
  char v26 = v27;
  sub_240A45CA4(0);
  sub_240A45D2C();
  sub_240BB6960();
  swift_release();
  uint64_t v13 = sub_240BB6B30();
  unint64_t v15 = v14;
  v24[0] = *(void *)(v2 + 40);
  unint64_t v16 = (uint64_t (*)(uint64_t))swift_allocObject();
  long long v17 = *(_OWORD *)(v2 + 16);
  *((_OWORD *)v16 + 1) = *(_OWORD *)v2;
  *((_OWORD *)v16 + 2) = v17;
  *((_OWORD *)v16 + 3) = *(_OWORD *)(v2 + 32);
  uint64_t v18 = v23;
  sub_240A45E88((uint64_t)v9, v23);
  sub_240A45EEC(0);
  size_t v20 = (uint64_t (**)(uint64_t))(v18 + *(int *)(v19 + 36));
  *size_t v20 = sub_240A45E80;
  v20[1] = v16;
  v20[2] = (uint64_t (*)(uint64_t))v13;
  v20[3] = v15;
  sub_240BB4850();
  sub_240BB4850();
  sub_240A32CD8((uint64_t)v24);
  return sub_240A467F4((uint64_t)v9);
}

uint64_t sub_240A45520(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240BB6520();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  v10[1] = *(void *)(a2 + 40);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  sub_240A46190();
  sub_240BB2D40();
  sub_240A461E8();
  sub_240A46450(&qword_268C9EC58, (void (*)(uint64_t))sub_240A46190);
  sub_240A4654C(&qword_268C9EC68, (void (*)(uint64_t))sub_240A461E8, (void (*)(void))sub_240A465D8, (void (*)(void))sub_240A46778);
  sub_240A46450(&qword_268C9ECA0, (void (*)(uint64_t))type metadata accessor for LocalizedImageView.TextConfiguration);
  sub_240BB4850();
  return sub_240BB6AE0();
}

double sub_240A45778@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  *(void *)&long long v51 = *(void *)a1;
  *((void *)&v51 + 1) = v4;
  sub_240A46960();
  sub_240BB4850();
  uint64_t v5 = sub_240BB68D0();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  uint64_t v10 = sub_240BB68A0();
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  sub_240A469B4(v5, v7, v9);
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_240BB6890();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  sub_240A469B4(v10, v12, v14);
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(a1 + 64);
  uint64_t v42 = v15;
  uint64_t v43 = v17;
  char v44 = v21;
  uint64_t v45 = v19;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v47 = v22;
  char v48 = 0;
  sub_240A45A60(0.0, 0, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v40, 0.0, 1, 0.0, 1);
  sub_240A469B4(v15, v17, v21);
  swift_release();
  swift_bridgeObjectRelease();
  long long v58 = v40[7];
  long long v59 = v40[8];
  long long v60 = v40[9];
  long long v54 = v40[3];
  long long v55 = v40[4];
  long long v56 = v40[5];
  long long v57 = v40[6];
  long long v51 = v40[0];
  long long v52 = v40[1];
  uint64_t v61 = v41;
  long long v53 = v40[2];
  sub_240BB6510();
  double v24 = v23 * *(double *)(a1 + 32);
  sub_240BB6510();
  double v26 = v25 * *(double *)(a1 + 40);
  sub_240BB6510();
  double v28 = v27 * *(double *)(a1 + 48);
  sub_240BB6510();
  double v30 = v29 * *(double *)(a1 + 56);
  LOBYTE(v22) = sub_240BB6830();
  char v49 = 0;
  uint64_t v31 = *(void *)(a1 + 72);
  uint64_t v32 = swift_getKeyPath();
  *(_DWORD *)(a2 + 169) = *(_DWORD *)v50;
  *(_DWORD *)(a2 + 172) = *(_DWORD *)&v50[3];
  char v33 = v49;
  long long v34 = v58;
  long long v35 = v60;
  *(_OWORD *)(a2 + 128) = v59;
  *(_OWORD *)(a2 + 144) = v35;
  *(void *)(a2 + 160) = v61;
  long long v36 = v54;
  long long v37 = v56;
  *(_OWORD *)(a2 + 64) = v55;
  *(_OWORD *)(a2 + 80) = v37;
  *(_OWORD *)(a2 + 96) = v57;
  *(_OWORD *)(a2 + 112) = v34;
  long long v38 = v52;
  *(_OWORD *)a2 = v51;
  *(_OWORD *)(a2 + 16) = v38;
  double result = *(double *)&v53;
  *(_OWORD *)(a2 + 32) = v53;
  *(_OWORD *)(a2 + 48) = v36;
  *(unsigned char *)(a2 + 168) = v22;
  *(double *)(a2 + 176) = v24;
  *(double *)(a2 + 184) = v26;
  *(double *)(a2 + 192) = v28;
  *(double *)(a2 + 200) = v30;
  *(unsigned char *)(a2 + 208) = v33;
  *(_DWORD *)(a2 + 209) = v40[0];
  *(_DWORD *)(a2 + 212) = *(_DWORD *)((char *)v40 + 3);
  *(void *)(a2 + 216) = v32;
  *(void *)(a2 + 224) = v31;
  return result;
}

uint64_t sub_240A45A60@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_240BB7190();
    double v23 = (void *)sub_240BB6820();
    sub_240BB5860();
  }
  sub_240BB65D0();
  long long v24 = v13[1];
  long long v37 = *v13;
  long long v38 = v24;
  sub_240A46A7C((uint64_t)&v37, (uint64_t)v40);
  long long v26 = v13[1];
  long long v35 = v13[2];
  long long v25 = v35;
  *(_OWORD *)a9 = *v13;
  *(_OWORD *)(a9 + 16) = v26;
  *(_OWORD *)(a9 + 32) = v25;
  *(_OWORD *)(a9 + 152) = v34;
  *(_OWORD *)(a9 + 136) = v33;
  *(_OWORD *)(a9 + 120) = v32;
  *(_OWORD *)(a9 + 104) = v31;
  *(_OWORD *)(a9 + 56) = v28;
  uint64_t v39 = *((void *)&v38 + 1);
  char v36 = *((unsigned char *)v13 + 48);
  *(unsigned char *)(a9 + 48) = v36;
  *(_OWORD *)(a9 + 72) = v29;
  *(_OWORD *)(a9 + 88) = v30;
  sub_240A46AD8((uint64_t)v40);
  sub_240A32CD8((uint64_t)&v39);
  return sub_240A46B1C((uint64_t)&v35);
}

uint64_t sub_240A45C50()
{
  return sub_240BB6940();
}

void sub_240A45C70(uint64_t a1)
{
}

void sub_240A45CA4(uint64_t a1)
{
}

void sub_240A45CCC()
{
  if (!qword_268C9EBD8)
  {
    unint64_t v0 = sub_240BB6580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9EBD8);
    }
  }
}

uint64_t sub_240A45D2C()
{
  return sub_240A4654C(&qword_268C9EBE0, sub_240A45CA4, (void (*)(void))sub_240A45D74, (void (*)(void))sub_240A45DE4);
}

unint64_t sub_240A45D74()
{
  unint64_t result = qword_268C9EBE8;
  if (!qword_268C9EBE8)
  {
    sub_240A45CCC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9EBE8);
  }
  return result;
}

unint64_t sub_240A45DE4()
{
  unint64_t result = qword_268C9EBF0;
  if (!qword_268C9EBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9EBF0);
  }
  return result;
}

uint64_t sub_240A45E38()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_240A45E80(uint64_t a1)
{
  return sub_240A45520(a1, v1 + 16);
}

uint64_t sub_240A45E88(uint64_t a1, uint64_t a2)
{
  sub_240A45C70(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_240A45EEC(uint64_t a1)
{
}

void sub_240A45F20(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_240BB6580();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_240A45F94()
{
  if (!qword_268C9EC00)
  {
    sub_240A46028();
    sub_240A46450(&qword_268C9EC98, (void (*)(uint64_t))sub_240A46028);
    unint64_t v0 = sub_240BB65E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9EC00);
    }
  }
}

void sub_240A46028()
{
  if (!qword_268C9EC08)
  {
    sub_240A4608C();
    sub_240A46498();
    unint64_t v0 = sub_240BB6530();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9EC08);
    }
  }
}

void sub_240A4608C()
{
  if (!qword_268C9EC10)
  {
    sub_240A46190();
    sub_240BB2D40();
    sub_240A461E8();
    sub_240A46450(&qword_268C9EC58, (void (*)(uint64_t))sub_240A46190);
    sub_240A46450(&qword_268C9EBC0, MEMORY[0x263F07508]);
    unint64_t v0 = sub_240BB6AF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9EC10);
    }
  }
}

void sub_240A46190()
{
  if (!qword_268C9EC18)
  {
    type metadata accessor for LocalizedImageView.TextConfiguration();
    unint64_t v0 = sub_240BB6F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9EC18);
    }
  }
}

void sub_240A461E8()
{
  if (!qword_268C9EC20)
  {
    sub_240A46274(255);
    sub_240A46404(255, (unint64_t *)&qword_268C9EC50, MEMORY[0x263F8EF38], MEMORY[0x263F1A418]);
    unint64_t v0 = sub_240BB6580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9EC20);
    }
  }
}

void sub_240A46274(uint64_t a1)
{
}

void sub_240A4629C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240BB6580();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_240A46300(uint64_t a1)
{
}

void sub_240A46328()
{
  if (!qword_268C9EC38)
  {
    sub_240A46388();
    unint64_t v0 = sub_240BB6580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9EC38);
    }
  }
}

void sub_240A46388()
{
  if (!qword_268C9EC40)
  {
    sub_240A46404(255, &qword_268C9EC48, MEMORY[0x263F8D6C8], MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_240BB6810();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9EC40);
    }
  }
}

void sub_240A46404(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_240A46450(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_240A46498()
{
  unint64_t result = qword_268C9EC60;
  if (!qword_268C9EC60)
  {
    sub_240A4608C();
    sub_240A4654C(&qword_268C9EC68, (void (*)(uint64_t))sub_240A461E8, (void (*)(void))sub_240A465D8, (void (*)(void))sub_240A46778);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9EC60);
  }
  return result;
}

uint64_t sub_240A4654C(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A465D8()
{
  return sub_240A46650(&qword_268C9EC70, sub_240A46274, (void (*)(void))sub_240A46614);
}

uint64_t sub_240A46614()
{
  return sub_240A46650(&qword_268C9EC78, sub_240A46300, (void (*)(void))sub_240A466D0);
}

uint64_t sub_240A46650(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_240A466D0()
{
  unint64_t result = qword_268C9EC80;
  if (!qword_268C9EC80)
  {
    sub_240A46328();
    sub_240A46450(&qword_268C9EC88, (void (*)(uint64_t))sub_240A46388);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9EC80);
  }
  return result;
}

unint64_t sub_240A46778()
{
  unint64_t result = qword_268C9EC90;
  if (!qword_268C9EC90)
  {
    sub_240A46404(255, (unint64_t *)&qword_268C9EC50, MEMORY[0x263F8EF38], MEMORY[0x263F1A418]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9EC90);
  }
  return result;
}

uint64_t sub_240A467F4(uint64_t a1)
{
  sub_240A45C70(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240A46850()
{
  uint64_t v1 = sub_240BB6520();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

double sub_240A468E0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_240BB6520();

  return sub_240A45778(a1, a2);
}

unint64_t sub_240A46960()
{
  unint64_t result = qword_268C9ECA8;
  if (!qword_268C9ECA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9ECA8);
  }
  return result;
}

uint64_t sub_240A469B4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_240A469C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_240BB66C0();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_240A469F8()
{
  return sub_240BB66D0();
}

uint64_t sub_240A46A28@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_240BB6650();
  *a1 = v3;
  return result;
}

uint64_t sub_240A46A54()
{
  return sub_240BB6660();
}

uint64_t sub_240A46A7C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_240A46AD8(uint64_t a1)
{
  return a1;
}

uint64_t sub_240A46B0C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return sub_240BB4850();
  }
}

uint64_t sub_240A46B1C(uint64_t a1)
{
  return a1;
}

uint64_t destroy for LocalizedImageView.ImageConfiguration()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LocalizedImageView.ImageConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  sub_240BB4850();
  sub_240BB4850();
  return a1;
}

uint64_t assignWithCopy for LocalizedImageView.ImageConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_240BB4850();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  sub_240BB4850();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for LocalizedImageView.ImageConfiguration(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for LocalizedImageView.ImageConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizedImageView.ImageConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalizedImageView.ImageConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizedImageView.ImageConfiguration()
{
  return &type metadata for LocalizedImageView.ImageConfiguration;
}

uint64_t sub_240A46D48()
{
  return sub_240A4654C(&qword_268C9ECB0, sub_240A45EEC, (void (*)(void))sub_240A46DA4, (void (*)(void))sub_240A46E20);
}

uint64_t sub_240A46DA4()
{
  return sub_240A4654C(&qword_268C9ECB8, sub_240A45C70, (void (*)(void))sub_240A45D2C, (void (*)(void))sub_240A46DEC);
}

uint64_t sub_240A46DEC()
{
  return sub_240A46450(&qword_268C9ECC0, MEMORY[0x263F1A470]);
}

uint64_t sub_240A46E20()
{
  return sub_240A46450(&qword_268C9ECC8, (void (*)(uint64_t))sub_240A45F94);
}

uint64_t sub_240A46E58()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_240BB4850();
  return v1;
}

uint64_t sub_240A46E88()
{
  type metadata accessor for CenteredLabelWithSpinnerCell();
  sub_240A47888();
  uint64_t result = sub_240BB6E10();
  qword_268CA27B8 = result;
  unk_268CA27C0 = v1;
  return result;
}

uint64_t sub_240A46ECC(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Heart28CenteredLabelWithSpinnerCell_item;
  swift_beginAccess();
  sub_240A479C4(a1, v3);
  swift_endAccess();
  sub_240A477B0(v3, (uint64_t)v17);
  if (v18)
  {
    sub_240A47830();
    if (swift_dynamicCast())
    {
      unint64_t v4 = v12;
      uint64_t v5 = v13;
      long long v10 = v14;
      uint64_t v6 = v15;
      uint64_t v7 = v16;
      v11[3] = &type metadata for CenteredLabelWithSpinnerContentConfiguration;
      unint64_t v12 = sub_240A47938();
      uint64_t v8 = swift_allocObject();
      v11[0] = v8;
      *(void *)(v8 + 16) = v4;
      *(void *)(v8 + 24) = v5;
      *(_OWORD *)(v8 + 32) = v10;
      *(void *)(v8 + 48) = v6;
      *(void *)(v8 + 56) = v7;
      sub_240BB4850();
      MEMORY[0x24560A690](v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_240A478C0((uint64_t)v17);
  }
  return sub_240A478C0(a1);
}

void (*sub_240A4700C(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC5Heart28CenteredLabelWithSpinnerCell_item;
  v3[15] = v1;
  v3[16] = v4;
  swift_beginAccess();
  return sub_240A47078;
}

void sub_240A47078(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    sub_240A477B0(*(void *)(v3 + 120) + *(void *)(v3 + 128), v3 + 80);
    if (*(void *)(v3 + 104))
    {
      sub_240A47830();
      if (swift_dynamicCast())
      {
        uint64_t v4 = *(void *)(v3 + 32);
        uint64_t v5 = *(void *)(v3 + 40);
        long long v9 = *(_OWORD *)(v3 + 48);
        uint64_t v6 = *(void *)(v3 + 64);
        uint64_t v7 = *(void *)(v3 + 72);
        v10[3] = &type metadata for CenteredLabelWithSpinnerContentConfiguration;
        v10[4] = sub_240A47938();
        uint64_t v8 = swift_allocObject();
        v10[0] = v8;
        *(void *)(v8 + 16) = v4;
        *(void *)(v8 + 24) = v5;
        *(_OWORD *)(v8 + 32) = v9;
        *(void *)(v8 + 48) = v6;
        *(void *)(v8 + 56) = v7;
        sub_240BB4850();
        MEMORY[0x24560A690](v10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_240A478C0(v3 + 80);
    }
  }

  free((void *)v3);
}

id sub_240A475E8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CenteredLabelWithSpinnerCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CenteredLabelWithSpinnerCell()
{
  return self;
}

uint64_t sub_240A47650@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Heart28CenteredLabelWithSpinnerCell_item;
  swift_beginAccess();
  return sub_240A477B0(v3, a1);
}

void (*sub_240A476A8(void *a1))(void *a1)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_240A4700C(v2);
  return sub_240A47700;
}

void sub_240A47700(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_240A47748()
{
  if (qword_268C9E630 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_268CA27B8;
  sub_240BB4850();
  return v0;
}

uint64_t sub_240A477B0(uint64_t a1, uint64_t a2)
{
  sub_240A47A44(0, (unint64_t *)&qword_268C9ECD8, (void (*)(uint64_t))sub_240A47830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_240A47830()
{
  unint64_t result = qword_268CA0B00;
  if (!qword_268CA0B00)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CA0B00);
  }
  return result;
}

unint64_t sub_240A47888()
{
  unint64_t result = qword_268C9ECE0;
  if (!qword_268C9ECE0)
  {
    type metadata accessor for CenteredLabelWithSpinnerCell();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C9ECE0);
  }
  return result;
}

uint64_t sub_240A478C0(uint64_t a1)
{
  sub_240A47A44(0, (unint64_t *)&qword_268C9ECD8, (void (*)(uint64_t))sub_240A47830);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_240A47938()
{
  unint64_t result = qword_268C9ECE8;
  if (!qword_268C9ECE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9ECE8);
  }
  return result;
}

uint64_t sub_240A4798C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_240A479C4(uint64_t a1, uint64_t a2)
{
  sub_240A47A44(0, (unint64_t *)&qword_268C9ECD8, (void (*)(uint64_t))sub_240A47830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_240A47A44(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240BB75E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t destroy for CenteredLabelWithSpinnerItem()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CenteredLabelWithSpinnerItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  sub_240BB4850();
  sub_240BB4850();
  sub_240BB4850();
  return a1;
}

void *assignWithCopy for CenteredLabelWithSpinnerItem(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  return a1;
}

__n128 initializeWithTake for CenteredLabelWithSpinnerItem(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for CenteredLabelWithSpinnerItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  return a1;
}

uint64_t getEnumTagSinglePayload for CenteredLabelWithSpinnerItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CenteredLabelWithSpinnerItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CenteredLabelWithSpinnerItem()
{
  return &type metadata for CenteredLabelWithSpinnerItem;
}

id sub_240A47D14()
{
  *(void *)&v0[OBJC_IVAR____TtC5Heart42CardioFitnessOnboardingStartViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  unint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_240BB2980();

  uint64_t v4 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  sub_240BB2980();

  uint64_t v6 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for CardioFitnessOnboardingStartViewController();
  id v7 = objc_msgSendSuper2(&v9, sel_initWithTitle_detailText_icon_contentLayout_, v4, v6, 0, 4, 0xE000000000000000);

  return v7;
}

void sub_240A47ED4()
{
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for CardioFitnessOnboardingStartViewController();
  objc_msgSendSuper2(&v10, sel_viewDidLoad);
  id v1 = sub_240A482E4();
  id v2 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v2, sel_addSubview_, v1);

  id v3 = objc_msgSend(v0, sel_contentView);
  id v4 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v4);

  id v5 = objc_msgSend(v1, sel_centerXAnchor);
  id v6 = objc_msgSend(v0, sel_contentView);
  id v7 = objc_msgSend(v6, sel_centerXAnchor);

  id v8 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v7);
  objc_msgSend(v8, sel_setActive_, 1);

  id v9 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v1, sel_hk_alignVerticalConstraintsWithView_margin_, v9, 0.0);

  objc_msgSend(v0, sel_hxui_addCancelButton);
}

id sub_240A48228()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardioFitnessOnboardingStartViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CardioFitnessOnboardingStartViewController()
{
  return self;
}

uint64_t sub_240A48290()
{
  return 0;
}

uint64_t sub_240A48298(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC5Heart42CardioFitnessOnboardingStartViewController_delegate + 8) = a2;
  swift_unknownObjectWeakAssign();

  return sub_240BB50A0();
}

id sub_240A482E4()
{
  id v0 = objc_msgSend(self, sel_hrui_heartRateIconImage);
  if (qword_268C9E7B0 != -1) {
    swift_once();
  }
  sub_240BB2980();
  sub_240BB2980();
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 1.0, 0.231372549, 0.188235294, 1.0, 0xE000000000000000);
  id v2 = objc_allocWithZone(MEMORY[0x263F46998]);
  id v3 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  id v4 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v2, sel_initWithIconImage_titleText_detailText_tintColor_, v0, v3, v4, v1);

  return v5;
}

uint64_t sub_240A484BC(uint64_t a1)
{
  return a1;
}

id sub_240A484E4(uint64_t a1)
{
  return objc_msgSend(*v1, sel_executeQuery_, a1);
}

uint64_t sub_240A484F8()
{
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
  uint64_t result = MEMORY[0x24560A470]((id)*MEMORY[0x263F09F20]);
  qword_268CA27C8 = result;
  return result;
}

uint64_t sub_240A4854C@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = *a1;
  if (v3)
  {
    id v4 = objc_msgSend(v3, sel_startDate);
    sub_240BB2CB0();

    uint64_t v5 = sub_240BB2CF0();
    id v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_240BB2CF0();
    id v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

uint64_t sub_240A48614(uint64_t a1)
{
  sub_240A4958C();
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v13[-v6];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v9 = result;
    uint64_t v10 = sub_240BB2CF0();
    uint64_t v11 = *(void *)(v10 - 8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v7, a1, v10);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    sub_240A4971C((uint64_t)v7, (uint64_t)v5);
    uint64_t v12 = v9 + OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider_queue_mostRecentSampleDate;
    swift_beginAccess();
    sub_240A49780((uint64_t)v5, v12);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_240A487B0()
{
  uint64_t v1 = OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider____lazy_storage___lastSampleQueryPublisher;
  if (*(uint64_t *)((char *)v0
                  + OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider____lazy_storage___lastSampleQueryPublisher))
  {
    uint64_t v2 = *(uint64_t *)((char *)v0
                    + OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider____lazy_storage___lastSampleQueryPublisher);
  }
  else
  {
    uint64_t v2 = sub_240A48840((uint64_t)v0, *v0);
    *(uint64_t *)((char *)v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_240A48840(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  sub_240A49824();
  swift_allocObject();
  swift_retain();
  sub_240BB6230();
  sub_240A498F4();
  uint64_t v5 = sub_240BB62E0();
  swift_release();
  return v5;
}

void sub_240A48900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = qword_268C9E638;
  swift_retain();
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)qword_268CA27C8;
  sub_240A34E00();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_240BBAD40;
  sub_240BB6DE0();
  id v12 = objc_allocWithZone(MEMORY[0x263F08B30]);
  id v13 = v10;
  long long v14 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v12, sel_initWithKey_ascending_, v14, 0);

  *(void *)(v11 + 32) = v15;
  sub_240BB6F30();
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = sub_240A49984;
  v16[3] = v8;
  v16[4] = a4;
  id v17 = objc_allocWithZone(MEMORY[0x263F0A6E0]);
  sub_240A34DC4(0, (unint64_t *)&qword_268CA06D0);
  uint64_t v18 = (void *)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  v24[4] = sub_240A499FC;
  v24[5] = v16;
  v24[0] = MEMORY[0x263EF8330];
  v24[1] = 1107296256;
  void v24[2] = sub_240A49A08;
  v24[3] = &unk_26F503E88;
  uint64_t v19 = _Block_copy(v24);
  id v20 = objc_msgSend(v17, sel_initWithSampleType_predicate_limit_sortDescriptors_resultsHandler_, v13, 0, 1, v18, v19);

  _Block_release(v19);
  swift_release();
  char v21 = (void *)(a3 + OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider_queryExecutor);
  uint64_t v22 = *(void *)(a3 + OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider_queryExecutor + 24);
  uint64_t v23 = v21[4];
  sub_240A3466C(v21, v22);
  (*(void (**)(id, uint64_t, uint64_t))(v23 + 8))(v20, v22, v23);
}

void sub_240A48BA4(int a1, unint64_t a2, id a3, void (*a4)(void *, void))
{
  if (a3)
  {
    id v6 = a3;
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_240BB5990();
    sub_240A395FC(v7, (uint64_t)qword_26AFDEC70);
    id v8 = a3;
    id v9 = a3;
    uint64_t v10 = sub_240BB5970();
    os_log_type_t v11 = sub_240BB7180();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v31 = v13;
      *(_DWORD *)uint64_t v12 = 136315394;
      uint64_t v14 = sub_240BB7C80();
      sub_240A38940(v14, v15, &v31);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2080;
      id v16 = a3;
      sub_240A49AC0();
      uint64_t v17 = sub_240BB6E10();
      sub_240A38940(v17, v18, &v31);
      sub_240BB75F0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_240A1B000, v10, v11, "[%s] Error encountered when retrieving cardio fitness samples: %s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v13, -1, -1);
      MEMORY[0x24560B930](v12, -1, -1);

LABEL_20:
      a4(0, 0);
      return;
    }

LABEL_19:
    goto LABEL_20;
  }
  if (!a2 || (unint64_t v19 = sub_240A4900C(a2)) == 0)
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_240BB5990();
    sub_240A395FC(v24, (uint64_t)qword_26AFDEC70);
    uint64_t v10 = sub_240BB5970();
    os_log_type_t v25 = sub_240BB7190();
    if (os_log_type_enabled(v10, v25))
    {
      long long v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v31 = v27;
      *(_DWORD *)long long v26 = 136315138;
      uint64_t v28 = sub_240BB7C80();
      sub_240A38940(v28, v29, &v31);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v10, v25, "[%s] Samples retrieved not quantity samples", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v27, -1, -1);
      MEMORY[0x24560B930](v26, -1, -1);
    }
    goto LABEL_19;
  }
  unint64_t v20 = v19;
  uint64_t v21 = v19 & 0xFFFFFFFFFFFFFF8;
  if (v19 >> 62)
  {
    if (sub_240BB7900()) {
      goto LABEL_10;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    uint64_t v23 = 0;
    goto LABEL_23;
  }
  if (!*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_22;
  }
LABEL_10:
  if ((v20 & 0xC000000000000001) != 0)
  {
    id v22 = (id)MEMORY[0x24560AAA0](0, v20);
  }
  else
  {
    if (!*(void *)(v21 + 16))
    {
      __break(1u);
      return;
    }
    id v22 = *(id *)(v20 + 32);
  }
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
LABEL_23:
  id v30 = v23;
  a4(v23, 0);
}

uint64_t sub_240A4900C(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v12 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_240BB7880();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x24560AAA0](i, v1);
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        self;
        if (!swift_dynamicCastObjCClass())
        {
          sub_240BB50A0();
          goto LABEL_15;
        }
        sub_240BB7860();
        sub_240BB7890();
        sub_240BB78A0();
        sub_240BB7870();
        if (v4 == v2) {
          return v12;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v1 + 32;
      while (1)
      {
        uint64_t v7 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        id v8 = *(void **)(v6 + 8 * v5);
        self;
        uint64_t v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v9;
        id v10 = v8;
        sub_240BB7860();
        sub_240BB7890();
        sub_240BB78A0();
        sub_240BB7870();
        ++v5;
        if (v7 == v2) {
          return v12;
        }
      }
    }
    __break(1u);
LABEL_18:
    sub_240BB4850();
    sub_240BB7900();
    swift_bridgeObjectRelease();
    sub_240BB7880();
    sub_240BB4850();
    uint64_t v2 = sub_240BB7900();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_240A491F4(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_240BB7880();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x24560AAA0](i, v1);
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        self;
        if (!swift_dynamicCastObjCClass())
        {
          sub_240BB50A0();
          goto LABEL_15;
        }
        sub_240BB7860();
        sub_240BB7890();
        sub_240BB78A0();
        sub_240BB7870();
        if (v4 == v2) {
          return v9;
        }
      }
      __break(1u);
    }
    else
    {
      for (uint64_t j = 0; ; ++j)
      {
        uint64_t v6 = j + 1;
        if (__OFADD__(j, 1)) {
          break;
        }
        self;
        uint64_t v7 = swift_dynamicCastObjCClass();
        if (!v7)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v7;
        swift_unknownObjectRetain();
        sub_240BB7860();
        sub_240BB7890();
        sub_240BB78A0();
        sub_240BB7870();
        if (v6 == v2) {
          return v9;
        }
      }
    }
    __break(1u);
LABEL_18:
    sub_240BB4850();
    sub_240BB7900();
    swift_bridgeObjectRelease();
    sub_240BB7880();
    sub_240BB4850();
    uint64_t v2 = sub_240BB7900();
    swift_bridgeObjectRelease();
  }
  return v9;
}

uint64_t sub_240A493E0()
{
  sub_240A49B18(v0 + OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider_queue_mostRecentSampleDate);
  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider_queryExecutor);

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_240A49484()
{
  return type metadata accessor for CardioFitnessOnboardingMostRecentValueProvider();
}

uint64_t type metadata accessor for CardioFitnessOnboardingMostRecentValueProvider()
{
  uint64_t result = qword_268C9ED28;
  if (!qword_268C9ED28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_240A494D8()
{
  sub_240A4958C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_240A4958C()
{
  if (!qword_26AFD8F80)
  {
    sub_240BB2CF0();
    unint64_t v0 = sub_240BB75E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD8F80);
    }
  }
}

uint64_t sub_240A495E4()
{
  return sub_240BB7320();
}

uint64_t sub_240A49654@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider_queue_mostRecentSampleDate;
  swift_beginAccess();
  return sub_240A496B8(v3, a1);
}

uint64_t sub_240A496B8(uint64_t a1, uint64_t a2)
{
  sub_240A4958C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240A4971C(uint64_t a1, uint64_t a2)
{
  sub_240A4958C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_240A49780(uint64_t a1, uint64_t a2)
{
  sub_240A4958C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_240A497E4()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_240A4981C(uint64_t a1, uint64_t a2)
{
  sub_240A48900(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

void sub_240A49824()
{
  if (!qword_268C9ED38)
  {
    sub_240A4988C();
    unint64_t v0 = sub_240BB6220();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9ED38);
    }
  }
}

void sub_240A4988C()
{
  if (!qword_268CA0F80)
  {
    sub_240A34DC4(255, (unint64_t *)&qword_268C9ED40);
    unint64_t v0 = sub_240BB75E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA0F80);
    }
  }
}

unint64_t sub_240A498F4()
{
  unint64_t result = qword_268C9ED48;
  if (!qword_268C9ED48)
  {
    sub_240A49824();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9ED48);
  }
  return result;
}

uint64_t sub_240A4994C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240A49984(uint64_t a1, char a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  char v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_240A499C4()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_240A499FC(int a1, unint64_t a2, void *a3)
{
  sub_240A48BA4(a1, a2, a3, *(void (**)(void *, void))(v3 + 16));
}

uint64_t sub_240A49A08(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  uint64_t v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_240A34DC4(0, &qword_268CA10F0);
    uint64_t v5 = sub_240BB6F10();
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

unint64_t sub_240A49AC0()
{
  unint64_t result = qword_26AFD99E0;
  if (!qword_26AFD99E0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD99E0);
  }
  return result;
}

uint64_t sub_240A49B18(uint64_t a1)
{
  sub_240A4958C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for AFibBurdenFeatureStatus()
{
  return &type metadata for AFibBurdenFeatureStatus;
}

uint64_t sub_240A49B84()
{
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  uint64_t result = sub_240BB2980();
  qword_268C9ED60 = result;
  *(void *)algn_268C9ED68 = v1;
  return result;
}

uint64_t sub_240A49C1C()
{
  sub_240A39C18(0, (unint64_t *)&qword_26AFD77C0);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240BBAD40;
  sub_240A4C530();
  *(void *)(inited + 32) = MEMORY[0x24560A470]((id)*MEMORY[0x263F09BF8]);
  sub_240BB6F30();
  if (inited >> 62)
  {
    sub_240BB4850();
    uint64_t v3 = sub_240BB7900();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v2 = MEMORY[0x263F8EE88];
    goto LABEL_6;
  }
  if (!*(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  sub_240A3525C(inited);
  uint64_t v2 = v1;
LABEL_6:
  uint64_t result = swift_bridgeObjectRelease();
  qword_268C9ED70 = v2;
  return result;
}

uint64_t sub_240A49D10()
{
  uint64_t v0 = sub_240BB36D0();
  sub_240A4C570(v0, qword_268C9ED78);
  sub_240A395FC(v0, (uint64_t)qword_268C9ED78);
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v1 = (id)qword_26AFDECD8;
  return sub_240BB36C0();
}

uint64_t sub_240A49DB8()
{
  return sub_240A4B38C();
}

uint64_t sub_240A49DD8()
{
  return sub_240A4B38C();
}

uint64_t sub_240A49DF8()
{
  return sub_240A4B38C();
}

uint64_t sub_240A49E18(uint64_t a1)
{
  uint64_t v2 = sub_240BB56E0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  sub_240BB77C0();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  sub_240BB6E10();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return v7[0];
}

uint64_t sub_240A49F78()
{
  return sub_240A4B38C();
}

uint64_t sub_240A49F98()
{
  return sub_240A4B38C();
}

uint64_t sub_240A49FB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  uint64_t v16 = a3;
  uint64_t v3 = sub_240BB3660();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388]();
  char v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F435C8], v3);
  sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_240BBAE40;
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  *(void *)(v7 + 32) = sub_240BB2980();
  *(void *)(v7 + 40) = v8;
  uint64_t v9 = sub_240BB2980();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  *(void *)(v7 + 48) = v9;
  *(void *)(v7 + 56) = v11;
  uint64_t v12 = sub_240BB3750();
  sub_240A4B454(v17, (uint64_t)v6, 1, v18, 0, 0, v7, v12, v16, v13, 0, 0, 0, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_240A4A250()
{
  return sub_240A4B38C();
}

uint64_t sub_240A4A270@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v22 = a5;
  uint64_t v23 = a3;
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  uint64_t v8 = sub_240BB3660();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F435D0], v8);
  if (a4)
  {
    if (qword_268C9E7A8 != -1) {
      swift_once();
    }
  }
  else if (qword_268C9E7A8 != -1)
  {
    swift_once();
  }
  uint64_t v12 = sub_240BB2980();
  uint64_t v14 = v13;
  sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_240BBAE40;
  *(void *)(v15 + 32) = v12;
  *(void *)(v15 + 40) = v14;
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  *(void *)(v15 + 48) = sub_240BB2980();
  *(void *)(v15 + 56) = v16;
  uint64_t v17 = sub_240BB3750();
  sub_240A4B454(v20, (uint64_t)v11, a4 & 1, v22, v21, v23, v15, v17, a6, v18, 0, 0, 0, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_240A4A544@<X0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v94 = a3;
  uint64_t v95 = a4;
  uint64_t v96 = a2;
  uint64_t v97 = sub_240BB3660();
  uint64_t v5 = *(void *)(v97 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v7 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa(0);
  MEMORY[0x270FA5388]();
  uint64_t v9 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3FB28();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v14 = (char *)&v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFD7158 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_240A395FC(v11, (uint64_t)qword_26AFDEB68);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  *(void *)(swift_allocObject() + 16) = a1;
  uint64_t v98 = 0;
  id v16 = a1;
  sub_240BB5700();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  id v17 = objc_msgSend(v16, sel_unsatisfiedRequirementIdentifiers);
  type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(0);
  uint64_t v18 = sub_240BB6F10();

  uint64_t v19 = sub_240B8F74C(v18);
  swift_bridgeObjectRelease();
  id v20 = (id)*MEMORY[0x263F09648];
  char v21 = sub_240BAF9A0((uint64_t)v20, v19);

  if ((v21 & 1) != 0
    || (id v22 = (id)*MEMORY[0x263F09650],
        char v23 = sub_240BAF9A0((uint64_t)v22, v19),
        v22,
        (v23 & 1) != 0))
  {
    swift_bridgeObjectRelease();
    if (qword_268C9E7A8 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_240BB2980();
    uint64_t v26 = v25;
    swift_storeEnumTagMultiPayload();
    uint64_t v93 = MEMORY[0x245606A20](v24, v26);
    uint64_t v28 = v27;
    unint64_t v29 = v9;
    uint64_t v30 = sub_240BB3740();
    uint64_t v32 = v31;
    uint64_t v33 = v97;
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F435B8], v97);
    sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_240BB97E0;
    *(void *)(v34 + 32) = v24;
    *(void *)(v34 + 40) = v26;
    sub_240BB4850();
    uint64_t v36 = sub_240BB3740();
    uint64_t v91 = v32;
    int v37 = v94 & 1;
    uint64_t v88 = v28;
    uint64_t v89 = v30;
    uint64_t v9 = v29;
    goto LABEL_8;
  }
  id v38 = (id)*MEMORY[0x263F09670];
  char v39 = sub_240BAF9A0((uint64_t)v38, v19);

  if (v39)
  {
    swift_bridgeObjectRelease();
    if (qword_268C9E7A8 == -1) {
      goto LABEL_22;
    }
    goto LABEL_40;
  }
  id v40 = (id)*MEMORY[0x263F096B0];
  char v41 = sub_240BAF9A0((uint64_t)v40, v19);

  if (v41)
  {
    swift_bridgeObjectRelease();
    if (qword_268C9E7A8 == -1) {
      goto LABEL_22;
    }
    goto LABEL_40;
  }
  id v42 = (id)*MEMORY[0x263F09638];
  char v43 = sub_240BAF9A0((uint64_t)v42, v19);

  if ((v43 & 1) == 0)
  {
    id v45 = (id)*MEMORY[0x263F09708];
    char v46 = sub_240BAF9A0((uint64_t)v45, v19);

    uint64_t v33 = v97;
    if (v46)
    {
      swift_bridgeObjectRelease();
      if (qword_268C9E7A8 == -1)
      {
LABEL_22:
        uint64_t v47 = sub_240BB2980();
        uint64_t v49 = v48;
        swift_storeEnumTagMultiPayload();
        uint64_t v50 = MEMORY[0x245606A20](v47, v49);
        uint64_t v93 = v51;
        uint64_t v52 = sub_240BB3740();
        uint64_t v54 = v53;
        long long v55 = v7;
        uint64_t v56 = (uint64_t)v7;
        long long v57 = v9;
        uint64_t v58 = v97;
        (*(void (**)(char *, void, uint64_t))(v5 + 104))(v55, *MEMORY[0x263F435B8], v97);
        sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
        uint64_t v59 = swift_allocObject();
        *(_OWORD *)(v59 + 16) = xmmword_240BB97E0;
        *(void *)(v59 + 32) = v47;
        *(void *)(v59 + 40) = v49;
        sub_240BB4850();
        uint64_t v60 = sub_240BB3740();
        uint64_t v90 = v52;
        uint64_t v33 = v58;
        uint64_t v9 = v57;
        uint64_t v7 = (char *)v56;
        sub_240A4B454(v96, v56, v94 & 1, (uint64_t)v9, 0, 0, v59, v60, v95, v61, v50, v93, v90, v54);
        goto LABEL_23;
      }
LABEL_40:
      swift_once();
      goto LABEL_22;
    }
    id v71 = (id)*MEMORY[0x263F09690];
    char v72 = sub_240BAF9A0((uint64_t)v71, v19);

    if (v72)
    {
      swift_bridgeObjectRelease();
      uint64_t v73 = sub_240BB3780();
      uint64_t v75 = v74;
      if (qword_268C9E7A8 == -1) {
        goto LABEL_32;
      }
    }
    else
    {
      id v76 = (id)*MEMORY[0x263F09720];
      char v77 = sub_240BAF9A0((uint64_t)v76, v19);

      if ((v77 & 1) == 0)
      {
        id v86 = (id)*MEMORY[0x263F096A0];
        char v87 = sub_240BAF9A0((uint64_t)v86, v19);

        swift_bridgeObjectRelease();
        if (v87)
        {
          if (qword_268C9E7A8 != -1) {
            swift_once();
          }
        }
        else if (qword_268C9E7A8 != -1)
        {
          swift_once();
        }
        goto LABEL_26;
      }
      swift_bridgeObjectRelease();
      uint64_t v73 = sub_240BB3790();
      uint64_t v75 = v78;
      if (qword_268C9E7A8 == -1)
      {
LABEL_32:
        sub_240BB2980();
        sub_240A3ED34(0, (unint64_t *)&qword_26AFD99D8, (uint64_t (*)(uint64_t))sub_240A4C614, MEMORY[0x263F8E0F8]);
        uint64_t v79 = swift_allocObject();
        long long v92 = xmmword_240BB97E0;
        *(_OWORD *)(v79 + 16) = xmmword_240BB97E0;
        *(void *)(v79 + 56) = MEMORY[0x263F8D310];
        *(void *)(v79 + 64) = sub_240A4C66C();
        *(void *)(v79 + 32) = v73;
        *(void *)(v79 + 40) = v75;
        sub_240BB4850();
        uint64_t v80 = sub_240BB6DB0();
        uint64_t v93 = v73;
        uint64_t v82 = v81;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_storeEnumTagMultiPayload();
        uint64_t v33 = v97;
        (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F435C0], v97);
        sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
        uint64_t v83 = swift_allocObject();
        *(_OWORD *)(v83 + 16) = v92;
        *(void *)(v83 + 32) = v80;
        *(void *)(v83 + 40) = v82;
        swift_bridgeObjectRetain_n();
        uint64_t v84 = sub_240BB3760();
        sub_240A4B454(v96, (uint64_t)v7, v94 & 1, (uint64_t)v9, 0, 0, v83, v84, v95, v85, v80, v82, v93, v75);
        goto LABEL_23;
      }
    }
    swift_once();
    goto LABEL_32;
  }
  swift_bridgeObjectRelease();
  char v44 = sub_240BB3730();
  uint64_t v33 = v97;
  if (v44)
  {
    if (qword_268C9E7A8 != -1) {
      swift_once();
    }
  }
  else if (qword_268C9E7A8 != -1)
  {
    swift_once();
  }
LABEL_26:
  uint64_t v63 = sub_240BB2980();
  uint64_t v65 = v64;
  swift_storeEnumTagMultiPayload();
  uint64_t v93 = MEMORY[0x245606A20](v63, v65);
  uint64_t v67 = v66;
  uint64_t v68 = sub_240BB3740();
  uint64_t v70 = v69;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F435B8], v33);
  sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_240BB97E0;
  *(void *)(v34 + 32) = v63;
  *(void *)(v34 + 40) = v65;
  sub_240BB4850();
  uint64_t v36 = sub_240BB3740();
  uint64_t v91 = v70;
  int v37 = v94 & 1;
  uint64_t v88 = v67;
  uint64_t v89 = v68;
LABEL_8:
  sub_240A4B454(v96, (uint64_t)v7, v37, (uint64_t)v9, 0, 0, v34, v36, v95, v35, v93, v88, v89, v91);
LABEL_23:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_240A4C3B8((uint64_t)v9, _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa);
}

uint64_t sub_240A4B36C()
{
  return sub_240A4B38C();
}

uint64_t sub_240A4B38C()
{
  return 0;
}

uint64_t sub_240A4B454@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v80 = a8;
  uint64_t v81 = a7;
  uint64_t v82 = a6;
  uint64_t v83 = a5;
  int v79 = a3;
  uint64_t v78 = a2;
  uint64_t v86 = a1;
  uint64_t v93 = a9;
  uint64_t v15 = sub_240BB37B0();
  uint64_t v88 = *(void *)(v15 - 8);
  uint64_t v89 = v15;
  MEMORY[0x270FA5388]();
  char v87 = (char *)v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_240BB3050();
  uint64_t v77 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v85 = (char *)v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240A3ED34(0, (unint64_t *)&unk_26AFD7148, MEMORY[0x263F437D8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388]();
  id v20 = (char *)v69 - v19;
  sub_240A3ED34(0, &qword_26AFD7B70, MEMORY[0x263F06EA8], v18);
  MEMORY[0x270FA5388]();
  id v22 = (char *)v69 - v21;
  sub_240A3ED34(0, &qword_26AFD7BA8, MEMORY[0x263F43658], v18);
  MEMORY[0x270FA5388]();
  uint64_t v24 = (char *)v69 - v23;
  uint64_t v25 = sub_240BB3660();
  uint64_t v90 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v27 = (char *)v69 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_240BB38D0();
  uint64_t v91 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v30 = (char *)v69 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s14descr26F502CE9O13ActionHandlerC8UserDataVMa(0);
  MEMORY[0x270FA5388]();
  uint64_t v32 = (char *)v69 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A4C418(a4, (uint64_t)v32, _s14descr26F502CE9O13ActionHandlerC8UserDataV9TapActionOMa);
  sub_240BB2770();
  swift_allocObject();
  sub_240BB2760();
  sub_240A20EAC(&qword_268C9ED98, (void (*)(uint64_t))_s14descr26F502CE9O13ActionHandlerC8UserDataVMa);
  long long v92 = v32;
  uint64_t v33 = sub_240BB2750();
  uint64_t v34 = v78;
  uint64_t v70 = v24;
  id v71 = v22;
  uint64_t v35 = v90;
  unint64_t v73 = v36;
  uint64_t v74 = v33;
  char v72 = v20;
  uint64_t v75 = v30;
  uint64_t v37 = v91;
  uint64_t v76 = v28;
  swift_release();
  if (qword_268C9E640 != -1) {
    swift_once();
  }
  v69[8] = a14;
  v69[7] = a13;
  v69[6] = a12;
  v69[5] = a11;
  v69[4] = a10;
  uint64_t v38 = *(void *)algn_268C9ED68;
  v69[1] = qword_268C9ED60;
  v69[3] = *(void *)aAfibBurden;
  char v39 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 16);
  uint64_t v78 = v25;
  v39(v27, v34, v25);
  uint64_t v40 = qword_268C9E650;
  v69[2] = v38;
  sub_240BB4850();
  sub_240BB4850();
  uint64_t v41 = v37;
  if (v40 != -1) {
    swift_once();
  }
  uint64_t v42 = sub_240BB36D0();
  uint64_t v43 = sub_240A395FC(v42, (uint64_t)qword_268C9ED78);
  uint64_t v44 = *(void *)(v42 - 8);
  id v45 = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v70, v43, v42);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v45, 0, 1, v42);
  uint64_t v46 = sub_240BB2B20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v71, 1, 1, v46);
  sub_240BB4850();
  sub_240BB4850();
  sub_240BB4850();
  sub_240BB4850();
  sub_240BB4850();
  uint64_t v47 = v75;
  sub_240BB38A0();
  sub_240BB5070();
  _s14descr26F502CE9O13ActionHandlerCMa(0);
  uint64_t v48 = (uint64_t)v72;
  uint64_t v49 = v76;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v72, v47, v76);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v48, 0, 1, v49);
  uint64_t v50 = *MEMORY[0x263F454E0];
  uint64_t v51 = v77;
  uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 104);
  uint64_t v83 = v27;
  uint64_t v53 = v84;
  uint64_t v54 = v85;
  v52(v85, v50, v84);
  uint64_t v55 = v74;
  unint64_t v56 = v73;
  sub_240A4C480(v74, v73);
  sub_240A20EAC(&qword_268C9EDA0, (void (*)(uint64_t))_s14descr26F502CE9O13ActionHandlerCMa);
  uint64_t v57 = v93;
  sub_240BB3130();
  sub_240A4C4D8(v55, v56);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v54, v53);
  sub_240A4C2E4(v48, (unint64_t *)&unk_26AFD7148, MEMORY[0x263F437D8]);
  sub_240BB38C0();
  sub_240BB3170();
  sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240BB97E0;
  uint64_t v59 = v83;
  sub_240BB3880();
  uint64_t v60 = sub_240BB37C0();
  uint64_t v62 = v61;
  (*(void (**)(char *, uint64_t))(v90 + 8))(v59, v78);
  *(void *)(inited + 32) = v60;
  *(void *)(inited + 40) = v62;
  if (*(void *)(inited + 16)) {
    sub_240A71AF4(inited);
  }
  uint64_t v64 = v88;
  uint64_t v63 = v89;
  uint64_t v65 = v87;
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_240BB31B0();
  (*(void (**)(char *, void, uint64_t))(v64 + 104))(v65, *MEMORY[0x263F43710], v63);
  sub_240BB37A0();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v63);
  sub_240BB31C0();
  sub_240BB3160();
  uint64_t v66 = v91;
  if (qword_268C9E648 != -1) {
    swift_once();
  }
  sub_240A39F7C(qword_268C9ED70);
  sub_240BB3190();
  sub_240A4C4D8(v74, v73);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v75, v76);
  sub_240A4C3B8((uint64_t)v92, _s14descr26F502CE9O13ActionHandlerC8UserDataVMa);
  uint64_t v67 = sub_240BB31D0();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v57, 0, 1, v67);
}

uint64_t sub_240A4C020(void *a1)
{
  sub_240BB77C0();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  id v2 = a1;
  id v3 = objc_msgSend(v2, sel_description);
  sub_240BB6DE0();

  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return 0;
}

uint64_t sub_240A4C158()
{
  return 0;
}

uint64_t sub_240A4C1F4()
{
  uint64_t v1 = sub_240BB56E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_240A4C284()
{
  uint64_t v1 = *(void *)(sub_240BB56E0() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_240A49E18(v2);
}

uint64_t sub_240A4C2E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_240A3ED34(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_240A4C354(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s14descr26F502E21O15SettingsContentVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_240A4C3B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_240A4C418(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_240A4C480(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_240A4C4D8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

unint64_t sub_240A4C530()
{
  unint64_t result = qword_26AFD9948;
  if (!qword_26AFD9948)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD9948);
  }
  return result;
}

uint64_t *sub_240A4C570(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_240A4C5D4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240A4C60C()
{
  return sub_240A4C020(*(void **)(v0 + 16));
}

unint64_t sub_240A4C614()
{
  unint64_t result = qword_26AFD9A10;
  if (!qword_26AFD9A10)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD9A10);
  }
  return result;
}

unint64_t sub_240A4C66C()
{
  unint64_t result = qword_26AFD98D0;
  if (!qword_26AFD98D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD98D0);
  }
  return result;
}

uint64_t sub_240A4C6C0()
{
  uint64_t v1 = v0;
  sub_240A4CD90();
  uint64_t v41 = *(void *)(v2 - 8);
  uint64_t v42 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_240BB73C0();
  uint64_t v34 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v32 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A4CF40();
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v39 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v37 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A4CEA4(0);
  uint64_t v31 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A501F0(0, &qword_268C9EDB0, sub_240A4CEA4, (void (*)(void))sub_240A4CF0C);
  uint64_t v35 = v11;
  uint64_t v33 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v30 - v12;
  uint64_t v15 = *(void *)(v0 + 8);
  uint64_t v14 = *(void *)(v0 + 16);
  uint64_t v43 = sub_240BB3410();
  sub_240A3AD5C();
  sub_240A4CED8();
  sub_240BB6330();
  swift_release();
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v15;
  v16[3] = v14;
  v16[4] = sub_240A4D0E8;
  v16[5] = 0;
  sub_240A50DC8(0, (unint64_t *)&qword_26AFD9858);
  sub_240A4CF0C();
  sub_240A50E10((unint64_t *)&qword_26AFD7558, (unint64_t *)&qword_26AFD9858);
  sub_240BB4850();
  uint64_t v17 = v31;
  sub_240BB6350();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v17);
  id v18 = objc_msgSend(self, sel_defaultCenter);
  if (qword_26AFD75B0 != -1) {
    swift_once();
  }
  uint64_t v19 = v32;
  sub_240BB73D0();

  uint64_t v20 = swift_allocObject();
  long long v21 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v20 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v20 + 32) = v21;
  *(_OWORD *)(v20 + 48) = *(_OWORD *)(v1 + 32);
  *(void *)(v20 + 64) = *(void *)(v1 + 48);
  sub_240A28D58(v1);
  sub_240BB60F0();
  sub_240A3B664();
  sub_240A3ADCC(&qword_26AFD9988, MEMORY[0x263F07CB0]);
  sub_240A3ADCC(&qword_26AFD7528, (void (*)(uint64_t))sub_240A3B664);
  uint64_t v22 = v36;
  uint64_t v23 = v37;
  sub_240BB6470();
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v22);
  sub_240A4D02C(&qword_268C9EDC8, &qword_268C9EDB0, sub_240A4CEA4, (void (*)(void))sub_240A4CF0C);
  sub_240A3ADCC(&qword_26AFD74F8, (void (*)(uint64_t))sub_240A4CF40);
  uint64_t v25 = v39;
  uint64_t v24 = v40;
  uint64_t v26 = v35;
  sub_240BB6370();
  sub_240A3ADCC(&qword_268C9EDD0, (void (*)(uint64_t))sub_240A4CD90);
  uint64_t v27 = v42;
  uint64_t v28 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v24, v27);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v23, v25);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v26);
  return v28;
}

void sub_240A4CD90()
{
  if (!qword_268C9EDA8)
  {
    sub_240A501F0(255, &qword_268C9EDB0, sub_240A4CEA4, (void (*)(void))sub_240A4CF0C);
    sub_240A4CF40();
    sub_240A4D02C(&qword_268C9EDC8, &qword_268C9EDB0, sub_240A4CEA4, (void (*)(void))sub_240A4CF0C);
    sub_240A3ADCC(&qword_26AFD74F8, (void (*)(uint64_t))sub_240A4CF40);
    unint64_t v0 = sub_240BB6050();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9EDA8);
    }
  }
}

void sub_240A4CEA4(uint64_t a1)
{
}

uint64_t sub_240A4CED8()
{
  return sub_240A3ADCC(&qword_26AFD8AC8, (void (*)(uint64_t))sub_240A3AD5C);
}

uint64_t sub_240A4CF0C()
{
  return sub_240A3ADCC(&qword_268C9EDC0, sub_240A4CEA4);
}

void sub_240A4CF40()
{
  if (!qword_26AFD7500)
  {
    sub_240A3B664();
    sub_240BB73C0();
    sub_240A3ADCC(&qword_26AFD7528, (void (*)(uint64_t))sub_240A3B664);
    sub_240A3ADCC(&qword_26AFD9988, MEMORY[0x263F07CB0]);
    unint64_t v0 = sub_240BB60A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD7500);
    }
  }
}

uint64_t sub_240A4D02C(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240A501F0(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A4D07C@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4 = sub_240BB2CF0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4);
  *a2 = result != 1;
  return result;
}

void sub_240A4D0E8(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_240A4D0F4@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v29 = a2;
  sub_240A4958C();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A500F0();
  uint64_t v27 = *(void *)(v6 - 8);
  uint64_t v28 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A501F0(0, &qword_268C9EDF0, (void (*)(uint64_t))sub_240A500F0, (void (*)(void))sub_240A502B8);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v27 - v12;
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_240BB5990();
  sub_240A395FC(v14, (uint64_t)qword_26AFDEC70);
  uint64_t v15 = sub_240BB5970();
  os_log_type_t v16 = sub_240BB71A0();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl(&dword_240A1B000, v15, v16, "Cardio fitness retrocompute available tile dismissed", v17, 2u);
    MEMORY[0x24560B930](v17, -1, -1);
  }

  sub_240BB2CE0();
  uint64_t v18 = sub_240BB2CF0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v5, 0, 1, v18);
  uint64_t v20 = *(void *)(a1 + 8);
  uint64_t v19 = *(void *)(a1 + 16);
  uint64_t v21 = sub_240BB3420();
  sub_240A49B18((uint64_t)v5);
  uint64_t v30 = v21;
  uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
  sub_240A5104C(0, (unint64_t *)&qword_268C9EDE0, MEMORY[0x263EFDE20]);
  sub_240A501AC(&qword_268C9EDE8, (unint64_t *)&qword_268C9EDE0, v22);
  sub_240BB6330();
  swift_release();
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = v20;
  v23[3] = v19;
  v23[4] = sub_240A4D0E8;
  v23[5] = 0;
  sub_240A50DC8(0, (unint64_t *)&qword_26AFD9858);
  sub_240A502B8();
  sub_240A50E10((unint64_t *)&qword_26AFD7558, (unint64_t *)&qword_26AFD9858);
  sub_240BB4850();
  uint64_t v24 = v28;
  sub_240BB6350();
  swift_release();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v24);
  sub_240A4D02C(&qword_268C9EE00, &qword_268C9EDF0, (void (*)(uint64_t))sub_240A500F0, (void (*)(void))sub_240A502B8);
  uint64_t v25 = sub_240BB62E0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *uint64_t v29 = v25;
  return result;
}

uint64_t sub_240A4D598()
{
  uint64_t v1 = (uint64_t)v0;
  sub_240A50324();
  uint64_t v64 = *(void *)(v2 - 8);
  uint64_t v65 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v63 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_240BB73C0();
  uint64_t v58 = *(void *)(v4 - 8);
  uint64_t v59 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v57 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A4CF40();
  uint64_t v61 = *(void *)(v6 - 8);
  uint64_t v62 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v60 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A50578();
  uint64_t v49 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A504E4();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v51 = v12;
  uint64_t v52 = v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A50438(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v53 = v16;
  uint64_t v54 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v50 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A501F0(0, &qword_268C9EE10, sub_240A50438, (void (*)(void))sub_240A5061C);
  uint64_t v55 = *(void *)(v19 - 8);
  uint64_t v56 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v47 = (char *)&v46 - v20;
  uint64_t v21 = v0[4];
  uint64_t v46 = v0[3];
  uint64_t v66 = sub_240BB3410();
  uint64_t v48 = v0[5];
  uint64_t v68 = sub_240BB3410();
  sub_240A3AD5C();
  sub_240A4CED8();
  sub_240BB6320();
  swift_release();
  swift_release();
  sub_240BB3280();
  uint64_t v22 = v49;
  sub_240BB5F60();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v22);
  uint64_t v23 = swift_allocObject();
  long long v24 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v23 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v23 + 32) = v24;
  *(_OWORD *)(v23 + 48) = *(_OWORD *)(v1 + 32);
  *(void *)(v23 + 64) = *(void *)(v1 + 48);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_240A50654;
  *(void *)(v25 + 24) = v23;
  sub_240A28D58(v1);
  sub_240A505E8();
  uint64_t v27 = v50;
  uint64_t v26 = v51;
  sub_240BB6330();
  swift_release();
  uint64_t v28 = v15;
  uint64_t v29 = v47;
  (*(void (**)(char *, uint64_t))(v52 + 8))(v28, v26);
  uint64_t v66 = v46;
  uint64_t v67 = v21;
  sub_240BB4850();
  sub_240BB6E70();
  sub_240BB4850();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  uint64_t v31 = v66;
  uint64_t v30 = v67;
  uint64_t v32 = (void *)swift_allocObject();
  v32[2] = v31;
  _OWORD v32[3] = v30;
  v32[4] = sub_240A4D0E8;
  v32[5] = 0;
  sub_240A50DC8(0, (unint64_t *)&qword_26AFD9858);
  sub_240A5061C();
  sub_240A50E10((unint64_t *)&qword_26AFD7558, (unint64_t *)&qword_26AFD9858);
  sub_240BB4850();
  uint64_t v33 = v53;
  sub_240BB6350();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v27, v33);
  id v34 = objc_msgSend(self, sel_defaultCenter);
  if (qword_26AFD75B8 != -1) {
    swift_once();
  }
  uint64_t v35 = v57;
  sub_240BB73D0();

  uint64_t v36 = swift_allocObject();
  long long v37 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v36 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v36 + 32) = v37;
  *(_OWORD *)(v36 + 48) = *(_OWORD *)(v1 + 32);
  *(void *)(v36 + 64) = *(void *)(v1 + 48);
  sub_240A28D58(v1);
  sub_240BB60F0();
  sub_240A3B664();
  sub_240A3ADCC(&qword_26AFD9988, MEMORY[0x263F07CB0]);
  sub_240A3ADCC(&qword_26AFD7528, (void (*)(uint64_t))sub_240A3B664);
  uint64_t v38 = v59;
  uint64_t v39 = v60;
  sub_240BB6470();
  swift_release();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v35, v38);
  sub_240A4D02C(&qword_268C9EE48, &qword_268C9EE10, sub_240A50438, (void (*)(void))sub_240A5061C);
  sub_240A3ADCC(&qword_26AFD74F8, (void (*)(uint64_t))sub_240A4CF40);
  uint64_t v41 = v62;
  uint64_t v40 = v63;
  uint64_t v42 = v56;
  sub_240BB6370();
  sub_240A3ADCC(&qword_268C9EE50, (void (*)(uint64_t))sub_240A50324);
  uint64_t v43 = v65;
  uint64_t v44 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v40, v43);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v39, v41);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v29, v42);
  return v44;
}

uint64_t sub_240A4DEB4(char *a1, uint64_t a2)
{
  sub_240A4958C();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v24 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v24 - v11;
  int v13 = sub_240A507B0(a1, a2);
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_240BB5990();
  sub_240A395FC(v14, (uint64_t)qword_26AFDEC70);
  sub_240A496B8((uint64_t)a1, (uint64_t)v12);
  sub_240A496B8(a2, (uint64_t)v10);
  uint64_t v15 = sub_240BB5970();
  os_log_type_t v16 = sub_240BB71A0();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v27 = v24;
    *(_DWORD *)uint64_t v17 = 136446978;
    int v25 = v13;
    uint64_t v26 = sub_240A38940(0xD00000000000002ELL, 0x8000000240BBAE90, &v27);
    sub_240BB75F0();
    *(_WORD *)(v17 + 12) = 1026;
    LODWORD(v26) = v25 & 1;
    sub_240BB75F0();
    *(_WORD *)(v17 + 18) = 2082;
    sub_240A496B8((uint64_t)v12, (uint64_t)v7);
    uint64_t v18 = sub_240BB6E10();
    uint64_t v26 = sub_240A38940(v18, v19, &v27);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    sub_240A49B18((uint64_t)v12);
    *(_WORD *)(v17 + 28) = 2082;
    sub_240A496B8((uint64_t)v10, (uint64_t)v7);
    uint64_t v20 = sub_240BB6E10();
    uint64_t v26 = sub_240A38940(v20, v21, &v27);
    LOBYTE(v13) = v25;
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    sub_240A49B18((uint64_t)v10);
    _os_log_impl(&dword_240A1B000, v15, v16, "[%{public}s] Completed dismissal state %{BOOL,public}d, dismissalDate: %{public}s, lastSeenDate: %{public}s", (uint8_t *)v17, 0x26u);
    uint64_t v22 = v24;
    swift_arrayDestroy();
    MEMORY[0x24560B930](v22, -1, -1);
    MEMORY[0x24560B930](v17, -1, -1);
  }
  else
  {
    sub_240A49B18((uint64_t)v12);
    sub_240A49B18((uint64_t)v10);
  }

  return v13 & 1;
}

uint64_t sub_240A4E1F0@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v29 = a2;
  sub_240A4958C();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A500F0();
  uint64_t v27 = *(void *)(v6 - 8);
  uint64_t v28 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A501F0(0, &qword_268C9EDF0, (void (*)(uint64_t))sub_240A500F0, (void (*)(void))sub_240A502B8);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  int v13 = (char *)&v27 - v12;
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_240BB5990();
  sub_240A395FC(v14, (uint64_t)qword_26AFDEC70);
  uint64_t v15 = sub_240BB5970();
  os_log_type_t v16 = sub_240BB71A0();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl(&dword_240A1B000, v15, v16, "Cardio fitness retrocompute completed tile dismissed", v17, 2u);
    MEMORY[0x24560B930](v17, -1, -1);
  }

  sub_240BB2CE0();
  uint64_t v18 = sub_240BB2CF0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v5, 0, 1, v18);
  uint64_t v20 = *(void *)(a1 + 24);
  uint64_t v19 = *(void *)(a1 + 32);
  uint64_t v21 = sub_240BB3420();
  sub_240A49B18((uint64_t)v5);
  uint64_t v30 = v21;
  uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
  sub_240A5104C(0, (unint64_t *)&qword_268C9EDE0, MEMORY[0x263EFDE20]);
  sub_240A501AC(&qword_268C9EDE8, (unint64_t *)&qword_268C9EDE0, v22);
  sub_240BB6330();
  swift_release();
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = v20;
  v23[3] = v19;
  v23[4] = sub_240A4D0E8;
  v23[5] = 0;
  sub_240A50DC8(0, (unint64_t *)&qword_26AFD9858);
  sub_240A502B8();
  sub_240A50E10((unint64_t *)&qword_26AFD7558, (unint64_t *)&qword_26AFD9858);
  sub_240BB4850();
  uint64_t v24 = v28;
  sub_240BB6350();
  swift_release();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v24);
  sub_240A4D02C(&qword_268C9EE00, &qword_268C9EDF0, (void (*)(uint64_t))sub_240A500F0, (void (*)(void))sub_240A502B8);
  uint64_t v25 = sub_240BB62E0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *uint64_t v29 = v25;
  return result;
}

uint64_t sub_240A4E694(char a1)
{
  uint64_t v2 = v1;
  sub_240A4958C();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A510C0();
  uint64_t v25 = *(void *)(v7 - 8);
  uint64_t v26 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_240BB5990();
  sub_240A395FC(v10, (uint64_t)qword_26AFDEC70);
  uint64_t v11 = sub_240BB5970();
  os_log_type_t v12 = sub_240BB71A0();
  if (os_log_type_enabled(v11, v12))
  {
    int v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v28 = v14;
    *(_DWORD *)int v13 = 136446210;
    uint64_t v27 = sub_240A38940(0xD00000000000002ELL, 0x8000000240BBAE90, &v28);
    sub_240BB75F0();
    _os_log_impl(&dword_240A1B000, v11, v12, "[%{public}s] Setting available dismissal date", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v14, -1, -1);
    MEMORY[0x24560B930](v13, -1, -1);
  }

  if (a1)
  {
    sub_240BB2CE0();
    uint64_t v15 = sub_240BB2CF0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v6, 0, 1, v15);
  }
  else
  {
    uint64_t v16 = sub_240BB2CF0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 1, 1, v16);
  }
  uint64_t v17 = *(void *)(v2 + 8);
  uint64_t v18 = *(void *)(v2 + 16);
  uint64_t v19 = sub_240BB3420();
  sub_240A49B18((uint64_t)v6);
  uint64_t v28 = v19;
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = v17;
  v20[3] = v18;
  void v20[4] = nullsub_1;
  v20[5] = 0;
  uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
  sub_240A5104C(0, (unint64_t *)&qword_268C9EDE0, MEMORY[0x263EFDE20]);
  sub_240A50DC8(0, &qword_268C9EE80);
  sub_240A501AC(&qword_268C9EDE8, (unint64_t *)&qword_268C9EDE0, v21);
  sub_240A50E10(&qword_268C9EE90, &qword_268C9EE80);
  sub_240BB4850();
  sub_240BB6350();
  swift_release();
  swift_release();
  sub_240A3ADCC(&qword_268C9EEB8, (void (*)(uint64_t))sub_240A510C0);
  uint64_t v22 = v26;
  uint64_t v23 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v22);
  return v23;
}

uint64_t sub_240A4EB0C(char a1)
{
  uint64_t v2 = v1;
  sub_240A4958C();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A510C0();
  uint64_t v25 = *(void *)(v7 - 8);
  uint64_t v26 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_240BB5990();
  sub_240A395FC(v10, (uint64_t)qword_26AFDEC70);
  uint64_t v11 = sub_240BB5970();
  os_log_type_t v12 = sub_240BB71A0();
  if (os_log_type_enabled(v11, v12))
  {
    int v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v28 = v14;
    *(_DWORD *)int v13 = 136446210;
    uint64_t v27 = sub_240A38940(0xD00000000000002ELL, 0x8000000240BBAE90, &v28);
    sub_240BB75F0();
    _os_log_impl(&dword_240A1B000, v11, v12, "[%{public}s] Setting completed dismissal date", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v14, -1, -1);
    MEMORY[0x24560B930](v13, -1, -1);
  }

  if (a1)
  {
    sub_240BB2CE0();
    uint64_t v15 = sub_240BB2CF0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v6, 0, 1, v15);
  }
  else
  {
    uint64_t v16 = sub_240BB2CF0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 1, 1, v16);
  }
  uint64_t v18 = *(void *)(v2 + 24);
  uint64_t v17 = *(void *)(v2 + 32);
  uint64_t v19 = sub_240BB3420();
  sub_240A49B18((uint64_t)v6);
  uint64_t v28 = v19;
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = v18;
  v20[3] = v17;
  void v20[4] = nullsub_1;
  v20[5] = 0;
  uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
  sub_240A5104C(0, (unint64_t *)&qword_268C9EDE0, MEMORY[0x263EFDE20]);
  sub_240A50DC8(0, &qword_268C9EE80);
  sub_240A501AC(&qword_268C9EDE8, (unint64_t *)&qword_268C9EDE0, v21);
  sub_240A50E10(&qword_268C9EE90, &qword_268C9EE80);
  sub_240BB4850();
  sub_240BB6350();
  swift_release();
  swift_release();
  sub_240A3ADCC(&qword_268C9EEB8, (void (*)(uint64_t))sub_240A510C0);
  uint64_t v22 = v26;
  uint64_t v23 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v22);
  return v23;
}

uint64_t sub_240A4EF84()
{
  uint64_t v1 = v0;
  sub_240A510C0();
  uint64_t v17 = *(void *)(v2 - 8);
  uint64_t v18 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_240BB5990();
  sub_240A395FC(v5, (uint64_t)qword_26AFDEC70);
  uint64_t v6 = sub_240BB5970();
  os_log_type_t v7 = sub_240BB71A0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v20 = v9;
    *(_DWORD *)uint64_t v8 = 136446210;
    uint64_t v19 = sub_240A38940(0xD00000000000002ELL, 0x8000000240BBAE90, &v20);
    sub_240BB75F0();
    _os_log_impl(&dword_240A1B000, v6, v7, "[%{public}s] Setting last seen retrocompute complete date", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v9, -1, -1);
    MEMORY[0x24560B930](v8, -1, -1);
  }

  uint64_t v11 = *(void *)(v1 + 40);
  uint64_t v10 = *(void *)(v1 + 48);
  uint64_t v20 = sub_240BB3420();
  os_log_type_t v12 = (void *)swift_allocObject();
  void v12[2] = v11;
  uint64_t v12[3] = v10;
  v12[4] = nullsub_1;
  v12[5] = 0;
  int v13 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
  sub_240A5104C(0, (unint64_t *)&qword_268C9EDE0, MEMORY[0x263EFDE20]);
  sub_240A50DC8(0, &qword_268C9EE80);
  sub_240A501AC(&qword_268C9EDE8, (unint64_t *)&qword_268C9EDE0, v13);
  sub_240A50E10(&qword_268C9EE90, &qword_268C9EE80);
  sub_240BB4850();
  sub_240BB6350();
  swift_release();
  swift_release();
  sub_240A3ADCC(&qword_268C9EEB8, (void (*)(uint64_t))sub_240A510C0);
  uint64_t v14 = v18;
  uint64_t v15 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v4, v14);
  return v15;
}

uint64_t sub_240A4F328(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_240A4958C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  sub_240A50BFC();
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v35 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v32 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A50CD8();
  uint64_t v36 = *(void *)(v9 - 8);
  uint64_t v37 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v33 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_240BB5990();
  sub_240A395FC(v11, (uint64_t)qword_26AFDEC70);
  os_log_type_t v12 = sub_240BB5970();
  os_log_type_t v13 = sub_240BB71A0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v31 = a1;
    uint64_t v15 = (uint8_t *)v14;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v39 = v16;
    *(_DWORD *)uint64_t v15 = 136446210;
    uint64_t v38 = sub_240A38940(0xD00000000000002ELL, 0x8000000240BBAE90, &v39);
    sub_240BB75F0();
    _os_log_impl(&dword_240A1B000, v12, v13, "[%{public}s] Setting last seen retrocompute complete date if needed", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v16, -1, -1);
    uint64_t v17 = v15;
    a1 = v31;
    MEMORY[0x24560B930](v17, -1, -1);
  }

  uint64_t v18 = *(void *)(v2 + 48);
  uint64_t v31 = *(void *)(v2 + 40);
  uint64_t v39 = sub_240BB3410();
  sub_240A496B8(a1, (uint64_t)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v19 = (*(unsigned __int8 *)(v5 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v20 = swift_allocObject();
  long long v21 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v20 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v20 + 32) = v21;
  *(_OWORD *)(v20 + 48) = *(_OWORD *)(v2 + 32);
  *(void *)(v20 + 64) = *(void *)(v2 + 48);
  sub_240A4971C((uint64_t)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19);
  sub_240A28D58(v2);
  sub_240BB60F0();
  sub_240A3AD5C();
  uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_240A5104C(0, (unint64_t *)&qword_268C9EE68, MEMORY[0x263EFDCF0]);
  sub_240A4CED8();
  sub_240A501AC(&qword_268C9EE70, (unint64_t *)&qword_268C9EE68, v22);
  uint64_t v23 = v32;
  sub_240BB63D0();
  swift_release();
  swift_release();
  uint64_t v24 = (void *)swift_allocObject();
  void v24[2] = v31;
  v24[3] = v18;
  v24[4] = nullsub_1;
  v24[5] = 0;
  sub_240A50DC8(0, &qword_268C9EE80);
  sub_240A3ADCC(&qword_268C9EE88, (void (*)(uint64_t))sub_240A50BFC);
  sub_240A50E10(&qword_268C9EE90, &qword_268C9EE80);
  sub_240BB4850();
  uint64_t v25 = v33;
  uint64_t v26 = v35;
  sub_240BB6350();
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v23, v26);
  sub_240A3ADCC(&qword_268C9EE98, (void (*)(uint64_t))sub_240A50CD8);
  uint64_t v27 = v37;
  uint64_t v28 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v25, v27);
  return v28;
}

uint64_t sub_240A4F8D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v17[0] = a2;
  sub_240A50DC8(0, &qword_268C9EE80);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v17 - v6;
  sub_240A5104C(0, &qword_268C9EEA0, MEMORY[0x263EFDEA0]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  os_log_type_t v12 = (char *)v17 - v11;
  uint64_t v13 = sub_240BB2CF0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(a1, 1, v13) == 1)
  {
    v17[1] = sub_240BB3420();
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
    sub_240A5104C(0, (unint64_t *)&qword_268C9EDE0, MEMORY[0x263EFDE20]);
    sub_240A501AC(&qword_268C9EDE8, (unint64_t *)&qword_268C9EDE0, v14);
    uint64_t v15 = sub_240BB62E0();
    uint64_t result = swift_release();
  }
  else
  {
    sub_240BB6200();
    sub_240A49AC0();
    sub_240BB61E0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_240A501AC(&qword_268C9EEA8, &qword_268C9EEA0, MEMORY[0x263EFDEA0]);
    uint64_t v15 = sub_240BB62E0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  *(void *)v17[0] = v15;
  return result;
}

uint64_t sub_240A4FBD0(void *a1, uint64_t a2, unint64_t a3, void (*a4)(void))
{
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_240BB5990();
  sub_240A395FC(v8, (uint64_t)qword_26AFDEC70);
  sub_240BB4850();
  id v9 = a1;
  sub_240BB4850();
  id v10 = a1;
  uint64_t v11 = sub_240BB5970();
  os_log_type_t v12 = sub_240BB7180();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v19 = v14;
    *(_DWORD *)uint64_t v13 = 136446466;
    sub_240BB4850();
    sub_240A38940(a2, a3, &v19);
    sub_240BB75F0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 12) = 2082;
    id v15 = a1;
    sub_240A49AC0();
    uint64_t v16 = sub_240BB6E10();
    sub_240A38940(v16, v17, &v19);
    sub_240BB75F0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240A1B000, v11, v12, "[CardioFitnessRetroComputeDismissalStateManager] Failed to set value for key %{public}s: %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v14, -1, -1);
    MEMORY[0x24560B930](v13, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  a4();
  return sub_240BB6200();
}

uint64_t sub_240A4FE4C(void *a1, uint64_t a2, unint64_t a3, void (*a4)(uint64_t *__return_ptr), uint64_t a5, char *a6)
{
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_240BB5990();
  sub_240A395FC(v11, (uint64_t)qword_26AFDEC70);
  sub_240BB4850();
  id v12 = a1;
  sub_240BB4850();
  id v13 = a1;
  uint64_t v14 = sub_240BB5970();
  os_log_type_t v15 = sub_240BB7180();
  if (os_log_type_enabled(v14, v15))
  {
    format = a6;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v23 = v17;
    *(_DWORD *)uint64_t v16 = 136446466;
    sub_240BB4850();
    sub_240A38940(a2, a3, &v23);
    sub_240BB75F0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 2082;
    id v18 = a1;
    sub_240A49AC0();
    uint64_t v19 = sub_240BB6E10();
    sub_240A38940(v19, v20, &v23);
    sub_240BB75F0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240A1B000, v14, v15, format, (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v17, -1, -1);
    MEMORY[0x24560B930](v16, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  a4(&v23);
  return sub_240BB6200();
}

uint64_t sub_240A500D8(void **a1)
{
  return sub_240A502FC(a1, "[CardioFitnessRetroComputeDismissalStateManager] Failed to get value for key %{public}s: %{public}s");
}

uint64_t sub_240A500E8@<X0>(uint64_t *a1@<X8>)
{
  return sub_240A4D0F4(v1 + 16, a1);
}

void sub_240A500F0()
{
  if (!qword_268C9EDD8)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
    sub_240A5104C(255, (unint64_t *)&qword_268C9EDE0, MEMORY[0x263EFDE20]);
    sub_240A501AC(&qword_268C9EDE8, (unint64_t *)&qword_268C9EDE0, v0);
    unint64_t v1 = sub_240BB6010();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268C9EDD8);
    }
  }
}

uint64_t sub_240A501AC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240A5104C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240A501F0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_240A50DC8(255, (unint64_t *)&qword_26AFD9858);
    a4();
    sub_240A50E10((unint64_t *)&qword_26AFD7558, (unint64_t *)&qword_26AFD9858);
    unint64_t v6 = sub_240BB6030();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_240A502B8()
{
  return sub_240A3ADCC(&qword_268C9EDF8, (void (*)(uint64_t))sub_240A500F0);
}

uint64_t sub_240A502F0(void **a1)
{
  return sub_240A502FC(a1, "[CardioFitnessRetroComputeDismissalStateManager] Failed to set value for key %{public}s: %{public}s");
}

uint64_t sub_240A502FC(void **a1, char *a2)
{
  return sub_240A4FE4C(*a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void (**)(uint64_t *__return_ptr))(v2 + 32), *(void *)(v2 + 40), a2);
}

void sub_240A50324()
{
  if (!qword_268C9EE08)
  {
    sub_240A501F0(255, &qword_268C9EE10, sub_240A50438, (void (*)(void))sub_240A5061C);
    sub_240A4CF40();
    sub_240A4D02C(&qword_268C9EE48, &qword_268C9EE10, sub_240A50438, (void (*)(void))sub_240A5061C);
    sub_240A3ADCC(&qword_26AFD74F8, (void (*)(uint64_t))sub_240A4CF40);
    unint64_t v0 = sub_240BB6050();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9EE08);
    }
  }
}

void sub_240A50438(uint64_t a1)
{
}

void sub_240A5046C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_240BB6010();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_240A504E4()
{
  if (!qword_268C9EE20)
  {
    sub_240A50578();
    sub_240A3ADCC(&qword_268C9EE30, (void (*)(uint64_t))sub_240A50578);
    unint64_t v0 = sub_240BB6070();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9EE20);
    }
  }
}

void sub_240A50578()
{
  if (!qword_268C9EE28)
  {
    sub_240A3AD5C();
    sub_240A4CED8();
    unint64_t v0 = sub_240BB5F70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9EE28);
    }
  }
}

uint64_t sub_240A505E8()
{
  return sub_240A3ADCC(&qword_268C9EE38, (void (*)(uint64_t))sub_240A504E4);
}

uint64_t sub_240A5061C()
{
  return sub_240A3ADCC(&qword_268C9EE40, sub_240A50438);
}

uint64_t sub_240A50654(char *a1, uint64_t a2)
{
  return sub_240A4DEB4(a1, a2);
}

uint64_t sub_240A5065C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240A50694@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16);
  sub_240A5074C();
  uint64_t result = v5(a1, a1 + *(int *)(v6 + 48));
  *a2 = result & 1;
  return result;
}

uint64_t sub_240A506F0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_240A50740@<X0>(uint64_t *a1@<X8>)
{
  return sub_240A4E1F0(v1 + 16, a1);
}

void sub_240A5074C()
{
  if (!qword_268C9EE58)
  {
    sub_240A4958C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C9EE58);
    }
  }
}

uint64_t sub_240A507B0(char *a1, uint64_t a2)
{
  uint64_t v43 = (char *)a2;
  uint64_t v3 = sub_240BB2EC0();
  uint64_t v41 = *(void *)(v3 - 8);
  uint64_t v42 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v37 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_240BB2EE0();
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v39 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A4958C();
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v40 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  id v12 = (char *)v35 - v11;
  uint64_t v13 = sub_240BB2CF0();
  uint64_t v14 = *(void **)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v36 = (char *)v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v35 - v18;
  MEMORY[0x270FA5388](v17);
  long long v21 = (char *)v35 - v20;
  uint64_t v22 = (unsigned int (*)(char *, uint64_t, uint64_t))v14[6];
  char v23 = 1;
  if (v22(a1, 1, v13) == 1)
  {
    sub_240A496B8((uint64_t)v43, (uint64_t)v12);
    if (v22(v12, 1, v13) == 1)
    {
      uint64_t v24 = (uint64_t)v12;
    }
    else
    {
      uint64_t v25 = (void (*)(char *, char *, uint64_t))v14[4];
      uint64_t v43 = v21;
      v35[0] = v25;
      v35[1] = v14 + 4;
      v25(v21, v12, v13);
      sub_240BB2CE0();
      sub_240BB2EA0();
      uint64_t v27 = v41;
      uint64_t v26 = v42;
      uint64_t v28 = v37;
      (*(void (**)(char *, void, uint64_t))(v41 + 104))(v37, *MEMORY[0x263F07870], v42);
      uint64_t v29 = v40;
      sub_240BB2E70();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v26);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v39);
      if (v22(v29, 1, v13) != 1)
      {
        uint64_t v31 = v36;
        ((void (*)(char *, char *, uint64_t))v35[0])(v36, v29, v13);
        uint64_t v32 = (uint64_t)v43;
        char v23 = sub_240BB2CA0();
        uint64_t v33 = (void (*)(char *, uint64_t))v14[1];
        v33(v31, v13);
        v33(v19, v13);
        v33((char *)v32, v13);
        return v23 & 1;
      }
      uint64_t v30 = (void (*)(char *, uint64_t))v14[1];
      v30(v19, v13);
      v30(v43, v13);
      uint64_t v24 = (uint64_t)v29;
    }
    sub_240A49B18(v24);
    char v23 = 0;
  }
  return v23 & 1;
}

void sub_240A50BFC()
{
  if (!qword_268C9EE60)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_240A5104C(255, (unint64_t *)&qword_268C9EE68, MEMORY[0x263EFDCF0]);
    sub_240A3AD5C();
    sub_240A501AC(&qword_268C9EE70, (unint64_t *)&qword_268C9EE68, v0);
    sub_240A4CED8();
    unint64_t v1 = sub_240BB60A0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268C9EE60);
    }
  }
}

void sub_240A50CD8()
{
  if (!qword_268C9EE78)
  {
    sub_240A50BFC();
    sub_240A50DC8(255, &qword_268C9EE80);
    sub_240A3ADCC(&qword_268C9EE88, (void (*)(uint64_t))sub_240A50BFC);
    sub_240A50E10(&qword_268C9EE90, &qword_268C9EE80);
    unint64_t v0 = sub_240BB6030();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9EE78);
    }
  }
}

void sub_240A50DC8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_240BB61F0();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_240A50E10(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240A50DC8(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A50E60()
{
  sub_240A4958C();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 72) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_240BB2CF0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_240A50F9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_240A4958C();

  return sub_240A4F8D4(a1, a2);
}

uint64_t sub_240A51028(void **a1)
{
  return sub_240A4FBD0(*a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(void))(v1 + 32));
}

void sub_240A5104C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    unint64_t v6 = sub_240A49AC0();
    unint64_t v7 = a3(a1, MEMORY[0x263F8EE60] + 8, v6, MEMORY[0x263F8E4E0]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_240A510C0()
{
  if (!qword_268C9EEB0)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
    sub_240A5104C(255, (unint64_t *)&qword_268C9EDE0, MEMORY[0x263EFDE20]);
    sub_240A50DC8(255, &qword_268C9EE80);
    sub_240A501AC(&qword_268C9EDE8, (unint64_t *)&qword_268C9EDE0, v0);
    sub_240A50E10(&qword_268C9EE90, &qword_268C9EE80);
    unint64_t v1 = sub_240BB6030();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268C9EEB0);
    }
  }
}

uint64_t sub_240A511DC()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t destroy for CardioFitnessRetroComputeDismissalStateManager()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *assignWithCopy for CardioFitnessRetroComputeDismissalStateManager(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for CardioFitnessRetroComputeDismissalStateManager(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for CardioFitnessRetroComputeDismissalStateManager(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CardioFitnessRetroComputeDismissalStateManager(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CardioFitnessRetroComputeDismissalStateManager(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessRetroComputeDismissalStateManager()
{
  return &type metadata for CardioFitnessRetroComputeDismissalStateManager;
}

id sub_240A51438()
{
  return sub_240A51460(&OBJC_IVAR____TtC5Heart16TitleDetailsView____lazy_storage___titleLabel);
}

id sub_240A5144C()
{
  return sub_240A51460(&OBJC_IVAR____TtC5Heart16TitleDetailsView____lazy_storage___detailLabel);
}

id sub_240A51460(uint64_t *a1)
{
  uint64_t v2 = *a1;
  long long v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    id v4 = *(id *)(v1 + *a1);
  }
  else
  {
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v6 = (void *)sub_240BB6DA0();
    objc_msgSend(v5, sel_setText_, v6);

    id v7 = objc_msgSend(self, sel_labelColor);
    objc_msgSend(v5, sel_setTextColor_, v7);

    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    uint64_t v8 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    id v4 = v5;

    long long v3 = 0;
  }
  id v9 = v3;
  return v4;
}

uint64_t sub_240A515E8()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  sub_240A34E00();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_240BBAEF0;
  *(void *)(v2 + 32) = sub_240A51438();
  *(void *)(v2 + 40) = sub_240A5144C();
  sub_240BB6F30();
  sub_240BB7480();
  swift_bridgeObjectRelease();
  id v46 = self;
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_240BBAF00;
  id v4 = sub_240A51438();
  id v5 = objc_msgSend(v4, sel_topAnchor);

  id v6 = objc_msgSend(v1, sel_topAnchor);
  id v7 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v6);

  *(void *)(v3 + 32) = v7;
  id v8 = sub_240A51438();
  id v9 = objc_msgSend(v8, sel_leadingAnchor);

  id v10 = objc_msgSend(v1, sel_leadingAnchor);
  id v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v10, 0.0);

  *(void *)(v3 + 40) = v11;
  id v12 = sub_240A51438();
  id v13 = objc_msgSend(v12, sel_trailingAnchor);

  id v14 = objc_msgSend(v1, sel_trailingAnchor);
  id v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v14, -0.0);

  *(void *)(v3 + 48) = v15;
  id v16 = sub_240A5144C();
  id v17 = objc_msgSend(v16, sel_topAnchor);

  id v18 = sub_240A51438();
  id v19 = objc_msgSend(v18, sel_bottomAnchor);

  id v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v19, 4.0);
  *(void *)(v3 + 56) = v20;
  id v21 = sub_240A5144C();
  id v22 = objc_msgSend(v21, sel_leadingAnchor);

  id v23 = sub_240A51438();
  id v24 = objc_msgSend(v23, sel_leadingAnchor);

  id v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v24);
  *(void *)(v3 + 64) = v25;
  id v26 = sub_240A5144C();
  id v27 = objc_msgSend(v26, sel_trailingAnchor);

  id v28 = sub_240A51438();
  id v29 = objc_msgSend(v28, sel_trailingAnchor);

  id v30 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v29);
  *(void *)(v3 + 72) = v30;
  id v31 = sub_240A5144C();
  id v32 = objc_msgSend(v31, sel_bottomAnchor);

  id v33 = objc_msgSend(v1, sel_bottomAnchor);
  id v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v33);

  *(void *)(v3 + 80) = v34;
  sub_240BB6F30();
  sub_240A34DC4(0, (unint64_t *)&qword_268CA2490);
  uint64_t v35 = (void *)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v46, sel_activateConstraints_, v35);

  id v36 = sub_240A51438();
  sub_240A34DC4(0, (unint64_t *)&qword_268C9EEE0);
  uint64_t v37 = (void *)sub_240BB7470();
  objc_msgSend(v36, sel_setFont_, v37);

  id v38 = sub_240A5144C();
  uint64_t v39 = (void *)sub_240BB7470();
  objc_msgSend(v38, sel_setFont_, v39);

  sub_240A51C7C();
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_240BBAE40;
  uint64_t v41 = sub_240BB5C10();
  uint64_t v42 = MEMORY[0x263F82018];
  *(void *)(v40 + 32) = v41;
  *(void *)(v40 + 40) = v42;
  uint64_t v43 = sub_240BB5A30();
  uint64_t v44 = MEMORY[0x263F81EC8];
  *(void *)(v40 + 48) = v43;
  *(void *)(v40 + 56) = v44;
  sub_240BB74A0();
  sub_240BB50A0();

  return swift_bridgeObjectRelease();
}

id sub_240A51BB0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TitleDetailsView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for TitleDetailsView()
{
  return self;
}

void sub_240A51C7C()
{
  if (!qword_268C9EEE8)
  {
    sub_240A51CD4();
    unint64_t v0 = sub_240BB7AB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9EEE8);
    }
  }
}

unint64_t sub_240A51CD4()
{
  unint64_t result = qword_268C9EEF0;
  if (!qword_268C9EEF0)
  {
    sub_240A51D10();
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C9EEF0);
  }
  return result;
}

unint64_t sub_240A51D10()
{
  unint64_t result = qword_268C9EEF8;
  if (!qword_268C9EEF8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C9EEF8);
  }
  return result;
}

void sub_240A51D6C()
{
  id v0 = sub_240A51438();
  sub_240A34DC4(0, (unint64_t *)&qword_268C9EEE0);
  uint64_t v1 = (void *)sub_240BB7470();
  objc_msgSend(v0, sel_setFont_, v1);

  id v2 = sub_240A5144C();
  id v3 = (id)sub_240BB7470();
  objc_msgSend(v2, sel_setFont_, v3);
}

uint64_t destroy for AFibBurdenPDFChartRenderable(uint64_t a1)
{
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1);

  return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 40);
}

uint64_t initializeWithCopy for AFibBurdenPDFChartRenderable(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  return a1;
}

uint64_t *assignWithCopy for AFibBurdenPDFChartRenderable(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t *sub_240A51F9C(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    id v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *id v3 = v12;
      }
      else
      {
        id v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *id v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for AFibBurdenPDFChartRenderable(uint64_t a1, uint64_t a2)
{
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for AFibBurdenPDFChartRenderable(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AFibBurdenPDFChartRenderable(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFChartRenderable()
{
  return &type metadata for AFibBurdenPDFChartRenderable;
}

uint64_t sub_240A522D4()
{
  sub_240A3466C(v0, v0[3]);
  sub_240BB3EC0();
  sub_240A3466C(v0 + 5, v0[8]);
  return sub_240BB3EC0();
}

double sub_240A52360()
{
  sub_240A3466C(v0, v0[3]);
  sub_240BB3EB0();
  CGRectGetHeight(v4);
  sub_240A3466C(v0 + 5, v0[8]);
  sub_240BB3EB0();
  CGRectGetHeight(v5);
  sub_240BB3C60();
  double v2 = v1;
  sub_240BB3C60();
  CGRectGetWidth(v6);
  return v2;
}

uint64_t sub_240A52428(uint64_t a1)
{
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  unint64_t v4 = sub_240A5262C();
  *id v3 = v1;
  v3[1] = sub_240A524D4;
  return MEMORY[0x270F33478](a1, v4);
}

uint64_t sub_240A524D4(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  CGRect v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

unint64_t sub_240A525D8()
{
  unint64_t result = qword_268C9EF08;
  if (!qword_268C9EF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9EF08);
  }
  return result;
}

unint64_t sub_240A5262C()
{
  unint64_t result = qword_268C9EF10;
  if (!qword_268C9EF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9EF10);
  }
  return result;
}

void sub_240A52680(unsigned __int8 *a1@<X8>)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    id v3 = *(void **)(Strong + 24);
    if (v3)
    {
      id v4 = v3;
      CGRect v5 = (void *)sub_240BB56F0();
      unsigned __int8 v6 = objc_msgSend(v5, sel_areAllRequirementsSatisfied);
      swift_release();
    }
    else
    {
      char v7 = sub_240BB56D0();
      swift_release();
      unsigned __int8 v6 = v7 & 1;
    }
  }
  else
  {
    unsigned __int8 v6 = 2;
  }
  *a1 = v6;
}

uint64_t sub_240A52740()
{
  return swift_deallocClassInstance();
}

void **initializeBufferWithCopyOfBuffer for FeatureStatusFeedItemRequirement.PortionToCheck(void **a1, void **a2)
{
  id v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void destroy for FeatureStatusFeedItemRequirement.PortionToCheck(id *a1)
{
}

void **assignWithCopy for FeatureStatusFeedItemRequirement.PortionToCheck(void **a1, void **a2)
{
  id v3 = *a2;
  id v4 = *a1;
  *a1 = *a2;
  id v5 = v3;

  return a1;
}

void *initializeWithTake for FeatureStatusFeedItemRequirement.PortionToCheck(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

void **assignWithTake for FeatureStatusFeedItemRequirement.PortionToCheck(void **a1, void **a2)
{
  id v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for FeatureStatusFeedItemRequirement.PortionToCheck(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FeatureStatusFeedItemRequirement.PortionToCheck(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_240A528E4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_240A528FC(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for FeatureStatusFeedItemRequirement.PortionToCheck()
{
  return &type metadata for FeatureStatusFeedItemRequirement.PortionToCheck;
}

uint64_t sub_240A5292C()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240A52964()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_240A5299C(unsigned __int8 *a1@<X8>)
{
}

uint64_t sub_240A529A8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v43 = a2;
  sub_240A550A8();
  uint64_t v44 = *(void *)(v5 - 8);
  uint64_t v45 = v5;
  MEMORY[0x270FA5388](v5);
  char v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_240BB5990();
  uint64_t v46 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  id v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  id v13 = (char *)&v40 - v12;
  uint64_t v14 = *a1;
  uint64_t v15 = a1[1];
  id v16 = sub_240A52F50(*a1, v15);
  if (v16)
  {
    id v17 = v16;
    sub_240BB3BF0();
    swift_bridgeObjectRetain_n();
    id v18 = sub_240BB5970();
    os_log_type_t v19 = sub_240BB71A0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      uint64_t v49 = v41;
      *(_DWORD *)uint64_t v20 = 136446466;
      uint64_t v42 = a3;
      uint64_t v21 = sub_240BB7C80();
      uint64_t v43 = v8;
      uint64_t v47 = sub_240A38940(v21, v22, &v49);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2082;
      uint64_t v47 = v14;
      uint64_t v48 = v15;
      sub_240A55020();
      sub_240BB4850();
      uint64_t v23 = sub_240BB6E10();
      uint64_t v47 = sub_240A38940(v23, v24, &v49);
      a3 = v42;
      sub_240BB75F0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v18, v19, "[%{public}s] Created mockState from mockStateString: %{public}s", (uint8_t *)v20, 0x16u);
      uint64_t v25 = v41;
      swift_arrayDestroy();
      MEMORY[0x24560B930](v25, -1, -1);
      MEMORY[0x24560B930](v20, -1, -1);

      (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v43);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v8);
    }
    uint64_t v47 = (uint64_t)v17;
    LOBYTE(v48) = 0;
    sub_240A54844(0, (unint64_t *)&qword_26AFD7678, &qword_26AFD75E0);
    id v33 = v17;
    sub_240BB6200();
    sub_240A255B4(&qword_268C9EF20, (void (*)(uint64_t))sub_240A550A8);
    uint64_t v34 = v45;
    uint64_t v35 = sub_240BB62E0();

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v7, v34);
  }
  else
  {
    sub_240BB3BF0();
    id v26 = sub_240BB5970();
    os_log_type_t v27 = sub_240BB71A0();
    if (os_log_type_enabled(v26, v27))
    {
      id v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = v8;
      uint64_t v30 = swift_slowAlloc();
      uint64_t v47 = v30;
      *(_DWORD *)id v28 = 136446210;
      uint64_t v31 = sub_240BB7C80();
      uint64_t v49 = sub_240A38940(v31, v32, &v47);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v26, v27, "[%{public}s] Creating real state publisher", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v30, -1, -1);
      MEMORY[0x24560B930](v28, -1, -1);

      (*(void (**)(char *, uint64_t))(v46 + 8))(v13, v29);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v46 + 8))(v13, v8);
    }
    id v37 = objc_allocWithZone((Class)type metadata accessor for CMVO2MaxRetrocomputeStatePublisher());
    id v38 = sub_240A2C1D0(0);
    uint64_t v39 = sub_240A21D90();

    uint64_t v47 = v39;
    sub_240A3B3D0(0, (unint64_t *)&qword_26AFD7550, (unint64_t *)&qword_26AFD7678, &qword_26AFD75E0);
    sub_240A3B4B4();
    uint64_t v35 = sub_240BB62E0();
    uint64_t result = swift_release();
  }
  *a3 = v35;
  return result;
}

id sub_240A52F50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240BB5990();
  uint64_t v48 = *(void *)(v4 - 8);
  uint64_t v49 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v47 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240BB2CF0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  id v13 = (char *)&v46 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v46 - v14;
  sub_240A4958C();
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  os_log_type_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  unint64_t v22 = (char *)&v46 - v21;
  MEMORY[0x270FA5388](v20);
  unint64_t v24 = (char *)&v46 - v23;
  if (!a2) {
    return 0;
  }
  if (a1 == 0x6C62616C69617661 && a2 == 0xE900000000000065 || (sub_240BB7AE0() & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v24, 1, 1, v6);
    sub_240BB2CE0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v24, 1, v6) == 1)
    {
      uint64_t v25 = 0;
    }
    else
    {
      uint64_t v25 = (void *)sub_240BB2C90();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v24, v6);
    }
    id v26 = objc_allocWithZone(MEMORY[0x263F017C0]);
    os_log_type_t v27 = (void *)sub_240BB2C90();
    id v28 = objc_msgSend(v26, sel_initWithStatus_startDate_endDate_meanDelta_, 1, v25, v27, 0);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
    return v28;
  }
  if (a1 == 0x616C696176616E75 && a2 == 0xEB00000000656C62 || (sub_240BB7AE0() & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v22, 1, 1, v6);
    sub_240BB2CE0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v22, 1, v6) == 1)
    {
      uint64_t v29 = 0;
    }
    else
    {
      uint64_t v29 = (void *)sub_240BB2C90();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v22, v6);
    }
    id v30 = objc_allocWithZone(MEMORY[0x263F017C0]);
    uint64_t v31 = (void *)sub_240BB2C90();
    id v28 = objc_msgSend(v30, sel_initWithStatus_startDate_endDate_meanDelta_, 0, v29, v31, 0);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    return v28;
  }
  if ((a1 != 0x6574656C706D6F63 || a2 != 0xE800000000000000) && (sub_240BB7AE0() & 1) == 0)
  {
    id v36 = v47;
    sub_240BB3BF0();
    swift_bridgeObjectRetain_n();
    id v37 = sub_240BB5970();
    os_log_type_t v38 = sub_240BB7180();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      uint64_t v52 = v40;
      *(_DWORD *)uint64_t v39 = 136446466;
      uint64_t v41 = sub_240BB7C80();
      uint64_t v50 = sub_240A38940(v41, v42, &v52);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2082;
      uint64_t v50 = a1;
      uint64_t v51 = a2;
      sub_240A55020();
      sub_240BB4850();
      uint64_t v43 = sub_240BB6E10();
      uint64_t v50 = sub_240A38940(v43, v44, &v52);
      sub_240BB75F0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v37, v38, "[%{public}s] Unrecognized mockStateString: %{public}s", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v40, -1, -1);
      MEMORY[0x24560B930](v39, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v48 + 8))(v36, v49);
    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v19, 1, 1, v6);
  sub_240BB2CE0();
  sub_240A34DC4(0, (unint64_t *)&qword_268CA10E0);
  unint64_t v32 = (void *)sub_240BB74C0();
  id v33 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v19, 1, v6) != 1)
  {
    id v33 = (void *)sub_240BB2C90();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
  }
  id v34 = objc_allocWithZone(MEMORY[0x263F017C0]);
  uint64_t v35 = (void *)sub_240BB2C90();
  id v28 = objc_msgSend(v34, sel_initWithStatus_startDate_endDate_meanDelta_, 3, v33, v35, v32);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return v28;
}

void sub_240A536C0(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_240BB5990();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB3BF0();
  uint64_t v6 = sub_240BB5970();
  os_log_type_t v7 = sub_240BB7180();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v18 = a1;
    uint64_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v20 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t v11 = sub_240BB7C80();
    uint64_t v19 = sub_240A38940(v11, v12, &v20);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v6, v7, "[%{public}s] Failed to get mockStateString, return real state publisher", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v10, -1, -1);
    id v13 = v9;
    a1 = v18;
    MEMORY[0x24560B930](v13, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v14 = objc_allocWithZone((Class)type metadata accessor for CMVO2MaxRetrocomputeStatePublisher());
  uint64_t v15 = sub_240A2C1D0(0);
  uint64_t v16 = sub_240A21D90();

  *a1 = v16;
}

uint64_t sub_240A538D0@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v27 = a3;
  id v28 = a4;
  uint64_t v6 = sub_240BB3240();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v26 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_240BB32A0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  id v13 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v12);
  int v24 = *a1;
  id v14 = *(void (**)(void))(v10 + 16);
  uint64_t v25 = &v23[-v15];
  v14();
  if (qword_26AFD72C0 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_240A395FC(v6, (uint64_t)qword_26AFDEAA0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v26, v16, v6);
  ((void (*)(unsigned char *, uint64_t, uint64_t))v14)(v13, a2, v9);
  unint64_t v17 = (*(unsigned __int8 *)(v10 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = v24;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v10 + 32))(v18 + v17, v13, v9);
  *(void *)(v18 + ((v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8)) = v27;
  uint64_t v19 = sub_240BB32E0();
  uint64_t v20 = MEMORY[0x263F456B8];
  uint64_t v21 = v28;
  v28[3] = v19;
  v21[4] = v20;
  sub_240A23B08(v21);
  return sub_240BB32C0();
}

void sub_240A53B94(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_240BB5990();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v31 - v11;
  if (a1)
  {
    sub_240BB3BF0();
    id v13 = sub_240BB5970();
    os_log_type_t v14 = sub_240BB71A0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v32 = a3;
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v31 = a2;
      uint64_t v17 = v16;
      uint64_t v34 = v16;
      *(_DWORD *)uint64_t v15 = 136446210;
      uint64_t v18 = sub_240BB7C80();
      uint64_t v33 = sub_240A38940(v18, v19, &v34);
      a3 = v32;
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v13, v14, "[%{public}s] Creating available(promote: false) state feed item", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v17, -1, -1);
      MEMORY[0x24560B930](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    uint64_t v20 = (void *)sub_240BB3270();
    uint64_t v21 = v20;
    uint64_t v22 = a3;
    char v23 = 0;
  }
  else
  {
    sub_240BB3BF0();
    int v24 = sub_240BB5970();
    os_log_type_t v25 = sub_240BB71A0();
    if (os_log_type_enabled(v24, v25))
    {
      id v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v31 = a2;
      uint64_t v28 = v27;
      uint64_t v34 = v27;
      uint64_t v32 = a3;
      *(_DWORD *)id v26 = 136446210;
      uint64_t v29 = sub_240BB7C80();
      uint64_t v33 = sub_240A38940(v29, v30, &v34);
      a3 = v32;
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v24, v25, "[%{public}s] Creating available(promote: true) state feed item", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v28, -1, -1);
      MEMORY[0x24560B930](v26, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    uint64_t v20 = (void *)sub_240BB3270();
    uint64_t v21 = v20;
    uint64_t v22 = a3;
    char v23 = 1;
  }
  sub_240AFE464(v20, v23, 0, v22);
}

uint64_t sub_240A53F10@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>, double a5@<D0>)
{
  uint64_t v30 = a3;
  uint64_t v31 = a4;
  uint64_t v8 = sub_240BB3240();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v29 = &v26[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_240BB32A0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = &v26[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v14);
  int v27 = *a1;
  uint64_t v16 = *(void (**)(void))(v12 + 16);
  uint64_t v28 = &v26[-v17];
  v16();
  if (qword_26AFD72C0 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_240A395FC(v8, (uint64_t)qword_26AFDEAA0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(v29, v18, v8);
  ((void (*)(unsigned char *, uint64_t, uint64_t))v16)(v15, a2, v11);
  unint64_t v19 = (*(unsigned __int8 *)(v12 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v20 = (v13 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = swift_allocObject();
  *(unsigned char *)(v21 + 16) = v27;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v12 + 32))(v21 + v19, v15, v11);
  *(double *)(v21 + v20) = a5;
  *(void *)(v21 + ((v20 + 15) & 0xFFFFFFFFFFFFFFF8)) = v30;
  uint64_t v22 = sub_240BB32E0();
  uint64_t v23 = MEMORY[0x263F456B8];
  int v24 = v31;
  v31[3] = v22;
  v24[4] = v23;
  sub_240A23B08(v24);
  return sub_240BB32C0();
}

void sub_240A541EC(char a1@<W0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  char v3 = a3.n128_u8[0];
  uint64_t v6 = sub_240BB5990();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v29 - v11;
  if (a1)
  {
    sub_240BB3BF0();
    uint64_t v13 = sub_240BB5970();
    os_log_type_t v14 = sub_240BB71A0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v32 = v16;
      uint64_t v30 = v6;
      *(_DWORD *)uint64_t v15 = 136446210;
      uint64_t v17 = sub_240BB7C80();
      uint64_t v31 = sub_240A38940(v17, v18, &v32);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v13, v14, "[%{public}s] Complete state feed item dismissed, deleting feed item", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v16, -1, -1);
      MEMORY[0x24560B930](v15, -1, -1);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v30);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    }
    uint64_t v27 = sub_240BB31D0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(a2, 1, 1, v27);
  }
  else
  {
    sub_240BB3BF0();
    unint64_t v19 = sub_240BB5970();
    os_log_type_t v20 = sub_240BB71A0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v30 = v6;
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v29 = a2;
      uint64_t v23 = v22;
      uint64_t v32 = v22;
      *(_DWORD *)uint64_t v21 = 136446210;
      uint64_t v24 = sub_240BB7C80();
      uint64_t v31 = sub_240A38940(v24, v25, &v32);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v19, v20, "[%{public}s] Creating complete state feed item", v21, 0xCu);
      swift_arrayDestroy();
      uint64_t v26 = v23;
      a2 = v29;
      MEMORY[0x24560B930](v26, -1, -1);
      MEMORY[0x24560B930](v21, -1, -1);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v30);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
    uint64_t v28 = (void *)sub_240BB3270();
    sub_240AFE464(v28, v3, 0x40u, a2);
  }
}

uint64_t sub_240A545C0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Heart42CardioFitnessRetroComputeGeneratorPipeline_domain;
  uint64_t v2 = sub_240BB3240();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + OBJC_IVAR____TtC5Heart42CardioFitnessRetroComputeGeneratorPipeline_dismissalStateManaging);

  return swift_deallocClassInstance();
}

uint64_t sub_240A54680()
{
  return type metadata accessor for CardioFitnessRetroComputeGeneratorPipeline();
}

uint64_t sub_240A54688()
{
  uint64_t result = sub_240BB3240();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_240A54730()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_240A54780()
{
  uint64_t v1 = sub_240BB32A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + v6);

  return MEMORY[0x270FA0238](v0, ((v6 + 47) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

void sub_240A54844(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_240A34DC4(255, a3);
    sub_240A39BC8(255, (unint64_t *)&qword_26AFD99E0);
    unint64_t v4 = sub_240BB7C20();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_240A548CC()
{
  uint64_t v1 = sub_240BB32A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + v6);

  return MEMORY[0x270FA0238](v0, v6 + 40, v5);
}

uint64_t sub_240A54980()
{
  return sub_240A255B4(&qword_26AFD7528, (void (*)(uint64_t))sub_240A3B664);
}

uint64_t sub_240A549B4()
{
  uint64_t v1 = sub_240BB32A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_240A54A58@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_240BB32A0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  double v8 = *(double *)(v2 + v7);
  uint64_t v9 = *(void *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_240A53F10(a1, v2 + v6, v9, a2, v8);
}

uint64_t sub_240A54B10()
{
  uint64_t v1 = sub_240BB32A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_240A54BAC@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_240BB32A0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_240A538D0(a1, v2 + v6, v7, a2);
}

uint64_t sub_240A54C58()
{
  uint64_t v1 = sub_240BB32A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 17) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

void sub_240A54CF4(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_240BB32A0() - 8);
  char v4 = *(unsigned char *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_240A53B94(v4, v5, a1);
}

uint64_t sub_240A54D94()
{
  uint64_t v1 = sub_240BB32A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 17) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

void sub_240A54E38(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_240BB32A0() - 8);
  char v4 = *(unsigned char *)(v1 + 16);
  v5.n128_u64[0] = *(void *)(v1
                             + ((*(void *)(v3 + 64)
                               + ((*(unsigned __int8 *)(v3 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
                               + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_240A541EC(v4, a1, v5);
}

void sub_240A54EE4()
{
  if (!qword_26AFD7478)
  {
    sub_240A3B3D0(255, (unint64_t *)&qword_26AFD7550, (unint64_t *)&qword_26AFD7678, &qword_26AFD75E0);
    sub_240A39BC8(255, (unint64_t *)&qword_26AFD99E0);
    sub_240A3B4B4();
    unint64_t v0 = sub_240BB5FD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD7478);
    }
  }
}

void sub_240A54FA0()
{
  if (!qword_26AFD7570)
  {
    sub_240A55020();
    sub_240A39BC8(255, (unint64_t *)&qword_26AFD99E0);
    unint64_t v0 = sub_240BB6220();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD7570);
    }
  }
}

void sub_240A55020()
{
  if (!qword_26AFD7580)
  {
    unint64_t v0 = sub_240BB75E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD7580);
    }
  }
}

uint64_t sub_240A55078()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240A55088@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_240A529A8(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_240A55090()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_240A550A0(uint64_t *a1@<X8>)
{
}

void sub_240A550A8()
{
  if (!qword_26AFD7560)
  {
    sub_240A54844(255, (unint64_t *)&qword_26AFD7678, &qword_26AFD75E0);
    unint64_t v0 = sub_240BB61F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD7560);
    }
  }
}

uint64_t sub_240A55118()
{
  uint64_t v0 = sub_240BB55A0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB5590();
  sub_240BB5580();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

id sub_240A55200()
{
  sub_240A3A1D8();
  id result = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_lowCardioFitnessEventType);
  if (!result) {
    __break(1u);
  }
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessNotificationsDataTypeDetailDataSourceProvider()
{
  return &type metadata for CardioFitnessNotificationsDataTypeDetailDataSourceProvider;
}

uint64_t sub_240A5524C()
{
  sub_240A4C530();
  uint64_t result = MEMORY[0x24560A470]((id)*MEMORY[0x263F09BF8]);
  qword_268C9EF28 = result;
  return result;
}

uint64_t sub_240A55290()
{
  uint64_t v3 = sub_240BB6DE0();
  uint64_t v5 = v0;
  sub_240BB6E70();
  if (qword_268C9E658 != -1) {
    swift_once();
  }
  id v1 = objc_msgSend((id)qword_268C9EF28, sel_identifier, v3, v5);
  sub_240BB6DE0();

  sub_240BB6E70();
  uint64_t result = swift_bridgeObjectRelease();
  qword_268C9EF30 = v4;
  *(void *)algn_268C9EF38 = v6;
  return result;
}

uint64_t sub_240A55368(__int16 a1)
{
  unsigned __int8 v1 = a1;
  if (!HIBYTE(a1))
  {
    if (a1 == 10)
    {
      if (qword_268C9E660 == -1) {
        goto LABEL_5;
      }
      goto LABEL_21;
    }
    if (qword_268C9E660 != -1) {
      swift_once();
    }
    uint64_t v5 = qword_268C9EF30;
    sub_240BB4850();
    sub_240BB6E70();
    sub_240A55704(v1);
    sub_240BB6E70();
LABEL_19:
    swift_bridgeObjectRelease();
    return v5;
  }
  if (HIBYTE(a1) != 1)
  {
    sub_240BB77C0();
    if (qword_268C9E660 != -1) {
      swift_once();
    }
    uint64_t v2 = qword_268C9EF30;
    sub_240BB4850();
    swift_bridgeObjectRelease();
    uint64_t v5 = v2;
    goto LABEL_12;
  }
  if (a1 != 5)
  {
    sub_240BB77C0();
    if (qword_268C9E660 != -1) {
      swift_once();
    }
    uint64_t v3 = qword_268C9EF30;
    sub_240BB4850();
    swift_bridgeObjectRelease();
    uint64_t v5 = v3;
    sub_240BB6E70();
    sub_240BB6E70();
    goto LABEL_19;
  }
  if (qword_268C9E660 != -1) {
LABEL_21:
  }
    swift_once();
LABEL_5:
  uint64_t v5 = qword_268C9EF30;
  sub_240BB4850();
LABEL_12:
  sub_240BB6E70();
  return v5;
}

unint64_t sub_240A55704(unsigned __int8 a1)
{
  int v3 = a1 - 5;
  unint64_t result = 0xD000000000000017;
  switch(v3)
  {
    case 0:
      unint64_t result = 0x746361466566694CLL;
      break;
    case 1:
      return result;
    case 2:
      unint64_t result = 0xD000000000000019;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      v5[4] = v1;
      v5[5] = v2;
      strcpy((char *)v5, "LifeFactors.");
      BYTE5(v5[1]) = 0;
      HIWORD(v5[1]) = -5120;
      sub_240BB6E70();
      swift_bridgeObjectRelease();
      unint64_t result = v5[0];
      break;
  }
  return result;
}

id sub_240A558E4()
{
  long long v1 = v0[1];
  v5[0] = *v0;
  v5[1] = v1;
  v5[2] = v0[2];
  id v2 = objc_allocWithZone((Class)type metadata accessor for CenteredLabelWithSpinnerContentView());
  sub_240A56CCC((uint64_t)v5, (uint64_t)v6);
  sub_240A334B8((uint64_t)v6);
  id v3 = sub_240A55AF4(v5);
  sub_240A56D54();
  return v3;
}

uint64_t sub_240A55950@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  long long v3 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  return sub_240BB4850();
}

uint64_t sub_240A55964(_OWORD *a1, long long *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *a2;
  long long v4 = a2[1];
  void v7[2] = a1[2];
  v8[0] = v3;
  long long v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_240A56E68((uint64_t)v7, (uint64_t)v8) & 1;
}

uint64_t sub_240A559AC(uint64_t a1)
{
  sub_240A1E37C(a1, (uint64_t)v23);
  sub_240A56F08();
  if (!swift_dynamicCast()) {
    return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1);
  }
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration + 8);
  double v6 = *(double *)(v1 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration + 16);
  double v5 = *(double *)(v1 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration + 24);
  double v8 = *(double *)(v1 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration + 32);
  double v7 = *(double *)(v1 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration + 40);
  if (!v4)
  {
    if (!v18) {
      goto LABEL_21;
    }
LABEL_31:
    *(void *)uint64_t v3 = v17;
    *(void *)(v3 + 8) = v18;
    *(double *)(v3 + 16) = v19;
    *(double *)(v3 + 24) = v20;
    *(double *)(v3 + 32) = v21;
    *(double *)(v3 + 40) = v22;
    swift_bridgeObjectRelease();
    sub_240A56698();
    return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1);
  }
  if (!v18) {
    goto LABEL_31;
  }
  if (*(void *)v3 == v17 && v4 == v18)
  {
LABEL_21:
    if (v6 != v19 || v5 != v20 || v8 != v21 || v7 != v22) {
      goto LABEL_31;
    }
    goto LABEL_33;
  }
  if ((sub_240BB7AE0() & 1) == 0) {
    goto LABEL_31;
  }
  BOOL v10 = v6 == v19 && v5 == v20;
  BOOL v11 = v10 && v8 == v21;
  if (!v11 || v7 != v22) {
    goto LABEL_31;
  }
LABEL_33:
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1);
  return swift_bridgeObjectRelease();
}

id sub_240A55AF4(_OWORD *a1)
{
  long long v2 = v1;
  *(void *)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__topConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__leadingConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__trailingConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__bottomConstraint] = 0;
  uint64_t v4 = OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView_label;
  id v5 = objc_allocWithZone(MEMORY[0x263F828E0]);
  double v6 = v2;
  id v7 = objc_msgSend(v5, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  id v8 = objc_msgSend(self, sel_secondaryLabelColor);
  objc_msgSend(v7, sel_setTextColor_, v8);

  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_240A34DC4(0, (unint64_t *)&qword_268C9EEE0);
  uint64_t v9 = (void *)sub_240BB7470();
  objc_msgSend(v7, sel_setFont_, v9);

  objc_msgSend(v7, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v7, sel_setTextAlignment_, 1);
  objc_msgSend(v7, sel_setNumberOfLines_, 2);
  *(void *)&v2[v4] = v7;
  uint64_t v10 = OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView_spinner;
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F823E8]), sel_initWithActivityIndicatorStyle_, 100);
  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v11, sel_setHidesWhenStopped_, 0);
  objc_msgSend(v11, sel_startAnimating);
  *(void *)&v6[v10] = v11;
  uint64_t v12 = &v6[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration];
  long long v13 = a1[1];
  *(_OWORD *)uint64_t v12 = *a1;
  *((_OWORD *)v12 + 1) = v13;
  *((_OWORD *)v12 + 2) = a1[2];

  v16.receiver = v6;
  v16.super_class = (Class)type metadata accessor for CenteredLabelWithSpinnerContentView();
  id v14 = objc_msgSendSuper2(&v16, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_240A55D7C();
  sub_240A56698();

  return v14;
}

void sub_240A55D7C()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView_label];
  objc_msgSend(v2, sel_addSubview_, v3);
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView_spinner];
  objc_msgSend(v2, (SEL)&selRef_imageNamed_inBundle_compatibleWithTraitCollection_, v4);
  sub_240A2C890(0, (unint64_t *)&qword_26AFD77C0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240BBB150;
  id v6 = objc_msgSend(v3, sel_topAnchor);
  id v7 = objc_msgSend(v2, (SEL)&selRef_bradycardiaLearnMoreLink + 3);
  id v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v7);

  *(void *)(v5 + 32) = v8;
  id v9 = objc_msgSend(v3, sel_bottomAnchor);
  id v10 = objc_msgSend(v2, (SEL)&selRef_ineligibilityReasonsDescription + 5);
  id v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v10);

  *(void *)(v5 + 40) = v11;
  id v12 = objc_msgSend(v3, sel_leadingAnchor);
  id v13 = objc_msgSend(v2, (SEL)&selRef_createDataFetcherForSampleType_predicate_limit_sortDescriptors_resultsHandler_ + 2);
  id v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v13);

  *(void *)(v5 + 48) = v14;
  id v15 = objc_msgSend(v4, (SEL)&selRef_createDataFetcherForSampleType_predicate_limit_sortDescriptors_resultsHandler_ + 2);
  id v16 = objc_msgSend(v3, sel_trailingAnchor);
  id v17 = objc_msgSend(v15, sel_constraintEqualToSystemSpacingAfterAnchor_multiplier_, v16, 1.0);

  *(void *)(v5 + 56) = v17;
  id v18 = objc_msgSend(v4, sel_centerYAnchor);
  id v19 = objc_msgSend(v3, sel_centerYAnchor);
  id v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v19);

  *(void *)(v5 + 64) = v20;
  id v21 = objc_msgSend(v4, sel_trailingAnchor);
  id v22 = objc_msgSend(v2, sel_trailingAnchor);
  id v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v22);

  *(void *)(v5 + 72) = v23;
  sub_240BB6F30();
  unint64_t v72 = v5;
  objc_msgSend(v1, sel_addSubview_, v2);
  double v25 = *(double *)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration + 16];
  double v24 = *(double *)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration + 24];
  double v26 = *(double *)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration + 32];
  double v27 = *(double *)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration + 40];
  id v28 = objc_msgSend(v2, sel_topAnchor);
  id v29 = objc_msgSend(v1, sel_layoutMarginsGuide);
  id v30 = objc_msgSend(v29, sel_topAnchor);

  id v31 = objc_msgSend(v28, sel_constraintEqualToAnchor_constant_, v30, v25);
  uint64_t v32 = OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__topConstraint;
  uint64_t v33 = *(void **)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__topConstraint];
  *(void *)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__topConstraint] = v31;

  id v34 = objc_msgSend(v2, sel_layoutMarginsGuide);
  id v35 = objc_msgSend(v34, sel_leadingAnchor);

  id v36 = objc_msgSend(v1, sel_leadingAnchor);
  id v37 = objc_msgSend(v35, sel_constraintGreaterThanOrEqualToAnchor_constant_, v36, v24);

  uint64_t v38 = OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__leadingConstraint;
  uint64_t v39 = *(void **)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__leadingConstraint];
  *(void *)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__leadingConstraint] = v37;

  id v40 = objc_msgSend(v1, sel_layoutMarginsGuide);
  id v41 = objc_msgSend(v40, sel_trailingAnchor);

  id v42 = objc_msgSend(v2, sel_trailingAnchor);
  id v43 = objc_msgSend(v41, sel_constraintGreaterThanOrEqualToAnchor_constant_, v42, v27);

  uint64_t v44 = OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__trailingConstraint;
  uint64_t v45 = *(void **)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__trailingConstraint];
  *(void *)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__trailingConstraint] = v43;

  id v46 = objc_msgSend(v1, sel_layoutMarginsGuide);
  id v47 = objc_msgSend(v46, sel_bottomAnchor);

  id v48 = objc_msgSend(v2, sel_bottomAnchor);
  id v49 = objc_msgSend(v47, sel_constraintEqualToAnchor_constant_, v48, v26);

  uint64_t v50 = OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__bottomConstraint;
  uint64_t v51 = *(void **)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__bottomConstraint];
  *(void *)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__bottomConstraint] = v49;

  uint64_t v52 = *(void **)&v1[v32];
  if (!v52)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v53 = *(void **)&v1[v38];
  if (!v53)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v54 = *(void **)&v1[v44];
  if (!v54)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v55 = *(void **)&v1[v50];
  if (!v55)
  {
LABEL_26:
    __break(1u);
    return;
  }
  id v56 = v52;
  id v57 = v53;
  id v58 = v54;
  id v59 = v55;
  id v60 = objc_msgSend(v1, sel_centerXAnchor);
  id v61 = objc_msgSend(v2, sel_centerXAnchor);
  id v62 = objc_msgSend(v60, sel_constraintEqualToAnchor_, v61);

  if (!(v72 >> 62))
  {
    uint64_t v63 = *(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10);
    sub_240BB4850();
    uint64_t v64 = v63 + 5;
    if (!__OFADD__(v63, 5)) {
      goto LABEL_7;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_240BB4850();
  uint64_t v70 = sub_240BB7900();
  BOOL v71 = __OFADD__(v70, 5);
  uint64_t v64 = v70 + 5;
  if (v71) {
    goto LABEL_21;
  }
LABEL_7:
  sub_240A56DA8(v64, 1);
  sub_240BB6F30();
  id v56 = v56;
  MEMORY[0x24560A190]();
  if (*(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_22:
  }
    sub_240BB6F60();
  sub_240BB6F70();
  sub_240BB6F30();
  id v65 = v57;
  MEMORY[0x24560A190]();
  if (*(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_240BB6F60();
  }
  sub_240BB6F70();
  sub_240BB6F30();
  id v66 = v58;
  MEMORY[0x24560A190]();
  if (*(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_240BB6F60();
  }
  sub_240BB6F70();
  sub_240BB6F30();
  id v67 = v59;
  MEMORY[0x24560A190]();
  if (*(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_240BB6F60();
  }
  sub_240BB6F70();
  sub_240BB6F30();
  id v68 = v62;
  MEMORY[0x24560A190]();
  if (*(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_240BB6F60();
  }
  uint64_t v69 = self;
  sub_240BB6F70();
  sub_240BB6F30();

  swift_bridgeObjectRelease();
  sub_240A34DC4(0, (unint64_t *)&qword_268CA2490);
  id v73 = (id)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v69, sel_activateConstraints_, v73);
}

id sub_240A56698()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView_label);
  id v2 = (double *)(v0 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration);
  if (*(void *)(v0 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration + 8))
  {
    sub_240BB4850();
    uint64_t v3 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
  }
  objc_msgSend(v1, sel_setText_, v3);

  id result = *(id *)(v0 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__topConstraint);
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  double v5 = v2[4];
  double v6 = v2[5];
  double v7 = v2[3];
  objc_msgSend(result, sel_setConstant_, v2[2]);
  id result = *(id *)(v0 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__leadingConstraint);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  objc_msgSend(result, sel_setConstant_, v7);
  id result = *(id *)(v0 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__trailingConstraint);
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  objc_msgSend(result, sel_setConstant_, v6);
  id result = *(id *)(v0 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__bottomConstraint);
  if (!result)
  {
LABEL_14:
    __break(1u);
    return result;
  }

  return objc_msgSend(result, sel_setConstant_, v5);
}

id sub_240A567FC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CenteredLabelWithSpinnerContentView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CenteredLabelWithSpinnerContentView()
{
  return self;
}

uint64_t initializeWithCopy for CenteredLabelWithSpinnerContentConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  sub_240BB4850();
  return a1;
}

void *assignWithCopy for CenteredLabelWithSpinnerContentConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for CenteredLabelWithSpinnerContentConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for CenteredLabelWithSpinnerContentConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CenteredLabelWithSpinnerContentConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)id result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CenteredLabelWithSpinnerContentConfiguration()
{
  return &type metadata for CenteredLabelWithSpinnerContentConfiguration;
}

uint64_t sub_240A56AA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration;
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration + 8);
  long long v10 = *(_OWORD *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 32);
  uint64_t v7 = *(void *)(v3 + 40);
  a1[3] = (uint64_t)&type metadata for CenteredLabelWithSpinnerContentConfiguration;
  a1[4] = sub_240A47938();
  uint64_t v8 = swift_allocObject();
  *a1 = v8;
  *(void *)(v8 + 16) = v5;
  *(void *)(v8 + 24) = v4;
  *(_OWORD *)(v8 + 32) = v10;
  *(void *)(v8 + 48) = v6;
  *(void *)(v8 + 56) = v7;

  return sub_240BB4850();
}

void (*sub_240A56B50(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = v1 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration;
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration + 8);
  long long v11 = *(_OWORD *)(v4 + 16);
  uint64_t v7 = *(void *)(v4 + 32);
  uint64_t v8 = *(void *)(v4 + 40);
  v3[3] = &type metadata for CenteredLabelWithSpinnerContentConfiguration;
  v3[4] = sub_240A47938();
  uint64_t v9 = swift_allocObject();
  *uint64_t v3 = v9;
  *(void *)(v9 + 16) = v6;
  *(void *)(v9 + 24) = v5;
  *(_OWORD *)(v9 + 32) = v11;
  *(void *)(v9 + 48) = v7;
  *(void *)(v9 + 56) = v8;
  sub_240BB4850();
  return sub_240A56C1C;
}

void sub_240A56C1C(uint64_t *a1, char a2)
{
  objc_super v2 = (void *)*a1;
  if (a2)
  {
    sub_240A1E37C(*a1, (uint64_t)v2 + 40);
    sub_240A559AC((uint64_t)v2 + 40);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v2);
  }
  else
  {
    sub_240A559AC(*a1);
  }

  free(v2);
}

uint64_t sub_240A56C94()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_240A56CCC(uint64_t a1, uint64_t a2)
{
  sub_240A2C890(0, (unint64_t *)&qword_26AFD7580, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_240A56D54()
{
  unint64_t result = qword_268C9EF78;
  if (!qword_268C9EF78)
  {
    type metadata accessor for CenteredLabelWithSpinnerContentView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9EF78);
  }
  return result;
}

uint64_t sub_240A56DA8(uint64_t a1, char a2)
{
  unint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *objc_super v2 = v5;
  uint64_t v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      return result;
    }
    uint64_t v7 = 1;
  }
  if (v5 >> 62)
  {
    sub_240BB4850();
    uint64_t v8 = sub_240BB7900();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1) {
    uint64_t v9 = a1;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t result = MEMORY[0x24560AAB0](v7, v9, a2 & 1, v5);
  *objc_super v2 = result;
  return result;
}

uint64_t sub_240A56E68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  if (!v4)
  {
    if (v5) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v5) {
    return 0;
  }
  BOOL v6 = *(void *)a1 == *(void *)a2 && v4 == v5;
  if (v6 || (char v7 = sub_240BB7AE0(), result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    if (*(double *)(a1 + 16) == *(double *)(a2 + 16))
    {
      BOOL v9 = *(double *)(a1 + 24) == *(double *)(a2 + 24) && *(double *)(a1 + 32) == *(double *)(a2 + 32);
      if (v9 && *(double *)(a1 + 40) == *(double *)(a2 + 40)) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_240A56F08()
{
  unint64_t result = qword_268C9EF80;
  if (!qword_268C9EF80)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C9EF80);
  }
  return result;
}

void sub_240A56F60()
{
  uint64_t v1 = v0;
  *(void *)&v0[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__topConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__leadingConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__trailingConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__bottomConstraint] = 0;
  uint64_t v2 = OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView_label;
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  id v4 = objc_msgSend(self, sel_secondaryLabelColor);
  objc_msgSend(v3, sel_setTextColor_, v4);

  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_240A34DC4(0, (unint64_t *)&qword_268C9EEE0);
  uint64_t v5 = (void *)sub_240BB7470();
  objc_msgSend(v3, sel_setFont_, v5);

  objc_msgSend(v3, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v3, sel_setTextAlignment_, 1);
  objc_msgSend(v3, sel_setNumberOfLines_, 2);
  *(void *)&v1[v2] = v3;
  uint64_t v6 = OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView_spinner;
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F823E8]), sel_initWithActivityIndicatorStyle_, 100);
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v7, sel_setHidesWhenStopped_, 0);
  objc_msgSend(v7, sel_startAnimating);
  *(void *)&v1[v6] = v7;

  sub_240BB78D0();
  __break(1u);
}

uint64_t sub_240A57180()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  return sub_240BB2980();
}

uint64_t sub_240A5720C()
{
  return 0x7261654820776F4CLL;
}

uint64_t sub_240A57230()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v0 = (id)qword_26AFDECD8;

  return sub_240BB36C0();
}

uint64_t sub_240A572C4(char a1)
{
  if (a1)
  {
    objc_msgSend(self, sel_bradycardiaThresholdHeartRate);
    id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
    sub_240A576E0();
    uint64_t v2 = (void *)sub_240BB74E0();
    uint64_t v3 = sub_240B91C50(v2, (uint64_t)v1);
    uint64_t v5 = v4;

    if (qword_26AFDA090 != -1) {
      swift_once();
    }
    sub_240BB2980();
    sub_240A57720();
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_240BB97E0;
    *(void *)(v6 + 56) = MEMORY[0x263F8D310];
    *(void *)(v6 + 64) = sub_240A4C66C();
    *(void *)(v6 + 32) = v3;
    *(void *)(v6 + 40) = v5;
    uint64_t v7 = sub_240BB6DB0();
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_240BB2980();
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_240BB97E0;
    uint64_t v11 = *MEMORY[0x263F47650];
    uint64_t v12 = MEMORY[0x263F8D750];
    *(void *)(v10 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v10 + 64) = v12;
    *(void *)(v10 + 32) = v11;
    uint64_t v13 = sub_240BB6DB0();
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_240A57608();
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_240BBAE40;
    *(void *)(v16 + 32) = v7;
    *(void *)(v16 + 40) = v9;
    *(void *)(v16 + 48) = v13;
  }
  else
  {
    sub_240A57608();
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_240BBAE40;
    if (qword_26AFDA090 != -1) {
      swift_once();
    }
    *(void *)(v16 + 32) = sub_240BB2980();
    *(void *)(v16 + 40) = v17;
    uint64_t v18 = sub_240BB2980();
    uint64_t v15 = v19;
    *(void *)(v16 + 48) = v18;
  }
  *(void *)(v16 + 56) = v15;
  return v16;
}

void sub_240A57608()
{
  if (!qword_26AFD7108)
  {
    unint64_t v0 = sub_240BB7AB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD7108);
    }
  }
}

void sub_240A57660()
{
  id v0 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *MEMORY[0x263F47648]);
  objc_msgSend(self, sel_setBradycardiaThresholdHeartRate_, v0);
}

unint64_t sub_240A576E0()
{
  unint64_t result = qword_268CA10E0;
  if (!qword_268CA10E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268CA10E0);
  }
  return result;
}

void sub_240A57720()
{
  if (!qword_26AFD99D8)
  {
    sub_240A4C614();
    unint64_t v0 = sub_240BB7AB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD99D8);
    }
  }
}

uint64_t sub_240A57778()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Heart40ElectrocardiogramUpdateGeneratorPipeline_context;
  uint64_t v2 = sub_240BB32A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC5Heart40ElectrocardiogramUpdateGeneratorPipeline_domain;
  uint64_t v4 = sub_240BB3240();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_240A5787C()
{
  return type metadata accessor for ElectrocardiogramUpdateGeneratorPipeline();
}

uint64_t sub_240A57884()
{
  uint64_t result = sub_240BB32A0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_240BB3240();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

double sub_240A57968@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_240BB3210();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240BB3240();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    uint64_t v9 = (uint64_t (*)(void, uint64_t))MEMORY[0x263F8E0F8];
    sub_240A57E80(0, &qword_26AFD7658, MEMORY[0x263F45828], MEMORY[0x263F8E0F8]);
    uint64_t v10 = swift_allocObject();
    v22[1] = v8;
    uint64_t v11 = v10;
    long long v23 = xmmword_240BB97E0;
    *(_OWORD *)(v10 + 16) = xmmword_240BB97E0;
    sub_240A57E80(0, (unint64_t *)&qword_26AFD7108, MEMORY[0x263F8D310], v9);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = v23;
    *(void *)(v12 + 32) = sub_240A59CD4();
    *(void *)(v12 + 40) = v13;
    *(void *)(v11 + 32) = v12;
    *(void *)(v11 + 40) = 0;
    *(void *)(v11 + 48) = 0;
    *(void *)(v11 + 56) = 0;
    *(unsigned char *)(v11 + 64) = 32;
    v22[0] = sub_240BB3270();
    sub_240A31F9C(0, (unint64_t *)&qword_26AFD99A0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
    uint64_t v14 = sub_240BB3050();
    uint64_t v15 = v2;
    uint64_t v16 = *(void *)(v14 - 8);
    unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = v23;
    (*(void (**)(unint64_t, void, uint64_t))(v16 + 104))(v18 + v17, *MEMORY[0x263F45548], v14);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F45688], v15);
    sub_240BB3220();
    uint64_t v19 = sub_240BB3110();
    uint64_t v20 = MEMORY[0x263F455E8];
    *(void *)(a1 + 24) = v19;
    *(void *)(a1 + 32) = v20;
    sub_240A23B08((uint64_t *)a1);
    sub_240BB3100();
    swift_release();
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_240A57CB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240A57DEC(a1, a2);
}

uint64_t sub_240A57CBC()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240A57CF4()
{
  uint64_t v1 = sub_240BB32A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

double sub_240A57DE4@<D0>(uint64_t a1@<X8>)
{
  return sub_240A57968(a1);
}

uint64_t sub_240A57DEC(uint64_t a1, uint64_t a2)
{
  sub_240A31F9C(0, &qword_26AFD8FB8, (uint64_t (*)(uint64_t))sub_240A3FDA4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_240A57E80(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_240A57ECC()
{
  uint64_t v1 = sub_240BB32A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_240A57F98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_240BB32A0() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_240A58164(v4, v5, a1);
}

uint64_t Publisher.firstIfNecessary(for:)()
{
  uint64_t v0 = sub_240BB6040();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - v2;
  if (sub_240BB3260())
  {
    return sub_240BB62E0();
  }
  else
  {
    sub_240BB6360();
    swift_getWitnessTable();
    uint64_t v4 = sub_240BB62E0();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return v4;
  }
}

uint64_t sub_240A58164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  id v37 = a3;
  uint64_t v31 = sub_240BB32A0();
  uint64_t v5 = *(void *)(v31 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v31);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A59E58();
  uint64_t v9 = v8;
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A59F54();
  uint64_t v35 = v12;
  uint64_t v33 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A5A0FC();
  uint64_t v36 = v15;
  uint64_t v34 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  unint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = a1;
  uint64_t v39 = sub_240B1CF24();
  uint64_t v30 = a2;
  LOBYTE(a1) = sub_240BB3260();
  sub_240A59EEC();
  uint64_t v38 = v18;
  sub_240A5A36C((unint64_t *)&qword_26AFD9820, (void (*)(uint64_t))sub_240A59EEC);
  if (a1)
  {
    uint64_t v19 = sub_240BB62E0();
  }
  else
  {
    sub_240BB6360();
    sub_240A5A36C(&qword_26AFD7110, (void (*)(uint64_t))sub_240A59E58);
    uint64_t v19 = sub_240BB62E0();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v9);
  }
  swift_release();
  uint64_t v39 = v19;
  uint64_t v20 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v30, v31);
  unint64_t v21 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v22 = (v6 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v23 + v21, v7, v20);
  *(void *)(v23 + v22) = v32;
  swift_retain();
  sub_240BB60F0();
  sub_240A59EEC();
  sub_240A3B6CC();
  sub_240A5A36C(&qword_26AFD9810, (void (*)(uint64_t))sub_240A3B6CC);
  sub_240BB63C0();
  swift_release();
  swift_release();
  sub_240A5A36C(&qword_26AFD97C0, (void (*)(uint64_t))sub_240A59F54);
  uint64_t v24 = v35;
  sub_240BB6350();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v24);
  sub_240A5A36C(&qword_26AFD9778, (void (*)(uint64_t))sub_240A5A0FC);
  uint64_t v25 = v36;
  uint64_t v26 = sub_240BB62E0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v17, v25);
  uint64_t *v37 = v26;
  return result;
}

uint64_t sub_240A586A4@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v33 = a2;
  sub_240A5A338(0);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A4958C();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v13 = *a1;
  uint64_t v14 = sub_240A589A8(v13);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 + 16);
  uint64_t v34 = a3;
  if (v16)
  {
    uint64_t v18 = *(void *)(v14 + 32);
    uint64_t v17 = *(void *)(v14 + 40);
    uint64_t v19 = *(void *)(v14 + 48);
    uint64_t v20 = *(void *)(v14 + 56);
    unsigned int v21 = *(unsigned __int8 *)(v14 + 64);
    unsigned int v22 = v21 >> 5;
    if (v21 >> 5)
    {
      if (v22 == 1 || (v22 == 5 ? (BOOL v23 = (v17 | v18 | v19 | v20) == 0) : (BOOL v23 = 0), v23 && v21 == 160)) {
        sub_240B1DAAC();
      }
    }
    else
    {
      sub_240BB4850();
      sub_240B1D6DC();
      sub_240A5A3B4(v18, v17, v19, v20, v21);
    }
  }
  else if (v13)
  {
    uint64_t v24 = sub_240BB6DE0();
    uint64_t v26 = v25;
    double v27 = *(void **)(v33 + 16);
    type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemUpdateDate();
    uint64_t inited = (void *)swift_initStackObject();
    inited[2] = v24;
    inited[3] = v26;
    inited[4] = v27;
    inited[5] = sub_240B1CE8C;
    inited[6] = 0;
    id v29 = v27;
    sub_240B1BF24((uint64_t)v12);

    swift_bridgeObjectRelease();
    uint64_t v30 = sub_240BB2CF0();
    LODWORD(v29) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v12, 1, v30);
    sub_240A5A53C((uint64_t)v12, (uint64_t (*)(void))sub_240A4958C);
    if (v29 == 1) {
      sub_240B1D8A8();
    }
  }
  uint64_t v35 = v15;
  sub_240A3A454();
  sub_240BB6200();
  sub_240A5A36C((unint64_t *)&qword_26AFD9848, sub_240A5A338);
  uint64_t v31 = sub_240BB62E0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *uint64_t v34 = v31;
  return result;
}

uint64_t sub_240A589A8(int a1)
{
  int v79 = a1;
  uint64_t v1 = sub_240BB5990();
  uint64_t v93 = *(void *)(v1 - 8);
  uint64_t v94 = v1;
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  uint64_t v88 = (char *)&v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v77 = (char *)&v77 - v5;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v90 = (char *)&v77 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v89 = (char *)&v77 - v8;
  uint64_t v9 = sub_240BB31D0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v86 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v78 = (char *)&v77 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v77 - v15;
  sub_240A3FF50(0);
  uint64_t v87 = v17;
  uint64_t v81 = *(void *)(v17 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v83 = (uint64_t)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v82 = (uint64_t)&v77 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  long long v92 = (char *)&v77 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v77 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v77 - v27;
  sub_240A59CD4();
  sub_240BB3250();
  sub_240A3466C(&updated, v98);
  sub_240BB3200();
  swift_bridgeObjectRelease();
  sub_240A5A4D8((uint64_t)v28, (uint64_t)v26);
  uint64_t v80 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v29 = v80(v26, 1, v9);
  uint64_t v91 = v10;
  if (v29 == 1)
  {
    sub_240A5A53C((uint64_t)v28, (uint64_t (*)(void))sub_240A3FF50);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&updated);
    uint64_t v84 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v30(v16, v26, v9);
    sub_240A3AEB0(0, &qword_268C9E870, MEMORY[0x263F45630], MEMORY[0x263F8E0F8]);
    unint64_t v31 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_240BB97E0;
    uint64_t v84 = v32;
    v30((char *)(v32 + v31), v16, v9);
    sub_240A5A53C((uint64_t)v28, (uint64_t (*)(void))sub_240A3FF50);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&updated);
  }
  uint64_t v33 = (void *)sub_240BB3270();
  uint64_t updated = type metadata accessor for ElectrocardiogramUpdateGenerator();
  sub_240A5A59C();
  uint64_t updated = sub_240BB6E10();
  unint64_t v97 = v34;
  sub_240BB6E70();
  uint64_t v95 = (uint64_t)v33;
  id v35 = v33;
  sub_240BB6E20();
  sub_240BB6E70();

  swift_bridgeObjectRelease();
  unint64_t v36 = v97;
  uint64_t v85 = updated;
  uint64_t v37 = (uint64_t)v92;
  uint64_t v39 = v89;
  uint64_t v38 = v90;
  if (v79)
  {
    sub_240BB3BF0();
    swift_bridgeObjectRetain_n();
    id v40 = sub_240BB5970();
    os_log_type_t v41 = sub_240BB71A0();
    if (os_log_type_enabled(v40, v41))
    {
      id v42 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      uint64_t updated = v43;
      *(_DWORD *)id v42 = 136446210;
      sub_240BB4850();
      uint64_t v95 = sub_240A38940(v85, v36, &updated);
      uint64_t v37 = (uint64_t)v92;
      sub_240BB75F0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_240A1B000, v40, v41, "[%{public}s]: Electrocardiogram update hasn't been updated since the refresh interval; submitting the update feedItem",
        v42,
        0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v43, -1, -1);
      MEMORY[0x24560B930](v42, -1, -1);

      uint64_t v44 = *(char **)(v93 + 8);
      uint64_t v45 = v89;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v44 = *(char **)(v93 + 8);
      uint64_t v45 = v39;
    }
    uint64_t v90 = v44;
    ((void (*)(char *, uint64_t))v44)(v45, v94);
    uint64_t v52 = v91;
    sub_240A5992C(v37);
    uint64_t v50 = 0;
  }
  else
  {
    sub_240BB3BF0();
    swift_bridgeObjectRetain_n();
    id v46 = sub_240BB5970();
    os_log_type_t v47 = sub_240BB71A0();
    if (os_log_type_enabled(v46, v47))
    {
      id v48 = (uint8_t *)swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      uint64_t updated = v49;
      *(_DWORD *)id v48 = 136446210;
      sub_240BB4850();
      uint64_t v95 = sub_240A38940(v85, v36, &updated);
      sub_240BB75F0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_240A1B000, v46, v47, "[%{public}s]: Electrocardiogram update is up-to-date; deleting the feedItem",
        v48,
        0xCu);
      uint64_t v50 = 1;
      swift_arrayDestroy();
      MEMORY[0x24560B930](v49, -1, -1);
      MEMORY[0x24560B930](v48, -1, -1);

      uint64_t v51 = v90;
      uint64_t v90 = *(char **)(v93 + 8);
      ((void (*)(char *, uint64_t))v90)(v51, v94);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v90 = *(char **)(v93 + 8);
      ((void (*)(char *, uint64_t))v90)(v38, v94);
      uint64_t v50 = 1;
    }
    uint64_t v52 = v91;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v37, v50, 1, v9);
  sub_240A3AEB0(0, (unint64_t *)&unk_26AFD99A8, (uint64_t (*)(uint64_t))sub_240A3FF50, MEMORY[0x263F8E0F8]);
  unint64_t v53 = (*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
  uint64_t v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_240BB97E0;
  uint64_t v55 = v54 + v53;
  sub_240A5A4D8(v37, v54 + v53);
  uint64_t v56 = v82;
  sub_240A5A4D8(v55, v82);
  uint64_t v57 = v56;
  uint64_t v58 = v83;
  sub_240A5A5D8(v57, v83);
  if (v80((char *)v58, 1, v9) == 1)
  {
    sub_240A5A53C(v58, (uint64_t (*)(void))sub_240A3FF50);
  }
  else
  {
    id v59 = *(void (**)(char *, uint64_t, uint64_t))(v52 + 32);
    uint64_t v60 = v58;
    id v61 = v78;
    v59(v78, v60, v9);
    v59(v86, (uint64_t)v61, v9);
    unint64_t v62 = MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v62 = sub_240A4297C(0, *(void *)(v62 + 16) + 1, 1, v62);
    }
    unint64_t v64 = *(void *)(v62 + 16);
    unint64_t v63 = *(void *)(v62 + 24);
    if (v64 >= v63 >> 1) {
      unint64_t v62 = sub_240A4297C(v63 > 1, v64 + 1, 1, v62);
    }
    *(void *)(v62 + 16) = v64 + 1;
    v59((char *)(v62+ ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80))+ *(void *)(v91 + 72) * v64), (uint64_t)v86, v9);
    uint64_t v37 = (uint64_t)v92;
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v65 = sub_240BB6F40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v66 = v77;
  sub_240BB3BF0();
  swift_bridgeObjectRetain_n();
  sub_240BB4850();
  id v67 = sub_240BB5970();
  uint64_t v68 = sub_240BB71A0();
  if (os_log_type_enabled(v67, (os_log_type_t)v68))
  {
    uint64_t v69 = swift_slowAlloc();
    uint64_t v70 = swift_slowAlloc();
    uint64_t updated = v70;
    *(_DWORD *)uint64_t v69 = 136446466;
    sub_240BB4850();
    uint64_t v95 = sub_240A38940(v85, v36, &updated);
    sub_240BB75F0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v69 + 12) = 2082;
    uint64_t v71 = sub_240BB4850();
    uint64_t v72 = MEMORY[0x24560A1D0](v71, MEMORY[0x263F45828]);
    unint64_t v74 = v73;
    swift_bridgeObjectRelease();
    uint64_t v95 = sub_240A38940(v72, v74, &updated);
    sub_240BB75F0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v67, (os_log_type_t)v68, "[%{public}s]: Computed needed PluginFeedItemChanges: %{public}s", (uint8_t *)v69, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v70, -1, -1);
    MEMORY[0x24560B930](v69, -1, -1);

    ((void (*)(char *, uint64_t))v90)(v66, v94);
    uint64_t v75 = (uint64_t)v92;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    ((void (*)(char *, uint64_t))v90)(v66, v94);
    uint64_t v75 = v37;
  }
  sub_240A5A53C(v75, (uint64_t (*)(void))sub_240A3FF50);
  return v65;
}

uint64_t sub_240A597F8@<X0>(uint64_t *a1@<X8>)
{
  sub_240A5A338(0);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = MEMORY[0x263F8EE78];
  sub_240A3A454();
  sub_240BB6200();
  sub_240A5A36C((unint64_t *)&qword_26AFD9848, sub_240A5A338);
  uint64_t v7 = sub_240BB62E0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *a1 = v7;
  return result;
}

uint64_t sub_240A5992C@<X0>(uint64_t a1@<X8>)
{
  v13[1] = a1;
  uint64_t v1 = sub_240BB3340();
  uint64_t v16 = *(void *)(v1 - 8);
  uint64_t v17 = v1;
  MEMORY[0x270FA5388](v1);
  v13[0] = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_240BB3370();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v14 = v3;
  uint64_t v15 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240BB3050();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A59CD4();
  type metadata accessor for ElectrocardiogramUpdateViewController();
  sub_240BB30F0();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F45548], v7);
  sub_240BB3270();
  sub_240BB3180();
  (*(void (**)(void, void, uint64_t))(v16 + 104))(v13[0], *MEMORY[0x263F45700], v17);
  sub_240BB3380();
  uint64_t v11 = v14;
  sub_240BB3140();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v11);
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  sub_240BB2980();
  sub_240BB3170();
  sub_240BB3160();
  sub_240A5A63C();
  return sub_240BB3150();
}

uint64_t sub_240A59C5C()
{
  return swift_retain();
}

uint64_t sub_240A59C64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_240BB3240();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

unint64_t sub_240A59CD4()
{
  uint64_t v0 = sub_240BB2D40();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (void *)sub_240BB3270();
  uint64_t v5 = (void *)sub_240BB30A0();

  if (v5)
  {
    id v6 = objc_msgSend(v5, sel_identifier);

    sub_240BB2D20();
    sub_240BB2D00();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  unint64_t v8 = 0;
  unint64_t v9 = 0xE000000000000000;
  sub_240BB77C0();
  swift_bridgeObjectRelease();
  unint64_t v8 = 0xD000000000000020;
  unint64_t v9 = 0x8000000240BC91B0;
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  return v8;
}

void sub_240A59E58()
{
  if (!qword_26AFD9E88)
  {
    sub_240A59EEC();
    sub_240A5A36C((unint64_t *)&qword_26AFD9820, (void (*)(uint64_t))sub_240A59EEC);
    unint64_t v0 = sub_240BB6040();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD9E88);
    }
  }
}

void sub_240A59EEC()
{
  if (!qword_26AFD9828)
  {
    sub_240A49AC0();
    unint64_t v0 = sub_240BB6100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD9828);
    }
  }
}

void sub_240A59F54()
{
  if (!qword_26AFD97C8)
  {
    sub_240A5A040();
    sub_240A59EEC();
    sub_240A5A36C(&qword_26AFD9758, (void (*)(uint64_t))sub_240A5A040);
    sub_240A5A36C((unint64_t *)&qword_26AFD9820, (void (*)(uint64_t))sub_240A59EEC);
    unint64_t v0 = sub_240BB60A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD97C8);
    }
  }
}

void sub_240A5A040()
{
  if (!qword_26AFD9760)
  {
    sub_240A3B6CC();
    sub_240A49AC0();
    sub_240A5A36C(&qword_26AFD9810, (void (*)(uint64_t))sub_240A3B6CC);
    unint64_t v0 = sub_240BB5FD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD9760);
    }
  }
}

void sub_240A5A0FC()
{
  if (!qword_26AFD9780)
  {
    sub_240A59F54();
    sub_240A3B6CC();
    sub_240A5A36C(&qword_26AFD97C0, (void (*)(uint64_t))sub_240A59F54);
    sub_240A5A36C(&qword_26AFD9810, (void (*)(uint64_t))sub_240A3B6CC);
    unint64_t v0 = sub_240BB6030();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD9780);
    }
  }
}

uint64_t sub_240A5A1E8()
{
  uint64_t v1 = sub_240BB32A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_240A5A28C@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_240BB32A0() - 8);
  uint64_t v6 = *(void *)(v2
                 + ((*(void *)(v5 + 64)
                   + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
                   + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_240A586A4(a1, v6, a2);
}

void sub_240A5A338(uint64_t a1)
{
}

uint64_t sub_240A5A36C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A5A3B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v5 = a5 >> 5;
  if (v5 <= 4) {
    return ((uint64_t (__cdecl *)())((char *)&loc_240A5A3D4 + (int)funcs_240A5A3DC[v5]))();
  }
  return result;
}

uint64_t sub_240A5A3E0()
{
  return swift_bridgeObjectRelease();
}

void sub_240A5A3F4(uint64_t a1, void *a2, void *a3, void *a4, char a5)
{
  char v8 = a5 & 0x1F;
  swift_bridgeObjectRelease();

  sub_240A5A460(a2, a3, a4, v8);
}

void sub_240A5A460(void *a1, void *a2, void *a3, char a4)
{
  if (!a4)
  {
    a3 = a2;
LABEL_6:
    swift_bridgeObjectRelease();
    a1 = a3;
    goto LABEL_7;
  }
  if (a4 != 2)
  {
    if (a4 != 1) {
      return;
    }
    goto LABEL_6;
  }
LABEL_7:

  sub_240A5A4C8(a1);
}

void sub_240A5A4C8(id a1)
{
  if (a1 != (id)1) {
}
  }

uint64_t sub_240A5A4D8(uint64_t a1, uint64_t a2)
{
  sub_240A3FF50(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240A5A53C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_240A5A59C()
{
  unint64_t result = qword_26AFD92A8;
  if (!qword_26AFD92A8)
  {
    type metadata accessor for ElectrocardiogramUpdateGenerator();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD92A8);
  }
  return result;
}

uint64_t sub_240A5A5D8(uint64_t a1, uint64_t a2)
{
  sub_240A3FF50(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_240A5A63C()
{
  uint64_t v0 = sub_240BB5990();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (void *)sub_240BB3270();
  uint64_t updated = type metadata accessor for ElectrocardiogramUpdateGenerator();
  sub_240A5A59C();
  uint64_t updated = sub_240BB6E10();
  unint64_t v21 = v5;
  sub_240BB6E70();
  uint64_t v19 = (uint64_t)v4;
  id v6 = v4;
  sub_240BB6E20();
  sub_240BB6E70();

  swift_bridgeObjectRelease();
  uint64_t v8 = updated;
  unint64_t v7 = v21;
  uint64_t v9 = HKNRActivePairedDeviceSupportsECG2UpgradeBackgroundDelivery();
  sub_240BB3BF0();
  sub_240BB4850();
  uint64_t v10 = sub_240BB5970();
  os_log_type_t v11 = sub_240BB71A0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v18 = v0;
    uint64_t v14 = v13;
    uint64_t updated = v13;
    *(_DWORD *)uint64_t v12 = 136446466;
    sub_240BB4850();
    uint64_t v19 = sub_240A38940(v8, v7, &updated);
    sub_240BB75F0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2082;
    if (v9) {
      uint64_t v15 = 1702195828;
    }
    else {
      uint64_t v15 = 0x65736C6166;
    }
    if (v9) {
      unint64_t v16 = 0xE400000000000000;
    }
    else {
      unint64_t v16 = 0xE500000000000000;
    }
    uint64_t v19 = sub_240A38940(v15, v16, &updated);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v10, v11, "[%{public}s]: Hide the feed item in Summary: %{public}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v14, -1, -1);
    MEMORY[0x24560B930](v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v18);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v9;
}

uint64_t *sub_240A5A920(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    unint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    unint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    unint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_240BB3240();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_retain();
    v10(v7, v8, v9);
  }
  return v5;
}

void *sub_240A5AA04(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  unint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_240BB3240();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *sub_240A5AA98(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  unint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_240BB3240();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_240A5AB14(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_240BB3240();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_240A5ABA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240A5ABB4);
}

uint64_t sub_240A5ABB4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_240BB3240();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    os_log_type_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_240A5AC64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240A5AC78);
}

void *sub_240A5AC78(void *result, uint64_t a2, int a3, uint64_t a4)
{
  unint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_240BB3240();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_240A5AD20()
{
  uint64_t result = sub_240BB3240();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for IrregularRhythmNotificationsFeatureStatusActionHandler()
{
  uint64_t result = qword_26AFD8508;
  if (!qword_26AFD8508) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240A5AE08()
{
  return swift_initClassMetadata2();
}

void sub_240A5AE54()
{
  uint64_t ObjectType = swift_getObjectType();
  sub_240A5C00C(0);
  MEMORY[0x270FA5388](v1 - 8);
  unint64_t v74 = (char *)v73 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A35CBC(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v76 = (uint64_t)v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_240BB56E0();
  uint64_t v77 = *(void *)(v5 - 8);
  uint64_t v78 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v75 = (char *)v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240BB3660();
  uint64_t v84 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_240BB3B20();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v82 = v10;
  uint64_t v83 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v81 = (char *)v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v85 = (char *)v73 - v14;
  uint64_t v15 = sub_240BB4EC0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB5250();
  sub_240BB50E0();
  uint64_t v19 = (void (*)(uint64_t))MEMORY[0x263F44600];
  sub_240A5C0A4(&qword_268C9EFA0, MEMORY[0x263F44600]);
  sub_240A5C0A4(&qword_268C9FAB0, v19);
  sub_240BB4EB0();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v16 + 8);
  v20(v18, v15);
  uint64_t v21 = v87[0];
  if (v87[0])
  {
    sub_240BB5250();
    sub_240BB4E90();
    v20(v18, v15);
    uint64_t v86 = v21;
    sub_240A3466C(v87, v87[3]);
    uint64_t v22 = (void *)sub_240BB4E10();
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v87);
    sub_240BB5250();
    id v80 = (id)sub_240BB4EA0();
    v20(v18, v15);
    v73[1] = v0;
    sub_240BB5250();
    uint64_t v23 = v85;
    sub_240BB36F0();
    v20(v18, v15);
    sub_240BB50B0();
    uint64_t v24 = v84;
    int v25 = (*(uint64_t (**)(char *, uint64_t))(v84 + 88))(v9, v7);
    if (v25 == *MEMORY[0x263F435C8])
    {
      uint64_t v26 = *MEMORY[0x263F09778];
      id v27 = objc_allocWithZone(MEMORY[0x263F0A3D0]);
      id v28 = v22;
      id v29 = objc_msgSend(v27, sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v26, v28, 0);
      type metadata accessor for AtrialFibrillationFeatureStatusAvailability();
      uint64_t v30 = swift_allocObject();
      sub_240A5C0EC(v28, (uint64_t)v29, v30);

      uint64_t v32 = v82;
      uint64_t v31 = v83;
      uint64_t v33 = (uint64_t)v81;
      (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v81, v23, v82);
      id v34 = objc_allocWithZone((Class)type metadata accessor for AtrialFibrillationSettingsViewController(0));
      uint64_t v35 = swift_retain();
      id v36 = sub_240A80144(v35, v33);
      id v37 = v80;
      id v38 = objc_msgSend(v80, sel_navigationController);
      if (v38)
      {
        uint64_t v39 = v38;
        objc_msgSend(v38, sel_pushViewController_animated_, v36, 1);

        swift_release();
        swift_release();

        (*(void (**)(char *, uint64_t))(v31 + 8))(v23, v32);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v23, v32);

        swift_release();
        swift_release();
      }
    }
    else
    {
      id v47 = v80;
      id v48 = v23;
      if (v25 == *MEMORY[0x263F435D0])
      {
        uint64_t v49 = *MEMORY[0x263F09778];
        id v50 = objc_allocWithZone(MEMORY[0x263F0A3D0]);
        id v51 = v22;
        id v52 = objc_msgSend(v50, sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v49, v51, 0);
        type metadata accessor for AtrialFibrillationFeatureStatusAvailability();
        uint64_t v53 = swift_allocObject();
        uint64_t v54 = sub_240A5C0EC(v51, (uint64_t)v52, v53);

        uint64_t v55 = v54 + OBJC_IVAR____TtC5Heart43AtrialFibrillationFeatureStatusAvailability_status;
        swift_beginAccess();
        uint64_t v56 = v55;
        uint64_t v57 = v76;
        sub_240A5C468(v56, v76, (uint64_t (*)(void))sub_240A35CBC);
        uint64_t v59 = v77;
        uint64_t v58 = v78;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v57, 1, v78) == 1)
        {
          sub_240A5C3D4(v57, (uint64_t (*)(void))sub_240A35CBC);
          uint64_t v60 = v82;
        }
        else
        {
          unint64_t v62 = v75;
          (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v75, v57, v58);
          char v63 = sub_240BB56D0();
          uint64_t v60 = v82;
          if (v63)
          {
            uint64_t v64 = v83;
            uint64_t v65 = (uint64_t)v81;
            (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v81, v48, v82);
            id v66 = objc_allocWithZone((Class)type metadata accessor for AtrialFibrillationSettingsViewController(0));
            uint64_t v67 = swift_retain();
            id v68 = sub_240A80144(v67, v65);
            sub_240BB4E50();
            sub_240B33144(1, (uint64_t)v51, ObjectType, (uint64_t)&off_26F504618);
            id v69 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v68);
            objc_msgSend(v47, sel_presentViewController_animated_completion_, v69, 1, 0);

            swift_release();
            swift_release();
            (*(void (**)(char *, uint64_t))(v77 + 8))(v62, v78);
            (*(void (**)(char *, uint64_t))(v64 + 8))(v48, v60);
            return;
          }
          (*(void (**)(char *, uint64_t))(v59 + 8))(v62, v58);
        }
        sub_240A5B9D0(v47, v51);

        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v83 + 8))(v48, v60);
      }
      else
      {
        uint64_t v61 = v83;
        if (v25 == *MEMORY[0x263F435C0] || v25 == *MEMORY[0x263F435B8])
        {
          uint64_t v70 = (uint64_t)v74;
          sub_240BB50D0();
          uint64_t v71 = sub_240BB2B20();
          uint64_t v72 = *(void *)(v71 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v70, 1, v71) == 1)
          {
            (*(void (**)(char *, uint64_t))(v61 + 8))(v48, v82);

            swift_release();
            sub_240A5C3D4(v70, (uint64_t (*)(void))sub_240A5C00C);
          }
          else
          {
            sub_240BB2AE0();

            swift_release();
            (*(void (**)(char *, uint64_t))(v61 + 8))(v48, v82);
            (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v70, v71);
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v83 + 8))(v23, v82);

          swift_release();
          (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v7);
        }
      }
    }
  }
  else
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_240BB5990();
    sub_240A395FC(v40, (uint64_t)qword_26AFDEC70);
    os_log_type_t v41 = sub_240BB5970();
    os_log_type_t v42 = sub_240BB7190();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      v87[0] = v44;
      *(_DWORD *)uint64_t v43 = 136315138;
      uint64_t v45 = sub_240BB7C80();
      v87[5] = sub_240A38940(v45, v46, v87);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v41, v42, "[%s] Could not access action handler user data!", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v44, -1, -1);
      MEMORY[0x24560B930](v43, -1, -1);
    }
  }
}

void sub_240A5B9D0(void *a1, void *a2)
{
  uint64_t v4 = qword_268C9E770;
  id v5 = a2;
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)qword_268CA2BA8;
  uint64_t v7 = (objc_class *)type metadata accessor for OnboardingDelegate();
  uint64_t v8 = (char *)objc_allocWithZone(v7);
  *(void *)&v8[OBJC_IVAR____TtC5HeartP33_8DCA3C15E4C4BF158196465BE488169318OnboardingDelegate_onboardingManager] = 0;
  v30.receiver = v8;
  v30.super_class = v7;
  id v9 = v6;
  id v10 = objc_msgSendSuper2(&v30, sel_init);
  id v11 = objc_allocWithZone(MEMORY[0x263F476A8]);
  uint64_t v12 = (char *)v10;
  id v13 = objc_msgSend(v11, sel_initWithOnboardingType_isFirstTimeOnboarding_healthStore_dateCache_provenance_delegate_, 0, 1, v5, v9, 4, v12);

  uint64_t v14 = *(void **)&v12[OBJC_IVAR____TtC5HeartP33_8DCA3C15E4C4BF158196465BE488169318OnboardingDelegate_onboardingManager];
  *(void *)&v12[OBJC_IVAR____TtC5HeartP33_8DCA3C15E4C4BF158196465BE488169318OnboardingDelegate_onboardingManager] = v13;

  uint64_t v15 = qword_26AFD84F0;
  uint64_t v16 = *(void **)&v2[qword_26AFD84F0];
  *(void *)&v2[qword_26AFD84F0] = v10;

  uint64_t v17 = *(void *)&v2[v15];
  if (v17
    && (uint64_t v18 = *(void **)(v17
                       + OBJC_IVAR____TtC5HeartP33_8DCA3C15E4C4BF158196465BE488169318OnboardingDelegate_onboardingManager)) != 0
    && (id v19 = objc_msgSend(v18, sel_onboardingNavigationController)) != 0)
  {
    uint64_t v20 = v19;
    objc_msgSend(v19, sel_setModalInPresentation_, 1);
    objc_msgSend(a1, sel_showViewController_sender_, v20, 0);
  }
  else
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_240BB5990();
    sub_240A395FC(v21, (uint64_t)qword_26AFDEC70);
    uint64_t v22 = v2;
    uint64_t v23 = sub_240BB5970();
    os_log_type_t v24 = sub_240BB7190();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v29 = v26;
      *(_DWORD *)uint64_t v25 = 136446466;
      swift_getObjectType();
      sub_240A5BFD0();
      uint64_t v27 = sub_240BB6E10();
      sub_240A38940(v27, v28, &v29);
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2082;
      sub_240A38940(0xD000000000000035, 0x8000000240BC9300, &v29);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v23, v24, "[%{public}s.%{public}s] Onboarding navigation controller not initialized", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v26, -1, -1);
      MEMORY[0x24560B930](v25, -1, -1);
    }
    else
    {
    }
  }
}

uint64_t sub_240A5BD20(uint64_t a1)
{
  uint64_t v3 = sub_240BB4EC0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (char *)objc_allocWithZone(v1);
  *(void *)&v7[qword_26AFD84F0] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t v8 = sub_240BB5260();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v8;
}

void sub_240A5BE2C()
{
}

id sub_240A5BE3C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IrregularRhythmNotificationsFeatureStatusActionHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_240A5BE74(uint64_t a1)
{
}

uint64_t sub_240A5BE84()
{
  return type metadata accessor for IrregularRhythmNotificationsFeatureStatusActionHandler();
}

id sub_240A5BED4()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for OnboardingDelegate()
{
  return self;
}

uint64_t sub_240A5BF40()
{
  return sub_240A5C0A4((unint64_t *)&unk_26AFD7BB0, MEMORY[0x263F445D8]);
}

uint64_t sub_240A5BF88()
{
  return sub_240A5C0A4(&qword_26AFD8500, (void (*)(uint64_t))type metadata accessor for IrregularRhythmNotificationsFeatureStatusActionHandler);
}

unint64_t sub_240A5BFD0()
{
  unint64_t result = qword_268C9EF98;
  if (!qword_268C9EF98)
  {
    type metadata accessor for IrregularRhythmNotificationsFeatureStatusActionHandler();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C9EF98);
  }
  return result;
}

void sub_240A5C00C(uint64_t a1)
{
}

void sub_240A5C040(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_240A5C0A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A5C0EC(void *a1, uint64_t a2, uint64_t a3)
{
  sub_240A5C040(0, &qword_26AFD98C0, (uint64_t (*)(uint64_t))sub_240A5C434, MEMORY[0x263EFDE58]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v25[-1] - v9;
  sub_240A5C434(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v25[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v25[-1] - v15;
  v25[3] = sub_240A35CF0();
  void v25[4] = MEMORY[0x263F44B48];
  v25[0] = a2;
  uint64_t v17 = a3 + OBJC_IVAR____TtC5Heart43AtrialFibrillationFeatureStatusAvailability__featureStatus;
  uint64_t v18 = sub_240BB3660();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v16, 1, 1, v18);
  sub_240A5C468((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(void))sub_240A5C434);
  sub_240BB6260();
  sub_240A5C3D4((uint64_t)v16, (uint64_t (*)(void))sub_240A5C434);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v17, v10, v7);
  uint64_t v19 = a3 + OBJC_IVAR____TtC5Heart43AtrialFibrillationFeatureStatusAvailability_status;
  uint64_t v20 = sub_240BB56E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_240BB7900()) {
    unint64_t v21 = sub_240A71C94(MEMORY[0x263F8EE78]);
  }
  else {
    unint64_t v21 = MEMORY[0x263F8EE88];
  }
  *(void *)(a3 + OBJC_IVAR____TtC5Heart43AtrialFibrillationFeatureStatusAvailability_subscriptions) = v21;
  *(void *)(a3 + 16) = a1;
  sub_240A1E37C((uint64_t)v25, a3 + 24);
  id v22 = a1;
  sub_240A85A5C();
  sub_240A86284();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v25);
  return a3;
}

uint64_t sub_240A5C3D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_240A5C434(uint64_t a1)
{
}

uint64_t sub_240A5C468(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id sub_240A5C4D4()
{
  return sub_240A5C53C(&OBJC_IVAR____TtC5Heart27ConfirmDetailsLearnMoreView____lazy_storage___titleLabel, MEMORY[0x263F81F08], MEMORY[0x263F81F18]);
}

id sub_240A5C508()
{
  return sub_240A5C53C(&OBJC_IVAR____TtC5Heart27ConfirmDetailsLearnMoreView____lazy_storage___detailLabel, MEMORY[0x263F81F10], MEMORY[0x263F81EF8]);
}

id sub_240A5C53C(uint64_t *a1, void (*a2)(id), void (*a3)(void))
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void **)(v3 + *a1);
  if (v5)
  {
    id v6 = *(id *)(v3 + *a1);
  }
  else
  {
    id v7 = sub_240A5C59C(v3, a2, a3);
    uint64_t v8 = *(void **)(v3 + v4);
    *(void *)(v3 + v4) = v7;
    id v6 = v7;

    uint64_t v5 = 0;
  }
  id v9 = v5;
  return v6;
}

id sub_240A5C59C(uint64_t a1, void (*a2)(id), void (*a3)(void))
{
  uint64_t v5 = sub_240BB5B20();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  a2(objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0));
  uint64_t v10 = (void *)sub_240BB5AF0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  objc_msgSend(v9, sel_setFont_, v10);

  a3();
  if (v11)
  {
    uint64_t v12 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = 0;
  }
  objc_msgSend(v9, sel_setText_, v12);

  objc_msgSend(v9, sel_setNumberOfLines_, 0);
  return v9;
}

id sub_240A5C738()
{
  uint64_t v1 = OBJC_IVAR____TtC5Heart27ConfirmDetailsLearnMoreView____lazy_storage___learnMoreLabel;
  objc_super v2 = *(void **)&v0[OBJC_IVAR____TtC5Heart27ConfirmDetailsLearnMoreView____lazy_storage___learnMoreLabel];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC5Heart27ConfirmDetailsLearnMoreView____lazy_storage___learnMoreLabel];
  }
  else
  {
    id v4 = sub_240A5C79C(v0);
    uint64_t v5 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v4;
    id v3 = v4;

    objc_super v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_240A5C79C(void *a1)
{
  uint64_t v2 = sub_240BB5B20();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_240BB5B60();
  uint64_t v7 = (void *)sub_240BB5AF0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(v6, sel_setFont_, v7);

  if (qword_268C9E7C8 != -1) {
    swift_once();
  }
  id v8 = (id)static LocalizationSource.heart;
  sub_240BB4850();
  sub_240BB2980();
  swift_bridgeObjectRelease();

  id v9 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setText_, v9);

  id v10 = objc_msgSend(a1, sel_tintColor);
  objc_msgSend(v6, sel_setTextColor_, v10);

  objc_msgSend(v6, sel_setUserInteractionEnabled_, 1);
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82CB0]), sel_initWithTarget_action_, a1, sel_learnMoreTapped);
  objc_msgSend(v6, sel_addGestureRecognizer_, v11);

  objc_msgSend(v6, sel_setNumberOfLines_, 0);
  return v6;
}

id sub_240A5CA3C(uint64_t a1, double a2)
{
  *(void *)&v2[OBJC_IVAR____TtC5Heart27ConfirmDetailsLearnMoreView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR____TtC5Heart27ConfirmDetailsLearnMoreView____lazy_storage___titleLabel] = 0;
  *(void *)&v2[OBJC_IVAR____TtC5Heart27ConfirmDetailsLearnMoreView____lazy_storage___detailLabel] = 0;
  *(void *)&v2[OBJC_IVAR____TtC5Heart27ConfirmDetailsLearnMoreView____lazy_storage___learnMoreLabel] = 0;
  uint64_t v5 = &v2[OBJC_IVAR____TtC5Heart27ConfirmDetailsLearnMoreView_configuration];
  uint64_t v58 = sub_240BB5BD0();
  uint64_t v60 = *(void *)(v58 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v5, a1, v58);
  v61.receiver = v2;
  v61.super_class = (Class)type metadata accessor for ConfirmDetailsLearnMoreView();
  id v6 = objc_msgSendSuper2(&v61, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  id v7 = sub_240A5C4D4();
  double v8 = a2 + -16.0;
  objc_msgSend(v7, sel_setPreferredMaxLayoutWidth_, v8);

  id v9 = sub_240A5C508();
  objc_msgSend(v9, sel_setPreferredMaxLayoutWidth_, v8);

  sub_240A34E00();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_240BBB440;
  id v11 = v6;
  *(void *)(v10 + 32) = sub_240A5C4D4();
  *(void *)(v10 + 40) = sub_240A5C508();
  *(void *)(v10 + 48) = sub_240A5C738();
  sub_240BB6F30();
  sub_240BB7480();

  swift_bridgeObjectRelease();
  id v57 = self;
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_240BBB450;
  id v13 = sub_240A5C4D4();
  id v14 = objc_msgSend(v13, sel_topAnchor);

  id v15 = objc_msgSend(v11, (SEL)&selRef_bradycardiaLearnMoreLink + 3);
  id v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  *(void *)(v12 + 32) = v16;
  id v17 = sub_240A5C4D4();
  id v18 = objc_msgSend(v17, sel_leadingAnchor);

  id v19 = objc_msgSend(v11, sel_leadingAnchor);
  id v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v19, 8.0);

  *(void *)(v12 + 40) = v20;
  id v21 = sub_240A5C4D4();
  id v22 = objc_msgSend(v21, sel_trailingAnchor);

  id v23 = objc_msgSend(v11, sel_trailingAnchor);
  id v24 = objc_msgSend(v22, sel_constraintLessThanOrEqualToAnchor_constant_, v23, -8.0);

  *(void *)(v12 + 48) = v24;
  id v25 = sub_240A5C508();
  id v26 = objc_msgSend(v25, (SEL)&selRef_bradycardiaLearnMoreLink + 3);

  id v27 = sub_240A5C4D4();
  id v28 = objc_msgSend(v27, sel_bottomAnchor);

  id v29 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v28, 4.0);
  *(void *)(v12 + 56) = v29;
  id v30 = sub_240A5C508();
  id v31 = objc_msgSend(v30, sel_leadingAnchor);

  id v32 = objc_msgSend(v11, sel_leadingAnchor);
  id v33 = objc_msgSend(v31, sel_constraintEqualToAnchor_constant_, v32, 8.0);

  *(void *)(v12 + 64) = v33;
  id v34 = sub_240A5C508();
  id v35 = objc_msgSend(v34, sel_trailingAnchor);

  id v36 = objc_msgSend(v11, sel_trailingAnchor);
  id v37 = objc_msgSend(v35, sel_constraintLessThanOrEqualToAnchor_constant_, v36, -8.0);

  *(void *)(v12 + 72) = v37;
  id v38 = sub_240A5C738();
  id v39 = objc_msgSend(v38, sel_topAnchor);

  id v40 = sub_240A5C508();
  id v41 = objc_msgSend(v40, sel_bottomAnchor);

  id v42 = objc_msgSend(v39, sel_constraintEqualToAnchor_constant_, v41, 2.0);
  *(void *)(v12 + 80) = v42;
  id v43 = sub_240A5C738();
  id v44 = objc_msgSend(v43, sel_leadingAnchor);

  id v45 = objc_msgSend(v11, sel_leadingAnchor);
  id v46 = objc_msgSend(v44, sel_constraintEqualToAnchor_constant_, v45, 8.0);

  *(void *)(v12 + 88) = v46;
  id v47 = sub_240A5C738();
  id v48 = objc_msgSend(v47, sel_trailingAnchor);

  id v49 = objc_msgSend(v11, sel_trailingAnchor);
  id v50 = objc_msgSend(v48, sel_constraintLessThanOrEqualToAnchor_constant_, v49, -8.0);

  *(void *)(v12 + 96) = v50;
  id v51 = sub_240A5C738();
  id v52 = objc_msgSend(v51, sel_bottomAnchor);

  id v53 = objc_msgSend(v11, sel_bottomAnchor);
  id v54 = objc_msgSend(v52, sel_constraintEqualToAnchor_constant_, v53, -18.0);

  *(void *)(v12 + 104) = v54;
  sub_240BB6F30();
  sub_240A5D484();
  uint64_t v55 = (void *)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v57, sel_activateConstraints_, v55);

  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(a1, v58);
  return v11;
}

uint64_t sub_240A5D1A8()
{
  uint64_t result = MEMORY[0x24560BA20](v0 + OBJC_IVAR____TtC5Heart27ConfirmDetailsLearnMoreView_delegate);
  if (result)
  {
    if (MEMORY[0x24560BA20](result + qword_268CA0E30))
    {
      sub_240A93FE8();
      sub_240BB50A0();
    }
    return sub_240BB50A0();
  }
  return result;
}

id sub_240A5D2A0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConfirmDetailsLearnMoreView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240A5D388()
{
  return type metadata accessor for ConfirmDetailsLearnMoreView();
}

uint64_t type metadata accessor for ConfirmDetailsLearnMoreView()
{
  uint64_t result = qword_268C9EFD0;
  if (!qword_268C9EFD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240A5D3DC()
{
  uint64_t result = sub_240BB5BD0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_240A5D484()
{
  unint64_t result = qword_268CA2490;
  if (!qword_268CA2490)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268CA2490);
  }
  return result;
}

void *sub_240A5D4C4(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v35 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v35 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v7 = a3[6];
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_240BB27F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    id v11 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
    *(void *)(v8 + v11[5]) = *(void *)(v9 + v11[5]);
    uint64_t v12 = v11[6];
    id v13 = *(void **)(v9 + v12);
    *(void *)(v8 + v12) = v13;
    uint64_t v14 = v11[7];
    id v15 = *(void **)(v9 + v14);
    *(void *)(v8 + v14) = v15;
    uint64_t v16 = v11[8];
    uint64_t v17 = v8 + v16;
    uint64_t v18 = v9 + v16;
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    *(void *)(v17 + 16) = *(void *)(v18 + 16);
    uint64_t v19 = a3[7];
    uint64_t v20 = a3[8];
    id v21 = (char *)v4 + v19;
    uint64_t v22 = (uint64_t)a2 + v19;
    id v23 = *(void **)v22;
    char v24 = *(unsigned char *)(v22 + 8);
    *(void *)id v21 = *(void *)v22;
    v21[8] = v24;
    id v25 = *(void **)(v22 + 16);
    *((void *)v21 + 2) = v25;
    id v26 = (char *)v4 + v20;
    uint64_t v27 = (uint64_t)a2 + v20;
    long long v28 = *(_OWORD *)(v27 + 24);
    *(_OWORD *)((char *)v4 + v20 + 24) = v28;
    uint64_t v29 = v28;
    id v30 = **(void (***)(char *, uint64_t, uint64_t))(v28 - 8);
    sub_240BB4850();
    id v31 = v13;
    id v32 = v15;
    id v33 = v23;
    id v34 = v25;
    v30(v26, v27, v29);
  }
  return v4;
}

uint64_t sub_240A5D6A8(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_240BB27F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = type metadata accessor for AFibBurdenPDFChartViewModel();
  swift_bridgeObjectRelease();

  uint64_t v7 = (id *)(a1 + a2[7]);
  uint64_t v8 = a1 + a2[8];

  return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v8);
}

uint64_t sub_240A5D774(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_240BB27F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
  *(void *)(v7 + v10[5]) = *(void *)(v8 + v10[5]);
  uint64_t v11 = v10[6];
  uint64_t v12 = *(void **)(v8 + v11);
  *(void *)(v7 + v11) = v12;
  uint64_t v13 = v10[7];
  uint64_t v14 = *(void **)(v8 + v13);
  *(void *)(v7 + v13) = v14;
  uint64_t v15 = v10[8];
  uint64_t v16 = v7 + v15;
  uint64_t v17 = v8 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  uint64_t v22 = *(void **)v21;
  char v23 = *(unsigned char *)(v21 + 8);
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = v23;
  char v24 = *(void **)(v21 + 16);
  *(void *)(v20 + 16) = v24;
  uint64_t v25 = a1 + v19;
  uint64_t v26 = a2 + v19;
  long long v27 = *(_OWORD *)(v26 + 24);
  *(_OWORD *)(a1 + v19 + 24) = v27;
  uint64_t v28 = v27;
  uint64_t v29 = **(void (***)(uint64_t, uint64_t, uint64_t))(v27 - 8);
  sub_240BB4850();
  id v30 = v12;
  id v31 = v14;
  id v32 = v22;
  id v33 = v24;
  v29(v25, v26, v28);
  return a1;
}

uint64_t sub_240A5D908(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = (uint64_t)a2 + v8;
  uint64_t v11 = sub_240BB27F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  uint64_t v12 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
  *(void *)(v9 + v12[5]) = *(void *)(v10 + v12[5]);
  sub_240BB4850();
  swift_bridgeObjectRelease();
  uint64_t v13 = v12[6];
  uint64_t v14 = *(void **)(v10 + v13);
  uint64_t v15 = *(void **)(v9 + v13);
  *(void *)(v9 + v13) = v14;
  id v16 = v14;

  uint64_t v17 = v12[7];
  uint64_t v18 = *(void **)(v10 + v17);
  uint64_t v19 = *(void **)(v9 + v17);
  *(void *)(v9 + v17) = v18;
  id v20 = v18;

  uint64_t v21 = v12[8];
  uint64_t v22 = v9 + v21;
  uint64_t v23 = v10 + v21;
  uint64_t v24 = *(void *)(v23 + 16);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(void *)(v22 + 16) = v24;
  uint64_t v25 = a3[7];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = (uint64_t)a2 + v25;
  uint64_t v28 = *(void **)((char *)a2 + v25);
  LOBYTE(v22) = *(unsigned char *)(v27 + 8);
  uint64_t v29 = *(void **)v26;
  *(void *)uint64_t v26 = v28;
  *(unsigned char *)(v26 + 8) = v22;
  id v30 = v28;

  id v31 = *(void **)(v27 + 16);
  id v32 = *(void **)(v26 + 16);
  *(void *)(v26 + 16) = v31;
  id v33 = v31;

  sub_240A51F9C((uint64_t *)(a1 + a3[8]), (uint64_t *)((char *)a2 + a3[8]));
  return a1;
}

uint64_t sub_240A5DA74(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_240BB27F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
  *(void *)(v7 + v10[5]) = *(void *)(v8 + v10[5]);
  *(void *)(v7 + v10[6]) = *(void *)(v8 + v10[6]);
  *(void *)(v7 + v10[7]) = *(void *)(v8 + v10[7]);
  uint64_t v11 = v10[8];
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  uint64_t v18 = a1 + v15;
  uint64_t v19 = a2 + v15;
  *(void *)(v18 + 32) = *(void *)(v19 + 32);
  long long v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  return a1;
}

uint64_t sub_240A5DB94(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_240BB27F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
  *(void *)(v7 + v10[5]) = *(void *)(v8 + v10[5]);
  swift_bridgeObjectRelease();
  uint64_t v11 = v10[6];
  uint64_t v12 = *(void **)(v7 + v11);
  *(void *)(v7 + v11) = *(void *)(v8 + v11);

  uint64_t v13 = v10[7];
  uint64_t v14 = *(void **)(v7 + v13);
  *(void *)(v7 + v13) = *(void *)(v8 + v13);

  uint64_t v15 = v10[8];
  uint64_t v16 = v7 + v15;
  uint64_t v17 = v8 + v15;
  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  LOBYTE(v16) = *(unsigned char *)(a2 + v18 + 8);
  uint64_t v21 = *(void **)(a1 + v18);
  *(void *)uint64_t v19 = *(void *)(a2 + v18);
  *(unsigned char *)(v19 + 8) = v16;

  uint64_t v22 = *(void **)(v19 + 16);
  *(void *)(v19 + 16) = *(void *)(v20 + 16);

  uint64_t v23 = a3[8];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + v23);
  long long v26 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v26;
  *(void *)(v24 + 32) = *(void *)(v25 + 32);
  return a1;
}

uint64_t sub_240A5DCF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240A5DD08);
}

uint64_t sub_240A5DD08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AFibBurdenPDFChartViewModel();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 28) + 16);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_240A5DDD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240A5DDE4);
}

uint64_t sub_240A5DDE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for AFibBurdenPDFChartViewModel();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28) + 16) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for AFibBurdenPDFBarChart()
{
  uint64_t result = qword_268C9EFE0;
  if (!qword_268C9EFE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240A5DEF4()
{
  uint64_t result = type metadata accessor for AFibBurdenPDFChartViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_240A5DFA0@<X0>(uint64_t (*a1)(uint64_t)@<X0>, void *a2@<X1>, char a3@<W2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v135 = a5;
  uint64_t v11 = sub_240BB6570();
  uint64_t v144 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v117 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A62894(0, &qword_268C9F010, MEMORY[0x263EFCD98], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v142 = (char *)&v117 - v15;
  sub_240A61F3C(0, &qword_268C9F018, (uint64_t (*)(uint64_t))sub_240A60A00, (uint64_t (*)(void))sub_240A60DF0, MEMORY[0x263EFCCF8]);
  uint64_t v128 = v16;
  uint64_t v126 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v120 = (char *)&v117 - v17;
  sub_240A61028();
  uint64_t v130 = v18;
  uint64_t v129 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  os_log_type_t v127 = (char *)&v117 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A61290();
  uint64_t v136 = v20;
  uint64_t v132 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  unint64_t v131 = (char *)&v117 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A613C4();
  uint64_t v138 = v22;
  uint64_t v137 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  v134 = (char *)&v117 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A615F8();
  uint64_t v141 = v24;
  uint64_t v140 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  v139 = (char *)&v117 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A62558(0, &qword_268C9F0C8, (uint64_t (*)(uint64_t))sub_240A615F8, MEMORY[0x263F18868], MEMORY[0x263F18E28]);
  uint64_t v133 = v26;
  MEMORY[0x270FA5388](v26);
  v143 = (char *)&v117 - v27;
  sub_240A617D4();
  id v149 = v28;
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  unint64_t v124 = (char *)&v117 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  unint64_t v123 = (char *)&v117 - v31;
  uint64_t v148 = (void *)sub_240BB2CF0();
  uint64_t v121 = *(v148 - 1);
  uint64_t v32 = MEMORY[0x270FA5388](v148);
  v147 = (char *)&v117 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  v146 = (char *)&v117 - v34;
  sub_240A61110(0);
  uint64_t v125 = v35;
  uint64_t v36 = MEMORY[0x270FA5388](v35);
  uint64_t v122 = (char *)&v117 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v36);
  uint64_t v150 = (uint64_t)&v117 - v38;
  uint64_t v39 = sub_240BB27F0();
  uint64_t v152 = *(void *)(v39 - 8);
  uint64_t v153 = v39;
  MEMORY[0x270FA5388](v39);
  uint64_t v154 = (char *)&v117 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_240BB5D70();
  MEMORY[0x270FA5388](v41 - 8);
  uint64_t v42 = sub_240BB5CD0();
  MEMORY[0x270FA5388](v42 - 8);
  uint64_t v43 = sub_240BB5D10();
  MEMORY[0x270FA5388](v43 - 8);
  uint64_t result = type metadata accessor for AFibBurdenPDFChartViewModel();
  uint64_t v45 = *(int *)(result + 32);
  uint64_t v151 = a1;
  id v46 = (double *)((char *)a1 + v45);
  BOOL v47 = *(unsigned char *)v46 == 2;
  uint64_t v145 = a6;
  if (v47)
  {
    sub_240B7DA84(a2, a3, (uint64_t)a4);
  }
  else if (v46[2] < 0.0)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  v118 = v13;
  uint64_t v119 = v11;
  unint64_t v48 = sub_240B7DFD4(3, a2, a3, a4);
  if (v48)
  {
    unint64_t v49 = v48;
    sub_240B7F310(v48);
    uint64_t v51 = v50;
    sub_240A61F3C(0, &qword_268C9F108, (uint64_t (*)(uint64_t))sub_240A61CA0, (uint64_t (*)(void))sub_240A62244, MEMORY[0x263EFCD78]);
    *((void *)&v159 + 1) = v52;
    *(void *)&long long v160 = sub_240A623B4();
    sub_240A23B08((uint64_t *)&v158);
    *(void *)&long long v155 = v51;
    sub_240A62450();
    sub_240BB5CE0();
    uint64_t v53 = swift_allocObject();
    *(void *)(v53 + 16) = a2;
    *(unsigned char *)(v53 + 24) = a3;
    *(void *)(v53 + 32) = a4;
    *(void *)(v53 + 40) = v49;
    id v54 = a2;
    id v55 = a4;
    sub_240BB4850();
    sub_240BB5CC0();
    sub_240BB5D60();
    sub_240A61CA0();
    sub_240A62244();
    sub_240BB5EF0();
    sub_240A37388(&v158, (uint64_t)v157);
    sub_240B7F644(v49);
    uint64_t v57 = v56;
    uint64_t v59 = v58;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_240BB5CC0();
    sub_240BB5D60();
    sub_240BB5D00();
    sub_240A61F3C(0, &qword_268C9F0D8, (uint64_t (*)(uint64_t))sub_240A6183C, (uint64_t (*)(void))sub_240A618B0, MEMORY[0x263EFCD78]);
    v157[3] = v60;
    v157[4] = sub_240A61928();
    sub_240A23B08(v157);
    sub_240A6183C();
    sub_240A618B0();
    sub_240BB5F00();
    uint64_t v57 = 0;
    uint64_t v59 = 0;
  }
  *(void *)&long long v156 = v57;
  *((void *)&v156 + 1) = v59;
  (*(void (**)(char *, uint64_t (*)(uint64_t), uint64_t))(v152 + 16))(v154, v151, v153);
  objc_super v61 = v146;
  sub_240BB27D0();
  unint64_t v62 = v147;
  sub_240BB27A0();
  sub_240A61158();
  char v63 = v148;
  uint64_t result = sub_240BB6D80();
  if ((result & 1) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v64 = v149;
  uint64_t v65 = v123;
  id v66 = &v123[*((int *)v149 + 12)];
  uint64_t v67 = v121;
  id v68 = *(void (**)(char *, char *, void *))(v121 + 32);
  v68(v123, v61, v63);
  v68(v66, v62, v63);
  id v69 = v124;
  uint64_t v70 = &v124[*((int *)v64 + 12)];
  uint64_t v71 = v63;
  uint64_t v72 = *(void (**)(char *, char *, void *))(v67 + 16);
  v72(v124, v65, v63);
  v72(v70, v66, v63);
  uint64_t v73 = (uint64_t)v122;
  v68(v122, v69, v63);
  unint64_t v74 = *(void (**)(char *, void *))(v67 + 8);
  v74(v70, v71);
  uint64_t v75 = &v69[*((int *)v149 + 12)];
  v68(v69, v65, v71);
  v68(v75, v66, v71);
  uint64_t v76 = v125;
  v68((char *)(v73 + *(int *)(v125 + 36)), v75, v71);
  v74(v69, v71);
  uint64_t v77 = sub_240A62730(v73, v150, (uint64_t (*)(void))sub_240A61110);
  id v149 = &v117;
  MEMORY[0x270FA5388](v77);
  uint64_t v78 = v154;
  *(&v117 - 2) = (uint64_t)v151;
  *(&v117 - 1) = (uint64_t)v78;
  sub_240A60A00();
  sub_240A60DF0();
  int v79 = v120;
  sub_240BB5E10();
  uint64_t v80 = sub_240BB5F50();
  uint64_t v148 = *(void **)(*(void *)(v80 - 8) + 56);
  uint64_t v81 = (uint64_t)v142;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v148)(v142, 1, 1, v80);
  unint64_t v82 = sub_240A6118C();
  unint64_t v83 = sub_240A61228();
  uint64_t v84 = v127;
  uint64_t v85 = v128;
  sub_240BB6900();
  uint64_t v151 = (uint64_t (*)(uint64_t))MEMORY[0x263EFCD98];
  sub_240A628F8(v81, &qword_268C9F010, MEMORY[0x263EFCD98]);
  uint64_t v86 = (*(uint64_t (**)(char *, uint64_t))(v126 + 8))(v79, v85);
  MEMORY[0x270FA5388](v86);
  *(&v117 - 2) = v135;
  *(void *)&long long v158 = v85;
  *((void *)&v158 + 1) = v76;
  *(void *)&long long v159 = v82;
  *((void *)&v159 + 1) = v83;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v88 = MEMORY[0x263EFCC38];
  uint64_t v89 = v131;
  uint64_t v90 = v130;
  uint64_t v91 = MEMORY[0x263EFCC30];
  sub_240BB68E0();
  (*(void (**)(char *, uint64_t))(v129 + 8))(v84, v90);
  long long v155 = v156;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v148)(v81, 1, 1, v80);
  sub_240A62844(0, &qword_268C9F0B0, MEMORY[0x263F8D560], MEMORY[0x263F8D1A0]);
  uint64_t v93 = v92;
  *(void *)&long long v158 = v90;
  *((void *)&v158 + 1) = v88;
  *(void *)&long long v159 = OpaqueTypeConformance2;
  *((void *)&v159 + 1) = v91;
  uint64_t v94 = swift_getOpaqueTypeConformance2();
  unint64_t v95 = sub_240A6156C();
  uint64_t v96 = v134;
  uint64_t v97 = v136;
  sub_240BB6910();
  sub_240A628F8(v81, &qword_268C9F010, v151);
  uint64_t v98 = (*(uint64_t (**)(char *, uint64_t))(v132 + 8))(v89, v97);
  MEMORY[0x270FA5388](v98);
  *(&v117 - 2) = (uint64_t)&v156;
  *(void *)&long long v158 = v97;
  *((void *)&v158 + 1) = v93;
  *(void *)&long long v159 = v94;
  *((void *)&v159 + 1) = v95;
  swift_getOpaqueTypeConformance2();
  v99 = v139;
  uint64_t v100 = v138;
  sub_240BB68F0();
  (*(void (**)(char *, uint64_t))(v137 + 8))(v96, v100);
  sub_240BB6B40();
  sub_240BB64E0();
  uint64_t v101 = v140;
  uint64_t v102 = (uint64_t)v143;
  uint64_t v103 = v141;
  (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v143, v99, v141);
  uint64_t v104 = (_OWORD *)(v102 + *(int *)(v133 + 36));
  long long v105 = v159;
  _OWORD *v104 = v158;
  v104[1] = v105;
  v104[2] = v160;
  (*(void (**)(char *, uint64_t))(v101 + 8))(v99, v103);
  uint64_t KeyPath = swift_getKeyPath();
  id v107 = objc_msgSend(self, sel_sharedApplication);
  id v108 = objc_msgSend(v107, sel_userInterfaceLayoutDirection);

  uint64_t v109 = v144;
  uint64_t v110 = (unsigned int *)MEMORY[0x263F18DD0];
  if (v108 != (id)1) {
    uint64_t v110 = (unsigned int *)MEMORY[0x263F18DC8];
  }
  uint64_t v111 = v118;
  uint64_t v112 = v119;
  (*(void (**)(char *, void, uint64_t))(v144 + 104))(v118, *v110, v119);
  sub_240A619F0();
  uint64_t v114 = v145;
  uint64_t v115 = (uint64_t *)(v145 + *(int *)(v113 + 36));
  sub_240A62894(0, &qword_268C9F100, MEMORY[0x263F18DD8], MEMORY[0x263F1A418]);
  (*(void (**)(char *, char *, uint64_t))(v109 + 16))((char *)v115 + *(int *)(v116 + 28), v111, v112);
  *uint64_t v115 = KeyPath;
  sub_240A61AC0(v102, v114);
  (*(void (**)(char *, uint64_t))(v109 + 8))(v111, v112);
  sub_240A61B5C(v102);
  sub_240A61BF0(v150);
  (*(void (**)(char *, uint64_t))(v152 + 8))(v154, v153);
  return sub_240A61C4C((uint64_t)&v156);
}

uint64_t sub_240A5F1D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v84 = a2;
  uint64_t v77 = a3;
  uint64_t v86 = sub_240BB2CF0();
  uint64_t v90 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  uint64_t v70 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A62558(0, &qword_268C9F168, MEMORY[0x263F07490], MEMORY[0x263EFCAD0], MEMORY[0x263EFCC50]);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v83 = (char *)&v63 - v6;
  uint64_t v74 = sub_240BB5EE0();
  uint64_t v89 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  id v69 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A621B8(0, &qword_268C9F060, MEMORY[0x263EFCD68]);
  uint64_t v73 = v8;
  uint64_t v88 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v80 = (char *)&v63 - v9;
  sub_240A60CF8();
  uint64_t v87 = v10;
  uint64_t v85 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v76 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v75 = (char *)&v63 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  unint64_t v82 = (char *)&v63 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v81 = (char *)&v63 - v17;
  uint64_t v18 = type metadata accessor for AFibBurdenPDFChartViewModel();
  uint64_t v19 = v18 - 8;
  uint64_t v20 = *(void *)(v18 - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  MEMORY[0x270FA5388](v18);
  sub_240A60A74();
  uint64_t v72 = v22;
  uint64_t v71 = *(void *)(v22 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  int v79 = (char *)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v63 - v25;
  uint64_t v92 = *(void *)(a1 + *(int *)(v19 + 28));
  sub_240A625C4(a1, (uint64_t)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v27 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v28 = swift_allocObject();
  sub_240A62730((uint64_t)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), v28 + v27, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartViewModel);
  sub_240A62894(0, &qword_268C9F030, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFChartPoint, MEMORY[0x263F8D488]);
  id v68 = v29;
  sub_240BB27F0();
  sub_240A60B78();
  sub_240A60C70();
  uint64_t v30 = MEMORY[0x263EFCD08];
  sub_240A621B8(255, &qword_268C9F040, MEMORY[0x263EFCD10]);
  uint64_t v32 = v31;
  uint64_t v33 = sub_240BB5E30();
  sub_240BB4850();
  uint64_t v93 = v33;
  uint64_t v94 = MEMORY[0x263F1B440];
  uint64_t v95 = v30;
  uint64_t v96 = MEMORY[0x263F1B420];
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v93 = v32;
  uint64_t v94 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_240A60944(&qword_268C9F170, (void (*)(uint64_t))type metadata accessor for AFibBurdenPDFChartPoint);
  uint64_t v78 = v26;
  sub_240BB6AD0();
  sub_240BB6740();
  uint64_t v35 = v70;
  sub_240BB27D0();
  uint64_t v36 = v69;
  uint64_t v37 = v86;
  sub_240BB5D50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v38 = *(void (**)(char *, uint64_t))(v90 + 8);
  v90 += 8;
  id v68 = v38;
  v38(v35, v37);
  sub_240BB5EC0();
  if (qword_268C9E708 != -1) {
    swift_once();
  }
  uint64_t v93 = qword_268CA2AE0;
  uint64_t v39 = v80;
  uint64_t v40 = v74;
  uint64_t v41 = MEMORY[0x263F1B440];
  uint64_t v42 = MEMORY[0x263EFCD60];
  uint64_t v43 = MEMORY[0x263F1B420];
  sub_240BB5C80();
  id v44 = *(void (**)(char *, uint64_t))(v89 + 8);
  v89 += 8;
  uint64_t v67 = v44;
  v44(v36, v40);
  sub_240BB64B0();
  uint64_t v93 = v40;
  uint64_t v94 = v41;
  uint64_t v95 = v42;
  uint64_t v96 = v43;
  uint64_t v66 = swift_getOpaqueTypeConformance2();
  uint64_t v45 = v82;
  uint64_t v46 = v73;
  sub_240BB5CB0();
  sub_240A62818((uint64_t)&v92);
  BOOL v47 = *(void (**)(char *, uint64_t))(v88 + 8);
  v88 += 8;
  uint64_t v65 = v47;
  v47(v39, v46);
  uint64_t v64 = *(void (**)(char *, char *, uint64_t))(v85 + 32);
  v64(v81, v45, v87);
  sub_240BB6740();
  sub_240BB27A0();
  uint64_t v48 = v86;
  sub_240BB5D50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v68(v35, v48);
  sub_240BB5EC0();
  uint64_t v93 = qword_268CA2AE0;
  unint64_t v49 = v80;
  sub_240BB5C80();
  v67(v36, v40);
  sub_240BB64B0();
  uint64_t v50 = v75;
  sub_240BB5CB0();
  sub_240A62818((uint64_t)&v93);
  v65(v49, v46);
  uint64_t v51 = v82;
  uint64_t v52 = v87;
  v64(v82, v50, v87);
  uint64_t v53 = v71;
  id v54 = v79;
  uint64_t v55 = v72;
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v79, v78, v72);
  v91[0] = v54;
  uint64_t v56 = v85;
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v85 + 16);
  uint64_t v58 = v81;
  v57(v50, v81, v52);
  v91[1] = v50;
  uint64_t v59 = v76;
  v57(v76, v51, v52);
  v91[2] = v59;
  sub_240B98C50(v91, v77);
  uint64_t v60 = *(void (**)(char *, uint64_t))(v56 + 8);
  v60(v51, v52);
  v60(v58, v52);
  objc_super v61 = *(void (**)(char *, uint64_t))(v53 + 8);
  v61(v78, v55);
  v60(v59, v52);
  v60(v50, v52);
  return ((uint64_t (*)(char *, uint64_t))v61)(v79, v55);
}

uint64_t sub_240A5FD84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v72 = a3;
  uint64_t v4 = sub_240BB6760();
  uint64_t v70 = *(void *)(v4 - 8);
  uint64_t v71 = v4;
  MEMORY[0x270FA5388](v4);
  id v69 = (char *)v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A62844(0, &qword_268C9F178, MEMORY[0x263EFCE78], MEMORY[0x263EFCC50]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v67 = (char *)v50 - v7;
  uint64_t v64 = (uint64_t (*)(uint64_t))MEMORY[0x263F07920];
  sub_240A62894(0, &qword_268C9F180, MEMORY[0x263F07920], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v60 = (char *)v50 - v9;
  uint64_t v10 = sub_240BB2EC0();
  uint64_t v56 = *(void *)(v10 - 8);
  uint64_t v57 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v55 = (char *)v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_240BB2CF0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v50 - v17;
  sub_240A62558(0, &qword_268C9F168, MEMORY[0x263F07490], MEMORY[0x263EFCAD0], MEMORY[0x263EFCC50]);
  MEMORY[0x270FA5388](v19 - 8);
  id v54 = (char *)v50 - v20;
  uint64_t v21 = sub_240BB5E30();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v61 = v21;
  uint64_t v62 = v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v59 = (char *)v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = MEMORY[0x263EFCB70];
  sub_240A621B8(0, &qword_268C9F040, MEMORY[0x263EFCD10]);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v65 = v24;
  uint64_t v66 = v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v58 = (char *)v50 - v26;
  uint64_t v52 = sub_240BB6740();
  v50[1] = v27;
  uint64_t v53 = a1;
  sub_240BB27D0();
  uint64_t v28 = (void *)sub_240BB2C90();
  uint64_t v29 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v51 = v12;
  v29(v16, v12);
  sub_240BB27A0();
  uint64_t v30 = (void *)sub_240BB2C90();
  v29(v16, v12);
  id v31 = (id)HKDateMid();

  sub_240BB2CB0();
  uint64_t v33 = v56;
  uint64_t v32 = v57;
  uint64_t v34 = v55;
  (*(void (**)(char *, void, uint64_t))(v56 + 104))(v55, *MEMORY[0x263F07830], v57);
  uint64_t v35 = sub_240BB2EE0();
  uint64_t v36 = (uint64_t)v60;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v60, 1, 1, v35);
  sub_240BB5D40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_240A628F8(v36, &qword_268C9F180, v64);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
  v29(v18, v51);
  sub_240BB6740();
  uint64_t v73 = *(void *)(v53 + *(int *)(type metadata accessor for AFibBurdenPDFChartPoint() + 20));
  sub_240BB5D50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v37 = v59;
  sub_240BB5E20();
  uint64_t v73 = sub_240B97740();
  uint64_t v38 = MEMORY[0x263F1B440];
  uint64_t v39 = MEMORY[0x263F1B420];
  uint64_t v40 = v58;
  uint64_t v41 = v61;
  uint64_t v42 = MEMORY[0x263EFCD08];
  sub_240BB5C80();
  swift_release();
  uint64_t v43 = v37;
  uint64_t v44 = v41;
  (*(void (**)(char *, uint64_t))(v62 + 8))(v43, v41);
  uint64_t v45 = v69;
  uint64_t v46 = v70;
  uint64_t v47 = v71;
  (*(void (**)(char *, void, uint64_t))(v70 + 104))(v69, *MEMORY[0x263F19860], v71);
  uint64_t v73 = v44;
  uint64_t v74 = v38;
  uint64_t v75 = v42;
  uint64_t v76 = v39;
  swift_getOpaqueTypeConformance2();
  uint64_t v48 = v65;
  sub_240BB5C70();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v45, v47);
  return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v40, v48);
}

uint64_t sub_240A605A0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240A5DFA0((uint64_t (*)(uint64_t))(v2 + a1[6]), *(void **)(v2 + a1[7]), *(unsigned char *)(v2 + a1[7] + 8), *(void **)(v2 + a1[7] + 16), v2 + a1[8], a2);
}

uint64_t sub_240A605C8()
{
  return *(void *)v0;
}

uint64_t sub_240A605D4()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_240A605E0@<X0>(uint64_t a1@<X8>)
{
  if (qword_268C9E708 != -1) {
    swift_once();
  }
  swift_retain();
  sub_240BB4230();
  uint64_t v2 = sub_240BB4240();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 0, 1, v2);
}

uint64_t sub_240A60694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240A60944(&qword_268C9F008, (void (*)(uint64_t))type metadata accessor for AFibBurdenPDFBarChart);

  return MEMORY[0x270F34BE8](a1, a2, a3, v6);
}

uint64_t sub_240A60718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240A60748(a1, a2, a3, MEMORY[0x263F44870]);
}

uint64_t sub_240A60730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240A60748(a1, a2, a3, MEMORY[0x263F44878]);
}

uint64_t sub_240A60748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = sub_240A60944(&qword_268C9F008, (void (*)(uint64_t))type metadata accessor for AFibBurdenPDFBarChart);

  return a4(a1, a2, v6);
}

uint64_t sub_240A607D8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  uint64_t v4 = sub_240A60944(&qword_268C9F000, (void (*)(uint64_t))type metadata accessor for AFibBurdenPDFBarChart);
  *uint64_t v3 = v1;
  v3[1] = sub_240A524D4;
  return MEMORY[0x270F33478](a1, v4);
}

uint64_t sub_240A608B4()
{
  return sub_240A60944(&qword_268C9EFF8, (void (*)(uint64_t))type metadata accessor for AFibBurdenPDFBarChart);
}

uint64_t sub_240A608FC()
{
  return sub_240A60944(&qword_268C9F000, (void (*)(uint64_t))type metadata accessor for AFibBurdenPDFBarChart);
}

uint64_t sub_240A60944(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A6098C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_240A609A8(uint64_t a1)
{
  uint64_t result = sub_240A60944(&qword_268C9F008, (void (*)(uint64_t))type metadata accessor for AFibBurdenPDFBarChart);
  *(void *)(a1 + 8) = result;
  return result;
}

void sub_240A60A00()
{
  if (!qword_268C9F020)
  {
    sub_240A60A74();
    sub_240A60CF8();
    unint64_t v0 = sub_240BB5C40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9F020);
    }
  }
}

void sub_240A60A74()
{
  if (!qword_268C9F028)
  {
    sub_240A62894(255, &qword_268C9F030, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFChartPoint, MEMORY[0x263F8D488]);
    sub_240BB27F0();
    sub_240A60B78();
    sub_240A60C70();
    sub_240A60944((unint64_t *)&qword_268C9F050, MEMORY[0x263F062D0]);
    unint64_t v0 = sub_240BB6AF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9F028);
    }
  }
}

void sub_240A60B78()
{
  if (!qword_268C9F038)
  {
    sub_240A621B8(255, &qword_268C9F040, MEMORY[0x263EFCD10]);
    sub_240BB5E30();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9F038);
    }
  }
}

unint64_t sub_240A60C70()
{
  unint64_t result = qword_268C9F048;
  if (!qword_268C9F048)
  {
    sub_240A62894(255, &qword_268C9F030, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFChartPoint, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F048);
  }
  return result;
}

void sub_240A60CF8()
{
  if (!qword_268C9F058)
  {
    sub_240A621B8(255, &qword_268C9F060, MEMORY[0x263EFCD68]);
    sub_240BB5EE0();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9F058);
    }
  }
}

unint64_t sub_240A60DF0()
{
  unint64_t result = qword_268C9F068;
  if (!qword_268C9F068)
  {
    sub_240A60A00();
    sub_240A60F14();
    sub_240A621B8(255, &qword_268C9F060, MEMORY[0x263EFCD68]);
    sub_240BB5EE0();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F068);
  }
  return result;
}

unint64_t sub_240A60F14()
{
  unint64_t result = qword_268C9F070;
  if (!qword_268C9F070)
  {
    sub_240A60A74();
    sub_240A621B8(255, &qword_268C9F040, MEMORY[0x263EFCD10]);
    sub_240BB5E30();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F070);
  }
  return result;
}

void sub_240A61028()
{
  if (!qword_268C9F078)
  {
    sub_240A61F3C(255, &qword_268C9F018, (uint64_t (*)(uint64_t))sub_240A60A00, (uint64_t (*)(void))sub_240A60DF0, MEMORY[0x263EFCCF8]);
    sub_240A61110(255);
    sub_240A6118C();
    sub_240A61228();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9F078);
    }
  }
}

void sub_240A61110(uint64_t a1)
{
}

uint64_t sub_240A61158()
{
  return sub_240A60944(&qword_268C9F088, MEMORY[0x263F07490]);
}

unint64_t sub_240A6118C()
{
  unint64_t result = qword_268C9F090;
  if (!qword_268C9F090)
  {
    sub_240A61F3C(255, &qword_268C9F018, (uint64_t (*)(uint64_t))sub_240A60A00, (uint64_t (*)(void))sub_240A60DF0, MEMORY[0x263EFCCF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F090);
  }
  return result;
}

unint64_t sub_240A61228()
{
  unint64_t result = qword_268C9F098;
  if (!qword_268C9F098)
  {
    sub_240A61110(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F098);
  }
  return result;
}

void sub_240A61290()
{
  if (!qword_268C9F0A0)
  {
    sub_240A61028();
    sub_240A61F3C(255, &qword_268C9F018, (uint64_t (*)(uint64_t))sub_240A60A00, (uint64_t (*)(void))sub_240A60DF0, MEMORY[0x263EFCCF8]);
    sub_240A61110(255);
    sub_240A6118C();
    sub_240A61228();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9F0A0);
    }
  }
}

void sub_240A613C4()
{
  if (!qword_268C9F0A8)
  {
    sub_240A61290();
    sub_240A62844(255, &qword_268C9F0B0, MEMORY[0x263F8D560], MEMORY[0x263F8D1A0]);
    sub_240A61028();
    sub_240A61F3C(255, &qword_268C9F018, (uint64_t (*)(uint64_t))sub_240A60A00, (uint64_t (*)(void))sub_240A60DF0, MEMORY[0x263EFCCF8]);
    sub_240A61110(255);
    sub_240A6118C();
    sub_240A61228();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_240A6156C();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9F0A8);
    }
  }
}

unint64_t sub_240A6156C()
{
  unint64_t result = qword_268C9F0B8;
  if (!qword_268C9F0B8)
  {
    sub_240A62844(255, &qword_268C9F0B0, MEMORY[0x263F8D560], MEMORY[0x263F8D1A0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F0B8);
  }
  return result;
}

void sub_240A615F8()
{
  if (!qword_268C9F0C0)
  {
    sub_240A613C4();
    sub_240A61290();
    sub_240A62844(255, &qword_268C9F0B0, MEMORY[0x263F8D560], MEMORY[0x263F8D1A0]);
    sub_240A61028();
    sub_240A61F3C(255, &qword_268C9F018, (uint64_t (*)(uint64_t))sub_240A60A00, (uint64_t (*)(void))sub_240A60DF0, MEMORY[0x263EFCCF8]);
    sub_240A61110(255);
    sub_240A6118C();
    sub_240A61228();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_240A6156C();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9F0C0);
    }
  }
}

void sub_240A617D4()
{
  if (!qword_268C9F0D0)
  {
    sub_240BB2CF0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C9F0D0);
    }
  }
}

void sub_240A6183C()
{
  if (!qword_268C9F0E0)
  {
    sub_240BB5C30();
    sub_240BB5E90();
    unint64_t v0 = sub_240BB5C40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9F0E0);
    }
  }
}

unint64_t sub_240A618B0()
{
  unint64_t result = qword_268C9F0E8;
  if (!qword_268C9F0E8)
  {
    sub_240A6183C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F0E8);
  }
  return result;
}

unint64_t sub_240A61928()
{
  unint64_t result = qword_268C9F0F0;
  if (!qword_268C9F0F0)
  {
    sub_240A61F3C(255, &qword_268C9F0D8, (uint64_t (*)(uint64_t))sub_240A6183C, (uint64_t (*)(void))sub_240A618B0, MEMORY[0x263EFCD78]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F0F0);
  }
  return result;
}

uint64_t sub_240A619C4@<X0>(uint64_t a1@<X8>)
{
  return sub_240A5F1D0(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_240A619CC@<X0>(uint64_t a1@<X8>)
{
  return sub_240A624FC(*(void *)(v1 + 16), a1);
}

uint64_t sub_240A619D8@<X0>(uint64_t a1@<X8>)
{
  return sub_240A624FC(*(void *)(v1 + 16) + 16, a1);
}

void sub_240A619F0()
{
  if (!qword_268C9F0F8)
  {
    sub_240A62558(255, &qword_268C9F0C8, (uint64_t (*)(uint64_t))sub_240A615F8, MEMORY[0x263F18868], MEMORY[0x263F18E28]);
    sub_240A62894(255, &qword_268C9F100, MEMORY[0x263F18DD8], MEMORY[0x263F1A418]);
    unint64_t v0 = sub_240BB6580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9F0F8);
    }
  }
}

uint64_t sub_240A61AC0(uint64_t a1, uint64_t a2)
{
  sub_240A62558(0, &qword_268C9F0C8, (uint64_t (*)(uint64_t))sub_240A615F8, MEMORY[0x263F18868], MEMORY[0x263F18E28]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240A61B5C(uint64_t a1)
{
  sub_240A62558(0, &qword_268C9F0C8, (uint64_t (*)(uint64_t))sub_240A615F8, MEMORY[0x263F18868], MEMORY[0x263F18E28]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240A61BF0(uint64_t a1)
{
  sub_240A61110(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240A61C4C(uint64_t a1)
{
  return a1;
}

void sub_240A61CA0()
{
  if (!qword_268C9F110)
  {
    sub_240A61D4C();
    sub_240A621B8(255, (unint64_t *)&qword_268C9F148, MEMORY[0x263EFCB08]);
    unint64_t v0 = sub_240BB5C40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9F110);
    }
  }
}

void sub_240A61D4C()
{
  if (!qword_268C9F118)
  {
    sub_240A61E60();
    sub_240A61F3C(255, (unint64_t *)&qword_268C9F128, (uint64_t (*)(uint64_t))sub_240A61FBC, (uint64_t (*)(void))sub_240A62074, MEMORY[0x263EFCC40]);
    sub_240A6211C();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9F118);
    }
  }
}

void sub_240A61E60()
{
  if (!qword_268C9F120)
  {
    sub_240A61F3C(255, (unint64_t *)&qword_268C9F128, (uint64_t (*)(uint64_t))sub_240A61FBC, (uint64_t (*)(void))sub_240A62074, MEMORY[0x263EFCC40]);
    sub_240A6211C();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9F120);
    }
  }
}

void sub_240A61F3C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_240A61FBC()
{
  if (!qword_268C9F130)
  {
    sub_240A6201C();
    unint64_t v0 = sub_240BB6580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9F130);
    }
  }
}

void sub_240A6201C()
{
  if (!qword_268C9EC50)
  {
    unint64_t v0 = sub_240BB6810();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9EC50);
    }
  }
}

unint64_t sub_240A62074()
{
  unint64_t result = qword_268C9F138;
  if (!qword_268C9F138)
  {
    sub_240A61FBC();
    sub_240A60944((unint64_t *)&qword_268C9EC90, (void (*)(uint64_t))sub_240A6201C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F138);
  }
  return result;
}

unint64_t sub_240A6211C()
{
  unint64_t result = qword_268C9F140;
  if (!qword_268C9F140)
  {
    sub_240A61F3C(255, (unint64_t *)&qword_268C9F128, (uint64_t (*)(uint64_t))sub_240A61FBC, (uint64_t (*)(void))sub_240A62074, MEMORY[0x263EFCC40]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F140);
  }
  return result;
}

void sub_240A621B8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v5) {
      atomic_store(OpaqueTypeMetadata2, a2);
    }
  }
}

unint64_t sub_240A62244()
{
  unint64_t result = qword_268C9F150;
  if (!qword_268C9F150)
  {
    sub_240A61CA0();
    sub_240A61E60();
    sub_240A61F3C(255, (unint64_t *)&qword_268C9F128, (uint64_t (*)(uint64_t))sub_240A61FBC, (uint64_t (*)(void))sub_240A62074, MEMORY[0x263EFCC40]);
    sub_240A6211C();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_240BB5C30();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F150);
  }
  return result;
}

unint64_t sub_240A623B4()
{
  unint64_t result = qword_268C9F158;
  if (!qword_268C9F158)
  {
    sub_240A61F3C(255, &qword_268C9F108, (uint64_t (*)(uint64_t))sub_240A61CA0, (uint64_t (*)(void))sub_240A62244, MEMORY[0x263EFCD78]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F158);
  }
  return result;
}

unint64_t sub_240A62450()
{
  unint64_t result = qword_268C9F160;
  if (!qword_268C9F160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F160);
  }
  return result;
}

uint64_t sub_240A624A4()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_240A624EC@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240B7E2AC(a1, *(void *)(v2 + 16), *(unsigned __int8 *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), a2);
}

uint64_t sub_240A624FC(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_240A62558(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, v9, a4);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_240A625C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AFibBurdenPDFChartViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240A62628()
{
  uint64_t v1 = (int *)(type metadata accessor for AFibBurdenPDFChartViewModel() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240BB27F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_240A62730(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_240A62798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for AFibBurdenPDFChartViewModel() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_240A5FD84(a1, v6, a2);
}

uint64_t sub_240A62818(uint64_t a1)
{
  return a1;
}

void sub_240A62844(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, void))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, MEMORY[0x263F8D538]);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_240A62894(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_240A628F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_240A62894(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_240A6296C()
{
  unint64_t result = qword_268C9F188;
  if (!qword_268C9F188)
  {
    sub_240A619F0();
    sub_240A629E4();
    sub_240A62C1C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F188);
  }
  return result;
}

unint64_t sub_240A629E4()
{
  unint64_t result = qword_268C9F190;
  if (!qword_268C9F190)
  {
    sub_240A62558(255, &qword_268C9F0C8, (uint64_t (*)(uint64_t))sub_240A615F8, MEMORY[0x263F18868], MEMORY[0x263F18E28]);
    sub_240A613C4();
    sub_240A61290();
    sub_240A62844(255, &qword_268C9F0B0, MEMORY[0x263F8D560], MEMORY[0x263F8D1A0]);
    sub_240A61028();
    sub_240A61F3C(255, &qword_268C9F018, (uint64_t (*)(uint64_t))sub_240A60A00, (uint64_t (*)(void))sub_240A60DF0, MEMORY[0x263EFCCF8]);
    sub_240A61110(255);
    sub_240A6118C();
    sub_240A61228();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_240A6156C();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F190);
  }
  return result;
}

unint64_t sub_240A62C1C()
{
  unint64_t result = qword_268C9F198;
  if (!qword_268C9F198)
  {
    sub_240A62894(255, &qword_268C9F100, MEMORY[0x263F18DD8], MEMORY[0x263F1A418]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F198);
  }
  return result;
}

void *assignWithCopy for LowHeartRateNotificationsHealthChecklistConfigurationProvider(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for LowHeartRateNotificationsHealthChecklistConfigurationProvider(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LowHeartRateNotificationsHealthChecklistConfigurationProvider(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LowHeartRateNotificationsHealthChecklistConfigurationProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LowHeartRateNotificationsHealthChecklistConfigurationProvider()
{
  return &type metadata for LowHeartRateNotificationsHealthChecklistConfigurationProvider;
}

uint64_t sub_240A62DB4()
{
  return sub_240A62E44(&qword_26AFD7BF8, (void (*)(uint64_t))type metadata accessor for LowHeartRateNotificationsFeatureStatusActionHandler);
}

uint64_t sub_240A62DFC()
{
  return sub_240A62E44(&qword_268C9F1A0, MEMORY[0x263F43730]);
}

uint64_t sub_240A62E44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A62E8C(char a1)
{
  if (a1)
  {
    objc_msgSend(self, sel_bradycardiaThresholdHeartRate);
    id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
    sub_240A34DC4(0, (unint64_t *)&qword_268CA10E0);
    unint64_t v2 = (void *)sub_240BB74E0();
    uint64_t v3 = sub_240B91C50(v2, (uint64_t)v1);
    uint64_t v5 = v4;

    if (qword_26AFDA090 != -1) {
      swift_once();
    }
    sub_240BB2980();
    sub_240A64CB8(0, (unint64_t *)&qword_26AFD99D8, (uint64_t (*)(uint64_t))sub_240A4C614, MEMORY[0x263F8E0F8]);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_240BB97E0;
    *(void *)(v6 + 56) = MEMORY[0x263F8D310];
    *(void *)(v6 + 64) = sub_240A4C66C();
    *(void *)(v6 + 32) = v3;
    *(void *)(v6 + 40) = v5;
    uint64_t v7 = sub_240BB6DB0();
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_240BB2980();
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_240BB97E0;
    uint64_t v11 = *MEMORY[0x263F47650];
    uint64_t v12 = MEMORY[0x263F8D750];
    *(void *)(v10 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v10 + 64) = v12;
    *(void *)(v10 + 32) = v11;
    uint64_t v13 = sub_240BB6DB0();
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_240BBAE40;
    *(void *)(v16 + 32) = v7;
    *(void *)(v16 + 40) = v9;
    *(void *)(v16 + 48) = v13;
  }
  else
  {
    sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_240BBAE40;
    if (qword_26AFDA090 != -1) {
      swift_once();
    }
    *(void *)(v16 + 32) = sub_240BB2980();
    *(void *)(v16 + 40) = v17;
    uint64_t v18 = sub_240BB2980();
    uint64_t v15 = v19;
    *(void *)(v16 + 48) = v18;
  }
  *(void *)(v16 + 56) = v15;
  return v16;
}

uint64_t sub_240A63234@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240A64CB8(0, &qword_26AFD7B98, MEMORY[0x263F45848], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v19 - v4;
  sub_240A64CB8(0, &qword_26AFD7BA8, MEMORY[0x263F43658], v2);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = sub_240BB3660();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  uint64_t v13 = (void *)qword_26AFDECD8;
  sub_240BB2980();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F435C8], v9);
  id v14 = v13;
  sub_240BB36C0();
  uint64_t v15 = sub_240BB36D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 0, 1, v15);
  sub_240A62E8C(1);
  sub_240BB3750();
  uint64_t v16 = sub_240BB33F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v5, 1, 1, v16);
  sub_240BB38B0();
  uint64_t v17 = sub_240BB38D0();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 0, 1, v17);
}

uint64_t sub_240A635D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v23 = a1;
  id v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240A64CB8(0, &qword_26AFD7B98, MEMORY[0x263F45848], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v22 - v3;
  sub_240A64CB8(0, &qword_26AFD7BA8, MEMORY[0x263F43658], v1);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v22 - v6;
  uint64_t v8 = sub_240BB3660();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  uint64_t v12 = (void *)qword_26AFDECD8;
  uint64_t v22 = sub_240BB2980();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F435D0], v8);
  id v13 = v12;
  sub_240BB36C0();
  uint64_t v14 = sub_240BB36D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v7, 0, 1, v14);
  sub_240BB3720();
  sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_240BBAE40;
  *(void *)(v15 + 32) = sub_240BB2980();
  *(void *)(v15 + 40) = v16;
  *(void *)(v15 + 48) = sub_240BB2980();
  *(void *)(v15 + 56) = v17;
  sub_240BB3750();
  uint64_t v18 = sub_240BB33F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v4, 1, 1, v18);
  uint64_t v19 = v23;
  sub_240BB38B0();
  uint64_t v20 = sub_240BB38D0();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 0, 1, v20);
}

void sub_240A63A28(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v107 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240A64CB8(0, &qword_26AFD7BA8, MEMORY[0x263F43658], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v99 - v5;
  uint64_t v7 = sub_240BB3630();
  uint64_t v104 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A64CB8(0, &qword_26AFD7B70, MEMORY[0x263F06EA8], v3);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v105 = (uint64_t)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v99 - v13;
  uint64_t v15 = sub_240BB3660();
  uint64_t v106 = *(void *)(v15 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v99 - v19;
  id v108 = objc_msgSend(a1, sel_highestPriorityUnsatisfiedRequirement);
  if (!v108)
  {
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v21 = sub_240BB6DE0();
  uint64_t v23 = v22;
  if (v21 == sub_240BB6DE0() && v23 == v24)
  {
    swift_bridgeObjectRelease_n();
LABEL_6:
    uint64_t v26 = sub_240BB38D0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v107, 1, 1, v26);
    id v27 = v108;

    return;
  }
  char v25 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v25) {
    goto LABEL_6;
  }
  uint64_t v28 = sub_240BB6DE0();
  uint64_t v30 = v29;
  if (v28 == sub_240BB6DE0() && v30 == v31)
  {
    swift_bridgeObjectRelease_n();
LABEL_13:

    if (qword_26AFDA090 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_240BB2980();
    uint64_t v35 = v34;
    (*(void (**)(char *, void, uint64_t))(v106 + 104))(v20, *MEMORY[0x263F435B8], v15);
    sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_240BB97E0;
    *(void *)(v36 + 32) = v33;
    *(void *)(v36 + 40) = v35;
    sub_240BB4850();
    uint64_t v37 = sub_240BB3740();
    uint64_t v99 = v38;
    uint64_t v100 = v37;
    uint64_t v103 = MEMORY[0x245606A20](v33, v35);
    *(void *)&long long v101 = v39;
    swift_bridgeObjectRelease();
    id v108 = (id)sub_240BB3740();
    uint64_t v102 = v40;
    id v41 = objc_msgSend(self, sel_bradycardiaLearnMoreLink);
    goto LABEL_16;
  }
  char v32 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v32) {
    goto LABEL_13;
  }
  uint64_t v49 = sub_240BB6DE0();
  uint64_t v51 = v50;
  if (v49 == sub_240BB6DE0() && v51 == v52)
  {
    swift_bridgeObjectRelease_n();
LABEL_24:

    if (qword_26AFDA090 != -1) {
      swift_once();
    }
    uint64_t v54 = sub_240BB2980();
    uint64_t v56 = v55;
    (*(void (**)(char *, void, uint64_t))(v106 + 104))(v20, *MEMORY[0x263F435B8], v15);
    sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
    uint64_t v57 = swift_allocObject();
    *(_OWORD *)(v57 + 16) = xmmword_240BB97E0;
    *(void *)(v57 + 32) = v54;
    *(void *)(v57 + 40) = v56;
    sub_240BB4850();
    uint64_t v58 = sub_240BB3740();
    uint64_t v99 = v59;
    uint64_t v100 = v58;
    uint64_t v103 = MEMORY[0x245606A20](v54, v56);
    *(void *)&long long v101 = v60;
    swift_bridgeObjectRelease();
    id v108 = (id)sub_240BB3740();
    uint64_t v102 = v61;
    id v62 = objc_msgSend(self, sel_bradycardiaLearnMoreLink);
    sub_240BB6DE0();

    sub_240BB2B10();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  char v53 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v53) {
    goto LABEL_24;
  }
  uint64_t v63 = sub_240BB6DE0();
  uint64_t v65 = v64;
  if (v63 == sub_240BB6DE0() && v65 == v66)
  {
    swift_bridgeObjectRelease_n();
LABEL_31:

    id v108 = (id)sub_240BB3780();
    uint64_t v69 = v68;
    if (qword_26AFDA090 != -1) {
      swift_once();
    }
    uint64_t v103 = sub_240BB2980();
    sub_240A64CB8(0, (unint64_t *)&qword_26AFD99D8, (uint64_t (*)(uint64_t))sub_240A4C614, MEMORY[0x263F8E0F8]);
    uint64_t v70 = swift_allocObject();
    long long v101 = xmmword_240BB97E0;
    *(_OWORD *)(v70 + 16) = xmmword_240BB97E0;
    *(void *)(v70 + 56) = MEMORY[0x263F8D310];
    *(void *)(v70 + 64) = sub_240A4C66C();
    *(void *)(v70 + 32) = v108;
    *(void *)(v70 + 40) = v69;
    uint64_t v102 = v69;
    sub_240BB4850();
    uint64_t v103 = sub_240BB6DB0();
    uint64_t v72 = v71;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void, uint64_t))(v106 + 104))(v20, *MEMORY[0x263F435C0], v15);
    sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
    uint64_t v73 = swift_allocObject();
    *(_OWORD *)(v73 + 16) = v101;
    *(void *)(v73 + 32) = v103;
    *(void *)(v73 + 40) = v72;
    *(void *)&long long v101 = v72;
    sub_240BB4850();
    uint64_t v74 = sub_240BB3760();
    uint64_t v99 = v75;
    uint64_t v100 = v74;
    uint64_t v76 = v104;
    (*(void (**)(char *, void, uint64_t))(v104 + 104))(v9, *MEMORY[0x263F43588], v7);
    sub_240BB3610();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v9, v7);
    goto LABEL_17;
  }
  char v67 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v67) {
    goto LABEL_31;
  }
  uint64_t v77 = sub_240BB6DE0();
  uint64_t v79 = v78;
  if (v77 == sub_240BB6DE0() && v79 == v80)
  {

    swift_bridgeObjectRelease_n();
LABEL_38:
    id v108 = (id)sub_240BB3790();
    uint64_t v83 = v82;
    if (qword_26AFDA090 != -1) {
      swift_once();
    }
    uint64_t v103 = sub_240BB2980();
    sub_240A64CB8(0, (unint64_t *)&qword_26AFD99D8, (uint64_t (*)(uint64_t))sub_240A4C614, MEMORY[0x263F8E0F8]);
    uint64_t v84 = swift_allocObject();
    long long v101 = xmmword_240BB97E0;
    *(_OWORD *)(v84 + 16) = xmmword_240BB97E0;
    *(void *)(v84 + 56) = MEMORY[0x263F8D310];
    *(void *)(v84 + 64) = sub_240A4C66C();
    *(void *)(v84 + 32) = v108;
    *(void *)(v84 + 40) = v83;
    uint64_t v102 = v83;
    sub_240BB4850();
    uint64_t v103 = sub_240BB6DB0();
    uint64_t v86 = v85;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void, uint64_t))(v106 + 104))(v20, *MEMORY[0x263F435C0], v15);
    sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
    uint64_t v87 = swift_allocObject();
    *(_OWORD *)(v87 + 16) = v101;
    *(void *)(v87 + 32) = v103;
    *(void *)(v87 + 40) = v86;
    *(void *)&long long v101 = v86;
    sub_240BB4850();
    uint64_t v88 = sub_240BB3760();
    uint64_t v99 = v89;
    uint64_t v100 = v88;
    uint64_t v90 = v104;
    (*(void (**)(char *, void, uint64_t))(v104 + 104))(v9, *MEMORY[0x263F43590], v7);
    sub_240BB3610();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v9, v7);
    goto LABEL_17;
  }
  char v81 = sub_240BB7AE0();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v81) {
    goto LABEL_38;
  }
  if (sub_240BB3730())
  {
    if (qword_26AFDA090 == -1) {
      goto LABEL_46;
    }
    goto LABEL_45;
  }
  if (qword_26AFDA090 != -1) {
LABEL_45:
  }
    swift_once();
LABEL_46:
  uint64_t v91 = sub_240BB2980();
  uint64_t v93 = v92;
  (*(void (**)(char *, void, uint64_t))(v106 + 104))(v20, *MEMORY[0x263F435B8], v15);
  sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
  uint64_t v94 = swift_allocObject();
  *(_OWORD *)(v94 + 16) = xmmword_240BB97E0;
  *(void *)(v94 + 32) = v91;
  *(void *)(v94 + 40) = v93;
  sub_240BB4850();
  uint64_t v95 = sub_240BB3740();
  uint64_t v99 = v96;
  uint64_t v100 = v95;
  uint64_t v103 = MEMORY[0x245606A20](v91, v93);
  *(void *)&long long v101 = v97;
  swift_bridgeObjectRelease();
  id v108 = (id)sub_240BB3740();
  uint64_t v102 = v98;
  id v41 = objc_msgSend(self, sel_bradycardiaLearnMoreLink);
LABEL_16:
  id v42 = v41;
  sub_240BB6DE0();

  sub_240BB2B10();
  swift_bridgeObjectRelease();
LABEL_17:
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  uint64_t v43 = (void *)qword_26AFDECD8;
  sub_240BB2980();
  uint64_t v44 = v106;
  (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v18, v20, v15);
  id v45 = v43;
  sub_240BB36C0();
  uint64_t v46 = sub_240BB36D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v6, 0, 1, v46);
  sub_240A64B98((uint64_t)v14, v105);
  uint64_t v47 = v107;
  sub_240BB38A0();
  sub_240A64C2C((uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v20, v15);
  uint64_t v48 = sub_240BB38D0();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 0, 1, v48);
}

uint64_t sub_240A649F4@<X0>(uint64_t a1@<X8>)
{
  return sub_240A635D0(a1);
}

void sub_240A649FC(void *a1@<X1>, uint64_t a2@<X8>)
{
}

uint64_t sub_240A64A04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F436F8];
  uint64_t v3 = sub_240BB37B0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_240A64A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_240A64D1C();

  return MEMORY[0x270F32850](a1, a2, a3, v6);
}

uint64_t sub_240A64ACC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_240A64D1C();

  return MEMORY[0x270F32838](a1, a2, v4);
}

uint64_t sub_240A64B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_240A3F7C4();

  return MEMORY[0x270F32870](a1, a2, a3, v6);
}

unint64_t sub_240A64B7C()
{
  return 0xD000000000000019;
}

uint64_t sub_240A64B98(uint64_t a1, uint64_t a2)
{
  sub_240A64CB8(0, &qword_26AFD7B70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240A64C2C(uint64_t a1)
{
  sub_240A64CB8(0, &qword_26AFD7B70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_240A64CB8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_240A64D1C()
{
  unint64_t result = qword_26AFD7C10;
  if (!qword_26AFD7C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD7C10);
  }
  return result;
}

uint64_t type metadata accessor for BloodPressureManualDataEntryFieldCell(uint64_t a1)
{
  return sub_240A3E6AC(a1, (uint64_t *)&unk_268C9F1C0);
}

uint64_t sub_240A64D94()
{
  return swift_initClassMetadata2();
}

uint64_t sub_240A64DF8(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 24));
  sub_240BB4850();
  return v2;
}

uint64_t sub_240A64E30()
{
  return 4;
}

uint64_t sub_240A64E38(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 32));
}

uint64_t sub_240A64E44(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 28));
  sub_240BB4850();
  return v2;
}

uint64_t sub_240A64E7C(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v1 + *(int *)(a1 + 36));
  if (v2) {
    return v2(v1);
  }
  else {
    return 0;
  }
}

id sub_240A64EC8()
{
  id v0 = objc_msgSend(self, sel_systemGrayColor);

  return v0;
}

uint64_t sub_240A64F08(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + *(int *)(a3 + 40));
  if (v4) {
    return v4(v3, result, a2);
  }
  return result;
}

unint64_t sub_240A64F54()
{
  return 0xD000000000000026;
}

id sub_240A64FB8(double a1, double a2, double a3, double a4)
{
  swift_unknownObjectWeakInit();
  uint64_t v9 = &v4[qword_268C9F1B8];
  type metadata accessor for BloodPressureNumericValidationImplementer();
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  uint64_t v11 = self;
  uint64_t v12 = v4;
  *(void *)(v10 + 24) = objc_msgSend(v11, sel_millimeterOfMercuryUnit);
  *(void *)&v12[qword_268C9F1B0] = v10;

  v16.receiver = v12;
  v16.super_class = (Class)type metadata accessor for BloodPressureManualDataEntryFieldCell(0);
  id v13 = objc_msgSendSuper2(&v16, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v14 = (void *)sub_240BB4CF0();
  objc_msgSend(v14, sel_addTarget_action_forControlEvents_, v13, sel_textFieldDidChangeWithSender_, 0x20000);

  return v13;
}

id sub_240A650E8(double a1, double a2, double a3, double a4)
{
  return sub_240A64FB8(a1, a2, a3, a4);
}

void sub_240A6510C(char *a1, uint64_t a2, void *a3)
{
  swift_unknownObjectWeakInit();
  uint64_t v5 = &a1[qword_268C9F1B8];
  *(void *)uint64_t v5 = 0;
  *((void *)v5 + 1) = 0;
  id v6 = a3;

  sub_240BB78D0();
  __break(1u);
}

uint64_t sub_240A651A0()
{
  sub_240A665E0(0, &qword_268C9F1D0, (void (*)(uint64_t))type metadata accessor for BloodPressureManualDataEntryFieldItem);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = &v19[-v2 - 8];
  uint64_t v4 = type metadata accessor for BloodPressureManualDataEntryFieldItem(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_240BB4D30();
  unint64_t v8 = (void (*)(void))sub_240BB4D40();
  v8();
  sub_240BB4D00();
  if (!v20)
  {
    sub_240A66634((uint64_t)v19, (unint64_t *)&qword_268C9ECD8, (void (*)(uint64_t))sub_240A47830);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    return sub_240A66634((uint64_t)v3, &qword_268C9F1D0, (void (*)(uint64_t))type metadata accessor for BloodPressureManualDataEntryFieldItem);
  }
  sub_240A47830();
  int v9 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, v9 ^ 1u, 1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1) {
    return sub_240A66634((uint64_t)v3, &qword_268C9F1D0, (void (*)(uint64_t))type metadata accessor for BloodPressureManualDataEntryFieldItem);
  }
  sub_240A66690((uint64_t)v3, (uint64_t)v7);
  uint64_t v10 = &v7[*(int *)(v4 + 44)];
  uint64_t v12 = *(void *)v10;
  uint64_t v11 = *((void *)v10 + 1);
  id v13 = (void *)(v0 + qword_268C9F1B8);
  swift_beginAccess();
  *id v13 = v12;
  v13[1] = v11;
  sub_240BB4850();
  swift_bridgeObjectRelease();
  uint64_t v14 = v13[1];
  sub_240BB4850();
  uint64_t v15 = (void *)sub_240BB4CF0();
  if (v14) {
    objc_super v16 = (void *)sub_240BB6DA0();
  }
  else {
    objc_super v16 = 0;
  }
  objc_msgSend(v15, sel_setAccessibilityIdentifier_, v16);
  swift_bridgeObjectRelease();

  return sub_240A666F4((uint64_t)v7);
}

uint64_t sub_240A65460()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_240BB3900();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v17[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A665E0(0, &qword_268C9F1D0, (void (*)(uint64_t))type metadata accessor for BloodPressureManualDataEntryFieldItem);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v17[-1] - v7;
  sub_240BB4D00();
  if (!v17[3])
  {
    sub_240A66634((uint64_t)v17, (unint64_t *)&qword_268C9ECD8, (void (*)(uint64_t))sub_240A47830);
    uint64_t v15 = type metadata accessor for BloodPressureManualDataEntryFieldItem(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 1, 1, v15);
    return sub_240A66634((uint64_t)v8, &qword_268C9F1D0, (void (*)(uint64_t))type metadata accessor for BloodPressureManualDataEntryFieldItem);
  }
  sub_240A47830();
  uint64_t v9 = type metadata accessor for BloodPressureManualDataEntryFieldItem(0);
  int v10 = swift_dynamicCast();
  uint64_t v11 = *(void *)(v9 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, v10 ^ 1u, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v9) == 1) {
    return sub_240A66634((uint64_t)v8, &qword_268C9F1D0, (void (*)(uint64_t))type metadata accessor for BloodPressureManualDataEntryFieldItem);
  }
  sub_240A66634((uint64_t)v8, &qword_268C9F1D0, (void (*)(uint64_t))type metadata accessor for BloodPressureManualDataEntryFieldItem);
  sub_240BB4D10();
  if (v12)
  {
    v17[0] = *(void *)(v1 + qword_268C9F1B0);
    type metadata accessor for BloodPressureNumericValidationImplementer();
    sub_240A67220(&qword_268C9F1D8, v13, (void (*)(uint64_t))type metadata accessor for BloodPressureNumericValidationImplementer);
    swift_retain();
    sub_240BB3860();
    swift_release();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v2) == *MEMORY[0x263F43898])
    {
      (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);

      sub_240BB4D20();
      return swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_240BB4D20();
}

uint64_t sub_240A65818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_240BB3900();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v21[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A665E0(0, &qword_268C9F1D0, (void (*)(uint64_t))type metadata accessor for BloodPressureManualDataEntryFieldItem);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v21[-1] - v11;
  if (!a4) {
    return 1;
  }
  sub_240BB4D00();
  if (!v21[3])
  {
    sub_240A66634((uint64_t)v21, (unint64_t *)&qword_268C9ECD8, (void (*)(uint64_t))sub_240A47830);
    uint64_t v18 = type metadata accessor for BloodPressureManualDataEntryFieldItem(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v12, 1, 1, v18);
    goto LABEL_6;
  }
  sub_240A47830();
  uint64_t v13 = type metadata accessor for BloodPressureManualDataEntryFieldItem(0);
  int v14 = swift_dynamicCast();
  uint64_t v15 = *(void *)(v13 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, v14 ^ 1u, 1, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13) == 1)
  {
LABEL_6:
    sub_240A66634((uint64_t)v12, &qword_268C9F1D0, (void (*)(uint64_t))type metadata accessor for BloodPressureManualDataEntryFieldItem);
    return 1;
  }
  sub_240A66634((uint64_t)v12, &qword_268C9F1D0, (void (*)(uint64_t))type metadata accessor for BloodPressureManualDataEntryFieldItem);
  v21[0] = *(void *)(v4 + qword_268C9F1B0);
  type metadata accessor for BloodPressureNumericValidationImplementer();
  sub_240A67220(&qword_268C9F1D8, v16, (void (*)(uint64_t))type metadata accessor for BloodPressureNumericValidationImplementer);
  swift_retain();
  sub_240BB3860();
  swift_release();
  BOOL v17 = (*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v9, v6) != *MEMORY[0x263F43888];
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v17;
}

uint64_t sub_240A65B6C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_240BB3900();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A665E0(0, &qword_268C9F1D0, (void (*)(uint64_t))type metadata accessor for BloodPressureManualDataEntryFieldItem);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v20[-1] - v9;
  sub_240BB4D00();
  if (!v20[3])
  {
    sub_240A66634((uint64_t)v20, (unint64_t *)&qword_268C9ECD8, (void (*)(uint64_t))sub_240A47830);
    uint64_t v16 = type metadata accessor for BloodPressureManualDataEntryFieldItem(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v10, 1, 1, v16);
    return sub_240A66634((uint64_t)v10, &qword_268C9F1D0, (void (*)(uint64_t))type metadata accessor for BloodPressureManualDataEntryFieldItem);
  }
  sub_240A47830();
  uint64_t v11 = type metadata accessor for BloodPressureManualDataEntryFieldItem(0);
  int v12 = swift_dynamicCast();
  uint64_t v13 = *(void *)(v11 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, v12 ^ 1u, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v11) == 1) {
    return sub_240A66634((uint64_t)v10, &qword_268C9F1D0, (void (*)(uint64_t))type metadata accessor for BloodPressureManualDataEntryFieldItem);
  }
  sub_240A66634((uint64_t)v10, &qword_268C9F1D0, (void (*)(uint64_t))type metadata accessor for BloodPressureManualDataEntryFieldItem);
  id v14 = objc_msgSend(a1, sel_text);
  if (v14)
  {
    uint64_t v15 = v14;
    sub_240BB6DE0();
  }
  v20[0] = *(void *)(v2 + qword_268C9F1B0);
  type metadata accessor for BloodPressureNumericValidationImplementer();
  sub_240A67220(&qword_268C9F1D8, v18, (void (*)(uint64_t))type metadata accessor for BloodPressureNumericValidationImplementer);
  swift_retain();
  sub_240BB3860();
  swift_release();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t))(v5 + 88))(v7, v4) != *MEMORY[0x263F43898]) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);

  sub_240BB4D20();
  return swift_bridgeObjectRelease();
}

void sub_240A65F38(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_240A65B6C(v4);
}

uint64_t sub_240A65FA0()
{
  swift_unknownObjectWeakDestroy();
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_240A65FF4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BloodPressureManualDataEntryFieldCell(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240A6602C()
{
  swift_unknownObjectWeakDestroy();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_240A6608C()
{
  return type metadata accessor for BloodPressureManualDataEntryFieldCell(0);
}

uint64_t sub_240A66094()
{
  uint64_t v1 = v0 + qword_268C9F1A8;
  swift_beginAccess();
  return MEMORY[0x24560BA20](v1);
}

void sub_240A660E0(void *a1)
{
}

void (*sub_240A66138(void *a1))(id **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = qword_268C9F1A8;
  v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x24560BA20](v5);
  return sub_240A661BC;
}

void sub_240A661BC(id **a1, char a2)
{
  uint64_t v3 = *a1;
  id v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if (a2)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();
  }

  free(v3);
}

uint64_t sub_240A66238()
{
  uint64_t v1 = (uint64_t *)(*v0 + qword_268C9F1B8);
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_240BB4850();
  return v2;
}

uint64_t sub_240A66294(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(*v2 + qword_268C9F1B8);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_240A662F8())()
{
  return j__swift_endAccess;
}

void sub_240A6635C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)sub_240BB4CF0();
  if (a2) {
    uint64_t v4 = sub_240BB6DA0();
  }
  else {
    uint64_t v4 = 0;
  }
  id v5 = (id)v4;
  objc_msgSend(v3, sel_setAccessibilityIdentifier_);
}

id sub_240A663E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_240BB2D80();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)(v1 + 16);
  if (v6)
  {
    id v7 = *(id *)(v1 + 16);
  }
  else
  {
    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
    sub_240BB2D70();
    uint64_t v9 = (void *)sub_240BB2D50();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    objc_msgSend(v8, sel_setLocale_, v9);

    objc_msgSend(v8, sel_setNumberStyle_, 0);
    uint64_t v10 = *(void **)(v1 + 16);
    *(void *)(v1 + 16) = v8;
    id v7 = v8;

    uint64_t v6 = 0;
  }
  id v11 = v6;
  return v7;
}

uint64_t sub_240A66530()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BloodPressureNumericValidationImplementer()
{
  return self;
}

id sub_240A66598()
{
  return sub_240A663E4();
}

uint64_t type metadata accessor for BloodPressureManualDataEntryFieldItem(uint64_t a1)
{
  return sub_240A3E6AC(a1, (uint64_t *)&unk_268C9F1E0);
}

void sub_240A665E0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240BB75E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_240A66634(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_240A665E0(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_240A66690(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BloodPressureManualDataEntryFieldItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_240A666F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BloodPressureManualDataEntryFieldItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_240A66750(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_240BB2D40();
    int v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    sub_240BB4850();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (void *)((char *)v4 + v13);
    uint64_t v16 = (void *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    void *v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = (void *)((char *)v4 + v14);
    uint64_t v19 = (void *)((char *)a2 + v14);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = a3[8];
    uint64_t v23 = a3[9];
    char v24 = *((unsigned char *)a2 + v22);
    void *v18 = v20;
    v18[1] = v21;
    *((unsigned char *)v4 + v22) = v24;
    char v25 = (void *)((char *)v4 + v23);
    uint64_t v26 = (char *)a2 + v23;
    uint64_t v27 = *(void *)((char *)a2 + v23);
    sub_240BB4850();
    sub_240BB4850();
    if (v27)
    {
      uint64_t v28 = *((void *)v26 + 1);
      *char v25 = v27;
      v25[1] = v28;
      swift_retain();
    }
    else
    {
      *(_OWORD *)char v25 = *(_OWORD *)v26;
    }
    uint64_t v30 = a3[10];
    uint64_t v31 = (void *)((char *)v4 + v30);
    char v32 = (void *)((char *)a2 + v30);
    if (*v32)
    {
      uint64_t v33 = v32[1];
      *uint64_t v31 = *v32;
      v31[1] = v33;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    }
    uint64_t v34 = a3[11];
    uint64_t v35 = (void *)((char *)v4 + v34);
    uint64_t v36 = (void *)((char *)a2 + v34);
    uint64_t v37 = v36[1];
    *uint64_t v35 = *v36;
    v35[1] = v37;
    sub_240BB4850();
  }
  return v4;
}

uint64_t sub_240A668F0(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_240BB2D40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[9])) {
    swift_release();
  }
  if (*(void *)(a1 + a2[10])) {
    swift_release();
  }

  return swift_bridgeObjectRelease();
}

void *sub_240A669D0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_240BB2D40();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  sub_240BB4850();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v12);
  uint64_t v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  void *v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (void *)((char *)a1 + v13);
  uint64_t v18 = (void *)((char *)a2 + v13);
  uint64_t v19 = *v18;
  uint64_t v20 = v18[1];
  uint64_t v21 = a3[8];
  uint64_t v22 = a3[9];
  char v23 = *((unsigned char *)a2 + v21);
  *uint64_t v17 = v19;
  v17[1] = v20;
  *((unsigned char *)a1 + v21) = v23;
  char v24 = (void *)((char *)a1 + v22);
  char v25 = (char *)a2 + v22;
  uint64_t v26 = *(void *)((char *)a2 + v22);
  sub_240BB4850();
  sub_240BB4850();
  if (v26)
  {
    uint64_t v27 = *((void *)v25 + 1);
    *char v24 = v26;
    v24[1] = v27;
    swift_retain();
  }
  else
  {
    *(_OWORD *)char v24 = *(_OWORD *)v25;
  }
  uint64_t v28 = a3[10];
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  if (*v30)
  {
    uint64_t v31 = v30[1];
    *uint64_t v29 = *v30;
    v29[1] = v31;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  }
  uint64_t v32 = a3[11];
  uint64_t v33 = (void *)((char *)a1 + v32);
  uint64_t v34 = (void *)((char *)a2 + v32);
  uint64_t v35 = v34[1];
  *uint64_t v33 = *v34;
  v33[1] = v35;
  sub_240BB4850();
  return a1;
}

void *sub_240A66B20(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_240BB2D40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  void *v14 = *v15;
  v14[1] = v15[1];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v16 = a3[9];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = *(void *)((char *)a1 + v16);
  uint64_t v20 = *(void *)((char *)a2 + v16);
  if (v19)
  {
    if (v20)
    {
      uint64_t v21 = *((void *)v18 + 1);
      *uint64_t v17 = v20;
      v17[1] = v21;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v20)
  {
    uint64_t v22 = *((void *)v18 + 1);
    *uint64_t v17 = v20;
    v17[1] = v22;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
LABEL_8:
  uint64_t v23 = a3[10];
  char v24 = (void *)((char *)a1 + v23);
  char v25 = (char *)a2 + v23;
  uint64_t v26 = *(void *)((char *)a1 + v23);
  uint64_t v27 = *(void *)((char *)a2 + v23);
  if (!v26)
  {
    if (v27)
    {
      uint64_t v29 = *((void *)v25 + 1);
      *char v24 = v27;
      v24[1] = v29;
      swift_retain();
      goto LABEL_15;
    }
LABEL_14:
    *(_OWORD *)char v24 = *(_OWORD *)v25;
    goto LABEL_15;
  }
  if (!v27)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v28 = *((void *)v25 + 1);
  *char v24 = v27;
  v24[1] = v28;
  swift_retain();
  swift_release();
LABEL_15:
  uint64_t v30 = a3[11];
  uint64_t v31 = (void *)((char *)a1 + v30);
  uint64_t v32 = (void *)((char *)a2 + v30);
  *uint64_t v31 = *v32;
  v31[1] = v32[1];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_240A66D0C(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_240BB2D40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  uint64_t v11 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (uint64_t *)((char *)a2 + v11);
  uint64_t v14 = *v13;
  if (*v13)
  {
    uint64_t v15 = v13[1];
    *uint64_t v12 = v14;
    v12[1] = v15;
  }
  else
  {
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  }
  uint64_t v16 = a3[10];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (uint64_t *)((char *)a2 + v16);
  uint64_t v19 = *v18;
  if (*v18)
  {
    uint64_t v20 = v18[1];
    *uint64_t v17 = v19;
    v17[1] = v20;
  }
  else
  {
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  }
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  return a1;
}

void *sub_240A66E10(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_240BB2D40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = *(void *)((char *)a2 + v21);
  if (*(void *)((char *)a1 + v21))
  {
    if (v24)
    {
      uint64_t v25 = *((void *)v23 + 1);
      *uint64_t v22 = v24;
      v22[1] = v25;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v24)
  {
    uint64_t v26 = *((void *)v23 + 1);
    *uint64_t v22 = v24;
    v22[1] = v26;
    goto LABEL_8;
  }
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
LABEL_8:
  uint64_t v27 = a3[10];
  uint64_t v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = *(void *)((char *)a1 + v27);
  uint64_t v31 = *(void *)((char *)a2 + v27);
  if (!v30)
  {
    if (v31)
    {
      uint64_t v33 = *((void *)v29 + 1);
      *uint64_t v28 = v31;
      v28[1] = v33;
      goto LABEL_15;
    }
LABEL_14:
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    goto LABEL_15;
  }
  if (!v31)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v32 = *((void *)v29 + 1);
  *uint64_t v28 = v31;
  v28[1] = v32;
  swift_release();
LABEL_15:
  uint64_t v34 = a3[11];
  uint64_t v35 = (void *)((char *)a1 + v34);
  uint64_t v36 = (void *)((char *)a2 + v34);
  uint64_t v38 = *v36;
  uint64_t v37 = v36[1];
  *uint64_t v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_240A66FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240A66FB4);
}

uint64_t sub_240A66FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_240BB2D40();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_240A67064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240A67078);
}

uint64_t sub_240A67078(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_240BB2D40();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_240A67120()
{
  uint64_t result = sub_240BB2D40();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_240A671D4()
{
  return sub_240A67220(&qword_268C9F1F0, 255, (void (*)(uint64_t))type metadata accessor for BloodPressureManualDataEntryFieldItem);
}

uint64_t sub_240A67220(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A67268@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  unint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240A71104(0, &qword_26AFD7B70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v27 = (char *)v25 - v3;
  sub_240A71104(0, &qword_26AFD7BA8, MEMORY[0x263F43658], v1);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v26 = (char *)v25 - v5;
  uint64_t v6 = sub_240BB3660();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v11 = self;
  id v12 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
  v25[0] = sub_240BB2980();
  uint64_t v14 = v13;

  id v15 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v16 = sub_240BB2980();
  v25[1] = v17;
  v25[2] = v16;

  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F435B8], v6);
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v18 = (id)qword_26AFDECD8;
  uint64_t v19 = v26;
  sub_240BB36C0();
  uint64_t v20 = sub_240BB36D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 0, 1, v20);
  sub_240A57608();
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_240BB97E0;
  uint64_t v22 = v25[0];
  *(void *)(v21 + 32) = v25[0];
  *(void *)(v21 + 40) = v14;
  sub_240BB4850();
  sub_240BB3740();
  MEMORY[0x245606A20](v22, v14);
  swift_bridgeObjectRelease();
  sub_240BB3740();
  uint64_t v23 = sub_240BB2B20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v27, 1, 1, v23);
  return sub_240BB38A0();
}

uint64_t sub_240A676DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  unint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240A71104(0, &qword_26AFD7B70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v27 = (char *)v25 - v3;
  sub_240A71104(0, &qword_26AFD7BA8, MEMORY[0x263F43658], v1);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v26 = (char *)v25 - v5;
  uint64_t v6 = sub_240BB3660();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v11 = self;
  id v12 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
  v25[0] = sub_240BB2980();
  uint64_t v14 = v13;

  id v15 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v16 = sub_240BB2980();
  v25[1] = v17;
  v25[2] = v16;

  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F435B8], v6);
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v18 = (id)qword_26AFDECD8;
  uint64_t v19 = v26;
  sub_240BB36C0();
  uint64_t v20 = sub_240BB36D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 0, 1, v20);
  sub_240A57608();
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_240BB97E0;
  uint64_t v22 = v25[0];
  *(void *)(v21 + 32) = v25[0];
  *(void *)(v21 + 40) = v14;
  sub_240BB4850();
  sub_240BB3740();
  MEMORY[0x245606A20](v22, v14);
  swift_bridgeObjectRelease();
  sub_240BB3740();
  uint64_t v23 = sub_240BB2B20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v27, 1, 1, v23);
  return sub_240BB38A0();
}

uint64_t sub_240A67B50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  unint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240A71104(0, &qword_26AFD7B70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v27 = (char *)v25 - v3;
  sub_240A71104(0, &qword_26AFD7BA8, MEMORY[0x263F43658], v1);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v26 = (char *)v25 - v5;
  uint64_t v6 = sub_240BB3660();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v11 = self;
  id v12 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
  v25[0] = sub_240BB2980();
  uint64_t v14 = v13;

  id v15 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v16 = sub_240BB2980();
  v25[1] = v17;
  v25[2] = v16;

  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F435B8], v6);
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v18 = (id)qword_26AFDECD8;
  uint64_t v19 = v26;
  sub_240BB36C0();
  uint64_t v20 = sub_240BB36D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 0, 1, v20);
  sub_240A57608();
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_240BB97E0;
  uint64_t v22 = v25[0];
  *(void *)(v21 + 32) = v25[0];
  *(void *)(v21 + 40) = v14;
  sub_240BB4850();
  sub_240BB3740();
  MEMORY[0x245606A20](v22, v14);
  swift_bridgeObjectRelease();
  sub_240BB3740();
  uint64_t v23 = sub_240BB2B20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v27, 1, 1, v23);
  return sub_240BB38A0();
}

uint64_t sub_240A67FC4@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240A71104(0, &qword_26AFD7B70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v28 = (char *)v26 - v5;
  sub_240A71104(0, &qword_26AFD7BA8, MEMORY[0x263F43658], v3);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v26 - v7;
  uint64_t v9 = sub_240BB3660();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v27 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v11);
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v14 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v15 = sub_240BB2980();
  uint64_t v17 = v16;

  id v18 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v19 = sub_240BB2980();
  v26[1] = v20;
  v26[2] = v19;

  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v27, *MEMORY[0x263F435B8], v9);
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v21 = (id)qword_26AFDECD8;
  sub_240BB36C0();
  uint64_t v22 = sub_240BB36D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v8, 0, 1, v22);
  sub_240A57608();
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_240BB97E0;
  *(void *)(v23 + 32) = v15;
  *(void *)(v23 + 40) = v17;
  sub_240BB4850();
  sub_240BB3740();
  MEMORY[0x245606A20](v15, v17);
  swift_bridgeObjectRelease();
  sub_240BB3740();
  uint64_t v24 = sub_240BB2B20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v28, 1, 1, v24);
  return sub_240BB38A0();
}

uint64_t sub_240A68470@<X0>(uint64_t a1@<X8>)
{
  uint64_t v39 = a1;
  unint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240A71104(0, &qword_26AFD7B70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v38 = (char *)&v30 - v3;
  sub_240A71104(0, &qword_26AFD7BA8, MEMORY[0x263F43658], v1);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v37 = (char *)&v30 - v5;
  uint64_t v6 = sub_240BB3660();
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v34 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v10 = self;
  id v11 = objc_msgSend(v10, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v12 = sub_240BB2980();
  uint64_t v14 = v13;

  id v15 = objc_msgSend(v10, (SEL)&selRef_setModalPresentationStyle_ + 5, ObjCClassFromMetadata);
  sub_240BB2980();

  sub_240A71104(0, (unint64_t *)&qword_26AFD99D8, (uint64_t (*)(uint64_t))sub_240A4C614, MEMORY[0x263F8E0F8]);
  uint64_t v16 = swift_allocObject();
  long long v30 = xmmword_240BB97E0;
  *(_OWORD *)(v16 + 16) = xmmword_240BB97E0;
  *(void *)(v16 + 56) = MEMORY[0x263F8D310];
  *(void *)(v16 + 64) = sub_240A4C66C();
  uint64_t v35 = v14;
  uint64_t v36 = v12;
  *(void *)(v16 + 32) = v12;
  *(void *)(v16 + 40) = v14;
  sub_240BB4850();
  uint64_t v17 = sub_240BB6DB0();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(v10, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v21 = sub_240BB2980();
  uint64_t v31 = v22;
  uint64_t v32 = v21;

  (*(void (**)(char *, void, uint64_t))(v33 + 104))(v8, *MEMORY[0x263F435C0], v34);
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v23 = (id)qword_26AFDECD8;
  uint64_t v24 = v37;
  sub_240BB36C0();
  uint64_t v25 = sub_240BB36D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 0, 1, v25);
  sub_240A57608();
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = v30;
  *(void *)(v26 + 32) = v17;
  *(void *)(v26 + 40) = v19;
  sub_240BB4850();
  id v27 = objc_msgSend(v10, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_240BB2980();

  uint64_t v28 = sub_240BB2B20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v38, 1, 1, v28);
  return sub_240BB38A0();
}

uint64_t sub_240A68A40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v35 = a1;
  unint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240A71104(0, &qword_26AFD7B70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v34 = (char *)v27 - v3;
  sub_240A71104(0, &qword_26AFD7BA8, MEMORY[0x263F43658], v1);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v32 = (char *)v27 - v5;
  uint64_t v6 = sub_240BB3660();
  uint64_t v29 = *(void *)(v6 - 8);
  uint64_t v30 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240BB3780();
  uint64_t v11 = v10;
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v13 = self;
  id v14 = objc_msgSend(v13, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_240BB2980();

  sub_240A71104(0, (unint64_t *)&qword_26AFD99D8, (uint64_t (*)(uint64_t))sub_240A4C614, MEMORY[0x263F8E0F8]);
  uint64_t v15 = swift_allocObject();
  long long v28 = xmmword_240BB97E0;
  *(_OWORD *)(v15 + 16) = xmmword_240BB97E0;
  *(void *)(v15 + 56) = MEMORY[0x263F8D310];
  *(void *)(v15 + 64) = sub_240A4C66C();
  uint64_t v33 = v9;
  *(void *)(v15 + 32) = v9;
  *(void *)(v15 + 40) = v11;
  uint64_t v31 = v11;
  sub_240BB4850();
  uint64_t v16 = sub_240BB6DB0();
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v13, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_240BB2980();
  v27[1] = v20;

  (*(void (**)(char *, void, uint64_t))(v29 + 104))(v8, *MEMORY[0x263F435C0], v30);
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v21 = (id)qword_26AFDECD8;
  uint64_t v22 = v32;
  sub_240BB36C0();
  uint64_t v23 = sub_240BB36D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 0, 1, v23);
  sub_240A57608();
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = v28;
  *(void *)(v24 + 32) = v16;
  *(void *)(v24 + 40) = v18;
  sub_240BB4850();
  sub_240BB3760();
  uint64_t v25 = sub_240BB2B20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v34, 1, 1, v25);
  return sub_240BB38A0();
}

uint64_t sub_240A68F54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v35 = a1;
  unint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240A71104(0, &qword_26AFD7B98, MEMORY[0x263F45848], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v34 = (char *)v33 - v3;
  sub_240A71104(0, &qword_26AFD7BA8, MEMORY[0x263F43658], v1);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v33 - v5;
  uint64_t v7 = sub_240BB3660();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v12 = self;
  id v13 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v14 = sub_240BB2980();
  v33[4] = v15;
  v33[5] = v14;

  uint64_t v16 = *MEMORY[0x263F435D0];
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v33[3] = v10;
  v17(v10, v16, v7);
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v18 = (id)qword_26AFDECD8;
  sub_240BB36C0();
  uint64_t v19 = sub_240BB36D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v6, 0, 1, v19);
  uint64_t v20 = sub_240BB3710();
  v33[1] = v21;
  void v33[2] = v20;
  sub_240A57608();
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_240BBAE40;
  id v23 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  v33[0] = v6;
  uint64_t v24 = sub_240BB2980();
  uint64_t v26 = v25;

  *(void *)(v22 + 32) = v24;
  *(void *)(v22 + 40) = v26;
  id v27 = objc_msgSend(v12, (SEL)&selRef_setModalPresentationStyle_ + 5, ObjCClassFromMetadata);
  uint64_t v28 = sub_240BB2980();
  uint64_t v30 = v29;

  *(void *)(v22 + 48) = v28;
  *(void *)(v22 + 56) = v30;
  sub_240BB3750();
  uint64_t v31 = sub_240BB33F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v34, 1, 1, v31);
  return sub_240BB38B0();
}

uint64_t sub_240A69408@<X0>(uint64_t a1@<X8>)
{
  uint64_t v35 = a1;
  unint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240A71104(0, &qword_26AFD7B98, MEMORY[0x263F45848], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v34 = (char *)v33 - v3;
  sub_240A71104(0, &qword_26AFD7BA8, MEMORY[0x263F43658], v1);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v33 - v5;
  uint64_t v7 = sub_240BB3660();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v12 = self;
  id v13 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v14 = sub_240BB2980();
  v33[4] = v15;
  v33[5] = v14;

  uint64_t v16 = *MEMORY[0x263F435D0];
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v33[3] = v10;
  v17(v10, v16, v7);
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v18 = (id)qword_26AFDECD8;
  sub_240BB36C0();
  uint64_t v19 = sub_240BB36D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v6, 0, 1, v19);
  uint64_t v20 = sub_240BB3720();
  v33[1] = v21;
  void v33[2] = v20;
  sub_240A57608();
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_240BBAE40;
  id v23 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  v33[0] = v6;
  uint64_t v24 = sub_240BB2980();
  uint64_t v26 = v25;

  *(void *)(v22 + 32) = v24;
  *(void *)(v22 + 40) = v26;
  id v27 = objc_msgSend(v12, (SEL)&selRef_setModalPresentationStyle_ + 5, ObjCClassFromMetadata);
  uint64_t v28 = sub_240BB2980();
  uint64_t v30 = v29;

  *(void *)(v22 + 48) = v28;
  *(void *)(v22 + 56) = v30;
  sub_240BB3750();
  uint64_t v31 = sub_240BB33F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v34, 1, 1, v31);
  return sub_240BB38B0();
}

uint64_t sub_240A698BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v33 = a1;
  unint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240A71104(0, &qword_26AFD7B98, MEMORY[0x263F45848], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v32 = (char *)v31 - v3;
  sub_240A71104(0, &qword_26AFD7BA8, MEMORY[0x263F43658], v1);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v31 - v5;
  uint64_t v7 = sub_240BB3660();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v12 = self;
  id v13 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v14 = sub_240BB2980();
  void v31[2] = v15;
  v31[3] = v14;

  uint64_t v16 = *MEMORY[0x263F435C8];
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v31[1] = v10;
  v17(v10, v16, v7);
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v18 = (id)qword_26AFDECD8;
  sub_240BB36C0();
  uint64_t v19 = sub_240BB36D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v6, 0, 1, v19);
  sub_240A57608();
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_240BBAE40;
  id v21 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  v31[0] = v6;
  uint64_t v22 = sub_240BB2980();
  uint64_t v24 = v23;

  *(void *)(v20 + 32) = v22;
  *(void *)(v20 + 40) = v24;
  id v25 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v26 = sub_240BB2980();
  uint64_t v28 = v27;

  *(void *)(v20 + 48) = v26;
  *(void *)(v20 + 56) = v28;
  sub_240BB3750();
  uint64_t v29 = sub_240BB33F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v32, 1, 1, v29);
  return sub_240BB38B0();
}

uint64_t sub_240A69D60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  unint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240A71104(0, &qword_26AFD7B98, MEMORY[0x263F45848], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v29 = (char *)v28 - v3;
  sub_240A71104(0, &qword_26AFD7BA8, MEMORY[0x263F43658], v1);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v28 - v5;
  uint64_t v7 = sub_240BB3660();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v12 = self;
  id v13 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v14 = sub_240BB2980();
  v28[1] = v15;
  void v28[2] = v14;

  uint64_t v16 = *MEMORY[0x263F435D0];
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v28[3] = v10;
  v17(v10, v16, v7);
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v18 = (id)qword_26AFDECD8;
  sub_240BB36C0();
  uint64_t v19 = sub_240BB36D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v6, 0, 1, v19);
  if (qword_268C9E7D8 != -1) {
    swift_once();
  }
  sub_240BB2980();
  sub_240A57608();
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_240BBAE40;
  id v21 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v22 = sub_240BB2980();
  uint64_t v24 = v23;

  *(void *)(v20 + 32) = v22;
  *(void *)(v20 + 40) = v24;
  *(void *)(v20 + 48) = sub_240BB2980();
  *(void *)(v20 + 56) = v25;
  uint64_t v26 = sub_240BB33F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v29, 1, 1, v26);
  return sub_240BB38B0();
}

uint64_t sub_240A6A23C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  unint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240A71104(0, &qword_26AFD7B98, MEMORY[0x263F45848], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v29 = (char *)v28 - v3;
  sub_240A71104(0, &qword_26AFD7BA8, MEMORY[0x263F43658], v1);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v28 - v5;
  uint64_t v7 = sub_240BB3660();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v12 = self;
  id v13 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v14 = sub_240BB2980();
  v28[1] = v15;
  void v28[2] = v14;

  uint64_t v16 = *MEMORY[0x263F435D0];
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v28[3] = v10;
  v17(v10, v16, v7);
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v18 = (id)qword_26AFDECD8;
  sub_240BB36C0();
  uint64_t v19 = sub_240BB36D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v6, 0, 1, v19);
  if (qword_268C9E7D8 != -1) {
    swift_once();
  }
  sub_240BB2980();
  sub_240A57608();
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_240BBAE40;
  id v21 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v22 = sub_240BB2980();
  uint64_t v24 = v23;

  *(void *)(v20 + 32) = v22;
  *(void *)(v20 + 40) = v24;
  *(void *)(v20 + 48) = sub_240BB2980();
  *(void *)(v20 + 56) = v25;
  uint64_t v26 = sub_240BB33F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v29, 1, 1, v26);
  return sub_240BB38B0();
}

uint64_t sub_240A6A718@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  unint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240A71104(0, &qword_26AFD7B98, MEMORY[0x263F45848], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v29 = (char *)v28 - v3;
  sub_240A71104(0, &qword_26AFD7BA8, MEMORY[0x263F43658], v1);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v28 - v5;
  uint64_t v7 = sub_240BB3660();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v12 = self;
  id v13 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v14 = sub_240BB2980();
  void v28[2] = v15;
  v28[3] = v14;

  uint64_t v16 = *MEMORY[0x263F435C8];
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v28[1] = v10;
  v17(v10, v16, v7);
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v18 = (id)qword_26AFDECD8;
  sub_240BB36C0();
  uint64_t v19 = sub_240BB36D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v6, 0, 1, v19);
  if (qword_268C9E7D8 != -1) {
    swift_once();
  }
  sub_240BB2980();
  sub_240A57608();
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_240BBAE40;
  id v21 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v22 = sub_240BB2980();
  uint64_t v24 = v23;

  *(void *)(v20 + 32) = v22;
  *(void *)(v20 + 40) = v24;
  *(void *)(v20 + 48) = sub_240BB2980();
  *(void *)(v20 + 56) = v25;
  uint64_t v26 = sub_240BB33F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v29, 1, 1, v26);
  return sub_240BB38B0();
}

void sub_240A6AC00(void *a1@<X0>, uint64_t (*a2)(uint64_t)@<X2>, void (*a3)(uint64_t)@<X4>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_240BB5990();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v149 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2(v10) & 1) == 0)
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v8, (uint64_t)qword_26AFDEC70);
    uint64_t v31 = sub_240BB5970();
    os_log_type_t v32 = sub_240BB71A0();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v154 = v34;
      *(_DWORD *)uint64_t v33 = 136446210;
      uint64_t v153 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v154);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v31, v32, "[%{public}s:FeatureStatusConfiguration] Cardio fitness not visible, hiding", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v34, -1, -1);
      MEMORY[0x24560B930](v33, -1, -1);
    }

    uint64_t v35 = sub_240BB38D0();
    uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
    uint64_t v37 = a4;
    goto LABEL_34;
  }
  id v13 = objc_msgSend(a1, sel_highestPriorityUnsatisfiedRequirement);
  if (!v13)
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v8, (uint64_t)qword_26AFDEC70);
    uint64_t v38 = sub_240BB5970();
    os_log_type_t v39 = sub_240BB71A0();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      uint64_t v154 = v41;
      *(_DWORD *)uint64_t v40 = 136446210;
      uint64_t v153 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v154);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v38, v39, "[%{public}s:FeatureStatusConfiguration] Onboarded, available, and enabled", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v41, -1, -1);
      MEMORY[0x24560B930](v40, -1, -1);
    }

    id v42 = (void *)sub_240BB56F0();
    unsigned int v43 = objc_msgSend(v42, sel_areAllRequirementsSatisfied);

    if (v43) {
      sub_240A698BC(a4);
    }
    else {
      sub_240A6A718(a4);
    }
    uint64_t v51 = sub_240BB38D0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(a4, 0, 1, v51);
    return;
  }
  uint64_t v14 = v13;
  uint64_t v151 = a4;
  uint64_t v15 = sub_240BB6DE0();
  uint64_t v17 = v16;
  uint64_t v152 = v14;
  if (v15 == sub_240BB6DE0() && v17 == v18)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_28;
  }
  char v20 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v20)
  {
LABEL_28:
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v8, (uint64_t)qword_26AFDEC70);
    uint64_t v44 = sub_240BB5970();
    os_log_type_t v45 = sub_240BB71A0();
    BOOL v46 = os_log_type_enabled(v44, v45);
    uint64_t v47 = v151;
    if (!v46) {
      goto LABEL_33;
    }
    uint64_t v48 = (uint8_t *)swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    uint64_t v154 = v49;
    *(_DWORD *)uint64_t v48 = 136446210;
    uint64_t v153 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v154);
    sub_240BB75F0();
    uint64_t v50 = "[%{public}s:FeatureStatusConfiguration] Health app hidden, hiding";
    goto LABEL_32;
  }
  uint64_t v21 = sub_240BB6DE0();
  uint64_t v23 = v22;
  if (v21 == sub_240BB6DE0() && v23 == v24)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_38;
  }
  char v26 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v26)
  {
LABEL_38:
    uint64_t v47 = v151;
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v8, (uint64_t)qword_26AFDEC70);
    uint64_t v44 = sub_240BB5970();
    os_log_type_t v45 = sub_240BB71A0();
    if (!os_log_type_enabled(v44, v45)) {
      goto LABEL_33;
    }
    uint64_t v48 = (uint8_t *)swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    uint64_t v154 = v49;
    *(_DWORD *)uint64_t v48 = 136446210;
    uint64_t v153 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v154);
    sub_240BB75F0();
    uint64_t v50 = "[%{public}s:FeatureStatusConfiguration] Not background delivered, meaning we do not have a supported device yet";
LABEL_32:
    _os_log_impl(&dword_240A1B000, v44, v45, v50, v48, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v49, -1, -1);
    MEMORY[0x24560B930](v48, -1, -1);
LABEL_33:

    uint64_t v35 = sub_240BB38D0();
    uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
    uint64_t v37 = v47;
LABEL_34:
    v36(v37, 1, 1, v35);
    return;
  }
  uint64_t v27 = sub_240BB6DE0();
  uint64_t v29 = v28;
  if (v27 == sub_240BB6DE0() && v29 == v30)
  {
    swift_bridgeObjectRelease_n();
LABEL_43:
    uint64_t v53 = v151;
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v8, (uint64_t)qword_26AFDEC70);
    uint64_t v54 = sub_240BB5970();
    os_log_type_t v55 = sub_240BB71A0();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = (uint8_t *)swift_slowAlloc();
      uint64_t v57 = swift_slowAlloc();
      uint64_t v154 = v57;
      *(_DWORD *)uint64_t v56 = 136446210;
      uint64_t v153 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v154);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v54, v55, "[%{public}s:FeatureStatusConfiguration] Heart rate app not installed, treating as unavailable", v56, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v57, -1, -1);
      MEMORY[0x24560B930](v56, -1, -1);
    }

    uint64_t v58 = v152;
    sub_240A67268(v53);
LABEL_48:

LABEL_49:
    uint64_t v59 = sub_240BB38D0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v53, 0, 1, v59);
    return;
  }
  char v52 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v52) {
    goto LABEL_43;
  }
  uint64_t v60 = sub_240BB6DE0();
  uint64_t v62 = v61;
  if (v60 == sub_240BB6DE0() && v62 == v63)
  {
    swift_bridgeObjectRelease_n();
LABEL_54:
    uint64_t v53 = v151;
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v8, (uint64_t)qword_26AFDEC70);
    uint64_t v65 = sub_240BB5970();
    os_log_type_t v66 = sub_240BB71A0();
    if (os_log_type_enabled(v65, v66))
    {
      char v67 = (uint8_t *)swift_slowAlloc();
      uint64_t v68 = swift_slowAlloc();
      uint64_t v154 = v68;
      *(_DWORD *)char v67 = 136446210;
      uint64_t v153 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v154);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v65, v66, "[%{public}s:FeatureStatusConfiguration] Age gated, treating as unavailable", v67, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v68, -1, -1);
      MEMORY[0x24560B930](v67, -1, -1);
    }

    uint64_t v58 = v152;
    sub_240A676DC(v53);
    goto LABEL_48;
  }
  char v64 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v64) {
    goto LABEL_54;
  }
  uint64_t v69 = sub_240BB6DE0();
  uint64_t v71 = v70;
  if (v69 == sub_240BB6DE0() && v71 == v72)
  {
    swift_bridgeObjectRelease_n();
LABEL_63:
    uint64_t v53 = v151;
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v8, (uint64_t)qword_26AFDEC70);
    uint64_t v74 = sub_240BB5970();
    os_log_type_t v75 = sub_240BB71A0();
    if (os_log_type_enabled(v74, v75))
    {
      uint64_t v76 = (uint8_t *)swift_slowAlloc();
      uint64_t v77 = swift_slowAlloc();
      uint64_t v154 = v77;
      *(_DWORD *)uint64_t v76 = 136446210;
      uint64_t v153 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v154);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v74, v75, "[%{public}s:FeatureStatusConfiguration] Country not supported on local device, treating as unavailable", v76, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v77, -1, -1);
      MEMORY[0x24560B930](v76, -1, -1);
    }

    uint64_t v58 = v152;
    sub_240A67B50(v53);
    goto LABEL_48;
  }
  char v73 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v73) {
    goto LABEL_63;
  }
  uint64_t v78 = sub_240BB6DE0();
  uint64_t v80 = v79;
  if (v78 == sub_240BB6DE0() && v80 == v81)
  {
    swift_bridgeObjectRelease_n();
LABEL_72:
    uint64_t v53 = v151;
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v8, (uint64_t)qword_26AFDEC70);
    uint64_t v83 = sub_240BB5970();
    os_log_type_t v84 = sub_240BB71A0();
    if (os_log_type_enabled(v83, v84))
    {
      uint64_t v85 = (uint8_t *)swift_slowAlloc();
      uint64_t v86 = swift_slowAlloc();
      uint64_t v154 = v86;
      *(_DWORD *)uint64_t v85 = 136446210;
      uint64_t v153 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v154);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v83, v84, "[%{public}s:FeatureStatusConfiguration] Country not supported on active remote device, treating as unavailable", v85, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v86, -1, -1);
      MEMORY[0x24560B930](v85, -1, -1);
    }

    sub_240A67B50(v53);
    goto LABEL_49;
  }
  char v82 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v82) {
    goto LABEL_72;
  }
  uint64_t v87 = sub_240BB6DE0();
  uint64_t v89 = v88;
  if (v87 == sub_240BB6DE0() && v89 == v90)
  {
    swift_bridgeObjectRelease_n();
LABEL_81:
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v8, (uint64_t)qword_26AFDEC70);
    uint64_t v92 = sub_240BB5970();
    os_log_type_t v93 = sub_240BB71A0();
    if (os_log_type_enabled(v92, v93))
    {
      uint64_t v94 = (uint8_t *)swift_slowAlloc();
      uint64_t v95 = swift_slowAlloc();
      uint64_t v154 = v95;
      *(_DWORD *)uint64_t v94 = 136446210;
      uint64_t v153 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v154);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v92, v93, "[%{public}s:FeatureStatusConfiguration] Capability not supported on active watch, treating as unavailable", v94, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v95, -1, -1);
      MEMORY[0x24560B930](v94, -1, -1);
    }

    uint64_t v96 = v151;
    sub_240A67FC4(a3, v151);
LABEL_86:

    uint64_t v97 = sub_240BB38D0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v97 - 8) + 56))(v96, 0, 1, v97);
    return;
  }
  char v91 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v91) {
    goto LABEL_81;
  }
  uint64_t v98 = sub_240BB6DE0();
  uint64_t v100 = v99;
  if (v98 == sub_240BB6DE0() && v100 == v101)
  {
    swift_bridgeObjectRelease_n();
LABEL_91:
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v8, (uint64_t)qword_26AFDEC70);
    uint64_t v103 = sub_240BB5970();
    os_log_type_t v104 = sub_240BB71A0();
    if (os_log_type_enabled(v103, v104))
    {
      uint64_t v105 = (uint8_t *)swift_slowAlloc();
      uint64_t v106 = swift_slowAlloc();
      uint64_t v154 = v106;
      *(_DWORD *)uint64_t v105 = 136446210;
      uint64_t v153 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v154);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v103, v104, "[%{public}s:FeatureStatusConfiguration] Age is not present, treating as unavailable", v105, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v106, -1, -1);
      MEMORY[0x24560B930](v105, -1, -1);
    }

    uint64_t v96 = v151;
    sub_240A68470(v151);
    goto LABEL_86;
  }
  char v102 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v102) {
    goto LABEL_91;
  }
  uint64_t v107 = sub_240BB6DE0();
  uint64_t v109 = v108;
  if (v107 == sub_240BB6DE0() && v109 == v110)
  {
    swift_bridgeObjectRelease_n();
LABEL_100:
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v8, (uint64_t)qword_26AFDEC70);
    uint64_t v112 = sub_240BB5970();
    os_log_type_t v113 = sub_240BB71A0();
    if (os_log_type_enabled(v112, v113))
    {
      uint64_t v114 = (uint8_t *)swift_slowAlloc();
      uint64_t v115 = swift_slowAlloc();
      uint64_t v154 = v115;
      *(_DWORD *)uint64_t v114 = 136446210;
      uint64_t v153 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v154);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v112, v113, "[%{public}s:FeatureStatusConfiguration] Heart rate is not enabled, treating as unavailable", v114, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v115, -1, -1);
      MEMORY[0x24560B930](v114, -1, -1);
    }

    uint64_t v96 = v151;
    sub_240A68A40(v151);
    goto LABEL_86;
  }
  char v111 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v111) {
    goto LABEL_100;
  }
  uint64_t v116 = sub_240BB6DE0();
  uint64_t v118 = v117;
  if (v116 == sub_240BB6DE0() && v118 == v119)
  {
    swift_bridgeObjectRelease_n();
LABEL_109:
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v8, (uint64_t)qword_26AFDEC70);
    uint64_t v121 = sub_240BB5970();
    os_log_type_t v122 = sub_240BB71A0();
    if (os_log_type_enabled(v121, v122))
    {
      unint64_t v123 = (uint8_t *)swift_slowAlloc();
      uint64_t v124 = swift_slowAlloc();
      uint64_t v154 = v124;
      *(_DWORD *)unint64_t v123 = 136446210;
      uint64_t v153 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v154);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v121, v122, "[%{public}s:FeatureStatusConfiguration] Notification details not entered, treating as not onboarded", v123, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v124, -1, -1);
      MEMORY[0x24560B930](v123, -1, -1);
    }

    uint64_t v125 = (void *)sub_240BB56F0();
    unsigned int v126 = objc_msgSend(v125, sel_areAllRequirementsSatisfied);

    uint64_t v96 = v151;
    if (v126) {
      sub_240A68F54(v151);
    }
    else {
      sub_240A6A23C(v151);
    }
    goto LABEL_86;
  }
  char v120 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v120) {
    goto LABEL_109;
  }
  uint64_t v127 = sub_240BB6DE0();
  uint64_t v129 = v128;
  if (v127 == sub_240BB6DE0() && v129 == v130)
  {
    swift_bridgeObjectRelease_n();
LABEL_120:
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v8, (uint64_t)qword_26AFDEC70);
    uint64_t v132 = sub_240BB5970();
    os_log_type_t v133 = sub_240BB71A0();
    if (os_log_type_enabled(v132, v133))
    {
      v134 = (uint8_t *)swift_slowAlloc();
      uint64_t v135 = swift_slowAlloc();
      uint64_t v154 = v135;
      *(_DWORD *)v134 = 136446210;
      uint64_t v153 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v154);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v132, v133, "[%{public}s:FeatureStatusConfiguration] Onboarded and available but feature disabled", v134, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v135, -1, -1);
      MEMORY[0x24560B930](v134, -1, -1);
    }

    uint64_t v136 = (void *)sub_240BB56F0();
    unsigned int v137 = objc_msgSend(v136, sel_areAllRequirementsSatisfied);

    uint64_t v96 = v151;
    if (v137) {
      sub_240A69408(v151);
    }
    else {
      sub_240A69D60(v151);
    }
    goto LABEL_86;
  }
  char v131 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v131) {
    goto LABEL_120;
  }

  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v138 = sub_240A395FC(v8, (uint64_t)qword_26AFDEC70);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v138, v8);
  id v139 = a1;
  uint64_t v140 = sub_240BB5970();
  int v150 = sub_240BB7190();
  uint64_t v152 = v140;
  if (!os_log_type_enabled(v140, (os_log_type_t)v150))
  {

    goto LABEL_133;
  }
  uint64_t v141 = swift_slowAlloc();
  uint64_t v149 = swift_slowAlloc();
  uint64_t v154 = v149;
  *(_DWORD *)uint64_t v141 = 136446466;
  uint64_t v153 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v154);
  sub_240BB75F0();
  *(_WORD *)(v141 + 12) = 2082;
  id v142 = objc_msgSend(v139, sel_highestPriorityUnsatisfiedRequirement);
  if (v142)
  {
    v143 = v142;
    uint64_t v144 = sub_240BB6DE0();
    unint64_t v146 = v145;

    uint64_t v153 = sub_240A38940(v144, v146, &v154);
    sub_240BB75F0();

    swift_bridgeObjectRelease();
    v147 = v152;
    _os_log_impl(&dword_240A1B000, v152, (os_log_type_t)v150, "[%{public}s:FeatureStatusConfiguration] Unhandled, unsatisfied requirement encountered: %{public}s", (uint8_t *)v141, 0x16u);
    uint64_t v148 = v149;
    swift_arrayDestroy();
    MEMORY[0x24560B930](v148, -1, -1);
    MEMORY[0x24560B930](v141, -1, -1);

LABEL_133:
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    uint64_t v35 = sub_240BB38D0();
    uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
    uint64_t v37 = v151;
    goto LABEL_34;
  }

  __break(1u);
}

void sub_240A6C69C(void *a1@<X0>, uint64_t (*a2)(uint64_t)@<X2>, void (*a3)(uint64_t)@<X4>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_240BB5990();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v119 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2(v10) & 1) == 0)
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v8, (uint64_t)qword_26AFDEC70);
    uint64_t v31 = sub_240BB5970();
    os_log_type_t v32 = sub_240BB71A0();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v124 = v34;
      *(_DWORD *)uint64_t v33 = 136446210;
      uint64_t v123 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v124);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v31, v32, "[%{public}s:FeatureStatusConfiguration] Cardio fitness not visible, hiding", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v34, -1, -1);
      MEMORY[0x24560B930](v33, -1, -1);
    }

    uint64_t v35 = sub_240BB38D0();
    uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
    uint64_t v37 = a4;
    goto LABEL_34;
  }
  id v13 = objc_msgSend(a1, sel_highestPriorityUnsatisfiedRequirement);
  if (!v13)
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v8, (uint64_t)qword_26AFDEC70);
    uint64_t v38 = sub_240BB5970();
    os_log_type_t v39 = sub_240BB71A0();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      uint64_t v124 = v41;
      *(_DWORD *)uint64_t v40 = 136446210;
      uint64_t v123 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v124);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v38, v39, "[%{public}s:FeatureStatusConfiguration] Background delivered and available but onboarding not acknowledged, showing onboarding promotion", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v41, -1, -1);
      MEMORY[0x24560B930](v40, -1, -1);
    }

    id v42 = (void *)sub_240BB56F0();
    unsigned int v43 = objc_msgSend(v42, sel_areAllRequirementsSatisfied);

    if (v43) {
      sub_240A68F54(a4);
    }
    else {
      sub_240A6A23C(a4);
    }
    uint64_t v51 = sub_240BB38D0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(a4, 0, 1, v51);
    return;
  }
  uint64_t v14 = v13;
  uint64_t v122 = a4;
  uint64_t v15 = sub_240BB6DE0();
  uint64_t v17 = v16;
  if (v15 == sub_240BB6DE0() && v17 == v18)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_28;
  }
  char v20 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v20)
  {
LABEL_28:
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v8, (uint64_t)qword_26AFDEC70);
    uint64_t v44 = sub_240BB5970();
    os_log_type_t v45 = sub_240BB71A0();
    BOOL v46 = os_log_type_enabled(v44, v45);
    uint64_t v47 = v122;
    if (!v46) {
      goto LABEL_33;
    }
    uint64_t v48 = (uint8_t *)swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    uint64_t v124 = v49;
    *(_DWORD *)uint64_t v48 = 136446210;
    uint64_t v123 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v124);
    sub_240BB75F0();
    uint64_t v50 = "[%{public}s:FeatureStatusConfiguration] Health app hidden, hiding";
    goto LABEL_32;
  }
  uint64_t v21 = sub_240BB6DE0();
  uint64_t v23 = v22;
  if (v21 == sub_240BB6DE0() && v23 == v24)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_38;
  }
  char v26 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v26)
  {
LABEL_38:
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v8, (uint64_t)qword_26AFDEC70);
    uint64_t v44 = sub_240BB5970();
    os_log_type_t v45 = sub_240BB71A0();
    BOOL v52 = os_log_type_enabled(v44, v45);
    uint64_t v47 = v122;
    if (!v52) {
      goto LABEL_33;
    }
    uint64_t v48 = (uint8_t *)swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    uint64_t v124 = v49;
    *(_DWORD *)uint64_t v48 = 136446210;
    uint64_t v123 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v124);
    sub_240BB75F0();
    uint64_t v50 = "[%{public}s:FeatureStatusConfiguration] Not background delivered, meaning we do not have a supported device yet";
LABEL_32:
    _os_log_impl(&dword_240A1B000, v44, v45, v50, v48, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v49, -1, -1);
    MEMORY[0x24560B930](v48, -1, -1);
LABEL_33:

    uint64_t v35 = sub_240BB38D0();
    uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
    uint64_t v37 = v47;
LABEL_34:
    v36(v37, 1, 1, v35);
    return;
  }
  uint64_t v27 = sub_240BB6DE0();
  uint64_t v29 = v28;
  if (v27 == sub_240BB6DE0() && v29 == v30)
  {
    swift_bridgeObjectRelease_n();
LABEL_43:
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v8, (uint64_t)qword_26AFDEC70);
    uint64_t v54 = sub_240BB5970();
    os_log_type_t v55 = sub_240BB71A0();
    BOOL v56 = os_log_type_enabled(v54, v55);
    uint64_t v57 = v122;
    if (v56)
    {
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      uint64_t v124 = v59;
      *(_DWORD *)uint64_t v58 = 136446210;
      uint64_t v123 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v124);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v54, v55, "[%{public}s:FeatureStatusConfiguration] Heart rate app not installed, treating as unavailable", v58, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v59, -1, -1);
      MEMORY[0x24560B930](v58, -1, -1);
    }

    sub_240A67268(v57);
    goto LABEL_48;
  }
  char v53 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v53) {
    goto LABEL_43;
  }
  uint64_t v61 = sub_240BB6DE0();
  uint64_t v63 = v62;
  if (v61 == sub_240BB6DE0() && v63 == v64)
  {
    swift_bridgeObjectRelease_n();
LABEL_53:
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v8, (uint64_t)qword_26AFDEC70);
    os_log_type_t v66 = sub_240BB5970();
    os_log_type_t v67 = sub_240BB71A0();
    BOOL v68 = os_log_type_enabled(v66, v67);
    uint64_t v57 = v122;
    if (v68)
    {
      uint64_t v69 = (uint8_t *)swift_slowAlloc();
      uint64_t v70 = swift_slowAlloc();
      uint64_t v124 = v70;
      *(_DWORD *)uint64_t v69 = 136446210;
      uint64_t v123 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v124);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v66, v67, "[%{public}s:FeatureStatusConfiguration] Age gated, treating as unavailable", v69, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v70, -1, -1);
      MEMORY[0x24560B930](v69, -1, -1);
    }

    sub_240A676DC(v57);
    goto LABEL_48;
  }
  char v65 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v65) {
    goto LABEL_53;
  }
  uint64_t v71 = sub_240BB6DE0();
  uint64_t v73 = v72;
  if (v71 == sub_240BB6DE0() && v73 == v74)
  {
    swift_bridgeObjectRelease_n();
LABEL_62:
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v8, (uint64_t)qword_26AFDEC70);
    uint64_t v76 = sub_240BB5970();
    os_log_type_t v77 = sub_240BB71A0();
    BOOL v78 = os_log_type_enabled(v76, v77);
    uint64_t v57 = v122;
    if (!v78) {
      goto LABEL_67;
    }
    uint64_t v79 = (uint8_t *)swift_slowAlloc();
    uint64_t v80 = swift_slowAlloc();
    uint64_t v124 = v80;
    *(_DWORD *)uint64_t v79 = 136446210;
    uint64_t v123 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v124);
    sub_240BB75F0();
    uint64_t v81 = "[%{public}s:FeatureStatusConfiguration] Country not supported on local device, treating as unavailable";
LABEL_66:
    _os_log_impl(&dword_240A1B000, v76, v77, v81, v79, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v80, -1, -1);
    MEMORY[0x24560B930](v79, -1, -1);
LABEL_67:

    sub_240A67B50(v57);
LABEL_48:

    uint64_t v60 = sub_240BB38D0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v57, 0, 1, v60);
    return;
  }
  char v75 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v75) {
    goto LABEL_62;
  }
  uint64_t v82 = sub_240BB6DE0();
  uint64_t v84 = v83;
  if (v82 == sub_240BB6DE0() && v84 == v85)
  {
    swift_bridgeObjectRelease_n();
LABEL_72:
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v8, (uint64_t)qword_26AFDEC70);
    uint64_t v76 = sub_240BB5970();
    os_log_type_t v77 = sub_240BB71A0();
    BOOL v87 = os_log_type_enabled(v76, v77);
    uint64_t v57 = v122;
    if (!v87) {
      goto LABEL_67;
    }
    uint64_t v79 = (uint8_t *)swift_slowAlloc();
    uint64_t v80 = swift_slowAlloc();
    uint64_t v124 = v80;
    *(_DWORD *)uint64_t v79 = 136446210;
    uint64_t v123 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v124);
    sub_240BB75F0();
    uint64_t v81 = "[%{public}s:FeatureStatusConfiguration] Country not supported on active remote device, treating as unavailable";
    goto LABEL_66;
  }
  char v86 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v86) {
    goto LABEL_72;
  }
  uint64_t v88 = sub_240BB6DE0();
  uint64_t v90 = v89;
  if (v88 == sub_240BB6DE0() && v90 == v91)
  {
    swift_bridgeObjectRelease_n();
LABEL_80:
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v8, (uint64_t)qword_26AFDEC70);
    os_log_type_t v93 = sub_240BB5970();
    os_log_type_t v94 = sub_240BB71A0();
    if (os_log_type_enabled(v93, v94))
    {
      uint64_t v95 = (uint8_t *)swift_slowAlloc();
      uint64_t v96 = swift_slowAlloc();
      uint64_t v124 = v96;
      *(_DWORD *)uint64_t v95 = 136446210;
      uint64_t v123 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v124);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v93, v94, "[%{public}s:FeatureStatusConfiguration] Capability not supported on active watch, treating as unavailable", v95, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v96, -1, -1);
      MEMORY[0x24560B930](v95, -1, -1);
    }

    uint64_t v97 = v122;
    sub_240A67FC4(a3, v122);
LABEL_85:

    uint64_t v98 = sub_240BB38D0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v98 - 8) + 56))(v97, 0, 1, v98);
    return;
  }
  char v92 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v92) {
    goto LABEL_80;
  }
  uint64_t v99 = sub_240BB6DE0();
  uint64_t v101 = v100;
  if (v99 == sub_240BB6DE0() && v101 == v102)
  {
    swift_bridgeObjectRelease_n();
LABEL_90:
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v8, (uint64_t)qword_26AFDEC70);
    os_log_type_t v104 = sub_240BB5970();
    os_log_type_t v105 = sub_240BB71A0();
    if (os_log_type_enabled(v104, v105))
    {
      uint64_t v106 = (uint8_t *)swift_slowAlloc();
      uint64_t v107 = swift_slowAlloc();
      uint64_t v124 = v107;
      *(_DWORD *)uint64_t v106 = 136446210;
      uint64_t v123 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v124);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v104, v105, "[%{public}s:FeatureStatusConfiguration] Heart rate is not enabled, treating as unavailable", v106, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v107, -1, -1);
      MEMORY[0x24560B930](v106, -1, -1);
    }

    uint64_t v97 = v122;
    sub_240A68A40(v122);
    goto LABEL_85;
  }
  char v103 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v103) {
    goto LABEL_90;
  }

  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v108 = sub_240A395FC(v8, (uint64_t)qword_26AFDEC70);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v108, v8);
  id v109 = a1;
  uint64_t v110 = sub_240BB5970();
  int v120 = sub_240BB7190();
  uint64_t v121 = v110;
  if (!os_log_type_enabled(v110, (os_log_type_t)v120))
  {

    goto LABEL_101;
  }
  uint64_t v111 = swift_slowAlloc();
  uint64_t v119 = swift_slowAlloc();
  uint64_t v124 = v119;
  *(_DWORD *)uint64_t v111 = 136446466;
  uint64_t v123 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v124);
  sub_240BB75F0();
  *(_WORD *)(v111 + 12) = 2082;
  id v112 = objc_msgSend(v109, sel_highestPriorityUnsatisfiedRequirement);
  if (v112)
  {
    os_log_type_t v113 = v112;
    uint64_t v114 = sub_240BB6DE0();
    unint64_t v116 = v115;

    uint64_t v123 = sub_240A38940(v114, v116, &v124);
    sub_240BB75F0();

    swift_bridgeObjectRelease();
    uint64_t v117 = v121;
    _os_log_impl(&dword_240A1B000, v121, (os_log_type_t)v120, "[%{public}s:FeatureStatusConfiguration] Unhandled, unsatisfied requirement encountered: %{public}s", (uint8_t *)v111, 0x16u);
    uint64_t v118 = v119;
    swift_arrayDestroy();
    MEMORY[0x24560B930](v118, -1, -1);
    MEMORY[0x24560B930](v111, -1, -1);

LABEL_101:
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    uint64_t v35 = sub_240BB38D0();
    uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
    uint64_t v37 = v122;
    goto LABEL_34;
  }

  __break(1u);
}

void sub_240A6DAF8(void *a1@<X0>, uint64_t a2@<X2>, char *a3@<X8>)
{
  uint64_t v6 = sub_240BB5990();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v120 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_240BB3700() & 1) == 0)
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v6, (uint64_t)qword_26AFDEC70);
    uint64_t v22 = sub_240BB5970();
    os_log_type_t v23 = sub_240BB71A0();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v125 = v25;
      *(_DWORD *)uint64_t v24 = 136446210;
      uint64_t v124 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v125);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v22, v23, "[%{public}s] Cardio fitness not visible, hiding", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v25, -1, -1);
      MEMORY[0x24560B930](v24, -1, -1);
    }
    goto LABEL_27;
  }
  uint64_t v10 = objc_msgSend(a1, sel_highestPriorityUnsatisfiedRequirement);
  if (!v10)
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v6, (uint64_t)qword_26AFDEC70);
    char v26 = sub_240BB5970();
    os_log_type_t v27 = sub_240BB71A0();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v125 = v29;
      *(_DWORD *)uint64_t v28 = 136446210;
      uint64_t v124 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v125);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v26, v27, "[%{public}s:ActionHandler] Onboarded, available, and enabled, push feature settings", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v29, -1, -1);
      MEMORY[0x24560B930](v28, -1, -1);
    }

    sub_240A6F4C4(a2, a3);
LABEL_20:
    uint64_t v30 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
LABEL_36:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(a3, 0, 1, v30);
    uint64_t v43 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData(0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(a3, 0, 1, v43);
    return;
  }
  uint64_t v11 = v10;
  uint64_t v12 = sub_240BB6DE0();
  uint64_t v14 = v13;
  uint64_t v123 = v11;
  if (v12 == sub_240BB6DE0() && v14 == v15)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_22;
  }
  char v17 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v17)
  {
LABEL_22:
    uint64_t v31 = v123;
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v6, (uint64_t)qword_26AFDEC70);
    uint64_t v22 = sub_240BB5970();
    os_log_type_t v32 = sub_240BB71A0();
    if (os_log_type_enabled(v22, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v125 = v34;
      *(_DWORD *)uint64_t v33 = 136446210;
      uint64_t v124 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v125);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v22, v32, "[%{public}s:ActionHandler] Health app hidden, no action", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v34, -1, -1);
      MEMORY[0x24560B930](v33, -1, -1);
    }

LABEL_27:
LABEL_28:
    uint64_t v35 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(a3, 1, 1, v35);
    return;
  }
  uint64_t v18 = sub_240BB6DE0();
  uint64_t v20 = v19;
  if (v18 == sub_240BB6DE0() && v20 == v21)
  {
    swift_bridgeObjectRelease_n();
LABEL_30:
    uint64_t v37 = v123;
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v6, (uint64_t)qword_26AFDEC70);
    uint64_t v38 = sub_240BB5970();
    os_log_type_t v39 = sub_240BB71A0();
    if (!os_log_type_enabled(v38, v39)) {
      goto LABEL_35;
    }
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    uint64_t v125 = v41;
    *(_DWORD *)uint64_t v40 = 136446210;
    uint64_t v124 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v125);
    sub_240BB75F0();
    id v42 = "[%{public}s:ActionHandler] Heart rate app not installed, open knowledge base article";
LABEL_34:
    _os_log_impl(&dword_240A1B000, v38, v39, v42, v40, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v41, -1, -1);
    MEMORY[0x24560B930](v40, -1, -1);
LABEL_35:

    uint64_t v30 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
    goto LABEL_36;
  }
  char v36 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v36) {
    goto LABEL_30;
  }
  uint64_t v44 = sub_240BB6DE0();
  uint64_t v46 = v45;
  if (v44 == sub_240BB6DE0() && v46 == v47)
  {
    swift_bridgeObjectRelease_n();
LABEL_41:
    uint64_t v37 = v123;
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v6, (uint64_t)qword_26AFDEC70);
    uint64_t v38 = sub_240BB5970();
    os_log_type_t v39 = sub_240BB71A0();
    if (!os_log_type_enabled(v38, v39)) {
      goto LABEL_35;
    }
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    uint64_t v125 = v41;
    *(_DWORD *)uint64_t v40 = 136446210;
    uint64_t v124 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v125);
    sub_240BB75F0();
    id v42 = "[%{public}s:ActionHandler] Age gated, open knowledge base article";
    goto LABEL_34;
  }
  char v48 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v48) {
    goto LABEL_41;
  }
  uint64_t v49 = sub_240BB6DE0();
  uint64_t v51 = v50;
  if (v49 == sub_240BB6DE0() && v51 == v52)
  {
    swift_bridgeObjectRelease_n();
LABEL_49:
    uint64_t v37 = v123;
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v6, (uint64_t)qword_26AFDEC70);
    uint64_t v38 = sub_240BB5970();
    os_log_type_t v39 = sub_240BB71A0();
    if (!os_log_type_enabled(v38, v39)) {
      goto LABEL_35;
    }
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    uint64_t v125 = v41;
    *(_DWORD *)uint64_t v40 = 136446210;
    uint64_t v124 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v125);
    sub_240BB75F0();
    id v42 = "[%{public}s:ActionHandler] Country not supported on local device, open knowledge base article";
    goto LABEL_34;
  }
  char v53 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v53) {
    goto LABEL_49;
  }
  uint64_t v54 = sub_240BB6DE0();
  uint64_t v56 = v55;
  if (v54 == sub_240BB6DE0() && v56 == v57)
  {
    swift_bridgeObjectRelease_n();
LABEL_57:
    uint64_t v37 = v123;
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v6, (uint64_t)qword_26AFDEC70);
    uint64_t v38 = sub_240BB5970();
    os_log_type_t v39 = sub_240BB71A0();
    if (!os_log_type_enabled(v38, v39)) {
      goto LABEL_35;
    }
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    uint64_t v125 = v41;
    *(_DWORD *)uint64_t v40 = 136446210;
    uint64_t v124 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v125);
    sub_240BB75F0();
    id v42 = "[%{public}s:ActionHandler] Country not supported on active remote device, open knowledge base article";
    goto LABEL_34;
  }
  char v58 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v58) {
    goto LABEL_57;
  }
  uint64_t v59 = sub_240BB6DE0();
  uint64_t v61 = v60;
  if (v59 == sub_240BB6DE0() && v61 == v62)
  {
    swift_bridgeObjectRelease_n();
LABEL_65:
    uint64_t v37 = v123;
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v6, (uint64_t)qword_26AFDEC70);
    uint64_t v38 = sub_240BB5970();
    os_log_type_t v39 = sub_240BB71A0();
    if (!os_log_type_enabled(v38, v39)) {
      goto LABEL_35;
    }
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    uint64_t v125 = v41;
    *(_DWORD *)uint64_t v40 = 136446210;
    uint64_t v124 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v125);
    sub_240BB75F0();
    id v42 = "[%{public}s:ActionHandler] Capability not supported on active watch, open knowledge base article";
    goto LABEL_34;
  }
  char v63 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v63) {
    goto LABEL_65;
  }
  uint64_t v64 = sub_240BB6DE0();
  uint64_t v66 = v65;
  if (v64 == sub_240BB6DE0() && v66 == v67)
  {
    swift_bridgeObjectRelease_n();
LABEL_73:
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v6, (uint64_t)qword_26AFDEC70);
    uint64_t v69 = sub_240BB5970();
    os_log_type_t v70 = sub_240BB71A0();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = (uint8_t *)swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      uint64_t v125 = v72;
      *(_DWORD *)uint64_t v71 = 136446210;
      uint64_t v124 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v125);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v69, v70, "[%{public}s:ActionHandler] Age is not present, present health details", v71, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v72, -1, -1);
      MEMORY[0x24560B930](v71, -1, -1);
    }
    goto LABEL_77;
  }
  char v68 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v68) {
    goto LABEL_73;
  }
  uint64_t v73 = sub_240BB6DE0();
  uint64_t v75 = v74;
  if (v73 == sub_240BB6DE0() && v75 == v76)
  {
    swift_bridgeObjectRelease_n();
LABEL_82:
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v6, (uint64_t)qword_26AFDEC70);
    uint64_t v69 = sub_240BB5970();
    os_log_type_t v78 = sub_240BB71A0();
    if (os_log_type_enabled(v69, v78))
    {
      uint64_t v79 = (uint8_t *)swift_slowAlloc();
      uint64_t v80 = swift_slowAlloc();
      uint64_t v125 = v80;
      *(_DWORD *)uint64_t v79 = 136446210;
      uint64_t v124 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v125);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v69, v78, "[%{public}s:ActionHandler] Heart rate is not enabled, deep link to heart rate settings", v79, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v80, -1, -1);
      MEMORY[0x24560B930](v79, -1, -1);
    }
    goto LABEL_77;
  }
  char v77 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v77) {
    goto LABEL_82;
  }
  uint64_t v81 = sub_240BB6DE0();
  uint64_t v83 = v82;
  if (v81 == sub_240BB6DE0() && v83 == v84)
  {
    swift_bridgeObjectRelease_n();
LABEL_91:
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v6, (uint64_t)qword_26AFDEC70);
    uint64_t v69 = sub_240BB5970();
    os_log_type_t v86 = sub_240BB71A0();
    if (!os_log_type_enabled(v69, v86)) {
      goto LABEL_77;
    }
    BOOL v87 = (uint8_t *)swift_slowAlloc();
    uint64_t v88 = swift_slowAlloc();
    uint64_t v125 = v88;
    *(_DWORD *)BOOL v87 = 136446210;
    uint64_t v124 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v125);
    sub_240BB75F0();
    uint64_t v89 = "[%{public}s:ActionHandler] Not background delivered, present onboarding";
    goto LABEL_95;
  }
  char v85 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v85) {
    goto LABEL_91;
  }
  uint64_t v90 = sub_240BB6DE0();
  uint64_t v92 = v91;
  if (v90 == sub_240BB6DE0() && v92 == v93)
  {
    swift_bridgeObjectRelease_n();
LABEL_101:
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v6, (uint64_t)qword_26AFDEC70);
    uint64_t v69 = sub_240BB5970();
    os_log_type_t v86 = sub_240BB71A0();
    if (!os_log_type_enabled(v69, v86)) {
      goto LABEL_77;
    }
    BOOL v87 = (uint8_t *)swift_slowAlloc();
    uint64_t v88 = swift_slowAlloc();
    uint64_t v125 = v88;
    *(_DWORD *)BOOL v87 = 136446210;
    uint64_t v124 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v125);
    sub_240BB75F0();
    uint64_t v89 = "[%{public}s:ActionHandler] Notification details not entered, present onboarding";
LABEL_95:
    _os_log_impl(&dword_240A1B000, v69, v86, v89, v87, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v88, -1, -1);
    MEMORY[0x24560B930](v87, -1, -1);
LABEL_77:

    uint64_t v30 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
    goto LABEL_36;
  }
  char v94 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v94) {
    goto LABEL_101;
  }
  uint64_t v95 = sub_240BB6DE0();
  uint64_t v97 = v96;
  if (v95 == sub_240BB6DE0() && v97 == v98)
  {
    swift_bridgeObjectRelease_n();
LABEL_109:
    uint64_t v100 = (void *)sub_240BB56F0();
    unsigned __int8 v101 = objc_msgSend(v100, sel_areAllRequirementsSatisfied);

    if (v101)
    {
      if (qword_26AFD9A18 != -1) {
        swift_once();
      }
      sub_240A395FC(v6, (uint64_t)qword_26AFDEC70);
      uint64_t v102 = sub_240BB5970();
      os_log_type_t v103 = sub_240BB71A0();
      if (os_log_type_enabled(v102, v103))
      {
        os_log_type_t v104 = (uint8_t *)swift_slowAlloc();
        uint64_t v105 = swift_slowAlloc();
        uint64_t v125 = v105;
        *(_DWORD *)os_log_type_t v104 = 136446210;
        uint64_t v124 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v125);
        sub_240BB75F0();
        _os_log_impl(&dword_240A1B000, v102, v103, "[%{public}s:ActionHandler] Onboarded and available but feature disabled, present feature settings and enable", v104, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24560B930](v105, -1, -1);
        MEMORY[0x24560B930](v104, -1, -1);
      }

      sub_240A6F4C4(a2, a3);
      uint64_t v30 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
      goto LABEL_36;
    }
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v6, (uint64_t)qword_26AFDEC70);
    uint64_t v106 = sub_240BB5970();
    os_log_type_t v107 = sub_240BB71A0();
    if (os_log_type_enabled(v106, v107))
    {
      uint64_t v108 = (uint8_t *)swift_slowAlloc();
      uint64_t v109 = swift_slowAlloc();
      uint64_t v125 = v109;
      *(_DWORD *)uint64_t v108 = 136446210;
      uint64_t v124 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v125);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v106, v107, "[%{public}s:ActionHandler] Onboarded and available but feature inactive, push feature settings but do not enable", v108, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v109, -1, -1);
      MEMORY[0x24560B930](v108, -1, -1);
    }

    sub_240A6F4C4(a2, a3);
    goto LABEL_20;
  }
  char v99 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v99) {
    goto LABEL_109;
  }

  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v110 = sub_240A395FC(v6, (uint64_t)qword_26AFDEC70);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v110, v6);
  uint64_t v111 = a1;
  id v112 = sub_240BB5970();
  int v122 = sub_240BB7190();
  uint64_t v123 = v112;
  if (!os_log_type_enabled(v112, (os_log_type_t)v122))
  {

    goto LABEL_126;
  }
  uint64_t v113 = swift_slowAlloc();
  uint64_t v121 = swift_slowAlloc();
  uint64_t v125 = v121;
  *(_DWORD *)uint64_t v113 = 136446466;
  uint64_t v124 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v125);
  int v120 = &v125;
  sub_240BB75F0();
  *(_WORD *)(v113 + 12) = 2082;
  id v114 = [v111 highestPriorityUnsatisfiedRequirement];
  if (v114)
  {
    unint64_t v115 = v114;
    uint64_t v116 = sub_240BB6DE0();
    unint64_t v118 = v117;

    uint64_t v124 = sub_240A38940(v116, v118, &v125);
    sub_240BB75F0();

    swift_bridgeObjectRelease();
    uint64_t v111 = v123;
    _os_log_impl(&dword_240A1B000, v123, (os_log_type_t)v122, "[%{public}s:ActionHandler] Unhandled, unsatisfied requirement encountered: %{public}s", (uint8_t *)v113, 0x16u);
    uint64_t v119 = v121;
    swift_arrayDestroy();
    MEMORY[0x24560B930](v119, -1, -1);
    MEMORY[0x24560B930](v113, -1, -1);
LABEL_126:

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    goto LABEL_28;
  }

  __break(1u);
}

double sub_240A6F4C4@<D0>(uint64_t a1@<X1>, char *a2@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v3 = sub_240BB3660();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)v28 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v28 - v11;
  uint64_t v13 = sub_240BB3890();
  swift_bridgeObjectRelease();
  if (!v13)
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_240BB5990();
    sub_240A395FC(v14, (uint64_t)qword_26AFDEC70);
    uint64_t v15 = sub_240BB5970();
    os_log_type_t v16 = sub_240BB7190();
    if (os_log_type_enabled(v15, v16))
    {
      char v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(void *)&v33[0] = v30;
      uint64_t v29 = v17;
      *(_DWORD *)char v17 = 136446210;
      v28[1] = v17 + 4;
      uint64_t v32 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, (uint64_t *)v33);
      sub_240BB75F0();
      uint64_t v18 = v29;
      _os_log_impl(&dword_240A1B000, v15, v16, "[%{public}s] Expected to have primary description content but it's not present", v29, 0xCu);
      uint64_t v19 = v30;
      swift_arrayDestroy();
      MEMORY[0x24560B930](v19, -1, -1);
      MEMORY[0x24560B930](v18, -1, -1);
    }
  }
  sub_240BB3880();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v10, v12, v3);
  int v20 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v10, v3);
  if (v20 == *MEMORY[0x263F435C8])
  {
    char v21 = 1;
  }
  else if (v20 == *MEMORY[0x263F435D0])
  {
    char v21 = 2;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
    char v21 = 0;
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v12, v3);
  sub_240BB3880();
  uint64_t v22 = sub_240BB3890();
  if (v22) {
    uint64_t v23 = v22;
  }
  else {
    uint64_t v23 = MEMORY[0x263F8EE78];
  }
  sub_240A70AF0((uint64_t *)v33);
  *a2 = v21;
  uint64_t v24 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&a2[v24[5]], v7, v3);
  *(void *)&a2[v24[6]] = v23;
  uint64_t v25 = &a2[v24[7]];
  long long v26 = v33[1];
  *(_OWORD *)uint64_t v25 = v33[0];
  *((_OWORD *)v25 + 1) = v26;
  double result = *(double *)&v34;
  *((_OWORD *)v25 + 2) = v34;
  return result;
}

void sub_240A6F868(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_240BB5990();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_240BB3700() & 1) == 0)
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v4, (uint64_t)qword_26AFDEC70);
    int v20 = sub_240BB5970();
    os_log_type_t v21 = sub_240BB71A0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v90 = v23;
      *(_DWORD *)uint64_t v22 = 136446210;
      uint64_t v89 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v90);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v20, v21, "[%{public}s] Cardio fitness not visible, hiding", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v23, -1, -1);
      MEMORY[0x24560B930](v22, -1, -1);
    }
    goto LABEL_27;
  }
  id v8 = objc_msgSend(a1, sel_highestPriorityUnsatisfiedRequirement);
  if (!v8)
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v4, (uint64_t)qword_26AFDEC70);
    uint64_t v24 = sub_240BB5970();
    os_log_type_t v25 = sub_240BB71A0();
    if (os_log_type_enabled(v24, v25))
    {
      long long v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v90 = v27;
      *(_DWORD *)long long v26 = 136446210;
      uint64_t v89 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v90);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v24, v25, "[%{public}s:ActionHandler] Not onboarded but no reason why we can't, present onboarding", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v27, -1, -1);
      MEMORY[0x24560B930](v26, -1, -1);
    }

    uint64_t v28 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
    goto LABEL_36;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_240BB6DE0();
  uint64_t v12 = v11;
  if (v10 == sub_240BB6DE0() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  char v15 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15)
  {
LABEL_21:
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v4, (uint64_t)qword_26AFDEC70);
    int v20 = sub_240BB5970();
    os_log_type_t v29 = sub_240BB71A0();
    if (!os_log_type_enabled(v20, v29)) {
      goto LABEL_26;
    }
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    uint64_t v90 = v31;
    *(_DWORD *)uint64_t v30 = 136446210;
    uint64_t v89 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v90);
    sub_240BB75F0();
    uint64_t v32 = "[%{public}s:ActionHandler] Health app hidden, no action";
    goto LABEL_25;
  }
  uint64_t v16 = sub_240BB6DE0();
  uint64_t v18 = v17;
  if (v16 == sub_240BB6DE0() && v18 == v19)
  {
    swift_bridgeObjectRelease_n();
LABEL_30:
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v4, (uint64_t)qword_26AFDEC70);
    uint64_t v35 = sub_240BB5970();
    os_log_type_t v36 = sub_240BB71A0();
    if (!os_log_type_enabled(v35, v36)) {
      goto LABEL_35;
    }
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v90 = v38;
    *(_DWORD *)uint64_t v37 = 136446210;
    uint64_t v89 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v90);
    sub_240BB75F0();
    os_log_type_t v39 = "[%{public}s:ActionHandler] Heart rate app not installed, open knowledge base article";
LABEL_34:
    _os_log_impl(&dword_240A1B000, v35, v36, v39, v37, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v38, -1, -1);
    MEMORY[0x24560B930](v37, -1, -1);
LABEL_35:

    uint64_t v28 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
LABEL_36:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a2, 0, 1, v28);
    uint64_t v40 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(a2, 0, 1, v40);
    return;
  }
  char v34 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v34) {
    goto LABEL_30;
  }
  uint64_t v41 = sub_240BB6DE0();
  uint64_t v43 = v42;
  if (v41 == sub_240BB6DE0() && v43 == v44)
  {
    swift_bridgeObjectRelease_n();
LABEL_41:
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v4, (uint64_t)qword_26AFDEC70);
    uint64_t v35 = sub_240BB5970();
    os_log_type_t v36 = sub_240BB71A0();
    if (!os_log_type_enabled(v35, v36)) {
      goto LABEL_35;
    }
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v90 = v38;
    *(_DWORD *)uint64_t v37 = 136446210;
    uint64_t v89 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v90);
    sub_240BB75F0();
    os_log_type_t v39 = "[%{public}s:ActionHandler] Age gated, open knowledge base article";
    goto LABEL_34;
  }
  char v45 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v45) {
    goto LABEL_41;
  }
  uint64_t v46 = sub_240BB6DE0();
  uint64_t v48 = v47;
  if (v46 == sub_240BB6DE0() && v48 == v49)
  {
    swift_bridgeObjectRelease_n();
LABEL_49:
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v4, (uint64_t)qword_26AFDEC70);
    uint64_t v35 = sub_240BB5970();
    os_log_type_t v36 = sub_240BB71A0();
    if (!os_log_type_enabled(v35, v36)) {
      goto LABEL_35;
    }
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v90 = v38;
    *(_DWORD *)uint64_t v37 = 136446210;
    uint64_t v89 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v90);
    sub_240BB75F0();
    os_log_type_t v39 = "[%{public}s:ActionHandler] Country not supported on local device, open knowledge base article";
    goto LABEL_34;
  }
  char v50 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v50) {
    goto LABEL_49;
  }
  uint64_t v51 = sub_240BB6DE0();
  uint64_t v53 = v52;
  if (v51 == sub_240BB6DE0() && v53 == v54)
  {
    swift_bridgeObjectRelease_n();
LABEL_57:
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v4, (uint64_t)qword_26AFDEC70);
    uint64_t v35 = sub_240BB5970();
    os_log_type_t v36 = sub_240BB71A0();
    if (!os_log_type_enabled(v35, v36)) {
      goto LABEL_35;
    }
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v90 = v38;
    *(_DWORD *)uint64_t v37 = 136446210;
    uint64_t v89 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v90);
    sub_240BB75F0();
    os_log_type_t v39 = "[%{public}s:ActionHandler] Country not supported on active remote device, open knowledge base article";
    goto LABEL_34;
  }
  char v55 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v55) {
    goto LABEL_57;
  }
  uint64_t v56 = sub_240BB6DE0();
  uint64_t v58 = v57;
  if (v56 == sub_240BB6DE0() && v58 == v59)
  {
    swift_bridgeObjectRelease_n();
LABEL_65:
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v4, (uint64_t)qword_26AFDEC70);
    uint64_t v35 = sub_240BB5970();
    os_log_type_t v36 = sub_240BB71A0();
    if (!os_log_type_enabled(v35, v36)) {
      goto LABEL_35;
    }
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v90 = v38;
    *(_DWORD *)uint64_t v37 = 136446210;
    uint64_t v89 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v90);
    sub_240BB75F0();
    os_log_type_t v39 = "[%{public}s:ActionHandler] Capability not supported on active watch, open knowledge base article";
    goto LABEL_34;
  }
  char v60 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v60) {
    goto LABEL_65;
  }
  uint64_t v61 = sub_240BB6DE0();
  uint64_t v63 = v62;
  if (v61 == sub_240BB6DE0() && v63 == v64)
  {
    swift_bridgeObjectRelease_n();
LABEL_73:
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v4, (uint64_t)qword_26AFDEC70);
    uint64_t v35 = sub_240BB5970();
    os_log_type_t v66 = sub_240BB71A0();
    if (os_log_type_enabled(v35, v66))
    {
      uint64_t v67 = (uint8_t *)swift_slowAlloc();
      uint64_t v68 = swift_slowAlloc();
      uint64_t v90 = v68;
      *(_DWORD *)uint64_t v67 = 136446210;
      uint64_t v89 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v90);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v35, v66, "[%{public}s:ActionHandler] Heart rate is not enabled, deep link to heart rate settings", v67, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v68, -1, -1);
      MEMORY[0x24560B930](v67, -1, -1);
    }
    goto LABEL_35;
  }
  char v65 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v65) {
    goto LABEL_73;
  }
  uint64_t v69 = sub_240BB6DE0();
  uint64_t v71 = v70;
  if (v69 == sub_240BB6DE0() && v71 == v72)
  {
    swift_bridgeObjectRelease_n();
LABEL_82:
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    sub_240A395FC(v4, (uint64_t)qword_26AFDEC70);
    int v20 = sub_240BB5970();
    os_log_type_t v29 = sub_240BB71A0();
    if (!os_log_type_enabled(v20, v29)) {
      goto LABEL_26;
    }
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    uint64_t v90 = v31;
    *(_DWORD *)uint64_t v30 = 136446210;
    uint64_t v89 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v90);
    sub_240BB75F0();
    uint64_t v32 = "[%{public}s:ActionHandler] Background delivered onboarding record not present, no action";
LABEL_25:
    _os_log_impl(&dword_240A1B000, v20, v29, v32, v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v31, -1, -1);
    MEMORY[0x24560B930](v30, -1, -1);
LABEL_26:

LABEL_27:
LABEL_28:
    uint64_t v33 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(a2, 1, 1, v33);
    return;
  }
  char v73 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v73) {
    goto LABEL_82;
  }

  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v74 = sub_240A395FC(v4, (uint64_t)qword_26AFDEC70);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v74, v4);
  id v75 = a1;
  uint64_t v76 = sub_240BB5970();
  int v87 = sub_240BB7190();
  uint64_t v88 = v76;
  if (!os_log_type_enabled(v76, (os_log_type_t)v87))
  {

    goto LABEL_92;
  }
  uint64_t v77 = swift_slowAlloc();
  uint64_t v86 = swift_slowAlloc();
  uint64_t v90 = v86;
  *(_DWORD *)uint64_t v77 = 136446466;
  uint64_t v89 = sub_240A38940(0xD00000000000002DLL, 0x8000000240BC9700, &v90);
  char v85 = &v90;
  sub_240BB75F0();
  *(_WORD *)(v77 + 12) = 2082;
  id v78 = objc_msgSend(v75, sel_highestPriorityUnsatisfiedRequirement);
  if (v78)
  {
    uint64_t v79 = v78;
    uint64_t v80 = sub_240BB6DE0();
    unint64_t v82 = v81;

    uint64_t v89 = sub_240A38940(v80, v82, &v90);
    sub_240BB75F0();

    swift_bridgeObjectRelease();
    uint64_t v83 = v88;
    _os_log_impl(&dword_240A1B000, v88, (os_log_type_t)v87, "[%{public}s:ActionHandler] Unhandled, unsatisfied requirement encountered: %{public}s", (uint8_t *)v77, 0x16u);
    uint64_t v84 = v86;
    swift_arrayDestroy();
    MEMORY[0x24560B930](v84, -1, -1);
    MEMORY[0x24560B930](v77, -1, -1);

LABEL_92:
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    goto LABEL_28;
  }

  __break(1u);
}

void sub_240A70AF0(uint64_t *a1@<X8>)
{
  uint64_t v2 = (void *)sub_240BB56F0();
  id v3 = objc_msgSend(v2, sel_highestPriorityUnsatisfiedRequirement);

  if (v3)
  {
    uint64_t v4 = sub_240BB6DE0();
    uint64_t v6 = v5;
    if (v4 == sub_240BB6DE0() && v6 == v7)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v9 = sub_240BB7AE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v9 & 1) == 0)
      {
        uint64_t v10 = sub_240BB6DE0();
        uint64_t v12 = v11;
        if (v10 == sub_240BB6DE0() && v12 == v13)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v15 = sub_240BB7AE0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v15 & 1) == 0)
          {
            uint64_t v16 = sub_240BB6DE0();
            uint64_t v18 = v17;
            if (v16 == sub_240BB6DE0() && v18 == v19)
            {
              swift_bridgeObjectRelease_n();
LABEL_27:
              id v33 = objc_msgSend(self, sel_cardioFitnessPairedDeviceRegionGatedFooterDescription);
              goto LABEL_20;
            }
            char v48 = sub_240BB7AE0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v48) {
              goto LABEL_27;
            }
            uint64_t v49 = sub_240BB6DE0();
            uint64_t v51 = v50;
            if (v49 == sub_240BB6DE0() && v51 == v52)
            {
              swift_bridgeObjectRelease_n();
LABEL_32:
              uint64_t v54 = self;
              id v55 = objc_msgSend(v54, sel_cardioFitnessWristDetectFooterDescriptionWithLink);
              uint64_t v25 = sub_240BB6DE0();
              uint64_t v27 = v56;

              id v57 = objc_msgSend(v54, sel_cardioFitnessWristDetectFooterLinkTitle);
              uint64_t v29 = sub_240BB6DE0();
              uint64_t v31 = v58;

              id v45 = objc_msgSend(v54, sel_cardioFitnessWristDetectFooterLinkURL);
              goto LABEL_24;
            }
            char v53 = sub_240BB7AE0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v53) {
              goto LABEL_32;
            }

            uint64_t v59 = (void *)sub_240BB56F0();
            unsigned int v60 = objc_msgSend(v59, sel_areAllRequirementsSatisfied);

            uint64_t v22 = self;
            uint64_t v23 = v22;
            if (!v60) {
              goto LABEL_21;
            }
            goto LABEL_16;
          }
        }
        uint64_t v40 = self;
        id v41 = objc_msgSend(v40, sel_cardioFitnessAgeDeletedFooterDescriptionWithLink);
        uint64_t v25 = sub_240BB6DE0();
        uint64_t v27 = v42;

        id v43 = objc_msgSend(v40, sel_cardioFitnessAgeDeletedFooterLinkTitle);
        uint64_t v29 = sub_240BB6DE0();
        uint64_t v31 = v44;

        id v45 = objc_msgSend(v40, sel_cardioFitnessAgeDeletedFooterLinkURL);
LABEL_24:
        id v46 = v45;
        uint64_t v37 = sub_240BB6DE0();
        uint64_t v39 = v47;

        goto LABEL_25;
      }
    }
    id v33 = objc_msgSend(self, sel_cardioFitnessAgeRestrictedFooterDescription);
LABEL_20:
    id v34 = v33;
    uint64_t v25 = sub_240BB6DE0();
    uint64_t v27 = v35;

    uint64_t v29 = 0;
    uint64_t v31 = 0;
    uint64_t v37 = 0;
    uint64_t v39 = 0;
    goto LABEL_25;
  }
  int v20 = (void *)sub_240BB56F0();
  unsigned int v21 = objc_msgSend(v20, sel_areAllRequirementsSatisfied);

  uint64_t v22 = self;
  uint64_t v23 = v22;
  if (!v21)
  {
LABEL_21:
    id v24 = objc_msgSend(v22, sel_cardioFitnessPregnantFooterDescriptionWithLink);
    goto LABEL_17;
  }
LABEL_16:
  id v24 = objc_msgSend(v22, sel_cardioFitnessFooterDescriptionWithLink);
LABEL_17:
  uint64_t v25 = sub_240BB6DE0();
  uint64_t v27 = v26;

  id v28 = objc_msgSend(v23, sel_cardioFitnessFooterLinkTitle);
  uint64_t v29 = sub_240BB6DE0();
  uint64_t v31 = v30;

  id v32 = objc_msgSend(v23, sel_cardioFitnessFooterLinkURL);
  id v36 = v32;
  uint64_t v37 = sub_240BB6DE0();
  uint64_t v39 = v38;

LABEL_25:
  *a1 = v25;
  a1[1] = v27;
  a1[2] = v29;
  a1[3] = v31;
  a1[4] = v37;
  a1[5] = v39;
}

void sub_240A71104(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t _s27CardioFitnessChartComponentVwxx(id *a1)
{
  return swift_bridgeObjectRelease();
}

void *_s27CardioFitnessChartComponentVwCP_0(void *a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  sub_240BB4850();
  return a1;
}

uint64_t _s27CardioFitnessChartComponentVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  sub_240BB4850();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeBufferWithCopyOfBuffer for AFibBurdenPDFChartViewModel.DataRange(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t _s27CardioFitnessChartComponentVwta(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s27CardioFitnessChartComponentVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s27CardioFitnessChartComponentVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s27CardioFitnessChartComponentVMa()
{
  return &_s27CardioFitnessChartComponentVN;
}

uint64_t sub_240A71340()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_240BB4850();
  return v1;
}

uint64_t sub_240A71370(uint64_t a1)
{
  return sub_240A71378(a1, *v1);
}

uint64_t sub_240A71378(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_240BB4C70();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_240BB4A50();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_240BB4C60() & 0xFE) == 2)
  {
    id v12 = a2;
    sub_240BB4A40();
    uint64_t v13 = sub_240BB4A30();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    type metadata accessor for HKHRCardioFitnessChartDataSource();
    swift_allocObject();
    uint64_t v13 = sub_240B52C40(a2, (uint64_t)v7);
    sub_240A7154C();
  }
  return v13;
}

unint64_t sub_240A7154C()
{
  unint64_t result = qword_268C9F1F8;
  if (!qword_268C9F1F8)
  {
    type metadata accessor for HKHRCardioFitnessChartDataSource();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F1F8);
  }
  return result;
}

uint64_t type metadata accessor for AFibBurdenNotificationSettingsDisclosureCellViewController()
{
  uint64_t result = qword_268C9F200;
  if (!qword_268C9F200) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240A715F0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_240A71630()
{
  uint64_t v1 = sub_240BB6DE0();
  sub_240BB4850();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_240A716A0()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_240A716A8(uint64_t *a1))()
{
  uint64_t v4 = sub_240BB6DE0();
  uint64_t v5 = v2;
  sub_240BB4850();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  *a1 = v4;
  a1[1] = v5;
  return destroy for CenteredLabelWithSpinnerContentConfiguration;
}

uint64_t sub_240A71744()
{
  return 0;
}

uint64_t sub_240A717DC()
{
  return 0;
}

uint64_t sub_240A718A4(void *a1)
{
  sub_240BB77C0();
  sub_240BB6E70();
  sub_240BB7C80();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  id v2 = a1;
  sub_240A49AC0();
  sub_240BB6E10();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return 0;
}

id sub_240A7198C(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    sub_240BB6DE0();
    id v6 = a4;
    uint64_t v7 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v8 = a4;
    uint64_t v7 = 0;
  }
  v11.receiver = a1;
  v11.super_class = (Class)type metadata accessor for AFibBurdenNotificationSettingsDisclosureCellViewController();
  id v9 = objc_msgSendSuper2(&v11, sel_initWithNibName_bundle_, v7, a4);

  return v9;
}

id sub_240A71A30(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for AFibBurdenNotificationSettingsDisclosureCellViewController();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_240A71A7C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenNotificationSettingsDisclosureCellViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240A71AB4()
{
  return type metadata accessor for AFibBurdenNotificationSettingsDisclosureCellViewController();
}

uint64_t sub_240A71AC0(uint64_t a1, void *a2)
{
  return sub_240A726B4(a2);
}

uint64_t sub_240A71AF4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_240A73768();
    uint64_t v3 = sub_240BB77A0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      id v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_240BB7BC0();
      sub_240BB4850();
      sub_240BB6E50();
      uint64_t result = sub_240BB7C00();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_240BB7AE0(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_240BB7AE0();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      unsigned int v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *unsigned int v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

unint64_t sub_240A71C94(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    sub_240BB4850();
    uint64_t v6 = sub_240BB7900();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_240A732DC();
      uint64_t result = sub_240BB77A0();
      unint64_t v3 = result;
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      sub_240BB4850();
      uint64_t v5 = sub_240BB7900();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v5) {
        return v3;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  unint64_t v3 = MEMORY[0x263F8EE88];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return v3;
  }
LABEL_9:
  unint64_t v7 = 0;
  unint64_t v8 = v3 + 56;
  unint64_t v22 = v1 & 0xC000000000000001;
  unint64_t v19 = v1 + 32;
  uint64_t v20 = v1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v21 = v1;
  while (v22)
  {
    uint64_t result = MEMORY[0x24560AAA0](v7, v1);
    unint64_t v9 = result;
    BOOL v10 = __OFADD__(v7++, 1);
    if (v10) {
      goto LABEL_26;
    }
LABEL_18:
    sub_240BB6140();
    sub_240A20EF4(&qword_268C9F228, MEMORY[0x263EFDD18]);
    uint64_t result = sub_240BB6D40();
    uint64_t v11 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v12 = result & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = *(void *)(v8 + 8 * (v12 >> 6));
    uint64_t v15 = 1 << v12;
    if (((1 << v12) & v14) != 0)
    {
      uint64_t v16 = ~v11;
      sub_240A20EF4(&qword_268C9F230, MEMORY[0x263EFDD18]);
      do
      {
        uint64_t result = sub_240BB6D90();
        if (result)
        {
          uint64_t result = swift_release();
          unint64_t v1 = v21;
          goto LABEL_11;
        }
        unint64_t v12 = (v12 + 1) & v16;
        unint64_t v13 = v12 >> 6;
        uint64_t v14 = *(void *)(v8 + 8 * (v12 >> 6));
        uint64_t v15 = 1 << v12;
      }
      while ((v14 & (1 << v12)) != 0);
      unint64_t v1 = v21;
    }
    *(void *)(v8 + 8 * v13) = v15 | v14;
    *(void *)(*(void *)(v3 + 48) + 8 * v12) = v9;
    uint64_t v17 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v17, 1);
    uint64_t v18 = v17 + 1;
    if (v10) {
      goto LABEL_27;
    }
    *(void *)(v3 + 16) = v18;
LABEL_11:
    if (v7 == v5) {
      return v3;
    }
  }
  if (v7 >= *(void *)(v20 + 16)) {
    goto LABEL_28;
  }
  unint64_t v9 = *(void *)(v19 + 8 * v7);
  uint64_t result = swift_retain();
  BOOL v10 = __OFADD__(v7++, 1);
  if (!v10) {
    goto LABEL_18;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

id sub_240A71F44(__int16 a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v38 = a3;
  sub_240A3ED98(0, (unint64_t *)&qword_268C9F218, MEMORY[0x263F43A90]);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v37 - v16;
  sub_240A3ED98(0, &qword_26AFD7E50, (void (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v37 - v19;
  v41[3] = sub_240A34DC4(0, (unint64_t *)&qword_26AFD75D0);
  v41[4] = MEMORY[0x263F44B48];
  v41[0] = a4;
  void v40[3] = sub_240BB3020();
  void v40[4] = &off_26F50B8F0;
  v40[0] = a7;
  unint64_t v21 = a8;
  uint64_t v39 = a6;
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_240BB7900())
  {
    uint64_t v22 = a2;
    unint64_t v23 = sub_240A71C94(MEMORY[0x263F8EE78]);
  }
  else
  {
    uint64_t v22 = a2;
    unint64_t v23 = MEMORY[0x263F8EE88];
  }
  *(void *)&v21[qword_268CA1EA0] = v23;
  uint64_t v24 = &v21[qword_268CA1EA8];
  *(void *)uint64_t v24 = 0;
  *((void *)v24 + 1) = 0;
  uint64_t v25 = (uint64_t)&v21[qword_268CA1EB8];
  uint64_t v26 = _s14descr26F502E21O15SettingsContentVMa();
  uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
  v27(v25, 1, 1, v26);
  *(void *)&v21[qword_268CA2BE8 + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v21[qword_268CA2BF0 + 8] = 0;
  swift_unknownObjectWeakInit();
  id v28 = &v21[qword_268CA1E88];
  *id v28 = a1 & 1;
  v28[1] = HIBYTE(a1) & 1;
  uint64_t v29 = v38;
  *(void *)&v21[qword_268CA1E90] = v38;
  sub_240A1E37C((uint64_t)v41, (uint64_t)&v21[qword_268CA1E98]);
  *(void *)&v21[qword_268CA1EB0] = a5;
  sub_240A73154(v22, (uint64_t)v20);
  v27((uint64_t)v20, 0, 1, v26);
  swift_beginAccess();
  id v30 = v29;
  id v31 = a5;
  sub_240A7325C((uint64_t)v20, v25);
  swift_endAccess();
  sub_240A1E37C((uint64_t)v40, (uint64_t)&v21[qword_268CA1EC0]);

  uint64_t v32 = sub_240BB3B20();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v17, v39, v32);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v17, 0, 1, v32);
  sub_240BB4850();
  HKImproveHealthAndActivityAnalyticsAllowed();
  id v35 = (id)sub_240BB3B10();
  sub_240B80B20();

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v40);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v32);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v41);
  sub_240A73200(v22);
  return v35;
}

id sub_240A72340(__int16 a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, int a7, uint64_t a8)
{
  uint64_t v43 = a8;
  int v42 = a7;
  id v40 = a4;
  id v41 = a5;
  uint64_t v12 = sub_240BB3B20();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = _s14descr26F502E21O15SettingsContentVMa();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = a2;
  sub_240A73154(a2, (uint64_t)v18);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v44 = a6;
  v19(v15, a6, v12);
  uint64_t v20 = sub_240BB3020();
  uint64_t v21 = sub_240BB3010();
  uint64_t v47 = v20;
  char v48 = &off_26F50B8F0;
  v46[0] = v21;
  id v22 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenSpecifierDataSource(0));
  uint64_t v23 = sub_240A346B0((uint64_t)v46, v47);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (uint64_t *)((char *)&v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v26 + 16))(v25);
  uint64_t v27 = *v25;
  LOWORD(v25) = a1 & 0x101;
  id v28 = a3;
  id v29 = v40;
  swift_retain();
  __int16 v30 = (__int16)v25;
  id v31 = v41;
  id v32 = sub_240A71F44(v30, (uint64_t)v18, v28, (uint64_t)v29, v41, (uint64_t)v15, v27, v22);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v46);
  swift_release();
  sub_240A20EF4(&qword_268C9F210, (void (*)(uint64_t))type metadata accessor for AFibBurdenSpecifierDataSource);
  id v33 = v32;
  uint64_t v34 = (void *)sub_240BB4E60();
  id v35 = self;
  id v36 = v34;
  id v37 = objc_msgSend(v35, sel_aFibBurdenSectionTitle);
  if (!v37)
  {
    sub_240BB6DE0();
    id v37 = (id)sub_240BB6DA0();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v36, sel_setTitle_, v37);

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v44, v12);
  sub_240A73200(v45);
  return v36;
}

uint64_t sub_240A726B4(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_240A3FB28();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_240BB3B20();
  uint64_t v49 = *(void *)(v8 - 8);
  uint64_t v50 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v51 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3ED98(0, &qword_26AFD7E50, (void (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v46 - v11;
  uint64_t v13 = _s14descr26F502E21O15SettingsContentVMa();
  uint64_t v54 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v52 = (uint64_t)&v46 - v17;
  uint64_t v18 = sub_240BB56E0();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  id v55 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v53 = a1;
  id v21 = objc_msgSend(a1, sel_resolvedHealthStore);
  if (!v21)
  {
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_240A395FC(v4, (uint64_t)qword_26AFDEB68);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v30, v4);
    *(void *)(swift_allocObject() + 16) = ObjectType;
    v59[0] = 0;
    sub_240BB5720();
    goto LABEL_11;
  }
  id v22 = v21;
  uint64_t v47 = v19;
  uint64_t v48 = v18;
  uint64_t v57 = ObjectType;
  uint64_t v58 = v5;
  uint64_t v23 = *MEMORY[0x263F09728];
  id v56 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3B8]), sel_initWithFeatureIdentifier_healthStore_, *MEMORY[0x263F09728], v21);
  id v24 = objc_msgSend(v22, sel_profileIdentifier);
  id v25 = objc_msgSend(v24, sel_type);

  if (v25 != (id)1
    || (id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3D0]), sel_initWithFeatureIdentifier_healthStore_, v23, v22)) == 0)
  {
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_240A395FC(v4, (uint64_t)qword_26AFDEB68);
    uint64_t v5 = v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v7, v29, v4);
    *(void *)(swift_allocObject() + 16) = v57;
    v59[0] = 0;
    sub_240BB5730();

LABEL_11:
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v27 = v26;
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD75D0);
  id v28 = v55;
  id v46 = v27;
  sub_240BB57B0();
  uint64_t v32 = sub_240BB3020();
  uint64_t v33 = sub_240BB3010();
  v59[3] = v32;
  v59[4] = &off_26F508120;
  v59[0] = v33;
  sub_240B2A748(v28, v59, (uint64_t)v12);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v59);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v12, 1, v13) == 1)
  {
    sub_240A73094((uint64_t)v12);
    uint64_t v34 = v57;
    uint64_t v35 = v58;
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_240A395FC(v4, (uint64_t)qword_26AFDEB68);
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v7, v36, v4);
    *(void *)(swift_allocObject() + 16) = v34;
    v59[0] = 0;
    sub_240BB5730();

    swift_release();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v28, v48);
  }
  else
  {
    uint64_t v37 = v52;
    sub_240A4C354((uint64_t)v12, v52);
    sub_240A73154(v37, (uint64_t)v16);
    uint64_t v38 = (uint64_t)v51;
    (*(void (**)(char *, void, uint64_t))(v49 + 104))(v51, *MEMORY[0x263F43A78], v50);
    id v39 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenSettingsViewController(0));
    id v40 = v56;
    id v41 = v46;
    id v42 = v22;
    id v43 = sub_240A72340(256, (uint64_t)v16, v40, v41, v42, v38, 0, (uint64_t)v39);

    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v44 = sub_240A395FC(v4, (uint64_t)qword_26AFDEB68);
    uint64_t v45 = v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v7, v44, v4);
    *(void *)(swift_allocObject() + 16) = v57;
    v59[0] = 0;
    sub_240BB5700();
    swift_release();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v7, v4);
    objc_msgSend(v53, sel_showViewController_sender_, v43, 0);

    sub_240A73200(v37);
    return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v55, v48);
  }
}

uint64_t sub_240A72FF4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240A73004()
{
  return sub_240A717DC();
}

uint64_t sub_240A7303C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240A7304C()
{
  return sub_240A71744();
}

uint64_t sub_240A73054()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240A7308C()
{
  return sub_240A718A4(*(void **)(v0 + 16));
}

uint64_t sub_240A73094(uint64_t a1)
{
  sub_240A3ED98(0, &qword_26AFD7E50, (void (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240A7310C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240A7311C()
{
  return sub_240A717DC();
}

uint64_t sub_240A73154(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s14descr26F502E21O15SettingsContentVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240A731B8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240A731C8()
{
  return sub_240A717DC();
}

uint64_t sub_240A73200(uint64_t a1)
{
  uint64_t v2 = _s14descr26F502E21O15SettingsContentVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240A7325C(uint64_t a1, uint64_t a2)
{
  sub_240A3ED98(0, &qword_26AFD7E50, (void (*)(uint64_t))_s14descr26F502E21O15SettingsContentVMa);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_240A732DC()
{
  if (!qword_268C9F220)
  {
    sub_240BB6140();
    sub_240A20EF4(&qword_268C9F228, MEMORY[0x263EFDD18]);
    unint64_t v0 = sub_240BB77B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9F220);
    }
  }
}

uint64_t sub_240A73370(uint64_t a1)
{
  uint64_t v2 = sub_240BB4340();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_240A73684();
    uint64_t v9 = sub_240BB77A0();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    id v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_240A20EF4(&qword_268C9F240, MEMORY[0x263F43F70]);
      uint64_t v16 = sub_240BB6D40();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_240A20EF4(&qword_268C9F248, MEMORY[0x263F43F70]);
          char v23 = sub_240BB6D90();
          id v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        id v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

void sub_240A73684()
{
  if (!qword_268C9F238)
  {
    sub_240BB4340();
    sub_240A20EF4(&qword_268C9F240, MEMORY[0x263F43F70]);
    unint64_t v0 = sub_240BB77B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9F238);
    }
  }
}

uint64_t sub_240A73718(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240A34DC4(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240A73768()
{
  if (!qword_268C9F250)
  {
    unint64_t v0 = sub_240BB77B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9F250);
    }
  }
}

uint64_t sub_240A737C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_240A738A0();
    uint64_t v2 = sub_240BB77A0();
    uint64_t v3 = v2 + 56;
    while (1)
    {
      sub_240BB7BC0();
      sub_240BB7BD0();
      uint64_t result = sub_240BB7C00();
      unint64_t v5 = result & ~(-1 << *(unsigned char *)(v2 + 32));
      unint64_t v6 = v5 >> 6;
      uint64_t v7 = *(void *)(v3 + 8 * (v5 >> 6));
      uint64_t v8 = 1 << v5;
      if ((v8 & v7) == 0)
      {
        *(void *)(v3 + 8 * v6) = v8 | v7;
        uint64_t v9 = *(void *)(v2 + 16);
        BOOL v10 = __OFADD__(v9, 1);
        uint64_t v11 = v9 + 1;
        if (v10)
        {
          __break(1u);
          return result;
        }
        *(void *)(v2 + 16) = v11;
      }
      if (!--v1) {
        return v2;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

void sub_240A738A0()
{
  if (!qword_268C9F258)
  {
    sub_240A738FC();
    unint64_t v0 = sub_240BB77B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9F258);
    }
  }
}

unint64_t sub_240A738FC()
{
  unint64_t result = qword_268C9F260;
  if (!qword_268C9F260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F260);
  }
  return result;
}

unint64_t sub_240A73950(char a1)
{
  unint64_t result = 0x7472617473;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7472617453746567;
      break;
    case 2:
      unint64_t result = 0x726F577449776F68;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x746361466566696CLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0x6974656C706D6F63;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_240A73A60(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_240A73A74()
{
  return sub_240BB7C00();
}

uint64_t sub_240A73ABC()
{
  return sub_240BB7BD0();
}

uint64_t sub_240A73AE8()
{
  return sub_240BB7C00();
}

void sub_240A73B2C(void *a1@<X8>)
{
  *a1 = &unk_26F503348;
}

unint64_t sub_240A73B3C()
{
  return sub_240A73950(*v0);
}

uint64_t sub_240A73B44(uint64_t a1, uint64_t a2)
{
  return sub_240A75EDC(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8));
}

BOOL sub_240A73B5C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

BOOL sub_240A73B74(uint64_t a1, uint64_t a2)
{
  return sub_240A75D5C(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8));
}

uint64_t sub_240A73B8C(char a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v4;
  sub_240A76000();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(unsigned char *)(v15 + 24) = a1;
  *(void *)(v15 + 32) = a2;
  *(void *)(v15 + 40) = a3;
  *(void *)(v15 + 48) = v8;
  sub_240A76094();
  swift_allocObject();
  id v16 = a2;
  sub_240BB6230();
  sub_240A76628(&qword_268C9F290, (void (*)(uint64_t))sub_240A76094);
  swift_retain();
  sub_240BB6240();
  sub_240A76628(&qword_268C9F298, (void (*)(uint64_t))sub_240A76000);
  uint64_t v17 = sub_240BB62E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v17;
}

uint64_t sub_240A73DE0(void (*a1)(long long *), uint64_t a2, uint64_t a3, char a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v70 = a7;
  uint64_t v67 = a6;
  uint64_t v68 = a5;
  sub_240A39304(0, &qword_26AFD7BC0, MEMORY[0x263F44998]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v60 = (uint64_t)&v59 - v11;
  uint64_t v62 = sub_240BB2CF0();
  uint64_t v61 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A39304(0, (unint64_t *)&qword_268C9F2A0, MEMORY[0x263F063B0]);
  MEMORY[0x270FA5388](v14 - 8);
  id v16 = (char *)&v59 - v15;
  uint64_t v17 = sub_240BB28D0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v64 = v17;
  uint64_t v65 = v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v63 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A39304(0, &qword_268C9F2A8, (void (*)(uint64_t))type metadata accessor for AFibBurdenOnboardingDetails);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v59 - v21;
  uint64_t v23 = type metadata accessor for AFibBurdenOnboardingDetails(0);
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  os_log_type_t v66 = (unsigned __int8 *)&v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = swift_allocObject();
  uint64_t v69 = a1;
  *(void *)(v26 + 16) = a1;
  *(void *)(v26 + 24) = a2;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v28 = Strong;
    uint64_t v71 = a2;
    if (a4)
    {
      if (a4 != 1)
      {
        if (a4 == 6)
        {
          sub_240A3466C((void *)(Strong + 56), *(void *)(Strong + 80));
          uint64_t v29 = (void *)swift_allocObject();
          v29[2] = sub_240A761CC;
          void v29[3] = v26;
          v29[4] = v70;
          uint64_t v30 = swift_allocObject();
          *(void *)(v30 + 16) = sub_240A76248;
          *(void *)(v30 + 24) = v29;
          swift_retain();
          swift_retain();
          sub_240BB2FF0();
          swift_release();
          swift_release();
        }
        else
        {
          swift_retain();
          swift_release();
          *(void *)&long long v74 = 0;
          WORD4(v74) = 128;
          v69(&v74);
        }
        return swift_release();
      }
      swift_retain();
      swift_release();
      uint64_t v36 = v68;
      uint64_t v72 = v68;
      uint64_t v73 = v67;
      sub_240A3FD54(0, &qword_268C9F2B0);
      sub_240A3FD54(0, &qword_268C9F2B8);
      id v37 = v36;
      if (swift_dynamicCast())
      {
        sub_240A3466C(&v74, *((uint64_t *)&v75 + 1));
        sub_240AB8768(v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v22, 0, 1, v23);
        _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v74);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) != 1)
        {
          uint64_t v38 = v66;
          sub_240A762F4((uint64_t)v22, (uint64_t)v66);
          sub_240A76358((uint64_t)&v38[*(int *)(v23 + 20)], (uint64_t)v16);
          uint64_t v40 = v64;
          uint64_t v39 = v65;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v16, 1, v64) == 1)
          {
            sub_240A763D8((uint64_t)v38, type metadata accessor for AFibBurdenOnboardingDetails);
            id v41 = (unint64_t *)&qword_268C9F2A0;
            id v42 = (void (*)(uint64_t))MEMORY[0x263F063B0];
            uint64_t v43 = (uint64_t)v16;
LABEL_15:
            sub_240A76438(v43, v41, v42);
LABEL_16:
            *(void *)&long long v74 = 0;
            WORD4(v74) = 128;
            v69(&v74);
            return swift_release();
          }
          uint64_t v45 = v63;
          (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v63, v16, v40);
          int v46 = *v38;
          if (v46 == 2)
          {
            (*(void (**)(char *, uint64_t))(v39 + 8))(v45, v40);
            sub_240A763D8((uint64_t)v38, type metadata accessor for AFibBurdenOnboardingDetails);
            goto LABEL_16;
          }
          uint64_t v47 = (void *)sub_240BB28A0();
          sub_240BB2CE0();
          uint64_t v48 = (void *)sub_240BB2C90();
          (*(void (**)(char *, uint64_t))(v61 + 8))(v13, v62);
          id v49 = objc_msgSend(v47, sel_hk_ageWithCurrentDate_, v48);

          if ((uint64_t)v49 >= *MEMORY[0x263F0AC28])
          {
            if (v46)
            {
              uint64_t v51 = *(void *)(*sub_240A3466C((void *)(v28 + 16), *(void *)(v28 + 40)) + 104);
              uint64_t v52 = v51 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v51 + 16);
              id v53 = (os_unfair_lock_s *)(v51 + ((*(unsigned int *)(*(void *)v51 + 48) + 3) & 0x1FFFFFFFCLL));
              swift_retain();
              os_unfair_lock_lock(v53);
              uint64_t v54 = v60;
              sub_240B9269C(v52, v60);
              os_unfair_lock_unlock(v53);
              swift_release();
              uint64_t v55 = sub_240BB56E0();
              uint64_t v56 = *(void *)(v55 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55) == 1)
              {
                sub_240A76438(v54, &qword_26AFD7BC0, MEMORY[0x263F44998]);
              }
              else
              {
                uint64_t v57 = (void *)sub_240BB56F0();
                (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v54, v55);
                unsigned __int8 v58 = objc_msgSend(v57, sel_isRequirementSatisfiedWithIdentifier_, *MEMORY[0x263F096A0]);

                if ((v58 & 1) == 0)
                {
                  *(void *)&long long v74 = 0;
                  __int16 v50 = 64;
                  goto LABEL_26;
                }
              }
              *(void *)&long long v74 = 0;
              __int16 v50 = 128;
LABEL_26:
              WORD4(v74) = v50;
              v69(&v74);
              swift_release();
              (*(void (**)(char *, uint64_t))(v39 + 8))(v45, v40);
              return sub_240A763D8((uint64_t)v66, type metadata accessor for AFibBurdenOnboardingDetails);
            }
            *(void *)&long long v74 = 3;
          }
          else
          {
            *(void *)&long long v74 = 0;
          }
          __int16 v50 = 2;
          goto LABEL_26;
        }
      }
      else
      {
        uint64_t v76 = 0;
        long long v74 = 0u;
        long long v75 = 0u;
        sub_240A763D8((uint64_t)&v74, (uint64_t (*)(void))sub_240A76288);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v22, 1, 1, v23);
      }
      id v41 = &qword_268C9F2A8;
      id v42 = (void (*)(uint64_t))type metadata accessor for AFibBurdenOnboardingDetails;
      uint64_t v43 = (uint64_t)v22;
      goto LABEL_15;
    }
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = 0;
    sub_240A3466C((void *)(v28 + 16), *(void *)(v28 + 40));
    swift_retain();
    *(void *)&long long v74 = sub_240B93360();
    uint64_t v32 = (void *)swift_allocObject();
    v32[2] = sub_240A761CC;
    _OWORD v32[3] = v26;
    uint64_t v33 = v70;
    v32[4] = v31;
    v32[5] = v33;
    uint64_t v34 = (void *)swift_allocObject();
    v34[2] = v28;
    void v34[3] = sub_240A761CC;
    v34[4] = v26;
    v34[5] = v33;
    sub_240A76564();
    sub_240A76628(&qword_268C9F2D8, (void (*)(uint64_t))sub_240A76564);
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v35 = sub_240BB6340();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_beginAccess();
    *(void *)(v31 + 16) = v35;
    swift_release();
  }
  else
  {
    swift_retain();
  }
  return swift_release();
}

uint64_t sub_240A7489C(void **a1, void (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  unint64_t v5 = *a1;
  if (*a1)
  {
    id v7 = v5;
    uint64_t v8 = (void *)sub_240BB2A40();
    id v9 = objc_msgSend(v8, sel_code);

    if (v9 == (id)109)
    {
      if (qword_26AFD7BF0 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_240BB5990();
      sub_240A395FC(v10, (uint64_t)qword_26AFDEB80);
      uint64_t v11 = sub_240BB5970();
      os_log_type_t v12 = sub_240BB71A0();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        uint64_t v14 = swift_slowAlloc();
        v26[0] = v14;
        *(_DWORD *)uint64_t v13 = 136315138;
        uint64_t v15 = sub_240BB7C80();
        sub_240A38940(v15, v16, v26);
        sub_240BB75F0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240A1B000, v11, v12, "[%s] Location unavailable error encountered, returning cannot proceed with location unavailable", v13, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24560B930](v14, -1, -1);
        MEMORY[0x24560B930](v13, -1, -1);
      }

      uint64_t v17 = 2;
    }
    else
    {
      if (qword_26AFD7BF0 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_240BB5990();
      sub_240A395FC(v18, (uint64_t)qword_26AFDEB80);
      uint64_t v19 = sub_240BB5970();
      os_log_type_t v20 = sub_240BB71A0();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        uint64_t v22 = swift_slowAlloc();
        v26[0] = v22;
        *(_DWORD *)uint64_t v21 = 136315138;
        uint64_t v23 = sub_240BB7C80();
        sub_240A38940(v23, v24, v26);
        sub_240BB75F0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240A1B000, v19, v20, "[%s] Location unavailable error encountered, returning cannot proceed with location unavailable", v21, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24560B930](v22, -1, -1);
        MEMORY[0x24560B930](v21, -1, -1);
      }

      uint64_t v17 = 5;
    }
    a2(v17, 2);
  }
  swift_beginAccess();
  *(void *)(a4 + 16) = 0;
  return swift_release();
}

uint64_t sub_240A74BFC(void **a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4, void *a5)
{
  sub_240A39304(0, &qword_26AFD7BC0, MEMORY[0x263F44998]);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v85 - v14;
  unint64_t v16 = *a1;
  if (objc_msgSend(v16, sel_isEligible))
  {
    v85[1] = a5;
    uint64_t v86 = a3;
    uint64_t v87 = a4;
    uint64_t v17 = *(void *)(a2 + 40);
    v85[0] = (void *)(a2 + 16);
    uint64_t v18 = *(void *)(*sub_240A3466C((void *)(a2 + 16), v17) + 104);
    uint64_t v19 = v18 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v18 + 16);
    os_log_type_t v20 = (os_unfair_lock_s *)(v18 + ((*(unsigned int *)(*(void *)v18 + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v20);
    sub_240B9269C(v19, (uint64_t)v15);
    os_unfair_lock_unlock(v20);
    swift_release();
    uint64_t v21 = sub_240BB56E0();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
    if (v23(v15, 1, v21) == 1)
    {
      sub_240A76438((uint64_t)v15, &qword_26AFD7BC0, MEMORY[0x263F44998]);
    }
    else
    {
      uint64_t v38 = (void *)sub_240BB56F0();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v15, v21);
      unsigned __int8 v39 = objc_msgSend(v38, sel_isRequirementSatisfiedWithIdentifier_, *MEMORY[0x263F09690]);

      if ((v39 & 1) == 0)
      {
        if (qword_26AFD7BF0 != -1) {
          swift_once();
        }
        uint64_t v69 = sub_240BB5990();
        sub_240A395FC(v69, (uint64_t)qword_26AFDEB80);
        uint64_t v70 = sub_240BB5970();
        os_log_type_t v71 = sub_240BB71A0();
        if (os_log_type_enabled(v70, v71))
        {
          uint64_t v72 = (uint8_t *)swift_slowAlloc();
          uint64_t v73 = swift_slowAlloc();
          v89[0] = v73;
          *(_DWORD *)uint64_t v72 = 136315138;
          uint64_t v74 = sub_240BB7C80();
          uint64_t v88 = sub_240A38940(v74, v75, v89);
          sub_240BB75F0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_240A1B000, v70, v71, "[%s] Heart rate disabled, returning cannot proceed", v72, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24560B930](v73, -1, -1);
          MEMORY[0x24560B930](v72, -1, -1);
        }

        uint64_t v76 = v86;
        uint64_t v77 = 1;
        return v76(v77, 2);
      }
    }
    uint64_t v40 = *(void *)(*sub_240A3466C(v85[0], *(void *)(a2 + 40)) + 104);
    uint64_t v41 = v40 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v40 + 16);
    id v42 = (os_unfair_lock_s *)(v40 + ((*(unsigned int *)(*(void *)v40 + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v42);
    sub_240B9269C(v41, (uint64_t)v13);
    os_unfair_lock_unlock(v42);
    swift_release();
    if (v23(v13, 1, v21) == 1)
    {
      sub_240A76438((uint64_t)v13, &qword_26AFD7BC0, MEMORY[0x263F44998]);
LABEL_17:
      if (qword_26AFD7BF0 != -1) {
        swift_once();
      }
      uint64_t v59 = sub_240BB5990();
      sub_240A395FC(v59, (uint64_t)qword_26AFDEB80);
      uint64_t v60 = sub_240BB5970();
      os_log_type_t v61 = sub_240BB71A0();
      if (os_log_type_enabled(v60, v61))
      {
        uint64_t v62 = (uint8_t *)swift_slowAlloc();
        uint64_t v63 = swift_slowAlloc();
        v89[0] = v63;
        *(_DWORD *)uint64_t v62 = 136315138;
        uint64_t v64 = sub_240BB7C80();
        uint64_t v88 = sub_240A38940(v64, v65, v89);
        sub_240BB75F0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240A1B000, v60, v61, "[%s] Determined can proceed", v62, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24560B930](v63, -1, -1);
        MEMORY[0x24560B930](v62, -1, -1);
      }

      return v86(0, 128);
    }
    uint64_t v57 = (void *)sub_240BB56F0();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v21);
    unsigned __int8 v58 = objc_msgSend(v57, sel_isRequirementSatisfiedWithIdentifier_, *MEMORY[0x263F09720]);

    if (v58) {
      goto LABEL_17;
    }
    if (qword_26AFD7BF0 != -1) {
      swift_once();
    }
    uint64_t v78 = sub_240BB5990();
    sub_240A395FC(v78, (uint64_t)qword_26AFDEB80);
    uint64_t v79 = sub_240BB5970();
    os_log_type_t v80 = sub_240BB71A0();
    if (os_log_type_enabled(v79, v80))
    {
      unint64_t v81 = (uint8_t *)swift_slowAlloc();
      uint64_t v82 = swift_slowAlloc();
      v89[0] = v82;
      *(_DWORD *)unint64_t v81 = 136315138;
      uint64_t v83 = sub_240BB7C80();
      uint64_t v88 = sub_240A38940(v83, v84, v89);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v79, v80, "[%s] Wrist detect disabled, returning cannot proceed", v81, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v82, -1, -1);
      MEMORY[0x24560B930](v81, -1, -1);
    }

    uint64_t v76 = v86;
    uint64_t v77 = 6;
    return v76(v77, 2);
  }
  unint64_t v24 = &off_2650DD000;
  if (((unint64_t)objc_msgSend(v16, sel_ineligibilityReasons) & 0x39) != 0)
  {
    if (qword_26AFD7BF0 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_240BB5990();
    sub_240A395FC(v25, (uint64_t)qword_26AFDEB80);
    id v26 = v16;
    uint64_t v27 = sub_240BB5970();
    os_log_type_t v28 = sub_240BB71A0();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      v89[0] = v30;
      *(_DWORD *)uint64_t v29 = 136315394;
      uint64_t v31 = sub_240BB7C80();
      uint64_t v86 = a3;
      uint64_t v88 = sub_240A38940(v31, v32, v89);
      uint64_t v87 = a4;
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2080;
      id v33 = objc_msgSend(v26, sel_ineligibilityReasonsDescription);
      uint64_t v34 = sub_240BB6DE0();
      unint64_t v36 = v35;

      a3 = v86;
      uint64_t v88 = sub_240A38940(v34, v36, v89);
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v27, v28, "[%s] Cannot proceed due to location based onboarding ineligibility (%s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v30, -1, -1);
      uint64_t v37 = v29;
      unint64_t v24 = &off_2650DD000;
      MEMORY[0x24560B930](v37, -1, -1);
    }
    else
    {
    }
    id v67 = [v26 (SEL)v24[195]];
    uint64_t v68 = 1;
  }
  else
  {
    if (qword_26AFD7BF0 != -1) {
      swift_once();
    }
    uint64_t v43 = sub_240BB5990();
    sub_240A395FC(v43, (uint64_t)qword_26AFDEB80);
    id v44 = v16;
    uint64_t v45 = sub_240BB5970();
    os_log_type_t v46 = sub_240BB71A0();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = swift_slowAlloc();
      uint64_t v86 = (uint64_t (*)(uint64_t, uint64_t))swift_slowAlloc();
      v89[0] = (uint64_t)v86;
      *(_DWORD *)uint64_t v47 = 136315394;
      uint64_t v48 = sub_240BB7C80();
      uint64_t v87 = a4;
      uint64_t v88 = sub_240A38940(v48, v49, v89);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 12) = 2080;
      id v50 = objc_msgSend(v44, sel_ineligibilityReasonsDescription);
      uint64_t v51 = sub_240BB6DE0();
      uint64_t v52 = a3;
      unint64_t v54 = v53;

      uint64_t v88 = sub_240A38940(v51, v54, v89);
      sub_240BB75F0();

      a3 = v52;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v45, v46, "[%s] Cannot proceed due to generic onboarding ineligibility (%s", (uint8_t *)v47, 0x16u);
      uint64_t v55 = v86;
      swift_arrayDestroy();
      MEMORY[0x24560B930](v55, -1, -1);
      uint64_t v56 = v47;
      unint64_t v24 = &off_2650DD000;
      MEMORY[0x24560B930](v56, -1, -1);
    }
    else
    {
    }
    id v67 = [v44 (SEL)v24[195]];
    uint64_t v68 = 0;
  }
  return a3((uint64_t)v67, v68);
}

uint64_t sub_240A757A8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  if (a1 == 1)
  {
    uint64_t v10 = 64;
  }
  else
  {
    if (a1 != 2)
    {
      if (qword_26AFD7BF0 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_240BB5990();
      sub_240A395FC(v3, (uint64_t)qword_26AFDEB80);
      uint64_t v4 = sub_240BB5970();
      os_log_type_t v5 = sub_240BB7190();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = swift_slowAlloc();
        uint64_t v7 = swift_slowAlloc();
        uint64_t v12 = v7;
        *(_DWORD *)uint64_t v6 = 136315394;
        uint64_t v8 = sub_240BB7C80();
        sub_240A38940(v8, v9, &v12);
        sub_240BB75F0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v6 + 12) = 2048;
        sub_240BB75F0();
        _os_log_impl(&dword_240A1B000, v4, v5, "[%s] User encountered notification authorization status other than authorized or denied (%ld), proceeding", (uint8_t *)v6, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24560B930](v7, -1, -1);
        MEMORY[0x24560B930](v6, -1, -1);
      }
    }
    a1 = 0;
    uint64_t v10 = 128;
  }
  return a2(a1, v10);
}

uint64_t sub_240A75984()
{
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 16);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 56);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AFibBurdenOnboardingModel()
{
  return self;
}

uint64_t getEnumTagSinglePayload for AFibBurdenOnboardingStage(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AFibBurdenOnboardingStage(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240A75B44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

unsigned char *sub_240A75B6C(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenOnboardingStage()
{
  return &type metadata for AFibBurdenOnboardingStage;
}

uint64_t initializeWithTake for AFibBurdenPDFChartVerticalAxisProvider.AxisStyle(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for AFibBurdenPDFChartVerticalAxisProvider.AxisStyle(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AFibBurdenPDFChartVerticalAxisProvider.AxisStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_240A75C24(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_240A75C3C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)unint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenOnboardingCannotProgressReason()
{
  return &type metadata for AFibBurdenOnboardingCannotProgressReason;
}

uint64_t sub_240A75C64()
{
  return sub_240A76628(&qword_268C9F268, (void (*)(uint64_t))sub_240A75CAC);
}

void sub_240A75CAC()
{
  if (!qword_268C9F270)
  {
    unint64_t v0 = sub_240BB6F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9F270);
    }
  }
}

unint64_t sub_240A75D08()
{
  unint64_t result = qword_268C9F278;
  if (!qword_268C9F278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F278);
  }
  return result;
}

BOOL sub_240A75D5C(uint64_t a1, unsigned __int8 a2, uint64_t a3, unsigned __int8 a4)
{
  if (a2 >> 6)
  {
    if (a2 >> 6 == 1)
    {
      if ((a4 & 0xC0) == 0x40) {
        return ((a3 ^ a1) & 1) == 0;
      }
    }
    else if ((a4 & 0xC0) == 0x80 && !a3 && a4 == 128)
    {
      return 1;
    }
    return 0;
  }
  if (a4 > 0x3Fu) {
    return 0;
  }
  if (!a2) {
    return !a4 && a1 == a3;
  }
  if (a2 == 1) {
    return a4 == 1 && a1 == a3;
  }
  switch(a1)
  {
    case 1:
      if (a4 != 2 || a3 != 1) {
        return 0;
      }
      BOOL result = 1;
      break;
    case 2:
      if (a4 != 2 || a3 != 2) {
        return 0;
      }
      BOOL result = 1;
      break;
    case 3:
      if (a4 != 2 || a3 != 3) {
        return 0;
      }
      BOOL result = 1;
      break;
    case 4:
      if (a4 != 2 || a3 != 4) {
        return 0;
      }
      BOOL result = 1;
      break;
    case 5:
      if (a4 != 2 || a3 != 5) {
        return 0;
      }
      BOOL result = 1;
      break;
    case 6:
      if (a4 != 2 || a3 != 6) {
        return 0;
      }
      BOOL result = 1;
      break;
    default:
      if (a4 != 2 || a3) {
        return 0;
      }
      BOOL result = 1;
      break;
  }
  return result;
}

uint64_t sub_240A75EDC(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if (!a2)
  {
    if (!a4) {
      return a1 == a3;
    }
    return 0;
  }
  if (a2 == 1)
  {
    if (a4 == 1) {
      return a1 == a3;
    }
    return 0;
  }
  switch(a1)
  {
    case 1:
      if (a4 != 2 || a3 != 1) {
        return 0;
      }
      break;
    case 2:
      if (a4 != 2 || a3 != 2) {
        return 0;
      }
      break;
    case 3:
      if (a4 != 2 || a3 != 3) {
        return 0;
      }
      break;
    case 4:
      if (a4 != 2 || a3 != 4) {
        return 0;
      }
      break;
    case 5:
      if (a4 != 2 || a3 != 5) {
        return 0;
      }
      break;
    case 6:
      if (a4 != 2 || a3 != 6) {
        return 0;
      }
      break;
    default:
      if (a4 != 2 || a3) {
        return 0;
      }
      break;
  }
  return 1;
}

void sub_240A76000()
{
  if (!qword_268C9F280)
  {
    sub_240A76094();
    sub_240A76628(&qword_268C9F290, (void (*)(uint64_t))sub_240A76094);
    unint64_t v0 = sub_240BB6250();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9F280);
    }
  }
}

void sub_240A76094()
{
  if (!qword_268C9F288)
  {
    unint64_t v0 = sub_240BB6220();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9F288);
    }
  }
}

uint64_t sub_240A760FC()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240A76134()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_240A76174(void (*a1)(long long *), uint64_t a2)
{
  return sub_240A73DE0(a1, a2, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_240A76188@<X0>(void *a1@<X8>)
{
  *a1 = v1;
  return swift_retain();
}

uint64_t sub_240A76194()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240A761CC(uint64_t a1, __int16 a2)
{
  unsigned int v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  __int16 v6 = a2 & 0x1FF;
  return v3(&v5);
}

uint64_t sub_240A76210()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_240A76248(uint64_t a1)
{
  return sub_240A757A8(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16));
}

uint64_t sub_240A76254(void *a1)
{
  return (*(uint64_t (**)(id))(v1 + 16))(objc_msgSend(a1, sel_authorizationStatus));
}

void sub_240A76288()
{
  if (!qword_268C9F2C0)
  {
    sub_240A3FD54(255, &qword_268C9F2B8);
    unint64_t v0 = sub_240BB75E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9F2C0);
    }
  }
}

uint64_t sub_240A762F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AFibBurdenOnboardingDetails(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_240A76358(uint64_t a1, uint64_t a2)
{
  sub_240A39304(0, (unint64_t *)&qword_268C9F2A0, MEMORY[0x263F063B0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240A763D8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_240A76438(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_240A39304(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_240A76494()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240A764CC()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_240A7650C(void **a1)
{
  return sub_240A7489C(a1, *(void (**)(uint64_t, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_240A76518()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_240A76558(void **a1)
{
  return sub_240A74BFC(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t, uint64_t))(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

void sub_240A76564()
{
  if (!qword_268C9F2C8)
  {
    sub_240A765E8();
    sub_240A3FD54(255, (unint64_t *)&qword_26AFD99E0);
    unint64_t v0 = sub_240BB6100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9F2C8);
    }
  }
}

unint64_t sub_240A765E8()
{
  unint64_t result = qword_268C9F2D0;
  if (!qword_268C9F2D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268C9F2D0);
  }
  return result;
}

uint64_t sub_240A76628(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AFibBurdenOnboardingProgressionState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3E && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 62);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 8) & 0x3C | (*(unsigned __int8 *)(a1 + 8) >> 6)) ^ 0x3F;
  if (v3 >= 0x3D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for AFibBurdenOnboardingProgressionState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3D)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 62;
    if (a3 >= 0x3E) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3E) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(unsigned char *)(result + 8) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_240A76714(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 8);
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 6;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_240A76734(uint64_t result)
{
  *(unsigned char *)(result + 8) &= 0x3Fu;
  return result;
}

uint64_t sub_240A76744(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(unsigned char *)(result + 8) = *(unsigned char *)(result + 8) & 3 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(void *)uint64_t result = a2 - 2;
    *(unsigned char *)(result + 8) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenOnboardingProgressionState()
{
  return &type metadata for AFibBurdenOnboardingProgressionState;
}

uint64_t getEnumTagSinglePayload for AFibBurdenOnboardingWarningReason(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AFibBurdenOnboardingWarningReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240A768DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_240A76904(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenOnboardingWarningReason()
{
  return &type metadata for AFibBurdenOnboardingWarningReason;
}

unint64_t sub_240A76924()
{
  unint64_t result = qword_268C9F2E0;
  if (!qword_268C9F2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F2E0);
  }
  return result;
}

id sub_240A7697C(uint64_t a1)
{
  id v2 = objc_msgSend(self, sel_sharedInstanceForHealthStore_, a1);
  if (!v2) {
    return 0;
  }
  int v3 = v2;
  unsigned int v4 = (void *)sub_240BB70C0();
  id v5 = objc_msgSend(v3, sel_displayTypeWithIdentifier_, v4);

  if (!v5)
  {

    return 0;
  }
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46908]), sel_initWithDisplayType_healthStore_shouldEmbedInScrollView_, v5, a1, 0);

  return v6;
}

id sub_240A76A44@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(a1, sel_profileIdentifier);
  id v4 = objc_msgSend(v3, sel_type);

  if (v4 == (id)1)
  {
    sub_240A78190();
    id v6 = (void (**)(void *))((char *)a2 + *(int *)(v5 + 64));
    if (qword_26AFDA090 != -1) {
      swift_once();
    }
    *a2 = sub_240BB2980();
    a2[1] = v7;
    a2[2] = sub_240BB2980();
    a2[3] = v8;
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a1;
    char *v6 = sub_240A7835C;
    v6[1] = (void (*)(void *))v9;
    uint64_t v10 = *MEMORY[0x263F42A68];
    uint64_t v11 = sub_240BB34E0();
    (*(void (**)(void (**)(void *), uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v6, v10, v11);
    uint64_t v12 = *MEMORY[0x263F42A98];
    uint64_t v13 = sub_240BB34F0();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(a2, v12, v13);
    return a1;
  }
  else
  {
    if (qword_26AFDA090 != -1) {
      swift_once();
    }
    *a2 = sub_240BB2980();
    a2[1] = v15;
    *((unsigned char *)a2 + 16) = 0;
    uint64_t v16 = *MEMORY[0x263F42AE0];
    uint64_t v17 = sub_240BB34F0();
    uint64_t v18 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104);
    return (id)v18(a2, v16, v17);
  }
}

void sub_240A76D54(void *a1, void *a2)
{
  id v3 = a2;
  sub_240BB7240();
  id v4 = objc_allocWithZone((Class)sub_240BB5570());
  id v7 = (id)sub_240BB5560();
  objc_msgSend(v7, sel_setAccessType_, 1);
  id v5 = objc_msgSend(a1, sel_navigationController);
  if (v5)
  {
    id v6 = v5;
    objc_msgSend(v5, sel_pushViewController_animated_, v7, 1);
  }
}

void sub_240A76E14(void *a1)
{
  uint64_t v2 = sub_240BB34F0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v119 = (char *)v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  unint64_t v117 = (char *)v105 - v6;
  sub_240A77E3C(0, &qword_26AFD7B70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v108 = (char *)v105 - v8;
  sub_240A77E08(0);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v120 = (uint64_t)v105 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v105 - v17;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v19((char *)v105 - v17, 1, 1, v2);
  uint64_t v106 = a1;
  id v20 = sub_240A7697C((uint64_t)a1);
  if (v20)
  {
    id v21 = v20;
    sub_240A782C8((uint64_t)v18);
    *(void *)uint64_t v18 = v21;
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v18, *MEMORY[0x263F42A50], v2);
    v19(v18, 0, 1, v2);
  }
  os_log_type_t v107 = v18;
  uint64_t v113 = v19;
  uint64_t v109 = v3 + 56;
  uint64_t v122 = v2;
  sub_240A77E3C(0, &qword_268C9F2F0, (uint64_t (*)(uint64_t))sub_240A77E08, MEMORY[0x263F8E0F8]);
  unint64_t v22 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v121 = *(void *)(v11 + 72);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_240BBBDC0;
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v24 = (id)qword_26AFDECD8;
  uint64_t v25 = (void *)sub_240BB6DA0();
  id v26 = objc_msgSend(self, sel_imageNamed_inBundle_, v25, v24);

  if (!v26)
  {
    __break(1u);
    goto LABEL_18;
  }
  v105[0] = v23;
  v105[1] = v10;
  unint64_t v27 = v23 + v22;
  *(void *)unint64_t v27 = v26;
  *(unsigned char *)(v27 + 8) = 0;
  uint64_t v28 = *MEMORY[0x263F42AB8];
  uint64_t v118 = v3;
  uint64_t v30 = v3 + 104;
  uint64_t v29 = *(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 104);
  uint64_t v31 = v122;
  v29(v27, v28, v122);
  id v112 = v29;
  unint64_t v32 = v113;
  v113((char *)v27, 0, 1, v31);
  id v33 = (uint64_t *)(v27 + v121);
  uint64_t v34 = v121;
  unint64_t v116 = 0x8000000240BC9DE0;
  *id v33 = sub_240BB2980();
  v33[1] = v35;
  v29((unint64_t)v33, *MEMORY[0x263F42AC0], v31);
  v32((char *)v33, 0, 1, v31);
  unint64_t v36 = v27 + 2 * v34;
  *(void *)unint64_t v36 = sub_240BB2980();
  *(void *)(v36 + 8) = v37;
  *(unsigned char *)(v36 + 16) = 0;
  uint64_t v38 = *MEMORY[0x263F42AE0];
  v112(v36, v38, v31);
  v113((char *)v36, 0, 1, v31);
  unint64_t v39 = v27 + 2 * v34 + v121;
  *(void *)unint64_t v39 = sub_240BB2980();
  *(void *)(v39 + 8) = v40;
  *(unsigned char *)(v39 + 16) = 0;
  unsigned int v110 = v38;
  uint64_t v114 = v30;
  v112(v39, v38, v31);
  v113((char *)v39, 0, 1, v31);
  uint64_t v41 = v121;
  uint64_t v115 = v27;
  id v42 = (uint64_t *)(v27 + 4 * v121);
  unint64_t v111 = 0xD000000000000013;
  *id v42 = sub_240BB2980();
  v42[1] = v43;
  void v42[2] = sub_240BB2980();
  v42[3] = v44;
  uint64_t v45 = v108;
  sub_240BB2B10();
  uint64_t v46 = sub_240BB2B20();
  uint64_t v47 = *(void *)(v46 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46) == 1)
  {
LABEL_18:
    __break(1u);
    return;
  }
  sub_240A78190();
  unint64_t v49 = (char *)v42 + *(int *)(v48 + 64);
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v49, v45, v46);
  uint64_t v50 = *MEMORY[0x263F42A70];
  uint64_t v51 = sub_240BB34E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 104))(v49, v50, v51);
  uint64_t v52 = v112;
  v112((unint64_t)v42, *MEMORY[0x263F42A98], v31);
  unint64_t v53 = v113;
  v113((char *)v42, 0, 1, v31);
  unint64_t v54 = (uint64_t *)(v115 + 5 * v41);
  uint64_t *v54 = sub_240BB2980();
  v54[1] = v55;
  long long v54[2] = 0;
  LODWORD(v108) = *MEMORY[0x263F42A80];
  uint64_t v56 = v108;
  v52((unint64_t)v54, v108, v31);
  v53((char *)v54, 0, 1, v31);
  uint64_t v57 = v115;
  sub_240A78200((uint64_t)v107, v115 + 6 * v41);
  uint64_t v58 = 8 * v41;
  uint64_t v59 = (uint64_t *)(v57 + 7 * v41);
  uint64_t v60 = v57;
  *uint64_t v59 = sub_240BB2980();
  v59[1] = v61;
  v59[2] = 0;
  v52((unint64_t)v59, v56, v31);
  v53((char *)v59, 0, 1, v31);
  uint64_t v62 = v57 + v58;
  *(void *)uint64_t v62 = sub_240BB2980();
  *(void *)(v62 + 8) = v63;
  *(unsigned char *)(v62 + 16) = 0;
  v52(v57 + v58, v110, v31);
  v53((char *)(v57 + v58), 0, 1, v31);
  uint64_t v64 = v121;
  sub_240A76A44(v106, (uint64_t *)(v60 + v58 + v121));
  v53((char *)(v60 + v58 + v64), 0, 1, v31);
  unint64_t v65 = (uint64_t *)(v60 + 10 * v64);
  uint64_t v66 = v64;
  uint64_t *v65 = sub_240BB2980();
  v65[1] = v67;
  v65[2] = 0;
  uint64_t v68 = v112;
  v112((unint64_t)v65, v108, v31);
  v53((char *)v65, 0, 1, v31);
  uint64_t v69 = v115 + 11 * v66;
  *(void *)uint64_t v69 = sub_240BB2980();
  *(void *)(v69 + 8) = v70;
  *(unsigned char *)(v69 + 16) = 0;
  v68(v69, v110, v31);
  v53((char *)v69, 0, 1, v31);
  uint64_t v71 = v66;
  uint64_t v72 = (uint64_t *)(v115 + 12 * v66);
  uint64_t v73 = v115;
  *uint64_t v72 = sub_240BB2980();
  v72[1] = v74;
  v72[2] = 0;
  v68((unint64_t)v72, v108, v31);
  unint64_t v75 = v113;
  v113((char *)v72, 0, 1, v31);
  uint64_t v76 = v73 + 13 * v71;
  *(void *)uint64_t v76 = sub_240BB2980();
  *(void *)(v76 + 8) = v77;
  *(unsigned char *)(v76 + 16) = 0;
  uint64_t v78 = v112;
  v112(v76, v110, v31);
  v75((char *)v76, 0, 1, v31);
  uint64_t v79 = (uint64_t *)(v115 + 14 * v71);
  uint64_t v80 = v115;
  uint64_t *v79 = sub_240BB2980();
  v79[1] = v81;
  v79[2] = 0;
  v78((unint64_t)v79, v108, v31);
  uint64_t v82 = (void (*)(uint64_t, uint64_t, uint64_t))v78;
  uint64_t v83 = v75;
  v75((char *)v79, 0, 1, v31);
  uint64_t v84 = 16 * v121;
  uint64_t v85 = v80 + 15 * v121;
  *(void *)uint64_t v85 = sub_240BB2980();
  *(void *)(v85 + 8) = v86;
  *(unsigned char *)(v85 + 16) = 0;
  uint64_t v87 = v110;
  v82(v85, v110, v31);
  uint64_t v88 = v82;
  v83((char *)v85, 0, 1, v31);
  uint64_t v89 = v115;
  uint64_t v90 = v115 + v84;
  *(void *)uint64_t v90 = sub_240BB2980();
  *(void *)(v90 + 8) = v91;
  *(unsigned char *)(v90 + 16) = 0;
  v88(v89 + v84, v87, v31);
  v83((char *)(v89 + v84), 0, 1, v31);
  uint64_t v92 = v119;
  uint64_t v93 = (unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48);
  char v94 = (void (**)(char *))(v118 + 32);
  unint64_t v95 = MEMORY[0x263F8EE78];
  uint64_t v96 = 17;
  do
  {
    uint64_t v97 = v120;
    sub_240A78200(v89, v120);
    sub_240A78264(v97, (uint64_t)v14);
    if ((*v93)(v14, 1, v31) == 1)
    {
      sub_240A782C8((uint64_t)v14);
    }
    else
    {
      uint64_t v98 = v14;
      char v99 = *v94;
      uint64_t v100 = v117;
      unsigned __int8 v101 = v98;
      (*v94)(v117);
      ((void (*)(char *, char *, uint64_t))v99)(v119, v100, v122);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v95 = sub_240A429C4(0, *(void *)(v95 + 16) + 1, 1, v95);
      }
      unint64_t v103 = *(void *)(v95 + 16);
      unint64_t v102 = *(void *)(v95 + 24);
      if (v103 >= v102 >> 1) {
        unint64_t v95 = sub_240A429C4(v102 > 1, v103 + 1, 1, v95);
      }
      *(void *)(v95 + 16) = v103 + 1;
      unint64_t v104 = v95
           + ((*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80))
           + *(void *)(v118 + 72) * v103;
      uint64_t v31 = v122;
      ((void (*)(unint64_t, char *, uint64_t))v99)(v104, v92, v122);
      uint64_t v14 = v101;
    }
    v89 += v121;
    --v96;
  }
  while (v96);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_240A782C8((uint64_t)v107);
}

void sub_240A77E08(uint64_t a1)
{
}

void sub_240A77E3C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_240A77EA0()
{
  sub_240A76E14(*v0);
}

unint64_t sub_240A77EA8()
{
  return 0xD000000000000030;
}

uint64_t sub_240A77EC4()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  return sub_240BB2980();
}

uint64_t sub_240A77F60()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  return sub_240BB2980();
}

uint64_t sub_240A78004()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  return sub_240BB2980();
}

void sub_240A780A4()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v0 = (id)qword_26AFDECD8;
  unsigned int v1 = (void *)sub_240BB6DA0();
  id v2 = objc_msgSend(self, sel_imageNamed_inBundle_, v1, v0);

  if (!v2) {
    __break(1u);
  }
}

unint64_t sub_240A7816C()
{
  return 0xD000000000000014;
}

void sub_240A78190()
{
  if (!qword_268C9F2F8)
  {
    sub_240BB34E0();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268C9F2F8);
    }
  }
}

uint64_t sub_240A78200(uint64_t a1, uint64_t a2)
{
  sub_240A77E08(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240A78264(uint64_t a1, uint64_t a2)
{
  sub_240A77E08(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_240A782C8(uint64_t a1)
{
  sub_240A77E08(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240A78324()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_240A7835C(void *a1)
{
  sub_240A76D54(a1, *(void **)(v1 + 16));
}

ValueMetadata *type metadata accessor for CardioFitnessOverviewArticleDataProvider()
{
  return &type metadata for CardioFitnessOverviewArticleDataProvider;
}

uint64_t sub_240A78374()
{
  sub_240A34E00();
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240BBB440;
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
  *(void *)(inited + 32) = MEMORY[0x24560A470]((id)*MEMORY[0x263F09F20]);
  *(void *)(inited + 40) = MEMORY[0x24560A470]((id)*MEMORY[0x263F09E38]);
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9940);
  *(void *)(inited + 48) = MEMORY[0x24560A460]((id)*MEMORY[0x263F09360]);
  sub_240BB6F30();
  uint64_t v1 = sub_240B8F7D8(inited);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t type metadata accessor for HighHeartRateNotificationsFeatureStatusActionHandler()
{
  uint64_t result = qword_26AFD7C28;
  if (!qword_26AFD7C28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240A784AC()
{
  return swift_initClassMetadata2();
}

void sub_240A784EC()
{
  uint64_t ObjectType = swift_getObjectType();
  sub_240A5C00C(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v51 = (char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_240BB3660();
  uint64_t v56 = *(void *)(v3 - 8);
  uint64_t v57 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_240BB3B20();
  uint64_t v6 = *(void *)(v54 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v54);
  unint64_t v53 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v55 = (char *)&v50 - v9;
  uint64_t v10 = sub_240BB4EC0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB5250();
  sub_240BB50E0();
  uint64_t v14 = (void (*)(uint64_t))MEMORY[0x263F44600];
  sub_240A78F34(&qword_268C9EFA0, MEMORY[0x263F44600]);
  sub_240A78F34(&qword_268C9FAB0, v14);
  sub_240BB4EB0();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v11 + 8);
  v15(v13, v10);
  if (!v58[0])
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_240BB5990();
    sub_240A395FC(v32, (uint64_t)qword_26AFDEC70);
    uint64_t v28 = sub_240BB5970();
    os_log_type_t v33 = sub_240BB7190();
    if (os_log_type_enabled(v28, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      v58[0] = v35;
      *(_DWORD *)uint64_t v34 = 136315138;
      uint64_t v36 = sub_240BB7C80();
      v58[5] = sub_240A38940(v36, v37, v58);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v28, v33, "[%s] Could not access action handler user data!", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v35, -1, -1);
      MEMORY[0x24560B930](v34, -1, -1);
    }
LABEL_15:

    return;
  }
  uint64_t v50 = ObjectType;
  uint64_t v52 = v6;
  sub_240BB5250();
  sub_240BB4E90();
  v15(v13, v10);
  sub_240A3466C(v58, v58[3]);
  uint64_t v16 = (void *)sub_240BB4E10();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v58);
  sub_240BB5250();
  uint64_t v17 = (void *)sub_240BB4EA0();
  v15(v13, v10);
  sub_240BB5250();
  uint64_t v18 = v55;
  sub_240BB36F0();
  v15(v13, v10);
  sub_240BB50B0();
  uint64_t v20 = v56;
  uint64_t v19 = v57;
  int v21 = (*(uint64_t (**)(char *, uint64_t))(v56 + 88))(v5, v57);
  unint64_t v22 = v18;
  if (v21 == *MEMORY[0x263F435C8])
  {
    uint64_t v23 = v16;
    uint64_t v24 = v52;
    uint64_t v25 = (uint64_t)v53;
    uint64_t v26 = v54;
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v53, v22, v54);
    id v27 = objc_allocWithZone((Class)type metadata accessor for TachycardiaSettingsViewController(0));
    uint64_t v28 = v23;
    id v29 = sub_240A9D0D4(v28, v25);

    id v30 = objc_msgSend(v17, sel_navigationController);
    if (v30)
    {
      uint64_t v31 = v30;
      objc_msgSend(v30, sel_pushViewController_animated_, v29, 1);

      swift_release();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v26);
      return;
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v26);

    swift_release();
    goto LABEL_15;
  }
  uint64_t v38 = v16;
  uint64_t v39 = v52;
  if (v21 == *MEMORY[0x263F435D0])
  {
    uint64_t v40 = (uint64_t)v53;
    uint64_t v41 = v54;
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v53, v22, v54);
    id v42 = objc_allocWithZone((Class)type metadata accessor for TachycardiaSettingsViewController(0));
    id v43 = v38;
    id v44 = sub_240A9D0D4(v43, v40);

    sub_240AF396C();
    id v45 = v44;
    sub_240BB4E50();

    id v46 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v45);
    objc_msgSend(v17, sel_presentViewController_animated_completion_, v46, 1, 0);

    swift_release();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v22, v41);
  }
  else if (v21 == *MEMORY[0x263F435C0] || v21 == *MEMORY[0x263F435B8])
  {
    uint64_t v47 = (uint64_t)v51;
    sub_240BB50D0();
    uint64_t v48 = sub_240BB2B20();
    uint64_t v49 = *(void *)(v48 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48) == 1)
    {
      (*(void (**)(char *, uint64_t))(v52 + 8))(v18, v54);
      swift_release();

      sub_240A64C2C(v47);
    }
    else
    {
      sub_240BB2AE0();

      swift_release();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v18, v54);
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v47, v48);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v52 + 8))(v18, v54);
    swift_release();

    (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v19);
  }
}

uint64_t sub_240A78D60(uint64_t a1)
{
  uint64_t v3 = sub_240BB4EC0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_allocWithZone(v1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t v8 = sub_240BB5260();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v8;
}

id sub_240A78E60()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HighHeartRateNotificationsFeatureStatusActionHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240A78E98()
{
  return type metadata accessor for HighHeartRateNotificationsFeatureStatusActionHandler();
}

uint64_t sub_240A78EA0()
{
  return sub_240A78F34((unint64_t *)&unk_26AFD7BB0, MEMORY[0x263F445D8]);
}

uint64_t sub_240A78EE8()
{
  return sub_240A78F34(&qword_26AFD7C20, (void (*)(uint64_t))type metadata accessor for HighHeartRateNotificationsFeatureStatusActionHandler);
}

uint64_t sub_240A78F34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for AFibBurdenOnboardingGetStartedViewController()
{
  uint64_t result = qword_268C9F318;
  if (!qword_268C9F318) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240A78FC8()
{
  return swift_initClassMetadata2();
}

id sub_240A7902C()
{
  *(void *)&v0[qword_268C9F300 + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[qword_268C9F310] = 0;
  type metadata accessor for AFibBurdenGetStartedDataSource(0);
  swift_allocObject();
  uint64_t v1 = v0;
  *(void *)&v1[qword_268C9F308] = sub_240AB8A38();

  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  sub_240BB2980();
  sub_240BB2980();
  swift_retain();
  objc_super v2 = (void *)sub_240BB4E80();
  sub_240A79BD0();
  id v3 = v2;
  swift_retain();
  sub_240BB51A0();
  swift_release();

  return v3;
}

void sub_240A79220()
{
  sub_240A79AB4();
  MEMORY[0x270FA5388](v1 - 8);
  id v3 = &v24[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for AFibBurdenOnboardingDetails(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  id v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v24[-v8];
  StartedViewController = (objc_class *)type metadata accessor for AFibBurdenOnboardingGetStartedViewController();
  v26.receiver = v0;
  v26.super_class = StartedViewController;
  objc_msgSendSuper2(&v26, sel_viewDidLoad);
  objc_msgSend(v0, sel_hxui_addCancelButton);
  strcpy(v25, "ContinueButton");
  v25[15] = -18;
  sub_240A57608();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_240BBAE40;
  *(void *)(v11 + 32) = 0xD000000000000014;
  *(void *)(v11 + 40) = 0x8000000240BCA120;
  *(void *)(v11 + 48) = 0x7472617453746547;
  *(void *)(v11 + 56) = 0xEA00000000006465;
  uint64_t v12 = (char *)sub_240A42A0C((void *)1, 3, 1, (void *)v11);
  *((void *)v12 + 2) = 3;
  strcpy(v12 + 64, "ContinueButton");
  v12[79] = -18;
  uint64_t v13 = (void *)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  id v14 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v14)
  {
    sub_240BB6DE0();

    swift_arrayDestroy();
    uint64_t v15 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(v0, sel_hxui_addContinueButtonWithAccessibilityIdentifier_, v15);

    uint64_t v17 = qword_268C9F310;
    uint64_t v18 = *(void **)&v0[qword_268C9F310];
    *(void *)&v0[qword_268C9F310] = v16;

    uint64_t v19 = *(void **)&v0[v17];
    if (v19)
    {
      id v20 = v19;
      sub_240AB8768(v9);
      int v21 = *v9;
      sub_240A79B70((uint64_t)v9, type metadata accessor for AFibBurdenOnboardingDetails);
      if (v21 == 2)
      {
        BOOL v22 = 0;
      }
      else
      {
        sub_240AB8768(v7);
        sub_240A79B0C((uint64_t)&v7[*(int *)(v4 + 20)], (uint64_t)v3);
        uint64_t v23 = sub_240BB28D0();
        BOOL v22 = (*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v3, 1, v23) != 1;
        sub_240A79B70((uint64_t)v3, (uint64_t (*)(void))sub_240A79AB4);
      }
      objc_msgSend(v20, sel_setEnabled_, v22);
    }
  }
  else
  {
    swift_arrayDestroy();
    __break(1u);
  }
}

void sub_240A79590(void *a1)
{
  id v1 = a1;
  sub_240A79220();
}

uint64_t sub_240A795D8(char *a1)
{
  uint64_t v2 = &a1[qword_268C9F300];
  uint64_t result = MEMORY[0x24560BA20](&a1[qword_268C9F300]);
  if (result)
  {
    uint64_t v4 = *((void *)v2 + 1);
    swift_getObjectType();
    uint64_t v5 = *(void (**)(void))(v4 + 8);
    uint64_t v6 = a1;
    v5();

    return sub_240BB50A0();
  }
  return result;
}

uint64_t sub_240A79688(char *a1)
{
  uint64_t v2 = &a1[qword_268C9F300];
  uint64_t result = MEMORY[0x24560BA20](&a1[qword_268C9F300]);
  if (result)
  {
    uint64_t v4 = *((void *)v2 + 1);
    swift_getObjectType();
    uint64_t v5 = *(void (**)(void))(v4 + 16);
    uint64_t v6 = a1;
    v5();

    return sub_240BB50A0();
  }
  return result;
}

void sub_240A79738()
{
}

void sub_240A79768()
{
  sub_240A484BC(v0 + qword_268C9F300);
  swift_release();
  id v1 = *(void **)(v0 + qword_268C9F310);
}

id sub_240A797B8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenOnboardingGetStartedViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_240A797F0(uint64_t a1)
{
  sub_240A484BC(a1 + qword_268C9F300);
  swift_release();
  objc_super v2 = *(void **)(a1 + qword_268C9F310);
}

uint64_t sub_240A7984C()
{
  return type metadata accessor for AFibBurdenOnboardingGetStartedViewController();
}

uint64_t sub_240A79854()
{
  return 1;
}

uint64_t sub_240A7985C()
{
  return MEMORY[0x24560BA20](v0 + qword_268C9F300);
}

uint64_t sub_240A79890(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + qword_268C9F300 + 8) = a2;
  swift_unknownObjectWeakAssign();

  return sub_240BB50A0();
}

void sub_240A798E0()
{
  sub_240A79AB4();
  MEMORY[0x270FA5388](v1 - 8);
  id v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for AFibBurdenOnboardingDetails(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v15 - v8;
  uint64_t v10 = *(void **)(v0 + qword_268C9F310);
  if (v10)
  {
    id v11 = v10;
    sub_240AB8768(v9);
    int v12 = *v9;
    sub_240A79B70((uint64_t)v9, type metadata accessor for AFibBurdenOnboardingDetails);
    if (v12 == 2)
    {
      BOOL v13 = 0;
    }
    else
    {
      sub_240AB8768(v7);
      sub_240A79B0C((uint64_t)&v7[*(int *)(v4 + 20)], (uint64_t)v3);
      uint64_t v14 = sub_240BB28D0();
      BOOL v13 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v3, 1, v14) != 1;
      sub_240A79B70((uint64_t)v3, (uint64_t (*)(void))sub_240A79AB4);
    }
    objc_msgSend(v11, sel_setEnabled_, v13);
  }
}

void sub_240A79AB4()
{
  if (!qword_268C9F2A0)
  {
    sub_240BB28D0();
    unint64_t v0 = sub_240BB75E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9F2A0);
    }
  }
}

uint64_t sub_240A79B0C(uint64_t a1, uint64_t a2)
{
  sub_240A79AB4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_240A79B70(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_240A79BD0()
{
  unint64_t result = qword_268C9F328;
  if (!qword_268C9F328)
  {
    type metadata accessor for AFibBurdenOnboardingGetStartedViewController();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F328);
  }
  return result;
}

uint64_t sub_240A79C28()
{
  uint64_t v0 = sub_240BB3210();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_240BB3240();
  sub_240A4C570(v4, qword_26AFDEB38);
  sub_240A395FC(v4, (uint64_t)qword_26AFDEB38);
  sub_240BB30E0();
  sub_240A7A388();
  uint64_t v5 = sub_240BB3050();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_240BB97E0;
  (*(void (**)(unint64_t, void, uint64_t))(v6 + 104))(v8 + v7, *MEMORY[0x263F45580], v5);
  sub_240A20B04(v8);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_240A34E00();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240BBAD40;
  sub_240A4C530();
  *(void *)(inited + 32) = MEMORY[0x24560A470]((id)*MEMORY[0x263F09BF8]);
  unint64_t v15 = inited;
  sub_240BB6F30();
  unint64_t v10 = v15;
  if (v15 >> 62)
  {
    sub_240BB4850();
    uint64_t v13 = sub_240BB7900();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v12 = MEMORY[0x263F8EE88];
    goto LABEL_6;
  }
  if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  sub_240A3525C(v10);
  uint64_t v12 = v11;
LABEL_6:
  swift_bridgeObjectRelease();
  sub_240A39F7C(v12);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F45688], v0);
  return sub_240BB3230();
}

unint64_t sub_240A79F00()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_240A79F1C()
{
  sub_240A34E00();
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240BBAD40;
  sub_240A4C530();
  *(void *)(inited + 32) = MEMORY[0x24560A470]((id)*MEMORY[0x263F09BF8]);
  sub_240BB6F30();
  if (inited >> 62)
  {
    sub_240BB4850();
    uint64_t v3 = sub_240BB7900();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v2 = MEMORY[0x263F8EE88];
    goto LABEL_6;
  }
  if (!*(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  sub_240A3525C(inited);
  uint64_t v2 = v1;
LABEL_6:
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_240A79FF8()
{
  return 0x6946417055746553;
}

uint64_t sub_240A7A01C()
{
  uint64_t v0 = type metadata accessor for AFibBurdenPromotionTileActionHandler();
  sub_240A7A3E0();
  return v0;
}

uint64_t sub_240A7A050()
{
  uint64_t v0 = sub_240BB36D0();
  MEMORY[0x270FA5388](v0 - 8);
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v1 = (id)qword_26AFDECD8;
  sub_240BB36C0();
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  sub_240BB2980();
  sub_240BB2980();
  sub_240BB2980();
  return sub_240BB3920();
}

uint64_t sub_240A7A290()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Heart30HeartFeaturePromotionGenerator_domain;
  uint64_t v2 = sub_240BB3240();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_240A7A348()
{
  return type metadata accessor for AFibBurdenPromotionGenerator();
}

uint64_t sub_240A7A350()
{
  return swift_updateClassMetadata2();
}

void sub_240A7A388()
{
  if (!qword_26AFD99A0)
  {
    sub_240BB3050();
    unint64_t v0 = sub_240BB7AB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD99A0);
    }
  }
}

unint64_t sub_240A7A3E0()
{
  unint64_t result = qword_268C9F330;
  if (!qword_268C9F330)
  {
    type metadata accessor for AFibBurdenPromotionTileActionHandler();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F330);
  }
  return result;
}

uint64_t type metadata accessor for ElectrocardiogramPromotionTileActionHandler()
{
  uint64_t result = qword_268C9F358;
  if (!qword_268C9F358) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240A7A484()
{
  return swift_initClassMetadata2();
}

_OWORD *sub_240A7A4E8@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v3 = sub_240BB4EC0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1 + qword_268C9F350;
  swift_beginAccess();
  sub_240A7B5FC(v7, (uint64_t)&v13);
  if (v14) {
    return sub_240A7B714(&v13, a1);
  }
  sub_240A7B53C((uint64_t)&v13);
  sub_240BB5250();
  sub_240BB4E90();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_240A3466C(&v13, v14);
  uint64_t v9 = (void *)sub_240BB4E10();
  id v10 = objc_msgSend(v9, sel_viewControllerFactory);

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v13);
  id v11 = objc_msgSend(v10, sel_createElectrocardiogramListDataProvider);

  sub_240BB7650();
  sub_240BB50A0();
  sub_240A38A64((uint64_t)a1, (uint64_t)&v13);
  swift_beginAccess();
  sub_240A7B688((uint64_t)&v13, v7);
  return (_OWORD *)swift_endAccess();
}

void sub_240A7A6C0()
{
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_240BB5990();
  sub_240A395FC(v1, (uint64_t)qword_26AFDEC70);
  id v2 = v0;
  uint64_t v3 = sub_240BB5970();
  os_log_type_t v4 = sub_240BB71A0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v9 = v6;
    *(_DWORD *)uint64_t v5 = 136446466;
    swift_getObjectType();
    sub_240A7B5C0();
    uint64_t v7 = sub_240BB6E10();
    sub_240A38940(v7, v8, &v9);
    sub_240BB75F0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2082;
    sub_240A38940(0x2928706154646964, 0xE800000000000000, &v9);
    sub_240BB75F0();
    _os_log_impl(&dword_240A1B000, v3, v4, "[%{public}s.%{public}s] On-boarding button tapped", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v6, -1, -1);
    MEMORY[0x24560B930](v5, -1, -1);
  }
  else
  {
  }
  sub_240A7AC38();
}

void sub_240A7A8BC(uint64_t a1)
{
  uint64_t v3 = sub_240BB4EC0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v22 - v8;
  objc_msgSend(*(id *)(v1 + qword_268C9F348), sel_dismissOnboarding);
  type metadata accessor for ElectrocardiogramPromotionTileActionHandler();
  sub_240A7B4F4((unint64_t *)&unk_268C9F378, (void (*)(uint64_t))type metadata accessor for ElectrocardiogramPromotionTileActionHandler);
  uint64_t v10 = sub_240BB51D0();
  if (v10)
  {
    id v11 = (void *)v10;
    sub_240BB5250();
    sub_240BB4E90();
    uint64_t v12 = *(void (**)(char *, uint64_t))(v4 + 8);
    v12(v9, v3);
    sub_240A3466C(&v23, v24);
    long long v13 = (void *)sub_240BB4E10();
    id v14 = objc_msgSend(v13, sel_viewControllerFactory);

    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v23);
    sub_240A7A4E8(&v23);
    sub_240A3466C(&v23, v24);
    uint64_t v15 = sub_240BB7AD0();
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v23);
    id v16 = objc_msgSend(v14, sel_createElectrocardiogramDataMetadataViewControllerWithElectrocardiogram_dataProvider_, a1, v15);

    sub_240BB50A0();
    sub_240BB5250();
    uint64_t v17 = (void *)sub_240BB4EA0();
    v12(v7, v3);
    id v18 = objc_msgSend(v17, sel_tabBarController);

    if (v18)
    {
      sub_240A2C890(0, (unint64_t *)&qword_26AFD77C0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_240BBAD40;
      *(void *)(v19 + 32) = v16;
      *(void *)&long long v23 = v19;
      sub_240BB6F30();
      unint64_t v20 = v23;
      id v21 = v16;
      sub_240AA6A68(v11, v20, 0);

      swift_bridgeObjectRelease();
    }
  }
}

void sub_240A7ABD0(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_240A7A8BC((uint64_t)v4);
}

void sub_240A7AC38()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_240BB4EC0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v24[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB5250();
  sub_240BB4E90();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v3 + 8);
  v6(v5, v2);
  sub_240A3466C(v24, v24[3]);
  uint64_t v7 = (void *)sub_240BB4E10();
  if (qword_268C9E770 != -1) {
    swift_once();
  }
  LOBYTE(v22) = 1;
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F476B8]), sel_initWithOnboardingType_isFirstTimeOnboarding_healthStore_dateCache_provenance_delegate_isSampleInteractive_, 0, 1, v7, qword_268CA2BA8, 3, v1, v22);

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v24);
  uint64_t v9 = qword_268C9F348;
  uint64_t v10 = *(void **)&v1[qword_268C9F348];
  *(void *)&v1[qword_268C9F348] = v8;

  id v11 = *(void **)&v1[v9];
  if (v11
    && (uint64_t v12 = (char *)objc_msgSend(v11, sel_onboardingNavigationController)) != 0)
  {
    long long v13 = v12;
    objc_msgSend(v12, sel_setModalInPresentation_, 1);
    sub_240BB5250();
    id v14 = (void *)sub_240BB4EA0();
    v6(v5, v2);
    objc_msgSend(v14, sel_showViewController_sender_, v13, 0);
  }
  else
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_240BB5990();
    sub_240A395FC(v15, (uint64_t)qword_26AFDEC70);
    long long v13 = v1;
    id v16 = sub_240BB5970();
    os_log_type_t v17 = sub_240BB7190();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      v24[0] = v19;
      *(_DWORD *)uint64_t v18 = 136446466;
      uint64_t ObjectType = swift_getObjectType();
      sub_240A7B5C0();
      uint64_t v20 = sub_240BB6E10();
      uint64_t ObjectType = sub_240A38940(v20, v21, v24);
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2082;
      uint64_t ObjectType = sub_240A38940(0xD000000000000013, 0x8000000240BCA330, v24);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v16, v17, "[%{public}s.%{public}s] On-boarding navigation controller not initialized", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v19, -1, -1);
      MEMORY[0x24560B930](v18, -1, -1);

      return;
    }
  }
}

uint64_t sub_240A7B010(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_240BB4EC0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (char *)objc_allocWithZone(v2);
  uint64_t v9 = qword_268C9F340;
  uint64_t v10 = self;
  id v11 = v8;
  *(void *)&v8[v9] = objc_msgSend(v10, sel_electrocardiogramType);
  *(void *)&v11[qword_268C9F348] = 0;
  uint64_t v12 = &v11[qword_268C9F350];
  *(_OWORD *)uint64_t v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;

  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v13 = sub_240BB5260();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return v13;
}

uint64_t sub_240A7B180()
{
  uint64_t v1 = v0 + qword_268C9F350;

  return sub_240A7B53C(v1);
}

id sub_240A7B1D0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ElectrocardiogramPromotionTileActionHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240A7B208(uint64_t a1)
{
  uint64_t v2 = a1 + qword_268C9F350;

  return sub_240A7B53C(v2);
}

uint64_t sub_240A7B264()
{
  return type metadata accessor for ElectrocardiogramPromotionTileActionHandler();
}

uint64_t sub_240A7B278(uint64_t a1)
{
  *(void *)(a1 + qword_268C9F348) = 0;
  return MEMORY[0x270F9A758]();
}

void sub_240A7B28C()
{
  uint64_t v1 = sub_240BB4EC0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)(v0 + qword_268C9F348);
  *(void *)(v0 + qword_268C9F348) = 0;

  sub_240BB5250();
  uint64_t v6 = (void *)sub_240BB4EA0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  id v7 = objc_msgSend(v6, sel_tabBarController);

  if (v7)
  {
    type metadata accessor for ElectrocardiogramPromotionTileActionHandler();
    sub_240A7B4F4((unint64_t *)&unk_268C9F378, (void (*)(uint64_t))type metadata accessor for ElectrocardiogramPromotionTileActionHandler);
    id v8 = (void *)sub_240BB51D0();
    if (v8)
    {
      uint64_t v9 = v8;
      sub_240AA7788(v8, 0);

      id v7 = v9;
    }
  }
}

void sub_240A7B41C(void *a1)
{
  id v1 = a1;
  sub_240A7B28C();
}

uint64_t sub_240A7B464()
{
  return sub_240A7B4F4(&qword_26AFD7A28, MEMORY[0x263F43E20]);
}

uint64_t sub_240A7B4AC()
{
  return sub_240A7B4F4(&qword_268C9F370, (void (*)(uint64_t))type metadata accessor for ElectrocardiogramPromotionTileActionHandler);
}

uint64_t sub_240A7B4F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A7B53C(uint64_t a1)
{
  sub_240A2C890(0, (unint64_t *)&qword_26AFD9EE0, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_240A7B5C0()
{
  unint64_t result = qword_268C9F388;
  if (!qword_268C9F388)
  {
    type metadata accessor for ElectrocardiogramPromotionTileActionHandler();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C9F388);
  }
  return result;
}

uint64_t sub_240A7B5FC(uint64_t a1, uint64_t a2)
{
  sub_240A2C890(0, (unint64_t *)&qword_26AFD9EE0, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240A7B688(uint64_t a1, uint64_t a2)
{
  sub_240A2C890(0, (unint64_t *)&qword_26AFD9EE0, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

_OWORD *sub_240A7B714(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t getEnumTagSinglePayload for CardioFitnessRetroComputeFeedItemState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 8) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 8) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CardioFitnessRetroComputeFeedItemState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(unsigned char *)(result + 8) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_240A7B7CC(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(unsigned char *)(result + 8) = *(unsigned char *)(result + 8) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(void *)unint64_t result = a2 - 2;
    *(unsigned char *)(result + 8) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessRetroComputeFeedItemState()
{
  return &type metadata for CardioFitnessRetroComputeFeedItemState;
}

uint64_t sub_240A7B80C()
{
  return sub_240BB7BD0();
}

uint64_t sub_240A7B838()
{
  return 0x65746F6D6F7270;
}

uint64_t sub_240A7B850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x65746F6D6F7270 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_240BB7AE0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_240A7B8E8()
{
  return 0;
}

uint64_t sub_240A7B8F4(uint64_t a1)
{
  unint64_t v2 = sub_240A7CB48();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240A7B930(uint64_t a1)
{
  unint64_t v2 = sub_240A7CB48();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240A7B96C(void *a1, uint64_t a2, int a3)
{
  int v31 = a3;
  uint64_t v29 = a2;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F8E0C0];
  sub_240A7CCA0(0, &qword_268C9F3E0, (uint64_t (*)(void))sub_240A7CAA0, (uint64_t)&type metadata for CardioFitnessRetroComputeFeedItemState.CompletedCodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x270FA5388](v5);
  objc_super v26 = (char *)&v22 - v6;
  sub_240A7CCA0(0, &qword_268C9F3E8, (uint64_t (*)(void))sub_240A7CAF4, (uint64_t)&type metadata for CardioFitnessRetroComputeFeedItemState.InProgressCodingKeys, v4);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v22 - v8;
  sub_240A7CCA0(0, &qword_268C9F3F0, (uint64_t (*)(void))sub_240A7CB48, (uint64_t)&type metadata for CardioFitnessRetroComputeFeedItemState.AvailableCodingKeys, v4);
  uint64_t v11 = v10;
  uint64_t v23 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v22 - v12;
  sub_240A7CCA0(0, &qword_268C9F3F8, (uint64_t (*)(void))sub_240A7CB9C, (uint64_t)&type metadata for CardioFitnessRetroComputeFeedItemState.CodingKeys, v4);
  uint64_t v15 = v14;
  uint64_t v30 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  os_log_type_t v17 = (char *)&v22 - v16;
  sub_240A3466C(a1, a1[3]);
  sub_240A7CB9C();
  sub_240BB7C40();
  if (!(v31 >> 6))
  {
    uint64_t v20 = v23;
    char v32 = 0;
    sub_240A7CB48();
    sub_240BB7A30();
    sub_240BB7A80();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v13, v11);
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v17, v15);
  }
  if (v31 >> 6 == 1)
  {
    char v34 = 2;
    sub_240A7CAA0();
    uint64_t v18 = v26;
    sub_240BB7A30();
    uint64_t v19 = v28;
    sub_240BB7A50();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v18, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v17, v15);
  }
  char v33 = 1;
  sub_240A7CAF4();
  sub_240BB7A30();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v25);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v17, v15);
}

uint64_t sub_240A7BDF4()
{
  uint64_t v1 = 0x6572676F72506E69;
  if (*v0 != 1) {
    uint64_t v1 = 0x6574656C706D6F63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6C62616C69617661;
  }
}

uint64_t sub_240A7BE58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_240A7C1F0(a1, a2);
  *a3 = result;
  return result;
}

void sub_240A7BE80(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_240A7BE8C(uint64_t a1)
{
  unint64_t v2 = sub_240A7CB9C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240A7BEC8(uint64_t a1)
{
  unint64_t v2 = sub_240A7CB9C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240A7BF04()
{
  return sub_240BB7C00();
}

uint64_t sub_240A7BF48()
{
  return sub_240BB7C00();
}

unint64_t sub_240A7BF88()
{
  return 0xD000000000000010;
}

uint64_t sub_240A7BFA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_240A7C36C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_240A7BFD0(uint64_t a1)
{
  unint64_t v2 = sub_240A7CAA0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240A7C00C(uint64_t a1)
{
  unint64_t v2 = sub_240A7CAA0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240A7C048()
{
  return 0;
}

uint64_t sub_240A7C054@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_240A7C084(uint64_t a1)
{
  unint64_t v2 = sub_240A7CAF4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240A7C0C0(uint64_t a1)
{
  unint64_t v2 = sub_240A7CAF4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240A7C0FC(uint64_t a1, uint64_t a2)
{
  return sub_240A7C164(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8));
}

uint64_t sub_240A7C114@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_240A7C3F4(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_240A7C144(void *a1)
{
  return sub_240A7B96C(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8));
}

uint64_t sub_240A7C164(uint64_t a1, unsigned __int8 a2, uint64_t a3, unsigned __int8 a4)
{
  if (!(a2 >> 6))
  {
    if (a4 < 0x40u) {
      return (((a1 & 1) == 0) ^ a3) & 1;
    }
    return 0;
  }
  if (a2 >> 6 != 1) {
    return (a4 & 0xC0) == 0x80 && *(double *)&a3 == 0.0 && a4 == 128;
  }
  if ((a4 & 0xC0) == 0x40)
  {
    if ((a2 & 1) == 0) {
      return (a4 & 1) == 0 && *(double *)&a1 == *(double *)&a3;
    }
    if (a4) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_240A7C1F0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6C62616C69617661 && a2 == 0xE900000000000065 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6572676F72506E69 && a2 == 0xEA00000000007373 || (sub_240BB7AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574656C706D6F63 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_240A7C36C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x8000000240BCA380)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_240A7C3F4(void *a1)
{
  char v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F8E040];
  sub_240A7CCA0(0, &qword_268C9F390, (uint64_t (*)(void))sub_240A7CAA0, (uint64_t)&type metadata for CardioFitnessRetroComputeFeedItemState.CompletedCodingKeys, MEMORY[0x263F8E040]);
  uint64_t v38 = v3;
  uint64_t v40 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v43 = (char *)&v35 - v4;
  sub_240A7CCA0(0, &qword_268C9F3A0, (uint64_t (*)(void))sub_240A7CAF4, (uint64_t)&type metadata for CardioFitnessRetroComputeFeedItemState.InProgressCodingKeys, v2);
  uint64_t v39 = v5;
  uint64_t v37 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v42 = (char *)&v35 - v6;
  sub_240A7CCA0(0, &qword_268C9F3B0, (uint64_t (*)(void))sub_240A7CB48, (uint64_t)&type metadata for CardioFitnessRetroComputeFeedItemState.AvailableCodingKeys, v2);
  uint64_t v8 = v7;
  uint64_t v36 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v35 - v9;
  sub_240A7CCA0(0, &qword_268C9F3C0, (uint64_t (*)(void))sub_240A7CB9C, (uint64_t)&type metadata for CardioFitnessRetroComputeFeedItemState.CodingKeys, v2);
  uint64_t v12 = v11;
  uint64_t v41 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v35 - v13;
  uint64_t v15 = (uint64_t)sub_240A3466C(a1, a1[3]);
  sub_240A7CB9C();
  uint64_t v16 = v44;
  sub_240BB7C30();
  if (!v16)
  {
    uint64_t v44 = v8;
    uint64_t v18 = v42;
    os_log_type_t v17 = v43;
    uint64_t v19 = sub_240BB7A20();
    if (*(void *)(v19 + 16) == 1)
    {
      if (*(unsigned char *)(v19 + 32))
      {
        if (*(unsigned char *)(v19 + 32) == 1)
        {
          char v46 = 1;
          sub_240A7CAF4();
          sub_240BB79A0();
          (*(void (**)(char *, uint64_t))(v37 + 8))(v18, v39);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v41 + 8))(v14, v12);
          uint64_t v15 = 0;
        }
        else
        {
          char v47 = 2;
          sub_240A7CAA0();
          uint64_t v27 = v17;
          sub_240BB79A0();
          uint64_t v29 = v38;
          uint64_t v15 = sub_240BB79D0();
          uint64_t v30 = v27;
          uint64_t v31 = v41;
          char v33 = *(void (**)(char *, uint64_t))(v40 + 8);
          LODWORD(v44) = v34;
          v33(v30, v29);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v12);
        }
      }
      else
      {
        char v45 = 0;
        sub_240A7CB48();
        uint64_t v23 = v10;
        sub_240BB79A0();
        uint64_t v24 = v44;
        char v25 = sub_240BB7A00();
        uint64_t v26 = v41;
        char v32 = v25;
        (*(void (**)(char *, uint64_t))(v36 + 8))(v23, v24);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v12);
        uint64_t v15 = v32 & 1;
      }
    }
    else
    {
      uint64_t v15 = (uint64_t)v14;
      uint64_t v20 = sub_240BB7830();
      swift_allocError();
      uint64_t v22 = v21;
      sub_240A7CBF0();
      *uint64_t v22 = &type metadata for CardioFitnessRetroComputeFeedItemState;
      sub_240BB79B0();
      sub_240BB7810();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v15, v12);
    }
  }
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  return v15;
}

unint64_t sub_240A7CAA0()
{
  unint64_t result = qword_268C9F398;
  if (!qword_268C9F398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F398);
  }
  return result;
}

unint64_t sub_240A7CAF4()
{
  unint64_t result = qword_268C9F3A8;
  if (!qword_268C9F3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F3A8);
  }
  return result;
}

unint64_t sub_240A7CB48()
{
  unint64_t result = qword_268C9F3B8;
  if (!qword_268C9F3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F3B8);
  }
  return result;
}

unint64_t sub_240A7CB9C()
{
  unint64_t result = qword_268C9F3C8;
  if (!qword_268C9F3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F3C8);
  }
  return result;
}

void sub_240A7CBF0()
{
  if (!qword_268C9F3D0)
  {
    sub_240A7CC60();
    sub_240BB7820();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C9F3D0);
    }
  }
}

unint64_t sub_240A7CC60()
{
  unint64_t result = qword_268C9F3D8;
  if (!qword_268C9F3D8)
  {
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C9F3D8);
  }
  return result;
}

void sub_240A7CCA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for CardioFitnessRetroComputeFeedItemState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CardioFitnessRetroComputeFeedItemState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240A7CE64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessRetroComputeFeedItemState.CodingKeys()
{
  return &type metadata for CardioFitnessRetroComputeFeedItemState.CodingKeys;
}

ValueMetadata *type metadata accessor for CardioFitnessRetroComputeFeedItemState.AvailableCodingKeys()
{
  return &type metadata for CardioFitnessRetroComputeFeedItemState.AvailableCodingKeys;
}

ValueMetadata *type metadata accessor for CardioFitnessRetroComputeFeedItemState.InProgressCodingKeys()
{
  return &type metadata for CardioFitnessRetroComputeFeedItemState.InProgressCodingKeys;
}

uint64_t getEnumTagSinglePayload for AFibBurdenPDFChartPoint.Tag(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s5Heart38CardioFitnessRetroComputeFeedItemStateO19AvailableCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x240A7CFB4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessRetroComputeFeedItemState.CompletedCodingKeys()
{
  return &type metadata for CardioFitnessRetroComputeFeedItemState.CompletedCodingKeys;
}

unint64_t sub_240A7CFF0()
{
  unint64_t result = qword_268C9F400;
  if (!qword_268C9F400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F400);
  }
  return result;
}

unint64_t sub_240A7D048()
{
  unint64_t result = qword_268C9F408;
  if (!qword_268C9F408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F408);
  }
  return result;
}

unint64_t sub_240A7D0A0()
{
  unint64_t result = qword_268C9F410;
  if (!qword_268C9F410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F410);
  }
  return result;
}

unint64_t sub_240A7D0F8()
{
  unint64_t result = qword_268C9F418;
  if (!qword_268C9F418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F418);
  }
  return result;
}

unint64_t sub_240A7D150()
{
  unint64_t result = qword_268C9F420;
  if (!qword_268C9F420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F420);
  }
  return result;
}

unint64_t sub_240A7D1A8()
{
  unint64_t result = qword_268C9F428;
  if (!qword_268C9F428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F428);
  }
  return result;
}

unint64_t sub_240A7D200()
{
  unint64_t result = qword_268C9F430;
  if (!qword_268C9F430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F430);
  }
  return result;
}

unint64_t sub_240A7D258()
{
  unint64_t result = qword_268C9F438;
  if (!qword_268C9F438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F438);
  }
  return result;
}

unint64_t sub_240A7D2B0()
{
  unint64_t result = qword_268C9F440;
  if (!qword_268C9F440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F440);
  }
  return result;
}

unint64_t sub_240A7D308()
{
  unint64_t result = qword_268C9F448;
  if (!qword_268C9F448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F448);
  }
  return result;
}

unint64_t sub_240A7D360()
{
  unint64_t result = qword_268C9F450;
  if (!qword_268C9F450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F450);
  }
  return result;
}

uint64_t sub_240A7D3B8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_240BB6290();
  swift_release();

  return swift_release();
}

uint64_t sub_240A7D430()
{
  uint64_t v1 = *(void **)(v0 + 48);
  objc_msgSend(v1, sel_removeHeartRhythmAvailabilityObserver_, v0);
  int v2 = *(void **)(v0 + 56);
  objc_msgSend(v2, sel_unregisterObserver_, v0);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC5Heart36TachycardiaFeatureStatusAvailability__featureStatus;
  sub_240A7DB4C(0, &qword_26AFD98C0, (uint64_t (*)(uint64_t))sub_240A5C434, MEMORY[0x263EFDE58]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t sub_240A7D528()
{
  sub_240A7D430();

  return swift_deallocClassInstance();
}

uint64_t sub_240A7D580()
{
  return type metadata accessor for TachycardiaFeatureStatusAvailability();
}

uint64_t type metadata accessor for TachycardiaFeatureStatusAvailability()
{
  uint64_t result = qword_26AFD9E08;
  if (!qword_26AFD9E08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_240A7D5D4()
{
  sub_240A7DB4C(319, &qword_26AFD98C0, (uint64_t (*)(uint64_t))sub_240A5C434, MEMORY[0x263EFDE58]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_240A7D6C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_240BB2CF0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_240BB3700())
  {
    if (!objc_msgSend(self, sel_activePairedWatchSupportsHeartRateMotionContexts)
      || (BOOL v7 = *(void **)(v1 + 48),
          sub_240BB2CE0(),
          int v8 = (void *)sub_240BB2C90(),
          (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3),
          unsigned int v9 = objc_msgSend(v7, sel_isHeartAgeGatingEnabledOnActiveWatchWithCurrentDate_, v8),
          v8,
          v9))
    {
      unint64_t v10 = (unsigned int *)MEMORY[0x263F435B8];
LABEL_5:
      uint64_t v11 = *v10;
      uint64_t v12 = sub_240BB3660();
      uint64_t v13 = *(void *)(v12 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 104))(a1, v11, v12);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
    }
    os_log_type_t v17 = self;
    if ((objc_msgSend(v17, sel_isBackgroundHeartRateEnabled) & 1) == 0)
    {
      unint64_t v10 = (unsigned int *)MEMORY[0x263F435C0];
      goto LABEL_5;
    }
    unsigned __int8 v18 = objc_msgSend(v17, sel_isTachycardiaDetectionEnabled);
    uint64_t v19 = sub_240BB3660();
    uint64_t v20 = *(void *)(v19 - 8);
    unint64_t v21 = (uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56);
    if (v18) {
      uint64_t v22 = (unsigned int *)MEMORY[0x263F435C8];
    }
    else {
      uint64_t v22 = (unsigned int *)MEMORY[0x263F435D0];
    }
    (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))(a1, *v22, v19);
    return (*v21)(a1, 0, 1, v19);
  }
  else
  {
    uint64_t v15 = sub_240BB3660();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    return v16(a1, 1, 1, v15);
  }
}

void sub_240A7D998()
{
  uint64_t v1 = (void *)v0;
  objc_msgSend(*(id *)(v0 + 48), sel_addHeartRhythmAvailabilityObserver_, v0);
  objc_msgSend(*(id *)(v0 + 56), sel_registerObserver_, v0);
  id v2 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  sub_240BB4850();
  uint64_t v3 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithSuiteName_, v3);

  if (v4)
  {
    uint64_t v5 = v1[4];
    uint64_t v6 = v1[5];
    id v7 = v4;
    uint64_t v8 = sub_240BB142C(v4, v5, v6);

    v1[8] = v8;
    swift_bridgeObjectRelease();
    uint64_t v9 = sub_240BB4850();
    sub_240BB1430(v9);
    swift_bridgeObjectRelease();
    uint64_t v10 = swift_allocObject();
    swift_weakInit();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_240A7E15C;
    *(void *)(v11 + 24) = v10;
    sub_240A7E1A4();
    sub_240A7E210();
    uint64_t v12 = sub_240BB6450();

    swift_release();
    swift_release();
    v1[9] = v12;
    swift_release();
  }
}

void sub_240A7DB4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_240A7DBB0()
{
  sub_240A5C434(0);
  uint64_t v1 = MEMORY[0x270FA5388](v0 - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v7 - v4;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_240A7D6C8((uint64_t)v5);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_240A7E064((uint64_t)v5, (uint64_t)v3);
    swift_retain();
    sub_240BB62A0();
    sub_240A7E0C8((uint64_t)v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_240A7DEE4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_240BB6290();
  swift_release();

  return swift_release();
}

uint64_t sub_240A7DF64(uint64_t a1)
{
  sub_240A5C434(0);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_240A7E064(a1, (uint64_t)&v9 - v6);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_240A7E064((uint64_t)v7, (uint64_t)v5);
  swift_retain();
  sub_240BB62A0();
  return sub_240A7E0C8((uint64_t)v7);
}

uint64_t sub_240A7E064(uint64_t a1, uint64_t a2)
{
  sub_240A5C434(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240A7E0C8(uint64_t a1)
{
  sub_240A5C434(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240A7E124()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240A7E15C()
{
  return sub_240A7DBB0();
}

uint64_t sub_240A7E164()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240A7E19C(uint64_t a1)
{
  return sub_240BB0750(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_240A7E1A4()
{
  if (!qword_26AFD9EA8)
  {
    unint64_t v0 = sub_240BB6100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD9EA8);
    }
  }
}

unint64_t sub_240A7E210()
{
  unint64_t result = qword_26AFD9EA0;
  if (!qword_26AFD9EA0)
  {
    sub_240A7E1A4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD9EA0);
  }
  return result;
}

void *sub_240A7E268(void *a1)
{
  sub_240A7DB4C(0, &qword_26AFD98C0, (uint64_t (*)(uint64_t))sub_240A5C434, MEMORY[0x263EFDE58]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v22 - v6;
  sub_240A5C434(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v22 - v12;
  v1[2] = sub_240BB6DE0();
  v1[3] = v14;
  v1[4] = sub_240BB6DE0();
  v1[5] = v15;
  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A950]), sel_init);
  uint64_t v17 = MEMORY[0x263F8EE78];
  v1[7] = v16;
  v1[8] = v17;
  v1[9] = 0;
  unsigned __int8 v18 = (char *)v1 + OBJC_IVAR____TtC5Heart36TachycardiaFeatureStatusAvailability__featureStatus;
  uint64_t v19 = sub_240BB3660();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v13, 1, 1, v19);
  sub_240A7E064((uint64_t)v13, (uint64_t)v11);
  sub_240BB6260();
  sub_240A7E0C8((uint64_t)v13);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v18, v7, v4);
  v1[6] = a1;
  id v20 = a1;
  sub_240A7D6C8((uint64_t)v13);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_240A7E064((uint64_t)v13, (uint64_t)v11);
  swift_retain();
  sub_240BB62A0();
  sub_240A7E0C8((uint64_t)v13);
  sub_240A7D998();
  return v1;
}

uint64_t type metadata accessor for AtrialFibrillationSpecifierDataSource(uint64_t a1)
{
  return sub_240A3E6AC(a1, (uint64_t *)&unk_268C9F558);
}

uint64_t sub_240A7E520()
{
  return swift_initClassMetadata2();
}

uint64_t sub_240A7E598@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  sub_240A35CBC(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240BB56E0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v2 + qword_268C9F528) + OBJC_IVAR____TtC5Heart43AtrialFibrillationFeatureStatusAvailability_status;
  swift_beginAccess();
  sub_240A3FC88(v11, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_240A806D8((uint64_t)v6, (uint64_t (*)(void))sub_240A35CBC);
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_240BB5990();
    sub_240A395FC(v12, (uint64_t)qword_26AFDEC70);
    uint64_t v13 = sub_240BB5970();
    os_log_type_t v14 = sub_240BB7180();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v26 = v16;
      *(_DWORD *)uint64_t v15 = 136446210;
      uint64_t v17 = sub_240BB7C80();
      v25[1] = sub_240A38940(v17, v18, &v26);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v13, v14, "[%{public}s]: No status available for IRN; reporting 'inactive'",
        v15,
        0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v16, -1, -1);
      MEMORY[0x24560B930](v15, -1, -1);
    }

    uint64_t v19 = *MEMORY[0x263F435D0];
    uint64_t v20 = sub_240BB3660();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(a1, v19, v20);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    char v22 = sub_240A86B6C((uint64_t)v10);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v23 = sub_240BB3660();
    if (v22) {
      uint64_t v24 = (unsigned int *)MEMORY[0x263F435C8];
    }
    else {
      uint64_t v24 = (unsigned int *)MEMORY[0x263F435D0];
    }
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v23 - 8) + 104))(a1, *v24, v23);
  }
}

uint64_t sub_240A7E93C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v20 = a1;
  swift_getObjectType();
  uint64_t v1 = sub_240BB3660();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v19 - v6;
  uint64_t v8 = sub_240BB36D0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B332EC();
  uint64_t v12 = sub_240BB36B0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v12)
  {
    sub_240A7E598((uint64_t)v7);
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v5, *MEMORY[0x263F435C8], v1);
    char v13 = sub_240BB3650();
    os_log_type_t v14 = *(void (**)(char *, uint64_t))(v2 + 8);
    v14(v5, v1);
    v14(v7, v1);
    sub_240B33378(v13 & 1, 1);
    sub_240A7E598((uint64_t)v7);
    sub_240BB3700();
    sub_240BB36E0();
    v14(v7, v1);
    uint64_t v15 = v20;
    sub_240BB5010();
    uint64_t v16 = sub_240BB5020();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 0, 1, v16);
  }
  else
  {
    uint64_t v18 = sub_240BB5020();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v20, 1, 1, v18);
  }
}

uint64_t sub_240A7EC44()
{
  unint64_t v0 = MEMORY[0x263F8EE78];
  unint64_t v15 = MEMORY[0x263F8EE78];
  id v1 = sub_240A7EEC0();
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = sub_240A7F1BC();
    if (v3)
    {
      uint64_t v4 = v3;
      id v5 = v2;
      MEMORY[0x24560A190]();
      if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_240BB6F60();
      }
      sub_240BB6F70();
      sub_240BB6F30();
      id v6 = v4;
      MEMORY[0x24560A190]();
      if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_240BB6F60();
      }
      sub_240BB6F70();
      sub_240BB6F30();
      unint64_t v7 = v15;
      if (!(v15 >> 62))
      {
        uint64_t v8 = v15 & 0xFFFFFFFFFFFFFF8;
        sub_240BB4850();
        sub_240BB7AF0();
        if (swift_dynamicCastMetatype() || (uint64_t v12 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
        {
LABEL_9:

          swift_bridgeObjectRelease();
        }
        else
        {
          char v13 = (void *)(v8 + 32);
          while (*v13)
          {
            ++v13;
            if (!--v12) {
              goto LABEL_9;
            }
          }

          swift_bridgeObjectRelease();
          return v8 | 1;
        }
        return v7;
      }
      sub_240BB4850();
      uint64_t v14 = sub_240BB78F0();

      goto LABEL_29;
    }
  }
  if (!(v0 >> 62))
  {
    sub_240BB4850();
    sub_240BB7AF0();
    if (swift_dynamicCastMetatype() || (uint64_t v10 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_13:
      unint64_t v7 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v11 = (void *)((v0 & 0xFFFFFFFFFFFFFF8) + 32);
      while (*v11)
      {
        ++v11;
        if (!--v10) {
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRelease();
      return v0 & 0xFFFFFFFFFFFFFF8 | 1;
    }
    return v7;
  }
  sub_240BB4850();
  uint64_t v14 = sub_240BB78F0();
LABEL_29:
  swift_bridgeObjectRelease_n();
  return v14;
}

id sub_240A7EEC0()
{
  id v1 = self;
  uint64_t v2 = (void *)sub_240BB6DA0();
  id v3 = objc_msgSend(v1, sel_groupSpecifierWithID_, v2);

  if (v3)
  {
    uint64_t v4 = self;
    id v5 = objc_msgSend(v4, sel_irregularHeartRhythmFooterDescription);
    if (!v5)
    {
      sub_240BB6DE0();
      id v5 = (id)sub_240BB6DA0();
      swift_bridgeObjectRelease();
    }
    sub_240BB6DE0();
    id v6 = objc_msgSend(v4, sel_irregularHeartRhythmFooterLinkTitle);
    if (!v6)
    {
      sub_240BB6DE0();
      id v6 = (id)sub_240BB6DA0();
      swift_bridgeObjectRelease();
    }
    id v7 = objc_allocWithZone(NSString);
    uint64_t v8 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
    id v9 = objc_msgSend(v7, sel_initWithString_, v8);

    id v10 = objc_msgSend(v9, sel_localizedStandardRangeOfString_, v6);
    NSUInteger v12 = v11;

    sub_240BB2F90();
    sub_240A34DC4(0, &qword_268C9F5A8);
    uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
    uint64_t v14 = NSStringFromClass(ObjCClassFromMetadata);
    if (!v14)
    {
      sub_240BB6DE0();
      uint64_t v14 = (NSString *)sub_240BB6DA0();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v3, sel_setProperty_forKey_, v14, *MEMORY[0x263F600C0]);

    objc_msgSend(v3, sel_setProperty_forKey_, v5, *MEMORY[0x263F600E8]);
    v19.location = (NSUInteger)v10;
    v19.length = v12;
    unint64_t v15 = NSStringFromRange(v19);
    if (!v15)
    {
      sub_240BB6DE0();
      unint64_t v15 = (NSString *)sub_240BB6DA0();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v3, sel_setProperty_forKey_, v15, *MEMORY[0x263F600D0]);

    id v16 = objc_msgSend(self, sel_valueWithNonretainedObject_, v0);
    objc_msgSend(v3, sel_setProperty_forKey_, v16, *MEMORY[0x263F600E0]);
    uint64_t v17 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setProperty_forKey_, v17, *MEMORY[0x263F600C8]);
  }
  return v3;
}

id sub_240A7F1BC()
{
  id v1 = objc_msgSend(self, sel_irregularHeartRhythmTitleDescription);
  if (!v1)
  {
    sub_240BB6DE0();
    id v1 = (id)sub_240BB6DA0();
    swift_bridgeObjectRelease();
  }
  id v2 = objc_msgSend(self, sel_preferenceSpecifierNamed_target_set_get_detail_cell_edit_, v1, v0, sel_setAtrialFibrillationEnabledWithValue_, sel_isAtrialFibrillationEnabled, 0, 6, 0);

  if (v2)
  {
    id v3 = (void *)sub_240BB6DA0();
    objc_msgSend(v2, sel_setIdentifier_, v3);

    uint64_t v4 = (void *)sub_240BB6F90();
    objc_msgSend(v2, sel_setProperty_forKey_, v4, *MEMORY[0x263F5FEF8]);
  }
  return v2;
}

uint64_t sub_240A7F2DC()
{
  sub_240A80414(0);
  MEMORY[0x270FA5388](v0 - 8);
  id v2 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A80448(0);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A8047C();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v28 = v8;
  uint64_t v29 = v9;
  MEMORY[0x270FA5388](v8);
  NSUInteger v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A80510();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v30 = v12;
  uint64_t v31 = v13;
  MEMORY[0x270FA5388](v12);
  unint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A80644();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v32 = v16;
  uint64_t v33 = v17;
  MEMORY[0x270FA5388](v16);
  NSRange v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_240A39358(0, &qword_26AFD98C0, (uint64_t (*)(uint64_t))sub_240A5C434, MEMORY[0x263EFDE58]);
  swift_retain();
  sub_240BB6270();
  swift_endAccess();
  swift_release();
  sub_240A809A8(&qword_26AFD98B0, sub_240A80448);
  sub_240BB6410();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9980);
  id v34 = (id)sub_240BB7310();
  uint64_t v20 = sub_240BB72F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v2, 1, 1, v20);
  sub_240A809A8(&qword_268C9F588, (void (*)(uint64_t))sub_240A8047C);
  sub_240A805DC();
  uint64_t v21 = v28;
  sub_240BB6400();
  sub_240A806D8((uint64_t)v2, (uint64_t (*)(void))sub_240A80414);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v21);
  swift_allocObject();
  uint64_t v22 = v27;
  swift_unknownObjectWeakInit();
  sub_240A809A8(&qword_268C9F598, (void (*)(uint64_t))sub_240A80510);
  uint64_t v23 = v30;
  sub_240BB6380();
  swift_release();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v23);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_240A809A8(&qword_268C9F5A0, (void (*)(uint64_t))sub_240A80644);
  uint64_t v24 = v32;
  uint64_t v25 = sub_240BB6450();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v24);
  *(void *)(v22 + qword_268C9F530) = v25;
  return swift_release();
}

uint64_t sub_240A7F8A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x24560BA20](v2);
  if (v3)
  {
    uint64_t v4 = (unsigned char *)v3;
    uint64_t v5 = v3 + qword_268C9F540;
    swift_beginAccess();
    if (MEMORY[0x24560BA20](v5))
    {
      swift_getObjectType();
      sub_240BB4F70();
      sub_240BB50A0();
    }
    char v6 = v4[qword_268C9F538] ^ 1;
    v4[qword_268C9F538] = 0;
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

void sub_240A7F96C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x24560BA20](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    uint64_t v5 = v3 + qword_268C9F540;
    swift_beginAccess();
    uint64_t v6 = MEMORY[0x24560BA20](v5);

    if (v6)
    {
      swift_getObjectType();
      sub_240BB4F80();
      sub_240BB50A0();
    }
  }
}

id sub_240A7FA10(void *a1)
{
  uint64_t v2 = sub_240BB3660();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v13 - v7;
  id v9 = a1;
  sub_240A7E598((uint64_t)v8);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, *MEMORY[0x263F435C8], v2);
  sub_240BB3650();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v6, v2);
  v10(v8, v2);
  NSUInteger v11 = (void *)sub_240BB6F90();

  return v11;
}

void sub_240A7FB7C(unsigned char *a1, uint64_t a2, void *a3)
{
  uint64_t ObjectType = swift_getObjectType();
  a1[qword_268C9F538] = 1;
  id v6 = a3;
  uint64_t v7 = a1;
  id v8 = objc_msgSend(v6, sel_BOOLValue);
  id v9 = *(id *)(*(void *)&v7[qword_268C9F528] + 16);
  sub_240B33144((uint64_t)v8, (uint64_t)v9, ObjectType, (uint64_t)&off_26F504F70);
}

void sub_240A7FC3C(void *a1)
{
  swift_getObjectType();
  uint64_t v2 = sub_240BB2B20();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = a1;
  uint64_t v7 = swift_retain();
  sub_240B33580(v7, (uint64_t)v5);
  swift_release();
  sub_240BB2AE0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_240A7FD4C()
{
}

uint64_t sub_240A7FD7C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + qword_268C9F540;

  return sub_240A484BC(v1);
}

id sub_240A7FDF4()
{
  return sub_240A803CC(type metadata accessor for AtrialFibrillationSpecifierDataSource);
}

uint64_t sub_240A7FE0C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v2 = a1 + qword_268C9F540;

  return sub_240A484BC(v2);
}

uint64_t sub_240A7FE90()
{
  return type metadata accessor for AtrialFibrillationSpecifierDataSource(0);
}

uint64_t type metadata accessor for AtrialFibrillationSettingsViewController(uint64_t a1)
{
  return sub_240A3E6AC(a1, (uint64_t *)&unk_268C9F568);
}

uint64_t sub_240A7FEB8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_240A7FEF8()
{
  uint64_t v1 = v0 + qword_268C9F540;
  swift_beginAccess();
  return MEMORY[0x24560BA20](v1);
}

uint64_t sub_240A7FF48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + qword_268C9F540;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return sub_240BB50A0();
}

void (*sub_240A7FFB4(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = qword_268C9F540;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x24560BA20](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_240A8003C;
}

void sub_240A8003C(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + *(void *)(*(void *)a1 + 48) + 8) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    sub_240BB50A0();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    sub_240BB50A0();
  }

  free(v3);
}

void (*sub_240A800CC(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_240BB5080();
  return sub_240A47700;
}

id sub_240A80144(uint64_t a1, uint64_t a2)
{
  swift_getObjectType();
  uint64_t v4 = sub_240BB3B20();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  id v8 = objc_allocWithZone((Class)type metadata accessor for AtrialFibrillationSpecifierDataSource(0));
  id v9 = sub_240A80780(a1, (uint64_t)v7);
  sub_240A809A8(&qword_268C9F5B0, (void (*)(uint64_t))type metadata accessor for AtrialFibrillationSpecifierDataSource);
  id v10 = v9;
  id v11 = (id)sub_240BB4E60();
  sub_240B3395C();
  uint64_t v12 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setTitle_, v12);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  return v11;
}

void sub_240A80328()
{
}

void sub_240A80384()
{
}

id sub_240A803B4()
{
  return sub_240A803CC(type metadata accessor for AtrialFibrillationSettingsViewController);
}

id sub_240A803CC(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_240A8040C()
{
  return type metadata accessor for AtrialFibrillationSettingsViewController(0);
}

void sub_240A80414(uint64_t a1)
{
}

void sub_240A80448(uint64_t a1)
{
}

void sub_240A8047C()
{
  if (!qword_268C9F578)
  {
    sub_240A80448(255);
    sub_240A809A8(&qword_26AFD98B0, sub_240A80448);
    unint64_t v0 = sub_240BB6020();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9F578);
    }
  }
}

void sub_240A80510()
{
  if (!qword_268C9F580)
  {
    sub_240A8047C();
    sub_240A34DC4(255, (unint64_t *)&qword_26AFD9980);
    sub_240A809A8(&qword_268C9F588, (void (*)(uint64_t))sub_240A8047C);
    sub_240A805DC();
    unint64_t v0 = sub_240BB60E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9F580);
    }
  }
}

unint64_t sub_240A805DC()
{
  unint64_t result = qword_26AFD9970;
  if (!qword_26AFD9970)
  {
    sub_240A34DC4(255, (unint64_t *)&qword_26AFD9980);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD9970);
  }
  return result;
}

void sub_240A80644()
{
  if (!qword_268C9F590)
  {
    sub_240A80510();
    sub_240A809A8(&qword_268C9F598, (void (*)(uint64_t))sub_240A80510);
    unint64_t v0 = sub_240BB6080();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9F590);
    }
  }
}

uint64_t sub_240A806D8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_240A80738()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240A80770(uint64_t a1)
{
  return sub_240A7F8A4(a1, v1);
}

void sub_240A80778(uint64_t a1)
{
  sub_240A7F96C(a1, v1);
}

id sub_240A80780(uint64_t a1, uint64_t a2)
{
  swift_getObjectType();
  sub_240A39358(0, (unint64_t *)&qword_268C9F218, MEMORY[0x263F43A90], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v14 - v6;
  id v8 = (void *)(v2 + qword_268C9F518);
  void *v8 = 0xD00000000000001CLL;
  v8[1] = 0x8000000240BCA6B0;
  id v9 = (void *)(v2 + qword_268C9F520);
  *id v9 = 0xD00000000000001ALL;
  v9[1] = 0x8000000240BCA6D0;
  *(void *)(v2 + qword_268C9F530) = 0;
  *(unsigned char *)(v2 + qword_268C9F538) = 0;
  *(void *)(v2 + qword_268C9F540 + 8) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v2 + qword_268C9F528) = a1;
  sub_240B332D0();
  uint64_t v10 = sub_240BB3B20();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v7, a2, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
  swift_retain();
  id v12 = (id)sub_240BB3B10();
  sub_240A7F2DC();

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, v10);
  return v12;
}

uint64_t sub_240A809A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240A809F0(void *a1, uint64_t a2, char a3)
{
  uint64_t v53 = a2;
  sub_240A831FC(0, (unint64_t *)&qword_268CA0B80, MEMORY[0x263F43C08]);
  MEMORY[0x270FA5388](v6 - 8);
  id v8 = (char *)&v52 - v7;
  id v9 = &v3[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_consumedHealthExperienceStore];
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  uint64_t v10 = OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_objectType;
  uint64_t v11 = self;
  id v12 = v3;
  *(void *)&v3[v10] = objc_msgSend(v11, sel_electrocardiogramType);
  *(void *)&v12[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_cancellables] = MEMORY[0x263F8EE88];
  uint64_t v13 = self;
  id v14 = objc_msgSend(a1, sel_profile);
  id v15 = objc_msgSend(v14, sel_healthStore);

  id v16 = objc_msgSend(v13, sel_sharedInstanceForHealthStore_, v15);
  if (!v16)
  {
    __break(1u);
    goto LABEL_21;
  }
  id v17 = objc_msgSend(v16, sel_displayTypeForObjectType_, *(void *)&v3[v10]);

  if (!v17)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v18 = OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_displayType;
  *(void *)&v12[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_displayType] = v17;
  *(void *)&v12[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_viewControllerFactory] = a1;
  sub_240A1E37C(v53, (uint64_t)&v12[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_pinnedContentManager]);
  id v19 = a1;
  id v20 = objc_msgSend(v19, sel_profile);
  id v21 = objc_msgSend(v20, sel_healthStore);

  if (!v21)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  id v22 = objc_msgSend(v21, sel_profileIdentifier);

  id v23 = objc_msgSend(v22, sel_type);
  *(void *)&v12[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_profileType] = v23;
  if (a3 != 4)
  {
    v12[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_dataTypeDetailMode] = a3;

    uint64_t v29 = qword_240BBC978[a3];
LABEL_8:
    id v30 = *(id *)&v12[v18];
    id v31 = objc_msgSend(v19, sel_profile);
    uint64_t v32 = (objc_class *)type metadata accessor for ElectrocardiogramDataTypeDetailViewController();
    v56.receiver = v12;
    v56.super_class = v32;
    uint64_t v33 = (char *)objc_msgSendSuper2(&v56, sel_initWithDisplayType_profile_mode_, v30, v31, v29);

    id v34 = *(void **)&v33[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_displayType];
    uint64_t v35 = v33;
    if (objc_msgSend(v34, sel_allowsManualEntry))
    {
      uint64_t v36 = sub_240BB4100();
      uint64_t v38 = v37;
      if (v36 == sub_240BB4100() && v38 == v39)
      {
        swift_bridgeObjectRelease_n();
LABEL_13:
        if (qword_26AFDA090 != -1) {
          swift_once();
        }
        sub_240BB2980();
        uint64_t v55 = v32;
        v54[0] = v35;
        uint64_t v41 = v35;
        id v42 = (void *)sub_240BB6DA0();
        swift_bridgeObjectRelease();
        uint64_t v43 = (uint64_t)v55;
        if (v55)
        {
          uint64_t v44 = sub_240A3466C(v54, (uint64_t)v55);
          uint64_t v45 = *(void *)(v43 - 8);
          MEMORY[0x270FA5388](v44);
          char v47 = (char *)&v52 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v45 + 16))(v47);
          uint64_t v48 = sub_240BB7AD0();
          (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v43);
          _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v54);
        }
        else
        {
          uint64_t v48 = 0;
        }
        id v49 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824A8]), sel_initWithTitle_style_target_action_, v42, 0, v48, sel_showAddDataVC);

        sub_240BB50A0();
        id v50 = objc_msgSend(v41, sel_navigationItem);
        id v51 = v49;
        objc_msgSend(v50, sel_setRightBarButtonItem_, v51);

        id v19 = v51;
        goto LABEL_19;
      }
      char v40 = sub_240BB7AE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v40) {
        goto LABEL_13;
      }
    }
LABEL_19:

    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v53);
    return;
  }
  id v24 = objc_msgSend(v19, sel_profile);
  id v25 = objc_msgSend(v24, sel_healthStore);

  if (v25)
  {
    id v26 = objc_msgSend(v25, sel_profileIdentifier);

    uint64_t v27 = sub_240BB3E60();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v8, 1, 1, v27);
    char v28 = sub_240BB40F0();

    sub_240A831A0((uint64_t)v8, (unint64_t *)&qword_268CA0B80, MEMORY[0x263F43C08]);
    v12[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_dataTypeDetailMode] = v28;

    uint64_t v29 = 0;
    goto LABEL_8;
  }
LABEL_23:
  __break(1u);
}

id sub_240A8114C(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3 == 2)
  {
    uint64_t v5 = *(void **)&v3[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_viewControllerFactory];
    id v6 = a1;
    id v7 = objc_msgSend(v5, sel_profile);
    sub_240BB7240();
    id v8 = (objc_class *)type metadata accessor for SummariesElectrocardiogramListDataProvider();
    id v9 = (char *)objc_allocWithZone(v8);
    *(void *)&v9[OBJC_IVAR____TtC5Heart42SummariesElectrocardiogramListDataProvider____lazy_storage___dataFetcher] = 0;
    uint64_t v10 = v9;
    id result = objc_msgSend(v7, sel_healthStore);
    if (result)
    {
      *(void *)&v10[OBJC_IVAR____TtC5Heart42SummariesElectrocardiogramListDataProvider_store] = result;
      sub_240A1E37C((uint64_t)v17, (uint64_t)&v10[OBJC_IVAR____TtC5Heart42SummariesElectrocardiogramListDataProvider_healthExperienceStore]);

      v16.receiver = v10;
      v16.super_class = v8;
      id v12 = objc_msgSendSuper2(&v16, sel_initWithDisplayType_profile_mode_, v6, v7, 2);

      _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v17);
      return v12;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v18.receiver = v3;
    v18.super_class = (Class)type metadata accessor for ElectrocardiogramDataTypeDetailViewController();
    id v15 = objc_msgSendSuper2(&v18, sel_createDataProviderWithDisplayType_profile_mode_, a1, a2, a3);
    return v15;
  }
  return result;
}

void sub_240A8133C()
{
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for ElectrocardiogramDataTypeDetailViewController();
  objc_msgSendSuper2(&v9, sel_viewDidLoad);
  uint64_t v1 = sub_240BB4100();
  uint64_t v3 = v2;
  if (v1 == sub_240BB4100() && v3 == v4)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v6 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0) {
      sub_240A81B8C();
    }
  }
  id v7 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_viewControllerFactory], sel_profile);
  id v8 = objc_msgSend(v7, sel_healthStore);

  if (v8)
  {
    sub_240A832C8(&qword_268C9F688);
    sub_240BB54E0();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_240A81520()
{
  swift_getObjectType();
  sub_240A3466C((void *)(v0 + OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_pinnedContentManager), *(void *)(v0 + OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_pinnedContentManager + 24));
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_objectType), sel_identifier);
  sub_240BB6DE0();

  char v2 = sub_240BB33B0();
  swift_bridgeObjectRelease();
  if (v2 != 2) {
    return v2 & 1;
  }
  if (qword_26AFD7790 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_240BB5990();
  sub_240A395FC(v3, (uint64_t)qword_26AFDEAF8);
  uint64_t v4 = sub_240BB5970();
  os_log_type_t v5 = sub_240BB71A0();
  if (os_log_type_enabled(v4, v5))
  {
    char v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v11 = v7;
    *(_DWORD *)char v6 = 136446210;
    uint64_t v8 = sub_240BB7C80();
    sub_240A38940(v8, v9, &v11);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v4, v5, "[%{public}s] Unable to fetch pinned status", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v7, -1, -1);
    MEMORY[0x24560B930](v6, -1, -1);
  }

  return 0;
}

uint64_t sub_240A81788(char a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  if (qword_26AFD7790 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_240BB5990();
  sub_240A395FC(v4, (uint64_t)qword_26AFDEAF8);
  os_log_type_t v5 = sub_240BB5970();
  os_log_type_t v6 = sub_240BB71A0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v12 = v8;
    *(_DWORD *)uint64_t v7 = 136446466;
    uint64_t v9 = sub_240BB7C80();
    sub_240A38940(v9, v10, &v12);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 1024;
    sub_240BB75F0();
    _os_log_impl(&dword_240A1B000, v5, v6, "[%{public}s] Setting favorite: %{BOOL}d", (uint8_t *)v7, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v8, -1, -1);
    MEMORY[0x24560B930](v7, -1, -1);
  }

  sub_240A3466C((void *)(v2 + OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_pinnedContentManager), *(void *)(v2 + OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_pinnedContentManager + 24));
  if (a1) {
    return sub_240BB33C0();
  }
  else {
    return sub_240BB33D0();
  }
}

void sub_240A81980()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_240BB2CF0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  os_log_type_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v6 = *(void **)&v1[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_displayType];
  id v7 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_viewControllerFactory], sel_profile);
  id v8 = objc_msgSend(v7, sel_healthStore);

  if (v8)
  {
    id v9 = objc_msgSend(v1, sel_resolvedHealthToolbox);
    sub_240BB2CE0();
    unint64_t v10 = (void *)sub_240BB2C90();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    id v11 = objc_msgSend(v6, sel_wd_addDataViewControllerWithHealthStore_healthToolBox_initialStartDate_, v8, v9, v10);

    id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v11);
    objc_msgSend(v1, sel_presentViewController_animated_completion_, v12, 1, 0);
  }
  else
  {
    __break(1u);
  }
}

void sub_240A81B8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t)&v0[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_consumedHealthExperienceStore];
  swift_beginAccess();
  sub_240A830E0(v2, (uint64_t)v19);
  uint64_t v3 = v20;
  if (!v20) {
    goto LABEL_11;
  }
  uint64_t v4 = sub_240A3466C(v19, v20);
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *))(v5 + 16))(v7);
  sub_240A831A0((uint64_t)v19, &qword_268C9F668, (void (*)(uint64_t))sub_240A83088);
  id v8 = (void *)sub_240BB2FE0();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v3);
  id v9 = *(void **)&v1[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_viewControllerFactory];
  id v10 = objc_msgSend(v9, sel_profile);
  id v11 = objc_msgSend(v10, sel_healthStore);

  if (!v11)
  {
    __break(1u);
    goto LABEL_10;
  }
  id v12 = objc_msgSend(v11, sel_profileIdentifier);

  id v13 = objc_msgSend(v9, sel_profile);
  id v14 = objc_msgSend(v13, sel_healthStore);

  if (!v14)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    sub_240A831A0((uint64_t)v19, &qword_268C9F668, (void (*)(uint64_t))sub_240A83088);
    sub_240BB78D0();
    __break(1u);
    return;
  }
  id v15 = objc_msgSend(v1, sel_title);
  if (v15)
  {
    objc_super v16 = v15;
    sub_240BB6DE0();
  }
  type metadata accessor for ElectrocardiogramDataTypeDetailViewController();
  sub_240A832C8(&qword_268C9F678);
  uint64_t v17 = sub_240BB5310();

  swift_bridgeObjectRelease();
  if (v17)
  {
    swift_beginAccess();
    sub_240BB6120();
    swift_endAccess();

    swift_release();
  }
  else
  {
  }
}

void sub_240A81F04()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_240BB5990();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A831FC(0, &qword_26AFD7B70, MEMORY[0x263F06EA8]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v41 = (char *)v33 - v8;
  sub_240A831FC(0, &qword_268C9F680, MEMORY[0x263F462A8]);
  MEMORY[0x270FA5388](v9 - 8);
  id v42 = (char *)v33 - v10;
  uint64_t v11 = sub_240BB6C50();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v43 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  objc_super v16 = (char *)v33 - v15;
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = ObjectType;
  id v19 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_viewControllerFactory], sel_profile);
  id v20 = objc_msgSend(v19, sel_healthStore);

  if (v20)
  {
    _OWORD v33[2] = v20;
    id v34 = v16;
    uint64_t v35 = v12;
    uint64_t v36 = v11;
    uint64_t v37 = v4;
    uint64_t v38 = v6;
    uint64_t v39 = v3;
    id v40 = v1;
    id v21 = (void *)*MEMORY[0x263F09740];
    uint64_t v22 = type metadata accessor for ECGFeatureRegulatoryInfoTransformProvider();
    swift_allocObject();
    v33[1] = v21;
    uint64_t v23 = sub_240BB6C60();
    uint64_t v45 = v22;
    uint64_t v46 = MEMORY[0x263F46318];
    uint64_t v44 = v23;
    if (qword_268C9E7C0 != -1) {
      swift_once();
    }
    sub_240BB2980();
    sub_240BB2980();
    swift_retain();
    sub_240BB2980();
    sub_240BB2B10();
    swift_bridgeObjectRelease();
    id v24 = v42;
    sub_240BB6C20();
    uint64_t v25 = sub_240BB6C30();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 0, 1, v25);
    if (qword_26AFD7790 != -1) {
      swift_once();
    }
    uint64_t v26 = v39;
    uint64_t v27 = sub_240A395FC(v39, (uint64_t)qword_26AFDEAF8);
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v38, v27, v26);
    char v28 = v34;
    sub_240BB6C40();
    id v29 = objc_allocWithZone((Class)type metadata accessor for ElectroCardiogramFeatureRegulatoryDetailViewController());
    uint64_t v31 = v35;
    uint64_t v30 = v36;
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v43, v28, v36);
    uint64_t v32 = (void *)sub_240BB67A0();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
    objc_msgSend(v40, sel_showAdaptively_sender_, v32, 0);
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void sub_240A824AC(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  if (qword_26AFD7790 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_240BB5990();
  sub_240A395FC(v2, (uint64_t)qword_26AFDEAF8);
  uint64_t v3 = sub_240BB5970();
  os_log_type_t v4 = sub_240BB71A0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    v14[0] = v6;
    *(_DWORD *)uint64_t v5 = 136446210;
    uint64_t v7 = sub_240BB7C80();
    uint64_t v13 = sub_240A38940(v7, v8, v14);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v3, v4, "[%{public}s] Reenable ECG button action selected", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v6, -1, -1);
    MEMORY[0x24560B930](v5, -1, -1);
  }

  swift_beginAccess();
  uint64_t v9 = (void *)MEMORY[0x24560BA20](v1);
  if (v9)
  {
    uint64_t v10 = v9;
    id v11 = objc_msgSend(v9, sel_navigationController);
    if (v11)
    {
      uint64_t v12 = v11;
    }
    objc_msgSend(v10, sel_didSelectReenableFeature, v13, v14[0]);
  }
}

uint64_t sub_240A826A8(uint64_t a1)
{
  uint64_t v3 = sub_240BB6C50();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_allocWithZone(v1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t v8 = sub_240BB67A0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v8;
}

id sub_240A828C4(uint64_t a1)
{
  return sub_240A82F28(a1, type metadata accessor for ElectrocardiogramDataTypeDetailViewController);
}

uint64_t type metadata accessor for ElectrocardiogramDataTypeDetailViewController()
{
  return self;
}

uint64_t type metadata accessor for ElectroCardiogramFeatureRegulatoryDetailViewController()
{
  uint64_t result = qword_268C9F5F8;
  if (!qword_268C9F5F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240A829F4()
{
  return swift_initClassMetadata2();
}

void sub_240A82A34()
{
  id v1 = objc_msgSend(*(id *)(*v0 + OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_viewControllerFactory), sel_profile);
  id v2 = objc_msgSend(v1, sel_healthStore);

  if (!v2) {
    __break(1u);
  }
}

uint64_t sub_240A82AA0@<X0>(uint64_t a1@<X8>)
{
  return sub_240A1E37C(*v1 + OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_pinnedContentManager, a1);
}

uint64_t sub_240A82ACC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_consumedHealthExperienceStore;
  swift_beginAccess();
  return sub_240A830E0(v3, a1);
}

uint64_t sub_240A82B24(uint64_t a1)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_consumedHealthExperienceStore;
  swift_beginAccess();
  sub_240A83008(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_240A82B84())()
{
  return j__swift_endAccess;
}

void sub_240A82BE4(char a1)
{
  id v3 = objc_msgSend(v1, sel_navigationItem);
  if (a1)
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824A8]), sel_initWithBarButtonSystemItem_target_action_, 0, v1, sel_didTapDone_);
    uint64_t v7 = MEMORY[0x263F8EE78];
    if (v4)
    {
      id v5 = v4;
      MEMORY[0x24560A190]();
      if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_240BB6F60();
      }
      sub_240BB6F70();
      sub_240BB6F30();
    }
    else
    {
      id v5 = 0;
    }
  }
  else
  {
    id v5 = 0;
  }

  sub_240A83160();
  id v6 = (id)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setRightBarButtonItems_, v6);
}

uint64_t sub_240A82D34(void *a1)
{
  swift_unknownObjectRetain();
  id v2 = a1;
  sub_240BB7650();
  sub_240BB50A0();
  objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);

  return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v4);
}

void *sub_240A82DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240BB6C50();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_allocWithZone(v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v9 = (void *)sub_240BB6790();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  id v11 = v9;
  v10(a2, v4);
  if (v9) {

  }
  return v9;
}

id sub_240A82EC0(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for ElectroCardiogramFeatureRegulatoryDetailViewController();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_240A82F0C()
{
  return sub_240A82F28(0, type metadata accessor for ElectroCardiogramFeatureRegulatoryDetailViewController);
}

id sub_240A82F28(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_240A82F60()
{
  return type metadata accessor for ElectroCardiogramFeatureRegulatoryDetailViewController();
}

void sub_240A82F68(void *a1)
{
  id v1 = a1;
  sub_240A82BE4(1);
}

void sub_240A82FB8(void *a1)
{
  id v1 = a1;
  sub_240A82BE4(0);
}

uint64_t sub_240A83008(uint64_t a1, uint64_t a2)
{
  sub_240A831FC(0, &qword_268C9F668, (void (*)(uint64_t))sub_240A83088);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_240A83088()
{
  unint64_t result = qword_268CA06E0;
  if (!qword_268CA06E0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CA06E0);
  }
  return result;
}

uint64_t sub_240A830E0(uint64_t a1, uint64_t a2)
{
  sub_240A831FC(0, &qword_268C9F668, (void (*)(uint64_t))sub_240A83088);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_240A83160()
{
  unint64_t result = qword_268C9F670;
  if (!qword_268C9F670)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268C9F670);
  }
  return result;
}

uint64_t sub_240A831A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_240A831FC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_240A831FC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240BB75E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_240A83250()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240A83288()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_240A832C0()
{
  sub_240A824AC(*(void *)(v0 + 16));
}

uint64_t sub_240A832C8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ElectrocardiogramDataTypeDetailViewController();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240A83308()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  id v1 = (void *)sub_240BB6DA0();
  objc_msgSend(v0, sel_setLocalizedDateFormatFromTemplate_, v1);

  qword_268CA2830 = (uint64_t)v0;
}

uint64_t sub_240A8337C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v1 = sub_240BB5D70();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v2 = sub_240BB5CD0();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider();
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v19 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (void (*)(uint64_t))MEMORY[0x263F07920];
  sub_240A85290(0, &qword_268C9F180, MEMORY[0x263F07920]);
  MEMORY[0x270FA5388](v6 - 8);
  id v8 = (char *)&v18 - v7;
  uint64_t v9 = sub_240BB2EC0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_240BB5D10();
  MEMORY[0x270FA5388](v13 - 8);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F078A8], v9);
  uint64_t v14 = sub_240BB2EE0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v8, 1, 1, v14);
  sub_240BB5CF0();
  sub_240A852E4((uint64_t)v8, &qword_268C9F180, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_240A84304(v20, (uint64_t)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v15 = (*(unsigned __int8 *)(v19 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v16 = swift_allocObject();
  sub_240A84440((uint64_t)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
  sub_240BB5CC0();
  sub_240BB5D60();
  sub_240A84524();
  sub_240A84730();
  return sub_240BB5EF0();
}

uint64_t type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider()
{
  uint64_t result = qword_268C9F6B0;
  if (!qword_268C9F6B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240A83768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v84 = a3;
  uint64_t v4 = sub_240BB5DD0();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v72 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240BB5E00();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v71 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A84684();
  uint64_t v77 = v8;
  uint64_t v74 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v73 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A61E60();
  uint64_t v79 = v10;
  uint64_t v78 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v76 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A61D4C();
  uint64_t v83 = v12;
  uint64_t v82 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v81 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v80 = (char *)&v66 - v15;
  uint64_t v16 = sub_240BB5E70();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v68 = sub_240BB5E90();
  uint64_t v67 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v18 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A845EC(0, &qword_268C9F698, MEMORY[0x263EFCD40]);
  uint64_t v89 = v19;
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v91 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v88 = (char *)&v66 - v23;
  uint64_t v24 = sub_240BB5C30();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v66 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A845EC(0, (unint64_t *)&qword_268C9F148, MEMORY[0x263EFCB08]);
  uint64_t v87 = v28;
  uint64_t v85 = *(void *)(v28 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  uint64_t v86 = (char *)&v66 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v33 = (char *)&v66 - v32;
  MEMORY[0x270FA5388](v31);
  uint64_t v90 = (char *)&v66 - v34;
  uint64_t v70 = a1;
  uint64_t v35 = sub_240BB5F30();
  uint64_t v75 = v20;
  if (v35)
  {
    if (qword_268C9E718 != -1) {
      swift_once();
    }
    long long v66 = xmmword_268CA2B10;
    uint64_t v36 = qword_268CA2B20;
    uint64_t v37 = qword_268CA2B30;
    uint64_t v35 = sub_240BB4850();
    long long v38 = v66;
  }
  else
  {
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    long long v38 = 0uLL;
  }
  long long v100 = v38;
  uint64_t v101 = v36;
  uint64_t v102 = v35;
  uint64_t v103 = v37;
  sub_240BB5C20();
  if (qword_268C9E708 != -1) {
    swift_once();
  }
  *(void *)&long long v96 = qword_268CA2AE0;
  sub_240BB5E40();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v90, v33, v87);
  if (qword_268C9E718 != -1) {
    swift_once();
  }
  long long v96 = xmmword_268CA2B10;
  uint64_t v97 = qword_268CA2B20;
  uint64_t v98 = qword_268CA2B28;
  uint64_t v99 = qword_268CA2B30;
  sub_240BB4850();
  sub_240BB5E60();
  sub_240BB5E80();
  uint64_t v92 = qword_268CA2AE0;
  uint64_t v39 = v91;
  uint64_t v40 = v68;
  sub_240BB5E40();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v18, v40);
  uint64_t v41 = v75;
  (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v88, v39, v89);
  uint64_t v42 = sub_240BB5DE0();
  uint64_t v43 = v76;
  if (qword_268C9E738 != -1) {
    uint64_t v42 = swift_once();
  }
  MEMORY[0x270FA5388](v42);
  sub_240BB5DC0();
  sub_240A61FBC();
  v65[2] = v44;
  v65[3] = sub_240A62074();
  v65[0] = sub_240A85110;
  v65[1] = v65;
  uint64_t v45 = v73;
  sub_240BB5D20();
  if (qword_268C9E720 != -1) {
    swift_once();
  }
  uint64_t v92 = qword_268CA2B38;
  uint64_t v46 = sub_240A846E8((unint64_t *)&qword_268C9F140, (void (*)(uint64_t))sub_240A84684);
  char v47 = (char *)MEMORY[0x263F1B440];
  uint64_t v48 = MEMORY[0x263F1B420];
  uint64_t v49 = v77;
  sub_240BB5E40();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v45, v49);
  if (qword_268C9E728 != -1) {
    swift_once();
  }
  uint64_t v92 = v49;
  uint64_t v93 = v47;
  uint64_t v94 = v46;
  uint64_t v95 = v48;
  swift_getOpaqueTypeConformance2();
  id v50 = v81;
  uint64_t v51 = v79;
  sub_240BB5E50();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v43, v51);
  uint64_t v52 = v82;
  uint64_t v53 = v80;
  uint64_t v54 = v83;
  (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v80, v50, v83);
  uint64_t v55 = v85;
  objc_super v56 = v86;
  uint64_t v57 = v87;
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v86, v90, v87);
  uint64_t v92 = (uint64_t)v56;
  uint64_t v58 = v91;
  uint64_t v59 = v88;
  uint64_t v60 = v89;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v91, v88, v89);
  uint64_t v93 = v58;
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v50, v53, v54);
  uint64_t v94 = (uint64_t)v50;
  sub_240A84E6C(&v92, v84);
  uint64_t v61 = *(void (**)(char *, uint64_t))(v52 + 8);
  v61(v53, v54);
  uint64_t v62 = *(void (**)(char *, uint64_t))(v41 + 8);
  v62(v59, v60);
  uint64_t v63 = *(void (**)(char *, uint64_t))(v55 + 8);
  v63(v90, v57);
  v61(v50, v54);
  v62(v91, v60);
  return ((uint64_t (*)(char *, uint64_t))v63)(v86, v57);
}

uint64_t sub_240A84304(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240A84368()
{
  uint64_t v1 = *(void *)(type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240BB2EE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_240A84440(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_240A844A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_240A83768(a1, v6, a2);
}

void sub_240A84524()
{
  if (!qword_268C9F690)
  {
    sub_240A845EC(255, (unint64_t *)&qword_268C9F148, MEMORY[0x263EFCB08]);
    sub_240A845EC(255, &qword_268C9F698, MEMORY[0x263EFCD40]);
    sub_240A61D4C();
    unint64_t v0 = sub_240BB5C40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9F690);
    }
  }
}

void sub_240A845EC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v5) {
      atomic_store(OpaqueTypeMetadata2, a2);
    }
  }
}

void sub_240A84684()
{
  if (!qword_268C9F128)
  {
    sub_240A61FBC();
    sub_240A62074();
    unint64_t v0 = sub_240BB5D30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9F128);
    }
  }
}

uint64_t sub_240A846E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_240A84730()
{
  unint64_t result = qword_268C9F6A0;
  if (!qword_268C9F6A0)
  {
    sub_240A84524();
    sub_240BB5C30();
    swift_getOpaqueTypeConformance2();
    sub_240BB5E90();
    swift_getOpaqueTypeConformance2();
    sub_240A61E60();
    sub_240A84684();
    sub_240A846E8((unint64_t *)&qword_268C9F140, (void (*)(uint64_t))sub_240A84684);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F6A0);
  }
  return result;
}

uint64_t sub_240A848B8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_240A84988(a1);
  sub_240A46960();
  uint64_t v3 = sub_240BB68D0();
  uint64_t v5 = v4;
  char v7 = v6;
  uint64_t v9 = v8;
  if (qword_268C9E730 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_268CA2B48;
  uint64_t result = swift_getKeyPath();
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v5;
  *(unsigned char *)(a2 + 16) = v7 & 1;
  *(void *)(a2 + 24) = v9;
  *(void *)(a2 + 32) = result;
  *(void *)(a2 + 40) = v10;
  return result;
}

uint64_t sub_240A84988(uint64_t a1)
{
  uint64_t v2 = sub_240BB5F40();
  uint64_t v37 = *(void *)(v2 - 8);
  uint64_t v38 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_240BB2EC0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240BB2CF0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A85290(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490]);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v34 - v17;
  uint64_t v36 = a1;
  sub_240BB5F10();
  sub_240A496B8((uint64_t)v18, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v16, 1, v9) == 1)
  {
    uint64_t v19 = (void (*)(uint64_t))MEMORY[0x263F07490];
    sub_240A852E4((uint64_t)v16, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490]);
    sub_240A852E4((uint64_t)v18, (unint64_t *)&qword_26AFD8F80, v19);
    return 0;
  }
  uint64_t v35 = v10;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v16, v9);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F078A8], v5);
  uint64_t v21 = sub_240BB2ED0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  unint64_t v22 = v21 - 1;
  if (__OFSUB__(v21, 1))
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v23 = v37;
  uint64_t v24 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v4, v36, v38);
  if (v21 == 1)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v24);
LABEL_10:
    if (qword_268C9E670 == -1)
    {
LABEL_11:
      uint64_t v30 = (void *)qword_268CA2830;
      uint64_t v31 = (void *)sub_240BB2C90();
      id v32 = objc_msgSend(v30, sel_stringFromDate_, v31);

      uint64_t v28 = sub_240BB6DE0();
      uint64_t v29 = v33;

      goto LABEL_12;
    }
LABEL_15:
    swift_once();
    goto LABEL_11;
  }
  uint64_t v25 = sub_240BB5F30();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v24);
  if (!v25) {
    goto LABEL_10;
  }
  uint64_t result = sub_240BB2E10();
  if ((v22 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v22 < *(void *)(result + 16))
  {
    uint64_t v27 = result + 16 * v22;
    uint64_t v28 = *(void *)(v27 + 32);
    uint64_t v29 = *(void *)(v27 + 40);
    sub_240BB4850();
    swift_bridgeObjectRelease();
LABEL_12:
    uint64_t v39 = v28;
    uint64_t v40 = v29;
    sub_240A46960();
    uint64_t v20 = sub_240BB7610();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v9);
    sub_240A852E4((uint64_t)v18, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490]);
    return v20;
  }
  __break(1u);
  return result;
}

uint64_t sub_240A84E6C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_240A85118();
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A845EC(0, (unint64_t *)&qword_268C9F148, MEMORY[0x263EFCB08]);
  uint64_t v9 = v8;
  sub_240BB5C30();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, void, uint64_t))(v10 + 16))(v7, *a1, v9);
  sub_240A845EC(0, &qword_268C9F698, MEMORY[0x263EFCD40]);
  uint64_t v12 = v11;
  sub_240BB5E90();
  uint64_t v21 = &v7[*(int *)(v5 + 56)];
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(void))(v13 + 16))();
  sub_240A61D4C();
  uint64_t v15 = v14;
  sub_240A61E60();
  sub_240A84684();
  sub_240A846E8((unint64_t *)&qword_268C9F140, (void (*)(uint64_t))sub_240A84684);
  uint64_t v16 = &v7[*(int *)(v5 + 72)];
  uint64_t v17 = a1[2];
  uint64_t v18 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v16, v17, v15);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v7, v9);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(a2 + *(int *)(v5 + 56), v21, v12);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(a2 + *(int *)(v5 + 72), v16, v15);
}

uint64_t sub_240A85110@<X0>(uint64_t a1@<X8>)
{
  return sub_240A848B8(*(void *)(v1 + 24), a1);
}

void sub_240A85118()
{
  if (!qword_268C9F6A8)
  {
    sub_240A845EC(255, (unint64_t *)&qword_268C9F148, MEMORY[0x263EFCB08]);
    sub_240A845EC(255, &qword_268C9F698, MEMORY[0x263EFCD40]);
    sub_240A61D4C();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268C9F6A8);
    }
  }
}

uint64_t sub_240A851E8@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_240BB6610();
  *a1 = v3;
  return result;
}

uint64_t sub_240A85214@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_240BB6610();
  *a1 = v3;
  return result;
}

uint64_t sub_240A85240()
{
  return sub_240BB6620();
}

uint64_t sub_240A85268()
{
  return sub_240BB6620();
}

void sub_240A85290(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240BB75E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_240A852E4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_240A85290(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_240A85340(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240BB2EE0();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_240A853AC(uint64_t a1)
{
  uint64_t v2 = sub_240BB2EE0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_240A85410(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240BB2EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_240A85474(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240BB2EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_240A854D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240BB2EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_240A8553C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240BB2EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_240A855A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240A855B4);
}

uint64_t sub_240A855B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240BB2EE0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_240A85620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240A85634);
}

uint64_t sub_240A85634(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240BB2EE0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_240A856A4()
{
  uint64_t result = sub_240BB2EE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_240A85730()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_240BB6290();
  swift_release();

  return swift_release();
}

uint64_t sub_240A857A8()
{
  unint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC5Heart43AtrialFibrillationFeatureStatusAvailability_subscriptions);
  swift_beginAccess();
  *unint64_t v1 = MEMORY[0x263F8EE88];
  swift_bridgeObjectRelease();

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 24);
  uint64_t v2 = v0 + OBJC_IVAR____TtC5Heart43AtrialFibrillationFeatureStatusAvailability__featureStatus;
  sub_240A86380(0, &qword_26AFD98C0, (uint64_t (*)(uint64_t))sub_240A5C434, MEMORY[0x263EFDE58]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  sub_240A87034(v0 + OBJC_IVAR____TtC5Heart43AtrialFibrillationFeatureStatusAvailability_status, (uint64_t (*)(void))sub_240A35CBC);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_240A858EC()
{
  return type metadata accessor for AtrialFibrillationFeatureStatusAvailability();
}

uint64_t type metadata accessor for AtrialFibrillationFeatureStatusAvailability()
{
  uint64_t result = qword_26AFD9E48;
  if (!qword_26AFD9E48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_240A85940()
{
  sub_240A86380(319, &qword_26AFD98C0, (uint64_t (*)(uint64_t))sub_240A5C434, MEMORY[0x263EFDE58]);
  if (v0 <= 0x3F)
  {
    sub_240A35CBC(319);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_240A85A5C()
{
  v22[3] = *v0;
  uint64_t v1 = sub_240BB56E0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v23 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A5C434(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v24 = (uint64_t)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v25 = (char *)v22 - v7;
  sub_240A35CBC(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)v22 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v22 - v15;
  sub_240A3466C(v0 + 3, v0[6]);
  sub_240BB5770();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v2 + 56))(v14, 0, 1, v1);
  sub_240A866A4((uint64_t)v14, (uint64_t)v16);
  uint64_t v17 = (uint64_t)v25;
  uint64_t v18 = (uint64_t)v0 + OBJC_IVAR____TtC5Heart43AtrialFibrillationFeatureStatusAvailability_status;
  swift_beginAccess();
  sub_240A86F68((uint64_t)v16, v18);
  swift_endAccess();
  sub_240A86FCC((uint64_t)v16, (uint64_t)v11, (uint64_t (*)(void))sub_240A35CBC);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v11, 1, v1) == 1)
  {
    uint64_t v19 = sub_240BB3660();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 1, 1, v19);
  }
  else
  {
    uint64_t v20 = (uint64_t)v23;
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v23, v11, v1);
    swift_retain();
    sub_240A8604C(v20, v17);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v20, v1);
    swift_release();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_240A86FCC(v17, v24, (uint64_t (*)(void))sub_240A5C434);
  swift_retain();
  sub_240BB62A0();
  sub_240A87034(v17, (uint64_t (*)(void))sub_240A5C434);
  return sub_240A87034((uint64_t)v16, (uint64_t (*)(void))sub_240A35CBC);
}

uint64_t sub_240A8604C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (void *)sub_240BB56F0();
  char v5 = sub_240BB7460();

  if (v5)
  {
    if (sub_240A8690C(a1))
    {
      uint64_t v6 = (void *)sub_240BB56F0();
      char v7 = sub_240BB7460();
      char v8 = sub_240BB7460();

      if (v7 & 1) != 0 && (v8)
      {
        char v9 = sub_240A86B6C(a1);
        uint64_t v10 = sub_240BB3660();
        uint64_t v11 = *(void *)(v10 - 8);
        unint64_t v22 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
        if (v9) {
          uint64_t v12 = (unsigned int *)MEMORY[0x263F435C8];
        }
        else {
          uint64_t v12 = (unsigned int *)MEMORY[0x263F435D0];
        }
        (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(a2, *v12, v10);
        uint64_t v14 = *v22;
        uint64_t v16 = a2;
        uint64_t v17 = 0;
        uint64_t v15 = v10;
        goto LABEL_13;
      }
      uint64_t v18 = (unsigned int *)MEMORY[0x263F435C0];
    }
    else
    {
      uint64_t v18 = (unsigned int *)MEMORY[0x263F435B8];
    }
    uint64_t v19 = *v18;
    uint64_t v20 = sub_240BB3660();
    uint64_t v23 = *(void *)(v20 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 104))(a2, v19, v20);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56);
    uint64_t v16 = a2;
    uint64_t v17 = 0;
    uint64_t v15 = v20;
  }
  else
  {
    uint64_t v13 = sub_240BB3660();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a2;
    uint64_t v17 = 1;
  }
LABEL_13:

  return v14(v16, v17, 1, v15);
}

uint64_t sub_240A86284()
{
  sub_240A3466C((void *)(v0 + 24), *(void *)(v0 + 48));
  sub_240BB5790();
  swift_allocObject();
  swift_weakInit();
  sub_240A22390();
  sub_240A3B92C();
  sub_240BB6450();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_240BB6120();
  swift_endAccess();
  return swift_release();
}

void sub_240A86380(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_240A863E4()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240A8641C(uint64_t a1)
{
  sub_240A5C434(0);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  char v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v19[-v6];
  sub_240A35CBC(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = &v19[-v12];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v15 = result;
    uint64_t v16 = sub_240BB56E0();
    uint64_t v17 = *(void *)(v16 - 8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v17 + 16))(v13, a1, v16);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
    sub_240A866A4((uint64_t)v13, (uint64_t)v11);
    uint64_t v18 = v15 + OBJC_IVAR____TtC5Heart43AtrialFibrillationFeatureStatusAvailability_status;
    swift_beginAccess();
    sub_240A86708((uint64_t)v11, v18);
    swift_endAccess();
    sub_240A8604C(a1, (uint64_t)v7);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_240A86FCC((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(void))sub_240A5C434);
    swift_retain();
    sub_240BB62A0();
    sub_240A87034((uint64_t)v7, (uint64_t (*)(void))sub_240A5C434);
    return swift_release();
  }
  return result;
}

uint64_t sub_240A8669C(uint64_t a1)
{
  return sub_240A8641C(a1);
}

uint64_t sub_240A866A4(uint64_t a1, uint64_t a2)
{
  sub_240A35CBC(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_240A86708(uint64_t a1, uint64_t a2)
{
  sub_240A35CBC(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_240A8676C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_240BB6290();
  swift_release();

  return swift_release();
}

uint64_t sub_240A867EC(uint64_t a1)
{
  sub_240A5C434(0);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  char v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_240A86FCC(a1, (uint64_t)&v9 - v6, (uint64_t (*)(void))sub_240A5C434);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_240A86FCC((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(void))sub_240A5C434);
  swift_retain();
  sub_240BB62A0();
  return sub_240A87034((uint64_t)v7, (uint64_t (*)(void))sub_240A5C434);
}

uint64_t sub_240A8690C(uint64_t a1)
{
  uint64_t v2 = sub_240BB56E0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (void *)sub_240BB56F0();
  int v22 = sub_240BB7460();

  uint64_t v7 = (void *)sub_240BB56F0();
  int v21 = sub_240BB7460();
  char v8 = sub_240BB7460();

  uint64_t v9 = sub_240BB56F0();
  char v10 = sub_240BB7460();
  char v11 = sub_240BB7460();

  LOBYTE(v9) = sub_240BB56D0();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  if (v9)
  {
    uint64_t v12 = (void *)sub_240BB56F0();
    char v13 = sub_240BB7460();
  }
  else
  {
    char v13 = 1;
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v14 = (void *)sub_240BB56F0();
  char v15 = sub_240BB7460();

  uint64_t v16 = (void *)sub_240BB56F0();
  char v17 = sub_240BB7460();

  if (v17) {
    char v18 = v21 & v8 & v22 & v10 & v11 & v13 & v15;
  }
  else {
    char v18 = 0;
  }
  return v18 & 1;
}

uint64_t sub_240A86B6C(uint64_t a1)
{
  sub_240A86F10();
  uint64_t v21 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_240BB5690();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240BB56E0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v19 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v19 - v13;
  char v15 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v20 = a1;
  v15((char *)&v19 - v13, a1, v9);
  int v16 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v14, v9);
  if (v16 == *MEMORY[0x263F44990])
  {
    (*(void (**)(char *, uint64_t))(v10 + 96))(v14, v9);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v14, v5);
    char v17 = (void *)sub_240BB5680();
    sub_240BB72A0();
    sub_240BB72C0();

    (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v22);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return v23 & 1;
  }
  else if (v16 == *MEMORY[0x263F44988])
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
    return 0;
  }
  else
  {
    v15(v19, v20, v9);
    uint64_t v23 = 0;
    unint64_t v24 = 0xE000000000000000;
    sub_240BB77C0();
    sub_240BB6E70();
    sub_240BB78B0();
    uint64_t result = sub_240BB78D0();
    __break(1u);
  }
  return result;
}

void sub_240A86F10()
{
  if (!qword_268C9E890)
  {
    unint64_t v0 = sub_240BB72B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9E890);
    }
  }
}

uint64_t sub_240A86F68(uint64_t a1, uint64_t a2)
{
  sub_240A35CBC(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_240A86FCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_240A87034(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_240A87094()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Heart35AFibBurdenLifeFactorDescriptionCell_item;
  swift_beginAccess();
  sub_240A477B0(v1, (uint64_t)v17);
  if (v17[3])
  {
    sub_240A47830();
    if (swift_dynamicCast())
    {
      uint64_t v2 = v15;
      id v3 = sub_240A87398();
      uint64_t v4 = (void *)sub_240BB6DA0();
      uint64_t v5 = (void *)sub_240BB6DA0();
      if (v14)
      {
        sub_240BB4850();
        uint64_t v6 = (void *)sub_240BB6DA0();
        swift_bridgeObjectRelease();
        if (v15)
        {
LABEL_5:
          uint64_t v13 = v15;
          uint64_t v14 = v16;
          uint64_t aBlock = MEMORY[0x263EF8330];
          unint64_t v10 = 1107296256;
          uint64_t v11 = sub_240A87354;
          uint64_t v12 = &unk_26F505058;
          uint64_t v7 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
LABEL_8:
          objc_msgSend(v3, sel_populateWithTitle_detail_buttonText_buttonAction_, v4, v5, v6, v7);
          _Block_release(v7);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          return sub_240A87A1C(v2);
        }
      }
      else
      {
        uint64_t v6 = 0;
        if (v15) {
          goto LABEL_5;
        }
      }
      uint64_t v7 = 0;
      goto LABEL_8;
    }
  }
  else
  {
    sub_240A478C0((uint64_t)v17);
  }
  uint64_t aBlock = 0;
  unint64_t v10 = 0xE000000000000000;
  sub_240BB77C0();
  swift_bridgeObjectRelease();
  v17[0] = 0xD000000000000026;
  v17[1] = 0x8000000240BCAB50;
  sub_240A477B0(v1, (uint64_t)&aBlock);
  sub_240A879C4();
  sub_240BB6E20();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  uint64_t result = sub_240BB78D0();
  __break(1u);
  return result;
}

uint64_t sub_240A87354(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

id sub_240A87398()
{
  uint64_t v1 = OBJC_IVAR____TtC5Heart35AFibBurdenLifeFactorDescriptionCell____lazy_storage___titleDetailOptionalButtonView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC5Heart35AFibBurdenLifeFactorDescriptionCell____lazy_storage___titleDetailOptionalButtonView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC5Heart35AFibBurdenLifeFactorDescriptionCell____lazy_storage___titleDetailOptionalButtonView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46A00]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_240A87420(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = swift_getObjectType();
  unint64_t v10 = &v4[OBJC_IVAR____TtC5Heart35AFibBurdenLifeFactorDescriptionCell_item];
  *(_OWORD *)unint64_t v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((void *)v10 + 4) = 0;
  *(void *)&v4[OBJC_IVAR____TtC5Heart35AFibBurdenLifeFactorDescriptionCell____lazy_storage___titleDetailOptionalButtonView] = 0;
  v28.receiver = v4;
  v28.super_class = (Class)type metadata accessor for AFibBurdenLifeFactorDescriptionCell();
  id v11 = objc_msgSendSuper2(&v28, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v12 = qword_26AFD7BF0;
  id v13 = v11;
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_240BB5990();
  sub_240A395FC(v14, (uint64_t)qword_26AFDEB80);
  uint64_t v15 = sub_240BB5970();
  os_log_type_t v16 = sub_240BB71A0();
  if (os_log_type_enabled(v15, v16))
  {
    char v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v27 = v18;
    *(_DWORD *)char v17 = 136315138;
    uint64_t v29 = ObjectType;
    swift_getMetatypeMetadata();
    uint64_t v19 = sub_240BB6E10();
    uint64_t v29 = sub_240A38940(v19, v20, &v27);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v15, v16, "[%s] Initializing", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v18, -1, -1);
    MEMORY[0x24560B930](v17, -1, -1);
  }

  id v21 = objc_msgSend(self, sel_secondarySystemGroupedBackgroundColor);
  objc_msgSend(v13, sel_setBackgroundColor_, v21);

  id v22 = objc_msgSend(v13, sel_contentView);
  id v23 = sub_240A87398();
  objc_msgSend(v22, sel_addSubview_, v23);

  id v24 = sub_240A87398();
  id v25 = objc_msgSend(v13, sel_contentView);
  objc_msgSend(v24, sel_hk_alignConstraintsWithView_, v25);

  return v13;
}

id sub_240A877AC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenLifeFactorDescriptionCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AFibBurdenLifeFactorDescriptionCell()
{
  return self;
}

uint64_t sub_240A87850@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Heart35AFibBurdenLifeFactorDescriptionCell_item;
  swift_beginAccess();
  return sub_240A477B0(v3, a1);
}

uint64_t sub_240A878A4(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Heart35AFibBurdenLifeFactorDescriptionCell_item;
  swift_beginAccess();
  sub_240A479C4(a1, v3);
  swift_endAccess();
  sub_240A87094();
  return sub_240A478C0(a1);
}

uint64_t (*sub_240A87914(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_240A87974;
}

uint64_t sub_240A87974(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_240A87094();
  }
  return result;
}

unint64_t sub_240A879A8()
{
  return 0xD000000000000023;
}

void sub_240A879C4()
{
  if (!qword_268C9ECD8)
  {
    sub_240A47830();
    unint64_t v0 = sub_240BB75E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9ECD8);
    }
  }
}

uint64_t sub_240A87A1C(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_240A87A2C()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 16);
  switch(v1)
  {
    case 1:
    case 2:
    case 3:
    case 4:
      sub_240BB77C0();
      sub_240BB6E70();
      sub_240BB6E70();
      swift_bridgeObjectRelease();
      sub_240BB6E70();
      if (qword_268C9E7A8 != -1) {
        swift_once();
      }
      uint64_t v1 = sub_240BB2980();
      swift_bridgeObjectRelease();
      break;
    default:
      return v1;
  }
  return v1;
}

void sub_240A87BE4(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(unsigned __int8 *)(v1 + 16);
  id v4 = sub_240A87F40(v3, (uint64_t)sub_240A887D8, v1, *(void **)(v1 + 24));
  uint64_t v6 = v5;
  switch(v3)
  {
    case 1:
    case 2:
    case 3:
    case 4:
      break;
    default:
      swift_release();
      id v4 = 0;
      uint64_t v6 = 0;
      break;
  }
  sub_240BB77C0();
  sub_240BB4850();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  uint64_t v7 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  id v8 = (id)HKUIAFibBurdenLocalizedString();

  if (!v8)
  {
    sub_240A87A1C((uint64_t)v4);
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v9 = sub_240BB6DE0();
  uint64_t v11 = v10;

  sub_240BB77C0();
  sub_240BB4850();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  uint64_t v12 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  id v13 = (id)HKUIAFibBurdenLocalizedString();

  if (!v13)
  {
LABEL_10:
    sub_240A87A1C((uint64_t)v4);
    __break(1u);
    JUMPOUT(0x240A87F2CLL);
  }
  uint64_t v14 = sub_240BB6DE0();
  uint64_t v16 = v15;

  sub_240BB77C0();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  char v17 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  id v18 = (id)HKUIAFibBurdenLocalizedString();

  if (v18)
  {
    uint64_t v19 = sub_240BB6DE0();
    uint64_t v21 = v20;
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v21 = 0;
  }
  *a1 = v9;
  a1[1] = v11;
  a1[2] = v14;
  a1[3] = v16;
  a1[4] = v19;
  a1[5] = v21;
  a1[6] = (uint64_t)v4;
  a1[7] = v6;
}

void (*sub_240A87F40(char a1, uint64_t a2, uint64_t a3, void *a4))()
{
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a4;
  *(unsigned char *)(v9 + 24) = a1;
  *(void *)(v9 + 32) = a2;
  *(void *)(v9 + 40) = a3;
  *(void *)(v9 + 48) = v4;
  id v10 = a4;
  swift_retain();
  return sub_240A88820;
}

void sub_240A87FCC(void *a1, char a2, uint64_t (*a3)(void), NSObject *a4, uint64_t a5)
{
  uint64_t v46 = a4;
  uint64_t v9 = sub_240BB2CF0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(a1, sel_displayTypeController, v46);
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = (void *)sub_240A942A0(a2);
    id v16 = objc_msgSend(v14, sel_displayTypeForObjectType_, v15);

    if (v16)
    {
      id v17 = (id)HKHRAFibBurdenLogForCategory();
      uint64_t v18 = a5;
      id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A0C0]), sel_initWithLoggingCategory_healthDataSource_, v17, a1);

      uint64_t v20 = (void *)sub_240A942A0(a2);
      id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F463C0]), sel_initWithSampleType_context_, v20, 1);

      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = v18;
      aBlock[4] = sub_240A88844;
      aBlock[5] = v22;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_240AB0D44;
      aBlock[3] = &unk_26F5050D0;
      id v23 = _Block_copy(aBlock);
      id v24 = a3;
      id v25 = v21;
      uint64_t v26 = v19;
      id v27 = v25;
      swift_release();
      objc_msgSend(v26, sel_submitEvent_completion_, v27, v23);
      _Block_release(v23);

      id v28 = objc_msgSend(self, sel_sharedInstanceForHealthStore_, a1);
      sub_240BB2CE0();
      uint64_t v29 = (void *)sub_240BB2C90();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      id v30 = objc_msgSend(v16, sel_wd_addDataViewControllerWithHealthStore_healthToolBox_initialStartDate_, a1, v28, v29);

      uint64_t v31 = v24();
      if (v31)
      {
        id v32 = (void *)v31;
        id v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v30);
        objc_msgSend(v32, sel_presentViewController_animated_completion_, v33, 1, 0);
      }
    }
    else
    {
      if (qword_26AFD7BF0 != -1) {
        swift_once();
      }
      uint64_t v34 = sub_240BB5990();
      sub_240A395FC(v34, (uint64_t)qword_26AFDEB80);
      uint64_t v46 = sub_240BB5970();
      os_log_type_t v35 = sub_240BB7190();
      if (os_log_type_enabled(v46, v35))
      {
        uint64_t v36 = swift_slowAlloc();
        uint64_t v37 = swift_slowAlloc();
        uint64_t v48 = v37;
        *(_DWORD *)uint64_t v36 = 136315394;
        aBlock[0] = a5;
        swift_getMetatypeMetadata();
        uint64_t v38 = sub_240BB6E10();
        aBlock[0] = sub_240A38940(v38, v39, &v48);
        sub_240BB75F0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v36 + 12) = 2080;
        uint64_t v40 = (void *)sub_240A942A0(a2);
        id v41 = objc_msgSend(v40, sel_identifier);

        uint64_t v42 = sub_240BB6DE0();
        unint64_t v44 = v43;

        aBlock[0] = sub_240A38940(v42, v44, &v48);
        sub_240BB75F0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240A1B000, v46, v35, "[%s] Unable to find display type for sample type with identifier %s", (uint8_t *)v36, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24560B930](v37, -1, -1);
        MEMORY[0x24560B930](v36, -1, -1);
      }
      else
      {
        uint64_t v45 = v46;
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_240A8850C(int a1, id a2, uint64_t a3)
{
  if (a2)
  {
    id v5 = a2;
    if (qword_26AFD7BF0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_240BB5990();
    sub_240A395FC(v6, (uint64_t)qword_26AFDEB80);
    id v7 = a2;
    id v8 = a2;
    oslog = sub_240BB5970();
    os_log_type_t v9 = sub_240BB7180();
    if (os_log_type_enabled(oslog, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v18 = v11;
      uint64_t v19 = a3;
      *(_DWORD *)uint64_t v10 = 136315394;
      swift_getMetatypeMetadata();
      uint64_t v12 = sub_240BB6E10();
      uint64_t v19 = sub_240A38940(v12, v13, &v18);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2082;
      uint64_t v19 = (uint64_t)a2;
      id v14 = a2;
      sub_240A49AC0();
      uint64_t v15 = sub_240BB6E10();
      uint64_t v19 = sub_240A38940(v15, v16, &v18);
      sub_240BB75F0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_240A1B000, oslog, v9, "[%s] Error when sending life factor logging initiated analytics event: %{public}s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v11, -1, -1);
      MEMORY[0x24560B930](v10, -1, -1);
    }
    else
    {
    }
  }
}

uint64_t sub_240A8876C()
{
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 32);
  swift_unknownObjectWeakDestroy();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AFibBurdenLifeFactorDetailViewModel()
{
  return self;
}

void sub_240A887D8()
{
}

uint64_t sub_240A887E0()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_240A88820()
{
  sub_240A87FCC(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24), *(uint64_t (**)(void))(v0 + 32), *(NSObject **)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_240A88834()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_240A88844(int a1, void *a2)
{
  sub_240A8850C(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_240A8884C(void *a1, char a2)
{
  sub_240A8B498(0, &qword_26AFD7650, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v8 = &v10[-v7];
  sub_240A3466C(a1, a1[3]);
  sub_240A8B258();
  sub_240BB7C40();
  v10[15] = a2;
  sub_240A8B2AC();
  sub_240BB7A90();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_240A889A4()
{
  return 0x6574617473;
}

uint64_t sub_240A889B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_240BB7AE0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_240A88A48(uint64_t a1)
{
  unint64_t v2 = sub_240A8B258();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240A88A84(uint64_t a1)
{
  unint64_t v2 = sub_240A8B258();

  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_240A88AC0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_240A8B300(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_240A88AEC(void *a1)
{
  return sub_240A8884C(a1, *v1);
}

id sub_240A88B08()
{
  uint64_t v1 = OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController____lazy_storage___tileView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController____lazy_storage___tileView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController____lazy_storage___tileView);
  }
  else
  {
    sub_240BB5160();
    id v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    char v5 = self;
    id v6 = v4;
    id v7 = objc_msgSend(v5, sel_clearColor);
    objc_msgSend(v6, sel_setBackgroundColor_, v7);

    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v8 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

uint64_t sub_240A88BE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_240BB5990();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB5950();
  id v6 = sub_240BB5970();
  os_log_type_t v7 = sub_240BB71A0();
  if (os_log_type_enabled(v6, v7))
  {
    id v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v8 = 0;
    _os_log_impl(&dword_240A1B000, v6, v7, "AFibBurdenRescindedTileViewController loaded", v8, 2u);
    MEMORY[0x24560B930](v8, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v9 = (objc_class *)type metadata accessor for AFibBurdenRescindedTileViewController();
  v12.receiver = v1;
  v12.super_class = v9;
  objc_msgSendSuper2(&v12, sel_viewDidLoad);
  sub_240A88E48();
  id v10 = sub_240A88B08();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_240BB5120();

  return swift_release();
}

void sub_240A88DAC(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x24560BA20](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    sub_240A8995C();
  }
}

id sub_240A88E48()
{
  uint64_t v1 = v0;
  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v3 = result;
  id v4 = sub_240A88B08();
  objc_msgSend(v3, sel_addSubview_, v4);

  sub_240A2C890(0, (unint64_t *)&qword_26AFD77C0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240BBCBA0;
  id v6 = sub_240A88B08();
  id v7 = objc_msgSend(v6, sel_topAnchor);

  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v8 = result;
  id v9 = objc_msgSend(result, sel_topAnchor);

  id v10 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v9);
  *(void *)(v5 + 32) = v10;
  id v11 = sub_240A88B08();
  id v12 = objc_msgSend(v11, sel_bottomAnchor);

  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  unint64_t v13 = result;
  id v14 = objc_msgSend(result, sel_bottomAnchor);

  id v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v14);
  *(void *)(v5 + 40) = v15;
  id v16 = sub_240A88B08();
  id v17 = objc_msgSend(v16, sel_leadingAnchor);

  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v18 = result;
  id v19 = objc_msgSend(result, sel_leadingAnchor);

  id v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v19);
  *(void *)(v5 + 48) = v20;
  id v21 = sub_240A88B08();
  id v22 = objc_msgSend(v21, sel_trailingAnchor);

  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  id v23 = result;
  id v24 = self;
  id v25 = objc_msgSend(v23, sel_trailingAnchor);

  id v26 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v25);
  *(void *)(v5 + 56) = v26;
  sub_240BB6F30();
  sub_240A5D484();
  id v27 = (void *)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v24, sel_activateConstraints_, v27);

  char v28 = sub_240A891B8();

  return (id)sub_240A893D0(v28);
}

uint64_t sub_240A891B8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController_context;
  swift_beginAccess();
  sub_240A8ACAC(v1, (uint64_t)v12);
  uint64_t v2 = v13;
  if (v13)
  {
    uint64_t v3 = sub_240A3466C(v12, v13);
    uint64_t v4 = *(void *)(v2 - 8);
    MEMORY[0x270FA5388](v3);
    id v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 24;
    (*(void (**)(char *))(v4 + 16))(v6);
    sub_240A8AD80((uint64_t)v12, (unint64_t *)&qword_268CA2470, (void (*)(uint64_t))sub_240A8AC54);
    uint64_t v7 = sub_240BB4E40();
    unint64_t v9 = v8;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
    if (v9 >> 60 != 15)
    {
      sub_240BB2740();
      swift_allocObject();
      sub_240BB2730();
      sub_240A8B01C();
      sub_240BB2720();
      sub_240A8B070(v7, v9);
      swift_release();
      return LOBYTE(v12[0]);
    }
  }
  else
  {
    sub_240A8AD80((uint64_t)v12, (unint64_t *)&qword_268CA2470, (void (*)(uint64_t))sub_240A8AC54);
  }
  return 5;
}

uint64_t sub_240A893D0(char a1)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_240A3FB28();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 1:
    case 3:
    case 4:
      if (qword_268C9E7A8 != -1) {
        goto LABEL_15;
      }
      goto LABEL_8;
    case 2:
      if (qword_268C9E7A8 != -1) {
LABEL_15:
      }
        swift_once();
LABEL_8:
      sub_240BB2980();
      id v10 = (void *)sub_240BB6DA0();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setTitle_, v10);

      id v11 = sub_240A88B08();
      sub_240BB2980();
      sub_240BB2980();
      sub_240BB5130();

      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 5:
      if (qword_26AFD7158 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_240A395FC(v5, (uint64_t)qword_26AFDEB68);
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v13, v5);
      *(void *)(swift_allocObject() + 16) = ObjectType;
      uint64_t v15 = 0;
      sub_240BB5700();
      goto LABEL_14;
    default:
      if (qword_26AFD7158 != -1) {
        swift_once();
      }
      uint64_t v9 = sub_240A395FC(v5, (uint64_t)qword_26AFDEB68);
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
      *(void *)(swift_allocObject() + 16) = ObjectType;
      uint64_t v15 = 0;
      sub_240BB5730();
LABEL_14:
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_240A89894()
{
  return 0;
}

uint64_t sub_240A8995C()
{
  sub_240A3FB28();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v6 = 1 << sub_240A891B8();
  if ((v6 & 0x1A) != 0)
  {
    id v7 = objc_msgSend(self, sel_remoteDisabledLinkURL);
LABEL_8:
    id v11 = v7;
    sub_240BB6DE0();

    sub_240A89C58();
    return swift_bridgeObjectRelease();
  }
  if ((v6 & 0x21) == 0)
  {
    id v7 = objc_msgSend(self, sel_seedExpiredLinkURL);
    goto LABEL_8;
  }
  if (qword_26AFD7158 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_240A395FC(v2, (uint64_t)qword_26AFDEB68);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8, v2);
  *(void *)(swift_allocObject() + 16) = v0;
  v12[1] = 0;
  id v9 = v0;
  sub_240BB5730();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_240A89B88()
{
  BYTE8(v1) = 0;
  sub_240BB77C0();
  sub_240BB6E70();
  *(void *)&long long v1 = sub_240A891B8();
  sub_240A2C890(0, &qword_268C9F710, (uint64_t)&type metadata for AFibBurdenRescindedState, MEMORY[0x263F8D8F0]);
  sub_240BB6E10();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return *(void *)((char *)&v1 + 1);
}

uint64_t sub_240A89C58()
{
  uint64_t ObjectType = swift_getObjectType();
  sub_240A3FB28();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v4 = &v29[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_240A8AD2C(0, &qword_26AFD7B70, MEMORY[0x263F06EA8]);
  MEMORY[0x270FA5388](v5 - 8);
  id v7 = &v29[-v6];
  uint64_t v8 = sub_240BB2B20();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  os_log_type_t v35 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = &v29[-v12];
  sub_240BB2B10();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_240A8AD80((uint64_t)v7, &qword_26AFD7B70, MEMORY[0x263F06EA8]);
  }
  uint64_t v15 = *(void (**)(unint64_t, unsigned char *, uint64_t))(v9 + 32);
  uint64_t v32 = v9 + 32;
  uint64_t v33 = v1;
  uint64_t v31 = v15;
  v15((unint64_t)v13, v7, v8);
  id v16 = objc_msgSend(self, sel_defaultWorkspace);
  uint64_t v34 = v13;
  if (v16)
  {
    id v17 = v16;
    uint64_t v18 = (void *)sub_240BB2AF0();
    sub_240AB7F9C(MEMORY[0x263F8EE78]);
    uint64_t v19 = v2;
    id v20 = (void *)sub_240BB6D20();
    swift_bridgeObjectRelease();
    unsigned int v30 = objc_msgSend(v17, sel_openSensitiveURL_withOptions_, v18, v20);

    uint64_t v2 = v19;
  }
  else
  {
    unsigned int v30 = 2;
  }
  if (qword_26AFD7158 != -1) {
    swift_once();
  }
  uint64_t v21 = v33;
  uint64_t v22 = sub_240A395FC(v33, (uint64_t)qword_26AFDEB68);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v2 + 16))(v4, v22, v21);
  id v23 = v35;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v35, v34, v8);
  unint64_t v24 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v25 = v24 + v10;
  id v26 = v4;
  uint64_t v27 = v2;
  uint64_t v28 = swift_allocObject();
  v31(v28 + v24, v23, v8);
  *(unsigned char *)(v28 + v25) = v30;
  *(void *)((v25 & 0xFFFFFFFFFFFFFFF8) + v28 + 8) = ObjectType;
  uint64_t v37 = 0;
  sub_240BB5700();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v27 + 8))(v26, v21);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v34, v8);
}

uint64_t sub_240A8A0A4(uint64_t a1, unsigned __int8 a2)
{
  int v2 = a2;
  sub_240BB77C0();
  sub_240BB6E70();
  sub_240BB7C80();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  sub_240BB2B20();
  sub_240A8AF04(&qword_268C9F708, MEMORY[0x263F06EA8]);
  sub_240BB7AA0();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  if (v2 != 2) {
    sub_240BB6E10();
  }
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return 0;
}

id sub_240A8A23C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = &v3[OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController_context];
  *(_OWORD *)uint64_t v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((void *)v6 + 4) = 0;
  *(void *)&v3[OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController____lazy_storage___tileView] = 0;
  id v7 = &v3[OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController_detail];
  uint64_t v8 = *MEMORY[0x263F43FC0];
  uint64_t v9 = sub_240BB43B0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  v3[OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController_showsSeparator] = 0;
  uint64_t v10 = &v3[OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController_deselectionBehavior];
  v3[OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController_deselectionBehavior] = 1;
  uint64_t v11 = *MEMORY[0x263F440D8];
  uint64_t v12 = sub_240BB46D0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  if (a2)
  {
    uint64_t v13 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = 0;
  }
  v16.receiver = v3;
  v16.super_class = (Class)type metadata accessor for AFibBurdenRescindedTileViewController();
  id v14 = objc_msgSendSuper2(&v16, sel_initWithNibName_bundle_, v13, a3);

  return v14;
}

id sub_240A8A414(void *a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController_context];
  *(_OWORD *)uint64_t v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((void *)v3 + 4) = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController____lazy_storage___tileView] = 0;
  uint64_t v4 = &v1[OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController_detail];
  uint64_t v5 = *MEMORY[0x263F43FC0];
  uint64_t v6 = sub_240BB43B0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v4, v5, v6);
  v1[OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController_showsSeparator] = 0;
  id v7 = &v1[OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController_deselectionBehavior];
  v1[OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController_deselectionBehavior] = 1;
  uint64_t v8 = *MEMORY[0x263F440D8];
  uint64_t v9 = sub_240BB46D0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for AFibBurdenRescindedTileViewController();
  id v10 = objc_msgSendSuper2(&v12, sel_initWithCoder_, a1);

  return v10;
}

id sub_240A8A578()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenRescindedTileViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240A8A6A0()
{
  return type metadata accessor for AFibBurdenRescindedTileViewController();
}

uint64_t type metadata accessor for AFibBurdenRescindedTileViewController()
{
  uint64_t result = qword_268C9F6E0;
  if (!qword_268C9F6E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240A8A6F4()
{
  uint64_t result = sub_240BB43B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_240BB46D0();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_240A8A7DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController_context;
  swift_beginAccess();
  return sub_240A8ACAC(v3, a1);
}

uint64_t sub_240A8A830(uint64_t a1)
{
  uint64_t v3 = (uint64_t)v1 + OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController_context;
  swift_beginAccess();
  sub_240A8ABD4(a1, v3);
  swift_endAccess();
  if (objc_msgSend(v1, sel_isViewLoaded))
  {
    char v4 = sub_240A891B8();
    sub_240A893D0(v4);
  }
  return sub_240A8AD80(a1, (unint64_t *)&qword_268CA2470, (void (*)(uint64_t))sub_240A8AC54);
}

uint64_t (*sub_240A8A8D4(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_240A8A934;
}

uint64_t sub_240A8A934(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t result = (uint64_t)objc_msgSend(*(id *)(a1 + 24), sel_isViewLoaded);
    if (result)
    {
      char v5 = sub_240A891B8();
      return sub_240A893D0(v5);
    }
  }
  return result;
}

uint64_t sub_240A8A984()
{
  return sub_240A8995C();
}

uint64_t sub_240A8A9A8@<X0>(uint64_t a1@<X8>)
{
  return sub_240A8AACC(&OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController_deselectionBehavior, MEMORY[0x263F440E8], a1);
}

uint64_t sub_240A8A9D8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F34768](a1, WitnessTable);
}

uint64_t sub_240A8AA44()
{
  id v1 = objc_msgSend(*v0, sel_title);
  if (!v1) {
    return 0;
  }
  unint64_t v2 = v1;
  uint64_t v3 = sub_240BB6DE0();

  return v3;
}

uint64_t sub_240A8AAAC@<X0>(uint64_t a1@<X8>)
{
  return sub_240A8AACC(&OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController_detail, MEMORY[0x263F43FC8], a1);
}

uint64_t sub_240A8AACC@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5 = *v3 + *a1;
  uint64_t v6 = a2(0);
  id v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);

  return v7(a3, v5, v6);
}

uint64_t sub_240A8AB44()
{
  return sub_240A8AF04(&qword_268C9F6F0, (void (*)(uint64_t))type metadata accessor for AFibBurdenRescindedTileViewController);
}

uint64_t sub_240A8AB8C()
{
  return sub_240A8AF04(&qword_268C9F6F8, (void (*)(uint64_t))type metadata accessor for AFibBurdenRescindedTileViewController);
}

uint64_t sub_240A8ABD4(uint64_t a1, uint64_t a2)
{
  sub_240A8AD2C(0, (unint64_t *)&qword_268CA2470, (void (*)(uint64_t))sub_240A8AC54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_240A8AC54()
{
  unint64_t result = qword_268C9F700;
  if (!qword_268C9F700)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C9F700);
  }
  return result;
}

uint64_t sub_240A8ACAC(uint64_t a1, uint64_t a2)
{
  sub_240A8AD2C(0, (unint64_t *)&qword_268CA2470, (void (*)(uint64_t))sub_240A8AC54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_240A8AD2C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240BB75E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_240A8AD80(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_240A8AD2C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_240A8ADDC()
{
  uint64_t v1 = sub_240BB2B20();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((v4 + *(void *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_240A8AE74()
{
  uint64_t v1 = *(void *)(sub_240BB2B20() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unsigned __int8 v3 = *(unsigned char *)(v0 + v2 + *(void *)(v1 + 64));

  return sub_240A8A0A4(v0 + v2, v3);
}

uint64_t sub_240A8AF04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A8AF4C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240A8AF84()
{
  return sub_240A89B88();
}

uint64_t sub_240A8AF8C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240A8AF9C()
{
  return sub_240A89894();
}

uint64_t sub_240A8AFD4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240A8AFE4()
{
  return sub_240A89894();
}

unint64_t sub_240A8B01C()
{
  unint64_t result = qword_268C9F718;
  if (!qword_268C9F718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F718);
  }
  return result;
}

uint64_t sub_240A8B070(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_240A4C4D8(a1, a2);
  }
  return a1;
}

uint64_t sub_240A8B084()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_240A8B0BC()
{
  sub_240A88DAC(v0);
}

uint64_t getEnumTagSinglePayload for AFibBurdenLifeFactor(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AFibBurdenRescindedFeedItemConfiguration(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240A8B220);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenRescindedFeedItemConfiguration()
{
  return &type metadata for AFibBurdenRescindedFeedItemConfiguration;
}

unint64_t sub_240A8B258()
{
  unint64_t result = qword_26AFD7270;
  if (!qword_26AFD7270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD7270);
  }
  return result;
}

unint64_t sub_240A8B2AC()
{
  unint64_t result = qword_26AFD7178;
  if (!qword_26AFD7178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD7178);
  }
  return result;
}

void *sub_240A8B300(void *a1)
{
  sub_240A8B498(0, &qword_268C9F720, MEMORY[0x263F8E040]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  BOOL v7 = &v10[-v6];
  int v8 = sub_240A3466C(a1, a1[3]);
  sub_240A8B258();
  sub_240BB7C30();
  if (!v1)
  {
    sub_240A8B4FC();
    sub_240BB7A10();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    int v8 = (void *)v10[15];
  }
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  return v8;
}

void sub_240A8B498(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_240A8B258();
    unint64_t v7 = a3(a1, &type metadata for AFibBurdenRescindedFeedItemConfiguration.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_240A8B4FC()
{
  unint64_t result = qword_268C9F728;
  if (!qword_268C9F728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F728);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AFibBurdenRescindedFeedItemConfiguration.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x240A8B5ECLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenRescindedFeedItemConfiguration.CodingKeys()
{
  return &type metadata for AFibBurdenRescindedFeedItemConfiguration.CodingKeys;
}

unint64_t sub_240A8B628()
{
  unint64_t result = qword_268C9F730;
  if (!qword_268C9F730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F730);
  }
  return result;
}

unint64_t sub_240A8B680()
{
  unint64_t result = qword_26AFD7280;
  if (!qword_26AFD7280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD7280);
  }
  return result;
}

unint64_t sub_240A8B6D8()
{
  unint64_t result = qword_26AFD7278;
  if (!qword_26AFD7278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD7278);
  }
  return result;
}

id sub_240A8B72C()
{
  uint64_t v1 = OBJC_IVAR____TtC5Heart17BulletedLabelView____lazy_storage___bulletLabel;
  int v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart17BulletedLabelView____lazy_storage___bulletLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart17BulletedLabelView____lazy_storage___bulletLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    sub_240A8BD4C();
    unint64_t v6 = (void *)sub_240BB7470();
    objc_msgSend(v5, sel_setFont_, v6);

    LODWORD(v7) = 1148846080;
    objc_msgSend(v5, sel_setContentHuggingPriority_forAxis_, 0, v7);
    LODWORD(v8) = 1148846080;
    objc_msgSend(v5, sel_setContentCompressionResistancePriority_forAxis_, 0, v8);
    uint64_t v9 = (void *)sub_240BB6DA0();
    objc_msgSend(v5, sel_setText_, v9);

    id v10 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v5;
    id v3 = v5;

    int v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id sub_240A8B874()
{
  uint64_t v1 = OBJC_IVAR____TtC5Heart17BulletedLabelView____lazy_storage___textLabel;
  int v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart17BulletedLabelView____lazy_storage___textLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart17BulletedLabelView____lazy_storage___textLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
    objc_msgSend(v3, sel_setAdjustsFontForContentSizeCategory_, 1);
    sub_240A8BD4C();
    id v5 = (void *)sub_240BB7470();
    objc_msgSend(v3, sel_setFont_, v5);

    objc_msgSend(v3, sel_setNumberOfLines_, 0);
    LODWORD(v6) = 1132068864;
    objc_msgSend(v3, sel_setContentHuggingPriority_forAxis_, 0, v6);
    LODWORD(v7) = 1132068864;
    objc_msgSend(v3, sel_setContentCompressionResistancePriority_forAxis_, 0, v7);
    double v8 = (void *)sub_240BB6DA0();
    objc_msgSend(v3, sel_setText_, v8);

    uint64_t v9 = *(void **)(v4 + OBJC_IVAR____TtC5Heart17BulletedLabelView_textAccessibilityIdentifier + 8);
    id v10 = v3;
    if (v9) {
      uint64_t v9 = (void *)sub_240BB6DA0();
    }
    objc_msgSend(v3, sel_setAccessibilityIdentifier_, v9);

    id v11 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v3;

    int v2 = 0;
  }
  id v12 = v2;
  return v3;
}

id sub_240A8BA20()
{
  uint64_t v1 = OBJC_IVAR____TtC5Heart17BulletedLabelView____lazy_storage___stackView;
  int v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart17BulletedLabelView____lazy_storage___stackView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart17BulletedLabelView____lazy_storage___stackView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BF8]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_setAlignment_, 1);
    objc_msgSend(v4, sel_setAxis_, 0);
    objc_msgSend(v4, sel_setSpacing_, 5.0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    int v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_240A8BB74()
{
  id v1 = sub_240A8BA20();
  id v2 = sub_240A8B72C();
  objc_msgSend(v1, sel_addArrangedSubview_, v2);

  id v3 = sub_240A8BA20();
  id v4 = sub_240A8B874();
  objc_msgSend(v3, sel_addArrangedSubview_, v4);

  id v5 = sub_240A8BA20();
  objc_msgSend(v0, sel_addSubview_, v5);

  id v6 = sub_240A8BA20();
  objc_msgSend(v6, sel_hk_alignConstraintsWithView_, v0);
}

id sub_240A8BC70()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BulletedLabelView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BulletedLabelView()
{
  return self;
}

unint64_t sub_240A8BD4C()
{
  unint64_t result = qword_268C9EEE0;
  if (!qword_268C9EEE0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268C9EEE0);
  }
  return result;
}

unint64_t sub_240A8BD90()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_240A8BDAC()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  return sub_240BB2980();
}

uint64_t sub_240A8BE50()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  return sub_240BB2980();
}

uint64_t sub_240A8BEF0()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  return sub_240BB2980();
}

id sub_240A8BF9C()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v0 = (id)qword_26AFDECD8;
  id v1 = (void *)sub_240BB6DA0();
  id v2 = objc_msgSend(self, sel_imageNamed_inBundle_, v1, v0);

  if (v2) {
    return v2;
  }
  id v4 = objc_allocWithZone(MEMORY[0x263F827E8]);

  return objc_msgSend(v4, sel_init);
}

uint64_t sub_240A8C08C()
{
  sub_240A39C18(0, (unint64_t *)&qword_26AFD77C0);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240BBAD40;
  sub_240A4C530();
  *(void *)(inited + 32) = MEMORY[0x24560A470]((id)*MEMORY[0x263F09BF8]);
  sub_240BB6F30();
  if (inited >> 62)
  {
    sub_240BB4850();
    uint64_t v3 = sub_240BB7900();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v2 = MEMORY[0x263F8EE88];
    goto LABEL_6;
  }
  if (!*(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  sub_240A3A2D0(inited);
  uint64_t v2 = v1;
LABEL_6:
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_240A8C17C()
{
  sub_240A8CC68();
  uint64_t v0 = sub_240BB34F0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_240BBCF40;
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v5 = (id)qword_26AFDECD8;
  id v6 = (void *)sub_240BB6DA0();
  id v7 = objc_msgSend(self, sel_imageNamed_inBundle_, v6, v5);

  if (!v7) {
    id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init);
  }
  uint64_t v58 = v4;
  unint64_t v8 = v4 + v3;
  *(void *)unint64_t v8 = v7;
  *(unsigned char *)(v8 + 8) = 0;
  uint64_t v9 = *(void (**)(void))(v1 + 104);
  ((void (*)(unint64_t, void, uint64_t))v9)(v4 + v3, *MEMORY[0x263F42AB8], v0);
  id v10 = (uint64_t *)(v4 + v3 + v2);
  *id v10 = sub_240BB2980();
  v10[1] = v11;
  ((void (*)(uint64_t *, void, uint64_t))v9)(v10, *MEMORY[0x263F42AC0], v0);
  id v12 = (uint64_t *)(v4 + v3 + 2 * v2);
  *id v12 = sub_240BB2980();
  v12[1] = v13;
  void v12[2] = 0;
  unsigned int v59 = *MEMORY[0x263F42A80];
  v9(v12);
  uint64_t v14 = v4 + v3 + 3 * v2;
  *(void *)uint64_t v14 = sub_240BB2980();
  *(void *)(v14 + 8) = v15;
  *(unsigned char *)(v14 + 16) = 0;
  uint64_t v16 = *MEMORY[0x263F42AE0];
  ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v14, v16, v0);
  unint64_t v17 = v8 + 4 * v2;
  *(void *)unint64_t v17 = sub_240BB2980();
  *(void *)(v17 + 8) = v18;
  *(unsigned char *)(v17 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v17, v16, v0);
  unint64_t v19 = v8 + 5 * v2;
  *(void *)unint64_t v19 = sub_240BB2980();
  *(void *)(v19 + 8) = v20;
  *(unsigned char *)(v19 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v19, v16, v0);
  unint64_t v21 = v8 + 6 * v2;
  *(void *)unint64_t v21 = sub_240BB2980();
  *(void *)(v21 + 8) = v22;
  *(unsigned char *)(v21 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v21, v16, v0);
  id v23 = (uint64_t *)(v8 + 7 * v2);
  *id v23 = sub_240BB2980();
  v23[1] = v24;
  v23[2] = 0;
  ((void (*)(uint64_t *, void, uint64_t))v9)(v23, v59, v0);
  unint64_t v25 = v8 + 8 * v2;
  *(void *)unint64_t v25 = sub_240BB2980();
  *(void *)(v25 + 8) = v26;
  *(unsigned char *)(v25 + 16) = 0;
  ((void (*)(unint64_t, void, uint64_t))v9)(v25, v16, v0);
  unint64_t v27 = v8 + 9 * v2;
  *(void *)unint64_t v27 = sub_240BB2980();
  *(void *)(v27 + 8) = v28;
  *(unsigned char *)(v27 + 16) = 0;
  ((void (*)(unint64_t, void, uint64_t))v9)(v27, v16, v0);
  uint64_t v29 = (uint64_t *)(v8 + 10 * v2);
  *uint64_t v29 = sub_240BB2980();
  v29[1] = v30;
  v29[2] = 0;
  ((void (*)(uint64_t *, void, uint64_t))v9)(v29, v59, v0);
  unint64_t v31 = v8 + 11 * v2;
  *(void *)unint64_t v31 = sub_240BB2980();
  *(void *)(v31 + 8) = v32;
  *(unsigned char *)(v31 + 16) = 0;
  ((void (*)(unint64_t, void, uint64_t))v9)(v31, v16, v0);
  uint64_t v33 = (uint64_t *)(v8 + 12 * v2);
  *uint64_t v33 = sub_240BB2980();
  v33[1] = v34;
  _OWORD v33[2] = 0;
  ((void (*)(uint64_t *, void, uint64_t))v9)(v33, v59, v0);
  unint64_t v35 = v8 + 13 * v2;
  *(void *)unint64_t v35 = sub_240BB2980();
  *(void *)(v35 + 8) = v36;
  *(unsigned char *)(v35 + 16) = 0;
  ((void (*)(unint64_t, void, uint64_t))v9)(v35, v16, v0);
  unint64_t v37 = v8 + 14 * v2;
  *(void *)unint64_t v37 = sub_240BB2980();
  *(void *)(v37 + 8) = v38;
  *(unsigned char *)(v37 + 16) = 0;
  ((void (*)(unint64_t, void, uint64_t))v9)(v37, v16, v0);
  unint64_t v39 = v8 + 15 * v2;
  *(void *)unint64_t v39 = sub_240BB2980();
  *(void *)(v39 + 8) = v40;
  *(unsigned char *)(v39 + 16) = 0;
  uint64_t v57 = v0;
  ((void (*)(unint64_t, void, uint64_t))v9)(v39, v16, v0);
  unint64_t v41 = v8 + 16 * v2;
  *(void *)unint64_t v41 = sub_240BB2980();
  *(void *)(v41 + 8) = v42;
  *(unsigned char *)(v41 + 16) = 0;
  ((void (*)(unint64_t, void, uint64_t))v9)(v41, v16, v0);
  unint64_t v43 = (void (*)(uint64_t *, void, uint64_t))v9;
  unint64_t v44 = (uint64_t *)(v8 + 17 * v2);
  uint64_t v45 = sub_240BB2980();
  uint64_t v47 = v46;
  sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_240BBCF50;
  *(void *)(v48 + 32) = sub_240BB2980();
  *(void *)(v48 + 40) = v49;
  *(void *)(v48 + 48) = sub_240BB2980();
  *(void *)(v48 + 56) = v50;
  *(void *)(v48 + 64) = sub_240BB2980();
  *(void *)(v48 + 72) = v51;
  *(void *)(v48 + 80) = sub_240BB2980();
  *(void *)(v48 + 88) = v52;
  *(void *)(v48 + 96) = sub_240BB2980();
  *(void *)(v48 + 104) = v53;
  *(void *)(v48 + 112) = sub_240BB2980();
  *(void *)(v48 + 120) = v54;
  *(void *)(v48 + 128) = sub_240BB2980();
  *(void *)(v48 + 136) = v55;
  uint64_t *v44 = v45;
  v44[1] = v47;
  v44[2] = v48;
  v43(v44, *MEMORY[0x263F42AA0], v57);
  return v58;
}

void sub_240A8CC68()
{
  if (!qword_268C9E868)
  {
    sub_240BB34F0();
    unint64_t v0 = sub_240BB7AB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9E868);
    }
  }
}

ValueMetadata *type metadata accessor for AFibBurdenArticleProviderLearnAboutAFib()
{
  return &type metadata for AFibBurdenArticleProviderLearnAboutAFib;
}

uint64_t sub_240A8CCD0@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t *a3@<X8>)
{
  sub_240BB5420();
  *a3 = sub_240BB3E70();
  a3[1] = v6;
  a3[2] = 0xD000000000000013;
  a3[3] = 0x8000000240BBD150;
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  a3[4] = sub_240BB2980();
  a3[5] = v7;
  a3[6] = a1;

  return sub_240A37388(a2, (uint64_t)(a3 + 7));
}

uint64_t sub_240A8CDD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_240BB5BD0();
  uint64_t v3 = MEMORY[0x263F81F20];
  a1[3] = v2;
  a1[4] = v3;
  sub_240A23B08(a1);
  sub_240BB5BB0();
  sub_240BB4850();
  return sub_240BB5BC0();
}

uint64_t sub_240A8CE44()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_240BB4850();
  return v1;
}

uint64_t sub_240A8CE7C()
{
  return sub_240BB7C00();
}

uint64_t sub_240A8CF04()
{
  sub_240BB4850();
  sub_240BB6E50();
  swift_bridgeObjectRelease();
  sub_240BB4850();
  sub_240BB6E50();

  return swift_bridgeObjectRelease();
}

uint64_t sub_240A8CF80()
{
  return sub_240BB7C00();
}

uint64_t sub_240A8D004()
{
  sub_240A8E504(0, (unint64_t *)&unk_268CA0B50, MEMORY[0x263F81DF8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v14 - v1;
  uint64_t v3 = sub_240BB5A00();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240BB59C0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A8E504(0, &qword_268C9F770, MEMORY[0x263F81E08], MEMORY[0x263F8E0F8]);
  sub_240BB5A10();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_240BB97E0;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F81DE8], v7);
  uint64_t v12 = sub_240BB59D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v2, 1, 1, v12);
  sub_240BB59F0();
  sub_240BB59E0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v11;
}

uint64_t sub_240A8D318@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  a2[3] = a1;
  a2[4] = sub_240A8DB78();
  uint64_t v4 = swift_allocObject();
  *a2 = v4;

  return sub_240A8DB10(v2, v4 + 16);
}

uint64_t sub_240A8D374(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AFibBurdenOnboardingPresentationContext();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240BB3E60();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  unint64_t v35 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v31 - v11;
  sub_240BB7260();
  if (qword_26AFD7158 != -1) {
    swift_once();
  }
  sub_240A3FB28();
  sub_240A395FC(v13, (uint64_t)qword_26AFDEB68);
  v40[0] = 0;
  sub_240BB5700();
  id v36 = *(id *)(a2 + 48);
  id v38 = a1;
  sub_240BB7240();
  sub_240A1E37C(a2 + 56, (uint64_t)v39);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v14(v6, v12, v7);
  unint64_t v37 = v6;
  swift_storeEnumTagMultiPayload();
  sub_240A8E504(0, &qword_268C9F790, MEMORY[0x263F43C08], MEMORY[0x263F8E0F8]);
  uint64_t v15 = *(void *)(v8 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v34 = v12;
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_240BBD020;
  unint64_t v18 = v17 + v16;
  uint64_t v19 = v8;
  uint64_t v20 = *(void (**)(void))(v8 + 104);
  ((void (*)(unint64_t, void, uint64_t))v20)(v17 + v16, *MEMORY[0x263F43BA0], v7);
  unint64_t v32 = v18 + v15;
  v20();
  unint64_t v31 = v18 + 2 * v15;
  v20();
  uint64_t v21 = v19;
  uint64_t v22 = v35;
  uint64_t v33 = (void (*)(char *, unint64_t, uint64_t))v14;
  v14(v35, (char *)v18, v7);
  sub_240A8E568(&qword_268C9F798, MEMORY[0x263F43C08]);
  id v23 = v34;
  LOBYTE(v16) = sub_240BB6D90();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v21 + 8);
  sub_240BB4850();
  v24(v22, v7);
  if (v16 & 1) != 0 || (v33(v22, v32, v7), char v25 = sub_240BB6D90(), v24(v22, v7), (v25))
  {
    char v26 = 1;
  }
  else
  {
    v33(v22, v31, v7);
    char v26 = sub_240BB6D90();
    v24(v22, v7);
  }
  uint64_t v27 = (uint64_t)v37;
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  id v28 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenOnboardingController());
  uint64_t v29 = sub_240B4A0D8(v36, (uint64_t)v40, (uint64_t)v39, v27, v26 & 1, 2);
  objc_msgSend(v38, sel_presentViewController_animated_completion_, v29, 1, 0);

  return ((uint64_t (*)(char *, uint64_t))v24)(v23, v7);
}

uint64_t sub_240A8D844()
{
  return 0;
}

void sub_240A8D908(uint64_t a1, void *a2)
{
}

uint64_t sub_240A8D910@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 1;
  uint64_t v2 = *MEMORY[0x263F440D8];
  uint64_t v3 = sub_240BB46D0();
  uint64_t v4 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

unint64_t sub_240A8D990()
{
  unint64_t result = qword_268C9F760;
  if (!qword_268C9F760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F760);
  }
  return result;
}

unint64_t sub_240A8D9E8()
{
  unint64_t result = qword_268C9F768;
  if (!qword_268C9F768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F768);
  }
  return result;
}

uint64_t sub_240A8DA3C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24))
  {
    sub_240A8DB10(a1, (uint64_t)v9);
    sub_240A8DB10(a2, (uint64_t)v8);
  }
  else
  {
    char v5 = sub_240BB7AE0();
    sub_240A8DB10(a1, (uint64_t)v9);
    sub_240A8DB10(a2, (uint64_t)v8);
    char v6 = 0;
    if ((v5 & 1) == 0) {
      goto LABEL_12;
    }
  }
  if (v10 == v8[4] && v11 == v8[5]) {
    char v6 = 1;
  }
  else {
    char v6 = sub_240BB7AE0();
  }
LABEL_12:
  sub_240A8DB48((uint64_t)v9);
  sub_240A8DB48((uint64_t)v8);
  return v6 & 1;
}

uint64_t sub_240A8DB10(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_240A8DB48(uint64_t a1)
{
  return a1;
}

unint64_t sub_240A8DB78()
{
  unint64_t result = qword_268C9F778;
  if (!qword_268C9F778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F778);
  }
  return result;
}

uint64_t sub_240A8DBCC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 72);

  return MEMORY[0x270FA0238](v0, 112, 7);
}

void sub_240A8DC24(void *a1)
{
  uint64_t v3 = sub_240BB5990();
  uint64_t v56 = *(void *)(v3 - 8);
  uint64_t v57 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v49 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v55 = (char *)&v48 - v6;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240A8E504(0, &qword_26AFD7B70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  sub_240A8E504(0, &qword_268C9F680, MEMORY[0x263F462A8], v7);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v48 - v10;
  uint64_t v12 = sub_240BB6C50();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v54 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A8DB10(v1, (uint64_t)&v59);
  uint64_t v14 = swift_allocObject();
  long long v15 = v62;
  *(_OWORD *)(v14 + 56) = v61;
  *(_OWORD *)(v14 + 72) = v15;
  long long v16 = v64;
  *(_OWORD *)(v14 + 88) = v63;
  *(_OWORD *)(v14 + 104) = v16;
  long long v17 = v60;
  *(_OWORD *)(v14 + 24) = v59;
  *(void *)(v14 + 16) = a1;
  *(_OWORD *)(v14 + 40) = v17;
  uint64_t v50 = v1;
  unint64_t v18 = *(void **)(v1 + 48);
  uint64_t v19 = (void *)*MEMORY[0x263F09728];
  uint64_t v20 = type metadata accessor for AFibBurdenFeatureRegulatoryInfoTransformProvider();
  swift_allocObject();
  id v51 = a1;
  id v53 = v18;
  id v52 = v19;
  uint64_t v21 = sub_240BB6C60();
  *((void *)&v60 + 1) = v20;
  *(void *)&long long v61 = MEMORY[0x263F46318];
  *(void *)&long long v59 = v21;
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  sub_240BB2980();
  sub_240BB2980();
  uint64_t v22 = self;
  swift_retain();
  id v23 = objc_msgSend(v22, sel_remoteDisabledLinkURL);
  sub_240BB6DE0();

  sub_240BB2B10();
  swift_bridgeObjectRelease();
  sub_240BB6C20();
  uint64_t v24 = sub_240BB6C30();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v11, 0, 1, v24);
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v25 = v57;
  uint64_t v26 = sub_240A395FC(v57, (uint64_t)qword_26AFDEC70);
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v55, v26, v25);
  sub_240BB6C40();
  sub_240A8E470();
  id v28 = objc_allocWithZone(v27);
  uint64_t v29 = (void *)sub_240BB6C00();
  id v30 = objc_msgSend(self, sel_sharedBehavior);
  if (!v30)
  {
    __break(1u);
    goto LABEL_16;
  }
  unint64_t v31 = v30;
  id v32 = objc_msgSend(v30, sel_features);

  if (!v32)
  {
LABEL_16:
    __break(1u);
    return;
  }
  unsigned int v33 = objc_msgSend(v32, sel_stanley);

  if (v33)
  {
    sub_240A8DB10(v50, (uint64_t)&v59);
    id v34 = v29;
    objc_msgSend(v51, sel_showAdaptively_sender_, v34, sub_240BB7B10());
    sub_240BB50A0();

LABEL_11:
    swift_release();
    return;
  }
  id v35 = objc_msgSend(v51, sel_navigationController);
  if (v35)
  {
    id v36 = v35;
    objc_msgSend(v35, sel_pushViewController_animated_, v29, 1);

    goto LABEL_11;
  }
  unint64_t v37 = v49;
  sub_240BB5950();
  id v38 = v29;
  unint64_t v39 = sub_240BB5970();
  os_log_type_t v40 = sub_240BB7180();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    *(void *)&long long v59 = v42;
    *(_DWORD *)uint64_t v41 = 136315394;
    uint64_t v58 = sub_240A38940(0xD000000000000013, 0x8000000240BBD150, (uint64_t *)&v59);
    sub_240BB75F0();
    *(_WORD *)(v41 + 12) = 2080;
    uint64_t v55 = (char *)(v41 + 14);
    id v43 = v38;
    id v44 = objc_msgSend(v43, sel_description);
    uint64_t v45 = sub_240BB6DE0();
    unint64_t v47 = v46;

    uint64_t v58 = sub_240A38940(v45, v47, (uint64_t *)&v59);
    sub_240BB75F0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v39, v40, "[%s]: Unable to handle tap of detail item: %s", (uint8_t *)v41, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v42, -1, -1);
    MEMORY[0x24560B930](v41, -1, -1);
    swift_release();

    (*(void (**)(char *, uint64_t))(v56 + 8))(v49, v57);
  }
  else
  {

    swift_release();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v37, v57);
  }
}

uint64_t sub_240A8E404()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 80);

  return MEMORY[0x270FA0238](v0, 120, 7);
}

uint64_t sub_240A8E464()
{
  return sub_240A8D374(*(void **)(v0 + 16), v0 + 24);
}

void sub_240A8E470()
{
  if (!qword_268C9F780)
  {
    sub_240BB6C50();
    sub_240A8E568(&qword_268C9F788, MEMORY[0x263F462D8]);
    unint64_t v0 = sub_240BB6C10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9F780);
    }
  }
}

void sub_240A8E504(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_240A8E568(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for AFibBurdenAboutItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 56);
}

uint64_t initializeWithCopy for AFibBurdenAboutItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = a2 + 56;
  long long v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  sub_240BB4850();
  sub_240BB4850();
  sub_240BB4850();
  id v11 = v6;
  v10(a1 + 56, v7, v9);
  return a1;
}

void *assignWithCopy for AFibBurdenAboutItem(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[6];
  uint64_t v5 = (void *)a1[6];
  a1[6] = v4;
  id v6 = v4;

  sub_240A51F9C(a1 + 7, a2 + 7);
  return a1;
}

__n128 initializeWithTake for AFibBurdenAboutItem(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for AFibBurdenAboutItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for AFibBurdenAboutItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AFibBurdenAboutItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenAboutItem()
{
  return &type metadata for AFibBurdenAboutItem;
}

id sub_240A8E8D8@<X0>(uint64_t a1@<X8>)
{
  sub_240A3AE58();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A8EBC8();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_240BBD020;
  long long v8 = self;
  id result = objc_msgSend(v8, sel__quantityTypeWithCode_, 248);
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  id v10 = result;
  uint64_t v17 = a1;
  *(void *)(v7 + 56) = &_s39AFibBurdenSharableSummaryChartComponentVN;
  *(void *)(v7 + 64) = sub_240A8EC78();
  *(void *)(v7 + 32) = v10;
  *(void *)(v7 + 40) = 0xD00000000000001ELL;
  *(void *)(v7 + 48) = 0x8000000240BCB4F0;
  id result = objc_msgSend(v8, sel__quantityTypeWithCode_, 248);
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v11 = result;
  type metadata accessor for NotOnboardedIsOnboardedProvider();
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = 0;
  char v18 = 0;
  sub_240BB6200();
  sub_240A8ECCC();
  uint64_t v13 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *(void *)(v12 + 24) = v13;
  *(void *)(v7 + 96) = &_s28AFibBurdenEducationComponentVN;
  *(void *)(v7 + 104) = sub_240A8ED24();
  uint64_t v14 = swift_allocObject();
  *(void *)(v7 + 72) = v14;
  *(void *)(v14 + 16) = v11;
  *(void *)(v14 + 24) = 0xD000000000000013;
  *(void *)(v14 + 32) = 0x8000000240BCB510;
  *(void *)(v14 + 40) = v12;
  *(void *)(v14 + 48) = &off_26F507CE8;
  *(unsigned char *)(v14 + 56) = 1;
  id result = objc_msgSend(v8, sel__quantityTypeWithCode_, 248);
  if (result)
  {
    uint64_t v15 = sub_240BB4B50();
    uint64_t v16 = MEMORY[0x263F443A0];
    *(void *)(v7 + 136) = v15;
    *(void *)(v7 + 144) = v16;
    sub_240A23B08((uint64_t *)(v7 + 112));
    sub_240BB4B40();
    return (id)sub_240BB4A60();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_240A8EB6C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AFibBurdenSharingDataTypeDetailConfigurationProvider()
{
  return self;
}

id sub_240A8EBA0@<X0>(uint64_t a1@<X8>)
{
  return sub_240A8E8D8(a1);
}

void sub_240A8EBC8()
{
  if (!qword_268C9F7A0)
  {
    sub_240A8EC20();
    unint64_t v0 = sub_240BB7AB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9F7A0);
    }
  }
}

unint64_t sub_240A8EC20()
{
  unint64_t result = qword_268C9F7A8;
  if (!qword_268C9F7A8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C9F7A8);
  }
  return result;
}

unint64_t sub_240A8EC78()
{
  unint64_t result = qword_268C9F7B0;
  if (!qword_268C9F7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F7B0);
  }
  return result;
}

unint64_t sub_240A8ECCC()
{
  unint64_t result = qword_26AFD7558;
  if (!qword_26AFD7558)
  {
    sub_240A3AE58();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD7558);
  }
  return result;
}

unint64_t sub_240A8ED24()
{
  unint64_t result = qword_268C9F7B8;
  if (!qword_268C9F7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F7B8);
  }
  return result;
}

uint64_t sub_240A8ED78()
{
  swift_bridgeObjectRelease();
  sub_240BB50A0();

  return MEMORY[0x270FA0238](v0, 57, 7);
}

uint64_t *sub_240A8EDC0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_240BB2EE0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    id v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    id v11 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v11;
    id v12 = v10;
    id v13 = v11;
  }
  return a1;
}

void sub_240A8EE9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240BB2EE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);

  int v5 = *(void **)(a1 + *(int *)(a2 + 24));
}

uint64_t sub_240A8EF1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240BB2EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  id v10 = *(void **)(a2 + v8);
  *(void *)(a1 + v8) = v10;
  id v11 = v9;
  id v12 = v10;
  return a1;
}

uint64_t sub_240A8EFA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240BB2EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  uint64_t v11 = *(int *)(a3 + 24);
  id v12 = *(void **)(a2 + v11);
  id v13 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = v12;
  id v14 = v12;

  return a1;
}

uint64_t sub_240A8F048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240BB2EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_240A8F0CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240BB2EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  uint64_t v9 = *(int *)(a3 + 24);
  id v10 = *(void **)(a1 + v9);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);

  return a1;
}

uint64_t sub_240A8F164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240A8F178);
}

uint64_t sub_240A8F178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240BB2EE0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_240A8F238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240A8F24C);
}

uint64_t sub_240A8F24C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_240BB2EE0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for AFibBurdenPDFChartAverageQuery()
{
  uint64_t result = qword_268C9F7C0;
  if (!qword_268C9F7C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240A8F354()
{
  uint64_t result = sub_240BB2EE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_240A8F3F0(uint64_t a1, uint64_t a2)
{
  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240A90234(0, &qword_268CA0220, MEMORY[0x263F079C8], MEMORY[0x263F8D8F0]);
  v3[14] = swift_task_alloc();
  sub_240A90234(0, &qword_268C9F180, MEMORY[0x263F07920], v4);
  v3[15] = swift_task_alloc();
  sub_240BB28D0();
  v3[16] = swift_task_alloc();
  uint64_t v5 = sub_240BB2CF0();
  v3[17] = v5;
  v3[18] = *(void *)(v5 - 8);
  v3[19] = swift_task_alloc();
  sub_240A90234(0, &qword_268C9F7E0, (uint64_t (*)(uint64_t))sub_240A90298, MEMORY[0x263F08FD0]);
  v3[20] = swift_task_alloc();
  uint64_t v6 = sub_240BB6CD0();
  v3[21] = v6;
  v3[22] = *(void *)(v6 - 8);
  v3[23] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_240A8F644, 0, 0);
}

uint64_t sub_240A8F644()
{
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v4 = v0[15];
  uint64_t v17 = v0[14];
  uint64_t v16 = v0[13];
  uint64_t v18 = type metadata accessor for AFibBurdenPDFChartAverageQuery();
  uint64_t v5 = self;
  sub_240BB27D0();
  uint64_t v6 = (void *)sub_240BB2C90();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[24] = v7;
  v0[25] = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v7(v1, v3);
  sub_240BB27A0();
  uint64_t v8 = (void *)sub_240BB2C90();
  v7(v1, v3);
  id v9 = objc_msgSend(v5, sel_predicateForSamplesWithStartDate_endDate_options_, v6, v8, 0);

  sub_240A90298();
  sub_240BB6C80();

  sub_240BB27A0();
  uint64_t v10 = sub_240BB2EE0();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v4, v16, v10);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v4, 0, 1, v10);
  uint64_t v12 = sub_240BB2F10();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v17, 1, 1, v12);
  sub_240BB28C0();
  sub_240BB6CC0();
  uint64_t v13 = *(void *)(v16 + *(int *)(v18 + 20));
  id v14 = (void *)swift_task_alloc();
  v0[26] = v14;
  void *v14 = v0;
  v14[1] = sub_240A8F978;
  return MEMORY[0x270EF32B0](v13);
}

uint64_t sub_240A8F978(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 216) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_240A8FD10;
  }
  else
  {
    *(void *)(v4 + 224) = a1;
    uint64_t v5 = sub_240A8FAA0;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_240A8FAA0()
{
  id v14 = (id)v0[28];
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[24];
  uint64_t v17 = v0[23];
  uint64_t v15 = v0[22];
  uint64_t v16 = v0[21];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[17];
  uint64_t v4 = (void *)v0[12];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = MEMORY[0x263F8EE78];
  sub_240BB27D0();
  uint64_t v13 = (void *)sub_240BB2C90();
  v1(v2, v3);
  sub_240BB27A0();
  uint64_t v6 = (void *)sub_240BB2C90();
  v1(v2, v3);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v4;
  *(void *)(v7 + 24) = v5;
  v0[6] = sub_240A90350;
  v0[7] = v7;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_240A9011C;
  v0[5] = &unk_26F505458;
  uint64_t v8 = _Block_copy(v0 + 2);
  id v9 = v4;
  swift_retain();
  swift_release();
  objc_msgSend(v14, sel_enumerateStatisticsFromDate_toDate_withBlock_, v13, v6, v8);
  _Block_release(v8);

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  swift_beginAccess();
  uint64_t v10 = *(void *)(v5 + 16);
  sub_240BB4850();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(uint64_t))v0[1];
  return v11(v10);
}

uint64_t sub_240A8FD10()
{
  (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

id sub_240A8FDD4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a3;
  uint64_t v6 = type metadata accessor for AFibBurdenPDFChartPoint();
  uint64_t v28 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240BB2CF0();
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_240BB27F0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(a1, sel_averageQuantity);
  if (result)
  {
    uint64_t v16 = result;
    uint64_t v17 = (unint64_t *)(a4 + 16);
    objc_msgSend(result, sel_doubleValueForUnit_, v27);
    uint64_t v19 = v18;

    id v20 = objc_msgSend(a1, sel_startDate);
    sub_240BB2CB0();

    id v21 = objc_msgSend(a1, sel_endDate);
    sub_240BB2CB0();

    sub_240BB27B0();
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v8, v14, v11);
    *(void *)&v8[*(int *)(v6 + 20)] = v19;
    *(void *)&v8[*(int *)(v6 + 24)] = MEMORY[0x263F8EE88];
    swift_beginAccess();
    unint64_t v22 = *v17;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v17 = v22;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v22 = sub_240A42B3C(0, *(void *)(v22 + 16) + 1, 1, v22);
      *uint64_t v17 = v22;
    }
    unint64_t v25 = *(void *)(v22 + 16);
    unint64_t v24 = *(void *)(v22 + 24);
    if (v25 >= v24 >> 1)
    {
      unint64_t v22 = sub_240A42B3C(v24 > 1, v25 + 1, 1, v22);
      *uint64_t v17 = v22;
    }
    *(void *)(v22 + 16) = v25 + 1;
    sub_240A90358((uint64_t)v8, v22+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v25);
    swift_endAccess();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return result;
}

void sub_240A9011C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_240A90190(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_240A524D4;
  return sub_240A8F3F0(a1, a2);
}

void sub_240A90234(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_240A90298()
{
  unint64_t result = qword_268C9ED40;
  if (!qword_268C9ED40)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268C9ED40);
  }
  return result;
}

uint64_t sub_240A902D8()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240A90310()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

id sub_240A90350(void *a1, uint64_t a2)
{
  return sub_240A8FDD4(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_240A90358(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AFibBurdenPDFChartPoint();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_240A903C0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(v7 + 16) = a1;
  sub_240A90524(a2, a1, (uint64_t)v16);
  sub_240A925F4((uint64_t)v16, v7 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorViewModel_state);
  *(void *)(v7 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorViewModel_healthStore) = a3;
  uint64_t v17 = v7 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorViewModel_calendar;
  uint64_t v18 = sub_240BB2EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v17, a4, v18);
  uint64_t v19 = (void *)(v7 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorViewModel_dateGenerator);
  *uint64_t v19 = a5;
  v19[1] = a6;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_240A90524@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  sub_240A92720(0, &qword_268C9F818, (void (*)(uint64_t))type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = (void *)sub_240A942A0(a2);
  id v10 = objc_msgSend(v9, sel_identifier);

  uint64_t v11 = sub_240BB6DE0();
  uint64_t v13 = v12;

  if (*(void *)(a1 + 16) && (unint64_t v14 = sub_240AB9E08(v11, v13), (v15 & 1) != 0))
  {
    unint64_t v16 = v14;
    uint64_t v17 = *(void *)(a1 + 56);
    uint64_t v18 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
    uint64_t v19 = *(void *)(v18 - 8);
    sub_240A92658(v17 + *(void *)(v19 + 72) * v16, (uint64_t)v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v8, 0, 1, v18);
  }
  else
  {
    uint64_t v18 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v8, 1, 1, v18);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v8, 1, v18) != 1) {
    return sub_240A925F4((uint64_t)v8, a3);
  }
  sub_240A92774((uint64_t)v8, &qword_268C9F818, (void (*)(uint64_t))type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
  uint64_t result = sub_240BB78D0();
  __break(1u);
  return result;
}

id sub_240A907B0()
{
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorViewModel_healthStore), sel_displayTypeController);
  if (!v1)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v2 = v1;
  uint64_t v3 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v4 = (void *)sub_240A942A0(*(unsigned char *)(v0 + 16));
  id v5 = objc_msgSend(v2, sel_displayTypeForObjectType_, v4);

  if (!v5)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v6 = objc_msgSend(v5, sel_displayCategory);
  id v7 = objc_msgSend(v6, sel_color);

  if (!v7)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    JUMPOUT(0x240A90BA4);
  }
  sub_240A34E00();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_240BBAD40;
  *(void *)(v8 + 32) = v7;
  sub_240BB6F30();
  sub_240A92828();
  id v9 = v7;
  id v10 = (void *)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  uint64_t v11 = self;
  id v12 = objc_msgSend(v11, sel_configurationWithPaletteColors_, v10);

  id v13 = v12;
  id v14 = objc_msgSend(v11, sel_configurationWithPointSize_weight_, 6, 22.0);
  id v15 = objc_msgSend(v13, sel_configurationByApplyingConfiguration_, v14);

  switch(v3)
  {
    case 1:
      goto LABEL_13;
    case 2:
      goto LABEL_7;
    case 3:
      goto LABEL_9;
    case 4:
      goto LABEL_11;
    default:
      id v16 = v15;
      uint64_t v17 = (void *)sub_240BB6DA0();
      id v18 = objc_msgSend(self, sel__systemImageNamed_withConfiguration_, v17, v16);

      if (v18) {
        goto LABEL_14;
      }
      __break(1u);
LABEL_7:
      id v19 = v15;
      id v20 = (void *)sub_240BB6DA0();
      id v18 = objc_msgSend(self, sel__systemImageNamed_withConfiguration_, v20, v19);

      if (!v18)
      {
        __break(1u);
LABEL_9:
        id v21 = v15;
        unint64_t v22 = (void *)sub_240BB6DA0();
        id v18 = objc_msgSend(self, sel__systemImageNamed_withConfiguration_, v22, v21);

        if (!v18)
        {
          __break(1u);
LABEL_11:
          id v23 = v15;
          unint64_t v24 = (void *)sub_240BB6DA0();
          id v18 = objc_msgSend(self, sel__systemImageNamed_withConfiguration_, v24, v23);

          if (!v18)
          {
            __break(1u);
LABEL_13:
            id v25 = v15;
            uint64_t v26 = (void *)sub_240BB6DA0();
            id v18 = objc_msgSend(self, sel__systemImageNamed_withConfiguration_, v26, v25);

            if (!v18) {
              goto LABEL_18;
            }
          }
        }
      }
LABEL_14:

      return v18;
  }
}

void sub_240A90BB8()
{
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorViewModel_healthStore), sel_displayTypeController);
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = (void *)sub_240A942A0(*(unsigned char *)(v0 + 16));
    id v4 = objc_msgSend(v2, sel_displayTypeForObjectType_, v3);

    if (v4)
    {
      id v5 = objc_msgSend(v4, sel_localization);

      id v6 = objc_msgSend(v5, sel_displayName);
      sub_240BB6DE0();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_240A90CA0()
{
  id v1 = v0;
  uint64_t v160 = *v0;
  uint64_t v149 = sub_240BB2C00();
  uint64_t v148 = *(void *)(v149 - 8);
  MEMORY[0x270FA5388](v149);
  v147 = (char *)&v133 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_240BB2C40();
  uint64_t v145 = *(void *)(v146 - 8);
  MEMORY[0x270FA5388](v146);
  uint64_t v144 = (char *)&v133 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_240BB2C20();
  uint64_t v142 = *(void *)(v143 - 8);
  MEMORY[0x270FA5388](v143);
  uint64_t v141 = (char *)&v133 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = sub_240BB2EC0();
  uint64_t v157 = *(void *)(v158 - 8);
  MEMORY[0x270FA5388](v158);
  long long v156 = (char *)&v133 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240BB2AB0();
  MEMORY[0x270FA5388](v6 - 8);
  long long v159 = (char *)&v133 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = (void *)sub_240BB2EE0();
  uint64_t v164 = *(v166 - 1);
  uint64_t v8 = MEMORY[0x270FA5388](v166);
  uint64_t v165 = (char *)&v133 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  long long v155 = (char *)&v133 - v10;
  uint64_t v11 = sub_240BB2F10();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v154 = (char *)&v133 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A92720(0, &qword_268C9F820, MEMORY[0x263F06FF0]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v153 = (char *)&v133 - v14;
  sub_240A92720(0, &qword_268C9F828, MEMORY[0x263F07008]);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v152 = (char *)&v133 - v16;
  uint64_t v17 = sub_240BB2C60();
  uint64_t v162 = *(void *)(v17 - 8);
  uint64_t v163 = v17;
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  unsigned int v137 = (char *)&v133 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v138 = (char *)&v133 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  id v139 = (char *)&v133 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v140 = (char *)&v133 - v25;
  MEMORY[0x270FA5388](v24);
  v161 = (char *)&v133 - v26;
  sub_240A92720(0, &qword_268C9F830, MEMORY[0x263F07690]);
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v29 = (char *)&v133 - v28;
  uint64_t v30 = sub_240BB2D80();
  uint64_t v167 = *(void *)(v30 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  uint64_t v151 = (char *)&v133 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  v168 = (char *)&v133 - v33;
  sub_240A92720(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490]);
  uint64_t v35 = MEMORY[0x270FA5388](v34 - 8);
  int v150 = (char *)&v133 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  id v38 = (char *)&v133 - v37;
  uint64_t v39 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
  MEMORY[0x270FA5388](v39 - 8);
  uint64_t v41 = (char *)&v133 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_240BB2CF0();
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  unint64_t v46 = (char *)&v133 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v44);
  uint64_t v48 = (char *)&v133 - v47;
  uint64_t v49 = (uint64_t)v1 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorViewModel_state;
  swift_beginAccess();
  sub_240A92658(v49, (uint64_t)v41);
  sub_240A4971C((uint64_t)v41, (uint64_t)v38);
  uint64_t v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
  if (v50(v38, 1, v42) == 1)
  {
    sub_240A92774((uint64_t)v38, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490]);
    if (qword_26AFD7BF0 != -1) {
      swift_once();
    }
    uint64_t v51 = sub_240BB5990();
    sub_240A395FC(v51, (uint64_t)qword_26AFDEB80);
    swift_retain_n();
    id v52 = sub_240BB5970();
    os_log_type_t v53 = sub_240BB7170();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      uint64_t v173 = v55;
      *(_DWORD *)uint64_t v54 = 136446467;
      uint64_t v175 = v160;
      swift_getMetatypeMetadata();
      uint64_t v56 = sub_240BB6E10();
      uint64_t v175 = sub_240A38940(v56, v57, &v173);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v54 + 12) = 2081;
      uint64_t v58 = (void *)sub_240A942A0(*((unsigned char *)v1 + 16));
      id v59 = objc_msgSend(v58, sel_identifier);

      uint64_t v60 = sub_240BB6DE0();
      unint64_t v62 = v61;

      uint64_t v175 = sub_240A38940(v60, v62, &v173);
      sub_240BB75F0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v52, v53, "[%{public}s] No last updated date for identifier %{private}s", (uint8_t *)v54, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v55, -1, -1);
      MEMORY[0x24560B930](v54, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    return 0;
  }
  uint64_t v160 = v43;
  long long v63 = *(uint64_t (**)(char *, char *, uint64_t))(v43 + 32);
  uint64_t v136 = v42;
  uint64_t v64 = v63(v48, v38, v42);
  (*(void (**)(uint64_t))((char *)v1 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorViewModel_dateGenerator))(v64);
  unint64_t v65 = (char *)v1 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorViewModel_calendar;
  sub_240BB2E90();
  uint64_t v66 = v167;
  int v67 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v167 + 48))(v29, 1, v30);
  uint64_t v68 = v66;
  uint64_t v69 = v48;
  if (v67 == 1)
  {
    sub_240BB2D60();
    sub_240A92774((uint64_t)v29, &qword_268C9F830, MEMORY[0x263F07690]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v168, v29, v30);
  }
  uint64_t v71 = v165;
  uint64_t v72 = v166;
  uint64_t v73 = v164;
  char v74 = sub_240BB2E80();
  uint64_t v135 = v46;
  if (v74)
  {
    uint64_t v75 = v30;
    uint64_t v76 = v48;
    uint64_t v77 = v167;
    uint64_t v78 = v152;
    sub_240BB2B90();
    uint64_t v79 = sub_240BB2BA0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v78, 0, 1, v79);
    uint64_t v80 = v153;
    sub_240BB2B70();
    uint64_t v81 = sub_240BB2B80();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v80, 0, 1, v81);
    sub_240BB2EB0();
    sub_240BB2D60();
    sub_240BB2E40();
    sub_240BB2AA0();
    uint64_t v82 = v161;
    sub_240BB2BC0();
    if (qword_268C9E7A8 != -1) {
      swift_once();
    }
    uint64_t v175 = sub_240BB2980();
    uint64_t v176 = v83;
    uint64_t v173 = 0xD000000000000010;
    unint64_t v174 = 0x8000000240BCB6E0;
    sub_240A927D0();
    uint64_t v84 = v163;
    sub_240BB2CD0();
    uint64_t v169 = v171;
    uint64_t v170 = v172;
    sub_240A46960();
    uint64_t v70 = sub_240BB7620();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v162 + 8))(v82, v84);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v168, v75);
    uint64_t v85 = *(void (**)(char *, uint64_t))(v160 + 8);
    uint64_t v86 = v136;
    v85(v135, v136);
    v85(v76, v86);
    return v70;
  }
  uint64_t v164 = v30;
  (*(void (**)(char *, char *, void *))(v73 + 16))(v71, v65, v72);
  uint64_t v87 = v157;
  uint64_t v88 = v156;
  uint64_t v89 = v158;
  (*(void (**)(char *, void, uint64_t))(v157 + 104))(v156, *MEMORY[0x263F07870], v158);
  uint64_t v90 = v150;
  sub_240BB2E70();
  uint64_t v91 = v89;
  uint64_t v92 = v136;
  (*(void (**)(char *, uint64_t))(v87 + 8))(v88, v91);
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v50)(v90, 1, v92);
  if (result != 1)
  {
    uint64_t v94 = v165;
    char v95 = sub_240BB2E80();
    (*(void (**)(char *, void *))(v73 + 8))(v94, v166);
    uint64_t v97 = v160 + 8;
    long long v96 = *(void (**)(char *, uint64_t))(v160 + 8);
    v96(v90, v92);
    v134 = v69;
    v166 = v96;
    if (v95)
    {
      uint64_t v160 = v97;
      if (qword_268C9E7A8 != -1) {
        swift_once();
      }
      uint64_t v175 = sub_240BB2980();
      uint64_t v176 = v98;
      uint64_t v173 = 0x4452455453455940;
      unint64_t v174 = 0xEB00000000405941;
      uint64_t v171 = sub_240BB2980();
      uint64_t v172 = v99;
      sub_240A46960();
      uint64_t v100 = sub_240BB7620();
      uint64_t v102 = v101;
      swift_bridgeObjectRelease();
      uint64_t v103 = swift_bridgeObjectRelease();
      uint64_t v175 = v100;
      uint64_t v176 = v102;
      uint64_t v173 = 0xD000000000000010;
      unint64_t v174 = 0x8000000240BCB630;
      unint64_t v104 = v137;
      MEMORY[0x2456059C0](v103);
      uint64_t v105 = v141;
      sub_240BB2C10();
      uint64_t v106 = v138;
      sub_240BB2BD0();
      (*(void (**)(char *, uint64_t))(v142 + 8))(v105, v143);
      uint64_t v107 = v163;
      uint64_t v108 = *(void (**)(char *, uint64_t))(v162 + 8);
      v108(v104, v163);
      uint64_t v109 = v144;
      sub_240BB2C30();
      unsigned int v110 = v139;
      sub_240BB2BE0();
      (*(void (**)(char *, uint64_t))(v145 + 8))(v109, v146);
      v108(v106, v107);
      unint64_t v111 = v147;
      sub_240BB2BF0();
      id v112 = v140;
      sub_240BB2BB0();
      (*(void (**)(char *, uint64_t))(v148 + 8))(v111, v149);
      v108(v110, v107);
      uint64_t v113 = v161;
      uint64_t v114 = v168;
      sub_240BB2C50();
      v108(v112, v107);
      sub_240A927D0();
      uint64_t v115 = v134;
      sub_240BB2CD0();
      v108(v113, v107);
      uint64_t v169 = v171;
      uint64_t v170 = v172;
      uint64_t v70 = sub_240BB7620();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v167 + 8))(v114, v164);
      uint64_t v116 = v136;
      unint64_t v117 = (void (*)(char *, uint64_t))v166;
      ((void (*)(char *, uint64_t))v166)(v135, v136);
      v117(v115, v116);
    }
    else
    {
      if (qword_268C9E7A8 != -1) {
        swift_once();
      }
      uint64_t v175 = sub_240BB2980();
      uint64_t v176 = v118;
      uint64_t v173 = 0xD000000000000010;
      unint64_t v174 = 0x8000000240BCB630;
      uint64_t v119 = v137;
      MEMORY[0x2456059C0]();
      uint64_t v120 = v141;
      sub_240BB2C10();
      uint64_t v121 = v138;
      sub_240BB2BD0();
      (*(void (**)(char *, uint64_t))(v142 + 8))(v120, v143);
      uint64_t v122 = v163;
      uint64_t v123 = *(void (**)(char *, uint64_t))(v162 + 8);
      v123(v119, v163);
      uint64_t v124 = v144;
      sub_240BB2C30();
      uint64_t v125 = v139;
      sub_240BB2BE0();
      (*(void (**)(char *, uint64_t))(v145 + 8))(v124, v146);
      v123(v121, v122);
      unsigned int v126 = v147;
      sub_240BB2BF0();
      uint64_t v127 = v140;
      sub_240BB2BB0();
      (*(void (**)(char *, uint64_t))(v148 + 8))(v126, v149);
      v123(v125, v122);
      uint64_t v128 = v161;
      uint64_t v129 = v168;
      sub_240BB2C50();
      v123(v127, v122);
      sub_240A927D0();
      uint64_t v130 = v134;
      sub_240BB2CD0();
      v123(v128, v122);
      uint64_t v169 = v171;
      uint64_t v170 = v172;
      sub_240A46960();
      uint64_t v70 = sub_240BB7620();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v167 + 8))(v129, v164);
      uint64_t v131 = v136;
      uint64_t v132 = (void (*)(char *, uint64_t))v166;
      ((void (*)(char *, uint64_t))v166)(v135, v136);
      v132(v130, v131);
    }
    return v70;
  }
  __break(1u);
  return result;
}

uint64_t sub_240A92278(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A90524(a1, *(unsigned char *)(v2 + 16), (uint64_t)v6);
  uint64_t v7 = v2 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorViewModel_state;
  swift_beginAccess();
  sub_240A926BC((uint64_t)v6, v7);
  return swift_endAccess();
}

uint64_t sub_240A92360()
{
  sub_240A92868(v0 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorViewModel_state);

  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorViewModel_calendar;
  uint64_t v2 = sub_240BB2EE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_240A92434()
{
  return type metadata accessor for AFibBurdenLifeFactorViewModel();
}

uint64_t type metadata accessor for AFibBurdenLifeFactorViewModel()
{
  uint64_t result = qword_268C9F808;
  if (!qword_268C9F808) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_240A92488()
{
  sub_240A92720(319, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490]);
  if (v0 <= 0x3F)
  {
    sub_240BB2EE0();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_240A92594()
{
  return sub_240A55368(*(unsigned __int8 *)(*(void *)v0 + 16) | 0x100u);
}

uint64_t (*sub_240A925A4(uint64_t *a1))()
{
  *a1 = sub_240A55368(*(unsigned __int8 *)(*(void *)v1 + 16) | 0x100u);
  a1[1] = v3;
  return destroy for CenteredLabelWithSpinnerContentConfiguration;
}

uint64_t sub_240A925F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_240A92658(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240A926BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_240A92720(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240BB75E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_240A92774(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_240A92720(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_240A927D0()
{
  unint64_t result = qword_268C9F838;
  if (!qword_268C9F838)
  {
    sub_240BB2C60();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F838);
  }
  return result;
}

unint64_t sub_240A92828()
{
  unint64_t result = qword_268C9F840;
  if (!qword_268C9F840)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268C9F840);
  }
  return result;
}

uint64_t sub_240A92868(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_240A92954()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IRNInternalSettingsViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for IRNInternalSettingsViewController()
{
  return self;
}

ValueMetadata *type metadata accessor for HeartRateArticleDataProvider()
{
  return &type metadata for HeartRateArticleDataProvider;
}

void sub_240A929BC()
{
  sub_240A9385C(0, (unint64_t *)&qword_268C9E868, MEMORY[0x263F42AE8], MEMORY[0x263F8E0F8]);
  uint64_t v0 = sub_240BB34F0();
  uint64_t v1 = *(void *)(v0 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 72);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_240BBD370;
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v5 = (id)qword_26AFDECD8;
  uint64_t v6 = (void *)sub_240BB6DA0();
  id v7 = objc_msgSend(self, sel_imageNamed_inBundle_, v6, v5);

  if (v7)
  {
    unint64_t v8 = v4 + v2;
    *(void *)unint64_t v8 = v7;
    *(unsigned char *)(v8 + 8) = 0;
    uint64_t v9 = *(void (**)(void))(v1 + 104);
    ((void (*)(unint64_t, void, uint64_t))v9)(v4 + v2, *MEMORY[0x263F42AB8], v0);
    uint64_t v10 = (uint64_t *)(v4 + v2 + v3);
    *uint64_t v10 = sub_240BB2980();
    v10[1] = v11;
    ((void (*)(uint64_t *, void, uint64_t))v9)(v10, *MEMORY[0x263F42AC0], v0);
    uint64_t v12 = v4 + v2 + 2 * v3;
    *(void *)uint64_t v12 = sub_240BB2980();
    *(void *)(v12 + 8) = v13;
    *(unsigned char *)(v12 + 16) = 0;
    unsigned int v42 = *MEMORY[0x263F42AE0];
    v9(v8 + 2 * v3);
    uint64_t v14 = (uint64_t *)(v8 + 3 * v3);
    uint64_t *v14 = sub_240BB2980();
    v14[1] = v15;
    v14[2] = 0;
    uint64_t v16 = *MEMORY[0x263F42A80];
    unsigned int v41 = *MEMORY[0x263F42A80];
    ((void (*)(uint64_t *, uint64_t, uint64_t))v9)(v14, v16, v0);
    unint64_t v17 = v8 + 4 * v3;
    *(void *)unint64_t v17 = sub_240BB2980();
    *(void *)(v17 + 8) = v18;
    *(unsigned char *)(v17 + 16) = 0;
    ((void (*)(unint64_t, void, uint64_t))v9)(v17, v42, v0);
    uint64_t v19 = (uint64_t *)(v8 + 5 * v3);
    *uint64_t v19 = sub_240BB2980();
    v19[1] = v20;
    v19[2] = 0;
    ((void (*)(uint64_t *, uint64_t, uint64_t))v9)(v19, v16, v0);
    unint64_t v21 = v8 + 6 * v3;
    *(void *)unint64_t v21 = sub_240BB2980();
    *(void *)(v21 + 8) = v22;
    *(unsigned char *)(v21 + 16) = 0;
    ((void (*)(unint64_t, void, uint64_t))v9)(v21, v42, v0);
    unint64_t v23 = v8 + 7 * v3;
    *(void *)unint64_t v23 = sub_240BB2980();
    *(void *)(v23 + 8) = v24;
    *(unsigned char *)(v23 + 16) = 0;
    ((void (*)(unint64_t, void, uint64_t))v9)(v23, v42, v0);
    uint64_t v25 = (uint64_t *)(v8 + 8 * v3);
    *uint64_t v25 = sub_240BB2980();
    v25[1] = v26;
    void v25[2] = 0;
    ((void (*)(uint64_t *, void, uint64_t))v9)(v25, v41, v0);
    unint64_t v27 = v8 + 9 * v3;
    *(void *)unint64_t v27 = sub_240BB2980();
    *(void *)(v27 + 8) = v28;
    *(unsigned char *)(v27 + 16) = 0;
    ((void (*)(unint64_t, void, uint64_t))v9)(v27, v42, v0);
    sub_240A93268((uint64_t *)(v8 + 10 * v3));
    uint64_t v29 = (uint64_t *)(v8 + 11 * v3);
    *uint64_t v29 = sub_240BB2980();
    v29[1] = v30;
    v29[2] = 0;
    ((void (*)(uint64_t *, void, uint64_t))v9)(v29, v41, v0);
    unint64_t v31 = v8 + 12 * v3;
    *(void *)unint64_t v31 = sub_240BB2980();
    *(void *)(v31 + 8) = v32;
    *(unsigned char *)(v31 + 16) = 0;
    ((void (*)(unint64_t, void, uint64_t))v9)(v31, v42, v0);
    uint64_t v33 = (uint64_t *)(v8 + 13 * v3);
    sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_240BBD380;
    *(void *)(v34 + 32) = sub_240BB2980();
    *(void *)(v34 + 40) = v35;
    *(void *)(v34 + 48) = sub_240BB2980();
    *(void *)(v34 + 56) = v36;
    *(void *)(v34 + 64) = sub_240BB2980();
    *(void *)(v34 + 72) = v37;
    *(void *)(v34 + 80) = sub_240BB2980();
    *(void *)(v34 + 88) = v38;
    *(void *)(v34 + 96) = sub_240BB2980();
    *(void *)(v34 + 104) = v39;
    *(void *)(v34 + 112) = sub_240BB2980();
    *(void *)(v34 + 120) = v40;
    *uint64_t v33 = v34;
    ((void (*)(uint64_t *, void, uint64_t))v9)(v33, *MEMORY[0x263F42A88], v0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_240A93268@<X0>(uint64_t *a1@<X8>)
{
  sub_240A9385C(0, &qword_26AFD7B70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v23 - v3;
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_240BB2980();
  uint64_t v7 = v6;
  uint64_t v8 = sub_240A939CC();
  uint64_t v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v10 = v8 & 0xFFFFFFFFFFFFLL;
  }
  if (v10)
  {
    *a1 = v5;
    a1[1] = v7;
    a1[2] = v8;
    a1[3] = v9;
    sub_240BB2B10();
    uint64_t v11 = sub_240BB2B20();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v4, 1, v11);
    if (result == 1)
    {
      __break(1u);
    }
    else
    {
      sub_240A78190();
      uint64_t v15 = (char *)a1 + *(int *)(v14 + 64);
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v4, v11);
      uint64_t v16 = *MEMORY[0x263F42A70];
      uint64_t v17 = sub_240BB34E0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v15, v16, v17);
      uint64_t v18 = *MEMORY[0x263F42A98];
      uint64_t v19 = sub_240BB34F0();
      return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(a1, v18, v19);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    *a1 = v5;
    a1[1] = v7;
    *((unsigned char *)a1 + 16) = 0;
    uint64_t v20 = *MEMORY[0x263F42AE0];
    uint64_t v21 = sub_240BB34F0();
    uint64_t v22 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104);
    return v22(a1, v20, v21);
  }
  return result;
}

unint64_t sub_240A93598()
{
  return 0xD000000000000024;
}

uint64_t sub_240A935B4()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  return sub_240BB2980();
}

uint64_t sub_240A93650()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  return sub_240BB2980();
}

uint64_t sub_240A936F4()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  return sub_240BB2980();
}

void sub_240A93794()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  id v0 = (id)qword_26AFDECD8;
  uint64_t v1 = (void *)sub_240BB6DA0();
  id v2 = objc_msgSend(self, sel_imageNamed_inBundle_, v1, v0);

  if (!v2) {
    __break(1u);
  }
}

void sub_240A9385C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_240A938C0()
{
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
  uint64_t v0 = MEMORY[0x24560A470]((id)*MEMORY[0x263F09E38]);
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9940);
  uint64_t v1 = MEMORY[0x24560A460]((id)*MEMORY[0x263F09368]);
  uint64_t v2 = MEMORY[0x24560A460]((id)*MEMORY[0x263F09318]);
  sub_240A39C18(0, (unint64_t *)&qword_26AFD77C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240BBB440;
  *(void *)(inited + 32) = v0;
  *(void *)(inited + 40) = v1;
  *(void *)(inited + 48) = v2;
  unint64_t v6 = inited;
  sub_240BB6F30();
  uint64_t v4 = sub_240B8F7D8(v6);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_240A939CC()
{
  uint64_t v0 = self;
  uint64_t v1 = (void *)sub_240BB6DA0();
  id v2 = objc_msgSend(v0, sel_modelSpecificLocalizedStringKeyForKey_, v1);

  if (v2)
  {
    sub_240BB6DE0();

    if (qword_26AFDA090 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_240BB2980();
    swift_bridgeObjectRelease();
    return v3;
  }
  else
  {
    if (qword_26AFDA090 != -1) {
      swift_once();
    }
    return sub_240BB2980();
  }
}

uint64_t type metadata accessor for CardioFitnessOnboardingConfirmDetailsViewController()
{
  uint64_t result = qword_268C9F860;
  if (!qword_268C9F860) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240A93BAC()
{
  return swift_initClassMetadata2();
}

id sub_240A93C10()
{
  uint64_t v1 = v0;
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for CardioFitnessOnboardingConfirmDetailsViewController();
  objc_msgSendSuper2(&v8, sel_viewDidLoad);
  id v2 = objc_msgSend(v0, sel_hxui_addNextButtonWithAccessibilityIdentifier_, 0);
  uint64_t v3 = qword_268C9F850;
  uint64_t v4 = *(void **)&v1[qword_268C9F850];
  *(void *)&v1[qword_268C9F850] = v2;

  uint64_t v5 = *(void **)&v1[v3];
  if (v5)
  {
    id v6 = v5;
    objc_msgSend(v6, sel_setEnabled_, sub_240AF9D14() & 1);
  }
  return objc_msgSend(v1, sel_hxui_addCancelButton);
}

void sub_240A93CE0(void *a1)
{
  id v1 = a1;
  sub_240A93C10();
}

uint64_t sub_240A93D28(char *a1)
{
  uint64_t result = MEMORY[0x24560BA20](&a1[qword_268C9F848]);
  if (result)
  {
    uint64_t v3 = (void *)result;
    uint64_t v4 = a1;
    sub_240B62C1C(v4, v3);

    return sub_240BB50A0();
  }
  return result;
}

uint64_t sub_240A93D94(char *a1)
{
  uint64_t result = MEMORY[0x24560BA20](&a1[qword_268C9F848]);
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = a1;
    sub_240AC4C34(v3);

    return sub_240BB50A0();
  }
  return result;
}

void sub_240A93E00(void *a1)
{
  id v4 = a1;
  id v1 = objc_msgSend(v4, sel_presentedViewController);
  if (v1)
  {
    id v2 = v1;
    objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);

    uint64_t v3 = v2;
  }
  else
  {
    uint64_t v3 = v4;
  }
}

void sub_240A93E80()
{
}

uint64_t sub_240A93EB0()
{
  sub_240A484BC(v0 + qword_268C9F848);

  return swift_release();
}

id sub_240A93F00()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardioFitnessOnboardingConfirmDetailsViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240A93F38(uint64_t a1)
{
  sub_240A484BC(a1 + qword_268C9F848);

  return swift_release();
}

uint64_t sub_240A93F94()
{
  return type metadata accessor for CardioFitnessOnboardingConfirmDetailsViewController();
}

uint64_t sub_240A93F9C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + qword_268C9F848 + 8) = a2;
  swift_unknownObjectWeakAssign();

  return sub_240BB50A0();
}

void sub_240A93FE8()
{
  id v1 = v0;
  id v2 = objc_allocWithZone((Class)type metadata accessor for CardioFitnessOnboardingAboutHealthDetailsViewController());
  id v3 = sub_240AE482C();
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v3);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824A8]), sel_initWithBarButtonSystemItem_target_action_, 0, v1, sel_dismissPresentedViewController);
  id v5 = objc_msgSend(v3, sel_navigationItem);
  objc_msgSend(v5, sel_setRightBarButtonItem_, v6);

  objc_msgSend(v1, sel_presentViewController_animated_completion_, v4, 1, 0);
}

unsigned char *storeEnumTagSinglePayload for AFibBurdenLifeFactor(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240A941B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenLifeFactor()
{
  return &type metadata for AFibBurdenLifeFactor;
}

unint64_t sub_240A941F0()
{
  unint64_t result = qword_268C9F870;
  if (!qword_268C9F870)
  {
    sub_240A94248();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F870);
  }
  return result;
}

void sub_240A94248()
{
  if (!qword_268C9F878)
  {
    unint64_t v0 = sub_240BB6F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9F878);
    }
  }
}

uint64_t sub_240A942A0(char a1)
{
  switch(a1)
  {
    case 1:
      sub_240A34DC4(0, (unint64_t *)&qword_26AFD9940);
      id v2 = (id *)MEMORY[0x263F09410];
      return MEMORY[0x24560A460](*v2);
    case 2:
      sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
      uint64_t v1 = (id *)MEMORY[0x263F09C38];
      return MEMORY[0x24560A470](*v1);
    case 3:
      sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
      uint64_t v1 = (id *)MEMORY[0x263F09E78];
      return MEMORY[0x24560A470](*v1);
    case 4:
      sub_240A34DC4(0, (unint64_t *)&qword_26AFD9940);
      id v2 = (id *)MEMORY[0x263F09388];
      return MEMORY[0x24560A460](*v2);
    default:
      sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
      uint64_t v1 = (id *)MEMORY[0x263F09BC8];
      return MEMORY[0x24560A470](*v1);
  }
}

void sub_240A943D0(void *a1@<X8>)
{
  *a1 = &unk_26F503370;
}

unint64_t sub_240A943E4()
{
  unint64_t result = qword_268C9F880;
  if (!qword_268C9F880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F880);
  }
  return result;
}

uint64_t sub_240A94438@<X0>(uint64_t a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v2 = sub_240BB65C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A983FC();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A98548();
  uint64_t v24 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = v1;
  sub_240A984AC(0);
  sub_240A98008(&qword_268C9F8E8, sub_240A984AC);
  sub_240BB6870();
  sub_240BB65B0();
  sub_240A98008(&qword_268C9F8F8, (void (*)(uint64_t))sub_240A983FC);
  sub_240BB69B0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v15 = *(void **)(v23[1] + 8);
  type metadata accessor for FeatureStatusObservable();
  sub_240A98008(&qword_268C9F8B8, (void (*)(uint64_t))type metadata accessor for FeatureStatusObservable);
  id v16 = v15;
  uint64_t v17 = sub_240BB6150();
  uint64_t v19 = v24;
  uint64_t v18 = v25;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(v25, v14, v24);
  sub_240A98624();
  uint64_t v21 = (uint64_t *)(v18 + *(int *)(v20 + 36));
  *uint64_t v21 = v17;
  v21[1] = (uint64_t)v16;
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v19);
}

id *sub_240A9479C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void **)(a1 + 24);
  sub_240A1E37C(a1 + 32, (uint64_t)&v12);
  type metadata accessor for FeatureStatusObservable();
  sub_240A98008(&qword_268C9F8B8, (void (*)(uint64_t))type metadata accessor for FeatureStatusObservable);
  id v5 = v4;
  v11[0] = (id)sub_240BB6600();
  v11[1] = v6;
  v11[2] = v5;
  uint64_t v7 = *(void **)(a1 + 16);
  sub_240A986F4((uint64_t)v11, (uint64_t)v10);
  sub_240A986F4((uint64_t)v10, a2);
  *(void *)(a2 + 64) = v7;
  id v8 = v7;
  sub_240A9872C(v11);

  return sub_240A9872C(v10);
}

uint64_t sub_240A9488C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A548]), sel_init);
  id v7 = objc_msgSend(v6, sel_currentEstimate);
  id v8 = v7;
  if (v7)
  {
    id v9 = objc_msgSend(v7, sel_ISOCode);
    sub_240BB6DE0();
    uint64_t v11 = v10;
  }
  else
  {
    uint64_t v11 = 0;
  }
  id v12 = objc_msgSend(a1, sel_profileIdentifier);
  id v13 = objc_msgSend(v12, sel_type);

  if (v13 == (id)1)
  {
    uint64_t v32 = v8;
    uint64_t v14 = (void *)*MEMORY[0x263F09728];
    id v15 = objc_allocWithZone(MEMORY[0x263F0A3D0]);
    id v16 = v15;
    if (v11)
    {
      id v17 = v14;
      unint64_t v31 = v14;
      id v18 = v6;
      uint64_t v19 = a2;
      id v20 = v17;
      id v21 = a1;
      sub_240BB4850();
      uint64_t v22 = (void *)sub_240BB6DA0();
      swift_bridgeObjectRelease();
      uint64_t v23 = v16;
      uint64_t v24 = &off_2650DD000;
      id v25 = objc_msgSend(v23, sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v20, v21, v22);
      swift_bridgeObjectRelease();

      a2 = v19;
      id v6 = v18;
      uint64_t v14 = v31;

      if (!v25) {
        goto LABEL_11;
      }
LABEL_9:
      uint64_t v26 = (char *)objc_allocWithZone((Class)type metadata accessor for FeatureStatusObservable());
      id v27 = v25;
      sub_240A97678((uint64_t)v27, v26);
      sub_240A98008(&qword_268C9F8B8, (void (*)(uint64_t))type metadata accessor for FeatureStatusObservable);
      *a3 = sub_240BB6560();
      a3[1] = v28;
      a3[2] = (uint64_t)a1;
      sub_240A1E37C(a2, (uint64_t)(a3 + 4));
      id v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3B8]), (SEL)v24[126], v14, a1);

      uint64_t result = _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a2);
      a3[3] = (uint64_t)v29;
      return result;
    }
    uint64_t v24 = &off_2650DD000;
    id v25 = objc_msgSend(v15, sel_initWithFeatureIdentifier_healthStore_, v14, a1);
    if (v25) {
      goto LABEL_9;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
LABEL_11:
  uint64_t result = sub_240BB78D0();
  __break(1u);
  return result;
}

uint64_t sub_240A94B68()
{
  return sub_240BB6B10();
}

uint64_t sub_240A94C98()
{
  sub_240A35CBC(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_240BB56E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = *v0;
  if (*v0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v9 = v8;
    sub_240BB6290();

    swift_release();
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      unint64_t v10 = 0xD00000000000001BLL;
      sub_240A98090((uint64_t)v3, (uint64_t (*)(void))sub_240A35CBC);
      return v10;
    }
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    if (sub_240BB56D0())
    {
      id v12 = (void *)sub_240BB56F0();
      unsigned int v13 = objc_msgSend(v12, sel_areAllRequirementsSatisfied);

      if (v13)
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        return 0xD000000000000026;
      }
      else
      {
        uint64_t v61 = v4;
        id v16 = (void *)sub_240BB56F0();
        id v17 = objc_msgSend(v16, sel_unsatisfiedRequirementIdentifiers);

        type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(0);
        uint64_t v18 = sub_240BB6F10();

        sub_240A97424(0, (unint64_t *)&qword_268C9ED90, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureAvailabilityRequirementIdentifier, MEMORY[0x263F8E0F8]);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_240BB97E0;
        id v20 = (void *)*MEMORY[0x263F09678];
        *(void *)(inited + 32) = *MEMORY[0x263F09678];
        id v21 = v20;
        char v22 = sub_240B2B588(v18, inited);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_bridgeObjectRelease();
        if (v22)
        {
          (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v61);
          return 0xD000000000000027;
        }
        else
        {
          unint64_t v63 = 0;
          unint64_t v64 = 0xE000000000000000;
          sub_240BB77C0();
          sub_240BB6E70();
          uint64_t v37 = (void *)sub_240BB56F0();
          id v38 = objc_msgSend(v37, sel_unsatisfiedRequirementIdentifiers);

          uint64_t v39 = sub_240BB6F10();
          int64_t v40 = *(void *)(v39 + 16);
          if (v40)
          {
            uint64_t v60 = v5;
            uint64_t v62 = MEMORY[0x263F8EE78];
            sub_240B0CB94(0, v40, 0);
            uint64_t v41 = 0;
            uint64_t v42 = v62;
            do
            {
              uint64_t v43 = sub_240BB6DE0();
              uint64_t v45 = v44;
              uint64_t v62 = v42;
              unint64_t v47 = *(void *)(v42 + 16);
              unint64_t v46 = *(void *)(v42 + 24);
              if (v47 >= v46 >> 1)
              {
                sub_240B0CB94(v46 > 1, v47 + 1, 1);
                uint64_t v42 = v62;
              }
              ++v41;
              *(void *)(v42 + 16) = v47 + 1;
              uint64_t v48 = v42 + 16 * v47;
              *(void *)(v48 + 32) = v43;
              *(void *)(v48 + 40) = v45;
            }
            while (v40 != v41);
            swift_bridgeObjectRelease();
            uint64_t v5 = v60;
          }
          else
          {
            swift_bridgeObjectRelease();
            uint64_t v42 = MEMORY[0x263F8EE78];
          }
          uint64_t v62 = v42;
          sub_240A99350(0, &qword_268C9F958, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
          sub_240A98D84();
          sub_240BB6D70();
          swift_bridgeObjectRelease();
          sub_240BB6E70();
          swift_bridgeObjectRelease();
          unint64_t v10 = v63;
          (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v61);
        }
      }
      return v10;
    }
    uint64_t v14 = (void *)sub_240BB56F0();
    unsigned int v15 = objc_msgSend(v14, sel_areAllRequirementsSatisfied);

    if (v15)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return 0xD00000000000002BLL;
    }
    uint64_t v23 = (void *)sub_240BB56F0();
    unsigned int v24 = objc_msgSend(v23, sel_areAllRequirementsSatisfied);

    if (v24)
    {
      unint64_t v63 = 0;
      unint64_t v64 = 0xE000000000000000;
      sub_240BB77C0();
      sub_240BB6E70();
      id v25 = (void *)sub_240BB56F0();
      id v26 = objc_msgSend(v25, sel_unsatisfiedRequirementIdentifiers);

      type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(0);
      uint64_t v27 = sub_240BB6F10();

      int64_t v28 = *(void *)(v27 + 16);
      if (v28)
      {
        uint64_t v60 = v5;
        uint64_t v61 = v4;
        uint64_t v62 = MEMORY[0x263F8EE78];
        sub_240B0CB94(0, v28, 0);
        uint64_t v29 = 0;
        uint64_t v30 = v62;
        do
        {
          uint64_t v31 = sub_240BB6DE0();
          uint64_t v33 = v32;
          uint64_t v62 = v30;
          unint64_t v35 = *(void *)(v30 + 16);
          unint64_t v34 = *(void *)(v30 + 24);
          if (v35 >= v34 >> 1)
          {
            sub_240B0CB94(v34 > 1, v35 + 1, 1);
            uint64_t v30 = v62;
          }
          ++v29;
          *(void *)(v30 + 16) = v35 + 1;
          uint64_t v36 = v30 + 16 * v35;
          *(void *)(v36 + 32) = v31;
          *(void *)(v36 + 40) = v33;
        }
        while (v28 != v29);
LABEL_30:
        swift_bridgeObjectRelease();
        uint64_t v5 = v60;
        uint64_t v4 = v61;
LABEL_32:
        uint64_t v62 = v30;
        sub_240A99350(0, &qword_268C9F958, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
        sub_240A98D84();
        sub_240BB6D70();
        swift_bridgeObjectRelease();
        sub_240BB6E70();
        swift_bridgeObjectRelease();
        unint64_t v10 = v63;
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        return v10;
      }
    }
    else
    {
      unint64_t v63 = 0;
      unint64_t v64 = 0xE000000000000000;
      sub_240BB77C0();
      sub_240BB6E70();
      uint64_t v49 = (void *)sub_240BB56F0();
      id v50 = objc_msgSend(v49, sel_unsatisfiedRequirementIdentifiers);

      type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(0);
      uint64_t v51 = sub_240BB6F10();

      int64_t v52 = *(void *)(v51 + 16);
      if (v52)
      {
        uint64_t v60 = v5;
        uint64_t v61 = v4;
        uint64_t v62 = MEMORY[0x263F8EE78];
        sub_240B0CB94(0, v52, 0);
        uint64_t v53 = 0;
        uint64_t v30 = v62;
        do
        {
          uint64_t v54 = sub_240BB6DE0();
          uint64_t v56 = v55;
          uint64_t v62 = v30;
          unint64_t v58 = *(void *)(v30 + 16);
          unint64_t v57 = *(void *)(v30 + 24);
          if (v58 >= v57 >> 1)
          {
            sub_240B0CB94(v57 > 1, v58 + 1, 1);
            uint64_t v30 = v62;
          }
          ++v53;
          *(void *)(v30 + 16) = v58 + 1;
          uint64_t v59 = v30 + 16 * v58;
          *(void *)(v59 + 32) = v54;
          *(void *)(v59 + 40) = v56;
        }
        while (v52 != v53);
        goto LABEL_30;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v30 = MEMORY[0x263F8EE78];
    goto LABEL_32;
  }
  type metadata accessor for FeatureStatusObservable();
  sub_240A98008(&qword_268C9F8B8, (void (*)(uint64_t))type metadata accessor for FeatureStatusObservable);
  uint64_t result = sub_240BB65F0();
  __break(1u);
  return result;
}

uint64_t sub_240A95590(uint64_t a1)
{
  sub_240BB6740();
  sub_240A986F4(a1, (uint64_t)v6);
  uint64_t v2 = (_OWORD *)swift_allocObject();
  long long v3 = v6[1];
  v2[1] = v6[0];
  v2[2] = v3;
  long long v4 = v6[3];
  v2[3] = v6[2];
  v2[4] = v4;
  return sub_240BB6A80();
}

uint64_t sub_240A95658(void *a1)
{
  if (qword_26AFD7158 != -1) {
    swift_once();
  }
  sub_240A3FB28();
  sub_240A395FC(v2, (uint64_t)qword_26AFDEB68);
  aBlock[0] = 0;
  sub_240BB5700();
  long long v3 = (void *)a1[2];
  aBlock[4] = (uint64_t)sub_240A95A34;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_240AB0D44;
  aBlock[3] = (uint64_t)&unk_26F505730;
  long long v4 = _Block_copy(aBlock);
  objc_msgSend(v3, sel_resetOnboardingWithCompletion_, v4);
  _Block_release(v4);
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_240BB5990();
  sub_240A395FC(v5, (uint64_t)qword_26AFDEC70);
  uint64_t v6 = sub_240BB5970();
  os_log_type_t v7 = sub_240BB71A0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    aBlock[0] = v9;
    *(_DWORD *)uint64_t v8 = 136446466;
    sub_240A38940(0xD000000000000011, 0x8000000240BBD710, aBlock);
    sub_240BB75F0();
    *(_WORD *)(v8 + 12) = 2082;
    sub_240A38940(2036625250, 0xE400000000000000, aBlock);
    sub_240BB75F0();
    _os_log_impl(&dword_240A1B000, v6, v7, "[%{public}s.%{public}s] Un-favoriting AFib History data type", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v9, -1, -1);
    MEMORY[0x24560B930](v8, -1, -1);
  }

  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
  unint64_t v10 = (void *)MEMORY[0x24560A470]((id)*MEMORY[0x263F09BF8]);
  sub_240A3466C(a1 + 3, a1[6]);
  sub_240BB70F0();
  sub_240BB33A0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_240A95978()
{
  return 0;
}

uint64_t sub_240A95A34(char a1, void *a2)
{
  sub_240A3FB28();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_240A395FC(v5, (uint64_t)qword_26AFDEB68);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v10, v5);
    *(void *)(swift_allocObject() + 16) = a2;
    v12[1] = 0;
    id v11 = a2;
    sub_240BB5720();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return result;
}

uint64_t sub_240A95BB8(void *a1)
{
  sub_240BB77C0();
  sub_240BB6E70();
  sub_240A98D48();
  sub_240BB6E10();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  id v2 = a1;
  sub_240A97424(0, (unint64_t *)&unk_268CA21D0, (uint64_t (*)(uint64_t))sub_240A49AC0, MEMORY[0x263F8D8F0]);
  sub_240BB6E10();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return 0;
}

uint64_t sub_240A95CE4(uint64_t a1)
{
  return sub_240BB6B10();
}

unint64_t sub_240A95E10(uint64_t a1)
{
  uint64_t v2 = sub_240BB2CF0();
  uint64_t v22 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  os_log_type_t v7 = (char *)&v21 - v6;
  sub_240A4958C();
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  id v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v21 - v13;
  MEMORY[0x270FA5388](v12);
  id v16 = (char *)&v21 - v15;
  id v17 = objc_msgSend(self, sel_hkhr_aFibBurdenSyncedDefaultsDomainWithHealthStore_, a1);
  sub_240BB6DE0();
  sub_240BB71F0();
  swift_bridgeObjectRelease();
  unint64_t v23 = 0;
  unint64_t v24 = 0xE000000000000000;
  sub_240BB77C0();
  swift_bridgeObjectRelease();
  unint64_t v23 = 0xD00000000000001ELL;
  unint64_t v24 = 0x8000000240BCBB00;
  sub_240A98BE8((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(void))sub_240A4958C);
  sub_240A98BE8((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))sub_240A4958C);
  uint64_t v18 = v22;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v11, 1, v2) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v7, v11, v2);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v5, v7, v2);
    sub_240BB6E10();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v2);
  }
  sub_240A98090((uint64_t)v14, (uint64_t (*)(void))sub_240A4958C);
  sub_240BB6E70();

  swift_bridgeObjectRelease();
  unint64_t v19 = v23;
  sub_240A98090((uint64_t)v16, (uint64_t (*)(void))sub_240A4958C);
  return v19;
}

uint64_t sub_240A961B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
  uint64_t v4 = (void *)*MEMORY[0x263F09BF8];
  id v5 = a1;
  uint64_t v6 = MEMORY[0x24560A470](v4);
  id v7 = v5;
  sub_240BB6A30();
  id v8 = objc_msgSend(self, sel_heartbeatSeriesType);
  id v9 = v7;
  uint64_t result = sub_240BB6A30();
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = 0x7275422062694641;
  *(void *)(a2 + 24) = 0xEB000000006E6564;
  *(void *)(a2 + 32) = v9;
  *(unsigned char *)(a2 + 40) = v11;
  *(void *)(a2 + 48) = v12;
  *(void *)(a2 + 56) = v8;
  *(void *)(a2 + 64) = 0x6172676F68636154;
  *(void *)(a2 + 72) = 0xE90000000000006DLL;
  *(void *)(a2 + 80) = v9;
  *(unsigned char *)(a2 + 88) = v11;
  *(void *)(a2 + 96) = v12;
  return result;
}

uint64_t sub_240A96308()
{
  return sub_240A95CE4(*v0);
}

uint64_t sub_240A96310@<X0>(uint64_t a1@<X8>)
{
  uint64_t v20 = a1;
  uint64_t v2 = sub_240BB6730();
  MEMORY[0x270FA5388](v2 - 8);
  sub_240A98C58();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v18 = v3;
  uint64_t v19 = v4;
  MEMORY[0x270FA5388](v3);
  id v16 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB6720();
  sub_240BB6710();
  uint64_t v17 = *(void *)(v1 + 8);
  sub_240BB6700();
  sub_240BB6710();
  sub_240BB6750();
  uint64_t v6 = *(void **)v1;
  id v7 = *(void **)(v1 + 24);
  long long v23 = *(_OWORD *)(v1 + 32);
  id v8 = (_OWORD *)swift_allocObject();
  long long v9 = *(_OWORD *)(v1 + 16);
  v8[1] = *(_OWORD *)v1;
  v8[2] = v9;
  _OWORD v8[3] = *(_OWORD *)(v1 + 32);
  id v10 = v6;
  sub_240BB4850();
  id v11 = v7;
  sub_240A99310((uint64_t)&v23);
  uint64_t v12 = v16;
  sub_240BB6A80();
  sub_240BB6720();
  sub_240BB6710();
  sub_240BB6700();
  sub_240BB6710();
  sub_240BB6750();
  long long v22 = v23;
  sub_240A99350(0, &qword_268C9F988, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  sub_240BB6A60();
  uint64_t v21 = v1;
  sub_240A98008((unint64_t *)&qword_268C9F948, (void (*)(uint64_t))sub_240A98C58);
  uint64_t v13 = v18;
  sub_240BB6980();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v12, v13);
}

uint64_t sub_240A96694(uint64_t a1)
{
  sub_240A97424(0, &qword_268C9F990, MEMORY[0x263F18380], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v14 - v3;
  sub_240BB6740();
  sub_240BB6480();
  uint64_t v5 = sub_240BB6490();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  uint64_t v6 = *(void **)a1;
  long long v7 = *(_OWORD *)(a1 + 8);
  id v8 = *(void **)(a1 + 24);
  long long v14 = *(_OWORD *)(a1 + 32);
  long long v15 = v7;
  long long v9 = (_OWORD *)swift_allocObject();
  long long v10 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  void v9[2] = v10;
  void v9[3] = *(_OWORD *)(a1 + 32);
  id v11 = v6;
  sub_240A334B8((uint64_t)&v15);
  id v12 = v8;
  sub_240A99310((uint64_t)&v14);
  return sub_240BB6A70();
}

void sub_240A9683C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
  sub_240A99350(0, (unint64_t *)&qword_26AFD77C0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_240BBAD40;
  uint64_t v4 = *(void **)a1;
  *(void *)(v3 + 32) = *(void *)a1;
  v13[0] = v3;
  sub_240BB6F30();
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9930);
  id v5 = v4;
  uint64_t v6 = (void *)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  long long v7 = *(_OWORD *)(a1 + 8);
  long long v14 = *(_OWORD *)(a1 + 32);
  long long v15 = v7;
  id v8 = (_OWORD *)swift_allocObject();
  long long v9 = *(_OWORD *)(a1 + 16);
  v8[1] = *(_OWORD *)a1;
  v8[2] = v9;
  _OWORD v8[3] = *(_OWORD *)(a1 + 32);
  v13[4] = sub_240A993F0;
  v13[5] = v8;
  v13[0] = MEMORY[0x263EF8330];
  v13[1] = 1107296256;
  void v13[2] = sub_240AB0D44;
  v13[3] = &unk_26F5058A8;
  long long v10 = _Block_copy(v13);
  id v11 = v5;
  sub_240A334B8((uint64_t)&v15);
  id v12 = v2;
  sub_240A99310((uint64_t)&v14);
  swift_release();
  objc_msgSend(v12, sel_deleteAllSamplesWithTypes_sourceBundleIdentifier_options_completion_, v6, 0, 2, v10);
  _Block_release(v10);
}

uint64_t sub_240A96A04(char a1, void *a2, uint64_t a3)
{
  sub_240A3FB28();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x270FA5388](v6);
  id v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    if (qword_26AFD7158 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_240A395FC(v7, (uint64_t)qword_26AFDEB68);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v12, v7);
    uint64_t v13 = *(void **)a3;
    long long v14 = *(_OWORD *)(a3 + 8);
    long long v15 = *(void **)(a3 + 24);
    long long v22 = *(_OWORD *)(a3 + 32);
    long long v23 = v14;
    uint64_t v16 = swift_allocObject();
    long long v17 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(v16 + 16) = *(_OWORD *)a3;
    *(_OWORD *)(v16 + 32) = v17;
    *(_OWORD *)(v16 + 48) = *(_OWORD *)(a3 + 32);
    *(void *)(v16 + 64) = a2;
    v21[1] = 0;
    id v18 = v13;
    sub_240A334B8((uint64_t)&v23);
    id v19 = v15;
    sub_240A99310((uint64_t)&v22);
    id v20 = a2;
    sub_240BB5720();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  return result;
}

uint64_t sub_240A96BD0(uint64_t a1, void *a2)
{
  sub_240BB77C0();
  sub_240BB6E70();
  sub_240A9945C();
  sub_240BB6E10();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  id v3 = a2;
  sub_240A97424(0, (unint64_t *)&unk_268CA21D0, (uint64_t (*)(uint64_t))sub_240A49AC0, MEMORY[0x263F8D8F0]);
  sub_240BB6E10();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return 0;
}

uint64_t sub_240A96D28@<X0>(uint64_t a1@<X8>)
{
  return sub_240A96310(a1);
}

void sub_240A96D64(uint64_t a1)
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F47618]), sel_initWithHealthStore_, a1);
  objc_msgSend(v1, sel_triggerAnalysis);
}

uint64_t sub_240A96DCC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_240BB6290();
  swift_release();

  return swift_release();
}

uint64_t sub_240A96E44()
{
  id v1 = *v0;
  sub_240BB6740();
  *(void *)(swift_allocObject() + 16) = v1;
  id v2 = v1;

  return sub_240BB6A80();
}

uint64_t sub_240A96F10(void *a1)
{
  sub_240BB77C0();
  sub_240BB6E70();
  swift_getMetatypeMetadata();
  sub_240BB6E10();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  id v2 = a1;
  sub_240A49AC0();
  sub_240BB6E10();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return 0;
}

void sub_240A97004(uint64_t a1, uint64_t a2)
{
  sub_240A35CBC(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  long long v9 = (char *)&v15 - v8;
  swift_beginAccess();
  uint64_t v10 = MEMORY[0x24560BA20](a2 + 16);
  if (v10)
  {
    id v11 = (void *)v10;
    uint64_t v12 = sub_240BB56E0();
    uint64_t v13 = *(void *)(v12 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v9, a1, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_240A98BE8((uint64_t)v9, (uint64_t)v7, (uint64_t (*)(void))sub_240A35CBC);
    id v14 = v11;
    sub_240BB62A0();
    sub_240A98090((uint64_t)v9, (uint64_t (*)(void))sub_240A35CBC);
  }
}

id sub_240A97204()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FeatureStatusObservable();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240A972FC()
{
  return type metadata accessor for FeatureStatusObservable();
}

uint64_t type metadata accessor for FeatureStatusObservable()
{
  uint64_t result = qword_268C9F8A0;
  if (!qword_268C9F8A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_240A97350()
{
  sub_240A97424(319, &qword_268C9F8B0, (uint64_t (*)(uint64_t))sub_240A35CBC, MEMORY[0x263EFDE58]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_240A97424(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_240A97488()
{
  return MEMORY[0x263EFDDD8];
}

uint64_t sub_240A97494@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for FeatureStatusObservable();
  uint64_t result = sub_240BB6160();
  *a1 = result;
  return result;
}

uint64_t sub_240A974D4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_240BB6290();
  swift_release();

  return swift_release();
}

uint64_t sub_240A97550(uint64_t a1, void **a2)
{
  sub_240A35CBC(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v13 - v8;
  sub_240A98BE8(a1, (uint64_t)&v13 - v8, (uint64_t (*)(void))sub_240A35CBC);
  uint64_t v10 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_240A98BE8((uint64_t)v9, (uint64_t)v7, (uint64_t (*)(void))sub_240A35CBC);
  id v11 = v10;
  sub_240BB62A0();
  return sub_240A98090((uint64_t)v9, (uint64_t (*)(void))sub_240A35CBC);
}

char *sub_240A97678(uint64_t a1, char *a2)
{
  v37[7] = swift_getObjectType();
  sub_240A80414(0);
  MEMORY[0x270FA5388](v4 - 8);
  id v38 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A97F3C();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v39 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3FB28();
  v37[6] = v8;
  v37[5] = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  v37[4] = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A97424(0, &qword_268C9F8B0, (uint64_t (*)(uint64_t))sub_240A35CBC, MEMORY[0x263EFDE58]);
  uint64_t v11 = v10;
  uint64_t v45 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v37 - v12;
  sub_240A35CBC(0);
  uint64_t v15 = v14;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  id v18 = (char *)v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)v37 - v20;
  MEMORY[0x270FA5388](v19);
  long long v23 = (char *)v37 - v22;
  uint64_t v24 = sub_240A34DC4(0, (unint64_t *)&qword_26AFD75D0);
  v49[3] = v24;
  v49[4] = MEMORY[0x263F44B48];
  v49[0] = a1;
  id v25 = &a2[OBJC_IVAR____TtC5HeartP33_54C08C4D7764374DD7023E6C2D378D7623FeatureStatusObservable__featureStatus];
  uint64_t v26 = sub_240BB56E0();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
  uint64_t v43 = v27 + 56;
  v42(v23, 1, 1, v26);
  sub_240A98BE8((uint64_t)v23, (uint64_t)v21, (uint64_t (*)(void))sub_240A35CBC);
  int64_t v28 = a2;
  v37[3] = v21;
  uint64_t v44 = v15;
  sub_240BB6260();
  sub_240A98090((uint64_t)v23, (uint64_t (*)(void))sub_240A35CBC);
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v25, v13, v11);
  *(void *)&v28[OBJC_IVAR____TtC5HeartP33_54C08C4D7764374DD7023E6C2D378D7623FeatureStatusObservable_subscription] = 0;
  sub_240A1E37C((uint64_t)v49, (uint64_t)&v28[OBJC_IVAR____TtC5HeartP33_54C08C4D7764374DD7023E6C2D378D7623FeatureStatusObservable_featureStatusManager]);
  v37[8] = v24;
  sub_240BB57B0();
  v42(v18, 0, 1, v26);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v25, v11);
  sub_240A98BE8((uint64_t)v18, (uint64_t)v23, (uint64_t (*)(void))sub_240A35CBC);
  sub_240BB6260();
  sub_240A98090((uint64_t)v18, (uint64_t (*)(void))sub_240A35CBC);
  swift_endAccess();

  uint64_t v29 = (objc_class *)type metadata accessor for FeatureStatusObservable();
  v47.receiver = v28;
  v47.super_class = v29;
  uint64_t v30 = (char *)objc_msgSendSuper2(&v47, sel_init);
  uint64_t v48 = sub_240BB57C0();
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9980);
  id v46 = (id)sub_240BB7310();
  uint64_t v31 = sub_240BB72F0();
  uint64_t v32 = (uint64_t)v38;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v38, 1, 1, v31);
  sub_240A22390();
  sub_240A98008((unint64_t *)&qword_26AFD8A30, (void (*)(uint64_t))sub_240A22390);
  sub_240A805DC();
  uint64_t v33 = v39;
  sub_240BB6400();
  sub_240A98090(v32, (uint64_t (*)(void))sub_240A80414);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_240A98008(&qword_268C9F8C8, (void (*)(uint64_t))sub_240A97F3C);
  uint64_t v34 = v41;
  uint64_t v35 = sub_240BB6450();
  swift_release();

  (*(void (**)(char *, uint64_t))(v40 + 8))(v33, v34);
  *(void *)&v30[OBJC_IVAR____TtC5HeartP33_54C08C4D7764374DD7023E6C2D378D7623FeatureStatusObservable_subscription] = v35;
  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v49);
  return v30;
}

void sub_240A97F3C()
{
  if (!qword_268C9F8C0)
  {
    sub_240A22390();
    sub_240A34DC4(255, (unint64_t *)&qword_26AFD9980);
    sub_240A98008((unint64_t *)&qword_26AFD8A30, (void (*)(uint64_t))sub_240A22390);
    sub_240A805DC();
    unint64_t v0 = sub_240BB60E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9F8C0);
    }
  }
}

uint64_t sub_240A98008(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A98050()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240A98088()
{
  return sub_240A96F10(*(void **)(v0 + 16));
}

uint64_t sub_240A98090(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_240A980F0()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_240A98128(uint64_t a1)
{
  sub_240A97004(a1, v1);
}

uint64_t destroy for AFibBurdenInternalSettingsView(id *a1)
{
  return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)(a1 + 4));
}

uint64_t initializeWithCopy for AFibBurdenInternalSettingsView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void **)(a2 + 16);
  uint64_t v5 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = a1 + 32;
  uint64_t v7 = a2 + 32;
  long long v8 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  id v11 = v3;
  id v12 = v4;
  id v13 = v5;
  v10(v6, v7, v9);
  return a1;
}

void *assignWithCopy for AFibBurdenInternalSettingsView(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = (void *)a2[1];
  uint64_t v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  uint64_t v7 = (void *)a2[2];
  long long v8 = (void *)a1[2];
  a1[2] = v7;
  id v9 = v7;

  uint64_t v10 = (void *)a2[3];
  id v11 = (void *)a1[3];
  a1[3] = v10;
  id v12 = v10;

  sub_240A51F9C(a1 + 4, a2 + 4);
  return a1;
}

__n128 initializeWithTake for AFibBurdenInternalSettingsView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for AFibBurdenInternalSettingsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;

  id v6 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  uint64_t v7 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 32);
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for AFibBurdenInternalSettingsView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AFibBurdenInternalSettingsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenInternalSettingsView()
{
  return &type metadata for AFibBurdenInternalSettingsView;
}

uint64_t sub_240A983E0()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_240A983FC()
{
  if (!qword_268C9F8D0)
  {
    sub_240A984AC(255);
    sub_240A98008(&qword_268C9F8E8, sub_240A984AC);
    unint64_t v0 = sub_240BB6880();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9F8D0);
    }
  }
}

void sub_240A984AC(uint64_t a1)
{
}

void sub_240A984E0()
{
  if (!qword_268C9F8E0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C9F8E0);
    }
  }
}

void sub_240A98548()
{
  if (!qword_268C9F8F0)
  {
    sub_240A983FC();
    sub_240BB65C0();
    sub_240A98008(&qword_268C9F8F8, (void (*)(uint64_t))sub_240A983FC);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9F8F0);
    }
  }
}

id *sub_240A9861C@<X0>(uint64_t a1@<X8>)
{
  return sub_240A9479C(*(void *)(v1 + 16), a1);
}

void sub_240A98624()
{
  if (!qword_268C9F900)
  {
    sub_240A98548();
    sub_240A9868C(255);
    unint64_t v0 = sub_240BB6580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9F900);
    }
  }
}

void sub_240A9868C(uint64_t a1)
{
}

void sub_240A986C0(uint64_t a1)
{
}

uint64_t sub_240A986F4(uint64_t a1, uint64_t a2)
{
  return a2;
}

id *sub_240A9872C(id *a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for DataSection()
{
  return &type metadata for DataSection;
}

uint64_t destroy for OnboardingSection(id *a1)
{
  return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)(a1 + 3));
}

uint64_t initializeWithCopy for OnboardingSection(uint64_t a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = a1 + 24;
  uint64_t v7 = a2 + 24;
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  id v11 = v3;
  id v12 = v5;
  v10(v6, v7, v9);
  return a1;
}

uint64_t assignWithCopy for OnboardingSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v7 = *(void **)(a2 + 16);
  long long v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  sub_240A51F9C((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  return a1;
}

__n128 initializeWithTake for OnboardingSection(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for OnboardingSection(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  id v6 = *(void **)(a1 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for OnboardingSection(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OnboardingSection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnboardingSection()
{
  return &type metadata for OnboardingSection;
}

unint64_t sub_240A989E0()
{
  unint64_t result = qword_268C9F918;
  if (!qword_268C9F918)
  {
    sub_240A98624();
    sub_240A983FC();
    sub_240BB65C0();
    sub_240A98008(&qword_268C9F8F8, (void (*)(uint64_t))sub_240A983FC);
    swift_getOpaqueTypeConformance2();
    sub_240A98008(&qword_268C9F920, sub_240A9868C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F918);
  }
  return result;
}

uint64_t sub_240A98B08()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_240A98B24()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_240A98B40@<X0>(uint64_t a1@<X8>)
{
  return sub_240A961B8(*(void **)(v1 + 16), a1);
}

void sub_240A98B48(uint64_t a1)
{
}

void sub_240A98B7C()
{
  if (!qword_268C9F930)
  {
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268C9F930);
    }
  }
}

uint64_t sub_240A98BE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_240A98C50()
{
  return sub_240A95590(*(void *)(v0 + 16));
}

void sub_240A98C58()
{
  if (!qword_268C9F940)
  {
    unint64_t v0 = sub_240BB6AA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9F940);
    }
  }
}

uint64_t sub_240A98CB8()
{
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 40);

  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_240A98D00()
{
  return sub_240A95658((void *)(v0 + 16));
}

uint64_t sub_240A98D08()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240A98D40()
{
  return sub_240A95BB8(*(void **)(v0 + 16));
}

unint64_t sub_240A98D48()
{
  unint64_t result = qword_268C9F950;
  if (!qword_268C9F950)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C9F950);
  }
  return result;
}

unint64_t sub_240A98D84()
{
  unint64_t result = qword_268C9F960;
  if (!qword_268C9F960)
  {
    sub_240A99350(255, &qword_268C9F958, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F960);
  }
  return result;
}

uint64_t destroy for DeleteAllSamplesRow(id *a1)
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for DeleteAllSamplesRow(uint64_t a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  id v6 = v3;
  sub_240BB4850();
  id v7 = v5;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DeleteAllSamplesRow(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  sub_240BB4850();
  swift_bridgeObjectRelease();
  id v7 = *(void **)(a2 + 24);
  long long v8 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v7;
  id v9 = v7;

  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for DeleteAllSamplesRow(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeleteAllSamplesRow(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeleteAllSamplesRow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeleteAllSamplesRow()
{
  return &type metadata for DeleteAllSamplesRow;
}

ValueMetadata *type metadata accessor for ForceAnalysisRow()
{
  return &type metadata for ForceAnalysisRow;
}

unint64_t sub_240A99070()
{
  unint64_t result = qword_268C9F968;
  if (!qword_268C9F968)
  {
    sub_240A99204(255, &qword_268C9F970, sub_240A98B48);
    sub_240A98008(&qword_268C9F938, sub_240A98B48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F968);
  }
  return result;
}

unint64_t sub_240A9913C()
{
  unint64_t result = qword_268C9F978;
  if (!qword_268C9F978)
  {
    sub_240A99204(255, &qword_268C9F980, (void (*)(uint64_t))sub_240A98C58);
    sub_240A98008((unint64_t *)&qword_268C9F948, (void (*)(uint64_t))sub_240A98C58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F978);
  }
  return result;
}

void sub_240A99204(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240BB6B20();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_240A99264()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_240A99280()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_240A992A0()
{
  return sub_240BB6A50();
}

uint64_t sub_240A99310(uint64_t a1)
{
  return a1;
}

uint64_t sub_240A9933C()
{
  return sub_240A96694(*(void *)(v0 + 16));
}

void sub_240A99348()
{
  sub_240A9683C(v0 + 16);
}

void sub_240A99350(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_240A993A0()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_240A993F0(char a1, void *a2)
{
  return sub_240A96A04(a1, a2, v2 + 16);
}

uint64_t sub_240A993F8()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_240A99450()
{
  return sub_240A96BD0(v0 + 16, *(void **)(v0 + 64));
}

unint64_t sub_240A9945C()
{
  unint64_t result = qword_268C9F998;
  if (!qword_268C9F998)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C9F998);
  }
  return result;
}

uint64_t sub_240A99498()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_240A994D0()
{
  sub_240A96D64(*(void *)(v0 + 16));
}

uint64_t sub_240A994D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_240A99564()
{
  return sub_240A98008((unint64_t *)&qword_268C9F948, (void (*)(uint64_t))sub_240A98C58);
}

id sub_240A995B8(char a1)
{
  *(void *)&v1[OBJC_IVAR____TtC5Heart45AFibBurdenOnboardingLifeFactorsViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v1[OBJC_IVAR____TtC5Heart45AFibBurdenOnboardingLifeFactorsViewController_isInOnboardingModalFlow] = a1;
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  sub_240BB2980();
  long long v3 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  sub_240BB2980();
  unint64_t v4 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for AFibBurdenOnboardingLifeFactorsViewController();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithTitle_detailText_icon_contentLayout_, v3, v4, 0, 2, 0xE000000000000000);

  return v5;
}

void sub_240A9971C()
{
  uint64_t v1 = v0;

  if (*((unsigned char *)v0 + OBJC_IVAR____TtC5Heart45AFibBurdenOnboardingLifeFactorsViewController_isInOnboardingModalFlow) == 1) {
    objc_msgSend(v0, sel_hxui_addCancelButton);
  }
  id v2 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v2, sel_setBackButtonDisplayMode_, 1);

  id v3 = objc_msgSend(v1, sel_headerView);
  if (qword_268C9E660 != -1) {
    swift_once();
  }
  v52[0] = xmmword_268C9EF30;
  sub_240BB4850();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  sub_240BB6E70();
  unint64_t v4 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4);

  sub_240A9A5CC();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240BBD8D0;
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_240BB2980();
  uint64_t v8 = v7;
  id v9 = self;
  id v10 = objc_msgSend(v9, sel_hk_activityKeyColor, 0xE000000000000000);
  v52[0] = xmmword_268C9EF30;
  sub_240BB4850();
  sub_240BB6E70();
  strcpy((char *)v50, "LifeFactors.");
  BYTE13(v50[0]) = 0;
  HIWORD(v50[0]) = -5120;
  sub_240BB6E70();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240AB58F0(v6, v8, v10, 3, *(uint64_t *)&v52[0], *((uint64_t *)&v52[0] + 1), (uint64_t)v44, 29.0);
  long long v11 = v44[3];
  *(_OWORD *)(v5 + 64) = v44[2];
  *(_OWORD *)(v5 + 80) = v11;
  *(_OWORD *)(v5 + 96) = v44[4];
  *(void *)(v5 + 112) = v45;
  long long v12 = v44[1];
  *(_OWORD *)(v5 + 32) = v44[0];
  *(_OWORD *)(v5 + 48) = v12;
  uint64_t v13 = sub_240BB2980();
  uint64_t v15 = v14;
  id v16 = objc_msgSend(v9, sel_hk_sleepKeyColor, 0xE000000000000000);
  v52[0] = xmmword_268C9EF30;
  sub_240BB4850();
  sub_240BB6E70();
  strcpy((char *)v50, "LifeFactors.");
  BYTE13(v50[0]) = 0;
  HIWORD(v50[0]) = -5120;
  sub_240BB6E70();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240AB58F0(v13, v15, v16, 6, *(uint64_t *)&v52[0], *((uint64_t *)&v52[0] + 1), (uint64_t)v46, 25.0);
  long long v17 = v46[1];
  *(_OWORD *)(v5 + 152) = v46[2];
  long long v18 = v46[4];
  *(_OWORD *)(v5 + 168) = v46[3];
  *(_OWORD *)(v5 + 184) = v18;
  *(_OWORD *)(v5 + 120) = v46[0];
  *(void *)(v5 + 200) = v47;
  *(_OWORD *)(v5 + 136) = v17;
  uint64_t v19 = sub_240BB2980();
  uint64_t v21 = v20;
  id v22 = objc_msgSend(v9, sel_hk_bodyMeasurementsKeyColor, 0xE000000000000000);
  v52[0] = xmmword_268C9EF30;
  sub_240BB4850();
  sub_240BB6E70();
  strcpy((char *)v50, "LifeFactors.");
  BYTE13(v50[0]) = 0;
  HIWORD(v50[0]) = -5120;
  sub_240BB6E70();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240AB58F0(v19, v21, v22, 4, *(uint64_t *)&v52[0], *((uint64_t *)&v52[0] + 1), (uint64_t)v48, 29.0);
  long long v23 = v48[3];
  *(_OWORD *)(v5 + 240) = v48[2];
  *(_OWORD *)(v5 + 256) = v23;
  *(_OWORD *)(v5 + 272) = v48[4];
  *(void *)(v5 + 288) = v49;
  long long v24 = v48[1];
  *(_OWORD *)(v5 + 208) = v48[0];
  *(_OWORD *)(v5 + 224) = v24;
  uint64_t v25 = sub_240BB2980();
  uint64_t v27 = v26;
  id v28 = objc_msgSend(v9, sel_hk_otherKeyColor, 0xE000000000000000);
  v52[0] = xmmword_268C9EF30;
  sub_240BB4850();
  sub_240BB6E70();
  strcpy((char *)v50, "LifeFactors.");
  BYTE13(v50[0]) = 0;
  HIWORD(v50[0]) = -5120;
  sub_240BB6E70();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240AB58F0(v25, v27, v28, 6, *(uint64_t *)&v52[0], *((uint64_t *)&v52[0] + 1), (uint64_t)v50, 25.0);
  long long v29 = v50[3];
  *(_OWORD *)(v5 + 328) = v50[2];
  *(_OWORD *)(v5 + 344) = v29;
  *(_OWORD *)(v5 + 360) = v50[4];
  *(void *)(v5 + 376) = v51;
  long long v30 = v50[1];
  *(_OWORD *)(v5 + 296) = v50[0];
  *(_OWORD *)(v5 + 312) = v30;
  uint64_t v31 = sub_240BB2980();
  uint64_t v33 = v32;
  id v34 = objc_msgSend(v9, sel_hk_mindfulnessKeyColor, 0xE000000000000000);
  v52[0] = xmmword_268C9EF30;
  sub_240BB4850();
  sub_240BB6E70();
  strcpy((char *)v43, "LifeFactors.");
  HIBYTE(v43[6]) = 0;
  v43[7] = -5120;
  sub_240BB6E70();
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240AB58F0(v31, v33, v34, 7, *(uint64_t *)&v52[0], *((uint64_t *)&v52[0] + 1), (uint64_t)v52, 26.0);
  long long v35 = v52[3];
  *(_OWORD *)(v5 + 416) = v52[2];
  *(_OWORD *)(v5 + 432) = v35;
  *(_OWORD *)(v5 + 448) = v52[4];
  *(void *)(v5 + 464) = v53;
  long long v36 = v52[1];
  *(_OWORD *)(v5 + 384) = v52[0];
  *(_OWORD *)(v5 + 400) = v36;
  uint64_t v37 = (objc_class *)type metadata accessor for BulletedIconListView();
  id v38 = (char *)objc_allocWithZone(v37);
  *(void *)&v38[OBJC_IVAR____TtC5Heart20BulletedIconListView____lazy_storage___stackView] = 0;
  *(void *)&v38[OBJC_IVAR____TtC5Heart20BulletedIconListView_bulletedItems] = v5;
  v42.receiver = v38;
  v42.super_class = v37;
  id v39 = objc_msgSendSuper2(&v42, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_240AB4520();
  id v40 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v40, sel_addSubview_, v39);

  id v41 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v39, sel_hk_alignConstraintsWithView_, v41);
}

id sub_240A9A258()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenOnboardingLifeFactorsViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AFibBurdenOnboardingLifeFactorsViewController()
{
  return self;
}

uint64_t sub_240A9A2C0()
{
  return MEMORY[0x24560BA20](v0 + OBJC_IVAR____TtC5Heart45AFibBurdenOnboardingLifeFactorsViewController_delegate);
}

uint64_t sub_240A9A2F4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC5Heart45AFibBurdenOnboardingLifeFactorsViewController_delegate + 8) = a2;
  swift_unknownObjectWeakAssign();

  return sub_240BB50A0();
}

void sub_240A9A340()
{
  id v1 = objc_msgSend(v0, sel_navigationItem);
  sub_240A34DC4(0, (unint64_t *)&qword_268C9F670);
  sub_240A34DC4(0, &qword_268C9F9B0);
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_240BB7520();
  id v3 = (id)sub_240BB71E0();
  objc_msgSend(v1, sel_setRightBarButtonItem_, v3, 0, 0, 0, sub_240A9A5C4, v2);
}

void sub_240A9A474(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  id v3 = (void *)MEMORY[0x24560BA20](v2);
  if (v3)
  {
    unint64_t v4 = v3;
    objc_msgSend(v3, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }
}

uint64_t sub_240A9A58C()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_240A9A5C4(uint64_t a1)
{
  sub_240A9A474(a1, v1);
}

void sub_240A9A5CC()
{
  if (!qword_268C9F9B8)
  {
    unint64_t v0 = sub_240BB7AB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9F9B8);
    }
  }
}

uint64_t CardioFitnessClassificationStatus.isClassificationAvailable.getter(char a1)
{
  return a1 & 1;
}

Heart::CardioFitnessClassificationStatus __swiftcall CardioFitnessClassificationStatus.init(isClassificationAvailable:)(Swift::Bool isClassificationAvailable)
{
  return (Heart::CardioFitnessClassificationStatus)isClassificationAvailable;
}

uint64_t CardioFitnessClassificationStatus.hash(into:)()
{
  return sub_240BB7BE0();
}

BOOL static CardioFitnessClassificationStatus.__derived_struct_equals(_:_:)(int a1, int a2)
{
  return ((a1 ^ a2) & 1) == 0;
}

unint64_t sub_240A9A66C()
{
  return 0xD000000000000019;
}

uint64_t sub_240A9A688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_240A9B24C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_240A9A6B4(uint64_t a1)
{
  unint64_t v2 = sub_240A9A86C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240A9A6F0(uint64_t a1)
{
  unint64_t v2 = sub_240A9A86C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CardioFitnessClassificationStatus.encode(to:)(void *a1)
{
  sub_240A9AE10(0, qword_26AFD8DA8, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - v5;
  sub_240A3466C(a1, a1[3]);
  sub_240A9A86C();
  sub_240BB7C40();
  sub_240BB7A80();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_240A9A86C()
{
  unint64_t result = qword_26AFD8CC8;
  if (!qword_26AFD8CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD8CC8);
  }
  return result;
}

uint64_t CardioFitnessClassificationStatus.hashValue.getter()
{
  return sub_240BB7C00();
}

uint64_t CardioFitnessClassificationStatus.init(from:)(void *a1)
{
  sub_240A9AE10(0, &qword_268C9F9C0, MEMORY[0x263F8E040]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v10 - v6;
  unsigned __int8 v8 = sub_240A3466C(a1, a1[3]);
  sub_240A9A86C();
  sub_240BB7C30();
  if (!v1)
  {
    unsigned __int8 v8 = sub_240BB7A00();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  return v8 & 1;
}

uint64_t sub_240A9AA84@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_240A9AE10(0, &qword_268C9F9C0, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v9 = (char *)&v12 - v8;
  sub_240A3466C(a1, a1[3]);
  sub_240A9A86C();
  sub_240BB7C30();
  if (v2) {
    return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  }
  char v10 = sub_240BB7A00();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t result = _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  *a2 = v10 & 1;
  return result;
}

uint64_t sub_240A9AC10(void *a1)
{
  sub_240A9AE10(0, qword_26AFD8DA8, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - v5;
  sub_240A3466C(a1, a1[3]);
  sub_240A9A86C();
  sub_240BB7C40();
  sub_240BB7A80();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_240A9AD58()
{
  return sub_240BB7C00();
}

uint64_t sub_240A9ADA0()
{
  return sub_240BB7BE0();
}

uint64_t sub_240A9ADCC()
{
  return sub_240BB7C00();
}

void sub_240A9AE10(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_240A9A86C();
    unint64_t v7 = a3(a1, &type metadata for CardioFitnessClassificationStatus.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_240A9AE78()
{
  unint64_t result = qword_268C9F9C8;
  if (!qword_268C9F9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F9C8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CardioFitnessClassificationStatus(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CardioFitnessClassificationStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240A9B038);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessClassificationStatus()
{
  return &type metadata for CardioFitnessClassificationStatus;
}

unsigned char *storeEnumTagSinglePayload for CardioFitnessClassificationStatus.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x240A9B10CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessClassificationStatus.CodingKeys()
{
  return &type metadata for CardioFitnessClassificationStatus.CodingKeys;
}

unint64_t sub_240A9B148()
{
  unint64_t result = qword_268C9F9D0;
  if (!qword_268C9F9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F9D0);
  }
  return result;
}

unint64_t sub_240A9B1A0()
{
  unint64_t result = qword_26AFD8CD8;
  if (!qword_26AFD8CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD8CD8);
  }
  return result;
}

unint64_t sub_240A9B1F8()
{
  unint64_t result = qword_26AFD8CD0;
  if (!qword_26AFD8CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD8CD0);
  }
  return result;
}

uint64_t sub_240A9B24C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000019 && a2 == 0x8000000240BCBF90)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_240A9B2D4(uint64_t a1)
{
  return sub_240A9B5C8(a1, qword_26AFDEC70);
}

uint64_t sub_240A9B2F8()
{
  uint64_t v0 = sub_240BB5990();
  sub_240A4C570(v0, qword_26AFDEAF8);
  sub_240A395FC(v0, (uint64_t)qword_26AFDEAF8);
  return sub_240BB5980();
}

uint64_t sub_240A9B370()
{
  uint64_t v0 = sub_240BB5990();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388]();
  char v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3FB28();
  uint64_t v5 = v4;
  sub_240A4C570(v4, qword_26AFDEB68);
  sub_240A395FC(v5, (uint64_t)qword_26AFDEB68);
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_240A395FC(v0, (uint64_t)qword_26AFDEC70);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v6, v0);
  type metadata accessor for HKHRAFibBurdenLoggingCategory(0);
  sub_240A20F3C(&qword_26AFD8B90);
  sub_240A20F3C(&qword_26AFD8B98);
  sub_240A20F3C(&qword_26AFD7630);
  sub_240A20F3C((unint64_t *)&unk_26AFD7600);
  sub_240A20F3C((unint64_t *)&unk_26AFD7620);
  return sub_240BB5740();
}

uint64_t sub_240A9B5A4(uint64_t a1)
{
  return sub_240A9B5C8(a1, qword_26AFDEB80);
}

uint64_t sub_240A9B5C8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_240BB3070();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240BB5990();
  sub_240A4C570(v7, a2);
  sub_240A395FC(v7, (uint64_t)a2);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F455B8], v3);
  sub_240BB3060();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return sub_240BB5980();
}

id sub_240A9B8E8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProfileCharacteristicsViewControllerWithDoneButton();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ProfileCharacteristicsViewControllerWithDoneButton()
{
  return self;
}

unint64_t sub_240A9B944()
{
  unint64_t result = qword_26AFD7140;
  if (!qword_26AFD7140)
  {
    sub_240BB3390();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD7140);
  }
  return result;
}

double CGPoint.rounded(_:toScaleOf:)(uint64_t a1, id a2, double a3, double a4)
{
  id v8 = objc_msgSend(a2, sel_traitCollection);
  objc_msgSend(v8, sel_displayScale);
  double v10 = CGFloat.rounded(_:toScale:)(a1, v9, a3);

  id v11 = objc_msgSend(a2, sel_traitCollection);
  objc_msgSend(v11, sel_displayScale);
  CGFloat.rounded(_:toScale:)(a1, v12, a4);

  return v10;
}

{
  double v8;
  double v9;
  double v10;

  objc_msgSend(a2, sel_displayScale);
  double v9 = CGFloat.rounded(_:toScale:)(a1, v8, a3);
  objc_msgSend(a2, sel_displayScale);
  CGFloat.rounded(_:toScale:)(a1, v10, a4);
  return v9;
}

double CGPoint.rounded(_:toScale:)(uint64_t a1, double a2, double a3, double a4)
{
  double v7 = CGFloat.rounded(_:toScale:)(a1, a2, a3);
  CGFloat.rounded(_:toScale:)(a1, a2, a4);
  return v7;
}

void *sub_240A9BB2C(uint64_t a1)
{
  v1[2] = 0xD00000000000001DLL;
  v1[3] = 0x8000000240BCC2A0;
  v1[4] = 0x5F4D50425F4449;
  v1[5] = 0xE700000000000000;
  uint64_t v3 = self;
  id v4 = objc_msgSend(v3, sel_heartRateSectionDescription);
  uint64_t v5 = sub_240BB6DE0();
  uint64_t v7 = v6;

  v1[7] = v5;
  v1[8] = v7;
  id v8 = objc_msgSend(v3, sel_heartRateThresholdOffDescription);
  uint64_t v9 = sub_240BB6DE0();
  uint64_t v11 = v10;

  v1[9] = v9;
  v1[10] = v11;
  v1[6] = a1;
  return v1;
}

uint64_t sub_240A9BC04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_240BB3660();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  long long v29 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  id v8 = (char *)v27 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v27 - v9;
  uint64_t v11 = sub_240BB36D0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AF39EC();
  uint64_t v15 = (void *)sub_240BB36B0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v15)
  {
    v27[0] = self;
    unsigned int v16 = objc_msgSend(v27[0], sel_isTachycardiaDetectionEnabled);
    long long v17 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
    v27[1] = v15;
    uint64_t v28 = a1;
    if (v16)
    {
      uint64_t v18 = *MEMORY[0x263F435C8];
      v17(v10, v18, v2);
    }
    else
    {
      v17(v10, *MEMORY[0x263F435D0], v2);
      uint64_t v18 = *MEMORY[0x263F435C8];
    }
    v17(v8, v18, v2);
    char v21 = sub_240BB3650();
    id v22 = *(void (**)(char *, uint64_t))(v3 + 8);
    v22(v8, v2);
    v22(v10, v2);
    sub_240AF3A80(v21 & 1);
    if (objc_msgSend(v27[0], sel_isTachycardiaDetectionEnabled)) {
      uint64_t v23 = v18;
    }
    else {
      uint64_t v23 = *MEMORY[0x263F435D0];
    }
    long long v24 = v29;
    v17(v29, v23, v2);
    sub_240BB3700();
    sub_240BB36E0();
    v22(v24, v2);
    uint64_t v25 = v28;
    sub_240BB5010();
    uint64_t v26 = sub_240BB5020();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 0, 1, v26);
  }
  else
  {
    uint64_t v19 = sub_240BB5020();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a1, 1, 1, v19);
  }
}

uint64_t sub_240A9BFD4(void *a1)
{
  sub_240A9D744(0, (unint64_t *)&qword_26AFD99D8, (uint64_t (*)(uint64_t))sub_240A4C614, MEMORY[0x263F8E0F8]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_240BBAE40;
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 40);
  *(void *)(v3 + 56) = MEMORY[0x263F8D310];
  *(void *)(v3 + 64) = sub_240A4C66C();
  *(void *)(v3 + 32) = v5;
  *(void *)(v3 + 40) = v4;
  uint64_t v6 = self;
  sub_240BB4850();
  id v7 = objc_msgSend(v6, sel__countPerMinuteUnit);
  objc_msgSend(a1, sel_doubleValueForUnit_, v7);
  double v9 = v8;

  id v10 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v9);
  id v11 = objc_msgSend(v10, sel_integerValue);

  uint64_t v12 = MEMORY[0x263F8D750];
  *(void *)(v3 + 96) = MEMORY[0x263F8D6C8];
  *(void *)(v3 + 104) = v12;
  *(void *)(v3 + 72) = v11;

  return sub_240BB6E00();
}

uint64_t sub_240A9C134()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TachycardiaThresholdSpecifierConfiguration()
{
  return self;
}

uint64_t type metadata accessor for TachycardiaSettingsDataSource(uint64_t a1)
{
  return sub_240A3E6AC(a1, (uint64_t *)&unk_268C9F9F8);
}

uint64_t sub_240A9C1D0()
{
  return sub_240A9CF18();
}

uint64_t sub_240A9C1F0@<X0>(uint64_t a1@<X8>)
{
  unsigned int v2 = objc_msgSend(self, sel_isTachycardiaDetectionEnabled);
  uint64_t v3 = sub_240BB3660();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  uint64_t v5 = (unsigned int *)MEMORY[0x263F435C8];
  if (!v2) {
    uint64_t v5 = (unsigned int *)MEMORY[0x263F435D0];
  }
  uint64_t v6 = *v5;

  return v4(a1, v6, v3);
}

uint64_t sub_240A9C28C@<X0>(uint64_t a1@<X8>)
{
  return sub_240A9BC04(a1);
}

uint64_t sub_240A9C2B0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  sub_240BB4850();
  return v1;
}

uint64_t sub_240A9C2E4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 72);
  sub_240BB4850();
  return v1;
}

uint64_t sub_240A9C31C()
{
  id v0 = objc_msgSend(self, sel_tachycardiaHeartRateOptions);
  sub_240A34DC4(0, (unint64_t *)&qword_268CA10E0);
  unint64_t v1 = sub_240BB6F10();

  swift_retain();
  uint64_t v2 = sub_240A9D2F8(v1);
  swift_bridgeObjectRelease();
  swift_release();
  return v2;
}

id sub_240A9C3CC()
{
  id v0 = self;
  if (!objc_msgSend(v0, sel_isTachycardiaDetectionEnabled)) {
    return 0;
  }
  double v1 = (double)(uint64_t)objc_msgSend(v0, sel_tachycardiaThresholdHeartRate);
  id v2 = objc_msgSend(self, sel__countPerMinuteUnit);
  id v3 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v2, v1);

  return v3;
}

uint64_t sub_240A9C484(void *a1)
{
  return sub_240A9BFD4(a1);
}

uint64_t sub_240A9C4A8(void *a1)
{
  objc_msgSend(a1, sel__beatsPerMinute);
  id v2 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v1);
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
  uint64_t v4 = sub_240B91C50(v2, (uint64_t)v3);

  return v4;
}

uint64_t sub_240A9C544()
{
  return 0;
}

void sub_240A9C550(void *a1)
{
  objc_msgSend(a1, sel__beatsPerMinute);
  id v2 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v1);
  objc_msgSend(self, sel_setTachycardiaThresholdHeartRate_, v2);
}

id sub_240A9C5D4()
{
  id v0 = self;

  return objc_msgSend(v0, sel_setTachycardiaThresholdHeartRate_, 0);
}

id sub_240A9C610(void *a1, uint64_t a2)
{
  v18[0] = a1;
  swift_getObjectType();
  sub_240A9D744(0, (unint64_t *)&qword_268C9F218, MEMORY[0x263F43A90], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  id v7 = (char *)v18 - v6;
  *(void *)&v2[qword_268C9F9E0] = 0;
  id v8 = objc_allocWithZone(MEMORY[0x263F0A448]);
  double v9 = v2;
  id v10 = objc_msgSend(v8, sel_initWithHealthStore_, a1);
  type metadata accessor for TachycardiaFeatureStatusAvailability();
  swift_allocObject();
  *(void *)&v9[qword_268C9F9D8] = sub_240A7E268(v10);
  id v11 = (void *)type metadata accessor for TachycardiaThresholdSpecifierConfiguration();
  swift_allocObject();
  uint64_t v12 = swift_retain();
  uint64_t v13 = sub_240A9BB2C(v12);

  sub_240AF3DC4();
  uint64_t v14 = sub_240BB3B20();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v7, a2, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
  v18[4] = v11;
  void v18[5] = (id)sub_240A9D7A8(&qword_268C9FA28, (void (*)(uint64_t))type metadata accessor for TachycardiaThresholdSpecifierConfiguration);
  v18[1] = v13;
  swift_retain();
  id v16 = (id)sub_240BB54A0();
  sub_240A9C8B4();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a2, v14);
  return v16;
}

uint64_t sub_240A9C8B4()
{
  sub_240A9D744(0, (unint64_t *)&unk_26AFD9960, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v0 - 8);
  id v2 = (char *)v22 - v1;
  sub_240A80448(0);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A8047C();
  uint64_t v23 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A80510();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v24 = v12;
  uint64_t v25 = v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_240A9D744(0, &qword_26AFD98C0, (uint64_t (*)(uint64_t))sub_240A5C434, MEMORY[0x263EFDE58]);
  swift_retain();
  sub_240BB6270();
  swift_endAccess();
  swift_release();
  sub_240A9D7A8(&qword_26AFD98B0, sub_240A80448);
  sub_240BB6410();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9980);
  id v26 = (id)sub_240BB7310();
  uint64_t v16 = sub_240BB72F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v2, 1, 1, v16);
  sub_240A9D7A8(&qword_268C9F588, (void (*)(uint64_t))sub_240A8047C);
  sub_240A805DC();
  uint64_t v17 = v23;
  sub_240BB6400();
  sub_240A9D678((uint64_t)v2);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v17);
  swift_allocObject();
  uint64_t v18 = v22[1];
  swift_unknownObjectWeakInit();
  sub_240A9D7A8(&qword_268C9F598, (void (*)(uint64_t))sub_240A80510);
  uint64_t v19 = v24;
  uint64_t v20 = sub_240BB6450();
  swift_release();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v15, v19);
  *(void *)(v18 + qword_268C9F9E0) = v20;
  return swift_release();
}

void sub_240A9CD74(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x24560BA20](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    uint64_t v5 = sub_240BB54B0();

    if (v5)
    {
      swift_getObjectType();
      sub_240BB4F80();
      sub_240BB50A0();
    }
  }
}

void sub_240A9CDF8()
{
}

uint64_t sub_240A9CE28()
{
  swift_release();

  return swift_release();
}

id sub_240A9CE68()
{
  return sub_240A9D040(type metadata accessor for TachycardiaSettingsDataSource);
}

uint64_t sub_240A9CE80()
{
  swift_release();

  return swift_release();
}

uint64_t sub_240A9CECC()
{
  return type metadata accessor for TachycardiaSettingsDataSource(0);
}

uint64_t type metadata accessor for TachycardiaSettingsViewController(uint64_t a1)
{
  return sub_240A3E6AC(a1, (uint64_t *)&unk_268C9FA18);
}

uint64_t sub_240A9CEF4()
{
  return sub_240A9CF18();
}

uint64_t sub_240A9CF18()
{
  return swift_initClassMetadata2();
}

void sub_240A9CF5C()
{
}

void sub_240A9CFB8()
{
}

uint64_t sub_240A9CFE8()
{
  return swift_release();
}

id sub_240A9D028()
{
  return sub_240A9D040(type metadata accessor for TachycardiaSettingsViewController);
}

id sub_240A9D040(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_240A9D080(uint64_t a1)
{
  return swift_release();
}

uint64_t sub_240A9D0CC()
{
  return type metadata accessor for TachycardiaSettingsViewController(0);
}

id sub_240A9D0D4(void *a1, uint64_t a2)
{
  objc_super v3 = v2;
  swift_getObjectType();
  uint64_t v6 = sub_240BB3B20();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  objc_allocWithZone((Class)type metadata accessor for TachycardiaSettingsDataSource(0));
  uint64_t v10 = v3;
  id v11 = sub_240A9C610(a1, (uint64_t)v9);
  uint64_t v12 = qword_268C9FA08;
  *(void *)&v10[qword_268C9FA08] = v11;
  sub_240BB54D0();
  sub_240BB5360();
  swift_allocObject();
  *(void *)&v10[qword_268C9FA10] = sub_240BB5350();

  id v13 = *(id *)&v10[v12];
  swift_retain();
  id v14 = (id)sub_240BB4E60();
  sub_240AF3DE8();
  uint64_t v15 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setTitle_, v15);

  sub_240BB54B0();
  sub_240BB54C0();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
  return v14;
}

uint64_t sub_240A9D2F8(unint64_t a1)
{
  unint64_t v2 = v1;
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x263F8EE78];
    if (!v4) {
      break;
    }
    uint64_t v16 = MEMORY[0x263F8EE78];
    uint64_t result = sub_240BB7880();
    if (v4 < 0)
    {
      __break(1u);
      return result;
    }
    unint64_t v15 = v2;
    unint64_t v2 = a1 & 0xC000000000000001;
    uint64_t v6 = self;
    uint64_t v7 = self;
    uint64_t v8 = 0;
    while (v4 != v8)
    {
      if (v2) {
        id v9 = (id)MEMORY[0x24560AAA0](v8, a1);
      }
      else {
        id v9 = *(id *)(a1 + 8 * v8 + 32);
      }
      uint64_t v10 = v9;
      ++v8;
      objc_msgSend(v9, sel_doubleValue, v15);
      double v12 = v11;
      id v13 = objc_msgSend(v6, sel__countPerMinuteUnit);
      id v14 = objc_msgSend(v7, sel_quantityWithUnit_doubleValue_, v13, v12);

      sub_240BB7860();
      sub_240BB7890();
      sub_240BB78A0();
      sub_240BB7870();
      if (v4 == v8) {
        return v16;
      }
    }
    __break(1u);
LABEL_14:
    sub_240BB4850();
    uint64_t v4 = sub_240BB7900();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_240A9D4AC()
{
  uint64_t v0 = self;
  if (objc_msgSend(v0, sel_isTachycardiaDetectionEnabled))
  {
    double v1 = (double)(uint64_t)objc_msgSend(v0, sel_tachycardiaThresholdHeartRate);
    id v2 = objc_msgSend(self, sel__countPerMinuteUnit);
    id v3 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v2, v1);

    objc_msgSend(v3, sel__beatsPerMinute);
    id v5 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v4);
    id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
    sub_240B91C50(v5, (uint64_t)v6);

    uint64_t v7 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
    id v8 = objc_msgSend(v0, sel_tachycardiaHeartThresholdFooterDescriptionWithThresholdValue_, v7);

    uint64_t v9 = sub_240BB6DE0();
  }
  else
  {
    uint64_t v10 = (void *)sub_240BB6DA0();
    id v8 = objc_msgSend(v0, sel_tachycardiaHeartThresholdFooterDescriptionWithThresholdValue_, v10);

    uint64_t v9 = sub_240BB6DE0();
  }

  return v9;
}

uint64_t sub_240A9D678(uint64_t a1)
{
  sub_240A9D744(0, (unint64_t *)&unk_26AFD9960, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240A9D704()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_240A9D73C(uint64_t a1)
{
  sub_240A9CD74(a1, v1);
}

void sub_240A9D744(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_240A9D7A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240A9D7F0()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CardioFitnessSettingsManager()
{
  return self;
}

uint64_t type metadata accessor for ECGFeatureRegulatoryInfoTransformProvider()
{
  uint64_t result = qword_268C9FA30;
  if (!qword_268C9FA30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240A9D898()
{
  return swift_initClassMetadata2();
}

uint64_t sub_240A9D8D8()
{
  return sub_240BB6C60();
}

uint64_t sub_240A9D90C()
{
  if (qword_268C9E7C0 != -1) {
    swift_once();
  }
  return sub_240BB2980();
}

uint64_t sub_240A9D998()
{
  return 6775653;
}

uint64_t sub_240A9D9A8()
{
  if (qword_268C9E7C0 != -1) {
    swift_once();
  }
  sub_240BB2980();
  sub_240BB2B10();

  return swift_bridgeObjectRelease();
}

uint64_t sub_240A9DA68()
{
  sub_240BB6C70();

  return swift_deallocClassInstance();
}

uint64_t sub_240A9DA98()
{
  return type metadata accessor for ECGFeatureRegulatoryInfoTransformProvider();
}

uint64_t type metadata accessor for ElectrocardiogramFeatureStatusActionHandler()
{
  uint64_t result = qword_26AFD84E0;
  if (!qword_26AFD84E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240A9DAEC()
{
  return swift_initClassMetadata2();
}

id sub_240A9DB38(void *a1)
{
  id v2 = objc_msgSend(a1, sel_onboardingNavigationController);
  if (v2)
  {
    id v3 = v2;
    objc_msgSend(v2, sel_setModalInPresentation_, 1);
  }
  else
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_240BB5990();
    sub_240A395FC(v4, (uint64_t)qword_26AFDEC70);
    id v5 = v1;
    id v6 = sub_240BB5970();
    os_log_type_t v7 = sub_240BB7190();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v13 = v9;
      *(_DWORD *)uint64_t v8 = 136446466;
      swift_getObjectType();
      sub_240A9EED0();
      uint64_t v10 = sub_240BB6E10();
      sub_240A38940(v10, v11, &v13);
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2082;
      sub_240A38940(0xD00000000000002FLL, 0x8000000240BCC480, &v13);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v6, v7, "[%{public}s.%{public}s] Onboarding navigation controller not initialized", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v9, -1, -1);
      MEMORY[0x24560B930](v8, -1, -1);
    }
    else
    {
    }
    return 0;
  }
  return v3;
}

void sub_240A9DD68()
{
  uint64_t ObjectType = (void (*)(unsigned char *, uint64_t))swift_getObjectType();
  sub_240A5C00C(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v70 = &v66[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_240BB3B20();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v76 = &v66[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v82 = &v66[-v7];
  uint64_t v8 = sub_240BB3660();
  uint64_t v83 = *(void *)(v8 - 8);
  uint64_t v84 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v79 = &v66[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v75 = &v66[-v12];
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  unint64_t v15 = &v66[-v14];
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = &v66[-v16];
  uint64_t v18 = sub_240BB4EC0();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  char v21 = &v66[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v80 = v0;
  sub_240BB5250();
  sub_240BB50E0();
  id v22 = (void (*)(uint64_t))MEMORY[0x263F44600];
  sub_240A9EE88(&qword_268C9EFA0, MEMORY[0x263F44600]);
  sub_240A9EE88(&qword_268C9FAB0, v22);
  sub_240BB4EB0();
  uint64_t v23 = *(void (**)(unsigned char *, uint64_t))(v19 + 8);
  v23(v21, v18);
  if (v86[0])
  {
    uint64_t v72 = v23;
    uint64_t v73 = v3;
    uint64_t v74 = v4;
    uint64_t v71 = v86[0];
    sub_240BB50B0();
    if (qword_26AFD7790 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_240BB5990();
    sub_240A395FC(v24, (uint64_t)qword_26AFDEAF8);
    uint64_t v25 = v83;
    id v26 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v83 + 16);
    uint64_t v81 = v17;
    uint64_t v78 = v26;
    v26(v15, v17, v84);
    uint64_t v27 = sub_240BB5970();
    os_log_type_t v28 = sub_240BB71A0();
    int v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      v86[0] = v69;
      *(_DWORD *)uint64_t v30 = 136315394;
      os_log_t v68 = v27;
      uint64_t v31 = sub_240BB7C80();
      int v67 = v29;
      uint64_t v32 = v84;
      uint64_t v85 = sub_240A38940(v31, v33, v86);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2080;
      v78(v75, v15, v32);
      uint64_t v34 = sub_240BB6E10();
      uint64_t v85 = sub_240A38940(v34, v35, v86);
      uint64_t v25 = v83;
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      uint64_t ObjectType = *(void (**)(unsigned char *, uint64_t))(v25 + 8);
      ObjectType(v15, v32);
      uint64_t v27 = v68;
      _os_log_impl(&dword_240A1B000, v68, (os_log_type_t)v67, "[%s] Did select cell with featureStatusKind %s", (uint8_t *)v30, 0x16u);
      uint64_t v36 = v69;
      swift_arrayDestroy();
      MEMORY[0x24560B930](v36, -1, -1);
      MEMORY[0x24560B930](v30, -1, -1);
    }
    else
    {
      uint64_t ObjectType = *(void (**)(unsigned char *, uint64_t))(v25 + 8);
      ObjectType(v15, v84);
    }

    uint64_t v44 = v82;
    sub_240BB5250();
    uint64_t v45 = (void *)sub_240BB4EA0();
    id v46 = v72;
    v72(v21, v18);
    sub_240BB5250();
    sub_240BB36F0();
    v46(v21, v18);
    uint64_t v47 = v79;
    uint64_t v48 = v84;
    v78(v79, v81, v84);
    int v49 = (*(uint64_t (**)(unsigned char *, uint64_t))(v25 + 88))(v47, v48);
    if (v49 == *MEMORY[0x263F435C8])
    {
      uint64_t v51 = v73;
      uint64_t v50 = v74;
      uint64_t v52 = (uint64_t)v76;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v74 + 16))(v76, v44, v73);
      id v53 = objc_allocWithZone((Class)type metadata accessor for ElectrocardiogramSettingsViewController(0));
      id v54 = sub_240B88308(v52);
      id v55 = objc_msgSend(v45, sel_navigationController);
      if (v55)
      {
        uint64_t v56 = v55;
        objc_msgSend(v55, sel_pushViewController_animated_, v54, 1);

        swift_release();
      }
      else
      {

        swift_release();
      }
      (*(void (**)(unsigned char *, uint64_t))(v50 + 8))(v44, v51);
      uint64_t v60 = (uint64_t)v81;
      goto LABEL_23;
    }
    uint64_t v58 = v73;
    uint64_t v57 = v74;
    if (v49 == *MEMORY[0x263F435D0])
    {
LABEL_16:
      uint64_t v59 = (uint64_t)v81;
      sub_240A9E7CC((uint64_t)v81, v45);
      swift_release();

      (*(void (**)(unsigned char *, uint64_t))(v57 + 8))(v82, v58);
      uint64_t v60 = v59;
LABEL_23:
      ObjectType((unsigned char *)v60, v84);
      return;
    }
    if (v49 != *MEMORY[0x263F435C0] && v49 != *MEMORY[0x263F435B8])
    {
      if (v49 != *MEMORY[0x263F435B0])
      {
        swift_release();

        (*(void (**)(unsigned char *, uint64_t))(v57 + 8))(v82, v58);
        uint64_t v61 = v84;
        uint64_t v62 = ObjectType;
        ObjectType(v81, v84);
        v62(v47, v61);
        return;
      }
      goto LABEL_16;
    }
    uint64_t v63 = (uint64_t)v70;
    sub_240BB50D0();
    uint64_t v64 = sub_240BB2B20();
    uint64_t v65 = *(void *)(v64 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64) == 1)
    {
      swift_release();

      (*(void (**)(unsigned char *, uint64_t))(v57 + 8))(v82, v58);
      ObjectType(v81, v84);
      sub_240A64C2C(v63);
    }
    else
    {
      sub_240BB2AE0();
      swift_release();

      (*(void (**)(unsigned char *, uint64_t))(v57 + 8))(v82, v58);
      ObjectType(v81, v84);
      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v63, v64);
    }
  }
  else
  {
    if (qword_26AFD7790 != -1) {
      swift_once();
    }
    uint64_t v37 = sub_240BB5990();
    sub_240A395FC(v37, (uint64_t)qword_26AFDEAF8);
    id v38 = sub_240BB5970();
    os_log_type_t v39 = sub_240BB7190();
    if (os_log_type_enabled(v38, v39))
    {
      id v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      v86[0] = v41;
      *(_DWORD *)id v40 = 136315138;
      uint64_t v42 = sub_240BB7C80();
      uint64_t v85 = sub_240A38940(v42, v43, v86);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v38, v39, "[%s] Could not access action handler user data!", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v41, -1, -1);
      MEMORY[0x24560B930](v40, -1, -1);
    }
  }
}

void sub_240A9E7CC(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_240BB4EC0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v29[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240BB3660();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v29[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F435B0], v9);
  char v13 = sub_240BB3650();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v14 = v13 & 1;
  char v15 = v13 ^ 1;
  uint64_t v16 = (objc_class *)type metadata accessor for ElectrocardiogramFeatureStatusOnboardingManagerDelegate();
  uint64_t v17 = (char *)objc_allocWithZone(v16);
  *(void *)&v17[OBJC_IVAR____TtC5HeartP33_83D08B8D42E0F7375EF54A8E4D22046B55ElectrocardiogramFeatureStatusOnboardingManagerDelegate_delegate
                + 8] = 0;
  *(void *)(swift_unknownObjectWeakInit() + 8) = &off_26F505AE0;
  swift_unknownObjectWeakAssign();
  v30.receiver = v17;
  v30.super_class = v16;
  id v18 = objc_msgSendSuper2(&v30, sel_init);
  sub_240BB5250();
  sub_240BB4E90();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_240A3466C(v29, v29[3]);
  uint64_t v19 = (void *)sub_240BB4E10();
  if (qword_268C9E770 != -1) {
    swift_once();
  }
  LOBYTE(v27) = 0;
  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F476B8]), sel_initWithOnboardingType_isFirstTimeOnboarding_healthStore_dateCache_provenance_delegate_isSampleInteractive_, v14, v15 & 1, v19, qword_268CA2BA8, 4, v18, v27);

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v29);
  char v21 = *(void **)(v3 + qword_26AFD84C0);
  *(void *)(v3 + qword_26AFD84C0) = v20;
  id v22 = v20;

  uint64_t v23 = *(void **)(v3 + qword_26AFD84C8);
  *(void *)(v3 + qword_26AFD84C8) = v18;
  id v24 = v18;

  id v25 = sub_240A9DB38(v22);
  if (v25)
  {
    id v26 = v25;
    objc_msgSend(a2, sel_presentViewController_animated_completion_, v25, 1, 0);
  }
}

uint64_t sub_240A9EB04(uint64_t a1)
{
  uint64_t v3 = sub_240BB4EC0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (char *)objc_allocWithZone(v1);
  *(void *)&v7[qword_26AFD84C0] = 0;
  *(void *)&v7[qword_26AFD84C8] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t v8 = sub_240BB5260();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v8;
}

void sub_240A9EC1C()
{
  uint64_t v1 = *(void **)(v0 + qword_26AFD84C8);
}

id sub_240A9EC5C()
{
  return sub_240A9ED84((uint64_t (*)(void))type metadata accessor for ElectrocardiogramFeatureStatusActionHandler);
}

void sub_240A9EC74(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + qword_26AFD84C8);
}

uint64_t sub_240A9ECC0()
{
  return type metadata accessor for ElectrocardiogramFeatureStatusActionHandler();
}

id sub_240A9ED6C()
{
  return sub_240A9ED84((uint64_t (*)(void))type metadata accessor for ElectrocardiogramFeatureStatusOnboardingManagerDelegate);
}

id sub_240A9ED84(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for ElectrocardiogramFeatureStatusOnboardingManagerDelegate()
{
  return self;
}

uint64_t sub_240A9EDF8()
{
  return sub_240A9EE88((unint64_t *)&unk_26AFD7BB0, MEMORY[0x263F445D8]);
}

uint64_t sub_240A9EE40()
{
  return sub_240A9EE88(&qword_26AFD84D8, (void (*)(uint64_t))type metadata accessor for ElectrocardiogramFeatureStatusActionHandler);
}

uint64_t sub_240A9EE88(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_240A9EED0()
{
  unint64_t result = qword_268C9FAB8;
  if (!qword_268C9FAB8)
  {
    type metadata accessor for ElectrocardiogramFeatureStatusActionHandler();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C9FAB8);
  }
  return result;
}

uint64_t sub_240A9EF0C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  int v29 = a1;
  uint64_t v28 = sub_240BB2D90();
  uint64_t v3 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240BB2EE0();
  uint64_t v30 = *(void *)(v6 - 8);
  uint64_t v31 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240BB2CF0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  char v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  char v15 = (char *)&v27 - v14;
  *a2 = swift_getKeyPath();
  sub_240AA3C5C(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = (int *)type metadata accessor for AFibBurdenAddDataView();
  uint64_t v17 = (uint64_t *)((char *)a2 + v16[7]);
  uint64_t v32 = 0x3FE0000000000000;
  sub_240BB6A30();
  uint64_t v18 = v34;
  *uint64_t v17 = v33;
  v17[1] = v18;
  sub_240BB2CE0();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  sub_240BB6A30();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  uint64_t v19 = (char *)a2 + v16[9];
  LOBYTE(v32) = 0;
  sub_240BB6A30();
  uint64_t v20 = v34;
  *uint64_t v19 = v33;
  *((void *)v19 + 1) = v20;
  char v21 = (char *)a2 + v16[10];
  LOBYTE(v32) = 0;
  sub_240BB6A30();
  uint64_t v22 = v34;
  *char v21 = v33;
  *((void *)v21 + 1) = v22;
  uint64_t v23 = v28;
  id v24 = v29;
  *(uint64_t *)((char *)a2 + v16[5]) = (uint64_t)v29;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F07740], v23);
  id v25 = v24;
  sub_240BB2DA0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v23);
  sub_240BB2DD0();

  return (*(uint64_t (**)(char *, char *, uint64_t))(v30 + 32))((char *)a2 + v16[6], v8, v31);
}

uint64_t sub_240A9F28C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  sub_240AA4F24();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AA5B68();
  uint64_t v29 = v7;
  uint64_t v27 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = v1;
  uint64_t v31 = v1;
  sub_240AA50A4();
  sub_240AA51F4();
  uint64_t v11 = v10;
  sub_240AA52F8();
  uint64_t v13 = v12;
  sub_240AA56F0();
  uint64_t v15 = v14;
  uint64_t v16 = sub_240AA6940(&qword_268C9FBA8, (void (*)(uint64_t))sub_240AA52F8);
  uint64_t v17 = sub_240AA6940(&qword_268C9FBB0, (void (*)(uint64_t))sub_240AA56F0);
  uint64_t v36 = v13;
  uint64_t v37 = v15;
  uint64_t v38 = v16;
  unint64_t v39 = v17;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unint64_t v19 = sub_240A46960();
  uint64_t v36 = v11;
  uint64_t v37 = MEMORY[0x263F8D310];
  uint64_t v38 = OpaqueTypeConformance2;
  unint64_t v39 = v19;
  swift_getOpaqueTypeConformance2();
  sub_240BB6590();
  uint64_t v20 = sub_240AA6940(&qword_268C9FBC0, (void (*)(uint64_t))sub_240AA4F24);
  sub_240BB6970();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_240BB2980();
  uint64_t v35 = v21;
  uint64_t v22 = (char *)(v28 + *(int *)(type metadata accessor for AFibBurdenAddDataView() + 36));
  char v23 = *v22;
  uint64_t v24 = *((void *)v22 + 1);
  char v32 = v23;
  uint64_t v33 = v24;
  sub_240AA64A8(0, &qword_268C9F988, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  sub_240BB6A60();
  uint64_t v36 = v3;
  uint64_t v37 = v20;
  swift_getOpaqueTypeConformance2();
  uint64_t v25 = v29;
  sub_240BB6990();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v9, v25);
}

id sub_240A9F6F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  sub_240AA52F8();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AA51F4();
  uint64_t v29 = *(void *)(v8 - 8);
  uint64_t v30 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AA50A4();
  uint64_t v28 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a1;
  sub_240AA53A8();
  sub_240AA6940(&qword_268C9FB60, (void (*)(uint64_t))sub_240AA53A8);
  sub_240BB6870();
  uint64_t v32 = a1;
  sub_240AA56F0();
  uint64_t v16 = v15;
  uint64_t v17 = sub_240AA6940(&qword_268C9FBA8, (void (*)(uint64_t))sub_240AA52F8);
  uint64_t v18 = sub_240AA6940(&qword_268C9FBB0, (void (*)(uint64_t))sub_240AA56F0);
  sub_240BB69A0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  id result = objc_msgSend(*(id *)(a1 + *(int *)(type metadata accessor for AFibBurdenAddDataView() + 20)), sel_displayTypeController);
  if (result)
  {
    uint64_t v20 = result;
    sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
    uint64_t v21 = (void *)MEMORY[0x24560A470]((id)*MEMORY[0x263F09BF8]);
    id v22 = objc_msgSend(v20, sel_displayTypeForObjectType_, v21);

    if (v22)
    {
      id v23 = objc_msgSend(v22, sel_localization);

      id v24 = objc_msgSend(v23, sel_displayName);
      id v22 = (id)sub_240BB6DE0();
      unint64_t v26 = v25;
    }
    else
    {
      unint64_t v26 = 0xE000000000000000;
    }
    id v38 = v22;
    unint64_t v39 = v26;
    uint64_t v34 = v4;
    uint64_t v35 = v16;
    uint64_t v36 = v17;
    uint64_t v37 = v18;
    swift_getOpaqueTypeConformance2();
    sub_240A46960();
    uint64_t v27 = v30;
    sub_240BB6950();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v27);
    return (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(v31, v14, v28);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240A9FB60@<X0>(char *a1@<X8>)
{
  uint64_t v34 = a1;
  sub_240AA5580(0);
  uint64_t v35 = *(void *)(v1 - 8);
  uint64_t v36 = v1;
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  id v38 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v37 = (char *)&v29 - v4;
  sub_240AA5430(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v31 = v5;
  uint64_t v32 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v29 - v9;
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  uint64_t v39 = sub_240BB2980();
  uint64_t v40 = v11;
  MEMORY[0x270FA5388](v39);
  sub_240AA5450(0);
  sub_240AA6940(&qword_268C9FBF8, sub_240AA5450);
  sub_240A46960();
  uint64_t v30 = v10;
  sub_240BB6B00();
  uint64_t v39 = sub_240BB2980();
  uint64_t v40 = v12;
  MEMORY[0x270FA5388](v39);
  sub_240AA5604(0);
  sub_240AA6940(&qword_268C9FC00, sub_240AA5604);
  uint64_t v13 = v37;
  sub_240BB6B00();
  uint64_t v15 = v32;
  uint64_t v14 = v33;
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
  uint64_t v17 = v10;
  uint64_t v18 = v31;
  v16(v33, v17, v31);
  uint64_t v20 = v35;
  uint64_t v19 = v36;
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
  v21(v38, v13, v36);
  id v22 = v34;
  v16(v34, v14, v18);
  sub_240AA5778(0, &qword_268C9FB10, sub_240AA5430, sub_240AA5580);
  id v24 = &v22[*(int *)(v23 + 48)];
  unint64_t v25 = v38;
  v21(v24, v38, v19);
  unint64_t v26 = *(void (**)(char *, uint64_t))(v20 + 8);
  v26(v37, v19);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v15 + 8);
  v27(v30, v18);
  v26(v25, v19);
  return ((uint64_t (*)(char *, uint64_t))v27)(v14, v18);
}

uint64_t sub_240AA0008@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v36 = a2;
  sub_240AA5518();
  uint64_t v35 = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v32 - v8;
  sub_240AA5888(0, &qword_268C9FB30, MEMORY[0x263F1A830], MEMORY[0x263F18AA8]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v32 - v16;
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  uint64_t v39 = sub_240BB2980();
  uint64_t v40 = v18;
  MEMORY[0x270FA5388](v39);
  sub_240A46960();
  sub_240BB6540();
  uint64_t v19 = (uint64_t *)(a1 + *(int *)(type metadata accessor for AFibBurdenAddDataView() + 28));
  uint64_t v20 = *v19;
  uint64_t v21 = v19[1];
  *(void *)&long long v38 = v20;
  *((void *)&v38 + 1) = v21;
  sub_240AA64A8(0, &qword_268C9FBF0, MEMORY[0x263F8D538], MEMORY[0x263F1B5D0]);
  sub_240BB6A60();
  long long v38 = xmmword_240BBDF10;
  uint64_t v37 = 0x3F847AE147AE147BLL;
  sub_240A62450();
  sub_240BB6AB0();
  id v22 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v22(v15, v17, v11);
  uint64_t v34 = v17;
  uint64_t v23 = v9;
  uint64_t v32 = v9;
  id v24 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  uint64_t v25 = v35;
  v24(v7, v23, v35);
  unint64_t v26 = v15;
  uint64_t v33 = v15;
  uint64_t v27 = v36;
  v22(v36, v26, v11);
  sub_240AA5484();
  v24(&v27[*(int *)(v28 + 48)], v7, v25);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v4 + 8);
  v29(v32, v25);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v12 + 8);
  v30(v34, v11);
  v29(v7, v25);
  return ((uint64_t (*)(char *, uint64_t))v30)(v33, v11);
}

uint64_t sub_240AA0444@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_240AA04A8();
  sub_240AA057C(v2, v3 & 1);
  sub_240A46960();
  uint64_t result = sub_240BB68D0();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6 & 1;
  *(void *)(a1 + 24) = v7;
  return result;
}

uint64_t sub_240AA04A8()
{
  type metadata accessor for AFibBurdenAddDataView();
  sub_240AA64A8(0, &qword_268C9FBF0, MEMORY[0x263F8D538], MEMORY[0x263F1B5D0]);
  sub_240BB6A40();
  uint64_t result = 0;
  if (v1 > 0.02)
  {
    sub_240BB6A40();
    return *(void *)&v1;
  }
  return result;
}

uint64_t sub_240AA057C(uint64_t a1, char a2)
{
  uint64_t v4 = sub_240BB2D80();
  MEMORY[0x270FA5388](v4 - 8);
  sub_240AA68E4();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v11 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, 2.0);
    id v12 = (id)HKAFibBurdenClampedLowerBoundLocalizedString();

    uint64_t v10 = sub_240BB6DE0();
  }
  else
  {
    v14[1] = a1;
    sub_240BB2D60();
    sub_240A62450();
    sub_240BB2A60();
    sub_240AA6940(&qword_268C9FC20, (void (*)(uint64_t))sub_240AA68E4);
    sub_240BB6D10();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v14[2];
  }
  return v10;
}

uint64_t sub_240AA0774@<X0>(char *a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v1 = sub_240BB67D0();
  MEMORY[0x270FA5388](v1 - 8);
  sub_240AA3F44(0, &qword_268C9FC08, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  MEMORY[0x270FA5388](v2 - 8);
  sub_240AA5888(0, &qword_268C9FB58, MEMORY[0x263F1A820], MEMORY[0x263F18390]);
  uint64_t v29 = v3;
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v35 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = (char *)&v28 - v6;
  sub_240AA5888(0, &qword_268C9FB30, MEMORY[0x263F1A830], MEMORY[0x263F18AA8]);
  uint64_t v34 = v7;
  uint64_t v31 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v33 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)&v28 - v10;
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_240BB2980();
  uint64_t v39 = v12;
  MEMORY[0x270FA5388](v38);
  sub_240A46960();
  uint64_t v30 = v11;
  sub_240BB6540();
  uint64_t v38 = sub_240BB2980();
  uint64_t v39 = v13;
  type metadata accessor for AFibBurdenAddDataView();
  sub_240AA3F44(0, &qword_268C9FAC8, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
  sub_240BB6A60();
  sub_240BB67C0();
  uint64_t v14 = v37;
  sub_240BB64A0();
  uint64_t v15 = v31;
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  uint64_t v17 = v33;
  uint64_t v18 = v34;
  v16(v33, v11, v34);
  uint64_t v19 = v32;
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
  uint64_t v20 = v35;
  uint64_t v21 = v14;
  uint64_t v22 = v29;
  v28(v35, v21, v29);
  uint64_t v23 = v36;
  v16(v36, v17, v18);
  sub_240AA5638();
  v28(&v23[*(int *)(v24 + 48)], v20, v22);
  uint64_t v25 = *(void (**)(char *, uint64_t))(v19 + 8);
  v25(v37, v22);
  unint64_t v26 = *(void (**)(char *, uint64_t))(v15 + 8);
  v26(v30, v18);
  v25(v20, v22);
  return ((uint64_t (*)(char *, uint64_t))v26)(v17, v18);
}

uint64_t sub_240AA0CA0@<X0>(uint64_t a1@<X8>)
{
  sub_240AA0CFC();
  sub_240A46960();
  uint64_t result = sub_240BB68D0();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

id sub_240AA0CFC()
{
  uint64_t v1 = type metadata accessor for AFibBurdenAddDataView();
  MEMORY[0x270FA5388](v1);
  uint64_t v97 = (uint64_t)&v92 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_240BB5990();
  uint64_t v96 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v98 = (char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_240BB2CF0();
  uint64_t v5 = *(void *)(v125 - 8);
  MEMORY[0x270FA5388](v125);
  uint64_t v7 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_240BB2EC0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_240BB27F0();
  uint64_t v115 = *(void *)(v12 - 8);
  uint64_t v116 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v93 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  unint64_t v104 = (char *)&v92 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v99 = (char *)&v92 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v92 - v19;
  sub_240AA6408(0);
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  uint64_t v94 = (char *)&v92 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v105 = (char *)&v92 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v122 = (void (*)(char *, uint64_t))((char *)&v92 - v27);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  os_log_t v114 = (os_log_t)((char *)&v92 - v29);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v92 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v126 = (uint64_t)&v92 - v33;
  id result = objc_msgSend(self, sel_hk_mediumDateStyleIntervalFormatter);
  if (!result)
  {
    __break(1u);
    goto LABEL_24;
  }
  id v117 = result;
  uint64_t v95 = v3;
  uint64_t v35 = v0 + *(int *)(v1 + 24);
  uint64_t v36 = *(void (**)(void))(v9 + 104);
  unsigned int v110 = *MEMORY[0x263F07830];
  uint64_t v111 = v9 + 104;
  uint64_t v109 = (void (*)(char *, void, uint64_t))v36;
  v36(v11);
  uint64_t v92 = v1;
  uint64_t v37 = *(int *)(v1 + 32);
  uint64_t v101 = v0;
  uint64_t v38 = (uint64_t *)(v0 + v37);
  sub_240AA3F44(0, &qword_268C9FAC8, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
  uint64_t v108 = v39;
  uint64_t v102 = v38;
  sub_240BB6A40();
  sub_240BB2DB0();
  uint64_t v40 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v119 = v7;
  uint64_t v103 = v5 + 8;
  uint64_t v107 = v40;
  v40(v7, v125);
  uint64_t v41 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v118 = v8;
  uint64_t v113 = v9 + 8;
  uint64_t v106 = v41;
  v41(v11, v8);
  uint64_t v42 = v115;
  uint64_t v43 = v116;
  uint64_t v123 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v115 + 48);
  uint64_t v124 = v115 + 48;
  id result = (id)v123(v32, 1, v116);
  id v112 = v11;
  if (result == 1)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v44 = self;
  uint64_t v120 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
  uint64_t v121 = v42 + 32;
  v120(v20, v32, v43);
  uint64_t v45 = (void *)sub_240BB2780();
  uint64_t v46 = v42;
  int v49 = *(char **)(v42 + 8);
  uint64_t v47 = v42 + 8;
  uint64_t v48 = v49;
  ((void (*)(char *, uint64_t))v49)(v20, v43);
  uint64_t v50 = (void *)sub_240BB2E30();
  uint64_t v100 = v35;
  uint64_t v51 = (void *)sub_240BB2E30();
  id v52 = objc_msgSend(v44, sel_hk_julianDayDateIntervalFromOpenUpperBoundDateInterval_sourceCalendar_localCalendar_, v45, v50, v51);

  if (v52)
  {
    os_log_t v53 = v114;
    sub_240BB2790();

    uint64_t v54 = 0;
    uint64_t v55 = v126;
    uint64_t v56 = v117;
    uint64_t v57 = (uint64_t)v122;
  }
  else
  {
    uint64_t v54 = 1;
    uint64_t v55 = v126;
    uint64_t v56 = v117;
    uint64_t v57 = (uint64_t)v122;
    os_log_t v53 = v114;
  }
  uint64_t v122 = (void (*)(char *, uint64_t))v48;
  (*(void (**)(os_log_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v53, v54, 1, v43);
  sub_240AA67AC((uint64_t)v53, v55, (uint64_t (*)(void))sub_240AA6408);
  sub_240AA6814(v55, v57, (uint64_t (*)(void))sub_240AA6408);
  if (v123((char *)v57, 1, v43) == 1)
  {
    uint64_t v58 = v47;
    sub_240AA687C(v57, (uint64_t (*)(void))sub_240AA6408);
    uint64_t v60 = v118;
    uint64_t v59 = v119;
  }
  else
  {
    uint64_t v61 = v99;
    v120(v99, (char *)v57, v43);
    uint64_t v62 = (void *)sub_240BB2780();
    id v63 = objc_msgSend(v56, sel_stringFromDateInterval_, v62);

    uint64_t v60 = v118;
    uint64_t v59 = v119;
    if (v63)
    {
      uint64_t v64 = sub_240BB6DE0();

      v122(v61, v43);
LABEL_22:
      sub_240AA687C(v126, (uint64_t (*)(void))sub_240AA6408);
      return (id)v64;
    }
    uint64_t v58 = v47;
    v122(v61, v43);
  }
  uint64_t v65 = v112;
  v109(v112, v110, v60);
  sub_240BB6A40();
  uint64_t v66 = v105;
  sub_240BB2DB0();
  v107(v59, v125);
  v106(v65, v60);
  id result = (id)v123(v66, 1, v43);
  if (result == 1) {
    goto LABEL_25;
  }
  int v67 = v104;
  v120(v104, v66, v43);
  os_log_t v68 = (void *)sub_240BB2780();
  uint64_t v69 = v67;
  uint64_t v70 = v58;
  v122(v69, v43);
  id v71 = objc_msgSend(v56, sel_stringFromDateInterval_, v68);

  uint64_t v72 = v101;
  if (v71)
  {
    uint64_t v64 = sub_240BB6DE0();

LABEL_21:
    goto LABEL_22;
  }
  uint64_t v115 = v70;
  uint64_t v73 = v98;
  sub_240BB5950();
  uint64_t v74 = v97;
  sub_240AA6814(v72, v97, (uint64_t (*)(void))type metadata accessor for AFibBurdenAddDataView);
  uint64_t v75 = sub_240BB5970();
  int v76 = sub_240BB7190();
  if (!os_log_type_enabled(v75, (os_log_type_t)v76))
  {
    sub_240AA687C(v74, (uint64_t (*)(void))type metadata accessor for AFibBurdenAddDataView);

    (*(void (**)(char *, uint64_t))(v96 + 8))(v73, v95);
    goto LABEL_18;
  }
  LODWORD(v105) = v76;
  os_log_t v114 = v75;
  uint64_t v77 = swift_slowAlloc();
  unint64_t v104 = (char *)swift_slowAlloc();
  uint64_t v128 = v104;
  *(_DWORD *)uint64_t v77 = 136446466;
  uint64_t v127 = sub_240A38940(0xD000000000000015, 0x8000000240BBDF40, (uint64_t *)&v128);
  uint64_t v102 = (uint64_t *)&v128;
  sub_240BB75F0();
  *(_WORD *)(v77 + 12) = 2080;
  uint64_t v78 = v112;
  uint64_t v79 = v118;
  v109(v112, v110, v118);
  uint64_t v80 = v43;
  uint64_t v81 = v119;
  sub_240BB6A40();
  uint64_t v82 = v94;
  sub_240BB2DB0();
  uint64_t v83 = v81;
  uint64_t v84 = v80;
  v107(v83, v125);
  v106(v78, v79);
  id result = (id)v123(v82, 1, v80);
  if (result != 1)
  {
    uint64_t v85 = v74;
    uint64_t v86 = v93;
    v120(v93, v82, v84);
    sub_240AA6940((unint64_t *)&qword_268C9FC10, MEMORY[0x263F062D0]);
    uint64_t v87 = sub_240BB7AA0();
    unint64_t v89 = v88;
    v122(v86, v84);
    uint64_t v127 = sub_240A38940(v87, v89, (uint64_t *)&v128);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    sub_240AA687C(v85, (uint64_t (*)(void))type metadata accessor for AFibBurdenAddDataView);
    os_log_t v90 = v114;
    _os_log_impl(&dword_240A1B000, v114, (os_log_type_t)v105, "[%{public}s] Unable to format date interval of %s", (uint8_t *)v77, 0x16u);
    uint64_t v91 = v104;
    swift_arrayDestroy();
    MEMORY[0x24560B930](v91, -1, -1);
    MEMORY[0x24560B930](v77, -1, -1);

    (*(void (**)(char *, uint64_t))(v96 + 8))(v98, v95);
    uint64_t v56 = v117;
LABEL_18:
    if (qword_268C9E7A8 != -1) {
      swift_once();
    }
    uint64_t v64 = sub_240BB2980();
    goto LABEL_21;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_240AA1A40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v19[1] = a2;
  sub_240AA5778(0, &qword_268C9FB70, (void (*)(uint64_t))sub_240AA57F4, (void (*)(uint64_t))sub_240AA5954);
  v19[0] = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v19 - v4;
  sub_240AA5954();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_240BB6800();
  MEMORY[0x270FA5388](v11 - 8);
  sub_240AA57F4();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB67E0();
  v19[8] = a1;
  sub_240AA5888(0, (unint64_t *)&qword_268C9F940, MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
  sub_240AA58D8();
  sub_240BB64C0();
  sub_240BB67F0();
  void v19[4] = a1;
  sub_240AA59C4();
  sub_240AA5A74();
  sub_240BB64C0();
  uint64_t v17 = &v5[*(int *)(v19[0] + 48)];
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v5, v16, v13);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v10, v7);
  sub_240BB6780();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_240AA1D78(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AFibBurdenAddDataView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2 - 8);
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  v9[0] = sub_240BB2980();
  v9[1] = v5;
  sub_240AA6814(a1, (uint64_t)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AFibBurdenAddDataView);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  sub_240AA67AC((uint64_t)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, (uint64_t (*)(void))type metadata accessor for AFibBurdenAddDataView);
  sub_240A46960();
  return sub_240BB6A90();
}

uint64_t sub_240AA1F34()
{
  uint64_t v0 = sub_240BB6500();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AA5C60((uint64_t)v3);
  sub_240BB64F0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_240AA2000@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AFibBurdenAddDataView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  sub_240AA5888(0, (unint64_t *)&qword_268C9F940, MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = &v24[-v10];
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_240BB2980();
  uint64_t v26 = v12;
  sub_240AA6814(a1, (uint64_t)&v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(void))type metadata accessor for AFibBurdenAddDataView);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  sub_240AA67AC((uint64_t)&v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v14 + v13, (uint64_t (*)(void))type metadata accessor for AFibBurdenAddDataView);
  sub_240A46960();
  sub_240BB6A90();
  uint64_t v15 = a1 + *(int *)(v4 + 40);
  char v16 = *(unsigned char *)v15;
  uint64_t v17 = *(void *)(v15 + 8);
  LOBYTE(v25) = v16;
  uint64_t v26 = v17;
  sub_240AA64A8(0, &qword_268C9F988, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  sub_240BB6A40();
  char v18 = v24[15];
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = swift_allocObject();
  *(unsigned char *)(v20 + 16) = v18;
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v9 + 16))(a2, v11, v8);
  sub_240AA59C4();
  uint64_t v22 = (uint64_t *)(a2 + *(int *)(v21 + 36));
  *uint64_t v22 = KeyPath;
  v22[1] = (uint64_t)sub_240AA5F90;
  void v22[2] = v20;
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_240AA234C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AFibBurdenAddDataView();
  uint64_t v3 = v2 - 8;
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_240AA3F44(0, (unint64_t *)&qword_268CA1AC0, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = &v19[-v8];
  uint64_t v10 = a1 + *(int *)(v3 + 48);
  char v11 = *(unsigned char *)v10;
  uint64_t v12 = *(void *)(v10 + 8);
  v19[16] = v11;
  uint64_t v20 = v12;
  v19[15] = 1;
  sub_240AA64A8(0, &qword_268C9F988, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  sub_240BB6A50();
  uint64_t v13 = sub_240BB6FE0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v9, 1, 1, v13);
  sub_240AA6814(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for AFibBurdenAddDataView);
  sub_240BB6FC0();
  uint64_t v14 = sub_240BB6FB0();
  unint64_t v15 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = MEMORY[0x263F8F500];
  *(void *)(v16 + 16) = v14;
  *(void *)(v16 + 24) = v17;
  sub_240AA67AC((uint64_t)v6, v16 + v15, (uint64_t (*)(void))type metadata accessor for AFibBurdenAddDataView);
  sub_240B17230((uint64_t)v9, (uint64_t)&unk_268C9FBD0, v16);
  return swift_release();
}

uint64_t sub_240AA25AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a4;
  uint64_t v5 = sub_240BB6500();
  v4[10] = v5;
  v4[11] = *(void *)(v5 - 8);
  v4[12] = swift_task_alloc();
  uint64_t v6 = sub_240BB5990();
  v4[13] = v6;
  v4[14] = *(void *)(v6 - 8);
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  v4[17] = sub_240BB6FC0();
  v4[18] = sub_240BB6FB0();
  uint64_t v7 = (void *)swift_task_alloc();
  v4[19] = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_240AA2724;
  return sub_240AA30A4();
}

uint64_t sub_240AA2724()
{
  uint64_t v2 = (void *)*v1;
  v2[20] = v0;
  swift_task_dealloc();
  uint64_t v4 = sub_240BB6FA0();
  v2[21] = v4;
  v2[22] = v3;
  if (v0) {
    uint64_t v5 = sub_240AA2E1C;
  }
  else {
    uint64_t v5 = sub_240AA2884;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_240AA2884()
{
  uint64_t v13 = v0;
  sub_240BB5950();
  uint64_t v1 = sub_240BB5970();
  os_log_type_t v2 = sub_240BB71A0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[16];
    uint64_t v4 = v0[13];
    uint64_t v5 = v0[14];
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136446210;
    v0[6] = sub_240A38940(0xD000000000000015, 0x8000000240BBDF40, &v12);
    sub_240BB75F0();
    _os_log_impl(&dword_240A1B000, v1, v2, "[%{public}s] Successfully saved sample", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v7, -1, -1);
    MEMORY[0x24560B930](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  else
  {
    uint64_t v8 = v0[16];
    uint64_t v9 = v0[13];
    uint64_t v10 = v0[14];

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  return MEMORY[0x270FA2498](sub_240AA2A50, 0, 0);
}

uint64_t sub_240AA2A50()
{
  *(void *)(v0 + 184) = sub_240BB6FB0();
  uint64_t v2 = sub_240BB6FA0();
  return MEMORY[0x270FA2498](sub_240AA2ADC, v2, v1);
}

uint64_t sub_240AA2ADC()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[10];
  swift_release();
  sub_240AA5C60(v1);
  sub_240BB64F0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = v0[21];
  uint64_t v5 = v0[22];
  return MEMORY[0x270FA2498](sub_240AA2B78, v4, v5);
}

uint64_t sub_240AA2B78()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_240AA2BF4()
{
  *(void *)(v0 + 192) = sub_240BB6FB0();
  uint64_t v2 = sub_240BB6FA0();
  return MEMORY[0x270FA2498](sub_240AA2C80, v2, v1);
}

uint64_t sub_240AA2C80()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_release();
  uint64_t v2 = type metadata accessor for AFibBurdenAddDataView();
  uint64_t v3 = (char *)(v1 + *(int *)(v2 + 36));
  char v4 = *v3;
  uint64_t v5 = *((void *)v3 + 1);
  *(unsigned char *)(v0 + 16) = v4;
  *(void *)(v0 + 24) = v5;
  *(unsigned char *)(v0 + 200) = 1;
  sub_240AA64A8(0, &qword_268C9F988, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  sub_240BB6A50();
  uint64_t v6 = (char *)(v1 + *(int *)(v2 + 40));
  char v7 = *v6;
  uint64_t v8 = *((void *)v6 + 1);
  *(unsigned char *)(v0 + 32) = v7;
  *(void *)(v0 + 40) = v8;
  *(unsigned char *)(v0 + 201) = 0;
  sub_240BB6A50();
  uint64_t v9 = *(void *)(v0 + 168);
  uint64_t v10 = *(void *)(v0 + 176);
  return MEMORY[0x270FA2498](sub_240AA2D94, v9, v10);
}

uint64_t sub_240AA2D94()
{
  uint64_t v1 = *(void **)(v0 + 160);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_240AA2E1C()
{
  uint64_t v21 = v0;
  uint64_t v1 = (void *)v0[20];
  sub_240BB5950();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_240BB5970();
  os_log_type_t v5 = sub_240BB7180();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[20];
    uint64_t v17 = v0[14];
    uint64_t v18 = v0[13];
    uint64_t v19 = v0[15];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v20 = v16;
    *(_DWORD *)uint64_t v7 = 136446466;
    v0[7] = sub_240A38940(0xD000000000000015, 0x8000000240BBDF40, &v20);
    sub_240BB75F0();
    *(_WORD *)(v7 + 12) = 2112;
    id v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v10;
    sub_240BB75F0();
    void *v8 = v10;

    _os_log_impl(&dword_240A1B000, v4, v5, "[%{public}s] Error when saving sample: %@", (uint8_t *)v7, 0x16u);
    sub_240AA63A0();
    swift_arrayDestroy();
    MEMORY[0x24560B930](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v16, -1, -1);
    MEMORY[0x24560B930](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v18);
  }
  else
  {
    char v11 = (void *)v0[20];
    uint64_t v13 = v0[14];
    uint64_t v12 = v0[15];
    uint64_t v14 = v0[13];

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  return MEMORY[0x270FA2498](sub_240AA2BF4, 0, 0);
}

uint64_t sub_240AA30A4()
{
  v1[33] = v0;
  uint64_t v2 = sub_240BB2F10();
  v1[34] = v2;
  v1[35] = *(void *)(v2 - 8);
  v1[36] = swift_task_alloc();
  uint64_t v3 = sub_240BB2CF0();
  v1[37] = v3;
  v1[38] = *(void *)(v3 - 8);
  v1[39] = swift_task_alloc();
  v1[40] = swift_task_alloc();
  uint64_t v4 = sub_240BB2EC0();
  v1[41] = v4;
  v1[42] = *(void *)(v4 - 8);
  v1[43] = swift_task_alloc();
  sub_240AA6408(0);
  v1[44] = swift_task_alloc();
  uint64_t v5 = sub_240BB27F0();
  v1[45] = v5;
  v1[46] = *(void *)(v5 - 8);
  v1[47] = swift_task_alloc();
  sub_240BB6FC0();
  v1[48] = sub_240BB6FB0();
  uint64_t v7 = sub_240BB6FA0();
  v1[49] = v7;
  v1[50] = v6;
  return MEMORY[0x270FA2498](sub_240AA32E8, v7, v6);
}

uint64_t sub_240AA32E8()
{
  uint64_t v1 = *(void *)(v0 + 368);
  uint64_t v2 = *(void *)(v0 + 344);
  uint64_t v45 = *(void *)(v0 + 352);
  uint64_t v4 = *(void *)(v0 + 328);
  uint64_t v3 = *(void *)(v0 + 336);
  uint64_t v5 = *(void *)(v0 + 320);
  uint64_t v6 = *(void *)(v0 + 304);
  uint64_t v46 = *(void *)(v0 + 296);
  uint64_t v47 = *(void *)(v0 + 360);
  uint64_t v7 = type metadata accessor for AFibBurdenAddDataView();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v2, *MEMORY[0x263F07830], v4);
  uint64_t v44 = v7;
  sub_240AA3F44(0, &qword_268C9FAC8, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
  sub_240BB6A40();
  sub_240BB2DB0();
  uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v43(v5, v46);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v45, 1, v47);
  if (v8 == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 280);
    uint64_t v9 = *(void *)(v0 + 288);
    uint64_t v11 = *(void *)(v0 + 272);
    (*(void (**)(void, void, void))(*(void *)(v0 + 368) + 32))(*(void *)(v0 + 376), *(void *)(v0 + 352), *(void *)(v0 + 360));
    sub_240AA3F44(0, &qword_268C9FBE8, (uint64_t (*)(uint64_t))sub_240AA643C, MEMORY[0x263F8E0F8]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_240BB97E0;
    *(void *)(inited + 32) = sub_240BB6DE0();
    *(void *)(inited + 40) = v13;
    sub_240BB2EB0();
    uint64_t v14 = (void *)sub_240BB2F00();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    id v15 = objc_msgSend(v14, sel_name);

    uint64_t v16 = sub_240BB6DE0();
    uint64_t v18 = v17;

    *(void *)(inited + 72) = MEMORY[0x263F8D310];
    *(void *)(inited + 48) = v16;
    *(void *)(inited + 56) = v18;
    sub_240AB7F9C(inited);
    sub_240AA04A8();
    if (v19)
    {
      uint64_t v20 = sub_240BB6DE0();
      uint64_t v22 = v21;
      uint64_t v23 = sub_240A34DC4(0, (unint64_t *)&qword_268CA10E0);
      uint64_t v24 = sub_240BB74D0();
      *(void *)(v0 + 224) = v23;
      *(void *)(v0 + 200) = v24;
      sub_240A7B714((_OWORD *)(v0 + 200), (_OWORD *)(v0 + 232));
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_240B6A138((_OWORD *)(v0 + 232), v20, v22, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v27 = *(void *)(v0 + 312);
    uint64_t v26 = *(void *)(v0 + 320);
    uint64_t v41 = *(void *)(v0 + 264);
    uint64_t v42 = *(void *)(v0 + 296);
    sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
    uint64_t v28 = (void *)MEMORY[0x24560A470]((id)*MEMORY[0x263F09BF8]);
    id v29 = objc_msgSend(self, sel_percentUnit);
    double v30 = COERCE_DOUBLE(sub_240AA04A8());
    if (v31) {
      double v32 = 0.02;
    }
    else {
      double v32 = v30;
    }
    id v33 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v29, v32);

    sub_240BB27D0();
    sub_240BB27A0();
    uint64_t v34 = (void *)sub_240BB2C90();
    uint64_t v35 = (void *)sub_240BB2C90();
    uint64_t v36 = (void *)sub_240BB6D20();
    swift_bridgeObjectRelease();
    id v37 = objc_msgSend(self, sel_quantitySampleWithType_quantity_startDate_endDate_metadata_, v28, v33, v34, v35, v36);
    *(void *)(v0 + 408) = v37;

    v43(v27, v42);
    v43(v26, v42);
    uint64_t v38 = *(void **)(v41 + *(int *)(v44 + 20));
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 24) = sub_240AA3870;
    uint64_t v39 = swift_continuation_init();
    *(void *)(v0 + 160) = MEMORY[0x263EF8330];
    *(void *)(v0 + 168) = 0x40000000;
    *(void *)(v0 + 176) = sub_240ACE740;
    *(void *)(v0 + 184) = &unk_2650DCA10;
    *(void *)(v0 + 192) = v39;
    objc_msgSend(v38, sel_saveObject_withCompletion_, v37);
    uint64_t v8 = v0 + 16;
  }
  return MEMORY[0x270FA23F0](v8);
}

uint64_t sub_240AA3870()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 416) = v2;
  uint64_t v3 = *(void *)(v1 + 400);
  uint64_t v4 = *(void *)(v1 + 392);
  if (v2) {
    uint64_t v5 = sub_240AA3A84;
  }
  else {
    uint64_t v5 = sub_240AA39A0;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_240AA39A0()
{
  uint64_t v1 = (void *)v0[51];
  uint64_t v2 = v0[47];
  uint64_t v3 = v0[45];
  uint64_t v4 = v0[46];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_240AA3A84()
{
  uint64_t v1 = (void *)v0[51];
  uint64_t v2 = v0[47];
  uint64_t v3 = v0[45];
  uint64_t v4 = v0[46];
  swift_release();
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_240AA3B70@<X0>(uint64_t a1@<X8>)
{
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  sub_240BB2980();
  sub_240A46960();
  uint64_t result = sub_240BB68D0();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_240AA3C38()
{
  return sub_240BB6690();
}

void sub_240AA3C5C(uint64_t a1)
{
}

uint64_t type metadata accessor for AFibBurdenAddDataView()
{
  uint64_t result = qword_268C9FAD8;
  if (!qword_268C9FAD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_240AA3CDC(uint64_t *a1, uint64_t *a2, int *a3)
{
  char v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    char v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_240AA3C5C(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_240BB6500();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *char v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v11 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)v4 + v9) = (uint64_t)v11;
    uint64_t v12 = (char *)v4 + v10;
    uint64_t v13 = (char *)a2 + v10;
    uint64_t v14 = sub_240BB2EE0();
    id v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    id v16 = v11;
    v15(v12, v13, v14);
    uint64_t v17 = a3[7];
    uint64_t v18 = a3[8];
    char v19 = (uint64_t *)((char *)v4 + v17);
    uint64_t v20 = (uint64_t *)((char *)a2 + v17);
    uint64_t v21 = v20[1];
    *char v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = (char *)v4 + v18;
    uint64_t v23 = (char *)a2 + v18;
    uint64_t v24 = sub_240BB2CF0();
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
    swift_retain();
    v25(v22, v23, v24);
    sub_240AA3F44(0, &qword_268C9FAC8, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
    *(void *)&v22[*(int *)(v26 + 28)] = *(void *)&v23[*(int *)(v26 + 28)];
    uint64_t v27 = a3[9];
    uint64_t v28 = a3[10];
    id v29 = (char *)v4 + v27;
    double v30 = (char *)a2 + v27;
    *id v29 = *v30;
    *((void *)v29 + 1) = *((void *)v30 + 1);
    char v31 = (char *)v4 + v28;
    double v32 = (char *)a2 + v28;
    *char v31 = *v32;
    *((void *)v31 + 1) = *((void *)v32 + 1);
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

void sub_240AA3F44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_240AA3FA8(uint64_t a1, int *a2)
{
  sub_240AA3C5C(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_240BB6500();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }

  uint64_t v5 = a1 + a2[6];
  uint64_t v6 = sub_240BB2EE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  uint64_t v7 = a1 + a2[8];
  uint64_t v8 = sub_240BB2CF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  sub_240AA3F44(0, &qword_268C9FAC8, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
  swift_release();
  swift_release();

  return swift_release();
}

void *sub_240AA4140(void *a1, void *a2, int *a3)
{
  sub_240AA3C5C(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_240BB6500();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = *(void **)((char *)a2 + v7);
  *(void *)((char *)a1 + v7) = v9;
  uint64_t v10 = (char *)a1 + v8;
  uint64_t v11 = (char *)a2 + v8;
  uint64_t v12 = sub_240BB2EE0();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  id v14 = v9;
  v13(v10, v11, v12);
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)((char *)a1 + v15);
  uint64_t v18 = (void *)((char *)a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = (char *)a1 + v16;
  uint64_t v21 = (char *)a2 + v16;
  uint64_t v22 = sub_240BB2CF0();
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
  swift_retain();
  v23(v20, v21, v22);
  sub_240AA3F44(0, &qword_268C9FAC8, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
  *(void *)&v20[*(int *)(v24 + 28)] = *(void *)&v21[*(int *)(v24 + 28)];
  uint64_t v25 = a3[9];
  uint64_t v26 = a3[10];
  uint64_t v27 = (char *)a1 + v25;
  uint64_t v28 = (char *)a2 + v25;
  *uint64_t v27 = *v28;
  *((void *)v27 + 1) = *((void *)v28 + 1);
  id v29 = (char *)a1 + v26;
  double v30 = (char *)a2 + v26;
  *id v29 = *v30;
  *((void *)v29 + 1) = *((void *)v30 + 1);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_240AA435C(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_240AA687C((uint64_t)a1, (uint64_t (*)(void))sub_240AA3C5C);
    sub_240AA3C5C(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_240BB6500();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)((char *)a2 + v7);
  uint64_t v9 = *(void **)((char *)a1 + v7);
  *(void *)((char *)a1 + v7) = v8;
  id v10 = v8;

  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_240BB2EE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_retain();
  swift_release();
  uint64_t v18 = a3[8];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_240BB2CF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  sub_240AA3F44(0, &qword_268C9FAC8, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
  *(void *)&v19[*(int *)(v22 + 28)] = *(void *)&v20[*(int *)(v22 + 28)];
  swift_retain();
  swift_release();
  uint64_t v23 = a3[9];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  *uint64_t v24 = *v25;
  *((void *)v24 + 1) = *((void *)v25 + 1);
  swift_retain();
  swift_release();
  uint64_t v26 = a3[10];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  *uint64_t v27 = *v28;
  *((void *)v27 + 1) = *((void *)v28 + 1);
  swift_retain();
  swift_release();
  return a1;
}

char *sub_240AA45C4(char *a1, char *a2, int *a3)
{
  sub_240AA3C5C(0);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_240BB6500();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  uint64_t v9 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  id v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_240BB2EE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_240BB2CF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  sub_240AA3F44(0, &qword_268C9FAC8, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
  *(void *)&v14[*(int *)(v17 + 28)] = *(void *)&v15[*(int *)(v17 + 28)];
  uint64_t v18 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_OWORD *)&a1[v18] = *(_OWORD *)&a2[v18];
  return a1;
}

char *sub_240AA4788(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_240AA687C((uint64_t)a1, (uint64_t (*)(void))sub_240AA3C5C);
    sub_240AA3C5C(0);
    uint64_t v7 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_240BB6500();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
  }
  uint64_t v9 = a3[5];
  id v10 = *(void **)&a1[v9];
  *(void *)&a1[v9] = *(void *)&a2[v9];

  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = sub_240BB2EE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_release();
  uint64_t v18 = a3[8];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = sub_240BB2CF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  sub_240AA3F44(0, &qword_268C9FAC8, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
  *(void *)&v19[*(int *)(v22 + 28)] = *(void *)&v20[*(int *)(v22 + 28)];
  swift_release();
  uint64_t v23 = a3[9];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  *uint64_t v24 = *v25;
  *((void *)v24 + 1) = *((void *)v25 + 1);
  swift_release();
  uint64_t v26 = a3[10];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  *uint64_t v27 = *v28;
  *((void *)v27 + 1) = *((void *)v28 + 1);
  swift_release();
  return a1;
}

uint64_t sub_240AA49D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240AA49E8);
}

uint64_t sub_240AA49E8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_240AA3F44(0, &qword_268C9FAD0, MEMORY[0x263F188C0], MEMORY[0x263F185D0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_9:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[5]);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v13 = sub_240BB2EE0();
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a2)
    {
      uint64_t v8 = v13;
      uint64_t v10 = a1 + a3[6];
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
      goto LABEL_9;
    }
    sub_240AA3F44(0, &qword_268C9FAC8, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[8];
    return v16(v18, a2, v17);
  }
}

uint64_t sub_240AA4BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240AA4BDC);
}

void sub_240AA4BDC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_240AA3F44(0, &qword_268C9FAD0, MEMORY[0x263F188C0], MEMORY[0x263F185D0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    unint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_7:
    v11(v12, a2, a2, v10);
    return;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[5]) = (a2 - 1);
    return;
  }
  uint64_t v13 = sub_240BB2EE0();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + a4[6];
    unint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_7;
  }
  sub_240AA3F44(0, &qword_268C9FAC8, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[8];

  v16(v18, a2, a2, v17);
}

void sub_240AA4DBC()
{
  sub_240AA3C5C(319);
  if (v0 <= 0x3F)
  {
    sub_240BB2EE0();
    if (v1 <= 0x3F)
    {
      sub_240AA3F44(319, &qword_268C9FAC8, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_240AA4F08()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_240AA4F24()
{
  if (!qword_268C9FAE8)
  {
    sub_240BB6550();
    sub_240AA50A4();
    sub_240AA51F4();
    sub_240AA52F8();
    sub_240AA56F0();
    sub_240AA6940(&qword_268C9FBA8, (void (*)(uint64_t))sub_240AA52F8);
    sub_240AA6940(&qword_268C9FBB0, (void (*)(uint64_t))sub_240AA56F0);
    swift_getOpaqueTypeConformance2();
    sub_240A46960();
    swift_getOpaqueTypeConformance2();
    unint64_t v0 = sub_240BB65A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9FAE8);
    }
  }
}

void sub_240AA50A4()
{
  if (!qword_268C9FAF0)
  {
    sub_240AA51F4();
    sub_240AA52F8();
    sub_240AA56F0();
    sub_240AA6940(&qword_268C9FBA8, (void (*)(uint64_t))sub_240AA52F8);
    sub_240AA6940(&qword_268C9FBB0, (void (*)(uint64_t))sub_240AA56F0);
    swift_getOpaqueTypeConformance2();
    sub_240A46960();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9FAF0);
    }
  }
}

void sub_240AA51F4()
{
  if (!qword_268C9FAF8)
  {
    sub_240AA52F8();
    sub_240AA56F0();
    sub_240AA6940(&qword_268C9FBA8, (void (*)(uint64_t))sub_240AA52F8);
    sub_240AA6940(&qword_268C9FBB0, (void (*)(uint64_t))sub_240AA56F0);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9FAF8);
    }
  }
}

void sub_240AA52F8()
{
  if (!qword_268C9FB00)
  {
    sub_240AA53A8();
    sub_240AA6940(&qword_268C9FB60, (void (*)(uint64_t))sub_240AA53A8);
    unint64_t v0 = sub_240BB6880();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9FB00);
    }
  }
}

void sub_240AA53A8()
{
  if (!qword_268C9FB08)
  {
    sub_240AA5778(255, &qword_268C9FB10, sub_240AA5430, sub_240AA5580);
    unint64_t v0 = sub_240BB6B50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9FB08);
    }
  }
}

void sub_240AA5430(uint64_t a1)
{
}

void sub_240AA5450(uint64_t a1)
{
}

void sub_240AA5484()
{
  if (!qword_268C9FB28)
  {
    sub_240AA5888(255, &qword_268C9FB30, MEMORY[0x263F1A830], MEMORY[0x263F18AA8]);
    sub_240AA5518();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C9FB28);
    }
  }
}

void sub_240AA5518()
{
  if (!qword_268C9FB38)
  {
    unint64_t v0 = sub_240BB6AC0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9FB38);
    }
  }
}

void sub_240AA5580(uint64_t a1)
{
}

void sub_240AA55A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240BB6B20();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_240AA5604(uint64_t a1)
{
}

void sub_240AA5638()
{
  if (!qword_268C9FB50)
  {
    sub_240AA5888(255, &qword_268C9FB30, MEMORY[0x263F1A830], MEMORY[0x263F18AA8]);
    sub_240AA5888(255, &qword_268C9FB58, MEMORY[0x263F1A820], MEMORY[0x263F18390]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C9FB50);
    }
  }
}

void sub_240AA56F0()
{
  if (!qword_268C9FB68)
  {
    sub_240AA5778(255, &qword_268C9FB70, (void (*)(uint64_t))sub_240AA57F4, (void (*)(uint64_t))sub_240AA5954);
    unint64_t v0 = sub_240BB6770();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9FB68);
    }
  }
}

void sub_240AA5778(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_240AA57F4()
{
  if (!qword_268C9FB78)
  {
    sub_240AA5888(255, (unint64_t *)&qword_268C9F940, MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
    sub_240AA58D8();
    unint64_t v0 = sub_240BB64D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9FB78);
    }
  }
}

void sub_240AA5888(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, void))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, MEMORY[0x263F1A830]);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_240AA58D8()
{
  unint64_t result = qword_268C9F948;
  if (!qword_268C9F948)
  {
    sub_240AA5888(255, (unint64_t *)&qword_268C9F940, MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9F948);
  }
  return result;
}

void sub_240AA5954()
{
  if (!qword_268C9FB80)
  {
    sub_240AA59C4();
    sub_240AA5A74();
    unint64_t v0 = sub_240BB64D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9FB80);
    }
  }
}

void sub_240AA59C4()
{
  if (!qword_268C9FB88)
  {
    sub_240AA5888(255, (unint64_t *)&qword_268C9F940, MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
    sub_240AA64A8(255, &qword_268C9FB90, MEMORY[0x263F8D4F8], MEMORY[0x263F1A4D8]);
    unint64_t v0 = sub_240BB6580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9FB88);
    }
  }
}

unint64_t sub_240AA5A74()
{
  unint64_t result = qword_268C9FB98;
  if (!qword_268C9FB98)
  {
    sub_240AA59C4();
    sub_240AA58D8();
    sub_240AA5AEC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9FB98);
  }
  return result;
}

unint64_t sub_240AA5AEC()
{
  unint64_t result = qword_268C9FBA0;
  if (!qword_268C9FBA0)
  {
    sub_240AA64A8(255, &qword_268C9FB90, MEMORY[0x263F8D4F8], MEMORY[0x263F1A4D8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9FBA0);
  }
  return result;
}

void sub_240AA5B68()
{
  if (!qword_268C9FBB8)
  {
    sub_240AA4F24();
    sub_240AA6940(&qword_268C9FBC0, (void (*)(uint64_t))sub_240AA4F24);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268C9FBB8);
    }
  }
}

id sub_240AA5C1C@<X0>(uint64_t a1@<X8>)
{
  return sub_240A9F6F4(*(void *)(v1 + 16), a1);
}

uint64_t sub_240AA5C24@<X0>(char *a1@<X8>)
{
  return sub_240A9FB60(a1);
}

uint64_t sub_240AA5C2C@<X0>(uint64_t a1@<X8>)
{
  return sub_240AA1A40(*(void *)(v1 + 16), a1);
}

uint64_t sub_240AA5C34()
{
  return sub_240AA1D78(*(void *)(v0 + 16));
}

uint64_t sub_240AA5C3C@<X0>(uint64_t a1@<X8>)
{
  return sub_240AA2000(*(void *)(v1 + 16), a1);
}

uint64_t sub_240AA5C48()
{
  return sub_240AA6720(sub_240AA234C);
}

uint64_t sub_240AA5C60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_240BB66F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AA3C5C(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AA6814(v2, (uint64_t)v10, (uint64_t (*)(void))sub_240AA3C5C);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_240BB6500();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, v10, v11);
  }
  else
  {
    os_log_type_t v13 = sub_240BB7190();
    uint64_t v14 = sub_240BB6820();
    os_log_type_t v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v19[1] = a1;
      uint64_t v18 = v17;
      uint64_t v20 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      v19[2] = sub_240A38940(0x417373696D736944, 0xED00006E6F697463, &v20);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v18, -1, -1);
      MEMORY[0x24560B930](v16, -1, -1);
    }

    sub_240BB66E0();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_240AA5F28@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_240BB66A0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_240AA5F58()
{
  return sub_240BB66B0();
}

uint64_t sub_240AA5F80()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

unsigned char *sub_240AA5F90(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_240AA5FA8()
{
  uint64_t v1 = (int *)type metadata accessor for AFibBurdenAddDataView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  sub_240BB50A0();
  uint64_t v5 = v0 + v3;
  sub_240AA3C5C(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_240BB6500();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v3 + v4;

  uint64_t v8 = v5 + v1[6];
  uint64_t v9 = sub_240BB2EE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  uint64_t v10 = v5 + v1[8];
  uint64_t v11 = sub_240BB2CF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  sub_240AA3F44(0, &qword_268C9FAC8, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, v7, v2 | 7);
}

uint64_t sub_240AA61C0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for AFibBurdenAddDataView() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_240AA62AC;
  return sub_240AA25AC(a1, v5, v6, v7);
}

uint64_t sub_240AA62AC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void sub_240AA63A0()
{
  if (!qword_26AFD77A0)
  {
    sub_240A34DC4(255, (unint64_t *)&qword_26AFD77B0);
    unint64_t v0 = sub_240BB75E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD77A0);
    }
  }
}

void sub_240AA6408(uint64_t a1)
{
}

void sub_240AA643C()
{
  if (!qword_268CA21E0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CA21E0);
    }
  }
}

void sub_240AA64A8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_240AA64F8()
{
  uint64_t v1 = (int *)type metadata accessor for AFibBurdenAddDataView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  sub_240AA3C5C(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_240BB6500();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v3 + v4;

  uint64_t v8 = v5 + v1[6];
  uint64_t v9 = sub_240BB2EE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  uint64_t v10 = v5 + v1[8];
  uint64_t v11 = sub_240BB2CF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  sub_240AA3F44(0, &qword_268C9FAC8, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, v7, v2 | 7);
}

uint64_t sub_240AA6708()
{
  return sub_240AA6720((uint64_t (*)(uint64_t))sub_240AA1F34);
}

uint64_t sub_240AA6720(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for AFibBurdenAddDataView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_240AA6794@<X0>(char *a1@<X8>)
{
  return sub_240AA0008(*(void *)(v1 + 16), a1);
}

uint64_t sub_240AA679C@<X0>(char *a1@<X8>)
{
  return sub_240AA0774(a1);
}

uint64_t sub_240AA67A4@<X0>(uint64_t a1@<X8>)
{
  return sub_240AA0CA0(a1);
}

uint64_t sub_240AA67AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_240AA6814(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_240AA687C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_240AA68DC@<X0>(uint64_t a1@<X8>)
{
  return sub_240AA0444(a1);
}

void sub_240AA68E4()
{
  if (!qword_268C9FC18)
  {
    sub_240A62450();
    unint64_t v0 = sub_240BB2A70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9FC18);
    }
  }
}

uint64_t sub_240AA6940(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240AA6988()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_240AA6A68(void *a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  id v7 = sub_240AA7FE4();
  if (v8)
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_240BB5990();
    sub_240A395FC(v22, (uint64_t)qword_26AFDEC70);
    id v23 = v3;
    id v24 = a1;
    id v25 = v23;
    id v26 = v24;
    uint64_t v27 = sub_240BB5970();
    os_log_type_t v28 = sub_240BB71A0();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      unint64_t v86 = v30;
      *(_DWORD *)uint64_t v29 = 136446722;
      swift_getObjectType();
      sub_240AA853C(0, &qword_268C9FC28, &qword_268C9FC30);
      uint64_t v31 = sub_240BB6E10();
      sub_240A38940(v31, v32, (uint64_t *)&v86);
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2082;
      sub_240A38940(0xD000000000000026, 0x8000000240BCC6E0, (uint64_t *)&v86);
      sub_240BB75F0();
      *(_WORD *)(v29 + 22) = 2082;
      swift_getObjectType();
      sub_240AA853C(0, &qword_268C9FC38, (unint64_t *)&unk_268CA0B90);
      uint64_t v33 = sub_240BB6E10();
      sub_240A38940(v33, v34, (uint64_t *)&v86);
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v27, v28, "[%{public}s.%{public}s] %{public}s not already presented. Presenting now.", (uint8_t *)v29, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v30, -1, -1);
      MEMORY[0x24560B930](v29, -1, -1);
    }
    else
    {
    }
    id v35 = objc_msgSend(v25, sel_selectedViewController);
    if (v35)
    {
      uint64_t v36 = v35;
      self;
      uint64_t v37 = swift_dynamicCastObjCClass();
      if (v37)
      {
        uint64_t v38 = (void *)v37;
        sub_240A34E00();
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_240BBAD40;
        *(void *)(inited + 32) = v26;
        unint64_t v86 = inited;
        sub_240BB6F30();
        id v40 = v26;
        sub_240BB4850();
        id v41 = v36;
        sub_240B85BC4(a2);
        unint64_t v42 = v86;
        id v43 = objc_msgSend(v38, sel_viewControllers);
        sub_240A34DC4(0, (unint64_t *)&unk_268CA0B90);
        uint64_t v44 = sub_240BB6F10();

        unint64_t v86 = v44;
        sub_240BB4850();
        sub_240B85BC4(v42);
        uint64_t v45 = (void *)sub_240BB6EF0();
        swift_bridgeObjectRelease();
        objc_msgSend(v38, sel_setViewControllers_animated_, v45, a3 & 1);
        swift_bridgeObjectRelease();
      }
      else
      {
      }
    }
  }
  else
  {
    uint64_t v9 = (uint64_t)v7;
    if (objc_msgSend(v3, sel_selectedIndex) != v7)
    {
      if (qword_26AFD9A18 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_240BB5990();
      sub_240A395FC(v10, (uint64_t)qword_26AFDEC70);
      id v11 = v3;
      id v12 = a1;
      id v13 = v11;
      id v14 = v12;
      os_log_type_t v15 = sub_240BB5970();
      os_log_type_t v16 = sub_240BB71A0();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = swift_slowAlloc();
        uint64_t v83 = swift_slowAlloc();
        unint64_t v86 = v83;
        *(_DWORD *)uint64_t v17 = 136446722;
        swift_getObjectType();
        sub_240AA853C(0, &qword_268C9FC28, &qword_268C9FC30);
        uint64_t v18 = sub_240BB6E10();
        sub_240A38940(v18, v19, (uint64_t *)&v86);
        sub_240BB75F0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v17 + 12) = 2082;
        sub_240A38940(0xD000000000000026, 0x8000000240BCC6E0, (uint64_t *)&v86);
        sub_240BB75F0();
        *(_WORD *)(v17 + 22) = 2082;
        swift_getObjectType();
        sub_240AA853C(0, &qword_268C9FC38, (unint64_t *)&unk_268CA0B90);
        uint64_t v20 = sub_240BB6E10();
        sub_240A38940(v20, v21, (uint64_t *)&v86);
        sub_240BB75F0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240A1B000, v15, v16, "[%{public}s.%{public}s] %{public}s already presented in a different tab. Switching to that tab.", (uint8_t *)v17, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x24560B930](v83, -1, -1);
        MEMORY[0x24560B930](v17, -1, -1);
      }
      else
      {
      }
      objc_msgSend(v13, sel_setSelectedIndex_, v9);
    }
    if (sub_240AA82FC((uint64_t)a1, v9))
    {
      if (qword_26AFD9A18 != -1) {
        swift_once();
      }
      uint64_t v46 = sub_240BB5990();
      sub_240A395FC(v46, (uint64_t)qword_26AFDEC70);
      id v47 = v4;
      id v48 = a1;
      swift_bridgeObjectRetain_n();
      id v49 = v47;
      id v50 = v48;
      uint64_t v51 = sub_240BB5970();
      os_log_type_t v52 = sub_240BB71A0();
      if (os_log_type_enabled(v51, v52))
      {
        uint64_t v53 = swift_slowAlloc();
        uint64_t v84 = swift_slowAlloc();
        unint64_t v86 = v84;
        *(_DWORD *)uint64_t v53 = 136446978;
        swift_getObjectType();
        sub_240AA853C(0, &qword_268C9FC28, &qword_268C9FC30);
        uint64_t v54 = sub_240BB6E10();
        sub_240A38940(v54, v55, (uint64_t *)&v86);
        sub_240BB75F0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v53 + 12) = 2082;
        sub_240A38940(0xD000000000000026, 0x8000000240BCC6E0, (uint64_t *)&v86);
        sub_240BB75F0();
        *(_WORD *)(v53 + 22) = 2082;
        swift_getObjectType();
        sub_240AA853C(0, &qword_268C9FC38, (unint64_t *)&unk_268CA0B90);
        uint64_t v56 = sub_240BB6E10();
        sub_240A38940(v56, v57, (uint64_t *)&v86);
        sub_240BB75F0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v53 + 32) = 2082;
        uint64_t v58 = sub_240A34DC4(0, (unint64_t *)&unk_268CA0B90);
        uint64_t v59 = sub_240BB4850();
        uint64_t v60 = MEMORY[0x24560A1D0](v59, v58);
        unint64_t v62 = v61;
        swift_bridgeObjectRelease();
        sub_240A38940(v60, v62, (uint64_t *)&v86);
        sub_240BB75F0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240A1B000, v51, v52, "[%{public}s.%{public}s] %{public}s is the topmost VC. Presenting %{public}s ontop.", (uint8_t *)v53, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x24560B930](v84, -1, -1);
        MEMORY[0x24560B930](v53, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      int v76 = objc_msgSend(v49, sel_selectedViewController);
      if (v76)
      {
        os_log_t v68 = v76;
        self;
        uint64_t v77 = swift_dynamicCastObjCClass();
        if (v77)
        {
          uint64_t v78 = (void *)v77;
          uint64_t v79 = v68;
          id v80 = objc_msgSend(v78, sel_viewControllers);
          sub_240A34DC4(0, (unint64_t *)&unk_268CA0B90);
          uint64_t v81 = sub_240BB6F10();

          unint64_t v86 = v81;
          sub_240BB4850();
          sub_240B85BC4(a2);
          uint64_t v82 = (void *)sub_240BB6EF0();
          swift_bridgeObjectRelease();
          objc_msgSend(v78, sel_setViewControllers_animated_, v82, a3 & 1);

          return;
        }
        goto LABEL_30;
      }
    }
    else
    {
      if (qword_26AFD9A18 != -1) {
        swift_once();
      }
      uint64_t v63 = sub_240BB5990();
      sub_240A395FC(v63, (uint64_t)qword_26AFDEC70);
      id v64 = v4;
      id v65 = a1;
      id v66 = v64;
      id v67 = v65;
      os_log_t v68 = sub_240BB5970();
      os_log_type_t v69 = sub_240BB71A0();
      if (os_log_type_enabled(v68, v69))
      {
        uint64_t v70 = swift_slowAlloc();
        uint64_t v71 = swift_slowAlloc();
        unint64_t v86 = v71;
        *(_DWORD *)uint64_t v70 = 136446722;
        swift_getObjectType();
        sub_240AA853C(0, &qword_268C9FC28, &qword_268C9FC30);
        uint64_t v72 = sub_240BB6E10();
        sub_240A38940(v72, v73, (uint64_t *)&v86);
        sub_240BB75F0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v70 + 12) = 2082;
        sub_240A38940(0xD000000000000026, 0x8000000240BCC6E0, (uint64_t *)&v86);
        sub_240BB75F0();
        *(_WORD *)(v70 + 22) = 2082;
        swift_getObjectType();
        sub_240AA853C(0, &qword_268C9FC38, (unint64_t *)&unk_268CA0B90);
        uint64_t v74 = sub_240BB6E10();
        sub_240A38940(v74, v75, (uint64_t *)&v86);
        sub_240BB75F0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240A1B000, v68, v69, "[%{public}s.%{public}s] %{public}s is not the topmost VC. We will not mess with the view hierarchy.", (uint8_t *)v70, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x24560B930](v71, -1, -1);
        MEMORY[0x24560B930](v70, -1, -1);
LABEL_30:

        return;
      }
    }
  }
}

void sub_240AA7788(void *a1, char a2)
{
  id v5 = sub_240AA7FE4();
  if (v6)
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_240BB5990();
    sub_240A395FC(v20, (uint64_t)qword_26AFDEC70);
    id v21 = v2;
    id v22 = a1;
    id v23 = v21;
    id v24 = v22;
    id v25 = sub_240BB5970();
    os_log_type_t v26 = sub_240BB71A0();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v50 = v28;
      *(_DWORD *)uint64_t v27 = 136446722;
      swift_getObjectType();
      sub_240AA853C(0, &qword_268C9FC28, &qword_268C9FC30);
      uint64_t v29 = sub_240BB6E10();
      sub_240A38940(v29, v30, &v50);
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2082;
      sub_240A38940(0xD00000000000001CLL, 0x8000000240BCC6C0, &v50);
      sub_240BB75F0();
      *(_WORD *)(v27 + 22) = 2082;
      swift_getObjectType();
      sub_240AA853C(0, &qword_268C9FC38, (unint64_t *)&unk_268CA0B90);
      uint64_t v31 = sub_240BB6E10();
      sub_240A38940(v31, v32, &v50);
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v25, v26, "[%{public}s.%{public}s] %{public}s not already presented. Presenting now.", (uint8_t *)v27, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v28, -1, -1);
      MEMORY[0x24560B930](v27, -1, -1);
    }
    else
    {
    }
    id v46 = objc_msgSend(v23, sel_selectedViewController);
    if (v46)
    {
      id v47 = v46;
      self;
      id v48 = (void *)swift_dynamicCastObjCClass();
      if (!v48) {
    }
      }
    else
    {
      id v48 = 0;
    }
    objc_msgSend(v48, sel_pushViewController_animated_, v24, a2 & 1);
  }
  else
  {
    id v7 = v5;
    if (objc_msgSend(v2, sel_selectedIndex) == v5)
    {
      if (qword_26AFD9A18 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_240BB5990();
      sub_240A395FC(v8, (uint64_t)qword_26AFDEC70);
      id v9 = v2;
      id v10 = a1;
      id v49 = v9;
      id v11 = v10;
      id v12 = sub_240BB5970();
      os_log_type_t v13 = sub_240BB71A0();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = swift_slowAlloc();
        uint64_t v15 = swift_slowAlloc();
        uint64_t v50 = v15;
        *(_DWORD *)uint64_t v14 = 136446722;
        swift_getObjectType();
        sub_240AA853C(0, &qword_268C9FC28, &qword_268C9FC30);
        uint64_t v16 = sub_240BB6E10();
        sub_240A38940(v16, v17, &v50);
        sub_240BB75F0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v14 + 12) = 2082;
        sub_240A38940(0xD00000000000001CLL, 0x8000000240BCC6C0, &v50);
        sub_240BB75F0();
        *(_WORD *)(v14 + 22) = 2082;
        swift_getObjectType();
        sub_240AA853C(0, &qword_268C9FC38, (unint64_t *)&unk_268CA0B90);
        uint64_t v18 = sub_240BB6E10();
        sub_240A38940(v18, v19, &v50);
        sub_240BB75F0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240A1B000, v12, v13, "[%{public}s.%{public}s] %{public}s already presented.", (uint8_t *)v14, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x24560B930](v15, -1, -1);
        MEMORY[0x24560B930](v14, -1, -1);
      }
      else
      {
      }
    }
    else
    {
      if (qword_26AFD9A18 != -1) {
        swift_once();
      }
      uint64_t v33 = sub_240BB5990();
      sub_240A395FC(v33, (uint64_t)qword_26AFDEC70);
      id v34 = v2;
      id v35 = a1;
      id v36 = v34;
      id v37 = v35;
      uint64_t v38 = sub_240BB5970();
      os_log_type_t v39 = sub_240BB71A0();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = swift_slowAlloc();
        uint64_t v41 = swift_slowAlloc();
        uint64_t v50 = v41;
        *(_DWORD *)uint64_t v40 = 136446722;
        swift_getObjectType();
        sub_240AA853C(0, &qword_268C9FC28, &qword_268C9FC30);
        uint64_t v42 = sub_240BB6E10();
        sub_240A38940(v42, v43, &v50);
        sub_240BB75F0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v40 + 12) = 2082;
        sub_240A38940(0xD00000000000001CLL, 0x8000000240BCC6C0, &v50);
        sub_240BB75F0();
        *(_WORD *)(v40 + 22) = 2082;
        swift_getObjectType();
        sub_240AA853C(0, &qword_268C9FC38, (unint64_t *)&unk_268CA0B90);
        uint64_t v44 = sub_240BB6E10();
        sub_240A38940(v44, v45, &v50);
        sub_240BB75F0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240A1B000, v38, v39, "[%{public}s.%{public}s] %{public}s already presented in a different tab. Switching to that tab.", (uint8_t *)v40, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x24560B930](v41, -1, -1);
        MEMORY[0x24560B930](v40, -1, -1);
      }
      else
      {
      }
      objc_msgSend(v36, sel_setSelectedIndex_, v7);
    }
  }
}

id sub_240AA7FE4()
{
  id v1 = objc_msgSend(v0, sel_viewControllers);
  if (v1)
  {
    sub_240A34DC4(0, (unint64_t *)&unk_268CA0B90);
    unint64_t v2 = sub_240BB6F10();

    if (v2 >> 62) {
      goto LABEL_39;
    }
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3)
    {
LABEL_4:
      unint64_t v4 = 0;
      unint64_t v19 = v2;
      unint64_t v20 = v2 & 0xC000000000000001;
      unint64_t v16 = v2 + 32;
      uint64_t v17 = v2 & 0xFFFFFFFFFFFFFF8;
      uint64_t v18 = v3;
      do
      {
        if (v20)
        {
          id v5 = (id)MEMORY[0x24560AAA0](v4, v2);
        }
        else
        {
          if (v4 >= *(void *)(v17 + 16)) {
            goto LABEL_38;
          }
          id v5 = *(id *)(v16 + 8 * v4);
        }
        unint64_t v2 = (unint64_t)v5;
        char v6 = (char *)(v4 + 1);
        if (__OFADD__(v4, 1)) {
          goto LABEL_36;
        }
        id v7 = objc_msgSend(v5, sel_childViewControllers);
        unint64_t v8 = sub_240BB6F10();

        id v21 = (void *)v2;
        if (v8 >> 62)
        {
          sub_240BB4850();
          uint64_t v9 = sub_240BB7900();
          swift_bridgeObjectRelease();
          if (!v9) {
            goto LABEL_5;
          }
        }
        else
        {
          uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v9) {
            goto LABEL_5;
          }
        }
        unint64_t v2 = v8 & 0xC000000000000001;
        if ((v8 & 0xC000000000000001) != 0)
        {
          MEMORY[0x24560AAA0](0, v8);
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v14 = swift_getObjectType();
          sub_240BB50A0();
          if (ObjectType == v14) {
            goto LABEL_31;
          }
        }
        else
        {
          if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_37;
          }
          uint64_t ObjectType = swift_getObjectType();
          if (ObjectType == swift_getObjectType())
          {
LABEL_31:
            swift_bridgeObjectRelease();
            id v1 = (id)v4;

            goto LABEL_41;
          }
        }
        if (v9 != 1)
        {
          unint64_t v11 = 1;
          do
          {
            if (v2)
            {
              MEMORY[0x24560AAA0](v11, v8);
              if (__OFADD__(v11++, 1))
              {
                __break(1u);
LABEL_34:
                __break(1u);
LABEL_35:
                __break(1u);
LABEL_36:
                __break(1u);
LABEL_37:
                __break(1u);
LABEL_38:
                __break(1u);
LABEL_39:
                sub_240BB4850();
                uint64_t v3 = sub_240BB7900();
                swift_bridgeObjectRelease();
                if (!v3) {
                  goto LABEL_40;
                }
                goto LABEL_4;
              }
              uint64_t v13 = swift_getObjectType();
              sub_240BB50A0();
              if (ObjectType == v13) {
                goto LABEL_31;
              }
            }
            else
            {
              if ((v11 & 0x8000000000000000) != 0) {
                goto LABEL_34;
              }
              if (v11 >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_35;
              }
              if (ObjectType == swift_getObjectType()) {
                goto LABEL_31;
              }
              ++v11;
            }
          }
          while (v11 != v9);
        }
LABEL_5:

        swift_bridgeObjectRelease();
        ++v4;
        unint64_t v2 = v19;
      }
      while (v6 != (char *)v18);
    }
LABEL_40:
    id v1 = 0;
LABEL_41:
    swift_bridgeObjectRelease();
  }
  return v1;
}

unint64_t sub_240AA82FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t result = (unint64_t)objc_msgSend(v3, sel_viewControllers);
  if (!result) {
    return result;
  }
  char v6 = (void *)result;
  unint64_t v7 = sub_240A34DC4(0, (unint64_t *)&unk_268CA0B90);
  unint64_t v8 = sub_240BB6F10();

  if (a2 < 0) {
    goto LABEL_17;
  }
  if (!(v8 >> 62))
  {
    if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2) {
      goto LABEL_5;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_240BB4850();
  uint64_t v14 = sub_240BB7900();
  swift_bridgeObjectRelease();
  if (v14 <= a2) {
    goto LABEL_17;
  }
LABEL_5:
  if ((v8 & 0xC000000000000001) != 0)
  {
    id v9 = (id)MEMORY[0x24560AAA0](a2, v8);
  }
  else
  {
    if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) <= (unint64_t)a2)
    {
      __break(1u);
      goto LABEL_22;
    }
    id v9 = *(id *)(v8 + 8 * a2 + 32);
  }
  a2 = (uint64_t)v9;
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend((id)a2, sel_childViewControllers);
  unint64_t v7 = sub_240BB6F10();

  if (!(v7 >> 62))
  {
    uint64_t v11 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  sub_240BB4850();
  uint64_t v11 = sub_240BB7900();
  swift_bridgeObjectRelease();
  if (!v11)
  {
LABEL_23:
    swift_bridgeObjectRelease();

    return 0;
  }
LABEL_10:
  unint64_t result = v11 - 1;
  if (__OFSUB__(v11, 1))
  {
    __break(1u);
    goto LABEL_25;
  }
  if ((v7 & 0xC000000000000001) != 0)
  {
LABEL_25:
    MEMORY[0x24560AAA0](result, v7);
    swift_bridgeObjectRelease();

    uint64_t ObjectType = swift_getObjectType();
    sub_240BB50A0();
    return ObjectType == swift_getObjectType();
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v12 = *(id *)(v7 + 8 * result + 32);
    swift_bridgeObjectRelease();

    uint64_t ObjectType = swift_getObjectType();
    return ObjectType == swift_getObjectType();
  }
  __break(1u);
  return result;
}

uint64_t sub_240AA853C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    sub_240A34DC4(255, a3);
    uint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

id sub_240AA8580()
{
  objc_msgSend(*(id *)(*sub_240A3466C(&v0[OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_heartSettingsUtilityProvider], *(void *)&v0[OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_heartSettingsUtilityProvider+ 24])+ 16), sel_removeHeartRhythmAvailabilityObserver_, v0);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BradycardiaAdvertisableFeatureSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240AA8710()
{
  return type metadata accessor for BradycardiaAdvertisableFeatureSource();
}

uint64_t type metadata accessor for BradycardiaAdvertisableFeatureSource()
{
  uint64_t result = qword_268C9FC58;
  if (!qword_268C9FC58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240AA8764()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26AFDECD8;
  uint64_t v1 = sub_240BB2980();
  uint64_t v3 = v2;
  uint64_t v4 = sub_240BB2980();
  uint64_t v6 = v5;
  id v7 = v0;
  unint64_t v8 = (void *)sub_240BB6DA0();
  id v9 = objc_msgSend(self, sel_imageNamed_inBundle_, v8, v7, 0xE000000000000000);

  return MEMORY[0x270F32468](v1, v3, v4, v6, v9);
}

uint64_t sub_240AA88F0(uint64_t a1, uint64_t a2)
{
  return sub_240AA89B0(a1, a2, (uint64_t)&unk_26F505CC0, (uint64_t)sub_240AAA770, (uint64_t)&unk_26F505CD8);
}

void sub_240AA8918(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5 = a1 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x24560BA20](v5);
  if (v6)
  {
    id v7 = (void *)v6;
    sub_240AA9288(a2, a3);
  }
}

uint64_t sub_240AA8988(uint64_t a1, uint64_t a2)
{
  return sub_240AA89B0(a1, a2, (uint64_t)&unk_26F505C70, (uint64_t)sub_240AAA720, (uint64_t)&unk_26F505C88);
}

uint64_t sub_240AA89B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v20 = a4;
  uint64_t v21 = a5;
  uint64_t v8 = sub_240BB6B90();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_240BB6BC0();
  uint64_t v12 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void *)(v5 + OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_queue);
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v16 = (void *)swift_allocObject();
  v16[2] = v15;
  v16[3] = a1;
  v16[4] = a2;
  aBlock[4] = v20;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_240A87354;
  aBlock[3] = v21;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_240BB6BB0();
  uint64_t v24 = MEMORY[0x263F8EE78];
  sub_240AAA58C((unint64_t *)&qword_26AFD98C8, MEMORY[0x263F8F030]);
  sub_240AAA4B8();
  sub_240AAA58C((unint64_t *)&qword_26AFD98F8, (void (*)(uint64_t))sub_240AAA4B8);
  sub_240BB7670();
  MEMORY[0x24560A5E0](0, v14, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v23);
  swift_release();
  return swift_release();
}

void sub_240AA8CB4(uint64_t a1, void (*a2)(char *))
{
  sub_240AAA624(0, (unint64_t *)&qword_268C9E898);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v9 - v5;
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x24560BA20](a1 + 16);
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    sub_240BB3830();
    sub_240AAA58C(&qword_268C9E8A0, MEMORY[0x263F437A8]);
    sub_240BB7C10();
    a2(v6);
    sub_240AAA6C0((uint64_t)v6, (unint64_t *)&qword_268C9E898);
  }
}

uint64_t sub_240AA8DE8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_240BB6B90();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_240BB6BC0();
  uint64_t v12 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(void *)(v4 + OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_queue);
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(unsigned char *)(v16 + 24) = a1;
  *(void *)(v16 + 32) = a2;
  *(void *)(v16 + 40) = a3;
  aBlock[4] = sub_240AAA614;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_240A87354;
  aBlock[3] = &unk_26F505C38;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_240BB6BB0();
  uint64_t v21 = MEMORY[0x263F8EE78];
  sub_240AAA58C((unint64_t *)&qword_26AFD98C8, MEMORY[0x263F8F030]);
  sub_240AAA4B8();
  sub_240AAA58C((unint64_t *)&qword_26AFD98F8, (void (*)(uint64_t))sub_240AAA4B8);
  sub_240BB7670();
  MEMORY[0x24560A5E0](0, v14, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v20);
  swift_release();
  return swift_release();
}

void sub_240AA9104(uint64_t a1, char a2, void (*a3)(char *))
{
  sub_240AAA624(0, (unint64_t *)&qword_268C9E898);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v12 - v7;
  swift_beginAccess();
  uint64_t v9 = MEMORY[0x24560BA20](a1 + 16);
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    if (a2)
    {
      objc_msgSend(self, sel_bradycardiaThresholdHeartRate);
      uint64_t v11 = (void *)sub_240BB70C0();
    }
    else
    {
      uint64_t v11 = 0;
    }
    objc_msgSend(self, sel_setBradycardiaThresholdHeartRate_, v11);
    sub_240BB3830();
    sub_240AAA58C(&qword_268C9E8A0, MEMORY[0x263F437A8]);
    sub_240BB7C10();
    a3(v8);

    sub_240AAA6C0((uint64_t)v8, (unint64_t *)&qword_268C9E898);
  }
}

uint64_t sub_240AA9288(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v72 = a2;
  unint64_t v73 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_240BB5990();
  uint64_t v68 = *(void *)(v3 - 8);
  uint64_t v69 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  id v66 = (char *)&v62 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v63 = (char *)&v62 - v10;
  MEMORY[0x270FA5388](v9);
  id v64 = (char *)&v62 - v11;
  sub_240AAA624(0, &qword_268C9FC68);
  uint64_t v71 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v70 = (char *)&v62 - v13;
  uint64_t v14 = sub_240BB2CF0();
  uint64_t v65 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_240BB2D40();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (void *)(v2 + OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_heartSettingsUtilityProvider);
  sub_240A3466C((void *)(v2 + OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_heartSettingsUtilityProvider), *(void *)(v2 + OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_heartSettingsUtilityProvider + 24));
  sub_240B42F60();
  if (!v22) {
    goto LABEL_9;
  }
  uint64_t v23 = v22;
  id v24 = HKNRDeviceCapabilityHeartRateV2();
  sub_240BB2D20();

  id v25 = (void *)sub_240BB2D10();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  unsigned int v26 = objc_msgSend(v23, sel_supportsCapability_, v25);

  if (!v26)
  {
LABEL_9:
    sub_240BB5940();
    uint64_t v44 = sub_240BB5970();
    os_log_type_t v45 = sub_240BB71A0();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      uint64_t v75 = v47;
      *(_DWORD *)uint64_t v46 = 136315394;
      uint64_t v48 = sub_240BB7C80();
      uint64_t v74 = sub_240A38940(v48, v49, &v75);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v46 + 12) = 2080;
      uint64_t v74 = sub_240A38940(0xD00000000000002BLL, 0x8000000240BCC770, &v75);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v44, v45, "[%s] %s -> false: heart rate motion context not supported on active watch", (uint8_t *)v46, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v47, -1, -1);
      MEMORY[0x24560B930](v46, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v68 + 8))(v6, v69);
    goto LABEL_19;
  }
  uint64_t v27 = self;
  if (objc_msgSend(v27, sel_isBackgroundHeartRateEnabled))
  {
    uint64_t v28 = *sub_240A3466C(v21, v21[3]);
    sub_240B42F60();
    if (v29)
    {
      unint64_t v30 = v29;
      uint64_t v31 = *(void **)(v28 + 16);
      sub_240BB2CE0();
      unint64_t v32 = (void *)sub_240BB2C90();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v16, v14);
      unsigned __int8 v33 = objc_msgSend(v31, sel_isHeartAgeGatingEnabledOnWatch_currentDate_, v30, v32);

      if (v33)
      {
        id v34 = v63;
        sub_240BB5940();
        id v35 = sub_240BB5970();
        os_log_type_t v36 = sub_240BB71A0();
        BOOL v37 = os_log_type_enabled(v35, v36);
        uint64_t v38 = v68;
        if (v37)
        {
          uint64_t v39 = swift_slowAlloc();
          uint64_t v40 = swift_slowAlloc();
          uint64_t v75 = v40;
          *(_DWORD *)uint64_t v39 = 136315394;
          uint64_t v41 = sub_240BB7C80();
          uint64_t v74 = sub_240A38940(v41, v42, &v75);
          sub_240BB75F0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v39 + 12) = 2080;
          uint64_t v74 = sub_240A38940(0xD00000000000002BLL, 0x8000000240BCC770, &v75);
          sub_240BB75F0();
          _os_log_impl(&dword_240A1B000, v35, v36, "[%s] %s -> false: heart age gating enabled on active watch", (uint8_t *)v39, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x24560B930](v40, -1, -1);
          MEMORY[0x24560B930](v39, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v38 + 8))(v34, v69);
        uint64_t v43 = (uint64_t)v70;
        *uint64_t v70 = 0;
        goto LABEL_22;
      }
    }
    if ((objc_msgSend(v27, sel_isBradycardiaDetectionEnabled) & 1) == 0)
    {
      uint64_t v43 = (uint64_t)v70;
      *uint64_t v70 = 1;
LABEL_22:
      uint64_t v60 = v73;
      goto LABEL_20;
    }
    uint64_t v50 = v64;
    sub_240BB5940();
    uint64_t v51 = sub_240BB5970();
    os_log_type_t v52 = sub_240BB71A0();
    if (!os_log_type_enabled(v51, v52)) {
      goto LABEL_18;
    }
    uint64_t v53 = swift_slowAlloc();
    uint64_t v54 = swift_slowAlloc();
    uint64_t v75 = v54;
    *(_DWORD *)uint64_t v53 = 136315394;
    uint64_t v58 = sub_240BB7C80();
    uint64_t v74 = sub_240A38940(v58, v59, &v75);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v53 + 12) = 2080;
    uint64_t v74 = sub_240A38940(0xD00000000000002BLL, 0x8000000240BCC770, &v75);
    sub_240BB75F0();
    unint64_t v57 = "[%s] %s -> false: detection already enabled";
    goto LABEL_17;
  }
  uint64_t v50 = v66;
  sub_240BB5940();
  uint64_t v51 = sub_240BB5970();
  os_log_type_t v52 = sub_240BB71A0();
  if (os_log_type_enabled(v51, v52))
  {
    uint64_t v53 = swift_slowAlloc();
    uint64_t v54 = swift_slowAlloc();
    uint64_t v75 = v54;
    *(_DWORD *)uint64_t v53 = 136315394;
    uint64_t v55 = sub_240BB7C80();
    uint64_t v74 = sub_240A38940(v55, v56, &v75);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v53 + 12) = 2080;
    uint64_t v74 = sub_240A38940(0xD00000000000002BLL, 0x8000000240BCC770, &v75);
    sub_240BB75F0();
    unint64_t v57 = "[%s] %s -> false: background heart rate not enabled";
LABEL_17:
    _os_log_impl(&dword_240A1B000, v51, v52, v57, (uint8_t *)v53, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v54, -1, -1);
    MEMORY[0x24560B930](v53, -1, -1);
  }
LABEL_18:

  (*(void (**)(char *, uint64_t))(v68 + 8))(v50, v69);
LABEL_19:
  uint64_t v60 = v73;
  uint64_t v43 = (uint64_t)v70;
  *uint64_t v70 = 0;
LABEL_20:
  swift_storeEnumTagMultiPayload();
  v60(v43);
  return sub_240AAA6C0(v43, &qword_268C9FC68);
}

uint64_t sub_240AA9C00()
{
  uint64_t result = sub_240BB3670();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_240AA9CB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_identifier;
  uint64_t v4 = sub_240BB3670();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_240AA9D28()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_delegate;
  swift_beginAccess();
  return MEMORY[0x24560BA20](v1);
}

uint64_t sub_240AA9D78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return sub_240BB50A0();
}

void (*sub_240AA9DE4(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x24560BA20](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_240A8003C;
}

uint64_t sub_240AA9E6C()
{
  return sub_240AA8764();
}

uint64_t sub_240AA9E90()
{
  return MEMORY[0x263F8EE78];
}

uint64_t sub_240AA9E9C()
{
  uint64_t v1 = sub_240BB6B90();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_240BB6BC0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = *(void *)(v0 + OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_queue);
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_240AAA4B0;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_240A87354;
  aBlock[3] = &unk_26F505BE8;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  sub_240BB6BB0();
  v12[1] = MEMORY[0x263F8EE78];
  sub_240AAA58C((unint64_t *)&qword_26AFD98C8, MEMORY[0x263F8F030]);
  sub_240AAA4B8();
  sub_240AAA58C((unint64_t *)&qword_26AFD98F8, (void (*)(uint64_t))sub_240AAA4B8);
  sub_240BB7670();
  MEMORY[0x24560A5E0](0, v8, v4, v10);
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  return swift_release();
}

uint64_t sub_240AAA180(uint64_t a1)
{
  uint64_t v2 = a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x24560BA20](v2);
  if (result)
  {
    uint64_t v4 = (void *)result;
    swift_retain();
    sub_240AA9288(sub_240AAA510, a1);

    return swift_release();
  }
  return result;
}

void sub_240AAA200(uint64_t a1, uint64_t a2)
{
  sub_240AAA624(0, &qword_268C9FC68);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = &v11[-v5];
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x24560BA20](a2 + 16);
  if (v7)
  {
    uint64_t v8 = (char *)v7;
    sub_240AAA518(a1, (uint64_t)v6);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_240AAA6C0((uint64_t)v6, &qword_268C9FC68);
      uint64_t v9 = &v8[OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_delegate];
      swift_beginAccess();
      if (MEMORY[0x24560BA20](v9))
      {
LABEL_4:
        swift_getObjectType();
        sub_240AAA58C(&qword_268C9FC70, (void (*)(uint64_t))type metadata accessor for BradycardiaAdvertisableFeatureSource);
        sub_240BB3970();

        sub_240BB50A0();
        return;
      }
    }
    else
    {
      uint64_t v10 = &v8[OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_delegate];
      swift_beginAccess();
      if (MEMORY[0x24560BA20](v10)) {
        goto LABEL_4;
      }
    }
  }
}

uint64_t sub_240AAA478()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240AAA4B0()
{
  return sub_240AAA180(v0);
}

void sub_240AAA4B8()
{
  if (!qword_26AFD98F0)
  {
    sub_240BB6B90();
    unint64_t v0 = sub_240BB6F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD98F0);
    }
  }
}

void sub_240AAA510(uint64_t a1)
{
  sub_240AAA200(a1, v1);
}

uint64_t sub_240AAA518(uint64_t a1, uint64_t a2)
{
  sub_240AAA624(0, &qword_268C9FC68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240AAA58C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240AAA5D4()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_240AAA614()
{
  sub_240AA9104(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void (**)(char *))(v0 + 32));
}

void sub_240AAA624(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    sub_240BB3830();
    sub_240AAA58C(&qword_268C9E8A0, MEMORY[0x263F437A8]);
    unint64_t v3 = sub_240BB7C20();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_240AAA6C0(uint64_t a1, unint64_t *a2)
{
  sub_240AAA624(0, a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_240AAA720()
{
  sub_240AA8CB4(*(void *)(v0 + 16), *(void (**)(char *))(v0 + 24));
}

uint64_t sub_240AAA730()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_240AAA770()
{
  sub_240AA8918(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t HKHRAFibBurdenLoggingCategory.rawString.getter(uint64_t a1)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      uint64_t result = sub_240BB6E80();
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

void *static HKHRAFibBurdenLoggingCategory.allCases.getter()
{
  return &unk_26F503398;
}

unint64_t sub_240AAA848()
{
  unint64_t result = qword_26AFD7590;
  if (!qword_26AFD7590)
  {
    sub_240AAA8A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD7590);
  }
  return result;
}

void sub_240AAA8A0()
{
  if (!qword_26AFD7588)
  {
    type metadata accessor for HKHRAFibBurdenLoggingCategory(255);
    unint64_t v0 = sub_240BB6F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD7588);
    }
  }
}

void sub_240AAA8F8(void *a1@<X8>)
{
  *a1 = &unk_26F5033E0;
}

uint64_t sub_240AAA908()
{
  switch(*v0)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      uint64_t result = sub_240BB6E80();
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

void sub_240AAA9AC()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
  objc_msgSend(v0, sel_setNumberStyle_, 0);
  objc_msgSend(v0, sel_setRoundingMode_, 6);
  objc_msgSend(v0, sel_setMaximumFractionDigits_, 0);

  qword_268CA2890 = (uint64_t)v0;
}

uint64_t sub_240AAAA2C()
{
  uint64_t v1 = (void *)sub_240BB6FF0();
  id v2 = objc_msgSend(v0, sel_stringFromNumber_, v1);

  if (v2)
  {
    uint64_t v3 = sub_240BB6DE0();

    return v3;
  }
  else
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_240BB5990();
    sub_240A395FC(v5, (uint64_t)qword_26AFDEC70);
    id v6 = v0;
    uint64_t v7 = sub_240BB5970();
    os_log_type_t v8 = sub_240BB7190();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 134218242;
      sub_240BB75F0();
      *(_WORD *)(v9 + 12) = 2112;
      id v11 = v6;
      sub_240BB75F0();
      *uint64_t v10 = v6;

      _os_log_impl(&dword_240A1B000, v7, v8, "Unable to format double %f using %@.", (uint8_t *)v9, 0x16u);
      sub_240AA63A0();
      swift_arrayDestroy();
      MEMORY[0x24560B930](v10, -1, -1);
      MEMORY[0x24560B930](v9, -1, -1);
    }
    else
    {
    }
    return sub_240BB7000();
  }
}

uint64_t sub_240AAAC44()
{
  uint64_t v1 = (void *)sub_240BB70C0();
  id v2 = objc_msgSend(v0, sel_stringFromNumber_, v1);

  if (v2)
  {
    uint64_t v3 = sub_240BB6DE0();

    return v3;
  }
  else
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_240BB5990();
    sub_240A395FC(v5, (uint64_t)qword_26AFDEC70);
    id v6 = v0;
    uint64_t v7 = sub_240BB5970();
    os_log_type_t v8 = sub_240BB7190();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 134218242;
      sub_240BB75F0();
      *(_WORD *)(v9 + 12) = 2112;
      id v11 = v6;
      sub_240BB75F0();
      *uint64_t v10 = v6;

      _os_log_impl(&dword_240A1B000, v7, v8, "Unable to format int %ld using %@.", (uint8_t *)v9, 0x16u);
      sub_240AA63A0();
      swift_arrayDestroy();
      MEMORY[0x24560B930](v10, -1, -1);
      MEMORY[0x24560B930](v9, -1, -1);
    }
    else
    {
    }
    return sub_240BB7AA0();
  }
}

unint64_t sub_240AAAE68()
{
  unint64_t result = qword_26AFD77B0;
  if (!qword_26AFD77B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD77B0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ConfirmDetailsModel.Row.HealthDetail(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CardioFitnessOnboardingStage(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240AAB004);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessOnboardingStage()
{
  return &type metadata for CardioFitnessOnboardingStage;
}

unint64_t sub_240AAB040()
{
  unint64_t result = qword_268C9FC78;
  if (!qword_268C9FC78)
  {
    sub_240AAB098();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9FC78);
  }
  return result;
}

void sub_240AAB098()
{
  if (!qword_268C9FC80)
  {
    unint64_t v0 = sub_240BB6F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9FC80);
    }
  }
}

void sub_240AAB0F0(void *a1@<X8>)
{
  *a1 = &unk_26F503428;
}

unint64_t sub_240AAB104()
{
  unint64_t result = qword_268C9FC88;
  if (!qword_268C9FC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9FC88);
  }
  return result;
}

uint64_t sub_240AAB158()
{
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 24);
  uint64_t v1 = v0 + OBJC_IVAR____TtCC5Heart27RelatedSampleTypesGenerator11Environment_logger;
  uint64_t v2 = sub_240BB5990();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

void *sub_240AAB208(uint64_t a1, uint64_t a2)
{
  uint64_t v100 = a2;
  uint64_t v93 = sub_240BB7110();
  uint64_t v3 = *(void *)(v93 - 8);
  MEMORY[0x270FA5388](v93);
  uint64_t v83 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AADB5C(0, &qword_268C9FCA8, (void (*)(uint64_t))sub_240AADAF4);
  uint64_t v82 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v97 = (char *)&v69 - v7;
  sub_240AADB5C(0, &qword_268C9FCC0, (void (*)(uint64_t))type metadata accessor for RelatedSampleTypesGenerator.SampleTypeDetails);
  uint64_t v96 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v95 = (char *)&v69 - v10;
  sub_240AADC28(0);
  uint64_t v72 = v11;
  uint64_t v71 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v70 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3A5A4(0, &qword_268C9FCE0, (uint64_t (*)(uint64_t))sub_240AADC28, sub_240AADD14, MEMORY[0x263EFDC10]);
  uint64_t v81 = v13;
  uint64_t v79 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  int v76 = (char *)&v69 - v14;
  sub_240AADD48();
  uint64_t v80 = v15;
  uint64_t v78 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v75 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3A5A4(0, &qword_268C9FD00, (uint64_t (*)(uint64_t))sub_240AADD48, sub_240AADEC8, MEMORY[0x263EFDAA0]);
  uint64_t v77 = v17;
  uint64_t v74 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  unint64_t v73 = (char *)&v69 - v18;
  uint64_t v19 = *(void *)(a1 + 8);
  uint64_t v20 = MEMORY[0x263F8EE78];
  unint64_t v94 = v19 & 0xC000000000000001;
  uint64_t v99 = v19;
  if ((v19 & 0xC000000000000001) == 0)
  {
    uint64_t v23 = *(void *)(v19 + 16);
    sub_240BB4850();
    if (v23)
    {
      uint64_t v105 = v20;
      sub_240BB7880();
      uint64_t v102 = sub_240AAD710(v19);
      uint64_t v103 = v26;
      char v104 = v27 & 1;
      uint64_t v21 = v19 & 0xFFFFFFFFFFFFFF8;
LABEL_7:
      unint64_t result = self;
      id v91 = *(id *)a1;
      id v92 = result;
      long long v106 = *(_OWORD *)(a1 + 16);
      uint64_t v90 = *(void *)(v100 + 16);
      unint64_t v89 = (void (**)(char *, uint64_t))(v3 + 8);
      unint64_t v88 = (void (**)(char *, uint64_t))(v6 + 8);
      uint64_t v87 = (void (**)(char *, uint64_t))(v9 + 8);
      if (v19 < 0) {
        uint64_t v28 = v19;
      }
      else {
        uint64_t v28 = v21;
      }
      uint64_t v84 = v28;
      uint64_t v86 = MEMORY[0x263F8EE50] + 8;
      long long v85 = xmmword_240BBAD40;
      uint64_t v29 = v83;
      uint64_t v30 = v82;
      uint64_t v31 = v99;
      while (v23)
      {
        uint64_t v40 = v23;
        sub_240AAD498(v102, v103, v104, v31);
        unint64_t v42 = v41;
        sub_240A3A3B8(0, (unint64_t *)&qword_26AFD77C0, v86, MEMORY[0x263F8E0F8]);
        uint64_t v43 = swift_allocObject();
        *(_OWORD *)(v43 + 16) = v85;
        *(void *)(v43 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A678]), sel_initWithSampleType_predicate_, v42, 0);
        *(void *)&long long v101 = v43;
        sub_240BB6F30();
        id v44 = objc_msgSend(v92, sel_sortDescriptorsForMostRecentSamples);
        sub_240A34DC4(0, (unint64_t *)&qword_268CA06D0);
        sub_240BB6F10();

        sub_240BB7120();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_240AADAF4();
        sub_240A209E4(&qword_268C9FCB8, MEMORY[0x263F44AA8]);
        os_log_type_t v45 = v97;
        uint64_t v46 = v93;
        sub_240BB6330();
        (*v89)(v29, v46);
        uint64_t v47 = swift_allocObject();
        uint64_t v48 = v98;
        *(void *)(v47 + 16) = v100;
        *(void *)(v47 + 24) = v48;
        long long v49 = *(_OWORD *)(a1 + 16);
        *(_OWORD *)(v47 + 32) = *(_OWORD *)a1;
        *(_OWORD *)(v47 + 48) = v49;
        *(void *)(v47 + 64) = *(void *)(a1 + 32);
        *(void *)(v47 + 72) = v42;
        sub_240BB4850();
        swift_retain();
        id v50 = v91;
        sub_240A334B8((uint64_t)&v106);
        type metadata accessor for RelatedSampleTypesGenerator.SampleTypeDetails(0);
        id v51 = v42;
        os_log_type_t v52 = v95;
        sub_240BB6000();
        swift_release();
        (*v88)(v45, v30);
        sub_240AADF64();
        uint64_t v53 = v96;
        sub_240BB62E0();
        (*v87)(v52, v53);

        sub_240BB7860();
        sub_240BB7890();
        sub_240BB78A0();
        unint64_t result = (void *)sub_240BB7870();
        if (v94)
        {
          if ((v104 & 1) == 0) {
            goto LABEL_22;
          }
          if (sub_240BB76C0()) {
            swift_isUniquelyReferenced_nonNull_native();
          }
          sub_240AADFD8();
          uint64_t v54 = (uint64_t (*)(long long *, void))sub_240BB7090();
          sub_240BB7730();
          unint64_t result = (void *)v54(&v101, 0);
          uint64_t v23 = v40 - 1;
          if (v40 == 1)
          {
LABEL_18:
            sub_240AAE0B4(v102, v103, v104);
            uint64_t v20 = v105;
            goto LABEL_19;
          }
        }
        else
        {
          uint64_t v32 = v102;
          uint64_t v33 = v103;
          char v34 = v104;
          int64_t v35 = sub_240AAD3B4(v102, v103, v104, v31);
          uint64_t v37 = v36;
          char v39 = v38;
          unint64_t result = (void *)sub_240AAE0B4(v32, v33, v34);
          uint64_t v102 = v35;
          uint64_t v103 = v37;
          uint64_t v30 = v82;
          uint64_t v29 = v83;
          char v104 = v39 & 1;
          uint64_t v23 = v40 - 1;
          if (v40 == 1) {
            goto LABEL_18;
          }
        }
      }
      __break(1u);
      goto LABEL_21;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    *(void *)&long long v101 = v20;
    sub_240AADC70();
    sub_240A32000(0, &qword_268C9FD20, (uint64_t (*)(uint64_t))sub_240AADC70, MEMORY[0x263F8D488]);
    sub_240AADCE0();
    sub_240AAE0C0();
    uint64_t v55 = v70;
    sub_240BB60D0();
    sub_240AADD14();
    unint64_t v56 = v76;
    uint64_t v57 = v72;
    sub_240BB63B0();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v55, v57);
    id v58 = *(id *)a1;
    long long v101 = *(_OWORD *)(a1 + 16);
    uint64_t v59 = swift_allocObject();
    *(void *)(v59 + 16) = v98;
    long long v60 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v59 + 24) = *(_OWORD *)a1;
    *(_OWORD *)(v59 + 40) = v60;
    uint64_t v61 = v100;
    *(void *)(v59 + 56) = *(void *)(a1 + 32);
    *(void *)(v59 + 64) = v61;
    sub_240BB4850();
    id v62 = v58;
    sub_240A334B8((uint64_t)&v101);
    sub_240A3A3B8(0, (unint64_t *)&qword_26AFD98D8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
    sub_240AADE2C();
    swift_retain();
    uint64_t v63 = v75;
    uint64_t v64 = v81;
    sub_240BB6390();
    swift_release();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v56, v64);
    uint64_t v102 = MEMORY[0x263F8EE78];
    sub_240AADEC8();
    uint64_t v65 = v73;
    uint64_t v66 = v80;
    sub_240BB6310();
    (*(void (**)(char *, uint64_t))(v78 + 8))(v63, v66);
    sub_240AAE1BC();
    uint64_t v67 = v77;
    uint64_t v68 = sub_240BB62E0();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v65, v67);
    return (void *)v68;
  }
  uint64_t v21 = v19 & 0xFFFFFFFFFFFFFF8;
  sub_240BB4850();
  uint64_t v22 = sub_240BB76F0();
  if (!v22) {
    goto LABEL_19;
  }
  uint64_t v23 = v22;
  uint64_t v105 = v20;
  sub_240BB7880();
  unint64_t result = (void *)sub_240BB76A0();
  uint64_t v102 = (uint64_t)result;
  uint64_t v103 = v25;
  char v104 = 1;
  if ((v23 & 0x8000000000000000) == 0)
  {
    uint64_t v19 = v99;
    goto LABEL_7;
  }
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_240AABE20@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v78 = a5;
  uint64_t v79 = a4;
  sub_240A32000(0, (unint64_t *)&unk_26AFD8F90, MEMORY[0x263F45630], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v80 = (uint64_t)&v65 - v10;
  uint64_t v11 = sub_240BB31D0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v65 - v16;
  unint64_t v18 = sub_240AAE258(*a1);
  uint64_t v81 = a3;
  sub_240AAC664(a3, v18, (uint64_t)v17);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v5)
  {
    uint64_t v73 = a2;
    uint64_t v74 = v15;
    uint64_t v76 = 0;
    sub_240A32000(0, &qword_268C9E870, MEMORY[0x263F45630], MEMORY[0x263F8E0F8]);
    uint64_t v20 = *(unsigned __int8 *)(v12 + 80);
    uint64_t v21 = (v20 + 32) & ~v20;
    uint64_t v69 = v21 + *(void *)(v12 + 72);
    uint64_t v70 = v22;
    uint64_t v68 = v20 | 7;
    uint64_t v23 = swift_allocObject();
    long long v77 = xmmword_240BB97E0;
    *(_OWORD *)(v23 + 16) = xmmword_240BB97E0;
    uint64_t v75 = v23;
    id v24 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 16);
    uint64_t v67 = v12 + 16;
    uint64_t v71 = v24;
    uint64_t v72 = v21;
    v24(v23 + v21, v17, v11);
    uint64_t v25 = sub_240A3466C((void *)(v79 + 24), *(void *)(v79 + 48));
    uint64_t v27 = *(void *)(v81 + 16);
    unint64_t v26 = *(void *)(v81 + 24);
    sub_240A3466C(v25, v25[3]);
    uint64_t v28 = v80;
    uint64_t v66 = v27;
    unint64_t v29 = v26;
    sub_240BB3200();
    uint64_t v30 = v11;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v28, 1, v11) == 1)
    {
      sub_240AAE598(v80);
      uint64_t v31 = *(void **)v81;
      uint64_t v85 = *(void *)(v81 + 8);
      id v32 = v31;
      sub_240A32CD8((uint64_t)&v85);
      unint64_t v33 = v29;
      sub_240BB4850();
      id v34 = v32;
      sub_240A32CD8((uint64_t)&v85);
      sub_240BB4850();
      int64_t v35 = sub_240BB5970();
      os_log_type_t v36 = sub_240BB7160();
      BOOL v37 = os_log_type_enabled(v35, v36);
      uint64_t v38 = v73;
      uint64_t v65 = v12;
      if (v37)
      {
        uint64_t v39 = swift_slowAlloc();
        uint64_t v80 = swift_slowAlloc();
        uint64_t v82 = v38;
        uint64_t v83 = v80;
        *(_DWORD *)uint64_t v39 = 136446466;
        uint64_t v81 = v30;
        sub_240AAE624();
        uint64_t v40 = sub_240BB6E10();
        uint64_t v82 = sub_240A38940(v40, v41, &v83);
        sub_240BB75F0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v39 + 12) = 2082;
        sub_240BB4850();
        uint64_t v82 = sub_240A38940(v66, v33, &v83);
        uint64_t v30 = v81;
        sub_240BB75F0();

        swift_bridgeObjectRelease();
        sub_240A32CAC((uint64_t)&v85);

        swift_bridgeObjectRelease();
        sub_240A32CAC((uint64_t)&v85);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240A1B000, v35, v36, "[%{public}s(%{public}s)]: No previous feed item found, adding new feed item.", (uint8_t *)v39, 0x16u);
        uint64_t v42 = v80;
        swift_arrayDestroy();
        MEMORY[0x24560B930](v42, -1, -1);
        MEMORY[0x24560B930](v39, -1, -1);
      }
      else
      {

        sub_240A32CAC((uint64_t)&v85);
        swift_bridgeObjectRelease();
        sub_240A32CAC((uint64_t)&v85);
        swift_bridgeObjectRelease();
      }
      unint64_t v56 = v78;
      uint64_t v57 = v75;
      sub_240A3A3B8(0, &qword_26AFD7658, MEMORY[0x263F45828], MEMORY[0x263F8E0F8]);
      uint64_t v58 = swift_allocObject();
      *(_OWORD *)(v58 + 16) = v77;
      *(void *)(v58 + 32) = v57;
      *(void *)(v58 + 40) = 0;
      *(void *)(v58 + 48) = 0;
      *(void *)(v58 + 56) = 0;
      *(unsigned char *)(v58 + 64) = 0;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v17, v30);
      uint64_t *v56 = v58;
    }
    else
    {
      uint64_t v43 = v74;
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v74, v80, v30);
      id v44 = *(void **)v81;
      v84[0] = *(void *)(v81 + 8);
      sub_240BB4850();
      id v45 = v44;
      sub_240A32CD8((uint64_t)v84);
      sub_240BB4850();
      id v46 = v45;
      sub_240A32CD8((uint64_t)v84);
      uint64_t v47 = sub_240BB5970();
      os_log_type_t v48 = sub_240BB7160();
      int v49 = v48;
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v50 = swift_slowAlloc();
        LODWORD(v79) = v49;
        uint64_t v51 = v50;
        uint64_t v52 = swift_slowAlloc();
        uint64_t v80 = v52;
        *(_DWORD *)uint64_t v51 = 136446466;
        uint64_t v81 = v30;
        uint64_t v82 = v73;
        uint64_t v83 = v52;
        sub_240AAE624();
        uint64_t v53 = sub_240BB6E10();
        uint64_t v82 = sub_240A38940(v53, v54, &v83);
        sub_240BB75F0();
        uint64_t v43 = v74;
        swift_bridgeObjectRelease();
        *(_WORD *)(v51 + 12) = 2082;
        sub_240BB4850();
        uint64_t v82 = sub_240A38940(v66, v29, &v83);
        uint64_t v30 = v81;
        sub_240BB75F0();

        swift_bridgeObjectRelease();
        sub_240A32CAC((uint64_t)v84);

        swift_bridgeObjectRelease();
        sub_240A32CAC((uint64_t)v84);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240A1B000, v47, (os_log_type_t)v79, "[%{public}s(%{public}s)]: Previous feed item found, returning changes", (uint8_t *)v51, 0x16u);
        uint64_t v55 = v80;
        swift_arrayDestroy();
        MEMORY[0x24560B930](v55, -1, -1);
        MEMORY[0x24560B930](v51, -1, -1);
      }
      else
      {

        sub_240A32CAC((uint64_t)v84);
        swift_bridgeObjectRelease();
        sub_240A32CAC((uint64_t)v84);
        swift_bridgeObjectRelease();
      }
      uint64_t v59 = v76;
      uint64_t v60 = swift_allocObject();
      *(_OWORD *)(v60 + 16) = v77;
      v71(v60 + v72, v43, v30);
      uint64_t v61 = sub_240BB6F40();
      if (v59)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v62 = *(void (**)(char *, uint64_t))(v12 + 8);
        v62(v43, v30);
        return ((uint64_t (*)(char *, uint64_t))v62)(v17, v30);
      }
      else
      {
        uint64_t v63 = v61;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v64 = *(void (**)(char *, uint64_t))(v12 + 8);
        v64(v43, v30);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v64)(v17, v30);
        uint64_t *v78 = v63;
      }
    }
  }
  return result;
}

uint64_t sub_240AAC664@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_240BB3050();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB2770();
  swift_allocObject();
  sub_240BB2760();
  unint64_t v30 = a2;
  sub_240AAE660();
  uint64_t v11 = sub_240BB2750();
  unint64_t v13 = v12;
  uint64_t result = swift_release();
  if (!v3)
  {
    id v27[2] = *(void *)(a1 + 16);
    uint64_t v28 = (void **)a1;
    uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
    sub_240BB4850();
    uint64_t v16 = NSStringFromClass(ObjCClassFromMetadata);
    uint64_t v29 = a3;
    uint64_t v17 = v16;
    v27[1] = sub_240BB6DE0();

    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F45530], v7);
    sub_240A4C480(v11, v13);
    sub_240BB30E0();
    unint64_t v18 = v13;
    uint64_t v19 = v11;
    sub_240BB3180();
    sub_240A3A3B8(0, (unint64_t *)&qword_26AFD77C0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_240BBAD40;
    uint64_t v21 = *v28;
    *(void *)(inited + 32) = *v28;
    unint64_t v30 = inited;
    sub_240BB6F30();
    unint64_t v22 = v30;
    if (v30 >> 62)
    {
      id v25 = v21;
      sub_240BB4850();
      uint64_t v26 = sub_240BB7900();
      swift_bridgeObjectRelease();
      if (!v26) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v23 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v24 = v21;
      if (!v23)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        sub_240BB3190();
        sub_240BB3160();
        sub_240BB3150();
        return sub_240A4C4D8(v19, v18);
      }
    }
    sub_240A3A2D0(v22);
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_240AAC93C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >> 62)
  {
    sub_240BB4850();
    uint64_t result = sub_240BB7900();
    uint64_t v4 = result;
    if (!result) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = sub_240BB4850();
    if (!v4)
    {
LABEL_7:
      uint64_t result = swift_bridgeObjectRelease();
      *a2 = v4;
      return result;
    }
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
    id v6 = (id)MEMORY[0x24560AAA0](0, v3);
    goto LABEL_6;
  }
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v6 = *(id *)(v3 + 32);
LABEL_6:
    uint64_t v4 = (uint64_t)v6;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

id sub_240AAC9EC@<X0>(void **a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X4>, void *a5@<X8>)
{
  sub_240A32000(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  unint64_t v12 = (char *)&v40 - v11;
  unint64_t v13 = *a1;
  uint64_t v14 = *(void **)a3;
  uint64_t v47 = *(void *)(a3 + 8);
  unint64_t v15 = *(void *)(a3 + 24);
  uint64_t v43 = *(void *)(a3 + 16);
  id v16 = v14;
  sub_240A32CD8((uint64_t)&v47);
  id v17 = v13;
  id v18 = a4;
  id v19 = v16;
  sub_240BB4850();
  sub_240A32CD8((uint64_t)&v47);
  sub_240BB4850();
  id v20 = v17;
  id v44 = v18;
  uint64_t v21 = sub_240BB5970();
  os_log_type_t v22 = sub_240BB7170();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    uint64_t v45 = a2;
    uint64_t v46 = v40;
    *(_DWORD *)uint64_t v23 = 136446978;
    unint64_t v41 = a5;
    sub_240AAE624();
    uint64_t v24 = sub_240BB6E10();
    uint64_t v42 = v13;
    uint64_t v45 = sub_240A38940(v24, v25, &v46);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2082;
    sub_240BB4850();
    uint64_t v45 = sub_240A38940(v43, v15, &v46);
    sub_240BB75F0();

    swift_bridgeObjectRelease();
    sub_240A32CAC((uint64_t)&v47);

    swift_bridgeObjectRelease();
    sub_240A32CAC((uint64_t)&v47);
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 22) = 2080;
    if (v42) {
      uint64_t v26 = 0x646E756F66;
    }
    else {
      uint64_t v26 = 0x6E756F6620746F6ELL;
    }
    if (v42) {
      unint64_t v27 = 0xE500000000000000;
    }
    else {
      unint64_t v27 = 0xE900000000000064;
    }
    uint64_t v45 = sub_240A38940(v26, v27, &v46);
    sub_240BB75F0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 32) = 2080;
    id v28 = objc_msgSend(v44, sel_identifier);
    uint64_t v29 = sub_240BB6DE0();
    unint64_t v31 = v30;

    a5 = v41;
    uint64_t v45 = sub_240A38940(v29, v31, &v46);
    sub_240BB75F0();

    id v32 = v42;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v21, v22, "[%{public}s(%{public}s)]: Recent sample %s for %s", (uint8_t *)v23, 0x2Au);
    uint64_t v33 = v40;
    swift_arrayDestroy();
    MEMORY[0x24560B930](v33, -1, -1);
    MEMORY[0x24560B930](v23, -1, -1);

    if (v32) {
      goto LABEL_9;
    }
  }
  else
  {

    sub_240A32CAC((uint64_t)&v47);
    swift_bridgeObjectRelease();
    sub_240A32CAC((uint64_t)&v47);

    swift_bridgeObjectRelease();
    if (v13)
    {
LABEL_9:
      id v34 = objc_msgSend(v20, sel_endDate);
      sub_240BB2CB0();

      uint64_t v35 = sub_240BB2CF0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v12, 0, 1, v35);
      goto LABEL_12;
    }
  }
  uint64_t v36 = sub_240BB2CF0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v12, 1, 1, v36);
LABEL_12:
  *a5 = v44;
  uint64_t v37 = type metadata accessor for RelatedSampleTypesGenerator.SampleTypeDetails(0);
  sub_240A4971C((uint64_t)v12, (uint64_t)a5 + *(int *)(v37 + 20));
  id v38 = v44;

  return v38;
}

uint64_t sub_240AACEAC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Heart27RelatedSampleTypesGenerator_domain;
  uint64_t v2 = sub_240BB3240();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC5Heart27RelatedSampleTypesGenerator_configuration);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_240AACF88()
{
  return type metadata accessor for RelatedSampleTypesGenerator(0);
}

uint64_t type metadata accessor for RelatedSampleTypesGenerator(uint64_t a1)
{
  return sub_240A3E6AC(a1, (uint64_t *)&unk_268C9FC98);
}

uint64_t sub_240AACFB0()
{
  uint64_t result = sub_240BB3240();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_240AAD058()
{
  return type metadata accessor for RelatedSampleTypesGenerator.Environment(0);
}

uint64_t sub_240AAD060()
{
  uint64_t result = sub_240BB5990();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t destroy for RelatedSampleTypesGenerator.Configuration(id *a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RelatedSampleTypesGenerator.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  id v5 = v3;
  sub_240BB4850();
  sub_240BB4850();
  return a1;
}

uint64_t assignWithCopy for RelatedSampleTypesGenerator.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_240BB4850();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_240BB4850();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for RelatedSampleTypesGenerator.Configuration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for RelatedSampleTypesGenerator.Configuration(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RelatedSampleTypesGenerator.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RelatedSampleTypesGenerator.Configuration()
{
  return &type metadata for RelatedSampleTypesGenerator.Configuration;
}

uint64_t sub_240AAD328()
{
  return swift_retain();
}

uint64_t sub_240AAD33C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC5Heart27RelatedSampleTypesGenerator_domain;
  uint64_t v4 = sub_240BB3240();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

int64_t sub_240AAD3B4(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_240AAD498(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  unint64_t v6 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      if (a4 < 0) {
        uint64_t v7 = a4;
      }
      else {
        uint64_t v7 = a4 & 0xFFFFFFFFFFFFFF8;
      }
      MEMORY[0x24560A9C0](a1, a2, v7);
      sub_240A34DC4(0, (unint64_t *)&qword_26AFD9930);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      sub_240BB50A0();
      return;
    }
LABEL_27:
    __break(1u);
    return;
  }
  if (a3) {
    goto LABEL_13;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_20;
  }
  __break(1u);
LABEL_13:
  if (sub_240BB76D0() != *(_DWORD *)(a4 + 36))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_240BB76E0();
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9930);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  unint64_t v4 = v17;
  sub_240BB50A0();
  uint64_t v8 = sub_240BB74F0();
  uint64_t v9 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v6 = v8 & ~v9;
  if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_26:

    __break(1u);
    goto LABEL_27;
  }
  id v10 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
  char v11 = sub_240BB7500();

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v9;
    do
    {
      unint64_t v6 = (v6 + 1) & v12;
      if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_26;
      }
      id v13 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
      char v14 = sub_240BB7500();
    }
    while ((v14 & 1) == 0);
  }

LABEL_20:
  unint64_t v15 = *(void **)(*(void *)(a4 + 48) + 8 * v6);

  id v16 = v15;
}

uint64_t sub_240AAD710(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t *sub_240AAD798(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v25 = *v3;
  sub_240A3A5A4(0, (unint64_t *)&qword_26AFD98A8, (uint64_t (*)(uint64_t))sub_240A3B6CC, sub_240A3B758, MEMORY[0x263EFDE30]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v24 - v9;
  uint64_t v11 = sub_240BB3240();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  char v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v15 = (char *)v3 + OBJC_IVAR____TtC5Heart27RelatedSampleTypesGenerator_configuration;
  long long v16 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)unint64_t v15 = *(_OWORD *)a1;
  *((_OWORD *)v15 + 1) = v16;
  *((void *)v15 + 4) = *(void *)(a1 + 32);
  id v17 = *(void **)a1;
  uint64_t v27 = *(void *)(a1 + 8);
  long long v26 = v16;
  id v18 = v17;
  sub_240A32CD8((uint64_t)&v27);
  sub_240A334B8((uint64_t)&v26);
  sub_240A284A8((uint64_t)v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))((uint64_t)v3 + OBJC_IVAR____TtC5Heart27RelatedSampleTypesGenerator_domain, v14, v11);
  uint64_t v19 = swift_allocObject();
  long long v20 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v19 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v19 + 32) = v20;
  *(void *)(v19 + 48) = *(void *)(a1 + 32);
  *(void *)(v19 + 56) = a2;
  *(void *)(v19 + 64) = v25;
  id v21 = v18;
  sub_240A32CD8((uint64_t)&v27);
  sub_240A334B8((uint64_t)&v26);
  sub_240A3B6CC();
  sub_240A3B758();
  swift_retain();
  sub_240BB6240();
  sub_240A3A738();
  uint64_t v22 = sub_240BB62E0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC5Heart27RelatedSampleTypesGenerator_publisher) = v22;
  return v3;
}

uint64_t sub_240AADA74()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

void *sub_240AADAC4@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_240AAB208(v1 + 16, *(void *)(v1 + 56));
  *a1 = result;
  return result;
}

void sub_240AADAF4()
{
  if (!qword_268C9FCB0)
  {
    sub_240A34DC4(255, &qword_268CA10F0);
    unint64_t v0 = sub_240BB75E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9FCB0);
    }
  }
}

void sub_240AADB5C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    sub_240BB7110();
    a3(255);
    sub_240A209E4(&qword_268C9FCB8, MEMORY[0x263F44AA8]);
    unint64_t v5 = sub_240BB6010();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t type metadata accessor for RelatedSampleTypesGenerator.SampleTypeDetails(uint64_t a1)
{
  return sub_240A3E6AC(a1, (uint64_t *)&unk_268C9FD48);
}

void sub_240AADC28(uint64_t a1)
{
}

void sub_240AADC70()
{
  if (!qword_268C9FCD0)
  {
    type metadata accessor for RelatedSampleTypesGenerator.SampleTypeDetails(255);
    sub_240A49AC0();
    unint64_t v0 = sub_240BB6100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9FCD0);
    }
  }
}

uint64_t sub_240AADCE0()
{
  return sub_240A209E4(&qword_268C9FCD8, (void (*)(uint64_t))sub_240AADC70);
}

uint64_t sub_240AADD14()
{
  return sub_240A209E4(&qword_268C9FCE8, sub_240AADC28);
}

void sub_240AADD48()
{
  if (!qword_268C9FCF0)
  {
    sub_240A3A5A4(255, &qword_268C9FCE0, (uint64_t (*)(uint64_t))sub_240AADC28, sub_240AADD14, MEMORY[0x263EFDC10]);
    sub_240A3A3B8(255, (unint64_t *)&qword_26AFD98D8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
    sub_240AADE2C();
    unint64_t v0 = sub_240BB6090();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9FCF0);
    }
  }
}

unint64_t sub_240AADE2C()
{
  unint64_t result = qword_268C9FCF8;
  if (!qword_268C9FCF8)
  {
    sub_240A3A5A4(255, &qword_268C9FCE0, (uint64_t (*)(uint64_t))sub_240AADC28, sub_240AADD14, MEMORY[0x263EFDC10]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9FCF8);
  }
  return result;
}

uint64_t sub_240AADEC8()
{
  return sub_240A209E4(&qword_268C9FD08, (void (*)(uint64_t))sub_240AADD48);
}

uint64_t sub_240AADEFC()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 80, 7);
}

id sub_240AADF54@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  return sub_240AAC9EC(a1, *(void *)(v2 + 24), v2 + 32, *(void **)(v2 + 72), a2);
}

unint64_t sub_240AADF64()
{
  unint64_t result = qword_268C9FD10;
  if (!qword_268C9FD10)
  {
    sub_240AADB5C(255, &qword_268C9FCC0, (void (*)(uint64_t))type metadata accessor for RelatedSampleTypesGenerator.SampleTypeDetails);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9FD10);
  }
  return result;
}

void sub_240AADFD8()
{
  if (!qword_268C9FD18)
  {
    sub_240A34DC4(255, (unint64_t *)&qword_26AFD9930);
    sub_240AAE04C();
    unint64_t v0 = sub_240BB70A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9FD18);
    }
  }
}

unint64_t sub_240AAE04C()
{
  unint64_t result = qword_26AFD9938;
  if (!qword_26AFD9938)
  {
    sub_240A34DC4(255, (unint64_t *)&qword_26AFD9930);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD9938);
  }
  return result;
}

uint64_t sub_240AAE0B4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_240AAE0C0()
{
  unint64_t result = qword_268C9FD28;
  if (!qword_268C9FD28)
  {
    sub_240A32000(255, &qword_268C9FD20, (uint64_t (*)(uint64_t))sub_240AADC70, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9FD28);
  }
  return result;
}

uint64_t sub_240AAE148()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_240AAE198@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_240AABE20(a1, *(void *)(v2 + 16), v2 + 24, *(void *)(v2 + 64), a2);
}

unint64_t sub_240AAE1BC()
{
  unint64_t result = qword_268C9FD30;
  if (!qword_268C9FD30)
  {
    sub_240A3A5A4(255, &qword_268C9FD00, (uint64_t (*)(uint64_t))sub_240AADD48, sub_240AADEC8, MEMORY[0x263EFDAA0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9FD30);
  }
  return result;
}

uint64_t sub_240AAE258(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
  uint64_t v36 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  unint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v38 = (uint64_t)&v34 - v6;
  uint64_t v37 = type metadata accessor for RelatedSampleTypesGenerator.SampleTypeDetails(0);
  uint64_t v7 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v9 = (id *)((char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v10 = (void *)sub_240AB82A0(MEMORY[0x263F8EE78]);
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11) {
    return (uint64_t)v10;
  }
  uint64_t v12 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v13 = *(void *)(v7 + 72);
  uint64_t v34 = a1;
  uint64_t v35 = v13;
  sub_240BB4850();
  while (1)
  {
    sub_240AAE6B4(v12, (uint64_t)v9);
    id v14 = objc_msgSend(*v9, sel_identifier);
    uint64_t v15 = sub_240BB6DE0();
    uint64_t v17 = v16;

    uint64_t v18 = v38;
    sub_240A496B8((uint64_t)v9 + *(int *)(v37 + 20), v38);
    uint64_t v19 = (uint64_t)v5;
    sub_240A925F4(v18, (uint64_t)v5);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v39 = v10;
    unint64_t v22 = sub_240AB9E08(v15, v17);
    uint64_t v23 = v10[2];
    BOOL v24 = (v21 & 1) == 0;
    uint64_t v25 = v23 + v24;
    if (__OFADD__(v23, v24)) {
      break;
    }
    char v26 = v21;
    if (v10[3] >= v25)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_240B088B0();
      }
    }
    else
    {
      sub_240B08000(v25, isUniquelyReferenced_nonNull_native);
      unint64_t v27 = sub_240AB9E08(v15, v17);
      if ((v26 & 1) != (v28 & 1)) {
        goto LABEL_18;
      }
      unint64_t v22 = v27;
    }
    unint64_t v5 = (char *)v19;
    unint64_t v10 = v39;
    if (v26)
    {
      sub_240A926BC(v19, v39[7] + *(void *)(v36 + 72) * v22);
    }
    else
    {
      v39[(v22 >> 6) + 8] |= 1 << v22;
      uint64_t v29 = (uint64_t *)(v10[6] + 16 * v22);
      *uint64_t v29 = v15;
      v29[1] = v17;
      sub_240A925F4(v19, v10[7] + *(void *)(v36 + 72) * v22);
      uint64_t v30 = v10[2];
      BOOL v31 = __OFADD__(v30, 1);
      uint64_t v32 = v30 + 1;
      if (v31) {
        goto LABEL_17;
      }
      void v10[2] = v32;
      sub_240BB4850();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_240AAE718((uint64_t)v9);
    v12 += v35;
    if (!--v11)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v10;
    }
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  uint64_t result = sub_240BB7B30();
  __break(1u);
  return result;
}

uint64_t sub_240AAE598(uint64_t a1)
{
  sub_240A32000(0, (unint64_t *)&unk_26AFD8F90, MEMORY[0x263F45630], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_240AAE624()
{
  unint64_t result = qword_268C9FD38;
  if (!qword_268C9FD38)
  {
    type metadata accessor for RelatedSampleTypesGenerator(255);
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C9FD38);
  }
  return result;
}

unint64_t sub_240AAE660()
{
  unint64_t result = qword_268C9FD40;
  if (!qword_268C9FD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9FD40);
  }
  return result;
}

uint64_t sub_240AAE6B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RelatedSampleTypesGenerator.SampleTypeDetails(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240AAE718(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RelatedSampleTypesGenerator.SampleTypeDetails(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void **sub_240AAE774(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    unint64_t v5 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    unint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_240BB2CF0();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    uint64_t v12 = v4;
    if (v11(v8, 1, v9))
    {
      sub_240A32000(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
      memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t sub_240AAE920(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_240BB2CF0();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void **sub_240AAE9F0(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_240BB2CF0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  id v11 = v4;
  if (v10(v7, 1, v8))
  {
    sub_240A32000(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v6, v7, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void **sub_240AAEB3C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  id v11 = (char *)a2 + v9;
  uint64_t v12 = sub_240BB2CF0();
  uint64_t v13 = *(void *)(v12 - 8);
  id v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_240A32000(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

void *sub_240AAECF4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_240BB2CF0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_240A32000(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void **sub_240AAEE34(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_240BB2CF0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_240A32000(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_240AAEFE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240AAEFFC);
}

uint64_t sub_240AAEFFC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_240A32000(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_240AAF0DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240AAF0F0);
}

void *sub_240AAF0F0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    sub_240A32000(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_240AAF1C8()
{
  sub_240A32000(319, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *assignWithCopy for FeedItemContextPreviousFeedItemFetcherBox(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t assignWithTake for FeedItemContextPreviousFeedItemFetcherBox(uint64_t a1, uint64_t a2)
{
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedItemContextPreviousFeedItemFetcherBox(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedItemContextPreviousFeedItemFetcherBox(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedItemContextPreviousFeedItemFetcherBox()
{
  return &type metadata for FeedItemContextPreviousFeedItemFetcherBox;
}

uint64_t type metadata accessor for DataTypeDetailHeartbeatSeriesDisclosureItemsDataSource()
{
  uint64_t result = qword_268C9FD58;
  if (!qword_268C9FD58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240AAF3E4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_240AAF424()
{
  return 0x6165627472616548;
}

uint64_t sub_240AAF448()
{
  if (sub_240BB4C60() > 1u) {
    return 0;
  }
  unint64_t v0 = (void *)sub_240BB4C30();
  type metadata accessor for DataTypeDetailHeartbeatSeriesDisclosureItemsDataSource();
  swift_allocObject();
  uint64_t v1 = sub_240AAF638();

  return v1;
}

void sub_240AAF4C8()
{
}

uint64_t sub_240AAF4F8()
{
  sub_240BB4630();

  return swift_deallocClassInstance();
}

uint64_t sub_240AAF528()
{
  return type metadata accessor for DataTypeDetailHeartbeatSeriesDisclosureItemsDataSource();
}

uint64_t sub_240AAF530()
{
  uint64_t v0 = sub_240BB4720();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB4700();
  sub_240BB48C0();
  uint64_t v4 = sub_240BB4710();
  sub_240BB50A0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

ValueMetadata *type metadata accessor for HeartRateVariabilityDataTypeDetailConfigurationProvider.HeartbeatSeriesComponent()
{
  return &type metadata for HeartRateVariabilityDataTypeDetailConfigurationProvider.HeartbeatSeriesComponent;
}

uint64_t sub_240AAF638()
{
  uint64_t v33 = sub_240BB2D40();
  uint64_t v32 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  BOOL v31 = (char *)&v30 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v30 = sub_240BB2980();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_240BB2980();

  long long v40 = xmmword_240BBAE40;
  sub_240BB3A60();
  uint64_t v5 = self;
  id v6 = objc_msgSend(v5, sel_heartbeatSeriesType);
  sub_240BB3A40();

  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_heartbeatSeriesType);
  sub_240BB3A50();

  swift_bridgeObjectRelease();
  uint64_t v39 = (void *)MEMORY[0x263F8EE78];
  sub_240A477B0((uint64_t)&v41, (uint64_t)v38);
  sub_240AAFE04((uint64_t)v38, (uint64_t)&v34);
  if (v35)
  {
    sub_240A37388(&v34, (uint64_t)v37);
    sub_240A37388(v37, (uint64_t)&v34);
    uint64_t v8 = (void *)MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v8 = sub_240A42B84(0, v8[2] + 1, 1, v8);
      uint64_t v39 = v8;
    }
    unint64_t v10 = v8[2];
    unint64_t v9 = v8[3];
    if (v10 >= v9 >> 1) {
      uint64_t v39 = sub_240A42B84((void *)(v9 > 1), v10 + 1, 1, v8);
    }
    uint64_t v11 = v35;
    uint64_t v12 = v36;
    uint64_t v13 = sub_240A346B0((uint64_t)&v34, v35);
    MEMORY[0x270FA5388](v13);
    uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v16 + 16))(v15);
    sub_240ACAC98(v10, (uint64_t)v15, (uint64_t *)&v39, v11, v12);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v34);
  }
  else
  {
    sub_240A478C0((uint64_t)&v34);
  }
  sub_240A477B0((uint64_t)&v42, (uint64_t)v38);
  sub_240AAFE04((uint64_t)v38, (uint64_t)&v34);
  if (v35)
  {
    sub_240A37388(&v34, (uint64_t)v37);
    sub_240A37388(v37, (uint64_t)&v34);
    uint64_t v17 = v39;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v17 = sub_240A42B84(0, v17[2] + 1, 1, v17);
      uint64_t v39 = v17;
    }
    unint64_t v19 = v17[2];
    unint64_t v18 = v17[3];
    if (v19 >= v18 >> 1) {
      uint64_t v39 = sub_240A42B84((void *)(v18 > 1), v19 + 1, 1, v17);
    }
    uint64_t v20 = v35;
    uint64_t v21 = v36;
    uint64_t v22 = sub_240A346B0((uint64_t)&v34, v35);
    MEMORY[0x270FA5388](v22);
    BOOL v24 = (char *)&v30 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v25 + 16))(v24);
    sub_240ACAC98(v19, (uint64_t)v24, (uint64_t *)&v39, v20, v21);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v34);
  }
  else
  {
    sub_240A478C0((uint64_t)&v34);
  }
  sub_240AAFE98(0, (unint64_t *)&qword_268C9ECD8, (uint64_t (*)(uint64_t))sub_240A47830, MEMORY[0x263F8D8F0]);
  swift_arrayDestroy();
  sub_240AAFE98(0, &qword_268CA0B10, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
  sub_240BB44D0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_240BB97E0;
  char v26 = v31;
  sub_240BB2D30();
  sub_240BB2D00();
  unint64_t v27 = *(void (**)(char *, uint64_t))(v32 + 8);
  uint64_t v28 = v33;
  v27(v26, v33);
  sub_240BB44C0();
  v38[0] = 0;
  v38[1] = 0xE000000000000000;
  sub_240BB77C0();
  swift_bridgeObjectRelease();
  strcpy((char *)v38, "MutableArray<");
  HIWORD(v38[1]) = -4864;
  sub_240BB2D30();
  sub_240BB2D00();
  v27(v26, v28);
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  sub_240BB6E70();
  return sub_240BB45E0();
}

uint64_t sub_240AAFE04(uint64_t a1, uint64_t a2)
{
  sub_240AAFE98(0, (unint64_t *)&qword_268C9ECD8, (uint64_t (*)(uint64_t))sub_240A47830, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_240AAFE98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_240AAFEFC()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F087A8]), sel_init);
  uint64_t v1 = (void *)sub_240BB6DA0();
  objc_msgSend(v0, sel_setDateTemplate_, v1);

  qword_268CA28B8 = (uint64_t)v0;
}

uint64_t sub_240AAFF6C()
{
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  sub_240BB2980();
  uint64_t v1 = v0 + *(int *)(type metadata accessor for AFibBurdenPDFChartHeaderContentProvider() + 20);
  id v2 = objc_msgSend(*(id *)(v1 + *(int *)(type metadata accessor for AFibBurdenPDFChartViewModel() + 28)), sel_localization, 0xE000000000000000);
  id v3 = objc_msgSend(v2, sel_displayName);

  uint64_t v4 = sub_240BB6DE0();
  uint64_t v6 = v5;

  uint64_t v7 = sub_240AB0100();
  uint64_t v9 = v8;
  sub_240A57720();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_240BBAE40;
  uint64_t v11 = MEMORY[0x263F8D310];
  *(void *)(v10 + 56) = MEMORY[0x263F8D310];
  unint64_t v12 = sub_240A4C66C();
  *(void *)(v10 + 32) = v4;
  *(void *)(v10 + 40) = v6;
  *(void *)(v10 + 96) = v11;
  *(void *)(v10 + 104) = v12;
  *(void *)(v10 + 64) = v12;
  *(void *)(v10 + 72) = v7;
  *(void *)(v10 + 80) = v9;
  uint64_t v13 = sub_240BB6E00();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_240AB0100()
{
  uint64_t v1 = type metadata accessor for AFibBurdenPDFChartHeaderContentProvider();
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = (unsigned __int8 *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = &v0[*(int *)(v2 + 28)];
  uint64_t v6 = type metadata accessor for AFibBurdenPDFChartViewModel();
  uint64_t v7 = v5[*(int *)(v6 + 32)];
  if (v7 != 2)
  {
    uint64_t v9 = v6;
    uint64_t v10 = *(void **)&v5[*(int *)(v6 + 28)];
    id v11 = objc_msgSend(v10, sel_presentation);
    unint64_t v12 = (void *)sub_240BB6FF0();
    id v36 = objc_msgSend(v11, sel_adjustedValueForDaemonValue_, v12);

    id v13 = objc_msgSend(v10, sel_presentation);
    uint64_t v14 = (void *)sub_240BB6FF0();
    id v15 = objc_msgSend(v13, sel_adjustedValueForDaemonValue_, v14);

    sub_240AB053C((uint64_t)v0, (uint64_t)v4);
    if (v7)
    {
      int v16 = *v4;
      sub_240AB05A0((uint64_t)v4);
      if (!v16)
      {
        id v34 = (id)HKAFibBurdenClampedLowerBoundLocalizedString();
        uint64_t v24 = sub_240BB6DE0();

        return v24;
      }
    }
    else
    {
      sub_240AB05A0((uint64_t)v4);
    }
    uint64_t v17 = (void *)sub_240B6B618(*v0);
    unint64_t v18 = *(void **)&v5[*(int *)(v9 + 24)];
    id v19 = v36;
    if (objc_msgSend(v36, sel_isEqualToNumber_, v15))
    {
      id v20 = v18;
      objc_msgSend(v19, sel_doubleValue);
      id v22 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v20, v21);

      id v23 = objc_msgSend(v22, sel_localizedStringForType_, v17);
      uint64_t v24 = sub_240BB6DE0();
    }
    else
    {
      uint64_t v25 = self;
      id v26 = v18;
      objc_msgSend(v19, sel_doubleValue);
      double v28 = v27;
      uint64_t v29 = self;
      id v30 = objc_msgSend(v29, sel_quantityWithUnit_doubleValue_, v26, v28);
      objc_msgSend(v15, sel_doubleValue);
      id v31 = objc_msgSend(v29, sel_quantityWithUnit_doubleValue_, v26);

      id v32 = objc_msgSend(v25, sel_inclusiveRangeWithMinimum_maximum_, v30, v31);
      id v33 = objc_msgSend(v32, sel_localizedStringForType_, v17);
      uint64_t v24 = sub_240BB6DE0();
    }
    return v24;
  }
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  return sub_240BB2980();
}

uint64_t type metadata accessor for AFibBurdenPDFChartHeaderContentProvider()
{
  uint64_t result = qword_268C9FD68;
  if (!qword_268C9FD68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240AB053C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AFibBurdenPDFChartHeaderContentProvider();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240AB05A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AFibBurdenPDFChartHeaderContentProvider();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_240AB05FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v19 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_240BB27F0();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
    uint64_t v9 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
    *(void *)&v6[v9[5]] = *(void *)&v7[v9[5]];
    uint64_t v10 = v9[6];
    id v11 = *(void **)&v7[v10];
    *(void *)&v6[v10] = v11;
    uint64_t v12 = v9[7];
    id v13 = *(void **)&v7[v12];
    *(void *)&v6[v12] = v13;
    uint64_t v14 = v9[8];
    id v15 = &v6[v14];
    int v16 = &v7[v14];
    *((void *)v15 + 2) = *((void *)v16 + 2);
    *(_OWORD *)id v15 = *(_OWORD *)v16;
    sub_240BB4850();
    id v17 = v11;
    id v18 = v13;
  }
  return v3;
}

void sub_240AB0728(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_240BB27F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = type metadata accessor for AFibBurdenPDFChartViewModel();
  swift_bridgeObjectRelease();

  uint64_t v5 = *(void **)(v2 + *(int *)(v4 + 28));
}

unsigned char *sub_240AB07C0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_240BB27F0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  uint64_t v8 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
  *(void *)&v5[v8[5]] = *(void *)&v6[v8[5]];
  uint64_t v9 = v8[6];
  uint64_t v10 = *(void **)&v6[v9];
  *(void *)&v5[v9] = v10;
  uint64_t v11 = v8[7];
  uint64_t v12 = *(void **)&v6[v11];
  *(void *)&v5[v11] = v12;
  uint64_t v13 = v8[8];
  uint64_t v14 = &v5[v13];
  id v15 = &v6[v13];
  *((void *)v14 + 2) = *((void *)v15 + 2);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  sub_240BB4850();
  id v16 = v10;
  id v17 = v12;
  return a1;
}

unsigned char *sub_240AB089C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_240BB27F0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  uint64_t v8 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
  *(void *)&v5[v8[5]] = *(void *)&v6[v8[5]];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  uint64_t v9 = v8[6];
  uint64_t v10 = *(void **)&v6[v9];
  uint64_t v11 = *(void **)&v5[v9];
  *(void *)&v5[v9] = v10;
  id v12 = v10;

  uint64_t v13 = v8[7];
  uint64_t v14 = *(void **)&v6[v13];
  id v15 = *(void **)&v5[v13];
  *(void *)&v5[v13] = v14;
  id v16 = v14;

  uint64_t v17 = v8[8];
  id v18 = &v5[v17];
  uint64_t v19 = &v6[v17];
  long long v20 = *(_OWORD *)v19;
  *((void *)v18 + 2) = *((void *)v19 + 2);
  *(_OWORD *)id v18 = v20;
  return a1;
}

unsigned char *sub_240AB0994(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_240BB27F0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  uint64_t v8 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
  *(void *)&v5[v8[5]] = *(void *)&v6[v8[5]];
  *(void *)&v5[v8[6]] = *(void *)&v6[v8[6]];
  *(void *)&v5[v8[7]] = *(void *)&v6[v8[7]];
  uint64_t v9 = v8[8];
  uint64_t v10 = &v5[v9];
  uint64_t v11 = &v6[v9];
  *((void *)v10 + 2) = *((void *)v11 + 2);
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  return a1;
}

unsigned char *sub_240AB0A58(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_240BB27F0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  uint64_t v8 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
  *(void *)&v5[v8[5]] = *(void *)&v6[v8[5]];
  swift_bridgeObjectRelease();
  uint64_t v9 = v8[6];
  uint64_t v10 = *(void **)&v5[v9];
  *(void *)&v5[v9] = *(void *)&v6[v9];

  uint64_t v11 = v8[7];
  id v12 = *(void **)&v5[v11];
  *(void *)&v5[v11] = *(void *)&v6[v11];

  uint64_t v13 = v8[8];
  uint64_t v14 = &v5[v13];
  id v15 = &v6[v13];
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *((void *)v14 + 2) = *((void *)v15 + 2);
  return a1;
}

uint64_t sub_240AB0B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240AB0B4C);
}

uint64_t sub_240AB0B4C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 250)
  {
    unsigned int v4 = *a1;
    if (v4 >= 6) {
      return v4 - 5;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for AFibBurdenPDFChartViewModel();
    uint64_t v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = &a1[*(int *)(a3 + 20)];
    return v9(v11, a2, v10);
  }
}

uint64_t sub_240AB0BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240AB0C08);
}

unsigned char *sub_240AB0C08(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 250)
  {
    *uint64_t result = a2 + 5;
  }
  else
  {
    uint64_t v7 = type metadata accessor for AFibBurdenPDFChartViewModel();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_240AB0CAC()
{
  uint64_t result = type metadata accessor for AFibBurdenPDFChartViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_240AB0D44(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_240AB0DBC()
{
  qword_268CA28C0 = 0x402E000000000000;
}

void sub_240AB0DCC()
{
  qword_268CA28C8 = 0x4076800000000000;
}

uint64_t sub_240AB0DE0()
{
  uint64_t v27 = sub_240BB2D90();
  uint64_t v1 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v3 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_240BB2EE0();
  MEMORY[0x270FA5388](v4 - 8);
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_240BB2980();
  uint64_t v25 = v6;
  uint64_t v26 = v5;
  uint64_t v24 = sub_240BB4260();
  sub_240A1E37C(v0 + 24, (uint64_t)v29);
  uint64_t v7 = sub_240BB2980();
  v23[0] = v8;
  v23[1] = v7;
  sub_240AB1F70(0, &qword_268C9FD78, MEMORY[0x263F43F70], MEMORY[0x263F8E0F8]);
  uint64_t v9 = sub_240BB4340();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_240BBAE40;
  unint64_t v14 = v13 + v12;
  id v15 = *(void (**)(unint64_t, void, uint64_t))(v10 + 104);
  v15(v14, *MEMORY[0x263F43F60], v9);
  v15(v14 + v11, *MEMORY[0x263F43F68], v9);
  sub_240A73370(v13);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v16 = v27;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F07740], v27);
  sub_240BB2DA0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v16);
  uint64_t v17 = v24;
  uint64_t v18 = sub_240BB4250();
  void v29[3] = v17;
  void v29[4] = MEMORY[0x263F43ED0];
  v29[0] = v18;
  sub_240AB11EC(v28);
  id v19 = objc_allocWithZone((Class)sub_240BB4660());
  uint64_t v20 = sub_240BB4650();
  sub_240AB2204(&qword_268C9FD80, v21, (void (*)(uint64_t))type metadata accessor for AFibBurdenPDFProvider);
  swift_unknownObjectRetain();
  sub_240BB4640();
  return v20;
}

uint64_t sub_240AB11EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  double v28 = a1;
  uint64_t v3 = sub_240BB4690();
  uint64_t v26 = *(void *)(v3 - 8);
  uint64_t v27 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v25 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_240BB3FF0();
  uint64_t v5 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  id v23 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240BB4270();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (uint64_t *)((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_240BB4CD0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A1E37C(v1 + 24, (uint64_t)v29);
  sub_240BB4CC0();
  uint64_t v15 = sub_240BB44A0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_240AB1EC8();
  uint64_t v16 = sub_240BB44A0();
  *uint64_t v10 = sub_240BB4280();
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F43ED8], v7);
  uint64_t v17 = (void *)swift_allocObject();
  void v17[2] = v2;
  void v17[3] = v15;
  void v17[4] = v16;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v23, *MEMORY[0x263F43D68], v24);
  (*(void (**)(char *, void, uint64_t))(v26 + 104))(v25, *MEMORY[0x263F440C0], v27);
  uint64_t v18 = sub_240BB4010();
  uint64_t v19 = MEMORY[0x263F43D78];
  uint64_t v20 = v28;
  v28[3] = v18;
  void v20[4] = v19;
  sub_240A23B08(v20);
  swift_retain();
  return sub_240BB4000();
}

uint64_t sub_240AB157C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240BB5990();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v34 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AB1F70(0, &qword_268C9FD90, (uint64_t (*)(uint64_t))sub_240AB1FD4, MEMORY[0x263F43550]);
  uint64_t v10 = v9;
  v36[3] = v9;
  unint64_t v11 = sub_240AB20C0();
  void v36[4] = v11;
  v35[4] = v11;
  v36[0] = a2;
  void v35[3] = v10;
  v35[0] = a3;
  swift_retain();
  swift_retain();
  sub_240B0B7EC((uint64_t)v36, (uint64_t)v35, (uint64_t *)&v37);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v35);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v36);
  uint64_t v33 = sub_240BB4840();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v37);
  uint64_t v12 = *(void **)(a1 + 16);
  *((void *)&v38 + 1) = &type metadata for AFibBurdenPDFChartProvider;
  unint64_t v39 = sub_240AB2148();
  uint64_t v13 = (void *)swift_allocObject();
  *(void *)&long long v37 = v13;
  v13[7] = v10;
  v13[8] = v11;
  v13[4] = a2;
  v13[12] = v10;
  v13[13] = v11;
  v13[9] = a3;
  id v14 = objc_allocWithZone((Class)sub_240BB3870());
  swift_retain();
  swift_retain();
  id v15 = v12;
  v13[14] = objc_msgSend(v14, sel_init);
  void v13[2] = v15;
  uint64_t v16 = self;
  id v17 = v15;
  id v18 = objc_msgSend(v16, sel_sharedInstanceForHealthStore_, v17);
  id v19 = objc_msgSend(v18, sel_createHKUnitPreferenceController);

  v13[3] = v19;
  uint64_t v20 = sub_240BB4840();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v37);
  sub_240AB2058(0, &qword_268C9FDC0, (unint64_t *)&qword_268C9FDC8, MEMORY[0x263F44030], MEMORY[0x263F8E0F8]);
  uint64_t v21 = swift_allocObject();
  long long v32 = xmmword_240BB97E0;
  *(_OWORD *)(v21 + 16) = xmmword_240BB97E0;
  *(void *)(v21 + 56) = v10;
  *(void *)(v21 + 64) = v11;
  *(void *)(v21 + 32) = a2;
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = v32;
  *(void *)(v22 + 56) = v10;
  *(void *)(v22 + 64) = v11;
  *(void *)(v22 + 32) = a3;
  uint64_t v23 = qword_26AFD7BF0;
  swift_retain();
  swift_retain();
  id v24 = v17;
  if (v23 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_240A395FC(v6, (uint64_t)qword_26AFDEB80);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v34, v25, v6);
  uint64_t v26 = sub_240BB5830();
  long long v37 = 0u;
  long long v38 = 0u;
  unint64_t v39 = 0;
  swift_allocObject();
  uint64_t v27 = sub_240BB5820();
  *((void *)&v38 + 1) = v26;
  unint64_t v39 = sub_240AB2204(&qword_268C9FDD0, 255, MEMORY[0x263F471D8]);
  *(void *)&long long v37 = v27;
  uint64_t v28 = sub_240BB4840();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v37);
  sub_240AB224C();
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_240BBD020;
  *(void *)(v29 + 32) = v33;
  *(void *)(v29 + 40) = v20;
  *(void *)(v29 + 48) = v28;
  uint64_t v30 = MEMORY[0x245607AE0]();
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t sub_240AB19D0()
{
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 24);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AFibBurdenPDFProvider()
{
  return self;
}

uint64_t sub_240AB1A3C()
{
  return sub_240AB0DE0();
}

uint64_t sub_240AB1A60(char a1)
{
  uint64_t v3 = *v1;
  type metadata accessor for AFibBurdenDataTypeInteractionAnalyticsEvent();
  uint64_t v4 = swift_allocObject();
  *(unsigned char *)(v4 + 16) = a1;
  uint64_t v5 = (void *)v1[8];
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = v3;
  v9[4] = sub_240AB22E0;
  v9[5] = v6;
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 1107296256;
  void v9[2] = sub_240AB0D44;
  void v9[3] = &unk_26F505FB8;
  uint64_t v7 = _Block_copy(v9);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_submitEvent_completion_, v4, v7);
  _Block_release(v7);
  return swift_release_n();
}

void sub_240AB1B98(int a1, id a2, char a3, uint64_t a4)
{
  if (a2)
  {
    id v7 = a2;
    if (qword_26AFD7BF0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_240BB5990();
    sub_240A395FC(v8, (uint64_t)qword_26AFDEB80);
    id v9 = a2;
    id v10 = a2;
    oslog = sub_240BB5970();
    os_log_type_t v11 = sub_240BB7180();
    if (os_log_type_enabled(oslog, v11))
    {
      uint64_t v12 = 0xD000000000000010;
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v22 = v14;
      uint64_t v23 = a4;
      *(_DWORD *)uint64_t v13 = 136446723;
      swift_getMetatypeMetadata();
      uint64_t v15 = sub_240BB6E10();
      uint64_t v23 = sub_240A38940(v15, v16, &v22);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2081;
      if (a3)
      {
        if (a3 == 1) {
          uint64_t v12 = 0x7765695620464450;
        }
        else {
          uint64_t v12 = 0xD00000000000001ALL;
        }
        if (a3 == 1) {
          unint64_t v17 = 0xEA00000000006465;
        }
        else {
          unint64_t v17 = 0x8000000240BCCBB0;
        }
      }
      else
      {
        unint64_t v17 = 0x8000000240BCCBD0;
      }
      uint64_t v23 = sub_240A38940(v12, v17, &v22);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 22) = 2082;
      uint64_t v23 = (uint64_t)a2;
      id v18 = a2;
      sub_240A39BC8(0, (unint64_t *)&qword_26AFD99E0);
      uint64_t v19 = sub_240BB6E10();
      uint64_t v23 = sub_240A38940(v19, v20, &v22);
      sub_240BB75F0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_240A1B000, oslog, v11, "[%{public}s] Error when sending analytics event for interaction %{private}s): %{public}s", (uint8_t *)v13, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v14, -1, -1);
      MEMORY[0x24560B930](v13, -1, -1);
    }
    else
    {
    }
  }
}

uint64_t sub_240AB1EB4()
{
  return sub_240AB1A60(1);
}

uint64_t sub_240AB1EBC()
{
  return sub_240AB1A60(2);
}

unint64_t sub_240AB1EC8()
{
  unint64_t result = qword_268C9FD88;
  if (!qword_268C9FD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9FD88);
  }
  return result;
}

uint64_t sub_240AB1F1C()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_240AB1F64()
{
  return sub_240AB157C(v0[2], v0[3], v0[4]);
}

void sub_240AB1F70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_240AB1FD4()
{
  if (!qword_268C9FD98)
  {
    sub_240AB2058(255, &qword_268C9FDA0, (unint64_t *)&qword_268C9FDA8, MEMORY[0x263F43C48], MEMORY[0x263F8D488]);
    unint64_t v0 = sub_240BB75E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9FD98);
    }
  }
}

void sub_240AB2058(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_240A39BC8(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_240AB20C0()
{
  unint64_t result = qword_268C9FDB0;
  if (!qword_268C9FDB0)
  {
    sub_240AB1F70(255, &qword_268C9FD90, (uint64_t (*)(uint64_t))sub_240AB1FD4, MEMORY[0x263F43550]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9FDB0);
  }
  return result;
}

unint64_t sub_240AB2148()
{
  unint64_t result = qword_268C9FDB8;
  if (!qword_268C9FDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9FDB8);
  }
  return result;
}

uint64_t sub_240AB219C()
{
  if (*(void *)(v0 + 56)) {
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 32);
  }
  if (*(void *)(v0 + 96)) {
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 72);
  }

  return MEMORY[0x270FA0238](v0, 120, 7);
}

uint64_t sub_240AB2204(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240AB224C()
{
  if (!qword_268C9FDD8)
  {
    sub_240AB2058(255, &qword_268C9FDE0, &qword_268C9FDE8, MEMORY[0x263F43E70], MEMORY[0x263F8D488]);
    unint64_t v0 = sub_240BB7AB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9FDD8);
    }
  }
}

uint64_t sub_240AB22D0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_240AB22E0(int a1, void *a2)
{
  sub_240AB1B98(a1, a2, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24));
}

ValueMetadata *_s39AFibBurdenSharableSummaryChartComponentVMa()
{
  return &_s39AFibBurdenSharableSummaryChartComponentVN;
}

uint64_t sub_240AB22FC()
{
  uint64_t v1 = sub_240BB4A50();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = *v0;
  sub_240BB4A40();
  sub_240BB4A30();
  swift_getObjectType();
  uint64_t v6 = sub_240AB2414();
  sub_240BB50A0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6;
}

uint64_t sub_240AB2414()
{
  sub_240AB24FC();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_240BB97E0;
  type metadata accessor for AFibBurdenChartSection();
  *(void *)(v0 + 56) = sub_240BB4770();
  *(void *)(v0 + 64) = sub_240AB2554();
  uint64_t v1 = sub_240A23B08((uint64_t *)(v0 + 32));
  sub_240AE3214((uint64_t)v1);
  uint64_t v2 = sub_240BB4180();
  swift_bridgeObjectRelease();
  sub_240BB4810();
  swift_getWitnessTable();
  return v2;
}

void sub_240AB24FC()
{
  if (!qword_268C9E840)
  {
    sub_240A47830();
    unint64_t v0 = sub_240BB7AB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9E840);
    }
  }
}

unint64_t sub_240AB2554()
{
  unint64_t result = qword_268C9FDF0;
  if (!qword_268C9FDF0)
  {
    sub_240BB4770();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9FDF0);
  }
  return result;
}

void BloodPressureDataTypeDetailConfigurationProvider.configuration(for:)()
{
  sub_240BB4AD0();
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_240BB5990();
  sub_240A395FC(v0, (uint64_t)qword_26AFDEC70);
  oslog = sub_240BB5970();
  os_log_type_t v1 = sub_240BB7160();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = swift_slowAlloc();
    uint64_t v3 = swift_slowAlloc();
    uint64_t v5 = v3;
    *(_DWORD *)uint64_t v2 = 136446466;
    sub_240A38940(0xD000000000000030, 0x8000000240BBE5E0, &v5);
    sub_240BB75F0();
    *(_WORD *)(v2 + 12) = 2082;
    sub_240A38940(0xD000000000000013, 0x8000000240BCCBF0, &v5);
    sub_240BB75F0();
    _os_log_impl(&dword_240A1B000, oslog, v1, "[%{public}s.%{public}s]: Creating custom BP data type room", (uint8_t *)v2, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v3, -1, -1);
    MEMORY[0x24560B930](v2, -1, -1);
  }
  else
  {
  }
}

void sub_240AB279C()
{
}

uint64_t sub_240AB27C4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_240A38EF4();
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_240BB7970();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for DataTypeDetailConfiguration.ComponentIdentifier.BloodPressure()
{
  return &type metadata for DataTypeDetailConfiguration.ComponentIdentifier.BloodPressure;
}

ValueMetadata *type metadata accessor for BloodPressureDataTypeDetailConfigurationProvider()
{
  return &type metadata for BloodPressureDataTypeDetailConfigurationProvider;
}

void sub_240AB2930()
{
  qword_268CA28D0 = 0x402E000000000000;
}

void sub_240AB2940()
{
  qword_268CA28D8 = 0x4030000000000000;
}

void sub_240AB2950()
{
  qword_268CA28E0 = 0x4028000000000000;
}

void sub_240AB2960()
{
  qword_268CA28E8 = 0x4044000000000000;
}

id sub_240AB2970()
{
  uint64_t v1 = OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView____lazy_storage___imageView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView____lazy_storage___imageView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView____lazy_storage___imageView);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_init);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v6 = sub_240A907B0();
    objc_msgSend(v5, sel_setImage_, v6);

    objc_msgSend(v5, sel_setContentMode_, 4);
    int64_t v7 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_240AB2A3C()
{
  uint64_t v1 = OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView____lazy_storage___titleDetailView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView____lazy_storage___titleDetailView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView____lazy_storage___titleDetailView);
  }
  else
  {
    id v4 = sub_240AB2AA0();
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_240AB2AA0()
{
  sub_240A90BB8();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = sub_240A90CA0();
  uint64_t v6 = v5;
  int64_t v7 = (objc_class *)type metadata accessor for TitleOptionalDetailsView();
  id v8 = (char *)objc_allocWithZone(v7);
  int64_t v9 = (uint64_t *)&v8[OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView_details];
  *int64_t v9 = 0;
  v9[1] = 0;
  *(void *)&v8[OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView____lazy_storage___titleLabel] = 0;
  *(void *)&v8[OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView____lazy_storage___detailLabel] = 0;
  *(void *)&v8[OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView____lazy_storage___noDetailsConstraints] = 0;
  *(void *)&v8[OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView____lazy_storage___detailsConstraints] = 0;
  uint64_t v10 = &v8[OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView_title];
  *(void *)uint64_t v10 = v1;
  *((void *)v10 + 1) = v3;
  *int64_t v9 = v4;
  v9[1] = v6;
  swift_bridgeObjectRelease();
  v13.receiver = v8;
  v13.super_class = v7;
  id v11 = objc_msgSendSuper2(&v13, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_240AE6DE0();
  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v11;
}

id sub_240AB2BB4()
{
  uint64_t v1 = OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView____lazy_storage___infoView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView____lazy_storage___infoView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView____lazy_storage___infoView);
  }
  else
  {
    id v4 = sub_240AB2C14();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_240AB2C14()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v1 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x263F83570]);
  id v2 = objc_msgSend(self, sel_configurationWithFont_, v1);

  id v3 = v2;
  id v4 = (void *)sub_240BB6DA0();
  id v5 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v4, v3);

  objc_msgSend(v0, sel_setImage_, v5);
  id v6 = objc_msgSend(self, sel_secondaryLabelColor);
  objc_msgSend(v0, sel_setTintColor_, v6);

  type metadata accessor for UILayoutPriority(0);
  sub_240AB3F3C();
  sub_240BB59A0();
  LODWORD(v7) = v12;
  objc_msgSend(v0, sel_setContentCompressionResistancePriority_forAxis_, 0, v7);
  sub_240BB59A0();
  LODWORD(v8) = v12;
  objc_msgSend(v0, sel_setContentCompressionResistancePriority_forAxis_, 1, v8);
  sub_240BB59A0();
  LODWORD(v9) = v12;
  objc_msgSend(v0, sel_setContentHuggingPriority_forAxis_, 0, v9);
  sub_240BB59A0();
  LODWORD(v10) = v12;
  objc_msgSend(v0, sel_setContentHuggingPriority_forAxis_, 1, v10);

  return v0;
}

char *sub_240AB2E78(char a1, uint64_t a2, void *a3)
{
  uint64_t v7 = sub_240BB2EE0();
  MEMORY[0x270FA5388](v7 - 8);
  double v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v3[OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v3[OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView____lazy_storage___imageView] = 0;
  *(void *)&v3[OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView____lazy_storage___titleDetailView] = 0;
  *(void *)&v3[OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView____lazy_storage___infoView] = 0;
  v3[OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView_lifeFactor] = a1;
  double v10 = v3;
  id v11 = a3;
  sub_240BB2EA0();
  type metadata accessor for AFibBurdenLifeFactorViewModel();
  swift_allocObject();
  *(void *)&v10[OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView_viewModel] = sub_240A903C0(a1, a2, (uint64_t)v11, (uint64_t)v9, (uint64_t)sub_240A903BC, 0);

  int v12 = (objc_class *)type metadata accessor for AFibBurdenLifeFactorView();
  v22.receiver = v10;
  v22.super_class = v12;
  id v13 = objc_msgSendSuper2(&v22, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_240A34E00();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_240BBB440;
  uint64_t v15 = (char *)v13;
  *(void *)(v14 + 32) = sub_240AB2970();
  *(void *)(v14 + 40) = sub_240AB2A3C();
  *(void *)(v14 + 48) = sub_240AB2BB4();
  v21[1] = v14;
  sub_240BB6F30();
  sub_240BB7480();

  swift_bridgeObjectRelease();
  uint64_t v16 = sub_240A55368(*(unsigned __int8 *)(*(void *)&v15[OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView_viewModel]
                                         + 16) | 0x100u);
  sub_240AB3194(v16, v17);
  swift_bridgeObjectRelease();
  sub_240AB3318();
  objc_msgSend(v15, sel_setUserInteractionEnabled_, 1);
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82CB0]), sel_initWithTarget_action_, v15, sel_tapped);
  uint64_t v19 = v15;
  objc_msgSend(v19, sel_addGestureRecognizer_, v18);

  return v19;
}

void sub_240AB3194(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v3 = v2;
    id v6 = (void *)sub_240BB6DA0();
    objc_msgSend(v3, sel_setAccessibilityIdentifier_, v6);

    id v7 = sub_240AB2970();
    sub_240BB4850();
    sub_240BB6E70();
    uint64_t v8 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setAccessibilityIdentifier_, v8);

    id v9 = sub_240AB2BB4();
    sub_240BB4850();
    sub_240BB6E70();
    double v10 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setAccessibilityIdentifier_, v10);

    id v11 = sub_240AB2A3C();
    sub_240AE71D4(a1, a2);
  }
}

void sub_240AB3318()
{
  id v1 = v0;
  id v59 = self;
  sub_240A34E00();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_240BBE670;
  id v3 = objc_msgSend(v0, sel_heightAnchor);
  id v4 = sub_240AB2A3C();
  id v5 = objc_msgSend(v4, sel_heightAnchor);

  if (qword_268C9E698 != -1) {
    swift_once();
  }
  id v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_constant_, v5, *(double *)&qword_268CA28D0 + *(double *)&qword_268CA28D0);

  type metadata accessor for UILayoutPriority(0);
  sub_240AB3F3C();
  sub_240BB59A0();
  LODWORD(v7) = v60;
  objc_msgSend(v6, sel_setPriority_, v7);
  *(void *)(v2 + 32) = v6;
  id v8 = sub_240AB2970();
  id v9 = objc_msgSend(v8, sel_centerXAnchor);

  id v10 = objc_msgSend(v1, sel_leadingAnchor);
  if (qword_268C9E6B0 != -1) {
    swift_once();
  }
  id v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v10, *(double *)&qword_268CA28E8);

  *(void *)(v2 + 40) = v11;
  id v12 = sub_240AB2970();
  id v13 = objc_msgSend(v12, sel_centerYAnchor);

  id v14 = objc_msgSend(v1, sel_centerYAnchor);
  id v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v14);

  *(void *)(v2 + 48) = v15;
  id v16 = sub_240AB2A3C();
  id v17 = objc_msgSend(v16, (SEL)&selRef_createDataFetcherForSampleType_predicate_limit_sortDescriptors_resultsHandler_ + 2);

  id v18 = sub_240AB2970();
  id v19 = objc_msgSend(v18, sel_centerXAnchor);

  id v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v19, *(double *)&qword_268CA28E8);
  *(void *)(v2 + 56) = v20;
  id v21 = sub_240AB2A3C();
  id v22 = objc_msgSend(v21, sel_centerYAnchor);

  id v23 = objc_msgSend(v1, sel_centerYAnchor);
  id v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v23);

  *(void *)(v2 + 64) = v24;
  id v25 = sub_240AB2A3C();
  id v26 = objc_msgSend(v25, sel_topAnchor);

  id v27 = objc_msgSend(v1, sel_topAnchor);
  id v28 = objc_msgSend(v26, sel_constraintGreaterThanOrEqualToAnchor_constant_, v27, *(double *)&qword_268CA28D0);

  sub_240BB59A0();
  LODWORD(v29) = v60;
  objc_msgSend(v28, sel_setPriority_, v29);
  *(void *)(v2 + 72) = v28;
  id v30 = sub_240AB2A3C();
  id v31 = objc_msgSend(v30, sel_bottomAnchor);

  id v32 = objc_msgSend(v1, sel_bottomAnchor);
  id v33 = objc_msgSend(v31, sel_constraintLessThanOrEqualToAnchor_constant_, v32, -*(double *)&qword_268CA28D0);

  sub_240BB59A0();
  LODWORD(v34) = v60;
  objc_msgSend(v33, sel_setPriority_, v34);
  *(void *)(v2 + 80) = v33;
  id v35 = sub_240AB2A3C();
  id v36 = objc_msgSend(v35, sel_trailingAnchor);

  id v37 = sub_240AB2BB4();
  id v38 = objc_msgSend(v37, sel_leadingAnchor);

  if (qword_268C9E6A8 != -1) {
    swift_once();
  }
  id v39 = objc_msgSend(v36, sel_constraintLessThanOrEqualToAnchor_constant_, v38, -*(double *)&qword_268CA28E0);

  *(void *)(v2 + 88) = v39;
  id v40 = sub_240AB2BB4();
  id v41 = objc_msgSend(v40, sel_trailingAnchor);

  id v42 = objc_msgSend(v1, sel_trailingAnchor);
  if (qword_268C9E6A0 != -1) {
    swift_once();
  }
  id v43 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v42, -*(double *)&qword_268CA28D8);

  *(void *)(v2 + 96) = v43;
  id v44 = sub_240AB2BB4();
  id v45 = objc_msgSend(v44, sel_centerYAnchor);

  id v46 = objc_msgSend(v1, sel_centerYAnchor);
  id v47 = objc_msgSend(v45, sel_constraintEqualToAnchor_, v46);

  *(void *)(v2 + 104) = v47;
  id v48 = sub_240AB2BB4();
  id v49 = objc_msgSend(v48, sel_topAnchor);

  id v50 = objc_msgSend(v1, sel_topAnchor);
  id v51 = objc_msgSend(v49, sel_constraintGreaterThanOrEqualToAnchor_constant_, v50, *(double *)&qword_268CA28D0);

  sub_240BB59A0();
  LODWORD(v52) = v60;
  objc_msgSend(v51, sel_setPriority_, v52);
  *(void *)(v2 + 112) = v51;
  id v53 = sub_240AB2BB4();
  id v54 = objc_msgSend(v53, sel_bottomAnchor);

  id v55 = objc_msgSend(v1, sel_bottomAnchor);
  id v56 = objc_msgSend(v54, sel_constraintLessThanOrEqualToAnchor_constant_, v55, -*(double *)&qword_268CA28D0);

  sub_240BB59A0();
  LODWORD(v57) = v60;
  objc_msgSend(v56, sel_setPriority_, v57);
  *(void *)(v2 + 120) = v56;
  sub_240BB6F30();
  sub_240A5D484();
  uint64_t v58 = (void *)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v59, sel_activateConstraints_, v58);
}

uint64_t sub_240AB3B34()
{
  uint64_t ObjectType = swift_getObjectType();
  if (qword_26AFD7BF0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_240BB5990();
  sub_240A395FC(v2, (uint64_t)qword_26AFDEB80);
  id v3 = v0;
  id v4 = sub_240BB5970();
  os_log_type_t v5 = sub_240BB71A0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v17 = v7;
    uint64_t v18 = ObjectType;
    *(_DWORD *)uint64_t v6 = 136446467;
    swift_getMetatypeMetadata();
    uint64_t v8 = sub_240BB6E10();
    uint64_t v18 = sub_240A38940(v8, v9, &v17);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2081;
    id v10 = (void *)sub_240A942A0(v3[OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView_lifeFactor]);
    id v11 = objc_msgSend(v10, sel_identifier, v17);

    uint64_t v12 = sub_240BB6DE0();
    unint64_t v14 = v13;

    uint64_t v18 = sub_240A38940(v12, v14, &v17);
    sub_240BB75F0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v4, v5, "[%{public}s] Info button tapped for life factor %{private}s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v7, -1, -1);
    MEMORY[0x24560B930](v6, -1, -1);
  }
  else
  {
  }
  uint64_t result = MEMORY[0x24560BA20](&v3[OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView_delegate]);
  if (result)
  {
    char v16 = v3[OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView_lifeFactor];
    if (MEMORY[0x24560BA20](result + OBJC_IVAR____TtC5Heart25AFibBurdenLifeFactorsView_delegate))
    {
      sub_240B8A0F4(v16);
      sub_240BB50A0();
    }
    return sub_240BB50A0();
  }
  return result;
}

id sub_240AB3E44()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenLifeFactorView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AFibBurdenLifeFactorView()
{
  return self;
}

void sub_240AB3F18(uint64_t a1, uint64_t a2)
{
}

unint64_t sub_240AB3F3C()
{
  unint64_t result = qword_268C9FE28;
  if (!qword_268C9FE28)
  {
    type metadata accessor for UILayoutPriority(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9FE28);
  }
  return result;
}

uint64_t sub_240AB3F94()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Heart40AdvertisableFeatureHeartSettingsProvider_activeDeviceSource;
  uint64_t v2 = sub_240BB39A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_240AB403C()
{
  return type metadata accessor for AdvertisableFeatureHeartSettingsProvider();
}

uint64_t type metadata accessor for AdvertisableFeatureHeartSettingsProvider()
{
  uint64_t result = qword_268C9FE30;
  if (!qword_268C9FE30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240AB4090()
{
  uint64_t result = sub_240BB39A0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t destroy for AFibBurdenLifeFactorDescriptionItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 48))
  {
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for AFibBurdenLifeFactorDescriptionItem(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v8 = a2 + 6;
  uint64_t v7 = a2[6];
  sub_240BB4850();
  sub_240BB4850();
  sub_240BB4850();
  if (v7)
  {
    uint64_t v9 = a2[7];
    a1[6] = v7;
    a1[7] = v9;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 3) = *v8;
  }
  return a1;
}

void *assignWithCopy for AFibBurdenLifeFactorDescriptionItem(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_240BB4850();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[6];
  if (!a1[6])
  {
    if (v4)
    {
      uint64_t v6 = a2[7];
      a1[6] = v4;
      a1[7] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[7];
  a1[6] = v4;
  a1[7] = v5;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for AFibBurdenLifeFactorDescriptionItem(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[6];
  if (!a1[6])
  {
    if (v7)
    {
      uint64_t v9 = a2[7];
      a1[6] = v7;
      a1[7] = v9;
      return a1;
    }
LABEL_7:
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v8 = a2[7];
  a1[6] = v7;
  a1[7] = v8;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AFibBurdenLifeFactorDescriptionItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AFibBurdenLifeFactorDescriptionItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenLifeFactorDescriptionItem()
{
  return &type metadata for AFibBurdenLifeFactorDescriptionItem;
}

unint64_t sub_240AB4458()
{
  return 0xD000000000000023;
}

unint64_t sub_240AB4474()
{
  return 0xD000000000000023;
}

id sub_240AB4490()
{
  return sub_240AB4CB8(&OBJC_IVAR____TtC5Heart20BulletedIconListView____lazy_storage___stackView, 0, 1, 15.0);
}

void sub_240AB4520()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC5Heart20BulletedIconListView_bulletedItems];
  uint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    unint64_t v45 = MEMORY[0x263F8EE78];
    sub_240BB4850();
    sub_240BB7880();
    id v39 = (objc_class *)type metadata accessor for BulletedIconView();
    uint64_t v40 = v1;
    uint64_t v4 = 0;
    do
    {
      uint64_t v43 = v2;
      uint64_t v41 = v4;
      uint64_t v6 = v1 + v4;
      uint64_t v7 = *(void *)(v6 + 32);
      uint64_t v8 = *(void *)(v6 + 40);
      uint64_t v9 = *(void **)(v6 + 48);
      id v10 = *(void **)(v6 + 56);
      char v11 = *(unsigned char *)(v6 + 80);
      uint64_t v12 = *(void *)(v6 + 88);
      char v13 = *(unsigned char *)(v6 + 96);
      uint64_t v14 = *(void *)(v6 + 104);
      uint64_t v15 = *(void *)(v6 + 112);
      long long v42 = *(_OWORD *)(v6 + 64);
      char v16 = (char *)objc_allocWithZone(v39);
      *(void *)&v16[OBJC_IVAR____TtC5Heart16BulletedIconView____lazy_storage___iconView] = 0;
      *(void *)&v16[OBJC_IVAR____TtC5Heart16BulletedIconView____lazy_storage___textLabel] = 0;
      *(void *)&v16[OBJC_IVAR____TtC5Heart16BulletedIconView____lazy_storage___stackView] = 0;
      uint64_t v17 = &v16[OBJC_IVAR____TtC5Heart16BulletedIconView_item];
      *(void *)uint64_t v17 = v7;
      *((void *)v17 + 1) = v8;
      *((void *)v17 + 2) = v9;
      *((void *)v17 + 3) = v10;
      *((_OWORD *)v17 + 2) = v42;
      v17[48] = v11;
      *((void *)v17 + 7) = v12;
      v17[64] = v13;
      *((void *)v17 + 9) = v14;
      *((void *)v17 + 10) = v15;
      v44.receiver = v16;
      v44.super_class = v39;
      swift_bridgeObjectRetain_n();
      id v18 = v9;
      id v19 = v10;
      id v20 = (id)v42;
      swift_bridgeObjectRetain_n();
      id v21 = v18;
      id v22 = v19;
      id v23 = v20;
      id v24 = (char *)objc_msgSendSuper2(&v44, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
      id v25 = sub_240AB4CA0();
      id v26 = sub_240AB499C();
      objc_msgSend(v25, sel_addArrangedSubview_, v26);

      id v27 = sub_240AB4CA0();
      id v28 = sub_240AB4B40();
      objc_msgSend(v27, sel_addArrangedSubview_, v28);

      id v29 = sub_240AB4CA0();
      objc_msgSend(v24, sel_addSubview_, v29);

      id v30 = sub_240AB4CA0();
      objc_msgSend(v30, sel_hk_alignConstraintsWithView_, v24);

      if (*(void *)&v24[OBJC_IVAR____TtC5Heart16BulletedIconView_item + 80]) {
        uint64_t v5 = (void *)sub_240BB6DA0();
      }
      else {
        uint64_t v5 = 0;
      }
      objc_msgSend(v24, sel_setAccessibilityIdentifier_, v5);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_240BB7860();
      sub_240BB7890();
      sub_240BB78A0();
      sub_240BB7870();
      uint64_t v1 = v40;
      uint64_t v4 = v41 + 88;
      uint64_t v2 = v43 - 1;
    }
    while (v43 != 1);
    unint64_t v3 = v45;
    swift_bridgeObjectRelease();
    uint64_t v0 = v38;
  }
  if (!(v3 >> 62))
  {
    uint64_t v31 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    sub_240BB4850();
    if (v31) {
      goto LABEL_10;
    }
LABEL_17:
    swift_bridgeObjectRelease_n();
    id v36 = sub_240AB4490();
    objc_msgSend(v0, sel_addSubview_, v36);

    id v37 = sub_240AB4490();
    objc_msgSend(v37, sel_hk_alignConstraintsWithView_, v0);

    return;
  }
  sub_240BB4850();
  uint64_t v31 = sub_240BB7900();
  if (!v31) {
    goto LABEL_17;
  }
LABEL_10:
  if (v31 >= 1)
  {
    uint64_t v32 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v33 = (id)MEMORY[0x24560AAA0](v32, v3);
      }
      else {
        id v33 = *(id *)(v3 + 8 * v32 + 32);
      }
      double v34 = v33;
      ++v32;
      id v35 = sub_240AB4490();
      objc_msgSend(v35, sel_addArrangedSubview_, v34);
    }
    while (v31 != v32);
    goto LABEL_17;
  }
  __break(1u);
}

id sub_240AB4914()
{
  return sub_240AB5510(type metadata accessor for BulletedIconListView);
}

uint64_t type metadata accessor for BulletedIconListView()
{
  return self;
}

id sub_240AB499C()
{
  return sub_240AB4F64(&OBJC_IVAR____TtC5Heart16BulletedIconView____lazy_storage___iconView, (uint64_t (*)(uint64_t))sub_240AB49BC);
}

id sub_240AB49BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC5Heart16BulletedIconView_item);
  uint64_t v2 = *(void *)(a1 + OBJC_IVAR____TtC5Heart16BulletedIconView_item + 8);
  unint64_t v3 = *(void **)(a1 + OBJC_IVAR____TtC5Heart16BulletedIconView_item + 16);
  uint64_t v4 = *(void **)(a1 + OBJC_IVAR____TtC5Heart16BulletedIconView_item + 24);
  uint64_t v5 = *(void **)(a1 + OBJC_IVAR____TtC5Heart16BulletedIconView_item + 32);
  uint64_t v6 = *(void *)(a1 + OBJC_IVAR____TtC5Heart16BulletedIconView_item + 40);
  char v7 = *(unsigned char *)(a1 + OBJC_IVAR____TtC5Heart16BulletedIconView_item + 48);
  uint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtC5Heart16BulletedIconView_item + 56);
  char v23 = *(unsigned char *)(a1 + OBJC_IVAR____TtC5Heart16BulletedIconView_item + 64);
  uint64_t v9 = *(void *)(a1 + OBJC_IVAR____TtC5Heart16BulletedIconView_item + 80);
  uint64_t v22 = *(void *)(a1 + OBJC_IVAR____TtC5Heart16BulletedIconView_item + 72);
  id v10 = (objc_class *)type metadata accessor for BulletCircleImageView();
  char v11 = (char *)objc_allocWithZone(v10);
  *(void *)&v11[OBJC_IVAR____TtC5Heart21BulletCircleImageView____lazy_storage___iconView] = 0;
  uint64_t v12 = &v11[OBJC_IVAR____TtC5Heart21BulletCircleImageView_item];
  *(void *)uint64_t v12 = v1;
  *((void *)v12 + 1) = v2;
  *((void *)v12 + 2) = v3;
  *((void *)v12 + 3) = v4;
  *((void *)v12 + 4) = v5;
  *((void *)v12 + 5) = v6;
  v12[48] = v7;
  *((void *)v12 + 7) = v8;
  v12[64] = v23;
  *((void *)v12 + 9) = v22;
  *((void *)v12 + 10) = v9;
  v24.receiver = v11;
  v24.super_class = v10;
  swift_bridgeObjectRetain_n();
  id v13 = v3;
  id v14 = v4;
  id v15 = v5;
  swift_bridgeObjectRetain_n();
  id v16 = v13;
  id v17 = v14;
  id v18 = v15;
  id v19 = objc_msgSendSuper2(&v24, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_240AB5318();
  id v20 = v19;
  objc_msgSend(v20, sel_setOpaque_, 0);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v20;
}

id sub_240AB4B40()
{
  return sub_240AB4F64(&OBJC_IVAR____TtC5Heart16BulletedIconView____lazy_storage___textLabel, (uint64_t (*)(uint64_t))sub_240AB4B60);
}

id sub_240AB4B60()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  id v1 = objc_msgSend(self, sel__preferredFontForTextStyle_variant_, *MEMORY[0x263F83628], 1024);
  objc_msgSend(v0, sel_setFont_, v1);

  id v2 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  LODWORD(v3) = 1132068864;
  objc_msgSend(v0, sel_setContentHuggingPriority_forAxis_, 0, v3);
  uint64_t v4 = (void *)sub_240BB6DA0();
  objc_msgSend(v0, sel_setText_, v4);

  return v0;
}

id sub_240AB4CA0()
{
  return sub_240AB4CB8(&OBJC_IVAR____TtC5Heart16BulletedIconView____lazy_storage___stackView, 3, 0, 10.0);
}

id sub_240AB4CB8(uint64_t *a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v5 = *a1;
  uint64_t v6 = *(void **)(v4 + *a1);
  if (v6)
  {
    id v7 = *(id *)(v4 + *a1);
  }
  else
  {
    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BF8]), sel_init);
    objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v11, sel_setAlignment_, a2);
    objc_msgSend(v11, sel_setAxis_, a3);
    objc_msgSend(v11, sel_setSpacing_, a4);
    uint64_t v12 = *(void **)(v4 + v5);
    *(void *)(v4 + v5) = v11;
    id v7 = v11;

    uint64_t v6 = 0;
  }
  id v13 = v6;
  return v7;
}

id sub_240AB4E34()
{
  return sub_240AB5510(type metadata accessor for BulletedIconView);
}

uint64_t type metadata accessor for BulletedIconView()
{
  return self;
}

id sub_240AB4F08()
{
  id result = objc_msgSend(self, sel_systemGray5Color);
  qword_268C9FE40 = (uint64_t)result;
  return result;
}

id sub_240AB4F44()
{
  return sub_240AB4F64(&OBJC_IVAR____TtC5Heart21BulletCircleImageView____lazy_storage___iconView, (uint64_t (*)(uint64_t))sub_240AB4FC8);
}

id sub_240AB4F64(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v6 = (void *)a2(v2);
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_240AB4FC8(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_init);
  uint64_t v3 = a1 + OBJC_IVAR____TtC5Heart21BulletCircleImageView_item;
  objc_msgSend(v2, sel_setImage_, *(void *)(a1 + OBJC_IVAR____TtC5Heart21BulletCircleImageView_item + 16));
  objc_msgSend(v2, sel_setContentMode_, 4);
  if (*(void *)(v3 + 24)) {
    objc_msgSend(v2, sel_setTintColor_);
  }
  uint64_t v4 = *(void **)(v3 + 32);
  if (v4 && (*(unsigned char *)(v3 + 48) & 1) == 0 && (*(unsigned char *)(v3 + 64) & 1) == 0)
  {
    uint64_t v5 = *(void *)(v3 + 56);
    double v6 = *(double *)(v3 + 40);
    id v7 = self;
    id v8 = v4;
    id v9 = objc_msgSend(v7, sel_configurationWithPointSize_weight_, v5, v6);
    sub_240A34E00();
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_240BBAD40;
    *(void *)(v10 + 32) = v8;
    sub_240BB6F30();
    sub_240A34DC4(0, (unint64_t *)&qword_268C9F840);
    id v11 = v8;
    uint64_t v12 = (void *)sub_240BB6EF0();
    swift_bridgeObjectRelease();
    id v13 = objc_msgSend(v7, sel_configurationWithPaletteColors_, v12);

    id v14 = objc_msgSend(v9, sel_configurationByApplyingConfiguration_, v13);
    objc_msgSend(v2, sel_setPreferredSymbolConfiguration_, v14);
  }
  return v2;
}

void sub_240AB5318()
{
  id v1 = v0;
  id v2 = sub_240AB4F44();
  objc_msgSend(v1, sel_addSubview_, v2);

  id v3 = sub_240AB4F44();
  objc_msgSend(v3, sel_hk_alignConstraintsWithView_, v1);

  id v4 = objc_msgSend(v1, sel_heightAnchor);
  id v5 = objc_msgSend(v4, sel_constraintEqualToConstant_, 60.0);

  id v6 = objc_msgSend(v1, sel_widthAnchor);
  id v7 = objc_msgSend(v6, sel_constraintEqualToConstant_, 60.0);

  sub_240A34E00();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_240BBAEF0;
  *(void *)(v8 + 32) = v7;
  *(void *)(v8 + 40) = v5;
  sub_240BB6F30();
  sub_240A34DC4(0, (unint64_t *)&qword_268CA2490);
  id v9 = v7;
  id v10 = v5;
  id v11 = (id)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_addConstraints_, v11);
}

void sub_240AB54CC()
{
}

id sub_240AB54F8()
{
  return sub_240AB5510(type metadata accessor for BulletCircleImageView);
}

id sub_240AB5510(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for BulletCircleImageView()
{
  return self;
}

uint64_t destroy for BulletedIconItem(id *a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BulletedIconItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  id v4 = *(void **)(a2 + 16);
  id v5 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  id v7 = *(void **)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  sub_240BB4850();
  id v9 = v4;
  id v10 = v5;
  id v11 = v7;
  sub_240BB4850();
  return a1;
}

uint64_t assignWithCopy for BulletedIconItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_240BB4850();
  swift_bridgeObjectRelease();
  id v4 = *(void **)(a2 + 16);
  id v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v4;
  id v6 = v4;

  id v7 = *(void **)(a1 + 24);
  uint64_t v8 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v8;
  id v9 = v8;

  id v10 = *(void **)(a1 + 32);
  id v11 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v11;
  id v12 = v11;

  uint64_t v13 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v13;
  uint64_t v14 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v14;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  sub_240BB4850();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for BulletedIconItem(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for BulletedIconItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  long long v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  long long v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BulletedIconItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BulletedIconItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BulletedIconItem()
{
  return &type metadata for BulletedIconItem;
}

void sub_240AB58F0(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, double a8@<D0>)
{
  id v13 = a3;
  uint64_t v14 = (void *)sub_240BB6DA0();
  id v15 = self;
  id v16 = objc_msgSend(v15, sel_systemImageNamed_, v14);

  if (v16)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    id v17 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(v15, sel__systemImageNamed_, v17);

    if (!v16) {
      id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init);
    }
  }

  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = v16;
  *(void *)(a7 + 24) = 0;
  *(void *)(a7 + 32) = v13;
  *(double *)(a7 + 40) = a8;
  *(unsigned char *)(a7 + 48) = 0;
  *(void *)(a7 + 56) = a4;
  *(unsigned char *)(a7 + 64) = 0;
  *(void *)(a7 + 72) = a5;
  *(void *)(a7 + 80) = a6;
}

uint64_t sub_240AB5A3C()
{
  uint64_t v0 = sub_240BB3210();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_240BB3240();
  sub_240A4C570(v4, qword_26AFDEC58);
  sub_240A395FC(v4, (uint64_t)qword_26AFDEC58);
  sub_240BB30E0();
  sub_240A3AF14(0, (unint64_t *)&qword_26AFD99A0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v5 = sub_240BB3050();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_240BB97E0;
  (*(void (**)(unint64_t, void, uint64_t))(v6 + 104))(v8 + v7, *MEMORY[0x263F45580], v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F45688], v0);
  return sub_240BB3220();
}

uint64_t sub_240AB5C44@<X0>(int a1@<W0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  sub_240A5A338(0);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_240BB5990();
  uint64_t v33 = *(void *)(v11 - 8);
  uint64_t v34 = v11;
  MEMORY[0x270FA5388](v11);
  id v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_240AB5FDC(a1);
  sub_240BB3BF0();
  swift_bridgeObjectRetain_n();
  id v15 = sub_240BB5970();
  os_log_type_t v16 = sub_240BB71A0();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v30 = v8;
    uint64_t v18 = v17;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v35 = v29;
    uint64_t v36 = a2;
    *(_DWORD *)uint64_t v18 = 136446466;
    uint64_t v31 = v7;
    swift_getMetatypeMetadata();
    uint64_t v19 = sub_240BB6E10();
    uint64_t v36 = sub_240A38940(v19, v20, &v35);
    uint64_t v32 = a3;
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    uint64_t v21 = sub_240BB4850();
    uint64_t v22 = MEMORY[0x24560A1D0](v21, MEMORY[0x263F45828]);
    unint64_t v24 = v23;
    swift_bridgeObjectRelease();
    uint64_t v36 = sub_240A38940(v22, v24, &v35);
    uint64_t v7 = v31;
    a3 = v32;
    sub_240BB75F0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v15, v16, "[%{public}s]: Returning these changes: %{public}s", (uint8_t *)v18, 0x16u);
    uint64_t v25 = v29;
    swift_arrayDestroy();
    MEMORY[0x24560B930](v25, -1, -1);
    uint64_t v26 = v18;
    uint64_t v8 = v30;
    MEMORY[0x24560B930](v26, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v34);
  uint64_t v36 = v14;
  sub_240A3A454();
  sub_240BB6200();
  sub_240A20A2C((unint64_t *)&qword_26AFD9848, sub_240A5A338);
  uint64_t v27 = sub_240BB62E0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *a3 = v27;
  return result;
}

uint64_t sub_240AB5FDC(int a1)
{
  int v97 = a1;
  LODWORD(v101) = a1;
  uint64_t v113 = sub_240BB5990();
  uint64_t v110 = *(void *)(v113 - 8);
  uint64_t v1 = MEMORY[0x270FA5388](v113);
  uint64_t v115 = (char *)v89 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  uint64_t v95 = (char *)v89 - v3;
  uint64_t v4 = sub_240BB31D0();
  uint64_t v98 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v109 = (char *)v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v93 = (char *)v89 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v107 = (char *)v89 - v10;
  MEMORY[0x270FA5388](v9);
  id v92 = (char *)v89 - v11;
  sub_240AB7B08(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v99 = (char *)v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_240BB3340();
  uint64_t v14 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  uint64_t v96 = (char *)v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3FF50(0);
  uint64_t v116 = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  id v112 = (char *)v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v108 = (uint64_t)v89 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v91 = (uint64_t)v89 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)v89 - v25;
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  uint64_t v29 = (char *)v89 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v114 = (uint64_t)v89 - v30;
  sub_240A3AF14(0, (unint64_t *)&unk_26AFD99A8, (uint64_t (*)(uint64_t))sub_240A3FF50, MEMORY[0x263F8E0F8]);
  uint64_t v31 = *(void *)(v17 + 72);
  uint64_t v32 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v33 = (v32 + 32) & ~v32;
  uint64_t v105 = v34;
  uint64_t v104 = v33 + v31;
  uint64_t v103 = v32 | 7;
  uint64_t v35 = swift_allocObject();
  long long v102 = xmmword_240BB97E0;
  *(_OWORD *)(v35 + 16) = xmmword_240BB97E0;
  uint64_t v106 = v33;
  uint64_t v36 = v35 + v33;
  sub_240BB3250();
  sub_240A3466C(v118, v118[3]);
  uint64_t v90 = sub_240AB7B3C(0);
  uint64_t v117 = v90;
  v89[1] = sub_240AB7B5C(0, &qword_26AFD9630, (void (*)(uint64_t))sub_240AB7B3C);
  sub_240BB6E10();
  uint64_t v37 = v4;
  uint64_t v38 = v98;
  sub_240BB3200();
  swift_bridgeObjectRelease();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v118);
  sub_240BB4850();
  sub_240A5A4D8(v36, (uint64_t)v29);
  sub_240A5A5D8((uint64_t)v29, (uint64_t)v26);
  id v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
  int v40 = v39(v26, 1, v4);
  uint64_t v111 = v39;
  if (v40 == 1)
  {
    sub_240AB7B9C((uint64_t)v26, (uint64_t (*)(void))sub_240A3FF50);
    uint64_t v41 = (char *)MEMORY[0x263F8EE78];
  }
  else
  {
    v89[0] = v38 + 48;
    long long v42 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
    uint64_t v43 = v92;
    v42(v92, v26, v4);
    v42(v107, v43, v4);
    unint64_t v44 = MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v44 = sub_240A4297C(0, *(void *)(v44 + 16) + 1, 1, v44);
    }
    unint64_t v46 = *(void *)(v44 + 16);
    unint64_t v45 = *(void *)(v44 + 24);
    uint64_t v47 = v44;
    if (v46 >= v45 >> 1) {
      uint64_t v47 = sub_240A4297C(v45 > 1, v46 + 1, 1, v44);
    }
    *(void *)(v47 + 16) = v46 + 1;
    uint64_t v41 = (char *)v47;
    unint64_t v48 = v47
        + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))
        + *(void *)(v38 + 72) * v46;
    uint64_t v37 = v4;
    v42((char *)v48, v107, v4);
    id v39 = v111;
  }
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v49 = v100;
  uint64_t v107 = v41;
  if (v101)
  {
    uint64_t v50 = (uint64_t)v112;
    if (v101 == 2)
    {
      uint64_t v51 = (uint64_t)v99;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v99, 1, 1, v100);
      sub_240AB7B9C(v51, (uint64_t (*)(void))sub_240AB7B08);
      goto LABEL_16;
    }
    double v52 = (unsigned int *)MEMORY[0x263F456F0];
  }
  else
  {
    double v52 = (unsigned int *)MEMORY[0x263F456F8];
    uint64_t v50 = (uint64_t)v112;
  }
  __int16 v53 = v97;
  id v54 = v99;
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v99, *v52, v100);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v54, 0, 1, v49);
  uint64_t v55 = (uint64_t)v96;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v96, v54, v49);
  if ((v53 & 0xFF00) == 0x100)
  {
    uint64_t v56 = v91;
    sub_240AB7020(v55, v91);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v55, v49);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v56, 0, 1, v37);
    uint64_t v57 = v114;
    sub_240A5A5D8(v56, v114);
    id v39 = v111;
    goto LABEL_21;
  }
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v55, v49);
  id v39 = v111;
LABEL_16:
  uint64_t v57 = v114;
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  sub_240A395FC(v113, (uint64_t)qword_26AFDEC70);
  uint64_t v58 = sub_240BB5970();
  os_log_type_t v59 = sub_240BB71A0();
  if (os_log_type_enabled(v58, v59))
  {
    uint64_t v60 = swift_slowAlloc();
    uint64_t v61 = swift_slowAlloc();
    uint64_t v101 = v37;
    uint64_t v62 = v61;
    *(_DWORD *)uint64_t v60 = 136446466;
    uint64_t v117 = v90;
    v118[0] = v61;
    uint64_t v63 = sub_240BB6E10();
    uint64_t v117 = sub_240A38940(v63, v64, v118);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v60 + 12) = 2082;
    uint64_t v117 = sub_240A38940(0xD000000000000010, 0x8000000240BCD120, v118);
    uint64_t v50 = (uint64_t)v112;
    sub_240BB75F0();
    _os_log_impl(&dword_240A1B000, v58, v59, "[%{public}s.%{public}s] Deleting feedItem", (uint8_t *)v60, 0x16u);
    swift_arrayDestroy();
    uint64_t v65 = v62;
    uint64_t v37 = v101;
    uint64_t v57 = v114;
    MEMORY[0x24560B930](v65, -1, -1);
    MEMORY[0x24560B930](v60, -1, -1);
  }

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56))(v57, 1, 1, v37);
LABEL_21:
  uint64_t v66 = swift_allocObject();
  *(_OWORD *)(v66 + 16) = v102;
  uint64_t v67 = v66 + v106;
  sub_240A5A4D8(v57, v66 + v106);
  uint64_t v68 = v108;
  sub_240A5A4D8(v67, v108);
  sub_240A5A5D8(v68, v50);
  if (v39((char *)v50, 1, v37) == 1)
  {
    sub_240AB7B9C(v50, (uint64_t (*)(void))sub_240A3FF50);
  }
  else
  {
    uint64_t v69 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 32);
    uint64_t v70 = v93;
    v69(v93, v50, v37);
    v69(v109, (uint64_t)v70, v37);
    unint64_t v71 = MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v71 = sub_240A4297C(0, *(void *)(v71 + 16) + 1, 1, v71);
    }
    unint64_t v73 = *(void *)(v71 + 16);
    unint64_t v72 = *(void *)(v71 + 24);
    if (v73 >= v72 >> 1) {
      unint64_t v71 = sub_240A4297C(v72 > 1, v73 + 1, 1, v71);
    }
    *(void *)(v71 + 16) = v73 + 1;
    v69((char *)(v71+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v73), (uint64_t)v109, v37);
    uint64_t v57 = v114;
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v74 = sub_240BB6F40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v75 = v95;
  sub_240BB3BF0();
  swift_bridgeObjectRetain_n();
  uint64_t v76 = sub_240BB5970();
  os_log_type_t v77 = sub_240BB71A0();
  if (os_log_type_enabled(v76, v77))
  {
    uint64_t v78 = swift_slowAlloc();
    uint64_t v79 = swift_slowAlloc();
    uint64_t v117 = v79;
    *(_DWORD *)uint64_t v78 = 136446466;
    v118[0] = v94;
    swift_getMetatypeMetadata();
    uint64_t v80 = sub_240BB6E10();
    v118[0] = sub_240A38940(v80, v81, &v117);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v78 + 12) = 2082;
    uint64_t v82 = sub_240BB4850();
    uint64_t v83 = MEMORY[0x24560A1D0](v82, MEMORY[0x263F45828]);
    uint64_t v84 = v57;
    unint64_t v86 = v85;
    swift_bridgeObjectRelease();
    v118[0] = sub_240A38940(v83, v86, &v117);
    sub_240BB75F0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v76, v77, "[%{public}s]: Computed needed PluginFeedItemChanges: %{public}s", (uint8_t *)v78, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v79, -1, -1);
    MEMORY[0x24560B930](v78, -1, -1);

    (*(void (**)(char *, uint64_t))(v110 + 8))(v95, v113);
    uint64_t v87 = v84;
  }
  else
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v110 + 8))(v75, v113);
    uint64_t v87 = v57;
  }
  sub_240AB7B9C(v87, (uint64_t (*)(void))sub_240A3FF50);
  return v74;
}

id sub_240AB7020@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v56 = a1;
  uint64_t v54 = a2;
  uint64_t v53 = sub_240BB3340();
  uint64_t v51 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v49 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_240BB3370();
  uint64_t v50 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  unint64_t v48 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_240BB3940();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240BB3950();
  uint64_t v42 = *(void *)(v7 - 8);
  uint64_t v43 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v55 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_240AB7B3C(0);
  v58[0] = v47;
  uint64_t v46 = sub_240AB7B5C(0, &qword_26AFD9630, (void (*)(uint64_t))sub_240AB7B3C);
  uint64_t v9 = sub_240BB6E10();
  uint64_t v44 = v10;
  uint64_t v45 = v9;
  sub_240AB7BFC();
  uint64_t v12 = (uint64_t *)&v6[v11[12]];
  uint64_t v13 = (uint64_t *)&v6[v11[16]];
  uint64_t v14 = &v6[v11[20]];
  id v15 = (id)HRHeartRhythmUIFrameworkBundle();
  sub_240BB36C0();
  id v16 = (id)HRHeartRhythmUIFrameworkBundle();
  uint64_t v17 = sub_240BB2980();
  uint64_t v19 = v18;

  *uint64_t v12 = v17;
  v12[1] = v19;
  id v20 = (id)HRHeartRhythmUIFrameworkBundle();
  uint64_t v21 = sub_240BB2980();
  uint64_t v23 = v22;

  *uint64_t v13 = v21;
  v13[1] = v23;
  sub_240BB3640();
  uint64_t v24 = *MEMORY[0x263F43638];
  uint64_t v25 = sub_240BB36A0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v14, v24, v25);
  uint64_t v26 = *MEMORY[0x263F438A0];
  uint64_t v27 = sub_240BB3930();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v6, v26, v27);
  swift_storeEnumTagMultiPayload();
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  sub_240BB2980();
  sub_240BB2980();
  sub_240BB2980();
  sub_240BB3910();
  v58[0] = v47;
  uint64_t v47 = sub_240BB6E10();
  uint64_t v28 = sub_240AB7D14();
  unint64_t v30 = v29;
  uint64_t v31 = (void *)sub_240BB30E0();
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_240BB7900()) {
    sub_240B21774(MEMORY[0x263F8EE78]);
  }
  type metadata accessor for AtrialFibrillationPromotionTileActionHandler();
  sub_240A20A2C(&qword_268C9FE90, (void (*)(uint64_t))type metadata accessor for AtrialFibrillationPromotionTileActionHandler);
  sub_240BB3120();
  swift_bridgeObjectRelease();

  sub_240A8B070(v28, v30);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v49, v56, v53);
  uint64_t v32 = v48;
  sub_240BB3380();
  uint64_t v33 = v52;
  sub_240BB3140();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v32, v33);
  id result = objc_msgSend(self, sel_atrialFibrillationEventType);
  if (result)
  {
    uint64_t v35 = result;
    uint64_t v36 = sub_240BB32F0();

    uint64_t v37 = (void (*)(uint64_t *, void))sub_240BB31A0();
    uint64_t v38 = *(void *)(v36 + 16);
    if (v38)
    {
      id v39 = (uint64_t *)(v36 + 40);
      do
      {
        uint64_t v40 = *(v39 - 1);
        uint64_t v41 = *v39;
        sub_240BB4850();
        sub_240B8DB44(&v57, v40, v41);
        swift_bridgeObjectRelease();
        v39 += 2;
        --v38;
      }
      while (v38);
    }
    swift_bridgeObjectRelease();
    v37(v58, 0);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v55, v43);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240AB77F0()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Heart36AtrialFibrillationPromotionGenerator_domain;
  uint64_t v2 = sub_240BB3240();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_240AB7898()
{
  return type metadata accessor for AtrialFibrillationPromotionGenerator();
}

uint64_t sub_240AB78A0()
{
  uint64_t result = sub_240BB3240();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_240AB7948()
{
  return swift_retain();
}

uint64_t sub_240AB7954@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC5Heart36AtrialFibrillationPromotionGenerator_domain;
  uint64_t v4 = sub_240BB3240();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_240AB79CC()
{
  uint64_t v1 = sub_240BB32A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 18) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_240AB7A68@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_240BB32A0() - 8);
  uint64_t v4 = *(void *)(v1
                 + ((*(void *)(v3 + 64)
                   + ((*(unsigned __int8 *)(v3 + 80) + 18) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
                   + 7) & 0xFFFFFFFFFFFFFFF8));
  int v5 = *(unsigned __int16 *)(v1 + 16);

  return sub_240AB5C44(v5, v4, a1);
}

void sub_240AB7B08(uint64_t a1)
{
}

uint64_t sub_240AB7B3C(uint64_t a1)
{
  return sub_240AB7B5C(a1, &qword_26AFD9628, (void (*)(uint64_t))type metadata accessor for AtrialFibrillationPromotionGenerator);
}

uint64_t sub_240AB7B5C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a2;
  if (!*a2)
  {
    a3(255);
    uint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_240AB7B9C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_240AB7BFC()
{
  if (!qword_268C9FE88)
  {
    MEMORY[0x270FA5388](0);
    sub_240BB36D0();
    sub_240BB36A0();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_268C9FE88);
    }
  }
}

uint64_t sub_240AB7D14()
{
  uint64_t v0 = sub_240BB3340();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F456F8], v0);
  sub_240A20A2C(&qword_268C9FE98, MEMORY[0x263F45708]);
  sub_240BB6EB0();
  sub_240BB6EB0();
  BOOL v4 = v8 != v7[2];
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_240BB2770();
  swift_allocObject();
  sub_240BB2760();
  LOBYTE(v8) = v4;
  sub_240AB7EDC();
  uint64_t v5 = sub_240BB2750();
  swift_release();
  return v5;
}

unint64_t sub_240AB7EDC()
{
  unint64_t result = qword_268C9FEA0;
  if (!qword_268C9FEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9FEA0);
  }
  return result;
}

uint64_t type metadata accessor for AFibBurdenGetStartedDataSource(uint64_t a1)
{
  return sub_240A3E6AC(a1, (uint64_t *)&unk_268C9FEB8);
}

uint64_t sub_240AB7F50()
{
  return swift_initClassMetadata2();
}

unint64_t sub_240AB7F9C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_240ABA89C(0, (unint64_t *)&qword_268CA21F0);
  uint64_t v2 = sub_240BB7950();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  uint64_t v7 = MEMORY[0x263F8D310];
  while (1)
  {
    sub_240ABA82C(v6, (uint64_t)&v16, (uint64_t)&qword_268CA21E0, v7, (uint64_t (*)(void, uint64_t, uint64_t))sub_240ABA8EC);
    uint64_t v8 = v16;
    uint64_t v9 = v17;
    unint64_t result = sub_240AB9E08(v16, v17);
    if (v11) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v12 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v9;
    unint64_t result = (unint64_t)sub_240A7B714(&v18, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v3[2] = v15;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_240AB811C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_240ABA89C(0, &qword_268C9FF00);
  uint64_t v2 = sub_240BB7950();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  uint64_t v7 = MEMORY[0x263F8DB68];
  while (1)
  {
    sub_240ABA82C(v6, (uint64_t)v16, (uint64_t)&unk_268C9FF08, v7, (uint64_t (*)(void, uint64_t, uint64_t))sub_240ABA8EC);
    unint64_t result = sub_240AB9E80((uint64_t)v16);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v10 = v3[6] + 40 * result;
    long long v11 = v16[0];
    long long v12 = v16[1];
    *(void *)(v10 + 32) = v17;
    *(_OWORD *)uint64_t v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    unint64_t result = (unint64_t)sub_240A7B714(&v18, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v3[2] = v15;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_240AB82A0(uint64_t a1)
{
  sub_240ABA9FC(0, (unint64_t *)&qword_268C9FF10, (void (*)(uint64_t))type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (void *)((char *)v26 - v5);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_240ABAA68();
  uint64_t v7 = sub_240BB7950();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = (uint64_t)v6 + *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v26[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_240ABAAD0(v13, (uint64_t)v6);
    uint64_t v15 = *v6;
    uint64_t v16 = v6[1];
    unint64_t result = sub_240AB9E08(*v6, v16);
    if (v18) {
      break;
    }
    unint64_t v19 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    id v20 = (uint64_t *)(v8[6] + 16 * result);
    *id v20 = v15;
    v20[1] = v16;
    uint64_t v21 = v8[7];
    uint64_t v22 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
    unint64_t result = sub_240A925F4(v10, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_240AB8498(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_240ABA89C(0, &qword_268C9FEF8);
  uint64_t v2 = (void *)sub_240BB7950();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    sub_240BB4850();
    unint64_t result = sub_240AB9E08(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_240AB85C8(uint64_t a1)
{
  return sub_240AB8610(a1, (void (*)(void))sub_240ABAB58, (uint64_t)&unk_268C9FF38, (uint64_t)type metadata accessor for OpenExternalURLOptionsKey, (uint64_t (*)(uint64_t))sub_240AB9F9C);
}

unint64_t sub_240AB8610(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  a2(0);
  uint64_t v9 = sub_240BB7950();
  uint64_t v10 = (void *)v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v10;
  }
  uint64_t v12 = v9 + 64;
  uint64_t v13 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_240ABA82C(v13, (uint64_t)&v20, a3, a4, (uint64_t (*)(void, uint64_t, uint64_t))sub_240ABAC40);
    uint64_t v14 = v20;
    unint64_t result = a5(v20);
    if (v16) {
      break;
    }
    *(void *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v10[6] + 8 * result) = v14;
    unint64_t result = (unint64_t)sub_240A7B714(&v21, (_OWORD *)(v10[7] + 32 * result));
    uint64_t v17 = v10[2];
    BOOL v18 = __OFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (v18) {
      goto LABEL_11;
    }
    void v10[2] = v19;
    v13 += 40;
    if (!--v11)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_240AB8768@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240ABA6B4(0, &qword_268C9FF40, MEMORY[0x263F44090], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  char v7 = (char *)&v21 - v6;
  sub_240ABA6B4(0, (unint64_t *)&qword_268C9F2A0, MEMORY[0x263F063B0], v4);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v12 = *(void *)(v2 + qword_268C9FEA8);
  uint64_t v11 = *(void *)(v2 + qword_268C9FEA8 + 8);
  sub_240BB4850();
  uint64_t v13 = sub_240BB5180();
  if (*(void *)(v13 + 16) && (unint64_t v14 = sub_240AB9E08(v12, v11), (v15 & 1) != 0))
  {
    char v16 = *(unsigned char *)(*(void *)(v13 + 56) + v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v16 = 2;
  }
  sub_240BB5170();
  uint64_t v17 = sub_240BB4590();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v7, 1, v17))
  {
    sub_240ABACA8((uint64_t)v7, (uint64_t)&qword_268C9FF40, MEMORY[0x263F44090], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_240ABA6B4);
    uint64_t v18 = sub_240BB28D0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 1, 1, v18);
  }
  else
  {
    sub_240BB4530();
    sub_240ABACA8((uint64_t)v7, (uint64_t)&qword_268C9FF40, MEMORY[0x263F44090], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_240ABA6B4);
  }
  *a1 = v16;
  uint64_t v19 = type metadata accessor for AFibBurdenOnboardingDetails(0);
  return sub_240A79B0C((uint64_t)v10, (uint64_t)&a1[*(int *)(v19 + 20)]);
}

uint64_t sub_240AB8A38()
{
  uint64_t v1 = (void *)(v0 + qword_268C9FEA8);
  *uint64_t v1 = 0xD000000000000014;
  v1[1] = 0x8000000240BCD380;
  uint64_t v2 = (void *)(v0 + qword_268C9FEB0);
  *uint64_t v2 = 0xD000000000000017;
  v2[1] = 0x8000000240BCD3A0;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_240ABA6B4(0, &qword_268C9FF18, MEMORY[0x263F44020], MEMORY[0x263F8E0F8]);
  sub_240BB4470();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_240BBAE40;
  sub_240ABA6B4(0, &qword_268C9FF20, MEMORY[0x263F44018], v3);
  uint64_t v4 = sub_240BB4450();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 72);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_240BB97E0;
  unint64_t v9 = v8 + v7;
  uint64_t v10 = *MEMORY[0x263F43FF8];
  uint64_t v11 = sub_240BB4410();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  uint64_t v30 = v4;
  unint64_t v29 = *(void (**)(void))(v5 + 104);
  ((void (*)(unint64_t, void, uint64_t))v29)(v9, *MEMORY[0x263F44010], v4);
  swift_retain();
  sub_240BB4460();
  uint64_t v27 = v6;
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_240BBAE40;
  if (qword_268C9E7A8 != -1) {
    swift_once();
  }
  sub_240BB2980();
  sub_240ABA6B4(0, &qword_268C9FF28, MEMORY[0x263F44008], MEMORY[0x263F8E0F8]);
  sub_240BB4430();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_240BB97E0;
  sub_240BB4850();
  sub_240BB4850();
  sub_240BB4420();
  sub_240A57608();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_240BBAE40;
  *(void *)(v13 + 32) = 0xD000000000000014;
  *(void *)(v13 + 40) = 0x8000000240BCA120;
  *(void *)(v13 + 48) = 0x7472617453746547;
  *(void *)(v13 + 56) = 0xEA00000000006465;
  unint64_t v14 = sub_240A42A0C((void *)1, 3, 1, (void *)v13);
  v14[2] = 3;
  v14[8] = 0xD000000000000012;
  v14[9] = 0x8000000240BCD3C0;
  char v15 = (void *)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  id v16 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v16)
  {
    unint64_t v17 = v12 + v7;
    sub_240BB6DE0();

    swift_arrayDestroy();
    sub_240BB4440();
    unsigned int v28 = *MEMORY[0x263F44000];
    v29(v12 + v7);
    unint64_t v26 = 0xE000000000000000;
    sub_240BB2980();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_240BB97E0;
    sub_240BB4850();
    sub_240BB4850();
    sub_240BB4420();
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_240BBAE40;
    *(void *)(v18 + 32) = 0xD000000000000014;
    *(void *)(v18 + 40) = 0x8000000240BCA120;
    *(void *)(v18 + 48) = 0x7472617453746547;
    *(void *)(v18 + 56) = 0xEA00000000006465;
    uint64_t v19 = sub_240A42A0C((void *)1, 3, 1, (void *)v18);
    void v19[2] = 3;
    v19[8] = 0xD000000000000011;
    v19[9] = 0x8000000240BCD3E0;
    uint64_t v20 = (void *)sub_240BB6EF0();
    swift_bridgeObjectRelease();
    id v21 = (id)HKUIJoinStringsForAutomationIdentifier();

    if (v21)
    {
      uint64_t v22 = sub_240BB6DE0();
      uint64_t v24 = v23;

      swift_arrayDestroy();
      LOBYTE(v26) = 1;
      sub_240BB4440();
      swift_release();
      ((void (*)(unint64_t, void, uint64_t))v29)(v17 + v27, v28, v30);
      sub_240BB4460();
      objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init, v26, v22, v24);
      sub_240BB4FF0();
      swift_allocObject();
      sub_240BB4FE0();
      return sub_240BB51B0();
    }
  }
  else
  {
    swift_arrayDestroy();
    __break(1u);
  }
  uint64_t result = swift_arrayDestroy();
  __break(1u);
  return result;
}

void sub_240AB9270()
{
}

uint64_t sub_240AB92A0()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_240AB92E8()
{
  sub_240BB51C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_240AB9350()
{
  return type metadata accessor for AFibBurdenGetStartedDataSource(0);
}

uint64_t sub_240AB9358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_240ABA9FC(0, (unint64_t *)&qword_268C9FEC8, MEMORY[0x263F43A00]);
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (uint64_t *)&v19[-v6];
  uint64_t v8 = sub_240BB2F70();
  unint64_t v9 = (char *)v7 + *(int *)(v5 + 56);
  *unint64_t v7 = v8;
  uint64_t v10 = sub_240BB3AA0();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  if ((*(unsigned int (**)(char *, uint64_t))(v11 + 88))(v9, v10) == *MEMORY[0x263F439F8] && v8 == 1)
  {
    if (qword_268C9E7A8 != -1) {
      swift_once();
    }
    sub_240BB2980();
    uint64_t v14 = sub_240BB5BD0();
    uint64_t v15 = MEMORY[0x263F81F20];
    *(void *)(a2 + 24) = v14;
    *(void *)(a2 + 32) = v15;
    sub_240A23B08((uint64_t *)a2);
    sub_240BB5AC0();
    sub_240BB4850();
    sub_240BB5BC0();
    sub_240A34DC4(0, (unint64_t *)&qword_268C9EEE0);
    sub_240BB7470();
    id v16 = (void (*)(unsigned char *, void))sub_240BB5B30();
    sub_240BB5B00();
    v16(v19, 0);
    id v17 = objc_msgSend(self, sel_labelColor);
    uint64_t v18 = (void (*)(unsigned char *, void))sub_240BB5B30();
    sub_240BB5B10();
    v18(v19, 0);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return sub_240ABACA8((uint64_t)v7, (uint64_t)&qword_268C9FEC8, MEMORY[0x263F43A00], MEMORY[0x263F8D6C8], (uint64_t (*)(void))sub_240ABA9FC);
  }
}

uint64_t sub_240AB96B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240AB9358(a1, a2);
}

id sub_240AB96CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v45 = a1;
  uint64_t v46 = a2;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240ABA6B4(0, (unint64_t *)&qword_268C9FED0, MEMORY[0x263F82228], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v47 = (char *)&v38 - v8;
  uint64_t v9 = sub_240BB29A0();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v41 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240ABA6B4(0, &qword_268C9FED8, MEMORY[0x263F06828], v6);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v38 - v12;
  uint64_t v44 = sub_240BB7590();
  uint64_t v14 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  id v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_240BB5B20();
  uint64_t v42 = *(void *)(v17 - 8);
  uint64_t v43 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_240BB5BD0();
  uint64_t v39 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  id v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v22 = objc_msgSend(self, sel_buttonWithType_, 1);
  objc_msgSend(v22, sel_addTarget_action_forControlEvents_, v4, a3, 64);
  sub_240BB5AD0();
  sub_240BB5B40();
  sub_240BB5B80();
  id v23 = v22;
  if (objc_msgSend(v23, sel_effectiveUserInterfaceLayoutDirection) == (id)1) {
    uint64_t v24 = 2;
  }
  else {
    uint64_t v24 = 1;
  }
  objc_msgSend(v23, sel_setContentHorizontalAlignment_, v24);

  id v25 = objc_msgSend(v23, sel_titleLabel);
  if (v25)
  {
    unint64_t v26 = v25;
    uint64_t v27 = (void *)sub_240BB5AF0();
    objc_msgSend(v26, sel_setFont_, v27);
  }
  id v28 = objc_msgSend(v23, sel_titleLabel);
  if (v28)
  {
    unint64_t v29 = v28;
    objc_msgSend(v28, sel_setNumberOfLines_, 0);
  }
  sub_240BB7570();
  sub_240BB7540();
  sub_240ABA718();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240BB97E0;
  uint64_t v31 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  sub_240BB4850();
  id v32 = v31;
  uint64_t v33 = sub_240BB5AF0();
  *(void *)(inited + 64) = sub_240A34DC4(0, (unint64_t *)&qword_268C9EEE0);
  *(void *)(inited + 40) = v33;
  sub_240AB8610(inited, (void (*)(void))sub_240ABA78C, (uint64_t)&qword_268C9FEE8, (uint64_t)type metadata accessor for Key, (uint64_t (*)(uint64_t))sub_240AB9EC8);
  sub_240BB29B0();
  sub_240BB2970();
  uint64_t v34 = sub_240BB2960();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v13, 0, 1, v34);
  sub_240BB7550();
  uint64_t v35 = v47;
  uint64_t v36 = v44;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v47, v16, v44);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v35, 0, 1, v36);
  sub_240BB75C0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v36);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v19, v43);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v21, v40);
  return v23;
}

uint64_t sub_240AB9CB8()
{
  uint64_t result = sub_240BB5190();
  if (result)
  {
    uint64_t v1 = result;
    swift_getObjectType();
    uint64_t v2 = swift_conformsToProtocol2();
    if (v2) {
      uint64_t v3 = v2;
    }
    else {
      uint64_t v3 = 0;
    }
    if (v2) {
      uint64_t v4 = v1;
    }
    else {
      uint64_t v4 = 0;
    }
    if (v4)
    {
      uint64_t ObjectType = swift_getObjectType();
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(ObjectType, v3))
      {
        uint64_t v7 = v6;
        uint64_t v8 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 24))(v4, v3, v8, v7);
        sub_240BB50A0();
      }
    }
    return sub_240BB50A0();
  }
  return result;
}

uint64_t sub_240AB9DA8()
{
  swift_retain();
  sub_240AB9CB8();

  return swift_release();
}

id sub_240AB9DE4(uint64_t a1)
{
  return sub_240ABA470(a1);
}

unint64_t sub_240AB9E08(uint64_t a1, uint64_t a2)
{
  sub_240BB7BC0();
  sub_240BB6E50();
  uint64_t v4 = sub_240BB7C00();

  return sub_240ABA030(a1, a2, v4);
}

unint64_t sub_240AB9E80(uint64_t a1)
{
  uint64_t v2 = sub_240BB7740();

  return sub_240ABA114(a1, v2);
}

unint64_t sub_240AB9EC8(uint64_t a1)
{
  sub_240BB6DE0();
  sub_240BB7BC0();
  sub_240BB6E50();
  uint64_t v2 = sub_240BB7C00();
  swift_bridgeObjectRelease();
  return sub_240ABA1DC(a1, v2);
}

unint64_t sub_240AB9F58(uint64_t a1)
{
  uint64_t v2 = sub_240BB74F0();

  return sub_240ABA354(a1, v2);
}

unint64_t sub_240AB9F9C(uint64_t a1)
{
  sub_240BB6DE0();
  sub_240BB7BC0();
  sub_240BB6E50();
  uint64_t v2 = sub_240BB7C00();
  swift_bridgeObjectRelease();

  return sub_240ABA1DC(a1, v2);
}

unint64_t sub_240ABA030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_240BB7AE0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_240BB7AE0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_240ABA114(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_240ABA94C(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x24560AA00](v9, a1);
      sub_240ABA9A8((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_240ABA1DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_240BB6DE0();
    uint64_t v8 = v7;
    if (v6 == sub_240BB6DE0() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_240BB6DE0();
          uint64_t v15 = v14;
          if (v13 == sub_240BB6DE0() && v15 == v16) {
            break;
          }
          char v18 = sub_240BB7AE0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_240ABA354(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_240A34DC4(0, (unint64_t *)&qword_26AFD9930);
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_240BB7500();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_240BB7500();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

id sub_240ABA470(uint64_t a1)
{
  sub_240ABA9FC(0, (unint64_t *)&qword_268C9FEC8, MEMORY[0x263F43A00]);
  uint64_t v3 = v2 - 8;
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (uint64_t *)((char *)&v15 - v4);
  uint64_t v6 = sub_240BB2F70();
  char v7 = (char *)v5 + *(int *)(v3 + 56);
  uint64_t *v5 = v6;
  uint64_t v8 = sub_240BB3AA0();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, a1, v8);
  if ((*(unsigned int (**)(char *, uint64_t))(v9 + 88))(v7, v8) == *MEMORY[0x263F439F0] && v6 == 1)
  {
    if (qword_268C9E7A8 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_240BB2980();
    id v11 = sub_240AB96CC(v12, v13, (uint64_t)sel_learnMoreButtonTapped);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
  }
  else
  {
    sub_240ABACA8((uint64_t)v5, (uint64_t)&qword_268C9FEC8, MEMORY[0x263F43A00], MEMORY[0x263F8D6C8], (uint64_t (*)(void))sub_240ABA9FC);
    return 0;
  }
  return v11;
}

void sub_240ABA6B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_240ABA718()
{
  if (!qword_268C9FEE0)
  {
    sub_240ABAC40(255, &qword_268C9FEE8, type metadata accessor for Key);
    unint64_t v0 = sub_240BB7AB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9FEE0);
    }
  }
}

void sub_240ABA78C()
{
  if (!qword_268C9FEF0)
  {
    type metadata accessor for Key(255);
    sub_240ABABF8((unint64_t *)&qword_268C9EA48, type metadata accessor for Key);
    unint64_t v0 = sub_240BB7960();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9FEF0);
    }
  }
}

uint64_t sub_240ABA82C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  uint64_t v7 = a5(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

void sub_240ABA89C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_240BB7960();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_240ABA8EC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_240ABA94C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_240ABA9A8(uint64_t a1)
{
  return a1;
}

void sub_240ABA9FC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_240ABAA68()
{
  if (!qword_268CA0BE0)
  {
    type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(255);
    unint64_t v0 = sub_240BB7960();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA0BE0);
    }
  }
}

uint64_t sub_240ABAAD0(uint64_t a1, uint64_t a2)
{
  sub_240ABA9FC(0, (unint64_t *)&qword_268C9FF10, (void (*)(uint64_t))type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_240ABAB58()
{
  if (!qword_268C9FF30)
  {
    type metadata accessor for OpenExternalURLOptionsKey(255);
    sub_240ABABF8((unint64_t *)&qword_268C9EA38, type metadata accessor for OpenExternalURLOptionsKey);
    unint64_t v0 = sub_240BB7960();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9FF30);
    }
  }
}

uint64_t sub_240ABABF8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240ABAC40(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_240ABACA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t type metadata accessor for AFibBurdenOnboardingDetails(uint64_t a1)
{
  return sub_240A3E6AC(a1, (uint64_t *)&unk_268C9FF48);
}

uint64_t *sub_240ABAD28(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_240BB28D0();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      sub_240ABA6B4(0, (unint64_t *)&qword_268C9F2A0, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t sub_240ABAEB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_240BB28D0();
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(v2, v3);
  }
  return result;
}

unsigned char *sub_240ABAF8C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_240BB28D0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_240ABA6B4(0, (unint64_t *)&qword_268C9F2A0, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

unsigned char *sub_240ABB0CC(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_240BB28D0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v5, 1, v7);
  int v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    sub_240ABA6B4(0, (unint64_t *)&qword_268C9F2A0, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
    memcpy(v5, v6, *(void *)(*(void *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v5, v6, v7);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

unsigned char *sub_240ABB270(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_240BB28D0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_240ABA6B4(0, (unint64_t *)&qword_268C9F2A0, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

unsigned char *sub_240ABB3B0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_240BB28D0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v5, 1, v7);
  int v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    sub_240ABA6B4(0, (unint64_t *)&qword_268C9F2A0, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
    memcpy(v5, v6, *(void *)(*(void *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v5, v6, v7);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t sub_240ABB554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240ABB568);
}

uint64_t sub_240ABB568(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 253)
  {
    unsigned int v4 = *a1;
    if (v4 >= 2) {
      int v5 = ((v4 + 2147483646) & 0x7FFFFFFF) - 1;
    }
    else {
      int v5 = -2;
    }
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    sub_240ABA6B4(0, (unint64_t *)&qword_268C9F2A0, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
    int v10 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = &a1[*(int *)(a3 + 20)];
    return v10(v12, a2, v11);
  }
}

uint64_t sub_240ABB65C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240ABB670);
}

unsigned char *sub_240ABB670(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 253)
  {
    *uint64_t result = a2 + 2;
  }
  else
  {
    sub_240ABA6B4(0, (unint64_t *)&qword_268C9F2A0, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    int v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_240ABB744()
{
  sub_240ABA6B4(319, (unint64_t *)&qword_268C9F2A0, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for DataTypeDetailConfiguration.ComponentIdentifier.AFibBurden()
{
  return &type metadata for DataTypeDetailConfiguration.ComponentIdentifier.AFibBurden;
}

uint64_t sub_240ABB81C(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_240A3AE58();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1 + OBJC_IVAR____TtC5Heart45AFibBurdenDataTypeDetailConfigurationProvider_context;
  uint64_t v10 = sub_240BB4C70();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  uint64_t v12 = (void *)sub_240BB4C30();
  id v13 = objc_msgSend(v12, sel_profileIdentifier);
  id v14 = objc_msgSend(v13, sel_type);

  if (v14 != (id)1)
  {

    goto LABEL_5;
  }
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3D0]), sel_initWithFeatureIdentifier_healthStore_, *MEMORY[0x263F09728], v12);

  if (!v15)
  {
LABEL_5:
    type metadata accessor for NotOnboardedIsOnboardedProvider();
    uint64_t v16 = swift_allocObject();
    *(unsigned char *)(v16 + 16) = 0;
    LOBYTE(v22) = 0;
    sub_240BB6200();
    sub_240ABCFA4((unint64_t *)&qword_26AFD7558, (void (*)(uint64_t))sub_240A3AE58);
    uint64_t v18 = sub_240BB62E0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)(v16 + 24) = v18;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
    uint64_t v17 = &off_26F507CE8;
    goto LABEL_6;
  }
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  uint64_t v23 = sub_240A34DC4(0, (unint64_t *)&qword_26AFD75D0);
  uint64_t v24 = MEMORY[0x263F44B48];
  *(void *)&long long v22 = v15;
  type metadata accessor for FeatureStatusIsOnboardedProvider();
  uint64_t v16 = swift_allocObject();
  sub_240A37388(&v22, v16 + 16);
  uint64_t v17 = &off_26F507D00;
LABEL_6:
  uint64_t v19 = (uint64_t *)(v2 + OBJC_IVAR____TtC5Heart45AFibBurdenDataTypeDetailConfigurationProvider_isOnboardedProvider);
  *uint64_t v19 = v16;
  v19[1] = (uint64_t)v17;
  return v2;
}

id sub_240ABBAFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v62 = a1;
  uint64_t v2 = sub_240BB52C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_240BB53C0();
  uint64_t v66 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v68 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_240BB53D0();
  uint64_t v64 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v8 = (uint64_t *)((char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_240ABCD20(0, (unint64_t *)&qword_268C9F7A0, (unint64_t *)&qword_268C9F7A8, MEMORY[0x263F44108], MEMORY[0x263F8E0F8]);
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_240BBE9D0;
  uint64_t v12 = self;
  id result = objc_msgSend(v12, sel__quantityTypeWithCode_, 248);
  if (!result)
  {
    __break(1u);
    goto LABEL_15;
  }
  id v14 = result;
  uint64_t v59 = v3;
  uint64_t v60 = v2;
  uint64_t v61 = v5;
  uint64_t v15 = v1 + OBJC_IVAR____TtC5Heart45AFibBurdenDataTypeDetailConfigurationProvider_isOnboardedProvider;
  uint64_t v16 = *(void *)(v1 + OBJC_IVAR____TtC5Heart45AFibBurdenDataTypeDetailConfigurationProvider_isOnboardedProvider);
  uint64_t v17 = *(void *)(v15 + 8);
  *(void *)(v11 + 56) = &_s36AFibBurdenChartOrOnboardingComponentVN;
  *(void *)(v11 + 64) = sub_240ABCBD8();
  uint64_t v18 = swift_allocObject();
  *(void *)(v11 + 32) = v18;
  *(_OWORD *)(v18 + 56) = 0u;
  *(_OWORD *)(v18 + 72) = 0u;
  *(void *)(v18 + 88) = 0;
  *(void *)(v18 + 16) = v14;
  *(void *)(v18 + 24) = 0xD00000000000001BLL;
  *(void *)(v18 + 32) = 0x8000000240BCD510;
  *(void *)(v18 + 40) = v16;
  *(void *)(v18 + 48) = v17;
  swift_unknownObjectRetain();
  id result = objc_msgSend(v12, sel__quantityTypeWithCode_, 248);
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_240BB3320();
  uint64_t v19 = sub_240BB4A80();
  uint64_t v20 = MEMORY[0x263F44370];
  *(void *)(v11 + 96) = v19;
  *(void *)(v11 + 104) = v20;
  sub_240A23B08((uint64_t *)(v11 + 72));
  sub_240BB4A70();
  id result = objc_msgSend(v12, sel__quantityTypeWithCode_, 248);
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_240ABC8B8((uint64_t)&unk_26F503450);
  uint64_t v21 = sub_240BB4B30();
  uint64_t v22 = MEMORY[0x263F44390];
  *(void *)(v11 + 136) = v21;
  *(void *)(v11 + 144) = v22;
  sub_240A23B08((uint64_t *)(v11 + 112));
  sub_240BB4B20();
  uint64_t v63 = v10;
  uint64_t v23 = swift_allocObject();
  long long v69 = xmmword_240BBAE40;
  *(_OWORD *)(v23 + 16) = xmmword_240BBAE40;
  id result = objc_msgSend(v12, sel__quantityTypeWithCode_, 248);
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  id v24 = result;
  *(void *)(v23 + 56) = &_s37AFibBurdenLifeFactorsPlatterComponentVN;
  *(void *)(v23 + 64) = sub_240ABCC84();
  *(void *)(v23 + 32) = v24;
  *(void *)(v23 + 40) = 0xD00000000000001CLL;
  *(void *)(v23 + 48) = 0x8000000240BCD530;
  id result = objc_msgSend(v12, sel__quantityTypeWithCode_, 248);
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v25 = (uint64_t)result;
  swift_getObjectType();
  sub_240B87974(v25, v16, 0, v17, (uint64_t)&v76);
  *(void *)(v23 + 96) = &_s28AFibBurdenEducationComponentVN;
  *(void *)(v23 + 104) = sub_240A8ED24();
  unint64_t v26 = (_OWORD *)swift_allocObject();
  *(void *)(v23 + 72) = v26;
  long long v27 = v77[0];
  v26[1] = v76;
  void v26[2] = v27;
  *(_OWORD *)((char *)v26 + 41) = *(_OWORD *)((char *)v77 + 9);
  uint64_t v28 = sub_240BB4BE0();
  uint64_t v29 = MEMORY[0x263F443C8];
  *(void *)(v11 + 176) = v28;
  *(void *)(v11 + 184) = v29;
  sub_240A23B08((uint64_t *)(v11 + 152));
  swift_unknownObjectRetain();
  sub_240BB4B80();
  id result = objc_msgSend(v12, sel__quantityTypeWithCode_, 248);
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v58 = v28;
  uint64_t v30 = sub_240BB4B50();
  uint64_t v31 = MEMORY[0x263F443A0];
  *(void *)(v11 + 216) = v30;
  *(void *)(v11 + 224) = v31;
  sub_240A23B08((uint64_t *)(v11 + 192));
  sub_240BB4B40();
  id result = objc_msgSend(v12, sel__quantityTypeWithCode_, 248);
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  sub_240A34DC4(0, &qword_268C9FF98);
  sub_240ABCD20(0, (unint64_t *)&qword_26AFD99D8, (unint64_t *)&qword_26AFD9A10, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = v69;
  sub_240BB34D0();
  uint64_t v33 = sub_240BB34C0();
  uint64_t v35 = v34;
  uint64_t v36 = MEMORY[0x263F8D310];
  *(void *)(v32 + 56) = MEMORY[0x263F8D310];
  unint64_t v37 = sub_240A4C66C();
  *(void *)(v32 + 32) = v33;
  *(void *)(v32 + 40) = v35;
  *(void *)(v32 + 96) = v36;
  *(void *)(v32 + 104) = v37;
  *(void *)(v32 + 64) = v37;
  *(void *)(v32 + 72) = 0xD00000000000001BLL;
  *(void *)(v32 + 80) = 0x8000000240BCA210;
  sub_240BB70D0();
  uint64_t v38 = sub_240BB49C0();
  uint64_t v39 = MEMORY[0x263F44350];
  *(void *)(v11 + 256) = v38;
  *(void *)(v11 + 264) = v39;
  sub_240A23B08((uint64_t *)(v11 + 232));
  sub_240BB49A0();
  id result = objc_msgSend(v12, sel__quantityTypeWithCode_, 248);
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  void *v8 = result;
  (*(void (**)(void *, void, uint64_t))(v64 + 104))(v8, *MEMORY[0x263F44778], v65);
  sub_240BB4A90();
  (*(void (**)(char *, void, uint64_t))(v66 + 104))(v68, *MEMORY[0x263F44768], v67);
  uint64_t v40 = sub_240BB4AB0();
  uint64_t v41 = MEMORY[0x263F44378];
  *(void *)(v11 + 296) = v40;
  *(void *)(v11 + 304) = v41;
  sub_240A23B08((uint64_t *)(v11 + 272));
  sub_240BB4AA0();
  uint64_t v42 = sub_240BB4AE0();
  uint64_t v68 = v43;
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = v69;
  id result = objc_msgSend(v12, sel__quantityTypeWithCode_, 248);
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  *(void *)&long long v69 = v42;
  uint64_t v45 = sub_240BB4A20();
  uint64_t v46 = MEMORY[0x263F44360];
  *(void *)(v44 + 56) = v45;
  *(void *)(v44 + 64) = v46;
  sub_240A23B08((uint64_t *)(v44 + 32));
  sub_240BB4A10();
  sub_240BB4B00();
  uint64_t v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_240BBE9E0;
  id result = objc_msgSend(v12, sel__quantityTypeWithCode_, 248);
  if (!result)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_240BB4BB0();
  uint64_t v48 = sub_240BB4BC0();
  uint64_t v49 = MEMORY[0x263F443C0];
  *(void *)(v47 + 56) = v48;
  *(void *)(v47 + 64) = v49;
  sub_240A23B08((uint64_t *)(v47 + 32));
  sub_240BB4BA0();
  uint64_t v75 = 0;
  memset(v74, 0, sizeof(v74));
  *(void *)(v47 + 96) = &_s22AFibBurdenPDFComponentVN;
  *(void *)(v47 + 104) = sub_240ABCD88();
  uint64_t v50 = swift_allocObject();
  *(void *)(v47 + 72) = v50;
  strcpy((char *)&v70, "AFibBurdenPDF");
  HIWORD(v70) = -4864;
  long long v71 = 0u;
  long long v72 = 0u;
  uint64_t v73 = 0;
  sub_240ABCE24((uint64_t)v74, (uint64_t)&v71);
  long long v51 = v71;
  *(_OWORD *)(v50 + 16) = v70;
  *(_OWORD *)(v50 + 32) = v51;
  *(_OWORD *)(v50 + 48) = v72;
  *(void *)(v50 + 64) = v73;
  id result = objc_msgSend(v12, sel__quantityTypeWithCode_, 248);
  if (!result)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  id v52 = result;
  *(void *)(v47 + 136) = &_s34AFibBurdenDisclosureItemsComponentVN;
  *(void *)(v47 + 144) = sub_240ABCEB4();
  *(void *)(v47 + 112) = v52;
  *(void *)(v47 + 120) = 0xD000000000000019;
  *(void *)(v47 + 128) = 0x8000000240BCD580;
  id result = objc_msgSend(v12, sel__quantityTypeWithCode_, 248);
  if (result)
  {
    (*(void (**)(char *, void, uint64_t))(v59 + 104))(v61, *MEMORY[0x263F446D0], v60);
    uint64_t v53 = sub_240BB4B70();
    uint64_t v54 = MEMORY[0x263F443A8];
    *(void *)(v47 + 176) = v53;
    *(void *)(v47 + 184) = v54;
    sub_240A23B08((uint64_t *)(v47 + 152));
    sub_240BB4B60();
    uint64_t v55 = sub_240BB4B90();
    uint64_t v56 = MEMORY[0x263F443B8];
    *(void *)(v44 + 96) = v55;
    *(void *)(v44 + 104) = v56;
    sub_240A23B08((uint64_t *)(v44 + 72));
    sub_240BB4B80();
    *(void *)(v11 + 336) = v58;
    *(void *)(v11 + 344) = MEMORY[0x263F443C8];
    sub_240A23B08((uint64_t *)(v11 + 312));
    sub_240BB4B80();
    return (id)sub_240BB4A60();
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_240ABC590()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Heart45AFibBurdenDataTypeDetailConfigurationProvider_context;
  uint64_t v2 = sub_240BB4C70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_240BB50A0();

  return swift_deallocClassInstance();
}

uint64_t sub_240ABC640()
{
  return type metadata accessor for AFibBurdenDataTypeDetailConfigurationProvider();
}

uint64_t type metadata accessor for AFibBurdenDataTypeDetailConfigurationProvider()
{
  uint64_t result = qword_268C9FF68;
  if (!qword_268C9FF68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240ABC694()
{
  uint64_t result = sub_240BB4C70();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_240ABC72C@<X0>(uint64_t a1@<X8>)
{
  return sub_240ABBAFC(a1);
}

uint64_t type metadata accessor for AFibBurdenDetailViewControllerDebugActionProviding()
{
  return self;
}

unint64_t sub_240ABC780(uint64_t a1)
{
  sub_240BB7BC0();
  sub_240BB7BD0();
  uint64_t v2 = sub_240BB7C00();

  return sub_240ABC7EC(a1, v2);
}

unint64_t sub_240ABC7EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      unint64_t result = (result + 1) & v8;
      if (((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0
        && *(void *)(v7 + 8 * result) != a1)
      {
        for (unint64_t result = (result + 1) & v8;
              ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
              unint64_t result = (result + 1) & v8)
        {
          if (*(void *)(v7 + 8 * result) == a1) {
            break;
          }
        }
      }
    }
  }
  return result;
}

unint64_t sub_240ABC8B8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_240ABCF08();
    uint64_t v3 = (void *)sub_240BB7950();
    for (unint64_t i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      unint64_t result = sub_240ABC780(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v9 = 8 * result;
      *(void *)(v3[6] + v9) = v5;
      *(void *)(v3[7] + v9) = v6;
      uint64_t v10 = v3[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

uint64_t sub_240ABC98C(void *a1)
{
  id v2 = objc_msgSend(a1, sel_resolvedHealthStore);
  if (!v2) {
    id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
  }
  sub_240BB7270();
  sub_240A1E37C((uint64_t)v10, (uint64_t)v8);
  id v3 = v2;
  sub_240A9488C(v3, (uint64_t)v8, v9);
  sub_240ABCA78((uint64_t)v9, (uint64_t)v8);
  sub_240ABCAD4();
  id v5 = objc_allocWithZone(v4);
  uint64_t v6 = (void *)sub_240BB67A0();
  objc_msgSend(a1, sel_showViewController_sender_, v6, 0);

  sub_240ABCB84((uint64_t)v9);
  return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v10);
}

uint64_t sub_240ABCA78(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_240ABCAD4()
{
  if (!qword_268C9FF78)
  {
    sub_240ABCB30();
    unint64_t v0 = sub_240BB67B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9FF78);
    }
  }
}

unint64_t sub_240ABCB30()
{
  unint64_t result = qword_268C9FF80;
  if (!qword_268C9FF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9FF80);
  }
  return result;
}

uint64_t sub_240ABCB84(uint64_t a1)
{
  return a1;
}

unint64_t sub_240ABCBD8()
{
  unint64_t result = qword_268C9FF88;
  if (!qword_268C9FF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9FF88);
  }
  return result;
}

uint64_t sub_240ABCC2C()
{
  swift_bridgeObjectRelease();
  sub_240BB50A0();
  if (*(void *)(v0 + 80)) {
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 56);
  }

  return MEMORY[0x270FA0238](v0, 96, 7);
}

unint64_t sub_240ABCC84()
{
  unint64_t result = qword_268C9FF90;
  if (!qword_268C9FF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9FF90);
  }
  return result;
}

uint64_t sub_240ABCCD8()
{
  swift_bridgeObjectRelease();
  sub_240BB50A0();

  return MEMORY[0x270FA0238](v0, 57, 7);
}

void sub_240ABCD20(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_240A39BC8(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_240ABCD88()
{
  unint64_t result = qword_268C9FFA0;
  if (!qword_268C9FFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9FFA0);
  }
  return result;
}

uint64_t sub_240ABCDDC()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56)) {
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 32);
  }

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_240ABCE24(uint64_t a1, uint64_t a2)
{
  sub_240ABCD20(0, (unint64_t *)&qword_26AFD7BD8, &qword_26AFD7BD0, MEMORY[0x263F449A0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_240ABCEB4()
{
  unint64_t result = qword_268C9FFA8;
  if (!qword_268C9FFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9FFA8);
  }
  return result;
}

void sub_240ABCF08()
{
  if (!qword_268C9FFB0)
  {
    type metadata accessor for UIUserInterfaceSizeClass(255);
    sub_240ABCFA4(&qword_268C9FFB8, type metadata accessor for UIUserInterfaceSizeClass);
    unint64_t v0 = sub_240BB7960();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C9FFB0);
    }
  }
}

uint64_t sub_240ABCFA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for AtrialFibrillationPromotionTileActionHandler()
{
  uint64_t result = qword_268C9FFC8;
  if (!qword_268C9FFC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240ABD038()
{
  return swift_initClassMetadata2();
}

void sub_240ABD084()
{
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_240BB5990();
  sub_240A395FC(v1, (uint64_t)qword_26AFDEC70);
  id v2 = v0;
  id v3 = sub_240BB5970();
  os_log_type_t v4 = sub_240BB71A0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v9 = v6;
    *(_DWORD *)uint64_t v5 = 136446466;
    swift_getObjectType();
    sub_240ABDAA8();
    uint64_t v7 = sub_240BB6E10();
    sub_240A38940(v7, v8, &v9);
    sub_240BB75F0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2082;
    sub_240A38940(0x2928706154646964, 0xE800000000000000, &v9);
    sub_240BB75F0();
    _os_log_impl(&dword_240A1B000, v3, v4, "[%{public}s.%{public}s] On-boarding button tapped", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v6, -1, -1);
    MEMORY[0x24560B930](v5, -1, -1);
  }
  else
  {
  }
  sub_240ABD280();
}

void sub_240ABD280()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_240BB4EC0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v23[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB5250();
  sub_240BB4E90();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v3 + 8);
  v6(v5, v2);
  sub_240A3466C(v23, v23[3]);
  uint64_t v7 = (void *)sub_240BB4E10();
  if (qword_268C9E770 != -1) {
    swift_once();
  }
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F476A8]), sel_initWithOnboardingType_isFirstTimeOnboarding_healthStore_dateCache_provenance_delegate_, 0, 1, v7, qword_268CA2BA8, 3, v1);

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v23);
  uint64_t v9 = qword_268C9FFC0;
  uint64_t v10 = *(void **)&v1[qword_268C9FFC0];
  *(void *)&v1[qword_268C9FFC0] = v8;

  BOOL v11 = *(void **)&v1[v9];
  if (v11
    && (uint64_t v12 = (char *)objc_msgSend(v11, sel_onboardingNavigationController)) != 0)
  {
    id v13 = v12;
    objc_msgSend(v12, sel_setModalInPresentation_, 1);
    sub_240BB5250();
    id v14 = (void *)sub_240BB4EA0();
    v6(v5, v2);
    objc_msgSend(v14, sel_showViewController_sender_, v13, 0);
  }
  else
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_240BB5990();
    sub_240A395FC(v15, (uint64_t)qword_26AFDEC70);
    id v13 = v1;
    uint64_t v16 = sub_240BB5970();
    os_log_type_t v17 = sub_240BB7190();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      v23[0] = v19;
      *(_DWORD *)uint64_t v18 = 136446466;
      uint64_t ObjectType = swift_getObjectType();
      sub_240ABDAA8();
      uint64_t v20 = sub_240BB6E10();
      uint64_t ObjectType = sub_240A38940(v20, v21, v23);
      sub_240BB75F0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2082;
      uint64_t ObjectType = sub_240A38940(0xD000000000000013, 0x8000000240BCA330, v23);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v16, v17, "[%{public}s.%{public}s] On-boarding navigation controller not initialized", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v19, -1, -1);
      MEMORY[0x24560B930](v18, -1, -1);

      return;
    }
  }
}

uint64_t sub_240ABD64C(uint64_t a1)
{
  uint64_t v3 = sub_240BB4EC0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (char *)objc_allocWithZone(v1);
  *(void *)&v7[qword_268C9FFC0] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t v8 = sub_240BB5260();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v8;
}

void sub_240ABD758()
{
}

id sub_240ABD768()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AtrialFibrillationPromotionTileActionHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_240ABD7A0(uint64_t a1)
{
}

uint64_t sub_240ABD7B0()
{
  return type metadata accessor for AtrialFibrillationPromotionTileActionHandler();
}

uint64_t sub_240ABD7BC(uint64_t a1)
{
  *(void *)(a1 + qword_268C9FFC0) = 0;
  return MEMORY[0x270F9A758]();
}

void sub_240ABD7D0()
{
  uint64_t v1 = sub_240BB4EC0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)(v0 + qword_268C9FFC0);
  *(void *)(v0 + qword_268C9FFC0) = 0;

  sub_240BB5250();
  uint64_t v6 = (void *)sub_240BB4EA0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  id v7 = objc_msgSend(v6, sel_tabBarController);

  if (v7)
  {
    id v8 = objc_msgSend(self, sel_atrialFibrillationEventType);
    if (v8)
    {
      id v9 = v8;
      type metadata accessor for AtrialFibrillationPromotionTileActionHandler();
      sub_240ABDA60(&qword_268C9FE90, (void (*)(uint64_t))type metadata accessor for AtrialFibrillationPromotionTileActionHandler);
      uint64_t v10 = (void *)sub_240BB51D0();
      if (v10)
      {
        BOOL v11 = v10;
        sub_240AA7788(v10, 0);

        id v7 = v9;
        id v9 = v11;
      }

      id v7 = v9;
    }
  }
}

void sub_240ABD988(void *a1)
{
  id v1 = a1;
  sub_240ABD7D0();
}

uint64_t sub_240ABD9D0()
{
  return sub_240ABDA60(&qword_26AFD7A28, MEMORY[0x263F43E20]);
}

uint64_t sub_240ABDA18()
{
  return sub_240ABDA60((unint64_t *)&unk_268C9FFE0, (void (*)(uint64_t))type metadata accessor for AtrialFibrillationPromotionTileActionHandler);
}

uint64_t sub_240ABDA60(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_240ABDAA8()
{
  unint64_t result = qword_268C9FFF0;
  if (!qword_268C9FFF0)
  {
    type metadata accessor for AtrialFibrillationPromotionTileActionHandler();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C9FFF0);
  }
  return result;
}

id sub_240ABDAE4()
{
  objc_msgSend(*(id *)(*sub_240A3466C(&v0[OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_heartSettingsUtilityProvider], *(void *)&v0[OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_heartSettingsUtilityProvider+ 24])+ 16), sel_removeHeartRhythmAvailabilityObserver_, v0);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TachycardiaAdvertisableFeatureSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240ABDC74()
{
  return type metadata accessor for TachycardiaAdvertisableFeatureSource();
}

uint64_t type metadata accessor for TachycardiaAdvertisableFeatureSource()
{
  uint64_t result = qword_268CA0018;
  if (!qword_268CA0018) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240ABDCC8()
{
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26AFDECD8;
  uint64_t v1 = sub_240BB2980();
  uint64_t v3 = v2;
  uint64_t v4 = sub_240BB2980();
  uint64_t v6 = v5;
  id v7 = v0;
  id v8 = (void *)sub_240BB6DA0();
  id v9 = objc_msgSend(self, sel_imageNamed_inBundle_, v8, v7, 0xE000000000000000);

  return MEMORY[0x270F32468](v1, v3, v4, v6, v9);
}

uint64_t sub_240ABDE54(uint64_t a1, uint64_t a2)
{
  return sub_240ABDF14(a1, a2, (uint64_t)&unk_26F5063E8, (uint64_t)sub_240ABFBBC, (uint64_t)&unk_26F506400);
}

void sub_240ABDE7C(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5 = a1 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x24560BA20](v5);
  if (v6)
  {
    id v7 = (void *)v6;
    sub_240ABE7EC(a2, a3);
  }
}

uint64_t sub_240ABDEEC(uint64_t a1, uint64_t a2)
{
  return sub_240ABDF14(a1, a2, (uint64_t)&unk_26F506398, (uint64_t)sub_240ABFBAC, (uint64_t)&unk_26F5063B0);
}

uint64_t sub_240ABDF14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v20 = a4;
  uint64_t v21 = a5;
  uint64_t v8 = sub_240BB6B90();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  BOOL v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_240BB6BC0();
  uint64_t v12 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  id v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void *)(v5 + OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_queue);
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v16 = (void *)swift_allocObject();
  _OWORD v16[2] = v15;
  v16[3] = a1;
  v16[4] = a2;
  aBlock[4] = v20;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_240A87354;
  aBlock[3] = v21;
  os_log_type_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_240BB6BB0();
  uint64_t v24 = MEMORY[0x263F8EE78];
  sub_240ABFA18((unint64_t *)&qword_26AFD98C8, MEMORY[0x263F8F030]);
  sub_240AAA4B8();
  sub_240ABFA18((unint64_t *)&qword_26AFD98F8, (void (*)(uint64_t))sub_240AAA4B8);
  sub_240BB7670();
  MEMORY[0x24560A5E0](0, v14, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v23);
  swift_release();
  return swift_release();
}

void sub_240ABE218(uint64_t a1, void (*a2)(char *))
{
  sub_240ABFAB0(0, (unint64_t *)&qword_268C9E898);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v9 - v5;
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x24560BA20](a1 + 16);
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    sub_240BB3830();
    sub_240ABFA18(&qword_268C9E8A0, MEMORY[0x263F437A8]);
    sub_240BB7C10();
    a2(v6);
    sub_240ABFB4C((uint64_t)v6, (unint64_t *)&qword_268C9E898);
  }
}

uint64_t sub_240ABE34C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_240BB6B90();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  BOOL v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_240BB6BC0();
  uint64_t v12 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  id v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(void *)(v4 + OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_queue);
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(unsigned char *)(v16 + 24) = a1;
  *(void *)(v16 + 32) = a2;
  *(void *)(v16 + 40) = a3;
  aBlock[4] = sub_240ABFAA0;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_240A87354;
  aBlock[3] = &unk_26F506360;
  os_log_type_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_240BB6BB0();
  uint64_t v21 = MEMORY[0x263F8EE78];
  sub_240ABFA18((unint64_t *)&qword_26AFD98C8, MEMORY[0x263F8F030]);
  sub_240AAA4B8();
  sub_240ABFA18((unint64_t *)&qword_26AFD98F8, (void (*)(uint64_t))sub_240AAA4B8);
  sub_240BB7670();
  MEMORY[0x24560A5E0](0, v14, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v20);
  swift_release();
  return swift_release();
}

void sub_240ABE668(uint64_t a1, char a2, void (*a3)(char *))
{
  sub_240ABFAB0(0, (unint64_t *)&qword_268C9E898);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v12 - v7;
  swift_beginAccess();
  uint64_t v9 = MEMORY[0x24560BA20](a1 + 16);
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    if (a2)
    {
      objc_msgSend(self, sel_tachycardiaThresholdHeartRate);
      BOOL v11 = (void *)sub_240BB70C0();
    }
    else
    {
      BOOL v11 = 0;
    }
    objc_msgSend(self, sel_setTachycardiaThresholdHeartRate_, v11);
    sub_240BB3830();
    sub_240ABFA18(&qword_268C9E8A0, MEMORY[0x263F437A8]);
    sub_240BB7C10();
    a3(v8);

    sub_240ABFB4C((uint64_t)v8, (unint64_t *)&qword_268C9E898);
  }
}

uint64_t sub_240ABE7EC(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v72 = a2;
  uint64_t v73 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_240BB5990();
  uint64_t v68 = *(void *)(v3 - 8);
  uint64_t v69 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v66 = (char *)&v62 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v63 = (char *)&v62 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v64 = (char *)&v62 - v11;
  sub_240ABFAB0(0, &qword_268C9FC68);
  uint64_t v71 = v12;
  MEMORY[0x270FA5388](v12);
  long long v70 = (char *)&v62 - v13;
  uint64_t v14 = sub_240BB2CF0();
  uint64_t v65 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_240BB2D40();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (void *)(v2 + OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_heartSettingsUtilityProvider);
  sub_240A3466C((void *)(v2 + OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_heartSettingsUtilityProvider), *(void *)(v2 + OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_heartSettingsUtilityProvider + 24));
  sub_240B42F60();
  if (!v22) {
    goto LABEL_9;
  }
  uint64_t v23 = v22;
  id v24 = HKNRDeviceCapabilityHeartRateV2();
  sub_240BB2D20();

  uint64_t v25 = (void *)sub_240BB2D10();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  unsigned int v26 = objc_msgSend(v23, sel_supportsCapability_, v25);

  if (!v26)
  {
LABEL_9:
    sub_240BB5940();
    uint64_t v44 = sub_240BB5970();
    os_log_type_t v45 = sub_240BB71A0();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      uint64_t v75 = v47;
      *(_DWORD *)uint64_t v46 = 136315394;
      uint64_t v48 = sub_240BB7C80();
      uint64_t v74 = sub_240A38940(v48, v49, &v75);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v46 + 12) = 2080;
      uint64_t v74 = sub_240A38940(0xD00000000000002BLL, 0x8000000240BCC770, &v75);
      sub_240BB75F0();
      _os_log_impl(&dword_240A1B000, v44, v45, "[%s] %s -> false: heart rate motion context not supported on active watch", (uint8_t *)v46, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v47, -1, -1);
      MEMORY[0x24560B930](v46, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v68 + 8))(v6, v69);
    goto LABEL_19;
  }
  long long v27 = self;
  if (objc_msgSend(v27, sel_isBackgroundHeartRateEnabled))
  {
    uint64_t v28 = *sub_240A3466C(v21, v21[3]);
    sub_240B42F60();
    if (v29)
    {
      uint64_t v30 = v29;
      uint64_t v31 = *(void **)(v28 + 16);
      sub_240BB2CE0();
      uint64_t v32 = (void *)sub_240BB2C90();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v16, v14);
      unsigned __int8 v33 = objc_msgSend(v31, sel_isHeartAgeGatingEnabledOnWatch_currentDate_, v30, v32);

      if (v33)
      {
        uint64_t v34 = v63;
        sub_240BB5940();
        uint64_t v35 = sub_240BB5970();
        os_log_type_t v36 = sub_240BB71A0();
        BOOL v37 = os_log_type_enabled(v35, v36);
        uint64_t v38 = v68;
        if (v37)
        {
          uint64_t v39 = swift_slowAlloc();
          uint64_t v40 = swift_slowAlloc();
          uint64_t v75 = v40;
          *(_DWORD *)uint64_t v39 = 136315394;
          uint64_t v41 = sub_240BB7C80();
          uint64_t v74 = sub_240A38940(v41, v42, &v75);
          sub_240BB75F0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v39 + 12) = 2080;
          uint64_t v74 = sub_240A38940(0xD00000000000002BLL, 0x8000000240BCC770, &v75);
          sub_240BB75F0();
          _os_log_impl(&dword_240A1B000, v35, v36, "[%s] %s -> false: heart age gating enabled on active watch", (uint8_t *)v39, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x24560B930](v40, -1, -1);
          MEMORY[0x24560B930](v39, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v38 + 8))(v34, v69);
        uint64_t v43 = (uint64_t)v70;
        *long long v70 = 0;
        goto LABEL_22;
      }
    }
    if ((objc_msgSend(v27, sel_isTachycardiaDetectionEnabled) & 1) == 0)
    {
      uint64_t v43 = (uint64_t)v70;
      *long long v70 = 1;
LABEL_22:
      uint64_t v60 = v73;
      goto LABEL_20;
    }
    uint64_t v50 = v64;
    sub_240BB5940();
    long long v51 = sub_240BB5970();
    os_log_type_t v52 = sub_240BB71A0();
    if (!os_log_type_enabled(v51, v52)) {
      goto LABEL_18;
    }
    uint64_t v53 = swift_slowAlloc();
    uint64_t v54 = swift_slowAlloc();
    uint64_t v75 = v54;
    *(_DWORD *)uint64_t v53 = 136315394;
    uint64_t v58 = sub_240BB7C80();
    uint64_t v74 = sub_240A38940(v58, v59, &v75);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v53 + 12) = 2080;
    uint64_t v74 = sub_240A38940(0xD00000000000002BLL, 0x8000000240BCC770, &v75);
    sub_240BB75F0();
    uint64_t v57 = "[%s] %s -> false: detection already enabled";
    goto LABEL_17;
  }
  uint64_t v50 = v66;
  sub_240BB5940();
  long long v51 = sub_240BB5970();
  os_log_type_t v52 = sub_240BB71A0();
  if (os_log_type_enabled(v51, v52))
  {
    uint64_t v53 = swift_slowAlloc();
    uint64_t v54 = swift_slowAlloc();
    uint64_t v75 = v54;
    *(_DWORD *)uint64_t v53 = 136315394;
    uint64_t v55 = sub_240BB7C80();
    uint64_t v74 = sub_240A38940(v55, v56, &v75);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v53 + 12) = 2080;
    uint64_t v74 = sub_240A38940(0xD00000000000002BLL, 0x8000000240BCC770, &v75);
    sub_240BB75F0();
    uint64_t v57 = "[%s] %s -> false: background heart rate not enabled";
LABEL_17:
    _os_log_impl(&dword_240A1B000, v51, v52, v57, (uint8_t *)v53, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v54, -1, -1);
    MEMORY[0x24560B930](v53, -1, -1);
  }
LABEL_18:

  (*(void (**)(char *, uint64_t))(v68 + 8))(v50, v69);
LABEL_19:
  uint64_t v60 = v73;
  uint64_t v43 = (uint64_t)v70;
  *long long v70 = 0;
LABEL_20:
  swift_storeEnumTagMultiPayload();
  v60(v43);
  return sub_240ABFB4C(v43, &qword_268C9FC68);
}

uint64_t sub_240ABF164()
{
  uint64_t result = sub_240BB3670();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_240ABF218@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_identifier;
  uint64_t v4 = sub_240BB3670();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_240ABF28C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_delegate;
  swift_beginAccess();
  return MEMORY[0x24560BA20](v1);
}

uint64_t sub_240ABF2DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return sub_240BB50A0();
}

void (*sub_240ABF348(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x24560BA20](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_240A8003C;
}

uint64_t sub_240ABF3D0()
{
  return sub_240ABDCC8();
}

uint64_t sub_240ABF3F4()
{
  uint64_t v1 = sub_240BB6B90();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_240BB6BC0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = *(void *)(v0 + OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_queue);
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_240ABFA08;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_240A87354;
  aBlock[3] = &unk_26F506310;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  sub_240BB6BB0();
  v12[1] = MEMORY[0x263F8EE78];
  sub_240ABFA18((unint64_t *)&qword_26AFD98C8, MEMORY[0x263F8F030]);
  sub_240AAA4B8();
  sub_240ABFA18((unint64_t *)&qword_26AFD98F8, (void (*)(uint64_t))sub_240AAA4B8);
  sub_240BB7670();
  MEMORY[0x24560A5E0](0, v8, v4, v10);
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  return swift_release();
}

uint64_t sub_240ABF6D8(uint64_t a1)
{
  uint64_t v2 = a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x24560BA20](v2);
  if (result)
  {
    uint64_t v4 = (void *)result;
    swift_retain();
    sub_240ABE7EC(sub_240ABFA10, a1);

    return swift_release();
  }
  return result;
}

void sub_240ABF758(uint64_t a1, uint64_t a2)
{
  sub_240ABFAB0(0, &qword_268C9FC68);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = &v11[-v5];
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x24560BA20](a2 + 16);
  if (v7)
  {
    uint64_t v8 = (char *)v7;
    sub_240AAA518(a1, (uint64_t)v6);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_240ABFB4C((uint64_t)v6, &qword_268C9FC68);
      uint64_t v9 = &v8[OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_delegate];
      swift_beginAccess();
      if (MEMORY[0x24560BA20](v9))
      {
LABEL_4:
        swift_getObjectType();
        sub_240ABFA18(&qword_268CA0028, (void (*)(uint64_t))type metadata accessor for TachycardiaAdvertisableFeatureSource);
        sub_240BB3970();

        sub_240BB50A0();
        return;
      }
    }
    else
    {
      uint64_t v10 = &v8[OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_delegate];
      swift_beginAccess();
      if (MEMORY[0x24560BA20](v10)) {
        goto LABEL_4;
      }
    }
  }
}

uint64_t sub_240ABF9D0()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240ABFA08()
{
  return sub_240ABF6D8(v0);
}

void sub_240ABFA10(uint64_t a1)
{
  sub_240ABF758(a1, v1);
}

uint64_t sub_240ABFA18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240ABFA60()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_240ABFAA0()
{
  sub_240ABE668(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void (**)(char *))(v0 + 32));
}

void sub_240ABFAB0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    sub_240BB3830();
    sub_240ABFA18(&qword_268C9E8A0, MEMORY[0x263F437A8]);
    unint64_t v3 = sub_240BB7C20();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_240ABFB4C(uint64_t a1, unint64_t *a2)
{
  sub_240ABFAB0(0, a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_240ABFBAC()
{
  sub_240ABE218(*(void *)(v0 + 16), *(void (**)(char *))(v0 + 24));
}

void sub_240ABFBBC()
{
  sub_240ABDE7C(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t type metadata accessor for CardioFitnessHealthChecklistSpecifierDataSource(uint64_t a1)
{
  return sub_240A3E6AC(a1, (uint64_t *)&unk_268CA0078);
}

uint64_t sub_240ABFC00()
{
  uint64_t result = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_240ABFCD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_268CA0070;
  swift_beginAccess();
  uint64_t v4 = v3 + *(int *)(type metadata accessor for CardioFitnessHealthChecklistSettingsState() + 20);
  uint64_t v5 = sub_240BB3660();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, v4, v5);
}

void sub_240ABFD6C()
{
  swift_getObjectType();
  sub_240AC2920(0, (unint64_t *)&unk_26AFD9960, MEMORY[0x263F8F110]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v25 - v2;
  sub_240AC2A70();
  uint64_t v5 = v4;
  uint64_t v27 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AC2B64();
  uint64_t v9 = v8;
  uint64_t v28 = *(NSObject **)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void **)(v0 + qword_268CA0040);
  id v13 = objc_msgSend(v12, sel_profileIdentifier);
  id v14 = objc_msgSend(v13, sel_type);

  if (v14 == (id)1
    && (id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3D0]), sel_initWithFeatureIdentifier_healthStore_, *MEMORY[0x263F09730], v12)) != 0)
  {
    uint64_t v16 = v15;
    sub_240A34DC4(0, (unint64_t *)&qword_26AFD75D0);
    id v26 = v16;
    v29[0] = (id)sub_240BB57C0();
    sub_240A22390();
    type metadata accessor for CardioFitnessHealthChecklistSettingsState();
    sub_240AC2B1C((unint64_t *)&qword_26AFD8A30, (void (*)(uint64_t))sub_240A22390);
    sub_240BB62F0();
    swift_release();
    sub_240A34DC4(0, (unint64_t *)&qword_26AFD9980);
    v29[0] = (id)sub_240BB7310();
    uint64_t v17 = sub_240BB72F0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v3, 1, 1, v17);
    sub_240AC2B1C(&qword_268CA00C0, (void (*)(uint64_t))sub_240AC2A70);
    sub_240A805DC();
    sub_240BB6400();
    sub_240AC2CD4((uint64_t)v3, (unint64_t *)&unk_26AFD9960, MEMORY[0x263F8F110]);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v5);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_240AC2B1C(&qword_268CA00C8, (void (*)(uint64_t))sub_240AC2B64);
    sub_240BB6450();
    swift_release();
    ((void (*)(char *, uint64_t))v28[1].isa)(v11, v9);
    swift_beginAccess();
    sub_240BB6120();
    swift_endAccess();

    swift_release();
  }
  else
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_240BB5990();
    sub_240A395FC(v18, (uint64_t)qword_26AFDEC70);
    uint64_t v28 = sub_240BB5970();
    os_log_type_t v19 = sub_240BB7190();
    if (os_log_type_enabled(v28, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = (void *)swift_slowAlloc();
      v29[0] = v21;
      *(_DWORD *)uint64_t v20 = 136446210;
      uint64_t v22 = sub_240BB7C80();
      void v29[3] = (id)sub_240A38940(v22, v23, (uint64_t *)v29);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v28, v19, "[%{public}s] Unable to get feature status provider from health store, is this not a primary profile?", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v21, -1, -1);
      MEMORY[0x24560B930](v20, -1, -1);
    }
    else
    {
      id v24 = v28;
    }
  }
}

uint64_t sub_240AC03A8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  sub_240AC2920(0, (unint64_t *)&unk_26AFD7148, MEMORY[0x263F437D8]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v16 - v5;
  uint64_t v7 = sub_240BB38D0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)sub_240BB56F0();
  sub_240A6AC00(v11, (uint64_t (*)(uint64_t))sub_240A6ABF8, (void (*)(uint64_t))sub_240A6ABFC, (uint64_t)v6);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_240AC2CD4((uint64_t)v6, (unint64_t *)&unk_26AFD7148, MEMORY[0x263F437D8]);
    uint64_t v12 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a2, 1, 1, v12);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    double v14 = sub_240A6F4C4(a1, a2);
    (*(void (**)(char *, uint64_t, double))(v8 + 8))(v10, v7, v14);
    uint64_t v15 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 0, 1, v15);
  }
}

void sub_240AC0618(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a2 + 16;
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x24560BA20](v7);
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    sub_240AC240C(a1, (uint64_t)v6);
    uint64_t v10 = (uint64_t)v9 + qword_268CA0070;
    swift_beginAccess();
    sub_240AC2C70((uint64_t)v6, v10);
    swift_endAccess();
  }
  swift_beginAccess();
  uint64_t v11 = MEMORY[0x24560BA20](v7);
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    uint64_t v13 = v11 + qword_268CA0060;
    swift_beginAccess();
    uint64_t v14 = MEMORY[0x24560BA20](v13);

    if (v14)
    {
      swift_getObjectType();
      sub_240BB4F80();
      sub_240BB50A0();
    }
  }
}

uint64_t sub_240AC0770@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  uint64_t v4 = sub_240BB3660();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_240BB36D0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240B70BE8();
  uint64_t v12 = sub_240BB36B0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v12)
  {
    uint64_t v13 = v2 + qword_268CA0070;
    swift_beginAccess();
    uint64_t v14 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v13 + *(int *)(v14 + 20), v4);
    sub_240BB3700();
    sub_240BB36E0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_240BB4850();
    sub_240BB5010();
    uint64_t v15 = sub_240BB5020();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = sub_240BB5020();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 1, 1, v17);
  }
}

uint64_t sub_240AC0A18()
{
  unint64_t v8 = MEMORY[0x263F8EE78];
  unint64_t v0 = sub_240AC0B18();
  sub_240B85BDC(v0);
  unint64_t v1 = sub_240AC10D0();
  sub_240B85BDC(v1);
  unint64_t v2 = v8;
  if (v8 >> 62)
  {
    sub_240BB4850();
    uint64_t v7 = sub_240BB78F0();
    swift_bridgeObjectRelease_n();
    return v7;
  }
  else
  {
    uint64_t v3 = v8 & 0xFFFFFFFFFFFFFF8;
    sub_240BB4850();
    sub_240BB7AF0();
    if (swift_dynamicCastMetatype() || (uint64_t v5 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_3:
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v6 = (void *)(v3 + 32);
      while (*v6)
      {
        ++v6;
        if (!--v5) {
          goto LABEL_3;
        }
      }
      swift_bridgeObjectRelease();
      return v3 | 1;
    }
    return v2;
  }
}

uint64_t sub_240AC0B18()
{
  swift_getObjectType();
  uint64_t v41 = MEMORY[0x263F8EE78];
  unint64_t v1 = self;
  unint64_t v2 = (void *)sub_240BB6DA0();
  id v3 = objc_msgSend(v1, sel_groupSpecifierWithID_, v2);

  if (v3)
  {
    uint64_t v4 = v0 + qword_268CA0070;
    swift_beginAccess();
    uint64_t v5 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
    uint64_t v6 = (uint64_t *)(v4 + *(int *)(v5 + 28));
    uint64_t v39 = *v6;
    uint64_t v7 = v6[3];
    if (v7)
    {
      uint64_t v8 = v5;
      uint64_t v9 = v6[2];
      sub_240BB4850();
      sub_240AC28DC(v9, v7);
      swift_bridgeObjectRelease();
      uint64_t v10 = (void *)(v4 + *(int *)(v8 + 28));
      if (!v10[3])
      {
        uint64_t v11 = 0;
        uint64_t v12 = 0;
        goto LABEL_13;
      }
      uint64_t v11 = v10[4];
      uint64_t v12 = v10[5];
    }
    else
    {
      uint64_t v11 = 0;
      uint64_t v12 = 0;
    }
    sub_240BB4850();
LABEL_13:
    id v20 = objc_msgSend(self, sel_cardioFitnessWristDetectFooterLinkURL);
    uint64_t v21 = sub_240BB6DE0();
    uint64_t v23 = v22;

    if (v12)
    {
      if (v11 == v21 && v12 == v23)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_240BB7AE0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    id v24 = objc_allocWithZone(NSString);
    sub_240BB4850();
    uint64_t v25 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
    id v26 = objc_msgSend(v24, sel_initWithString_, v25);

    uint64_t v27 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
    id v28 = objc_msgSend(v26, sel_localizedStandardRangeOfString_, v27);
    NSUInteger v30 = v29;

    sub_240A34DC4(0, &qword_268C9F5A8);
    uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
    uint64_t v32 = NSStringFromClass(ObjCClassFromMetadata);
    if (!v32)
    {
      sub_240BB6DE0();
      uint64_t v32 = (NSString *)sub_240BB6DA0();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v3, sel_setProperty_forKey_, v32, *MEMORY[0x263F600C0], v39);

    unsigned __int8 v33 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setProperty_forKey_, v33, *MEMORY[0x263F600E8]);

    v42.location = (NSUInteger)v28;
    v42.length = v30;
    uint64_t v34 = NSStringFromRange(v42);
    if (!v34)
    {
      sub_240BB6DE0();
      uint64_t v34 = (NSString *)sub_240BB6DA0();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v3, sel_setProperty_forKey_, v34, *MEMORY[0x263F600D0]);

    id v35 = objc_msgSend(self, sel_valueWithNonretainedObject_, v0);
    objc_msgSend(v3, sel_setProperty_forKey_, v35, *MEMORY[0x263F600E0]);
    sub_240BB2F90();
    os_log_type_t v36 = (void *)sub_240BB6DA0();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setProperty_forKey_, v36, *MEMORY[0x263F600C8]);

    id v37 = v3;
    MEMORY[0x24560A190]();
    if (*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_240BB6F60();
    }
    sub_240BB6F70();
    sub_240BB6F30();

    return v41;
  }
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_240BB5990();
  sub_240A395FC(v13, (uint64_t)qword_26AFDEC70);
  uint64_t v14 = sub_240BB5970();
  os_log_type_t v15 = sub_240BB7180();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    v40[0] = v17;
    *(_DWORD *)uint64_t v16 = 136446210;
    uint64_t v18 = sub_240BB7C80();
    void v40[3] = sub_240A38940(v18, v19, v40);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v14, v15, "[%{public}s] Could not get specifier footer content.", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v17, -1, -1);
    MEMORY[0x24560B930](v16, -1, -1);
  }

  return v41;
}

uint64_t sub_240AC10D0()
{
  uint64_t v8 = MEMORY[0x263F8EE78];
  id v1 = objc_msgSend(self, sel_cardioFitnessTitleDescription);
  if (!v1)
  {
    sub_240BB6DE0();
    id v1 = (id)sub_240BB6DA0();
    swift_bridgeObjectRelease();
  }
  id v2 = objc_msgSend(self, sel_preferenceSpecifierNamed_target_set_get_detail_cell_edit_, v1, v0, sel_setCardioFitnessEnabledWithValue_, sel_isCardioFitnessEnabled, 0, 6, 0);

  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
  id v3 = (void *)sub_240BB6DA0();
  objc_msgSend(v2, sel_setIdentifier_, v3);

  swift_beginAccess();
  uint64_t v4 = (void *)sub_240BB6F90();
  objc_msgSend(v2, sel_setProperty_forKey_, v4, *MEMORY[0x263F600A8]);

  uint64_t v5 = (void *)sub_240BB6F90();
  objc_msgSend(v2, sel_setProperty_forKey_, v5, *MEMORY[0x263F5FEF8]);

  id v6 = v2;
  MEMORY[0x24560A190]();
  if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_240BB6F60();
  }
  sub_240BB6F70();
  sub_240BB6F30();

  return v8;
}

id sub_240AC12B8(uint64_t a1)
{
  id v1 = (unsigned __int8 *)(a1 + qword_268CA0070);
  swift_beginAccess();
  id v2 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, *v1 == 1);

  return v2;
}

uint64_t sub_240AC1334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned char v6[16] = a5;
  v6[17] = a6;
  v6[15] = a4;
  return MEMORY[0x270FA2498](sub_240AC1358, 0, 0);
}

uint64_t sub_240AC1358()
{
  id v1 = (void *)v0[15];
  if (v1)
  {
    uint64_t v2 = v0[16];
    id v3 = (void *)*MEMORY[0x263F09820];
    v0[18] = *MEMORY[0x263F09820];
    v0[2] = v0;
    v0[7] = v0 + 20;
    v0[3] = sub_240AC14B8;
    uint64_t v4 = swift_continuation_init();
    v0[10] = MEMORY[0x263EF8330];
    v0[11] = 0x40000000;
    v0[12] = sub_240ACE7DC;
    v0[13] = &unk_2650DCA28;
    v0[14] = v4;
    objc_msgSend(v1, sel_setFeatureSettingNumber_forKey_completion_, v2, v3, v0 + 10);
    return MEMORY[0x270FA23F0](v0 + 2);
  }
  else
  {
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_240AC14B8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 152) = v1;
  if (v1) {
    uint64_t v2 = sub_240AC1628;
  }
  else {
    uint64_t v2 = sub_240AC15C8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_240AC15C8()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_240AC1628()
{
  id v20 = v0;
  uint64_t v1 = (void *)v0[18];
  swift_willThrow();

  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)v0[19];
  uint64_t v3 = sub_240BB5990();
  sub_240A395FC(v3, (uint64_t)qword_26AFDEC70);
  id v4 = v2;
  id v5 = v2;
  id v6 = sub_240BB5970();
  os_log_type_t v7 = sub_240BB7180();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = (void *)v0[19];
  if (v8)
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = v18;
    *(_DWORD *)uint64_t v10 = 136446466;
    uint64_t v12 = sub_240BB7C80();
    v0[10] = sub_240A38940(v12, v13, &v19);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2112;
    id v14 = v9;
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    v0[10] = v15;
    sub_240BB75F0();
    void *v11 = v15;

    _os_log_impl(&dword_240A1B000, v6, v7, "[%{public}s] Error when setting Cardio Fitness setting enabled: %@", (uint8_t *)v10, 0x16u);
    sub_240AA63A0();
    swift_arrayDestroy();
    MEMORY[0x24560B930](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v18, -1, -1);
    MEMORY[0x24560B930](v10, -1, -1);
  }
  else
  {
  }
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_240AC18B4(char *a1, uint64_t a2, void *a3)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_240AC2920(0, (unint64_t *)&qword_268CA1AC0, MEMORY[0x263F8F520]);
  MEMORY[0x270FA5388](v6 - 8);
  BOOL v8 = (char *)&v15 - v7;
  uint64_t v9 = sub_240BB6FE0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = *(void *)&a1[qword_268CA0048];
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = 0;
  id v11[3] = 0;
  void v11[4] = v10;
  v11[5] = a3;
  v11[6] = ObjectType;
  swift_unknownObjectRetain();
  id v12 = a3;
  unint64_t v13 = a1;
  sub_240B17230((uint64_t)v8, (uint64_t)&unk_268CA00A8, (uint64_t)v11);

  return swift_release();
}

uint64_t sub_240AC1A10(char *a1)
{
  uint64_t v2 = &a1[qword_268CA0070];
  swift_beginAccess();
  uint64_t result = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
  id v4 = &v2[*(int *)(result + 28)];
  uint64_t v5 = *((void *)v4 + 3);
  if (v5)
  {
    uint64_t v6 = *((void *)v4 + 2);
    uint64_t v7 = a1;
    sub_240AC28DC(v6, v5);
    swift_bridgeObjectRelease();
    sub_240BB6E40();

    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_240AC1AC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = qword_26AFDA090;
  id v3 = *(id *)(v0 + qword_268CA0040);
  if (v2 != -1) {
    swift_once();
  }
  sub_240BB2980();

  id v4 = v3;
  sub_240A76E14(v4);

  id v5 = objc_allocWithZone((Class)sub_240BB3510());
  uint64_t v6 = (void *)sub_240BB3500();
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v6, 0xE000000000000000);
  uint64_t v8 = v1 + qword_268CA0068;
  swift_beginAccess();
  if (MEMORY[0x24560BA20](v8))
  {
    swift_getObjectType();
    uint64_t v9 = (void *)sub_240BB54F0();
    sub_240BB50A0();
    objc_msgSend(v9, sel_presentViewController_animated_completion_, v7, 1, 0);
  }
}

void sub_240AC1C68(void *a1)
{
  id v1 = a1;
  sub_240AC1AC4();
}

void sub_240AC1CB0()
{
}

uint64_t sub_240AC1CE0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_240BB50A0();
  swift_bridgeObjectRelease();
  swift_release();
  sub_240A484BC(v0 + qword_268CA0060);
  sub_240A484BC(v0 + qword_268CA0068);
  uint64_t v1 = v0 + qword_268CA0070;

  return sub_240AC2880(v1);
}

id sub_240AC1D98()
{
  return sub_240AC23C4(type metadata accessor for CardioFitnessHealthChecklistSpecifierDataSource);
}

uint64_t sub_240AC1DB0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_240BB50A0();
  swift_bridgeObjectRelease();
  swift_release();
  sub_240A484BC(a1 + qword_268CA0060);
  sub_240A484BC(a1 + qword_268CA0068);
  uint64_t v2 = a1 + qword_268CA0070;

  return sub_240AC2880(v2);
}

uint64_t sub_240AC1E74()
{
  return type metadata accessor for CardioFitnessHealthChecklistSpecifierDataSource(0);
}

uint64_t type metadata accessor for CardioFitnessHealthChecklistSettingsViewController(uint64_t a1)
{
  return sub_240A3E6AC(a1, (uint64_t *)&unk_268CA0088);
}

uint64_t sub_240AC1E9C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_240AC1EDC(uint64_t a1, uint64_t a2)
{
  return sub_240AC1F8C(a1, a2, &qword_268CA0060);
}

uint64_t sub_240AC1EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_240AC1FE4(a1, a2, a3, a4, &qword_268CA0060);
}

void (*sub_240AC1EF4(void *a1))(uint64_t, char)
{
  id v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = qword_268CA0060;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x24560BA20](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_240AC1F7C;
}

uint64_t sub_240AC1F80(uint64_t a1, uint64_t a2)
{
  return sub_240AC1F8C(a1, a2, &qword_268CA0068);
}

uint64_t sub_240AC1F8C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3 + *a3;
  swift_beginAccess();
  return MEMORY[0x24560BA20](v4);
}

uint64_t sub_240AC1FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_240AC1FE4(a1, a2, a3, a4, &qword_268CA0068);
}

uint64_t sub_240AC1FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7 = v5 + *a5;
  swift_beginAccess();
  *(void *)(v7 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return sub_240BB50A0();
}

void (*sub_240AC204C(void *a1))(uint64_t, char)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = qword_268CA0068;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x24560BA20](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_240AC1F7C;
}

id sub_240AC20DC(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  v20[3] = a4;
  swift_getObjectType();
  uint64_t v7 = sub_240BB3B20();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AC240C(a2, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a3, v7);
  id v14 = objc_allocWithZone((Class)type metadata accessor for CardioFitnessHealthChecklistSpecifierDataSource(0));
  id v15 = sub_240AC2470(a1, (uint64_t)v13, (uint64_t)v10);
  sub_240AC2B1C(&qword_268CA0098, (void (*)(uint64_t))type metadata accessor for CardioFitnessHealthChecklistSpecifierDataSource);
  id v16 = v15;
  id v17 = (id)sub_240BB4E60();
  sub_240B70B20();
  uint64_t v18 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_setTitle_, v18);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a3, v7);
  sub_240AC2880(a2);
  return v17;
}

void sub_240AC2320()
{
}

void sub_240AC237C()
{
}

id sub_240AC23AC()
{
  return sub_240AC23C4(type metadata accessor for CardioFitnessHealthChecklistSettingsViewController);
}

id sub_240AC23C4(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_240AC2404()
{
  return type metadata accessor for CardioFitnessHealthChecklistSettingsViewController(0);
}

uint64_t sub_240AC240C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_240AC2470(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_getObjectType();
  sub_240AC2920(0, (unint64_t *)&qword_268C9F218, MEMORY[0x263F43A90]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = &v4[qword_268CA0030];
  *(void *)uint64_t v11 = 0xD000000000000017;
  *((void *)v11 + 1) = 0x8000000240BCD7D0;
  uint64_t v12 = &v4[qword_268CA0038];
  *(void *)uint64_t v12 = 0xD000000000000015;
  *((void *)v12 + 1) = 0x8000000240BCD7F0;
  unint64_t v13 = v4;
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_240BB7900()) {
    unint64_t v14 = sub_240A71C94(MEMORY[0x263F8EE78]);
  }
  else {
    unint64_t v14 = MEMORY[0x263F8EE88];
  }
  *(void *)&v13[qword_268CA0050] = v14;
  *(void *)&v13[qword_268CA0058] = 0;
  *(void *)&v13[qword_268CA0060 + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v13[qword_268CA0068 + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v13[qword_268CA0040] = a1;
  id v15 = objc_msgSend(a1, sel_featureAvailabilityProviderForIdentifier_, *MEMORY[0x263F09730]);
  if (!v15)
  {
    if (qword_26AFD9A18 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_240BB5990();
    sub_240A395FC(v16, (uint64_t)qword_26AFDEC70);
    id v17 = sub_240BB5970();
    os_log_type_t v18 = sub_240BB7190();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v30 = a2;
      uint64_t v21 = v20;
      uint64_t v32 = v20;
      *(_DWORD *)uint64_t v19 = 136446210;
      uint64_t v22 = sub_240BB7C80();
      uint64_t v31 = sub_240A38940(v22, v23, &v32);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v17, v18, "[%{public}s] Unable to get feature availability provider from health store, is this not a primary profile?", v19, 0xCu);
      swift_arrayDestroy();
      uint64_t v24 = v21;
      a2 = v30;
      MEMORY[0x24560B930](v24, -1, -1);
      MEMORY[0x24560B930](v19, -1, -1);
    }

    id v15 = 0;
  }
  *(void *)&v13[qword_268CA0048] = v15;
  sub_240AC240C(a2, (uint64_t)&v13[qword_268CA0070]);

  uint64_t v25 = sub_240BB3B20();
  uint64_t v26 = *(void *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v10, a3, v25);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v10, 0, 1, v25);
  id v27 = (id)sub_240BB3B10();
  sub_240ABFD6C();

  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(a3, v25);
  sub_240AC2880(a2);
  return v27;
}

uint64_t sub_240AC2880(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240AC28DC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_240BB4850();
    return sub_240BB4850();
  }
  return result;
}

void sub_240AC2920(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240BB75E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_240AC2974()
{
  sub_240BB50A0();
  sub_240BB50A0();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_240AC29BC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 40);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_240AA62AC;
  *(_OWORD *)(v3 + 128) = v4;
  *(void *)(v3 + 120) = v2;
  return MEMORY[0x270FA2498](sub_240AC1358, 0, 0);
}

void sub_240AC2A70()
{
  if (!qword_268CA00B0)
  {
    sub_240A22390();
    type metadata accessor for CardioFitnessHealthChecklistSettingsState();
    sub_240AC2B1C((unint64_t *)&qword_26AFD8A30, (void (*)(uint64_t))sub_240A22390);
    unint64_t v0 = sub_240BB5F90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA00B0);
    }
  }
}

uint64_t sub_240AC2B1C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240AC2B64()
{
  if (!qword_268CA00B8)
  {
    sub_240AC2A70();
    sub_240A34DC4(255, (unint64_t *)&qword_26AFD9980);
    sub_240AC2B1C(&qword_268CA00C0, (void (*)(uint64_t))sub_240AC2A70);
    sub_240A805DC();
    unint64_t v0 = sub_240BB60E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA00B8);
    }
  }
}

uint64_t sub_240AC2C30()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_240AC2C68(uint64_t a1)
{
  sub_240AC0618(a1, v1);
}

uint64_t sub_240AC2C70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_240AC2CD4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_240AC2920(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_240AC2D30()
{
  uint64_t v0 = sub_240BB3050();
  sub_240A4C570(v0, qword_26AFD7AA8);
  uint64_t v1 = sub_240A395FC(v0, (uint64_t)qword_26AFD7AA8);
  uint64_t v2 = *MEMORY[0x263F45500];
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t sub_240AC2DB8@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_240BB3240();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240BB32A0();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(a1) = *a1;
  (*(void (**)(char *, uint64_t))(v12 + 16))(v11, a2);
  sub_240A22568((uint64_t)v8);
  uint64_t v13 = type metadata accessor for CardioFitnessClassificationStatusGenerator(0);
  uint64_t v14 = swift_allocObject();
  sub_240AC309C((uint64_t)v11, (uint64_t)v8, (int)a1);
  a3[3] = v13;
  uint64_t result = sub_240A2E3D0(&qword_26AFD8CE8, (void (*)(uint64_t))type metadata accessor for CardioFitnessClassificationStatusGenerator);
  a3[4] = result;
  *a3 = v14;
  return result;
}

uint64_t sub_240AC2F48()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Heart50CardioFitnessClassificationStatusGeneratorPipeline_context;
  uint64_t v2 = sub_240BB32A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_240AC2FF8()
{
  return type metadata accessor for CardioFitnessClassificationStatusGeneratorPipeline(0);
}

uint64_t sub_240AC3000()
{
  uint64_t result = sub_240BB32A0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void *sub_240AC309C(uint64_t a1, uint64_t a2, int a3)
{
  int v29 = a3;
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  uint64_t v6 = *v3;
  uint64_t v7 = v3;
  uint64_t v31 = v3;
  uint64_t v28 = v6;
  uint64_t v8 = sub_240BB32A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A3A6A4();
  uint64_t v30 = v12;
  uint64_t v32 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = (char *)v7 + OBJC_IVAR____TtC5Heart42CardioFitnessClassificationStatusGenerator_domain;
  uint64_t v16 = sub_240BB3240();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, a2, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  unint64_t v18 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v19 = v18 + v10;
  unint64_t v20 = (v18 + v10) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v21 + v18, v11, v8);
  *(unsigned char *)(v21 + v19) = v29;
  *(void *)(v20 + v21 + 8) = v28;
  sub_240A3B6CC();
  sub_240A2E3D0(&qword_26AFD9810, (void (*)(uint64_t))sub_240A3B6CC);
  sub_240BB6240();
  sub_240A2E3D0((unint64_t *)&qword_26AFD98A0, (void (*)(uint64_t))sub_240A3A6A4);
  uint64_t v22 = v30;
  uint64_t v23 = sub_240BB62E0();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v27, v16);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v26, v8);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v22);
  uint64_t result = v31;
  void v31[2] = v23;
  return result;
}

uint64_t sub_240AC33F8@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  sub_240A5A338(0);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_240AC375C(a1, a2);
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_240BB5990();
  sub_240A395FC(v12, (uint64_t)qword_26AFDEC70);
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_240BB5970();
  os_log_type_t v14 = sub_240BB71A0();
  int v15 = v14;
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v33 = v7;
    uint64_t v17 = v16;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v35 = v32;
    *(_DWORD *)uint64_t v17 = 136446466;
    uint64_t v18 = sub_240BB7C80();
    uint64_t v34 = sub_240A38940(v18, v19, &v35);
    int v31 = v15;
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    uint64_t v20 = sub_240BB4850();
    uint64_t v21 = MEMORY[0x24560A1D0](v20, MEMORY[0x263F45828]);
    uint64_t v22 = v8;
    uint64_t v23 = a3;
    unint64_t v25 = v24;
    swift_bridgeObjectRelease();
    uint64_t v34 = sub_240A38940(v21, v25, &v35);
    sub_240BB75F0();
    swift_bridgeObjectRelease_n();
    a3 = v23;
    uint64_t v8 = v22;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v13, (os_log_type_t)v31, "[%{public}s]: Returning these changes: %s", (uint8_t *)v17, 0x16u);
    uint64_t v26 = v32;
    swift_arrayDestroy();
    MEMORY[0x24560B930](v26, -1, -1);
    uint64_t v27 = v17;
    uint64_t v7 = v33;
    MEMORY[0x24560B930](v27, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v35 = v11;
  sub_240A3A404(0, (unint64_t *)&qword_26AFD98D8, MEMORY[0x263F8D488]);
  sub_240BB6200();
  sub_240A2E3D0((unint64_t *)&qword_26AFD9848, sub_240A5A338);
  uint64_t v28 = sub_240BB62E0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *a3 = v28;
  return result;
}

uint64_t sub_240AC375C(uint64_t a1, char a2)
{
  uint64_t v3 = sub_240BB3090();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v17[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BB2770();
  swift_allocObject();
  sub_240BB2760();
  LOBYTE(v17[0]) = a2;
  sub_240AC41F0();
  uint64_t v7 = sub_240BB2750();
  unint64_t v9 = v8;
  swift_release();
  sub_240BB3250();
  sub_240A3466C(v17, v17[3]);
  uint64_t v10 = (void *)sub_240BB31F0();
  id v11 = objc_msgSend(v10, sel_profileIdentifier);

  sub_240AC3E1C(v11);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v17);
  sub_240BB3270();
  sub_240A4C480(v7, v9);
  sub_240BB3080();
  sub_240A3A404(0, &qword_26AFD7658, MEMORY[0x263F8E0F8]);
  uint64_t v12 = swift_allocObject();
  long long v16 = xmmword_240BB97E0;
  *(_OWORD *)(v12 + 16) = xmmword_240BB97E0;
  sub_240A32064(0, &qword_26AFD7120, MEMORY[0x263F455C8]);
  unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = v16;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 16))(v14 + v13, v6, v3);
  *(void *)(v12 + 32) = v14;
  *(void *)(v12 + 40) = 0;
  *(void *)(v12 + 48) = 0;
  *(void *)(v12 + 56) = 0;
  *(unsigned char *)(v12 + 64) = 64;
  sub_240A4C4D8(v7, v9);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v12;
}

uint64_t sub_240AC3BDC()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Heart42CardioFitnessClassificationStatusGenerator_domain;
  uint64_t v2 = sub_240BB3240();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_240AC3C84()
{
  return type metadata accessor for CardioFitnessClassificationStatusGenerator(0);
}

uint64_t type metadata accessor for CardioFitnessClassificationStatusGenerator(uint64_t a1)
{
  return sub_240A3E6AC(a1, (uint64_t *)&unk_26AFD8CF0);
}

uint64_t sub_240AC3CAC()
{
  uint64_t result = sub_240BB3240();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_240AC3D4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC5Heart42CardioFitnessClassificationStatusGenerator_domain;
  uint64_t v4 = sub_240BB3240();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_240AC3DC4(unsigned __int8 *a1@<X8>)
{
  uint64_t v2 = (void *)sub_240BB56F0();
  unsigned __int8 v3 = objc_msgSend(v2, sel_areAllRequirementsSatisfied);

  *a1 = v3;
}

unint64_t sub_240AC3E1C(void *a1)
{
  uint64_t v2 = sub_240BB2D40();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = 0;
  unint64_t v9 = 0xE000000000000000;
  sub_240BB77C0();
  swift_bridgeObjectRelease();
  unint64_t v8 = 0xD000000000000022;
  unint64_t v9 = 0x8000000240BCD970;
  id v6 = objc_msgSend(a1, sel_identifier);
  sub_240BB2D20();

  sub_240BB2D00();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_240BB6E70();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_240AC3F70()
{
  uint64_t v1 = sub_240BB32A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_240AC400C@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_240BB32A0() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_240AC2DB8(a1, v6, a2);
}

uint64_t sub_240AC40B8()
{
  uint64_t v1 = sub_240BB32A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((v4 + *(void *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_240AC4150@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_240BB32A0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  char v5 = *(unsigned char *)(v1 + v4 + *(void *)(v3 + 64));

  return sub_240AC33F8(v1 + v4, v5, a1);
}

unint64_t sub_240AC41F0()
{
  unint64_t result = qword_26AFD8CE0;
  if (!qword_26AFD8CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD8CE0);
  }
  return result;
}

id sub_240AC4244()
{
  *(void *)&v0[OBJC_IVAR____TtC5Heart44CardioFitnessOnboardingFactorsViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v2 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_240BB2980();

  uint64_t v3 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for CardioFitnessOnboardingFactorsViewController();
  id v4 = objc_msgSendSuper2(&v6, sel_initWithTitle_detailText_icon_contentLayout_, v3, 0, 0, 2, 0xE000000000000000);

  return v4;
}

void sub_240AC4368()
{
  v50.receiver = v0;
  v50.super_class = (Class)type metadata accessor for CardioFitnessOnboardingFactorsViewController();
  objc_msgSendSuper2(&v50, sel_viewDidLoad);

  id v48 = v0;
  objc_msgSend(v0, sel_hxui_addCancelButton);
  sub_240A34E00();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_240BBCBA0;
  uint64_t v2 = v1;
  unint64_t v49 = v1;
  type metadata accessor for HeartHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v4 = self;
  id v5 = objc_msgSend(v4, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v6 = sub_240BB2980();
  uint64_t v8 = v7;

  id v9 = objc_msgSend(v4, (SEL)&selRef_setModalPresentationStyle_ + 5, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v10 = sub_240BB2980();
  uint64_t v12 = v11;

  unint64_t v13 = (objc_class *)type metadata accessor for NumberedTextView();
  id v14 = objc_allocWithZone(v13);
  *(void *)(v2 + 32) = sub_240B90694(1, v6, v8, v10, v12);
  id v15 = objc_msgSend(v4, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v16 = sub_240BB2980();
  uint64_t v18 = v17;

  id v19 = objc_msgSend(v4, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v20 = sub_240BB2980();
  uint64_t v22 = v21;

  uint64_t v47 = v13;
  id v23 = objc_allocWithZone(v13);
  *(void *)(v49 + 40) = sub_240B90694(2, v16, v18, v20, v22);
  id v24 = objc_msgSend(v4, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v25 = sub_240BB2980();
  uint64_t v27 = v26;

  id v28 = objc_msgSend(v4, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v29 = sub_240BB2980();
  uint64_t v31 = v30;

  id v32 = objc_allocWithZone(v13);
  *(void *)(v49 + 48) = sub_240B90694(3, v25, v27, v29, v31);
  id v33 = objc_msgSend(v4, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v34 = sub_240BB2980();
  uint64_t v36 = v35;

  id v37 = objc_msgSend(v4, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v38 = sub_240BB2980();
  uint64_t v40 = v39;

  id v41 = objc_allocWithZone(v47);
  *(void *)(v49 + 56) = sub_240B90694(4, v34, v36, v38, v40);
  sub_240BB6F30();
  if (v49 >> 62)
  {
    sub_240AC4E1C();
    sub_240BB4850();
    sub_240BB78F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_240BB4850();
    sub_240BB7AF0();
    sub_240AC4E1C();
  }
  swift_bridgeObjectRelease();
  id v42 = objc_allocWithZone(MEMORY[0x263F82BF8]);
  sub_240AC4E1C();
  uint64_t v43 = (void *)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  id v44 = objc_msgSend(v42, sel_initWithArrangedSubviews_, v43, 0xE000000000000000);

  objc_msgSend(v44, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v44, sel_setAxis_, 1);
  objc_msgSend(v44, sel_setAlignment_, 0);
  objc_msgSend(v44, sel_setDistribution_, 3);
  objc_msgSend(v44, sel_setSpacing_, 20.0);
  id v45 = objc_msgSend(v48, sel_contentView);
  objc_msgSend(v45, sel_addSubview_, v44);

  id v46 = objc_msgSend(v48, sel_contentView);
  objc_msgSend(v44, sel_hk_alignConstraintsWithView_, v46);
}

id sub_240AC4B78()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardioFitnessOnboardingFactorsViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CardioFitnessOnboardingFactorsViewController()
{
  return self;
}

uint64_t sub_240AC4BE0()
{
  return 2;
}

uint64_t sub_240AC4BE8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC5Heart44CardioFitnessOnboardingFactorsViewController_delegate + 8) = a2;
  swift_unknownObjectWeakAssign();

  return sub_240BB50A0();
}

void sub_240AC4C38()
{
  uint64_t ObjectType = swift_getObjectType();
  if (qword_26AFD9A18 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_240BB5990();
  sub_240A395FC(v1, (uint64_t)qword_26AFDEC70);
  uint64_t v2 = sub_240BB5970();
  os_log_type_t v3 = sub_240BB71A0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v8 = v5;
    *(_DWORD *)uint64_t v4 = 136446466;
    nullsub_1(ObjectType);
    uint64_t v6 = sub_240BB7C80();
    sub_240A38940(v6, v7, &v8);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2082;
    sub_240A38940(0xD00000000000002ELL, 0x8000000240BCDA40, &v8);
    sub_240BB75F0();
    _os_log_impl(&dword_240A1B000, v2, v3, "[%{public}s.%{public}s]: User pressed cancel button", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v5, -1, -1);
    MEMORY[0x24560B930](v4, -1, -1);
  }

  sub_240B2EC90(1, 0, 0, 0);
}

unint64_t sub_240AC4E1C()
{
  unint64_t result = qword_268CA00D8;
  if (!qword_268CA00D8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268CA00D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for IrregularRhythmNotificationsHealthChecklistConfigurationProvider()
{
  return &type metadata for IrregularRhythmNotificationsHealthChecklistConfigurationProvider;
}

uint64_t sub_240AC4E70()
{
  return sub_240AC4F00(&qword_26AFD8500, (void (*)(uint64_t))type metadata accessor for IrregularRhythmNotificationsFeatureStatusActionHandler);
}

uint64_t sub_240AC4EB8()
{
  return sub_240AC4F00(&qword_268C9F1A0, MEMORY[0x263F43730]);
}

uint64_t sub_240AC4F00(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240AC4F48(char a1, char a2)
{
  sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_240BBAE40;
  if (a1)
  {
    if (qword_26AFDA090 != -1) {
      swift_once();
    }
  }
  else if (a2)
  {
    if (qword_26AFDA090 != -1) {
      swift_once();
    }
  }
  else if (qword_26AFDA090 != -1)
  {
    swift_once();
  }
  *(void *)(v4 + 32) = sub_240BB2980();
  *(void *)(v4 + 40) = v5;
  *(void *)(v4 + 48) = sub_240BB2980();
  *(void *)(v4 + 56) = v6;
  return v4;
}

uint64_t sub_240AC513C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240A64CB8(0, &qword_26AFD7B98, MEMORY[0x263F45848], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v22 - v3;
  sub_240A64CB8(0, &qword_26AFD7BA8, MEMORY[0x263F43658], v1);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v7 = (char *)&v22 - v6;
  uint64_t v8 = sub_240BB3660();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  uint64_t v12 = (void *)qword_26AFDECD8;
  sub_240BB2980();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F435C8], v8);
  id v13 = v12;
  sub_240BB36C0();
  uint64_t v14 = sub_240BB36D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v7, 0, 1, v14);
  sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_240BBAE40;
  *(void *)(v15 + 32) = sub_240BB2980();
  *(void *)(v15 + 40) = v16;
  *(void *)(v15 + 48) = sub_240BB2980();
  *(void *)(v15 + 56) = v17;
  sub_240BB3750();
  uint64_t v18 = sub_240BB33F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v4, 1, 1, v18);
  uint64_t v19 = v23;
  sub_240BB38B0();
  uint64_t v20 = sub_240BB38D0();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 0, 1, v20);
}

uint64_t sub_240AC5578@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240A64CB8(0, &qword_26AFD7B98, MEMORY[0x263F45848], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v21 - v5;
  sub_240A64CB8(0, &qword_26AFD7BA8, MEMORY[0x263F43658], v3);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v10 = sub_240BB3660();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  uint64_t v14 = (void *)qword_26AFDECD8;
  sub_240BB2980();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x263F435D0], v10);
  id v15 = v14;
  sub_240BB36C0();
  uint64_t v16 = sub_240BB36D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v9, 0, 1, v16);
  if (a1) {
    sub_240BB3720();
  }
  else {
    sub_240BB3710();
  }
  sub_240AC4F48(0, a1 & 1);
  sub_240BB3750();
  uint64_t v17 = sub_240BB33F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v6, 1, 1, v17);
  uint64_t v18 = v22;
  sub_240BB38B0();
  uint64_t v19 = sub_240BB38D0();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 0, 1, v19);
}

uint64_t sub_240AC5934@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v195 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240A64CB8(0, &qword_26AFD7BA8, MEMORY[0x263F43658], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  v192 = (char *)&v184 - v5;
  uint64_t v6 = sub_240BB3630();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v184 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A64CB8(0, &qword_26AFD7B70, MEMORY[0x263F06EA8], v3);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v191 = (uint64_t)&v184 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v184 - v13;
  uint64_t v15 = sub_240BB3660();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v193 = v15;
  uint64_t v194 = v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v184 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v184 - v20;
  id v22 = objc_msgSend(a1, sel_highestPriorityUnsatisfiedRequirement);
  if (!v22)
  {
    __break(1u);
    goto LABEL_68;
  }
  a1 = v22;
  uint64_t v23 = sub_240BB6DE0();
  uint64_t v25 = v24;
  if (v23 == sub_240BB6DE0() && v25 == v26) {
    goto LABEL_4;
  }
  char v27 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v27) {
    goto LABEL_6;
  }
  uint64_t v33 = sub_240BB6DE0();
  uint64_t v35 = v34;
  if (v33 == sub_240BB6DE0() && v35 == v36) {
    goto LABEL_4;
  }
  char v37 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v37) {
    goto LABEL_6;
  }
  uint64_t v38 = sub_240BB6DE0();
  uint64_t v40 = v39;
  if (v38 == sub_240BB6DE0() && v40 == v41)
  {
LABEL_4:
    swift_bridgeObjectRelease_n();
LABEL_6:

    uint64_t v28 = sub_240BB38D0();
    uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
    uint64_t v30 = v28;
    uint64_t v31 = v195;
    return v29(v31, 1, 1, v30);
  }
  char v42 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v42) {
    goto LABEL_6;
  }
  uint64_t v43 = sub_240BB6DE0();
  uint64_t v45 = v44;
  if (v43 == sub_240BB6DE0() && v45 == v46)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v47 = v193;
LABEL_19:

    unint64_t v49 = &unk_26AFDA000;
    if (qword_26AFDA090 != -1) {
      swift_once();
    }
    objc_super v50 = &unk_26AFDE000;
    uint64_t v51 = sub_240BB2980();
    uint64_t v53 = v52;
    uint64_t v54 = v47;
    (*(void (**)(char *, void, uint64_t))(v194 + 104))(v21, *MEMORY[0x263F435B8], v47);
    sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
    uint64_t v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = xmmword_240BB97E0;
    *(void *)(v55 + 32) = v51;
    *(void *)(v55 + 40) = v53;
    uint64_t v189 = v55;
    sub_240BB4850();
    uint64_t v56 = sub_240BB3740();
    uint64_t v185 = v57;
    uint64_t v186 = v56;
    uint64_t v58 = MEMORY[0x245606A20](v51, v53);
    uint64_t v187 = v59;
    *(void *)&long long v188 = v58;
    swift_bridgeObjectRelease();
    uint64_t v190 = sub_240BB3740();
    uint64_t v184 = v60;
    sub_240AC74EC((SEL *)&selRef_irregularHeartRhythmFooterLinkURL, 0xD00000000000001BLL, 0x8000000240BCDEC0, (uint64_t)v14);
    goto LABEL_30;
  }
  char v48 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v47 = v193;
  if (v48) {
    goto LABEL_19;
  }
  uint64_t v61 = sub_240BB6DE0();
  uint64_t v63 = v62;
  if (v61 != sub_240BB6DE0() || v63 != v64)
  {
    char v65 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v65) {
      goto LABEL_26;
    }
    uint64_t v83 = sub_240BB6DE0();
    uint64_t v85 = v84;
    if (v83 != sub_240BB6DE0() || v85 != v86)
    {
      char v87 = sub_240BB7AE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v87) {
        goto LABEL_26;
      }
      uint64_t v88 = sub_240BB6DE0();
      uint64_t v90 = v89;
      if (v88 == sub_240BB6DE0() && v90 == v91)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v92 = v193;
LABEL_41:

        unint64_t v49 = &unk_26AFDA000;
        if (qword_26AFDA090 != -1) {
          swift_once();
        }
        objc_super v50 = &unk_26AFDE000;
        uint64_t v66 = sub_240BB2980();
        uint64_t v68 = v94;
        uint64_t v54 = v92;
        (*(void (**)(char *, void, uint64_t))(v194 + 104))(v21, *MEMORY[0x263F435B8], v92);
        goto LABEL_29;
      }
      char v93 = sub_240BB7AE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v92 = v193;
      if (v93) {
        goto LABEL_41;
      }
      uint64_t v95 = sub_240BB6DE0();
      uint64_t v97 = v96;
      if (v95 == sub_240BB6DE0() && v97 == v98)
      {
        swift_bridgeObjectRelease_n();
LABEL_48:

        if (qword_26AFDA090 != -1) {
          swift_once();
        }
        objc_super v50 = &unk_26AFDE000;
        uint64_t v100 = sub_240BB2980();
        uint64_t v102 = v101;
        uint64_t v54 = v193;
        (*(void (**)(char *, void, uint64_t))(v194 + 104))(v21, *MEMORY[0x263F435B8], v193);
        sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
        uint64_t v103 = swift_allocObject();
        *(_OWORD *)(v103 + 16) = xmmword_240BB97E0;
        *(void *)(v103 + 32) = v100;
        *(void *)(v103 + 40) = v102;
        uint64_t v189 = v103;
        sub_240BB4850();
        uint64_t v104 = sub_240BB3740();
        uint64_t v185 = v105;
        uint64_t v186 = v104;
        uint64_t v106 = MEMORY[0x245606A20](v100, v102);
        uint64_t v187 = v107;
        *(void *)&long long v188 = v106;
        swift_bridgeObjectRelease();
        uint64_t v190 = sub_240BB3740();
        uint64_t v184 = v108;
        uint64_t v109 = 0xD00000000000001DLL;
        uint64_t v110 = &selRef_seedExpiredLinkURL;
        uint64_t v111 = 0x8000000240BCDEA0;
        uint64_t v112 = (uint64_t)v14;
LABEL_58:
        sub_240AC74EC((SEL *)v110, v109, v111, v112);
        uint64_t v127 = sub_240BB2B20();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v127 - 8) + 56))(v14, 0, 1, v127);
LABEL_59:
        unint64_t v49 = (void *)&unk_26AFDA000;
        goto LABEL_31;
      }
      char v99 = sub_240BB7AE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v99) {
        goto LABEL_48;
      }
      uint64_t v113 = sub_240BB6DE0();
      uint64_t v115 = v114;
      if (v113 == sub_240BB6DE0() && v115 == v116)
      {
        swift_bridgeObjectRelease_n();
LABEL_55:

        if (qword_26AFDA090 != -1) {
          swift_once();
        }
        objc_super v50 = &unk_26AFDE000;
        uint64_t v118 = sub_240BB2980();
        uint64_t v120 = v119;
        uint64_t v54 = v193;
        (*(void (**)(char *, void, uint64_t))(v194 + 104))(v21, *MEMORY[0x263F435B8], v193);
        sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
        uint64_t v121 = swift_allocObject();
        *(_OWORD *)(v121 + 16) = xmmword_240BB97E0;
        *(void *)(v121 + 32) = v118;
        *(void *)(v121 + 40) = v120;
        uint64_t v189 = v121;
        sub_240BB4850();
        uint64_t v122 = sub_240BB3740();
        uint64_t v185 = v123;
        uint64_t v186 = v122;
        uint64_t v124 = MEMORY[0x245606A20](v118, v120);
        uint64_t v187 = v125;
        *(void *)&long long v188 = v124;
        swift_bridgeObjectRelease();
        uint64_t v190 = sub_240BB3740();
        uint64_t v184 = v126;
        uint64_t v110 = &selRef_irregularHeartRhythmFooterLinkURL;
        uint64_t v111 = 0x8000000240BCDEC0;
        uint64_t v112 = (uint64_t)v14;
        uint64_t v109 = 0xD00000000000001BLL;
        goto LABEL_58;
      }
      char v117 = sub_240BB7AE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v117) {
        goto LABEL_55;
      }
      uint64_t v128 = sub_240BB6DE0();
      uint64_t v130 = v129;
      if (v128 == sub_240BB6DE0() && v130 == v131)
      {
        swift_bridgeObjectRelease_n();
LABEL_64:

        uint64_t v190 = sub_240BB3780();
        uint64_t v134 = v133;
        if (qword_26AFDA090 != -1) {
          swift_once();
        }
        sub_240BB2980();
        sub_240A64CB8(0, (unint64_t *)&qword_26AFD99D8, (uint64_t (*)(uint64_t))sub_240A4C614, MEMORY[0x263F8E0F8]);
        uint64_t v135 = swift_allocObject();
        long long v188 = xmmword_240BB97E0;
        *(_OWORD *)(v135 + 16) = xmmword_240BB97E0;
        *(void *)(v135 + 56) = MEMORY[0x263F8D310];
        *(void *)(v135 + 64) = sub_240A4C66C();
        *(void *)(v135 + 32) = v190;
        *(void *)(v135 + 40) = v134;
        uint64_t v184 = v134;
        sub_240BB4850();
        uint64_t v136 = sub_240BB6DB0();
        uint64_t v138 = v137;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v139 = v193;
        (*(void (**)(char *, void, uint64_t))(v194 + 104))(v21, *MEMORY[0x263F435C0], v193);
        sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
        uint64_t v140 = swift_allocObject();
        uint64_t v189 = v140;
        *(_OWORD *)(v140 + 16) = v188;
        uint64_t v187 = v138;
        *(void *)&long long v188 = v136;
        *(void *)(v140 + 32) = v136;
        *(void *)(v140 + 40) = v138;
        sub_240BB4850();
        uint64_t v141 = sub_240BB3760();
        uint64_t v185 = v142;
        uint64_t v186 = v141;
        uint64_t v143 = (unsigned int *)MEMORY[0x263F43588];
LABEL_75:
        (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *v143, v6);
        sub_240BB3610();
        uint64_t v158 = v9;
        objc_super v50 = (void *)&unk_26AFDE000;
        uint64_t v54 = v139;
        (*(void (**)(char *, uint64_t))(v7 + 8))(v158, v6);
        goto LABEL_59;
      }
      char v132 = sub_240BB7AE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v132) {
        goto LABEL_64;
      }
LABEL_68:
      uint64_t v144 = sub_240BB6DE0();
      uint64_t v146 = v145;
      if (v144 == sub_240BB6DE0() && v146 == v147)
      {
        swift_bridgeObjectRelease_n();
LABEL_72:

        uint64_t v190 = sub_240BB3790();
        uint64_t v150 = v149;
        if (qword_26AFDA090 != -1) {
          swift_once();
        }
        sub_240BB2980();
        sub_240A64CB8(0, (unint64_t *)&qword_26AFD99D8, (uint64_t (*)(uint64_t))sub_240A4C614, MEMORY[0x263F8E0F8]);
        uint64_t v151 = swift_allocObject();
        long long v188 = xmmword_240BB97E0;
        *(_OWORD *)(v151 + 16) = xmmword_240BB97E0;
        *(void *)(v151 + 56) = MEMORY[0x263F8D310];
        *(void *)(v151 + 64) = sub_240A4C66C();
        *(void *)(v151 + 32) = v190;
        *(void *)(v151 + 40) = v150;
        uint64_t v184 = v150;
        sub_240BB4850();
        uint64_t v152 = sub_240BB6DB0();
        uint64_t v154 = v153;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v139 = v193;
        (*(void (**)(char *, void, uint64_t))(v194 + 104))(v21, *MEMORY[0x263F435C0], v193);
        sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
        uint64_t v155 = swift_allocObject();
        uint64_t v189 = v155;
        *(_OWORD *)(v155 + 16) = v188;
        uint64_t v187 = v154;
        *(void *)&long long v188 = v152;
        *(void *)(v155 + 32) = v152;
        *(void *)(v155 + 40) = v154;
        sub_240BB4850();
        uint64_t v156 = sub_240BB3760();
        uint64_t v185 = v157;
        uint64_t v186 = v156;
        uint64_t v143 = (unsigned int *)MEMORY[0x263F43590];
        goto LABEL_75;
      }
      char v148 = sub_240BB7AE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v148) {
        goto LABEL_72;
      }
      uint64_t v159 = sub_240BB6DE0();
      uint64_t v161 = v160;
      if (v159 == sub_240BB6DE0() && v161 == v162)
      {

        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v163 = sub_240BB7AE0();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v163 & 1) == 0)
        {
          if (sub_240BB3730())
          {
            if (qword_26AFDA090 != -1) {
              swift_once();
            }
          }
          else if (qword_26AFDA090 != -1)
          {
            swift_once();
          }
          uint64_t v174 = sub_240BB2980();
          uint64_t v176 = v175;
          uint64_t v54 = v193;
          (*(void (**)(char *, void, uint64_t))(v194 + 104))(v21, *MEMORY[0x263F435B8], v193);
          sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
          uint64_t v177 = swift_allocObject();
          *(_OWORD *)(v177 + 16) = xmmword_240BB97E0;
          *(void *)(v177 + 32) = v174;
          *(void *)(v177 + 40) = v176;
          uint64_t v189 = v177;
          sub_240BB4850();
          uint64_t v178 = sub_240BB3740();
          uint64_t v185 = v179;
          uint64_t v186 = v178;
          uint64_t v180 = MEMORY[0x245606A20](v174, v176);
          uint64_t v187 = v181;
          *(void *)&long long v188 = v180;
          swift_bridgeObjectRelease();
          uint64_t v190 = sub_240BB3740();
          uint64_t v184 = v182;
          sub_240AC74EC((SEL *)&selRef_irregularHeartRhythmFooterLinkURL, 0xD00000000000001BLL, 0x8000000240BCDEC0, (uint64_t)v14);
          uint64_t v183 = sub_240BB2B20();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v183 - 8) + 56))(v14, 0, 1, v183);
          goto LABEL_90;
        }
      }
      if (qword_268C9E7A8 != -1) {
        swift_once();
      }
      uint64_t v164 = sub_240BB2980();
      uint64_t v166 = v165;
      uint64_t v54 = v193;
      (*(void (**)(char *, void, uint64_t))(v194 + 104))(v21, *MEMORY[0x263F435B8], v193);
      sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
      uint64_t v167 = swift_allocObject();
      *(_OWORD *)(v167 + 16) = xmmword_240BB97E0;
      *(void *)(v167 + 32) = v164;
      *(void *)(v167 + 40) = v166;
      uint64_t v189 = v167;
      sub_240BB4850();
      uint64_t v168 = sub_240BB3740();
      uint64_t v185 = v169;
      uint64_t v186 = v168;
      uint64_t v170 = MEMORY[0x245606A20](v164, v166);
      uint64_t v187 = v171;
      *(void *)&long long v188 = v170;
      swift_bridgeObjectRelease();
      uint64_t v190 = sub_240BB3740();
      uint64_t v184 = v172;
      sub_240AC74EC((SEL *)&selRef_irregularHeartRhythmFooterLinkURL, 0xD00000000000001BLL, 0x8000000240BCDEC0, (uint64_t)v14);
      uint64_t v173 = sub_240BB2B20();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v173 - 8) + 56))(v14, 0, 1, v173);
LABEL_90:
      objc_super v50 = (void *)&unk_26AFDE000;
      goto LABEL_59;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_26:

  unint64_t v49 = &unk_26AFDA000;
  if (qword_26AFDA090 != -1) {
    swift_once();
  }
  objc_super v50 = &unk_26AFDE000;
  uint64_t v66 = sub_240BB2980();
  uint64_t v68 = v67;
  uint64_t v54 = v193;
  (*(void (**)(char *, void, uint64_t))(v194 + 104))(v21, *MEMORY[0x263F435B8], v193);
LABEL_29:
  sub_240A39C18(0, (unint64_t *)&qword_26AFD7108);
  uint64_t v69 = swift_allocObject();
  *(_OWORD *)(v69 + 16) = xmmword_240BB97E0;
  *(void *)(v69 + 32) = v66;
  *(void *)(v69 + 40) = v68;
  uint64_t v189 = v69;
  sub_240BB4850();
  uint64_t v70 = sub_240BB3740();
  uint64_t v185 = v71;
  uint64_t v186 = v70;
  uint64_t v72 = MEMORY[0x245606A20](v66, v68);
  uint64_t v187 = v73;
  *(void *)&long long v188 = v72;
  swift_bridgeObjectRelease();
  uint64_t v190 = sub_240BB3740();
  uint64_t v184 = v74;
  sub_240AC7288((uint64_t)v14);
LABEL_30:
  uint64_t v75 = sub_240BB2B20();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v14, 0, 1, v75);
LABEL_31:
  if (v49[18] != -1) {
    swift_once();
  }
  long long v76 = (void *)v50[411];
  sub_240BB2980();
  uint64_t v77 = v194;
  (*(void (**)(char *, char *, uint64_t))(v194 + 16))(v19, v21, v54);
  id v78 = v76;
  uint64_t v79 = v192;
  sub_240BB36C0();
  uint64_t v80 = sub_240BB36D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v79, 0, 1, v80);
  sub_240A64B98((uint64_t)v14, v191);
  uint64_t v81 = v195;
  sub_240BB38A0();
  sub_240A64C2C((uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v21, v54);
  uint64_t v82 = sub_240BB38D0();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v81, 0, 1, v82);
}

uint64_t sub_240AC70B8()
{
  uint64_t v0 = *MEMORY[0x263F475B8];
  id v1 = (id)*MEMORY[0x263F475B8];
  return v0;
}

uint64_t sub_240AC70F0@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  return sub_240AC5934(a1, a2);
}

uint64_t sub_240AC70F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F43718];
  uint64_t v3 = sub_240BB37B0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_240AC716C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_240AC77B0();

  return MEMORY[0x270F32850](a1, a2, a3, v6);
}

uint64_t sub_240AC71C0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_240AC77B0();

  return MEMORY[0x270F32838](a1, a2, v4);
}

uint64_t sub_240AC7218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_240A3DAA4();

  return MEMORY[0x270F32870](a1, a2, a3, v6);
}

unint64_t sub_240AC726C()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_240AC7288@<X0>(uint64_t a1@<X8>)
{
  sub_240A64CB8(0, &qword_26AFD7B70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v4 = (char *)v14 - v3;
  sub_240BB2B10();
  uint64_t v5 = sub_240BB2B20();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v4, v5);
  }
  sub_240A64C2C((uint64_t)v4);
  sub_240A64CB8(0, (unint64_t *)&qword_26AFD99D8, (uint64_t (*)(uint64_t))sub_240A4C614, MEMORY[0x263F8E0F8]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_240BBAE40;
  v14[1] = &type metadata for IrregularRhythmNotificationsHealthChecklistConfigurationProvider;
  sub_240AC7774();
  uint64_t v9 = sub_240BB6E10();
  uint64_t v11 = v10;
  uint64_t v12 = MEMORY[0x263F8D310];
  *(void *)(v8 + 56) = MEMORY[0x263F8D310];
  unint64_t v13 = sub_240A4C66C();
  *(void *)(v8 + 32) = v9;
  *(void *)(v8 + 40) = v11;
  *(void *)(v8 + 96) = v12;
  *(void *)(v8 + 104) = v13;
  *(void *)(v8 + 64) = v13;
  *(void *)(v8 + 72) = 0xD000000000000025;
  *(void *)(v8 + 80) = 0x8000000240BCDE70;
  sub_240BB6E00();
  uint64_t result = sub_240BB78D0();
  __break(1u);
  return result;
}

uint64_t sub_240AC74EC@<X0>(SEL *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_240A64CB8(0, &qword_26AFD7B70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v21 - v9;
  id v11 = [self *a1];
  sub_240BB6DE0();

  sub_240BB2B10();
  swift_bridgeObjectRelease();
  uint64_t v12 = sub_240BB2B20();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a4, v10, v12);
  }
  sub_240A64C2C((uint64_t)v10);
  sub_240A64CB8(0, (unint64_t *)&qword_26AFD99D8, (uint64_t (*)(uint64_t))sub_240A4C614, MEMORY[0x263F8E0F8]);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_240BBAE40;
  v21[1] = &type metadata for IrregularRhythmNotificationsHealthChecklistConfigurationProvider;
  sub_240AC7774();
  uint64_t v16 = sub_240BB6E10();
  uint64_t v18 = v17;
  uint64_t v19 = MEMORY[0x263F8D310];
  *(void *)(v15 + 56) = MEMORY[0x263F8D310];
  unint64_t v20 = sub_240A4C66C();
  *(void *)(v15 + 32) = v16;
  *(void *)(v15 + 40) = v18;
  *(void *)(v15 + 96) = v19;
  *(void *)(v15 + 104) = v20;
  *(void *)(v15 + 64) = v20;
  *(void *)(v15 + 72) = a2;
  *(void *)(v15 + 80) = a3;
  sub_240BB6E00();
  uint64_t result = sub_240BB78D0();
  __break(1u);
  return result;
}

unint64_t sub_240AC7774()
{
  unint64_t result = qword_268CA00E0;
  if (!qword_268CA00E0)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CA00E0);
  }
  return result;
}

unint64_t sub_240AC77B0()
{
  unint64_t result = qword_26AFD86D8;
  if (!qword_26AFD86D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD86D8);
  }
  return result;
}

void *sub_240AC7804(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = (void *)MEMORY[0x263F8EE78];
  id v22 = (void *)MEMORY[0x263F8EE78];
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    v17[1] = v2;
    swift_retain();
    sub_240BB4850();
    v17[0] = a1;
    uint64_t v6 = a1 + 40;
    do
    {
      sub_240BB4850();
      sub_240BB4910();
      swift_bridgeObjectRelease();
      if (v19)
      {
        sub_240A37388(&v18, (uint64_t)v21);
        sub_240A37388(v21, (uint64_t)&v18);
        uint64_t v7 = v22;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v7 = sub_240A42B84(0, v7[2] + 1, 1, v7);
          id v22 = v7;
        }
        unint64_t v9 = v7[2];
        unint64_t v8 = v7[3];
        if (v9 >= v8 >> 1) {
          id v22 = sub_240A42B84((void *)(v8 > 1), v9 + 1, 1, v7);
        }
        uint64_t v10 = v19;
        uint64_t v11 = v20;
        uint64_t v12 = sub_240A346B0((uint64_t)&v18, v19);
        MEMORY[0x270FA5388](v12);
        uint64_t v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v15 + 16))(v14);
        sub_240ACAC98(v9, (uint64_t)v14, (uint64_t *)&v22, v10, v11);
        _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v18);
      }
      else
      {
        sub_240ACB6D0((uint64_t)&v18, (unint64_t *)&qword_268C9ECD8, (unint64_t *)&qword_268CA0B00);
      }
      v6 += 16;
      --v4;
    }
    while (v4);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v3 = v22;
  }
  swift_release();
  return v3;
}

uint64_t sub_240AC7A48(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_consumedHealthExperienceStore;
  swift_beginAccess();
  sub_240ACB76C(a1, v3);
  swift_endAccess();
  sub_240A830E0(v3, (uint64_t)&v5);
  if (v6)
  {
    sub_240A37388(&v5, (uint64_t)v7);
    sub_240AC944C(v7);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v7);
  }
  else
  {
    sub_240ACB6D0((uint64_t)&v5, &qword_268C9F668, (unint64_t *)&qword_268CA06E0);
  }
  return sub_240ACB6D0(a1, &qword_268C9F668, (unint64_t *)&qword_268CA06E0);
}

void (*sub_240AC7B20(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_consumedHealthExperienceStore;
  v3[10] = v1;
  v3[11] = v4;
  swift_beginAccess();
  return sub_240AC7B8C;
}

void sub_240AC7B8C(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    sub_240A830E0(*(void *)(v3 + 80) + *(void *)(v3 + 88), v3 + 40);
    if (*(void *)(v3 + 64))
    {
      sub_240A37388((long long *)(v3 + 40), v3);
      sub_240AC944C((void *)v3);
      _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v3);
    }
    else
    {
      sub_240ACB6D0(v3 + 40, &qword_268C9F668, (unint64_t *)&qword_268CA06E0);
    }
  }

  free((void *)v3);
}

id sub_240AC7C60()
{
  uint64_t v1 = v0;
  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for AtrialFibrillationDataTypeDetailViewController();
  objc_msgSendSuper2(&v11, sel_viewDidLoad);
  uint64_t v2 = sub_240BB4100();
  uint64_t v4 = v3;
  if (v2 == sub_240BB4100() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v7 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0) {
      sub_240AC88A8();
    }
  }
  id result = objc_msgSend(v1, sel_tableView);
  if (result)
  {
    unint64_t v9 = result;
    sub_240BB5060();
    sub_240BB70E0();

    id result = objc_msgSend(v1, sel_tableView);
    if (result)
    {
      uint64_t v10 = result;
      sub_240BB3A90();
      sub_240BB70E0();

      sub_240ACB72C(&qword_268CA0170);
      return (id)sub_240BB54E0();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_240AC7E54()
{
  uint64_t v1 = sub_240BB4100();
  uint64_t v3 = v2;
  if (v1 == sub_240BB4100() && v3 == v4) {
    goto LABEL_12;
  }
  char v6 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v6)
  {
LABEL_13:
    uint64_t v13 = *(void **)&v0[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_viewControllerFactory];
    id v14 = *(id *)&v0[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_displayType];
    id v15 = objc_msgSend(v13, sel_profile);
    sub_240BB7240();
    uint64_t v16 = (objc_class *)type metadata accessor for SummariesAtrialFibrillationListDataProvider();
    uint64_t v17 = (char *)objc_allocWithZone(v16);
    id v18 = objc_msgSend(v15, sel_healthStore);
    *(void *)&v17[OBJC_IVAR____TtC5Heart43SummariesAtrialFibrillationListDataProvider_store] = v18;
    sub_240A1E37C((uint64_t)v21, (uint64_t)&v17[OBJC_IVAR____TtC5Heart43SummariesAtrialFibrillationListDataProvider_healthExperienceStore]);

    v20.receiver = v17;
    v20.super_class = v16;
    id v19 = objc_msgSendSuper2(&v20, sel_initWithDisplayType_profile_, v14, v15);

    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v21);
    objc_msgSend(v0, sel_setDataProvider_, v19);

    return;
  }
  uint64_t v7 = sub_240BB4100();
  uint64_t v9 = v8;
  if (v7 == sub_240BB4100() && v9 == v10)
  {
LABEL_12:
    swift_bridgeObjectRelease_n();
    goto LABEL_13;
  }
  char v12 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v12) {
    goto LABEL_13;
  }
}

uint64_t sub_240AC8070()
{
  swift_getObjectType();
  sub_240A3466C((void *)(v0 + OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_pinnedContentManager), *(void *)(v0 + OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_pinnedContentManager + 24));
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_objectType), sel_identifier);
  sub_240BB6DE0();

  char v2 = sub_240BB33B0();
  swift_bridgeObjectRelease();
  if (v2 != 2) {
    return v2 & 1;
  }
  if (qword_26AFD7790 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_240BB5990();
  sub_240A395FC(v3, (uint64_t)qword_26AFDEAF8);
  uint64_t v4 = sub_240BB5970();
  os_log_type_t v5 = sub_240BB71A0();
  if (os_log_type_enabled(v4, v5))
  {
    char v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v11 = v7;
    *(_DWORD *)char v6 = 136446210;
    uint64_t v8 = sub_240BB7C80();
    sub_240A38940(v8, v9, &v11);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v4, v5, "[%{public}s] Unable to fetch pinned status", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v7, -1, -1);
    MEMORY[0x24560B930](v6, -1, -1);
  }

  return 0;
}

uint64_t sub_240AC82D8(char a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  if (qword_26AFD7790 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_240BB5990();
  sub_240A395FC(v4, (uint64_t)qword_26AFDEAF8);
  os_log_type_t v5 = sub_240BB5970();
  os_log_type_t v6 = sub_240BB71A0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v12 = v8;
    *(_DWORD *)uint64_t v7 = 136446466;
    uint64_t v9 = sub_240BB7C80();
    sub_240A38940(v9, v10, &v12);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 1024;
    sub_240BB75F0();
    _os_log_impl(&dword_240A1B000, v5, v6, "[%{public}s] Setting favorite: %{BOOL}d", (uint8_t *)v7, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v8, -1, -1);
    MEMORY[0x24560B930](v7, -1, -1);
  }

  sub_240A3466C((void *)(v2 + OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_pinnedContentManager), *(void *)(v2 + OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_pinnedContentManager + 24));
  if (a1) {
    return sub_240BB33C0();
  }
  else {
    return sub_240BB33D0();
  }
}

id sub_240AC84D0()
{
  uint64_t v1 = sub_240BB4100();
  uint64_t v3 = v2;
  if (v1 == sub_240BB4100() && v3 == v4) {
    goto LABEL_12;
  }
  char v6 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v6) {
    goto LABEL_13;
  }
  uint64_t v7 = sub_240BB4100();
  uint64_t v9 = v8;
  if (v7 == sub_240BB4100() && v9 == v10)
  {
LABEL_12:
    swift_bridgeObjectRelease_n();
    goto LABEL_13;
  }
  char v12 = sub_240BB7AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
    v16.receiver = v0;
    v16.super_class = (Class)type metadata accessor for AtrialFibrillationDataTypeDetailViewController();
    return objc_msgSendSuper2(&v16, sel_recomputeTotalSampleCount);
  }
LABEL_13:
  uint64_t v14 = (uint64_t)objc_msgSend(objc_msgSend(v0, sel_dataProvider), sel_numberOfSections);
  sub_240BB50A0();
  if (v14 < 1)
  {
    id v15 = 0;
  }
  else
  {
    id v15 = objc_msgSend(objc_msgSend(v0, sel_dataProvider), sel_numberOfObjectsForSection_, 0);
    sub_240BB50A0();
  }

  return objc_msgSend(v0, sel_setTotalSampleCount_, v15);
}

void sub_240AC86DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_240BB2CF0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  os_log_type_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v6 = *(void **)&v1[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_displayType];
  uint64_t v7 = *(void *)&v1[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_providedHealthStore];
  id v8 = objc_msgSend(v1, sel_resolvedHealthToolbox);
  sub_240BB2CE0();
  uint64_t v9 = (void *)sub_240BB2C90();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v10 = objc_msgSend(v6, sel_wd_addDataViewControllerWithHealthStore_healthToolBox_initialStartDate_, v7, v8, v9);

  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v10);
  objc_msgSend(v1, sel_presentViewController_animated_completion_, v11, 1, 0);
}

void sub_240AC88A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t)&v0[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_consumedHealthExperienceStore];
  swift_beginAccess();
  sub_240A830E0(v2, (uint64_t)v14);
  uint64_t v3 = v15;
  if (v15)
  {
    uint64_t v4 = sub_240A3466C(v14, v15);
    uint64_t v5 = *(void *)(v3 - 8);
    MEMORY[0x270FA5388](v4);
    uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(unsigned char *))(v5 + 16))(v7);
    sub_240ACB6D0((uint64_t)v14, &qword_268C9F668, (unint64_t *)&qword_268CA06E0);
    id v8 = (void *)sub_240BB2FE0();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v3);
    id v9 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_providedHealthStore], sel_profileIdentifier);
    id v10 = objc_msgSend(v1, sel_title);
    if (v10)
    {
      id v11 = v10;
      sub_240BB6DE0();
    }
    type metadata accessor for AtrialFibrillationDataTypeDetailViewController();
    sub_240ACB72C(&qword_268CA0160);
    uint64_t v12 = sub_240BB5310();
    swift_bridgeObjectRelease();
    if (v12)
    {
      swift_beginAccess();
      sub_240BB6120();
      swift_endAccess();

      swift_release();
    }
    else
    {
    }
  }
  else
  {
    sub_240ACB6D0((uint64_t)v14, &qword_268C9F668, (unint64_t *)&qword_268CA06E0);
    sub_240BB78D0();
    __break(1u);
  }
}

void sub_240AC8B98()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v35 = sub_240BB5990();
  uint64_t v33 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v34 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240ACB424(0, &qword_26AFD7B70, MEMORY[0x263F06EA8]);
  MEMORY[0x270FA5388](v4 - 8);
  void v27[3] = (char *)v27 - v5;
  sub_240ACB424(0, &qword_268C9F680, MEMORY[0x263F462A8]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v28 = (char *)v27 - v7;
  uint64_t v8 = sub_240BB6C50();
  uint64_t v31 = *(void *)(v8 - 8);
  uint64_t v32 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v29 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v30 = (char *)v27 - v11;
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = ObjectType;
  id v36 = v1;
  uint64_t v14 = *(void **)&v1[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_providedHealthStore];
  uint64_t v15 = (void *)*MEMORY[0x263F09778];
  uint64_t v16 = type metadata accessor for IRNFeatureRegulatoryInfoTransformProvider();
  swift_allocObject();
  id v27[2] = v14;
  v27[1] = v15;
  uint64_t v17 = sub_240BB6C60();
  uint64_t v38 = v16;
  uint64_t v39 = MEMORY[0x263F46318];
  uint64_t v37 = v17;
  if (qword_268C9E7D0 != -1) {
    swift_once();
  }
  sub_240BB2980();
  sub_240BB2980();
  swift_retain();
  sub_240BB2980();
  sub_240BB2B10();
  swift_bridgeObjectRelease();
  id v18 = v28;
  sub_240BB6C20();
  uint64_t v19 = sub_240BB6C30();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 0, 1, v19);
  if (qword_26AFD7790 != -1) {
    swift_once();
  }
  uint64_t v20 = v35;
  uint64_t v21 = sub_240A395FC(v35, (uint64_t)qword_26AFDEAF8);
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v34, v21, v20);
  id v22 = v30;
  sub_240BB6C40();
  id v23 = objc_allocWithZone((Class)type metadata accessor for FeatureRegulatoryAboutViewController());
  uint64_t v25 = v31;
  uint64_t v24 = v32;
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v29, v22, v32);
  uint64_t v26 = (void *)sub_240BB67A0();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
  objc_msgSend(v36, sel_showAdaptively_sender_animated_, v26, 0, 1);
  swift_release();
}

void sub_240AC9108(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  if (qword_26AFD7790 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_240BB5990();
  sub_240A395FC(v2, (uint64_t)qword_26AFDEAF8);
  uint64_t v3 = sub_240BB5970();
  os_log_type_t v4 = sub_240BB71A0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    v14[0] = v6;
    *(_DWORD *)uint64_t v5 = 136446210;
    uint64_t v7 = sub_240BB7C80();
    uint64_t v13 = sub_240A38940(v7, v8, v14);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v3, v4, "[%{public}s] Reenable IRN button action selected", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v6, -1, -1);
    MEMORY[0x24560B930](v5, -1, -1);
  }

  swift_beginAccess();
  uint64_t v9 = (void *)MEMORY[0x24560BA20](v1);
  if (v9)
  {
    uint64_t v10 = v9;
    id v11 = objc_msgSend(v9, sel_navigationController);
    if (v11)
    {
      uint64_t v12 = v11;
    }
    objc_msgSend(v10, sel_launchOnboardingToReenableFeature, v13, v14[0]);
  }
}

uint64_t sub_240AC9304(uint64_t a1)
{
  uint64_t v3 = sub_240BB6C50();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_allocWithZone(v1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t v8 = sub_240BB67A0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v8;
}

void sub_240AC944C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  sub_240ACB4F0();
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  MEMORY[0x270FA5388](v5);
  id v7 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_240BB52C0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_240BB4100();
  uint64_t v14 = v13;
  if (v12 == sub_240BB4100() && v14 == v15)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v17 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0) {
      return;
    }
  }
  v39[1] = ObjectType;
  uint64_t v42 = OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_checklistTileDataSource;
  if (*(void *)&v2[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_checklistTileDataSource])
  {
    swift_retain();
    id v18 = (void *)sub_240BB48F0();
    swift_release();
    objc_msgSend(v18, sel_unregisterObserver_, v2);
  }
  uint64_t v19 = *(void **)&v2[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_providedHealthStore];
  sub_240A1E37C((uint64_t)&v2[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_pinnedContentManager], (uint64_t)v44);
  sub_240A3466C(a1, a1[3]);
  id v20 = v19;
  sub_240BB2FE0();
  uint64_t v21 = *(void **)&v2[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_objectType];
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F446D8], v8);
  sub_240BB3B00();
  swift_allocObject();
  id v22 = v21;
  uint64_t v23 = sub_240BB3AF0();
  uint64_t v24 = v42;
  *(void *)&v2[v42] = v23;
  swift_release();
  uint64_t v25 = *(void *)&v2[v24];
  if (v25)
  {
    swift_retain();
    sub_240BB4920();
    uint64_t v26 = v41;
    uint64_t v27 = sub_240BB5BE0();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v26);
    swift_retain_n();
    uint64_t v28 = sub_240AC7804(v27);
    swift_release();
    swift_bridgeObjectRelease();
    swift_retain();
    uint64_t v29 = v2;
    uint64_t v30 = sub_240ACB558((uint64_t)v28, v25, v29);
    swift_bridgeObjectRelease();
    swift_release_n();
  }
  else
  {
    uint64_t v30 = MEMORY[0x263F8EE78];
  }
  *(void *)&v2[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_allFeatureStatusCellsFromFeedItems] = v30;
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_reloadFeatureStatusSection);
  if (qword_26AFD7790 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_240BB5990();
  sub_240A395FC(v31, (uint64_t)qword_26AFDEAF8);
  uint64_t v32 = sub_240BB5970();
  os_log_type_t v33 = sub_240BB71A0();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    v44[0] = v35;
    *(_DWORD *)uint64_t v34 = 136446210;
    uint64_t v36 = sub_240BB7C80();
    uint64_t v43 = sub_240A38940(v36, v37, v44);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v32, v33, "[%{public}s] Starting observation of feature status feed item changes", v34, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v35, -1, -1);
    MEMORY[0x24560B930](v34, -1, -1);
  }

  if (*(void *)&v2[v24])
  {
    swift_retain();
    uint64_t v38 = (void *)sub_240BB48F0();
    swift_release();
    objc_msgSend(v38, sel_registerObserver_, v2);
  }
}

unint64_t sub_240AC9AF8()
{
  unint64_t v1 = *(void *)(v0
                 + OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_allFeatureStatusCellsFromFeedItems);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v4 = sub_240BB7900();
    swift_bridgeObjectRelease();
    if (v4 < 2) {
      goto LABEL_3;
    }
    sub_240BB4850();
    unint64_t v2 = sub_240BB7900();
    swift_bridgeObjectRelease();
    if (!v2) {
      goto LABEL_3;
    }
  }
  else
  {
    unint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    sub_240BB4850();
    if (v2 < 2)
    {
LABEL_3:
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  unint64_t result = v2 - 1;
  if (__OFSUB__(v2, 1))
  {
    __break(1u);
    goto LABEL_14;
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
LABEL_14:
    id v6 = (id)MEMORY[0x24560AAA0](result, v1);
    goto LABEL_11;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v6 = *(id *)(v1 + 8 * result + 32);
LABEL_11:
    id v7 = v6;
    swift_bridgeObjectRelease();
    id v3 = objc_msgSend(v7, sel_contentView);

    return (unint64_t)v3;
  }
  __break(1u);
  return result;
}

void sub_240AC9C68(void *a1@<X0>, void *a2@<X2>, void *a3@<X8>)
{
  sub_240A3466C(a1, a1[3]);
  sub_240BB3810();
  id v6 = (id)sub_240BB4900();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  sub_240A1E37C((uint64_t)a1, (uint64_t)v20);
  if (!v8)
  {
    sub_240A3466C(v20, v20[3]);
    id v6 = (id)sub_240BB3800();
  }
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v20);
  id v9 = objc_msgSend(a2, sel_tableView);
  if (!v9)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v10 = v9;
  id v11 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v10, sel_dequeueReusableCellWithIdentifier_, v11);

  if (!v6)
  {
LABEL_17:
    sub_240BB78D0();
    __break(1u);
    return;
  }
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    id v12 = v6;
  }
  else {
    id v12 = 0;
  }
  if (!v12)
  {
LABEL_16:

    goto LABEL_17;
  }
  swift_getObjectType();
  sub_240A1E37C((uint64_t)a1, (uint64_t)v19);
  id v13 = v6;
  sub_240BB4370();
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    id v14 = v6;
  }
  else {
    id v14 = 0;
  }
  if (v14)
  {
    swift_getObjectType();
    id v15 = v13;
    id v16 = a2;
    sub_240BB4740();
  }
  id v17 = v13;
  sub_240AC9F18();
  swift_arrayDestroy();
  id v18 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_setAccessibilityIdentifier_, v18);

  *a3 = v13;
}

uint64_t sub_240AC9F18()
{
  sub_240A39CF8(0, (unint64_t *)&qword_26AFD7108, MEMORY[0x263F8E0F8]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_240BBAE40;
  *(void *)(v0 + 32) = sub_240BB6DE0();
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = 5132873;
  *(void *)(v0 + 56) = 0xE300000000000000;
  uint64_t v2 = sub_240BB4850();
  sub_240B85A70(v2);
  sub_240A39CF8(0, &qword_268C9F958, MEMORY[0x263F8D488]);
  sub_240A98D84();
  uint64_t v3 = sub_240BB6D70();
  swift_bridgeObjectRelease();
  return v3;
}

void sub_240ACA024()
{
  id v1 = objc_msgSend(v0, sel_tableView);
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = (void *)sub_240BB2F20();
    id v6 = objc_msgSend(v2, sel_cellForRowAtIndexPath_, v3);

    if (v6)
    {
      swift_getObjectType();
      if (swift_conformsToProtocol2()) {
        id v4 = v6;
      }
      else {
        id v4 = 0;
      }
      if (v4)
      {
        swift_getObjectType();
        id v5 = v6;
        sub_240BB43C0();
      }
      else
      {
      }
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_240ACA490(uint64_t a1)
{
  return sub_240ACAAA8(a1, type metadata accessor for AtrialFibrillationDataTypeDetailViewController);
}

uint64_t type metadata accessor for AtrialFibrillationDataTypeDetailViewController()
{
  return self;
}

uint64_t type metadata accessor for FeatureRegulatoryAboutViewController()
{
  uint64_t result = qword_268CA0148;
  if (!qword_268CA0148) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240ACA5FC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_240ACA63C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_consumedHealthExperienceStore;
  swift_beginAccess();
  return sub_240A830E0(v3, a1);
}

uint64_t sub_240ACA694(uint64_t a1)
{
  return sub_240AC7A48(a1);
}

void (*sub_240ACA6B8(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_240AC7B20(v2);
  return sub_240A47700;
}

id sub_240ACA714()
{
  return objc_retain(*(id *)(*v0
                           + OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_providedHealthStore));
}

uint64_t sub_240ACA728@<X0>(uint64_t a1@<X8>)
{
  return sub_240A1E37C(*v1 + OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_pinnedContentManager, a1);
}

void sub_240ACA754(char a1)
{
  id v3 = objc_msgSend(v1, sel_navigationItem);
  if (a1)
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824A8]), sel_initWithBarButtonSystemItem_target_action_, 0, v1, sel_didTapDone_);
    uint64_t v7 = MEMORY[0x263F8EE78];
    if (v4)
    {
      id v5 = v4;
      MEMORY[0x24560A190]();
      if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_240BB6F60();
      }
      sub_240BB6F70();
      sub_240BB6F30();
    }
    else
    {
      id v5 = 0;
    }
  }
  else
  {
    id v5 = 0;
  }

  sub_240A34DC4(0, (unint64_t *)&qword_268C9F670);
  id v6 = (id)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setRightBarButtonItems_, v6);
}

uint64_t sub_240ACA8B4(void *a1)
{
  swift_unknownObjectRetain();
  id v2 = a1;
  sub_240BB7650();
  sub_240BB50A0();
  objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);

  return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v4);
}

void *sub_240ACA928(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240BB6C50();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_allocWithZone(v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  id v9 = (void *)sub_240BB6790();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  id v11 = v9;
  v10(a2, v4);
  if (v9) {

  }
  return v9;
}

id sub_240ACAA40(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for FeatureRegulatoryAboutViewController();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_240ACAA8C()
{
  return sub_240ACAAA8(0, type metadata accessor for FeatureRegulatoryAboutViewController);
}

id sub_240ACAAA8(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_240ACAAE0()
{
  return type metadata accessor for FeatureRegulatoryAboutViewController();
}

void sub_240ACAAE8(void *a1)
{
  id v1 = a1;
  sub_240ACA754(1);
}

void sub_240ACAB38(void *a1)
{
  id v1 = a1;
  sub_240ACA754(0);
}

uint64_t sub_240ACAB88(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = result;
  if ((a3 & 0xC000000000000001) == 0) {
    goto LABEL_7;
  }
  if (a2 < result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (result == a2)
  {
LABEL_7:
    if (a3 >> 62)
    {
      sub_240BB4850();
      uint64_t v7 = sub_240BB7910();
      swift_bridgeObjectRelease();
      return v7;
    }
    if ((a2 & 0x8000000000000000) == 0)
    {
      uint64_t v7 = a3 & 0xFFFFFFFFFFFFFF8;
      sub_240BB4850();
      return v7;
    }
    __break(1u);
    goto LABEL_13;
  }
  if (result < a2)
  {
    sub_240A34DC4(0, &qword_268CA0168);
    uint64_t result = v5;
    do
    {
      uint64_t v6 = result + 1;
      sub_240BB77E0();
      uint64_t result = v6;
    }
    while (a2 != v6);
    goto LABEL_7;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_240ACAC98(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  id v9 = sub_240A23B08((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v9, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_240A37388(&v12, v10 + 40 * a1 + 32);
}

void sub_240ACAD30(void *a1, uint64_t a2, char a3, char *a4, uint64_t a5, uint64_t a6)
{
  sub_240ACB424(0, (unint64_t *)&qword_268CA0B80, MEMORY[0x263F43C08]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v60[-1] - v13;
  v63[3] = a5;
  v63[4] = a6;
  id v15 = sub_240A23B08(v63);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(v15, a2, a5);
  id v16 = &a4[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_consumedHealthExperienceStore];
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9940);
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  *(_OWORD *)id v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *((void *)v16 + 4) = 0;
  id v18 = a4;
  id v19 = objc_msgSend(ObjCClassFromMetadata, sel_atrialFibrillationEventType);
  if (!v19)
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v20 = OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_objectType;
  *(void *)&v18[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_objectType] = v19;
  *(void *)&v18[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_favoritesObserver] = 0;
  *(void *)&v18[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_checklistTileDataSource] = 0;
  *(void *)&v18[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_allFeatureStatusCellsFromFeedItems] = MEMORY[0x263F8EE78];
  *(void *)&v18[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_cancellables] = MEMORY[0x263F8EE88];
  id v21 = objc_msgSend(a1, sel_profile);
  id v22 = objc_msgSend(v21, sel_healthStore);

  if (!v22)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  *(void *)&v18[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_providedHealthStore] = v22;
  sub_240A1E37C((uint64_t)v63, (uint64_t)&v18[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_pinnedContentManager]);
  id v23 = objc_msgSend(self, sel_sharedInstanceForHealthStore_, v22);
  if (!v23)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v24 = v23;
  id v25 = objc_msgSend(v23, sel_displayTypeForObjectType_, *(void *)&v18[v20]);

  if (!v25)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v26 = OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_displayType;
  *(void *)&v18[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_displayType] = v25;
  *(void *)&v18[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_viewControllerFactory] = a1;
  id v27 = a1;
  id v28 = objc_msgSend(v27, sel_profile);
  id v29 = objc_msgSend(v28, sel_healthStore);

  if (!v29)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  id v30 = objc_msgSend(v29, sel_profileIdentifier);

  id v31 = objc_msgSend(v30, sel_type);
  *(void *)&v18[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_profileType] = v31;
  if (a3 != 4)
  {
    v18[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_mode] = a3;

    uint64_t v37 = qword_240BBF1D8[a3];
LABEL_10:
    id v38 = *(id *)&v18[v26];
    id v39 = objc_msgSend(v27, sel_profile);
    uint64_t v40 = (objc_class *)type metadata accessor for AtrialFibrillationDataTypeDetailViewController();
    v62.receiver = v18;
    v62.super_class = v40;
    id v41 = objc_msgSendSuper2(&v62, sel_initWithDisplayType_profile_mode_, v38, v39, v37);

    uint64_t v42 = (char *)v41;
    sub_240AC7E54();
    if (objc_msgSend(*(id *)&v42[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_displayType], sel_allowsManualEntry))
    {
      uint64_t v43 = sub_240BB4100();
      uint64_t v45 = v44;
      if (v43 == sub_240BB4100() && v45 == v46)
      {
        swift_bridgeObjectRelease_n();
LABEL_15:
        if (qword_26AFDA090 != -1) {
          swift_once();
        }
        sub_240BB2980();
        uint64_t v61 = v40;
        v60[0] = v42;
        char v48 = v42;
        unint64_t v49 = (void *)sub_240BB6DA0();
        swift_bridgeObjectRelease();
        uint64_t v50 = (uint64_t)v61;
        if (v61)
        {
          uint64_t v51 = sub_240A3466C(v60, (uint64_t)v61);
          uint64_t v52 = *(void *)(v50 - 8);
          MEMORY[0x270FA5388](v51);
          uint64_t v54 = (char *)&v60[-1] - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v52 + 16))(v54);
          uint64_t v55 = sub_240BB7AD0();
          (*(void (**)(char *, uint64_t))(v52 + 8))(v54, v50);
          _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v60);
        }
        else
        {
          uint64_t v55 = 0;
        }
        id v56 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824A8]), sel_initWithTitle_style_target_action_, v49, 0, v55, sel_showAddDataVC);

        sub_240BB50A0();
        id v57 = objc_msgSend(v48, sel_navigationItem);
        id v58 = v56;
        objc_msgSend(v57, sel_setRightBarButtonItem_, v58);

        id v27 = v58;
        goto LABEL_21;
      }
      char v47 = sub_240BB7AE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v47) {
        goto LABEL_15;
      }
    }
LABEL_21:

    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v63);
    return;
  }
  id v32 = objc_msgSend(v27, sel_profile);
  id v33 = objc_msgSend(v32, sel_healthStore);

  if (v33)
  {
    id v34 = objc_msgSend(v33, sel_profileIdentifier);

    uint64_t v35 = sub_240BB3E60();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v14, 1, 1, v35);
    char v36 = sub_240BB40F0();

    sub_240ACB478((uint64_t)v14);
    v18[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_mode] = v36;

    uint64_t v37 = 0;
    goto LABEL_10;
  }
LABEL_27:
  __break(1u);
}

void sub_240ACB424(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240BB75E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_240ACB478(uint64_t a1)
{
  sub_240ACB424(0, (unint64_t *)&qword_268CA0B80, MEMORY[0x263F43C08]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_240ACB4F0()
{
  if (!qword_268CA0158)
  {
    unint64_t v0 = sub_240BB5C00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CA0158);
    }
  }
}

uint64_t sub_240ACB558(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v10 = MEMORY[0x263F8EE78];
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    id v8 = (void *)(a1 + 32);
    sub_240BB4850();
    do
    {
      sub_240AC9C68(v8, a3, &v9);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v9)
      {
        MEMORY[0x24560A190]();
        if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_240BB6F60();
        }
        sub_240BB6F70();
        sub_240BB6F30();
      }
      v8 += 5;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

void sub_240ACB678(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_240A39BC8(255, a3);
    unint64_t v4 = sub_240BB75E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_240ACB6D0(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  sub_240ACB678(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_240ACB72C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AtrialFibrillationDataTypeDetailViewController();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240ACB76C(uint64_t a1, uint64_t a2)
{
  sub_240ACB678(0, &qword_268C9F668, (unint64_t *)&qword_268CA06E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_240ACB7E8()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_consumedHealthExperienceStore];
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9940);
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;
  id v3 = objc_msgSend(ObjCClassFromMetadata, sel_atrialFibrillationEventType);
  if (!v3) {
    __break(1u);
  }
  *(void *)&v0[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_objectType] = v3;
  *(void *)&v0[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_favoritesObserver] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_checklistTileDataSource] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_allFeatureStatusCellsFromFeedItems] = MEMORY[0x263F8EE78];
  *(void *)&v0[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_cancellables] = MEMORY[0x263F8EE88];

  sub_240BB78D0();
  __break(1u);
}

uint64_t sub_240ACB8E8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if ((a4 & 1) == 0)
  {
LABEL_2:
    return sub_240B42760(a1, a2, a3, a4);
  }
  sub_240BB7B00();
  swift_unknownObjectRetain_n();
  uint64_t v9 = swift_dynamicCastClass();
  if (!v9)
  {
    sub_240BB50A0();
    uint64_t v9 = MEMORY[0x263F8EE78];
  }
  uint64_t v10 = *(void *)(v9 + 16);
  swift_release();
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v10 != (a4 >> 1) - a3)
  {
LABEL_13:
    sub_240BB50A0();
    goto LABEL_2;
  }
  uint64_t result = swift_dynamicCastClass();
  if (!result)
  {
    sub_240BB50A0();
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void sub_240ACB9D8(uint64_t a1, unint64_t a2)
{
  id v3 = v2;
  swift_getObjectType();
  sub_240ACB4F0();
  uint64_t v7 = v6;
  uint64_t v37 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_checklistTileDataSource;
  if (!*(void *)&v2[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_checklistTileDataSource]) {
    goto LABEL_7;
  }
  swift_retain();
  uint64_t v11 = sub_240BB48E0();
  uint64_t v13 = v12;
  swift_release();
  if (v11 == a1 && v13 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v15 = sub_240BB7AE0();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
LABEL_7:
      if (qword_26AFD7790 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_240BB5990();
      sub_240A395FC(v16, (uint64_t)qword_26AFDEAF8);
      swift_bridgeObjectRetain_n();
      id v17 = sub_240BB5970();
      os_log_type_t v18 = sub_240BB7180();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = swift_slowAlloc();
        uint64_t v20 = swift_slowAlloc();
        uint64_t v39 = v20;
        *(_DWORD *)uint64_t v19 = 136446466;
        uint64_t v21 = sub_240BB7C80();
        uint64_t v38 = sub_240A38940(v21, v22, &v39);
        sub_240BB75F0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v19 + 12) = 2080;
        sub_240BB4850();
        uint64_t v38 = sub_240A38940(a1, a2, &v39);
        sub_240BB75F0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_240A1B000, v17, v18, "[%{public}s] Received notification of unknown data source change from %s", (uint8_t *)v19, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24560B930](v20, -1, -1);
        MEMORY[0x24560B930](v19, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      return;
    }
  }
  if (qword_26AFD7790 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_240BB5990();
  sub_240A395FC(v23, (uint64_t)qword_26AFDEAF8);
  uint64_t v24 = sub_240BB5970();
  os_log_type_t v25 = sub_240BB71A0();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v36 = v7;
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v39 = v27;
    *(_DWORD *)uint64_t v26 = 136446210;
    uint64_t v28 = sub_240BB7C80();
    uint64_t v38 = sub_240A38940(v28, v29, &v39);
    uint64_t v7 = v36;
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v24, v25, "[%{public}s] Received notification of feature status feed items change", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v27, -1, -1);
    MEMORY[0x24560B930](v26, -1, -1);
  }

  uint64_t v30 = *(void *)&v3[v10];
  if (v30)
  {
    swift_retain();
    sub_240BB4920();
    uint64_t v31 = sub_240BB5BE0();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v7);
    swift_retain_n();
    id v32 = sub_240AC7804(v31);
    swift_release();
    swift_bridgeObjectRelease();
    swift_retain();
    id v33 = v3;
    uint64_t v34 = sub_240ACB558((uint64_t)v32, v30, v33);
    swift_bridgeObjectRelease();
    swift_release_n();
  }
  else
  {
    uint64_t v34 = MEMORY[0x263F8EE78];
  }
  *(void *)&v3[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_allFeatureStatusCellsFromFeedItems] = v34;
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_reloadFeatureStatusSection);
}

uint64_t sub_240ACBEEC()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240ACBF24()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_240ACBF5C()
{
  sub_240AC9108(*(void *)(v0 + 16));
}

void sub_240ACBF64()
{
  qword_268CA2958 = (uint64_t)&unk_26F503490;
}

uint64_t sub_240ACBF78()
{
  uint64_t v1 = OBJC_IVAR____TtC5Heart25AFibBurdenLifeFactorsView____lazy_storage___lifeFactorsViews;
  if (*(void *)&v0[OBJC_IVAR____TtC5Heart25AFibBurdenLifeFactorsView____lazy_storage___lifeFactorsViews])
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC5Heart25AFibBurdenLifeFactorsView____lazy_storage___lifeFactorsViews];
  }
  else
  {
    if (qword_268C9E6C0 != -1) {
      swift_once();
    }
    uint64_t v3 = qword_268CA2958;
    uint64_t v4 = *(void *)(qword_268CA2958 + 16);
    uint64_t v2 = MEMORY[0x263F8EE78];
    if (v4)
    {
      uint64_t v15 = v1;
      uint64_t v16 = v0;
      uint64_t v17 = MEMORY[0x263F8EE78];
      uint64_t v5 = v0;
      sub_240BB4850();
      sub_240BB7880();
      uint64_t v6 = OBJC_IVAR____TtC5Heart25AFibBurdenLifeFactorsView_cacheObject;
      uint64_t v7 = *(void **)&v5[OBJC_IVAR____TtC5Heart25AFibBurdenLifeFactorsView_healthStore];
      uint64_t v8 = (objc_class *)type metadata accessor for AFibBurdenLifeFactorView();
      uint64_t v9 = 0;
      do
      {
        uint64_t v10 = v9 + 1;
        uint64_t v11 = *(void *)&v5[v6];
        char v12 = *(unsigned char *)(v3 + v9 + 32);
        objc_allocWithZone(v8);
        sub_240BB4850();
        uint64_t v13 = sub_240AB2E78(v12, v11, v7);
        objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
        *(void *)&v13[OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView_delegate + 8] = &off_26F5065F0;
        swift_unknownObjectWeakAssign();
        sub_240BB7860();
        sub_240BB7890();
        sub_240BB78A0();
        sub_240BB7870();
        uint64_t v9 = v10;
      }
      while (v4 != v10);
      uint64_t v2 = v17;
      swift_bridgeObjectRelease();

      uint64_t v1 = v15;
      uint64_t v0 = v16;
    }
    *(void *)&v0[v1] = v2;
    sub_240BB4850();
    swift_bridgeObjectRelease();
  }
  sub_240BB4850();
  return v2;
}

uint64_t sub_240ACC1E4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  if (qword_26AFD7BF0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_240BB5990();
  sub_240A395FC(v4, (uint64_t)qword_26AFDEB80);
  uint64_t v5 = sub_240BB5970();
  os_log_type_t v6 = sub_240BB71A0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v28 = v8;
    uint64_t v29 = ObjectType;
    *(_DWORD *)uint64_t v7 = 136446210;
    swift_getMetatypeMetadata();
    uint64_t v9 = sub_240BB6E10();
    uint64_t v29 = sub_240A38940(v9, v10, &v28);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v5, v6, "[%{public}s] Updating view with new cache object", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v8, -1, -1);
    MEMORY[0x24560B930](v7, -1, -1);
  }

  *(void *)(v2 + OBJC_IVAR____TtC5Heart25AFibBurdenLifeFactorsView_cacheObject) = a1;
  sub_240BB4850();
  swift_bridgeObjectRelease();
  unint64_t v11 = sub_240ACBF78();
  unint64_t v12 = v11;
  if (!(v11 >> 62))
  {
    uint64_t v13 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = sub_240BB4850();
    if (v13) {
      goto LABEL_7;
    }
    return swift_bridgeObjectRelease_n();
  }
  sub_240BB4850();
  uint64_t result = sub_240BB7900();
  uint64_t v13 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_7:
  if (v13 >= 1)
  {
    uint64_t v15 = 0;
    do
    {
      if ((v12 & 0xC000000000000001) != 0) {
        id v16 = (id)MEMORY[0x24560AAA0](v15, v12);
      }
      else {
        id v16 = *(id *)(v12 + 8 * v15 + 32);
      }
      uint64_t v17 = v16;
      ++v15;
      sub_240A92278(a1);
      id v18 = sub_240AB2970();
      id v19 = sub_240A907B0();
      objc_msgSend(v18, sel_setImage_, v19);

      id v20 = sub_240AB2A3C();
      sub_240A90BB8();
      uint64_t v22 = v21;
      uint64_t v24 = v23;
      uint64_t v25 = sub_240A90CA0();
      sub_240AE7310(v22, v24, v25, v26);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    while (v13 != v15);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

void sub_240ACC4E8()
{
  if (qword_268C9E6C0 != -1) {
    swift_once();
  }
  if (*(void *)(qword_268CA2958 + 16) == 5)
  {
    id v219 = v1;
    uint64_t v221 = MEMORY[0x263F8EE78];
    uint64_t v7 = 4;
    sub_240BB7880();
    BOOL v8 = 0;
    uint64_t v4 = 1;
    uint64_t v3 = &off_2650DD000;
    uint64_t v5 = &off_2650DD000;
    os_log_type_t v6 = (__objc2_prot **)0x263F82000;
    while (!v8)
    {
      id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_init);
      objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
      id v10 = objc_msgSend(self, sel_separatorColor);
      objc_msgSend(v9, sel_setBackgroundColor_, v10);

      sub_240BB7860();
      sub_240BB7890();
      sub_240BB78A0();
      sub_240BB7870();
      BOOL v8 = v4 == 4;
      if (v4 == 4)
      {
        uint64_t v4 = 0;
      }
      else if (__OFADD__(v4++, 1))
      {
        __break(1u);
LABEL_12:
        uint64_t v0 = v219;
        uint64_t v2 = v221;
        unint64_t v12 = sub_240ACBF78();
        if (v12 >> 62) {
          goto LABEL_153;
        }
        sub_240BB4850();
        sub_240BB7AF0();
        sub_240A34DC4(0, (unint64_t *)&qword_268CA00D8);
        uint64_t v13 = v12;
        goto LABEL_14;
      }
      if (!--v7) {
        goto LABEL_12;
      }
    }
    goto LABEL_207;
  }
  __break(1u);
LABEL_153:
  sub_240A34DC4(0, (unint64_t *)&qword_268CA00D8);
  uint64_t v13 = sub_240BB78F0();
LABEL_14:
  swift_bridgeObjectRelease();
  uint64_t v222 = v13;
  unint64_t v14 = sub_240BB4850();
  sub_240B85BF4(v14);
  sub_240BB7480();
  swift_bridgeObjectRelease();
  sub_240A34E00();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_240BBF200;
  uint64_t v16 = sub_240ACBF78();
  uint64_t v17 = v16;
  if ((v16 & 0xC000000000000001) != 0)
  {
    id v18 = (id)MEMORY[0x24560AAA0](0, v16);
  }
  else
  {
    if (!*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_156;
    }
    id v18 = *(id *)(v16 + 32);
  }
  id v19 = v18;
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(v19, sel_topAnchor);

  id v21 = objc_msgSend(v0, sel_topAnchor);
  uint64_t v4 = (uint64_t)&off_2650DD000;
  id v22 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v21);

  *(void *)(v15 + 32) = v22;
  uint64_t v23 = sub_240ACBF78();
  uint64_t v17 = v23;
  if ((v23 & 0xC000000000000001) != 0)
  {
LABEL_156:
    id v24 = (id)MEMORY[0x24560AAA0](0, v17);
    goto LABEL_20;
  }
  if (!*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_158;
  }
  id v24 = *(id *)(v23 + 32);
LABEL_20:
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  os_log_type_t v6 = &off_2650DD000;
  id v26 = objc_msgSend(v25, sel_leadingAnchor);

  id v27 = objc_msgSend(v0, sel_leadingAnchor);
  id v28 = objc_msgSend(v26, *(SEL *)(v4 + 784), v27);

  *(void *)(v15 + 40) = v28;
  uint64_t v29 = sub_240ACBF78();
  uint64_t v17 = v29;
  if ((v29 & 0xC000000000000001) != 0)
  {
LABEL_158:
    id v30 = (id)MEMORY[0x24560AAA0](0, v17);
    goto LABEL_23;
  }
  if (!*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_160;
  }
  id v30 = *(id *)(v29 + 32);
LABEL_23:
  uint64_t v31 = v30;
  swift_bridgeObjectRelease();
  id v32 = objc_msgSend(v31, sel_trailingAnchor);

  id v33 = objc_msgSend(v0, sel_trailingAnchor);
  id v28 = objc_msgSend(v32, *(SEL *)(v4 + 784), v33);

  *(void *)(v15 + 48) = v28;
  uint64_t v5 = (__objc2_prot **)(v2 & 0xC000000000000001);
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_160:
    id v34 = (id)MEMORY[0x24560AAA0](0, v2);
    goto LABEL_26;
  }
  if (!*(void *)(v2 + 16))
  {
    __break(1u);
LABEL_162:
    id v41 = (id)MEMORY[0x24560AAA0](0, v32);
    goto LABEL_32;
  }
  id v34 = *(id *)(v2 + 32);
LABEL_26:
  uint64_t v35 = v34;
  id v36 = objc_msgSend(v34, sel_heightAnchor, v219, v222);

  HKUIOnePixel();
  id v37 = objc_msgSend(v36, sel_constraintEqualToConstant_);

  *(void *)(v15 + 56) = v37;
  if (v5) {
    id v38 = (id)MEMORY[0x24560AAA0](0, v2);
  }
  else {
    id v38 = *(id *)(v2 + 32);
  }
  uint64_t v39 = v38;
  id v33 = objc_msgSend(v38, sel_topAnchor);

  uint64_t v40 = sub_240ACBF78();
  id v32 = (id)v40;
  if ((v40 & 0xC000000000000001) != 0) {
    goto LABEL_162;
  }
  if (!*(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_164:
    id v49 = (id)MEMORY[0x24560AAA0](0, v28);
    goto LABEL_38;
  }
  id v41 = *(id *)(v40 + 32);
LABEL_32:
  uint64_t v42 = v41;
  swift_bridgeObjectRelease();
  id v43 = objc_msgSend(v42, sel_bottomAnchor);

  id v44 = objc_msgSend(v33, *(SEL *)(v4 + 784), v43);
  *(void *)(v15 + 64) = v44;
  if (v5) {
    id v45 = (id)MEMORY[0x24560AAA0](0, v2);
  }
  else {
    id v45 = *(id *)(v2 + 32);
  }
  uint64_t v46 = v45;
  id v33 = objc_msgSend(v45, (SEL)v6[115], v219);

  uint64_t v47 = (uint64_t)v0;
  uint64_t v48 = sub_240ACBF78();
  id v28 = (id)v48;
  if ((v48 & 0xC000000000000001) != 0) {
    goto LABEL_164;
  }
  if (!*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_166:
    id v60 = (id)MEMORY[0x24560AAA0](1, v47);
    goto LABEL_44;
  }
  id v49 = *(id *)(v48 + 32);
LABEL_38:
  uint64_t v50 = v49;
  swift_bridgeObjectRelease();
  id v51 = sub_240AB2A3C();
  id v52 = [v51 (SEL)v6[115]];

  id v53 = objc_msgSend(v33, *(SEL *)(v4 + 784), v52);
  *(void *)(v15 + 72) = v53;
  if (v5) {
    id v54 = (id)MEMORY[0x24560AAA0](0, v2);
  }
  else {
    id v54 = *(id *)(v2 + 32);
  }
  uint64_t v55 = v54;
  uint64_t v3 = &off_2650DD000;
  id v56 = objc_msgSend(v54, sel_trailingAnchor);

  id v57 = objc_msgSend(v0, sel_trailingAnchor);
  id v58 = objc_msgSend(v56, *(SEL *)(v4 + 784), v57);

  *(void *)(v15 + 80) = v58;
  uint64_t v59 = sub_240ACBF78();
  uint64_t v47 = v59;
  if ((v59 & 0xC000000000000001) != 0) {
    goto LABEL_166;
  }
  if (*(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
  {
    __break(1u);
LABEL_168:
    id v68 = (id)MEMORY[0x24560AAA0](1, v47);
    goto LABEL_50;
  }
  id v60 = *(id *)(v59 + 40);
LABEL_44:
  uint64_t v61 = v60;
  swift_bridgeObjectRelease();
  id v62 = objc_msgSend(v61, sel_topAnchor);

  if (v5) {
    id v63 = (id)MEMORY[0x24560AAA0](0, v2);
  }
  else {
    id v63 = *(id *)(v2 + 32);
  }
  uint64_t v64 = v63;
  id v65 = objc_msgSend(v63, sel_bottomAnchor);

  id v66 = objc_msgSend(v62, *(SEL *)(v4 + 784), v65);
  *(void *)(v15 + 88) = v66;
  uint64_t v67 = sub_240ACBF78();
  uint64_t v47 = v67;
  if ((v67 & 0xC000000000000001) != 0) {
    goto LABEL_168;
  }
  if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
  {
    __break(1u);
    goto LABEL_170;
  }
  id v68 = *(id *)(v67 + 40);
LABEL_50:
  uint64_t v69 = v68;
  swift_bridgeObjectRelease();
  id v70 = [v69 (SEL)v6[115]];

  id v71 = [v0 (SEL)v6[115]];
  id v72 = objc_msgSend(v70, *(SEL *)(v4 + 784), v71);

  *(void *)(v15 + 96) = v72;
  uint64_t v73 = sub_240ACBF78();
  uint64_t v47 = v73;
  if ((v73 & 0xC000000000000001) != 0)
  {
LABEL_170:
    id v74 = (id)MEMORY[0x24560AAA0](1, v47);
    goto LABEL_53;
  }
  if (*(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
  {
    __break(1u);
LABEL_172:
    id v86 = (id)MEMORY[0x24560AAA0](1, v47);
    goto LABEL_63;
  }
  id v74 = *(id *)(v73 + 40);
LABEL_53:
  uint64_t v75 = v74;
  swift_bridgeObjectRelease();
  id v76 = [v75 (SEL)v3[117]];

  id v77 = [v0 (SEL)v3[117]];
  id v78 = objc_msgSend(v76, *(SEL *)(v4 + 784), v77);

  *(void *)(v15 + 104) = v78;
  if (v5)
  {
    id v79 = (id)MEMORY[0x24560AAA0](1, v2);
  }
  else
  {
    if (*(void *)(v2 + 16) < 2uLL)
    {
LABEL_204:
      __break(1u);
      goto LABEL_205;
    }
    id v79 = *(id *)(v2 + 40);
  }
  uint64_t v80 = v79;
  id v81 = objc_msgSend(v79, sel_heightAnchor);

  HKUIOnePixel();
  id v82 = objc_msgSend(v81, sel_constraintEqualToConstant_);

  *(void *)(v15 + 112) = v82;
  if (v5) {
    id v83 = (id)MEMORY[0x24560AAA0](1, v2);
  }
  else {
    id v83 = *(id *)(v2 + 40);
  }
  uint64_t v84 = v83;
  id v71 = objc_msgSend(v83, sel_topAnchor);

  uint64_t v85 = sub_240ACBF78();
  uint64_t v47 = v85;
  if ((v85 & 0xC000000000000001) != 0) {
    goto LABEL_172;
  }
  if (*(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
  {
    __break(1u);
LABEL_174:
    id v93 = (id)MEMORY[0x24560AAA0](1, v47);
    goto LABEL_69;
  }
  id v86 = *(id *)(v85 + 40);
LABEL_63:
  char v87 = v86;
  swift_bridgeObjectRelease();
  id v88 = objc_msgSend(v87, sel_bottomAnchor);

  id v89 = objc_msgSend(v71, *(SEL *)(v4 + 784), v88);
  *(void *)(v15 + 120) = v89;
  if (v5) {
    id v90 = (id)MEMORY[0x24560AAA0](1, v2);
  }
  else {
    id v90 = *(id *)(v2 + 40);
  }
  uint64_t v91 = v90;
  id v71 = [v90 (SEL)v6[115]];

  uint64_t v92 = sub_240ACBF78();
  uint64_t v47 = v92;
  if ((v92 & 0xC000000000000001) != 0) {
    goto LABEL_174;
  }
  if (*(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
  {
    __break(1u);
LABEL_176:
    id v104 = (id)MEMORY[0x24560AAA0](2, v47);
    goto LABEL_75;
  }
  id v93 = *(id *)(v92 + 40);
LABEL_69:
  uint64_t v94 = v93;
  swift_bridgeObjectRelease();
  id v95 = sub_240AB2A3C();
  id v96 = [v95 (SEL)v6[115]];

  id v97 = objc_msgSend(v71, *(SEL *)(v4 + 784), v96);
  *(void *)(v15 + 128) = v97;
  if (v5) {
    id v98 = (id)MEMORY[0x24560AAA0](1, v2);
  }
  else {
    id v98 = *(id *)(v2 + 40);
  }
  char v99 = v98;
  uint64_t v3 = &off_2650DD000;
  id v100 = objc_msgSend(v98, sel_trailingAnchor);

  id v101 = objc_msgSend(v0, sel_trailingAnchor);
  id v102 = objc_msgSend(v100, *(SEL *)(v4 + 784), v101);

  *(void *)(v15 + 136) = v102;
  uint64_t v103 = sub_240ACBF78();
  uint64_t v47 = v103;
  if ((v103 & 0xC000000000000001) != 0) {
    goto LABEL_176;
  }
  if (*(void *)((v103 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3uLL)
  {
    __break(1u);
LABEL_178:
    id v112 = (id)MEMORY[0x24560AAA0](2, v47);
    goto LABEL_81;
  }
  id v104 = *(id *)(v103 + 48);
LABEL_75:
  uint64_t v105 = v104;
  swift_bridgeObjectRelease();
  id v106 = objc_msgSend(v105, sel_topAnchor);

  if (v5) {
    id v107 = (id)MEMORY[0x24560AAA0](1, v2);
  }
  else {
    id v107 = *(id *)(v2 + 40);
  }
  uint64_t v108 = v107;
  id v109 = objc_msgSend(v107, sel_bottomAnchor);

  id v110 = objc_msgSend(v106, *(SEL *)(v4 + 784), v109);
  *(void *)(v15 + 144) = v110;
  uint64_t v111 = sub_240ACBF78();
  uint64_t v47 = v111;
  if ((v111 & 0xC000000000000001) != 0) {
    goto LABEL_178;
  }
  if (*(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3uLL)
  {
    __break(1u);
    goto LABEL_180;
  }
  id v112 = *(id *)(v111 + 48);
LABEL_81:
  uint64_t v113 = v112;
  swift_bridgeObjectRelease();
  id v114 = [v113 (SEL)v6[115]];

  id v115 = [v0 (SEL)v6[115]];
  id v116 = objc_msgSend(v114, *(SEL *)(v4 + 784), v115);

  *(void *)(v15 + 152) = v116;
  uint64_t v117 = sub_240ACBF78();
  uint64_t v47 = v117;
  if ((v117 & 0xC000000000000001) != 0)
  {
LABEL_180:
    id v118 = (id)MEMORY[0x24560AAA0](2, v47);
    goto LABEL_84;
  }
  if (*(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3uLL)
  {
    __break(1u);
LABEL_182:
    id v130 = (id)MEMORY[0x24560AAA0](2, v47);
    goto LABEL_94;
  }
  id v118 = *(id *)(v117 + 48);
LABEL_84:
  uint64_t v119 = v118;
  swift_bridgeObjectRelease();
  id v120 = [v119 (SEL)v3[117]];

  id v121 = [v0 (SEL)v3[117]];
  id v122 = objc_msgSend(v120, *(SEL *)(v4 + 784), v121);

  *(void *)(v15 + 160) = v122;
  if (v5)
  {
    id v123 = (id)MEMORY[0x24560AAA0](2, v2);
  }
  else
  {
    if (*(void *)(v2 + 16) < 3uLL)
    {
LABEL_205:
      __break(1u);
      goto LABEL_206;
    }
    id v123 = *(id *)(v2 + 48);
  }
  uint64_t v124 = v123;
  id v125 = objc_msgSend(v123, sel_heightAnchor);

  HKUIOnePixel();
  id v126 = objc_msgSend(v125, sel_constraintEqualToConstant_);

  *(void *)(v15 + 168) = v126;
  if (v5) {
    id v127 = (id)MEMORY[0x24560AAA0](2, v2);
  }
  else {
    id v127 = *(id *)(v2 + 48);
  }
  uint64_t v128 = v127;
  id v115 = objc_msgSend(v127, sel_topAnchor);

  uint64_t v129 = sub_240ACBF78();
  uint64_t v47 = v129;
  if ((v129 & 0xC000000000000001) != 0) {
    goto LABEL_182;
  }
  if (*(void *)((v129 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3uLL)
  {
    __break(1u);
LABEL_184:
    id v138 = (id)MEMORY[0x24560AAA0](2, v122);
    goto LABEL_100;
  }
  id v130 = *(id *)(v129 + 48);
LABEL_94:
  uint64_t v131 = v130;
  swift_bridgeObjectRelease();
  id v132 = objc_msgSend(v131, sel_bottomAnchor);

  id v133 = objc_msgSend(v115, *(SEL *)(v4 + 784), v132);
  *(void *)(v15 + 176) = v133;
  if (v5) {
    id v134 = (id)MEMORY[0x24560AAA0](2, v2);
  }
  else {
    id v134 = *(id *)(v2 + 48);
  }
  uint64_t v135 = v134;
  id v115 = [v134 (SEL)v6[115]];

  uint64_t v136 = (uint64_t)v0;
  uint64_t v137 = sub_240ACBF78();
  id v122 = (id)v137;
  if ((v137 & 0xC000000000000001) != 0) {
    goto LABEL_184;
  }
  if (*(void *)((v137 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3uLL)
  {
    __break(1u);
LABEL_186:
    id v149 = (id)MEMORY[0x24560AAA0](3, v136);
    goto LABEL_106;
  }
  id v138 = *(id *)(v137 + 48);
LABEL_100:
  uint64_t v139 = v138;
  swift_bridgeObjectRelease();
  id v140 = sub_240AB2A3C();
  id v141 = [v140 (SEL)v6[115]];

  id v142 = objc_msgSend(v115, *(SEL *)(v4 + 784), v141);
  *(void *)(v15 + 184) = v142;
  if (v5) {
    id v143 = (id)MEMORY[0x24560AAA0](2, v2);
  }
  else {
    id v143 = *(id *)(v2 + 48);
  }
  uint64_t v144 = v143;
  uint64_t v3 = &off_2650DD000;
  id v145 = objc_msgSend(v143, sel_trailingAnchor);

  id v146 = objc_msgSend(v0, sel_trailingAnchor);
  id v147 = objc_msgSend(v145, *(SEL *)(v4 + 784), v146);

  *(void *)(v15 + 192) = v147;
  uint64_t v148 = sub_240ACBF78();
  uint64_t v136 = v148;
  if ((v148 & 0xC000000000000001) != 0) {
    goto LABEL_186;
  }
  if (*(void *)((v148 & 0xFFFFFFFFFFFFFF8) + 0x10) < 4uLL)
  {
    __break(1u);
LABEL_188:
    id v157 = (id)MEMORY[0x24560AAA0](3, v136);
    goto LABEL_112;
  }
  id v149 = *(id *)(v148 + 56);
LABEL_106:
  uint64_t v150 = v149;
  swift_bridgeObjectRelease();
  id v151 = objc_msgSend(v150, sel_topAnchor);

  if (v5) {
    id v152 = (id)MEMORY[0x24560AAA0](2, v2);
  }
  else {
    id v152 = *(id *)(v2 + 48);
  }
  uint64_t v153 = v152;
  id v154 = objc_msgSend(v152, sel_bottomAnchor);

  id v155 = objc_msgSend(v151, *(SEL *)(v4 + 784), v154);
  *(void *)(v15 + 200) = v155;
  uint64_t v156 = sub_240ACBF78();
  uint64_t v136 = v156;
  if ((v156 & 0xC000000000000001) != 0) {
    goto LABEL_188;
  }
  if (*(void *)((v156 & 0xFFFFFFFFFFFFFF8) + 0x10) < 4uLL)
  {
    __break(1u);
    goto LABEL_190;
  }
  id v157 = *(id *)(v156 + 56);
LABEL_112:
  uint64_t v158 = v157;
  swift_bridgeObjectRelease();
  id v159 = [v158 (SEL)v6[115]];

  id v160 = [v0 (SEL)v6[115]];
  id v161 = objc_msgSend(v159, *(SEL *)(v4 + 784), v160);

  *(void *)(v15 + 208) = v161;
  uint64_t v162 = sub_240ACBF78();
  uint64_t v136 = v162;
  if ((v162 & 0xC000000000000001) != 0)
  {
LABEL_190:
    id v163 = (id)MEMORY[0x24560AAA0](3, v136);
    goto LABEL_115;
  }
  if (*(void *)((v162 & 0xFFFFFFFFFFFFFF8) + 0x10) < 4uLL)
  {
    __break(1u);
LABEL_192:
    id v175 = (id)MEMORY[0x24560AAA0](3, v136);
    goto LABEL_125;
  }
  id v163 = *(id *)(v162 + 56);
LABEL_115:
  uint64_t v164 = v163;
  swift_bridgeObjectRelease();
  id v165 = [v164 (SEL)v3[117]];

  id v166 = [v0 (SEL)v3[117]];
  id v167 = objc_msgSend(v165, *(SEL *)(v4 + 784), v166);

  *(void *)(v15 + 216) = v167;
  if (v5)
  {
    id v168 = (id)MEMORY[0x24560AAA0](3, v2);
  }
  else
  {
    if (*(void *)(v2 + 16) < 4uLL)
    {
LABEL_206:
      __break(1u);
LABEL_207:
      __break(1u);
      return;
    }
    id v168 = *(id *)(v2 + 56);
  }
  uint64_t v169 = v168;
  id v170 = objc_msgSend(v168, sel_heightAnchor);

  HKUIOnePixel();
  id v171 = objc_msgSend(v170, sel_constraintEqualToConstant_);

  *(void *)(v15 + 224) = v171;
  if (v5) {
    id v172 = (id)MEMORY[0x24560AAA0](3, v2);
  }
  else {
    id v172 = *(id *)(v2 + 56);
  }
  uint64_t v173 = v172;
  id v160 = objc_msgSend(v172, sel_topAnchor);

  uint64_t v174 = sub_240ACBF78();
  uint64_t v136 = v174;
  if ((v174 & 0xC000000000000001) != 0) {
    goto LABEL_192;
  }
  if (*(void *)((v174 & 0xFFFFFFFFFFFFFF8) + 0x10) < 4uLL)
  {
    __break(1u);
LABEL_194:
    id v182 = (id)MEMORY[0x24560AAA0](3, v136);
    goto LABEL_131;
  }
  id v175 = *(id *)(v174 + 56);
LABEL_125:
  uint64_t v176 = v175;
  swift_bridgeObjectRelease();
  id v177 = objc_msgSend(v176, sel_bottomAnchor);

  id v178 = objc_msgSend(v160, *(SEL *)(v4 + 784), v177);
  *(void *)(v15 + 232) = v178;
  if (v5) {
    id v179 = (id)MEMORY[0x24560AAA0](3, v2);
  }
  else {
    id v179 = *(id *)(v2 + 56);
  }
  uint64_t v180 = v179;
  id v160 = [v179 (SEL)v6[115]];

  uint64_t v181 = sub_240ACBF78();
  uint64_t v136 = v181;
  if ((v181 & 0xC000000000000001) != 0) {
    goto LABEL_194;
  }
  if (*(void *)((v181 & 0xFFFFFFFFFFFFFF8) + 0x10) < 4uLL)
  {
    __break(1u);
LABEL_196:
    id v193 = (id)MEMORY[0x24560AAA0](4, v136);
    goto LABEL_137;
  }
  id v182 = *(id *)(v181 + 56);
LABEL_131:
  uint64_t v183 = v182;
  swift_bridgeObjectRelease();
  id v184 = sub_240AB2A3C();
  id v185 = [v184 (SEL)v6[115]];

  id v186 = objc_msgSend(v160, *(SEL *)(v4 + 784), v185);
  *(void *)(v15 + 240) = v186;
  if (v5) {
    id v187 = (id)MEMORY[0x24560AAA0](3, v2);
  }
  else {
    id v187 = *(id *)(v2 + 56);
  }
  long long v188 = v187;
  uint64_t v3 = &off_2650DD000;
  id v189 = objc_msgSend(v187, sel_trailingAnchor);

  id v190 = objc_msgSend(v0, sel_trailingAnchor);
  id v191 = objc_msgSend(v189, *(SEL *)(v4 + 784), v190);

  *(void *)(v15 + 248) = v191;
  uint64_t v192 = sub_240ACBF78();
  uint64_t v136 = v192;
  if ((v192 & 0xC000000000000001) != 0) {
    goto LABEL_196;
  }
  if (*(void *)((v192 & 0xFFFFFFFFFFFFFF8) + 0x10) < 5uLL)
  {
    __break(1u);
LABEL_198:
    id v201 = (id)MEMORY[0x24560AAA0](4, v136);
    goto LABEL_143;
  }
  id v193 = *(id *)(v192 + 64);
LABEL_137:
  uint64_t v194 = v193;
  swift_bridgeObjectRelease();
  id v195 = objc_msgSend(v194, sel_topAnchor);

  if (v5) {
    id v196 = (id)MEMORY[0x24560AAA0](3, v2);
  }
  else {
    id v196 = *(id *)(v2 + 56);
  }
  v197 = v196;
  swift_release();
  id v198 = objc_msgSend(v197, sel_bottomAnchor);

  id v199 = objc_msgSend(v195, *(SEL *)(v4 + 784), v198);
  *(void *)(v15 + 256) = v199;
  uint64_t v200 = sub_240ACBF78();
  uint64_t v136 = v200;
  if ((v200 & 0xC000000000000001) != 0) {
    goto LABEL_198;
  }
  if (*(void *)((v200 & 0xFFFFFFFFFFFFFF8) + 0x10) < 5uLL)
  {
    __break(1u);
    goto LABEL_200;
  }
  id v201 = *(id *)(v200 + 64);
LABEL_143:
  v202 = v201;
  swift_bridgeObjectRelease();
  id v203 = objc_msgSend(v202, sel_bottomAnchor);

  id v204 = objc_msgSend(v0, sel_bottomAnchor);
  id v205 = objc_msgSend(v203, *(SEL *)(v4 + 784), v204);

  *(void *)(v15 + 264) = v205;
  uint64_t v206 = sub_240ACBF78();
  uint64_t v136 = v206;
  if ((v206 & 0xC000000000000001) != 0)
  {
LABEL_200:
    id v207 = (id)MEMORY[0x24560AAA0](4, v136);
    goto LABEL_146;
  }
  if (*(void *)((v206 & 0xFFFFFFFFFFFFFF8) + 0x10) < 5uLL)
  {
    __break(1u);
    goto LABEL_202;
  }
  id v207 = *(id *)(v206 + 64);
LABEL_146:
  v208 = v207;
  swift_bridgeObjectRelease();
  id v209 = [v208 (SEL)v6[115]];

  id v210 = [v0 (SEL)v6[115]];
  id v211 = objc_msgSend(v209, *(SEL *)(v4 + 784), v210);

  *(void *)(v15 + 272) = v211;
  uint64_t v212 = sub_240ACBF78();
  uint64_t v136 = v212;
  if ((v212 & 0xC000000000000001) != 0)
  {
LABEL_202:
    id v213 = (id)MEMORY[0x24560AAA0](4, v136);
    goto LABEL_149;
  }
  if (*(void *)((v212 & 0xFFFFFFFFFFFFFF8) + 0x10) < 5uLL)
  {
    __break(1u);
    goto LABEL_204;
  }
  id v213 = *(id *)(v212 + 64);
LABEL_149:
  v214 = v213;
  swift_bridgeObjectRelease();
  v215 = self;
  id v216 = [v214 (SEL)v3[117]];

  id v217 = [v0 (SEL)v3[117]];
  id v218 = objc_msgSend(v216, *(SEL *)(v4 + 784), v217);

  *(void *)(v15 + 280) = v218;
  sub_240BB6F30();
  sub_240A34DC4(0, (unint64_t *)&qword_268CA2490);
  id v220 = (id)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v215, sel_activateConstraints_, v220);
}

id sub_240ACDD54()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenLifeFactorsView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AFibBurdenLifeFactorsView()
{
  return self;
}

uint64_t sub_240ACDE18(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v30 = a2;
  uint64_t v5 = sub_240BB6B90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  BOOL v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240BB6BC0();
  uint64_t v32 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v31 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_268C9E778 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_240BB5990();
  sub_240A395FC(v11, (uint64_t)qword_268CA2BB0);
  swift_retain();
  unint64_t v12 = sub_240BB5970();
  os_log_type_t v13 = sub_240BB71A0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    aBlock[0] = v26;
    *(_DWORD *)uint64_t v14 = 136315394;
    uint64_t v29 = v5;
    uint64_t v33 = sub_240A38940(0xD000000000000020, 0x8000000240BBF270, aBlock);
    id v28 = v8;
    sub_240BB75F0();
    *(_WORD *)(v14 + 12) = 2080;
    uint64_t v15 = a1;
    uint64_t v27 = v9;
    uint64_t v16 = v6;
    uint64_t v17 = *(void *)(v3 + 16);
    unint64_t v18 = *(void *)(v3 + 24);
    sub_240BB4850();
    uint64_t v19 = v17;
    a1 = v15;
    uint64_t v33 = sub_240A38940(v19, v18, aBlock);
    BOOL v8 = v28;
    uint64_t v5 = v29;
    sub_240BB75F0();
    swift_release();
    uint64_t v6 = v16;
    uint64_t v9 = v27;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v12, v13, "[%s] Failing test with name %s", (uint8_t *)v14, 0x16u);
    uint64_t v20 = v26;
    swift_arrayDestroy();
    MEMORY[0x24560B930](v20, -1, -1);
    MEMORY[0x24560B930](v14, -1, -1);
  }
  else
  {

    swift_release();
  }
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9980);
  id v21 = (void *)sub_240BB7310();
  id v22 = (void *)swift_allocObject();
  void v22[2] = v3;
  v22[3] = a1;
  void v22[4] = v30;
  aBlock[4] = (uint64_t)sub_240AD7358;
  aBlock[5] = (uint64_t)v22;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_240A87354;
  aBlock[3] = (uint64_t)&unk_26F506700;
  uint64_t v23 = _Block_copy(aBlock);
  swift_retain();
  sub_240BB4850();
  swift_release();
  id v24 = v31;
  sub_240BB6BB0();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_240AD7238();
  sub_240AD73A8(0, (unint64_t *)&qword_26AFD98F0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
  sub_240AD7290();
  sub_240BB7670();
  MEMORY[0x24560A5E0](0, v24, v8, v23);
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v24, v9);
}

uint64_t sub_240ACE2C4(const char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v3;
  uint64_t v8 = sub_240BB6B90();
  uint64_t v37 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_240BB6BC0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v38 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_268C9E778 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_240BB5990();
  sub_240A395FC(v14, (uint64_t)qword_268CA2BB0);
  swift_retain();
  uint64_t v15 = sub_240BB5970();
  os_log_type_t v16 = sub_240BB71A0();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v34 = v12;
    uint64_t v18 = v17;
    uint64_t v32 = swift_slowAlloc();
    aBlock[0] = v32;
    *(_DWORD *)uint64_t v18 = 136315394;
    uint64_t v36 = v11;
    uint64_t v39 = sub_240A38940(0xD000000000000020, 0x8000000240BBF270, aBlock);
    uint64_t v33 = a2;
    sub_240BB75F0();
    *(_WORD *)(v18 + 12) = 2080;
    uint64_t v31 = a1;
    uint64_t v19 = a3;
    uint64_t v35 = v10;
    uint64_t v20 = v8;
    uint64_t v21 = *(void *)(v7 + 16);
    unint64_t v22 = *(void *)(v7 + 24);
    sub_240BB4850();
    uint64_t v23 = v21;
    a3 = v19;
    uint64_t v39 = sub_240A38940(v23, v22, aBlock);
    a2 = v33;
    uint64_t v11 = v36;
    sub_240BB75F0();
    swift_release();
    uint64_t v8 = v20;
    uint64_t v10 = v35;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v15, v16, v31, (uint8_t *)v18, 0x16u);
    uint64_t v24 = v32;
    swift_arrayDestroy();
    MEMORY[0x24560B930](v24, -1, -1);
    uint64_t v25 = v18;
    uint64_t v12 = v34;
    MEMORY[0x24560B930](v25, -1, -1);
  }
  else
  {

    swift_release();
  }
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9980);
  uint64_t v26 = (void *)sub_240BB7310();
  aBlock[4] = a2;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_240A87354;
  aBlock[3] = a3;
  uint64_t v27 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v28 = v38;
  sub_240BB6BB0();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_240AD7238();
  sub_240AD73A8(0, (unint64_t *)&qword_26AFD98F0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
  sub_240AD7290();
  sub_240BB7670();
  MEMORY[0x24560A5E0](0, v28, v10, v27);
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v28, v11);
}

uint64_t sub_240ACE740(uint64_t a1, int a2, void *a3)
{
  if (a2)
  {
    return swift_continuation_throwingResume();
  }
  else if (a3)
  {
    sub_240A49AC0();
    swift_allocError();
    void *v5 = a3;
    id v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240ACE7DC(uint64_t a1, char a2, void *a3)
{
  if (a3)
  {
    sub_240A49AC0();
    swift_allocError();
    *uint64_t v4 = a3;
    id v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    **(unsigned char **)(*(void *)(*(void *)(a1 + 32) + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_240ACE898(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_240BB58C0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 32) = a3;
  id v14 = a3;
  sub_240BB58B0();
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v5 + OBJC_IVAR____TtC5Heart32AFibBurdenPDFExportPPTTestRunner_signposter, v13, v10);
  unint64_t v20 = 0xD000000000000029;
  unint64_t v21 = 0x8000000240BCE3C0;
  sub_240BB7760();
  if (*(void *)(a4 + 16) && (unint64_t v15 = sub_240AB9E80((uint64_t)v22), (v16 & 1) != 0))
  {
    sub_240A38A64(*(void *)(a4 + 56) + 32 * v15, (uint64_t)&v23);
  }
  else
  {
    long long v23 = 0u;
    long long v24 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_240ABA9A8((uint64_t)v22);
  if (*((void *)&v24 + 1))
  {
    if (swift_dynamicCast())
    {
      if (v20 == 5457241 && v21 == 0xE300000000000000)
      {
        swift_bridgeObjectRelease();
        char v17 = 1;
      }
      else
      {
        char v17 = sub_240BB7AE0();
        swift_bridgeObjectRelease();
      }

      *(unsigned char *)(v5 + 40) = v17 & 1;
    }
    else
    {

      *(unsigned char *)(v5 + 40) = 0;
    }
  }
  else
  {

    sub_240A7B53C((uint64_t)&v23);
    *(unsigned char *)(v5 + 40) = 0;
  }
  return v5;
}

uint64_t sub_240ACEAF0(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_240BB2EC0();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  uint64_t v4 = sub_240BB2EE0();
  v2[7] = v4;
  v2[8] = *(void *)(v4 - 8);
  v2[9] = swift_task_alloc();
  sub_240AD73A8(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  v2[10] = swift_task_alloc();
  uint64_t v5 = sub_240BB27F0();
  v2[11] = v5;
  v2[12] = *(void *)(v5 - 8);
  v2[13] = swift_task_alloc();
  uint64_t v6 = sub_240BB2CF0();
  v2[14] = v6;
  v2[15] = *(void *)(v6 - 8);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_240ACED30, 0, 0);
}

uint64_t sub_240ACED30()
{
  uint64_t v1 = v0[15];
  uint64_t v13 = v0[14];
  uint64_t v3 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v4 = v0[7];
  uint64_t v5 = v0[8];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  uint64_t v8 = v0[4];
  sub_240BB2CE0();
  sub_240BB2EA0();
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v7, *MEMORY[0x263F07830], v8);
  sub_240BB2E70();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v2, 1, v13);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[15] + 16))(v0[16], v0[17], v0[14]);
    sub_240BB27B0();
    uint64_t v10 = (void *)swift_task_alloc();
    v0[18] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_240ACEEE4;
    uint64_t v11 = v0[13];
    uint64_t v12 = v0[2];
    return sub_240AD055C(v11, v12);
  }
  return result;
}

uint64_t sub_240ACEEE4()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_240ACFA30;
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v2 + 160) = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_240ACF070;
    uint64_t v5 = *(void *)(v2 + 104);
    uint64_t v6 = **(void **)(v2 + 24);
    v4[4] = *(void *)(v2 + 16);
    v4[5] = v6;
    v4[3] = v5;
    uint64_t v3 = sub_240AD1188;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_240ACF070()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_240ACFB20;
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v2 + 176) = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_240ACF1FC;
    uint64_t v5 = *(void *)(v2 + 104);
    uint64_t v6 = **(void **)(v2 + 24);
    v4[4] = *(void *)(v2 + 16);
    v4[5] = v6;
    v4[3] = v5;
    uint64_t v3 = sub_240AD14D4;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_240ACF1FC()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_240ACFC10;
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v2 + 192) = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_240ACF388;
    uint64_t v5 = *(void *)(v2 + 104);
    uint64_t v6 = **(void **)(v2 + 24);
    v4[4] = *(void *)(v2 + 16);
    v4[5] = v6;
    v4[3] = v5;
    uint64_t v3 = sub_240AD172C;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_240ACF388()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_240ACFD00;
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v2 + 208) = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_240ACF514;
    uint64_t v5 = *(void *)(v2 + 104);
    uint64_t v6 = **(void **)(v2 + 24);
    v4[4] = *(void *)(v2 + 16);
    v4[5] = v6;
    v4[3] = v5;
    uint64_t v3 = sub_240AD1984;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_240ACF514()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_240ACFDF0;
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v2 + 224) = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_240ACF6A0;
    uint64_t v5 = *(void *)(v2 + 104);
    uint64_t v6 = **(void **)(v2 + 24);
    v4[4] = *(void *)(v2 + 16);
    v4[5] = v6;
    v4[3] = v5;
    uint64_t v3 = sub_240AD1BDC;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_240ACF6A0()
{
  uint64_t v2 = (void *)*v1;
  v2[29] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_240ACFEE0, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    v2[30] = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_240ACF814;
    uint64_t v4 = v2[2];
    uint64_t v5 = v2[13];
    return sub_240AD1DEC(v5, v4);
  }
}

uint64_t sub_240ACF814()
{
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_240ACFFD0;
  }
  else {
    uint64_t v2 = sub_240ACF928;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_240ACF928()
{
  sub_240AD50E0(*(void **)(v0 + 16));
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 120);
  (*(void (**)(void, void))(*(void *)(v0 + 96) + 8))(*(void *)(v0 + 104), *(void *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_240ACFA30()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[15];
  (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_240ACFB20()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[15];
  (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_240ACFC10()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[15];
  (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_240ACFD00()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[15];
  (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_240ACFDF0()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[15];
  (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_240ACFEE0()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[15];
  (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_240ACFFD0()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[15];
  (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_240AD00C0(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = v3;
  return MEMORY[0x270FA2498](sub_240AD0104, 0, 0);
}

uint64_t sub_240AD0104()
{
  uint64_t v2 = (void *)v0[11];
  uint64_t v1 = v0[12];
  v0[2] = v0;
  v0[7] = v0 + 10;
  v0[3] = sub_240AD01B0;
  uint64_t v3 = swift_continuation_init();
  sub_240AD3880(v3, v2, v1);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_240AD01B0()
{
  uint64_t v1 = *v0;
  if (*(void *)(*v0 + 48))
  {
    swift_willThrow();
    uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
    return v2();
  }
  else
  {
    *(void *)(*v0 + 104) = *(void *)(*v0 + 80);
    return MEMORY[0x270FA2498](sub_240AD02FC, 0, 0);
  }
}

uint64_t sub_240AD02FC()
{
  unint64_t v20 = v0;
  if (qword_268C9E778 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[13];
  uint64_t v2 = sub_240BB5990();
  sub_240A395FC(v2, (uint64_t)qword_268CA2BB0);
  id v3 = v1;
  uint64_t v4 = sub_240BB5970();
  os_log_type_t v5 = sub_240BB71A0();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = (void *)v0[13];
  if (v6)
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = v18;
    *(_DWORD *)uint64_t v8 = 136315394;
    uint64_t v9 = sub_240BB7C80();
    v0[10] = sub_240A38940(v9, v10, &v19);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    id v11 = v7;
    id v12 = objc_msgSend(v11, sel_description);
    uint64_t v13 = sub_240BB6DE0();
    unint64_t v15 = v14;

    v0[10] = sub_240A38940(v13, v15, &v19);
    sub_240BB75F0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240A1B000, v4, v5, "[%s] Got result during preWarm %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v18, -1, -1);
    MEMORY[0x24560B930](v8, -1, -1);
  }
  else
  {
  }
  char v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_240AD055C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  v3[18] = a2;
  v3[19] = v4;
  v3[17] = a1;
  uint64_t v5 = sub_240BB2E00();
  v3[20] = v5;
  v3[21] = *(void *)(v5 - 8);
  v3[22] = swift_task_alloc();
  uint64_t v6 = sub_240BB2E20();
  v3[23] = v6;
  v3[24] = *(void *)(v6 - 8);
  v3[25] = swift_task_alloc();
  uint64_t v7 = sub_240BB2DE0();
  v3[26] = v7;
  v3[27] = *(void *)(v7 - 8);
  v3[28] = swift_task_alloc();
  uint64_t v8 = sub_240BB2CF0();
  v3[29] = v8;
  v3[30] = *(void *)(v8 - 8);
  v3[31] = swift_task_alloc();
  uint64_t v9 = sub_240BB2EE0();
  v3[32] = v9;
  v3[33] = *(void *)(v9 - 8);
  v3[34] = swift_task_alloc();
  unint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240AD73A8(0, &qword_268CA0220, MEMORY[0x263F079C8], MEMORY[0x263F8D8F0]);
  v3[35] = swift_task_alloc();
  sub_240AD73A8(0, &qword_268C9F180, MEMORY[0x263F07920], v10);
  v3[36] = swift_task_alloc();
  uint64_t v11 = sub_240BB28D0();
  v3[37] = v11;
  v3[38] = *(void *)(v11 - 8);
  v3[39] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_240AD08BC, 0, 0);
}

uint64_t sub_240AD08BC()
{
  id v41 = v0;
  uint64_t v1 = v0[35];
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[33] + 56))(v0[36], 1, 1, v0[32]);
  uint64_t v2 = sub_240BB2F10();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  LOBYTE(v33) = 1;
  LOBYTE(v32) = 1;
  LOBYTE(v31) = 1;
  LOBYTE(v30) = 1;
  LOBYTE(v29) = 1;
  LOBYTE(v28) = 0;
  LOBYTE(v27) = 1;
  LOBYTE(v26) = 0;
  LOBYTE(v25) = 0;
  LOBYTE(v24) = 0;
  LOBYTE(v23) = 1;
  sub_240BB28C0();
  v0[15] = MEMORY[0x263F8EE78];
  sub_240BB2EA0();
  if (qword_268C9E778 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_240BB5990();
  sub_240A395FC(v3, (uint64_t)qword_268CA2BB0);
  uint64_t v4 = sub_240BB5970();
  os_log_type_t v5 = sub_240BB71A0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v40 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v8 = sub_240BB7C80();
    v0[16] = sub_240A38940(v8, v9, &v40);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v4, v5, "[%s] Injecting AFib Burden data", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v7, -1, -1);
    MEMORY[0x24560B930](v6, -1, -1);
  }

  uint64_t v34 = v0[34];
  uint64_t v39 = v0[31];
  uint64_t v10 = v0[28];
  uint64_t v36 = v0[30];
  uint64_t v37 = v0[29];
  uint64_t v11 = v0[26];
  uint64_t v12 = v0[27];
  uint64_t v13 = v0[24];
  uint64_t v14 = v0[25];
  uint64_t v15 = v0[23];
  uint64_t v35 = v0[22];
  uint64_t v17 = v0[20];
  uint64_t v16 = v0[21];
  uint64_t v18 = v0[17];
  id v38 = (void *)v0[18];
  sub_240BB27D0();
  (*(void (**)(uint64_t, void, uint64_t))(v12 + 104))(v10, *MEMORY[0x263F07780], v11);
  uint64_t v19 = (void *)swift_task_alloc();
  void v19[2] = v18;
  void v19[3] = v34;
  void v19[4] = v0 + 15;
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v14, *MEMORY[0x263F07800], v15);
  (*(void (**)(uint64_t, void, uint64_t))(v16 + 104))(v35, *MEMORY[0x263F077E0], v17);
  sub_240BB2DF0();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v35, v17);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v39, v37);
  swift_task_dealloc();
  sub_240A34DC4(0, &qword_268CA0208);
  sub_240BB4850();
  uint64_t v20 = sub_240BB6EF0();
  v0[40] = v20;
  swift_bridgeObjectRelease();
  v0[2] = v0;
  v0[3] = sub_240AD0DEC;
  uint64_t v21 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_240ACE740;
  v0[13] = &unk_2650DCA70;
  v0[14] = v21;
  objc_msgSend(v38, sel_saveObjects_withCompletion_, v20, 0, v23, 8, v24, 0, v25, 0, v26, 0, v27, 2, v28, 0, v29, 0, v30,
    0,
    v31,
    0,
    v32,
    0,
    v33);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_240AD0DEC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 328) = v1;
  if (v1) {
    uint64_t v2 = sub_240AD1014;
  }
  else {
    uint64_t v2 = sub_240AD0EFC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_240AD0EFC()
{
  uint64_t v1 = (void *)v0[40];
  uint64_t v3 = v0[33];
  uint64_t v2 = v0[34];
  uint64_t v4 = v0[32];
  (*(void (**)(void, void))(v0[38] + 8))(v0[39], v0[37]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_240AD1014()
{
  uint64_t v1 = (void *)v0[40];
  uint64_t v3 = v0[38];
  uint64_t v2 = v0[39];
  uint64_t v4 = v0[37];
  uint64_t v5 = v0[34];
  uint64_t v7 = v0[32];
  uint64_t v6 = v0[33];
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_240AD1140(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  v3[4] = a2;
  v3[5] = v4;
  v3[3] = a1;
  return MEMORY[0x270FA2498](sub_240AD1188, 0, 0);
}

uint64_t sub_240AD1188()
{
  uint64_t v13 = v0;
  if (qword_268C9E778 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_240BB5990();
  sub_240A395FC(v1, (uint64_t)qword_268CA2BB0);
  uint64_t v2 = sub_240BB5970();
  os_log_type_t v3 = sub_240BB71A0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v12 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v6 = sub_240BB7C80();
    v0[2] = sub_240A38940(v6, v7, &v12);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v2, v3, "[%s] Injecting sleep data", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v5, -1, -1);
    MEMORY[0x24560B930](v4, -1, -1);
  }

  uint64_t v8 = (void *)swift_task_alloc();
  v0[6] = v8;
  void *v8 = v0;
  v8[1] = sub_240AD1398;
  uint64_t v10 = v0[3];
  uint64_t v9 = v0[4];
  return sub_240AD499C(v10, v9, (uint64_t)sub_240AD2E44, 0);
}

uint64_t sub_240AD1398()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_240AD148C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  v3[4] = a2;
  v3[5] = v4;
  v3[3] = a1;
  return MEMORY[0x270FA2498](sub_240AD14D4, 0, 0);
}

uint64_t sub_240AD14D4()
{
  uint64_t v13 = v0;
  if (qword_268C9E778 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_240BB5990();
  sub_240A395FC(v1, (uint64_t)qword_268CA2BB0);
  uint64_t v2 = sub_240BB5970();
  os_log_type_t v3 = sub_240BB71A0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v12 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v6 = sub_240BB7C80();
    v0[2] = sub_240A38940(v6, v7, &v12);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v2, v3, "[%s] Injecting mindfulness data", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v5, -1, -1);
    MEMORY[0x24560B930](v4, -1, -1);
  }

  uint64_t v8 = (void *)swift_task_alloc();
  v0[6] = v8;
  void *v8 = v0;
  v8[1] = sub_240AD75DC;
  uint64_t v10 = v0[3];
  uint64_t v9 = v0[4];
  return sub_240AD499C(v10, v9, (uint64_t)sub_240AD3258, 0);
}

uint64_t sub_240AD16E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  v3[4] = a2;
  v3[5] = v4;
  v3[3] = a1;
  return MEMORY[0x270FA2498](sub_240AD172C, 0, 0);
}

uint64_t sub_240AD172C()
{
  uint64_t v13 = v0;
  if (qword_268C9E778 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_240BB5990();
  sub_240A395FC(v1, (uint64_t)qword_268CA2BB0);
  uint64_t v2 = sub_240BB5970();
  os_log_type_t v3 = sub_240BB71A0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v12 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v6 = sub_240BB7C80();
    v0[2] = sub_240A38940(v6, v7, &v12);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v2, v3, "[%s] Injecting Exercise Minute data", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v5, -1, -1);
    MEMORY[0x24560B930](v4, -1, -1);
  }

  uint64_t v8 = (void *)swift_task_alloc();
  v0[6] = v8;
  void *v8 = v0;
  v8[1] = sub_240AD75DC;
  uint64_t v10 = v0[3];
  uint64_t v9 = v0[4];
  return sub_240AD499C(v10, v9, (uint64_t)sub_240AD33C4, 0);
}

uint64_t sub_240AD193C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  v3[4] = a2;
  v3[5] = v4;
  v3[3] = a1;
  return MEMORY[0x270FA2498](sub_240AD1984, 0, 0);
}

uint64_t sub_240AD1984()
{
  uint64_t v13 = v0;
  if (qword_268C9E778 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_240BB5990();
  sub_240A395FC(v1, (uint64_t)qword_268CA2BB0);
  uint64_t v2 = sub_240BB5970();
  os_log_type_t v3 = sub_240BB71A0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v12 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v6 = sub_240BB7C80();
    v0[2] = sub_240A38940(v6, v7, &v12);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v2, v3, "[%s] Injecting Body Mass data", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v5, -1, -1);
    MEMORY[0x24560B930](v4, -1, -1);
  }

  uint64_t v8 = (void *)swift_task_alloc();
  v0[6] = v8;
  void *v8 = v0;
  v8[1] = sub_240AD75DC;
  uint64_t v10 = v0[3];
  uint64_t v9 = v0[4];
  return sub_240AD499C(v10, v9, (uint64_t)sub_240AD372C, 0);
}

uint64_t sub_240AD1B94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  v3[4] = a2;
  v3[5] = v4;
  v3[3] = a1;
  return MEMORY[0x270FA2498](sub_240AD1BDC, 0, 0);
}

uint64_t sub_240AD1BDC()
{
  uint64_t v13 = v0;
  if (qword_268C9E778 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_240BB5990();
  sub_240A395FC(v1, (uint64_t)qword_268CA2BB0);
  uint64_t v2 = sub_240BB5970();
  os_log_type_t v3 = sub_240BB71A0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v12 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v6 = sub_240BB7C80();
    v0[2] = sub_240A38940(v6, v7, &v12);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v2, v3, "[%s] Injecting alcoholic data", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v5, -1, -1);
    MEMORY[0x24560B930](v4, -1, -1);
  }

  uint64_t v8 = (void *)swift_task_alloc();
  v0[6] = v8;
  void *v8 = v0;
  v8[1] = sub_240AD75DC;
  uint64_t v10 = v0[3];
  uint64_t v9 = v0[4];
  return sub_240AD499C(v10, v9, (uint64_t)sub_240AD374C, 0);
}

uint64_t sub_240AD1DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  v3[17] = a2;
  v3[18] = v4;
  v3[16] = a1;
  sub_240BB2CF0();
  v3[19] = swift_task_alloc();
  uint64_t v5 = sub_240BB6D00();
  v3[20] = v5;
  v3[21] = *(void *)(v5 - 8);
  v3[22] = swift_task_alloc();
  uint64_t v6 = sub_240BB2EE0();
  v3[23] = v6;
  v3[24] = *(void *)(v6 - 8);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_240AD1F6C, 0, 0);
}

uint64_t sub_240AD1F6C()
{
  uint64_t v24 = v0;
  uint64_t v2 = v0[25];
  uint64_t v1 = v0[26];
  uint64_t v3 = v0[24];
  uint64_t v5 = v0[21];
  uint64_t v4 = v0[22];
  uint64_t v20 = v0[23];
  uint64_t v21 = v0[20];
  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F47618]), sel_initWithHealthStore_, v0[17]);
  v0[27] = v19;
  sub_240BB2EA0();
  sub_240BB27A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v20);
  sub_240BB6CE0();
  uint64_t v6 = sub_240BB6CF0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v21);
  if (qword_268C9E778 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_240BB5990();
  sub_240A395FC(v7, (uint64_t)qword_268CA2BB0);
  uint64_t v8 = sub_240BB5970();
  os_log_type_t v9 = sub_240BB71A0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = v6;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v11 = v23;
    *(_DWORD *)uint64_t v10 = 136315138;
    uint64_t v12 = sub_240BB7C80();
    v0[15] = sub_240A38940(v12, v13, &v23);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v8, v9, "[%s] Injecting tachograms", v10, 0xCu);
    swift_arrayDestroy();
    uint64_t v14 = v11;
    uint64_t v6 = v22;
    MEMORY[0x24560B930](v14, -1, -1);
    MEMORY[0x24560B930](v10, -1, -1);
  }

  if (__OFSUB__(v6, 44))
  {
    __break(1u);
  }
  else
  {
    sub_240A34DC4(0, (unint64_t *)&qword_268CA10E0);
    uint64_t v16 = sub_240BB74E0();
    v0[28] = v16;
    v0[2] = v0;
    v0[7] = v0 + 30;
    v0[3] = sub_240AD22B8;
    uint64_t v17 = swift_continuation_init();
    v0[10] = MEMORY[0x263EF8330];
    v0[11] = 0x40000000;
    v0[12] = sub_240ACE7DC;
    v0[13] = &unk_2650DCA40;
    v0[14] = v17;
    objc_msgSend(v19, sel_addTachogramsForStartDayIndex_endDayIndex_chanceOfAFib_chanceOfWrite_minutesBetweenSamples_startingHour_endingHour_completion_, v6 - 44, v6, 0, 0, v16, 0, 0, v0 + 10);
    uint64_t v15 = v0 + 2;
  }
  return MEMORY[0x270FA23F0](v15);
}

uint64_t sub_240AD22B8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 232) = v1;
  if (v1) {
    uint64_t v2 = sub_240AD2490;
  }
  else {
    uint64_t v2 = sub_240AD23C8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_240AD23C8()
{
  uint64_t v1 = *(void **)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 192);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_240AD2490()
{
  uint64_t v1 = (void *)v0[28];
  uint64_t v2 = v0[26];
  uint64_t v3 = (void *)v0[27];
  uint64_t v4 = v0[24];
  uint64_t v5 = v0[23];
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_240AD2564(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4, void (*a5)(char *, uint64_t), void *a6)
{
  uint64_t v64 = a6;
  uint64_t v9 = sub_240BB2F10();
  uint64_t v62 = *(void *)(v9 - 8);
  uint64_t v63 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AD73A8(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v55 - v13;
  uint64_t v15 = sub_240BB2CF0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  id v65 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v55 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v55 - v22;
  sub_240A496B8(a1, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1) {
    return sub_240A49B18((uint64_t)v14);
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v23, v14, v15);
  sub_240BB27A0();
  char v25 = sub_240BB2CA0();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v16 + 8);
  v26(v21, v15);
  if (v25)
  {
    id v60 = v26;
    uint64_t v27 = (void *)sub_240BB2C90();
    uint64_t v28 = (void *)sub_240BB2E30();
    uint64_t v29 = HKHRAFibBurdenPreviousWeekDayIndexRange();
    uint64_t v61 = v30;

    id v31 = self;
    uint64_t v32 = a5;
    uint64_t v33 = (void *)sub_240BB2E30();
    id v34 = objc_msgSend(v31, sel_hk_dateOnDayIndex_atHour_calendar_, v29, 0, v33);

    BOOL v35 = __OFADD__(v29, v61);
    uint64_t v36 = &v61[v29];
    if (v35)
    {
      __break(1u);
    }
    else
    {
      id v57 = v32;
      uint64_t v37 = (void *)sub_240BB2E30();
      id v38 = (char *)objc_msgSend(v31, sel_hk_dateOnDayIndex_atHour_calendar_, v36, 0, v37);

      sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
      uint64_t v58 = MEMORY[0x24560A470]((id)*MEMORY[0x263F09BF8]);
      id v39 = objc_msgSend(self, sel_percentUnit);
      id v56 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v39, 0.5);

      sub_240BB2CB0();
      id v59 = v34;
      uint64_t v61 = v38;
      sub_240BB2CB0();
      sub_240AD73A8(0, &qword_268C9FBE8, (uint64_t (*)(uint64_t))sub_240AA643C, MEMORY[0x263F8E0F8]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_240BB97E0;
      *(void *)(inited + 32) = sub_240BB6DE0();
      *(void *)(inited + 40) = v41;
      sub_240BB2EB0();
      uint64_t v42 = (void *)sub_240BB2F00();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v11, v63);
      id v43 = objc_msgSend(v42, sel_name);

      uint64_t v44 = sub_240BB6DE0();
      uint64_t v46 = v45;

      *(void *)(inited + 72) = MEMORY[0x263F8D310];
      *(void *)(inited + 48) = v44;
      *(void *)(inited + 56) = v46;
      sub_240AB7F9C(inited);
      uint64_t v47 = (void *)sub_240BB2C90();
      uint64_t v48 = (void *)sub_240BB2C90();
      id v49 = (void *)sub_240BB6D20();
      swift_bridgeObjectRelease();
      uint64_t v50 = self;
      id v51 = (void *)v58;
      id v52 = v56;
      id v53 = objc_msgSend(v50, sel_quantitySampleWithType_quantity_startDate_endDate_metadata_, v58, v56, v47, v48, v49);

      uint64_t v32 = v60;
      v60(v65, v15);
      v32(v21, v15);
      id v31 = v53;
      id v54 = v64;
      MEMORY[0x24560A190]();
      if (*(void *)((*v54 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((*v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      {
LABEL_6:
        sub_240BB6F70();
        sub_240BB6F30();

        return ((uint64_t (*)(char *, uint64_t))v32)(v23, v15);
      }
    }
    sub_240BB6F60();
    goto LABEL_6;
  }
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v26)(v23, v15);
  *a3 = 1;
  return result;
}

uint64_t sub_240AD2BA8(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4, uint64_t (*a5)(char *, uint64_t), uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v26 = a6;
  uint64_t v27 = a3;
  sub_240AD73A8(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v26 - v13;
  uint64_t v15 = sub_240BB2CF0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v26 - v20;
  sub_240A496B8(a1, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1) {
    return sub_240A49B18((uint64_t)v14);
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v14, v15);
  sub_240BB27A0();
  char v23 = sub_240BB2CA0();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v16 + 8);
  v24(v19, v15);
  if (v23)
  {
    id v25 = (id)a5(v21, a7);
    MEMORY[0x24560A190](v25);
    if (*(void *)((*a8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_240BB6F60();
    }
    sub_240BB6F70();
    sub_240BB6F30();

    return ((uint64_t (*)(char *, uint64_t))v24)(v21, v15);
  }
  else
  {
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v24)(v21, v15);
    *uint64_t v27 = 1;
  }
  return result;
}

uint64_t sub_240AD2E44(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_240BB2EC0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AD73A8(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v36 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v12 = sub_240BB2CF0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v33 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v40 = (char *)&v31 - v16;
  uint64_t v17 = *(void (**)(void))(v4 + 104);
  unsigned int v35 = *MEMORY[0x263F07890];
  id v34 = (void (*)(char *, void, uint64_t))v17;
  v17(v6);
  uint64_t v39 = a2;
  sub_240BB2E70();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v37 = v4 + 8;
  uint64_t v38 = v3;
  v18(v6, v3);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t result = v19(v11, 1, v12);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v32 = v13;
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v21(v40, v11, v12);
    uint64_t v22 = v38;
    v34(v6, v35, v38);
    char v23 = v36;
    sub_240BB2E70();
    v18(v6, v22);
    uint64_t result = v19(v23, 1, v12);
    if (result != 1)
    {
      uint64_t v24 = v33;
      v21(v33, v23, v12);
      sub_240A34DC4(0, (unint64_t *)&qword_26AFD9940);
      id v25 = (void *)MEMORY[0x24560A460]((id)*MEMORY[0x263F09410]);
      uint64_t v26 = v40;
      uint64_t v27 = (void *)sub_240BB2C90();
      uint64_t v28 = (void *)sub_240BB2C90();
      id v29 = objc_msgSend(self, sel_categorySampleWithType_value_startDate_endDate_, v25, 1, v27, v28);

      uint64_t v30 = *(void (**)(char *, uint64_t))(v32 + 8);
      v30(v24, v12);
      v30(v26, v12);
      return (uint64_t)v29;
    }
  }
  __break(1u);
  return result;
}

id sub_240AD3258()
{
  uint64_t v0 = sub_240BB2CF0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9940);
  uint64_t v4 = (void *)MEMORY[0x24560A460]((id)*MEMORY[0x263F09388]);
  sub_240BB2C80();
  uint64_t v5 = (void *)sub_240BB2C90();
  uint64_t v6 = (void *)sub_240BB2C90();
  id v7 = objc_msgSend(self, sel_categorySampleWithType_value_startDate_endDate_, v4, 0, v5, v6);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v7;
}

uint64_t sub_240AD33C4(uint64_t a1, uint64_t a2)
{
  v21[0] = a1;
  v21[1] = a2;
  uint64_t v2 = sub_240BB2EC0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AD73A8(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v21 - v7;
  uint64_t v9 = sub_240BB2CF0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
  uint64_t v13 = (void *)MEMORY[0x24560A470]((id)*MEMORY[0x263F09BC8]);
  id v14 = objc_msgSend(self, sel_minuteUnit);
  id v15 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v14, 30.0);

  (*(void (**)(char *, void, uint64_t))(v10 + 16))(v12, v21[0], v9);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F078C0], v2);
  sub_240BB2E70();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v17 = (void *)sub_240BB2C90();
    uint64_t v18 = (void *)sub_240BB2C90();
    id v19 = objc_msgSend(self, sel_quantitySampleWithType_quantity_startDate_endDate_, v13, v15, v17, v18);

    uint64_t v20 = *(void (**)(char *, uint64_t))(v10 + 8);
    v20(v8, v9);
    v20(v12, v9);
    return (uint64_t)v19;
  }
  return result;
}

id sub_240AD372C(uint64_t a1, uint64_t a2)
{
  return sub_240AD3764(150.0, a1, a2, MEMORY[0x263F09C38], (SEL *)&selRef_poundUnit);
}

id sub_240AD374C(uint64_t a1, uint64_t a2)
{
  return sub_240AD3764(2.0, a1, a2, MEMORY[0x263F09E78], (SEL *)&selRef_countUnit);
}

id sub_240AD3764(double a1, uint64_t a2, uint64_t a3, id *a4, SEL *a5)
{
  sub_240A34DC4(0, (unint64_t *)&qword_26AFD9948);
  uint64_t v8 = (void *)MEMORY[0x24560A470](*a4);
  id v9 = [self *a5];
  id v10 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v9, a1);

  uint64_t v11 = (void *)sub_240BB2C90();
  uint64_t v12 = (void *)sub_240BB2C90();
  id v13 = objc_msgSend(self, sel_quantitySampleWithType_quantity_startDate_endDate_, v8, v10, v11, v12);

  return v13;
}

void sub_240AD3880(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a3;
  id v7 = objc_allocWithZone(MEMORY[0x263F47620]);
  v10[4] = sub_240AD7208;
  void v10[5] = v6;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  void v10[2] = sub_240AD400C;
  v10[3] = &unk_26F506688;
  uint64_t v8 = _Block_copy(v10);
  id v9 = objc_msgSend(v7, sel_initWithResultsHandler_, v8);
  _Block_release(v8);
  swift_release();
  objc_msgSend(a2, sel_executeQuery_, v9);
}

uint64_t sub_240AD3988(int a1, void *a2, id a3, uint64_t a4)
{
  if (a3)
  {
    id v6 = a3;
    if (qword_268C9E778 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_240BB5990();
    sub_240A395FC(v7, (uint64_t)qword_268CA2BB0);
    uint64_t v8 = sub_240BB5970();
    os_log_type_t v9 = sub_240BB71A0();
    if (os_log_type_enabled(v8, v9))
    {
      id v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v35 = v11;
      *(_DWORD *)id v10 = 136315138;
      uint64_t v12 = sub_240BB7C80();
      sub_240A38940(v12, v13, &v35);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v8, v9, "[%s] Resuming continuation throwing error", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v11, -1, -1);
      MEMORY[0x24560B930](v10, -1, -1);
    }

    sub_240A49AC0();
    swift_allocError();
    void *v14 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  if (!a2)
  {
    if (qword_268C9E778 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_240BB5990();
    sub_240A395FC(v25, (uint64_t)qword_268CA2BB0);
    uint64_t v26 = sub_240BB5970();
    os_log_type_t v27 = sub_240BB7190();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v35 = v29;
      *(_DWORD *)uint64_t v28 = 136315138;
      uint64_t v30 = sub_240BB7C80();
      sub_240A38940(v30, v31, &v35);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v26, v27, "[%s] No error but did not receive results as expected", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v29, -1, -1);
      MEMORY[0x24560B930](v28, -1, -1);
    }

    sub_240AD71A4();
    uint64_t v32 = swift_allocError();
    *uint64_t v33 = 2;
    sub_240A49AC0();
    swift_allocError();
    *id v34 = v32;
    return swift_continuation_throwingResumeWithError();
  }
  uint64_t v16 = qword_268C9E778;
  id v17 = a2;
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_240BB5990();
  sub_240A395FC(v18, (uint64_t)qword_268CA2BB0);
  id v19 = sub_240BB5970();
  os_log_type_t v20 = sub_240BB71A0();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v35 = v22;
    *(_DWORD *)uint64_t v21 = 136315138;
    uint64_t v23 = sub_240BB7C80();
    sub_240A38940(v23, v24, &v35);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v19, v20, "[%s] Resuming continuation returning results", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v22, -1, -1);
    MEMORY[0x24560B930](v21, -1, -1);
  }

  **(void **)(*(void *)(a4 + 64) + 40) = v17;
  return swift_continuation_throwingResume();
}

uint64_t sub_240AD3E54()
{
  swift_bridgeObjectRelease();

  uint64_t v1 = v0 + OBJC_IVAR____TtC5Heart32AFibBurdenPDFExportPPTTestRunner_signposter;
  uint64_t v2 = sub_240BB58C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_240AD3F04()
{
  return type metadata accessor for AFibBurdenPDFExportPPTTestRunner();
}

uint64_t type metadata accessor for AFibBurdenPDFExportPPTTestRunner()
{
  uint64_t result = qword_268CA0198;
  if (!qword_268CA0198) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240AD3F58()
{
  uint64_t result = sub_240BB58C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_240AD400C(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v7 = *(void (**)(id, void *, void *))(a1 + 32);
  swift_retain();
  id v10 = a2;
  id v8 = a3;
  id v9 = a4;
  v7(v10, a3, a4);
  swift_release();
}

void sub_240AD40AC(uint64_t a1)
{
  id v1 = *(id *)(*(void *)a1 + 32);
  sub_240BB4850();
  uint64_t v2 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  id v3 = (id)sub_240BB6DA0();
  objc_msgSend(v1, sel_failedTest_withFailure_, v2, v3);
}

void sub_240AD4160(uint64_t a1)
{
  id v1 = *(id *)(*(void *)a1 + 32);
  sub_240BB4850();
  uint64_t v2 = (void *)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  sub_240AB811C(MEMORY[0x263F8EE78]);
  id v3 = (id)sub_240BB6D20();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_finishedTest_extraResults_, v2, v3);
}

void sub_240AD4230(uint64_t a1)
{
  id v1 = *(id *)(*(void *)a1 + 32);
  sub_240BB4850();
  id v2 = (id)sub_240BB6DA0();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_startedTest_, v2);
}

uint64_t sub_240AD42BC(uint64_t a1)
{
  v1[25] = a1;
  uint64_t v2 = sub_240BB2CF0();
  v1[26] = v2;
  v1[27] = *(void *)(v2 - 8);
  v1[28] = swift_task_alloc();
  sub_240AD73A8(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  v1[29] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_240AD43D8, 0, 0);
}

uint64_t sub_240AD43D8()
{
  sub_240AD73A8(0, &qword_268C9FBE8, (uint64_t (*)(uint64_t))sub_240AA643C, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240BB97E0;
  *(void *)(inited + 32) = sub_240BB6DE0();
  *(void *)(inited + 40) = v2;
  uint64_t v3 = sub_240A34DC4(0, (unint64_t *)&qword_268CA10E0);
  uint64_t v4 = sub_240BB74D0();
  *(void *)(inited + 72) = v3;
  *(void *)(inited + 48) = v4;
  sub_240AB7F9C(inited);
  id v5 = objc_allocWithZone(MEMORY[0x263F0A3C0]);
  id v6 = (void *)sub_240BB6D20();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_initWithDictionary_, v6);
  v0[30] = v7;

  uint64_t v8 = sub_240BB6DA0();
  v0[31] = v8;
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F088C0]), sel_init);
  id v10 = (void *)sub_240BB6DA0();
  id v11 = objc_msgSend(v9, sel_dateFromString_, v10);

  uint64_t v12 = v0[29];
  if (v11)
  {
    uint64_t v14 = v0[27];
    uint64_t v13 = v0[28];
    uint64_t v15 = v0[26];
    sub_240BB2CB0();

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v12, v13, v15);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v15);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v15) == 1)
    {
      uint64_t v16 = 0;
    }
    else
    {
      uint64_t v17 = v0[29];
      uint64_t v18 = v0[26];
      uint64_t v19 = v0[27];
      uint64_t v16 = sub_240BB2C90();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[27] + 56))(v0[29], 1, 1, v0[26]);
    uint64_t v16 = 0;
  }
  v0[32] = v16;
  os_log_type_t v20 = (void *)v0[25];
  v0[2] = v0;
  v0[3] = sub_240AD4750;
  uint64_t v21 = swift_continuation_init();
  v0[20] = MEMORY[0x263EF8330];
  v0[21] = 0x40000000;
  v0[22] = sub_240B173D4;
  v0[23] = &unk_2650DCA88;
  v0[24] = v21;
  objc_msgSend(v20, sel_setCurrentOnboardingVersionCompletedForCountryCode_countryCodeProvenance_date_settings_completion_, v8, 101, v16, v7, v0 + 20);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_240AD4750()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 264) = v1;
  if (v1) {
    uint64_t v2 = sub_240AD48F8;
  }
  else {
    uint64_t v2 = sub_240AD4860;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_240AD4860()
{
  uint64_t v2 = (void *)v0[31];
  uint64_t v1 = (void *)v0[32];
  uint64_t v3 = (void *)v0[30];

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_240AD48F8()
{
  uint64_t v1 = (void *)v0[32];
  uint64_t v3 = (void *)v0[30];
  uint64_t v2 = (void *)v0[31];
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_240AD499C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[18] = a3;
  v4[19] = a4;
  v4[16] = a1;
  v4[17] = a2;
  uint64_t v5 = sub_240BB2E00();
  v4[20] = v5;
  v4[21] = *(void *)(v5 - 8);
  v4[22] = swift_task_alloc();
  uint64_t v6 = sub_240BB2E20();
  v4[23] = v6;
  v4[24] = *(void *)(v6 - 8);
  v4[25] = swift_task_alloc();
  uint64_t v7 = sub_240BB2DE0();
  v4[26] = v7;
  v4[27] = *(void *)(v7 - 8);
  v4[28] = swift_task_alloc();
  uint64_t v8 = sub_240BB2CF0();
  v4[29] = v8;
  v4[30] = *(void *)(v8 - 8);
  v4[31] = swift_task_alloc();
  uint64_t v9 = sub_240BB2EE0();
  v4[32] = v9;
  v4[33] = *(void *)(v9 - 8);
  v4[34] = swift_task_alloc();
  id v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_240AD73A8(0, &qword_268CA0220, MEMORY[0x263F079C8], MEMORY[0x263F8D8F0]);
  v4[35] = swift_task_alloc();
  sub_240AD73A8(0, &qword_268C9F180, MEMORY[0x263F07920], v10);
  v4[36] = swift_task_alloc();
  uint64_t v11 = sub_240BB28D0();
  v4[37] = v11;
  v4[38] = *(void *)(v11 - 8);
  v4[39] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_240AD4CD8, 0, 0);
}

uint64_t sub_240AD4CD8()
{
  uint64_t v1 = (void *)v0;
  uint64_t v2 = *(void *)(v0 + 280);
  uint64_t v3 = *(void *)(v0 + 272);
  uint64_t v24 = *(void *)(v0 + 248);
  uint64_t v30 = *(void *)(v0 + 240);
  uint64_t v4 = *(void *)(v0 + 224);
  uint64_t v31 = *(void *)(v0 + 232);
  uint64_t v32 = v0 + 16;
  uint64_t v5 = *(void *)(v0 + 216);
  uint64_t v34 = *(void *)(v0 + 192);
  uint64_t v35 = *(void *)(v0 + 208);
  uint64_t v26 = *(void *)(v0 + 184);
  uint64_t v27 = *(void *)(v0 + 200);
  uint64_t v6 = *(void *)(v0 + 168);
  uint64_t v28 = *(void *)(v0 + 160);
  uint64_t v29 = *(void *)(v0 + 176);
  uint64_t v7 = *(void *)(v0 + 128);
  uint64_t v33 = *(void **)(v0 + 136);
  long long v25 = *(_OWORD *)(v0 + 144);
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 264) + 56))(*(void *)(v0 + 288), 1, 1, *(void *)(v0 + 256));
  uint64_t v8 = sub_240BB2F10();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v2, 1, 1, v8);
  LOBYTE(v23) = 1;
  LOBYTE(v22) = 1;
  LOBYTE(v21) = 1;
  LOBYTE(v20) = 1;
  LOBYTE(v19) = 1;
  LOBYTE(v18) = 1;
  LOBYTE(v17) = 1;
  LOBYTE(v16) = 0;
  LOBYTE(v15) = 0;
  LOBYTE(v14) = 0;
  LOBYTE(v13) = 1;
  sub_240BB28C0();
  *(void *)(v0 + 120) = MEMORY[0x263F8EE78];
  sub_240BB2EA0();
  sub_240BB27D0();
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v4, *MEMORY[0x263F07780], v35);
  uint64_t v9 = swift_task_alloc();
  *(void *)(v9 + 16) = v7;
  *(_OWORD *)(v9 + 24) = v25;
  *(void *)(v9 + 40) = v3;
  *(void *)(v9 + 48) = v0 + 120;
  (*(void (**)(uint64_t, void, uint64_t))(v34 + 104))(v27, *MEMORY[0x263F07800], v26);
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v29, *MEMORY[0x263F077E0], v28);
  sub_240BB2DF0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v27, v26);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v35);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v24, v31);
  swift_task_dealloc();
  sub_240A34DC4(0, &qword_268CA0208);
  sub_240BB4850();
  uint64_t v10 = sub_240BB6EF0();
  v1[40] = v10;
  swift_bridgeObjectRelease();
  v1[2] = v1;
  v1[3] = sub_240AD0DEC;
  uint64_t v11 = swift_continuation_init();
  v1[10] = MEMORY[0x263EF8330];
  v1[11] = 0x40000000;
  v1[12] = sub_240ACE740;
  v1[13] = &unk_2650DCA58;
  v1[14] = v11;
  objc_msgSend(v33, sel_saveObjects_withCompletion_, v10, 0, v13, 12, v14, 0, v15, 0, v16, 0, v17, 0, v18, 0, v19, 0, v20,
    0,
    v21,
    0,
    v22,
    0,
    v23);
  return MEMORY[0x270FA23F0](v32);
}

uint64_t sub_240AD50E0(void *a1)
{
  id v33 = a1;
  v36[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = sub_240BB2EE0();
  uint64_t v30 = *(void *)(v1 - 8);
  uint64_t v31 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_240BB28D0();
  uint64_t v34 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v32 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AD73A8(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v29 - v7;
  uint64_t v9 = sub_240BB2CF0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v29 - v14;
  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F088C0]), sel_init);
  uint64_t v17 = (void *)sub_240BB6DA0();
  id v18 = objc_msgSend(v16, sel_dateFromString_, v17);

  if (!v18)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
LABEL_8:
    __break(1u);
  }
  sub_240BB2CB0();

  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v19(v8, v13, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    goto LABEL_8;
  }
  v19(v15, v8, v9);
  sub_240BB2EA0();
  uint64_t v20 = (void *)sub_240BB2E30();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v3, v31);
  uint64_t v21 = sub_240BB2C90();
  id v22 = objc_msgSend(v20, sel_hk_dateOfBirthDateComponentsWithDate_, v21);

  uint64_t v23 = v32;
  sub_240BB28B0();

  uint64_t v24 = (void *)sub_240BB28A0();
  v36[0] = 0;
  LOBYTE(v21) = objc_msgSend(v33, sel__setDateOfBirthComponents_error_, v24, v36);

  if (v21)
  {
    long long v25 = *(void (**)(char *, uint64_t))(v34 + 8);
    id v26 = v36[0];
    v25(v23, v35);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  else
  {
    id v28 = v36[0];
    sub_240BB2A50();

    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v23, v35);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
}

uint64_t sub_240AD55A8(uint64_t a1)
{
  v2[19] = a1;
  v2[20] = v1;
  v2[21] = *v1;
  uint64_t v3 = sub_240BB58D0();
  v2[22] = v3;
  v2[23] = *(void *)(v3 - 8);
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  uint64_t v4 = sub_240BB5890();
  v2[26] = v4;
  v2[27] = *(void *)(v4 - 8);
  v2[28] = swift_task_alloc();
  v2[29] = swift_task_alloc();
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_240AD5724, 0, 0);
}

uint64_t sub_240AD5724()
{
  uint64_t v12 = v0;
  if (qword_268C9E778 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_240BB5990();
  v0[32] = sub_240A395FC(v1, (uint64_t)qword_268CA2BB0);
  uint64_t v2 = sub_240BB5970();
  os_log_type_t v3 = sub_240BB71A0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v11 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v6 = sub_240BB7C80();
    v0[18] = sub_240A38940(v6, v7, &v11);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v2, v3, "[%s] Starting test", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v5, -1, -1);
    MEMORY[0x24560B930](v4, -1, -1);
  }

  uint64_t v8 = (void *)swift_task_alloc();
  v0[33] = v8;
  void *v8 = v0;
  v8[1] = sub_240AD5920;
  uint64_t v9 = v0[19];
  return sub_240ACEAF0(v9);
}

uint64_t sub_240AD5920()
{
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_240AD68C8;
  }
  else {
    uint64_t v2 = sub_240AD5A34;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_240AD5A34()
{
  uint64_t v43 = v0;
  if (*(unsigned char *)(*(void *)(v0 + 160) + 40) == 1)
  {
    uint64_t v1 = sub_240BB5970();
    os_log_type_t v2 = sub_240BB71A0();
    if (os_log_type_enabled(v1, v2))
    {
      os_log_type_t v3 = (uint8_t *)swift_slowAlloc();
      uint64_t v4 = swift_slowAlloc();
      uint64_t v42 = v4;
      *(_DWORD *)os_log_type_t v3 = 136315138;
      uint64_t v5 = sub_240BB7C80();
      *(void *)(v0 + 136) = sub_240A38940(v5, v6, &v42);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v1, v2, "[%s] Pre warming tachogram classification cache", v3, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v4, -1, -1);
      MEMORY[0x24560B930](v3, -1, -1);
    }

    unint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 280) = v7;
    *unint64_t v7 = v0;
    v7[1] = sub_240AD6008;
    uint64_t v8 = **(void **)(v0 + 160);
    v7[11] = *(void *)(v0 + 152);
    v7[12] = v8;
    return MEMORY[0x270FA2498](sub_240AD0104, 0, 0);
  }
  else
  {
    sub_240ACE2C4("[%s] Starting test with name %s", (uint64_t)sub_240AD7364, (uint64_t)&unk_26F506728);
    *(void *)(v0 + 296) = OBJC_IVAR____TtC5Heart32AFibBurdenPDFExportPPTTestRunner_signposter;
    sub_240BB5880();
    uint64_t v9 = sub_240BB58A0();
    os_signpost_type_t v10 = sub_240BB7380();
    if (sub_240BB75D0())
    {
      uint64_t v11 = *(void *)(v0 + 240);
      uint64_t v12 = *(void *)(v0 + 208);
      uint64_t v13 = *(void *)(v0 + 216);
      uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
      unint64_t v15 = (v13 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v14(v11, *(void *)(v0 + 248), v12);
      id v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v16 = 0;
      os_signpost_id_t v17 = sub_240BB5870();
      _os_signpost_emit_with_name_impl(&dword_240A1B000, v9, v10, v17, "AFibBurdenPDFExportLoad", "", v16, 2u);
      MEMORY[0x24560B930](v16, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    }
    else
    {
      uint64_t v18 = *(void *)(v0 + 216);

      uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
      unint64_t v15 = (v18 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    }
    uint64_t v19 = *(void *)(v0 + 248);
    uint64_t v20 = *(void *)(v0 + 240);
    uint64_t v21 = *(void *)(v0 + 208);
    uint64_t v22 = *(void *)(v0 + 216);
    uint64_t v23 = *(void **)(v0 + 152);
    *(void *)(v0 + 304) = v14;
    *(void *)(v0 + 312) = v15;
    v14(v20, v19, v21);
    sub_240BB5900();
    swift_allocObject();
    *(void *)(v0 + 320) = sub_240BB58F0();
    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    *(void *)(v0 + 328) = v24;
    *(void *)(v0 + 336) = (v22 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v24(v19, v21);
    type metadata accessor for AFibBurdenPDFProvider();
    long long v25 = (void *)swift_allocObject();
    *(void *)(v0 + 344) = v25;
    void v25[2] = v23;
    uint64_t v26 = sub_240BB4870();
    id v27 = v23;
    uint64_t v28 = sub_240BB4860();
    uint64_t v29 = MEMORY[0x263F442B0];
    v25[6] = v26;
    v25[7] = v29;
    void v25[3] = v28;
    id v30 = (id)HKHRAFibBurdenLogForCategory();
    id v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A0C0]), sel_initWithLoggingCategory_healthDataSource_, v30, v27);

    v25[8] = v31;
    sub_240AB11EC((uint64_t *)(v0 + 16));
    uint64_t v32 = sub_240BB5970();
    os_log_type_t v33 = sub_240BB71A0();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      uint64_t v42 = v35;
      *(_DWORD *)uint64_t v34 = 136315138;
      uint64_t v36 = sub_240BB7C80();
      *(void *)(v0 + 104) = sub_240A38940(v36, v37, &v42);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240A1B000, v32, v33, "[%s] Requesting PDF to be configured", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v35, -1, -1);
      MEMORY[0x24560B930](v34, -1, -1);
    }

    uint64_t v38 = *(void *)(v0 + 40);
    uint64_t v39 = *(void *)(v0 + 48);
    sub_240A3466C((void *)(v0 + 16), v38);
    uint64_t v40 = (void *)swift_task_alloc();
    *(void *)(v0 + 352) = v40;
    *uint64_t v40 = v0;
    v40[1] = sub_240AD652C;
    return MEMORY[0x270F32DD8](v38, v39);
  }
}

uint64_t sub_240AD6008()
{
  *(void *)(*(void *)v1 + 288) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_240AD6B4C;
  }
  else {
    os_log_type_t v2 = sub_240AD611C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_240AD611C()
{
  uint64_t v35 = v0;
  sub_240ACE2C4("[%s] Starting test with name %s", (uint64_t)sub_240AD7364, (uint64_t)&unk_26F506728);
  v0[37] = OBJC_IVAR____TtC5Heart32AFibBurdenPDFExportPPTTestRunner_signposter;
  sub_240BB5880();
  uint64_t v1 = sub_240BB58A0();
  os_signpost_type_t v2 = sub_240BB7380();
  if (sub_240BB75D0())
  {
    uint64_t v3 = v0[30];
    uint64_t v4 = v0[26];
    uint64_t v5 = v0[27];
    unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    unint64_t v7 = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v6(v3, v0[31], v4);
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    os_signpost_id_t v9 = sub_240BB5870();
    _os_signpost_emit_with_name_impl(&dword_240A1B000, v1, v2, v9, "AFibBurdenPDFExportLoad", "", v8, 2u);
    MEMORY[0x24560B930](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  else
  {
    uint64_t v10 = v0[27];

    unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    unint64_t v7 = (v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v11 = v0[31];
  uint64_t v12 = v0[30];
  uint64_t v13 = v0[26];
  uint64_t v14 = v0[27];
  unint64_t v15 = (void *)v0[19];
  v0[38] = (uint64_t)v6;
  v0[39] = v7;
  v6(v12, v11, v13);
  sub_240BB5900();
  swift_allocObject();
  v0[40] = sub_240BB58F0();
  id v16 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v0[41] = (uint64_t)v16;
  v0[42] = (v14 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v16(v11, v13);
  type metadata accessor for AFibBurdenPDFProvider();
  os_signpost_id_t v17 = (void *)swift_allocObject();
  v0[43] = (uint64_t)v17;
  void v17[2] = v15;
  uint64_t v18 = sub_240BB4870();
  id v19 = v15;
  uint64_t v20 = sub_240BB4860();
  uint64_t v21 = MEMORY[0x263F442B0];
  void v17[6] = v18;
  v17[7] = v21;
  void v17[3] = v20;
  id v22 = (id)HKHRAFibBurdenLogForCategory();
  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A0C0]), sel_initWithLoggingCategory_healthDataSource_, v22, v19);

  v17[8] = v23;
  sub_240AB11EC(v0 + 2);
  uint64_t v24 = sub_240BB5970();
  os_log_type_t v25 = sub_240BB71A0();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v34 = v27;
    *(_DWORD *)uint64_t v26 = 136315138;
    uint64_t v28 = sub_240BB7C80();
    v0[13] = sub_240A38940(v28, v29, &v34);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240A1B000, v24, v25, "[%s] Requesting PDF to be configured", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v27, -1, -1);
    MEMORY[0x24560B930](v26, -1, -1);
  }

  uint64_t v30 = v0[5];
  uint64_t v31 = v0[6];
  sub_240A3466C(v0 + 2, v30);
  uint64_t v32 = (void *)swift_task_alloc();
  v0[44] = (uint64_t)v32;
  *uint64_t v32 = v0;
  v32[1] = sub_240AD652C;
  return MEMORY[0x270F32DD8](v30, v31);
}

uint64_t sub_240AD652C(uint64_t a1, unint64_t a2)
{
  *(void *)(*(void *)v3 + 360) = v2;
  swift_task_dealloc();
  if (v2)
  {
    unint64_t v6 = sub_240AD6DA0;
  }
  else
  {
    sub_240A4C4D8(a1, a2);
    unint64_t v6 = sub_240AD665C;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_240AD665C()
{
  uint64_t v1 = (void *)(v0 + 232);
  uint64_t v2 = sub_240BB58A0();
  sub_240BB58E0();
  os_signpost_type_t v3 = sub_240BB7370();
  if (sub_240BB75D0())
  {
    uint64_t v4 = *(void *)(v0 + 200);
    uint64_t v5 = *(void *)(v0 + 176);
    uint64_t v6 = *(void *)(v0 + 184);
    swift_retain();
    sub_240BB5910();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v6 + 88))(v4, v5) == *MEMORY[0x263F90238])
    {
      unint64_t v7 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 184) + 8))(*(void *)(v0 + 200), *(void *)(v0 + 176));
      unint64_t v7 = "";
    }
    uint64_t v1 = (void *)(v0 + 240);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 328);
    uint64_t v9 = *(void *)(v0 + 232);
    uint64_t v10 = *(void *)(v0 + 208);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 304))(*(void *)(v0 + 240), v9, v10);
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    os_signpost_id_t v12 = sub_240BB5870();
    _os_signpost_emit_with_name_impl(&dword_240A1B000, v2, v3, v12, "AFibBurdenPDFExportLoad", v7, v11, 2u);
    MEMORY[0x24560B930](v11, -1, -1);

    v8(v9, v10);
  }
  else
  {
  }
  (*(void (**)(void, void))(v0 + 328))(*v1, *(void *)(v0 + 208));
  sub_240ACE2C4("[%s] Finishing test with name %s", (uint64_t)sub_240AD7210, (uint64_t)&unk_26F5066B0);
  swift_release();
  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_240AD68C8()
{
  uint64_t v20 = v0;
  uint64_t v1 = (void *)v0[34];
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_240BB5970();
  os_log_type_t v5 = sub_240BB7180();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[34];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    v19[0] = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    uint64_t v9 = sub_240BB7C80();
    v0[9] = sub_240A38940(v9, v10, v19);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[7] = v6;
    id v11 = v6;
    sub_240A49AC0();
    uint64_t v12 = sub_240BB6E10();
    v0[8] = sub_240A38940(v12, v13, v19);
    sub_240BB75F0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240A1B000, v4, v5, "[%s] Received failure, reporting error %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v8, -1, -1);
    MEMORY[0x24560B930](v7, -1, -1);
  }
  else
  {
    uint64_t v14 = (void *)v0[34];
  }
  uint64_t v15 = (void *)v0[34];
  sub_240AD71A4();
  swift_allocError();
  *id v16 = 0;
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_signpost_id_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_240AD6B4C()
{
  uint64_t v18 = v0;
  uint64_t v1 = (void *)v0[36];
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_240BB5970();
  os_log_type_t v5 = sub_240BB7180();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[36];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    v17[0] = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    uint64_t v9 = sub_240BB7C80();
    v0[14] = sub_240A38940(v9, v10, v17);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[15] = v6;
    id v11 = v6;
    sub_240A49AC0();
    uint64_t v12 = sub_240BB6E10();
    v0[16] = sub_240A38940(v12, v13, v17);
    sub_240BB75F0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240A1B000, v4, v5, "[%s] Received failure when preWarming cache, reporting error %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v8, -1, -1);
    MEMORY[0x24560B930](v7, -1, -1);
  }
  else
  {
    uint64_t v14 = (void *)v0[36];
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_240AD6DA0()
{
  uint64_t v31 = v0;
  uint64_t v1 = *(void **)(v0 + 360);
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_240BB5970();
  os_log_type_t v5 = sub_240BB7180();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 360);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v30 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    uint64_t v9 = sub_240BB7C80();
    *(void *)(v0 + 80) = sub_240A38940(v9, v10, &v30);
    sub_240BB75F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    *(void *)(v0 + 88) = v6;
    id v11 = v6;
    sub_240A49AC0();
    uint64_t v12 = sub_240BB6E10();
    *(void *)(v0 + 96) = sub_240A38940(v12, v13, &v30);
    sub_240BB75F0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240A1B000, v4, v5, "[%s] Received failure configuring PDF, reporting error %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24560B930](v8, -1, -1);
    MEMORY[0x24560B930](v7, -1, -1);
  }
  else
  {
    uint64_t v14 = *(void **)(v0 + 360);
  }
  uint64_t v15 = (void *)(v0 + 224);
  id v16 = sub_240BB58A0();
  sub_240BB58E0();
  os_signpost_type_t v17 = sub_240BB7370();
  if (sub_240BB75D0())
  {
    uint64_t v19 = *(void *)(v0 + 184);
    uint64_t v18 = *(void *)(v0 + 192);
    uint64_t v20 = *(void *)(v0 + 176);
    swift_retain();
    sub_240BB5910();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v19 + 88))(v18, v20) == *MEMORY[0x263F90238])
    {
      uint64_t v21 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 184) + 8))(*(void *)(v0 + 192), *(void *)(v0 + 176));
      uint64_t v21 = "";
    }
    uint64_t v15 = (void *)(v0 + 240);
    id v22 = *(void (**)(uint64_t, uint64_t))(v0 + 328);
    uint64_t v23 = *(void *)(v0 + 224);
    uint64_t v24 = *(void *)(v0 + 208);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 304))(*(void *)(v0 + 240), v23, v24);
    os_log_type_t v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v25 = 0;
    os_signpost_id_t v26 = sub_240BB5870();
    _os_signpost_emit_with_name_impl(&dword_240A1B000, v16, v17, v26, "AFibBurdenPDFExportLoad", v21, v25, 2u);
    MEMORY[0x24560B930](v25, -1, -1);

    v22(v23, v24);
  }
  else
  {
  }
  uint64_t v27 = *(void **)(v0 + 360);
  (*(void (**)(void, void))(v0 + 328))(*v15, *(void *)(v0 + 208));
  sub_240ACDE18(0xD000000000000027, 0x8000000240BCE420);
  swift_release();

  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
  return v28();
}

unint64_t sub_240AD71A4()
{
  unint64_t result = qword_268CA01B8;
  if (!qword_268CA01B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_268CA01B8);
  }
  return result;
}

uint64_t sub_240AD71F8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240AD7208(int a1, void *a2, void *a3)
{
  return sub_240AD3988(a1, a2, a3, *(void *)(v3 + 16));
}

void sub_240AD7210()
{
  sub_240AD4160((uint64_t)&v0);
}

unint64_t sub_240AD7238()
{
  unint64_t result = qword_26AFD98C8;
  if (!qword_26AFD98C8)
  {
    sub_240BB6B90();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD98C8);
  }
  return result;
}

unint64_t sub_240AD7290()
{
  unint64_t result = qword_26AFD98F8;
  if (!qword_26AFD98F8)
  {
    sub_240AD73A8(255, (unint64_t *)&qword_26AFD98F0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD98F8);
  }
  return result;
}

uint64_t sub_240AD7318()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_240AD7358()
{
  sub_240AD40AC(v0 + 16);
}

void sub_240AD7364()
{
  sub_240AD4230((uint64_t)&v0);
}

uint64_t sub_240AD738C(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  return sub_240AD2BA8(a1, a2, a3, *(void *)(v3 + 16), *(uint64_t (**)(char *, uint64_t))(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void **)(v3 + 48));
}

uint64_t sub_240AD739C(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  return sub_240AD2564(a1, a2, a3, *(void *)(v3 + 16), *(void (**)(char *, uint64_t))(v3 + 24), *(void **)(v3 + 32));
}

void sub_240AD73A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_240AD740C()
{
  if (!qword_26AFD9EE0)
  {
    unint64_t v0 = sub_240BB75E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD9EE0);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for AFibBurdenPDFExportPPTTestRunner.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240AD7534);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFExportPPTTestRunner.Errors()
{
  return &type metadata for AFibBurdenPDFExportPPTTestRunner.Errors;
}

unint64_t sub_240AD7570()
{
  unint64_t result = qword_268CA0218;
  if (!qword_268CA0218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0218);
  }
  return result;
}

uint64_t sub_240AD75E0(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  uint64_t v14 = MEMORY[0x263F8EE78];
  if (a3 >> 62) {
    goto LABEL_17;
  }
  uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_240BB4850();
  for (; v5; uint64_t v5 = sub_240BB7900())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v7 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24560AAA0](i - 4, a3) : *(id *)(a3 + 8 * i);
      unint64_t v8 = v7;
      uint64_t v9 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v13 = v7;
      a1(&v12, &v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      if (v12)
      {
        MEMORY[0x24560A190]();
        if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_240BB6F60();
        }
        sub_240BB6F70();
        sub_240BB6F30();
      }
      if (v9 == v5)
      {
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    __break(1u);
LABEL_17:
    sub_240BB4850();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

unint64_t sub_240AD7780(void (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v28 = a1;
  sub_240ADB128(0, &qword_268CA0250, (void (*)(uint64_t))type metadata accessor for AFibBurdenPDFChartPoint);
  MEMORY[0x270FA5388](v5 - 8);
  id v7 = (char *)&v21 - v6;
  uint64_t v27 = type metadata accessor for AFibBurdenPDFChartPoint();
  uint64_t v23 = *(void *)(v27 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v27);
  uint64_t v26 = (uint64_t)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v22 = (uint64_t)&v21 - v10;
  if (a3 >> 62) {
    goto LABEL_20;
  }
  uint64_t v11 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_240BB4850();
  for (; v11; uint64_t v11 = sub_240BB7900())
  {
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    unint64_t v25 = a3 & 0xC000000000000001;
    unint64_t v12 = MEMORY[0x263F8EE78];
    uint64_t v13 = 4;
    unint64_t v21 = a3;
    while (1)
    {
      id v14 = v25 ? (id)MEMORY[0x24560AAA0](v13 - 4, a3) : *(id *)(a3 + 8 * v13);
      uint64_t v15 = v14;
      uint64_t v16 = v13 - 3;
      if (__OFADD__(v13 - 4, 1)) {
        break;
      }
      id v29 = v14;
      v28(&v29);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v12;
      }

      if ((*v24)(v7, 1, v27) == 1)
      {
        sub_240ADB17C((uint64_t)v7, &qword_268CA0250, (void (*)(uint64_t))type metadata accessor for AFibBurdenPDFChartPoint);
      }
      else
      {
        uint64_t v17 = v22;
        sub_240ADB0C0((uint64_t)v7, v22, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartPoint);
        sub_240ADB0C0(v17, v26, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartPoint);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v12 = sub_240A42B3C(0, *(void *)(v12 + 16) + 1, 1, v12);
        }
        unint64_t v19 = *(void *)(v12 + 16);
        unint64_t v18 = *(void *)(v12 + 24);
        if (v19 >= v18 >> 1) {
          unint64_t v12 = sub_240A42B3C(v18 > 1, v19 + 1, 1, v12);
        }
        *(void *)(v12 + 16) = v19 + 1;
        sub_240ADB0C0(v26, v12+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v19, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartPoint);
        a3 = v21;
      }
      ++v13;
      if (v16 == v11)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_20:
    sub_240BB4850();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t sub_240AD7AFC@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  id v27 = a4;
  id v33 = a1;
  LODWORD(v35) = a2 & 1;
  uint64_t v9 = sub_240BB28D0();
  uint64_t v38 = *(void *)(v9 - 8);
  uint64_t v39 = v9;
  MEMORY[0x270FA5388](v9);
  unint64_t v37 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240ADB128(0, &qword_268CA0220, MEMORY[0x263F079C8]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v31 = (char *)&v26 - v12;
  sub_240ADB128(0, &qword_268C9F180, MEMORY[0x263F07920]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v26 - v14;
  uint64_t v16 = sub_240BB2EE0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v36 = v17;
  unint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
  uint64_t v30 = a3;
  v18(a5, a3, v16);
  uint64_t v32 = (void (*)(char *, uint64_t, uint64_t))v18;
  unint64_t v19 = (int *)type metadata accessor for AFibBurdenPDFChartDailySumQuery();
  *(void *)(a5 + v19[5]) = a4;
  *(void *)(a5 + v19[6]) = a1;
  uint64_t v20 = v19[9];
  uint64_t v34 = v19;
  *(unsigned char *)(a5 + v20) = (_BYTE)v35;
  v18((uint64_t)v15, a3, v16);
  id v29 = *(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56);
  v29(v15, 0, 1, v16);
  uint64_t v28 = sub_240BB2F10();
  unint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
  uint64_t v22 = v31;
  v21(v31, 1, 1, v28);
  id v35 = v27;
  id v33 = v33;
  sub_240BB28C0();
  uint64_t v23 = v30;
  v32(v15, v30, v16);
  v29(v15, 0, 1, v16);
  v21(v22, 1, 1, v28);
  uint64_t v24 = v37;
  sub_240BB28C0();

  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v23, v16);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v38 + 32))(a5 + v34[8], v24, v39);
}

uint64_t type metadata accessor for AFibBurdenPDFChartDailySumQuery()
{
  uint64_t result = qword_268CA0228;
  if (!qword_268CA0228) {
    return swift_getSingletonMetadata();
  }
  return result;
}

char *sub_240AD7FDC(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_240BB2EE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = *(void **)&a2[v8];
    *(void *)&a1[v8] = v10;
    uint64_t v11 = *(void **)&a2[v9];
    *(void *)&a1[v9] = v11;
    uint64_t v12 = a3[7];
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    uint64_t v15 = sub_240BB28D0();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    id v17 = v10;
    id v18 = v11;
    v16(v13, v14, v15);
    v16(&a1[a3[8]], &a2[a3[8]], v15);
    a1[a3[9]] = a2[a3[9]];
  }
  return a1;
}

uint64_t sub_240AD8144(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_240BB2EE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);

  uint64_t v5 = a1 + a2[7];
  uint64_t v6 = sub_240BB28D0();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v9)((void *)(v6 - 8), v5, v6);
  uint64_t v7 = a1 + a2[8];

  return v9(v7, v6);
}

uint64_t sub_240AD823C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_240BB2EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  uint64_t v10 = *(void **)(a2 + v8);
  *(void *)(a1 + v8) = v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_240BB28D0();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  id v16 = v9;
  id v17 = v10;
  v15(v12, v13, v14);
  v15(a1 + a3[8], a2 + a3[8], v14);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_240AD8354(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_240BB2EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  uint64_t v11 = a3[6];
  uint64_t v12 = *(void **)(a2 + v11);
  uint64_t v13 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = v12;
  id v14 = v12;

  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_240BB28D0();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24);
  v19(v16, v17, v18);
  v19(a1 + a3[8], a2 + a3[8], v18);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_240AD8478(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_240BB2EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_240BB28D0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v12(a1 + a3[8], a2 + a3[8], v11);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_240AD8580(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_240BB2EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  uint64_t v9 = a3[6];
  uint64_t v10 = *(void **)(a1 + v9);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);

  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_240BB28D0();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v15(a1 + a3[8], a2 + a3[8], v14);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_240AD869C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240AD86B0);
}

uint64_t sub_240AD86B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240BB2EE0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_240BB28D0();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 28);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_240AD87DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240AD87F0);
}

uint64_t sub_240AD87F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_240BB2EE0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_240BB28D0();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_240AD891C()
{
  uint64_t result = sub_240BB2EE0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_240BB28D0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_240AD8A00(uint64_t a1, uint64_t a2)
{
  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  sub_240ADB128(0, &qword_268CA0250, (void (*)(uint64_t))type metadata accessor for AFibBurdenPDFChartPoint);
  v3[19] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for AFibBurdenPDFChartPoint();
  v3[20] = v5;
  v3[21] = *(void *)(v5 - 8);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for AFibBurdenPDFChartDailySumQuery();
  v3[24] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[25] = v7;
  v3[26] = *(void *)(v7 + 64);
  v3[27] = swift_task_alloc();
  uint64_t v8 = sub_240BB2CF0();
  v3[28] = v8;
  v3[29] = *(void *)(v8 - 8);
  v3[30] = swift_task_alloc();
  uint64_t v9 = (void *)swift_task_alloc();
  v3[31] = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_240AD8C18;
  return sub_240AD931C(a1);
}

uint64_t sub_240AD8C18(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 256) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_240AD8D98, 0, 0);
  }
}

uint64_t sub_240AD8D98()
{
  id v1 = objc_msgSend((id)v0[32], sel_statistics);
  sub_240A34DC4(0, &qword_268CA0260);
  unint64_t v2 = sub_240BB6F10();

  if (v2 >> 62)
  {
    sub_240ADAD84();
    sub_240BB4850();
    sub_240BB78F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_240BB4850();
    sub_240BB7AF0();
    sub_240ADAD84();
  }
  uint64_t v3 = v0[29];
  uint64_t v4 = v0[30];
  uint64_t v5 = v0[28];
  uint64_t v34 = v0[27];
  uint64_t v35 = v0[25];
  uint64_t v6 = v0[18];
  uint64_t v36 = v0[26];
  uint64_t v38 = (void *)v0[17];
  swift_bridgeObjectRelease();
  id v39 = self;
  sub_240ADAD84();
  uint64_t v7 = (void *)sub_240BB6EF0();
  swift_bridgeObjectRelease();
  sub_240BB27D0();
  uint64_t v8 = (void *)sub_240BB2C90();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v5);
  uint64_t v9 = (void *)sub_240BB28A0();
  unint64_t v10 = (void *)sub_240BB2E30();
  sub_240ADADDC(v6, v34);
  unint64_t v11 = (*(unsigned __int8 *)(v35 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  uint64_t v12 = swift_allocObject();
  sub_240ADB0C0(v34, v12 + v11, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartDailySumQuery);
  *(void *)(v12 + ((v36 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v38;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_240ADAFBC;
  *(void *)(v13 + 24) = v12;
  v0[6] = sub_240ADB0B8;
  v0[7] = v13;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_240ADA850;
  v0[5] = &unk_26F506840;
  uint64_t v14 = _Block_copy(v0 + 2);
  id v15 = v38;
  swift_release();
  id v16 = objc_msgSend(v39, sel_arrayByCoalescingObjects_startDate_intervalComponents_calendar_combiningBlock_, v7, v8, v9, v10, v14);
  _Block_release(v14);

  if (!v16)
  {
    uint64_t v31 = (void *)v0[32];
LABEL_17:
    unint64_t v22 = MEMORY[0x263F8EE78];
    goto LABEL_18;
  }
  uint64_t v17 = sub_240BB6F10();

  uint64_t v18 = *(void *)(v17 + 16);
  if (!v18)
  {
    uint64_t v31 = (void *)v0[32];
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  uint64_t v19 = v0[21];
  uint64_t v20 = v17 + 32;
  uint64_t v40 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56);
  uint64_t v37 = v19;
  unint64_t v21 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  sub_240BB4850();
  unint64_t v22 = MEMORY[0x263F8EE78];
  do
  {
    uint64_t v24 = v0[19];
    uint64_t v23 = v0[20];
    sub_240A38A64(v20, (uint64_t)(v0 + 8));
    sub_240A38A64((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
    int v25 = swift_dynamicCast();
    (*v40)(v24, v25 ^ 1u, 1, v23);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)(v0 + 8));
    if ((*v21)(v24, 1, v23) == 1)
    {
      sub_240ADB17C(v0[19], &qword_268CA0250, (void (*)(uint64_t))type metadata accessor for AFibBurdenPDFChartPoint);
    }
    else
    {
      uint64_t v27 = v0[22];
      uint64_t v26 = v0[23];
      sub_240ADB0C0(v0[19], v26, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartPoint);
      sub_240ADB0C0(v26, v27, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartPoint);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v22 = sub_240A42B3C(0, *(void *)(v22 + 16) + 1, 1, v22);
      }
      unint64_t v29 = *(void *)(v22 + 16);
      unint64_t v28 = *(void *)(v22 + 24);
      if (v29 >= v28 >> 1) {
        unint64_t v22 = sub_240A42B3C(v28 > 1, v29 + 1, 1, v22);
      }
      uint64_t v30 = v0[22];
      *(void *)(v22 + 16) = v29 + 1;
      sub_240ADB0C0(v30, v22+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v29, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartPoint);
    }
    v20 += 32;
    --v18;
  }
  while (v18);
  uint64_t v31 = (void *)v0[32];
  swift_bridgeObjectRelease_n();
LABEL_18:

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = (uint64_t (*)(unint64_t))v0[1];
  return v32(v22);
}

uint64_t sub_240AD931C(uint64_t a1)
{
  v2[17] = a1;
  v2[18] = v1;
  uint64_t v3 = type metadata accessor for AFibBurdenPDFChartDailySumQuery();
  v2[19] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[20] = v4;
  v2[21] = *(void *)(v4 + 64);
  v2[22] = swift_task_alloc();
  uint64_t v5 = sub_240BB2CF0();
  v2[23] = v5;
  v2[24] = *(void *)(v5 - 8);
  v2[25] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_240AD9440, 0, 0);
}

uint64_t sub_240AD9440()
{
  uint64_t v2 = v0[24];
  uint64_t v1 = v0[25];
  uint64_t v3 = v0[23];
  uint64_t v5 = v0[18];
  uint64_t v4 = v0[19];
  uint64_t v6 = *(void **)(v5 + *(int *)(v4 + 24));
  id v16 = self;
  id v18 = v6;
  sub_240BB27D0();
  uint64_t v7 = (void *)sub_240BB2C90();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v8(v1, v3);
  uint64_t v17 = v8;
  sub_240BB27A0();
  uint64_t v9 = (void *)sub_240BB2C90();
  v8(v1, v3);
  id v10 = objc_msgSend(v16, sel_predicateForSamplesWithStartDate_endDate_options_, v7, v9, 0);

  if (*(unsigned char *)(v5 + *(int *)(v4 + 36))) {
    uint64_t v11 = 64;
  }
  else {
    uint64_t v11 = 16;
  }
  sub_240BB27A0();
  id v12 = objc_allocWithZone(MEMORY[0x263F0A7E0]);
  uint64_t v13 = (void *)sub_240BB2C90();
  uint64_t v14 = (void *)sub_240BB28A0();
  v0[26] = objc_msgSend(v12, sel_initWithSampleType_samplePredicate_options_anchorDate_intervalComponents_, v18, v10, v11, v13, v14);

  v17(v1, v3);
  return MEMORY[0x270FA2498](sub_240AD9628, 0, 0);
}

uint64_t sub_240AD9628()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0;
  uint64_t v3 = v0 + 2;
  uint64_t v4 = v0 + 10;
  uint64_t v5 = v0 + 16;
  uint64_t v6 = (void *)v0[26];
  uint64_t v8 = v1[21];
  uint64_t v7 = v1[22];
  uint64_t v9 = v1[20];
  uint64_t v17 = v1[19];
  uint64_t v10 = v1[18];
  v1[2] = v2;
  v1[7] = v5;
  v1[3] = sub_240AD97FC;
  uint64_t v11 = swift_continuation_init();
  sub_240ADADDC(v10, v7);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v13 = (v8 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = swift_allocObject();
  sub_240ADB0C0(v7, v14 + v12, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartDailySumQuery);
  *(void *)(v14 + v13) = v11;
  v1[14] = sub_240ADB45C;
  v1[15] = v14;
  v1[10] = MEMORY[0x263EF8330];
  v1[11] = 1107296256;
  v1[12] = sub_240AD400C;
  v1[13] = &unk_26F506890;
  id v15 = _Block_copy(v4);
  swift_release();
  objc_msgSend(v6, sel_setInitialResultsHandler_, v15);
  _Block_release(v15);
  objc_msgSend(*(id *)(v10 + *(int *)(v17 + 20)), sel_executeQuery_, v6);
  return MEMORY[0x270FA23F0](v3);
}

uint64_t sub_240AD97FC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 216) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_240AD999C;
  }
  else
  {
    *(void *)(v1 + 224) = *(void *)(v1 + 128);
    uint64_t v3 = sub_240AD9920;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_240AD9920()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 224);
  return v1(v2);
}

uint64_t sub_240AD999C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_240AD9A14@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v117 = a5;
  id v127 = (char *)a4;
  uint64_t v124 = a3;
  unint64_t v122 = a1;
  uint64_t v8 = sub_240BB27F0();
  uint64_t v118 = *(void *)(v8 - 8);
  uint64_t v119 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  id v115 = (char *)&v112 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  id v120 = (char *)&v112 - v11;
  uint64_t v123 = type metadata accessor for AFibBurdenPDFChartDailySumQuery();
  uint64_t v12 = MEMORY[0x270FA5388](v123);
  id v125 = (char *)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v114 = (uint64_t)&v112 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v121 = (uint64_t)&v112 - v16;
  sub_240ADB128(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490]);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v20 = (char *)&v112 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  unint64_t v22 = (char *)&v112 - v21;
  uint64_t v23 = sub_240BB2CF0();
  uint64_t v24 = *(char **)(v23 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  id v116 = (char *)&v112 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  unint64_t v29 = (char *)&v112 - v28;
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  uint64_t v32 = (char *)&v112 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v34 = (char *)&v112 - v33;
  sub_240A496B8(a2, (uint64_t)v22);
  uint64_t v35 = (unsigned int (*)(char *, uint64_t, uint64_t))*((void *)v24 + 6);
  if (v35(v22, 1, v23) == 1)
  {
    uint64_t v20 = v22;
LABEL_5:
    sub_240ADB17C((uint64_t)v20, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490]);
    uint64_t v38 = (uint64_t)v127;
    uint64_t v39 = (uint64_t)v125;
    if (qword_26AFD7BF0 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_240BB5990();
    sub_240A395FC(v40, (uint64_t)qword_26AFDEB80);
    sub_240ADADDC(v38, v39);
    uint64_t v41 = sub_240BB5970();
    os_log_type_t v42 = sub_240BB7180();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 136446466;
      uint64_t v45 = v123;
      uint64_t v128 = v123;
      v129[0] = v44;
      sub_240ADB234();
      uint64_t v126 = a6;
      uint64_t v46 = sub_240BB6E10();
      uint64_t v128 = sub_240A38940(v46, v47, v129);
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2080;
      id v48 = objc_msgSend(*(id *)(v39 + *(int *)(v45 + 24)), sel_description);
      uint64_t v49 = v39;
      uint64_t v50 = sub_240BB6DE0();
      unint64_t v52 = v51;

      uint64_t v128 = sub_240A38940(v50, v52, v129);
      a6 = v126;
      sub_240BB75F0();
      swift_bridgeObjectRelease();
      sub_240ADB1D8(v49);
      _os_log_impl(&dword_240A1B000, v41, v42, "[%{public}s] Missing start/end date when computing weekly average for %s", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24560B930](v44, -1, -1);
      MEMORY[0x24560B930](v43, -1, -1);
    }
    else
    {
      sub_240ADB1D8(v39);
    }

    uint64_t v53 = type metadata accessor for AFibBurdenPDFChartPoint();
    id v54 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56);
    uint64_t v55 = a6;
    return v54(v55, 1, 1, v53);
  }
  uint64_t v113 = v32;
  uint64_t v126 = a6;
  uint64_t v36 = (void (*)(char *, char *, uint64_t))*((void *)v24 + 4);
  v36(v34, v22, v23);
  sub_240A496B8(v124, (uint64_t)v20);
  uint64_t v37 = v23;
  if (v35(v20, 1, v23) == 1)
  {
    (*((void (**)(char *, uint64_t))v24 + 1))(v34, v23);
    a6 = v126;
    goto LABEL_5;
  }
  id v112 = v34;
  id v125 = v24;
  id v56 = v113;
  v36(v113, v20, v23);
  if (v122)
  {
    uint64_t v57 = sub_240A491F4(v122);
    if (v57)
    {
      unint64_t v58 = v57;
      id v59 = v125;
      id v60 = (void (*)(char *, char *, uint64_t))*((void *)v125 + 2);
      uint64_t v61 = v56;
      uint64_t v62 = v112;
      v60(v29, v112, v23);
      v60(v116, v61, v23);
      uint64_t v63 = v120;
      uint64_t v64 = sub_240BB27B0();
      MEMORY[0x270FA5388](v64);
      uint64_t v65 = (uint64_t)v127;
      *(&v112 - 2) = v127;
      sub_240AD75E0((void (*)(uint64_t *__return_ptr, id *))sub_240ADB270, (uint64_t)(&v112 - 4), v58);
      swift_bridgeObjectRelease();
      id v66 = self;
      sub_240A34DC4(0, &qword_268CA0280);
      uint64_t v67 = (void *)sub_240BB6EF0();
      swift_bridgeObjectRelease();
      uint64_t v68 = v117;
      id v69 = objc_msgSend(v66, sel_averageSumFromQuantities_unit_, v67, v117);

      uint64_t v70 = v126;
      if (v69)
      {
        objc_msgSend(v69, sel_doubleValueForUnit_, v68);
        uint64_t v72 = v71;
        uint64_t v74 = v118;
        uint64_t v73 = v119;
        uint64_t v75 = v115;
        (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v115, v63, v119);

        (*(void (**)(char *, uint64_t))(v74 + 8))(v63, v73);
        id v76 = (void (*)(char *, uint64_t))*((void *)v59 + 1);
        v76(v61, v37);
        v76(v62, v37);
        (*(void (**)(uint64_t, char *, uint64_t))(v74 + 32))(v70, v75, v73);
        uint64_t v77 = type metadata accessor for AFibBurdenPDFChartPoint();
        *(void *)(v70 + *(int *)(v77 + 20)) = v72;
        *(void *)(v70 + *(int *)(v77 + 24)) = MEMORY[0x263F8EE88];
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v70, 0, 1, v77);
      }
      if (qword_26AFD7BF0 != -1) {
        swift_once();
      }
      uint64_t v98 = sub_240BB5990();
      sub_240A395FC(v98, (uint64_t)qword_26AFDEB80);
      uint64_t v99 = v114;
      sub_240ADADDC(v65, v114);
      id v100 = sub_240BB5970();
      os_log_type_t v101 = sub_240BB7180();
      if (os_log_type_enabled(v100, v101))
      {
        uint64_t v102 = swift_slowAlloc();
        uint64_t v103 = swift_slowAlloc();
        uint64_t v124 = v103;
        *(_DWORD *)uint64_t v102 = 136446466;
        uint64_t v104 = v123;
        uint64_t v128 = v123;
        v129[0] = v103;
        sub_240ADB234();
        uint64_t v105 = sub_240BB6E10();
        id v127 = (char *)v37;
        uint64_t v128 = sub_240A38940(v105, v106, v129);
        sub_240BB75F0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v102 + 12) = 2080;
        id v107 = objc_msgSend(*(id *)(v99 + *(int *)(v104 + 24)), sel_description);
        uint64_t v108 = sub_240BB6DE0();
        unint64_t v110 = v109;

        uint64_t v128 = sub_240A38940(v108, v110, v129);
        uint64_t v70 = v126;
        sub_240BB75F0();
        swift_bridgeObjectRelease();
        sub_240ADB1D8(v99);
        _os_log_impl(&dword_240A1B000, v100, v101, "[%{public}s] Could not compute average sum for %s", (uint8_t *)v102, 0x16u);
        uint64_t v111 = v124;
        swift_arrayDestroy();
        MEMORY[0x24560B930](v111, -1, -1);
        MEMORY[0x24560B930](v102, -1, -1);

        (*(void (**)(char *, uint64_t))(v118 + 8))(v120, v119);
        goto LABEL_19;
      }

      sub_240ADB1D8(v99);
      (*(void (**)(char *, uint64_t))(v118 + 8))(v63, v119);
      uint64_t v94 = (void (*)(char *, uint64_t))*((void *)v125 + 1);
      v94(v113, v37);
      id v96 = v62;
LABEL_21:
      uint64_t v97 = v37;
      goto LABEL_22;
    }
  }
  uint64_t v70 = v126;
  if (qword_26AFD7BF0 != -1) {
    swift_once();
  }
  uint64_t v79 = sub_240BB5990();
  sub_240A395FC(v79, (uint64_t)qword_26AFDEB80);
  uint64_t v80 = v121;
  sub_240ADADDC((uint64_t)v127, v121);
  id v81 = sub_240BB5970();
  os_log_type_t v82 = sub_240BB7180();
  if (!os_log_type_enabled(v81, v82))
  {

    sub_240ADB1D8(v80);
    uint64_t v94 = (void (*)(char *, uint64_t))*((void *)v125 + 1);
    v94(v56, v37);
    id v96 = v112;
    goto LABEL_21;
  }
  uint64_t v83 = swift_slowAlloc();
  uint64_t v84 = swift_slowAlloc();
  *(_DWORD *)uint64_t v83 = 136446466;
  uint64_t v85 = v123;
  uint64_t v128 = v123;
  v129[0] = v84;
  sub_240ADB234();
  uint64_t v86 = sub_240BB6E10();
  id v127 = (char *)v37;
  uint64_t v128 = sub_240A38940(v86, v87, v129);
  sub_240BB75F0();
  swift_bridgeObjectRelease();
  *(_WORD *)(v83 + 12) = 2080;
  id v88 = objc_msgSend(*(id *)(v80 + *(int *)(v85 + 24)), sel_description);
  uint64_t v89 = v80;
  uint64_t v90 = sub_240BB6DE0();
  unint64_t v92 = v91;

  uint64_t v128 = sub_240A38940(v90, v92, v129);
  sub_240BB75F0();
  swift_bridgeObjectRelease();
  uint64_t v93 = v89;
  uint64_t v70 = v126;
  sub_240ADB1D8(v93);
  _os_log_impl(&dword_240A1B000, v81, v82, "[%{public}s] Missing statistics when computing weekly average for %s", (uint8_t *)v83, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x24560B930](v84, -1, -1);
  MEMORY[0x24560B930](v83, -1, -1);

LABEL_19:
  uint64_t v94 = (void (*)(char *, uint64_t))*((void *)v125 + 1);
  uint64_t v95 = (uint64_t)v127;
  v94(v113, (uint64_t)v127);
  id v96 = v112;
  uint64_t v97 = v95;
LABEL_22:
  v94(v96, v97);
  uint64_t v53 = type metadata accessor for AFibBurdenPDFChartPoint();
  id v54 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56);
  uint64_t v55 = v70;
  return v54(v55, 1, 1, v53);
}

uint64_t sub_240ADA70C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t, uint64_t, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  sub_240ADB128(0, &qword_268CA0250, (void (*)(uint64_t))type metadata accessor for AFibBurdenPDFChartPoint);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v16 - v11;
  a4(a1, a2, a3);
  uint64_t v13 = type metadata accessor for AFibBurdenPDFChartPoint();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13);
  if (result == 1)
  {
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
  }
  else
  {
    *(void *)(a5 + 24) = v13;
    uint64_t v15 = sub_240A23B08((uint64_t *)a5);
    return sub_240ADB0C0((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for AFibBurdenPDFChartPoint);
  }
  return result;
}

id sub_240ADA850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v14)(void *__return_ptr, uint64_t, char *, char *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  void v27[3];
  uint64_t v28;
  uint64_t vars8;

  sub_240ADB128(0, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v27 - v12;
  uint64_t v14 = *(void (**)(void *__return_ptr, uint64_t, char *, char *))(a1 + 32);
  if (a2)
  {
    sub_240ADAD84();
    a2 = sub_240BB6F10();
  }
  if (a3)
  {
    sub_240BB2CB0();
    uint64_t v15 = sub_240BB2CF0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v13, 0, 1, v15);
  }
  else
  {
    uint64_t v16 = sub_240BB2CF0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v13, 1, 1, v16);
  }
  if (a4)
  {
    sub_240BB2CB0();
    uint64_t v17 = sub_240BB2CF0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 0, 1, v17);
  }
  else
  {
    uint64_t v18 = sub_240BB2CF0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 1, 1, v18);
  }
  swift_retain();
  v14(v27, a2, v13, v11);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v19 = (void (*)(uint64_t))MEMORY[0x263F07490];
  sub_240ADB17C((uint64_t)v11, (unint64_t *)&qword_26AFD8F80, MEMORY[0x263F07490]);
  sub_240ADB17C((uint64_t)v13, (unint64_t *)&qword_26AFD8F80, v19);
  uint64_t v20 = v28;
  if (v28)
  {
    uint64_t v21 = sub_240A3466C(v27, v28);
    unint64_t v22 = *(void *)(v20 - 8);
    MEMORY[0x270FA5388](v21);
    uint64_t v24 = (char *)v27 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v22 + 16))(v24);
    uint64_t v25 = (void *)sub_240BB7AD0();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v20);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v27);
  }
  else
  {
    uint64_t v25 = 0;
  }

  return v25;
}

uint64_t sub_240ADABA4(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  objc_msgSend(*(id *)(a4 + *(int *)(type metadata accessor for AFibBurdenPDFChartDailySumQuery() + 20)), sel_stopQuery_, a1);
  if (a2)
  {
    **(void **)(*(void *)(a5 + 64) + 40) = a2;
    id v8 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    if (a3)
    {
      uint64_t v10 = a3;
    }
    else
    {
      type metadata accessor for HKError(0);
      sub_240B96528(MEMORY[0x263F8EE78]);
      sub_240ADB510();
      sub_240BB2A20();
      uint64_t v10 = v13;
    }
    sub_240A49AC0();
    swift_allocError();
    void *v11 = v10;
    id v12 = a3;
    return swift_continuation_throwingResumeWithError();
  }
}

uint64_t sub_240ADACE0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_240A524D4;
  return sub_240AD8A00(a1, a2);
}

unint64_t sub_240ADAD84()
{
  unint64_t result = qword_268CA0268;
  if (!qword_268CA0268)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CA0268);
  }
  return result;
}

uint64_t sub_240ADADDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AFibBurdenPDFChartDailySumQuery();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240ADAE40()
{
  uint64_t v1 = (int *)(type metadata accessor for AFibBurdenPDFChartDailySumQuery() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240BB2EE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  uint64_t v8 = v6 + v1[9];
  uint64_t v9 = sub_240BB28D0();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(v6 + v1[10], v9);

  return MEMORY[0x270FA0238](v0, v5 + 8, v4);
}

uint64_t sub_240ADAFBC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = *(void *)(type metadata accessor for AFibBurdenPDFChartDailySumQuery() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v4 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_240AD9A14(a1, a2, a3, v4 + v10, v11, a4);
}

uint64_t sub_240ADB080()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240ADB0B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_240ADA70C(a1, a2, a3, *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16), a4);
}

uint64_t sub_240ADB0C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_240ADB128(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240BB75E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_240ADB17C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_240ADB128(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_240ADB1D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AFibBurdenPDFChartDailySumQuery();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_240ADB234()
{
  unint64_t result = qword_268CA0278;
  if (!qword_268CA0278)
  {
    type metadata accessor for AFibBurdenPDFChartDailySumQuery();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CA0278);
  }
  return result;
}

id sub_240ADB270@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *a1;
  if (*(unsigned char *)(v4 + *(int *)(type metadata accessor for AFibBurdenPDFChartDailySumQuery() + 36))) {
    uint64_t v6 = &selRef_duration;
  }
  else {
    uint64_t v6 = &selRef_sumQuantity;
  }
  id result = [v5 *v6];
  *a2 = result;
  return result;
}

uint64_t sub_240ADB2E8()
{
  uint64_t v1 = (int *)(type metadata accessor for AFibBurdenPDFChartDailySumQuery() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240BB2EE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  uint64_t v8 = v6 + v1[9];
  uint64_t v9 = sub_240BB28D0();
  unint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(v6 + v1[10], v9);

  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_240ADB45C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for AFibBurdenPDFChartDailySumQuery() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_240ADABA4(a1, a2, a3, v3 + v8, v9);
}

unint64_t sub_240ADB510()
{
  unint64_t result = qword_268C9EA10;
  if (!qword_268C9EA10)
  {
    type metadata accessor for HKError(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C9EA10);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AFibBurdenPDFChartDailySumQuery.AggregationStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240ADB634);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFChartDailySumQuery.AggregationStyle()
{
  return &type metadata for AFibBurdenPDFChartDailySumQuery.AggregationStyle;
}

unint64_t sub_240ADB670()
{
  unint64_t result = qword_268CA0288;
  if (!qword_268CA0288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CA0288);
  }
  return result;
}

uint64_t type metadata accessor for CardioFitnessFeatureStatusActionHandler(uint64_t a1)
{
  return sub_240A3E6AC(a1, (uint64_t *)&unk_26AFD7A90);
}

uint64_t sub_240ADB6EC()
{
  return swift_initClassMetadata2();
}

unint64_t sub_240ADB72C(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000016;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 4:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_240ADB7DC(void *a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F8E0C0];
  sub_240AE1AFC(0, &qword_268CA0388, (uint64_t (*)(void))sub_240AE18B0, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.OpenKnowledgeBaseArticleCodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v53 = *(void *)(v3 - 8);
  uint64_t v54 = v3;
  MEMORY[0x270FA5388](v3);
  unint64_t v52 = (char *)&v37 - v4;
  sub_240AE1AFC(0, &qword_268CA0390, (uint64_t (*)(void))sub_240AE1904, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.DeepLinkToHeartRateSettingsCodingKeys, v2);
  uint64_t v48 = *(void *)(v5 - 8);
  uint64_t v49 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v46 = (char *)&v37 - v6;
  sub_240AE1AFC(0, &qword_268CA0398, (uint64_t (*)(void))sub_240AE1958, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PushEnabledFeatureSettingsCodingKeys, v2);
  uint64_t v50 = *(void *)(v7 - 8);
  uint64_t v51 = v7;
  MEMORY[0x270FA5388](v7);
  unint64_t v47 = (char *)&v37 - v8;
  sub_240AE1AFC(0, &qword_268CA03A0, (uint64_t (*)(void))sub_240AE19AC, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentHealthDetailsCodingKeys, v2);
  uint64_t v42 = *(void *)(v9 - 8);
  uint64_t v43 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v39 = (char *)&v37 - v10;
  sub_240AE1AFC(0, &qword_268CA03A8, (uint64_t (*)(void))sub_240AE1A00, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentFeatureSettingsCodingKeys, v2);
  uint64_t v44 = *(void *)(v11 - 8);
  uint64_t v45 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v41 = (char *)&v37 - v12;
  uint64_t v55 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
  uint64_t v13 = MEMORY[0x270FA5388](v55);
  uint64_t v38 = (uint64_t)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v40 = (uint64_t)&v37 - v15;
  sub_240AE1AFC(0, &qword_268CA03B0, (uint64_t (*)(void))sub_240AE1A54, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentOnboardingCodingKeys, v2);
  uint64_t v17 = v16;
  uint64_t v37 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v37 - v18;
  uint64_t v20 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
  MEMORY[0x270FA5388](v20);
  unint64_t v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240AE1AFC(0, &qword_268CA03B8, (uint64_t (*)(void))sub_240AE1AA8, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.CodingKeys, v2);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v56 = v23;
  uint64_t v57 = v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v37 - v25;
  sub_240A3466C(a1, a1[3]);
  sub_240AE1AA8();
  sub_240BB7C40();
  sub_240AE1B64(v58, (uint64_t)v22, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v27 = v38;
      sub_240ADF504((uint64_t)v22, v38, (uint64_t (*)(void))type metadata accessor for CardioFitnessHealthChecklistSettingsState);
      char v62 = 3;
      sub_240AE1958();
      uint64_t v28 = v47;
      uint64_t v29 = v56;
      sub_240BB7A30();
      sub_240ADF2D4(&qword_268CA03C0, (void (*)(uint64_t))type metadata accessor for CardioFitnessHealthChecklistSettingsState);
      uint64_t v30 = v51;
      sub_240BB7A90();
      uint64_t v31 = v50;
      goto LABEL_4;
    case 2u:
      char v59 = 0;
      sub_240AE1A54();
      uint64_t v33 = v56;
      sub_240BB7A30();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v19, v17);
      goto LABEL_10;
    case 3u:
      char v61 = 2;
      sub_240AE19AC();
      uint64_t v34 = v39;
      uint64_t v33 = v56;
      sub_240BB7A30();
      uint64_t v36 = v42;
      uint64_t v35 = v43;
      goto LABEL_9;
    case 4u:
      char v63 = 4;
      sub_240AE1904();
      uint64_t v34 = v46;
      uint64_t v33 = v56;
      sub_240BB7A30();
      uint64_t v36 = v48;
      uint64_t v35 = v49;
      goto LABEL_9;
    case 5u:
      char v64 = 5;
      sub_240AE18B0();
      uint64_t v34 = v52;
      uint64_t v33 = v56;
      sub_240BB7A30();
      uint64_t v36 = v53;
      uint64_t v35 = v54;
LABEL_9:
      (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v35);
LABEL_10:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v26, v33);
      break;
    default:
      uint64_t v27 = v40;
      sub_240ADF504((uint64_t)v22, v40, (uint64_t (*)(void))type metadata accessor for CardioFitnessHealthChecklistSettingsState);
      char v60 = 1;
      sub_240AE1A00();
      uint64_t v28 = v41;
      uint64_t v29 = v56;
      sub_240BB7A30();
      sub_240ADF2D4(&qword_268CA03C0, (void (*)(uint64_t))type metadata accessor for CardioFitnessHealthChecklistSettingsState);
      uint64_t v30 = v45;
      sub_240BB7A90();
      uint64_t v31 = v44;
LABEL_4:
      (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
      sub_240AE263C(v27, (uint64_t (*)(void))type metadata accessor for CardioFitnessHealthChecklistSettingsState);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v26, v29);
      break;
  }
  return result;
}

uint64_t sub_240ADC0EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v78 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F8E040];
  sub_240AE1AFC(0, &qword_268CA0310, (uint64_t (*)(void))sub_240AE18B0, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.OpenKnowledgeBaseArticleCodingKeys, MEMORY[0x263F8E040]);
  uint64_t v81 = v4;
  uint64_t v71 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v77 = (char *)&v59 - v5;
  sub_240AE1AFC(0, &qword_268CA0320, (uint64_t (*)(void))sub_240AE1904, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.DeepLinkToHeartRateSettingsCodingKeys, v3);
  uint64_t v80 = v6;
  uint64_t v68 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v75 = (char *)&v59 - v7;
  sub_240AE1AFC(0, &qword_268CA0330, (uint64_t (*)(void))sub_240AE1958, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PushEnabledFeatureSettingsCodingKeys, v3);
  uint64_t v69 = *(void *)(v8 - 8);
  uint64_t v70 = v8;
  MEMORY[0x270FA5388](v8);
  id v76 = (char *)&v59 - v9;
  sub_240AE1AFC(0, &qword_268CA0340, (uint64_t (*)(void))sub_240AE19AC, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentHealthDetailsCodingKeys, v3);
  uint64_t v64 = *(void *)(v10 - 8);
  uint64_t v65 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v73 = (char *)&v59 - v11;
  sub_240AE1AFC(0, &qword_268CA0350, (uint64_t (*)(void))sub_240AE1A00, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentFeatureSettingsCodingKeys, v3);
  uint64_t v66 = *(void *)(v12 - 8);
  uint64_t v67 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v74 = (char *)&v59 - v13;
  sub_240AE1AFC(0, &qword_268CA0360, (uint64_t (*)(void))sub_240AE1A54, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentOnboardingCodingKeys, v3);
  uint64_t v63 = v14;
  uint64_t v62 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v72 = (char *)&v59 - v15;
  sub_240AE1AFC(0, &qword_268CA0370, (uint64_t (*)(void))sub_240AE1AA8, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.CodingKeys, v3);
  uint64_t v17 = v16;
  uint64_t v79 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v59 - v18;
  uint64_t v20 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v26 = (char *)&v59 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v59 - v27;
  uint64_t v29 = a1;
  uint64_t v30 = a1[3];
  os_log_type_t v82 = v29;
  sub_240A3466C(v29, v30);
  sub_240AE1AA8();
  uint64_t v31 = (uint64_t)v83;
  sub_240BB7C30();
  if (v31) {
    goto LABEL_11;
  }
  char v60 = v26;
  char v61 = v23;
  uint64_t v33 = v80;
  uint64_t v32 = v81;
  uint64_t v34 = v20;
  uint64_t v83 = v28;
  uint64_t v35 = sub_240BB7A20();
  uint64_t v36 = v17;
  uint64_t v37 = v19;
  if (*(void *)(v35 + 16) != 1)
  {
    uint64_t v40 = sub_240BB7830();
    swift_allocError();
    uint64_t v42 = v41;
    sub_240A7CBF0();
    *uint64_t v42 = v34;
    sub_240BB79B0();
    sub_240BB7810();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v40 - 8) + 104))(v42, *MEMORY[0x263F8DCB0], v40);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v19, v36);
LABEL_11:
    uint64_t v55 = (uint64_t)v82;
    return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v55);
  }
  switch(*(unsigned char *)(v35 + 32))
  {
    case 1:
      char v85 = 1;
      sub_240AE1A00();
      uint64_t v43 = v74;
      sub_240BB79A0();
      uint64_t v80 = v36;
      uint64_t v81 = v20;
      type metadata accessor for CardioFitnessHealthChecklistSettingsState();
      sub_240ADF2D4(&qword_268CA0380, (void (*)(uint64_t))type metadata accessor for CardioFitnessHealthChecklistSettingsState);
      uint64_t v49 = (uint64_t)v60;
      uint64_t v50 = v67;
      sub_240BB7A10();
      uint64_t v51 = v79;
      (*(void (**)(char *, uint64_t))(v66 + 8))(v43, v50);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v19, v80);
      swift_storeEnumTagMultiPayload();
      uint64_t v58 = v49;
      goto LABEL_15;
    case 2:
      char v86 = 2;
      sub_240AE19AC();
      uint64_t v44 = v73;
      sub_240BB79A0();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v44, v65);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v19, v36);
      uint64_t v39 = (uint64_t)v83;
      goto LABEL_13;
    case 3:
      char v87 = 3;
      sub_240AE1958();
      uint64_t v45 = v76;
      sub_240BB79A0();
      uint64_t v81 = v20;
      type metadata accessor for CardioFitnessHealthChecklistSettingsState();
      sub_240ADF2D4(&qword_268CA0380, (void (*)(uint64_t))type metadata accessor for CardioFitnessHealthChecklistSettingsState);
      uint64_t v52 = (uint64_t)v61;
      uint64_t v53 = v70;
      sub_240BB7A10();
      uint64_t v54 = v79;
      (*(void (**)(char *, uint64_t))(v69 + 8))(v45, v53);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v19, v36);
      swift_storeEnumTagMultiPayload();
      uint64_t v58 = v52;
LABEL_15:
      uint64_t v39 = (uint64_t)v83;
      sub_240ADF504(v58, (uint64_t)v83, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
      goto LABEL_14;
    case 4:
      char v88 = 4;
      sub_240AE1904();
      uint64_t v46 = v75;
      sub_240BB79A0();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v46, v33);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v37, v36);
      uint64_t v39 = (uint64_t)v83;
      goto LABEL_13;
    case 5:
      uint64_t v47 = v32;
      char v89 = 5;
      sub_240AE18B0();
      uint64_t v48 = v77;
      sub_240BB79A0();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v48, v47);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v37, v36);
      uint64_t v39 = (uint64_t)v83;
      goto LABEL_13;
    default:
      char v84 = 0;
      sub_240AE1A54();
      uint64_t v38 = v72;
      sub_240BB79A0();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v38, v63);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v19, v36);
      uint64_t v39 = (uint64_t)v83;
LABEL_13:
      swift_storeEnumTagMultiPayload();
LABEL_14:
      uint64_t v57 = (uint64_t)v82;
      sub_240ADF504(v39, v78, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
      uint64_t v55 = v57;
      break;
  }
  return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v55);
}

unint64_t sub_240ADCD94()
{
  return sub_240ADB72C(*v0);
}

uint64_t sub_240ADCD9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_240AE2F2C(a1, a2);
  *a3 = result;
  return result;
}

void sub_240ADCDC4(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_240ADCDD0(uint64_t a1)
{
  unint64_t v2 = sub_240AE1AA8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240ADCE0C(uint64_t a1)
{
  unint64_t v2 = sub_240AE1AA8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240ADCE48(uint64_t a1)
{
  unint64_t v2 = sub_240AE1904();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240ADCE84(uint64_t a1)
{
  unint64_t v2 = sub_240AE1904();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240ADCEC0(uint64_t a1)
{
  unint64_t v2 = sub_240AE18B0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240ADCEFC(uint64_t a1)
{
  unint64_t v2 = sub_240AE18B0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240ADCF38()
{
  return 12383;
}

uint64_t sub_240ADCF48(uint64_t a1)
{
  unint64_t v2 = sub_240AE1A00();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240ADCF84(uint64_t a1)
{
  unint64_t v2 = sub_240AE1A00();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240ADCFC0(uint64_t a1)
{
  unint64_t v2 = sub_240AE19AC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240ADCFFC(uint64_t a1)
{
  unint64_t v2 = sub_240AE19AC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240ADD038(uint64_t a1)
{
  unint64_t v2 = sub_240AE1A54();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240ADD074(uint64_t a1)
{
  unint64_t v2 = sub_240AE1A54();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240ADD0B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_240BB7AE0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_240ADD130(uint64_t a1)
{
  unint64_t v2 = sub_240AE1958();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240ADD16C(uint64_t a1)
{
  unint64_t v2 = sub_240AE1958();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240ADD1A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240ADC0EC(a1, a2);
}

uint64_t sub_240ADD1C0(void *a1)
{
  return sub_240ADB7DC(a1);
}

uint64_t sub_240ADD1DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  sub_240ADF430(0, &qword_268CA0290, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v20 = (char *)&v17 - v4;
  sub_240AE1AFC(0, &qword_268CA0298, (uint64_t (*)(void))sub_240ADF33C, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v19 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_240A3466C(a1, a1[3]);
  sub_240ADF33C();
  uint64_t v13 = v21;
  sub_240BB7C30();
  if (!v13)
  {
    uint64_t v14 = v19;
    sub_240ADF2D4(&qword_268CA02A8, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
    uint64_t v15 = (uint64_t)v20;
    sub_240BB79E0();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
    sub_240ADF3B0(v15, (uint64_t)v11);
    sub_240AE1B64((uint64_t)v11, v18, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData);
  }
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  return sub_240AE263C((uint64_t)v11, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData);
}

uint64_t sub_240ADD4F0()
{
  return 0x6F69746341706174;
}

uint64_t sub_240ADD50C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6F69746341706174 && a2 == 0xE90000000000006ELL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_240BB7AE0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_240ADD5B0(uint64_t a1)
{
  unint64_t v2 = sub_240ADF33C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240ADD5EC(uint64_t a1)
{
  unint64_t v2 = sub_240ADF33C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240ADD628@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240ADD1DC(a1, a2);
}

uint64_t sub_240ADD640(void *a1)
{
  sub_240AE1AFC(0, &qword_268CA02B0, (uint64_t (*)(void))sub_240ADF33C, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - v5;
  sub_240A3466C(a1, a1[3]);
  sub_240ADF33C();
  sub_240BB7C40();
  type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
  sub_240ADF2D4(&qword_268CA02B8, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  sub_240BB7A60();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}