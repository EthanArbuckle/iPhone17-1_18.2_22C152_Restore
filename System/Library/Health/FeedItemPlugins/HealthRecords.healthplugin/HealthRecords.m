uint64_t sub_24081AABC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;

  v6 = v5;
  v7 = *v5;
  sub_24083F6E0(0, a2, a3, a4, a5);
  v8 = sub_240955258();
  v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    result = swift_release();
LABEL_35:
    *v6 = v9;
    return result;
  }
  v32 = v5;
  v10 = 1 << *(unsigned char *)(v7 + 32);
  v11 = v7 + 56;
  if (v10 < 64) {
    v12 = ~(-1 << v10);
  }
  else {
    v12 = -1;
  }
  v13 = v12 & *(void *)(v7 + 56);
  v14 = (unint64_t)(v10 + 63) >> 6;
  v15 = v8 + 56;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v13)
    {
      v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v21 >= v14) {
      goto LABEL_33;
    }
    v22 = *(void *)(v11 + 8 * v21);
    ++v17;
    if (!v22)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_33;
      }
      v22 = *(void *)(v11 + 8 * v17);
      if (!v22)
      {
        v17 = v21 + 2;
        if (v21 + 2 >= v14) {
          goto LABEL_33;
        }
        v22 = *(void *)(v11 + 8 * v17);
        if (!v22) {
          break;
        }
      }
    }
LABEL_23:
    v13 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_24:
    v24 = *(id *)(*(void *)(v7 + 48) + 8 * v20);
    result = sub_240954FB8();
    v25 = -1 << *(unsigned char *)(v9 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v30 = v27 == v29;
        if (v27 == v29) {
          v27 = 0;
        }
        v28 |= v30;
        v31 = *(void *)(v15 + 8 * v27);
      }
      while (v31 == -1);
      v18 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v9 + 48) + 8 * v18) = v24;
    ++*(void *)(v9 + 16);
  }
  v23 = v21 + 3;
  if (v23 >= v14)
  {
LABEL_33:
    result = swift_release_n();
    v6 = v32;
    goto LABEL_35;
  }
  v22 = *(void *)(v11 + 8 * v23);
  if (v22)
  {
    v17 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    v17 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    v22 = *(void *)(v11 + 8 * v17);
    ++v23;
    if (v22) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24081AD34(void *a1)
{
  sub_24084221C();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[1] = *a1;
  sub_24082EF80(0, &qword_26AFCDEB8, &qword_26AFCDF40, 0x263F0A4E8, MEMORY[0x263F8D488]);
  sub_24083FCA0((unint64_t *)&qword_26AFCDEC0, &qword_26AFCDEB8, &qword_26AFCDF40, 0x263F0A4E8);
  sub_240954958();
  sub_2408484BC(0, qword_26AFD07C0);
  sub_240954298();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_24081AEB4(uint64_t a1, int *a2)
{
  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24081B354;
  return v6(a1);
}

void *sub_24081AF90(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  v6 = a2;
  uint64_t v7 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_240955188();
    sub_24083EDCC(0, (unint64_t *)&qword_26AFD0580);
    sub_240878FFC();
    result = (void *)sub_240954B78();
    uint64_t v4 = v27;
    uint64_t v8 = v28;
    uint64_t v9 = v29;
    int64_t v10 = v30;
    unint64_t v11 = v31;
    v24 = v7;
    if (v6) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v12 = 0;
LABEL_46:
    void *v24 = v4;
    v24[1] = v8;
    v24[2] = v9;
    v24[3] = v10;
    v24[4] = v11;
    return (void *)v12;
  }
  int64_t v10 = 0;
  uint64_t v20 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v8 = a4 + 56;
  uint64_t v9 = ~v20;
  uint64_t v21 = -v20;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  else {
    uint64_t v22 = -1;
  }
  unint64_t v11 = v22 & *(void *)(a4 + 56);
  v24 = result;
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v12 = 0;
    goto LABEL_46;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v12 = 0;
  int64_t v25 = (unint64_t)(v9 + 64) >> 6;
  uint64_t v23 = v9;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_2409551F8()) {
        goto LABEL_45;
      }
      sub_24083EDCC(0, (unint64_t *)&qword_26AFD0580);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v15 = v26;
      result = (void *)swift_unknownObjectRelease();
      if (!v26) {
        goto LABEL_45;
      }
      goto LABEL_8;
    }
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_7;
    }
    int64_t v16 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v16 >= v25)
    {
      unint64_t v11 = 0;
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v16);
    if (v17) {
      goto LABEL_23;
    }
    int64_t v18 = v10 + 2;
    if (v10 + 2 >= v25)
    {
      unint64_t v11 = 0;
      ++v10;
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v18);
    if (!v17)
    {
      if (v10 + 3 >= v25) {
        goto LABEL_42;
      }
      unint64_t v17 = *(void *)(v8 + 8 * (v10 + 3));
      if (v17)
      {
        int64_t v16 = v10 + 3;
        goto LABEL_23;
      }
      int64_t v18 = v10 + 4;
      if (v10 + 4 >= v25)
      {
        unint64_t v11 = 0;
        v10 += 3;
        goto LABEL_45;
      }
      unint64_t v17 = *(void *)(v8 + 8 * v18);
      if (!v17)
      {
        int64_t v16 = v10 + 5;
        if (v10 + 5 >= v25)
        {
LABEL_42:
          unint64_t v11 = 0;
          int64_t v10 = v18;
          goto LABEL_45;
        }
        unint64_t v17 = *(void *)(v8 + 8 * v16);
        if (!v17)
        {
          int64_t v19 = v10 + 6;
          while (v25 != v19)
          {
            unint64_t v17 = *(void *)(v8 + 8 * v19++);
            if (v17)
            {
              int64_t v16 = v19 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v11 = 0;
          int64_t v10 = v25 - 1;
          goto LABEL_45;
        }
        goto LABEL_23;
      }
    }
    int64_t v16 = v18;
LABEL_23:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v10 = v16;
LABEL_7:
    result = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    v15 = result;
    if (!result) {
      goto LABEL_45;
    }
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3)
    {
      uint64_t v12 = a3;
LABEL_45:
      uint64_t v9 = v23;
      goto LABEL_46;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

void sub_24081B29C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_24081B314()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24081B354()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24081B44C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24081E750;
  id v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_268C91E80 + dword_268C91E80);
  return v6(a1, v4);
}

uint64_t sub_24081B504(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_24082EBC0(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_24081B574(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_24082EC24(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_24081B5E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_24082EE7C(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_24081B654(uint64_t a1, uint64_t a2)
{
  sub_24082EC88(0, &qword_26AFCECB8, MEMORY[0x263F90210], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24081B6E8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_24082EBC0(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_24081B768(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_24082EC24(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_24081B7E8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_24082EE7C(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void *sub_24081B868(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_24083F4E0();
      int64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2408C52E4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24081B988@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v27 = sub_240951A28();
  uint64_t v23 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  char v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24081C07C(0, &qword_26AFCE248, (unint64_t *)&qword_26AFD0590, 0x263F0A670, MEMORY[0x263F08F88]);
  uint64_t v29 = v6;
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  v26 = (char *)&v21 - v7;
  sub_24083F564(0, &qword_26AFCDF90, MEMORY[0x263F8E040]);
  uint64_t v30 = v8;
  uint64_t v28 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  int64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = type metadata accessor for UDCSnippetGeneratorData(0);
  MEMORY[0x270FA5388](v11);
  unint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408304E8(a1, a1[3]);
  sub_240849564();
  sub_240955768();
  if (v2) {
    return sub_2408371B8((uint64_t)a1);
  }
  uint64_t v22 = v11;
  unint64_t v14 = v13;
  uint64_t v15 = v25;
  uint64_t v16 = v27;
  char v32 = 0;
  sub_240840808(&qword_26AFCE240);
  unint64_t v17 = v26;
  sub_2409554F8();
  int64_t v18 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  uint64_t v21 = (uint64_t)v14;
  v18(v14, v17, v29);
  char v31 = 1;
  sub_2408397B4(&qword_26AFCC688, MEMORY[0x263F07490]);
  sub_2409554F8();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v30);
  uint64_t v19 = v21;
  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v21 + *(int *)(v22 + 20), v5, v16);
  sub_24083D478(v19, v24, type metadata accessor for UDCSnippetGeneratorData);
  sub_2408371B8((uint64_t)a1);
  return sub_24083B0B4(v19, type metadata accessor for UDCSnippetGeneratorData);
}

void *sub_24081BDF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___accountStateChangeListener;
  uint64_t v3 = *(void **)(v0
                + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___accountStateChangeListener);
  uint64_t v4 = v3;
  if (v3 == (void *)1)
  {
    id v5 = objc_allocWithZone((Class)sub_240953018());
    uint64_t v4 = (void *)sub_240953008();
    uint64_t v6 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v4;
    id v7 = v4;
    sub_240848640(v6);
  }
  sub_24081BE90(v3);
  return v4;
}

id sub_24081BE90(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

uint64_t type metadata accessor for FeedItemContextChangeGenerator()
{
  return self;
}

uint64_t sub_24081BEC4(uint64_t a1, uint64_t a2)
{
  sub_24081C07C(0, &qword_26AFCE248, (unint64_t *)&qword_26AFD0590, 0x263F0A670, MEMORY[0x263F08F88]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_240951A28();
  id v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_24081BF98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24081C07C(0, &qword_26AFCE248, (unint64_t *)&qword_26AFD0590, 0x263F0A670, MEMORY[0x263F08F88]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_240951A28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

void sub_24081C07C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_24083EDCC(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_24081C0E4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  v105 = a3;
  uint64_t v5 = sub_2409522D8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  unint64_t v9 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v94 - v10;
  uint64_t v12 = sub_2409540C8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  v104 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_2409521B8();
  uint64_t v15 = MEMORY[0x270FA5388](v113);
  v109 = (char *)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  v106 = (char *)&v94 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  v115 = (char *)&v94 - v20;
  MEMORY[0x270FA5388](v19);
  unint64_t v23 = (unint64_t)&v94 - v22;
  uint64_t v24 = *a1;
  uint64_t v25 = *(void *)(*a1 + 16);
  if (!v25)
  {
    sub_24083FFEC(0, &qword_26AFCDFC0, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
    unint64_t v65 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v66 = swift_allocObject();
    *(_OWORD *)(v66 + 16) = xmmword_240956800;
    *(void *)(v66 + v65) = a2;
    (*(void (**)(void))(v6 + 104))();
    uint64_t *v105 = v66;
    return swift_bridgeObjectRetain();
  }
  uint64_t v103 = a2;
  uint64_t v97 = v13;
  uint64_t v98 = v12;
  v99 = v11;
  v95 = v9;
  uint64_t v100 = v6;
  uint64_t v101 = v5;
  uint64_t v27 = *(void (**)(char *, unint64_t, uint64_t))(v21 + 16);
  uint64_t v26 = v21 + 16;
  v111 = v27;
  unint64_t v96 = (*(unsigned __int8 *)(v26 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 64);
  uint64_t v28 = (void *)(v24 + v96);
  uint64_t v29 = *(void *)(v26 + 56);
  v107 = (void (**)(unint64_t, char *, uint64_t))(v26 + 24);
  v108 = (void (**)(unint64_t, char *, uint64_t))(v26 + 16);
  uint64_t v112 = v26;
  v110 = (void (**)(unint64_t, uint64_t))(v26 - 8);
  uint64_t v102 = v24;
  swift_bridgeObjectRetain();
  uint64_t v30 = MEMORY[0x263F8EE80];
  uint64_t v31 = v113;
  uint64_t v114 = v29;
  do
  {
    v34 = v111;
    v111((char *)v23, (unint64_t)v28, v31);
    uint64_t v32 = sub_240952188();
    uint64_t v36 = v35;
    v34(v115, v23, v31);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v117[0] = v30;
    v38 = (void *)v30;
    unint64_t v40 = sub_240931400(v32, v36);
    unint64_t v41 = *(void *)(v30 + 16);
    BOOL v42 = (v39 & 1) == 0;
    uint64_t v43 = v41 + v42;
    if (__OFADD__(v41, v42))
    {
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
    char v44 = v39;
    if (*(void *)(v30 + 24) >= v43)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        v38 = (void *)v117[0];
        if (v39) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_24093BA80();
        v38 = (void *)v117[0];
        if (v44) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_24093AD54(v43, isUniquelyReferenced_nonNull_native);
      unint64_t v45 = sub_240931400(v32, v36);
      if ((v44 & 1) != (v46 & 1))
      {
LABEL_62:
        uint64_t result = sub_240955678();
        __break(1u);
        return result;
      }
      unint64_t v40 = v45;
      v38 = (void *)v117[0];
      if (v44)
      {
LABEL_3:
        uint64_t v32 = v114;
        uint64_t v31 = v113;
        (*v107)(v38[7] + v40 * v114, v115, v113);
        goto LABEL_4;
      }
    }
    v38[(v40 >> 6) + 8] |= 1 << v40;
    v47 = (uint64_t *)(v38[6] + 16 * v40);
    uint64_t *v47 = v32;
    v47[1] = v36;
    uint64_t v32 = v114;
    uint64_t v31 = v113;
    (*v108)(v38[7] + v40 * v114, v115, v113);
    uint64_t v48 = v38[2];
    BOOL v49 = __OFADD__(v48, 1);
    unint64_t v41 = v48 + 1;
    if (v49) {
      goto LABEL_59;
    }
    v38[2] = v41;
    swift_bridgeObjectRetain();
LABEL_4:
    uint64_t v30 = v117[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v33 = *v110;
    (*v110)(v23, v31);
    uint64_t v28 = (void *)((char *)v28 + v32);
    --v25;
  }
  while (v25);
  swift_bridgeObjectRelease();
  v50 = *(char **)(v103 + 16);
  if (v50)
  {
    unint64_t v23 = v103 + v96;
    swift_bridgeObjectRetain();
    uint64_t v51 = MEMORY[0x263F8EE80];
    v52 = v106;
    uint64_t v25 = (uint64_t)v111;
    while (1)
    {
      v115 = v50;
      ((void (*)(char *, unint64_t, uint64_t))v25)(v52, v23, v31);
      uint64_t v28 = (void *)sub_240952188();
      uint64_t v32 = v54;
      ((void (*)(char *, char *, uint64_t))v25)(v109, v52, v31);
      uint64_t v36 = swift_isUniquelyReferenced_nonNull_native();
      v117[0] = v51;
      v38 = (void *)v51;
      unint64_t v55 = sub_240931400((uint64_t)v28, v32);
      uint64_t v57 = v51;
      unint64_t v40 = v55;
      unint64_t v41 = *(void *)(v57 + 16);
      BOOL v58 = (v56 & 1) == 0;
      uint64_t v59 = v41 + v58;
      if (__OFADD__(v41, v58)) {
        goto LABEL_58;
      }
      char v60 = v56;
      if (*(void *)(v57 + 24) >= v59)
      {
        if (v36)
        {
          v38 = (void *)v117[0];
          if ((v56 & 1) == 0) {
            goto LABEL_27;
          }
        }
        else
        {
          sub_24093BA80();
          v38 = (void *)v117[0];
          if ((v60 & 1) == 0) {
            goto LABEL_27;
          }
        }
      }
      else
      {
        sub_24093AD54(v59, v36);
        unint64_t v61 = sub_240931400((uint64_t)v28, v32);
        if ((v60 & 1) != (v62 & 1)) {
          goto LABEL_62;
        }
        unint64_t v40 = v61;
        v38 = (void *)v117[0];
        if ((v60 & 1) == 0)
        {
LABEL_27:
          v38[(v40 >> 6) + 8] |= 1 << v40;
          v63 = (void *)(v38[6] + 16 * v40);
          void *v63 = v28;
          v63[1] = v32;
          uint64_t v31 = v113;
          (*v108)(v38[7] + v40 * v114, v109, v113);
          uint64_t v64 = v38[2];
          BOOL v49 = __OFADD__(v64, 1);
          unint64_t v41 = v64 + 1;
          if (v49) {
            goto LABEL_60;
          }
          v38[2] = v41;
          swift_bridgeObjectRetain();
          uint64_t v53 = v114;
          goto LABEL_19;
        }
      }
      uint64_t v31 = v113;
      uint64_t v53 = v114;
      (*v107)(v38[7] + v40 * v114, v109, v113);
LABEL_19:
      uint64_t v51 = v117[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v52 = v106;
      v33((unint64_t)v106, v31);
      v23 += v53;
      v50 = v115 - 1;
      if (v115 == (char *)1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_36;
      }
    }
  }
  uint64_t v51 = MEMORY[0x263F8EE80];
LABEL_36:
  uint64_t v68 = sub_24093526C(v30);
  uint64_t v69 = swift_bridgeObjectRetain();
  uint64_t v70 = sub_24093526C(v69);
  swift_bridgeObjectRetain();
  uint64_t v36 = sub_240919344(v70, v68);
  v71 = v104;
  if (*(void *)(v36 + 16) <= *(void *)(v70 + 16) >> 3)
  {
    v117[0] = v70;
    swift_bridgeObjectRetain();
    sub_2409132E8(v36);
    uint64_t v25 = v117[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_24091677C(v36, v70);
  }
  v115 = (char *)v51;
  if (*(void *)(v36 + 16) <= *(void *)(v68 + 16) >> 3)
  {
    v117[0] = v68;
    swift_bridgeObjectRetain();
    sub_2409132E8(v36);
    uint64_t v72 = v117[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v72 = sub_24091677C(v36, v68);
  }
  sub_240954058();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v73 = sub_2409540B8();
  os_log_type_t v74 = sub_240954C38();
  int v75 = v74;
  if (os_log_type_enabled(v73, v74))
  {
    uint64_t v76 = swift_slowAlloc();
    uint64_t v114 = swift_slowAlloc();
    v117[0] = v114;
    *(_DWORD *)uint64_t v76 = 136316162;
    LODWORD(v113) = v75;
    swift_bridgeObjectRetain();
    uint64_t v77 = sub_240954B58();
    unint64_t v79 = v78;
    swift_bridgeObjectRelease();
    uint64_t v116 = sub_2408370E4(v77, v79, v117);
    sub_2409550B8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v76 + 12) = 2048;
    uint64_t v80 = *(void *)(v68 + 16);
    swift_bridgeObjectRelease();
    uint64_t v116 = v80;
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v76 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v81 = sub_240954B58();
    unint64_t v83 = v82;
    swift_release();
    uint64_t v116 = sub_2408370E4(v81, v83, v117);
    sub_2409550B8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v76 + 32) = 2048;
    uint64_t v84 = *(void *)(v25 + 16);
    swift_bridgeObjectRelease();
    uint64_t v116 = v84;
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v76 + 42) = 2048;
    uint64_t v85 = *(void *)(v72 + 16);
    swift_bridgeObjectRelease();
    uint64_t v116 = v85;
    sub_2409550B8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v73, (os_log_type_t)v113, "[SharableModelContextChangeGenerator] received %s new models, found %ld old models, %s of them intersects, %ld of them are new, %ld of them should be removed", (uint8_t *)v76, 0x34u);
    uint64_t v86 = v114;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v86, -1, -1);
    MEMORY[0x2456021C0](v76, -1, -1);

    (*(void (**)(char *, uint64_t))(v97 + 8))(v104, v98);
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v97 + 8))(v71, v98);
  }
  uint64_t v32 = (uint64_t)v105;
  uint64_t v30 = v100;
  uint64_t v31 = v101;
  uint64_t v28 = v99;
  if (*(void *)(v72 + 16))
  {
    v87 = sub_240873F5C(v72);
    swift_bridgeObjectRelease();
    *uint64_t v28 = v87;
    (*(void (**)(void *, void, uint64_t))(v30 + 104))(v28, *MEMORY[0x263F458A0], v31);
    unint64_t v40 = sub_2408C3628(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v23 = *(void *)(v40 + 16);
    unint64_t v41 = *(void *)(v40 + 24);
    v38 = (void *)(v23 + 1);
    if (v23 < v41 >> 1)
    {
LABEL_47:
      *(void *)(v40 + 16) = v38;
      (*(void (**)(unint64_t, void *, uint64_t))(v30 + 32))(v40+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(void *)(v30 + 72) * v23, v28, v31);
      goto LABEL_49;
    }
LABEL_61:
    unint64_t v40 = sub_2408C3628(v41 > 1, (int64_t)v38, 1, v40);
    goto LABEL_47;
  }
  swift_bridgeObjectRelease();
  unint64_t v40 = MEMORY[0x263F8EE78];
LABEL_49:
  uint64_t v88 = (uint64_t)v115;
  swift_bridgeObjectRetain();
  uint64_t v89 = sub_240919A0C(v36, v88);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v90 = sub_240919A0C(v25, v88);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v117[0] = v89;
  sub_2408FF3F8(v90);
  if (*(void *)(v117[0] + 16))
  {
    v91 = v95;
    void *v95 = v117[0];
    (*(void (**)(void *, void, uint64_t))(v30 + 104))(v91, *MEMORY[0x263F45880], v31);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v40 = sub_2408C3628(0, *(void *)(v40 + 16) + 1, 1, v40);
    }
    unint64_t v93 = *(void *)(v40 + 16);
    unint64_t v92 = *(void *)(v40 + 24);
    if (v93 >= v92 >> 1) {
      unint64_t v40 = sub_2408C3628(v92 > 1, v93 + 1, 1, v40);
    }
    *(void *)(v40 + 16) = v93 + 1;
    uint64_t result = (*(uint64_t (**)(unint64_t, void *, uint64_t))(v30 + 32))(v40+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(void *)(v30 + 72) * v93, v91, v31);
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
  }
  *(void *)uint64_t v32 = v40;
  return result;
}

uint64_t sub_24081CE4C(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = sub_2409551C8();
    if (v2) {
      goto LABEL_3;
    }
    return MEMORY[0x263F8EE78];
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
LABEL_3:
  if (v2 <= 0)
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    sub_240840634(0, (unint64_t *)&qword_26AFCF418, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
    uint64_t v3 = (void *)swift_allocObject();
    int64_t v4 = j__malloc_size(v3);
    uint64_t v5 = v4 - 32;
    if (v4 < 32) {
      uint64_t v5 = v4 - 25;
    }
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_24081AF90(&v8, v3 + 4, v2, a1);
  uint64_t result = sub_24084072C();
  if (v6 == (void *)v2) {
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

void *sub_24081CF6C()
{
  uint64_t v1 = v0;
  sub_2408408AC(0);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240845D24(0, &qword_26AFD0420, sub_2408408AC, (void (*)(void))sub_2408408E0);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v17 - v10;
  uint64_t v12 = OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___accountStateChangePublisher;
  uint64_t v13 = *(void *)(v0
                  + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___accountStateChangePublisher);
  uint64_t v14 = (void *)v13;
  if (v13 == 1)
  {
    uint64_t v14 = sub_24081BDF8();
    if (v14)
    {
      sub_240952FF8();

      sub_2408408E0();
      sub_2409544F8();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      sub_240845C9C();
      uint64_t v14 = (void *)sub_240954498();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    uint64_t v15 = *(void *)(v1 + v12);
    *(void *)(v1 + v12) = v14;
    swift_retain();
    sub_240841240(v15);
  }
  sub_240841230(v13);
  return v14;
}

void *sub_24081D1A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___healthRecordsSupportedListener;
  uint64_t v3 = *(void **)(v0
                + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___healthRecordsSupportedListener);
  uint64_t v4 = v3;
  if (v3 == (void *)1)
  {
    id v5 = objc_allocWithZone((Class)sub_2409524C8());
    uint64_t v4 = (void *)sub_2409524B8();
    uint64_t v6 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v4;
    id v7 = v4;
    sub_240848640(v6);
  }
  sub_24081BE90(v3);
  return v4;
}

uint64_t sub_24081D23C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v6 = v5;
  uint64_t v7 = *v5;
  sub_24083F6E0(0, a2, a3, a4, a5);
  uint64_t v8 = sub_240955258();
  uint64_t v9 = v8;
  if (*(void *)(v7 + 16))
  {
    v33 = v5;
    uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
    uint64_t v11 = (void *)(v7 + 56);
    if (v10 < 64) {
      uint64_t v12 = ~(-1 << v10);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v7 + 56);
    int64_t v14 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v15 = v8 + 56;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v13)
      {
        unint64_t v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v21 >= v14) {
          goto LABEL_33;
        }
        unint64_t v22 = v11[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v14) {
            goto LABEL_33;
          }
          unint64_t v22 = v11[v17];
          if (!v22)
          {
            int64_t v17 = v21 + 2;
            if (v21 + 2 >= v14) {
              goto LABEL_33;
            }
            unint64_t v22 = v11[v17];
            if (!v22)
            {
              int64_t v23 = v21 + 3;
              if (v23 >= v14)
              {
LABEL_33:
                swift_release();
                uint64_t v6 = v33;
                uint64_t v32 = 1 << *(unsigned char *)(v7 + 32);
                if (v32 > 63) {
                  bzero((void *)(v7 + 56), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v11 = -1 << v32;
                }
                *(void *)(v7 + 16) = 0;
                break;
              }
              unint64_t v22 = v11[v23];
              if (!v22)
              {
                while (1)
                {
                  int64_t v17 = v23 + 1;
                  if (__OFADD__(v23, 1)) {
                    goto LABEL_39;
                  }
                  if (v17 >= v14) {
                    goto LABEL_33;
                  }
                  unint64_t v22 = v11[v17];
                  ++v23;
                  if (v22) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v17 = v23;
            }
          }
        }
LABEL_23:
        unint64_t v13 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(v7 + 48) + 8 * v20);
      uint64_t result = sub_240954FB8();
      uint64_t v25 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v15 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v18 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v9 + 48) + 8 * v18) = v24;
      ++*(void *)(v9 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v6 = v9;
  return result;
}

void *sub_24081D4D8()
{
  uint64_t v1 = v0;
  sub_240840914(0);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240845D24(0, &qword_26AFD0410, sub_240840914, (void (*)(void))sub_240840948);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v17 - v10;
  uint64_t v12 = OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___healthRecordsSupportedPublisher;
  uint64_t v13 = *(void *)(v0
                  + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___healthRecordsSupportedPublisher);
  int64_t v14 = (void *)v13;
  if (v13 == 1)
  {
    int64_t v14 = sub_24081D1A4();
    if (v14)
    {
      sub_2409524A8();

      sub_240840948();
      sub_2409544F8();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      sub_240845D9C();
      int64_t v14 = (void *)sub_240954498();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    uint64_t v15 = *(void *)(v1 + v12);
    *(void *)(v1 + v12) = v14;
    swift_retain();
    sub_240841240(v15);
  }
  sub_240841230(v13);
  return v14;
}

uint64_t sub_24081D710@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for HealthRecordsHealthPluginDelegate();
  uint64_t result = swift_allocObject();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for HealthRecordsHealthPluginDelegate()
{
  return self;
}

void *sub_24081D768(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v19 = *v1;
  uint64_t v18 = sub_240951EF8();
  uint64_t v4 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_240951F18();
  uint64_t v7 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24083B4E8(a1, (uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords24ClinicalSharingGenerator_context);
  uint64_t v16 = sub_240951F68();
  sub_24082ECEC(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v10 = sub_240951C08();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_240956800;
  (*(void (**)(unint64_t, void, uint64_t))(v11 + 104))(v13 + v12, *MEMORY[0x263F454D8], v10);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F45688], v18);
  sub_240951F08();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))((uint64_t)v2 + OBJC_IVAR____TtC13HealthRecords24ClinicalSharingGenerator_domain, v9, v17);
  uint64_t v14 = sub_24082353C(a1);
  sub_24083B174(a1, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  *(void *)((char *)v2 + OBJC_IVAR____TtC13HealthRecords24ClinicalSharingGenerator_publisher) = v14;
  return v2;
}

void *sub_24081DA68(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v20 = *v2;
  uint64_t v21 = a2;
  uint64_t v19 = sub_240951EF8();
  uint64_t v5 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_240951F18();
  uint64_t v8 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24083B4E8(a1, (uint64_t)v2 + OBJC_IVAR____TtC13HealthRecords33AccountStatusSummaryTileGenerator_context);
  v17[1] = sub_240951F68();
  sub_24082EA94(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v11 = sub_240951C08();
  uint64_t v12 = *(void *)(v11 - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_240956800;
  (*(void (**)(unint64_t, void, uint64_t))(v12 + 104))(v14 + v13, *MEMORY[0x263F45548], v11);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F45688], v19);
  sub_240951F08();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))((uint64_t)v3 + OBJC_IVAR____TtC13HealthRecords33AccountStatusSummaryTileGenerator_domain, v10, v18);
  uint64_t v15 = sub_24082293C(a1, v21);
  sub_24083B3B4(a1);
  v3[2] = v15;
  return v3;
}

uint64_t sub_24081DD4C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  *(void *)(swift_allocObject() + 16) = a1;
  sub_240840D78();
  swift_allocObject();
  id v4 = a1;
  sub_2409543E8();
  sub_2408285B8(&qword_26AFCF320, (void (*)(uint64_t))sub_240840D78);
  uint64_t v5 = sub_240954498();
  uint64_t result = swift_release();
  *a2 = v5;
  return result;
}

void *sub_24081DE40(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v19 = *v1;
  uint64_t v18 = sub_240951EF8();
  uint64_t v4 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_240951F18();
  uint64_t v7 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24083D4E0(a1, (uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords29ConceptSharableModelGenerator_context, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  uint64_t v16 = sub_240951F68();
  sub_24082ED50(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v10 = sub_240951C08();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_240956800;
  (*(void (**)(unint64_t, void, uint64_t))(v11 + 104))(v13 + v12, *MEMORY[0x263F45520], v10);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F45690], v18);
  sub_240951F08();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))((uint64_t)v2 + OBJC_IVAR____TtC13HealthRecords29ConceptSharableModelGenerator_domain, v9, v17);
  uint64_t v14 = sub_24082CFBC(a1);
  sub_24083B1D4(a1, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  v2[2] = v14;
  return v2;
}

void *sub_24081E14C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v19 = *v1;
  uint64_t v18 = sub_240951EF8();
  uint64_t v4 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_240951F18();
  uint64_t v7 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24083B4E8(a1, (uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords26RemovedCategoriesGenerator_context);
  uint64_t v16 = sub_240951F68();
  sub_24082EC88(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v10 = sub_240951C08();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_240956800;
  (*(void (**)(unint64_t, void, uint64_t))(v11 + 104))(v13 + v12, *MEMORY[0x263F454C8], v10);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F45688], v18);
  sub_240951F08();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))((uint64_t)v2 + OBJC_IVAR____TtC13HealthRecords26RemovedCategoriesGenerator_domain, v9, v17);
  id v14 = sub_240826624(a1);
  sub_24083B114(a1, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  v2[2] = v14;
  return v2;
}

void *sub_24081E444(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v19 = *v1;
  uint64_t v18 = sub_240951EF8();
  uint64_t v4 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_240951F18();
  uint64_t v7 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24083D340(a1, (uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords19RecordKindGenerator_context, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  uint64_t v16 = sub_240951F68();
  sub_24082EAF8(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v10 = sub_240951C08();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_240956800;
  (*(void (**)(unint64_t, void, uint64_t))(v11 + 104))(v13 + v12, *MEMORY[0x263F45520], v10);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F45688], v18);
  sub_240951F08();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))((uint64_t)v2 + OBJC_IVAR____TtC13HealthRecords19RecordKindGenerator_domain, v9, v17);
  uint64_t v14 = sub_240822300(a1);
  sub_24083AFF4(a1, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  v2[2] = v14;
  return v2;
}

uint64_t sub_24081E750()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void sub_24081E844(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_24083F280;
  *(void *)(v7 + 24) = v6;
  v9[4] = sub_24083F97C;
  v9[5] = v7;
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 1107296256;
  v9[2] = sub_240840734;
  v9[3] = &unk_26F4F1228;
  uint64_t v8 = _Block_copy(v9);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_shouldShowHealthRecordsSectionWithCompletion_, v8);
  _Block_release(v8);
}

void *sub_24081E954(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v19 = *v1;
  uint64_t v18 = sub_240951EF8();
  uint64_t v4 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_240951F18();
  uint64_t v7 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24083B4E8(a1, (uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords19NewRecordsGenerator_context);
  uint64_t v16 = sub_240951F68();
  sub_24082EE7C(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v10 = sub_240951C08();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_240956800;
  (*(void (**)(unint64_t, void, uint64_t))(v11 + 104))(v13 + v12, *MEMORY[0x263F45548], v10);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F45688], v18);
  sub_240951F08();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))((uint64_t)v2 + OBJC_IVAR____TtC13HealthRecords19NewRecordsGenerator_domain, v9, v17);
  uint64_t v14 = sub_24082B4F4(a1);
  sub_24083B354(a1, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  v2[2] = v14;
  return v2;
}

void *sub_24081EC4C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v19 = *v1;
  uint64_t v18 = sub_240951EF8();
  uint64_t v4 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_240951F18();
  uint64_t v7 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24083B4E8(a1, (uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords23OnboardingTileGenerator_context);
  uint64_t v16 = sub_240951F68();
  sub_24082EE18(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v10 = sub_240951C08();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_240956800;
  (*(void (**)(unint64_t, void, uint64_t))(v11 + 104))(v13 + v12, *MEMORY[0x263F45580], v10);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F45688], v18);
  sub_240951F08();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))((uint64_t)v2 + OBJC_IVAR____TtC13HealthRecords23OnboardingTileGenerator_domain, v9, v17);
  uint64_t v14 = sub_24082A354(a1);
  sub_24083B3B4(a1);
  v2[2] = v14;
  return v2;
}

uint64_t sub_24081EF30(void *a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_240820D40(a1);
    return sub_240954468();
  }
  return result;
}

void *sub_24081EFDC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v19 = *v1;
  uint64_t v18 = sub_240951EF8();
  uint64_t v4 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_240951F18();
  uint64_t v7 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24083B4E8(a1, (uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords16LabTipsGenerator_context);
  uint64_t v16 = sub_240951F68();
  sub_24082EBC0(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v10 = sub_240951C08();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_240956800;
  (*(void (**)(unint64_t, void, uint64_t))(v11 + 104))(v13 + v12, *MEMORY[0x263F45520], v10);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F45688], v18);
  sub_240951F08();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))((uint64_t)v2 + OBJC_IVAR____TtC13HealthRecords16LabTipsGenerator_domain, v9, v17);
  uint64_t v14 = sub_24083D62C(a1);
  sub_24083B3B4(a1);
  v2[2] = v14;
  return v2;
}

void *sub_24081F2C0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v21 = *v1;
  uint64_t v20 = sub_240951EF8();
  uint64_t v4 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_240951F18();
  uint64_t v7 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (char *)v1 + OBJC_IVAR____TtC13HealthRecords45ClinicalNotificationSettingsGeneratorPipeline_context;
  uint64_t v11 = sub_240951FB8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v10, a1, v11);
  uint64_t v18 = sub_240951F68();
  sub_24082EDB4(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v12 = sub_240951C08();
  uint64_t v13 = *(void *)(v12 - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_240956800;
  (*(void (**)(unint64_t, void, uint64_t))(v13 + 104))(v15 + v14, *MEMORY[0x263F45570], v12);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F45688], v20);
  sub_240951F08();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))((uint64_t)v2 + OBJC_IVAR____TtC13HealthRecords45ClinicalNotificationSettingsGeneratorPipeline_domain, v9, v19);
  uint64_t v16 = sub_240820D4C(a1);
  sub_24083B234(a1, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  *(void *)((char *)v2 + OBJC_IVAR____TtC13HealthRecords45ClinicalNotificationSettingsGeneratorPipeline_publisher) = v16;
  return v2;
}

uint64_t sub_24081F5F4()
{
  uint64_t v2 = *(void *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_24081E750;
  uint64_t v5 = (void *)swift_task_alloc();
  v4[2] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_24083F1F4;
  return sub_24082122C(v3);
}

void sub_24081F714(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = sub_24083F2C0;
  v7[3] = v6;
  v7[4] = a3;
  v10[4] = sub_240848BE0;
  v10[5] = v7;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  v10[2] = sub_24081B29C;
  v10[3] = &unk_26F4F24B0;
  uint64_t v8 = _Block_copy(v10);
  swift_retain();
  id v9 = a3;
  swift_release();
  objc_msgSend(v9, sel_fetchSharingEntriesWithCompletion_, v8);
  _Block_release(v8);
}

uint64_t sub_24081F830()
{
  uint64_t v1 = sub_2409540C8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24081BDF8();
  if (v5)
  {
    uint64_t v6 = v5;
    objc_msgSend(*(id *)(v0+ OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline_context+ *(int *)(type metadata accessor for HealthRecordsGeneratorContext() + 20)), sel_addAccountStateChangeListener_, v5);
    uint64_t v7 = swift_allocObject();
    swift_weakInit();
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v7;
    *(void *)(v8 + 24) = v6;
    sub_240952A58();
    swift_allocObject();
    return sub_240952A38();
  }
  else
  {
    sub_240954078();
    uint64_t v10 = sub_2409540B8();
    os_log_type_t v11 = sub_240954C38();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_240818000, v10, v11, "accountStateChangeListener was nil", v12, 2u);
      MEMORY[0x2456021C0](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return 0;
  }
}

uint64_t sub_24081FA20()
{
  uint64_t v1 = v0;
  objc_msgSend(*(id *)(v0+ OBJC_IVAR____TtC13HealthRecords27AddAccountGeneratorPipeline_context+ *(int *)(type metadata accessor for HealthRecordsGeneratorContext() + 20)), sel_addAccountStateChangeListener_, *(void *)(v0 + OBJC_IVAR____TtC13HealthRecords27AddAccountGeneratorPipeline_accountStateChangeListener));
  sub_240951F38();
  uint64_t v2 = v7;
  uint64_t v3 = v8;
  sub_2408304E8(v6, v7);
  id v4 = sub_24083CA3C(v2, v3);
  objc_msgSend(v4, sel_addHealthRecordsSupportedChangeListener_, *(void *)(v1 + OBJC_IVAR____TtC13HealthRecords27AddAccountGeneratorPipeline_healthRecordsSupportedListener));

  sub_2408371B8((uint64_t)v6);
  swift_allocObject();
  swift_weakInit();
  sub_240952A58();
  swift_allocObject();
  return sub_240952A38();
}

uint64_t sub_24081FB38(void *a1)
{
  sub_24083C944(0, &qword_26AFD04D8, (uint64_t (*)(uint64_t))sub_24083F24C, MEMORY[0x263EFDE58]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v13 - v6;
  uint64_t v8 = v1
     + OBJC_IVAR____TtC13HealthRecordsP33_58E67717502C03A3033511F5D7C86B9726IngestNotificationObserver__ingestUpdate;
  uint64_t v13 = 0;
  char v14 = -1;
  sub_24083F24C(0);
  sub_240954438();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v8, v7, v4);
  *(void *)(v1
            + OBJC_IVAR____TtC13HealthRecordsP33_58E67717502C03A3033511F5D7C86B9726IngestNotificationObserver_observerToken) = 0;
  *(void *)(v1 + 16) = a1;
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  id v10 = a1;
  swift_retain();
  uint64_t v11 = sub_24082761C((uint64_t)sub_240849188, v9);

  swift_release_n();
  *(void *)(v1
            + OBJC_IVAR____TtC13HealthRecordsP33_58E67717502C03A3033511F5D7C86B9726IngestNotificationObserver_observerToken) = v11;
  swift_release();
  return v1;
}

void sub_24081FCE8(char a1, void *a2, void (*a3)(void *, uint64_t), uint64_t a4, void *a5)
{
  uint64_t v35 = sub_240951A98();
  uint64_t v10 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 && (a1 & 1) == 0)
  {
    id v13 = a2;
    a3(a2, 1);
  }
  id v14 = objc_msgSend(a5, sel_sharingEntries);
  sub_24083EDCC(0, &qword_26AFCDF10);
  unint64_t v15 = sub_240954998();

  uint64_t v16 = MEMORY[0x263F8EE78];
  uint64_t v36 = MEMORY[0x263F8EE78];
  if (!(v15 >> 62))
  {
    uint64_t v17 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v33 = a3;
    uint64_t v34 = a4;
    if (v17) {
      goto LABEL_6;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    uint64_t v22 = MEMORY[0x263F8EE78];
    if ((MEMORY[0x263F8EE78] & 0x8000000000000000) != 0) {
      goto LABEL_31;
    }
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_2409553D8();
  swift_bridgeObjectRelease();
  v33 = a3;
  uint64_t v34 = a4;
  if (!v17) {
    goto LABEL_21;
  }
LABEL_6:
  if (v17 < 1)
  {
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v32 = v10;
  uint64_t v18 = 0;
  uint64_t v19 = &off_2650D8000;
  do
  {
    if ((v15 & 0xC000000000000001) != 0) {
      id v20 = (id)MEMORY[0x2456015B0](v18, v15);
    }
    else {
      id v20 = *(id *)(v15 + 8 * v18 + 32);
    }
    uint64_t v21 = v20;
    if ([v20 (SEL)v19[450]]
      || objc_msgSend(v21, sel_direction)
      || objc_msgSend(v21, sel_status) != (id)1 && objc_msgSend(v21, sel_status))
    {
    }
    else
    {
      sub_2409552F8();
      sub_240955328();
      sub_240955338();
      sub_240955308();
      uint64_t v19 = &off_2650D8000;
    }
    ++v18;
  }
  while (v17 != v18);
  swift_bridgeObjectRelease();
  uint64_t v22 = v36;
  uint64_t v10 = v32;
  uint64_t v16 = MEMORY[0x263F8EE78];
  if (v36 < 0) {
    goto LABEL_31;
  }
LABEL_22:
  if ((v22 & 0x4000000000000000) == 0)
  {
    uint64_t v23 = *(void *)(v22 + 16);
    if (!v23)
    {
LABEL_32:
      swift_release();
      BOOL v30 = (void *)MEMORY[0x263F8EE78];
LABEL_33:
      v33(v30, 0);
      swift_bridgeObjectRelease();
      return;
    }
    goto LABEL_24;
  }
LABEL_31:
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_2409553D8();
  swift_release();
  if (!v23) {
    goto LABEL_32;
  }
LABEL_24:
  uint64_t v36 = v16;
  sub_240955318();
  if ((v23 & 0x8000000000000000) == 0)
  {
    uint64_t v24 = 0;
    do
    {
      if ((v22 & 0xC000000000000001) != 0) {
        id v25 = (id)MEMORY[0x2456015B0](v24, v22);
      }
      else {
        id v25 = *(id *)(v22 + 8 * v24 + 32);
      }
      unint64_t v26 = v25;
      ++v24;
      id v27 = objc_msgSend(v25, sel_UUID);
      sub_240951A78();

      id v28 = objc_allocWithZone(MEMORY[0x263F0A740]);
      unint64_t v29 = (void *)sub_240951A58();
      objc_msgSend(v28, sel_initForInvitationUUID_, v29);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v35);
      sub_2409552F8();
      sub_240955328();
      sub_240955338();
      sub_240955308();
    }
    while (v23 != v24);
    BOOL v30 = (void *)v36;
    swift_release();
    goto LABEL_33;
  }
LABEL_35:
  __break(1u);
}

uint64_t sub_2408200F8(uint64_t a1)
{
  uint64_t v19 = a1;
  sub_240846204();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v20 = v2;
  uint64_t v21 = v3;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240952318();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240846128();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408304E8((void *)(v1 + 16), *(void *)(v1 + 40));
  sub_240952308();
  uint64_t v15 = sub_240952218();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v22 = v15;
  *(void *)(swift_allocObject() + 16) = v19;
  sub_240841958();
  sub_24083FFEC(0, &qword_26AFCDE80, MEMORY[0x263F458B0], MEMORY[0x263F8D488]);
  sub_2408204C0(&qword_26AFCDCA0, (void (*)(uint64_t))sub_240841958);
  swift_bridgeObjectRetain();
  sub_2409544F8();
  swift_release();
  swift_release();
  sub_24083F3C0();
  sub_2408204C0(&qword_26AFCDA20, (void (*)(uint64_t))sub_240846128);
  sub_2409545B8();
  sub_2408204C0(&qword_26AFCDA00, (void (*)(uint64_t))sub_240846204);
  uint64_t v16 = v20;
  uint64_t v17 = sub_240954498();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v16);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v17;
}

uint64_t sub_2408204C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240820508()
{
  unint64_t v0 = sub_240953FD8();
  unint64_t v1 = sub_240953FB8();
  unint64_t v2 = v1;
  unint64_t v3 = MEMORY[0x263F8EE78];
  unint64_t v21 = MEMORY[0x263F8EE78];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_2409553D8();
    uint64_t v4 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    unint64_t v9 = MEMORY[0x263F8EE78];
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_16;
  }
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_55;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v7 = (id)MEMORY[0x2456015B0](i, v2);
    }
    else {
      id v7 = *(id *)(v2 + 8 * i + 32);
    }
    uint64_t v8 = v7;
    self;
    if (swift_dynamicCastObjCClass())
    {
      MEMORY[0x245600C60]();
      if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_240954A08();
      }
      sub_240954A28();
      sub_2409549B8();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v9 = v21;
LABEL_17:
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v22 = v3;
  if (!(v9 >> 62))
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10) {
      goto LABEL_19;
    }
LABEL_31:
    swift_bridgeObjectRelease();
    unint64_t v14 = MEMORY[0x263F8EE78];
    if ((MEMORY[0x263F8EE78] & 0x8000000000000000) != 0) {
      goto LABEL_51;
    }
    goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_2409553D8();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v10) {
    goto LABEL_31;
  }
LABEL_19:
  if (v10 < 1)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  for (uint64_t j = 0; j != v10; ++j)
  {
    if ((v9 & 0xC000000000000001) != 0) {
      id v12 = (id)MEMORY[0x2456015B0](j, v9);
    }
    else {
      id v12 = *(id *)(v9 + 8 * j + 32);
    }
    uint64_t v13 = v12;
    if (objc_msgSend(v12, sel_isLowUtility))
    {
    }
    else
    {
      sub_2409552F8();
      sub_240955328();
      sub_240955338();
      sub_240955308();
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v14 = v3;
  unint64_t v3 = MEMORY[0x263F8EE78];
  if ((v22 & 0x8000000000000000) != 0) {
    goto LABEL_51;
  }
LABEL_32:
  if ((v14 & 0x4000000000000000) == 0)
  {
    swift_bridgeObjectRetain();
    sub_240955628();
    sub_24083EDCC(0, (unint64_t *)&unk_26AFCF3B8);
    unint64_t v15 = v14;
    goto LABEL_34;
  }
LABEL_51:
  sub_24083EDCC(0, (unint64_t *)&unk_26AFCF3B8);
  swift_bridgeObjectRetain();
  unint64_t v15 = sub_2409553C8();
  swift_release();
LABEL_34:
  swift_release();
  sub_240827D68(v0, (uint64_t (*)(uint64_t, void, unint64_t))sub_2408400B8);
  unint64_t v16 = v15;
  if (!(v15 >> 62))
  {
    uint64_t v17 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v17) {
      goto LABEL_36;
    }
LABEL_53:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v3;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_2409553D8();
  uint64_t v17 = result;
  if (!result) {
    goto LABEL_53;
  }
LABEL_36:
  if (v17 >= 1)
  {
    if ((v16 & 0xC000000000000001) != 0)
    {
      for (uint64_t k = 0; k != v17; ++k)
      {
        MEMORY[0x2456015B0](k, v16);
        self;
        if (swift_dynamicCastObjCClass())
        {
          MEMORY[0x245600C60]();
          if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_240954A08();
          }
          sub_240954A28();
          sub_2409549B8();
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
    }
    else
    {
      for (uint64_t m = 0; m != v17; ++m)
      {
        uint64_t v20 = *(void **)(v16 + 8 * m + 32);
        self;
        if (swift_dynamicCastObjCClass())
        {
          MEMORY[0x245600C60](v20);
          if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_240954A08();
          }
          sub_240954A28();
          sub_2409549B8();
        }
      }
    }
    goto LABEL_53;
  }
LABEL_56:
  __break(1u);
  return result;
}

uint64_t sub_2408209D0()
{
  sub_240951F38();
  sub_2408304E8(v5, v5[3]);
  unint64_t v0 = (void *)sub_240951E98();
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A7F8]), sel_initWithHealthStore_, v0);

  sub_2408371B8((uint64_t)v5);
  *(void *)(swift_allocObject() + 16) = v1;
  sub_240840DE0();
  swift_allocObject();
  id v2 = v1;
  v5[0] = sub_2409543E8();
  sub_24082EEE0(&qword_26AFCDE10, (void (*)(uint64_t))sub_240840DE0);
  uint64_t v3 = sub_240954498();
  swift_release();

  return v3;
}

unint64_t sub_240820B20()
{
  uint64_t v0 = sub_240951A98();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (void *)sub_240951F68();
  uint64_t v5 = (void *)sub_240951C68();

  if (v5)
  {
    id v6 = objc_msgSend(v5, sel_identifier);

    sub_240951A78();
    sub_240951A48();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  unint64_t v8 = 0;
  unint64_t v9 = 0xE000000000000000;
  sub_2409552A8();
  swift_bridgeObjectRelease();
  unint64_t v8 = 0xD000000000000025;
  unint64_t v9 = 0x800000024095E7D0;
  sub_2409548A8();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_240820CA8(void *a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_240820D40(a1);
    sub_240954338();
    return swift_release();
  }
  return result;
}

id sub_240820D40(id a1)
{
  return a1;
}

uint64_t sub_240820D4C(uint64_t a1)
{
  uint64_t v28 = a1;
  uint64_t v33 = sub_240951FB8();
  uint64_t v1 = *(void *)(v33 - 8);
  uint64_t v2 = *(void *)(v1 + 64);
  MEMORY[0x270FA5388](v33);
  uint64_t v32 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240840C0C();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240845F70();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v35 = v8;
  uint64_t v36 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = sub_240820B20();
  unint64_t v30 = v13;
  unint64_t v31 = v12;
  sub_240951F38();
  sub_2408304E8(v37, v37[3]);
  unint64_t v14 = (void *)sub_240951E98();
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F45C78]), sel_initWithHealthStore_, v14);

  sub_2408371B8((uint64_t)v37);
  *(void *)(swift_allocObject() + 16) = v15;
  sub_240841404(0);
  sub_2408211E4(&qword_26AFCF2B8, sub_240841404);
  id v29 = v15;
  sub_240954418();
  sub_2408211E4((unint64_t *)&qword_26AFCF340, (void (*)(uint64_t))sub_240840C0C);
  uint64_t v16 = sub_240954498();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v37[0] = v16;
  uint64_t v18 = v32;
  uint64_t v17 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v32, v28, v33);
  unint64_t v19 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v20 = (v2 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v21 + v19, v18, v17);
  unint64_t v22 = (unint64_t *)(v21 + v20);
  unint64_t v23 = v30;
  *unint64_t v22 = v31;
  v22[1] = v23;
  *(void *)(v21 + ((v20 + 23) & 0xFFFFFFFFFFFFFFF8)) = v34;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_24090DD28;
  *(void *)(v24 + 24) = v21;
  sub_2408484BC(0, (unint64_t *)&qword_26AFD03C8);
  sub_2409544F8();
  swift_release();
  swift_release();
  sub_2408211E4(&qword_26AFCEF08, (void (*)(uint64_t))sub_240845F70);
  uint64_t v25 = v35;
  uint64_t v26 = sub_240954498();

  (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v25);
  return v26;
}

uint64_t sub_2408211E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24082122C(uint64_t a1)
{
  uint64_t v3 = *v1;
  v2[31] = a1;
  v2[32] = v3;
  type metadata accessor for HealthRecordsGeneratorContext();
  v2[33] = swift_task_alloc();
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  uint64_t v4 = sub_2409540C8();
  v2[36] = v4;
  v2[37] = *(void *)(v4 - 8);
  v2[38] = swift_task_alloc();
  v2[39] = swift_task_alloc();
  v2[40] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_240836CF4, 0, 0);
}

uint64_t sub_240821374@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_2409540C8();
  v29[3] = *(void *)(v2 - 8);
  v29[4] = v2;
  MEMORY[0x270FA5388](v2);
  v29[2] = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240838530(0, &qword_26AFCD968, MEMORY[0x263F455C8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v31 = (char *)v29 - v5;
  uint64_t v6 = sub_2409525A8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_240951A98();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = (void *)sub_240951F68();
  id v15 = (void *)sub_240951C68();

  if (v15)
  {
    uint64_t v30 = a1;
    id v16 = objc_msgSend(v15, sel_identifier);

    sub_240951A78();
    sub_240951A48();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    sub_240951F38();
    uint64_t v32 = 0;
    unint64_t v33 = 0xE000000000000000;
    sub_2409548A8();
    swift_bridgeObjectRelease();
    sub_2409548A8();
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F45EA8], v6);
    sub_240955348();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_2408304E8(v34, v34[3]);
    uint64_t v17 = (uint64_t)v31;
    sub_240951EA8();
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_240951C58();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
    {
      sub_240849428(v17, &qword_26AFCD968, MEMORY[0x263F455C8]);
      uint64_t v20 = v30;
    }
    else
    {
      uint64_t v24 = sub_240951C48();
      unint64_t v26 = v25;
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
      uint64_t v20 = v30;
      if (v26 >> 60 != 15)
      {
        sub_240951798();
        swift_allocObject();
        sub_240951788();
        uint64_t v28 = type metadata accessor for UDCSnippetGeneratorData(0);
        sub_24083971C(&qword_26AFCCDA0, (void (*)(uint64_t))type metadata accessor for UDCSnippetGeneratorData);
        sub_240951778();
        sub_240849C34(v24, v26);
        swift_release();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v20, 0, 1, v28);
        return sub_2408371B8((uint64_t)v34);
      }
    }
    uint64_t v27 = type metadata accessor for UDCSnippetGeneratorData(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v20, 1, 1, v27);
    return sub_2408371B8((uint64_t)v34);
  }
  uint64_t v21 = type metadata accessor for UDCSnippetGeneratorData(0);
  unint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);

  return v22(a1, 1, 1, v21);
}

uint64_t sub_240821B54(uint64_t a1)
{
  uint64_t v33 = *v1;
  uint64_t v3 = sub_2409540C8();
  uint64_t v34 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v35 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_240951FB8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t v10 = v9 - 8;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  unint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  id v15 = (char *)&v32 - v14;
  id v16 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v16(v8, a1, v5);
  v16(v13, (uint64_t)v8, v5);
  sub_240951F38();
  sub_2408304E8(v37, v37[3]);
  uint64_t v17 = (void *)sub_240951E98();
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F45C78]), sel_initWithHealthStore_, v17);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_2408371B8((uint64_t)v37);
  *(void *)&v13[*(int *)(v10 + 28)] = v18;
  sub_24083B484((uint64_t)v13, (uint64_t)v15);
  uint64_t v19 = (void *)sub_240951F68();
  uint64_t v20 = (void *)sub_240951C98();
  LOBYTE(v5) = sub_240951C88();

  if (v5)
  {
    uint64_t v21 = v33;
    sub_240954098();
    unint64_t v22 = sub_2409540B8();
    os_log_type_t v23 = sub_240954C38();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v36 = v25;
      v37[0] = v21;
      *(_DWORD *)uint64_t v24 = 136315138;
      swift_getMetatypeMetadata();
      uint64_t v26 = sub_2409547E8();
      v37[0] = sub_2408370E4(v26, v27, &v36);
      sub_2409550B8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240818000, v22, v23, "[%s]: Returning CHI sharable model pipeline for primary profile", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v25, -1, -1);
      MEMORY[0x2456021C0](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v3);
    sub_24083F488();
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_240956800;
    sub_24083B4E8((uint64_t)v15, (uint64_t)v13);
    uint64_t v29 = type metadata accessor for ConceptSharableModelPipeline();
    swift_allocObject();
    uint64_t v30 = sub_240831170((uint64_t)v13);
    *(void *)(v28 + 56) = v29;
    *(void *)(v28 + 64) = sub_240848D90();
    *(void *)(v28 + 32) = v30;
  }
  else
  {
    uint64_t v28 = MEMORY[0x263F8EE78];
  }
  sub_24083B3B4((uint64_t)v15);
  return v28;
}

unint64_t sub_240821FB4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  uint64_t v11 = sub_2409540C8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  unint64_t result = sub_2408402FC(v15, (void (*)(void **))sub_2408FFA2C, (uint64_t)v35);
  if (!v5)
  {
    unint64_t v17 = result;
    sub_240954058();
    swift_bridgeObjectRetain_n();
    id v18 = sub_2409540B8();
    os_log_type_t v19 = sub_240954C38();
    int v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v21 = swift_slowAlloc();
      int v32 = v20;
      uint64_t v22 = v21;
      uint64_t v31 = swift_slowAlloc();
      uint64_t v40 = v31;
      *(_DWORD *)uint64_t v22 = 136446466;
      uint64_t v34 = a5;
      uint64_t v39 = a4;
      swift_getMetatypeMetadata();
      uint64_t v33 = v12;
      uint64_t v23 = sub_2409547E8();
      uint64_t v39 = sub_2408370E4(v23, v24, &v40);
      sub_2409550B8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2082;
      v30[1] = v22 + 14;
      uint64_t v39 = v17;
      sub_240840050(0);
      swift_bridgeObjectRetain_n();
      sub_240955658();
      id v25 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_240955138();
      swift_unknownObjectRelease();
      uint64_t v26 = sub_240954808();
      unint64_t v28 = v27;
      swift_bridgeObjectRelease();
      uint64_t v39 = sub_2408370E4(v26, v28, &v40);
      sub_2409550B8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240818000, v18, (os_log_type_t)v32, "[%{public}s]: Sharable models generated: %{public}s", (uint8_t *)v22, 0x16u);
      uint64_t v29 = v31;
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v29, -1, -1);
      MEMORY[0x2456021C0](v22, -1, -1);

      unint64_t result = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v14, v11);
      *uint64_t v34 = v17;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      unint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      *a5 = v17;
    }
  }
  return result;
}

uint64_t sub_240822300(uint64_t a1)
{
  uint64_t v2 = sub_240951FB8();
  uint64_t v46 = *(void *)(v2 - 8);
  uint64_t v47 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v43 = v3;
  char v44 = (char *)v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240840AE4();
  uint64_t v45 = v4;
  uint64_t v50 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  BOOL v49 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240951A98();
  uint64_t v39 = *(void *)(v6 - 8);
  uint64_t v40 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2409525A8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240951F38();
  sub_2408304E8(&v54, v55);
  sub_240951E98();
  sub_240952E38();
  swift_allocObject();
  uint64_t v42 = sub_240952E28();
  sub_2408371B8((uint64_t)&v54);
  sub_2409517C8();
  swift_allocObject();
  uint64_t v51 = sub_2409517B8();
  sub_240951F38();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F45E70], v9);
  uint64_t v41 = a1;
  uint64_t v13 = (void *)sub_240951F68();
  uint64_t v14 = (void *)sub_240951C68();
  uint64_t v15 = sub_240952588();
  if (v14)
  {
    uint64_t v52 = 0x656C69666F72505BLL;
    unint64_t v53 = 0xE90000000000003ALL;
    v37[1] = v15;
    id v16 = v14;
    uint64_t v38 = v10;
    id v17 = v16;
    id v18 = objc_msgSend(v16, sel_identifier);
    sub_240951A78();

    sub_240951A48();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v8, v40);
    sub_2409548A8();
    swift_bridgeObjectRelease();
    sub_2409548A8();

    uint64_t v10 = v38;
    unint64_t v19 = v52;
    unint64_t v20 = v53;
  }
  else
  {
    unint64_t v20 = 0x800000024095C1A0;
    unint64_t v19 = 0xD000000000000013;
  }
  uint64_t v52 = v19;
  unint64_t v53 = v20;
  sub_2409548A8();

  swift_bridgeObjectRelease();
  uint64_t v21 = v52;
  unint64_t v22 = v53;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  type metadata accessor for FeedItemContextChangeGenerator();
  uint64_t v23 = swift_allocObject();
  sub_24083AB20(&v54, v23 + 16);
  *(void *)(v23 + 56) = v21;
  *(void *)(v23 + 64) = v22;
  uint64_t v25 = v46;
  uint64_t v24 = v47;
  uint64_t v26 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v44, v41, v47);
  unint64_t v27 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  unint64_t v28 = (v43 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = (v28 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = v51;
  *(void *)(v30 + 16) = v42;
  *(void *)(v30 + 24) = v31;
  (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v30 + v27, v26, v24);
  *(void *)(v30 + v28) = v23;
  uint64_t v32 = v48;
  *(void *)(v30 + v29) = v48;
  *(void *)(v30 + ((v29 + 15) & 0xFFFFFFFFFFFFFFF8)) = v32;
  sub_240840E8C();
  sub_2408228F4(&qword_26AFD0488, (void (*)(uint64_t))sub_240840E8C);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v33 = v49;
  sub_240954418();
  sub_2408228F4(&qword_26AFD0498, (void (*)(uint64_t))sub_240840AE4);
  uint64_t v34 = v45;
  uint64_t v35 = sub_240954498();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v33, v34);
  return v35;
}

uint64_t sub_2408228F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24082293C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v58 = a2;
  uint64_t v80 = a1;
  uint64_t v4 = type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v79 = v6;
  uint64_t v77 = (uint64_t)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240843168();
  uint64_t v64 = v7;
  uint64_t v62 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  char v60 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24084342C();
  uint64_t v63 = v9;
  uint64_t v61 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v59 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408439F4();
  uint64_t v66 = *(void *)(v11 - 8);
  uint64_t v67 = v11;
  MEMORY[0x270FA5388](v11);
  unint64_t v65 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240845780();
  uint64_t v69 = *(void *)(v13 - 8);
  uint64_t v70 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v68 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240843F5C();
  uint64_t v75 = v15;
  uint64_t v73 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  v71 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240844BB8();
  uint64_t v76 = v17;
  uint64_t v74 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v72 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_2409540C8();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  unint64_t v22 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954098();
  uint64_t v23 = sub_2409540B8();
  os_log_type_t v24 = sub_240954C38();
  BOOL v25 = os_log_type_enabled(v23, v24);
  uint64_t v78 = v3;
  if (v25)
  {
    uint64_t v57 = v4;
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v82 = v27;
    uint64_t v56 = v19;
    *(_DWORD *)uint64_t v26 = 136315138;
    uint64_t v28 = sub_2409557A8();
    uint64_t v81 = sub_2408370E4(v28, v29, &v82);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v23, v24, "%s Account status generator - make publisher ", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v27, -1, -1);
    MEMORY[0x2456021C0](v26, -1, -1);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v56);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  }
  uint64_t v30 = v80;
  uint64_t v82 = sub_240828198();
  sub_2409542E8();
  sub_2408416E0();
  sub_240842360();
  uint64_t v57 = MEMORY[0x263EFDCF8];
  sub_2408234F4(&qword_26AFCE218, (void (*)(uint64_t))sub_2408416E0);
  sub_2408234F4(&qword_26AFCE208, (void (*)(uint64_t))sub_240842360);
  uint64_t v31 = v60;
  sub_240954568();
  swift_release();
  uint64_t v32 = v77;
  sub_24083B4E8(v30, v77);
  uint64_t v33 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v56 = ((v33 + 24) & ~v33) + v79;
  uint64_t v55 = (v33 + 24) & ~v33;
  uint64_t v54 = v33 | 7;
  unint64_t v34 = (v56 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v58;
  sub_24083B484(v32, v35 + ((v33 + 24) & ~v33));
  *(void *)(v35 + v34) = v78;
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = sub_24087EA70;
  *(void *)(v36 + 24) = v35;
  swift_retain();
  sub_2409542E8();
  sub_240951E78();
  sub_240847880();
  sub_2408234F4(&qword_26AFCE1F8, (void (*)(uint64_t))sub_240843168);
  sub_2408234F4(&qword_26AFCED50, (void (*)(uint64_t))sub_240847880);
  uint64_t v37 = v59;
  uint64_t v38 = v64;
  sub_240954578();
  swift_release();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v31, v38);
  sub_2408234F4(&qword_26AFCE1E8, (void (*)(uint64_t))sub_24084342C);
  uint64_t v39 = v65;
  uint64_t v40 = v63;
  sub_240954558();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v37, v40);
  uint64_t v41 = v80;
  sub_24083B4E8(v80, v32);
  uint64_t v42 = swift_allocObject();
  uint64_t v43 = v78;
  *(void *)(v42 + 16) = v78;
  sub_24083B484(v32, v42 + v55);
  sub_24082EA94(0, &qword_26AFCC600, MEMORY[0x263F45630], MEMORY[0x263F8D488]);
  sub_2408234F4(&qword_26AFCE1D8, (void (*)(uint64_t))sub_2408439F4);
  uint64_t v44 = v67;
  uint64_t v45 = v68;
  sub_2409544F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v39, v44);
  sub_24083B4E8(v41, v32);
  uint64_t v46 = swift_allocObject();
  sub_24083B484(v32, v46 + ((v33 + 16) & ~v33));
  sub_24083FF48(0, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
  uint64_t v47 = v70;
  uint64_t v48 = v71;
  sub_2409541B8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v45, v47);
  *(void *)(swift_allocObject() + 16) = v43;
  sub_2408418D4();
  sub_2408234F4(&qword_26AFCE1C8, (void (*)(uint64_t))sub_240843F5C);
  sub_2408234F4(&qword_26AFCDCC0, (void (*)(uint64_t))sub_2408418D4);
  BOOL v49 = v72;
  uint64_t v50 = v75;
  sub_240954508();
  swift_release();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v48, v50);
  sub_2408234F4(&qword_26AFCE1B8, (void (*)(uint64_t))sub_240844BB8);
  uint64_t v51 = v76;
  uint64_t v52 = sub_240954498();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v49, v51);
  return v52;
}

uint64_t sub_2408234F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24082353C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t v85 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v86 = v5;
  uint64_t v6 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24082ECEC(0, &qword_26AFD05B0, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v66 - v8;
  uint64_t v78 = sub_240951EF8();
  uint64_t v76 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  uint64_t v74 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_240951F18();
  uint64_t v75 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  uint64_t v73 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240840A30();
  uint64_t v72 = v12;
  uint64_t v71 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v70 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240841F8C();
  uint64_t v80 = *(void *)(v14 - 8);
  uint64_t v81 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v94 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240845404();
  uint64_t v83 = *(void *)(v16 - 8);
  uint64_t v84 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v82 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240843D0C();
  uint64_t v91 = v18;
  uint64_t v89 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  v87 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408449E0();
  uint64_t v92 = v20;
  uint64_t v90 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v88 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_2409540C8();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  BOOL v25 = (char *)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954098();
  uint64_t v26 = sub_2409540B8();
  os_log_type_t v27 = sub_240954C38();
  BOOL v28 = os_log_type_enabled(v26, v27);
  uint64_t v93 = a1;
  uint64_t v79 = v2;
  if (v28)
  {
    uint64_t v67 = v4;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v69 = v6;
    uint64_t v68 = v9;
    uint64_t v30 = (uint8_t *)v29;
    uint64_t v31 = swift_slowAlloc();
    uint64_t v96 = v31;
    *(_DWORD *)uint64_t v30 = 136315138;
    uint64_t v32 = sub_2409557A8();
    id v95 = (id)sub_2408370E4(v32, v33, &v96);
    uint64_t v4 = v67;
    sub_2409550B8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v26, v27, "%s Account sharing generator - make publisher", v30, 0xCu);
    swift_arrayDestroy();
    a1 = v93;
    MEMORY[0x2456021C0](v31, -1, -1);
    unint64_t v34 = v30;
    uint64_t v9 = v68;
    uint64_t v6 = v69;
    MEMORY[0x2456021C0](v34, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  uint64_t v35 = a1;
  uint64_t v36 = *(void **)(a1 + *(int *)(v4 + 20));
  *(void *)(swift_allocObject() + 16) = v36;
  uint64_t v37 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
  sub_24082430C(0, (unint64_t *)&qword_26AFCDDF8, MEMORY[0x263EFDE20]);
  sub_2408243B4(&qword_26AFCDDF0, (unint64_t *)&qword_26AFCDDF8, v37);
  id v38 = v36;
  uint64_t v39 = v70;
  sub_240954418();
  sub_2408242C4(&qword_26AFCDE20, (void (*)(uint64_t))sub_240840A30);
  uint64_t v40 = v72;
  uint64_t v41 = sub_240954498();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v39, v40);
  uint64_t v96 = v41;
  sub_240951F68();
  sub_24082ECEC(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v42 = sub_240951C08();
  uint64_t v43 = *(void *)(v42 - 8);
  unint64_t v44 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_240956800;
  (*(void (**)(unint64_t, void, uint64_t))(v43 + 104))(v45 + v44, *MEMORY[0x263F454D8], v42);
  (*(void (**)(char *, void, uint64_t))(v76 + 104))(v74, *MEMORY[0x263F45688], v78);
  uint64_t v46 = v73;
  sub_240951F08();
  uint64_t v47 = (void *)sub_240951F98();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v46, v77);
  id v95 = v47;
  uint64_t v48 = sub_240954D38();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v9, 1, 1, v48);
  BOOL v49 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_24082430C(0, &qword_26AFCDD08, MEMORY[0x263EFDCF0]);
  sub_24083EDCC(0, (unint64_t *)&qword_26AFD07B0);
  uint64_t v78 = MEMORY[0x263EFDCF8];
  sub_2408243B4(&qword_26AFCDD00, &qword_26AFCDD08, v49);
  sub_24083FA44();
  sub_240954598();
  sub_240848FE8((uint64_t)v9, &qword_26AFD05B0, MEMORY[0x263F8F110]);

  swift_release();
  uint64_t v50 = (uint64_t)v6;
  sub_24083B4E8(v35, (uint64_t)v6);
  unint64_t v51 = (*(unsigned __int8 *)(v85 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
  unint64_t v52 = (v86 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v86 = v52 + 8;
  uint64_t v53 = swift_allocObject();
  sub_240824530((uint64_t)v6, v53 + v51, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  uint64_t v54 = v79;
  *(void *)(v53 + v52) = v79;
  *(void *)(v53 + ((v52 + 15) & 0xFFFFFFFFFFFFFFF8)) = v54;
  sub_24082ECEC(0, &qword_26AFCC600, MEMORY[0x263F45630], MEMORY[0x263F8D488]);
  sub_2408242C4(&qword_26AFCDBF0, (void (*)(uint64_t))sub_240841F8C);
  uint64_t v56 = v81;
  uint64_t v55 = v82;
  uint64_t v57 = v94;
  sub_2409544F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v57, v56);
  sub_24083B4E8(v93, v50);
  uint64_t v58 = swift_allocObject();
  sub_240824530(v50, v58 + v51, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  *(void *)(v58 + v52) = v54;
  sub_24083FEAC(0, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F8D488]);
  uint64_t v59 = v87;
  uint64_t v60 = v84;
  sub_2409541B8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v55, v60);
  *(void *)(swift_allocObject() + 16) = v54;
  sub_2408418D4();
  sub_2408242C4(&qword_26AFCDB38, (void (*)(uint64_t))sub_240843D0C);
  sub_2408242C4(&qword_26AFCDCC0, (void (*)(uint64_t))sub_2408418D4);
  uint64_t v61 = v88;
  uint64_t v62 = v91;
  sub_240954508();
  swift_release();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v59, v62);
  sub_2408242C4(&qword_26AFCDAA8, (void (*)(uint64_t))sub_2408449E0);
  uint64_t v63 = v92;
  uint64_t v64 = sub_240954498();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v61, v63);
  return v64;
}

uint64_t sub_2408242C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24082430C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    sub_24082ECEC(255, (unint64_t *)&qword_26AFCDEA0, (uint64_t (*)(uint64_t))sub_2408F0610, MEMORY[0x263F8D8F0]);
    uint64_t v7 = v6;
    unint64_t v8 = sub_24083F3C0();
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_2408243B4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24082430C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2408243F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_240824460(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2408244C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_240824530(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_240824598(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_240824600(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_240824668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v69 = a2;
  uint64_t v70 = a1;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24082EBC0(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v62 = (char *)&v50 - v6;
  uint64_t v7 = sub_240951A28();
  uint64_t v66 = *(void *)(v7 - 8);
  uint64_t v67 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v61 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24082EBC0(0, &qword_26AFCC6C0, MEMORY[0x263F079C8], v4);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v68 = (char *)&v50 - v10;
  sub_24082EBC0(0, &qword_26AFCC6B8, MEMORY[0x263F07920], v4);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v50 - v12;
  uint64_t v14 = sub_2409518C8();
  uint64_t v64 = *(void *)(v14 - 8);
  uint64_t v65 = v14;
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v60 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v72 = (char *)&v50 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v50 - v19;
  sub_24082EBC0(0, (unint64_t *)&qword_26AFCDFA0, MEMORY[0x263F07908], MEMORY[0x263F8E0F8]);
  uint64_t v22 = v21;
  uint64_t v23 = sub_240951B38();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(void *)(v24 + 72);
  uint64_t v26 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v27 = (v26 + 32) & ~v26;
  uint64_t v58 = v22;
  uint64_t v55 = v26 | 7;
  uint64_t v56 = v27 + 3 * v25;
  uint64_t v28 = swift_allocObject();
  long long v53 = xmmword_240956880;
  *(_OWORD *)(v28 + 16) = xmmword_240956880;
  uint64_t v57 = v27;
  uint64_t v29 = v28 + v27;
  uint64_t v30 = *(void (**)(uint64_t))(v24 + 104);
  unsigned int v54 = *MEMORY[0x263F078A0];
  v30(v29);
  unsigned int v52 = *MEMORY[0x263F078A8];
  v30(v29 + v25);
  uint64_t v59 = 2 * v25;
  unsigned int v51 = *MEMORY[0x263F07870];
  v30(v29 + 2 * v25);
  sub_240824E48(v28);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v63 = v20;
  uint64_t v71 = a3;
  sub_240951AF8();
  uint64_t v31 = v68;
  swift_bridgeObjectRelease();
  uint64_t v32 = sub_240951B48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v13, 1, 1, v32);
  uint64_t v33 = sub_240951B68();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v31, 1, 1, v33);
  if (__OFSUB__(0, v70))
  {
    __break(1u);
  }
  else
  {
    sub_2409518B8();
    uint64_t v35 = (uint64_t)v62;
    sub_240951B18();
    uint64_t v37 = v66;
    uint64_t v36 = v67;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v35, 1, v67) == 1)
    {
      sub_24081B504(v35, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
      id v38 = objc_msgSend(self, sel_predicateWithValue_, 1);
      uint64_t v39 = v65;
      uint64_t v40 = *(void (**)(char *, uint64_t))(v64 + 8);
      v40(v72, v65);
      uint64_t v41 = v63;
    }
    else
    {
      uint64_t v42 = v61;
      (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v61, v35, v36);
      uint64_t v43 = swift_allocObject();
      *(_OWORD *)(v43 + 16) = v53;
      uint64_t v44 = v43 + v57;
      ((void (*)(uint64_t, void, uint64_t))v30)(v43 + v57, v54, v23);
      ((void (*)(uint64_t, void, uint64_t))v30)(v44 + v25, v52, v23);
      ((void (*)(uint64_t, void, uint64_t))v30)(v44 + v59, v51, v23);
      sub_240824E48(v43);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      uint64_t v45 = v60;
      sub_240951AF8();
      swift_bridgeObjectRelease();
      uint64_t v46 = self;
      uint64_t v47 = (void *)sub_240951868();
      uint64_t v48 = v63;
      BOOL v49 = (void *)sub_240951868();
      id v38 = objc_msgSend(v46, sel_predicateForRecordsWithSortDateFromStartDateComponents_endDateComponents_, v47, v49);

      uint64_t v39 = v65;
      uint64_t v40 = *(void (**)(char *, uint64_t))(v64 + 8);
      v40(v45, v65);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v42, v36);
      v40(v72, v39);
      uint64_t v41 = v48;
    }
    v40(v41, v39);
    return (uint64_t)v38;
  }
  return result;
}

uint64_t sub_240824E48(uint64_t a1)
{
  uint64_t v2 = sub_240951B38();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_24082515C();
    uint64_t v9 = sub_240955278();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_24083ED3C(&qword_26AFCC6B0, MEMORY[0x263F07908]);
      uint64_t v16 = sub_2409546F8();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_24083ED3C(&qword_26AFCC618, MEMORY[0x263F07908]);
          char v23 = sub_240954778();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

void sub_24082515C()
{
  if (!qword_26AFCDF88)
  {
    sub_240951B38();
    sub_24083ED3C(&qword_26AFCC6B0, MEMORY[0x263F07908]);
    unint64_t v0 = sub_240955288();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDF88);
    }
  }
}

void *sub_2408251F0(uint64_t a1)
{
  uint64_t v133 = *v1;
  uint64_t v3 = type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t v130 = *(void *)(v3 - 8);
  uint64_t v128 = *(void *)(v130 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v125 = (uint64_t)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24083B598(0);
  MEMORY[0x270FA5388](v5 - 8);
  v121 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_240954D58();
  uint64_t v122 = *(void *)(v124 - 8);
  MEMORY[0x270FA5388](v124);
  v118 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240842564();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v126 = v8;
  uint64_t v127 = v9;
  MEMORY[0x270FA5388](v8);
  v120 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408454E0();
  uint64_t v129 = v11;
  uint64_t v131 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  v123 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240842078();
  uint64_t v119 = v13;
  uint64_t v132 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  v117 = (char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = sub_240952F68();
  uint64_t v139 = *(void *)(v136 - 8);
  MEMORY[0x270FA5388](v136);
  uint64_t v112 = (char *)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = sub_240954DE8();
  uint64_t v140 = *(void *)(v137 - 8);
  MEMORY[0x270FA5388](v137);
  v111 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = (void (*)(uint64_t))MEMORY[0x263F07CB0];
  uint64_t v113 = sub_24083F9D0;
  sub_240834A14(0, (unint64_t *)&qword_26AFD0430, MEMORY[0x263F07CB0], (void (*)(void))sub_24083F9D0);
  uint64_t v115 = v17;
  uint64_t v116 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  v110 = (char *)&v91 - v18;
  sub_240840914(0);
  v106 = v19;
  uint64_t v134 = *((void *)v19 - 1);
  MEMORY[0x270FA5388](v19);
  uint64_t v101 = (char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_240840914;
  uint64_t v102 = sub_240840948;
  sub_240834A14(0, &qword_26AFD0410, sub_240840914, (void (*)(void))sub_240840948);
  uint64_t v104 = v21;
  v105 = *(void (***)(char *, uint64_t))(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v100 = (char *)&v91 - v22;
  sub_2408408AC(0);
  uint64_t v98 = v23;
  uint64_t v99 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v93 = (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v95 = sub_2408408AC;
  uint64_t v94 = sub_2408408E0;
  sub_240834A14(0, &qword_26AFD0420, sub_2408408AC, (void (*)(void))sub_2408408E0);
  uint64_t v96 = v25;
  uint64_t v97 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v92 = (char *)&v91 - v26;
  uint64_t v27 = sub_240951EF8();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v91 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_240951F18();
  uint64_t v109 = v31;
  uint64_t v108 = *(void *)(v31 - 8);
  uint64_t v32 = v108;
  MEMORY[0x270FA5388](v31);
  v135 = (char *)&v91 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = v1;
  *(void *)((char *)v1 + OBJC_IVAR____TtC13HealthRecords27AddAccountGeneratorPipeline_observerToken) = 0;
  uint64_t v138 = a1;
  sub_24083B4E8(a1, (uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords27AddAccountGeneratorPipeline_context);
  sub_240951F68();
  v107 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_24083488C(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v34 = sub_240951C08();
  uint64_t v35 = *(void *)(v34 - 8);
  unint64_t v36 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_240956800;
  (*(void (**)(unint64_t, void, uint64_t))(v35 + 104))(v37 + v36, *MEMORY[0x263F45580], v34);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v30, *MEMORY[0x263F45688], v27);
  id v38 = v135;
  sub_240951F08();
  uint64_t v39 = v91;
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))((uint64_t)v91 + OBJC_IVAR____TtC13HealthRecords27AddAccountGeneratorPipeline_domain, v38, v31);
  id v40 = objc_allocWithZone((Class)sub_240953018());
  *(void *)((char *)v39 + OBJC_IVAR____TtC13HealthRecords27AddAccountGeneratorPipeline_accountStateChangeListener) = sub_240953008();
  uint64_t v41 = v93;
  sub_240952FF8();
  sub_2408408E0();
  uint64_t v42 = v92;
  uint64_t v43 = v98;
  sub_2409544F8();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v41, v43);
  sub_2408265D4((unint64_t *)&qword_26AFD0418, &qword_26AFD0420, v95, (void (*)(void))v94);
  uint64_t v44 = v96;
  uint64_t v45 = sub_240954498();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v42, v44);
  *(void *)((char *)v39 + OBJC_IVAR____TtC13HealthRecords27AddAccountGeneratorPipeline_accountStateChangePublisher) = v45;
  id v46 = objc_allocWithZone((Class)sub_2409524C8());
  *(void *)((char *)v39 + OBJC_IVAR____TtC13HealthRecords27AddAccountGeneratorPipeline_healthRecordsSupportedListener) = sub_2409524B8();
  uint64_t v47 = v101;
  sub_2409524A8();
  sub_240840948();
  uint64_t v48 = v100;
  BOOL v49 = v106;
  sub_2409544F8();
  (*(void (**)(char *, void (*)(void, void, void)))(v134 + 8))(v47, v49);
  sub_2408265D4((unint64_t *)&qword_26AFD0408, &qword_26AFD0410, v103, (void (*)(void))v102);
  uint64_t v50 = v104;
  uint64_t v51 = sub_240954498();
  v105[1](v48, v50);
  *(void *)((char *)v39 + OBJC_IVAR____TtC13HealthRecords27AddAccountGeneratorPipeline_healthRecordsSupportedPublisher) = v51;
  sub_240951F38();
  sub_2408304E8(v141, v141[3]);
  sub_240951E98();
  sub_240953248();
  swift_allocObject();
  uint64_t v134 = sub_240953238();
  sub_2408371B8((uint64_t)v141);
  uint64_t v52 = *MEMORY[0x263F46118];
  uint64_t v53 = v139;
  v106 = *(void (**)(void, void, void))(v139 + 104);
  unsigned int v54 = v112;
  uint64_t v55 = v136;
  v106(v112, v52, v136);
  uint64_t v56 = v111;
  sub_240953218();
  uint64_t v57 = *(void (***)(char *, uint64_t))(v53 + 8);
  uint64_t v139 = v53 + 8;
  v105 = v57;
  ((void (*)(char *, uint64_t))v57)(v54, v55);
  uint64_t v104 = sub_24083F9D0();
  uint64_t v58 = v110;
  uint64_t v59 = v137;
  sub_2409544F8();
  uint64_t v60 = *(void (**)(uint64_t))(v140 + 8);
  v140 += 8;
  uint64_t v103 = v60;
  ((void (*)(char *, uint64_t))v60)(v56, v59);
  uint64_t v114 = (void (*)(uint64_t))sub_2408265D4((unint64_t *)&qword_26AFD0428, (unint64_t *)&qword_26AFD0430, v114, (void (*)(void))v113);
  uint64_t v61 = v115;
  uint64_t v62 = sub_240954498();
  uint64_t v63 = *(void (**)(char *, uint64_t))(v116 + 8);
  v63(v58, v61);
  *(void *)((char *)v39 + OBJC_IVAR____TtC13HealthRecords27AddAccountGeneratorPipeline_genericTilePublisher) = v62;
  uint64_t v64 = v136;
  v106(v54, *MEMORY[0x263F46140], v136);
  sub_240953218();
  ((void (*)(char *, uint64_t))v105)(v54, v64);
  uint64_t v65 = v137;
  sub_2409544F8();
  ((void (*)(char *, uint64_t))v103)(v56, v65);
  uint64_t v66 = sub_240954498();
  v63(v58, v61);
  *(void *)((char *)v39 + OBJC_IVAR____TtC13HealthRecords27AddAccountGeneratorPipeline_labsTilePublisher) = v66;
  sub_24083488C(0, &qword_26AFD0600, (uint64_t (*)(uint64_t))sub_240841250, v107);
  uint64_t v67 = swift_allocObject();
  uint64_t v68 = *(void *)((char *)v39
                  + OBJC_IVAR____TtC13HealthRecords27AddAccountGeneratorPipeline_accountStateChangePublisher);
  *(_OWORD *)(v67 + 16) = xmmword_240958650;
  uint64_t v69 = *(void *)((char *)v39
                  + OBJC_IVAR____TtC13HealthRecords27AddAccountGeneratorPipeline_healthRecordsSupportedPublisher);
  *(void *)(v67 + 32) = v68;
  *(void *)(v67 + 40) = v69;
  *(void *)(v67 + 48) = *(void *)((char *)v39
                                    + OBJC_IVAR____TtC13HealthRecords27AddAccountGeneratorPipeline_genericTilePublisher);
  *(void *)(v67 + 56) = v66;
  v141[0] = v67;
  sub_2409549B8();
  sub_240841250();
  sub_24083488C(0, &qword_26AFD0518, (uint64_t (*)(uint64_t))sub_240841250, MEMORY[0x263F8D488]);
  sub_2408369FC((unint64_t *)&qword_26AFD0468, (void (*)(uint64_t))sub_240841250);
  sub_24083FD8C();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v70 = v117;
  sub_2409542C8();
  uint64_t v71 = v108;
  uint64_t v72 = v135;
  uint64_t v73 = v109;
  (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v135, (uint64_t)v39 + OBJC_IVAR____TtC13HealthRecords27AddAccountGeneratorPipeline_domain, v109);
  uint64_t v74 = v138;
  uint64_t v75 = (void *)sub_240951F98();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v73);
  uint64_t v76 = v118;
  sub_240954D48();
  v141[0] = v75;
  uint64_t v77 = sub_240954D38();
  uint64_t v78 = (uint64_t)v121;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v121, 1, 1, v77);
  sub_24083FA04();
  sub_2408369FC(&qword_26AFD0458, (void (*)(uint64_t))sub_240842078);
  sub_2408369FC((unint64_t *)&qword_26AFD05B8, (void (*)(uint64_t))sub_24083FA04);
  uint64_t v79 = v120;
  uint64_t v80 = v119;
  sub_2409545A8();
  sub_24083AF34(v78, (uint64_t (*)(void))sub_24083B598);
  (*(void (**)(char *, uint64_t))(v122 + 8))(v76, v124);
  uint64_t v81 = v125;
  sub_24083B4E8(v74, v125);
  unint64_t v82 = (*(unsigned __int8 *)(v130 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
  unint64_t v83 = (v128 + v82 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v84 = swift_allocObject();
  sub_24083B484(v81, v84 + v82);
  *(void *)(v84 + v83) = v133;
  sub_24084855C();
  sub_2408369FC(&qword_26AFCDB88, (void (*)(uint64_t))sub_240842564);
  uint64_t v85 = v123;
  uint64_t v86 = v126;
  sub_2409544F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v127 + 8))(v79, v86);
  sub_2408369FC(&qword_26AFCDA40, (void (*)(uint64_t))sub_2408454E0);
  uint64_t v87 = v129;
  uint64_t v88 = sub_240954498();
  (*(void (**)(char *, uint64_t))(v131 + 8))(v85, v87);
  v39[2] = v88;
  uint64_t v89 = sub_24081FA20();
  swift_release();

  sub_24083AF34(v74, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  (*(void (**)(char *, uint64_t))(v132 + 8))(v70, v80);
  *(void *)((char *)v39 + OBJC_IVAR____TtC13HealthRecords27AddAccountGeneratorPipeline_observerToken) = v89;
  swift_release();
  return v39;
}

uint64_t sub_2408265D4(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240834A14(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_240826624(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t v83 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v84 = v3;
  uint64_t v87 = (uint64_t)v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24082EC88(0, &qword_26AFCECB8, MEMORY[0x263F90210], MEMORY[0x263F8D8F0]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v71 - v8;
  uint64_t v78 = sub_240951C28();
  uint64_t v77 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  uint64_t v76 = (char *)v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24082759C(0, &qword_26AFCEE88, (uint64_t (*)(uint64_t))sub_240841424, sub_2408414B8, MEMORY[0x263F459F0]);
  uint64_t v81 = v11;
  uint64_t v80 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v79 = (char *)v71 - v12;
  sub_240844278();
  uint64_t v86 = v13;
  uint64_t v85 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  unint64_t v82 = (char *)v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240844D90();
  uint64_t v90 = v15;
  uint64_t v89 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v88 = (char *)v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408440D8();
  uint64_t v96 = v17;
  uint64_t v94 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v91 = (char *)v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408447A0();
  uint64_t v97 = v19;
  uint64_t v95 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v92 = (char *)v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24082759C(0, &qword_26AFCEE38, (uint64_t (*)(uint64_t))sub_2408447A0, sub_24084488C, MEMORY[0x263EFDAA0]);
  uint64_t v98 = *(void *)(v21 - 8);
  uint64_t v99 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v93 = (char *)v71 - v22;
  uint64_t v75 = (void *)sub_240951A98();
  uint64_t v74 = *(v75 - 1);
  MEMORY[0x270FA5388](v75);
  uint64_t v73 = (char *)v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_2409525A8();
  uint64_t v25 = *(void (***)(void, void))(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)v71 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409517C8();
  swift_allocObject();
  uint64_t v103 = sub_2409517B8();
  sub_240952808();
  uint64_t v28 = (void *)sub_2409527D8();
  sub_240951F38();
  sub_2408304E8(&v106, v107);
  uint64_t v29 = (void *)sub_240951E98();
  id v30 = objc_msgSend(v29, sel_profileIdentifier);

  uint64_t v102 = sub_2409527B8();
  sub_2408371B8((uint64_t)&v106);
  sub_240951F38();
  if (qword_26AFCD0C8 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_24083F214(v24, (uint64_t)qword_26AFD08F0);
  uint64_t v101 = v25;
  ((void (*)(char *, uint64_t, uint64_t))v25[2])(v27, v31, v24);
  uint64_t v32 = (void *)sub_240951F68();
  uint64_t v33 = (void *)sub_240951C68();
  uint64_t v34 = (void *)sub_240952588();
  if (v33)
  {
    uint64_t v104 = 0x656C69666F72505BLL;
    unint64_t v105 = 0xE90000000000003ALL;
    v71[1] = v34;
    v71[0] = v33;
    id v35 = objc_msgSend(v71[0], sel_identifier);
    uint64_t v72 = v32;
    id v36 = v35;
    uint64_t v37 = v73;
    sub_240951A78();

    sub_240951A48();
    (*(void (**)(char *, void *))(v74 + 8))(v37, v75);
    sub_2409548A8();
    uint64_t v32 = v72;
    swift_bridgeObjectRelease();
    sub_2409548A8();

    unint64_t v38 = v104;
    unint64_t v39 = v105;
  }
  else
  {
    unint64_t v39 = 0x800000024095C1A0;
    unint64_t v38 = 0xD000000000000013;
  }
  uint64_t v104 = v38;
  unint64_t v105 = v39;
  sub_2409548A8();

  swift_bridgeObjectRelease();
  uint64_t v40 = v104;
  unint64_t v41 = v105;
  ((void (**)(char *, uint64_t))v101)[1](v27, v24);
  type metadata accessor for FeedItemContextChangeGenerator();
  uint64_t v42 = swift_allocObject();
  sub_24083AB20(&v106, v42 + 16);
  *(void *)(v42 + 56) = v40;
  *(void *)(v42 + 64) = v41;
  id v43 = objc_msgSend(self, sel_predicateForMedicalRecordWithState_, 1);
  sub_24083F93C();
  id result = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_diagnosticTestResultTypeForIdentifier_, *MEMORY[0x263F09518]);
  if (result)
  {
    uint64_t v45 = result;
    uint64_t v75 = v45;
    uint64_t v46 = sub_2409531C8();
    uint64_t v101 = (void (**)(void, void))v43;
    uint64_t v47 = v46;

    uint64_t v48 = v77;
    BOOL v49 = v76;
    uint64_t v50 = v78;
    (*(void (**)(char *, void, uint64_t))(v77 + 104))(v76, *MEMORY[0x263F455A8], v78);
    sub_240951C18();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
    uint64_t v51 = sub_240954038();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v9, 1, 1, v51);
    *(void *)&long long v106 = v47;
    sub_24081B654((uint64_t)v9, (uint64_t)v7);
    sub_240841424();
    sub_2408414B8();
    swift_retain();
    uint64_t v52 = v79;
    sub_240954198();
    sub_2408483FC((uint64_t)v9);
    swift_release();
    uint64_t v53 = v87;
    sub_24083B4E8(a1, v87);
    unint64_t v54 = (*(unsigned __int8 *)(v83 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
    unint64_t v55 = (v84 + v54 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v56 = swift_allocObject();
    uint64_t v57 = v100;
    *(void *)(v56 + 16) = v100;
    sub_24083B484(v53, v56 + v54);
    *(void *)(v56 + v55) = v103;
    sub_240840084(0);
    sub_240846354();
    swift_retain();
    uint64_t v58 = v82;
    uint64_t v59 = v81;
    sub_240954548();
    swift_release();
    (*(void (**)(char *, uint64_t))(v80 + 8))(v52, v59);
    uint64_t v60 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_24083F348(0, &qword_26AFCDC88, MEMORY[0x263EFDCF0]);
    sub_240827554(&qword_26AFCF0B0, (void (*)(uint64_t))sub_240844278);
    sub_240841CB0((unint64_t *)&qword_26AFCDC80, &qword_26AFCDC88, v60);
    uint64_t v61 = v88;
    uint64_t v62 = v86;
    sub_240954508();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v58, v62);
    sub_24083FB78(0, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
    sub_240827554(&qword_26AFCEFD0, (void (*)(uint64_t))sub_240844D90);
    swift_retain();
    uint64_t v63 = v90;
    uint64_t v64 = v91;
    sub_240954548();
    swift_release();
    (*(void (**)(char *, uint64_t))(v89 + 8))(v61, v63);
    *(void *)(swift_allocObject() + 16) = v57;
    sub_2408418D4();
    sub_240827554(&qword_26AFCF0C0, (void (*)(uint64_t))sub_2408440D8);
    sub_240827554(&qword_26AFCDCC0, (void (*)(uint64_t))sub_2408418D4);
    uint64_t v65 = v92;
    uint64_t v66 = v96;
    sub_240954508();
    swift_release();
    (*(void (**)(char *, uint64_t))(v94 + 8))(v64, v66);
    *(void *)&long long v106 = MEMORY[0x263F8EE78];
    sub_24084488C();
    uint64_t v67 = v93;
    uint64_t v68 = v97;
    sub_2409544C8();
    (*(void (**)(char *, uint64_t))(v95 + 8))(v65, v68);
    sub_2408466E4();
    uint64_t v69 = v99;
    uint64_t v70 = sub_240954498();

    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v98 + 8))(v67, v69);
    return (id)v70;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240827554(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24082759C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_24082761C(uint64_t a1, uint64_t a2)
{
  v24[2] = a1;
  v24[3] = a2;
  uint64_t v2 = sub_2409526C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240952628();
  uint64_t v26 = MEMORY[0x263F8EE78];
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v10 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    uint64_t v8 = v3 + 16;
    uint64_t v9 = v10;
    unint64_t v11 = (*(unsigned __int8 *)(v8 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64);
    v24[0] = v6;
    unint64_t v12 = v6 + v11;
    uint64_t v13 = *(void *)(v8 + 56);
    do
    {
      v9(v5, v12, v2);
      unint64_t v14 = sub_240952648();
      (*(void (**)(char *, uint64_t))(v8 - 8))(v5, v2);
      sub_240827F3C(v14);
      v12 += v13;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    unint64_t v15 = v26;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v15 = MEMORY[0x263F8EE78];
  }
  uint64_t v26 = MEMORY[0x263F8EE88];
  if (!(v15 >> 62))
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v16) {
      goto LABEL_8;
    }
LABEL_13:
    swift_bridgeObjectRelease_n();
    uint64_t v22 = MEMORY[0x263F8EE88];
LABEL_14:
    sub_24081CE4C(v22);
    swift_bridgeObjectRelease();
    uint64_t v23 = sub_240954BE8();
    swift_release();
    return v23;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_2409553D8();
  uint64_t v16 = result;
  if (!result) {
    goto LABEL_13;
  }
LABEL_8:
  if (v16 >= 1)
  {
    uint64_t v18 = 0;
    do
    {
      uint64_t v19 = *(void **)(v15 + 8 * v18++ + 32);
      id v20 = v19;
      sub_2408278C4(&v25, objc_msgSend(v20, sel_sampleType), (unint64_t *)&qword_26AFD0580, 0x263F0A6E8, &qword_26AFD05D0, (unint64_t *)&qword_26AFD0588);
      uint64_t v21 = v25;
    }
    while (v16 != v18);
    swift_bridgeObjectRelease_n();
    uint64_t v22 = v26;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_2408278C4(void *a1, void *a2, unint64_t *a3, uint64_t a4, unint64_t *a5, unint64_t *a6)
{
  unint64_t v11 = v6;
  uint64_t v14 = *v6;
  if ((*v6 & 0xC000000000000001) != 0)
  {
    if (v14 < 0) {
      uint64_t v15 = *v6;
    }
    else {
      uint64_t v15 = v14 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v16 = a2;
    uint64_t v17 = sub_2409551D8();

    if (v17)
    {
      swift_bridgeObjectRelease();

      sub_24083EDCC(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v42;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_2409551C8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v29 = sub_24094432C(v15, result + 1, a5, a3, a4, a6);
    uint64_t v43 = v29;
    unint64_t v30 = *(void *)(v29 + 16);
    if (*(void *)(v29 + 24) <= v30)
    {
      id v35 = a5;
      uint64_t v36 = v30 + 1;
      id v37 = v16;
      sub_24081D23C(v36, v35, a3, a4, a6);
      uint64_t v31 = v43;
    }
    else
    {
      uint64_t v31 = v29;
      id v32 = v16;
    }
    sub_240944554((uint64_t)v16, v31);
    *unint64_t v11 = v31;
    swift_bridgeObjectRelease();
    *a1 = v16;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_240954FB8();
    uint64_t v20 = -1 << *(unsigned char *)(v14 + 32);
    unint64_t v21 = v19 & ~v20;
    uint64_t v40 = a4;
    if ((*(void *)(v14 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21))
    {
      sub_24083EDCC(0, a3);
      id v22 = *(id *)(*(void *)(v14 + 48) + 8 * v21);
      char v23 = sub_240954FC8();

      if (v23)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v27 = *(void **)(*(void *)(*v6 + 48) + 8 * v21);
        *a1 = v27;
        id v28 = v27;
        return 0;
      }
      uint64_t v24 = ~v20;
      while (1)
      {
        unint64_t v21 = (v21 + 1) & v24;
        if (((*(void *)(v14 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          break;
        }
        id v25 = *(id *)(*(void *)(v14 + 48) + 8 * v21);
        char v26 = sub_240954FC8();

        if (v26) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v44 = *v6;
    uint64_t *v6 = 0x8000000000000000;
    id v34 = a2;
    sub_240827BB0((uint64_t)v34, v21, isUniquelyReferenced_nonNull_native, a5, a3, v40, a6);
    uint64_t *v6 = v44;
    swift_bridgeObjectRelease();
    *a1 = v34;
  }
  return 1;
}

void sub_240827BB0(uint64_t a1, unint64_t a2, char a3, unint64_t *a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  unint64_t v11 = *(void *)(*v7 + 16);
  unint64_t v12 = *(void *)(*v7 + 24);
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v13 = v11 + 1;
  if (a3)
  {
    sub_24081D23C(v13, a4, a5, a6, a7);
  }
  else
  {
    if (v12 > v11)
    {
      sub_240941F80(a4, a5, a6, a7);
      goto LABEL_14;
    }
    sub_24081AABC(v13, a4, a5, a6, a7);
  }
  uint64_t v14 = *v7;
  uint64_t v15 = sub_240954FB8();
  uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
  a2 = v15 & ~v16;
  if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_24083EDCC(0, a5);
    id v17 = *(id *)(*(void *)(v14 + 48) + 8 * a2);
    char v18 = sub_240954FC8();

    if (v18)
    {
LABEL_13:
      sub_240955668();
      __break(1u);
    }
    else
    {
      uint64_t v19 = ~v16;
      while (1)
      {
        a2 = (a2 + 1) & v19;
        if (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v20 = *(id *)(*(void *)(v14 + 48) + 8 * a2);
        char v21 = sub_240954FC8();

        if (v21) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v22 = *v7;
  *(void *)(*v7 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v22 + 48) + 8 * a2) = a1;
  uint64_t v23 = *(void *)(v22 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24) {
    __break(1u);
  }
  else {
    *(void *)(v22 + 16) = v25;
  }
}

uint64_t sub_240827D68(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_2409553D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_2409553D8();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v5;
  if (__OFADD__(v7, v5)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v6 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v6;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v7 = 1;
  }
  if (v6 >> 62) {
    goto LABEL_27;
  }
  uint64_t v11 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8) {
      uint64_t v11 = v8;
    }
    swift_bridgeObjectRetain();
    unint64_t v6 = MEMORY[0x2456015C0](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *uint64_t v2 = v6;
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_2409553D8();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();

  return sub_2409549B8();
}

uint64_t sub_240827F3C(unint64_t a1)
{
  return sub_240827D68(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_240827F54);
}

uint64_t sub_240827F54(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_2409553D8();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_2409553D8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_240879064();
        sub_240873E98(&qword_268C90BF0, 255, (void (*)(uint64_t))sub_240879064);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          unint64_t v12 = sub_240876AD0(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_24083EDCC(0, &qword_26AFD0640);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_240955448();
  __break(1u);
  return result;
}

uint64_t sub_240828198()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  sub_24084097C();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24084602C();
  v20[0] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v1;
  *(void *)(v12 + 24) = ObjectType;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
  sub_240828514(0, &qword_26AFCF318, MEMORY[0x263EFDE20]);
  sub_240829E98(&qword_26AFCF310, &qword_26AFCF318, v13);
  id v14 = v1;
  sub_240954418();
  sub_2408285B8(&qword_26AFCF360, (void (*)(uint64_t))sub_24084097C);
  uint64_t v15 = sub_240954498();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v20[1] = v15;
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_240828514(0, (unint64_t *)&qword_26AFCDD18, MEMORY[0x263EFDCF0]);
  sub_24083FAAC(0, &qword_26AFCE268, (uint64_t (*)(uint64_t))sub_24087E864, MEMORY[0x263F8D488]);
  sub_240829E98(&qword_26AFCDD10, (unint64_t *)&qword_26AFCDD18, v16);
  sub_2409544F8();
  swift_release();
  sub_2408285B8(&qword_26AFCE190, (void (*)(uint64_t))sub_24084602C);
  uint64_t v17 = v20[0];
  uint64_t v18 = sub_240954498();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v17);
  return v18;
}

void sub_240828514(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    sub_2408AFE68(255, (unint64_t *)&qword_26AFCC610, (unint64_t *)&qword_26AFD05A0, 0x263F45C68, MEMORY[0x263F8D488]);
    uint64_t v7 = v6;
    unint64_t v8 = sub_24083F3C0();
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_2408285B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240828600()
{
  uint64_t v1 = v0;
  sub_240847B54();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v143 = v2;
  uint64_t v144 = v3;
  MEMORY[0x270FA5388](v2);
  v142 = (char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24083FC00();
  uint64_t v139 = v5 - 8;
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v137 = (uint64_t *)((char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_240849BDC();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v133 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240847E2C();
  uint64_t v128 = v9;
  uint64_t v131 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v125 = (char *)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24084381C();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v134 = v11;
  uint64_t v135 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v127 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408465BC();
  uint64_t v136 = v14;
  uint64_t v138 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v130 = (char *)&v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240845B14();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v140 = v16;
  uint64_t v141 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v132 = (char *)&v97 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240846650();
  uint64_t v111 = v19;
  uint64_t v152 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v108 = (char *)&v97 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240842EA4();
  uint64_t v115 = v21;
  uint64_t v116 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v109 = (char *)&v97 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240843340();
  uint64_t v117 = v23;
  uint64_t v118 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v112 = (char *)&v97 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408445E4();
  uint64_t v119 = v25;
  uint64_t v120 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v113 = (char *)&v97 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24084595C();
  uint64_t v121 = v27;
  uint64_t v122 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v114 = (char *)&v97 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240843C78();
  uint64_t v126 = v29;
  uint64_t v129 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  v148 = (char *)&v97 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24084097C();
  uint64_t v98 = v31;
  uint64_t v99 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)&v97 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240842D98();
  uint64_t v102 = v34;
  uint64_t v103 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v100 = (char *)&v97 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240843254();
  uint64_t v104 = v36;
  uint64_t v105 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v101 = (char *)&v97 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408444A4();
  uint64_t v151 = v38;
  uint64_t v124 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  v150 = (char *)&v97 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_240952F68();
  uint64_t v41 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v43 = (char *)&v97 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408450C8();
  uint64_t v147 = v44;
  uint64_t v123 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  v146 = (char *)&v97 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = *(void **)(v0 + 16);
  id v47 = objc_msgSend(v46, sel_healthStore);
  sub_240953248();
  swift_allocObject();
  uint64_t v145 = sub_240953238();
  (*(void (**)(char *, void, uint64_t))(v41 + 104))(v43, *MEMORY[0x263F46120], v40);
  uint64_t v48 = sub_240953228();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v40);
  unint64_t v153 = v48;
  uint64_t v107 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_24082A230(0, &qword_26AFCDC08, (uint64_t (*)(uint64_t))sub_240849BDC, MEMORY[0x263EFDCF0]);
  sub_24082A1CC(0, (unint64_t *)&qword_26AFCDC18, (void (*)(uint64_t))sub_240849BDC);
  sub_240841F04();
  sub_240841E90();
  uint64_t v149 = v1;
  swift_retain();
  sub_240954508();
  swift_release();
  swift_release();
  id v49 = objc_msgSend(v46, sel_healthStore);
  sub_240952ED8();
  swift_allocObject();
  uint64_t v50 = sub_240952EC8();
  id v51 = objc_msgSend(v46, sel_healthStore);
  id v52 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F45C78]), sel_initWithHealthStore_, v51);

  *(void *)(swift_allocObject() + 16) = v52;
  uint64_t v53 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
  sub_24082A13C(0, &qword_26AFCF318, MEMORY[0x263EFDE20]);
  sub_240829EDC(&qword_26AFCF310, &qword_26AFCF318, v53);
  id v110 = v52;
  sub_240954418();
  sub_240829E50(&qword_26AFCF360, (void (*)(uint64_t))sub_24084097C);
  uint64_t v54 = v98;
  uint64_t v55 = sub_240954498();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v33, v54);
  unint64_t v153 = v55;
  sub_2409542E8();
  uint64_t v56 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_24082A13C(0, (unint64_t *)&qword_26AFCDD18, MEMORY[0x263EFDCF0]);
  sub_24083EDCC(0, (unint64_t *)&qword_26AFD05A0);
  sub_240842410();
  sub_240829EDC(&qword_26AFCDD10, (unint64_t *)&qword_26AFCDD18, v56);
  uint64_t v99 = MEMORY[0x263EFDC60];
  sub_240829E50(&qword_26AFCDBA8, (void (*)(uint64_t))sub_240842410);
  uint64_t v57 = v100;
  sub_240954578();
  swift_release();
  uint64_t v58 = swift_allocObject();
  *(void *)(v58 + 16) = v149;
  *(void *)(v58 + 24) = v50;
  uint64_t v106 = v50;
  swift_retain();
  swift_retain();
  sub_2409542E8();
  sub_240841E3C(0);
  sub_240829E50(&qword_26AFCF1E8, (void (*)(uint64_t))sub_240842D98);
  sub_240841E5C();
  uint64_t v59 = v101;
  uint64_t v60 = v102;
  sub_240954568();
  swift_release();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v57, v60);
  unint64_t v153 = MEMORY[0x263F8EE80];
  sub_240840680();
  sub_240829E50(&qword_26AFCF1C8, (void (*)(uint64_t))sub_240843254);
  uint64_t v61 = v104;
  sub_240954538();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v59, v61);
  unint64_t v153 = sub_240829F20(MEMORY[0x263F8EE78]);
  uint64_t v103 = sub_240829E50(&qword_26AFCF070, (void (*)(uint64_t))sub_2408444A4);
  uint64_t v62 = v108;
  sub_2409544C8();
  swift_bridgeObjectRelease();
  sub_2409542E8();
  sub_2408424B4();
  uint64_t v105 = MEMORY[0x263EFDAA8];
  uint64_t v102 = sub_240829E50(&qword_26AFCEE50, (void (*)(uint64_t))sub_240846650);
  sub_240829E50(&qword_26AFCF510, (void (*)(uint64_t))sub_2408424B4);
  uint64_t v63 = v109;
  uint64_t v64 = v111;
  sub_2409545E8();
  uint64_t v65 = *(char **)(v152 + 8);
  v152 += 8;
  uint64_t v101 = v65;
  ((void (*)(char *, uint64_t))v65)(v62, v64);
  uint64_t v66 = swift_allocObject();
  *(void *)(v66 + 16) = v145;
  *(void *)(v66 + 24) = v149;
  swift_retain();
  swift_retain();
  sub_2409542E8();
  sub_240847C40();
  sub_240829E50(&qword_26AFCF500, (void (*)(uint64_t))sub_240842EA4);
  uint64_t v104 = MEMORY[0x263EFDA08];
  sub_240829E50(&qword_26AFCF430, (void (*)(uint64_t))sub_240847C40);
  uint64_t v67 = v112;
  uint64_t v68 = v115;
  sub_2409545E8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v116 + 8))(v63, v68);
  sub_240829E50(&qword_26AFCF4F0, (void (*)(uint64_t))sub_240843340);
  uint64_t v69 = v113;
  uint64_t v70 = v117;
  sub_240954528();
  (*(void (**)(char *, uint64_t))(v118 + 8))(v67, v70);
  type metadata accessor for AccountNewRecordsData(0);
  sub_240829E50(&qword_26AFCF4B0, (void (*)(uint64_t))sub_2408445E4);
  uint64_t v71 = v114;
  uint64_t v72 = v119;
  sub_2409544F8();
  (*(void (**)(char *, uint64_t))(v120 + 8))(v69, v72);
  sub_240829E50(&qword_26AFCF480, (void (*)(uint64_t))sub_24084595C);
  uint64_t v73 = v121;
  sub_240954558();
  (*(void (**)(char *, uint64_t))(v122 + 8))(v71, v73);
  uint64_t v74 = MEMORY[0x263F8EE78];
  unint64_t v153 = sub_240829F20(MEMORY[0x263F8EE78]);
  sub_2409544C8();
  swift_bridgeObjectRelease();
  sub_240829E50(&qword_26AFCDA68, (void (*)(uint64_t))sub_2408450C8);
  uint64_t v75 = v125;
  sub_2409544E8();
  ((void (*)(char *, uint64_t))v101)(v62, v64);
  uint64_t v76 = swift_allocObject();
  *(void *)(v76 + 16) = sub_24093C534;
  *(void *)(v76 + 24) = v149;
  swift_retain();
  sub_2409542E8();
  sub_24082A230(0, &qword_26AFCDD38, (uint64_t (*)(uint64_t))sub_24083FC00, v107);
  sub_240847F18();
  sub_240841658();
  uint64_t v77 = v127;
  uint64_t v78 = v128;
  sub_2409545D8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v131 + 8))(v75, v78);
  uint64_t v79 = v74;
  unint64_t v80 = sub_240829F20(v74);
  uint64_t v81 = sub_240951A28();
  uint64_t v82 = (uint64_t)v133;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v133, 1, 1, v81);
  uint64_t v83 = (uint64_t)v137;
  uint64_t v84 = (uint64_t)v137 + *(int *)(v139 + 72);
  *uint64_t v137 = v79;
  *(void *)(v83 + 8) = v80;
  sub_240849700(v82, v84, (uint64_t (*)(void))sub_240849BDC);
  sub_240829E50(&qword_26AFCF198, (void (*)(uint64_t))sub_24084381C);
  uint64_t v85 = v130;
  uint64_t v86 = v134;
  sub_2409544C8();
  sub_240849B7C(v83, (uint64_t (*)(void))sub_24083FC00);
  (*(void (**)(char *, uint64_t))(v135 + 8))(v77, v86);
  type metadata accessor for AllAccountsLabRecordsData(0);
  sub_240829E50(&qword_26AFCEE60, (void (*)(uint64_t))sub_2408465BC);
  uint64_t v87 = v132;
  uint64_t v88 = v136;
  sub_2409544F8();
  (*(void (**)(char *, uint64_t))(v138 + 8))(v85, v88);
  sub_240829E50(&qword_26AFCF4E0, (void (*)(uint64_t))sub_240843C78);
  sub_240829E50(&qword_26AFCF470, (void (*)(uint64_t))sub_240845B14);
  uint64_t v89 = v142;
  uint64_t v90 = v87;
  uint64_t v91 = v126;
  uint64_t v92 = v140;
  uint64_t v93 = v148;
  sub_2409544E8();
  sub_240829E50(&qword_26AFCF440, (void (*)(uint64_t))sub_240847B54);
  uint64_t v94 = v143;
  uint64_t v95 = sub_240954498();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v144 + 8))(v89, v94);
  (*(void (**)(char *, uint64_t))(v141 + 8))(v90, v92);
  (*(void (**)(char *, uint64_t))(v129 + 8))(v93, v91);
  (*(void (**)(char *, uint64_t))(v124 + 8))(v150, v151);
  (*(void (**)(char *, uint64_t))(v123 + 8))(v146, v147);
  return v95;
}

uint64_t sub_240829E08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240829E50(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240829E98(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240828514(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240829EDC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24082A13C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_240829F20(uint64_t a1)
{
  sub_24082A2E4();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_240932ED8();
  uint64_t v7 = sub_240955428();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = (uint64_t)&v6[*(int *)(v3 + 48)];
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v25[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_24093335C(v13, (uint64_t)v6, (uint64_t (*)(void))sub_24082A2E4);
    unint64_t result = sub_240931478((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = sub_240951A98();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v6, v19);
    uint64_t v20 = v8[7];
    uint64_t v21 = type metadata accessor for AccountNewRecordsData(0);
    unint64_t result = sub_240932FCC(v10, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v17);
    uint64_t v22 = v8[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    void v8[2] = v24;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_24082A13C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    sub_24093C214(255, (unint64_t *)&qword_26AFCC610, (unint64_t *)&qword_26AFD05A0);
    uint64_t v7 = v6;
    unint64_t v8 = sub_24083F3C0();
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_24082A1CC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240954308();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_24082A230(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = sub_24083F3C0();
    unint64_t v9 = a4(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_24082A2AC(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_24082A2E4()
{
  if (!qword_26AFCC6A0)
  {
    sub_240951A98();
    type metadata accessor for AccountNewRecordsData(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AFCC6A0);
    }
  }
}

uint64_t sub_24082A354(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t v115 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v116 = v3;
  uint64_t v118 = (uint64_t)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_240952F68();
  uint64_t v98 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  uint64_t v97 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24082EE18(0, &qword_26AFCECB8, MEMORY[0x263F90210], MEMORY[0x263F8D8F0]);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v92 = (uint64_t)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v93 = (char *)&v79 - v8;
  uint64_t v83 = sub_240951C28();
  uint64_t v89 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  uint64_t v88 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_2409528B8();
  uint64_t v86 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v85 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24082B474(0, (unint64_t *)&qword_26AFCEE78, (uint64_t (*)(uint64_t))sub_240841598, sub_240841624, MEMORY[0x263F459F0]);
  uint64_t v96 = v11;
  uint64_t v95 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v91 = (char *)&v79 - v12;
  sub_240847D2C();
  uint64_t v103 = v13;
  uint64_t v102 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v99 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240845BC0();
  uint64_t v105 = v15;
  uint64_t v104 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v101 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408443F8();
  uint64_t v112 = v17;
  uint64_t v109 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v106 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240844FA8();
  uint64_t v113 = v19;
  uint64_t v110 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v107 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24082B474(0, &qword_26AFCEE18, (uint64_t (*)(uint64_t))sub_240844FA8, sub_240845094, MEMORY[0x263EFDAA0]);
  uint64_t v114 = v21;
  uint64_t v111 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v108 = (char *)&v79 - v22;
  uint64_t v82 = sub_240951A98();
  uint64_t v81 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  unint64_t v80 = (char *)&v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_2409525A8();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v79 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240952808();
  uint64_t v28 = (void *)sub_2409527D8();
  sub_240951F38();
  sub_2408304E8(&v123, v124);
  uint64_t v29 = (void *)sub_240951E98();
  id v30 = objc_msgSend(v29, sel_profileIdentifier);

  uint64_t v94 = sub_240952788();
  sub_2408371B8((uint64_t)&v123);
  uint64_t v31 = (void *)sub_2409527D8();
  sub_240951F38();
  sub_2408304E8(&v123, v124);
  uint64_t v32 = (void *)sub_240951E98();
  id v33 = objc_msgSend(v32, sel_profileIdentifier);

  uint64_t v120 = sub_2409527B8();
  sub_2408371B8((uint64_t)&v123);
  sub_240951F38();
  sub_2408304E8(&v123, v124);
  sub_240951E98();
  sub_240953248();
  swift_allocObject();
  uint64_t v119 = sub_240953238();
  sub_2408371B8((uint64_t)&v123);
  sub_240951F38();
  if (qword_26AFCCC98 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_24083F214(v24, (uint64_t)qword_26AFD0818);
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  uint64_t v84 = v24;
  v35(v27, v34, v24);
  uint64_t v117 = a1;
  uint64_t v36 = (void *)sub_240951F68();
  uint64_t v37 = (void *)sub_240951C68();
  sub_240952588();
  if (v37)
  {
    uint64_t v121 = 0x656C69666F72505BLL;
    unint64_t v122 = 0xE90000000000003ALL;
    id v38 = v37;
    id v39 = objc_msgSend(v38, sel_identifier);
    uint64_t v40 = v80;
    sub_240951A78();

    sub_240951A48();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v40, v82);
    sub_2409548A8();
    swift_bridgeObjectRelease();
    sub_2409548A8();

    unint64_t v41 = v121;
    unint64_t v42 = v122;
  }
  else
  {
    unint64_t v42 = 0x800000024095C1A0;
    unint64_t v41 = 0xD000000000000013;
  }
  uint64_t v121 = v41;
  unint64_t v122 = v42;
  sub_2409548A8();

  swift_bridgeObjectRelease();
  uint64_t v43 = v121;
  unint64_t v44 = v122;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v84);
  type metadata accessor for FeedItemContextChangeGenerator();
  uint64_t v45 = swift_allocObject();
  sub_24083AB20(&v123, v45 + 16);
  *(void *)(v45 + 56) = v43;
  *(void *)(v45 + 64) = v44;
  uint64_t v46 = v86;
  id v47 = v85;
  uint64_t v48 = v87;
  (*(void (**)(char *, void, uint64_t))(v86 + 104))(v85, *MEMORY[0x263F45FE8], v87);
  uint64_t v49 = sub_240953198();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v48);
  uint64_t v50 = v89;
  id v51 = v88;
  uint64_t v52 = v83;
  (*(void (**)(char *, void, uint64_t))(v89 + 104))(v88, *MEMORY[0x263F455A8], v83);
  sub_240951C18();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v52);
  uint64_t v53 = sub_240954038();
  uint64_t v54 = (uint64_t)v93;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v93, 1, 1, v53);
  *(void *)&long long v123 = v49;
  sub_24081B654(v54, v92);
  sub_240841598();
  sub_240841624();
  swift_retain();
  uint64_t v55 = v91;
  sub_240954198();
  sub_2408499F4(v54, &qword_26AFCECB8, MEMORY[0x263F90210]);
  swift_release();
  uint64_t v56 = v98;
  uint64_t v57 = v97;
  uint64_t v58 = v100;
  (*(void (**)(char *, void, uint64_t))(v98 + 104))(v97, *MEMORY[0x263F46128], v100);
  uint64_t v59 = sub_2409531F8();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v58);
  *(void *)&long long v123 = v59;
  sub_240841338();
  sub_240846484();
  sub_24083ED84(&qword_26AFCDD70, (void (*)(uint64_t))sub_240841338);
  uint64_t v60 = v99;
  uint64_t v61 = v96;
  sub_2409544E8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v55, v61);
  uint64_t v62 = v118;
  sub_24083B4E8(v117, v118);
  unint64_t v63 = (*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80);
  unint64_t v64 = (v116 + v63 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v65 = swift_allocObject();
  uint64_t v66 = v90;
  *(void *)(v65 + 16) = v94;
  *(void *)(v65 + 24) = v66;
  sub_24083B484(v62, v65 + v63);
  *(void *)(v65 + v64) = v66;
  uint64_t v67 = swift_allocObject();
  *(void *)(v67 + 16) = sub_24091AF50;
  *(void *)(v67 + 24) = v65;
  sub_24082EE18(0, &qword_26AFCC600, MEMORY[0x263F45630], MEMORY[0x263F8D488]);
  sub_24083ED84(&qword_26AFCED30, (void (*)(uint64_t))sub_240847D2C);
  swift_retain();
  uint64_t v68 = v101;
  uint64_t v69 = v103;
  sub_2409544F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v102 + 8))(v60, v69);
  sub_24083FF94();
  swift_retain();
  uint64_t v70 = v106;
  uint64_t v71 = v105;
  sub_2409541B8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v68, v71);
  *(void *)(swift_allocObject() + 16) = v66;
  sub_2408418D4();
  sub_24083ED84(&qword_26AFCF0A0, (void (*)(uint64_t))sub_2408443F8);
  sub_24083ED84(&qword_26AFCDCC0, (void (*)(uint64_t))sub_2408418D4);
  uint64_t v72 = v107;
  uint64_t v73 = v112;
  sub_240954508();
  swift_release();
  (*(void (**)(char *, uint64_t))(v109 + 8))(v70, v73);
  *(void *)&long long v123 = MEMORY[0x263F8EE78];
  sub_240845094();
  uint64_t v74 = v108;
  uint64_t v75 = v113;
  sub_2409544C8();
  (*(void (**)(char *, uint64_t))(v110 + 8))(v72, v75);
  sub_2408468B0();
  uint64_t v76 = v114;
  uint64_t v77 = sub_240954498();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v111 + 8))(v74, v76);
  return v77;
}

void sub_24082B474(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_24082B4F4(uint64_t a1)
{
  sub_24082EE7C(0, &qword_26AFCECB8, MEMORY[0x263F90210], MEMORY[0x263F8D8F0]);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v112 = (uint64_t)&v101 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v111 = (char *)&v101 - v5;
  uint64_t v110 = sub_240951C28();
  uint64_t v109 = *(void *)(v110 - 8);
  MEMORY[0x270FA5388](v110);
  uint64_t v108 = (char *)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24082C714(0, &qword_26AFCF468, (uint64_t (*)(uint64_t))sub_240841D38, sub_240841DA0, MEMORY[0x263F459F0]);
  uint64_t v115 = v7;
  uint64_t v114 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v113 = (char *)&v101 - v8;
  sub_240844338();
  uint64_t v118 = v9;
  uint64_t v117 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v116 = (char *)&v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240844E9C();
  uint64_t v122 = v11;
  uint64_t v121 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v120 = (char *)&v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408441A8();
  uint64_t v130 = v13;
  uint64_t v127 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v124 = (char *)&v101 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408448C0();
  uint64_t v131 = v15;
  uint64_t v128 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v125 = (char *)&v101 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24082C714(0, &qword_26AFCF458, (uint64_t (*)(uint64_t))sub_2408448C0, sub_2408449AC, MEMORY[0x263EFDAA0]);
  uint64_t v129 = v17;
  uint64_t v126 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  long long v123 = (char *)&v101 - v18;
  uint64_t v19 = sub_240951A98();
  uint64_t v133 = *(void *)(v19 - 8);
  uint64_t v134 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v132 = (char *)&v101 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_2409525A8();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v135 = (char *)&v101 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v101 - v25;
  uint64_t v27 = sub_240951FB8();
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v107 = (char *)&v101 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)&v101 - v30;
  uint64_t v119 = v32;
  id v33 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
  uint64_t v138 = v34;
  uint64_t v105 = v32 + 16;
  uint64_t v104 = v33;
  ((void (*)(char *, uint64_t))v33)((char *)&v101 - v30, a1);
  sub_240951F38();
  uint64_t v35 = v146;
  uint64_t v36 = v147;
  sub_2408304E8(&v145, v146);
  id v37 = sub_24083CA3C(v35, v36);
  sub_240952808();
  id v38 = (void *)sub_2409527D8();
  sub_240951F38();
  sub_2408304E8(&v142, v144);
  id v39 = (void *)sub_240951E98();
  id v40 = objc_msgSend(v39, sel_profileIdentifier);

  uint64_t v41 = sub_240952788();
  sub_2408371B8((uint64_t)&v142);
  type metadata accessor for NewRecordsDataProvider();
  unint64_t v42 = (void *)swift_allocObject();
  v42[2] = v37;
  id v43 = v37;
  id v44 = objc_msgSend(v43, sel_healthStore);
  sub_240952FD8();
  swift_allocObject();
  uint64_t v45 = sub_240952FB8();

  v42[3] = v41;
  v42[4] = v45;
  uint64_t v137 = v42;
  sub_2408371B8((uint64_t)&v145);
  sub_240951F38();
  uint64_t v46 = *MEMORY[0x263F45E68];
  uint64_t v140 = v22;
  id v47 = *(void (**)(char *, void, uint64_t))(v22 + 104);
  uint64_t v136 = v21;
  uint64_t v102 = v47;
  v47(v26, v46, v21);
  uint64_t v141 = v31;
  uint64_t v48 = (void *)sub_240951F68();
  uint64_t v49 = (void *)sub_240951C68();
  uint64_t v103 = v26;
  sub_240952588();
  unint64_t v50 = 0x800000024095C1A0;
  unint64_t v101 = 0x800000024095C1A0;
  if (v49)
  {
    uint64_t v142 = 0x656C69666F72505BLL;
    unint64_t v143 = 0xE90000000000003ALL;
    id v51 = v49;
    id v52 = objc_msgSend(v51, sel_identifier);
    uint64_t v53 = v132;
    sub_240951A78();

    sub_240951A48();
    (*(void (**)(char *, uint64_t))(v133 + 8))(v53, v134);
    sub_2409548A8();
    swift_bridgeObjectRelease();
    sub_2409548A8();

    unint64_t v54 = v142;
    unint64_t v50 = v143;
  }
  else
  {
    unint64_t v54 = 0xD000000000000013;
  }
  uint64_t v142 = v54;
  unint64_t v143 = v50;
  sub_2409548A8();

  swift_bridgeObjectRelease();
  uint64_t v55 = v142;
  unint64_t v56 = v143;
  uint64_t v57 = *(void (**)(char *, uint64_t))(v140 + 8);
  uint64_t v58 = v136;
  v140 += 8;
  v57(v103, v136);
  type metadata accessor for FeedItemContextChangeGenerator();
  uint64_t v59 = swift_allocObject();
  sub_24083AB20(&v145, v59 + 16);
  *(void *)(v59 + 56) = v55;
  *(void *)(v59 + 64) = v56;
  uint64_t v103 = (char *)v59;
  sub_240951F38();
  v102(v135, *MEMORY[0x263F45EB0], v58);
  uint64_t v60 = (void *)sub_240951F68();
  uint64_t v61 = (void *)sub_240951C68();
  sub_240952588();
  if (v61)
  {
    uint64_t v142 = 0x656C69666F72505BLL;
    unint64_t v143 = 0xE90000000000003ALL;
    id v62 = v61;
    id v63 = objc_msgSend(v62, sel_identifier);
    unint64_t v64 = v132;
    sub_240951A78();

    sub_240951A48();
    (*(void (**)(char *, uint64_t))(v133 + 8))(v64, v134);
    sub_2409548A8();
    swift_bridgeObjectRelease();
    sub_2409548A8();

    unint64_t v65 = v142;
    unint64_t v66 = v143;
  }
  else
  {
    unint64_t v65 = 0xD000000000000013;
    unint64_t v66 = v101;
  }
  uint64_t v142 = v65;
  unint64_t v143 = v66;
  sub_2409548A8();

  swift_bridgeObjectRelease();
  uint64_t v67 = v142;
  unint64_t v68 = v143;
  v57(v135, v136);
  uint64_t v69 = swift_allocObject();
  sub_24083AB20(&v145, v69 + 16);
  uint64_t v140 = v69;
  *(void *)(v69 + 56) = v67;
  *(void *)(v69 + 64) = v68;
  uint64_t v70 = sub_240828600();
  uint64_t v71 = v109;
  uint64_t v72 = v108;
  uint64_t v73 = v110;
  (*(void (**)(char *, void, uint64_t))(v109 + 104))(v108, *MEMORY[0x263F455A8], v110);
  sub_240951C18();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v73);
  uint64_t v74 = sub_240954038();
  uint64_t v75 = (uint64_t)v111;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v111, 1, 1, v74);
  *(void *)&long long v145 = v70;
  uint64_t v76 = (uint64_t (*)(uint64_t))MEMORY[0x263F90210];
  sub_24081B7E8(v75, v112, &qword_26AFCECB8, MEMORY[0x263F90210]);
  sub_240841D38();
  sub_240841DA0();
  swift_retain();
  uint64_t v77 = v113;
  sub_240954198();
  sub_24081B5E4(v75, &qword_26AFCECB8, v76);
  swift_release();
  uint64_t v78 = v107;
  uint64_t v79 = v138;
  v104(v107, v141, v138);
  uint64_t v80 = v119;
  unint64_t v81 = (*(unsigned __int8 *)(v119 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80);
  unint64_t v82 = (v106 + v81 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v83 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v80 + 32))(v83 + v81, v78, v79);
  *(void *)(v83 + v82) = v139;
  uint64_t v84 = swift_allocObject();
  *(void *)(v84 + 16) = sub_240950E08;
  *(void *)(v84 + 24) = v83;
  sub_240840084(0);
  sub_240846520();
  uint64_t v85 = v116;
  uint64_t v86 = v115;
  sub_240954548();
  swift_release();
  (*(void (**)(char *, uint64_t))(v114 + 8))(v77, v86);
  uint64_t v87 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
  sub_240841BE4(0, &qword_26AFCDC88, MEMORY[0x263EFDCF0]);
  sub_24082C6CC(&qword_26AFCF4C0, (void (*)(uint64_t))sub_240844338);
  sub_240841CF4((unint64_t *)&qword_26AFCDC80, &qword_26AFCDC88, v87);
  uint64_t v88 = v120;
  uint64_t v89 = v118;
  sub_240954508();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v85, v89);
  uint64_t v90 = swift_allocObject();
  uint64_t v91 = v140;
  *(void *)(v90 + 16) = v103;
  *(void *)(v90 + 24) = v91;
  sub_24083FEFC(0, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
  sub_24082C6CC(&qword_26AFCF490, (void (*)(uint64_t))sub_240844E9C);
  swift_retain();
  swift_retain();
  uint64_t v92 = v124;
  uint64_t v93 = v122;
  sub_240954548();
  swift_release();
  (*(void (**)(char *, uint64_t))(v121 + 8))(v88, v93);
  *(void *)(swift_allocObject() + 16) = v139;
  sub_2408418D4();
  sub_24082C6CC(&qword_26AFCF4D0, (void (*)(uint64_t))sub_2408441A8);
  sub_24082C6CC(&qword_26AFCDCC0, (void (*)(uint64_t))sub_2408418D4);
  uint64_t v94 = v125;
  uint64_t v95 = v130;
  sub_240954508();
  swift_release();
  (*(void (**)(char *, uint64_t))(v127 + 8))(v92, v95);
  *(void *)&long long v145 = MEMORY[0x263F8EE78];
  sub_2408449AC();
  uint64_t v96 = v123;
  uint64_t v97 = v131;
  sub_2409544C8();
  (*(void (**)(char *, uint64_t))(v128 + 8))(v94, v97);
  sub_240846780();
  uint64_t v98 = v129;
  uint64_t v99 = sub_240954498();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v126 + 8))(v96, v98);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v141, v138);
  return v99;
}

uint64_t sub_24082C6CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24082C714(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_24082C794(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t v41 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v41 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v39 = (uint64_t)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24084307C();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v42 = v5;
  uint64_t v43 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v35 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240843624();
  uint64_t v48 = v8;
  uint64_t v50 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v55 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240843710();
  uint64_t v51 = v10;
  uint64_t v53 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v44 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240843B1C();
  uint64_t v52 = v12;
  uint64_t v54 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v46 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24084585C(0, &qword_26AFCDA38, (void (*)(uint64_t))sub_240843B1C, (void (*)(void))sub_240843BB0);
  uint64_t v47 = v14;
  uint64_t v49 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v45 = (char *)&v34 - v15;
  uint64_t v38 = a1;
  uint64_t v56 = sub_2408209D0();
  sub_2409542E8();
  sub_2408414EC();
  sub_24084210C();
  uint64_t v40 = MEMORY[0x263EFDCF8];
  sub_24082EEE0(&qword_26AFCDD50, (void (*)(uint64_t))sub_2408414EC);
  sub_2408421E8();
  sub_240954568();
  swift_release();
  id v37 = type metadata accessor for HealthRecordsGeneratorContext;
  uint64_t v16 = v39;
  sub_24083D4E0(a1, v39, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  unint64_t v17 = (*(unsigned __int8 *)(v41 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v1;
  sub_24082CF54(v16, v18 + v17, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  sub_24083F7C4();
  sub_24082F050(0, &qword_26AFCDDA0, (uint64_t (*)(uint64_t))sub_24083F7C4, MEMORY[0x263EFDCF0]);
  uint64_t v41 = MEMORY[0x263EFDC28];
  sub_24082EEE0(&qword_26AFCDB78, (void (*)(uint64_t))sub_24084307C);
  sub_240841110();
  uint64_t v19 = v42;
  uint64_t v20 = v35;
  sub_240954578();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v20, v19);
  sub_24083D4E0(v38, v16, (uint64_t (*)(void))v37);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v36;
  sub_24082CF54(v16, v21 + v17, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_2408FFFD0;
  *(void *)(v22 + 24) = v21;
  uint64_t v23 = (uint64_t (*)(uint64_t, void, uint64_t, void))MEMORY[0x263EFDCF0];
  sub_2408412B8(0, (unint64_t *)&qword_26AFCDD78, MEMORY[0x263EFDCF0]);
  sub_24082EEE0(&qword_26AFCDB68, (void (*)(uint64_t))sub_240843624);
  sub_240840D34(&qword_26AFCDD70, (unint64_t *)&qword_26AFCDD78, v23);
  uint64_t v24 = v44;
  uint64_t v25 = v48;
  uint64_t v26 = v55;
  sub_240954578();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v26, v25);
  sub_24082EEE0(&qword_26AFCDB58, (void (*)(uint64_t))sub_240843710);
  uint64_t v27 = v46;
  uint64_t v28 = v51;
  sub_240954558();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v24, v28);
  sub_240843BB0();
  uint64_t v29 = v45;
  uint64_t v30 = v52;
  sub_2409544F8();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v27, v30);
  sub_2408458D4();
  uint64_t v31 = v47;
  uint64_t v32 = sub_240954498();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v29, v31);
  return v32;
}

uint64_t sub_24082CF54(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24082CFBC(uint64_t a1)
{
  uint64_t v167 = sub_240951EF8();
  uint64_t v166 = *(void *)(v167 - 8);
  MEMORY[0x270FA5388](v167);
  v165 = (char *)v116 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = sub_240951F18();
  uint64_t v168 = *(void *)(v169 - 8);
  MEMORY[0x270FA5388](v169);
  v164 = (char *)v116 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240848488(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v138 = (uint64_t)v116 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v134 = (char *)v116 - v7;
  uint64_t v133 = sub_240951C28();
  uint64_t v127 = *(void *)(v133 - 8);
  MEMORY[0x270FA5388](v133);
  uint64_t v126 = (char *)v116 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24084694C();
  uint64_t v122 = v9;
  uint64_t v123 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v118 = (char *)v116 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240847F4C();
  uint64_t v124 = v11;
  uint64_t v125 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v119 = (char *)v116 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24084470C();
  uint64_t v131 = v13;
  uint64_t v129 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v128 = (char *)v116 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v120 = (char *)v116 - v16;
  sub_2408462C0();
  uint64_t v136 = v17;
  uint64_t v137 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v130 = (char *)v116 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240845A08();
  uint64_t v139 = v19;
  uint64_t v140 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v132 = (char *)v116 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240842BC0();
  uint64_t v144 = v21;
  uint64_t v145 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  v179 = (char *)v116 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240843518();
  uint64_t v146 = v23;
  uint64_t v147 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v142 = (char *)v116 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240843A88();
  uint64_t v149 = v25;
  uint64_t v151 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  unint64_t v143 = (char *)v116 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24084402C();
  uint64_t v154 = v27;
  uint64_t v156 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  v148 = (char *)v116 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240844CA4();
  uint64_t v157 = v29;
  uint64_t v158 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  v150 = (char *)v116 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240843908();
  uint64_t v160 = v31;
  uint64_t v161 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  v155 = (char *)v116 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240846A00();
  uint64_t v162 = v33;
  uint64_t v163 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  v159 = (char *)v116 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_240951A28();
  uint64_t v170 = v35;
  v116[0] = *(void *)(v35 - 8);
  uint64_t v121 = *(void *)(v116[0] + 64);
  uint64_t v36 = MEMORY[0x270FA5388](v35);
  uint64_t v38 = (char *)v116 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v36);
  v180 = (char *)v116 - v39;
  uint64_t v183 = sub_240951FB8();
  uint64_t v173 = *(void *)(v183 - 8);
  uint64_t v178 = *(void *)(v173 + 64);
  uint64_t v40 = MEMORY[0x270FA5388](v183);
  v172 = (char *)v116 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v40);
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
  uint64_t v176 = v42 + 16;
  v177 = v43;
  v182 = (char *)v116 - v44;
  ((void (*)(char *, uint64_t))v43)((char *)v116 - v44, a1);
  sub_240952808();
  uint64_t v45 = (void *)sub_2409527D8();
  sub_240951F38();
  sub_2408304E8(&v185, v186);
  uint64_t v46 = (void *)sub_240951E98();
  id v47 = objc_msgSend(v46, sel_profileIdentifier);

  uint64_t v171 = sub_2409527B8();
  sub_2408371B8((uint64_t)&v185);
  sub_2409517C8();
  swift_allocObject();
  uint64_t v174 = sub_2409517B8();
  sub_240951F28();
  type metadata accessor for SharableModelContextChangeGenerator();
  uint64_t v135 = swift_allocObject();
  sub_24083AB20(&v185, v135 + 16);
  uint64_t v117 = v38;
  sub_240951A18();
  sub_240951998();
  uint64_t v48 = v116[0];
  uint64_t v49 = *(void (**)(char *, uint64_t))(v116[0] + 8);
  uint64_t v152 = v116[0] + 8;
  unint64_t v153 = v49;
  v49(v38, v35);
  uint64_t v50 = (void *)sub_2409527D8();
  sub_240951F38();
  sub_2408304E8(&v185, v186);
  uint64_t v51 = (void *)sub_240951E98();
  id v52 = objc_msgSend(v51, sel_profileIdentifier);

  uint64_t v181 = sub_240952788();
  sub_2408371B8((uint64_t)&v185);
  uint64_t v53 = v175;
  *(void *)&long long v185 = sub_24082C794(a1);
  LOBYTE(v184) = 0;
  uint64_t v54 = (uint64_t (*)(uint64_t, void, uint64_t, void))MEMORY[0x263EFDCF0];
  sub_2408412B8(0, (unint64_t *)&qword_26AFCDD78, MEMORY[0x263EFDCF0]);
  v116[1] = MEMORY[0x263EFDCF8];
  sub_240840D34(&qword_26AFCDD70, (unint64_t *)&qword_26AFCDD78, v54);
  uint64_t v55 = v118;
  sub_2409544C8();
  swift_release();
  *(void *)&long long v185 = sub_240953F98();
  sub_240841DD4();
  uint64_t v141 = MEMORY[0x263EFDAA8];
  sub_24082EEE0(&qword_26AFCD9C0, (void (*)(uint64_t))sub_24084694C);
  sub_24082EEE0(&qword_26AFCF2A8, (void (*)(uint64_t))sub_240841DD4);
  uint64_t v56 = v119;
  uint64_t v57 = v122;
  sub_2409544E8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v123 + 8))(v55, v57);
  sub_24082EEE0(&qword_26AFCED10, (void (*)(uint64_t))sub_240847F4C);
  uint64_t v58 = v120;
  uint64_t v59 = v124;
  sub_240954518();
  (*(void (**)(char *, uint64_t))(v125 + 8))(v56, v59);
  uint64_t v60 = v127;
  uint64_t v61 = v126;
  uint64_t v62 = v133;
  (*(void (**)(char *, void, uint64_t))(v127 + 104))(v126, *MEMORY[0x263F455A8], v133);
  sub_240951C18();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v62);
  uint64_t v63 = sub_240954038();
  uint64_t v64 = (uint64_t)v134;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v134, 1, 1, v63);
  uint64_t v65 = v129;
  uint64_t v66 = v131;
  (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v128, v58, v131);
  sub_24083D4E0(v64, v138, (uint64_t (*)(void))sub_240848488);
  sub_24082EEE0(&qword_26AFCF040, (void (*)(uint64_t))sub_24084470C);
  uint64_t v67 = v130;
  sub_240954198();
  sub_24083B1D4(v64, (uint64_t (*)(void))sub_240848488);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v58, v66);
  sub_24082EF80(0, &qword_26AFCDEB8, &qword_26AFCDF40, 0x263F0A4E8, MEMORY[0x263F8D488]);
  sub_24082EEE0(&qword_26AFCEEA0, (void (*)(uint64_t))sub_2408462C0);
  unint64_t v68 = v132;
  uint64_t v69 = v136;
  sub_2409544F8();
  (*(void (**)(char *, uint64_t))(v137 + 8))(v67, v69);
  sub_2409542E8();
  sub_2408422B8();
  sub_240845AE0();
  sub_24082EEE0(&qword_26AFCDBB8, (void (*)(uint64_t))sub_2408422B8);
  uint64_t v70 = v139;
  sub_2409545D8();
  (*(void (**)(char *, uint64_t))(v140 + 8))(v68, v70);
  uint64_t v71 = v172;
  uint64_t v72 = v183;
  v177(v172, v182, v183);
  uint64_t v73 = v117;
  uint64_t v74 = v170;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v117, v180, v170);
  uint64_t v75 = v173;
  uint64_t v138 = *(unsigned __int8 *)(v173 + 80);
  uint64_t v76 = (v138 + 40) & ~v138;
  uint64_t v139 = v138 | 7;
  uint64_t v77 = v48;
  unint64_t v78 = (v178 + *(unsigned __int8 *)(v48 + 80) + v76) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  uint64_t v79 = (char *)swift_allocObject();
  *((void *)v79 + 2) = v53;
  uint64_t v80 = v181;
  *((void *)v79 + 3) = v171;
  *((void *)v79 + 4) = v80;
  uint64_t v81 = v75 + 32;
  unint64_t v82 = *(void (**)(char *, char *, uint64_t))(v75 + 32);
  uint64_t v137 = v81;
  v82(&v79[v76], v71, v72);
  (*(void (**)(char *, char *, uint64_t))(v77 + 32))(&v79[v78], v73, v74);
  sub_24082EF80(0, &qword_26AFCDF78, &qword_26AFCDF70, 0x263F464E0, MEMORY[0x263F8D8F0]);
  uint64_t v83 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
  sub_24084105C(0, &qword_26AFCDDB0, MEMORY[0x263EFDCF0]);
  uint64_t v140 = MEMORY[0x263EFDC28];
  sub_24082EEE0(&qword_26AFCF218, (void (*)(uint64_t))sub_240842BC0);
  sub_24083F304(&qword_26AFCDDA8, &qword_26AFCDDB0, v83);
  swift_retain();
  swift_retain();
  uint64_t v84 = v142;
  uint64_t v85 = v144;
  uint64_t v86 = v179;
  sub_240954578();
  swift_release();
  (*(void (**)(char *, uint64_t))(v145 + 8))(v86, v85);
  sub_24082EEE0(&qword_26AFCF1A8, (void (*)(uint64_t))sub_240843518);
  uint64_t v87 = v143;
  uint64_t v88 = v146;
  sub_240954558();
  (*(void (**)(char *, uint64_t))(v147 + 8))(v84, v88);
  uint64_t v89 = v172;
  uint64_t v90 = v183;
  v177(v172, v182, v183);
  uint64_t v91 = (v138 + 24) & ~v138;
  unint64_t v92 = (v178 + v91 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v93 = swift_allocObject();
  *(void *)(v93 + 16) = v174;
  v82((char *)(v93 + v91), v89, v90);
  uint64_t v94 = v175;
  *(void *)(v93 + v92) = v175;
  sub_240840050(0);
  sub_24082EEE0(&qword_26AFCF138, (void (*)(uint64_t))sub_240843A88);
  swift_retain();
  uint64_t v95 = v148;
  uint64_t v96 = v149;
  sub_240954548();
  swift_release();
  (*(void (**)(char *, uint64_t))(v151 + 8))(v87, v96);
  *(void *)(swift_allocObject() + 16) = v94;
  uint64_t v97 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
  sub_24082F050(0, &qword_26AFCDC98, (uint64_t (*)(uint64_t))sub_240840050, MEMORY[0x263EFDCF0]);
  sub_24082EEE0(&qword_26AFCF0F0, (void (*)(uint64_t))sub_24084402C);
  sub_2408419F0();
  uint64_t v98 = v150;
  uint64_t v99 = v154;
  sub_240954508();
  swift_release();
  (*(void (**)(char *, uint64_t))(v156 + 8))(v95, v99);
  swift_retain();
  sub_2409542E8();
  sub_24083FE78(0);
  sub_24082F050(0, &qword_26AFCDCD8, (uint64_t (*)(uint64_t))sub_24083FE78, v97);
  sub_24082EEE0(&qword_26AFCEFF0, (void (*)(uint64_t))sub_240844CA4);
  sub_24084184C();
  uint64_t v100 = v155;
  uint64_t v101 = v157;
  sub_240954578();
  swift_release();
  (*(void (**)(char *, uint64_t))(v158 + 8))(v98, v101);
  uint64_t v102 = v182;
  sub_240951FA8();
  sub_240951F68();
  sub_24082ED50(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v103 = sub_240951C08();
  uint64_t v104 = *(void *)(v103 - 8);
  unint64_t v105 = (*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
  uint64_t v106 = swift_allocObject();
  *(_OWORD *)(v106 + 16) = xmmword_240956800;
  (*(void (**)(unint64_t, void, uint64_t))(v104 + 104))(v106 + v105, *MEMORY[0x263F45520], v103);
  (*(void (**)(char *, void, uint64_t))(v166 + 104))(v165, *MEMORY[0x263F45690], v167);
  uint64_t v107 = MEMORY[0x263F8EE78];
  uint64_t v108 = v164;
  sub_240951F08();
  sub_24082EEE0(&qword_26AFCF168, (void (*)(uint64_t))sub_240843908);
  uint64_t v109 = v108;
  uint64_t v110 = v160;
  uint64_t v111 = sub_240954488();
  (*(void (**)(char *, uint64_t))(v168 + 8))(v109, v169);
  sub_2408371B8((uint64_t)&v185);
  (*(void (**)(char *, uint64_t))(v161 + 8))(v100, v110);
  uint64_t v184 = v107;
  *(void *)&long long v185 = v111;
  uint64_t v112 = v159;
  sub_2409544C8();
  swift_release();
  sub_24082EEE0(&qword_26AFCEDF0, (void (*)(uint64_t))sub_240846A00);
  uint64_t v113 = v162;
  uint64_t v114 = sub_240954498();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v163 + 8))(v112, v113);
  v153(v180, v170);
  (*(void (**)(char *, uint64_t))(v173 + 8))(v102, v183);
  return v114;
}

void sub_24082E9CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24082EA30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24082EA94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24082EAF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24082EB5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24082EBC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24082EC24(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24082EC88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24082ECEC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24082ED50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24082EDB4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24082EE18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24082EE7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_24082EEE0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24082EF28(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_24083EDCC(255, a3);
    unint64_t v4 = sub_240954678();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_24082EF80(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_24083EDCC(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_24082EFE8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_24083EDCC(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_24082F050(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    uint64_t v8 = sub_2408484BC(255, qword_26AFD07C0);
    unint64_t v9 = a4(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void *sub_24082F0DC(uint64_t a1)
{
  uint64_t v3 = *v1;
  id v47 = v1;
  uint64_t v55 = v3;
  uint64_t v4 = type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t v53 = *(void *)(v4 - 8);
  uint64_t v52 = *(void *)(v53 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v51 = (uint64_t)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408477D4();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v57 = v6;
  uint64_t v58 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v54 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240847280();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v59 = v9;
  uint64_t v60 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v56 = (char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_240951EF8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_240951F18();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = a1;
  sub_24083B4E8(a1, (uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords34RemovedCategoriesGeneratorPipeline_context);
  v46[1] = sub_240951F68();
  uint64_t v50 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_24083110C(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v20 = sub_240951C08();
  uint64_t v21 = *(void *)(v20 - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = swift_allocObject();
  long long v49 = xmmword_240956800;
  *(_OWORD *)(v23 + 16) = xmmword_240956800;
  (*(void (**)(unint64_t, void, uint64_t))(v21 + 104))(v23 + v22, *MEMORY[0x263F454C8], v20);
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F45688], v12);
  sub_240951F08();
  uint64_t v24 = v47;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))((uint64_t)v47 + OBJC_IVAR____TtC13HealthRecords34RemovedCategoriesGeneratorPipeline_domain, v19, v16);
  uint64_t v25 = v48;
  sub_240951F38();
  sub_2408304E8(v61, v62);
  uint64_t v26 = (void *)sub_240951E98();
  objc_msgSend(v26, sel_supportsHealthRecords);

  sub_2408371B8((uint64_t)v61);
  sub_240952808();
  uint64_t v27 = (void *)sub_2409527D8();
  sub_240951F38();
  sub_2408304E8(v61, v62);
  uint64_t v28 = (void *)sub_240951E98();
  id v29 = objc_msgSend(v28, sel_profileIdentifier);

  uint64_t v30 = sub_2409527C8();
  sub_2408371B8((uint64_t)v61);
  *(void *)((char *)v24 + OBJC_IVAR____TtC13HealthRecords34RemovedCategoriesGeneratorPipeline_udcChangeProvider) = v30;
  v61[0] = sub_240954008();
  uint64_t v31 = v51;
  sub_24083B4E8(v25, v51);
  unint64_t v32 = (*(unsigned __int8 *)(v53 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  unint64_t v33 = (v52 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v34 = swift_allocObject();
  uint64_t v35 = v34 + v32;
  uint64_t v36 = v31;
  sub_24083B484(v31, v35);
  *(void *)(v34 + v33) = v55;
  sub_240840FF4();
  sub_24084855C();
  sub_24083052C(&qword_26AFCF5E8, (void (*)(uint64_t))sub_240840FF4);
  uint64_t v37 = v54;
  sub_2409544A8();
  swift_release();
  swift_release();
  sub_24083110C(0, &qword_26AFD05F0, (uint64_t (*)(uint64_t))sub_24084855C, v50);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v49;
  sub_24083B4E8(v25, v31);
  uint64_t v39 = type metadata accessor for RemovedCategoriesGenerator();
  swift_allocObject();
  uint64_t v40 = sub_24081E14C(v36);
  *(void *)(v38 + 56) = v39;
  *(void *)(v38 + 64) = sub_24083052C(&qword_26AFCD0D0, (void (*)(uint64_t))type metadata accessor for RemovedCategoriesGenerator);
  *(void *)(v38 + 32) = v40;
  sub_24083052C(&qword_26AFCF578, (void (*)(uint64_t))sub_2408477D4);
  uint64_t v42 = v56;
  uint64_t v41 = v57;
  sub_240954588();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v37, v41);
  sub_24083052C(&qword_26AFCF5A8, (void (*)(uint64_t))sub_240847280);
  uint64_t v43 = v59;
  uint64_t v44 = sub_240954498();
  sub_24083B3B4(v25);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v42, v43);
  uint64_t result = v24;
  v24[2] = v44;
  return result;
}

void *sub_24082F890(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v67 = v1;
  uint64_t v88 = v3;
  uint64_t v4 = type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t v86 = *(void *)(v4 - 8);
  uint64_t v85 = *(void *)(v86 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v84 = (uint64_t)v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_240952F68();
  uint64_t v72 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  uint64_t v70 = (char *)v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240954DE8();
  uint64_t v77 = *(void *)(v7 - 8);
  uint64_t v78 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v69 = (char *)v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240848160();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v79 = v9;
  uint64_t v80 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v73 = (char *)v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240846A94();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v82 = v12;
  uint64_t v83 = v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v76 = (char *)v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408475C0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v89 = v15;
  uint64_t v90 = v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v81 = (char *)v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408470A8();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v91 = v18;
  uint64_t v92 = v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v87 = (char *)v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_240951EF8();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_240951F18();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)v66 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = a1;
  sub_24083B4E8(a1, (uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords27OnboardingGeneratorPipeline_context);
  v66[1] = sub_240951F68();
  uint64_t v75 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_24083110C(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v29 = sub_240951C08();
  uint64_t v30 = *(void *)(v29 - 8);
  unint64_t v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v32 = swift_allocObject();
  long long v71 = xmmword_240956800;
  *(_OWORD *)(v32 + 16) = xmmword_240956800;
  (*(void (**)(unint64_t, void, uint64_t))(v30 + 104))(v32 + v31, *MEMORY[0x263F45580], v29);
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v24, *MEMORY[0x263F45688], v21);
  sub_240951F08();
  unint64_t v33 = v67;
  (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))((uint64_t)v67 + OBJC_IVAR____TtC13HealthRecords27OnboardingGeneratorPipeline_domain, v28, v25);
  uint64_t v34 = v68;
  sub_240951F38();
  sub_2408304E8(v93, v94);
  uint64_t v35 = (void *)sub_240951E98();
  objc_msgSend(v35, sel_supportsHealthRecords);

  sub_2408371B8((uint64_t)v93);
  sub_240951F38();
  sub_2408304E8(v93, v94);
  sub_240951E98();
  sub_240953248();
  swift_allocObject();
  uint64_t v36 = sub_240953238();
  sub_2408371B8((uint64_t)v93);
  *(void *)((char *)v33 + OBJC_IVAR____TtC13HealthRecords27OnboardingGeneratorPipeline_onboardingManager) = v36;
  sub_240952808();
  uint64_t v37 = (void *)sub_2409527D8();
  sub_240951F38();
  sub_2408304E8(v93, v94);
  uint64_t v38 = (void *)sub_240951E98();
  id v39 = objc_msgSend(v38, sel_profileIdentifier);

  uint64_t v40 = (void *)sub_2409527C8();
  sub_2408371B8((uint64_t)v93);
  uint64_t v41 = sub_240954008();

  v93[0] = v41;
  uint64_t v42 = v72;
  uint64_t v43 = v70;
  uint64_t v44 = v74;
  (*(void (**)(char *, void, uint64_t))(v72 + 104))(v70, *MEMORY[0x263F46128], v74);
  uint64_t v45 = v69;
  sub_240953218();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
  sub_240840FF4();
  sub_240830574(&qword_26AFCF5E8, (void (*)(uint64_t))sub_240840FF4);
  sub_240830574(&qword_26AFD05C0, MEMORY[0x263F07CB0]);
  uint64_t v46 = v73;
  uint64_t v47 = v78;
  sub_2409544E8();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v45, v47);
  swift_release();
  sub_240830574(&qword_26AFCF558, (void (*)(uint64_t))sub_240848160);
  uint64_t v48 = v79;
  long long v49 = v76;
  sub_2409544B8();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v46, v48);
  uint64_t v50 = v84;
  sub_24083B4E8(v34, v84);
  unint64_t v51 = (*(unsigned __int8 *)(v86 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
  unint64_t v52 = (v85 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v53 = swift_allocObject();
  uint64_t v54 = v53 + v51;
  uint64_t v55 = v50;
  sub_240824598(v50, v54, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  *(void *)(v53 + v52) = v88;
  sub_24084855C();
  sub_240830574(&qword_26AFCF5D8, (void (*)(uint64_t))sub_240846A94);
  uint64_t v57 = v81;
  uint64_t v56 = v82;
  sub_2409544A8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v49, v56);
  sub_24083110C(0, &qword_26AFD05F0, (uint64_t (*)(uint64_t))sub_24084855C, v75);
  uint64_t v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = v71;
  sub_24083B4E8(v34, v55);
  uint64_t v59 = type metadata accessor for OnboardingTileGenerator();
  swift_allocObject();
  uint64_t v60 = sub_24081EC4C(v55);
  *(void *)(v58 + 56) = v59;
  *(void *)(v58 + 64) = sub_240830574(&qword_26AFCCCA0, (void (*)(uint64_t))type metadata accessor for OnboardingTileGenerator);
  *(void *)(v58 + 32) = v60;
  sub_240830574(&qword_26AFCF598, (void (*)(uint64_t))sub_2408475C0);
  uint64_t v61 = v87;
  uint64_t v62 = v89;
  sub_240954588();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v57, v62);
  sub_240830574(&qword_26AFCF5C8, (void (*)(uint64_t))sub_2408470A8);
  uint64_t v63 = v91;
  uint64_t v64 = sub_240954498();
  sub_24083B294(v34, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v61, v63);
  uint64_t result = v33;
  v33[2] = v64;
  return result;
}

void *sub_2408304E8(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_24083052C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240830574(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_2408305BC(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v64 = v1;
  uint64_t v82 = v3;
  uint64_t v4 = type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t v80 = *(void *)(v4 - 8);
  uint64_t v79 = *(void *)(v80 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v76 = (uint64_t)v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_240952F68();
  uint64_t v68 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v67 = (char *)v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240954DE8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v73 = v7;
  uint64_t v74 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v66 = (char *)v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240847A68();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v77 = v10;
  uint64_t v78 = v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v72 = (char *)v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240847728();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v83 = v13;
  uint64_t v84 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v75 = (char *)v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240847194();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v85 = v16;
  uint64_t v86 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v81 = (char *)v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_240951EF8();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_240951F18();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = a1;
  sub_24083B4E8(a1, (uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords24LabTipsGeneratorPipeline_context);
  v63[1] = sub_240951F68();
  long long v71 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_24083110C(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v27 = sub_240951C08();
  uint64_t v28 = *(void *)(v27 - 8);
  unint64_t v29 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v30 = swift_allocObject();
  long long v70 = xmmword_240956800;
  *(_OWORD *)(v30 + 16) = xmmword_240956800;
  (*(void (**)(unint64_t, void, uint64_t))(v28 + 104))(v30 + v29, *MEMORY[0x263F45520], v27);
  (*(void (**)(char *, void, uint64_t))(v20 + 104))(v22, *MEMORY[0x263F45688], v19);
  sub_240951F08();
  unint64_t v31 = v64;
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))((uint64_t)v64 + OBJC_IVAR____TtC13HealthRecords24LabTipsGeneratorPipeline_domain, v26, v23);
  uint64_t v32 = v65;
  sub_240951F38();
  sub_2408304E8(v87, v88);
  unint64_t v33 = (void *)sub_240951E98();
  objc_msgSend(v33, sel_supportsHealthRecords);

  sub_2408371B8((uint64_t)v87);
  sub_240951F38();
  sub_2408304E8(v87, v88);
  sub_240951E98();
  sub_240953248();
  swift_allocObject();
  uint64_t v34 = sub_240953238();
  sub_2408371B8((uint64_t)v87);
  uint64_t v35 = v31;
  *(void *)((char *)v31 + OBJC_IVAR____TtC13HealthRecords24LabTipsGeneratorPipeline_onboardingManager) = v34;
  uint64_t v36 = v67;
  sub_240951A88();
  uint64_t v37 = v68;
  uint64_t v38 = v69;
  (*(void (**)(char *, void, uint64_t))(v68 + 104))(v36, *MEMORY[0x263F46130], v69);
  id v39 = v66;
  sub_240953218();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v38);
  sub_240952808();
  uint64_t v40 = (void *)sub_2409527D8();
  sub_240951F38();
  sub_2408304E8(v87, v88);
  uint64_t v41 = (void *)sub_240951E98();
  id v42 = objc_msgSend(v41, sel_profileIdentifier);

  uint64_t v43 = (void *)sub_2409527C8();
  sub_2408371B8((uint64_t)v87);
  uint64_t v44 = sub_240954008();

  v87[0] = v44;
  sub_240840FF4();
  sub_2408310C4(&qword_26AFD05C0, MEMORY[0x263F07CB0]);
  sub_2408310C4(&qword_26AFCF5E8, (void (*)(uint64_t))sub_240840FF4);
  uint64_t v46 = v72;
  uint64_t v45 = v73;
  sub_2409544E8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v39, v45);
  uint64_t v47 = v76;
  sub_24083B4E8(v32, v76);
  unint64_t v48 = (*(unsigned __int8 *)(v80 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
  unint64_t v49 = (v79 + v48 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v50 = swift_allocObject();
  uint64_t v51 = v50 + v48;
  uint64_t v52 = v47;
  sub_24083B484(v47, v51);
  *(void *)(v50 + v49) = v82;
  sub_24084855C();
  sub_2408310C4(&qword_26AFCF568, (void (*)(uint64_t))sub_240847A68);
  uint64_t v53 = v75;
  uint64_t v54 = v77;
  sub_2409544A8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v46, v54);
  sub_24083110C(0, &qword_26AFD05F0, (uint64_t (*)(uint64_t))sub_24084855C, v71);
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = v70;
  sub_24083B4E8(v32, v52);
  uint64_t v56 = type metadata accessor for LabTipsGenerator();
  swift_allocObject();
  uint64_t v57 = sub_24081EFDC(v52);
  *(void *)(v55 + 56) = v56;
  *(void *)(v55 + 64) = sub_2408310C4(&qword_26AFCCA00, (void (*)(uint64_t))type metadata accessor for LabTipsGenerator);
  *(void *)(v55 + 32) = v57;
  sub_2408310C4(&qword_26AFCF588, (void (*)(uint64_t))sub_240847728);
  uint64_t v58 = v81;
  uint64_t v59 = v83;
  sub_240954588();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v59);
  sub_2408310C4(&qword_26AFCF5B8, (void (*)(uint64_t))sub_240847194);
  uint64_t v60 = v85;
  uint64_t v61 = sub_240954498();
  sub_24083B3B4(v32);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v58, v60);
  uint64_t result = v35;
  v35[2] = v61;
  return result;
}

uint64_t sub_2408310C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24083110C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void *sub_240831170(uint64_t a1)
{
  uint64_t v82 = *v1;
  uint64_t v3 = type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t v80 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v81 = v4;
  uint64_t v89 = (uint64_t)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240834828(0, &qword_26AFD05B0, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v76 = (char *)&v67 - v6;
  uint64_t v75 = sub_240954D58();
  uint64_t v74 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v72 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240848314();
  uint64_t v73 = v8;
  uint64_t v71 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  long long v70 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240842A08();
  uint64_t v79 = v10;
  uint64_t v78 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v77 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240847514();
  uint64_t v85 = *(void *)(v12 - 8);
  uint64_t v86 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v83 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24084736C();
  uint64_t v87 = *(void *)(v14 - 8);
  uint64_t v88 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v84 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_240951EF8();
  uint64_t v67 = *(void (***)(void, void, void))(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v17 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = (uint64_t (*)(uint64_t, uint64_t))sub_240951F18();
  uint64_t v18 = *((void *)v68 - 1);
  MEMORY[0x270FA5388](v68);
  uint64_t v20 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = v1;
  sub_24083B4E8(a1, (uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords28ConceptSharableModelPipeline_context);
  sub_24083EDCC(0, (unint64_t *)&qword_26AFCDF38);
  id v21 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_diagnosticTestResultTypeForIdentifier_, *MEMORY[0x263F09518]);
  uint64_t v22 = v21;
  unint64_t v23 = MEMORY[0x263F8EE78];
  v94[0] = MEMORY[0x263F8EE78];
  if (v21)
  {
    id v24 = v21;
    MEMORY[0x245600C60]();
    if (*(void *)((v94[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v94[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_240954A08();
    }
    sub_240954A28();
    sub_2409549B8();
    unint64_t v23 = v94[0];
  }

  uint64_t v90 = a1;
  sub_240951F68();
  sub_240834828(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v25 = sub_240951C08();
  uint64_t v26 = *(void *)(v25 - 8);
  unint64_t v27 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v28 = swift_allocObject();
  long long v91 = xmmword_240956800;
  *(_OWORD *)(v28 + 16) = xmmword_240956800;
  (*(void (**)(unint64_t, void, uint64_t))(v26 + 104))(v28 + v27, *MEMORY[0x263F454D0], v25);
  if (v23 >> 62)
  {
    sub_24083EDCC(0, &qword_26AFCF390);
    swift_bridgeObjectRetain();
    sub_2409553C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_240955628();
    sub_24083EDCC(0, &qword_26AFCF390);
  }
  swift_bridgeObjectRelease();
  ((void (**)(char *, void, uint64_t))v67)[13](v17, *MEMORY[0x263F45690], v69);
  sub_240951F08();
  (*(void (**)(uint64_t, char *, uint64_t (*)(uint64_t, uint64_t)))(v18 + 32))((uint64_t)v92 + OBJC_IVAR____TtC13HealthRecords28ConceptSharableModelPipeline_domain, v20, v68);
  sub_240952808();
  unint64_t v29 = (void *)sub_2409527D8();
  uint64_t v30 = v90;
  sub_240951F38();
  sub_2408304E8(v94, v95);
  unint64_t v31 = (void *)sub_240951E98();
  id v32 = objc_msgSend(v31, sel_profileIdentifier);

  sub_2409527B8();
  sub_2408371B8((uint64_t)v94);
  uint64_t v68 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_240834828(0, &qword_26AFCF400, MEMORY[0x263F46018], MEMORY[0x263F8E0F8]);
  uint64_t v33 = sub_2409528B8();
  uint64_t v34 = *(void *)(v33 - 8);
  unint64_t v35 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = v91;
  (*(void (**)(unint64_t, void, uint64_t))(v34 + 104))(v36 + v35, *MEMORY[0x263F45FE8], v33);
  uint64_t v37 = sub_2409531A8();
  uint64_t v69 = v37;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v38 = (void (**)(void, void, void))sub_240951F98();
  uint64_t v67 = v38;
  id v39 = (void *)sub_2409527D8();
  uint64_t v40 = v30;
  sub_240951F38();
  sub_2408304E8(v94, v95);
  uint64_t v41 = (void *)sub_240951E98();
  id v42 = objc_msgSend(v41, sel_profileIdentifier);

  sub_240952788();
  sub_2408371B8((uint64_t)v94);
  uint64_t v43 = sub_240953F98();
  swift_release();
  uint64_t v93 = v37;
  v94[0] = v43;
  uint64_t v44 = (void (*)(uint64_t))MEMORY[0x263F45D68];
  sub_24083320C(0, (unint64_t *)&qword_26AFCF2B0, MEMORY[0x263F45D68]);
  sub_24083320C(0, (unint64_t *)&qword_26AFCC660, (void (*)(uint64_t))sub_24090C898);
  sub_2408320E0(&qword_26AFCF2A8, (unint64_t *)&qword_26AFCF2B0, v44);
  sub_2408320E0(&qword_26AFCDD80, (unint64_t *)&qword_26AFCC660, (void (*)(uint64_t))sub_24090C898);
  uint64_t v45 = v70;
  sub_2409544E8();
  swift_release();
  uint64_t v46 = v72;
  sub_240954D48();
  v94[0] = v38;
  uint64_t v47 = sub_240954D38();
  uint64_t v48 = (uint64_t)v76;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v76, 1, 1, v47);
  sub_24083EDCC(0, (unint64_t *)&qword_26AFD07B0);
  sub_240832098(&qword_26AFCECC0, (void (*)(uint64_t))sub_240848314);
  sub_24083FA44();
  unint64_t v49 = v77;
  uint64_t v50 = v73;
  sub_2409545A8();
  sub_24083335C(v48);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v46, v75);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v45, v50);
  uint64_t v51 = v89;
  sub_24083B4E8(v40, v89);
  unint64_t v52 = (*(unsigned __int8 *)(v80 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
  unint64_t v53 = (v81 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v54 = swift_allocObject();
  sub_24083B484(v51, v54 + v52);
  *(void *)(v54 + v53) = v82;
  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = sub_24090CB34;
  *(void *)(v55 + 24) = v54;
  sub_2408485B4();
  sub_240832098(&qword_26AFCF238, (void (*)(uint64_t))sub_240842A08);
  uint64_t v56 = v83;
  uint64_t v57 = v79;
  sub_2409544A8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v49, v57);
  sub_240834828(0, &qword_26AFCDFB8, (uint64_t (*)(uint64_t))sub_2408485B4, v68);
  uint64_t v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = v91;
  sub_24083B4E8(v40, v51);
  uint64_t v59 = type metadata accessor for ConceptSharableModelGenerator();
  swift_allocObject();
  uint64_t v60 = sub_24081DE40(v51);
  *(void *)(v58 + 56) = v59;
  *(void *)(v58 + 64) = sub_240832098(&qword_26AFCD378, (void (*)(uint64_t))type metadata accessor for ConceptSharableModelGenerator);
  *(void *)(v58 + 32) = v60;
  sub_240832098(&qword_26AFCED70, (void (*)(uint64_t))sub_240847514);
  uint64_t v61 = v84;
  uint64_t v62 = v86;
  sub_240954588();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v56, v62);
  sub_240832098(&qword_26AFCEDA0, (void (*)(uint64_t))sub_24084736C);
  uint64_t v63 = v88;
  uint64_t v64 = sub_240954478();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v61, v63);
  v94[0] = v64;
  sub_24083320C(0, &qword_26AFCDC48, (void (*)(uint64_t))sub_2408485B4);
  sub_2408320E0(&qword_26AFCDC40, &qword_26AFCDC48, (void (*)(uint64_t))sub_2408485B4);
  uint64_t v65 = sub_240954498();
  swift_release();

  sub_24083B3B4(v40);
  swift_release();
  uint64_t result = v92;
  v92[2] = v65;
  return result;
}

uint64_t sub_240832098(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2408320E0(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24083320C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_240832130(uint64_t a1)
{
  uint64_t v103 = *v1;
  uint64_t v104 = v1;
  sub_2408332D4(0, &qword_26AFCD9B8, (void (*)(uint64_t))sub_240841780, (void (*)(void))sub_240841818);
  uint64_t v75 = v3;
  uint64_t v73 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v71 = (char *)&v71 - v4;
  uint64_t v5 = type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t v100 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v101 = v6;
  uint64_t v102 = (uint64_t)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240833270(0, &qword_26AFD05B0, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v80 = (char *)&v71 - v8;
  uint64_t v79 = sub_240954D58();
  uint64_t v78 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v77 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_240952318();
  uint64_t v97 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  uint64_t v98 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24084824C();
  uint64_t v76 = v11;
  uint64_t v74 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v72 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240842908();
  uint64_t v86 = v13;
  uint64_t v84 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v82 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408332D4(0, &qword_26AFCED88, (void (*)(uint64_t))sub_240842908, (void (*)(void))sub_2408429D4);
  uint64_t v85 = v15;
  uint64_t v83 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v81 = (char *)&v71 - v16;
  uint64_t v17 = sub_240954D68();
  uint64_t v95 = *(void *)(v17 - 8);
  uint64_t v96 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v94 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_240954D18();
  MEMORY[0x270FA5388](v93);
  uint64_t v92 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_240954618();
  MEMORY[0x270FA5388](v20 - 8);
  long long v91 = (char *)&v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_240951EF8();
  uint64_t v22 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  id v24 = (char *)&v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_240951F18();
  uint64_t v25 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  unint64_t v27 = (char *)&v71 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = a1;
  sub_24083B4E8(a1, (uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords29SharedConceptFeedItemPipeline_context);
  uint64_t v87 = sub_240951F68();
  sub_240833270(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v28 = sub_240951C08();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(void *)(v29 + 72);
  unint64_t v31 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_2409562B0;
  unint64_t v33 = v32 + v31;
  uint64_t v34 = *(void (**)(unint64_t, void, uint64_t))(v29 + 104);
  v34(v33, *MEMORY[0x263F45520], v28);
  v34(v33 + v30, *MEMORY[0x263F454D0], v28);
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v24, *MEMORY[0x263F45690], v90);
  uint64_t v35 = MEMORY[0x263F8EE78];
  sub_240951F08();
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))((uint64_t)v104 + OBJC_IVAR____TtC13HealthRecords29SharedConceptFeedItemPipeline_domain, v27, v89);
  sub_24083EDCC(0, (unint64_t *)&qword_26AFD07B0);
  sub_240954608();
  v106[0] = v35;
  uint64_t v36 = v88;
  sub_240833160(&qword_26AFD05A8, MEMORY[0x263F8F0F8]);
  sub_240833270(0, &qword_26AFD0570, MEMORY[0x263F8F0F8], MEMORY[0x263F8D488]);
  sub_24083FD04();
  sub_240955148();
  (*(void (**)(char *, void, uint64_t))(v95 + 104))(v94, *MEMORY[0x263F8F130], v96);
  uint64_t v37 = (void *)sub_240954D98();
  uint64_t v38 = (void *)sub_240951F68();
  id v39 = (void *)sub_240951C98();
  LOBYTE(v24) = sub_240951C88();

  uint64_t v40 = (void (**)(char *, uint64_t))(v97 + 8);
  sub_240951F28();
  sub_2408304E8(v106, v106[3]);
  uint64_t v41 = v98;
  sub_240952308();
  uint64_t v42 = sub_240952228();
  (*v40)(v41, v99);
  if (v24)
  {
    v105[5] = v42;
    sub_240952808();
    uint64_t v43 = (void *)sub_2409527D8();
    sub_240951F38();
    sub_2408304E8(v105, v105[3]);
    uint64_t v44 = (void *)sub_240951E98();
    id v45 = objc_msgSend(v44, sel_profileIdentifier);

    sub_240952788();
    sub_2408371B8((uint64_t)v105);
    uint64_t v46 = sub_240953F98();
    swift_release();
    v105[0] = v46;
    sub_240841780();
    uint64_t v47 = (void (*)(uint64_t))MEMORY[0x263F45D68];
    sub_2408331A8(0, (unint64_t *)&qword_26AFCF2B0, MEMORY[0x263F45D68]);
    sub_240841818();
    sub_240839764(&qword_26AFCF2A8, (unint64_t *)&qword_26AFCF2B0, v47);
    uint64_t v48 = v72;
    sub_2409544E8();
    swift_release();
    swift_release();
    sub_2408371B8((uint64_t)v106);
    unint64_t v49 = v77;
    sub_240954D48();
    v106[0] = v37;
    uint64_t v50 = sub_240954D38();
    uint64_t v51 = (uint64_t)v80;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v80, 1, 1, v50);
    sub_240833160(&qword_26AFCECF0, (void (*)(uint64_t))sub_24084824C);
    sub_24083FA44();
    unint64_t v52 = v82;
    uint64_t v53 = v76;
    sub_2409545A8();
    sub_24083335C(v51);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v49, v79);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v48, v53);
    uint64_t v54 = v102;
    sub_24083B4E8(v36, v102);
    unint64_t v55 = (*(unsigned __int8 *)(v100 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
    unint64_t v56 = (v101 + v55 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v57 = swift_allocObject();
    sub_24083B484(v54, v57 + v55);
    *(void *)(v57 + v56) = v103;
    uint64_t v58 = swift_allocObject();
    *(void *)(v58 + 16) = sub_2408BFF40;
    *(void *)(v58 + 24) = v57;
    sub_24084855C();
    sub_2408429D4();
    uint64_t v59 = v81;
    uint64_t v60 = v86;
    sub_2409544A8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v52, v60);
    sub_24084792C(&qword_26AFCED80, &qword_26AFCED88, (void (*)(uint64_t))sub_240842908, (void (*)(void))sub_2408429D4);
    uint64_t v61 = v85;
    uint64_t v62 = sub_240954478();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v59, v61);
  }
  else
  {
    v105[0] = v42;
    uint64_t v63 = v102;
    sub_24083B4E8(v36, v102);
    unint64_t v64 = (*(unsigned __int8 *)(v100 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
    unint64_t v65 = (v101 + v64 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v66 = swift_allocObject();
    sub_24083B484(v63, v66 + v64);
    *(void *)(v66 + v65) = v103;
    sub_240841780();
    sub_24084855C();
    sub_240841818();
    uint64_t v67 = v71;
    sub_2409544A8();
    swift_release();
    swift_release();
    sub_2408371B8((uint64_t)v106);
    sub_24084792C(&qword_268C913F0, &qword_26AFCD9B8, (void (*)(uint64_t))sub_240841780, (void (*)(void))sub_240841818);
    uint64_t v68 = v75;
    uint64_t v62 = sub_240954478();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v67, v68);
  }
  v106[0] = v62;
  sub_2408331A8(0, &qword_26AFCDC58, (void (*)(uint64_t))sub_24084855C);
  sub_240839764(&qword_26AFCDC50, &qword_26AFCDC58, (void (*)(uint64_t))sub_24084855C);
  uint64_t v69 = sub_240954498();

  sub_24083B3B4(v36);
  swift_release();
  uint64_t result = v104;
  v104[2] = v69;
  return result;
}

uint64_t sub_240833160(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2408331A8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240954308();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_24083320C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240954308();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_240833270(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2408332D4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_24084855C();
    a4();
    unint64_t v6 = sub_240954148();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_24083335C(uint64_t a1)
{
  sub_240834760(0, &qword_26AFD05B0, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_2408333E8(uint64_t a1)
{
  uint64_t v117 = *v1;
  uint64_t v3 = type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v124 = v3 - 8;
  uint64_t v115 = v4;
  uint64_t v114 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v112 = (uint64_t)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24083B598(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v108 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_240954D58();
  uint64_t v109 = *(void *)(v110 - 8);
  MEMORY[0x270FA5388](v110);
  uint64_t v106 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240842750();
  uint64_t v113 = v9;
  uint64_t v116 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v107 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240845628();
  uint64_t v119 = v11;
  uint64_t v121 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v111 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240846CD0();
  uint64_t v120 = v13;
  uint64_t v122 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v118 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240842078();
  uint64_t v104 = v15;
  uint64_t v105 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v103 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240846BBC();
  uint64_t v127 = v17;
  uint64_t v123 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v126 = (char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_240954DE8();
  uint64_t v129 = *(void **)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  uint64_t v97 = (char *)&v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24083499C(0, (unint64_t *)&qword_26AFD0430, MEMORY[0x263F07CB0], (void (*)(void))sub_24083F9D0);
  uint64_t v98 = v20;
  uint64_t v99 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v96 = (char *)&v86 - v21;
  sub_2408408AC(0);
  uint64_t v93 = v22;
  uint64_t v94 = *((void *)v22 - 1);
  MEMORY[0x270FA5388](v22);
  uint64_t v90 = (char *)&v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24083499C(0, &qword_26AFD0420, sub_2408408AC, (void (*)(void))sub_2408408E0);
  uint64_t v91 = v24;
  uint64_t v92 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v89 = (char *)&v86 - v25;
  uint64_t v88 = sub_240951EF8();
  uint64_t v26 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  uint64_t v28 = (char *)&v86 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_240951F18();
  uint64_t v29 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  unint64_t v31 = (char *)&v86 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)((char *)v1 + OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_observerToken) = 0;
  sub_240951F38();
  sub_2408304E8(v130, v130[3]);
  sub_240951E98();
  sub_240953478();
  swift_allocObject();
  uint64_t v128 = sub_240953448();
  sub_2408371B8((uint64_t)v130);
  uint64_t v101 = a1;
  sub_24083B4E8(a1, (uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_context);
  sub_240951F68();
  uint64_t v125 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_2408347C4(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v32 = sub_240951C08();
  uint64_t v33 = *(void *)(v32 - 8);
  unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v35 = swift_allocObject();
  long long v102 = xmmword_240956800;
  *(_OWORD *)(v35 + 16) = xmmword_240956800;
  (*(void (**)(unint64_t, void, uint64_t))(v33 + 104))(v35 + v34, *MEMORY[0x263F45548], v32);
  (*(void (**)(char *, void, uint64_t))(v26 + 104))(v28, *MEMORY[0x263F45688], v88);
  sub_240951F08();
  uint64_t v36 = v1;
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))((uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_domain, v31, v87);
  id v37 = objc_allocWithZone((Class)sub_240953018());
  *(void *)((char *)v1
            + OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_accountStateChangeListener) = sub_240953008();
  uint64_t v38 = v90;
  sub_240952FF8();
  sub_2408408E0();
  id v39 = v89;
  uint64_t v40 = v93;
  sub_2409544F8();
  (*(void (**)(char *, void))(v94 + 8))(v38, v40);
  sub_240845C9C();
  uint64_t v41 = v91;
  uint64_t v42 = sub_240954498();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v39, v41);
  *(void *)((char *)v36
            + OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_accountStateChangePublisher) = v42;
  uint64_t v43 = self;
  id v44 = objc_msgSend(v43, sel_defaultCenter);
  id v45 = (void *)sub_240954DB8();
  uint64_t v46 = v97;
  sub_240954DF8();

  uint64_t v94 = sub_24083F9D0();
  swift_retain();
  uint64_t v47 = v96;
  uint64_t v48 = v100;
  sub_2409544F8();
  swift_release();
  unint64_t v49 = (void (*)(void, void))v129[1];
  ++v129;
  uint64_t v93 = v49;
  v49(v46, v48);
  sub_24084537C();
  uint64_t v50 = v98;
  uint64_t v51 = sub_240954498();
  unint64_t v52 = *(void (**)(char *, uint64_t))(v99 + 8);
  v52(v47, v50);
  *(void *)((char *)v36
            + OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_accountStatusSummaryTileDidDismissPublisher) = v51;
  id v53 = objc_msgSend(v43, sel_defaultCenter);
  uint64_t v54 = (void *)sub_240954DC8();
  sub_240954DF8();

  swift_retain();
  sub_2409544F8();
  swift_release();
  v93(v46, v48);
  uint64_t v55 = sub_240954498();
  v52(v47, v50);
  *(void *)((char *)v36
            + OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_accountStatusSummaryTileShouldResetPublisher) = v55;
  sub_2408347C4(0, &qword_26AFD0600, (uint64_t (*)(uint64_t))sub_240841250, v125);
  uint64_t v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = xmmword_240956880;
  uint64_t v57 = *(void *)((char *)v36
                  + OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_accountStateChangePublisher);
  uint64_t v58 = *(void *)((char *)v36
                  + OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_accountStatusSummaryTileDidDismissPublisher);
  uint64_t v95 = v36;
  *(void *)(v56 + 32) = v57;
  *(void *)(v56 + 40) = v58;
  *(void *)(v56 + 48) = v55;
  v130[0] = v56;
  sub_2409549B8();
  sub_240841250();
  sub_2408347C4(0, &qword_26AFD0518, (uint64_t (*)(uint64_t))sub_240841250, MEMORY[0x263F8D488]);
  sub_240834954((unint64_t *)&qword_26AFD0468, (void (*)(uint64_t))sub_240841250);
  sub_24083FD8C();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v59 = v103;
  sub_2409542C8();
  sub_240834954(&qword_26AFD0458, (void (*)(uint64_t))sub_240842078);
  uint64_t v60 = v104;
  sub_240954588();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v59, v60);
  uint64_t v61 = v101;
  uint64_t v62 = (void *)sub_240951F98();
  uint64_t v129 = v62;
  uint64_t v63 = v106;
  sub_240954D48();
  v130[0] = v62;
  uint64_t v64 = sub_240954D38();
  uint64_t v65 = (uint64_t)v108;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v108, 1, 1, v64);
  sub_24083FA04();
  sub_240834954(&qword_26AFD03F8, (void (*)(uint64_t))sub_240846BBC);
  sub_240834954((unint64_t *)&qword_26AFD05B8, (void (*)(uint64_t))sub_24083FA04);
  uint64_t v66 = v107;
  sub_2409545A8();
  sub_240834A8C(v65, (uint64_t (*)(void))sub_24083B598);
  (*(void (**)(char *, uint64_t))(v109 + 8))(v63, v110);
  uint64_t v67 = v112;
  sub_24083B4E8(v61, v112);
  unint64_t v68 = (*(unsigned __int8 *)(v115 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80);
  unint64_t v69 = (v114 + v68 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v70 = swift_allocObject();
  uint64_t v71 = v70 + v68;
  uint64_t v72 = v67;
  sub_24083B484(v67, v71);
  uint64_t v73 = v128;
  *(void *)(v70 + v69) = v128;
  *(void *)(v70 + ((v69 + 15) & 0xFFFFFFFFFFFFFFF8)) = v117;
  sub_24084855C();
  sub_240834954(&qword_26AFCF268, (void (*)(uint64_t))sub_240842750);
  swift_retain();
  uint64_t v74 = v111;
  uint64_t v75 = v113;
  sub_2409544F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v116 + 8))(v66, v75);
  sub_2408347C4(0, &qword_26AFD05F0, (uint64_t (*)(uint64_t))sub_24084855C, v125);
  uint64_t v76 = swift_allocObject();
  *(_OWORD *)(v76 + 16) = v102;
  sub_24083B4E8(v61, v72);
  uint64_t v77 = type metadata accessor for AccountStatusSummaryTileGenerator();
  swift_allocObject();
  swift_retain();
  uint64_t v78 = sub_24081DA68(v72, v73);
  swift_release();
  *(void *)(v76 + 56) = v77;
  *(void *)(v76 + 64) = sub_240834954(&qword_26AFCE740, (void (*)(uint64_t))type metadata accessor for AccountStatusSummaryTileGenerator);
  *(void *)(v76 + 32) = v78;
  sub_240834954(&qword_26AFCEF80, (void (*)(uint64_t))sub_240845628);
  uint64_t v80 = v118;
  uint64_t v79 = v119;
  sub_240954588();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v121 + 8))(v74, v79);
  sub_240834954(&qword_26AFCEDD0, (void (*)(uint64_t))sub_240846CD0);
  uint64_t v81 = v120;
  uint64_t v82 = sub_240954498();
  (*(void (**)(char *, uint64_t))(v122 + 8))(v80, v81);
  uint64_t v83 = v95;
  v95[2] = v82;
  objc_msgSend(*(id *)((char *)v83+ OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_context+ *(int *)(v124 + 28)), sel_addAccountStateChangeListener_, *(void *)((char *)v83+ OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_accountStateChangeListener));
  swift_allocObject();
  swift_weakInit();
  sub_240952A58();
  swift_allocObject();
  uint64_t v84 = sub_240952A38();
  swift_release();

  sub_240834A8C(v61, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  (*(void (**)(char *, uint64_t))(v123 + 8))(v126, v127);
  *(void *)((char *)v83 + OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_observerToken) = v84;
  swift_release();
  return v83;
}

void sub_240834760(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2408347C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_240834828(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24083488C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2408348F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_240834954(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24083499C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_2409541C8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_240834A14(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_2409541C8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_240834A8C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_240834AEC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v102 = *v2;
  sub_240835BEC(0, &qword_26AFCDDC0, (uint64_t (*)(uint64_t))sub_24084855C, MEMORY[0x263EFDDF8]);
  uint64_t v106 = *(void *)(v4 - 8);
  uint64_t v107 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v105 = (char *)&v81 - v5;
  uint64_t v6 = type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t v94 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v95 = v7;
  uint64_t v108 = (uint64_t)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24083B598(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v89 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_240954D58();
  uint64_t v88 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  uint64_t v86 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240842078();
  uint64_t v87 = v11;
  uint64_t v85 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v84 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240842564();
  uint64_t v93 = v13;
  uint64_t v92 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v91 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408454E0();
  uint64_t v99 = v15;
  uint64_t v98 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v96 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240846DE4();
  uint64_t v100 = *(void *)(v17 - 8);
  uint64_t v101 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v97 = (char *)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_2409540C8();
  uint64_t v103 = *(void *)(v19 - 8);
  uint64_t v104 = v19;
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v81 = (char *)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v82 = (char *)&v81 - v22;
  sub_240840EF4();
  uint64_t v24 = (void (**)(uint64_t (*)(uint64_t, uint64_t), id))*(v23 - 1);
  id v112 = v23;
  uint64_t v113 = v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v111 = (uint64_t (*)(uint64_t, uint64_t))((char *)&v81 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v110 = sub_240951EF8();
  uint64_t v26 = *(void *)(v110 - 8);
  MEMORY[0x270FA5388](v110);
  uint64_t v28 = (char *)&v81 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_240951F18();
  uint64_t v29 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v109);
  unint64_t v31 = (char *)&v81 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(uint64_t *)((char *)v2
             + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___accountStateChangeListener) = 1;
  *(uint64_t *)((char *)v2
             + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___healthRecordsSupportedListener) = 1;
  *(uint64_t *)((char *)v2
             + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___accountStateChangePublisher) = 1;
  *(uint64_t *)((char *)v2
             + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___healthRecordsSupportedPublisher) = 1;
  *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline_observerToken) = 0;
  uint64_t v114 = a1;
  sub_24083B4E8(a1, (uint64_t)v2 + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline_context);
  sub_240951F68();
  sub_240835BEC(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v32 = sub_240951C08();
  uint64_t v33 = *(void *)(v32 - 8);
  unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v35 = swift_allocObject();
  long long v83 = xmmword_240956800;
  *(_OWORD *)(v35 + 16) = xmmword_240956800;
  (*(void (**)(unint64_t, void, uint64_t))(v33 + 104))(v35 + v34, *MEMORY[0x263F454D8], v32);
  (*(void (**)(char *, void, uint64_t))(v26 + 104))(v28, *MEMORY[0x263F45688], v110);
  sub_240951F08();
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))((uint64_t)v2 + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline_domain, v31, v109);
  uint64_t v36 = v114;
  sub_24084855C();
  id v37 = v111;
  sub_2409543B8();
  sub_24083696C(&qword_26AFD0478, (void (*)(uint64_t))sub_240840EF4);
  id v38 = v112;
  uint64_t v39 = sub_240954498();
  v113[1](v37, v38);
  v2[2] = v39;
  sub_240951F48();
  if ((sub_2409522E8() & 1) == 0)
  {
    uint64_t v46 = sub_24081CF6C();
    if (v46)
    {
      uint64_t v47 = v46;
      uint64_t v48 = (void (**)(uint64_t (*)(uint64_t, uint64_t), id))sub_24081D4D8();
      if (v48)
      {
        unint64_t v49 = v48;
        uint64_t v111 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
        sub_240835BEC(0, &qword_26AFD0600, (uint64_t (*)(uint64_t))sub_240841250, MEMORY[0x263F8E0F8]);
        uint64_t v50 = swift_allocObject();
        *(_OWORD *)(v50 + 16) = xmmword_2409562B0;
        *(void *)(v50 + 32) = v47;
        *(void *)(v50 + 40) = v49;
        uint64_t v115 = (void *)v50;
        sub_2409549B8();
        uint64_t v113 = v49;
        uint64_t v51 = v115;
        swift_retain();
        swift_retain();
        unint64_t v52 = (void *)sub_240951F98();
        id v112 = v52;
        uint64_t v115 = v51;
        sub_240841250();
        sub_240835BEC(0, &qword_26AFD0518, (uint64_t (*)(uint64_t))sub_240841250, MEMORY[0x263F8D488]);
        sub_24083696C((unint64_t *)&qword_26AFD0468, (void (*)(uint64_t))sub_240841250);
        sub_24083FE14((unint64_t *)&qword_26AFD0520, &qword_26AFD0518, (uint64_t (*)(uint64_t))sub_240841250);
        id v53 = v84;
        sub_2409542C8();
        uint64_t v54 = v86;
        sub_240954D48();
        uint64_t v115 = v52;
        uint64_t v55 = sub_240954D38();
        uint64_t v56 = (uint64_t)v89;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v89, 1, 1, v55);
        sub_24083FA04();
        sub_24083696C(&qword_26AFD0458, (void (*)(uint64_t))sub_240842078);
        sub_24083696C((unint64_t *)&qword_26AFD05B8, (void (*)(uint64_t))sub_24083FA04);
        uint64_t v57 = v91;
        uint64_t v58 = v87;
        sub_2409545A8();
        sub_24083AF34(v56, (uint64_t (*)(void))sub_24083B598);
        (*(void (**)(char *, uint64_t))(v88 + 8))(v54, v90);
        (*(void (**)(char *, uint64_t))(v85 + 8))(v53, v58);
        uint64_t v59 = v114;
        uint64_t v60 = v108;
        sub_24083B4E8(v114, v108);
        unint64_t v61 = (*(unsigned __int8 *)(v94 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80);
        unint64_t v62 = (v95 + v61 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v63 = swift_allocObject();
        sub_24083B484(v60, v63 + v61);
        *(void *)(v63 + v62) = v102;
        sub_24083696C(&qword_26AFCDB88, (void (*)(uint64_t))sub_240842564);
        uint64_t v64 = v96;
        uint64_t v65 = v93;
        sub_2409544F8();
        swift_release();
        (*(void (**)(char *, uint64_t))(v92 + 8))(v57, v65);
        sub_240835BEC(0, &qword_26AFD05F0, (uint64_t (*)(uint64_t))sub_24084855C, v111);
        uint64_t v66 = swift_allocObject();
        *(_OWORD *)(v66 + 16) = v83;
        sub_24083B4E8(v59, v60);
        uint64_t v67 = type metadata accessor for ClinicalSharingGenerator();
        swift_allocObject();
        unint64_t v68 = sub_24081D768(v60);
        *(void *)(v66 + 56) = v67;
        *(void *)(v66 + 64) = sub_24083696C(&qword_26AFCE380, (void (*)(uint64_t))type metadata accessor for ClinicalSharingGenerator);
        *(void *)(v66 + 32) = v68;
        sub_24083696C(&qword_26AFCDA40, (void (*)(uint64_t))sub_2408454E0);
        unint64_t v69 = v97;
        uint64_t v70 = v99;
        sub_240954588();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v98 + 8))(v64, v70);
        sub_24083696C(&qword_26AFCE170, (void (*)(uint64_t))sub_240846DE4);
        uint64_t v71 = v101;
        uint64_t v72 = sub_240954498();
        (*(void (**)(char *, uint64_t))(v100 + 8))(v69, v71);
        v2[2] = v72;
        swift_release();
        uint64_t v73 = sub_24081F830();
        swift_release();
        swift_release();

        sub_24083AF34(v59, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
        *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline_observerToken) = v73;
        goto LABEL_6;
      }
      uint64_t v74 = v81;
      sub_240954078();
      uint64_t v75 = sub_2409540B8();
      os_log_type_t v78 = sub_240954C38();
      if (os_log_type_enabled(v75, v78))
      {
        uint64_t v79 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v79 = 0;
        _os_log_impl(&dword_240818000, v75, v78, "healthRecordsSupportedPublisher was nil", v79, 2u);
        MEMORY[0x2456021C0](v79, -1, -1);
      }
      swift_release();
    }
    else
    {
      uint64_t v74 = v82;
      sub_240954078();
      uint64_t v75 = sub_2409540B8();
      os_log_type_t v76 = sub_240954C38();
      if (os_log_type_enabled(v75, v76))
      {
        uint64_t v77 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v77 = 0;
        _os_log_impl(&dword_240818000, v75, v76, "accountStateChangePublisher was nil", v77, 2u);
        MEMORY[0x2456021C0](v77, -1, -1);
      }
    }

    sub_24083AF34(v36, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v74, v104);
    return v2;
  }
  uint64_t v40 = v108;
  sub_24083B4E8(v36, v108);
  uint64_t v41 = type metadata accessor for ClinicalSharingGenerator();
  swift_allocObject();
  uint64_t v42 = sub_24081D768(v40);
  uint64_t v116 = v41;
  uint64_t v117 = sub_24083696C(&qword_26AFCE380, (void (*)(uint64_t))type metadata accessor for ClinicalSharingGenerator);
  uint64_t v115 = v42;
  uint64_t v43 = v105;
  sub_2409543A8();
  sub_240866BC4();
  uint64_t v44 = v107;
  uint64_t v45 = sub_240954498();
  sub_24083AF34(v36, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  (*(void (**)(char *, uint64_t))(v106 + 8))(v43, v44);
  v2[2] = v45;
LABEL_6:
  swift_release();
  return v2;
}

void sub_240835BEC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void *sub_240835C50(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v90 = v1;
  uint64_t v85 = v3;
  uint64_t v4 = type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t v83 = *(void *)(v4 - 8);
  uint64_t v82 = *(void *)(v83 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v80 = (uint64_t)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240834760(0, &qword_26AFD05B0, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v74 = (char *)&v63 - v7;
  uint64_t v8 = sub_240954D58();
  uint64_t v76 = *(void *)(v8 - 8);
  uint64_t v77 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v73 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240842AD4();
  uint64_t v79 = v10;
  uint64_t v81 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v75 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408456D4();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v86 = v12;
  uint64_t v87 = v13;
  MEMORY[0x270FA5388](v12);
  os_log_type_t v78 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240846ED0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v88 = v15;
  uint64_t v89 = v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v84 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_240954DE8();
  uint64_t v67 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v64 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408452E0();
  uint64_t v68 = v19;
  uint64_t v69 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v65 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_240951EF8();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_240951F18();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v63 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = a1;
  sub_24083B4E8(a1, (uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords27RecordKindGeneratorPipeline_context);
  id v70 = (id)sub_240951F68();
  uint64_t v72 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_240834760(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v29 = sub_240951C08();
  uint64_t v30 = *(void *)(v29 - 8);
  unint64_t v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v32 = swift_allocObject();
  long long v71 = xmmword_240956800;
  *(_OWORD *)(v32 + 16) = xmmword_240956800;
  (*(void (**)(unint64_t, void, uint64_t))(v30 + 104))(v32 + v31, *MEMORY[0x263F45520], v29);
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v24, *MEMORY[0x263F45688], v21);
  sub_240951F08();
  uint64_t v33 = v90;
  (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))((uint64_t)v90 + OBJC_IVAR____TtC13HealthRecords27RecordKindGeneratorPipeline_domain, v28, v25);
  uint64_t v34 = v63;
  sub_240951F38();
  sub_2408304E8(v92, v93);
  uint64_t v35 = (void *)sub_240951E98();
  objc_msgSend(v35, sel_supportsHealthRecords);

  sub_2408371B8((uint64_t)v92);
  sub_240951F38();
  sub_2408304E8(v92, v93);
  uint64_t v36 = (void *)sub_240951E98();
  sub_2408371B8((uint64_t)v92);
  id v37 = objc_msgSend(self, sel_defaultCenter);
  id v38 = v36;
  id v70 = v38;
  uint64_t v39 = v64;
  sub_240954DF8();

  sub_240836924(&qword_26AFD05C0, MEMORY[0x263F07CB0]);
  uint64_t v40 = v65;
  uint64_t v41 = v66;
  sub_2409544F8();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v39, v41);
  sub_240836924((unint64_t *)&qword_26AFD0428, (void (*)(uint64_t))sub_2408452E0);
  uint64_t v42 = v68;
  uint64_t v43 = sub_240954498();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v40, v42);
  *(void *)((char *)v33 + OBJC_IVAR____TtC13HealthRecords27RecordKindGeneratorPipeline_indexerPublisher) = v43;
  uint64_t v44 = (void *)sub_240951F98();
  v92[0] = v43;
  swift_retain();
  uint64_t v45 = v73;
  sub_240954D48();
  uint64_t v91 = v44;
  uint64_t v46 = sub_240954D38();
  uint64_t v47 = (uint64_t)v74;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v74, 1, 1, v46);
  sub_240841250();
  sub_24083FA04();
  sub_240836924((unint64_t *)&qword_26AFD0468, (void (*)(uint64_t))sub_240841250);
  sub_240836924((unint64_t *)&qword_26AFD05B8, (void (*)(uint64_t))sub_24083FA04);
  uint64_t v48 = v75;
  sub_2409545A8();
  sub_24083335C(v47);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v45, v77);
  swift_release();
  uint64_t v49 = v80;
  sub_24083B4E8(v34, v80);
  unint64_t v50 = (*(unsigned __int8 *)(v83 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
  unint64_t v51 = (v82 + v50 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v52 = swift_allocObject();
  sub_24083B484(v49, v52 + v50);
  *(void *)(v52 + v51) = v85;
  sub_24084855C();
  sub_240836924(&qword_26AFCF228, (void (*)(uint64_t))sub_240842AD4);
  uint64_t v54 = v78;
  uint64_t v53 = v79;
  sub_2409544F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v48, v53);
  sub_240834760(0, &qword_26AFD05F0, (uint64_t (*)(uint64_t))sub_24084855C, v72);
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = v71;
  sub_24083B4E8(v34, v49);
  uint64_t v56 = type metadata accessor for RecordKindGenerator(0);
  swift_allocObject();
  uint64_t v57 = sub_24081E444(v49);
  *(void *)(v55 + 56) = v56;
  *(void *)(v55 + 64) = sub_240836924(&qword_26AFCFCF8, (void (*)(uint64_t))type metadata accessor for RecordKindGenerator);
  *(void *)(v55 + 32) = v57;
  sub_240836924(&qword_26AFCEF70, (void (*)(uint64_t))sub_2408456D4);
  uint64_t v58 = v84;
  uint64_t v59 = v86;
  sub_240954588();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v54, v59);
  sub_240836924(&qword_26AFCEDC0, (void (*)(uint64_t))sub_240846ED0);
  uint64_t v60 = v88;
  uint64_t v61 = sub_240954498();

  sub_24083B3B4(v34);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v58, v60);
  uint64_t result = v90;
  v90[2] = v61;
  return result;
}

uint64_t sub_240836924(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24083696C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2408369B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2408369FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240836A44()
{
  uint64_t v25 = v0;
  uint64_t v1 = *(void *)(v0 + 272);
  uint64_t v2 = *(void *)(v0 + 248);

  sub_240954078();
  sub_24083B4E8(v2, v1);
  uint64_t v3 = sub_2409540B8();
  os_log_type_t v4 = sub_240954C38();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v22 = *(void *)(v0 + 312);
    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v0 + 336);
    uint64_t v20 = *(void **)(v0 + 328);
    uint64_t v21 = *(void *)(v0 + 288);
    uint64_t v18 = *(void *)(v0 + 272);
    uint64_t v5 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v24 = v19;
    *(_DWORD *)uint64_t v5 = 136315394;
    uint64_t v6 = sub_2409557A8();
    *(void *)(v0 + 216) = sub_2408370E4(v6, v7, &v24);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    uint64_t v8 = (void *)sub_240951F68();
    uint64_t v9 = sub_240951C78();
    unint64_t v11 = v10;

    *(void *)(v0 + 224) = sub_2408370E4(v9, v11, &v24);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    sub_24083B3B4(v18);
    _os_log_impl(&dword_240818000, v3, v4, "[%s] Marked universal shard as required for first launch on profile: %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v19, -1, -1);
    MEMORY[0x2456021C0](v5, -1, -1);

    v23(v22, v21);
  }
  else
  {
    uint64_t v13 = *(void **)(v0 + 328);
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v0 + 336);
    uint64_t v14 = *(void *)(v0 + 312);
    uint64_t v15 = *(void *)(v0 + 288);
    sub_24083B3B4(*(void *)(v0 + 272));

    v12(v14, v15);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_240836CF4()
{
  uint64_t v33 = v0;
  uint64_t v1 = v0[31];
  uint64_t v2 = v0[35];
  sub_240951F38();
  sub_2408304E8(v0 + 10, v0[13]);
  uint64_t v3 = (void *)sub_240951E98();
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A5C8]), sel_initWithHealthStore_, v3);
  v0[41] = v4;

  sub_2408371B8((uint64_t)(v0 + 10));
  sub_240954078();
  sub_24083B4E8(v1, v2);
  uint64_t v5 = sub_2409540B8();
  os_log_type_t v6 = sub_240954C38();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v28 = v0[37];
    uint64_t v29 = v0[36];
    uint64_t v30 = v0[40];
    uint64_t v25 = v0[35];
    id v31 = v4;
    uint64_t v7 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v32 = v27;
    *(_DWORD *)uint64_t v7 = 136315394;
    uint64_t v8 = sub_2409557A8();
    v0[29] = sub_2408370E4(v8, v9, &v32);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    os_log_type_t type = v6;
    unint64_t v10 = (void *)sub_240951F68();
    uint64_t v11 = sub_240951C78();
    unint64_t v13 = v12;

    v0[30] = sub_2408370E4(v11, v13, &v32);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    sub_24083B3B4(v25);
    _os_log_impl(&dword_240818000, v5, type, "[%s] Marking universal shard as required for first launch on profile: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v27, -1, -1);
    uint64_t v14 = v7;
    id v4 = v31;
    MEMORY[0x2456021C0](v14, -1, -1);

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v15(v30, v29);
  }
  else
  {
    uint64_t v16 = v0[40];
    uint64_t v17 = v0[36];
    uint64_t v18 = v0[37];
    sub_24083B3B4(v0[35]);

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v15(v16, v17);
  }
  v0[42] = v15;
  sub_240837420(0, &qword_26AFCF408, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardIdentifier, MEMORY[0x263F8E0F8]);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_240956800;
  uint64_t v20 = (void *)*MEMORY[0x263F09B60];
  *(void *)(v19 + 32) = *MEMORY[0x263F09B60];
  type metadata accessor for HKOntologyShardIdentifier(0);
  id v21 = v20;
  uint64_t v22 = sub_240954988();
  v0[43] = v22;
  swift_bridgeObjectRelease();
  v0[2] = v0;
  v0[3] = sub_24083F0E4;
  uint64_t v23 = swift_continuation_init();
  v0[15] = MEMORY[0x263EF8330];
  v0[16] = 0x40000000;
  v0[17] = sub_24083EF14;
  v0[18] = &unk_2650D8630;
  v0[19] = v23;
  objc_msgSend(v4, sel_markShardsWithIdentifiers_options_completion_, v22, 5, v0 + 15);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_2408370E4(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_240837208(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_2408373C4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_2408373C4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_2408371B8((uint64_t)v12);
  return v7;
}

uint64_t sub_2408371B8(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_240837208(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_2409550C8();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_240837520(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_2409552E8();
  if (!v8)
  {
    sub_240955398();
    __break(1u);
LABEL_17:
    uint64_t result = sub_240955448();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_2408373C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_240837420(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_240837484(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_2408374D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x263F8D310]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_240837520(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_2408375B8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_2408B2A00(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_2408B2A00(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_2408375B8(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_240837730(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_2409552B8();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_240955398();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_2409548B8();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_240955448();
    __break(1u);
LABEL_14:
    uint64_t result = sub_240955398();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_240837730(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_240837828(0, &qword_26AFCF410, MEMORY[0x263F8E778], MEMORY[0x263F8E0F8]);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

void type metadata accessor for HKOntologyShardIdentifier(uint64_t a1)
{
}

void sub_2408377E0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_240954A38();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_240837828(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void *sub_240837874(uint64_t a1)
{
  uint64_t v81 = *v1;
  uint64_t v82 = v1;
  uint64_t v3 = type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t v71 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v72 = v4;
  uint64_t v73 = (uint64_t)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240848314();
  uint64_t v69 = *(void *)(v5 - 8);
  uint64_t v70 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v68 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240846B28();
  uint64_t v77 = v7;
  uint64_t v75 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v74 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24084766C();
  uint64_t v78 = *(void *)(v9 - 8);
  uint64_t v79 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v76 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240838530(0, &qword_26AFCE248, (uint64_t (*)(uint64_t))sub_240898C54, MEMORY[0x263F08F88]);
  uint64_t v63 = v11;
  uint64_t v62 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v61 = (char *)&v61 - v12;
  sub_240838530(0, qword_26AFCCDE0, type metadata accessor for UDCSnippetGeneratorData, MEMORY[0x263F8D8F0]);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v66 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v80 = (uint64_t)&v61 - v16;
  uint64_t v65 = sub_240951EF8();
  uint64_t v17 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v19 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_240951F18();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = a1;
  sub_24083D410(a1, (uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords25UserDomainConceptPipeline_context, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  sub_240951F68();
  sub_240838530(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v24 = sub_240951C08();
  uint64_t v25 = *(void *)(v24 - 8);
  unint64_t v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v27 = swift_allocObject();
  long long v67 = xmmword_240956800;
  *(_OWORD *)(v27 + 16) = xmmword_240956800;
  (*(void (**)(unint64_t, void, uint64_t))(v25 + 104))(v27 + v26, *MEMORY[0x263F45520], v24);
  uint64_t v28 = (uint64_t)v66;
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x263F45688], v65);
  sub_240951F08();
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))((uint64_t)v82 + OBJC_IVAR____TtC13HealthRecords25UserDomainConceptPipeline_domain, v23, v20);
  uint64_t v29 = v64;
  uint64_t v30 = v80;
  sub_240821374(v80);
  sub_240952808();
  id v31 = (void *)sub_2409527D8();
  sub_240951F38();
  sub_2408304E8(v84, v85);
  uint64_t v32 = (void *)sub_240951E98();
  id v33 = objc_msgSend(v32, sel_profileIdentifier);

  sub_2409527B8();
  sub_2408371B8((uint64_t)v84);
  sub_240849498(v30, v28);
  uint64_t v34 = type metadata accessor for UDCSnippetGeneratorData(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v28, 1, v34) == 1)
  {
    sub_240849428(v28, qword_26AFCCDE0, type metadata accessor for UDCSnippetGeneratorData);
    uint64_t v35 = 0;
  }
  else
  {
    uint64_t v36 = v62;
    id v37 = v61;
    uint64_t v38 = v63;
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v61, v28, v63);
    sub_240838594(v28, type metadata accessor for UDCSnippetGeneratorData);
    uint64_t v35 = (void *)sub_240954658();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
  }
  sub_240838530(0, &qword_26AFCF400, MEMORY[0x263F46018], MEMORY[0x263F8E0F8]);
  uint64_t v39 = sub_2409528B8();
  uint64_t v40 = *(void *)(v39 - 8);
  unint64_t v41 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = v67;
  (*(void (**)(unint64_t, void, uint64_t))(v40 + 104))(v42 + v41, *MEMORY[0x263F45FE8], v39);
  uint64_t v43 = sub_2409531A8();
  swift_release();
  swift_bridgeObjectRelease();

  uint64_t v44 = (void *)sub_2409527D8();
  sub_240951F38();
  sub_2408304E8(v84, v85);
  uint64_t v45 = (void *)sub_240951E98();
  id v46 = objc_msgSend(v45, sel_profileIdentifier);

  sub_240952788();
  sub_2408371B8((uint64_t)v84);
  uint64_t v47 = sub_240953F98();
  swift_release();
  uint64_t v83 = v43;
  v84[0] = v47;
  sub_240841DD4();
  sub_240841198();
  sub_24083971C(&qword_26AFCF2A8, (void (*)(uint64_t))sub_240841DD4);
  sub_24083971C(&qword_26AFCDD80, (void (*)(uint64_t))sub_240841198);
  uint64_t v48 = v68;
  sub_2409544E8();
  swift_release();
  sub_24083971C(&qword_26AFCECC0, (void (*)(uint64_t))sub_240848314);
  uint64_t v49 = v70;
  unint64_t v50 = v74;
  sub_2409544B8();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v48, v49);
  uint64_t v51 = v73;
  sub_24083D410(v29, v73, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  unint64_t v52 = (*(unsigned __int8 *)(v71 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
  unint64_t v53 = (v72 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v54 = swift_allocObject();
  sub_240824460(v51, v54 + v52, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  *(void *)(v54 + v53) = v81;
  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = sub_2408A8E94;
  *(void *)(v55 + 24) = v54;
  sub_2408484BC(0, (unint64_t *)&qword_26AFD03C8);
  sub_24083971C(&qword_26AFCEDE0, (void (*)(uint64_t))sub_240846B28);
  uint64_t v57 = v76;
  uint64_t v56 = v77;
  sub_2409544A8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v50, v56);
  sub_24083971C(&qword_26AFCED60, (void (*)(uint64_t))sub_24084766C);
  uint64_t v58 = v79;
  uint64_t v59 = sub_240954498();
  swift_release();
  sub_240838594(v29, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v57, v58);
  sub_240849428(v80, qword_26AFCCDE0, type metadata accessor for UDCSnippetGeneratorData);
  uint64_t result = v82;
  v82[2] = v59;
  return result;
}

void sub_240838530(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_240838594(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_2408385F4(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v89 = v1;
  uint64_t v116 = v3;
  uint64_t v4 = type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t v114 = *(void *)(v4 - 8);
  uint64_t v113 = *(void *)(v114 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v112 = (uint64_t)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408348F0(0, &qword_26AFD05B0, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v104 = (char *)&v88 - v7;
  uint64_t v8 = sub_240954D58();
  uint64_t v108 = *(void *)(v8 - 8);
  uint64_t v109 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v102 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24084797C();
  uint64_t v105 = v10;
  uint64_t v106 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v101 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24084283C();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v110 = v12;
  uint64_t v111 = v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v103 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240847458();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v117 = v15;
  uint64_t v118 = v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v107 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240846FBC();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v119 = v18;
  uint64_t v120 = v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v115 = (char *)&v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_240954DE8();
  uint64_t v97 = *(void *)(v95 - 8);
  MEMORY[0x270FA5388](v95);
  uint64_t v93 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408452E0();
  uint64_t v96 = v22;
  uint64_t v98 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v94 = (char *)&v88 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240845E24();
  uint64_t v92 = v24;
  uint64_t v99 = *(void (***)(void, void))(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v91 = (char *)&v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_240951EF8();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v88 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_240951F18();
  uint64_t v31 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  id v33 = (char *)&v88 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = a1;
  sub_24083B4E8(a1, (uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords27NewRecordsGeneratorPipeline_context);
  uint64_t v88 = sub_240951F68();
  sub_2408348F0(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v34 = sub_240951C08();
  uint64_t v35 = *(void *)(v34 - 8);
  unint64_t v36 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  uint64_t v37 = swift_allocObject();
  long long v100 = xmmword_240956800;
  *(_OWORD *)(v37 + 16) = xmmword_240956800;
  (*(void (**)(unint64_t, void, uint64_t))(v35 + 104))(v37 + v36, *MEMORY[0x263F45548], v34);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v29, *MEMORY[0x263F45688], v26);
  sub_240951F08();
  uint64_t v38 = v89;
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))((uint64_t)v89 + OBJC_IVAR____TtC13HealthRecords27NewRecordsGeneratorPipeline_domain, v33, v30);
  uint64_t v39 = v90;
  sub_240951F38();
  uint64_t v40 = v125;
  uint64_t v41 = v126;
  sub_2408304E8(&v124, v125);
  id v42 = sub_24083CA3C(v40, v41);
  id v43 = objc_msgSend(self, sel_medicalRecordTypes);
  sub_24083EDCC(0, (unint64_t *)&qword_26AFD0580);
  uint64_t v44 = sub_240954998();

  type metadata accessor for NewRecordsUpdateObserver();
  uint64_t v45 = (void *)swift_allocObject();
  uint64_t v122 = 0;
  char v123 = -1;
  sub_240840F5C();
  swift_allocObject();
  v45[4] = sub_240954358();
  v45[5] = 0;
  v45[2] = v42;
  v45[3] = v44;
  v45[5] = sub_240839844();
  swift_release();
  sub_2408371B8((uint64_t)&v124);
  id v46 = v38;
  *(void *)((char *)v38 + OBJC_IVAR____TtC13HealthRecords27NewRecordsGeneratorPipeline_newRecordsUpdateObserver) = v45;
  uint64_t v124 = v45[4];
  sub_2408397FC(&qword_26AFCE228, (void (*)(uint64_t))sub_240840F5C);
  swift_retain();
  uint64_t v47 = v91;
  sub_2409544F8();
  swift_release();
  sub_2408397FC(&qword_26AFCE1A0, (void (*)(uint64_t))sub_240845E24);
  uint64_t v48 = v92;
  uint64_t v49 = sub_240954498();
  ((void (**)(char *, uint64_t))v99)[1](v47, v48);
  *(void *)((char *)v46 + OBJC_IVAR____TtC13HealthRecords27NewRecordsGeneratorPipeline_newRecordsUpdatePublisher) = v49;
  unint64_t v50 = v46;
  sub_240951F38();
  sub_2408304E8(&v124, v125);
  uint64_t v51 = (void *)sub_240951E98();
  sub_2408371B8((uint64_t)&v124);
  id v52 = objc_msgSend(self, sel_defaultCenter);
  id v53 = v51;
  uint64_t v99 = (void (**)(void, void))v53;
  uint64_t v54 = v93;
  sub_240954DF8();

  sub_2408397FC(&qword_26AFD05C0, MEMORY[0x263F07CB0]);
  uint64_t v55 = v94;
  uint64_t v56 = v95;
  sub_2409544F8();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v54, v56);
  sub_2408397FC((unint64_t *)&qword_26AFD0428, (void (*)(uint64_t))sub_2408452E0);
  uint64_t v57 = v96;
  uint64_t v58 = sub_240954498();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v55, v57);
  uint64_t v59 = v50;
  *(void *)((char *)v50 + OBJC_IVAR____TtC13HealthRecords27NewRecordsGeneratorPipeline_indexerPublisher) = v58;
  uint64_t v60 = (void *)sub_240951F98();
  sub_240952808();
  uint64_t v61 = (void *)sub_2409527D8();
  sub_240951F38();
  sub_2408304E8(&v124, v125);
  uint64_t v62 = (void *)sub_240951E98();
  id v63 = objc_msgSend(v62, sel_profileIdentifier);

  sub_240952788();
  sub_2408371B8((uint64_t)&v124);
  uint64_t v64 = sub_240953F98();
  swift_release();
  uint64_t v65 = *(void *)((char *)v50 + OBJC_IVAR____TtC13HealthRecords27NewRecordsGeneratorPipeline_newRecordsUpdatePublisher);
  uint64_t v124 = v64;
  uint64_t v121 = *(void *)((char *)v50 + OBJC_IVAR____TtC13HealthRecords27NewRecordsGeneratorPipeline_indexerPublisher);
  uint64_t v122 = v65;
  sub_240841DD4();
  sub_240841250();
  sub_2408397FC(&qword_26AFCF2A8, (void (*)(uint64_t))sub_240841DD4);
  sub_2408397FC((unint64_t *)&qword_26AFD0468, (void (*)(uint64_t))sub_240841250);
  uint64_t v66 = v101;
  sub_2409544D8();
  swift_release();
  long long v67 = v102;
  sub_240954D48();
  uint64_t v124 = (uint64_t)v60;
  uint64_t v68 = sub_240954D38();
  uint64_t v69 = (uint64_t)v104;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v104, 1, 1, v68);
  sub_24083EDCC(0, (unint64_t *)&qword_26AFD07B0);
  sub_2408397FC(&qword_26AFCED40, (void (*)(uint64_t))sub_24084797C);
  sub_24083FA44();
  uint64_t v70 = v103;
  uint64_t v71 = v105;
  sub_2409545A8();
  sub_24083335C(v69);
  (*(void (**)(char *, uint64_t))(v108 + 8))(v67, v109);
  (*(void (**)(char *, uint64_t))(v106 + 8))(v66, v71);
  uint64_t v72 = v112;
  sub_24083B4E8(v39, v112);
  unint64_t v73 = (*(unsigned __int8 *)(v114 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
  unint64_t v74 = (v113 + v73 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v75 = swift_allocObject();
  uint64_t v76 = v75 + v73;
  uint64_t v77 = v72;
  sub_24083B484(v72, v76);
  *(void *)(v75 + v74) = v116;
  sub_2408484BC(0, (unint64_t *)&qword_26AFD03C8);
  sub_2408397FC(&qword_26AFCF258, (void (*)(uint64_t))sub_24084283C);
  uint64_t v78 = v107;
  uint64_t v79 = v110;
  sub_2409544A8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v111 + 8))(v70, v79);
  sub_24083F418(0, &qword_26AFD05F0, MEMORY[0x263F8E0F8]);
  uint64_t v80 = swift_allocObject();
  *(_OWORD *)(v80 + 16) = v100;
  sub_24083B4E8(v39, v77);
  uint64_t v81 = type metadata accessor for NewRecordsGenerator();
  swift_allocObject();
  uint64_t v82 = sub_24081E954(v77);
  *(void *)(v80 + 56) = v81;
  *(void *)(v80 + 64) = sub_2408397FC(&qword_26AFCFA68, (void (*)(uint64_t))type metadata accessor for NewRecordsGenerator);
  *(void *)(v80 + 32) = v82;
  sub_2408397FC(&qword_26AFCED90, (void (*)(uint64_t))sub_240847458);
  uint64_t v83 = v115;
  uint64_t v84 = v117;
  sub_240954588();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v118 + 8))(v78, v84);
  sub_2408397FC(&qword_26AFCEDB0, (void (*)(uint64_t))sub_240846FBC);
  uint64_t v85 = v119;
  uint64_t v86 = sub_240954498();
  (*(void (**)(char *, uint64_t))(v120 + 8))(v83, v85);
  v59[2] = v86;
  sub_240839844();

  swift_release();
  sub_24083B3B4(v39);
  return v59;
}

uint64_t sub_24083971C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240839764(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2408331A8(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2408397B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2408397FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240839844()
{
  sub_240954028();
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = objc_msgSend(v1, sel_healthStore);
  uint64_t v3 = (void *)sub_240954018();
  sub_240953FA8();
  id v4 = objc_msgSend(v1, sel_healthStore);
  sub_240953F58();

  id v5 = v1;
  swift_retain();
  id v6 = objc_msgSend(v5, sel_healthStore);
  sub_240952FD8();
  swift_allocObject();
  sub_240952FB8();

  swift_allocObject();
  swift_weakInit();
  swift_retain();
  id v7 = objc_msgSend(v5, sel_healthStore);
  id v8 = objc_msgSend(self, sel_medicalRecordTypes);
  sub_240839A1C();
  sub_240954998();

  uint64_t v9 = sub_240954BE8();
  swift_release_n();
  swift_release();

  swift_release_n();
  swift_bridgeObjectRelease();
  return v9;
}

unint64_t sub_240839A1C()
{
  unint64_t result = qword_26AFD0580;
  if (!qword_26AFD0580)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD0580);
  }
  return result;
}

void *sub_240839A5C(uint64_t a1)
{
  return sub_240839A80(a1);
}

void *sub_240839A80(uint64_t a1)
{
  uint64_t v29 = a1;
  sub_240837420(0, (unint64_t *)&unk_26AFCE028, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v27 = (char *)&v25 - v3;
  uint64_t v4 = sub_240951FB8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t v9 = v8 - 8;
  uint64_t v26 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v26 + 64);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v25 - v13;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v15(v7, a1, v4);
  v15(v12, (uint64_t)v7, v4);
  sub_240951F38();
  sub_2408304E8(v30, v30[3]);
  uint64_t v16 = (void *)sub_240951E98();
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F45C78]), sel_initWithHealthStore_, v16);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_2408371B8((uint64_t)v30);
  *(void *)&v12[*(int *)(v9 + 28)] = v17;
  sub_24083B484((uint64_t)v12, (uint64_t)v14);
  if (sub_240951F78())
  {
    sub_2408D6F94((uint64_t)v14);
  }
  else if (sub_240951F48())
  {
    uint64_t v19 = sub_240954AB8();
    uint64_t v20 = (uint64_t)v27;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v27, 1, 1, v19);
    sub_24083B4E8((uint64_t)v14, (uint64_t)v12);
    unint64_t v21 = (*(unsigned __int8 *)(v26 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
    uint64_t v22 = (void *)swift_allocObject();
    v22[2] = 0;
    v22[3] = 0;
    v22[4] = v28;
    sub_24083B484((uint64_t)v12, (uint64_t)v22 + v21);
    swift_retain();
    sub_240839E0C(v20, (uint64_t)&unk_268C91578, (uint64_t)v22);
    swift_release();
    uint64_t v18 = sub_24083A0EC((uint64_t)v14);
  }
  else
  {
    uint64_t v18 = sub_2408D7730((uint64_t)v14);
  }
  uint64_t v23 = v18;
  sub_24083B3B4((uint64_t)v14);
  return v23;
}

uint64_t sub_240839E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240954AB8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_240954AA8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_24083A03C(a1, (unint64_t *)&unk_26AFCE028, MEMORY[0x263F8F520]);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_240954A48();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_240839FCC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_24083FAAC(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_24083A03C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_24083A098(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_24083A098(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240955098();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *sub_24083A0EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HealthRecordsGeneratorContext();
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)sub_240951F68();
  if (!v5) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v6 = v5;
  switch((unint64_t)objc_msgSend(v5, sel_type))
  {
    case 1uLL:
      uint64_t v7 = sub_24083A370(a1);
      goto LABEL_13;
    case 2uLL:
      long long v18 = xmmword_240956800;
      sub_24083B4E8(a1, (uint64_t)v4);
      uint64_t v9 = type metadata accessor for SharedConceptFeedItemPipeline();
      swift_allocObject();
      uint64_t v10 = sub_240832130((uint64_t)v4);
      v19[3] = v9;
      v19[4] = sub_24083ACA8(&qword_26AFCD458, (void (*)(uint64_t))type metadata accessor for SharedConceptFeedItemPipeline);
      v19[0] = v10;
      sub_24083AB38((uint64_t)v19, (uint64_t)v17);
      sub_24083ABB8((uint64_t)v17, (uint64_t)&v14);
      if (v15)
      {
        sub_24083AB20(&v14, (uint64_t)v16);
        sub_24083AB20(v16, (uint64_t)&v14);
        uint64_t v8 = (void *)MEMORY[0x263F8EE78];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v8 = sub_24083AEB8(0, v8[2] + 1, 1, v8);
        }
        unint64_t v12 = v8[2];
        unint64_t v11 = v8[3];
        if (v12 >= v11 >> 1) {
          uint64_t v8 = sub_24083AEB8((void *)(v11 > 1), v12 + 1, 1, v8);
        }
        void v8[2] = v12 + 1;
        sub_24083AB20(&v14, (uint64_t)&v8[5 * v12 + 4]);
      }
      else
      {
        sub_2408D7D9C((uint64_t)&v14);
        uint64_t v8 = (void *)MEMORY[0x263F8EE78];
      }

      sub_24083AC38(0, (unint64_t *)&qword_26AFD0638, MEMORY[0x263F8D8F0]);
      swift_arrayDestroy();
      return v8;
    case 4uLL:
      uint64_t v7 = sub_2408D7168(a1);
LABEL_13:
      uint64_t v8 = v7;

      break;
    default:

      return (void *)MEMORY[0x263F8EE78];
  }
  return v8;
}

void *sub_24083A370(uint64_t a1)
{
  v43[77] = *MEMORY[0x263EF8340];
  uint64_t v2 = type metadata accessor for HealthRecordsGeneratorContext();
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24083F4E0();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240959D90;
  sub_24083B4E8(a1, (uint64_t)v4);
  uint64_t v6 = type metadata accessor for AccountStatusSummaryTileGeneratorPipeline();
  swift_allocObject();
  uint64_t v7 = sub_2408333E8((uint64_t)v4);
  *(void *)(inited + 56) = v6;
  *(void *)(inited + 64) = sub_24083ACA8(&qword_26AFCEA00, (void (*)(uint64_t))type metadata accessor for AccountStatusSummaryTileGeneratorPipeline);
  *(void *)(inited + 32) = v7;
  sub_24083B4E8(a1, (uint64_t)v4);
  uint64_t v8 = type metadata accessor for AddAccountGeneratorPipeline();
  swift_allocObject();
  uint64_t v9 = sub_2408251F0((uint64_t)v4);
  *(void *)(inited + 96) = v8;
  *(void *)(inited + 104) = sub_24083ACA8(&qword_26AFD00D0, (void (*)(uint64_t))type metadata accessor for AddAccountGeneratorPipeline);
  *(void *)(inited + 72) = v9;
  sub_24083B4E8(a1, (uint64_t)v4);
  uint64_t v10 = type metadata accessor for CategoryGeneratorPipeline(0);
  swift_allocObject();
  uint64_t v11 = sub_24083CA48((uint64_t)v4);
  *(void *)(inited + 136) = v10;
  *(void *)(inited + 144) = sub_24083ACA8(&qword_26AFD0008, (void (*)(uint64_t))type metadata accessor for CategoryGeneratorPipeline);
  *(void *)(inited + 112) = v11;
  sub_24083B4E8(a1, (uint64_t)v4);
  uint64_t v12 = type metadata accessor for ClinicalNotificationSettingsGeneratorPipeline();
  swift_allocObject();
  uint64_t v13 = sub_24081F2C0((uint64_t)v4);
  *(void *)(inited + 176) = v12;
  *(void *)(inited + 184) = sub_24083ACA8(&qword_26AFCD888, (void (*)(uint64_t))type metadata accessor for ClinicalNotificationSettingsGeneratorPipeline);
  *(void *)(inited + 152) = v13;
  sub_24083B4E8(a1, (uint64_t)v4);
  uint64_t v14 = type metadata accessor for NewRecordsGeneratorPipeline();
  swift_allocObject();
  uint64_t v15 = sub_2408385F4((uint64_t)v4);
  *(void *)(inited + 216) = v14;
  *(void *)(inited + 224) = sub_24083ACA8(&qword_26AFCF970, (void (*)(uint64_t))type metadata accessor for NewRecordsGeneratorPipeline);
  *(void *)(inited + 192) = v15;
  sub_24083B4E8(a1, (uint64_t)v4);
  uint64_t v16 = type metadata accessor for RecordKindGeneratorPipeline();
  swift_allocObject();
  id v17 = sub_240835C50((uint64_t)v4);
  *(void *)(inited + 256) = v16;
  *(void *)(inited + 264) = sub_24083ACA8(&qword_26AFD0220, (void (*)(uint64_t))type metadata accessor for RecordKindGeneratorPipeline);
  *(void *)(inited + 232) = v17;
  sub_24083B4E8(a1, (uint64_t)v4);
  uint64_t v18 = type metadata accessor for UserDomainConceptPipeline();
  swift_allocObject();
  uint64_t v19 = sub_240837874((uint64_t)v4);
  *(void *)(inited + 296) = v18;
  *(void *)(inited + 304) = sub_24083ACA8(&qword_26AFCCFE0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptPipeline);
  *(void *)(inited + 272) = v19;
  sub_24083B4E8(a1, (uint64_t)v4);
  uint64_t v20 = type metadata accessor for OnboardingGeneratorPipeline();
  swift_allocObject();
  unint64_t v21 = sub_24082F890((uint64_t)v4);
  *(void *)(inited + 336) = v20;
  *(void *)(inited + 344) = sub_24083ACA8(&qword_26AFCD1B8, (void (*)(uint64_t))type metadata accessor for OnboardingGeneratorPipeline);
  *(void *)(inited + 312) = v21;
  sub_24083B4E8(a1, (uint64_t)v4);
  uint64_t v22 = type metadata accessor for LabTipsGeneratorPipeline();
  swift_allocObject();
  uint64_t v23 = sub_2408305BC((uint64_t)v4);
  *(void *)(inited + 376) = v22;
  *(void *)(inited + 384) = sub_24083ACA8(&qword_26AFCCE40, (void (*)(uint64_t))type metadata accessor for LabTipsGeneratorPipeline);
  *(void *)(inited + 352) = v23;
  sub_24083B4E8(a1, (uint64_t)v4);
  uint64_t v24 = type metadata accessor for RemovedCategoriesGeneratorPipeline();
  swift_allocObject();
  uint64_t v25 = sub_24082F0DC((uint64_t)v4);
  *(void *)(inited + 416) = v24;
  *(void *)(inited + 424) = sub_24083ACA8(&qword_26AFCD6F8, (void (*)(uint64_t))type metadata accessor for RemovedCategoriesGeneratorPipeline);
  *(void *)(inited + 392) = v25;
  uint64_t v39 = inited;
  uint64_t v26 = swift_initStackObject();
  long long v38 = xmmword_240956800;
  *(_OWORD *)(v26 + 16) = xmmword_240956800;
  sub_24083B4E8(a1, (uint64_t)v4);
  uint64_t v27 = type metadata accessor for SharedConceptFeedItemPipeline();
  swift_allocObject();
  uint64_t v28 = sub_240832130((uint64_t)v4);
  *(void *)(v26 + 56) = v27;
  *(void *)(v26 + 64) = sub_24083ACA8(&qword_26AFCD458, (void (*)(uint64_t))type metadata accessor for SharedConceptFeedItemPipeline);
  *(void *)(v26 + 32) = v28;
  sub_24083B5CC(v26);
  uint64_t v29 = swift_initStackObject();
  *(_OWORD *)(v29 + 16) = v38;
  sub_24083B4E8(a1, (uint64_t)v4);
  uint64_t v30 = type metadata accessor for ClinicalSharingGeneratorPipeline();
  swift_allocObject();
  uint64_t v31 = sub_240834AEC((uint64_t)v4);
  *(void *)(v29 + 56) = v30;
  *(void *)(v29 + 64) = sub_24083ACA8(&qword_26AFCE5B8, (void (*)(uint64_t))type metadata accessor for ClinicalSharingGeneratorPipeline);
  *(void *)(v29 + 32) = v31;
  sub_24083B5CC(v29);
  uint64_t v32 = *(void *)(v39 + 16);
  if (v32)
  {
    uint64_t v33 = v39 + 32;
    swift_bridgeObjectRetain();
    uint64_t v34 = (void *)MEMORY[0x263F8EE78];
    do
    {
      sub_24083AB38(v33, (uint64_t)v43);
      sub_24083ABB8((uint64_t)v43, (uint64_t)&v40);
      if (v41)
      {
        sub_24083AB20(&v40, (uint64_t)v42);
        sub_24083AB20(v42, (uint64_t)&v40);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v34 = sub_24083AEB8(0, v34[2] + 1, 1, v34);
        }
        unint64_t v36 = v34[2];
        unint64_t v35 = v34[3];
        if (v36 >= v35 >> 1) {
          uint64_t v34 = sub_24083AEB8((void *)(v35 > 1), v36 + 1, 1, v34);
        }
        v34[2] = v36 + 1;
        sub_24083AB20(&v40, (uint64_t)&v34[5 * v36 + 4]);
      }
      else
      {
        sub_2408D7D9C((uint64_t)&v40);
      }
      v33 += 40;
      --v32;
    }
    while (v32);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v34 = (void *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_24083AB20(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_24083AB38(uint64_t a1, uint64_t a2)
{
  sub_24083AC38(0, (unint64_t *)&qword_26AFD0638, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24083ABB8(uint64_t a1, uint64_t a2)
{
  sub_24083AC38(0, (unint64_t *)&qword_26AFD0638, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_24083AC38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_2408484BC(255, &qword_26AFD03C0);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_24083ACA8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_24083ACF0(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, unint64_t *a6, uint64_t a7)
{
  char v9 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v11 = a2;
    goto LABEL_8;
  }
  unint64_t v10 = a4[3];
  uint64_t v11 = v10 >> 1;
  if ((uint64_t)(v10 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v11 + 0x4000000000000000 >= 0)
  {
    uint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v11 = a2;
    }
LABEL_8:
    uint64_t v12 = a4[2];
    if (v11 <= v12) {
      uint64_t v13 = a4[2];
    }
    else {
      uint64_t v13 = v11;
    }
    if (v13)
    {
      sub_24083AE4C(0, a5, a6, a7, MEMORY[0x263F8E0F8]);
      uint64_t v14 = (void *)swift_allocObject();
      size_t v15 = j__malloc_size(v14);
      v14[2] = v12;
      v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
      uint64_t v16 = v14 + 4;
      if (v9)
      {
LABEL_13:
        if (v14 != a4 || v16 >= &a4[5 * v12 + 4]) {
          memmove(v16, a4 + 4, 40 * v12);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v14 = (void *)MEMORY[0x263F8EE78];
      uint64_t v16 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24083F5C8(0, v12, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v14;
  }
  __break(1u);
  return result;
}

void sub_24083AE4C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_24084850C(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void *sub_24083AEB8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24083ACF0(a1, a2, a3, a4, &qword_26AFD05E8, &qword_26AFD03C0, MEMORY[0x263F456E8]);
}

uint64_t sub_24083AED4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24083AF34(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24083AF94(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24083AFF4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24083B054(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24083B0B4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24083B114(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24083B174(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24083B1D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24083B234(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24083B294(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24083B2F4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24083B354(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24083B3B4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HealthRecordsGeneratorContext();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_24083B410(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = *(void **)(a1 + *(int *)(a2 + 20));
}

uint64_t sub_24083B484(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HealthRecordsGeneratorContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24083B4E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HealthRecordsGeneratorContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for HealthRecordsGeneratorContext()
{
  uint64_t result = qword_26AFCC620;
  if (!qword_26AFCC620) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_24083B598(uint64_t a1)
{
}

uint64_t sub_24083B5CC(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_24081B868(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8) {
    goto LABEL_24;
  }
  sub_24083B740();
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_240955448();
  __break(1u);
  return result;
}

void sub_24083B740()
{
  if (!qword_26AFD0638)
  {
    sub_2408484BC(255, &qword_26AFD03C0);
    unint64_t v0 = sub_240955098();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD0638);
    }
  }
}

uint64_t sub_24083B7A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v36 = a3;
  uint64_t v42 = a4;
  sub_24083B598(0);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v35 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_240954D58();
  uint64_t v40 = *(void *)(v8 - 8);
  uint64_t v41 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v33 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240848038();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240844678();
  uint64_t v34 = v15;
  uint64_t v37 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v31 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240842650();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v38 = v17;
  uint64_t v39 = v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v32 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = a2;
  uint64_t v44 = a1;
  uint64_t v20 = MEMORY[0x263F8D4F8];
  unint64_t v21 = (uint64_t (*)(void, uint64_t, void, void))MEMORY[0x263EFDD90];
  sub_24083D20C(0, &qword_26AFCF2D0, MEMORY[0x263F8D4F8], MEMORY[0x263EFDD90]);
  uint64_t v22 = MEMORY[0x263F8EE60] + 8;
  sub_24083D20C(0, &qword_26AFCF2E8, MEMORY[0x263F8EE60] + 8, v21);
  sub_24083BDA4(&qword_26AFCF2C8, &qword_26AFCF2D0, v20);
  sub_24083BDA4(&qword_26AFCF2E0, &qword_26AFCF2E8, v22);
  sub_2409544E8();
  sub_240951F88();
  uint64_t v23 = v31;
  sub_240954108();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v24 = v33;
  sub_240954D48();
  uint64_t v44 = v36;
  uint64_t v25 = sub_240954D38();
  uint64_t v26 = (uint64_t)v35;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v35, 1, 1, v25);
  sub_24083EDCC(0, (unint64_t *)&qword_26AFD07B0);
  sub_24083C8FC(&qword_26AFCF050, (void (*)(uint64_t))sub_240844678);
  sub_24083F780((unint64_t *)&qword_26AFD05B8, (unint64_t *)&qword_26AFD07B0);
  uint64_t v27 = v32;
  uint64_t v28 = v34;
  sub_2409545A8();
  sub_24083B2F4(v26, (uint64_t (*)(void))sub_24083B598);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v24, v41);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v28);
  sub_24083C8FC(&qword_26AFCF278, (void (*)(uint64_t))sub_240842650);
  uint64_t v29 = v38;
  sub_2409544F8();
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v27, v29);
}

uint64_t sub_24083BD14()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_24083BDA4(&qword_26AFCF2D8, &qword_26AFCF2E8, MEMORY[0x263F8EE60] + 8);

  return MEMORY[0x270EE3D90](v1, v2);
}

uint64_t sub_24083BDA4(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24083D20C(255, a2, a3, MEMORY[0x263EFDD90]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_24083BDFC(uint64_t a1, uint64_t a2)
{
  uint64_t v63 = a2;
  uint64_t v65 = a1;
  sub_240840CA0();
  uint64_t v61 = *(void *)(v3 - 8);
  uint64_t v62 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v60 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_240954DE8();
  uint64_t v58 = *(void *)(v5 - 8);
  uint64_t v59 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v57 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240840878(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v55 = v7;
  uint64_t v56 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v54 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240840914(0);
  uint64_t v53 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408408AC(0);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = v2;
  v2[8] = MEMORY[0x263F8EE88];
  uint64_t v19 = v2 + 8;
  uint64_t v20 = (uint64_t (*)(void, uint64_t, void, void))MEMORY[0x263EFDD90];
  sub_24083D20C(0, &qword_26AFCF2E8, MEMORY[0x263F8EE60] + 8, MEMORY[0x263EFDD90]);
  swift_allocObject();
  uint64_t v21 = sub_240954358();
  v2[6] = v21;
  LOBYTE(v66[0]) = 1;
  sub_24083D20C(0, &qword_26AFCF2D0, MEMORY[0x263F8D4F8], v20);
  swift_allocObject();
  swift_retain();
  uint64_t v22 = sub_240954358();
  v2[7] = v22;
  id v23 = objc_allocWithZone((Class)sub_240953018());
  swift_retain();
  v2[3] = sub_240953008();
  sub_240952FF8();
  sub_24083C8FC(&qword_26AFD04B8, sub_2408408AC);
  swift_retain();
  sub_2409545C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  swift_beginAccess();
  sub_240954318();
  swift_endAccess();
  swift_release();
  id v24 = objc_allocWithZone((Class)sub_2409524C8());
  v2[4] = sub_2409524B8();
  sub_2409524A8();
  sub_24083C8FC(&qword_26AFD04A8, sub_240840914);
  swift_retain();
  uint64_t v25 = v53;
  sub_2409545C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v25);
  swift_beginAccess();
  sub_240954318();
  swift_endAccess();
  swift_release();
  sub_240951F38();
  uint64_t v26 = v67;
  uint64_t v27 = v68;
  sub_2408304E8(v66, v67);
  id v28 = sub_24083CA3C(v26, v27);
  id v29 = objc_msgSend(v28, sel_healthStore);

  type metadata accessor for IngestNotificationObserver(0);
  swift_allocObject();
  uint64_t v30 = sub_24081FB38(v29);
  sub_2408371B8((uint64_t)v66);
  *(v19 - 3) = v30;
  swift_beginAccess();
  sub_24083C944(0, &qword_26AFD04D8, (uint64_t (*)(uint64_t))sub_24083F24C, MEMORY[0x263EFDE58]);
  uint64_t v31 = v54;
  sub_240954448();
  swift_endAccess();
  sub_24083C8FC(&qword_26AFD04C8, sub_240840878);
  swift_retain();
  uint64_t v32 = v55;
  sub_2409545C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v31, v32);
  swift_beginAccess();
  sub_240954318();
  swift_endAccess();
  swift_release();
  uint64_t v33 = self;
  id v34 = objc_msgSend(v33, sel_defaultCenter);
  if (qword_26AFD0648 != -1) {
    swift_once();
  }
  unint64_t v35 = v57;
  sub_240954DF8();

  sub_24083C8FC(&qword_26AFD05C0, MEMORY[0x263F07CB0]);
  swift_retain();
  uint64_t v36 = v59;
  sub_2409545C8();
  swift_release();
  uint64_t v37 = *(void (**)(char *, uint64_t))(v58 + 8);
  v37(v35, v36);
  swift_beginAccess();
  sub_240954318();
  swift_endAccess();
  swift_release();
  id v38 = objc_msgSend(v33, sel_defaultCenter);
  if (qword_26AFD0650 != -1) {
    swift_once();
  }
  sub_240954DF8();

  swift_retain();
  sub_2409545C8();
  swift_release();
  v37(v35, v36);
  swift_beginAccess();
  sub_240954318();
  swift_endAccess();
  swift_release();
  uint64_t v39 = v63;
  uint64_t v40 = v65;
  uint64_t v41 = (void *)sub_240951F98();
  uint64_t v42 = (void *)swift_allocObject();
  long long v42[2] = v22;
  v42[3] = v21;
  v42[4] = v41;
  sub_24084558C();
  sub_24083C8FC(&qword_26AFCEF90, (void (*)(uint64_t))sub_24084558C);
  swift_retain();
  swift_retain();
  id v43 = v41;
  uint64_t v44 = v60;
  sub_240954418();
  sub_24083C8FC(&qword_26AFCF330, (void (*)(uint64_t))sub_240840CA0);
  uint64_t v45 = v62;
  uint64_t v46 = sub_240954498();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v44, v45);
  uint64_t v47 = v64;
  v64[2] = v46;
  objc_msgSend(*(id *)(v40 + *(int *)(type metadata accessor for HealthRecordsGeneratorContext() + 20)), sel_addAccountStateChangeListener_, v47[3]);
  sub_240951F38();
  uint64_t v48 = v67;
  uint64_t v49 = v68;
  sub_2408304E8(v66, v67);
  id v50 = sub_24083CA3C(v48, v49);
  objc_msgSend(v50, sel_addHealthRecordsSupportedChangeListener_, v47[4]);
  swift_release();
  swift_release();

  uint64_t v51 = sub_240951F18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v51 - 8) + 8))(v39, v51);
  sub_24083B2F4(v40, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  sub_2408371B8((uint64_t)v66);
  return v47;
}

uint64_t sub_24083C8FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24083C944(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

id sub_24083C9A8(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v4 = (void *)sub_240951E98();
  id v5 = objc_msgSend(v4, sel_profileIdentifier);

  sub_240952808();
  uint64_t v6 = (void *)sub_2409527D8();
  uint64_t v7 = (void *)sub_2409527F8();

  id v8 = [v7 *a3];
  return v8;
}

id sub_24083CA3C(uint64_t a1, uint64_t a2)
{
  return sub_24083C9A8(a1, a2, (SEL *)&selRef_healthRecordsStore);
}

uint64_t sub_24083CA48(uint64_t a1)
{
  uint64_t v43 = a1;
  uint64_t v51 = *v1;
  sub_240845EC0();
  uint64_t v53 = *(void *)(v2 - 8);
  uint64_t v54 = v2;
  MEMORY[0x270FA5388](v2);
  id v52 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240840B78();
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v40 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t v49 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v50 = v7;
  uint64_t v48 = (uint64_t)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_240951EF8();
  uint64_t v8 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_240951F18();
  uint64_t v44 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_240951F68();
  sub_24083C944(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v14 = sub_240951C08();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_2409562B0;
  unint64_t v19 = v18 + v17;
  uint64_t v20 = *(void (**)(unint64_t, void, uint64_t))(v15 + 104);
  v20(v19, *MEMORY[0x263F45568], v14);
  unint64_t v21 = v19 + v16;
  uint64_t v22 = v11;
  uint64_t v23 = v14;
  uint64_t v25 = v43;
  uint64_t v24 = v44;
  v20(v21, *MEMORY[0x263F45560], v23);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F45688], v46);
  uint64_t v26 = v47;
  sub_240951F08();
  uint64_t v27 = v26 + OBJC_IVAR____TtC13HealthRecords25CategoryGeneratorPipeline_domain;
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v26 + OBJC_IVAR____TtC13HealthRecords25CategoryGeneratorPipeline_domain, v13, v11);
  sub_240951F48();
  if (sub_2409522E8())
  {
    uint64_t v28 = v48;
    sub_24083D548(v25, v48, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v13, v27, v22);
    type metadata accessor for CategoryGeneratorNeedRefreshSignal();
    swift_allocObject();
    id v29 = sub_24083BDFC(v28, (uint64_t)v13);
    uint64_t v55 = v29[2];
    sub_24083D20C(0, (unint64_t *)&qword_26AFD0470, MEMORY[0x263F8D4F8], MEMORY[0x263EFDCF0]);
    sub_24083D5B0();
    uint64_t v30 = sub_240954498();
  }
  else
  {
    sub_2408ECF8C();
    sub_24083C8FC(&qword_26AFCF300, (void (*)(uint64_t))sub_2408ECF8C);
    uint64_t v31 = v40;
    sub_240954418();
    sub_24083C8FC(&qword_26AFCF350, (void (*)(uint64_t))sub_240840B78);
    uint64_t v32 = v42;
    uint64_t v30 = sub_240954498();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v31, v32);
    id v29 = 0;
    uint64_t v28 = v48;
  }
  *(void *)(v26 + OBJC_IVAR____TtC13HealthRecords25CategoryGeneratorPipeline_interactiveGenerationUpdateSignal) = v29;
  uint64_t v55 = v30;
  sub_24083D548(v25, v28, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  unint64_t v33 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  unint64_t v34 = (v50 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = swift_allocObject();
  sub_240824600(v28, v35 + v33, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  *(void *)(v35 + v34) = v51;
  sub_24083D20C(0, (unint64_t *)&qword_26AFD0470, MEMORY[0x263F8D4F8], MEMORY[0x263EFDCF0]);
  sub_2408484BC(0, (unint64_t *)&qword_26AFD03C8);
  sub_24083D5B0();
  swift_retain();
  uint64_t v36 = v52;
  sub_2409544F8();
  swift_release();
  swift_release();
  sub_24083C8FC(&qword_26AFCEF18, (void (*)(uint64_t))sub_240845EC0);
  uint64_t v37 = v54;
  uint64_t v38 = sub_240954498();
  swift_release();
  sub_24083B2F4(v25, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v36, v37);
  *(void *)(v26 + 16) = v38;
  return v26;
}

void sub_24083D20C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t, void, void))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_24083D270(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24083D2D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24083D340(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24083D3A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24083D410(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24083D478(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24083D4E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24083D548(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_24083D5B0()
{
  unint64_t result = qword_26AFD0468;
  if (!qword_26AFD0468)
  {
    sub_24083D20C(255, (unint64_t *)&qword_26AFD0470, MEMORY[0x263F8D4F8], MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD0468);
  }
  return result;
}

uint64_t sub_24083D62C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t v143 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v144 = v3;
  uint64_t v146 = (uint64_t)&v96 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24082EBC0(0, &qword_26AFCECB8, MEMORY[0x263F90210], MEMORY[0x263F8D8F0]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v113 = (uint64_t)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v112 = (char *)&v96 - v7;
  uint64_t v111 = sub_240951C28();
  uint64_t v110 = *(void *)(v111 - 8);
  MEMORY[0x270FA5388](v111);
  uint64_t v109 = (char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_2409528B8();
  uint64_t v107 = *(void *)(v108 - 8);
  MEMORY[0x270FA5388](v108);
  uint64_t v106 = (char *)&v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408463F0();
  id v116 = v10;
  uint64_t v115 = *((void *)v10 - 1);
  MEMORY[0x270FA5388](v10);
  uint64_t v114 = (char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240842CAC();
  uint64_t v123 = v12;
  uint64_t v121 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v118 = (char *)&v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240842F90();
  uint64_t v125 = v14;
  uint64_t v124 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v119 = (char *)&v96 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240844550();
  uint64_t v127 = v16;
  uint64_t v126 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v122 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240843BE4();
  uint64_t v131 = v18;
  uint64_t v130 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v128 = (char *)&v96 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240843E80();
  uint64_t v133 = v20;
  uint64_t v132 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v129 = (char *)&v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240843DD4();
  uint64_t v136 = *(void *)(v22 - 8);
  uint64_t v137 = v22;
  MEMORY[0x270FA5388](v22);
  uint64_t v134 = (char *)&v96 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240844ACC();
  uint64_t v138 = *(void *)(v24 - 8);
  uint64_t v139 = v24;
  MEMORY[0x270FA5388](v24);
  uint64_t v135 = (char *)&v96 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24084681C();
  uint64_t v141 = *(void *)(v26 - 8);
  uint64_t v142 = v26;
  MEMORY[0x270FA5388](v26);
  uint64_t v140 = (char *)&v96 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_240951B48();
  uint64_t v104 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  uint64_t v102 = (char *)&v96 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_240951A28();
  uint64_t v101 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103);
  long long v100 = (char *)&v96 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_240951A98();
  uint64_t v97 = *(void *)(v98 - 8);
  MEMORY[0x270FA5388](v98);
  uint64_t v96 = (char *)&v96 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_2409525A8();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  unint64_t v34 = (char *)&v96 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240952808();
  uint64_t v35 = (void *)sub_2409527D8();
  sub_240951F38();
  sub_2408304E8(&v152, v153);
  uint64_t v36 = (void *)sub_240951E98();
  id v37 = objc_msgSend(v36, sel_profileIdentifier);

  uint64_t v120 = sub_240952788();
  sub_2408371B8((uint64_t)&v152);
  sub_2409517C8();
  swift_allocObject();
  uint64_t v117 = sub_2409517B8();
  uint64_t v38 = (void *)sub_2409527D8();
  sub_240951F38();
  sub_2408304E8(&v152, v153);
  uint64_t v39 = (void *)sub_240951E98();
  id v40 = objc_msgSend(v39, sel_profileIdentifier);

  uint64_t v149 = sub_2409527B8();
  sub_2408371B8((uint64_t)&v152);
  sub_240951F38();
  sub_2408304E8(&v152, v153);
  sub_240951E98();
  sub_240953248();
  swift_allocObject();
  uint64_t v148 = sub_240953238();
  sub_2408371B8((uint64_t)&v152);
  sub_240951F38();
  if (qword_26AFCC9F8 != -1) {
    swift_once();
  }
  uint64_t v41 = sub_24083F214(v31, (uint64_t)qword_26AFD0868);
  uint64_t v99 = v32;
  uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 16);
  uint64_t v43 = v31;
  v42(v34, v41, v31);
  uint64_t v145 = a1;
  uint64_t v44 = (void *)sub_240951F68();
  uint64_t v45 = (void *)sub_240951C68();
  sub_240952588();
  if (v45)
  {
    uint64_t v150 = 0x656C69666F72505BLL;
    unint64_t v151 = 0xE90000000000003ALL;
    id v46 = v45;
    id v47 = objc_msgSend(v46, sel_identifier);
    uint64_t v48 = v96;
    sub_240951A78();

    sub_240951A48();
    (*(void (**)(char *, uint64_t))(v97 + 8))(v48, v98);
    sub_2409548A8();
    swift_bridgeObjectRelease();
    sub_2409548A8();

    unint64_t v49 = v150;
    unint64_t v50 = v151;
  }
  else
  {
    unint64_t v50 = 0x800000024095C1A0;
    unint64_t v49 = 0xD000000000000013;
  }
  uint64_t v150 = v49;
  unint64_t v151 = v50;
  sub_2409548A8();

  swift_bridgeObjectRelease();
  uint64_t v51 = v150;
  unint64_t v52 = v151;
  (*(void (**)(char *, uint64_t))(v99 + 8))(v34, v43);
  type metadata accessor for FeedItemContextChangeGenerator();
  uint64_t v53 = swift_allocObject();
  sub_24083AB20(&v152, v53 + 16);
  uint64_t v99 = v53;
  *(void *)(v53 + 56) = v51;
  *(void *)(v53 + 64) = v52;
  sub_24083EDCC(0, &qword_26AFCDEF0);
  uint64_t v54 = sub_240954C68();
  uint64_t v55 = (uint64_t)v100;
  sub_240951A18();
  id v56 = objc_msgSend(self, sel_hk_gregorianCalendarWithLocalTimeZone);
  uint64_t v57 = (uint64_t)v102;
  sub_240951B08();

  uint64_t v58 = (void *)sub_240824668(v54, v55, v57);
  (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v57, v105);
  (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v55, v103);
  uint64_t v59 = v107;
  uint64_t v60 = v106;
  uint64_t v61 = v108;
  (*(void (**)(char *, void, uint64_t))(v107 + 104))(v106, *MEMORY[0x263F45FE8], v108);
  uint64_t v62 = v149;
  uint64_t v63 = sub_240953198();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
  uint64_t v64 = v110;
  uint64_t v65 = v109;
  uint64_t v66 = v111;
  (*(void (**)(char *, void, uint64_t))(v110 + 104))(v109, *MEMORY[0x263F455A8], v111);
  sub_240951C18();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v66);
  uint64_t v67 = sub_240954038();
  uint64_t v68 = (uint64_t)v112;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v112, 1, 1, v67);
  *(void *)&long long v152 = v63;
  uint64_t v69 = (uint64_t (*)(uint64_t))MEMORY[0x263F90210];
  sub_24081B6E8(v68, v113, &qword_26AFCECB8, MEMORY[0x263F90210]);
  sub_240841598();
  uint64_t v111 = MEMORY[0x263EFDCF8];
  sub_24083ED3C(&qword_26AFCDD40, (void (*)(uint64_t))sub_240841598);
  swift_retain();
  uint64_t v70 = v114;
  sub_240954198();
  sub_24081B504(v68, &qword_26AFCECB8, v69);
  swift_release();
  sub_2409542E8();
  sub_24083EDCC(0, &qword_26AFCDF40);
  sub_2408422B8();
  sub_24083ED3C((unint64_t *)&qword_26AFCEE70, (void (*)(uint64_t))sub_2408463F0);
  sub_24083ED3C(&qword_26AFCDBB8, (void (*)(uint64_t))sub_2408422B8);
  uint64_t v71 = v118;
  id v72 = v116;
  sub_240954578();
  (*(void (**)(char *, id))(v115 + 8))(v70, v72);
  unint64_t v73 = (void *)swift_allocObject();
  v73[2] = v62;
  v73[3] = v58;
  v73[4] = v148;
  sub_24083F870();
  sub_2408451B4();
  sub_24083ED3C(&qword_26AFCF1F8, (void (*)(uint64_t))sub_240842CAC);
  sub_24083ED3C(&qword_26AFCDA58, (void (*)(uint64_t))sub_2408451B4);
  swift_retain();
  id v116 = v58;
  swift_retain();
  unint64_t v74 = v119;
  uint64_t v75 = v123;
  sub_240954578();
  swift_release();
  (*(void (**)(char *, uint64_t))(v121 + 8))(v71, v75);
  sub_24083ED3C(&qword_26AFCF1D8, (void (*)(uint64_t))sub_240842F90);
  uint64_t v76 = v122;
  uint64_t v77 = v125;
  sub_240954528();
  (*(void (**)(char *, uint64_t))(v124 + 8))(v74, v77);
  sub_24083ED3C(&qword_26AFCF060, (void (*)(uint64_t))sub_240844550);
  uint64_t v78 = v128;
  uint64_t v79 = v127;
  sub_240954558();
  (*(void (**)(char *, uint64_t))(v126 + 8))(v76, v79);
  uint64_t v80 = v146;
  sub_24083B4E8(v145, v146);
  unint64_t v81 = (*(unsigned __int8 *)(v143 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80);
  unint64_t v82 = (v144 + v81 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v83 = (void *)swift_allocObject();
  uint64_t v84 = v147;
  v83[2] = v120;
  v83[3] = v84;
  v83[4] = v117;
  sub_24083B484(v80, (uint64_t)v83 + v81);
  *(void *)((char *)v83 + v82) = v84;
  sub_24082EBC0(0, &qword_26AFCC600, MEMORY[0x263F45630], MEMORY[0x263F8D488]);
  sub_24083ED3C(&qword_26AFCF118, (void (*)(uint64_t))sub_240843BE4);
  swift_retain();
  swift_retain();
  uint64_t v85 = v129;
  uint64_t v86 = v131;
  sub_240954548();
  swift_release();
  (*(void (**)(char *, uint64_t))(v130 + 8))(v78, v86);
  sub_24083FF94();
  swift_retain();
  uint64_t v87 = v134;
  uint64_t v88 = v133;
  sub_240954248();
  swift_release();
  (*(void (**)(char *, uint64_t))(v132 + 8))(v85, v88);
  *(void *)(swift_allocObject() + 16) = v84;
  sub_2408418D4();
  sub_24083ED3C(&qword_26AFCF108, (void (*)(uint64_t))sub_240843DD4);
  sub_24083ED3C(&qword_26AFCDCC0, (void (*)(uint64_t))sub_2408418D4);
  uint64_t v89 = v135;
  uint64_t v90 = v137;
  sub_240954508();
  swift_release();
  (*(void (**)(char *, uint64_t))(v136 + 8))(v87, v90);
  *(void *)&long long v152 = MEMORY[0x263F8EE78];
  sub_24083ED3C(&qword_26AFCF000, (void (*)(uint64_t))sub_240844ACC);
  uint64_t v91 = v139;
  uint64_t v92 = v140;
  sub_2409544C8();
  (*(void (**)(char *, uint64_t))(v138 + 8))(v89, v91);
  sub_24083ED3C(&qword_26AFCEE20, (void (*)(uint64_t))sub_24084681C);
  uint64_t v93 = v142;
  uint64_t v94 = sub_240954498();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v141 + 8))(v92, v93);
  return v94;
}

uint64_t sub_24083ECBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v8;
  id v9 = v8;
  return a1;
}

uint64_t sub_24083ED3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24083ED84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24083EDCC(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_24083EE08()
{
  return swift_retain();
}

unsigned char *initializeBufferWithCopyOfBuffer for NewLabsFeedItemData.CodingKeys(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t sub_24083EE24()
{
  return swift_release();
}

uint64_t sub_24083EE2C()
{
  return swift_release();
}

uint64_t sub_24083EE34()
{
  return swift_release();
}

uint64_t sub_24083EE3C()
{
  return swift_release();
}

uint64_t sub_24083EE44()
{
  return swift_release();
}

uint64_t sub_24083EE4C()
{
  return swift_release();
}

uint64_t sub_24083EE54()
{
  return swift_release();
}

uint64_t sub_24083EE5C()
{
  return swift_release();
}

uint64_t sub_24083EE64()
{
  return swift_release();
}

uint64_t sub_24083EE6C()
{
  return swift_release();
}

uint64_t sub_24083EE74(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24083EE84(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24083EE94(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24083EEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24083EEB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24083EEC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24083EED4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24083EEE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24083EEF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24083EF04(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24083EF14(uint64_t a1, int a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a2)
  {
    a1 = *(void *)(a1 + 32);
    return MEMORY[0x270FA2408](a1);
  }
  if (!a3)
  {
    __break(1u);
    return MEMORY[0x270FA2408](a1);
  }
  sub_2408484BC(0, qword_26AFD07C0);
  uint64_t v5 = swift_allocError();
  void *v6 = a3;
  id v7 = a3;

  return MEMORY[0x270FA2410](v3, v5);
}

void sub_24083EFC4(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

unsigned char *storeEnumTagSinglePayload for UDCSnippetGeneratorData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_24083F09C()
{
  if (*v0) {
    return 0x446E75527473616CLL;
  }
  else {
    return 0xD000000000000015;
  }
}

uint64_t sub_24083F0E4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 352) = v1;
  if (v1) {
    uint64_t v2 = sub_2408D6770;
  }
  else {
    uint64_t v2 = sub_240836A44;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24083F1F8(void *a1)
{
  return sub_240820CA8(a1);
}

uint64_t sub_24083F214(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

void sub_24083F24C(uint64_t a1)
{
}

uint64_t sub_24083F280(int a1)
{
  uint64_t v2 = *(uint64_t (**)(__int16 *))(v1 + 16);
  __int16 v4 = a1;
  char v5 = BYTE2(a1) & 1;
  return v2(&v4);
}

uint64_t sub_24083F2C4(uint64_t a1, char a2)
{
  int v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  char v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_24083F304(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24084105C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24083F348(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    sub_240840084(255);
    uint64_t v7 = v6;
    unint64_t v8 = sub_24083F3C0();
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_24083F3C0()
{
  unint64_t result = qword_26AFD07C0[0];
  if (!qword_26AFD07C0[0])
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, qword_26AFD07C0);
  }
  return result;
}

void sub_24083F418(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_2408484BC(255, (unint64_t *)&qword_26AFD03C8);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_24083F488()
{
  if (!qword_26AFCDFC8)
  {
    sub_24086A194();
    unint64_t v0 = sub_2409555E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDFC8);
    }
  }
}

void sub_24083F4E0()
{
  if (!qword_26AFD0658)
  {
    sub_24083AE4C(255, (unint64_t *)&qword_26AFD0638, &qword_26AFD03C0, MEMORY[0x263F456E8], MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_2409555E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD0658);
    }
  }
}

void sub_24083F564(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_240849564();
    unint64_t v7 = a3(a1, &type metadata for UDCSnippetGeneratorData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_24083F5C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      sub_24084850C(0, a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_240955448();
  __break(1u);
  return result;
}

void sub_24083F6E0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  if (!*a2)
  {
    sub_24083EDCC(255, a3);
    sub_24083F780(a5, a3);
    unint64_t v8 = sub_240955288();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_24083F780(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24083EDCC(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24083F7C4()
{
  if (!qword_26AFCDF68)
  {
    sub_24083EDCC(255, &qword_26AFCDF60);
    sub_24082EF80(255, &qword_26AFCDEB0, &qword_26AFCDF20, 0x263F0A730, MEMORY[0x263F8D488]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AFCDF68);
    }
  }
}

void sub_24083F870()
{
  if (!qword_26AFCDF58)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
    sub_24082EBC0(255, &qword_26AFCDF50, (uint64_t (*)(uint64_t))sub_2408BA7A4, MEMORY[0x263F8D8F0]);
    sub_24082EBC0(255, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], v0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v2) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AFCDF58);
    }
  }
}

unint64_t sub_24083F93C()
{
  unint64_t result = qword_26AFCDF38;
  if (!qword_26AFCDF38)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFCDF38);
  }
  return result;
}

uint64_t sub_24083F97C(char a1, char a2)
{
  if (a2) {
    int v3 = 256;
  }
  else {
    int v3 = 0;
  }
  return (*(uint64_t (**)(void))(v2 + 16))(v3 & 0xFFFFFFFE | a1 & 1);
}

void sub_24083F9C0(uint64_t a1, uint64_t a2)
{
  sub_24081E844(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_24083F9C8@<X0>(uint64_t *a1@<X8>)
{
  return sub_24081DD4C(*(void **)(v1 + 16), a1);
}

uint64_t sub_24083F9D0()
{
  return sub_240834954(&qword_26AFD05C0, MEMORY[0x263F07CB0]);
}

unint64_t sub_24083FA04()
{
  unint64_t result = qword_26AFD07B0;
  if (!qword_26AFD07B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD07B0);
  }
  return result;
}

unint64_t sub_24083FA44()
{
  unint64_t result = qword_26AFD05B8;
  if (!qword_26AFD05B8)
  {
    sub_24083EDCC(255, (unint64_t *)&qword_26AFD07B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD05B8);
  }
  return result;
}

void sub_24083FAAC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24083FB10()
{
  if (!qword_26AFCF378)
  {
    sub_240953FE8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AFCF378);
    }
  }
}

void sub_24083FB78(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_24083FBC4@<X0>(uint64_t *a1@<X8>)
{
  sub_24083FB10();
  uint64_t result = sub_240820508();
  *a1 = result;
  return result;
}

void sub_24083FC00()
{
  if (!qword_26AFCDEC8)
  {
    sub_24093C214(255, &qword_26AFCDEB8, &qword_26AFCDF40);
    sub_240840680();
    sub_240849BDC();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_26AFCDEC8);
    }
  }
}

uint64_t sub_24083FCA0(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24082EF80(255, a2, a3, a4, MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24083FD04()
{
  unint64_t result = qword_26AFD0578;
  if (!qword_26AFD0578)
  {
    sub_240833270(255, &qword_26AFD0570, MEMORY[0x263F8F0F8], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD0578);
  }
  return result;
}

unint64_t sub_24083FD8C()
{
  unint64_t result = qword_26AFD0520;
  if (!qword_26AFD0520)
  {
    sub_2408347C4(255, &qword_26AFD0518, (uint64_t (*)(uint64_t))sub_240841250, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD0520);
  }
  return result;
}

uint64_t sub_24083FE14(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240835BEC(255, a2, a3, MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24083FE78(uint64_t a1)
{
}

void sub_24083FEAC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x263F45828]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_24083FEFC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_24083FF48(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_24083FF94()
{
  if (!qword_26AFD04F8)
  {
    unint64_t v0 = sub_240954A38();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD04F8);
    }
  }
}

void sub_24083FFEC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_240840050(uint64_t a1)
{
}

void sub_240840084(uint64_t a1)
{
}

uint64_t sub_2408400B8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_2409553D8();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_2409553D8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_240878F94();
        sub_240873E98((unint64_t *)&unk_268C90BD8, 255, (void (*)(uint64_t))sub_240878F94);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_240876A64(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_24083EDCC(0, (unint64_t *)&unk_26AFCF3B8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_240955448();
  __break(1u);
  return result;
}

unint64_t sub_2408402FC(uint64_t a1, void (*a2)(void **), uint64_t a3)
{
  uint64_t v33 = a3;
  unint64_t v34 = a2;
  sub_24084860C(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2409521B8();
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v32 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v28 = (char *)&v26 - v12;
  uint64_t v31 = *(void *)(a1 + 16);
  if (!v31) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v27 = v11;
  uint64_t v29 = (void (**)(char *))(v11 + 32);
  uint64_t v30 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  uint64_t v13 = 0;
  unint64_t v35 = MEMORY[0x263F8EE78];
  do
  {
    uint64_t v14 = v8;
    uint64_t v15 = a1;
    uint64_t v16 = *(void **)(a1 + 8 * v13 + 32);
    id v17 = v16;
    uint64_t v18 = (void *)MEMORY[0x245601B40]();
    uint64_t v36 = v16;
    v34(&v36);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return v35;
    }

    uint64_t v8 = v14;
    if ((*v30)(v7, 1, v14) == 1)
    {
      sub_24083B1D4((uint64_t)v7, (uint64_t (*)(void))sub_24084860C);
    }
    else
    {
      uint64_t v19 = v28;
      uint64_t v20 = *v29;
      (*v29)(v28);
      ((void (*)(char *, char *, uint64_t))v20)(v32, v19, v14);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v35 = sub_2408C35E0(0, *(void *)(v35 + 16) + 1, 1, v35);
      }
      unint64_t v22 = *(void *)(v35 + 16);
      unint64_t v21 = *(void *)(v35 + 24);
      if (v22 >= v21 >> 1) {
        unint64_t v35 = sub_2408C35E0(v21 > 1, v22 + 1, 1, v35);
      }
      unint64_t v23 = v35;
      *(void *)(v35 + 16) = v22 + 1;
      unint64_t v24 = v23
          + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))
          + *(void *)(v27 + 72) * v22;
      uint64_t v8 = v14;
      ((void (*)(unint64_t, char *, uint64_t))v20)(v24, v32, v14);
    }
    a1 = v15;
    ++v13;
  }
  while (v31 != v13);
  swift_bridgeObjectRelease();
  return v35;
}

void sub_240840634(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_240840680()
{
  if (!qword_26AFCC5F8)
  {
    sub_240951A98();
    type metadata accessor for AccountNewRecordsData(255);
    sub_240829E50(&qword_26AFCC5F0, MEMORY[0x263F07508]);
    unint64_t v0 = sub_2409546E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCC5F8);
    }
  }
}

uint64_t sub_24084072C()
{
  return swift_release();
}

uint64_t sub_240840734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(a2, a3);

  return swift_release();
}

uint64_t sub_240840794(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24082EAF8(255, &qword_26AFCE248, (uint64_t (*)(uint64_t))sub_240898C54, MEMORY[0x263F08F88]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240840808(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24081C07C(255, &qword_26AFCE248, (unint64_t *)&qword_26AFD0590, 0x263F0A670, MEMORY[0x263F08F88]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240840878(uint64_t a1)
{
}

void sub_2408408AC(uint64_t a1)
{
}

uint64_t sub_2408408E0()
{
  return sub_24083696C(&qword_26AFD04B8, sub_2408408AC);
}

void sub_240840914(uint64_t a1)
{
}

uint64_t sub_240840948()
{
  return sub_24083696C(&qword_26AFD04A8, sub_240840914);
}

void sub_24084097C()
{
  if (!qword_26AFCF368)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
    sub_240828514(255, &qword_26AFCF318, MEMORY[0x263EFDE20]);
    sub_240829E98(&qword_26AFCF310, &qword_26AFCF318, v0);
    unint64_t v1 = sub_240954428();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AFCF368);
    }
  }
}

void sub_240840A30()
{
  if (!qword_26AFCDE28)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
    sub_24082430C(255, (unint64_t *)&qword_26AFCDDF8, MEMORY[0x263EFDE20]);
    sub_2408243B4(&qword_26AFCDDF0, (unint64_t *)&qword_26AFCDDF8, v0);
    unint64_t v1 = sub_240954428();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AFCDE28);
    }
  }
}

void sub_240840AE4()
{
  if (!qword_26AFD04A0)
  {
    sub_240840E8C();
    sub_2408228F4(&qword_26AFD0488, (void (*)(uint64_t))sub_240840E8C);
    unint64_t v0 = sub_240954428();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD04A0);
    }
  }
}

void sub_240840B78()
{
  if (!qword_26AFCF358)
  {
    sub_2408ECF8C();
    sub_24083C8FC(&qword_26AFCF300, (void (*)(uint64_t))sub_2408ECF8C);
    unint64_t v0 = sub_240954428();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF358);
    }
  }
}

void sub_240840C0C()
{
  if (!qword_26AFCF348)
  {
    sub_240841404(255);
    sub_2408211E4(&qword_26AFCF2B8, sub_240841404);
    unint64_t v0 = sub_240954428();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF348);
    }
  }
}

void sub_240840CA0()
{
  if (!qword_26AFCF338)
  {
    sub_24084558C();
    sub_24083C8FC(&qword_26AFCEF90, (void (*)(uint64_t))sub_24084558C);
    unint64_t v0 = sub_240954428();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF338);
    }
  }
}

uint64_t sub_240840D34(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void, uint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2408412B8(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240840D78()
{
  if (!qword_26AFCF328)
  {
    sub_2408AFF9C();
    unint64_t v0 = sub_2409543D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF328);
    }
  }
}

void sub_240840DE0()
{
  if (!qword_26AFCDE18)
  {
    sub_24082EF80(255, &qword_26AFCDED0, &qword_26AFCDF60, 0x263F0A740, MEMORY[0x263F8D488]);
    sub_2408484BC(255, qword_26AFD07C0);
    unint64_t v0 = sub_2409543D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDE18);
    }
  }
}

void sub_240840E8C()
{
  if (!qword_26AFD0490)
  {
    sub_24083FF94();
    unint64_t v0 = sub_2409543D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD0490);
    }
  }
}

void sub_240840EF4()
{
  if (!qword_26AFD0480)
  {
    sub_24084855C();
    unint64_t v0 = sub_2409543C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD0480);
    }
  }
}

void sub_240840F5C()
{
  if (!qword_26AFCE230)
  {
    sub_2408348F0(255, (unint64_t *)&unk_26AFD0620, (uint64_t (*)(uint64_t))sub_2409296CC, MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_240954348();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCE230);
    }
  }
}

void sub_240840FF4()
{
  if (!qword_26AFCF5F0)
  {
    sub_240953FF8();
    unint64_t v0 = sub_240954348();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF5F0);
    }
  }
}

void sub_24084105C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    sub_24082EF80(255, &qword_26AFCDF78, &qword_26AFCDF70, 0x263F464E0, MEMORY[0x263F8D8F0]);
    uint64_t v7 = v6;
    uint64_t v8 = sub_2408484BC(255, qword_26AFD07C0);
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_240841110()
{
  unint64_t result = qword_26AFCDD98;
  if (!qword_26AFCDD98)
  {
    sub_24082F050(255, &qword_26AFCDDA0, (uint64_t (*)(uint64_t))sub_24083F7C4, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCDD98);
  }
  return result;
}

void sub_240841198()
{
  if (!qword_26AFCC660)
  {
    sub_240838530(255, (unint64_t *)&qword_26AFD0598, (uint64_t (*)(uint64_t))sub_240898C54, MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_240954308();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCC660);
    }
  }
}

uint64_t sub_240841230(uint64_t result)
{
  if (result != 1) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_240841240(uint64_t result)
{
  if (result != 1) {
    return swift_release();
  }
  return result;
}

void sub_240841250()
{
  if (!qword_26AFD0470)
  {
    unint64_t v0 = sub_240954308();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD0470);
    }
  }
}

void sub_2408412B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v6 = sub_2408484BC(255, qword_26AFD07C0);
    unint64_t v7 = a3(a1, MEMORY[0x263F8D4F8], v6, MEMORY[0x263F8E4E0]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_240841338()
{
  if (!qword_26AFCDD78)
  {
    sub_24083F3C0();
    unint64_t v0 = sub_240954308();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDD78);
    }
  }
}

void sub_2408413A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240954308();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_240841404(uint64_t a1)
{
}

void sub_240841424()
{
  if (!qword_26AFCDD68)
  {
    sub_24083FB78(255, &qword_26AFCDEE0, MEMORY[0x263F8D4F8], MEMORY[0x263F8D8F0]);
    sub_24083F3C0();
    unint64_t v0 = sub_240954308();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDD68);
    }
  }
}

uint64_t sub_2408414B8()
{
  return sub_240827554(&qword_26AFCDD60, (void (*)(uint64_t))sub_240841424);
}

void sub_2408414EC()
{
  if (!qword_26AFCDD58)
  {
    sub_24082EF80(255, &qword_26AFCDED0, &qword_26AFCDF60, 0x263F0A740, MEMORY[0x263F8D488]);
    sub_2408484BC(255, qword_26AFD07C0);
    unint64_t v0 = sub_240954308();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDD58);
    }
  }
}

void sub_240841598()
{
  if (!qword_26AFCDD48)
  {
    sub_2408BA6C0(255, &qword_26AFCDEB8, MEMORY[0x263F8D488]);
    sub_24083F3C0();
    unint64_t v0 = sub_240954308();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDD48);
    }
  }
}

uint64_t sub_240841624()
{
  return sub_24083ED84(&qword_26AFCDD40, (void (*)(uint64_t))sub_240841598);
}

unint64_t sub_240841658()
{
  unint64_t result = qword_26AFCDD30;
  if (!qword_26AFCDD30)
  {
    sub_24082A230(255, &qword_26AFCDD38, (uint64_t (*)(uint64_t))sub_24083FC00, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCDD30);
  }
  return result;
}

void sub_2408416E0()
{
  if (!qword_26AFCE220)
  {
    sub_24082EA94(255, &qword_26AFCE268, (uint64_t (*)(uint64_t))sub_24087E864, MEMORY[0x263F8D488]);
    sub_24083F3C0();
    unint64_t v0 = sub_240954308();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCE220);
    }
  }
}

void sub_240841780()
{
  if (!qword_26AFCDCE8)
  {
    sub_240833270(255, &qword_26AFCDE80, MEMORY[0x263F458B0], MEMORY[0x263F8D488]);
    unint64_t v0 = sub_240954308();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDCE8);
    }
  }
}

uint64_t sub_240841818()
{
  return sub_240833160(&qword_26AFCDCE0, (void (*)(uint64_t))sub_240841780);
}

unint64_t sub_24084184C()
{
  unint64_t result = qword_26AFCDCD0;
  if (!qword_26AFCDCD0)
  {
    sub_24082F050(255, &qword_26AFCDCD8, (uint64_t (*)(uint64_t))sub_24083FE78, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCDCD0);
  }
  return result;
}

void sub_2408418D4()
{
  if (!qword_26AFCDCC8)
  {
    sub_24083FEAC(255, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F8D488]);
    unint64_t v0 = sub_240954308();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDCC8);
    }
  }
}

void sub_240841958()
{
  if (!qword_26AFCDCA8)
  {
    sub_24082E9CC(255, &qword_26AFCDE68, MEMORY[0x263F45738], MEMORY[0x263F8D488]);
    unint64_t v0 = sub_240954308();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDCA8);
    }
  }
}

unint64_t sub_2408419F0()
{
  unint64_t result = qword_26AFCDC90;
  if (!qword_26AFCDC90)
  {
    sub_24082F050(255, &qword_26AFCDC98, (uint64_t (*)(uint64_t))sub_240840050, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCDC90);
  }
  return result;
}

void sub_240841A78(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    sub_240840084(255);
    uint64_t v7 = v6;
    unint64_t v8 = sub_24083F3C0();
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_240841AF0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = sub_24083F3C0();
    unint64_t v9 = a4(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_240841B6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    sub_240840084(255);
    uint64_t v7 = v6;
    unint64_t v8 = sub_24083F3C0();
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_240841BE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    sub_240840084(255);
    uint64_t v7 = v6;
    uint64_t v8 = sub_2408484BC(255, qword_26AFD07C0);
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_240841C6C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240841A78(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240841CB0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24083F348(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240841CF4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240841BE4(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240841D38()
{
  if (!qword_26AFCF528)
  {
    sub_240950CCC();
    unint64_t v0 = sub_240954308();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF528);
    }
  }
}

uint64_t sub_240841DA0()
{
  return sub_24082C6CC(&qword_26AFCF520, (void (*)(uint64_t))sub_240841D38);
}

void sub_240841DD4()
{
  if (!qword_26AFCF2B0)
  {
    sub_240953FE8();
    unint64_t v0 = sub_240954308();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF2B0);
    }
  }
}

void sub_240841E3C(uint64_t a1)
{
}

uint64_t sub_240841E5C()
{
  return sub_240829E50(&qword_26AFCDC20, sub_240841E3C);
}

unint64_t sub_240841E90()
{
  unint64_t result = qword_26AFCDC10;
  if (!qword_26AFCDC10)
  {
    sub_24082A1CC(255, (unint64_t *)&qword_26AFCDC18, (void (*)(uint64_t))sub_240849BDC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCDC10);
  }
  return result;
}

unint64_t sub_240841F04()
{
  unint64_t result = qword_26AFCDC00;
  if (!qword_26AFCDC00)
  {
    sub_240841AF0(255, &qword_26AFCDC08, (uint64_t (*)(uint64_t))sub_240849BDC, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCDC00);
  }
  return result;
}

void sub_240841F8C()
{
  if (!qword_26AFCDBF8)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_24082430C(255, &qword_26AFCDD08, MEMORY[0x263EFDCF0]);
    sub_24083EDCC(255, (unint64_t *)&qword_26AFD07B0);
    sub_2408243B4(&qword_26AFCDD00, &qword_26AFCDD08, v0);
    sub_24083FA44();
    unint64_t v1 = sub_2409542D8();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AFCDBF8);
    }
  }
}

void sub_240842078()
{
  if (!qword_26AFD0460)
  {
    sub_240841250();
    sub_24083696C((unint64_t *)&qword_26AFD0468, (void (*)(uint64_t))sub_240841250);
    unint64_t v0 = sub_2409542B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD0460);
    }
  }
}

void sub_24084210C()
{
  if (!qword_26AFCDBD8)
  {
    sub_24082EF80(255, &qword_26AFCDED0, &qword_26AFCDF60, 0x263F0A740, MEMORY[0x263F8D488]);
    sub_24083FCA0(&qword_26AFCDED8, &qword_26AFCDED0, &qword_26AFCDF60, 0x263F0A740);
    unint64_t v0 = sub_2409542A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDBD8);
    }
  }
}

uint64_t sub_2408421E8()
{
  return sub_24082EEE0(&qword_26AFCDBD0, (void (*)(uint64_t))sub_24084210C);
}

void sub_24084221C()
{
  if (!qword_26AFCDBC8)
  {
    sub_2408BA6C0(255, &qword_26AFCDEB8, MEMORY[0x263F8D488]);
    sub_2408BA730();
    unint64_t v0 = sub_2409542A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDBC8);
    }
  }
}

void sub_2408422B8()
{
  if (!qword_26AFCDBC0)
  {
    sub_2408BA6C0(255, &qword_26AFCDEB8, MEMORY[0x263F8D488]);
    sub_24083F3C0();
    sub_2408BA730();
    unint64_t v0 = sub_2409542A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDBC0);
    }
  }
}

void sub_240842360()
{
  if (!qword_26AFCE210)
  {
    sub_24082EA94(255, &qword_26AFCE268, (uint64_t (*)(uint64_t))sub_24087E864, MEMORY[0x263F8D488]);
    sub_24087E8E4();
    unint64_t v0 = sub_2409542A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCE210);
    }
  }
}

void sub_240842410()
{
  if (!qword_26AFCDBB0)
  {
    sub_24093C214(255, (unint64_t *)&qword_26AFCC610, (unint64_t *)&qword_26AFD05A0);
    sub_24083F3C0();
    sub_24093C26C();
    unint64_t v0 = sub_2409542A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDBB0);
    }
  }
}

void sub_2408424B4()
{
  if (!qword_26AFCF518)
  {
    sub_24093C168();
    sub_240829E50(&qword_26AFCF540, (void (*)(uint64_t))sub_24093C168);
    unint64_t v0 = sub_2409542A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF518);
    }
  }
}

void sub_240842564()
{
  if (!qword_26AFCDB90)
  {
    sub_240842078();
    sub_24083FA04();
    sub_24083696C(&qword_26AFD0458, (void (*)(uint64_t))sub_240842078);
    sub_24083696C((unint64_t *)&qword_26AFD05B8, (void (*)(uint64_t))sub_24083FA04);
    unint64_t v0 = sub_240954288();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDB90);
    }
  }
}

void sub_240842650()
{
  if (!qword_26AFCF280)
  {
    sub_240844678();
    sub_24083EDCC(255, (unint64_t *)&qword_26AFD07B0);
    sub_24083C8FC(&qword_26AFCF050, (void (*)(uint64_t))sub_240844678);
    sub_24083F780((unint64_t *)&qword_26AFD05B8, (unint64_t *)&qword_26AFD07B0);
    unint64_t v0 = sub_240954288();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF280);
    }
  }
}

void sub_240842750()
{
  if (!qword_26AFCF270)
  {
    sub_240846BBC();
    sub_24083FA04();
    sub_240834954(&qword_26AFD03F8, (void (*)(uint64_t))sub_240846BBC);
    sub_240834954((unint64_t *)&qword_26AFD05B8, (void (*)(uint64_t))sub_24083FA04);
    unint64_t v0 = sub_240954288();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF270);
    }
  }
}

void sub_24084283C()
{
  if (!qword_26AFCF260)
  {
    sub_24084797C();
    sub_24083EDCC(255, (unint64_t *)&qword_26AFD07B0);
    sub_2408397FC(&qword_26AFCED40, (void (*)(uint64_t))sub_24084797C);
    sub_24083FA44();
    unint64_t v0 = sub_240954288();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF260);
    }
  }
}

void sub_240842908()
{
  if (!qword_26AFCF250)
  {
    sub_24084824C();
    sub_24083EDCC(255, (unint64_t *)&qword_26AFD07B0);
    sub_240833160(&qword_26AFCECF0, (void (*)(uint64_t))sub_24084824C);
    sub_24083FA44();
    unint64_t v0 = sub_240954288();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF250);
    }
  }
}

uint64_t sub_2408429D4()
{
  return sub_240833160(&qword_26AFCF248, (void (*)(uint64_t))sub_240842908);
}

void sub_240842A08()
{
  if (!qword_26AFCF240)
  {
    sub_240848314();
    sub_24083EDCC(255, (unint64_t *)&qword_26AFD07B0);
    sub_240832098(&qword_26AFCECC0, (void (*)(uint64_t))sub_240848314);
    sub_24083FA44();
    unint64_t v0 = sub_240954288();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF240);
    }
  }
}

void sub_240842AD4()
{
  if (!qword_26AFCF230)
  {
    sub_240841250();
    sub_24083FA04();
    sub_240836924((unint64_t *)&qword_26AFD0468, (void (*)(uint64_t))sub_240841250);
    sub_240836924((unint64_t *)&qword_26AFD05B8, (void (*)(uint64_t))sub_24083FA04);
    unint64_t v0 = sub_240954288();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF230);
    }
  }
}

void sub_240842BC0()
{
  if (!qword_26AFCF220)
  {
    sub_2408422B8();
    sub_2409002AC(255, &qword_26AFCEED8, (void (*)(uint64_t))sub_240845A08, (void (*)(void))sub_240845AE0);
    sub_24082EEE0(&qword_26AFCDBB8, (void (*)(uint64_t))sub_2408422B8);
    sub_2408FF5E0();
    unint64_t v0 = sub_240954278();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF220);
    }
  }
}

void sub_240842CAC()
{
  if (!qword_26AFCF200)
  {
    sub_2408422B8();
    sub_2408463F0();
    sub_24083ED3C(&qword_26AFCDBB8, (void (*)(uint64_t))sub_2408422B8);
    sub_24083ED3C((unint64_t *)&qword_26AFCEE70, (void (*)(uint64_t))sub_2408463F0);
    unint64_t v0 = sub_240954278();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF200);
    }
  }
}

void sub_240842D98()
{
  if (!qword_26AFCF1F0)
  {
    sub_240842410();
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_24082A13C(255, (unint64_t *)&qword_26AFCDD18, MEMORY[0x263EFDCF0]);
    sub_240829E50(&qword_26AFCDBA8, (void (*)(uint64_t))sub_240842410);
    sub_240829EDC(&qword_26AFCDD10, (unint64_t *)&qword_26AFCDD18, v0);
    unint64_t v1 = sub_240954278();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AFCF1F0);
    }
  }
}

void sub_240842EA4()
{
  if (!qword_26AFCF508)
  {
    sub_2408424B4();
    sub_240846650();
    sub_240829E50(&qword_26AFCF510, (void (*)(uint64_t))sub_2408424B4);
    sub_240829E50(&qword_26AFCEE50, (void (*)(uint64_t))sub_240846650);
    unint64_t v0 = sub_240954278();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF508);
    }
  }
}

void sub_240842F90()
{
  if (!qword_26AFCF1E0)
  {
    sub_2408451B4();
    sub_240842CAC();
    sub_24083ED3C(&qword_26AFCDA58, (void (*)(uint64_t))sub_2408451B4);
    sub_24083ED3C(&qword_26AFCF1F8, (void (*)(uint64_t))sub_240842CAC);
    unint64_t v0 = sub_240954278();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF1E0);
    }
  }
}

void sub_24084307C()
{
  if (!qword_26AFCDB80)
  {
    sub_2409002AC(255, &qword_26AFCDA18, (void (*)(uint64_t))sub_24084210C, (void (*)(void))sub_2408421E8);
    sub_2408414EC();
    sub_2408FFDDC();
    sub_24082EEE0(&qword_26AFCDD50, (void (*)(uint64_t))sub_2408414EC);
    unint64_t v0 = sub_240954278();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDB80);
    }
  }
}

void sub_240843168()
{
  if (!qword_26AFCE200)
  {
    sub_24087E7A8();
    sub_2408416E0();
    sub_2408234F4(&qword_26AFCE180, (void (*)(uint64_t))sub_24087E7A8);
    sub_2408234F4(&qword_26AFCE218, (void (*)(uint64_t))sub_2408416E0);
    unint64_t v0 = sub_240954278();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCE200);
    }
  }
}

void sub_240843254()
{
  if (!qword_26AFCF1D0)
  {
    sub_24093C364(255, &qword_26AFCD9F8, sub_240841E3C, (void (*)(void))sub_240841E5C);
    sub_240842D98();
    sub_24093C2DC();
    sub_240829E50(&qword_26AFCF1E8, (void (*)(uint64_t))sub_240842D98);
    unint64_t v0 = sub_240954278();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF1D0);
    }
  }
}

void sub_240843340()
{
  if (!qword_26AFCF4F8)
  {
    sub_240847C40();
    sub_240842EA4();
    sub_240829E50(&qword_26AFCF430, (void (*)(uint64_t))sub_240847C40);
    sub_240829E50(&qword_26AFCF500, (void (*)(uint64_t))sub_240842EA4);
    unint64_t v0 = sub_240954278();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF4F8);
    }
  }
}

void sub_24084342C()
{
  if (!qword_26AFCE1F0)
  {
    sub_240847880();
    sub_240843168();
    sub_2408234F4(&qword_26AFCED50, (void (*)(uint64_t))sub_240847880);
    sub_2408234F4(&qword_26AFCE1F8, (void (*)(uint64_t))sub_240843168);
    unint64_t v0 = sub_240954278();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCE1F0);
    }
  }
}

void sub_240843518()
{
  if (!qword_26AFCF1B0)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
    sub_24084105C(255, &qword_26AFCDDB0, MEMORY[0x263EFDCF0]);
    sub_240842BC0();
    sub_24083F304(&qword_26AFCDDA8, &qword_26AFCDDB0, v0);
    sub_24082EEE0(&qword_26AFCF218, (void (*)(uint64_t))sub_240842BC0);
    unint64_t v1 = sub_240954278();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AFCF1B0);
    }
  }
}

void sub_240843624()
{
  if (!qword_26AFCDB70)
  {
    sub_24082F050(255, &qword_26AFCDDA0, (uint64_t (*)(uint64_t))sub_24083F7C4, MEMORY[0x263EFDCF0]);
    sub_24084307C();
    sub_240841110();
    sub_24082EEE0(&qword_26AFCDB78, (void (*)(uint64_t))sub_24084307C);
    unint64_t v0 = sub_240954278();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDB70);
    }
  }
}

void sub_240843710()
{
  if (!qword_26AFCDB60)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, void, uint64_t, void))MEMORY[0x263EFDCF0];
    sub_2408412B8(255, (unint64_t *)&qword_26AFCDD78, MEMORY[0x263EFDCF0]);
    sub_240843624();
    sub_240840D34(&qword_26AFCDD70, (unint64_t *)&qword_26AFCDD78, v0);
    sub_24082EEE0(&qword_26AFCDB68, (void (*)(uint64_t))sub_240843624);
    unint64_t v1 = sub_240954278();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AFCDB60);
    }
  }
}

void sub_24084381C()
{
  if (!qword_26AFCF1A0)
  {
    sub_24082A230(255, &qword_26AFCDD38, (uint64_t (*)(uint64_t))sub_24083FC00, MEMORY[0x263EFDCF0]);
    sub_24093C364(255, &qword_26AFCEEB8, (void (*)(uint64_t))sub_240847E2C, (void (*)(void))sub_240847F18);
    sub_240841658();
    sub_24093C3FC();
    unint64_t v0 = sub_240954278();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF1A0);
    }
  }
}

void sub_240843908()
{
  if (!qword_26AFCF170)
  {
    sub_24082F050(255, &qword_26AFCDCD8, (uint64_t (*)(uint64_t))sub_24083FE78, MEMORY[0x263EFDCF0]);
    sub_240844CA4();
    sub_24084184C();
    sub_24082EEE0(&qword_26AFCEFF0, (void (*)(uint64_t))sub_240844CA4);
    unint64_t v0 = sub_240954278();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF170);
    }
  }
}

void sub_2408439F4()
{
  if (!qword_26AFCE1E0)
  {
    sub_24084342C();
    sub_2408234F4(&qword_26AFCE1E8, (void (*)(uint64_t))sub_24084342C);
    unint64_t v0 = sub_240954268();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCE1E0);
    }
  }
}

void sub_240843A88()
{
  if (!qword_26AFCF140)
  {
    sub_240843518();
    sub_24082EEE0(&qword_26AFCF1A8, (void (*)(uint64_t))sub_240843518);
    unint64_t v0 = sub_240954268();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF140);
    }
  }
}

void sub_240843B1C()
{
  if (!qword_26AFCDB50)
  {
    sub_240843710();
    sub_24082EEE0(&qword_26AFCDB58, (void (*)(uint64_t))sub_240843710);
    unint64_t v0 = sub_240954268();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDB50);
    }
  }
}

uint64_t sub_240843BB0()
{
  return sub_24082EEE0(&qword_26AFCDB48, (void (*)(uint64_t))sub_240843B1C);
}

void sub_240843BE4()
{
  if (!qword_26AFCF120)
  {
    sub_240844550();
    sub_24083ED3C(&qword_26AFCF060, (void (*)(uint64_t))sub_240844550);
    unint64_t v0 = sub_240954268();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF120);
    }
  }
}

void sub_240843C78()
{
  if (!qword_26AFCF4E8)
  {
    sub_24084595C();
    sub_240829E50(&qword_26AFCF480, (void (*)(uint64_t))sub_24084595C);
    unint64_t v0 = sub_240954268();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF4E8);
    }
  }
}

void sub_240843D0C()
{
  if (!qword_26AFCDB40)
  {
    sub_240841F8C();
    sub_24083FEAC(255, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F8D488]);
    sub_2408242C4(&qword_26AFCDBF0, (void (*)(uint64_t))sub_240841F8C);
    unint64_t v0 = sub_240954258();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDB40);
    }
  }
}

void sub_240843DD4()
{
  if (!qword_26AFCF110)
  {
    sub_240843BE4();
    sub_24083FF94();
    sub_24083ED3C(&qword_26AFCF118, (void (*)(uint64_t))sub_240843BE4);
    unint64_t v0 = sub_240954258();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF110);
    }
  }
}

void sub_240843E80()
{
  if (!qword_26AFCF100)
  {
    sub_240843BE4();
    sub_24082EBC0(255, &qword_26AFCC600, MEMORY[0x263F45630], MEMORY[0x263F8D488]);
    sub_24083ED3C(&qword_26AFCF118, (void (*)(uint64_t))sub_240843BE4);
    unint64_t v0 = sub_240954258();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF100);
    }
  }
}

void sub_240843F5C()
{
  if (!qword_26AFCE1D0)
  {
    sub_2408439F4();
    sub_24083FF48(255, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
    sub_2408234F4(&qword_26AFCE1D8, (void (*)(uint64_t))sub_2408439F4);
    unint64_t v0 = sub_240954258();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCE1D0);
    }
  }
}

void sub_24084402C()
{
  if (!qword_26AFCF0F8)
  {
    sub_240843A88();
    sub_240840050(255);
    sub_24082EEE0(&qword_26AFCF138, (void (*)(uint64_t))sub_240843A88);
    unint64_t v0 = sub_240954258();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF0F8);
    }
  }
}

void sub_2408440D8()
{
  if (!qword_26AFCF0C8)
  {
    sub_240844D90();
    sub_24083FB78(255, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
    sub_240827554(&qword_26AFCEFD0, (void (*)(uint64_t))sub_240844D90);
    unint64_t v0 = sub_240954258();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF0C8);
    }
  }
}

void sub_2408441A8()
{
  if (!qword_26AFCF4D8)
  {
    sub_240844E9C();
    sub_24083FEFC(255, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
    sub_24082C6CC(&qword_26AFCF490, (void (*)(uint64_t))sub_240844E9C);
    unint64_t v0 = sub_240954258();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF4D8);
    }
  }
}

void sub_240844278()
{
  if (!qword_26AFCF0B8)
  {
    sub_24082759C(255, &qword_26AFCEE88, (uint64_t (*)(uint64_t))sub_240841424, sub_2408414B8, MEMORY[0x263F459F0]);
    sub_240840084(255);
    sub_240846354();
    unint64_t v0 = sub_240954258();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF0B8);
    }
  }
}

void sub_240844338()
{
  if (!qword_26AFCF4C8)
  {
    sub_24082C714(255, &qword_26AFCF468, (uint64_t (*)(uint64_t))sub_240841D38, sub_240841DA0, MEMORY[0x263F459F0]);
    sub_240840084(255);
    sub_240846520();
    unint64_t v0 = sub_240954258();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF4C8);
    }
  }
}

void sub_2408443F8()
{
  if (!qword_26AFCF0A8)
  {
    sub_240847D2C();
    sub_24083FF94();
    sub_24083ED84(&qword_26AFCED30, (void (*)(uint64_t))sub_240847D2C);
    unint64_t v0 = sub_240954258();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF0A8);
    }
  }
}

void sub_2408444A4()
{
  if (!qword_26AFCF078)
  {
    sub_240843254();
    sub_240840680();
    sub_240829E50(&qword_26AFCF1C8, (void (*)(uint64_t))sub_240843254);
    unint64_t v0 = sub_240954238();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF078);
    }
  }
}

void sub_240844550()
{
  if (!qword_26AFCF068)
  {
    sub_240842F90();
    sub_24083ED3C(&qword_26AFCF1D8, (void (*)(uint64_t))sub_240842F90);
    unint64_t v0 = sub_240954228();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF068);
    }
  }
}

void sub_2408445E4()
{
  if (!qword_26AFCF4B8)
  {
    sub_240843340();
    sub_240829E50(&qword_26AFCF4F0, (void (*)(uint64_t))sub_240843340);
    unint64_t v0 = sub_240954228();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF4B8);
    }
  }
}

void sub_240844678()
{
  if (!qword_26AFCF058)
  {
    sub_240848038();
    sub_24083C8FC(&qword_26AFCED00, (void (*)(uint64_t))sub_240848038);
    unint64_t v0 = sub_240954218();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF058);
    }
  }
}

void sub_24084470C()
{
  if (!qword_26AFCF048)
  {
    sub_240847F4C();
    sub_24082EEE0(&qword_26AFCED10, (void (*)(uint64_t))sub_240847F4C);
    unint64_t v0 = sub_240954208();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF048);
    }
  }
}

void sub_2408447A0()
{
  if (!qword_26AFCF018)
  {
    sub_2408440D8();
    sub_2408418D4();
    sub_240827554(&qword_26AFCF0C0, (void (*)(uint64_t))sub_2408440D8);
    sub_240827554(&qword_26AFCDCC0, (void (*)(uint64_t))sub_2408418D4);
    unint64_t v0 = sub_2409541F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF018);
    }
  }
}

uint64_t sub_24084488C()
{
  return sub_240827554(&qword_26AFCF010, (void (*)(uint64_t))sub_2408447A0);
}

void sub_2408448C0()
{
  if (!qword_26AFCF4A8)
  {
    sub_2408441A8();
    sub_2408418D4();
    sub_24082C6CC(&qword_26AFCF4D0, (void (*)(uint64_t))sub_2408441A8);
    sub_24082C6CC(&qword_26AFCDCC0, (void (*)(uint64_t))sub_2408418D4);
    unint64_t v0 = sub_2409541F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF4A8);
    }
  }
}

uint64_t sub_2408449AC()
{
  return sub_24082C6CC(&qword_26AFCF4A0, (void (*)(uint64_t))sub_2408448C0);
}

void sub_2408449E0()
{
  if (!qword_26AFCDAB0)
  {
    sub_240843D0C();
    sub_2408418D4();
    sub_2408242C4(&qword_26AFCDB38, (void (*)(uint64_t))sub_240843D0C);
    sub_2408242C4(&qword_26AFCDCC0, (void (*)(uint64_t))sub_2408418D4);
    unint64_t v0 = sub_2409541F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDAB0);
    }
  }
}

void sub_240844ACC()
{
  if (!qword_26AFCF008)
  {
    sub_240843DD4();
    sub_2408418D4();
    sub_24083ED3C(&qword_26AFCF108, (void (*)(uint64_t))sub_240843DD4);
    sub_24083ED3C(&qword_26AFCDCC0, (void (*)(uint64_t))sub_2408418D4);
    unint64_t v0 = sub_2409541F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF008);
    }
  }
}

void sub_240844BB8()
{
  if (!qword_26AFCE1C0)
  {
    sub_240843F5C();
    sub_2408418D4();
    sub_2408234F4(&qword_26AFCE1C8, (void (*)(uint64_t))sub_240843F5C);
    sub_2408234F4(&qword_26AFCDCC0, (void (*)(uint64_t))sub_2408418D4);
    unint64_t v0 = sub_2409541F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCE1C0);
    }
  }
}

void sub_240844CA4()
{
  if (!qword_26AFCEFF8)
  {
    sub_24084402C();
    sub_24082F050(255, &qword_26AFCDC98, (uint64_t (*)(uint64_t))sub_240840050, MEMORY[0x263EFDCF0]);
    sub_24082EEE0(&qword_26AFCF0F0, (void (*)(uint64_t))sub_24084402C);
    sub_2408419F0();
    unint64_t v0 = sub_2409541F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCEFF8);
    }
  }
}

void sub_240844D90()
{
  if (!qword_26AFCEFD8)
  {
    sub_240844278();
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_24083F348(255, &qword_26AFCDC88, MEMORY[0x263EFDCF0]);
    sub_240827554(&qword_26AFCF0B0, (void (*)(uint64_t))sub_240844278);
    sub_240841CB0((unint64_t *)&qword_26AFCDC80, &qword_26AFCDC88, v0);
    unint64_t v1 = sub_2409541F8();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AFCEFD8);
    }
  }
}

void sub_240844E9C()
{
  if (!qword_26AFCF498)
  {
    sub_240844338();
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
    sub_240841BE4(255, &qword_26AFCDC88, MEMORY[0x263EFDCF0]);
    sub_24082C6CC(&qword_26AFCF4C0, (void (*)(uint64_t))sub_240844338);
    sub_240841CF4((unint64_t *)&qword_26AFCDC80, &qword_26AFCDC88, v0);
    unint64_t v1 = sub_2409541F8();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AFCF498);
    }
  }
}

void sub_240844FA8()
{
  if (!qword_26AFCEFC8)
  {
    sub_2408443F8();
    sub_2408418D4();
    sub_24083ED84(&qword_26AFCF0A0, (void (*)(uint64_t))sub_2408443F8);
    sub_24083ED84(&qword_26AFCDCC0, (void (*)(uint64_t))sub_2408418D4);
    unint64_t v0 = sub_2409541F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCEFC8);
    }
  }
}

uint64_t sub_240845094()
{
  return sub_24083ED84(&qword_26AFCEFC0, (void (*)(uint64_t))sub_240844FA8);
}

void sub_2408450C8()
{
  if (!qword_26AFCDA70)
  {
    sub_240841AF0(255, &qword_26AFCDC08, (uint64_t (*)(uint64_t))sub_240849BDC, MEMORY[0x263EFDCF0]);
    sub_24086F308();
    sub_240841F04();
    sub_2408369B4((unint64_t *)&qword_26AFCDC10, (void (*)(uint64_t))sub_24086F308);
    unint64_t v0 = sub_2409541F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDA70);
    }
  }
}

void sub_2408451B4()
{
  if (!qword_26AFCDA60)
  {
    sub_2408BA81C(255, &qword_26AFCDD90, &qword_26AFCDF50, (uint64_t (*)(uint64_t))sub_2408BA7A4);
    unint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
    sub_2408BA81C(255, &qword_26AFCDC08, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
    sub_2408BA8A8(&qword_26AFCDD88, &qword_26AFCDD90, &qword_26AFCDF50, (uint64_t (*)(uint64_t))sub_2408BA7A4);
    sub_2408BA8A8((unint64_t *)&qword_26AFCDC00, &qword_26AFCDC08, (unint64_t *)&qword_26AFCF7F8, v0);
    unint64_t v1 = sub_2409541D8();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AFCDA60);
    }
  }
}

void sub_2408452E0()
{
  if (!qword_26AFD0430)
  {
    sub_240954DE8();
    sub_240836924(&qword_26AFD05C0, MEMORY[0x263F07CB0]);
    unint64_t v0 = sub_2409541C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD0430);
    }
  }
}

unint64_t sub_24084537C()
{
  unint64_t result = qword_26AFD0428;
  if (!qword_26AFD0428)
  {
    sub_24083499C(255, (unint64_t *)&qword_26AFD0430, MEMORY[0x263F07CB0], (void (*)(void))sub_24083F9D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD0428);
  }
  return result;
}

void sub_240845404()
{
  if (!qword_26AFCDA50)
  {
    sub_240841F8C();
    sub_24082ECEC(255, &qword_26AFCC600, MEMORY[0x263F45630], MEMORY[0x263F8D488]);
    sub_2408242C4(&qword_26AFCDBF0, (void (*)(uint64_t))sub_240841F8C);
    unint64_t v0 = sub_2409541C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDA50);
    }
  }
}

void sub_2408454E0()
{
  if (!qword_26AFCDA48)
  {
    sub_240842564();
    sub_24084855C();
    sub_24083696C(&qword_26AFCDB88, (void (*)(uint64_t))sub_240842564);
    unint64_t v0 = sub_2409541C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDA48);
    }
  }
}

void sub_24084558C()
{
  if (!qword_26AFCEF98)
  {
    sub_240842650();
    sub_24083C8FC(&qword_26AFCF278, (void (*)(uint64_t))sub_240842650);
    unint64_t v0 = sub_2409541C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCEF98);
    }
  }
}

void sub_240845628()
{
  if (!qword_26AFCEF88)
  {
    sub_240842750();
    sub_24084855C();
    sub_240834954(&qword_26AFCF268, (void (*)(uint64_t))sub_240842750);
    unint64_t v0 = sub_2409541C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCEF88);
    }
  }
}

void sub_2408456D4()
{
  if (!qword_26AFCEF78)
  {
    sub_240842AD4();
    sub_24084855C();
    sub_240836924(&qword_26AFCF228, (void (*)(uint64_t))sub_240842AD4);
    unint64_t v0 = sub_2409541C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCEF78);
    }
  }
}

void sub_240845780()
{
  if (!qword_26AFCE1B0)
  {
    sub_2408439F4();
    sub_24082EA94(255, &qword_26AFCC600, MEMORY[0x263F45630], MEMORY[0x263F8D488]);
    sub_2408234F4(&qword_26AFCE1D8, (void (*)(uint64_t))sub_2408439F4);
    unint64_t v0 = sub_2409541C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCE1B0);
    }
  }
}

void sub_24084585C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_2409541C8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_2408458D4()
{
  unint64_t result = qword_26AFCDA30;
  if (!qword_26AFCDA30)
  {
    sub_24084585C(255, &qword_26AFCDA38, (void (*)(uint64_t))sub_240843B1C, (void (*)(void))sub_240843BB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCDA30);
  }
  return result;
}

void sub_24084595C()
{
  if (!qword_26AFCF488)
  {
    sub_2408445E4();
    type metadata accessor for AccountNewRecordsData(255);
    sub_240829E50(&qword_26AFCF4B0, (void (*)(uint64_t))sub_2408445E4);
    unint64_t v0 = sub_2409541C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF488);
    }
  }
}

void sub_240845A08()
{
  if (!qword_26AFCEF68)
  {
    sub_2408462C0();
    sub_24082EF80(255, &qword_26AFCDEB8, &qword_26AFCDF40, 0x263F0A4E8, MEMORY[0x263F8D488]);
    sub_24082EEE0(&qword_26AFCEEA0, (void (*)(uint64_t))sub_2408462C0);
    unint64_t v0 = sub_2409541C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCEF68);
    }
  }
}

uint64_t sub_240845AE0()
{
  return sub_24082EEE0(&qword_26AFCEF60, (void (*)(uint64_t))sub_240845A08);
}

void sub_240845B14()
{
  if (!qword_26AFCF478)
  {
    sub_2408465BC();
    type metadata accessor for AllAccountsLabRecordsData(255);
    sub_240829E50(&qword_26AFCEE60, (void (*)(uint64_t))sub_2408465BC);
    unint64_t v0 = sub_2409541C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF478);
    }
  }
}

void sub_240845BC0()
{
  if (!qword_26AFCEF48)
  {
    sub_240847D2C();
    sub_24082EE18(255, &qword_26AFCC600, MEMORY[0x263F45630], MEMORY[0x263F8D488]);
    sub_24083ED84(&qword_26AFCED30, (void (*)(uint64_t))sub_240847D2C);
    unint64_t v0 = sub_2409541C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCEF48);
    }
  }
}

unint64_t sub_240845C9C()
{
  unint64_t result = qword_26AFD0418;
  if (!qword_26AFD0418)
  {
    sub_240845D24(255, &qword_26AFD0420, sub_2408408AC, (void (*)(void))sub_2408408E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD0418);
  }
  return result;
}

void sub_240845D24(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_2409541C8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_240845D9C()
{
  unint64_t result = qword_26AFD0408;
  if (!qword_26AFD0408)
  {
    sub_240845D24(255, &qword_26AFD0410, sub_240840914, (void (*)(void))sub_240840948);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD0408);
  }
  return result;
}

void sub_240845E24()
{
  if (!qword_26AFCE1A8)
  {
    sub_240840F5C();
    sub_2408397FC(&qword_26AFCE228, (void (*)(uint64_t))sub_240840F5C);
    unint64_t v0 = sub_2409541C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCE1A8);
    }
  }
}

void sub_240845EC0()
{
  if (!qword_26AFCEF20)
  {
    sub_24083D20C(255, (unint64_t *)&qword_26AFD0470, MEMORY[0x263F8D4F8], MEMORY[0x263EFDCF0]);
    sub_2408484BC(255, (unint64_t *)&qword_26AFD03C8);
    sub_24083D5B0();
    unint64_t v0 = sub_2409541C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCEF20);
    }
  }
}

void sub_240845F70()
{
  if (!qword_26AFCEF10)
  {
    sub_240841404(255);
    sub_2408484BC(255, (unint64_t *)&qword_26AFD03C8);
    sub_2408211E4(&qword_26AFCF2B8, sub_240841404);
    unint64_t v0 = sub_2409541C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCEF10);
    }
  }
}

void sub_24084602C()
{
  if (!qword_26AFCE198)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_240828514(255, (unint64_t *)&qword_26AFCDD18, MEMORY[0x263EFDCF0]);
    sub_24083FAAC(255, &qword_26AFCE268, (uint64_t (*)(uint64_t))sub_24087E864, MEMORY[0x263F8D488]);
    sub_240829E98(&qword_26AFCDD10, (unint64_t *)&qword_26AFCDD18, v0);
    unint64_t v1 = sub_2409541C8();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AFCE198);
    }
  }
}

void sub_240846128()
{
  if (!qword_26AFCDA28)
  {
    sub_240841958();
    sub_24083FFEC(255, &qword_26AFCDE80, MEMORY[0x263F458B0], MEMORY[0x263F8D488]);
    sub_2408204C0(&qword_26AFCDCA0, (void (*)(uint64_t))sub_240841958);
    unint64_t v0 = sub_2409541C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDA28);
    }
  }
}

void sub_240846204()
{
  if (!qword_26AFCDA08)
  {
    sub_240846128();
    sub_24083F3C0();
    sub_2408204C0(&qword_26AFCDA20, (void (*)(uint64_t))sub_240846128);
    unint64_t v0 = sub_2409541A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDA08);
    }
  }
}

void sub_2408462C0()
{
  if (!qword_26AFCEEA8)
  {
    sub_24084470C();
    sub_24082EEE0(&qword_26AFCF040, (void (*)(uint64_t))sub_24084470C);
    unint64_t v0 = sub_240954188();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCEEA8);
    }
  }
}

unint64_t sub_240846354()
{
  unint64_t result = qword_26AFCEE80;
  if (!qword_26AFCEE80)
  {
    sub_24082759C(255, &qword_26AFCEE88, (uint64_t (*)(uint64_t))sub_240841424, sub_2408414B8, MEMORY[0x263F459F0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCEE80);
  }
  return result;
}

void sub_2408463F0()
{
  if (!qword_26AFCEE78)
  {
    sub_240841598();
    sub_24083ED3C(&qword_26AFCDD40, (void (*)(uint64_t))sub_240841598);
    unint64_t v0 = sub_240954188();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCEE78);
    }
  }
}

unint64_t sub_240846484()
{
  unint64_t result = qword_26AFCEE70;
  if (!qword_26AFCEE70)
  {
    sub_24082B474(255, (unint64_t *)&qword_26AFCEE78, (uint64_t (*)(uint64_t))sub_240841598, sub_240841624, MEMORY[0x263F459F0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCEE70);
  }
  return result;
}

unint64_t sub_240846520()
{
  unint64_t result = qword_26AFCF460;
  if (!qword_26AFCF460)
  {
    sub_24082C714(255, &qword_26AFCF468, (uint64_t (*)(uint64_t))sub_240841D38, sub_240841DA0, MEMORY[0x263F459F0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCF460);
  }
  return result;
}

void sub_2408465BC()
{
  if (!qword_26AFCEE68)
  {
    sub_24084381C();
    sub_240829E50(&qword_26AFCF198, (void (*)(uint64_t))sub_24084381C);
    unint64_t v0 = sub_240954178();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCEE68);
    }
  }
}

void sub_240846650()
{
  if (!qword_26AFCEE58)
  {
    sub_2408444A4();
    sub_240829E50(&qword_26AFCF070, (void (*)(uint64_t))sub_2408444A4);
    unint64_t v0 = sub_240954178();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCEE58);
    }
  }
}

unint64_t sub_2408466E4()
{
  unint64_t result = qword_26AFCEE30;
  if (!qword_26AFCEE30)
  {
    sub_24082759C(255, &qword_26AFCEE38, (uint64_t (*)(uint64_t))sub_2408447A0, sub_24084488C, MEMORY[0x263EFDAA0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCEE30);
  }
  return result;
}

unint64_t sub_240846780()
{
  unint64_t result = qword_26AFCF450;
  if (!qword_26AFCF450)
  {
    sub_24082C714(255, &qword_26AFCF458, (uint64_t (*)(uint64_t))sub_2408448C0, sub_2408449AC, MEMORY[0x263EFDAA0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCF450);
  }
  return result;
}

void sub_24084681C()
{
  if (!qword_26AFCEE28)
  {
    sub_240844ACC();
    sub_24083ED3C(&qword_26AFCF000, (void (*)(uint64_t))sub_240844ACC);
    unint64_t v0 = sub_240954178();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCEE28);
    }
  }
}

unint64_t sub_2408468B0()
{
  unint64_t result = qword_26AFCEE10;
  if (!qword_26AFCEE10)
  {
    sub_24082B474(255, &qword_26AFCEE18, (uint64_t (*)(uint64_t))sub_240844FA8, sub_240845094, MEMORY[0x263EFDAA0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCEE10);
  }
  return result;
}

void sub_24084694C()
{
  if (!qword_26AFCD9C8)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, void, uint64_t, void))MEMORY[0x263EFDCF0];
    sub_2408412B8(255, (unint64_t *)&qword_26AFCDD78, MEMORY[0x263EFDCF0]);
    sub_240840D34(&qword_26AFCDD70, (unint64_t *)&qword_26AFCDD78, v0);
    unint64_t v1 = sub_240954178();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AFCD9C8);
    }
  }
}

void sub_240846A00()
{
  if (!qword_26AFCEDF8)
  {
    sub_24082F050(255, &qword_26AFCDCD8, (uint64_t (*)(uint64_t))sub_24083FE78, MEMORY[0x263EFDCF0]);
    sub_24084184C();
    unint64_t v0 = sub_240954178();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCEDF8);
    }
  }
}

void sub_240846A94()
{
  if (!qword_26AFCF5E0)
  {
    sub_240848160();
    sub_240830574(&qword_26AFCF558, (void (*)(uint64_t))sub_240848160);
    unint64_t v0 = sub_240954168();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF5E0);
    }
  }
}

void sub_240846B28()
{
  if (!qword_26AFCEDE8)
  {
    sub_240848314();
    sub_24083971C(&qword_26AFCECC0, (void (*)(uint64_t))sub_240848314);
    unint64_t v0 = sub_240954168();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCEDE8);
    }
  }
}

void sub_240846BBC()
{
  if (!qword_26AFD0400)
  {
    sub_240869CD4(255, &qword_26AFD0450, (void (*)(uint64_t))sub_240869C48, (void (*)(void))sub_240869CA0);
    sub_240842078();
    sub_240869D94(&qword_26AFD0448, &qword_26AFD0450, (void (*)(uint64_t))sub_240869C48, (void (*)(void))sub_240869CA0);
    sub_240834954(&qword_26AFD0458, (void (*)(uint64_t))sub_240842078);
    unint64_t v0 = sub_240954158();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD0400);
    }
  }
}

void sub_240846CD0()
{
  if (!qword_26AFCEDD8)
  {
    sub_240869CD4(255, (unint64_t *)&qword_26AFD0440, sub_240869D60, (void (*)(void))sub_24084B39C);
    sub_240845628();
    sub_240869D94(&qword_26AFD0438, (unint64_t *)&qword_26AFD0440, sub_240869D60, (void (*)(void))sub_24084B39C);
    sub_240834954(&qword_26AFCEF80, (void (*)(uint64_t))sub_240845628);
    unint64_t v0 = sub_240954158();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCEDD8);
    }
  }
}

void sub_240846DE4()
{
  if (!qword_26AFCE178)
  {
    sub_24084B2EC();
    sub_2408454E0();
    sub_24083696C(&qword_26AFD0438, (void (*)(uint64_t))sub_24084B2EC);
    sub_24083696C(&qword_26AFCDA40, (void (*)(uint64_t))sub_2408454E0);
    unint64_t v0 = sub_240954158();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCE178);
    }
  }
}

void sub_240846ED0()
{
  if (!qword_26AFCEDC8)
  {
    sub_24084B2EC();
    sub_2408456D4();
    sub_240836924(&qword_26AFD0438, (void (*)(uint64_t))sub_24084B2EC);
    sub_240836924(&qword_26AFCEF70, (void (*)(uint64_t))sub_2408456D4);
    unint64_t v0 = sub_240954158();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCEDC8);
    }
  }
}

void sub_240846FBC()
{
  if (!qword_26AFCEDB8)
  {
    sub_24084B2EC();
    sub_240847458();
    sub_2408397FC(&qword_26AFD0438, (void (*)(uint64_t))sub_24084B2EC);
    sub_2408397FC(&qword_26AFCED90, (void (*)(uint64_t))sub_240847458);
    unint64_t v0 = sub_240954158();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCEDB8);
    }
  }
}

void sub_2408470A8()
{
  if (!qword_26AFCF5D0)
  {
    sub_24084B2EC();
    sub_2408475C0();
    sub_240830574(&qword_26AFD0438, (void (*)(uint64_t))sub_24084B2EC);
    sub_240830574(&qword_26AFCF598, (void (*)(uint64_t))sub_2408475C0);
    unint64_t v0 = sub_240954158();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF5D0);
    }
  }
}

void sub_240847194()
{
  if (!qword_26AFCF5C0)
  {
    sub_24084B2EC();
    sub_240847728();
    sub_2408310C4(&qword_26AFD0438, (void (*)(uint64_t))sub_24084B2EC);
    sub_2408310C4(&qword_26AFCF588, (void (*)(uint64_t))sub_240847728);
    unint64_t v0 = sub_240954158();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF5C0);
    }
  }
}

void sub_240847280()
{
  if (!qword_26AFCF5B0)
  {
    sub_24084B2EC();
    sub_2408477D4();
    sub_24083052C(&qword_26AFD0438, (void (*)(uint64_t))sub_24084B2EC);
    sub_24083052C(&qword_26AFCF578, (void (*)(uint64_t))sub_2408477D4);
    unint64_t v0 = sub_240954158();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF5B0);
    }
  }
}

void sub_24084736C()
{
  if (!qword_26AFCEDA8)
  {
    sub_24090C900();
    sub_240847514();
    sub_240832098(&qword_26AFCDB98, (void (*)(uint64_t))sub_24090C900);
    sub_240832098(&qword_26AFCED70, (void (*)(uint64_t))sub_240847514);
    unint64_t v0 = sub_240954158();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCEDA8);
    }
  }
}

void sub_240847458()
{
  if (!qword_26AFCED98)
  {
    sub_24084283C();
    sub_2408484BC(255, (unint64_t *)&qword_26AFD03C8);
    sub_2408397FC(&qword_26AFCF258, (void (*)(uint64_t))sub_24084283C);
    unint64_t v0 = sub_240954148();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCED98);
    }
  }
}

void sub_240847514()
{
  if (!qword_26AFCED78)
  {
    sub_240842A08();
    sub_2408485B4();
    sub_240832098(&qword_26AFCF238, (void (*)(uint64_t))sub_240842A08);
    unint64_t v0 = sub_240954148();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCED78);
    }
  }
}

void sub_2408475C0()
{
  if (!qword_26AFCF5A0)
  {
    sub_240846A94();
    sub_24084855C();
    sub_240830574(&qword_26AFCF5D8, (void (*)(uint64_t))sub_240846A94);
    unint64_t v0 = sub_240954148();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF5A0);
    }
  }
}

void sub_24084766C()
{
  if (!qword_26AFCED68)
  {
    sub_240846B28();
    sub_2408484BC(255, (unint64_t *)&qword_26AFD03C8);
    sub_24083971C(&qword_26AFCEDE0, (void (*)(uint64_t))sub_240846B28);
    unint64_t v0 = sub_240954148();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCED68);
    }
  }
}

void sub_240847728()
{
  if (!qword_26AFCF590)
  {
    sub_240847A68();
    sub_24084855C();
    sub_2408310C4(&qword_26AFCF568, (void (*)(uint64_t))sub_240847A68);
    unint64_t v0 = sub_240954148();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF590);
    }
  }
}

void sub_2408477D4()
{
  if (!qword_26AFCF580)
  {
    sub_240840FF4();
    sub_24084855C();
    sub_24083052C(&qword_26AFCF5E8, (void (*)(uint64_t))sub_240840FF4);
    unint64_t v0 = sub_240954148();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF580);
    }
  }
}

void sub_240847880()
{
  if (!qword_26AFCED58)
  {
    sub_240841338();
    sub_240951E78();
    sub_2408234F4(&qword_26AFCDD70, (void (*)(uint64_t))sub_240841338);
    unint64_t v0 = sub_240954148();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCED58);
    }
  }
}

uint64_t sub_24084792C(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2408332D4(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24084797C()
{
  if (!qword_26AFCED48)
  {
    sub_240841DD4();
    sub_240841250();
    sub_2408397FC(&qword_26AFCF2A8, (void (*)(uint64_t))sub_240841DD4);
    sub_2408397FC((unint64_t *)&qword_26AFD0468, (void (*)(uint64_t))sub_240841250);
    unint64_t v0 = sub_240954128();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCED48);
    }
  }
}

void sub_240847A68()
{
  if (!qword_26AFCF570)
  {
    sub_240954DE8();
    sub_240840FF4();
    sub_2408310C4(&qword_26AFD05C0, MEMORY[0x263F07CB0]);
    sub_2408310C4(&qword_26AFCF5E8, (void (*)(uint64_t))sub_240840FF4);
    unint64_t v0 = sub_240954118();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF570);
    }
  }
}

void sub_240847B54()
{
  if (!qword_26AFCF448)
  {
    sub_240843C78();
    sub_240845B14();
    sub_240829E50(&qword_26AFCF4E0, (void (*)(uint64_t))sub_240843C78);
    sub_240829E50(&qword_26AFCF470, (void (*)(uint64_t))sub_240845B14);
    unint64_t v0 = sub_240954118();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF448);
    }
  }
}

void sub_240847C40()
{
  if (!qword_26AFCF438)
  {
    sub_2408450C8();
    sub_24093E120(255, &qword_26AFCF538, type metadata accessor for AccountNewRecordsData, MEMORY[0x263EFDDF8]);
    sub_240829E50(&qword_26AFCDA68, (void (*)(uint64_t))sub_2408450C8);
    sub_24093C0E0();
    unint64_t v0 = sub_240954118();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF438);
    }
  }
}

void sub_240847D2C()
{
  if (!qword_26AFCED38)
  {
    sub_24082B474(255, (unint64_t *)&qword_26AFCEE78, (uint64_t (*)(uint64_t))sub_240841598, sub_240841624, MEMORY[0x263F459F0]);
    sub_240841338();
    sub_240846484();
    sub_24083ED84(&qword_26AFCDD70, (void (*)(uint64_t))sub_240841338);
    unint64_t v0 = sub_240954118();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCED38);
    }
  }
}

void sub_240847E2C()
{
  if (!qword_26AFCED28)
  {
    sub_240846650();
    sub_2408450C8();
    sub_240829E50(&qword_26AFCEE50, (void (*)(uint64_t))sub_240846650);
    sub_240829E50(&qword_26AFCDA68, (void (*)(uint64_t))sub_2408450C8);
    unint64_t v0 = sub_240954118();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCED28);
    }
  }
}

uint64_t sub_240847F18()
{
  return sub_240829E50(&qword_26AFCED20, (void (*)(uint64_t))sub_240847E2C);
}

void sub_240847F4C()
{
  if (!qword_26AFCED18)
  {
    sub_24084694C();
    sub_240841DD4();
    sub_24082EEE0(&qword_26AFCD9C0, (void (*)(uint64_t))sub_24084694C);
    sub_24082EEE0(&qword_26AFCF2A8, (void (*)(uint64_t))sub_240841DD4);
    unint64_t v0 = sub_240954118();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCED18);
    }
  }
}

void sub_240848038()
{
  if (!qword_26AFCED08)
  {
    uint64_t v0 = MEMORY[0x263F8D4F8];
    uint64_t v1 = (uint64_t (*)(void, uint64_t, void, void))MEMORY[0x263EFDD90];
    sub_24083D20C(255, &qword_26AFCF2D0, MEMORY[0x263F8D4F8], MEMORY[0x263EFDD90]);
    uint64_t v2 = MEMORY[0x263F8EE60] + 8;
    sub_24083D20C(255, &qword_26AFCF2E8, MEMORY[0x263F8EE60] + 8, v1);
    sub_24083BDA4(&qword_26AFCF2C8, &qword_26AFCF2D0, v0);
    sub_24083BDA4(&qword_26AFCF2E0, &qword_26AFCF2E8, v2);
    unint64_t v3 = sub_240954118();
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_26AFCED08);
    }
  }
}

void sub_240848160()
{
  if (!qword_26AFCF560)
  {
    sub_240840FF4();
    sub_240954DE8();
    sub_240830574(&qword_26AFCF5E8, (void (*)(uint64_t))sub_240840FF4);
    sub_240830574(&qword_26AFD05C0, MEMORY[0x263F07CB0]);
    unint64_t v0 = sub_240954118();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF560);
    }
  }
}

void sub_24084824C()
{
  if (!qword_26AFCECF8)
  {
    sub_240841780();
    unint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F45D68];
    sub_2408331A8(255, (unint64_t *)&qword_26AFCF2B0, MEMORY[0x263F45D68]);
    sub_240841818();
    sub_240839764(&qword_26AFCF2A8, (unint64_t *)&qword_26AFCF2B0, v0);
    unint64_t v1 = sub_240954118();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AFCECF8);
    }
  }
}

void sub_240848314()
{
  if (!qword_26AFCECC8)
  {
    sub_240841DD4();
    sub_240841198();
    sub_24083971C(&qword_26AFCF2A8, (void (*)(uint64_t))sub_240841DD4);
    sub_24083971C(&qword_26AFCDD80, (void (*)(uint64_t))sub_240841198);
    unint64_t v0 = sub_240954118();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCECC8);
    }
  }
}

uint64_t sub_2408483FC(uint64_t a1)
{
  sub_24082EC88(0, &qword_26AFCECB8, MEMORY[0x263F90210], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_240848488(uint64_t a1)
{
}

uint64_t sub_2408484BC(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_24084850C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_24084855C()
{
  unint64_t result = qword_26AFD03C8;
  if (!qword_26AFD03C8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD03C8);
  }
  return result;
}

unint64_t sub_2408485B4()
{
  unint64_t result = qword_26AFCD980;
  if (!qword_26AFCD980)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFCD980);
  }
  return result;
}

void sub_24084860C(uint64_t a1)
{
}

void sub_240848640(id a1)
{
  if (a1 != (id)1) {
}
  }

uint64_t type metadata accessor for ClinicalNotificationSettingsGeneratorPipeline()
{
  uint64_t result = qword_26AFCD890;
  if (!qword_26AFCD890) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24084869C()
{
  return swift_retain();
}

uint64_t sub_2408486B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC13HealthRecords45ClinicalNotificationSettingsGeneratorPipeline_domain;
  uint64_t v4 = sub_240951F18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AccountStatusSummaryTileGeneratorPipeline()
{
  uint64_t result = qword_26AFCEA08;
  if (!qword_26AFCEA08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240848774@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_domain;
  uint64_t v4 = sub_240951F18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SharableModelContextChangeGenerator()
{
  return self;
}

uint64_t sub_240848810@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24081C0E4(a1, *(void *)(v2 + 16), a2);
}

uint64_t type metadata accessor for RemovedCategoriesGeneratorPipeline()
{
  uint64_t result = qword_26AFCD700;
  if (!qword_26AFCD700) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240848864@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC13HealthRecords34RemovedCategoriesGeneratorPipeline_domain;
  uint64_t v4 = sub_240951F18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for CategoryGeneratorNeedRefreshSignal()
{
  return self;
}

uint64_t sub_240848900@<X0>(uint64_t a1@<X8>)
{
  return sub_24083B7A8(v1[2], v1[3], v1[4], a1);
}

uint64_t type metadata accessor for AccountStatusSummaryTileGenerator()
{
  uint64_t result = qword_26AFCE748;
  if (!qword_26AFCE748) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for ClinicalSharingGeneratorPipeline()
{
  uint64_t result = qword_26AFCE5C0;
  if (!qword_26AFCE5C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2408489A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline_domain;
  uint64_t v4 = sub_240951F18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SharedConceptFeedItemPipeline()
{
  uint64_t result = qword_26AFCD460;
  if (!qword_26AFCD460) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240848A6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC13HealthRecords29SharedConceptFeedItemPipeline_domain;
  uint64_t v4 = sub_240951F18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ConceptSharableModelGenerator()
{
  uint64_t result = qword_26AFCD380;
  if (!qword_26AFCD380) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240848B30()
{
  return sub_240954958();
}

void sub_240848BE0(char a1, void *a2)
{
  sub_24081FCE8(a1, a2, *(void (**)(void *, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

void sub_240848BEC(uint64_t a1, uint64_t a2)
{
  sub_24081F714(a1, a2, *(void **)(v2 + 16));
}

unint64_t sub_240848BF4@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_240951FB8() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_240821FB4(a1, *(void *)(v2 + 16), v2 + v6, *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_240848CA0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_2408200F8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_240848CCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC13HealthRecords29ConceptSharableModelGenerator_domain;
  uint64_t v4 = sub_240951F18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ConceptSharableModelPipeline()
{
  uint64_t result = qword_26AFCC630;
  if (!qword_26AFCC630) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_240848D90()
{
  unint64_t result = qword_26AFCD2A8;
  if (!qword_26AFCD2A8)
  {
    type metadata accessor for ConceptSharableModelPipeline();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCD2A8);
  }
  return result;
}

uint64_t sub_240848DE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC13HealthRecords28ConceptSharableModelPipeline_domain;
  uint64_t v4 = sub_240951F18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for RecordKindGeneratorPipeline()
{
  uint64_t result = qword_26AFD0228;
  if (!qword_26AFD0228) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240848EAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC13HealthRecords27RecordKindGeneratorPipeline_domain;
  uint64_t v4 = sub_240951F18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for OnboardingGeneratorPipeline()
{
  uint64_t result = qword_26AFCD1C0;
  if (!qword_26AFCD1C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240848F70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC13HealthRecords27OnboardingGeneratorPipeline_domain;
  uint64_t v4 = sub_240951F18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_240848FE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_24082ECEC(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t type metadata accessor for AddAccountGeneratorPipeline()
{
  uint64_t result = qword_26AFD00D8;
  if (!qword_26AFD00D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2408490A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC13HealthRecords27AddAccountGeneratorPipeline_domain;
  uint64_t v4 = sub_240951F18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for RemovedCategoriesGenerator()
{
  uint64_t result = qword_26AFCD0D8;
  if (!qword_26AFCD0D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for IngestNotificationObserver(uint64_t a1)
{
  return sub_24082A2AC(a1, (uint64_t *)&unk_26AFCE480);
}

uint64_t sub_240849188(void *a1)
{
  return sub_24081EF30(a1);
}

uint64_t type metadata accessor for UserDomainConceptPipeline()
{
  uint64_t result = qword_26AFCCFE8;
  if (!qword_26AFCCFE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2408491E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC13HealthRecords25UserDomainConceptPipeline_domain;
  uint64_t v4 = sub_240951F18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for CategoryGeneratorPipeline(uint64_t a1)
{
  return sub_24082A2AC(a1, (uint64_t *)&unk_26AFD0010);
}

uint64_t sub_240849278@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC13HealthRecords25CategoryGeneratorPipeline_domain;
  uint64_t v4 = sub_240951F18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for LabTipsGeneratorPipeline()
{
  uint64_t result = qword_26AFCCE48;
  if (!qword_26AFCCE48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24084933C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC13HealthRecords24LabTipsGeneratorPipeline_domain;
  uint64_t v4 = sub_240951F18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ClinicalSharingGenerator()
{
  uint64_t result = qword_26AFCE388;
  if (!qword_26AFCE388) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240849400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2408D6370);
}

uint64_t sub_240849414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2408D624C);
}

uint64_t sub_240849428(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_240838530(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_240849498(uint64_t a1, uint64_t a2)
{
  sub_240838530(0, qword_26AFCCDE0, type metadata accessor for UDCSnippetGeneratorData, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24084952C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24081B988(a1, a2);
}

uint64_t type metadata accessor for UDCSnippetGeneratorData(uint64_t a1)
{
  return sub_24082A2AC(a1, qword_26AFCCDA8);
}

unint64_t sub_240849564()
{
  unint64_t result = qword_26AFCCD80;
  if (!qword_26AFCCD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCCD80);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RecordKindGeneratorData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t type metadata accessor for OnboardingTileGenerator()
{
  uint64_t result = qword_26AFCCCA8;
  if (!qword_26AFCCCA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for RecordKindGenerator(uint64_t a1)
{
  return sub_24082A2AC(a1, (uint64_t *)&unk_26AFCFD00);
}

uint64_t type metadata accessor for LabTipsGenerator()
{
  uint64_t result = qword_26AFCCA08;
  if (!qword_26AFCCA08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240849700(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_240849768(uint64_t a1)
{
  return sub_240821B54(a1);
}

uint64_t type metadata accessor for NewRecordsGenerator()
{
  uint64_t result = qword_26AFCFA70;
  if (!qword_26AFCFA70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for NewRecordsGeneratorPipeline()
{
  uint64_t result = qword_26AFCF978;
  if (!qword_26AFCF978) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240849824@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC13HealthRecords27NewRecordsGeneratorPipeline_domain;
  uint64_t v4 = sub_240951F18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for NewRecordsUpdateObserver()
{
  return self;
}

uint64_t type metadata accessor for NewRecordsDataProvider()
{
  return self;
}

uint64_t type metadata accessor for AllAccountsLabRecordsData(uint64_t a1)
{
  return sub_24082A2AC(a1, qword_26AFCC6C8);
}

uint64_t type metadata accessor for AccountNewRecordsData(uint64_t a1)
{
  return sub_24082A2AC(a1, qword_26AFCF800);
}

uint64_t sub_240849924(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_240849984(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_2408CAFA0(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2408499F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_24082EE18(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_240849A64(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_2408D96A0(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_240849AC0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_240849B20(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_2408F0E34(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_240849B7C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_240849BDC()
{
  if (!qword_26AFCF7F8)
  {
    sub_240951A28();
    unint64_t v0 = sub_240955098();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF7F8);
    }
  }
}

uint64_t sub_240849C34(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_240849C48(a1, a2);
  }
  return a1;
}

uint64_t sub_240849C48(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t variable initialization expression of BaseFeedItemViewController.feedItemData@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, 1, 1, a1);
}

uint64_t variable initialization expression of BaseFeedItemViewController.$__lazy_storage_$_decoder()
{
  return 0;
}

double variable initialization expression of BaseFeedItemViewController.context@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t variable initialization expression of AccountSidebarContentConfigurationModel.accountId@<X0>(uint64_t a1@<X8>)
{
  return sub_240849E40(MEMORY[0x263F07508], a1);
}

uint64_t variable initialization expression of AccountSidebarContentConfigurationProvider.accountIconProvider()
{
  return sub_240952BF8();
}

unint64_t sub_240849D74()
{
  unint64_t result = qword_268C90618;
  if (!qword_268C90618)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268C90618);
  }
  return result;
}

uint64_t variable initialization expression of AccountSidebarContentConfigurationProvider.sidebarConfigProvider()
{
  return sub_240953B18();
}

uint64_t variable initialization expression of AccountSidebarContentConfigurationProvider.accountId@<X0>(uint64_t a1@<X8>)
{
  return sub_240849E40(MEMORY[0x263F07508], a1);
}

uint64_t variable initialization expression of AccountSidebarContentConfigurationProvider.fetchedAccountIcon@<X0>(uint64_t a1@<X8>)
{
  return sub_240849E40(type metadata accessor for FetchedAccountIcon, a1);
}

uint64_t variable initialization expression of AccountSidebarContentConfigurationProvider.delegate()
{
  return 0;
}

uint64_t variable initialization expression of AccountStatusReloginSummaryTileFeedItemViewController.tileType@<X0>(uint64_t a1@<X8>)
{
  return sub_240849E40(MEMORY[0x263F45B10], a1);
}

uint64_t sub_240849E40@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(a2, 1, 1, v3);
}

double variable initialization expression of AccountStatusReloginSummaryTileFeedItemViewController.$__lazy_storage_$_factory@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t variable initialization expression of AccountStatusReloginSummaryTileFeedItemViewController.headerType@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F43CB0];
  uint64_t v3 = sub_240953798();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t variable initialization expression of AccountStatusReloginSummaryTileFeedItemViewController.showsSeparator()
{
  return 1;
}

uint64_t sub_240849F40()
{
  return MEMORY[0x270EF1C48](*v0);
}

uint64_t sub_240849F48(uint64_t a1, uint64_t a2)
{
  int v6 = 0;
  char v7 = 1;
  uint64_t result = MEMORY[0x245600DF0](a1, &v6);
  char v4 = v7;
  int v5 = v6;
  if (v7) {
    int v5 = 0;
  }
  *(_DWORD *)a2 = v5;
  *(unsigned char *)(a2 + 4) = v4;
  return result;
}

uint64_t sub_240849F9C(uint64_t a1, uint64_t a2)
{
  int v7 = 0;
  char v8 = 1;
  char v3 = MEMORY[0x245600E00](a1, &v7);
  char v4 = v8;
  int v5 = v7;
  if (v8) {
    int v5 = 0;
  }
  *(_DWORD *)a2 = v5;
  *(unsigned char *)(a2 + 4) = v4;
  return v3 & 1;
}

void sub_240849FF4(float *a1@<X8>)
{
  *a1 = MEMORY[0x245600E10]();
}

uint64_t sub_24084A01C(uint64_t a1, uint64_t a2)
{
  return sub_24084A4D4(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_24084A040(uint64_t a1, uint64_t a2)
{
  return sub_24084A4D4(a1, a2, MEMORY[0x263F8D308]);
}

void sub_24084A060(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_24084A06C(uint64_t a1, id *a2)
{
  uint64_t result = sub_2409547A8();
  *a2 = 0;
  return result;
}

uint64_t sub_24084A0E4(uint64_t a1, id *a2)
{
  char v3 = sub_2409547B8();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_24084A164@<X0>(uint64_t *a1@<X8>)
{
  sub_2409547C8();
  uint64_t v2 = sub_240954788();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void *sub_24084A1A8@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

_DWORD *sub_24084A1BC@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

float sub_24084A1CC@<S0>(_DWORD *a1@<X8>)
{
  float result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t sub_24084A1D8()
{
  return sub_240955458();
}

uint64_t sub_24084A298@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2409547C8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24084A2C4()
{
  sub_24084AB90((unint64_t *)&qword_268C90708, type metadata accessor for Key);
  sub_24084AB90(&qword_268C90710, type metadata accessor for Key);

  return sub_240955458();
}

uint64_t sub_24084A380@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_240954788();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_24084A3C8()
{
  sub_24084AB90(&qword_268C90718, type metadata accessor for HKOntologyShardIdentifier);
  sub_24084AB90(&qword_268C90720, type metadata accessor for HKOntologyShardIdentifier);

  return sub_240955458();
}

uint64_t sub_24084A484()
{
  return MEMORY[0x270F9DE70](*v0);
}

uint64_t sub_24084A48C()
{
  return sub_240955728();
}

void sub_24084A4C0()
{
}

uint64_t sub_24084A4D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_2409547C8();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_24084A518()
{
  sub_2409547C8();
  sub_240954868();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24084A56C()
{
  sub_2409547C8();
  sub_2409556F8();
  sub_240954868();
  uint64_t v0 = sub_240955748();
  swift_bridgeObjectRelease();
  return v0;
}

BOOL sub_24084A5E0(float *a1, float *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24084A5F4()
{
  uint64_t v0 = sub_2409547C8();
  uint64_t v2 = v1;
  if (v0 == sub_2409547C8() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_240955618();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_24084A680()
{
  uint64_t v0 = sub_240951A98();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240837484(0, (unint64_t *)&qword_26AFD0670, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2409562B0;
  char v5 = (void *)sub_240951C68();
  uint64_t v6 = sub_240952588();
  if (v5)
  {
    unint64_t v17 = 0x656C69666F72505BLL;
    unint64_t v18 = 0xE90000000000003ALL;
    v16[1] = v6;
    id v7 = v5;
    v16[0] = v0;
    id v8 = v7;
    id v9 = objc_msgSend(v7, sel_identifier);
    sub_240951A78();

    sub_240951A48();
    (*(void (**)(char *, void))(v1 + 8))(v3, v16[0]);
    sub_2409548A8();
    swift_bridgeObjectRelease();
    sub_2409548A8();

    unint64_t v10 = v17;
    unint64_t v11 = v18;
  }
  else
  {
    unint64_t v11 = 0x800000024095C1A0;
    unint64_t v10 = 0xD000000000000013;
  }
  unint64_t v17 = v10;
  unint64_t v18 = v11;
  sub_2409548A8();

  swift_bridgeObjectRelease();
  unint64_t v12 = v18;
  *(void *)(v4 + 32) = v17;
  *(void *)(v4 + 40) = v12;
  unint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  sub_2409552A8();
  swift_bridgeObjectRelease();
  unint64_t v17 = 0xD00000000000001DLL;
  unint64_t v18 = 0x800000024095C1C0;
  sub_24084AB90(&qword_268C90688, MEMORY[0x263F07508]);
  sub_2409555D8();
  sub_2409548A8();
  swift_bridgeObjectRelease();
  sub_2409548A8();
  unint64_t v13 = v18;
  *(void *)(v4 + 48) = v17;
  *(void *)(v4 + 56) = v13;
  unint64_t v17 = v4;
  sub_240837484(0, (unint64_t *)&qword_26AFD0550, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_24084A9B0();
  uint64_t v14 = sub_240954728();
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_24084A9B0()
{
  unint64_t result = qword_26AFD0558;
  if (!qword_26AFD0558)
  {
    sub_240837484(255, (unint64_t *)&qword_26AFD0550, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD0558);
  }
  return result;
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
}

void type metadata accessor for ComparisonResult(uint64_t a1)
{
}

__n128 initializeWithTake for ClinicalSharingOnboardingTileViewController.ViewModel(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_24084AAB0(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24084AAD0(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for _NSRange(uint64_t a1)
{
}

void type metadata accessor for HKClinicalOnboardingOptions(uint64_t a1)
{
}

uint64_t sub_24084AB48()
{
  return sub_24084AB90(&qword_268C906C0, type metadata accessor for UILayoutPriority);
}

uint64_t sub_24084AB90(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24084ABD8()
{
  return sub_24084AB90(&qword_268C906C8, type metadata accessor for UILayoutPriority);
}

uint64_t sub_24084AC20()
{
  return sub_24084AB90(&qword_268C906D0, type metadata accessor for UILayoutPriority);
}

uint64_t sub_24084AC68()
{
  return sub_24084AB90(&qword_268C906D8, type metadata accessor for HKOntologyShardIdentifier);
}

uint64_t sub_24084ACB0()
{
  return sub_24084AB90(&qword_268C906E0, type metadata accessor for HKOntologyShardIdentifier);
}

uint64_t sub_24084ACF8()
{
  return sub_24084AB90(&qword_268C906E8, type metadata accessor for HKOntologyShardIdentifier);
}

uint64_t sub_24084AD40()
{
  return sub_24084AB90(&qword_268C906F0, type metadata accessor for Key);
}

uint64_t sub_24084AD88()
{
  return sub_24084AB90(&qword_268C906F8, type metadata accessor for Key);
}

uint64_t sub_24084ADD0()
{
  return sub_24084AB90(&qword_268C90700, type metadata accessor for Key);
}

void BaseFeedItemViewController.decoder.setter()
{
}

uint64_t sub_24084AE38@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for HealthRecordsGeneratorContext();
  MEMORY[0x270FA5388](v6 - 8);
  id v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2409540C8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954058();
  unint64_t v13 = sub_2409540B8();
  os_log_type_t v14 = sub_240954C08();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v27 = a3;
    uint64_t v16 = v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v28 = v17;
    uint64_t v29 = a2;
    *(_DWORD *)uint64_t v16 = 136446466;
    uint64_t v26 = a1;
    swift_getMetatypeMetadata();
    uint64_t v18 = sub_2409547E8();
    uint64_t v29 = sub_2408370E4(v18, v19, &v28);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    uint64_t v29 = type metadata accessor for RecordKindGenerator(0);
    sub_24084B5CC();
    uint64_t v20 = sub_2409547E8();
    uint64_t v29 = sub_2408370E4(v20, v21, &v28);
    a1 = v26;
    sub_2409550B8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v13, v14, "[%{public}s]: Emitting %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v17, -1, -1);
    uint64_t v22 = v16;
    a3 = v27;
    MEMORY[0x2456021C0](v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_24083B4E8(a1, (uint64_t)v8);
  uint64_t v23 = type metadata accessor for RecordKindGenerator(0);
  swift_allocObject();
  unint64_t v24 = sub_24081E444((uint64_t)v8);
  a3[3] = v23;
  uint64_t result = sub_240836924(&qword_26AFCFCF8, (void (*)(uint64_t))type metadata accessor for RecordKindGenerator);
  a3[4] = result;
  *a3 = v24;
  return result;
}

uint64_t sub_24084B13C()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HealthRecords27RecordKindGeneratorPipeline_domain;
  uint64_t v2 = sub_240951F18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_24083B3B4(v0 + OBJC_IVAR____TtC13HealthRecords27RecordKindGeneratorPipeline_context);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_24084B204()
{
  return type metadata accessor for RecordKindGeneratorPipeline();
}

uint64_t sub_24084B20C()
{
  uint64_t result = sub_240951F18();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for HealthRecordsGeneratorContext();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

void sub_24084B2EC()
{
  if (!qword_26AFD0440)
  {
    sub_240834760(255, &qword_26AFD0500, (uint64_t (*)(uint64_t))sub_24084855C, MEMORY[0x263F8D488]);
    sub_24084B39C();
    unint64_t v0 = sub_2409542A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD0440);
    }
  }
}

unint64_t sub_24084B39C()
{
  unint64_t result = qword_26AFD0508;
  if (!qword_26AFD0508)
  {
    sub_240834760(255, &qword_26AFD0500, (uint64_t (*)(uint64_t))sub_24084855C, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD0508);
  }
  return result;
}

uint64_t sub_24084B424()
{
  uint64_t v1 = (int *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_24084B520@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24084AE38(v1 + v4, v5, a1);
}

unint64_t sub_24084B5CC()
{
  unint64_t result = qword_268C907A0;
  if (!qword_268C907A0)
  {
    type metadata accessor for RecordKindGenerator(255);
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C907A0);
  }
  return result;
}

id sub_24084B608()
{
  uint64_t v1 = v0;
  sub_240851AB4(0, &qword_268C907D8, MEMORY[0x263F82228]);
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v4 = (char *)&v15 - v3;
  uint64_t v5 = qword_268C907B8;
  uint64_t v6 = *(void **)(v0 + qword_268C907B8);
  if (v6)
  {
    id v7 = *(id *)(v0 + qword_268C907B8);
  }
  else
  {
    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824E8]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    sub_24083EDCC(0, &qword_268C907F8);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v9 = (void *)sub_240954FD8();
    objc_msgSend(v8, sel_addAction_forControlEvents_, v9, 64);

    sub_24084C470();
    uint64_t v10 = sub_240955058();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 0, 1, v10);
    sub_240955068();
    objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    LODWORD(v11) = 1148846080;
    objc_msgSend(v8, sel_setContentHuggingPriority_forAxis_, 0, v11);
    objc_msgSend(v8, sel_setAlpha_, 0.0);
    unint64_t v12 = *(void **)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    id v7 = v8;

    uint64_t v6 = 0;
  }
  id v13 = v6;
  return v7;
}

void sub_24084B83C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x245602290](v2);
  if (v3)
  {
    unint64_t v4 = (void *)v3;
    sub_24084F090(0);
  }
}

uint64_t sub_24084B894()
{
  uint64_t v1 = v0;
  sub_24082EF28(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
  uint64_t v3 = v2;
  uint64_t v27 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v28 - v4 + 16;
  uint64_t v6 = type metadata accessor for UserDomainConceptFeedItemData();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  sub_240851AB4(0, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  MEMORY[0x270FA5388](v10 - 8);
  unint64_t v12 = (char *)v28 - v11 + 16;
  uint64_t v13 = (uint64_t)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x60);
  swift_beginAccess();
  sub_240851DB4(v13, (uint64_t)v12, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6))
  {
    sub_240851984((uint64_t)v12, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
    char v14 = 0;
    return v14 & 1;
  }
  sub_24085168C((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for UserDomainConceptFeedItemData);
  sub_240851984((uint64_t)v12, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  uint64_t v15 = v27;
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v5, &v9[*(int *)(v6 + 20)], v3);
  sub_2408516F4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for UserDomainConceptFeedItemData);
  uint64_t v16 = (void *)sub_240954658();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
  sub_240952808();
  uint64_t v17 = (void *)sub_2409527D8();
  uint64_t v18 = (uint64_t)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x70);
  swift_beginAccess();
  uint64_t result = sub_2408519E8(v18, (uint64_t)v28, (uint64_t)&qword_26AFCF770, (uint64_t)&qword_26AFCF760, MEMORY[0x263F444A0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_240851A5C);
  uint64_t v20 = v29;
  if (v29)
  {
    unint64_t v21 = sub_2408304E8(v28, v29);
    uint64_t v22 = *(void *)(v20 - 8);
    MEMORY[0x270FA5388](v21);
    unint64_t v24 = (char *)v28 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
    (*(void (**)(char *))(v22 + 16))(v24);
    uint64_t v25 = (void *)sub_240953B98();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v20);
    id v26 = objc_msgSend(v25, sel_profileIdentifier);

    sub_240952788();
    sub_2408371B8((uint64_t)v28);
    char v14 = sub_240953F88();

    swift_release();
    return v14 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_24084BD3C(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a1;
  uint64_t v4 = sub_240953318();
  uint64_t v22 = *(void *)(v4 - 8);
  uint64_t v23 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240851AB4(0, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v10 = type metadata accessor for UserDomainConceptFeedItemData();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t)v2 + *(void *)((*MEMORY[0x263F8EED0] & *v2) + 0x60);
  swift_beginAccess();
  sub_240851DB4(v14, (uint64_t)v9, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_240851984((uint64_t)v9, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
    return 0;
  }
  else
  {
    sub_240851B08((uint64_t)v9, (uint64_t)v13);
    sub_24084E254((uint64_t)v13, (uint64_t)v6);
    sub_240851E20(0, (unint64_t *)&qword_26AFD0670, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_240956880;
    strcpy((char *)(v16 + 32), "LabLatestView");
    *(_WORD *)(v16 + 46) = -4864;
    *(void *)(v16 + 48) = v21;
    *(void *)(v16 + 56) = a2;
    swift_bridgeObjectRetain();
    *(void *)(v16 + 64) = sub_240953308();
    *(void *)(v16 + 72) = v17;
    uint64_t v18 = (void *)sub_240954988();
    swift_bridgeObjectRelease();
    id v19 = (id)HKUIJoinStringsForAutomationIdentifier();

    if (v19)
    {
      uint64_t v15 = sub_2409547C8();
    }
    else
    {
      uint64_t v15 = 0;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v23);
    sub_2408516F4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for UserDomainConceptFeedItemData);
  }
  return v15;
}

void sub_24084C0B0()
{
  uint64_t v1 = v0;
  v15.receiver = v0;
  v15.super_class = (Class)type metadata accessor for ConceptLatestValueFeedItemViewController();
  objc_msgSendSuper2(&v15, sel_viewDidLoad);
  id v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v3 = v2;
  objc_msgSend(v2, sel_addSubview_, *(void *)&v1[qword_268C907A8]);

  id v4 = objc_msgSend(v1, sel_view);
  if (!v4)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v5 = v4;
  objc_msgSend(v4, sel_addSubview_, *(void *)&v1[qword_268C907B0]);

  id v6 = objc_msgSend(v1, sel_view);
  if (!v6)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v7 = v6;
  id v8 = sub_24084B608();
  objc_msgSend(v7, sel_addSubview_, v8);

  id v9 = objc_msgSend(v1, sel_view);
  if (!v9)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v10 = v9;
  sub_240951BA8();
  id v11 = (id)*MEMORY[0x263F15A20];
  sub_240954F38();

  id v12 = objc_msgSend(v1, sel_view);
  if (v12)
  {
    uint64_t v13 = v12;
    id v14 = objc_msgSend(self, sel_secondarySystemGroupedBackgroundColor);
    objc_msgSend(v13, sel_setBackgroundColor_, v14);

    sub_24084C6FC();
    sub_24084D1B8();
    sub_24084C39C();
    return;
  }
LABEL_11:
  __break(1u);
}

void sub_24084C288(void *a1)
{
  id v1 = a1;
  sub_24084C0B0();
}

void sub_24084C2D0(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x245602290](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    sub_24084C39C();
    id v4 = objc_msgSend(v3, sel_view);
    if (v4)
    {
      uint64_t v5 = v4;
      objc_msgSend(v4, sel_layoutIfNeeded);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_24084C358(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

void sub_24084C39C()
{
  if (*(unsigned char *)(v0 + qword_268C99108) == 1)
  {
    sub_240952EE8();
    sub_240952EF8();
    sub_240952F38();
    id v1 = sub_24084B608();
    objc_msgSend(v1, sel_setAlpha_, 1.0);
  }
  else
  {
    sub_240952EE8();
    sub_240952EF8();
    sub_240952F38();
    id v1 = sub_24084B608();
    objc_msgSend(v1, sel_setAlpha_, 0.0);
  }

  sub_24084C6FC();
}

void sub_24084C470()
{
  uint64_t v13 = sub_240954FF8();
  uint64_t v0 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_240955028();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240955048();
  sub_24084B894();
  id v7 = objc_msgSend(self, sel_configurationWithScale_, 2);
  id v8 = (void *)sub_240954788();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v8, v7);

  id v10 = v9;
  sub_240955038();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F821E8], v3);
  sub_240954FE8();
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, *MEMORY[0x263F821B8], v13);
  sub_240955008();
  id v11 = objc_msgSend(self, sel_systemYellowColor);
  sub_240955018();
}

void sub_24084C6FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = self;
  uint64_t v3 = (uint64_t *)&v0[qword_268C99100];
  swift_beginAccess();
  sub_24083EDCC(0, &qword_268C91A80);
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)sub_240954988();
  swift_bridgeObjectRelease();
  id v88 = v2;
  objc_msgSend(v2, sel_deactivateConstraints_, v4);

  sub_240851E20(0, (unint64_t *)&qword_26AFCF418, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240956890;
  id v6 = *(void **)&v1[qword_268C907A8];
  id v7 = objc_msgSend(v6, sel_leadingAnchor);
  id v8 = objc_msgSend(v1, sel_view);
  if (!v8) {
    goto LABEL_32;
  }
  id v9 = v8;
  id v10 = objc_msgSend(v8, sel_leadingAnchor);

  id v11 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v10);
  *(void *)(v5 + 32) = v11;
  id v12 = objc_msgSend(v6, sel_topAnchor);
  id v13 = objc_msgSend(v1, sel_view);
  if (!v13)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  id v14 = v13;
  id v15 = objc_msgSend(v13, sel_topAnchor);

  id v16 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v15);
  *(void *)(v5 + 40) = v16;
  uint64_t v17 = *(void **)&v1[qword_268C907B0];
  id v18 = objc_msgSend(v17, sel_leadingAnchor);
  id v19 = objc_msgSend(v1, sel_view);
  if (!v19)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v20 = v19;
  id v21 = objc_msgSend(v19, sel_leadingAnchor);

  id v22 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v21);
  *(void *)(v5 + 48) = v22;
  id v23 = objc_msgSend(v17, sel_trailingAnchor);
  id v24 = sub_24084B608();
  id v25 = objc_msgSend(v24, (SEL)&off_2650D8238 + 2);

  id v26 = objc_msgSend(v23, sel_constraintEqualToAnchor_constant_, v25, -7.0);
  *(void *)(v5 + 56) = v26;
  id v27 = objc_msgSend(v17, sel_topAnchor);
  id v28 = objc_msgSend(v6, sel_bottomAnchor);
  id v29 = objc_msgSend(v27, sel_constraintGreaterThanOrEqualToAnchor_constant_, v28, 7.0);

  uint64_t v30 = sub_240954DA8();
  *(void *)(v5 + 64) = v30;
  id v31 = objc_msgSend(v17, sel_bottomAnchor);
  id v32 = objc_msgSend(v1, sel_view);
  if (!v32)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v33 = v32;
  id v34 = objc_msgSend(v32, sel_bottomAnchor);

  id v35 = objc_msgSend(v31, sel_constraintEqualToAnchor_, v34);
  *(void *)(v5 + 72) = v35;
  id v36 = sub_24084B608();
  id v37 = objc_msgSend(v36, sel_centerYAnchor);

  id v38 = objc_msgSend(v1, sel_view);
  if (!v38)
  {
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v39 = v38;
  id v40 = objc_msgSend(v38, sel_centerYAnchor);

  id v41 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v40);
  *(void *)(v5 + 80) = v41;
  id v42 = sub_24084B608();
  id v43 = objc_msgSend(v42, sel_heightAnchor);

  id v44 = sub_24084B608();
  id v45 = objc_msgSend(v44, sel_widthAnchor);

  id v46 = objc_msgSend(v43, sel_constraintEqualToAnchor_multiplier_, v45, 1.0);
  *(void *)(v5 + 88) = v46;
  id v47 = sub_24084B608();
  id v48 = objc_msgSend(v47, sel_widthAnchor);

  id v49 = objc_msgSend(v1, sel_traitCollection);
  id v50 = objc_msgSend(v49, sel_preferredContentSizeCategory);

  LOBYTE(v49) = sub_240954E28();
  double v51 = 32.0;
  if (v49) {
    double v51 = 64.0;
  }
  id v52 = objc_msgSend(v48, sel_constraintEqualToConstant_, v51);

  *(void *)(v5 + 96) = v52;
  id v53 = objc_msgSend(v1, sel_view);
  if (!v53) {
    goto LABEL_37;
  }
  uint64_t v54 = v53;
  id v55 = objc_msgSend(v53, sel_heightAnchor);

  id v56 = objc_msgSend(v55, sel_constraintGreaterThanOrEqualToConstant_, 115.0);
  uint64_t v57 = sub_240954DA8();

  *(void *)(v5 + 104) = v57;
  id v58 = objc_msgSend(v1, sel_view);
  if (!v58)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v59 = v58;
  id v60 = objc_msgSend(v58, sel_heightAnchor);

  id v61 = objc_msgSend(v60, sel_constraintEqualToConstant_, 115.0);
  uint64_t v62 = sub_240954DA8();

  *(void *)(v5 + 112) = v62;
  sub_2409549B8();
  *uint64_t v3 = v5;
  swift_bridgeObjectRelease();
  int v63 = v1[qword_268C99108];
  uint64_t v64 = (SEL *)&off_2650D8000;
  id v65 = objc_msgSend(v6, sel_trailingAnchor);
  id v66 = sub_24084B608();
  unint64_t v67 = (unint64_t)objc_msgSend(v66, sel_leadingAnchor);

  uint64_t v68 = sel_constraintEqualToAnchor_constant_;
  if (v63 == 1)
  {
    id v69 = objc_msgSend(v65, sel_constraintEqualToAnchor_constant_, v67, -7.0);

    id v70 = sub_24084B608();
    id v71 = objc_msgSend(v70, sel_trailingAnchor);

    id v72 = objc_msgSend(v1, (SEL)&off_2650D8798);
    if (!v72)
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    unint64_t v73 = v72;
    uint64_t v64 = (SEL *)objc_msgSend(v72, sel_trailingAnchor);

    id v65 = objc_msgSend(v71, sel_constraintEqualToAnchor_constant_, v64, -16.0);
    swift_beginAccess();
    unint64_t v67 = *v3;
    if ((unint64_t)*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v1 = (char *)sub_2409553D8();
      swift_bridgeObjectRelease();
      uint64_t v74 = (uint64_t)(v1 + 2);
      if (!__OFADD__(v1, 2)) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v1 = *(char **)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v74 = (uint64_t)(v1 + 2);
      if (!__OFADD__(v1, 2)) {
        goto LABEL_21;
      }
    }
    __break(1u);
  }
  id v69 = objc_msgSend(v65, v68, v67, 7.0);

  id v75 = sub_24084B608();
  id v76 = [v75 v64[291]];

  id v77 = objc_msgSend(v1, (SEL)&off_2650D8798);
  if (!v77)
  {
LABEL_40:
    __break(1u);
    return;
  }
  uint64_t v78 = v77;
  id v79 = [v77 v64[291]];

  id v80 = objc_msgSend(v1, sel_traitCollection);
  id v81 = objc_msgSend(v80, sel_preferredContentSizeCategory);

  LOBYTE(v80) = sub_240954E28();
  double v82 = 56.0;
  if ((v80 & 1) == 0) {
    double v82 = 24.0;
  }
  id v65 = objc_msgSend(v76, sel_constraintEqualToAnchor_constant_, v79, v82);

  swift_beginAccess();
  if ((unint64_t)*v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v87 = sub_2409553D8();
    swift_bridgeObjectRelease();
    uint64_t v74 = v87 + 2;
    if (!__OFADD__(v87, 2)) {
      goto LABEL_21;
    }
    goto LABEL_31;
  }
  uint64_t v83 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v74 = v83 + 2;
  if (__OFADD__(v83, 2))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
LABEL_21:
  sub_24085187C(v74, 1);
  sub_2409549B8();
  id v84 = v69;
  MEMORY[0x245600C60]();
  if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_240954A08();
  }
  sub_240954A28();
  sub_2409549B8();
  id v85 = v65;
  MEMORY[0x245600C60]();
  if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_240954A08();
  }
  sub_240954A28();
  sub_2409549B8();
  swift_endAccess();

  swift_bridgeObjectRetain();
  uint64_t v86 = (void *)sub_240954988();
  swift_bridgeObjectRelease();
  objc_msgSend(v88, sel_activateConstraints_, v86);
}

uint64_t sub_24084D1B8()
{
  sub_240851AB4(0, &qword_268C907D8, MEMORY[0x263F82228]);
  MEMORY[0x270FA5388](v1 - 8);
  id v35 = (char *)&v32 - v2;
  sub_240851AB4(0, &qword_268C90818, MEMORY[0x263F46198]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v32 - v4;
  uint64_t v6 = sub_240953318();
  uint64_t v34 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v33 = (uint64_t)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240851AB4(0, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  MEMORY[0x270FA5388](v8 - 8);
  id v10 = (char *)&v32 - v9;
  uint64_t v11 = type metadata accessor for UserDomainConceptFeedItemData();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24084D6B0();
  uint64_t v15 = (uint64_t)v0 + *(void *)((*MEMORY[0x263F8EED0] & *v0) + 0x60);
  swift_beginAccess();
  sub_240851DB4(v15, (uint64_t)v10, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_240851984((uint64_t)v10, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  }
  sub_240851B08((uint64_t)v10, (uint64_t)v14);
  uint64_t v17 = v33;
  sub_24084E254((uint64_t)v14, v33);
  v36[3] = v6;
  v36[4] = MEMORY[0x263F46190];
  id v18 = sub_240851B6C(v36);
  uint64_t v19 = v34;
  uint64_t v20 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v34 + 16);
  v20(v18, v17, v6);
  sub_240952F18();
  v20((uint64_t *)v5, v17, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v5, 0, 1, v6);
  sub_240952F48();
  id v21 = sub_24084B608();
  id v22 = v35;
  sub_24084C470();
  uint64_t v23 = sub_240955058();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 0, 1, v23);
  sub_240955068();

  char v24 = sub_24084B894();
  BOOL v25 = (v24 & 1) == 0;
  if (v24) {
    uint64_t v26 = 0x7475426E69706E55;
  }
  else {
    uint64_t v26 = 0x6F747475426E6950;
  }
  if (v25) {
    uint64_t v27 = 0xE90000000000006ELL;
  }
  else {
    uint64_t v27 = 0xEB000000006E6F74;
  }
  sub_24084BD3C(v26, v27);
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  if (v29)
  {
    id v30 = sub_24084B608();
    id v31 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
    objc_msgSend(v30, sel_setAccessibilityIdentifier_, v31);
  }
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v6);
  return sub_2408516F4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for UserDomainConceptFeedItemData);
}

uint64_t sub_24084D6B0()
{
  uint64_t v1 = sub_2409540C8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954088();
  id v5 = v0;
  uint64_t v6 = sub_2409540B8();
  os_log_type_t v7 = sub_240954C08();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v1;
    uint64_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v17 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t ObjectType = swift_getObjectType();
    sub_240851BD0();
    uint64_t v11 = sub_2409547E8();
    uint64_t ObjectType = sub_2408370E4(v11, v12, &v17);
    sub_2409550B8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v6, v7, "reloadView: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v10, -1, -1);
    MEMORY[0x2456021C0](v9, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v15);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t sub_24084D8D0(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_24082EF28(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v55 - v7;
  uint64_t v9 = type metadata accessor for UserDomainConceptFeedItemData();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v66 = v9;
  uint64_t v67 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v61 = (uint64_t)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240851AB4(0, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v65 = (uint64_t)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  id v16 = (char *)&v55 - v15;
  uint64_t v17 = sub_2409528B8();
  uint64_t v63 = *(void *)(v17 - 8);
  uint64_t v64 = v17;
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  id v60 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v62 = (char *)&v55 - v20;
  uint64_t v21 = sub_240953738();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  BOOL v25 = (char *)&v55 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v55 - v26;
  if (*((unsigned char *)v2 + qword_268C99108) == 1)
  {
    return sub_24084F090(0);
  }
  else
  {
    id v58 = v8;
    uint64_t v59 = v6;
    uint64_t v56 = v5;
    sub_24084EB18(a1);
    uint64_t v29 = (uint64_t)v2 + *(void *)((*MEMORY[0x263F8EED0] & *v2) + 0x70);
    swift_beginAccess();
    uint64_t result = sub_2408519E8(v29, (uint64_t)v68, (uint64_t)&qword_26AFCF770, (uint64_t)&qword_26AFCF760, MEMORY[0x263F444A0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_240851A5C);
    uint64_t v30 = v69;
    if (v69)
    {
      id v31 = sub_2408304E8(v68, v69);
      uint64_t v57 = &v55;
      uint64_t v32 = *(void *)(v30 - 8);
      MEMORY[0x270FA5388](v31);
      uint64_t v34 = (char *)&v55 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v32 + 16))(v34);
      sub_240953BA8();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v30);
      (*(void (**)(char *, void, uint64_t))(v22 + 104))(v25, *MEMORY[0x263F43BE0], v21);
      sub_240953728();
      id v35 = *(void (**)(char *, uint64_t))(v22 + 8);
      v35(v25, v21);
      v35(v27, v21);
      sub_2408371B8((uint64_t)v68);
      sub_2409529A8();
      uint64_t v57 = (uint64_t *)sub_240952998();
      uint64_t v36 = (uint64_t)v2 + *(void *)((*MEMORY[0x263F8EED0] & *v2) + 0x60);
      swift_beginAccess();
      sub_240851DB4(v36, (uint64_t)v16, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
      uint64_t v37 = v66;
      uint64_t v38 = v67 + 48;
      uint64_t v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48);
      if (v39(v16, 1, v66))
      {
        sub_240851984((uint64_t)v16, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
        id v41 = v62;
        uint64_t v40 = v63;
        uint64_t v42 = v64;
        (*(void (**)(char *, void, uint64_t))(v63 + 104))(v62, *MEMORY[0x263F46000], v64);
      }
      else
      {
        uint64_t v67 = v38;
        uint64_t v43 = v61;
        sub_24085168C((uint64_t)v16, v61, (uint64_t (*)(void))type metadata accessor for UserDomainConceptFeedItemData);
        sub_240851984((uint64_t)v16, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
        uint64_t v40 = v63;
        uint64_t v42 = v64;
        id v44 = v60;
        (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v60, v43, v64);
        sub_2408516F4(v43, (uint64_t (*)(void))type metadata accessor for UserDomainConceptFeedItemData);
        id v41 = v62;
        (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v62, v44, v42);
      }
      id v46 = v58;
      uint64_t v45 = v59;
      uint64_t v47 = v36;
      uint64_t v48 = v65;
      sub_240851DB4(v47, v65, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
      if (v39((char *)v48, 1, v37))
      {
        sub_240851984(v48, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
        id v49 = 0;
      }
      else
      {
        uint64_t v50 = v48;
        uint64_t v51 = v48;
        uint64_t v52 = v61;
        sub_24085168C(v50, v61, (uint64_t (*)(void))type metadata accessor for UserDomainConceptFeedItemData);
        sub_240851984(v51, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
        uint64_t v53 = v56;
        (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v46, v52 + *(int *)(v37 + 20), v56);
        sub_2408516F4(v52, (uint64_t (*)(void))type metadata accessor for UserDomainConceptFeedItemData);
        id v49 = (void *)sub_240954658();
        (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v53);
      }
      uint64_t v54 = v57;
      sub_240952958();

      return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v41, v42);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_24084E108(void *a1)
{
  if (a1)
  {
    id v2 = objc_msgSend(a1, sel_preferredContentSizeCategory);
    char v3 = sub_240954E28();

    int v4 = v3 & 1;
  }
  else
  {
    int v4 = 2;
  }
  id v5 = objc_msgSend(v1, sel_traitCollection);
  id v6 = objc_msgSend(v5, sel_preferredContentSizeCategory);

  int v7 = sub_240954E28();
  if (v4 == 2 || ((v7 ^ (v4 != 0)) & 1) != 0)
  {
    sub_24084D1B8();
  }
}

void sub_24084E1E8(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  sub_24084E108(a3);
}

uint64_t sub_24084E254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v3 = v2;
  uint64_t v71 = a2;
  sub_240851D44();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v67 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240851AB4(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v60 - v8;
  uint64_t v10 = sub_240951A28();
  uint64_t v65 = *(void *)(v10 - 8);
  uint64_t v66 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v61 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_240952B98();
  uint64_t v12 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  uint64_t v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240851AB4(0, &qword_26AFCC6A8, MEMORY[0x263F07690]);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v60 - v16;
  uint64_t v18 = sub_2409526C8();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_2409528B8();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16);
  uint64_t v64 = a1;
  v23(v21, a1, v22);
  uint64_t v24 = *MEMORY[0x263F45F00];
  uint64_t v68 = v19;
  uint64_t v69 = v18;
  BOOL v25 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 104);
  id v72 = v21;
  v25(v21, v24, v18);
  sub_240952808();
  uint64_t v26 = (void *)sub_2409527D8();
  uint64_t v27 = *(void *)((*MEMORY[0x263F8EED0] & *v3) + 0x70);
  id v70 = v3;
  uint64_t v28 = (uint64_t)v3 + v27;
  swift_beginAccess();
  uint64_t result = sub_2408519E8(v28, (uint64_t)v73, (uint64_t)&qword_26AFCF770, (uint64_t)&qword_26AFCF760, MEMORY[0x263F444A0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_240851A5C);
  uint64_t v30 = v74;
  if (v74)
  {
    id v31 = sub_2408304E8(v73, v74);
    uint64_t v32 = *(void *)(v30 - 8);
    MEMORY[0x270FA5388](v31);
    uint64_t v34 = (char *)&v60 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v32 + 16))(v34);
    id v35 = (void *)sub_240953B98();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v30);
    uint64_t v36 = (void *)sub_2409527E8();

    sub_2408371B8((uint64_t)v73);
    uint64_t v37 = sub_240951AB8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v17, 1, 1, v37);
    sub_240952B88();
    uint64_t v38 = sub_2409535A8();
    uint64_t v40 = v39;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v63);
    sub_240851984((uint64_t)v17, &qword_26AFCC6A8, MEMORY[0x263F07690]);
    uint64_t v41 = type metadata accessor for UserDomainConceptFeedItemData();
    uint64_t v42 = v64;
    sub_240851DB4(v64 + *(int *)(v41 + 28), (uint64_t)v9, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
    uint64_t v44 = v65;
    uint64_t v43 = v66;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v9, 1, v66) == 1)
    {
      uint64_t v62 = v38;
      uint64_t v63 = v40;
      sub_240851984((uint64_t)v9, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v45 = v61;
      (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v61, v9, v43);
      id v46 = objc_msgSend(v36, sel_utcDateFormatter);
      uint64_t v47 = (void *)sub_2409519A8();
      id v48 = objc_msgSend(v46, sel_relativeStringFromDate_, v47);

      uint64_t v62 = sub_2409547C8();
      uint64_t v63 = v49;

      (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v43);
    }
    uint64_t v50 = (uint64_t)v67;
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_2409525F8();
    uint64_t v66 = sub_240952688();
    sub_24085168C(v42 + *(int *)(v41 + 32), v50, (uint64_t (*)(void))sub_240851D44);
    sub_24082EF28(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
    uint64_t v53 = v52;
    uint64_t v54 = *(void *)(v52 - 8);
    int v55 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v50, 1, v52);
    uint64_t v67 = (char *)v51;
    if (v55 == 1)
    {
      uint64_t v56 = v36;
      sub_2408516F4(v50, (uint64_t (*)(void))sub_240851D44);
    }
    else
    {
      uint64_t v57 = (void *)sub_240954658();
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v50, v53);
      id v58 = v57;
      uint64_t v56 = v36;
      if (objc_msgSend(v58, sel_hasRenderableContent)) {
        id v59 = objc_msgSend(self, sel_referenceRangeViewDataFromInspectableValueInRange_, v58);
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24084B894();
    sub_2409532F8();

    return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v72, v69);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24084EB18(uint64_t a1)
{
  id v2 = v1;
  uint64_t v32 = a1;
  sub_24082EF28(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
  uint64_t v4 = v3;
  uint64_t v33 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v32 - v5;
  uint64_t v7 = type metadata accessor for UserDomainConceptFeedItemData();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240851AB4(0, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v32 - v12;
  uint64_t v14 = (uint64_t)v2 + *(void *)((*MEMORY[0x263F8EED0] & *v2) + 0x60);
  swift_beginAccess();
  sub_240851DB4(v14, (uint64_t)v13, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7)) {
    return sub_240851984((uint64_t)v13, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  }
  uint64_t v16 = v32;
  sub_24085168C((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for UserDomainConceptFeedItemData);
  sub_240851984((uint64_t)v13, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  uint64_t v17 = v33;
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v6, &v10[*(int *)(v7 + 20)], v4);
  sub_2408516F4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for UserDomainConceptFeedItemData);
  uint64_t v18 = (void *)sub_240954658();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v4);
  uint64_t v19 = (uint64_t)v2 + *(void *)((*MEMORY[0x263F8EED0] & *v2) + 0x70);
  swift_beginAccess();
  sub_2408519E8(v19, (uint64_t)&v34, (uint64_t)&qword_26AFCF770, (uint64_t)&qword_26AFCF760, MEMORY[0x263F444A0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_240851A5C);
  if (v35)
  {
    uint64_t v20 = v2;
    sub_24083AB20(&v34, (uint64_t)v36);
    sub_240952808();
    uint64_t v21 = (void *)sub_2409527D8();
    sub_2408304E8(v36, v36[3]);
    uint64_t v22 = (void *)sub_240953B98();
    uint64_t v23 = (void *)sub_2409527E8();

    sub_240952D78();
    uint64_t v24 = (void *)sub_240952D68();
    BOOL v25 = (void *)sub_240952D28();

    sub_2408519E8(v16, (uint64_t)&v34, (uint64_t)&qword_268C91A60, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8D8F0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_240851E20);
    uint64_t v26 = v35;
    if (v35)
    {
      uint64_t v27 = sub_2408304E8(&v34, v35);
      uint64_t v28 = *(void *)(v26 - 8);
      MEMORY[0x270FA5388](v27);
      uint64_t v30 = (char *)&v32 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v28 + 16))(v30);
      uint64_t v31 = sub_2409555F8();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v26);
      sub_2408371B8((uint64_t)&v34);
    }
    else
    {
      uint64_t v31 = 0;
    }
    objc_msgSend(v20, sel_showViewController_sender_, v25, v31, v32);

    swift_unknownObjectRelease();
    return sub_2408371B8((uint64_t)v36);
  }
  else
  {

    return sub_240851CE8((uint64_t)&v34, (unint64_t *)&qword_26AFCF770, (unint64_t *)&qword_26AFCF760);
  }
}

uint64_t sub_24084F090(uint64_t a1)
{
  uint64_t v104 = a1;
  uint64_t v103 = sub_240953FE8();
  uint64_t v101 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103);
  long long v100 = (char *)&v91 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_240952F68();
  uint64_t v98 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  uint64_t v97 = (char *)&v91 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240851AB4(0, &qword_268C907F0, MEMORY[0x263F46188]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v102 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v110 = (char *)&v91 - v7;
  uint64_t v8 = sub_2409531E8();
  uint64_t v111 = *(void *)(v8 - 8);
  uint64_t v112 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v109 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_240951A98();
  uint64_t v106 = *(void *)(v107 - 8);
  MEMORY[0x270FA5388](v107);
  uint64_t v105 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24082EF28(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
  uint64_t v115 = *(void *)(v11 - 8);
  uint64_t v116 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v114 = (char *)&v91 - v12;
  uint64_t v117 = type metadata accessor for UserDomainConceptFeedItemData();
  uint64_t v13 = *(void *)(v117 - 8);
  MEMORY[0x270FA5388](v117);
  uint64_t v15 = (char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240851AB4(0, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = (char *)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v91 - v20;
  uint64_t v22 = sub_2409540C8();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  BOOL v25 = (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954078();
  uint64_t v26 = v1;
  uint64_t v27 = sub_2409540B8();
  int v113 = sub_240954C38();
  BOOL v28 = os_log_type_enabled(v27, (os_log_type_t)v113);
  uint64_t v29 = (void *)MEMORY[0x263F8EED0];
  if (v28)
  {
    os_log_t v94 = v27;
    uint64_t v95 = v23;
    uint64_t v96 = v22;
    uint64_t v108 = v15;
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    uint64_t v118 = v31;
    *(_DWORD *)uint64_t v30 = 136446210;
    uint64_t v32 = (uint64_t)v26 + *(void *)((*v29 & *v26) + 0x60);
    swift_beginAccess();
    sub_240851DB4(v32, (uint64_t)v21, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v21, 1, v117))
    {
      sub_240851984((uint64_t)v21, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
      uint64_t v33 = 0x44495555206F4E3CLL;
      unint64_t v34 = 0xE90000000000003ELL;
    }
    else
    {
      uint64_t v92 = type metadata accessor for UserDomainConceptFeedItemData;
      uint64_t v93 = v13;
      uint64_t v35 = (uint64_t)v108;
      sub_24085168C((uint64_t)v21, (uint64_t)v108, (uint64_t (*)(void))type metadata accessor for UserDomainConceptFeedItemData);
      sub_240851984((uint64_t)v21, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
      uint64_t v36 = v116;
      uint64_t v37 = v114;
      uint64_t v38 = v115;
      (*(void (**)(char *, uint64_t, uint64_t))(v115 + 16))(v114, v35 + *(int *)(v117 + 20), v116);
      sub_2408516F4(v35, (uint64_t (*)(void))v92);
      uint64_t v39 = (void *)sub_240954658();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v36);
      id v40 = objc_msgSend(v39, sel_UUID);

      uint64_t v13 = v93;
      uint64_t v41 = v31;
      uint64_t v42 = v105;
      sub_240951A78();

      uint64_t v33 = sub_240951A48();
      unint64_t v34 = v43;
      uint64_t v44 = v42;
      uint64_t v31 = v41;
      (*(void (**)(char *, uint64_t))(v106 + 8))(v44, v107);
    }
    uint64_t v120 = sub_2408370E4(v33, v34, &v118);
    sub_2409550B8();

    swift_bridgeObjectRelease();
    os_log_t v45 = v94;
    _os_log_impl(&dword_240818000, v94, (os_log_type_t)v113, "Attempting to toggle pin state %{public}s", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v31, -1, -1);
    MEMORY[0x2456021C0](v30, -1, -1);

    (*(void (**)(char *, uint64_t))(v95 + 8))(v25, v96);
    uint64_t v15 = v108;
    uint64_t v29 = (void *)MEMORY[0x263F8EED0];
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  }
  uint64_t v46 = (uint64_t)v26 + *(void *)((*v29 & *v26) + 0x60);
  swift_beginAccess();
  sub_240851DB4(v46, (uint64_t)v19, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v19, 1, v117))
  {
    sub_24085168C((uint64_t)v19, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for UserDomainConceptFeedItemData);
    sub_240851984((uint64_t)v19, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
    uint64_t v50 = v116;
    uint64_t v51 = v29;
    uint64_t v53 = v114;
    uint64_t v52 = v115;
    (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v114, &v15[*(int *)(v117 + 20)], v116);
    sub_2408516F4((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for UserDomainConceptFeedItemData);
    uint64_t v54 = (void *)sub_240954658();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v50);
    sub_240952808();
    int v55 = (void *)sub_2409527D8();
    uint64_t v56 = (uint64_t)v26 + *(void *)((*v51 & *v26) + 0x70);
    swift_beginAccess();
    uint64_t result = sub_2408519E8(v56, (uint64_t)&v118, (uint64_t)&qword_26AFCF770, (uint64_t)&qword_26AFCF760, MEMORY[0x263F444A0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_240851A5C);
    uint64_t v58 = v119;
    if (v119)
    {
      id v59 = sub_2408304E8(&v118, v119);
      uint64_t v60 = *(void *)(v58 - 8);
      MEMORY[0x270FA5388](v59);
      uint64_t v62 = (char *)&v91 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v60 + 16))(v62);
      uint64_t v63 = (void *)sub_240953B98();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v58);
      id v64 = objc_msgSend(v63, sel_profileIdentifier);

      sub_240952788();
      sub_2408371B8((uint64_t)&v118);
      char v65 = sub_24084B894();
      BOOL v66 = (v65 & 1) == 0;
      if (v65) {
        uint64_t v67 = 0x7475426E69706E55;
      }
      else {
        uint64_t v67 = 0x6F747475426E6950;
      }
      if (v66) {
        uint64_t v68 = 0xE90000000000006ELL;
      }
      else {
        uint64_t v68 = 0xEB000000006E6F74;
      }
      sub_24084BD3C(v67, v68);
      uint64_t v70 = v69;
      uint64_t v71 = swift_bridgeObjectRelease();
      if (v70)
      {
        id v72 = (void *)sub_24084B608(v71);
        unint64_t v73 = (void *)sub_240954788();
        swift_bridgeObjectRelease();
        objc_msgSend(v72, sel_setAccessibilityIdentifier_, v73);
      }
      uint64_t v74 = v110;
      sub_240954CF8();
      uint64_t v76 = v111;
      uint64_t v75 = v112;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v111 + 48))(v74, 1, v112) == 1)
      {

        swift_release();
        uint64_t v47 = &qword_268C907F0;
        id v48 = (uint64_t (*)())MEMORY[0x263F46188];
        uint64_t v49 = (uint64_t)v74;
        return sub_240851984(v49, v47, (void (*)(uint64_t))v48);
      }
      id v77 = v109;
      (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v109, v74, v75);
      unint64_t v78 = sub_240953F68();
      if (v78 >> 62) {
        uint64_t v79 = sub_2409553D8();
      }
      else {
        uint64_t v79 = *(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v79)
      {
LABEL_27:
        id v88 = v100;
        sub_240953F48();
        (*(void (**)(char *, uint64_t))(v101 + 8))(v88, v103);
        sub_2409529A8();
        uint64_t v89 = (void *)sub_240952998();
        uint64_t v90 = (uint64_t)v102;
        (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v102, v77, v75);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v76 + 56))(v90, 0, 1, v75);
        sub_240952948();

        swift_release();
        sub_240851984(v90, &qword_268C907F0, MEMORY[0x263F46188]);
        return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v77, v75);
      }
      uint64_t result = sub_2408519E8(v56, (uint64_t)&v118, (uint64_t)&qword_26AFCF770, (uint64_t)&qword_26AFCF760, MEMORY[0x263F444A0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_240851A5C);
      uint64_t v80 = v119;
      if (v119)
      {
        id v81 = sub_2408304E8(&v118, v119);
        uint64_t v82 = *(void *)(v80 - 8);
        MEMORY[0x270FA5388](v81);
        id v84 = (char *)&v91 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v82 + 16))(v84);
        sub_240953B98();
        (*(void (**)(char *, uint64_t))(v82 + 8))(v84, v80);
        sub_240953248();
        swift_allocObject();
        sub_240953238();
        sub_2408371B8((uint64_t)&v118);
        uint64_t v85 = v98;
        uint64_t v86 = v97;
        uint64_t v87 = v99;
        (*(void (**)(char *, void, uint64_t))(v98 + 104))(v97, *MEMORY[0x263F46128], v99);
        sub_240953208();
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v85 + 8))(v86, v87);
        id v77 = v109;
        goto LABEL_27;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }
  uint64_t v47 = &qword_26AFCD5A0;
  id v48 = type metadata accessor for UserDomainConceptFeedItemData;
  uint64_t v49 = (uint64_t)v19;
  return sub_240851984(v49, v47, (void (*)(uint64_t))v48);
}

uint64_t sub_240850034()
{
  sub_24082EF28(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v16 - v4;
  uint64_t v6 = type metadata accessor for UserDomainConceptFeedItemData();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240851AB4(0, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v16 - v11;
  uint64_t v13 = (uint64_t)v0 + *(void *)((*MEMORY[0x263F8EED0] & *v0) + 0x60);
  swift_beginAccess();
  sub_240851DB4(v13, (uint64_t)v12, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6))
  {
    sub_240851984((uint64_t)v12, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
    return 0;
  }
  else
  {
    sub_24085168C((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for UserDomainConceptFeedItemData);
    sub_240851984((uint64_t)v12, &qword_26AFCD5A0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, &v9[*(int *)(v6 + 20)], v2);
    sub_2408516F4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for UserDomainConceptFeedItemData);
    uint64_t v14 = sub_240954658();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v14;
}

id sub_240850320(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = qword_268C907A8;
  id v7 = objc_allocWithZone((Class)sub_240952F28());
  uint64_t v8 = v3;
  *(void *)&v3[v6] = objc_msgSend(v7, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v9 = qword_268C907B0;
  *(void *)&v8[v9] = objc_msgSend(objc_allocWithZone((Class)sub_240952F58()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v8[qword_268C907B8] = 0;
  *(void *)&v8[qword_268C99100] = MEMORY[0x263F8EE78];
  uint64_t v10 = &v8[qword_268C907C0];
  *(_OWORD *)uint64_t v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((void *)v10 + 4) = 0;
  v8[qword_268C99108] = 0;

  if (a2)
  {
    uint64_t v11 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = 0;
  }
  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for ConceptLatestValueFeedItemViewController();
  id v12 = objc_msgSendSuper2(&v14, sel_initWithNibName_bundle_, v11, a3);

  return v12;
}

id sub_24085047C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    uint64_t v5 = sub_2409547C8();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  id v8 = a4;
  return sub_240850320(v5, v7, a4);
}

id sub_2408504DC(void *a1)
{
  uint64_t v3 = qword_268C907A8;
  id v4 = objc_allocWithZone((Class)sub_240952F28());
  uint64_t v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v6 = qword_268C907B0;
  *(void *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)sub_240952F58()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v5[qword_268C907B8] = 0;
  *(void *)&v5[qword_268C99100] = MEMORY[0x263F8EE78];
  uint64_t v7 = &v5[qword_268C907C0];
  *(_OWORD *)uint64_t v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((void *)v7 + 4) = 0;
  v5[qword_268C99108] = 0;

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for ConceptLatestValueFeedItemViewController();
  id v8 = objc_msgSendSuper2(&v10, sel_initWithCoder_, a1);

  return v8;
}

id sub_2408505FC(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_2408504DC(a3);
}

uint64_t sub_240850624()
{
  swift_bridgeObjectRelease();
  return sub_240851CE8(v0 + qword_268C907C0, &qword_268C90810, (unint64_t *)&unk_268C911C0);
}

id sub_2408506A0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConceptLatestValueFeedItemViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2408506D8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_240851CE8(a1 + qword_268C907C0, &qword_268C90810, (unint64_t *)&unk_268C911C0);
}

uint64_t type metadata accessor for ConceptLatestValueFeedItemViewController()
{
  uint64_t result = qword_268C907C8;
  if (!qword_268C907C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2408507AC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_240850820()
{
  return type metadata accessor for ConceptLatestValueFeedItemViewController();
}

uint64_t sub_240850828()
{
  return sub_240850034();
}

double sub_24085084C()
{
  id v1 = objc_msgSend(*v0, sel_view);
  if (v1)
  {
    uint64_t v3 = v1;
    objc_msgSend(v1, sel_frame);
    uint64_t v5 = v4;
    uint64_t v7 = v6;
    uint64_t v9 = v8;
    uint64_t v11 = v10;

    uint64_t v12 = v5;
    uint64_t v13 = v7;
    uint64_t v14 = v9;
    uint64_t v15 = v11;
    return CGRectGetWidth(*(CGRect *)&v12);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2408508E0(char a1, char a2)
{
  uint64_t v3 = v2;
  int v5 = a1 & 1;
  sub_240851AB4(0, &qword_268C907D8, MEMORY[0x263F82228]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)aBlock - v7;
  if (*(unsigned __int8 *)(v3 + qword_268C99108) != v5)
  {
    *(unsigned char *)(v3 + qword_268C99108) = v5;
    id v9 = sub_24084B608();
    sub_24084C470();
    uint64_t v10 = sub_240955058();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
    sub_240955068();

    if (a2)
    {
      uint64_t v11 = self;
      uint64_t v12 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = sub_24085178C;
      aBlock[5] = v12;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24084C358;
      aBlock[3] = &unk_26F4EFFE0;
      uint64_t v13 = _Block_copy(aBlock);
      swift_release();
      objc_msgSend(v11, sel_animateWithDuration_animations_, v13, 0.25);
      _Block_release(v13);
    }
    else
    {
      sub_24084C39C();
    }
  }
}

void sub_240850AC8(char a1, char a2)
{
}

id sub_240850AEC()
{
  uint64_t v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  if (sub_24084B894()) {
    id v1 = _sSo18UIContextualActionC13HealthRecordsE05unpinB07handlerAByAB_So6UIViewCySbctc_tFZ_0((uint64_t)sub_240851794, v0);
  }
  else {
    id v1 = _sSo18UIContextualActionC13HealthRecordsE03pinB07handlerAByAB_So6UIViewCySbctc_tFZ_0((uint64_t)sub_240851794, v0);
  }
  uint64_t v2 = v1;
  sub_24084BD3C(0xD000000000000013, 0x800000024095C310);
  if (v3)
  {
    id v4 = v2;
    int v5 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5);
  }
  sub_240851E20(0, (unint64_t *)&qword_26AFCF418, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2409568A0;
  *(void *)(v6 + 32) = v2;
  sub_2409549B8();
  sub_24083EDCC(0, &qword_268C907E0);
  id v7 = v2;
  uint64_t v8 = (void *)sub_240954988();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(self, sel_configurationWithActions_, v8);
  swift_release();

  return v9;
}

void sub_240850CC4(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v6 = a5 + 16;
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x245602290](v6);
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    sub_24084F090(2);
    ((void (*)(uint64_t))a3)(1);
  }
  else
  {
    a3();
  }
}

uint64_t sub_240850D50()
{
  return 0;
}

id sub_240850D58()
{
  return sub_240850AEC();
}

uint64_t sub_240850D7C()
{
  uint64_t v0 = sub_240952B98();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240851AB4(0, &qword_26AFCC6A8, MEMORY[0x263F07690]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v10 - v5;
  sub_24084B894();
  uint64_t v7 = sub_240951AB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_240952B88();
  uint64_t v8 = sub_2409535A8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_240851984((uint64_t)v6, &qword_26AFCC6A8, MEMORY[0x263F07690]);
  return v8;
}

id sub_240850F90()
{
  uint64_t v1 = v0;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v4 = self;
  uint64_t v14 = sub_240851974;
  uint64_t v15 = v2;
  uint64_t v10 = MEMORY[0x263EF8330];
  uint64_t v11 = 1107296256;
  uint64_t v12 = sub_24085179C;
  uint64_t v13 = &unk_26F4F0030;
  uint64_t v5 = _Block_copy(&v10);
  id v6 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v14 = sub_24085197C;
  uint64_t v15 = v3;
  uint64_t v10 = MEMORY[0x263EF8330];
  uint64_t v11 = 1107296256;
  uint64_t v12 = sub_2408517EC;
  uint64_t v13 = &unk_26F4F0058;
  uint64_t v7 = _Block_copy(&v10);
  swift_retain();
  swift_release();
  id v8 = objc_msgSend(v4, sel_configurationWithIdentifier_previewProvider_actionProvider_, 0, v5, v7);
  swift_release();
  swift_release();
  _Block_release(v7);
  _Block_release(v5);
  swift_release();
  return v8;
}

uint64_t sub_240851168()
{
  return sub_240953488();
}

uint64_t sub_2408511E0(uint64_t a1, uint64_t a2)
{
  sub_240851AB4(0, &qword_268C907F0, MEMORY[0x263F46188]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v21 - v4;
  uint64_t v6 = sub_2409531E8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v10 = (void *)MEMORY[0x245602290](a2 + 16);
  if (!v10) {
    return 0;
  }
  id v11 = v10;
  sub_240954CF8();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {

    sub_240851984((uint64_t)v5, &qword_268C907F0, MEMORY[0x263F46188]);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  if ((sub_2409531D8() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);

    return 0;
  }
  sub_240850D7C();
  sub_24084B894();
  uint64_t v14 = (void *)sub_240954788();
  id v15 = objc_msgSend(self, sel_systemImageNamed_, v14);

  sub_24083EDCC(0, &qword_268C907F8);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v16 = (void *)sub_240954FD8();
  sub_24084BD3C(0x73657250676E6F4CLL, 0xE900000000000073);
  if (v17)
  {
    id v18 = v16;
    uint64_t v19 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
    objc_msgSend(v18, sel_setAccessibilityIdentifier_, v19);
  }
  sub_24083EDCC(0, &qword_268C90800);
  sub_240851E20(0, (unint64_t *)&qword_26AFCF418, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_2409568A0;
  *(void *)(v20 + 32) = v16;
  uint64_t v21 = v20;
  sub_2409549B8();
  uint64_t v12 = sub_240954F18();

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v12;
}

void sub_240851610(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x245602290](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    sub_24084F090(1);
  }
}

id sub_240851668()
{
  return sub_240850F90();
}

uint64_t sub_24085168C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2408516F4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_240851754()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_24085178C()
{
  sub_24084C2D0(v0);
}

void sub_240851794(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  sub_240850CC4(a1, a2, a3, a4, v4);
}

id sub_24085179C(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = (void *)v1(v2);
  swift_release();

  return v3;
}

id sub_2408517EC(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  sub_24083EDCC(0, &qword_268C907E8);
  uint64_t v2 = sub_240954998();
  swift_retain();
  uint64_t v3 = (void *)v1(v2);
  swift_release();
  swift_bridgeObjectRelease();

  return v3;
}

uint64_t sub_24085187C(uint64_t a1, char a2)
{
  unint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v5;
  uint64_t v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      return result;
    }
    uint64_t v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_2409553D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1) {
    uint64_t v9 = a1;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t result = MEMORY[0x2456015C0](v7, v9, a2 & 1, v5);
  *uint64_t v2 = result;
  return result;
}

uint64_t sub_24085193C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240851974()
{
  return sub_240851168();
}

uint64_t sub_24085197C(uint64_t a1)
{
  return sub_2408511E0(a1, v1);
}

uint64_t sub_240851984(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_240851AB4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_2408519E0(uint64_t a1)
{
  sub_240851610(a1, v1);
}

uint64_t sub_2408519E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

void sub_240851A5C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_2408484BC(255, a3);
    unint64_t v4 = sub_240955098();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_240851AB4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240955098();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_240851B08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UserDomainConceptFeedItemData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_240851B6C(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

unint64_t sub_240851BD0()
{
  unint64_t result = qword_268C90820;
  if (!qword_268C90820)
  {
    sub_240851C0C();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C90820);
  }
  return result;
}

void sub_240851C0C()
{
  if (!qword_268C90828)
  {
    type metadata accessor for UserDomainConceptFeedItemData();
    sub_240851CA0(qword_268C90830, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
    unint64_t v0 = type metadata accessor for BaseFeedItemViewController();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C90828);
    }
  }
}

uint64_t sub_240851CA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240851CE8(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  sub_240851A5C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_240851D44()
{
  if (!qword_26AFCE258)
  {
    sub_24082EF28(255, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
    unint64_t v0 = sub_240955098();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCE258);
    }
  }
}

uint64_t sub_240851DB4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_240851AB4(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_240851E20(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_240851E6C(uint64_t a1)
{
  sub_24084B83C(a1, v1);
}

id FeedItemViewController.feedItemView.getter()
{
  id result = objc_msgSend(v0, sel_view);
  if (result)
  {
    uint64_t v2 = result;
    id result = (id)swift_dynamicCastUnknownClass();
    if (!result)
    {

      return 0;
    }
  }
  return result;
}

void FeedItemViewController.apply(data:to:)()
{
}

Swift::Void __swiftcall FeedItemViewController.loadView()()
{
  id v1 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v0, sel_setView_, v1);

  id v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = v2;
  id v4 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v4);

  id v5 = objc_msgSend(v0, sel_view);
  if (!v5)
  {
LABEL_7:
    __break(1u);
    return;
  }
  sub_240954E88();
  objc_msgSend(v5, sel_setDirectionalLayoutMargins_);
}

void sub_240852094(void *a1)
{
  id v1 = a1;
  FeedItemViewController.loadView()();
}

Swift::Void __swiftcall FeedItemViewController.reloadView()()
{
  id v1 = v0;
  uint64_t v2 = *MEMORY[0x263F8EED0] & *v0;
  uint64_t v3 = sub_2409540C8();
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v31 - v7;
  uint64_t v9 = *(void *)(v2 + 240);
  uint64_t v10 = sub_240955098();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v31 - v15;
  if (objc_msgSend(v1, sel_isViewLoaded))
  {
    uint64_t v31 = v3;
    BaseFeedItemViewController.reloadView()();
    id v17 = FeedItemViewController.feedItemView.getter();
    if (v17)
    {
      id v18 = v17;
      BaseFeedItemViewController.feedItemData.getter((uint64_t)v16);
      int v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v16, 1, v9);
      uint64_t v20 = *(void (**)(char *, uint64_t))(v11 + 8);
      v20(v16, v10);
      if (v19 == 1)
      {
        sub_240954088();
        uint64_t v21 = sub_2409540B8();
        os_log_type_t v22 = sub_240954C18();
        if (os_log_type_enabled(v21, v22))
        {
          uint64_t v23 = v20;
          uint64_t v24 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v24 = 0;
          _os_log_impl(&dword_240818000, v21, v22, "Attempting to reload view without any feedItemData.", v24, 2u);
          BOOL v25 = v24;
          uint64_t v20 = v23;
          MEMORY[0x2456021C0](v25, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v31);
      }
      BaseFeedItemViewController.feedItemData.getter((uint64_t)v14);
      (*(void (**)(char *, void *))((*MEMORY[0x263F8EED0] & *v1) + 0x108))(v14, v18);
      v20(v14, v10);
      id v26 = objc_msgSend(v1, sel_view);
      if (v26)
      {
        uint64_t v27 = v26;
        objc_msgSend(v26, sel_setNeedsLayout);
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      sub_240954088();
      BOOL v28 = sub_2409540B8();
      os_log_type_t v29 = sub_240954C18();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v30 = 0;
        _os_log_impl(&dword_240818000, v28, v29, "Unable to reload view before feedItemView is available.", v30, 2u);
        MEMORY[0x2456021C0](v30, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v32 + 8))(v6, v31);
    }
  }
}

id FeedItemViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

id FeedItemViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    uint64_t v5 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for FeedItemViewController();
  id v6 = objc_msgSendSuper2(&v8, sel_initWithNibName_bundle_, v5, a3);

  return v6;
}

id sub_24085261C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    uint64_t v5 = sub_2409547C8();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  id v8 = a4;
  return FeedItemViewController.init(nibName:bundle:)(v5, v7, a4);
}

id FeedItemViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id FeedItemViewController.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for FeedItemViewController();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id sub_240852764(uint64_t a1, uint64_t a2, void *a3)
{
  return FeedItemViewController.init(coder:)(a3);
}

id FeedItemViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FeedItemViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FeedItemViewController()
{
  return sub_240852868();
}

uint64_t sub_240852830()
{
  return swift_initClassMetadata2();
}

uint64_t sub_240852868()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for NewRecordsLabFeedItemView()
{
  uint64_t result = qword_268C908D8;
  if (!qword_268C908D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2408528E4()
{
  return swift_initClassMetadata2();
}

void sub_240852930()
{
  qword_268C908B8 = 0x4030000000000000;
}

void sub_240852940()
{
  qword_268C908C0 = 0x4010000000000000;
}

uint64_t sub_240852950()
{
  unint64_t v0 = (void *)*MEMORY[0x263F835F0];
  id v1 = objc_allocWithZone((Class)sub_240952758());
  id v2 = v0;
  return sub_240952748();
}

id sub_240852990(uint64_t a1, uint64_t *a2)
{
  uint64_t v69 = a2;
  uint64_t v3 = sub_240952B98();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240853F5C(0, &qword_26AFCC6A8, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v66 - v8;
  uint64_t v10 = (void *)sub_240952E68();
  uint64_t v11 = sub_240951AB8();
  uint64_t v12 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  uint64_t v71 = *v12;
  v71(v9, 1, 1, v11);
  sub_240952B88();
  sub_2409535A8();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v70 = v3;
  uint64_t v14 = v3;
  uint64_t v15 = v13;
  v13(v6, v14);
  sub_240853DC4((uint64_t)v9);
  uint64_t v16 = (void *)sub_240954788();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setText_, v16);

  id v17 = (uint64_t *)&v2[qword_268C908C8];
  *id v17 = 0;
  v17[1] = 0;
  swift_bridgeObjectRelease();
  uint64_t v68 = v2;
  id v18 = (uint64_t *)&v2[qword_268C908D0];
  *id v18 = 0;
  v18[1] = 0;
  id result = (id)swift_bridgeObjectRelease();
  if (!v69) {
    return result;
  }
  uint64_t v20 = v69;
  BOOL v66 = v12;
  uint64_t v67 = v11;
  v71(v9, 1, 1, v11);
  uint64_t v21 = v20;
  swift_bridgeObjectRetain();
  sub_240952B88();
  uint64_t v22 = sub_2409535A8();
  uint64_t v24 = v23;
  v15(v6, v70);
  sub_240853DC4((uint64_t)v9);
  *id v17 = v22;
  v17[1] = v24;
  swift_bridgeObjectRelease();
  id v72 = v21;
  swift_bridgeObjectRetain();
  sub_2408BE5F4((uint64_t *)&v72);
  swift_bridgeObjectRelease();
  BOOL v25 = v72;
  uint64_t v26 = MEMORY[0x263F8EE78];
  switch(v72[2])
  {
    case 0:
      swift_release();
      goto LABEL_17;
    case 1:
      uint64_t v47 = v18;
      uint64_t v48 = v72[4];
      uint64_t v49 = v72[5];
      swift_bridgeObjectRetain();
      swift_release();
      uint64_t *v47 = v48;
      v47[1] = v49;
      id v18 = v47;
      goto LABEL_16;
    case 2:
      uint64_t v69 = v18;
      v71(v9, 1, 1, v67);
      sub_240952B88();
      sub_2409535A8();
      v15(v6, v70);
      sub_240853DC4((uint64_t)v9);
      sub_240853F5C(0, (unint64_t *)&qword_26AFD0610, (uint64_t (*)(uint64_t))sub_240853E50, MEMORY[0x263F8E0F8]);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_2409562B0;
      uint64_t v28 = MEMORY[0x263F8D310];
      *(void *)(v27 + 56) = MEMORY[0x263F8D310];
      unint64_t v29 = sub_240853EA8();
      *(void *)(v27 + 64) = v29;
      uint64_t v30 = v25[2];
      if (!v30)
      {
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        swift_release();
        __break(1u);
        JUMPOUT(0x2408531F4);
      }
      unint64_t v31 = v29;
      uint64_t v32 = v25[5];
      *(void *)(v27 + 32) = v25[4];
      *(void *)(v27 + 40) = v32;
      *(void *)(v27 + 96) = v28;
      *(void *)(v27 + 104) = v31;
      if (v30 == 1) {
        goto LABEL_22;
      }
      uint64_t v33 = v25[6];
      uint64_t v34 = v25[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      *(void *)(v27 + 72) = v33;
      *(void *)(v27 + 80) = v34;
LABEL_11:
      uint64_t v44 = sub_2409547D8();
      uint64_t v46 = v45;
      swift_bridgeObjectRelease();
      id v18 = v69;
      *uint64_t v69 = v44;
      v18[1] = v46;
LABEL_16:
      swift_bridgeObjectRelease();
LABEL_17:
      uint64_t v61 = *v17;
      uint64_t v62 = v17[1];
      uint64_t v63 = *v18;
      uint64_t v64 = v18[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v65 = v68;
      sub_24085337C(v61, v62, v63, v64);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return objc_msgSend(v65, sel_setNeedsLayout);
    case 3:
      uint64_t v69 = v18;
      v71(v9, 1, 1, v67);
      sub_240952B88();
      sub_2409535A8();
      v15(v6, v70);
      sub_240853DC4((uint64_t)v9);
      sub_240853F5C(0, (unint64_t *)&qword_26AFD0610, (uint64_t (*)(uint64_t))sub_240853E50, MEMORY[0x263F8E0F8]);
      uint64_t v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = xmmword_240956880;
      uint64_t v36 = MEMORY[0x263F8D310];
      *(void *)(v35 + 56) = MEMORY[0x263F8D310];
      unint64_t v37 = sub_240853EA8();
      *(void *)(v35 + 64) = v37;
      unint64_t v38 = v25[2];
      if (!v38) {
        goto LABEL_20;
      }
      unint64_t v39 = v37;
      uint64_t v40 = v25[5];
      *(void *)(v35 + 32) = v25[4];
      *(void *)(v35 + 40) = v40;
      *(void *)(v35 + 96) = v36;
      *(void *)(v35 + 104) = v39;
      if (v38 == 1) {
        goto LABEL_23;
      }
      uint64_t v41 = v25[7];
      *(void *)(v35 + 72) = v25[6];
      *(void *)(v35 + 80) = v41;
      *(void *)(v35 + 136) = v36;
      *(void *)(v35 + 144) = v39;
      if (v38 < 3) {
        goto LABEL_25;
      }
      uint64_t v42 = v25[8];
      uint64_t v43 = v25[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      *(void *)(v35 + 112) = v42;
      *(void *)(v35 + 120) = v43;
      goto LABEL_11;
    default:
      uint64_t v69 = v18;
      v71(v9, 1, 1, v67);
      sub_240952B88();
      uint64_t v71 = (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_2409535A8();
      v15(v6, v70);
      sub_240853DC4((uint64_t)v9);
      sub_240853F5C(0, (unint64_t *)&qword_26AFD0610, (uint64_t (*)(uint64_t))sub_240853E50, MEMORY[0x263F8E0F8]);
      uint64_t v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = xmmword_240956880;
      uint64_t v51 = MEMORY[0x263F8D310];
      *(void *)(v50 + 56) = MEMORY[0x263F8D310];
      unint64_t v52 = sub_240853EA8();
      *(void *)(v50 + 64) = v52;
      uint64_t v53 = v25[2];
      if (!v53) {
        goto LABEL_21;
      }
      unint64_t v54 = v52;
      uint64_t v55 = v25[5];
      *(void *)(v50 + 32) = v25[4];
      *(void *)(v50 + 40) = v55;
      *(void *)(v50 + 96) = v51;
      *(void *)(v50 + 104) = v54;
      if (v53 == 1) {
        goto LABEL_24;
      }
      uint64_t v56 = v25[7];
      *(void *)(v50 + 72) = v25[6];
      *(void *)(v50 + 80) = v56;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      uint64_t v57 = MEMORY[0x263F8D750];
      *(void *)(v50 + 136) = MEMORY[0x263F8D6C8];
      *(void *)(v50 + 144) = v57;
      *(void *)(v50 + 112) = v26 - 2;
      uint64_t v58 = sub_2409547D8();
      uint64_t v60 = v59;
      swift_bridgeObjectRelease();
      id v18 = v69;
      *uint64_t v69 = v58;
      v18[1] = v60;
      goto LABEL_16;
  }
}

uint64_t sub_240853204()
{
  return 0;
}

id sub_24085320C()
{
  id v1 = v0;
  sub_240853EFC();
  id v2 = (void (*)(void))sub_240952578();
  v2();
  uint64_t v3 = (void *)sub_240952E58();
  id v4 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x263F835F0]);
  sub_240952728();

  uint64_t v5 = *(void *)&v1[qword_268C908C8];
  uint64_t v6 = *(void *)&v1[qword_268C908C8 + 8];
  uint64_t v7 = *(void *)&v1[qword_268C908D0];
  uint64_t v8 = *(void *)&v1[qword_268C908D0 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24085337C(v5, v6, v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return objc_msgSend(v1, sel_setNeedsLayout);
}

void sub_240853314(void *a1)
{
  id v1 = a1;
  id v2 = (void *)sub_240952E58();
  objc_msgSend(v2, sel_layoutSubviews);

  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for NewRecordsLabFeedItemView();
  objc_msgSendSuper2(&v3, sel_layoutSubviews);
}

uint64_t sub_24085337C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v72 = a1;
  uint64_t v9 = sub_2409528B8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2409528E8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t result = MEMORY[0x270FA5388](v13);
  id v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 && a4)
  {
    uint64_t v71 = a3;
    sub_240952C38();
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F45FE8], v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_240952C28();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_2409528C8();
    if (v18)
    {
      uint64_t v69 = v14;
      uint64_t v70 = v13;
      sub_24083EDCC(0, &qword_268C908F0);
      int v19 = (void *)sub_240954F98();
      id v20 = objc_msgSend(v5, sel_traitCollection);
      uint64_t v21 = (void *)sub_240954788();
      swift_bridgeObjectRelease();
      id v22 = objc_msgSend(self, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v21, v19, v20);

      uint64_t v68 = v5;
      char v65 = v17;
      if (v22)
      {
        id v23 = objc_msgSend(v22, sel_imageWithRenderingMode_, 2);

        uint64_t v24 = (void *)sub_2409528D8();
        id v25 = objc_msgSend(v23, sel_imageWithTintColor_, v24);
      }
      else
      {
        id v25 = 0;
      }
      uint64_t v67 = a4;
      uint64_t v26 = sub_24083EDCC(0, &qword_26AFCF780);
      uint64_t v64 = *MEMORY[0x263F835F0];
      uint64_t v27 = v26;
      uint64_t v28 = (void *)sub_240954F08();
      id v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F81678]), sel_init);
      id v66 = v25;
      objc_msgSend(v29, sel_setImage_, v25);
      objc_msgSend(v28, sel_capHeight);
      if (qword_268C90590 != -1)
      {
        double v58 = v30;
        swift_once();
        double v30 = v58;
      }
      double v31 = *(double *)&qword_268C908B8;
      objc_msgSend(v29, sel_setBounds_, 0.0, round(v30 - *(double *)&qword_268C908B8) * 0.5, *(double *)&qword_268C908B8, *(double *)&qword_268C908B8);
      id v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F81678]), sel_init);
      if (qword_268C90598 != -1) {
        swift_once();
      }
      objc_msgSend(v32, sel_setBounds_, v31, 0.0, *(double *)&qword_268C908C0, *(double *)&qword_268C908B8);
      id v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init);
      uint64_t v34 = v32;
      id v35 = objc_msgSend(self, sel_systemBackgroundColor);
      id v36 = objc_msgSend(v33, sel_imageWithTintColor_, v35);

      id v62 = v34;
      objc_msgSend(v34, sel_setImage_, v36);

      sub_24083EDCC(0, &qword_268C908F8);
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      id v63 = v29;
      id v38 = objc_msgSend(ObjCClassFromMetadata, sel_attributedStringWithAttachment_, v29);
      id v39 = objc_msgSend(ObjCClassFromMetadata, sel_attributedStringWithAttachment_, v34);
      objc_msgSend(v38, sel_appendAttributedString_, v39);

      sub_240853F5C(0, &qword_268C90900, (uint64_t (*)(uint64_t))sub_240853FC0, MEMORY[0x263F8E0F8]);
      uint64_t v60 = v40;
      uint64_t inited = swift_initStackObject();
      long long v59 = xmmword_240956800;
      *(_OWORD *)(inited + 16) = xmmword_240956800;
      uint64_t v42 = (void *)*MEMORY[0x263F814F0];
      *(void *)(inited + 64) = v27;
      *(void *)(inited + 32) = v42;
      *(void *)(inited + 40) = v28;
      id v43 = v42;
      id v61 = v28;
      sub_24092CE40(inited);
      id v44 = objc_allocWithZone(MEMORY[0x263F086A0]);
      uint64_t v45 = (void *)sub_240954788();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_24085402C();
      uint64_t v46 = (void *)sub_240954698();
      swift_bridgeObjectRelease();
      id v47 = objc_msgSend(v44, sel_initWithString_attributes_, v45, v46);

      objc_msgSend(v38, sel_appendAttributedString_, v47);
      uint64_t v48 = (void *)sub_240952E58();
      sub_240952738();

      uint64_t v49 = (void *)sub_240952E58();
      sub_240952718();

      uint64_t v50 = swift_initStackObject();
      *(_OWORD *)(v50 + 16) = v59;
      *(void *)(v50 + 32) = v43;
      id v51 = v43;
      uint64_t v52 = sub_240954F08();
      *(void *)(v50 + 64) = v27;
      *(void *)(v50 + 40) = v52;
      sub_24092CE40(v50);
      id v53 = objc_allocWithZone(MEMORY[0x263F086A0]);
      unint64_t v54 = (void *)sub_240954788();
      swift_bridgeObjectRelease();
      uint64_t v55 = (void *)sub_240954698();
      swift_bridgeObjectRelease();
      id v56 = objc_msgSend(v53, sel_initWithString_attributes_, v54, v55);

      uint64_t v57 = (void *)sub_240952E58();
      sub_240952718();

      return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v65, v70);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

id sub_240853BD8(char *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v10 = &a1[qword_268C908C8];
  *(void *)uint64_t v10 = 0;
  *((void *)v10 + 1) = 0;
  uint64_t v11 = &a1[qword_268C908D0];
  uint64_t v12 = (objc_class *)type metadata accessor for NewRecordsLabFeedItemView();
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  v14.receiver = a1;
  v14.super_class = v12;
  return objc_msgSendSuper2(&v14, sel_initWithFrame_, a2, a3, a4, a5);
}

id sub_240853C6C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = &a1[qword_268C908C8];
  *(void *)uint64_t v5 = 0;
  *((void *)v5 + 1) = 0;
  uint64_t v6 = &a1[qword_268C908D0];
  uint64_t v7 = (objc_class *)type metadata accessor for NewRecordsLabFeedItemView();
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  v9.receiver = a1;
  v9.super_class = v7;
  return objc_msgSendSuper2(&v9, sel_initWithCoder_, a3);
}

uint64_t sub_240853CE0()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_240853D28()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NewRecordsLabFeedItemView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240853D60()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_240853DB4(uint64_t a1)
{
  return sub_240852990(a1, *(uint64_t **)(a1 + 8));
}

uint64_t sub_240853DBC()
{
  return type metadata accessor for NewRecordsLabFeedItemView();
}

uint64_t sub_240853DC4(uint64_t a1)
{
  sub_240853F5C(0, &qword_26AFCC6A8, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_240853E50()
{
  unint64_t result = qword_26AFD0630;
  if (!qword_26AFD0630)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD0630);
  }
  return result;
}

unint64_t sub_240853EA8()
{
  unint64_t result = qword_26AFD04E8;
  if (!qword_26AFD04E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD04E8);
  }
  return result;
}

void sub_240853EFC()
{
  if (!qword_268C908E8)
  {
    sub_240952758();
    unint64_t v0 = sub_240952E88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C908E8);
    }
  }
}

void sub_240853F5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_240853FC0()
{
  if (!qword_268C90908)
  {
    type metadata accessor for Key(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C90908);
    }
  }
}

unint64_t sub_24085402C()
{
  unint64_t result = qword_268C90708;
  if (!qword_268C90708)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90708);
  }
  return result;
}

uint64_t sub_240854084()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2408540B4()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2408540E8()
{
  return 1;
}

void sub_2408540F8(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = sub_240951A28();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240849BDC();
  MEMORY[0x270FA5388](v12 - 8);
  objc_super v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  if (!swift_dynamicCastObjCClass())
  {
    swift_bridgeObjectRelease();

    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    unint64_t v22 = 0;
    a2 = 0;
    a3 = 0;
    uint64_t v23 = 0;
LABEL_16:
    *a4 = v19;
    a4[1] = v20;
    a4[2] = v21;
    a4[3] = v22;
    a4[4] = a2;
    a4[5] = a3;
    a4[6] = v23;
    return;
  }
  id v15 = a1;
  id v16 = objc_msgSend(v15, sel_meaningfulDate);
  if (v16)
  {
    id v17 = v16;
    sub_240951A08();

    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v11, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v14, 0, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
    {
      uint64_t v18 = 0;
    }
    else
    {
      uint64_t v18 = (void *)sub_2409519A8();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v14, 1, 1, v8);
    uint64_t v18 = 0;
  }
  id v24 = (id)HKLocalizedStringForDateAndTemplateWithFormattingContext();

  if (v24)
  {
    uint64_t v19 = sub_2409547C8();
    uint64_t v20 = v25;

    uint64_t v26 = sub_240954E68();
    if (v27) {
      uint64_t v21 = v26;
    }
    else {
      uint64_t v21 = 0;
    }
    if (v27) {
      unint64_t v22 = v27;
    }
    else {
      unint64_t v22 = 0xE000000000000000;
    }
    uint64_t v23 = sub_240954E78();

    goto LABEL_16;
  }
  __break(1u);
}

uint64_t initializeBufferWithCopyOfBuffer for ConceptDeltaHighlightRecordViewData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

void destroy for ConceptDeltaHighlightRecordViewData(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 48);
}

void *initializeWithCopy for ConceptDeltaHighlightRecordViewData(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = (void *)a2[6];
  a1[6] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v7 = v6;
  return a1;
}

void *assignWithCopy for ConceptDeltaHighlightRecordViewData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[6];
  uint64_t v5 = (void *)a2[6];
  a1[6] = v5;
  id v6 = v5;

  return a1;
}

__n128 initializeWithTake for ConceptDeltaHighlightRecordViewData(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ConceptDeltaHighlightRecordViewData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  id v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  return a1;
}

uint64_t getEnumTagSinglePayload for ConceptDeltaHighlightRecordViewData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ConceptDeltaHighlightRecordViewData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConceptDeltaHighlightRecordViewData()
{
  return &type metadata for ConceptDeltaHighlightRecordViewData;
}

uint64_t sub_240854660@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for HealthRecordsGeneratorContext();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2409540C8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954058();
  uint64_t v13 = sub_2409540B8();
  os_log_type_t v14 = sub_240954C08();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    unint64_t v27 = a3;
    uint64_t v16 = v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v28 = v17;
    uint64_t v29 = a2;
    *(_DWORD *)uint64_t v16 = 136446466;
    uint64_t v26 = a1;
    swift_getMetatypeMetadata();
    uint64_t v18 = sub_2409547E8();
    uint64_t v29 = sub_2408370E4(v18, v19, &v28);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    uint64_t v29 = type metadata accessor for RemovedCategoriesGenerator();
    sub_240854CC4();
    uint64_t v20 = sub_2409547E8();
    uint64_t v29 = sub_2408370E4(v20, v21, &v28);
    a1 = v26;
    sub_2409550B8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v13, v14, "[%{public}s]: Emitting %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v17, -1, -1);
    uint64_t v22 = v16;
    a3 = v27;
    MEMORY[0x2456021C0](v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_24083B4E8(a1, (uint64_t)v8);
  uint64_t v23 = type metadata accessor for RemovedCategoriesGenerator();
  swift_allocObject();
  id v24 = sub_24081E14C((uint64_t)v8);
  a3[3] = v23;
  uint64_t result = sub_24083052C(&qword_26AFCD0D0, (void (*)(uint64_t))type metadata accessor for RemovedCategoriesGenerator);
  a3[4] = result;
  *a3 = v24;
  return result;
}

uint64_t sub_240854964()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HealthRecords34RemovedCategoriesGeneratorPipeline_domain;
  uint64_t v2 = sub_240951F18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_24083B3B4(v0 + OBJC_IVAR____TtC13HealthRecords34RemovedCategoriesGeneratorPipeline_context);

  return swift_deallocClassInstance();
}

uint64_t sub_240854A2C()
{
  return type metadata accessor for RemovedCategoriesGeneratorPipeline();
}

uint64_t sub_240854A34()
{
  uint64_t result = sub_240951F18();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for HealthRecordsGeneratorContext();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_240854B1C()
{
  unint64_t v1 = (int *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_240854C18@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_240854660(v1 + v4, v5, a1);
}

unint64_t sub_240854CC4()
{
  unint64_t result = qword_26AFCD1B0;
  if (!qword_26AFCD1B0)
  {
    type metadata accessor for RemovedCategoriesGenerator();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFCD1B0);
  }
  return result;
}

id sub_240854D00()
{
  uint64_t v1 = qword_268C90910;
  uint64_t v2 = *(void **)(v0 + qword_268C90910);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_268C90910);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
    id v6 = objc_msgSend(self, sel_labelColor);
    objc_msgSend(v5, sel_setTextColor_, v6);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    sub_24083EDCC(0, &qword_26AFCF780);
    uint64_t v7 = (void *)sub_240954F08();
    objc_msgSend(v5, sel_setFont_, v7);

    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    LODWORD(v8) = 1132068864;
    objc_msgSend(v5, sel_setContentHuggingPriority_forAxis_, 0, v8);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    uint64_t v9 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v10 = v2;
  return v3;
}

id sub_240854E70()
{
  uint64_t v1 = qword_268C90918;
  uint64_t v2 = *(void **)(v0 + qword_268C90918);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_268C90918);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_init);
    sub_24083EDCC(0, &qword_26AFCF698);
    id v6 = (void *)sub_240954F78();
    objc_msgSend(v5, sel_setImage_, v6);

    id v7 = objc_msgSend(self, sel_tertiaryLabelColor);
    objc_msgSend(v5, sel_setTintColor_, v7);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    LODWORD(v8) = 1144750080;
    objc_msgSend(v5, sel_setContentHuggingPriority_forAxis_, 0, v8);
    LODWORD(v9) = 1148846080;
    objc_msgSend(v5, sel_setContentCompressionResistancePriority_forAxis_, 0, v9);
    id v10 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

void sub_240854FFC(void *a1)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for NavigationFeedItemViewController();
  id v1 = v5.receiver;
  objc_msgSendSuper2(&v5, sel_viewDidLoad);
  sub_2408550EC();
  sub_240855820(v1);
  id v2 = sub_240855AF8(v1);
  id v3 = self;
  sub_2408FED0C((unint64_t)v2);
  sub_24083EDCC(0, &qword_268C91A80);
  uint64_t v4 = (void *)sub_240954988();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_activateConstraints_, v4);
}

void sub_2408550EC()
{
  id v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_8;
  }
  id v2 = v1;
  id v3 = objc_msgSend(self, sel_secondarySystemGroupedBackgroundColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v3);

  id v4 = objc_msgSend(v0, sel_view);
  if (!v4)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  objc_super v5 = v4;
  id v6 = objc_msgSend(v4, sel_heightAnchor);

  id v7 = objc_msgSend(v6, sel_constraintGreaterThanOrEqualToConstant_, 60.0);
  LODWORD(v8) = 1148829696;
  objc_msgSend(v7, sel_setPriority_, v8);
  objc_msgSend(v7, sel_setActive_, 1);
  sub_24085526C();
  id v9 = objc_msgSend(v0, sel_view);
  if (!v9)
  {
LABEL_9:
    __break(1u);
    return;
  }
  id v10 = v9;
  id v11 = sub_240854E70();
  objc_msgSend(v10, sel_addSubview_, v11);
}

id sub_24085526C()
{
  uint64_t v44 = sub_2409528B8();
  uint64_t v46 = *(void *)(v44 - 8);
  uint64_t v1 = MEMORY[0x270FA5388](v44);
  uint64_t v45 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  id v4 = (char *)&v42 - v3;
  uint64_t v5 = type metadata accessor for NavigationFeedItemData();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v49 = (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240857C38(0, &qword_268C90940, (void (*)(uint64_t))type metadata accessor for NavigationFeedItemData);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  id v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v42 - v12;
  uint64_t v14 = sub_240952778();
  uint64_t v50 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  id v47 = (char *)&v42 - v18;
  uint64_t v19 = (uint64_t)v0 + *(void *)((*MEMORY[0x263F8EED0] & *v0) + 0x60);
  swift_beginAccess();
  sub_2408573FC(v19, (uint64_t)v13, &qword_268C90940, (void (*)(uint64_t))type metadata accessor for NavigationFeedItemData);
  uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v48 = v5;
  if (v20(v13, 1, v5)) {
    return (id)sub_2408574C0((uint64_t)v13, &qword_268C90940, (void (*)(uint64_t))type metadata accessor for NavigationFeedItemData);
  }
  uint64_t v42 = v0;
  id v43 = v4;
  uint64_t v22 = v49;
  sub_240857338((uint64_t)v13, v49, (uint64_t (*)(void))type metadata accessor for NavigationFeedItemData);
  sub_2408574C0((uint64_t)v13, &qword_268C90940, (void (*)(uint64_t))type metadata accessor for NavigationFeedItemData);
  uint64_t v23 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v17, v22, v14);
  sub_2408573A0(v22);
  id v24 = v47;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v47, v17, v14);
  sub_2408573FC(v19, (uint64_t)v11, &qword_268C90940, (void (*)(uint64_t))type metadata accessor for NavigationFeedItemData);
  uint64_t v25 = v48;
  uint64_t v26 = v14;
  if (v20(v11, 1, v48))
  {
    sub_2408574C0((uint64_t)v11, &qword_268C90940, (void (*)(uint64_t))type metadata accessor for NavigationFeedItemData);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v24, v14);
  }
  uint64_t v27 = (uint64_t)v24;
  uint64_t v28 = v49;
  uint64_t v29 = v50;
  sub_240857338((uint64_t)v11, v49, (uint64_t (*)(void))type metadata accessor for NavigationFeedItemData);
  sub_2408574C0((uint64_t)v11, &qword_268C90940, (void (*)(uint64_t))type metadata accessor for NavigationFeedItemData);
  uint64_t v30 = v28 + *(int *)(v25 + 20);
  double v31 = v45;
  uint64_t v32 = v46;
  uint64_t v33 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v45, v30, v44);
  sub_2408573A0(v28);
  uint64_t v34 = (uint64_t)v43;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v43, v31, v33);
  sub_2408577C8(v27, v34);
  uint64_t v35 = v27;
  if (v36)
  {
    unint64_t v37 = v42;
    id v38 = sub_240854D00();
    id v39 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
    objc_msgSend(v38, sel_setText_, v39);

    id result = objc_msgSend(v37, sel_view);
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v40 = result;
    id v41 = sub_240854D00();
    objc_msgSend(v40, sel_addSubview_, v41);
  }
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v34, v33);
  return (id)(*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v35, v26);
}

id sub_240855820(void *a1)
{
  uint64_t v18 = MEMORY[0x263F8EE78];
  id v2 = sub_240854D00();
  id v3 = objc_msgSend(v2, sel_leadingAnchor);

  id result = objc_msgSend(a1, sel_view);
  if (!result)
  {
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v5 = result;
  id v6 = objc_msgSend(result, sel_leadingAnchor);

  id v7 = objc_msgSend(v3, sel_constraintEqualToAnchor_constant_, v6, 16.0);
  MEMORY[0x245600C60]();
  if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_240954A08();
  }
  sub_240954A28();
  sub_2409549B8();
  id v8 = sub_240854D00();
  id v9 = objc_msgSend(v8, sel_topAnchor);

  id result = objc_msgSend(a1, sel_view);
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v10 = result;
  id v11 = objc_msgSend(result, sel_topAnchor);

  id v12 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v11, 8.0);
  MEMORY[0x245600C60]();
  if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_240954A08();
  }
  sub_240954A28();
  sub_2409549B8();
  id v13 = sub_240854D00();
  id v14 = objc_msgSend(v13, sel_bottomAnchor);

  id result = objc_msgSend(a1, sel_view);
  if (!result) {
    goto LABEL_13;
  }
  uint64_t v15 = result;
  id v16 = objc_msgSend(result, sel_bottomAnchor);

  id v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_constant_, v16, -8.0);
  MEMORY[0x245600C60]();
  if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_240954A08();
  }
  sub_240954A28();
  sub_2409549B8();
  return (id)v18;
}

id sub_240855AF8(void *a1)
{
  uint64_t v18 = MEMORY[0x263F8EE78];
  id v2 = sub_240854E70();
  id v3 = objc_msgSend(v2, sel_leadingAnchor);

  id v4 = sub_240854D00();
  id v5 = objc_msgSend(v4, sel_trailingAnchor);

  id v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_constant_, v5, 8.0);
  MEMORY[0x245600C60]();
  if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_240954A08();
  }
  sub_240954A28();
  sub_2409549B8();
  id v7 = sub_240854E70();
  id v8 = objc_msgSend(v7, sel_trailingAnchor);

  id result = objc_msgSend(a1, sel_view);
  if (!result)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v10 = result;
  id v11 = objc_msgSend(result, sel_trailingAnchor);

  id v12 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v11, -16.0);
  MEMORY[0x245600C60]();
  if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_240954A08();
  }
  sub_240954A28();
  sub_2409549B8();
  id v13 = sub_240854E70();
  id v14 = objc_msgSend(v13, sel_centerYAnchor);

  id result = objc_msgSend(a1, sel_view);
  if (!result) {
    goto LABEL_11;
  }
  uint64_t v15 = result;
  id v16 = objc_msgSend(result, sel_centerYAnchor);

  id v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v16);
  MEMORY[0x245600C60]();
  if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_240954A08();
  }
  sub_240954A28();
  sub_2409549B8();
  return (id)v18;
}

void sub_240855DC4(void *a1)
{
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for NavigationFeedItemViewController();
  objc_msgSendSuper2(&v7, sel_traitCollectionDidChange_, a1);
  id v3 = objc_msgSend(v1, sel_traitCollection);
  id v4 = objc_msgSend(v3, sel_legibilityWeight);

  if (!a1 || v4 != objc_msgSend(a1, sel_legibilityWeight))
  {
    id v5 = sub_240854D00();
    sub_24083EDCC(0, &qword_26AFCF780);
    id v6 = (void *)sub_240954F08();
    objc_msgSend(v5, sel_setFont_, v6);
  }
}

void sub_240855ED0(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  sub_240855DC4(a3);
}

uint64_t sub_240855F3C(uint64_t a1)
{
  id v2 = v1;
  uint64_t v122 = a1;
  uint64_t v126 = sub_2409528B8();
  uint64_t v124 = *(void *)(v126 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v126);
  uint64_t v123 = (char *)&v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v125 = (uint64_t)&v117 - v5;
  id v6 = (int *)type metadata accessor for NavigationFeedItemData();
  uint64_t v7 = *((void *)v6 - 1);
  MEMORY[0x270FA5388](v6);
  unint64_t v130 = (unint64_t)&v117 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240857C38(0, &qword_268C90940, (void (*)(uint64_t))type metadata accessor for NavigationFeedItemData);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  unint64_t v128 = (unint64_t)&v117 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  id v13 = (long long *)((char *)&v117 - v12);
  uint64_t v129 = sub_240952778();
  uint64_t v131 = *(void *)(v129 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v129);
  uint64_t v121 = (char *)&v117 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v117 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  unint64_t v21 = (char *)&v117 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v117 - v22;
  uint64_t v24 = (uint64_t)&v1[*(void *)((*MEMORY[0x263F8EED0] & *(void *)v1) + 0x60)];
  swift_beginAccess();
  sub_2408573FC(v24, (uint64_t)v13, &qword_268C90940, (void (*)(uint64_t))type metadata accessor for NavigationFeedItemData);
  uint64_t v25 = *(unsigned int (**)(long long *, uint64_t, int *))(v7 + 48);
  uint64_t v127 = v6;
  if (v25(v13, 1, v6))
  {
    uint64_t v26 = &qword_268C90940;
    uint64_t v27 = (void (*)(uint64_t))type metadata accessor for NavigationFeedItemData;
    uint64_t v28 = v13;
    return sub_2408574C0((uint64_t)v28, v26, v27);
  }
  uint64_t v118 = v18;
  uint64_t v120 = v2;
  uint64_t v30 = v130;
  sub_240857338((uint64_t)v13, v130, (uint64_t (*)(void))type metadata accessor for NavigationFeedItemData);
  sub_2408574C0((uint64_t)v13, &qword_268C90940, (void (*)(uint64_t))type metadata accessor for NavigationFeedItemData);
  uint64_t v31 = v131;
  uint64_t v32 = v129;
  uint64_t v119 = *(void (**)(char *, uint64_t, uint64_t))(v131 + 16);
  v119(v21, v30, v129);
  sub_2408573A0(v30);
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v23, v21, v32);
  uint64_t v33 = v128;
  sub_2408573FC(v24, v128, &qword_268C90940, (void (*)(uint64_t))type metadata accessor for NavigationFeedItemData);
  uint64_t v34 = v127;
  if (v25((long long *)v33, 1, v127))
  {
    sub_2408574C0(v33, &qword_268C90940, (void (*)(uint64_t))type metadata accessor for NavigationFeedItemData);
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v23, v32);
  }
  uint64_t v35 = (void (*)(char *, char *, uint64_t))v119;
  uint64_t v117 = v23;
  uint64_t v36 = v130;
  sub_240857338(v33, v130, (uint64_t (*)(void))type metadata accessor for NavigationFeedItemData);
  sub_2408574C0(v33, &qword_268C90940, (void (*)(uint64_t))type metadata accessor for NavigationFeedItemData);
  uint64_t v37 = v36 + v34[5];
  uint64_t v38 = v124;
  id v39 = v123;
  uint64_t v40 = v126;
  (*(void (**)(char *, uint64_t, uint64_t))(v124 + 16))(v123, v37, v126);
  sub_2408573A0(v36);
  uint64_t v41 = v125;
  (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v125, v39, v40);
  uint64_t v42 = &v120[*(void *)((*MEMORY[0x263F8EED0] & *(void *)v120) + 0x70)];
  swift_beginAccess();
  sub_2408573FC((uint64_t)v42, (uint64_t)&v132, (unint64_t *)&qword_26AFCF770, (void (*)(uint64_t))sub_240857468);
  if (!v133)
  {
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v41, v40);
    (*(void (**)(char *, uint64_t))(v131 + 8))(v117, v32);
    uint64_t v26 = (unint64_t *)&qword_26AFCF770;
    uint64_t v27 = (void (*)(uint64_t))sub_240857468;
    uint64_t v28 = &v132;
    return sub_2408574C0((uint64_t)v28, v26, v27);
  }
  sub_24083AB20(&v132, (uint64_t)v134);
  id v43 = v118;
  uint64_t v44 = (uint64_t)v117;
  v35(v118, v117, v32);
  uint64_t v45 = v131;
  uint64_t v46 = *(uint64_t (**)(char *, uint64_t))(v131 + 88);
  int v47 = v46(v43, v32);
  int v48 = *MEMORY[0x263F45F88];
  if (v47 == *MEMORY[0x263F45F88])
  {
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v41, v126);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v32);
    return sub_2408371B8((uint64_t)v134);
  }
  int v49 = *MEMORY[0x263F45F78];
  int v50 = *MEMORY[0x263F45F80];
  if (v47 == *MEMORY[0x263F45F78] || v47 == v50)
  {
    id v88 = v121;
    uint64_t v89 = v44;
    uint64_t v90 = v129;
    v35(v121, (char *)v89, v129);
    uint64_t v91 = v88;
    uint64_t v92 = v131;
    int v93 = v46(v91, v90);
    if (v93 == v48) {
      goto LABEL_41;
    }
    if (v93 == v49)
    {
      uint64_t v94 = v122;
    }
    else
    {
      uint64_t v94 = v122;
      if (v93 != v50)
      {
        uint64_t v90 = v129;
        if (v93 != *MEMORY[0x263F45F90]) {
          goto LABEL_67;
        }
LABEL_41:
        (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v125, v126);
        (*(void (**)(char *, uint64_t))(v92 + 8))(v117, v90);
        return sub_2408371B8((uint64_t)v134);
      }
    }
    sub_240952808();
    uint64_t v95 = (void *)sub_2409527D8();
    sub_2408304E8(v134, v135);
    uint64_t v96 = (void *)sub_240953B98();
    uint64_t v97 = (void *)sub_2409527E8();

    sub_240952D78();
    uint64_t v98 = (void *)sub_240952D68();
    uint64_t v99 = (void *)sub_240952D18();

    sub_240857338(v94, (uint64_t)&v132, (uint64_t (*)(void))sub_24085776C);
    uint64_t v100 = v133;
    if (v133)
    {
      uint64_t v101 = sub_2408304E8(&v132, v133);
      uint64_t v102 = *(void *)(v100 - 8);
      MEMORY[0x270FA5388](v101);
      uint64_t v104 = (char *)&v117 - ((v103 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v102 + 16))(v104);
      uint64_t v105 = sub_2409555F8();
      (*(void (**)(char *, uint64_t))(v102 + 8))(v104, v100);
      sub_2408371B8((uint64_t)&v132);
    }
    else
    {
      uint64_t v105 = 0;
    }
    objc_msgSend(v120, sel_showViewController_sender_, v99, v105);

    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v125, v126);
    goto LABEL_63;
  }
  if (v47 == *MEMORY[0x263F45F90])
  {
    id v51 = objc_msgSend(self, sel_supportedRecordCategoriesByCategoryType);
    uint64_t v52 = v129;
    if (v51)
    {
      id v53 = v51;
      sub_24083EDCC(0, &qword_268C90948);
      sub_24083EDCC(0, &qword_268C90950);
      sub_240857DB8(&qword_268C90958, &qword_268C90948);
      uint64_t v54 = sub_2409546A8();

      uint64_t v55 = v125;
      id v56 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, sub_240952858());
      uint64_t v57 = (char *)sub_240856F24(v56, v54);

      swift_bridgeObjectRelease();
      uint64_t v123 = v57;
      if (!v57)
      {
        (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v55, v126);
        (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v44, v52);
        return sub_2408371B8((uint64_t)v134);
      }
      sub_240952808();
      double v58 = (void *)sub_2409527D8();
      sub_2408304E8(v134, v135);
      long long v59 = (void *)sub_240953B98();
      uint64_t v127 = (int *)sub_2409527E8();

      id v60 = objc_msgSend(self, sel_predicateForMedicalRecordWithState_, 1);
      unint64_t v61 = sub_240952878();
      uint64_t v62 = sub_24092CF6C(MEMORY[0x263F8EE78]);
      if (v61 >> 62) {
        goto LABEL_56;
      }
      uint64_t v63 = *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10);
      while (v63)
      {
        unint64_t v130 = v61 & 0xC000000000000001;
        uint64_t v64 = 4;
        unint64_t v128 = v61;
        while (1)
        {
          id v66 = v130 ? (id)MEMORY[0x2456015B0](v64 - 4, v61) : *(id *)(v61 + 8 * v64);
          uint64_t v67 = v66;
          uint64_t v68 = v64 - 3;
          if (__OFADD__(v64 - 4, 1)) {
            break;
          }
          if ((v62 & 0xC000000000000001) != 0)
          {
            if (v62 < 0) {
              uint64_t v69 = v62;
            }
            else {
              uint64_t v69 = v62 & 0xFFFFFFFFFFFFFF8;
            }
            id v70 = v66;
            id v71 = v60;
            uint64_t v72 = sub_2409551C8();
            if (__OFADD__(v72, 1)) {
              goto LABEL_54;
            }
            uint64_t v62 = sub_24085751C(v69, v72 + 1);
          }
          else
          {
            id v73 = v66;
            id v74 = v60;
          }
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&long long v132 = v62;
          unint64_t v61 = v62;
          unint64_t v77 = sub_24093131C((uint64_t)v67);
          uint64_t v78 = *(void *)(v62 + 16);
          BOOL v79 = (v76 & 1) == 0;
          uint64_t v80 = v78 + v79;
          if (__OFADD__(v78, v79)) {
            goto LABEL_53;
          }
          char v81 = v76;
          if (*(void *)(v62 + 24) >= v80)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_24093B64C();
            }
          }
          else
          {
            sub_24093A664(v80, isUniquelyReferenced_nonNull_native);
            unint64_t v82 = sub_24093131C((uint64_t)v67);
            if ((v81 & 1) != (v83 & 1)) {
              goto LABEL_66;
            }
            unint64_t v77 = v82;
          }
          uint64_t v62 = v132;
          unint64_t v61 = 8 * v77;
          if (v81)
          {
            uint64_t v65 = *(void *)(v132 + 56);

            *(void *)(v65 + 8 * v77) = v60;
          }
          else
          {
            *(void *)(v132 + 8 * (v77 >> 6) + 64) |= 1 << v77;
            *(void *)(*(void *)(v62 + 48) + 8 * v77) = v67;
            *(void *)(*(void *)(v62 + 56) + 8 * v77) = v60;
            uint64_t v84 = *(void *)(v62 + 16);
            BOOL v85 = __OFADD__(v84, 1);
            uint64_t v86 = v84 + 1;
            if (v85) {
              goto LABEL_55;
            }
            *(void *)(v62 + 16) = v86;
            id v87 = v67;
          }
          unint64_t v61 = v128;

          swift_bridgeObjectRelease();
          ++v64;
          if (v68 == v63) {
            goto LABEL_57;
          }
        }
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        swift_bridgeObjectRetain();
        uint64_t v63 = sub_2409553D8();
        swift_bridgeObjectRelease();
      }
LABEL_57:
      swift_bridgeObjectRelease();
      sub_240952D78();
      uint64_t v106 = (void *)sub_240952D68();
      sub_24092D470(v62);
      swift_bridgeObjectRelease();
      uint64_t v107 = v123;
      uint64_t v108 = (void *)sub_240952CE8();

      swift_bridgeObjectRelease();
      sub_240953358();
      if (swift_dynamicCastClass())
      {
        id v109 = v108;
        sub_2408577C8((uint64_t)v117, v125);
        sub_240953348();
      }
      sub_240857338(v122, (uint64_t)&v132, (uint64_t (*)(void))sub_24085776C);
      uint64_t v110 = v133;
      uint64_t v111 = v124;
      if (v133)
      {
        uint64_t v112 = sub_2408304E8(&v132, v133);
        uint64_t v113 = *(void *)(v110 - 8);
        MEMORY[0x270FA5388](v112);
        uint64_t v115 = (char *)&v117 - ((v114 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v113 + 16))(v115);
        uint64_t v116 = sub_2409555F8();
        (*(void (**)(char *, uint64_t))(v113 + 8))(v115, v110);
        sub_2408371B8((uint64_t)&v132);
      }
      else
      {
        uint64_t v116 = 0;
      }
      objc_msgSend(v120, sel_showViewController_sender_, v108, v116);

      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v125, v126);
LABEL_63:
      (*(void (**)(char *, uint64_t))(v131 + 8))(v117, v129);
      return sub_2408371B8((uint64_t)v134);
    }
    __break(1u);
LABEL_66:
    sub_24083EDCC(0, &qword_268C90960);
    sub_240955678();
    __break(1u);
  }
LABEL_67:
  uint64_t result = sub_2409553A8();
  __break(1u);
  return result;
}

void *sub_240856F24(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v6 = sub_24093136C((uint64_t)a1);
      if (v7)
      {
        uint64_t v5 = *(void **)(*(void *)(a2 + 56) + 8 * v6);
        id v8 = v5;
        return v5;
      }
    }
    return 0;
  }
  id v3 = a1;
  uint64_t v4 = sub_240955378();

  if (!v4) {
    return 0;
  }
  sub_24083EDCC(0, &qword_268C90950);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v5 = v10;
  swift_unknownObjectRelease();
  return v5;
}

id sub_240856FFC(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&v3[qword_268C90910] = 0;
  *(void *)&v3[qword_268C90918] = 0;
  *(void *)&v3[qword_268C90920] = 0x4030000000000000;
  *(void *)&v3[qword_268C90928] = 0x4020000000000000;
  if (a2)
  {
    uint64_t v5 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for NavigationFeedItemViewController();
  id v6 = objc_msgSendSuper2(&v8, sel_initWithNibName_bundle_, v5, a3);

  return v6;
}

id sub_2408570B8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    uint64_t v5 = sub_2409547C8();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  id v8 = a4;
  return sub_240856FFC(v5, v7, a4);
}

id sub_240857118(void *a1)
{
  *(void *)&v1[qword_268C90910] = 0;
  *(void *)&v1[qword_268C90918] = 0;
  *(void *)&v1[qword_268C90920] = 0x4030000000000000;
  *(void *)&v1[qword_268C90928] = 0x4020000000000000;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for NavigationFeedItemViewController();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id sub_2408571A4(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_240857118(a3);
}

void sub_2408571CC()
{
  uint64_t v1 = *(void **)(v0 + qword_268C90918);
}

id sub_24085720C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NavigationFeedItemViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_240857244(uint64_t a1)
{
  objc_super v2 = *(void **)(a1 + qword_268C90918);
}

uint64_t type metadata accessor for NavigationFeedItemViewController()
{
  uint64_t result = qword_268C90930;
  if (!qword_268C90930) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2408572DC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_240857330()
{
  return type metadata accessor for NavigationFeedItemViewController();
}

uint64_t sub_240857338(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2408573A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NavigationFeedItemData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2408573FC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_240857C38(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unint64_t sub_240857468()
{
  unint64_t result = qword_26AFCF760;
  if (!qword_26AFCF760)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFCF760);
  }
  return result;
}

uint64_t sub_2408574C0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_240857C38(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_24085751C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_240857CFC();
    uint64_t v2 = sub_240955418();
    uint64_t v18 = v2;
    sub_240955358();
    uint64_t v3 = sub_240955388();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_24083EDCC(0, &qword_268C90960);
      do
      {
        swift_dynamicCast();
        sub_24083EDCC(0, &qword_268C90978);
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_24093A664(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        uint64_t result = sub_240954FB8();
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_240955388();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE80];
  }
  return v2;
}

void sub_24085776C()
{
  if (!qword_268C91A60)
  {
    unint64_t v0 = sub_240955098();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C91A60);
    }
  }
}

uint64_t sub_2408577C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240952B98();
  uint64_t v24 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240857C38(0, &qword_26AFCC6A8, MEMORY[0x263F07690]);
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v9 = (char *)&v23 - v8;
  sub_240857C8C();
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  char v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = &v13[*(int *)(v11 + 56)];
  uint64_t v15 = sub_240952778();
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v13, a1, v15);
  uint64_t v17 = sub_2409528B8();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v14, a2, v17);
  int v19 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v13, v15);
  if (v19 != *MEMORY[0x263F45F78])
  {
    if (v19 == *MEMORY[0x263F45F80])
    {
      if ((*(unsigned int (**)(char *, uint64_t))(v18 + 88))(v14, v17) == *MEMORY[0x263F45FE8]) {
        goto LABEL_9;
      }
    }
    else if (v19 == *MEMORY[0x263F45F90] {
           && (*(unsigned int (**)(char *, uint64_t))(v18 + 88))(v14, v17) == *MEMORY[0x263F45FE8])
    }
    {
      goto LABEL_9;
    }
LABEL_10:
    (*(void (**)(char *, uint64_t))(v18 + 8))(v14, v17);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    return 0;
  }
  if ((*(unsigned int (**)(char *, uint64_t))(v18 + 88))(v14, v17) != *MEMORY[0x263F45FE8]) {
    goto LABEL_10;
  }
LABEL_9:
  (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
  uint64_t v20 = sub_240951AB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v9, 1, 1, v20);
  sub_240952B88();
  uint64_t v21 = sub_2409535A8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v4);
  sub_2408574C0((uint64_t)v9, &qword_26AFCC6A8, MEMORY[0x263F07690]);
  return v21;
}

void sub_240857C38(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240955098();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_240857C8C()
{
  if (!qword_268C90968)
  {
    sub_240952778();
    sub_2409528B8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C90968);
    }
  }
}

void sub_240857CFC()
{
  if (!qword_268C90970)
  {
    sub_24083EDCC(255, &qword_268C90960);
    sub_24083EDCC(255, &qword_268C90978);
    sub_240857DB8(&qword_268C90980, &qword_268C90960);
    unint64_t v0 = sub_240955438();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C90970);
    }
  }
}

uint64_t sub_240857DB8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24083EDCC(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240857E08(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_2409540C8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(a1, sel_activityType);
  uint64_t v11 = sub_2409547C8();
  uint64_t v13 = v12;

  if (sub_2409547C8() == v11 && v14 == v13)
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v30 = v7;
  char v16 = sub_240955618();
  swift_bridgeObjectRelease();
  if (v16)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    return sub_24085816C(a1, a2, a3);
  }
  if (sub_2409547C8() == v11 && v17 == v13)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v19 = sub_240955618();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      sub_240954088();
      uint64_t v20 = a1;
      uint64_t v21 = sub_2409540B8();
      os_log_type_t v22 = sub_240954C18();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        uint64_t v29 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v23 = 138543362;
        uint64_t v31 = v20;
        uint64_t v24 = v20;
        sub_2409550B8();
        uint64_t v25 = v29;
        *uint64_t v29 = v20;

        _os_log_impl(&dword_240818000, v21, v22, "Unsupported NSUA was directed to HealthRecords plugin: %{public}@", v23, 0xCu);
        sub_24085899C(0, (unint64_t *)&qword_26AFCE288, (void (*)(uint64_t))sub_240858614);
        swift_arrayDestroy();
        MEMORY[0x2456021C0](v25, -1, -1);
        MEMORY[0x2456021C0](v23, -1, -1);
      }
      else
      {

        uint64_t v21 = v20;
      }
      uint64_t v27 = v30;

      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v9, v6);
    }
  }

  return sub_240858654(a1);
}

uint64_t sub_24085816C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v34 = a2;
  uint64_t v35 = a3;
  uint64_t v5 = sub_2409540C8();
  uint64_t v36 = *(void *)(v5 - 8);
  uint64_t v37 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24085899C(0, &qword_268C90988, MEMORY[0x263F44580]);
  MEMORY[0x270FA5388](v8 - 8);
  id v10 = (char *)&v33 - v9;
  sub_24085899C(0, &qword_268C90990, MEMORY[0x263F06EA8]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v33 - v12;
  uint64_t v14 = sub_240951918();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v33 - v19;
  id v21 = objc_msgSend(a1, sel_webpageURL);
  if (v21)
  {
    os_log_type_t v22 = v21;
    uint64_t v33 = v3;
    sub_240951908();

    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v23(v13, v18, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
    {
      v23(v20, v13, v14);
      sub_24091C630((uint64_t)v20, v34, v35, (uint64_t)v10);
      sub_2408589F0((uint64_t)v10, &qword_268C90988, MEMORY[0x263F44580]);
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
  }
  sub_2408589F0((uint64_t)v13, &qword_268C90990, MEMORY[0x263F06EA8]);
  sub_240954088();
  uint64_t v25 = a1;
  uint64_t v26 = sub_2409540B8();
  os_log_type_t v27 = sub_240954C18();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 138543362;
    uint64_t v38 = v25;
    uint64_t v30 = v25;
    sub_2409550B8();
    *uint64_t v29 = v25;

    _os_log_impl(&dword_240818000, v26, v27, "Web Browsing activity missing the webpageURL variable: %{public}@", v28, 0xCu);
    sub_24085899C(0, (unint64_t *)&qword_26AFCE288, (void (*)(uint64_t))sub_240858614);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v29, -1, -1);
    MEMORY[0x2456021C0](v28, -1, -1);
  }
  else
  {

    uint64_t v26 = v25;
  }
  uint64_t v32 = v36;
  uint64_t v31 = v37;

  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v7, v31);
}

unint64_t sub_240858614()
{
  unint64_t result = qword_26AFCE280;
  if (!qword_26AFCE280)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFCE280);
  }
  return result;
}

uint64_t sub_240858654(void *a1)
{
  uint64_t v2 = sub_2409540C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(a1, sel_userInfo);
  if (!v6)
  {
    long long v25 = 0u;
    long long v26 = 0u;
LABEL_10:
    sub_240858A4C((uint64_t)&v25);
    goto LABEL_11;
  }
  uint64_t v7 = v6;
  uint64_t v8 = sub_2409546A8();

  uint64_t v22 = sub_2409547C8();
  uint64_t v23 = v9;
  sub_240955238();
  if (*(void *)(v8 + 16) && (unint64_t v10 = sub_2409313BC((uint64_t)&v24), (v11 & 1) != 0))
  {
    sub_2408373C4(*(void *)(v8 + 56) + 32 * v10, (uint64_t)&v25);
  }
  else
  {
    long long v25 = 0u;
    long long v26 = 0u;
  }
  sub_240858AA8((uint64_t)&v24);
  swift_bridgeObjectRelease();
  if (!*((void *)&v26 + 1)) {
    goto LABEL_10;
  }
  if (swift_dynamicCast())
  {
    sub_240952448();
    sub_240952418();
    return swift_bridgeObjectRelease();
  }
LABEL_11:
  sub_240954088();
  uint64_t v13 = a1;
  uint64_t v14 = sub_2409540B8();
  os_log_type_t v15 = sub_240954C18();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = (void *)swift_slowAlloc();
    uint64_t v21 = v3;
    *(_DWORD *)uint64_t v16 = 138543362;
    uint64_t v24 = v13;
    uint64_t v17 = v13;
    uint64_t v3 = v21;
    sub_2409550B8();
    uint64_t v18 = v20;
    *uint64_t v20 = v13;

    _os_log_impl(&dword_240818000, v14, v15, "Attemping to restore from health records authorization settings user activity, but no app bundle identifier found: %{public}@", v16, 0xCu);
    sub_24085899C(0, (unint64_t *)&qword_26AFCE288, (void (*)(uint64_t))sub_240858614);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v18, -1, -1);
    MEMORY[0x2456021C0](v16, -1, -1);
  }
  else
  {

    uint64_t v14 = v13;
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_24085899C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240955098();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2408589F0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_24085899C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_240858A4C(uint64_t a1)
{
  sub_24085776C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240858AA8(uint64_t a1)
{
  return a1;
}

uint64_t sub_240858AFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2409540C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  sub_24085AB2C(0, &qword_268C909C8, MEMORY[0x263F46090]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v26 - v8;
  uint64_t v10 = v0 + OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_context;
  swift_beginAccess();
  sub_24085AA1C(v10, (uint64_t)v27);
  uint64_t v11 = v28;
  if (v28)
  {
    v26[7] = v3;
    uint64_t v12 = sub_2408304E8(v27, v28);
    uint64_t v13 = *(void *)(v11 - 8);
    MEMORY[0x270FA5388](v12);
    os_log_type_t v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v13 + 16))(v15);
    sub_24085A994((uint64_t)v27);
    uint64_t v16 = sub_240953BB8();
    unint64_t v18 = v17;
    uint64_t v19 = v11;
    unint64_t v20 = v18;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v19);
    if (v20 >> 60 != 15)
    {
      uint64_t v21 = sub_240952B38();
      sub_24085AC5C(&qword_268C909E8, MEMORY[0x263F46090]);
      sub_240951778();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v9, 0, 1, v21);
      uint64_t v24 = v1 + OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_feedItemData;
      swift_beginAccess();
      sub_24085ABDC((uint64_t)v9, v24);
      swift_endAccess();
      return sub_240849C34(v16, v20);
    }
  }
  else
  {
    sub_24085A994((uint64_t)v27);
  }
  uint64_t v22 = sub_240952B38();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v7, 1, 1, v22);
  uint64_t v23 = v1 + OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_feedItemData;
  swift_beginAccess();
  sub_24085ABDC((uint64_t)v7, v23);
  return swift_endAccess();
}

id sub_240859174()
{
  uint64_t v1 = OBJC_IVAR____TtC13HealthRecords21LabsTipViewController____lazy_storage___tipsView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC13HealthRecords21LabsTipViewController____lazy_storage___tipsView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC13HealthRecords21LabsTipViewController____lazy_storage___tipsView);
  }
  else
  {
    id v4 = sub_2408591D8(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_2408591D8(uint64_t a1)
{
  uint64_t v27 = a1;
  sub_24085AB2C(0, &qword_268C909C8, MEMORY[0x263F46090]);
  MEMORY[0x270FA5388](v1 - 8);
  long long v26 = (char *)&v24 - v2;
  uint64_t v3 = sub_240952B98();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void (*)(uint64_t))MEMORY[0x263F07690];
  sub_24085AB2C(0, &qword_26AFCC6A8, MEMORY[0x263F07690]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v24 - v9;
  id v28 = objc_msgSend(objc_allocWithZone((Class)sub_240953588()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v11 = sub_240951AB8();
  long long v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  v25(v10, 1, 1, v11);
  sub_240952B88();
  sub_2409535A8();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v4 + 8);
  v12(v6, v3);
  sub_24085AB80((uint64_t)v10, &qword_26AFCC6A8, v7);
  sub_240953578();
  v25(v10, 1, 1, v11);
  uint64_t v13 = (uint64_t)v26;
  sub_240952B78();
  sub_2409535A8();
  v12(v6, v3);
  sub_24085AB80((uint64_t)v10, &qword_26AFCC6A8, v7);
  sub_24085A92C(0, (unint64_t *)&qword_26AFD0610, (unint64_t *)&qword_26AFD0630, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_240956800;
  uint64_t v15 = v27 + OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_feedItemData;
  swift_beginAccess();
  sub_24085AAAC(v15, v13);
  uint64_t v16 = sub_240952B38();
  uint64_t v17 = 0;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v13, 1, v16)) {
    uint64_t v17 = sub_240952AF8();
  }
  sub_24085AB80(v13, &qword_268C909C8, MEMORY[0x263F46090]);
  uint64_t v18 = MEMORY[0x263F8D750];
  *(void *)(v14 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v14 + 64) = v18;
  *(void *)(v14 + 32) = v17;
  sub_2409547D8();
  swift_bridgeObjectRelease();
  uint64_t v19 = v28;
  sub_240953558();
  sub_24083EDCC(0, &qword_26AFCF698);
  sub_240954F78();
  sub_240953568();
  unint64_t v20 = self;
  id v21 = v19;
  id v22 = objc_msgSend(v20, sel_secondaryLabelColor);
  objc_msgSend(v21, sel_setTintColor_, v22);

  return v21;
}

id sub_2408597FC(void *a1, double a2)
{
  uint64_t v25 = MEMORY[0x263F8EE78];
  id v4 = sub_240859174();
  id v5 = objc_msgSend(v4, sel_leadingAnchor);

  id result = objc_msgSend(a1, sel_view);
  if (!result)
  {
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    return result;
  }
  uint64_t v7 = result;
  id v8 = objc_msgSend(result, sel_leadingAnchor);

  id v9 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v8);
  MEMORY[0x245600C60]();
  if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_240954A08();
  }
  sub_240954A28();
  sub_2409549B8();
  id v10 = sub_240859174();
  id v11 = objc_msgSend(v10, sel_trailingAnchor);

  id result = objc_msgSend(a1, sel_view);
  if (!result) {
    goto LABEL_15;
  }
  uint64_t v12 = result;
  id v13 = objc_msgSend(result, sel_trailingAnchor);

  id v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v13);
  MEMORY[0x245600C60]();
  if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_240954A08();
  }
  sub_240954A28();
  sub_2409549B8();
  id v15 = sub_240859174();
  id v16 = objc_msgSend(v15, sel_topAnchor);

  id result = objc_msgSend(a1, sel_view);
  if (!result) {
    goto LABEL_16;
  }
  uint64_t v17 = result;
  id v18 = objc_msgSend(result, sel_topAnchor);

  id v19 = objc_msgSend(v16, sel_constraintEqualToAnchor_constant_, v18, -a2);
  MEMORY[0x245600C60]();
  if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_240954A08();
  }
  sub_240954A28();
  sub_2409549B8();
  id v20 = sub_240859174();
  id v21 = objc_msgSend(v20, sel_bottomAnchor);

  id result = objc_msgSend(a1, sel_view);
  if (!result) {
    goto LABEL_17;
  }
  id v22 = result;
  id v23 = objc_msgSend(result, sel_bottomAnchor);

  id v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v23);
  MEMORY[0x245600C60]();
  if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_240954A08();
  }
  sub_240954A28();
  sub_2409549B8();
  return (id)v25;
}

id sub_240859BB0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  uint64_t v7 = &v3[OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_context];
  *(_OWORD *)uint64_t v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((void *)v7 + 4) = 0;
  id v8 = &v3[OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_feedItemData];
  uint64_t v9 = sub_240952B38();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v4[OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_isDismissible] = 1;
  id v10 = &v4[OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_headerType];
  uint64_t v11 = *MEMORY[0x263F43CB0];
  uint64_t v12 = sub_240953798();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  v4[OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_showsSeparator] = 0;
  uint64_t v13 = OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_decoder;
  sub_240951798();
  swift_allocObject();
  id v14 = v4;
  *(void *)&v4[v13] = sub_240951788();
  *(void *)&v14[OBJC_IVAR____TtC13HealthRecords21LabsTipViewController____lazy_storage___tipsView] = 0;

  if (a2)
  {
    id v15 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v15 = 0;
  }
  v18.receiver = v14;
  v18.super_class = (Class)type metadata accessor for LabsTipViewController();
  id v16 = objc_msgSendSuper2(&v18, sel_initWithNibName_bundle_, v15, a3);

  return v16;
}

id sub_240859DC8(void *a1)
{
  uint64_t v2 = v1;
  id v4 = &v1[OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_context];
  *(_OWORD *)id v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((void *)v4 + 4) = 0;
  id v5 = &v1[OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_feedItemData];
  uint64_t v6 = sub_240952B38();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v2[OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_isDismissible] = 1;
  uint64_t v7 = &v2[OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_headerType];
  uint64_t v8 = *MEMORY[0x263F43CB0];
  uint64_t v9 = sub_240953798();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  v2[OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_showsSeparator] = 0;
  uint64_t v10 = OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_decoder;
  sub_240951798();
  swift_allocObject();
  uint64_t v11 = v2;
  *(void *)&v2[v10] = sub_240951788();
  *(void *)&v11[OBJC_IVAR____TtC13HealthRecords21LabsTipViewController____lazy_storage___tipsView] = 0;

  v14.receiver = v11;
  v14.super_class = (Class)type metadata accessor for LabsTipViewController();
  id v12 = objc_msgSendSuper2(&v14, sel_initWithCoder_, a1);

  return v12;
}

id sub_240859F6C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LabsTipViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24085A070()
{
  return type metadata accessor for LabsTipViewController();
}

uint64_t type metadata accessor for LabsTipViewController()
{
  uint64_t result = qword_268C909B8;
  if (!qword_268C909B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_24085A0C4()
{
  sub_24085AB2C(319, &qword_268C909C8, MEMORY[0x263F46090]);
  if (v0 <= 0x3F)
  {
    sub_240953798();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_24085A1D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_context;
  swift_beginAccess();
  return sub_24085AA1C(v3, a1);
}

uint64_t sub_24085A228(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_context;
  swift_beginAccess();
  sub_24085A89C(a1, v3);
  swift_endAccess();
  sub_240858AFC();
  return sub_24085A994(a1);
}

uint64_t (*sub_24085A298(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_24085A2F8;
}

uint64_t sub_24085A2F8(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_240858AFC();
  }
  return result;
}

uint64_t sub_24085A334()
{
  return sub_240952CB8();
}

uint64_t sub_24085A3C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_headerType;
  uint64_t v4 = sub_240953798();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_24085A448()
{
  id v1 = objc_msgSend(*v0, sel_title);
  if (!v1) {
    return 0;
  }
  objc_super v2 = v1;
  uint64_t v3 = sub_2409547C8();

  return v3;
}

uint64_t sub_24085A4B4@<X0>(uint64_t a1@<X8>)
{
  sub_24085AB2C(0, &qword_268C909C8, MEMORY[0x263F46090]);
  MEMORY[0x270FA5388](v3 - 8);
  id v5 = (char *)&v12 - v4;
  uint64_t v6 = *v1 + OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_feedItemData;
  swift_beginAccess();
  sub_24085AAAC(v6, (uint64_t)v5);
  uint64_t v7 = sub_240952B38();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_240952B08();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
    uint64_t v10 = *MEMORY[0x263F46130];
    uint64_t v11 = sub_240952F68();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(a1, v10, v11);
  }
  return result;
}

uint64_t sub_24085A648()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_context;
  swift_beginAccess();
  uint64_t result = sub_24085AA1C(v1, (uint64_t)v10);
  uint64_t v3 = v11;
  if (v11)
  {
    uint64_t v4 = sub_2408304E8(v10, v11);
    uint64_t v5 = *(void *)(v3 - 8);
    MEMORY[0x270FA5388](v4);
    uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(unsigned char *))(v5 + 16))(v7);
    uint64_t v8 = sub_240953B98();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v3);
    sub_2408371B8((uint64_t)v10);
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24085A798@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F43BD8];
  uint64_t v3 = sub_240953738();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_24085A80C()
{
  return sub_24085AC5C(&qword_268C909D0, (void (*)(uint64_t))type metadata accessor for LabsTipViewController);
}

uint64_t sub_24085A854()
{
  return sub_24085AC5C(&qword_268C909D8, (void (*)(uint64_t))type metadata accessor for LabsTipViewController);
}

uint64_t sub_24085A89C(uint64_t a1, uint64_t a2)
{
  sub_24085A92C(0, (unint64_t *)&qword_26AFCF770, (unint64_t *)&qword_26AFCF760, MEMORY[0x263F444A0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_24085A92C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_2408484BC(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_24085A994(uint64_t a1)
{
  sub_24085A92C(0, (unint64_t *)&qword_26AFCF770, (unint64_t *)&qword_26AFCF760, MEMORY[0x263F444A0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24085AA1C(uint64_t a1, uint64_t a2)
{
  sub_24085A92C(0, (unint64_t *)&qword_26AFCF770, (unint64_t *)&qword_26AFCF760, MEMORY[0x263F444A0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24085AAAC(uint64_t a1, uint64_t a2)
{
  sub_24085AB2C(0, &qword_268C909C8, MEMORY[0x263F46090]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_24085AB2C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240955098();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_24085AB80(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_24085AB2C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_24085ABDC(uint64_t a1, uint64_t a2)
{
  sub_24085AB2C(0, &qword_268C909C8, MEMORY[0x263F46090]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24085AC5C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24085ACA4()
{
  unint64_t result = qword_268C909F0;
  if (!qword_268C909F0)
  {
    sub_240952B38();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C909F0);
  }
  return result;
}

uint64_t type metadata accessor for SharedConcept_SharingVersionMismatchTileView(uint64_t a1)
{
  return sub_24082A2AC(a1, (uint64_t *)&unk_268C909F8);
}

uint64_t sub_24085AD00()
{
  return swift_initClassMetadata2();
}

id sub_24085AD40(void *a1, double a2, double a3, double a4, double a5)
{
  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for SharedConcept_SharingVersionMismatchTileView(0);
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a2, a3, a4, a5);
}

id sub_24085ADB4(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for SharedConcept_SharingVersionMismatchTileView(0);
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_24085AE00()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharedConcept_SharingVersionMismatchTileView(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24085AE38()
{
  return type metadata accessor for SharedConcept_SharingVersionMismatchTileView(0);
}

uint64_t sub_24085AE40(uint64_t a1, uint64_t a2, void *a3)
{
  id v56 = a3;
  uint64_t v54 = a2;
  uint64_t v51 = sub_240951FB8();
  uint64_t v49 = *(void *)(v51 - 8);
  uint64_t v50 = *(void *)(v49 + 64);
  MEMORY[0x270FA5388](v51);
  int v48 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_240951EF8();
  uint64_t v5 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_240951F18();
  uint64_t v45 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  unint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_240952318();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24086451C();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v52 = v14;
  uint64_t v53 = v15;
  MEMORY[0x270FA5388](v14);
  int v47 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240951F28();
  sub_2408304E8(v59, v59[3]);
  sub_240952308();
  uint64_t v17 = sub_240952218();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v58 = v17;
  uint64_t v43 = a1;
  sub_240951FA8();
  sub_240951F68();
  sub_24082E9CC(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v18 = sub_240951C08();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void *)(v19 + 72);
  unint64_t v21 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_2409562B0;
  unint64_t v23 = v22 + v21;
  id v24 = *(void (**)(unint64_t, void, uint64_t))(v19 + 104);
  v24(v23, *MEMORY[0x263F45520], v18);
  v24(v23 + v20, *MEMORY[0x263F454D0], v18);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F45698], v44);
  sub_240951F08();
  sub_240841958();
  uint64_t v44 = v25;
  sub_2408663E4(&qword_26AFCDCA0, (void (*)(uint64_t))sub_240841958);
  uint64_t v26 = sub_240954488();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v9, v46);
  sub_2408371B8((uint64_t)v57);
  swift_release();
  sub_2408371B8((uint64_t)v59);
  v59[0] = v26;
  id v28 = v48;
  uint64_t v27 = v49;
  uint64_t v29 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v48, v43, v51);
  uint64_t v30 = v27;
  unint64_t v31 = (*(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  unint64_t v32 = (v50 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v35 + v31, v28, v29);
  uint64_t v36 = v55;
  *(void *)(v35 + v32) = v54;
  *(void *)(v35 + v33) = v36;
  uint64_t v37 = v56;
  *(void *)(v35 + v34) = v56;
  *(void *)(v35 + ((v34 + 15) & 0xFFFFFFFFFFFFFFF8)) = v36;
  swift_bridgeObjectRetain();
  id v38 = v37;
  sub_2409542E8();
  sub_2408418D4();
  sub_2408645D8();
  id v39 = v47;
  sub_2409545E8();
  swift_release();
  swift_release();
  sub_2408663E4(&qword_26AFCF158, (void (*)(uint64_t))sub_24086451C);
  uint64_t v40 = v52;
  uint64_t v41 = sub_240954498();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v39, v40);
  return v41;
}

uint64_t sub_24085B4E8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v166 = a5;
  uint64_t v167 = a4;
  uint64_t v189 = a3;
  uint64_t v171 = a6;
  sub_24086559C(0, &qword_26AFCDBE8, (uint64_t (*)(uint64_t))sub_2408418D4, sub_2408645D8, MEMORY[0x263EFDC90]);
  uint64_t v170 = v8;
  uint64_t v169 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v168 = (char *)&v163 - v9;
  uint64_t v211 = sub_2409521B8();
  uint64_t v176 = *(void *)(v211 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v211);
  v207 = (char *)&v163 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  v210 = (char *)&v163 - v12;
  uint64_t v202 = sub_2409528B8();
  uint64_t v205 = *(void *)(v202 - 8);
  MEMORY[0x270FA5388](v202);
  v201 = (char *)&v163 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = sub_2409522D8();
  uint64_t v188 = *(void *)(v178 - 8);
  MEMORY[0x270FA5388](v178);
  uint64_t v15 = (char *)&v163 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v191 = (void (**)(char *, uint64_t))sub_240951FB8();
  uint64_t v183 = (uint64_t)*(v191 - 1);
  MEMORY[0x270FA5388](v191);
  uint64_t v17 = (char *)&v163 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v190 = sub_2409540C8();
  unint64_t v185 = *(void *)(v190 - 8);
  MEMORY[0x270FA5388](v190);
  v192 = (char *)&v163 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v193 = sub_240951E78();
  uint64_t v19 = *(void *)(v193 - 8);
  MEMORY[0x270FA5388](v193);
  v209 = (char *)&v163 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v187 = 0;
  uint64_t v21 = sub_2409525A8();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  id v24 = (char *)&v163 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v184 = *a1;
  uint64_t v214 = MEMORY[0x263F8EE88];
  uint64_t v215 = MEMORY[0x263F8EE88];
  uint64_t v203 = a2;
  sub_240951F38();
  sub_2408304E8(v213, v213[3]);
  uint64_t v25 = *(void (**)(void))(v22 + 104);
  unsigned int v197 = *MEMORY[0x263F45E90];
  uint64_t v196 = v22 + 104;
  v195 = (void (*)(char *, void, uint64_t))v25;
  v25(v24);
  uint64_t v26 = sub_240951E88();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v22 + 8);
  v198 = v24;
  uint64_t v200 = v21;
  uint64_t v199 = v22 + 8;
  v194 = v27;
  v27(v24, v21);
  sub_2408371B8((uint64_t)v213);
  int64_t v28 = *(void *)(v26 + 16);
  v177 = v15;
  uint64_t v165 = v26;
  if (v28)
  {
    v204 = v17;
    v213[0] = MEMORY[0x263F8EE78];
    sub_240875C18(0, v28, 0);
    uint64_t v30 = *(void (***)(char *, uint64_t))(v19 + 16);
    uint64_t v29 = v19 + 16;
    v208 = v30;
    unint64_t v31 = v26 + ((*(unsigned __int8 *)(v29 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 64));
    v206 = *(void **)(v29 + 56);
    unint64_t v32 = (void (**)(char *, uint64_t))(v29 - 8);
    uint64_t v33 = v193;
    do
    {
      unint64_t v34 = v209;
      ((void (*)(char *, unint64_t, uint64_t))v208)(v209, v31, v33);
      uint64_t v35 = sub_240951D98();
      uint64_t v37 = v36;
      (*v32)(v34, v33);
      uint64_t v38 = v213[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_240875C18(0, *(void *)(v38 + 16) + 1, 1);
        uint64_t v38 = v213[0];
      }
      unint64_t v40 = *(void *)(v38 + 16);
      unint64_t v39 = *(void *)(v38 + 24);
      if (v40 >= v39 >> 1)
      {
        sub_240875C18(v39 > 1, v40 + 1, 1);
        uint64_t v38 = v213[0];
      }
      *(void *)(v38 + 16) = v40 + 1;
      uint64_t v41 = v38 + 16 * v40;
      *(void *)(v41 + 32) = v35;
      *(void *)(v41 + 40) = v37;
      v31 += (unint64_t)v206;
      --v28;
    }
    while (v28);
    uint64_t v180 = v38;
    uint64_t v15 = v177;
    uint64_t v42 = v189;
    uint64_t v17 = v204;
    uint64_t v43 = v205;
  }
  else
  {
    uint64_t v180 = MEMORY[0x263F8EE78];
    uint64_t v42 = v189;
    uint64_t v43 = v205;
  }
  uint64_t v44 = (int *)MEMORY[0x263F458A8];
  uint64_t v186 = *(void *)(v42 + 16);
  if (v186)
  {
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v46 = v178;
LABEL_16:
    unint64_t v65 = 0;
    unint64_t v185 = v42 + ((*(unsigned __int8 *)(v188 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v188 + 80));
    uint64_t v184 = v188 + 16;
    uint64_t v183 = v188 + 88;
    int v182 = *v44;
    int v175 = *MEMORY[0x263F45880];
    int v174 = *MEMORY[0x263F458A0];
    int v173 = *MEMORY[0x263F45888];
    v172 = (uint64_t (**)(char *, uint64_t))(v188 + 8);
    uint64_t v181 = (void (**)(char *, uint64_t))(v188 + 96);
    LODWORD(v193) = *MEMORY[0x263F45FE8];
    v192 = (char *)(v43 + 104);
    v191 = (void (**)(char *, uint64_t))(v43 + 8);
    v208 = (void (**)(char *, uint64_t))(v176 + 8);
    v209 = (char *)(v176 + 16);
    v164 = (uint64_t *)(v180 + 40);
    uint64_t v189 = v42;
    while (1)
    {
      if (v65 >= *(void *)(v42 + 16))
      {
        __break(1u);
        return result;
      }
      uint64_t v66 = v188;
      uint64_t v67 = *(void *)(v188 + 72);
      uint64_t v190 = v65;
      (*(void (**)(char *, unint64_t, uint64_t))(v188 + 16))(v15, v185 + v67 * v65, v46);
      int v68 = (*(uint64_t (**)(char *, uint64_t))(v66 + 88))(v15, v46);
      if (v68 == v182) {
        break;
      }
      if (v68 == v175)
      {
        (*v181)(v15, v46);
        uint64_t v92 = *(void *)v15;
        uint64_t v205 = *(void *)(*(void *)v15 + 16);
        if (v205)
        {
          int v93 = 0;
          unint64_t v94 = (*(unsigned __int8 *)(v176 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v176 + 80);
          uint64_t v179 = v92;
          v204 = (char *)(v92 + v94);
          uint64_t v95 = *(void *)(v176 + 72);
          uint64_t v96 = *(void (**)(char *, char *, uint64_t))(v176 + 16);
          do
          {
            v206 = v93;
            v96(v210, &v204[v95 * (void)v93], v211);
            uint64_t v101 = v215;
            sub_2408663E4(&qword_268C90A08, MEMORY[0x263F45738]);
            swift_bridgeObjectRetain();
            uint64_t v102 = sub_2409546F8();
            uint64_t v103 = -1 << *(unsigned char *)(v101 + 32);
            unint64_t v104 = v102 & ~v103;
            if ((*(void *)(v101 + 56 + ((v104 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v104))
            {
              uint64_t v105 = ~v103;
              while (1)
              {
                uint64_t v106 = v207;
                uint64_t v107 = v211;
                v96(v207, (char *)(*(void *)(v101 + 48) + v104 * v95), v211);
                sub_2408663E4(&qword_268C90A10, MEMORY[0x263F45738]);
                char v108 = sub_240954778();
                id v109 = *v208;
                (*v208)(v106, v107);
                if (v108) {
                  break;
                }
                unint64_t v104 = (v104 + 1) & v105;
                if (((*(void *)(v101 + 56 + ((v104 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v104) & 1) == 0) {
                  goto LABEL_35;
                }
              }
              swift_bridgeObjectRelease();
              v109(v210, v211);
            }
            else
            {
LABEL_35:
              swift_bridgeObjectRelease();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v98 = (uint64_t)v207;
              uint64_t v99 = v210;
              uint64_t v100 = v211;
              v96(v207, v210, v211);
              v213[0] = v215;
              sub_240944774(v98, v104, isUniquelyReferenced_nonNull_native);
              uint64_t v215 = v213[0];
              swift_bridgeObjectRelease();
              (*v208)(v99, v100);
            }
            int v93 = (void *)((char *)v206 + 1);
          }
          while ((void *)((char *)v206 + 1) != (void *)v205);
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v46 = v178;
          uint64_t v15 = v177;
          goto LABEL_19;
        }
        goto LABEL_18;
      }
      if (v68 == v174)
      {
        (*v181)(v15, v46);
        uint64_t v110 = *(char **)v15;
        uint64_t v111 = *(void *)(*(void *)v15 + 16);
        if (v111)
        {
          swift_bridgeObjectRetain();
          v204 = v110;
          uint64_t v112 = (unint64_t *)(v110 + 40);
          uint64_t v113 = (void *)MEMORY[0x263F8EE78];
          do
          {
            uint64_t v114 = *(v112 - 1);
            unint64_t v115 = *v112;
            swift_bridgeObjectRetain_n();
            uint64_t v116 = sub_2408C416C(v114, v115);
            if (v116)
            {
              uint64_t v119 = v116;
              uint64_t v205 = sub_2408C1EBC(v116, v117, v118);
              sub_240864E44(v119);
              uint64_t v121 = v201;
              uint64_t v120 = v202;
              (*(void (**)(char *, void, uint64_t))v192)(v201, v193, v202);
              uint64_t v122 = v198;
              v206 = v113;
              uint64_t v123 = v200;
              v195(v198, v197, v200);
              uint64_t v124 = (void *)sub_240951F68();
              uint64_t v205 = sub_240953298();
              uint64_t v126 = v125;
              swift_bridgeObjectRelease();

              uint64_t v127 = v123;
              uint64_t v113 = v206;
              v194(v122, v127);
              (*v191)(v121, v120);
              swift_bridgeObjectRelease();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v113 = sub_2408C296C(0, v113[2] + 1, 1, v113);
              }
              uint64_t v128 = v205;
              unint64_t v130 = v113[2];
              unint64_t v129 = v113[3];
              if (v130 >= v129 >> 1) {
                uint64_t v113 = sub_2408C296C((void *)(v129 > 1), v130 + 1, 1, v113);
              }
              v113[2] = v130 + 1;
              uint64_t v131 = &v113[2 * v130];
              v131[4] = v128;
              v131[5] = v126;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            v112 += 2;
            --v111;
          }
          while (v111);
          swift_bridgeObjectRelease();
          uint64_t v46 = v178;
          uint64_t v15 = v177;
        }
        else
        {
          uint64_t v113 = (void *)MEMORY[0x263F8EE78];
        }
        swift_bridgeObjectRelease();
        uint64_t v143 = v113[2];
        if (v143)
        {
          uint64_t v144 = v113 + 5;
          do
          {
            uint64_t v145 = *(v144 - 1);
            uint64_t v146 = *v144;
            swift_bridgeObjectRetain();
            sub_240940118(v213, v145, v146);
            swift_bridgeObjectRelease();
            v144 += 2;
            --v143;
          }
          while (v143);
        }
        goto LABEL_18;
      }
      if (v68 != v173)
      {
        uint64_t result = (*v172)(v15, v46);
        goto LABEL_19;
      }
      swift_bridgeObjectRelease();
      uint64_t v215 = MEMORY[0x263F8EE88];
      uint64_t result = v180;
      uint64_t v139 = *(void *)(v180 + 16);
      if (v139)
      {
        swift_bridgeObjectRetain();
        uint64_t v140 = v164;
        do
        {
          uint64_t v141 = *(v140 - 1);
          uint64_t v142 = *v140;
          swift_bridgeObjectRetain();
          sub_240940118(v213, v141, v142);
          swift_bridgeObjectRelease();
          v140 += 2;
          --v139;
        }
        while (v139);
LABEL_18:
        uint64_t result = swift_bridgeObjectRelease();
      }
LABEL_19:
      uint64_t v42 = v189;
      unint64_t v65 = v190 + 1;
      if (v190 + 1 == v186) {
        goto LABEL_73;
      }
    }
    (*v181)(v15, v46);
    uint64_t v69 = *(void *)v15;
    uint64_t v70 = *(void *)(*(void *)v15 + 16);
    if (v70)
    {
      unint64_t v71 = v69 + ((*(unsigned __int8 *)(v176 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v176 + 80));
      v204 = *(char **)(v176 + 72);
      uint64_t v179 = v69;
      swift_bridgeObjectRetain();
      uint64_t v72 = (void *)MEMORY[0x263F8EE78];
      do
      {
        uint64_t v73 = sub_240952188();
        unint64_t v75 = v74;
        swift_bridgeObjectRetain();
        uint64_t v76 = sub_2408C416C(v73, v75);
        if (v76)
        {
          uint64_t v79 = v76;
          uint64_t v205 = sub_2408C1EBC(v76, v77, v78);
          sub_240864E44(v79);
          uint64_t v80 = v201;
          uint64_t v81 = v202;
          (*(void (**)(char *, void, uint64_t))v192)(v201, v193, v202);
          unint64_t v82 = v198;
          v206 = v72;
          uint64_t v83 = v200;
          v195(v198, v197, v200);
          uint64_t v84 = (void *)sub_240951F68();
          uint64_t v205 = sub_240953298();
          uint64_t v86 = v85;
          swift_bridgeObjectRelease();

          uint64_t v87 = v83;
          uint64_t v72 = v206;
          v194(v82, v87);
          (*v191)(v80, v81);
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v72 = sub_2408C296C(0, v72[2] + 1, 1, v72);
          }
          uint64_t v88 = v205;
          unint64_t v90 = v72[2];
          unint64_t v89 = v72[3];
          if (v90 >= v89 >> 1) {
            uint64_t v72 = sub_2408C296C((void *)(v89 > 1), v90 + 1, 1, v72);
          }
          v72[2] = v90 + 1;
          uint64_t v91 = &v72[2 * v90];
          v91[4] = v88;
          v91[5] = v86;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        v71 += (unint64_t)v204;
        --v70;
      }
      while (v70);
      uint64_t v69 = v179;
      swift_bridgeObjectRelease();
      uint64_t v46 = v178;
      uint64_t v15 = v177;
    }
    else
    {
      uint64_t v72 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v132 = swift_bridgeObjectRetain();
    uint64_t v133 = v187;
    uint64_t v134 = sub_24086480C(v132, v72);
    uint64_t v187 = v133;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v135 = *(void *)(v134 + 16);
    if (v135)
    {
      uint64_t v136 = (uint64_t *)(v134 + 40);
      do
      {
        uint64_t v137 = *(v136 - 1);
        uint64_t v138 = *v136;
        swift_bridgeObjectRetain();
        sub_240940118(v213, v137, v138);
        swift_bridgeObjectRelease();
        v136 += 2;
        --v135;
      }
      while (v135);
    }
    swift_bridgeObjectRelease();
    sub_2408A4848(v69);
    goto LABEL_18;
  }
  int v47 = v192;
  sub_240954058();
  uint64_t v48 = v183;
  uint64_t v49 = v191;
  (*(void (**)(char *, uint64_t, void (**)(char *, uint64_t)))(v183 + 16))(v17, v203, v191);
  uint64_t v50 = sub_2409540B8();
  os_log_type_t v51 = sub_240954C08();
  BOOL v52 = os_log_type_enabled(v50, v51);
  uint64_t v46 = v178;
  if (v52)
  {
    uint64_t v53 = swift_slowAlloc();
    v204 = v17;
    uint64_t v54 = v48;
    uint64_t v55 = v53;
    v209 = (char *)swift_slowAlloc();
    v212 = v209;
    *(_DWORD *)uint64_t v55 = 136446466;
    v213[0] = sub_240864E84(0);
    sub_240864EA4(0, &qword_26AFCD6F0, (void (*)(uint64_t))sub_240864E84);
    uint64_t v56 = sub_2409547E8();
    v213[0] = sub_2408370E4(v56, v57, (uint64_t *)&v212);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v55 + 12) = 2082;
    v213[0] = sub_240951F68();
    sub_240955658();
    id v58 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v59 = sub_2409547E8();
    v213[0] = sub_2408370E4(v59, v60, (uint64_t *)&v212);
    uint64_t v44 = (int *)MEMORY[0x263F458A8];
    sub_2409550B8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void))(v54 + 8))(v204, v191);
    _os_log_impl(&dword_240818000, v50, v51, "[%{public}s]: for profile: %{public}s, prepended generator generating for previous sharable models", (uint8_t *)v55, 0x16u);
    unint64_t v61 = v209;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v61, -1, -1);
    MEMORY[0x2456021C0](v55, -1, -1);

    (*(void (**)(char *, uint64_t))(v185 + 8))(v192, v190);
  }
  else
  {
    (*(void (**)(char *, void))(v48 + 8))(v17, v49);

    (*(void (**)(char *, uint64_t))(v185 + 8))(v47, v190);
  }
  sub_24082E9CC(0, &qword_26AFCDFC0, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
  uint64_t v62 = v188;
  unint64_t v63 = (*(unsigned __int8 *)(v188 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v188 + 80);
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_240956800;
  *(void *)(v42 + v63) = v184;
  (*(void (**)(void))(v62 + 104))();
  uint64_t v64 = *(void *)(v42 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v186 = v64;
  if (v64) {
    goto LABEL_16;
  }
LABEL_73:
  swift_bridgeObjectRelease();
  uint64_t v147 = swift_bridgeObjectRelease();
  uint64_t v148 = v215;
  MEMORY[0x270FA5388](v147);
  uint64_t v149 = v203;
  *(&v163 - 2) = v167;
  *(&v163 - 1) = v149;
  swift_bridgeObjectRetain();
  uint64_t v150 = sub_240934408((void (*)(uint64_t *__return_ptr, char *))sub_2408647A8, (uint64_t)(&v163 - 4), v148);
  swift_bridgeObjectRelease();
  uint64_t v151 = v214;
  if (*(void *)(v214 + 16) && (uint64_t v152 = *(void *)(v150 + 16)) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v153 = (uint64_t *)(v150 + 40);
    do
    {
      uint64_t v154 = *(v153 - 1);
      uint64_t v155 = *v153;
      swift_bridgeObjectRetain();
      sub_240913490(v154, v155);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v153 += 2;
      --v152;
    }
    while (v152);
    swift_bridgeObjectRelease_n();
    uint64_t v151 = v214;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  size_t v156 = sub_2408741E4(v148);
  swift_bridgeObjectRelease();
  uint64_t v157 = sub_24085D2A0(v156, v165, v203, v166);
  swift_release();
  swift_bridgeObjectRelease();
  sub_240873F5C(v151);
  swift_bridgeObjectRelease();
  uint64_t v158 = sub_240864A68();
  swift_release();
  sub_24082E9CC(0, &qword_26AFCDFD0, (uint64_t (*)(uint64_t))sub_2408418D4, MEMORY[0x263F8E0F8]);
  uint64_t v159 = swift_allocObject();
  *(_OWORD *)(v159 + 16) = xmmword_2409562B0;
  *(void *)(v159 + 32) = v157;
  *(void *)(v159 + 40) = v158;
  v213[0] = v159;
  sub_2409549B8();
  sub_2408418D4();
  sub_24082E9CC(0, &qword_26AFCDE88, (uint64_t (*)(uint64_t))sub_2408418D4, MEMORY[0x263F8D488]);
  sub_2408645D8();
  sub_240864D20();
  swift_retain();
  swift_retain();
  uint64_t v160 = v168;
  sub_2409542C8();
  sub_240864DA8();
  uint64_t v161 = v170;
  uint64_t v162 = sub_240954498();
  swift_release();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v169 + 8))(v160, v161);
  *uint64_t v171 = v162;
  return result;
}

unint64_t sub_24085CC8C(uint64_t a1)
{
  sub_24082E9CC(0, qword_26AFCCF80, type metadata accessor for SharedConceptFeedItemData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v27 - v4;
  uint64_t v31 = type metadata accessor for SharedConceptFeedItemData(0);
  uint64_t v6 = *(void *)(v31 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v31);
  uint64_t v30 = (uint64_t)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v29 = (uint64_t)v27 - v9;
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    return MEMORY[0x263F8EE78];
  }
  v27[2] = v1;
  uint64_t v11 = *(void *)(sub_2409521B8() - 8);
  uint64_t v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v28 = v6;
  uint64_t v13 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v14 = *(void *)(v11 + 72);
  v27[1] = a1;
  uint64_t v15 = swift_bridgeObjectRetain();
  unint64_t v16 = MEMORY[0x263F8EE78];
  do
  {
    uint64_t v17 = (void *)MEMORY[0x245601B40](v15);
    uint64_t v18 = sub_2409521A8();
    unint64_t v20 = v19;
    uint64_t v21 = sub_240952188();
    sub_2408848CC(v18, v20, v21, v22, v5);
    if ((*v13)(v5, 1, v31) == 1)
    {
      uint64_t v15 = sub_2408662A8((uint64_t)v5, qword_26AFCCF80, type metadata accessor for SharedConceptFeedItemData);
    }
    else
    {
      uint64_t v23 = v29;
      sub_240865A20((uint64_t)v5, v29);
      sub_240865A20(v23, v30);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v16 = sub_2408C2924(0, *(void *)(v16 + 16) + 1, 1, v16);
      }
      unint64_t v25 = *(void *)(v16 + 16);
      unint64_t v24 = *(void *)(v16 + 24);
      if (v25 >= v24 >> 1) {
        unint64_t v16 = sub_2408C2924(v24 > 1, v25 + 1, 1, v16);
      }
      *(void *)(v16 + 16) = v25 + 1;
      uint64_t v15 = sub_240865A20(v30, v16+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v25);
    }
    v12 += v14;
    --v10;
  }
  while (v10);
  swift_bridgeObjectRelease();
  return v16;
}

unint64_t sub_24085CFB8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_240951E78();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  unint64_t v39 = (char *)v33 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v38 = (char *)v33 - v11;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v13 = v5 + 16;
  unint64_t v35 = (*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64);
  uint64_t v36 = v14;
  uint64_t v15 = a1 + v35;
  uint64_t v16 = *(void *)(v13 + 56);
  v33[2] = v2;
  uint64_t v34 = v16;
  uint64_t v17 = (void (**)(char *, char *, uint64_t))(v13 + 16);
  v33[1] = a1;
  swift_bridgeObjectRetain();
  unint64_t v18 = MEMORY[0x263F8EE78];
  uint64_t v37 = v13;
  unint64_t v19 = v39;
  do
  {
    unint64_t v40 = v18;
    uint64_t v43 = v12;
    v36(v19, v15, v4);
    uint64_t v20 = sub_2409520D8();
    uint64_t v22 = v21;
    uint64_t v23 = v17;
    uint64_t v24 = v4;
    unint64_t v25 = v8;
    uint64_t v26 = (void (*)(char *, void))sub_240951E38();
    swift_bridgeObjectRetain();
    sub_240940118(&v41, v20, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v26(v42, 0);
    uint64_t v8 = v25;
    uint64_t v4 = v24;
    uint64_t v17 = v23;
    unint64_t v18 = v40;
    uint64_t v27 = *v17;
    uint64_t v28 = v38;
    (*v17)(v38, v19, v4);
    v27(v8, v28, v4);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v18 = sub_2408C3044(0, *(void *)(v18 + 16) + 1, 1, v18);
    }
    unint64_t v30 = *(void *)(v18 + 16);
    unint64_t v29 = *(void *)(v18 + 24);
    if (v30 >= v29 >> 1) {
      unint64_t v18 = sub_2408C3044(v29 > 1, v30 + 1, 1, v18);
    }
    *(void *)(v18 + 16) = v30 + 1;
    uint64_t v31 = v34;
    v27((char *)(v18 + v35 + v30 * v34), v8, v4);
    v15 += v31;
    uint64_t v12 = v43 - 1;
  }
  while (v43 != 1);
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_24085D2A0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v106 = a4;
  uint64_t v126 = a3;
  uint64_t v110 = sub_240951FB8();
  uint64_t v109 = *(void *)(v110 - 8);
  MEMORY[0x270FA5388](v110);
  uint64_t v107 = v6;
  char v108 = (char *)&v103 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240865270();
  uint64_t v122 = v7;
  uint64_t v120 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v116 = (char *)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408653FC();
  uint64_t v123 = v9;
  uint64_t v121 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v117 = (char *)&v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24086559C(0, &qword_26AFCD9D8, (uint64_t (*)(uint64_t))sub_2408653FC, sub_24086561C, MEMORY[0x263EFDAA0]);
  uint64_t v119 = v11;
  uint64_t v118 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v114 = (char *)&v103 - v12;
  sub_240865338();
  uint64_t v115 = v13;
  uint64_t v113 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v112 = (char *)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240865650();
  uint64_t v104 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v105 = (char *)&v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v128 = (uint64_t)&v103 - v18;
  uint64_t v111 = sub_240951A28();
  uint64_t v130 = *(void *)(v111 - 8);
  MEMORY[0x270FA5388](v111);
  uint64_t v127 = (char *)&v103 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24082E9CC(0, qword_26AFCCF80, type metadata accessor for SharedConceptFeedItemData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v103 - v21;
  uint64_t v139 = type metadata accessor for SharedConceptFeedItemData(0);
  uint64_t v23 = *(void *)(v139 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v139);
  uint64_t v134 = (uint64_t *)((char *)&v103 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v133 = (uint64_t)&v103 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v136 = (uint64_t)&v103 - v28;
  sub_2409517C8();
  swift_allocObject();
  uint64_t v125 = sub_2409517B8();
  unint64_t v29 = sub_24085CC8C(a1);
  uint64_t v137 = 0;
  sub_240951798();
  swift_allocObject();
  uint64_t v30 = sub_240951788();
  uint64_t v31 = MEMORY[0x263F8EE88];
  *(void *)&v144[0] = MEMORY[0x263F8EE88];
  uint64_t v32 = *(void *)(a2 + 16);
  uint64_t v131 = v30;
  unint64_t v124 = v29;
  if (v32)
  {
    uint64_t v33 = *(void *)(sub_240951E78() - 8);
    uint64_t v34 = a2 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
    uint64_t v140 = *(void *)(v33 + 72);
    uint64_t v132 = v23;
    uint64_t v138 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
    uint64_t v135 = a2;
    uint64_t v35 = swift_bridgeObjectRetain();
    uint64_t v36 = v139;
    do
    {
      uint64_t v37 = (void *)MEMORY[0x245601B40](v35);
      uint64_t v38 = sub_240951E68();
      if (v39 >> 60 != 15)
      {
        uint64_t v40 = v38;
        unint64_t v41 = v39;
        sub_2408663E4(&qword_268C90A20, (void (*)(uint64_t))type metadata accessor for SharedConceptFeedItemData);
        uint64_t v42 = v36;
        uint64_t v43 = v137;
        sub_240951778();
        if (v43)
        {

          (*v138)(v22, 1, 1, v42);
          sub_240849C34(v40, v41);
          sub_2408662A8((uint64_t)v22, qword_26AFCCF80, type metadata accessor for SharedConceptFeedItemData);
          uint64_t v137 = 0;
        }
        else
        {
          uint64_t v137 = 0;
          (*v138)(v22, 0, 1, v42);
          uint64_t v44 = v136;
          sub_240865A20((uint64_t)v22, v136);
          uint64_t v45 = swift_bridgeObjectRetain();
          uint64_t v46 = sub_24093D510(v45);
          swift_bridgeObjectRelease();
          sub_24089DE4C(v46);
          sub_240849C34(v40, v41);
          sub_24083AED4(v44, type metadata accessor for SharedConceptFeedItemData);
        }
        uint64_t v36 = v42;
      }
      v34 += v140;
      --v32;
    }
    while (v32);
    swift_bridgeObjectRelease();
    uint64_t v47 = *(void *)&v144[0];
    unint64_t v29 = v124;
    uint64_t v23 = v132;
    uint64_t v31 = MEMORY[0x263F8EE88];
  }
  else
  {
    uint64_t v47 = MEMORY[0x263F8EE88];
    uint64_t v36 = v139;
  }
  uint64_t v143 = v31;
  uint64_t v138 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v29 + 16);
  if (v138)
  {
    uint64_t v136 = v29 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
    uint64_t v135 = *(void *)(v23 + 72);
    uint64_t v48 = swift_bridgeObjectRetain();
    uint64_t v49 = 0;
    uint64_t v132 = v47;
    do
    {
      uint64_t v50 = v136 + v135 * (void)v49;
      os_log_type_t v51 = (void *)MEMORY[0x245601B40](v48);
      uint64_t v52 = *(void *)(v50 + *(int *)(v36 + 48));
      sub_2408656BC();
      swift_bridgeObjectRetain();
      uint64_t v53 = sub_240954B68();
      uint64_t v142 = v53;
      uint64_t v54 = *(void *)(v52 + 16);
      if (v54)
      {
        uint64_t v140 = (uint64_t)v51;
        uint64_t v55 = 32;
        do
        {
          long long v56 = *(_OWORD *)(v52 + v55 + 16);
          v144[0] = *(_OWORD *)(v52 + v55);
          v144[1] = v56;
          long long v57 = *(_OWORD *)(v52 + v55 + 32);
          long long v58 = *(_OWORD *)(v52 + v55 + 48);
          long long v59 = *(_OWORD *)(v52 + v55 + 64);
          uint64_t v145 = *(void *)(v52 + v55 + 80);
          v144[3] = v58;
          v144[4] = v59;
          v144[2] = v57;
          sub_240865710((uint64_t)v144);
          sub_24094031C(&v141, (uint64_t *)v144);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v55 += 88;
          --v54;
        }
        while (v54);
        swift_bridgeObjectRelease();
        uint64_t v60 = v142;
        uint64_t v36 = v139;
        uint64_t v47 = v132;
        os_log_type_t v51 = (void *)v140;
      }
      else
      {
        uint64_t v60 = v53;
        swift_bridgeObjectRelease();
        uint64_t v36 = v139;
      }
      if (*(void *)(v47 + 16) <= *(void *)(v60 + 16) >> 3)
      {
        uint64_t v141 = v60;
        sub_240913120(v47);
        uint64_t v61 = v141;
      }
      else
      {
        uint64_t v61 = sub_240914BE0(v47, v60);
      }
      uint64_t v62 = *(void *)(v61 + 16);
      swift_bridgeObjectRelease();
      if (v62)
      {
        unint64_t v63 = v134;
        sub_24083D270(v50, (uint64_t)v134, type metadata accessor for SharedConceptFeedItemData);
        uint64_t v64 = v133;
        sub_2409412C0(v133, v63);
        sub_24083AED4(v64, type metadata accessor for SharedConceptFeedItemData);
      }
      uint64_t v49 = (void (**)(char *, uint64_t, uint64_t, uint64_t))((char *)v49 + 1);
    }
    while (v49 != v138);
    swift_bridgeObjectRelease();
    unint64_t v29 = v124;
    swift_bridgeObjectRelease();
    uint64_t v65 = v143;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v65 = MEMORY[0x263F8EE88];
  }
  sub_240951A18();
  uint64_t v66 = v104;
  uint64_t v67 = v128;
  uint64_t v139 = v128 + *(int *)(v104 + 48);
  uint64_t v140 = v128 + *(int *)(v104 + 64);
  sub_240951978();
  sub_240951988();
  sub_240951998();
  int v68 = (void (*)(void, void, void))sub_240874064(v65);
  swift_bridgeObjectRelease();
  uint64_t v69 = v125;
  uint64_t v70 = v126;
  uint64_t v71 = sub_2408DC26C(v68, v125, v126, v106);
  swift_release();
  uint64_t v141 = v71;
  uint64_t v143 = sub_24085E3D8(v29, v69, v70);
  uint64_t v72 = (uint64_t)v105;
  uint64_t v73 = (uint64_t)&v105[*(int *)(v66 + 48)];
  uint64_t v74 = (uint64_t)&v105[*(int *)(v66 + 64)];
  uint64_t v75 = v130;
  uint64_t v76 = *(void (**)(char *, uint64_t, uint64_t))(v130 + 16);
  uint64_t v77 = v67;
  uint64_t v78 = v111;
  v76(v105, v77, v111);
  v76((char *)v73, v139, v78);
  v76((char *)v74, v140, v78);
  uint64_t v79 = v126;
  uint64_t v80 = sub_24085E96C(v29, v72, v73, v74, v69, v126);
  swift_bridgeObjectRelease();
  uint64_t v81 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
  uint64_t v130 = v75 + 8;
  uint64_t v140 = (uint64_t)v81;
  v81(v74, v78);
  v81(v73, v78);
  v81(v72, v78);
  uint64_t v142 = v80;
  unint64_t v82 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_240841A78(0, &qword_26AFCDC88, MEMORY[0x263EFDCF0]);
  uint64_t v139 = MEMORY[0x263EFDCF8];
  sub_240841C6C((unint64_t *)&qword_26AFCDC80, &qword_26AFCDC88, v82);
  uint64_t v83 = v112;
  sub_240954138();
  uint64_t v84 = v109;
  uint64_t v85 = v108;
  uint64_t v86 = v79;
  uint64_t v87 = v110;
  (*(void (**)(char *, uint64_t, uint64_t))(v109 + 16))(v108, v86, v110);
  unint64_t v88 = (*(unsigned __int8 *)(v84 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
  unint64_t v89 = (v107 + v88 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v90 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v84 + 32))(v90 + v88, v85, v87);
  uint64_t v91 = v129;
  *(void *)(v90 + v89) = v129;
  *(void *)(v90 + ((v89 + 15) & 0xFFFFFFFFFFFFFFF8)) = v91;
  uint64_t v92 = swift_allocObject();
  *(void *)(v92 + 16) = sub_240865828;
  *(void *)(v92 + 24) = v90;
  sub_24083FEAC(0, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F8D488]);
  sub_2408663E4(&qword_26AFCD9A0, (void (*)(uint64_t))sub_240865338);
  int v93 = v116;
  uint64_t v94 = v115;
  sub_240954548();
  swift_release();
  *(void *)(swift_allocObject() + 16) = v91;
  uint64_t v95 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_240865508(0, &qword_26AFCDCB8, MEMORY[0x263EFDCF0]);
  sub_2408663E4(&qword_26AFCDAF8, (void (*)(uint64_t))sub_240865270);
  sub_240865A84(&qword_26AFCDCB0, &qword_26AFCDCB8, v95);
  uint64_t v96 = v117;
  uint64_t v97 = v122;
  sub_240954508();
  swift_release();
  (*(void (**)(char *, uint64_t))(v120 + 8))(v93, v97);
  uint64_t v141 = MEMORY[0x263F8EE78];
  sub_24086561C();
  uint64_t v98 = v114;
  uint64_t v99 = v123;
  sub_2409544C8();
  (*(void (**)(char *, uint64_t))(v121 + 8))(v96, v99);
  sub_240865984();
  uint64_t v100 = v119;
  uint64_t v101 = sub_240954498();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v118 + 8))(v98, v100);
  (*(void (**)(char *, uint64_t))(v113 + 8))(v83, v94);
  sub_24083AED4(v128, (uint64_t (*)(void))sub_240865650);
  ((void (*)(char *, uint64_t))v140)(v127, v78);
  return v101;
}

uint64_t sub_24085E3D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v37 = a3;
  uint64_t v36 = a2;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263EFDDF8];
  sub_24082E9CC(0, &qword_26AFCDDD0, (uint64_t (*)(uint64_t))sub_240840084, MEMORY[0x263EFDDF8]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v33 - v8;
  sub_24082E9CC(0, &qword_26AFCDDC8, (uint64_t (*)(uint64_t))sub_240865B08, v4);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v33 - v13;
  sub_240841A78(0, &qword_26AFCDFE0, MEMORY[0x263EFDEA0]);
  uint64_t v39 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v33 - v17;
  sub_240865B3C();
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16) < 0xBuLL)
  {
    uint64_t v40 = MEMORY[0x263F8EE78];
    sub_240840084(0);
    sub_2409543A8();
    sub_24083F3C0();
    sub_240954368();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_240841C6C((unint64_t *)&qword_26AFCDFD8, &qword_26AFCDFE0, MEMORY[0x263EFDEA0]);
    uint64_t v31 = v39;
    uint64_t v30 = sub_240954498();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v31);
  }
  else
  {
    uint64_t v40 = a1;
    uint64_t v34 = v20;
    uint64_t v35 = v21;
    sub_240865B08(0);
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_2409543A8();
    MEMORY[0x270FA5388](v24);
    uint64_t v25 = v38;
    uint64_t v26 = v36;
    *(&v33 - 4) = v38;
    *(&v33 - 3) = v26;
    *(&v33 - 2) = v37;
    sub_240840084(0);
    sub_240954388();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    *(void *)(swift_allocObject() + 16) = v25;
    uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_240841A78(0, &qword_26AFCDC88, MEMORY[0x263EFDCF0]);
    sub_240841C6C((unint64_t *)&qword_26AFCDFD8, &qword_26AFCDFE0, MEMORY[0x263EFDEA0]);
    sub_240841C6C((unint64_t *)&qword_26AFCDC80, &qword_26AFCDC88, v27);
    uint64_t v28 = v39;
    sub_240954508();
    swift_release();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v28);
    sub_2408663E4(&qword_26AFCDAD8, (void (*)(uint64_t))sub_240865B3C);
    uint64_t v29 = v34;
    uint64_t v30 = sub_240954498();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v23, v29);
  }
  return v30;
}

uint64_t sub_24085E96C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v50 = a5;
  uint64_t v51 = a6;
  uint64_t v43 = a3;
  uint64_t v42 = a2;
  uint64_t v40 = a1;
  sub_24082E9CC(0, &qword_26AFCDDC8, (uint64_t (*)(uint64_t))sub_240865B08, MEMORY[0x263EFDDF8]);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v46 = v7;
  uint64_t v47 = v8;
  MEMORY[0x270FA5388](v7);
  unint64_t v41 = (char *)&v39 - v9;
  uint64_t v52 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDEA0];
  sub_240841A78(0, &qword_26AFCDFE0, MEMORY[0x263EFDEA0]);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v53 = v10;
  uint64_t v54 = v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v44 = (char *)&v39 - v12;
  sub_240865B3C();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v55 = v13;
  uint64_t v56 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v49 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240865650();
  uint64_t v17 = v16 - 8;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v39 - v21;
  uint64_t v23 = (char *)&v39 + *(int *)(v17 + 56) - v21;
  uint64_t v39 = (char *)&v39 + *(int *)(v17 + 72) - v21;
  uint64_t v24 = v39;
  uint64_t v25 = sub_240951A28();
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16);
  uint64_t v45 = v22;
  v26(v22, v42, v25);
  v26(v23, v43, v25);
  v26(v24, a4, v25);
  uint64_t v61 = v40;
  sub_240865B08(0);
  swift_bridgeObjectRetain();
  uint64_t v27 = v41;
  sub_2409543A8();
  uint64_t v28 = &v20[*(int *)(v17 + 56)];
  uint64_t v29 = &v20[*(int *)(v17 + 72)];
  v26(v20, (uint64_t)v22, v25);
  v26(v28, (uint64_t)v23, v25);
  v26(v29, (uint64_t)v39, v25);
  uint64_t v30 = v48;
  uint64_t v57 = v48;
  long long v58 = v20;
  uint64_t v59 = v50;
  uint64_t v60 = v51;
  sub_240840084(0);
  uint64_t v31 = v44;
  uint64_t v32 = v46;
  sub_240954388();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v27, v32);
  sub_24083AED4((uint64_t)v20, (uint64_t (*)(void))sub_240865650);
  *(void *)(swift_allocObject() + 16) = v30;
  uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_240841A78(0, &qword_26AFCDC88, MEMORY[0x263EFDCF0]);
  sub_240841C6C((unint64_t *)&qword_26AFCDFD8, &qword_26AFCDFE0, v52);
  sub_240841C6C((unint64_t *)&qword_26AFCDC80, &qword_26AFCDC88, v33);
  uint64_t v34 = v49;
  uint64_t v35 = v53;
  sub_240954508();
  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v31, v35);
  sub_2408663E4(&qword_26AFCDAD8, (void (*)(uint64_t))sub_240865B3C);
  uint64_t v36 = v55;
  uint64_t v37 = sub_240954498();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v34, v36);
  sub_24083AED4((uint64_t)v45, (uint64_t (*)(void))sub_240865650);
  return v37;
}

double sub_24085EF18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v70 = a3;
  uint64_t v78 = a1;
  uint64_t v6 = sub_240951FB8();
  uint64_t v72 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v73 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2409540C8();
  uint64_t v74 = *(void *)(v8 - 8);
  uint64_t v75 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2409525A8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_2409528B8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = a2;
  uint64_t v19 = *(void *)(a2 + 16);
  uint64_t v76 = v10;
  uint64_t v77 = a4;
  if (v19)
  {
    uint64_t v20 = (char *)MEMORY[0x263F8EE78];
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x263F45FE8], v15);
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F45E90], v11);
    uint64_t v21 = (void *)sub_240951F68();
    uint64_t v22 = sub_240953288();
    uint64_t v68 = v23;
    uint64_t v69 = v22;

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    uint64_t v20 = (char *)sub_2408C296C(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v25 = *((void *)v20 + 2);
    unint64_t v24 = *((void *)v20 + 3);
    if (v25 >= v24 >> 1) {
      uint64_t v20 = (char *)sub_2408C296C((void *)(v24 > 1), v25 + 1, 1, v20);
    }
    *((void *)v20 + 2) = v25 + 1;
    uint64_t v26 = &v20[16 * v25];
    uint64_t v27 = v68;
    *((void *)v26 + 4) = v69;
    *((void *)v26 + 5) = v27;
    uint64_t v10 = v76;
  }
  if (*(void *)(v78 + 16))
  {
    uint64_t v28 = v73;
    uint64_t v73 = v20;
    if (!v19) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v69 = v6;
    uint64_t v29 = v20;
    (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x263F45FE8], v15);
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F45E90], v11);
    uint64_t v30 = (void *)sub_240951F68();
    uint64_t v31 = sub_240953278();
    uint64_t v68 = v32;

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v33 = v29;
    }
    else {
      uint64_t v33 = (char *)sub_2408C296C(0, *((void *)v29 + 2) + 1, 1, v29);
    }
    unint64_t v35 = *((void *)v33 + 2);
    unint64_t v34 = *((void *)v33 + 3);
    uint64_t v10 = v76;
    uint64_t v6 = v69;
    uint64_t v28 = v73;
    if (v35 >= v34 >> 1) {
      uint64_t v33 = (char *)sub_2408C296C((void *)(v34 > 1), v35 + 1, 1, v33);
    }
    *((void *)v33 + 2) = v35 + 1;
    uint64_t v36 = &v33[16 * v35];
    uint64_t v37 = v68;
    *((void *)v36 + 4) = v31;
    *((void *)v36 + 5) = v37;
    uint64_t v73 = v33;
    if (!v19) {
      goto LABEL_15;
    }
  }
  uint64_t v38 = (void *)sub_240951F68();
  uint64_t v39 = (void *)sub_240951C98();
  char v40 = sub_240951C88();

  if (v40)
  {
LABEL_15:
    unint64_t v41 = swift_bridgeObjectRetain();
    goto LABEL_17;
  }
  unint64_t v41 = sub_24085CFB8(v70);
LABEL_17:
  uint64_t v79 = v41;
  uint64_t v42 = v72;
  uint64_t v43 = swift_bridgeObjectRetain();
  sub_2408FF07C(v43);
  uint64_t v44 = swift_bridgeObjectRetain();
  sub_2408FF07C(v44);
  uint64_t v45 = v79;
  sub_240954058();
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v28, v77, v6);
  swift_bridgeObjectRetain_n();
  uint64_t v46 = sub_2409540B8();
  os_log_type_t v47 = sub_240954C08();
  int v48 = v47;
  if (os_log_type_enabled(v46, v47))
  {
    uint64_t v49 = swift_slowAlloc();
    uint64_t v78 = swift_slowAlloc();
    v80[0] = v78;
    *(_DWORD *)uint64_t v49 = 136446722;
    LODWORD(v77) = v48;
    uint64_t v79 = sub_240864E84(0);
    sub_240864EA4(0, &qword_26AFCD6F0, (void (*)(uint64_t))sub_240864E84);
    uint64_t v50 = sub_2409547E8();
    uint64_t v79 = sub_2408370E4(v50, v51, v80);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v49 + 12) = 2082;
    uint64_t v72 = v49 + 14;
    uint64_t v52 = (void *)sub_240951F68();
    uint64_t v53 = (void *)sub_240951C68();

    uint64_t v79 = (uint64_t)v53;
    sub_24082E9CC(0, (unint64_t *)&qword_26AFCDF08, (uint64_t (*)(uint64_t))sub_240865AC8, MEMORY[0x263F8D8F0]);
    id v54 = v53;
    sub_240955658();
    id v55 = (id)HKSensitiveLogItem();
    uint64_t v56 = v28;
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v57 = sub_2409547E8();
    unint64_t v59 = v58;

    uint64_t v79 = sub_2408370E4(v57, v59, v80);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v56, v6);
    *(_WORD *)(v49 + 22) = 2082;
    uint64_t v79 = v45;
    sub_240840084(0);
    swift_bridgeObjectRetain_n();
    sub_240955658();
    id v60 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v61 = sub_2409547E8();
    unint64_t v63 = v62;
    swift_bridgeObjectRelease();
    uint64_t v79 = sub_2408370E4(v61, v63, v80);
    sub_2409550B8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v46, (os_log_type_t)v77, "[%{public}s]: for profile: %{public}s, generated new feed items: %{public}s", (uint8_t *)v49, 0x20u);
    uint64_t v64 = v78;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v64, -1, -1);
    MEMORY[0x2456021C0](v49, -1, -1);

    (*(void (**)(char *, uint64_t))(v74 + 8))(v76, v75);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v28, v6);

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v10, v75);
  }
  sub_24083FEAC(0, &qword_26AFCDFB0, MEMORY[0x263F8E0F8]);
  uint64_t v65 = swift_allocObject();
  *(void *)&double result = 2;
  *(_OWORD *)(v65 + 16) = xmmword_2409562B0;
  *(void *)(v65 + 32) = v45;
  *(void *)(v65 + 40) = 0;
  *(void *)(v65 + 48) = 0;
  *(void *)(v65 + 56) = 0;
  *(unsigned char *)(v65 + 64) = 0;
  *(void *)(v65 + 72) = v73;
  *(void *)(v65 + 80) = 0;
  *(void *)(v65 + 88) = 0;
  *(void *)(v65 + 96) = 0;
  *(unsigned char *)(v65 + 104) = 32;
  return result;
}

uint64_t sub_24085F810@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_240864F38();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v43 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240865508(0, &qword_268C90A28, MEMORY[0x263EFDEA0]);
  uint64_t v9 = v8;
  uint64_t v44 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v42 = sub_2409540C8();
  uint64_t v12 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  sub_240954058();
  id v16 = v15;
  id v17 = v15;
  uint64_t v18 = sub_2409540B8();
  os_log_type_t v19 = sub_240954C18();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v38 = v6;
    uint64_t v21 = v20;
    uint64_t v37 = swift_slowAlloc();
    uint64_t v46 = v37;
    *(_DWORD *)uint64_t v21 = 136446466;
    uint64_t v39 = v9;
    uint64_t v45 = sub_240864E84(0);
    sub_240864EA4(0, &qword_26AFCD6F0, (void (*)(uint64_t))sub_240864E84);
    unint64_t v41 = a2;
    uint64_t v22 = sub_2409547E8();
    uint64_t v40 = v5;
    uint64_t v45 = sub_2408370E4(v22, v23, &v46);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    uint64_t v36 = v21 + 14;
    uint64_t v45 = (uint64_t)v15;
    id v24 = v15;
    id v25 = v15;
    sub_24083F3C0();
    sub_240955658();
    id v26 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v27 = sub_2409547E8();
    unint64_t v29 = v28;

    uint64_t v30 = v27;
    uint64_t v9 = v39;
    uint64_t v45 = sub_2408370E4(v30, v29, &v46);
    sub_2409550B8();
    a2 = v41;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240818000, v18, v19, "[%{public}s] Unable to compute desired feed item difference based on sharable model change for commit: %{public}s", (uint8_t *)v21, 0x16u);
    uint64_t v31 = v37;
    uint64_t v5 = v40;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v31, -1, -1);
    uint64_t v32 = v21;
    uint64_t v6 = v38;
    MEMORY[0x2456021C0](v32, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v42);
  uint64_t v45 = MEMORY[0x263F8EE78];
  sub_24083FEAC(0, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F8D488]);
  uint64_t v33 = v43;
  sub_2409543A8();
  sub_24083F3C0();
  sub_240954368();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v33, v5);
  sub_240865A84(&qword_268C90A30, &qword_268C90A28, MEMORY[0x263EFDEA0]);
  uint64_t v34 = sub_240954498();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v11, v9);
  *a2 = v34;
  return result;
}

uint64_t sub_24085FD24@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v143 = a4;
  uint64_t v140 = a3;
  uint64_t v142 = a2;
  uint64_t v139 = a5;
  uint64_t v6 = sub_240951FB8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v127 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = sub_2409540C8();
  uint64_t v130 = *(void *)(v131 - 8);
  MEMORY[0x270FA5388](v131);
  uint64_t v11 = (char *)&v127 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24082E9CC(0, &qword_26AFD03B8, MEMORY[0x263F45630], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v141 = (uint64_t)&v127 - v14;
  uint64_t v138 = sub_240951E78();
  uint64_t v137 = *(void *)(v138 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v138);
  uint64_t v128 = (char *)&v127 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v129 = (char *)&v127 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v127 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v136 = (char *)&v127 - v22;
  uint64_t v155 = sub_240951A28();
  uint64_t v148 = *(void *)(v155 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v155);
  uint64_t v152 = (char *)&v127 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  os_log_t v151 = (os_log_t)((char *)&v127 - v26);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v146 = (char *)&v127 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v147 = (char *)&v127 - v30;
  MEMORY[0x270FA5388](v29);
  uint64_t v144 = (char *)&v127 - v31;
  sub_24082E9CC(0, &qword_26AFCD978, MEMORY[0x263F45780], v12);
  uint64_t v33 = MEMORY[0x270FA5388](v32 - 8);
  uint64_t v150 = (char *)&v127 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v36 = (char *)&v127 - v35;
  uint64_t v159 = type metadata accessor for SharedConceptFeedItemData(0);
  uint64_t v156 = *(void *)(v159 - 8);
  uint64_t v37 = MEMORY[0x270FA5388](v159);
  uint64_t v153 = (uint64_t *)((char *)&v127 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v149 = (void (*)(char *, uint64_t, uint64_t))((char *)&v127 - v40);
  MEMORY[0x270FA5388](v39);
  uint64_t v42 = (char *)&v127 - v41;
  uint64_t v43 = *a1;
  uint64_t v44 = MEMORY[0x263F8EE78];
  uint64_t v160 = MEMORY[0x263F8EE78];
  uint64_t v45 = *(void *)(v43 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v158 = (void (*)(unint64_t, char *, uint64_t))result;
  uint64_t v134 = v11;
  uint64_t v133 = v6;
  uint64_t v132 = v7;
  uint64_t v157 = v21;
  uint64_t v135 = v9;
  if (v45)
  {
    unint64_t v47 = 0;
    while (1)
    {
      if (v47 >= *(void *)(result + 16))
      {
        __break(1u);
        return result;
      }
      unint64_t v48 = (*(unsigned __int8 *)(v156 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v156 + 80);
      uint64_t v49 = *(void *)(v156 + 72);
      sub_24083D270(result + v48 + v49 * v47, (uint64_t)v42, type metadata accessor for SharedConceptFeedItemData);
      sub_240866350((uint64_t)&v42[*(int *)(v159 + 52)], (uint64_t)v36);
      uint64_t v50 = sub_240952258();
      uint64_t v51 = *(void *)(v50 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v36, 1, v50) == 1)
      {
        sub_2408662A8((uint64_t)v36, &qword_26AFCD978, MEMORY[0x263F45780]);
      }
      else
      {
        uint64_t v154 = v49;
        uint64_t v52 = v36;
        uint64_t v53 = v42;
        uint64_t v54 = v45;
        id v55 = v150;
        sub_240952248();
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v55, 0, 1, v50);
        char v56 = sub_240952238();
        uint64_t v57 = (uint64_t)v55;
        uint64_t v45 = v54;
        uint64_t v42 = v53;
        uint64_t v36 = v52;
        sub_2408662A8(v57, &qword_26AFCD978, MEMORY[0x263F45780]);
        (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v50);
        if (v56)
        {
          sub_240865A20((uint64_t)v42, (uint64_t)v149);
          uint64_t v58 = v160;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_240875C38(0, *(void *)(v58 + 16) + 1, 1);
            uint64_t v58 = v160;
          }
          unint64_t v60 = *(void *)(v58 + 16);
          unint64_t v59 = *(void *)(v58 + 24);
          if (v60 >= v59 >> 1)
          {
            sub_240875C38(v59 > 1, v60 + 1, 1);
            uint64_t v58 = v160;
          }
          *(void *)(v58 + 16) = v60 + 1;
          sub_240865A20((uint64_t)v149, v58 + v48 + v60 * v154);
          goto LABEL_5;
        }
      }
      sub_24083AED4((uint64_t)v42, type metadata accessor for SharedConceptFeedItemData);
LABEL_5:
      ++v47;
      uint64_t v21 = v157;
      uint64_t result = (uint64_t)v158;
      if (v45 == v47)
      {
        uint64_t v44 = v160;
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v61 = v148;
  unint64_t v62 = (void (*)(void, void, void))v153;
  if (*(void *)(v44 + 16))
  {
    uint64_t v149 = (void (*)(char *, uint64_t, uint64_t))v44;
    unint64_t v63 = v147;
    uint64_t v64 = v155;
    sub_240951958();
    uint64_t v65 = *(char **)(v61 + 16);
    uint64_t v154 = v61 + 16;
    uint64_t v150 = v65;
    ((void (*)(char *, char *, uint64_t))v65)(v146, v63, v64);
    if (v45)
    {
      uint64_t v66 = (uint64_t)v158
          + ((*(unsigned __int8 *)(v156 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v156 + 80));
      uint64_t v156 = *(void *)(v156 + 72);
      uint64_t v67 = (void (**)(char *, uint64_t))(v61 + 8);
      uint64_t v68 = (void (**)(os_log_t, char *, uint64_t))(v61 + 32);
      swift_bridgeObjectRetain();
      uint64_t v127 = (v61 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      uint64_t v69 = v146;
      do
      {
        sub_24083D270(v66, (uint64_t)v62, type metadata accessor for SharedConceptFeedItemData);
        uint64_t v75 = v152;
        sub_2409519D8();
        if (sub_2409519B8())
        {
          os_log_t v72 = v151;
          uint64_t v76 = v75;
          uint64_t v71 = v155;
          (*v68)(v151, v76, v155);
        }
        else
        {
          uint64_t v70 = v75;
          uint64_t v71 = v155;
          (*v67)(v70, v155);
          os_log_t v72 = v151;
          ((void (*)(os_log_t, char *, uint64_t))v150)(v151, v69, v71);
        }
        unint64_t v62 = (void (*)(void, void, void))v153;
        sub_24083AED4((uint64_t)v153, type metadata accessor for SharedConceptFeedItemData);
        (*v67)(v69, v71);
        uint64_t v73 = v71;
        uint64_t v74 = *v68;
        (*v68)((os_log_t)v69, (char *)v72, v73);
        v66 += v156;
        --v45;
      }
      while (v45);
      swift_bridgeObjectRelease();
      uint64_t v77 = v148;
      uint64_t v79 = v143;
      uint64_t v78 = (uint64_t)v144;
      uint64_t v21 = v157;
      uint64_t v80 = v140;
      uint64_t v81 = v69;
    }
    else
    {
      uint64_t v77 = v61;
      uint64_t v74 = *(void (**)(os_log_t, char *, uint64_t))(v61 + 32);
      uint64_t v79 = v143;
      uint64_t v78 = (uint64_t)v144;
      uint64_t v80 = v140;
      uint64_t v81 = v146;
    }
    uint64_t v82 = v155;
    v74((os_log_t)v78, v81, v155);
    uint64_t v85 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
    uint64_t v84 = v77 + 8;
    uint64_t v83 = v85;
    v85((uint64_t)v147, v82);
    uint64_t v86 = v141;
    uint64_t v87 = v145;
    sub_240860D5C(v149, v78, v80, v79, v141);
    if (v87)
    {
      v83(v78, v82);
      return swift_release();
    }
    else
    {
      uint64_t v159 = (uint64_t)v83;
      uint64_t v148 = v84;
      swift_release();
      uint64_t v88 = v137;
      uint64_t v89 = v138;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v137 + 48))(v86, 1, v138) == 1)
      {
        sub_2408662A8(v86, &qword_26AFD03B8, MEMORY[0x263F45630]);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v159)(v144, v155);
        *uint64_t v139 = MEMORY[0x263F8EE78];
      }
      else
      {
        uint64_t v145 = 0;
        uint64_t v90 = *(void (**)(char *, uint64_t, uint64_t))(v88 + 32);
        uint64_t v91 = v136;
        uint64_t v156 = v88 + 32;
        v90(v136, v86, v89);
        uint64_t v92 = v134;
        sub_240954058();
        uint64_t v93 = v132;
        uint64_t v94 = v133;
        (*(void (**)(char *, uint64_t, uint64_t))(v132 + 16))(v135, v143, v133);
        uint64_t v95 = v88;
        uint64_t v153 = *(uint64_t **)(v88 + 16);
        ((void (*)(char *, char *, uint64_t))v153)(v21, v91, v89);
        uint64_t v96 = v89;
        uint64_t v97 = sub_2409540B8();
        os_log_type_t v98 = sub_240954C08();
        LODWORD(v154) = v98;
        BOOL v99 = os_log_type_enabled(v97, v98);
        uint64_t v158 = (void (*)(unint64_t, char *, uint64_t))v90;
        if (v99)
        {
          uint64_t v100 = swift_slowAlloc();
          uint64_t v152 = (char *)swift_slowAlloc();
          uint64_t v161 = v152;
          *(_DWORD *)uint64_t v100 = 136446722;
          os_log_t v151 = v97;
          uint64_t v160 = sub_240864E84(0);
          sub_240864EA4(0, &qword_26AFCD6F0, (void (*)(uint64_t))sub_240864E84);
          uint64_t v101 = sub_2409547E8();
          uint64_t v160 = sub_2408370E4(v101, v102, (uint64_t *)&v161);
          sub_2409550B8();
          swift_bridgeObjectRelease();
          *(_WORD *)(v100 + 12) = 2082;
          uint64_t v150 = (char *)(v100 + 14);
          uint64_t v103 = v135;
          uint64_t v104 = (void *)sub_240951F68();
          uint64_t v105 = (void *)sub_240951C68();

          uint64_t v160 = (uint64_t)v105;
          sub_24082E9CC(0, (unint64_t *)&qword_26AFCDF08, (uint64_t (*)(uint64_t))sub_240865AC8, MEMORY[0x263F8D8F0]);
          id v106 = v105;
          sub_240955658();
          id v107 = (id)HKSensitiveLogItem();
          uint64_t v108 = v93;
          swift_unknownObjectRelease();
          sub_240955138();
          swift_unknownObjectRelease();
          uint64_t v109 = sub_2409547E8();
          uint64_t v110 = v21;
          unint64_t v112 = v111;

          uint64_t v160 = sub_2408370E4(v109, v112, (uint64_t *)&v161);
          sub_2409550B8();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v108 + 8))(v103, v133);
          *(_WORD *)(v100 + 22) = 2082;
          uint64_t v150 = (char *)(v100 + 24);
          uint64_t v113 = v129;
          uint64_t v114 = v110;
          uint64_t v115 = (void (*)(char *, char *, uint64_t))v153;
          ((void (*)(char *, char *, uint64_t))v153)(v129, v114, v138);
          v115(v128, v113, v138);
          sub_240955658();
          id v116 = (id)HKSensitiveLogItem();
          swift_unknownObjectRelease();
          sub_240955138();
          swift_unknownObjectRelease();
          uint64_t v117 = sub_2409547E8();
          unint64_t v119 = v118;
          uint64_t v95 = v137;
          uint64_t v120 = *(void (**)(char *, uint64_t))(v137 + 8);
          uint64_t v121 = v113;
          uint64_t v96 = v138;
          v120(v121, v138);
          uint64_t v160 = sub_2408370E4(v117, v119, (uint64_t *)&v161);
          sub_2409550B8();
          swift_bridgeObjectRelease();
          v120(v157, v96);
          os_log_t v122 = v151;
          _os_log_impl(&dword_240818000, v151, (os_log_type_t)v154, "[%{public}s]: for profile: %{public}s, generated combo feed item: %{public}s", (uint8_t *)v100, 0x20u);
          uint64_t v123 = v152;
          swift_arrayDestroy();
          MEMORY[0x2456021C0](v123, -1, -1);
          MEMORY[0x2456021C0](v100, -1, -1);

          (*(void (**)(char *, uint64_t))(v130 + 8))(v134, v131);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v93 + 8))(v135, v94);
          (*(void (**)(char *, uint64_t))(v88 + 8))(v21, v96);

          (*(void (**)(char *, uint64_t))(v130 + 8))(v92, v131);
        }
        unint64_t v124 = (uint64_t (*)(char *, uint64_t))v159;
        sub_24082E9CC(0, &qword_26AFD05E0, MEMORY[0x263F45630], MEMORY[0x263F8E0F8]);
        unint64_t v125 = (*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80);
        uint64_t v126 = swift_allocObject();
        *(_OWORD *)(v126 + 16) = xmmword_240956800;
        v158(v126 + v125, v136, v96);
        uint64_t result = v124(v144, v155);
        *uint64_t v139 = v126;
      }
    }
  }
  else
  {
    uint64_t result = swift_release();
    *uint64_t v139 = MEMORY[0x263F8EE78];
  }
  return result;
}

void sub_240860D5C(void (*a1)(char *, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = (void *)MEMORY[0x245601B40]();
  sub_240861308(a1, a2, a4, a3, a5);
}

uint64_t sub_240860DE4@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24082E9CC(0, &qword_26AFCDDD0, (uint64_t (*)(uint64_t))sub_240840084, MEMORY[0x263EFDDF8]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v43 = (char *)&v36 - v7;
  sub_240841A78(0, &qword_26AFCDFE0, MEMORY[0x263EFDEA0]);
  uint64_t v9 = v8;
  uint64_t v44 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v42 = sub_2409540C8();
  uint64_t v12 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  sub_240954058();
  id v16 = v15;
  id v17 = v15;
  uint64_t v18 = sub_2409540B8();
  os_log_type_t v19 = sub_240954C18();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v38 = v6;
    uint64_t v21 = v20;
    uint64_t v37 = swift_slowAlloc();
    uint64_t v46 = v37;
    *(_DWORD *)uint64_t v21 = 136446466;
    uint64_t v41 = a2;
    uint64_t v45 = sub_240864E84(0);
    sub_240864EA4(0, &qword_26AFCD6F0, (void (*)(uint64_t))sub_240864E84);
    uint64_t v39 = v9;
    uint64_t v22 = sub_2409547E8();
    uint64_t v40 = v5;
    uint64_t v45 = sub_2408370E4(v22, v23, &v46);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    uint64_t v36 = v21 + 14;
    uint64_t v45 = (uint64_t)v15;
    id v24 = v15;
    id v25 = v15;
    sub_24083F3C0();
    sub_240955658();
    id v26 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v27 = sub_2409547E8();
    unint64_t v29 = v28;

    uint64_t v30 = v27;
    uint64_t v5 = v40;
    uint64_t v45 = sub_2408370E4(v30, v29, &v46);
    sub_2409550B8();
    uint64_t v9 = v39;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240818000, v18, v19, "[%{public}s] Unable to generate combo tile: %{public}s", (uint8_t *)v21, 0x16u);
    uint64_t v31 = v37;
    a2 = v41;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v31, -1, -1);
    uint64_t v32 = v21;
    uint64_t v6 = v38;
    MEMORY[0x2456021C0](v32, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v42);
  uint64_t v45 = MEMORY[0x263F8EE78];
  sub_240840084(0);
  uint64_t v33 = v43;
  sub_2409543A8();
  sub_24083F3C0();
  sub_240954368();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v33, v5);
  sub_240841C6C((unint64_t *)&qword_26AFCDFD8, &qword_26AFCDFE0, MEMORY[0x263EFDEA0]);
  uint64_t v34 = sub_240954498();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v11, v9);
  *a2 = v34;
  return result;
}

id sub_240861308@<X0>(void (*a1)(char *, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v116 = a2;
  uint64_t v112 = a4;
  uint64_t v115 = a3;
  unint64_t v119 = a1;
  uint64_t v107 = a5;
  uint64_t v93 = sub_240951E08();
  uint64_t v92 = *(void *)(v93 - 8);
  MEMORY[0x270FA5388](v93);
  uint64_t v91 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24082E9CC(0, &qword_268C90A48, MEMORY[0x263F45770], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  os_log_type_t v98 = (char *)&v85 - v7;
  uint64_t v114 = sub_240951A28();
  uint64_t v118 = *(void *)(v114 - 8);
  MEMORY[0x270FA5388](v114);
  uint64_t v97 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240951838();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v96 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_240952208();
  uint64_t v106 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_240951C08();
  uint64_t v94 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v95 = (char *)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for SharedConceptFeedItemData(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v122 = v16;
  uint64_t v123 = v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v120 = (uint64_t)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v85 - v20;
  uint64_t v22 = sub_240951E78();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v105 = (char *)&v85 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_2409525A8();
  uint64_t v110 = *(void *)(v25 - 8);
  uint64_t v111 = v25;
  MEMORY[0x270FA5388](v25);
  uint64_t v109 = (char *)&v85 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_2409528B8();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v108 = (char *)&v85 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v32 = (char *)&v85 - v31;
  uint64_t v33 = type metadata accessor for SharedConceptComboFeedItemData(0);
  uint64_t v34 = MEMORY[0x270FA5388](v33);
  uint64_t v113 = (uint64_t)&v85 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v37 = *(void *)(v35 + 16);
  if (!v37) {
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v107, 1, 1, v22);
  }
  uint64_t v102 = v34;
  uint64_t v88 = v14;
  uint64_t v86 = v23;
  uint64_t v87 = v22;
  uint64_t v89 = v13;
  uint64_t v90 = v11;
  int v38 = *MEMORY[0x263F45FE8];
  uint64_t v103 = v28;
  uint64_t v39 = *(void (**)(void))(v28 + 104);
  uint64_t v40 = v35;
  int64_t v41 = v37;
  LODWORD(v101) = v38;
  uint64_t v104 = v27;
  uint64_t v100 = v28 + 104;
  BOOL v99 = (void (*)(char *, void, uint64_t))v39;
  v39(v32);
  uint64_t v42 = v40 + ((*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80));
  uint64_t v123 = *(void *)(v123 + 72);
  swift_bridgeObjectRetain();
  uint64_t v43 = (void *)MEMORY[0x263F8EE78];
  uint64_t v85 = v42;
  int64_t v121 = v41;
  uint64_t v44 = v32;
  do
  {
    sub_24083D270(v42, (uint64_t)v21, type metadata accessor for SharedConceptFeedItemData);
    uint64_t v45 = &v21[*(int *)(v122 + 28)];
    uint64_t v46 = *(void *)v45;
    uint64_t v47 = *((void *)v45 + 1);
    swift_bridgeObjectRetain();
    sub_24083AED4((uint64_t)v21, type metadata accessor for SharedConceptFeedItemData);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v43 = sub_2408C296C(0, v43[2] + 1, 1, v43);
    }
    unint64_t v49 = v43[2];
    unint64_t v48 = v43[3];
    if (v49 >= v48 >> 1) {
      uint64_t v43 = sub_2408C296C((void *)(v48 > 1), v49 + 1, 1, v43);
    }
    v43[2] = v49 + 1;
    uint64_t v50 = &v43[2 * v49];
    v50[4] = v46;
    v50[5] = v47;
    v42 += v123;
    --v41;
  }
  while (v41);
  uint64_t v51 = v44;
  swift_bridgeObjectRelease();
  uint64_t v52 = v102;
  uint64_t v53 = v113;
  uint64_t v54 = (char *)(v113 + *(int *)(v102 + 24));
  id v55 = *(void (**)(char *, uint64_t, uint64_t))(v118 + 16);
  v118 += 16;
  unint64_t v119 = v55;
  v55(v54, v116, v114);
  uint64_t v57 = v103;
  uint64_t v56 = v104;
  (*(void (**)(uint64_t, char *, uint64_t))(v103 + 32))(v53, v51, v104);
  *(void *)(v53 + *(int *)(v52 + 20)) = v43;
  uint64_t v58 = v108;
  v99(v108, v101, v56);
  unint64_t v60 = v109;
  uint64_t v59 = v110;
  uint64_t v61 = v111;
  (*(void (**)(char *, void, uint64_t))(v110 + 104))(v109, *MEMORY[0x263F45E90], v111);
  unint64_t v62 = (void *)sub_240951F68();
  uint64_t v101 = sub_240953288();
  uint64_t v122 = v63;

  (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v56);
  sub_2408663E4(&qword_268C90A60, (void (*)(uint64_t))type metadata accessor for SharedConceptComboFeedItemData);
  uint64_t v64 = v117;
  sub_2409517A8();
  if (v64)
  {
    sub_24083AED4(v53, type metadata accessor for SharedConceptComboFeedItemData);
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v117 = 0;
    type metadata accessor for SharedConceptComboTileViewController();
    (*(void (**)(char *, void, uint64_t))(v94 + 104))(v95, *MEMORY[0x263F454D0], v88);
    sub_240951F68();
    sub_240951CC8();
    v119(v97, v116, v114);
    sub_240951828();
    uint64_t v66 = v89;
    sub_2409521E8();
    uint64_t v67 = v106;
    uint64_t v68 = v98;
    uint64_t v69 = v66;
    uint64_t v70 = v90;
    (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v98, v69, v90);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v68, 0, 1, v70);
    sub_240951DD8();
    id result = objc_msgSend(self, sel_categoryWithID_, 20);
    if (result)
    {
      uint64_t v71 = result;
      sub_240951DE8();

      sub_240951D68();
      uint64_t v124 = MEMORY[0x263F8EE78];
      sub_240875C88(0, v121, 0);
      uint64_t v72 = v92;
      uint64_t v73 = v124;
      uint64_t v74 = v93;
      uint64_t v75 = v91;
      uint64_t v76 = v85;
      do
      {
        uint64_t v77 = v120;
        sub_24083D270(v76, v120, type metadata accessor for SharedConceptFeedItemData);
        swift_bridgeObjectRetain();
        sub_240951DF8();
        sub_24083AED4(v77, type metadata accessor for SharedConceptFeedItemData);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_240875C88(0, *(void *)(v73 + 16) + 1, 1);
          uint64_t v73 = v124;
        }
        unint64_t v79 = *(void *)(v73 + 16);
        unint64_t v78 = *(void *)(v73 + 24);
        if (v79 >= v78 >> 1)
        {
          sub_240875C88(v78 > 1, v79 + 1, 1);
          uint64_t v73 = v124;
        }
        *(void *)(v73 + 16) = v79 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v72 + 32))(v73+ ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80))+ *(void *)(v72 + 72) * v79, v75, v74);
        uint64_t v124 = v73;
        v76 += v123;
        --v121;
      }
      while (v121);
      sub_24093D600(v73);
      swift_release();
      uint64_t v80 = v105;
      sub_240951E28();
      (*(void (**)(char *, uint64_t))(v106 + 8))(v89, v90);
      sub_24083AED4(v113, type metadata accessor for SharedConceptComboFeedItemData);
      uint64_t v81 = v86;
      uint64_t v82 = v107;
      uint64_t v83 = v80;
      uint64_t v84 = v87;
      (*(void (**)(uint64_t, char *, uint64_t))(v86 + 32))(v107, v83, v87);
      return (id)(*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v81 + 56))(v82, 0, 1, v84);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_240861F88@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X8>)
{
  uint64_t v27 = a4;
  uint64_t v28 = a5;
  uint64_t v26 = a2;
  uint64_t v24 = a6;
  sub_240865650();
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *a1;
  uint64_t v12 = *(int *)(v9 + 56);
  uint64_t v13 = &v11[v12];
  uint64_t v14 = *(int *)(v9 + 72);
  uint64_t v15 = &v11[v14];
  uint64_t v16 = a3 + v12;
  uint64_t v17 = a3 + v14;
  uint64_t v18 = sub_240951A28();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
  v19(v11, a3, v18);
  v19(v13, v16, v18);
  v19(v15, v17, v18);
  uint64_t v30 = v26;
  uint64_t v31 = v11;
  uint64_t v32 = v27;
  uint64_t v33 = v28;
  uint64_t v20 = v34;
  unint64_t v21 = sub_240865F14(v25, (void (*)(void))sub_240865CA0, (uint64_t)v29);
  uint64_t result = sub_24083AED4((uint64_t)v11, (uint64_t (*)(void))sub_240865650);
  if (!v20) {
    unint64_t *v24 = v21;
  }
  return result;
}

uint64_t sub_240862120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(void, void, void)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v30 = a5;
  uint64_t v27 = a1;
  uint64_t v28 = a4;
  uint64_t v26 = a6;
  sub_240865650();
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(int *)(v8 + 56);
  uint64_t v12 = (uint64_t)&v10[v11];
  uint64_t v13 = *(int *)(v8 + 72);
  uint64_t v14 = (uint64_t)&v10[v13];
  uint64_t v15 = a3 + v11;
  uint64_t v25 = a3 + v13;
  uint64_t v16 = sub_240951A28();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v18(v10, a3, v16);
  v18((char *)v12, v15, v16);
  v18((char *)v14, v25, v16);
  uint64_t v19 = v26;
  uint64_t v20 = v31;
  sub_240862354(v27, (uint64_t)v10, v12, v14, v28, v30, v26);
  if (v20)
  {
    unint64_t v21 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v21(v14, v16);
    v21(v12, v16);
    return ((uint64_t (*)(char *, uint64_t))v21)(v10, v16);
  }
  else
  {
    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v23(v14, v16);
    v23(v12, v16);
    v23((uint64_t)v10, v16);
    uint64_t v24 = sub_240951E78();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v19, 0, 1, v24);
  }
}

uint64_t sub_240862354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void (*a6)(void, void, void)@<X5>, uint64_t a7@<X8>)
{
  uint64_t v30 = a5;
  uint64_t v28 = a1;
  uint64_t v29 = a6;
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v27 = a7;
  sub_240865650();
  uint64_t v9 = v8 - 8;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v24 - v13;
  uint64_t v15 = (char *)&v24 + *(int *)(v9 + 56) - v13;
  uint64_t v16 = (char *)&v24 + *(int *)(v9 + 72) - v13;
  uint64_t v17 = sub_240951A28();
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
  v18(v14, a2, v17);
  v18(v15, v25, v17);
  v18(v16, v26, v17);
  uint64_t v19 = &v12[*(int *)(v9 + 56)];
  uint64_t v20 = &v12[*(int *)(v9 + 72)];
  v18(v12, (uint64_t)v14, v17);
  v18(v19, (uint64_t)v15, v17);
  uint64_t v21 = ((uint64_t (*)(char *, char *, uint64_t))v18)(v20, v16, v17);
  uint64_t v22 = (void *)MEMORY[0x245601B40](v21);
  sub_240862990(v28, v29, v31, v30, (uint64_t)v12, v27);
  sub_24083AED4((uint64_t)v14, (uint64_t (*)(void))sub_240865650);
  return sub_24083AED4((uint64_t)v12, (uint64_t (*)(void))sub_240865650);
}

uint64_t sub_240862550@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_240841A78(0, &qword_268C90A38, MEMORY[0x263EFDE08]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v32 - v7;
  uint64_t v37 = sub_2409540C8();
  uint64_t v9 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  sub_240954058();
  id v13 = v12;
  id v14 = v12;
  uint64_t v15 = sub_2409540B8();
  os_log_type_t v16 = sub_240954C18();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v35 = v5;
    uint64_t v18 = v17;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v39 = v33;
    *(_DWORD *)uint64_t v18 = 136446466;
    uint64_t v38 = sub_240864E84(0);
    sub_240864EA4(0, &qword_26AFCD6F0, (void (*)(uint64_t))sub_240864E84);
    uint64_t v34 = v6;
    uint64_t v19 = sub_2409547E8();
    uint64_t v36 = a2;
    uint64_t v38 = sub_2408370E4(v19, v20, &v39);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    v32[1] = v18 + 14;
    uint64_t v38 = (uint64_t)v12;
    id v21 = v12;
    id v22 = v12;
    sub_24083F3C0();
    sub_240955658();
    id v23 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v24 = sub_2409547E8();
    unint64_t v26 = v25;

    uint64_t v27 = v24;
    a2 = v36;
    uint64_t v38 = sub_2408370E4(v27, v26, &v39);
    sub_2409550B8();
    uint64_t v6 = v34;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240818000, v15, v16, "[%{public}s] Unable to generate sharing snippets: %{public}s", (uint8_t *)v18, 0x16u);
    uint64_t v28 = v33;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v28, -1, -1);
    uint64_t v29 = v18;
    uint64_t v5 = v35;
    MEMORY[0x2456021C0](v29, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v37);
  sub_240840084(0);
  sub_24083F3C0();
  sub_2409543B8();
  sub_240841C6C(&qword_268C90A40, &qword_268C90A38, MEMORY[0x263EFDE08]);
  uint64_t v30 = sub_240954498();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v30;
  return result;
}

id sub_240862990@<X0>(uint64_t a1@<X0>, void (*a2)(void, void, void)@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v143 = a5;
  uint64_t v134 = a4;
  os_log_t v151 = a3;
  uint64_t v162 = a2;
  uint64_t v144 = a6;
  sub_240865650();
  uint64_t v136 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v135 = (char *)v129 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24082E9CC(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v133 = (char *)v129 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v152 = (uint64_t)v129 - v13;
  uint64_t v139 = sub_240953DA8();
  uint64_t v138 = *(void *)(v139 - 8);
  MEMORY[0x270FA5388](v139);
  uint64_t v137 = (char *)v129 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24082E9CC(0, &qword_268C90A48, MEMORY[0x263F45770], v9);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v142 = (char *)v129 - v16;
  uint64_t v17 = sub_240951838();
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v141 = (char *)v129 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_240952208();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v156 = v19;
  uint64_t v157 = v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v155 = (char *)v129 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = sub_240951A28();
  uint64_t v163 = *(void (**)(char *, uint64_t))(v153 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v153);
  uint64_t v140 = (char *)v129 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v154 = (char *)v129 - v24;
  uint64_t v131 = sub_240951C08();
  uint64_t v130 = *(void *)(v131 - 8);
  MEMORY[0x270FA5388](v131);
  uint64_t v132 = (char *)v129 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_240951FB8();
  uint64_t v160 = *(char **)(v148 - 8);
  MEMORY[0x270FA5388](v148);
  uint64_t v147 = (char *)v129 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = type metadata accessor for SharedConceptFeedItemData(0);
  MEMORY[0x270FA5388](v164);
  uint64_t v150 = (uint64_t)v129 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
  sub_24082E9CC(0, &qword_26AFCD978, MEMORY[0x263F45780], v9);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v146 = (char *)v129 - v29;
  sub_24082E9CC(0, &qword_26AFD03B8, MEMORY[0x263F45630], v9);
  MEMORY[0x270FA5388](v30 - 8);
  uint64_t v159 = (char *)v129 - v31;
  uint64_t v32 = sub_2409525A8();
  uint64_t v33 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v35 = (char *)v129 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_2409528B8();
  uint64_t v37 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v39 = (char *)v129 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = a1;
  (*(void (**)(char *, void, uint64_t))(v37 + 104))(v39, *MEMORY[0x263F45FE8], v36);
  (*(void (**)(char *, void, uint64_t))(v33 + 104))(v35, *MEMORY[0x263F45E90], v32);
  uint64_t v40 = (void *)sub_240951F68();
  uint64_t v41 = v161;
  uint64_t v42 = sub_240953298();
  uint64_t v145 = v43;

  (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v32);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v36);
  uint64_t v44 = v147;
  uint64_t v45 = (uint64_t)v146;
  sub_240952248();
  uint64_t v46 = sub_240952258();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 0, 1, v46);
  type metadata accessor for SharedConcept_SharingVersionMismatchTileView(0);
  type metadata accessor for SharedConceptFeedItemGenerator(0);
  sub_2408663E4(&qword_268C90A50, (void (*)(uint64_t))type metadata accessor for SharedConceptFeedItemGenerator);
  uint64_t v47 = v159;
  unint64_t v48 = v162;
  v129[1] = v42;
  unint64_t v49 = v160;
  sub_240953D88();
  sub_2408662A8(v45, &qword_26AFCD978, v149);
  uint64_t v50 = v150;
  sub_24083D270(v41, v150, type metadata accessor for SharedConceptFeedItemData);
  uint64_t v51 = v48;
  uint64_t v52 = v148;
  (*((void (**)(char *, void (*)(void, void, void)))v49 + 2))(v44, v51);
  uint64_t v53 = sub_240951E78();
  uint64_t v54 = *(void *)(v53 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v47, 1, v53) == 1)
  {
    sub_2408663E4(&qword_268C90A58, (void (*)(uint64_t))type metadata accessor for SharedConceptFeedItemData);
    uint64_t v55 = v158;
    sub_2409517A8();
    if (v55)
    {
      swift_bridgeObjectRelease();
      (*((void (**)(char *, uint64_t))v160 + 1))(v44, v52);
      sub_24083AED4(v50, type metadata accessor for SharedConceptFeedItemData);
      return (id)sub_2408662A8((uint64_t)v159, &qword_26AFD03B8, MEMORY[0x263F45630]);
    }
    uint64_t v158 = 0;
    type metadata accessor for SharedConceptTileViewController();
    (*(void (**)(char *, void, uint64_t))(v130 + 104))(v132, *MEMORY[0x263F454D0], v131);
    sub_240951F68();
    sub_240951CC8();
    (*((void (**)(char *, uint64_t))v160 + 1))(v44, v52);
    sub_24083AED4(v50, type metadata accessor for SharedConceptFeedItemData);
    sub_2408662A8((uint64_t)v159, &qword_26AFD03B8, MEMORY[0x263F45630]);
  }
  else
  {
    swift_bridgeObjectRelease();
    (*((void (**)(char *, uint64_t))v49 + 1))(v44, v52);
    sub_24083AED4(v50, type metadata accessor for SharedConceptFeedItemData);
    (*(void (**)(uint64_t, char *, uint64_t))(v54 + 32))(v144, v47, v53);
  }
  uint64_t v57 = v161;
  uint64_t v160 = (char *)(v161 + *(int *)(v164 + 44));
  uint64_t v58 = v154;
  sub_2409519D8();
  uint64_t v59 = (uint64_t (*)(uint64_t))((char *)v163 + 16);
  uint64_t v60 = v153;
  uint64_t v162 = (void (*)(void, void, void))*((void *)v163 + 2);
  v162(v140, v58, v153);
  sub_240951828();
  uint64_t v61 = v155;
  sub_2409521E8();
  uint64_t v62 = v157;
  uint64_t v63 = v142;
  uint64_t v64 = v61;
  uint64_t v65 = v156;
  (*(void (**)(char *, char *, uint64_t))(v157 + 16))(v142, v64, v156);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v63, 0, 1, v65);
  sub_240951DD8();
  swift_bridgeObjectRetain();
  sub_240951D78();
  uint64_t v66 = sub_240952128();
  uint64_t v68 = v67;
  uint64_t v69 = (void (*)(char *, void))sub_240951E38();
  swift_bridgeObjectRetain();
  sub_240940118(&v165, v66, v68);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v69(v166, 0);
  id result = objc_msgSend(self, sel_categoryWithID_, 20);
  if (result)
  {
    uint64_t v70 = result;
    sub_240951DE8();

    sub_240951D68();
    sub_24082E9CC(0, &qword_268C90C10, MEMORY[0x263F45618], MEMORY[0x263F8E0F8]);
    sub_240951E08();
    uint64_t v71 = swift_allocObject();
    *(_OWORD *)(v71 + 16) = xmmword_240956800;
    swift_bridgeObjectRetain();
    sub_240951DF8();
    sub_24093D600(v71);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_240951E28();
    uint64_t v72 = v143;
    if (*(unsigned char *)(v57 + *(int *)(v164 + 40)) == 1)
    {
      uint64_t v73 = *MEMORY[0x263F44810];
      uint64_t v74 = sub_240953E68();
      uint64_t v75 = v137;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v74 - 8) + 104))(v137, v73, v74);
      uint64_t v76 = v138;
      uint64_t v77 = v139;
      (*(void (**)(char *, void, uint64_t))(v138 + 104))(v75, *MEMORY[0x263F44750], v139);
      uint64_t v78 = sub_240953D98();
      uint64_t v80 = v79;
      (*(void (**)(char *, uint64_t))(v76 + 8))(v75, v77);
      uint64_t v81 = (void (*)(char *, void))sub_240951E38();
      sub_240940118(&v165, v78, v80);
      swift_bridgeObjectRelease();
      v81(v166, 0);
      (*(void (**)(char *, uint64_t))(v157 + 8))(v155, v156);
      return (id)(*((uint64_t (**)(char *, uint64_t))v163 + 1))(v154, v60);
    }
    uint64_t v82 = v152;
    sub_2409519D8();
    uint64_t v83 = (char *)v163 + 56;
    uint64_t v164 = *((void *)v163 + 7);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v164)(v82, 0, 1, v60);
    uint64_t v84 = *(int *)(v136 + 48);
    uint64_t v85 = v59;
    uint64_t v86 = v135;
    uint64_t v87 = &v135[v84];
    uint64_t v159 = &v135[v84];
    uint64_t v88 = *(int *)(v136 + 64);
    os_log_t v151 = &v135[v88];
    uint64_t v89 = v72 + v84;
    uint64_t v90 = v72 + v88;
    uint64_t v91 = (void (*)(char *, uint64_t, uint64_t))v162;
    v162(v135, v72, v60);
    uint64_t v148 = v89;
    v91(v87, v89, v60);
    uint64_t v92 = v151;
    uint64_t v150 = v90;
    uint64_t v149 = v85;
    v91(v151, v90, v60);
    uint64_t v94 = (char *)v163 + 32;
    uint64_t v93 = (char *)*((void *)v163 + 4);
    uint64_t v95 = (uint64_t)v133;
    ((void (*)(char *, char *, uint64_t))v93)(v133, v86, v60);
    uint64_t v161 = (uint64_t)v83;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v164)(v95, 0, 1, v60);
    uint64_t v96 = v152;
    uint64_t v97 = v72;
    char v98 = sub_240935404(v152, v95);
    BOOL v99 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
    sub_2408662A8(v95, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
    uint64_t v100 = v163;
    uint64_t v101 = v99;
    uint64_t v102 = v153;
    sub_2408662A8(v96, (unint64_t *)&qword_26AFCF7F8, v101);
    uint64_t v103 = (void (*)(char *, uint64_t))*((void *)v100 + 1);
    v103(v92, v102);
    uint64_t v163 = v103;
    v103(v159, v102);
    if (v98)
    {
      uint64_t v104 = (unsigned int *)MEMORY[0x263F44808];
    }
    else
    {
      uint64_t v105 = v152;
      sub_2409519D8();
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v164)(v105, 0, 1, v102);
      uint64_t v106 = v135;
      uint64_t v107 = v93;
      uint64_t v108 = &v135[*(int *)(v136 + 48)];
      uint64_t v109 = &v135[*(int *)(v136 + 64)];
      uint64_t v147 = v94;
      uint64_t v110 = (void (*)(char *, uint64_t, uint64_t))v162;
      v162(v135, v97, v102);
      v110(v108, v148, v102);
      v110(v109, v150, v102);
      uint64_t v159 = v107;
      ((void (*)(uint64_t, char *, uint64_t))v107)(v95, v108, v102);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v164)(v95, 0, 1, v102);
      uint64_t v111 = v152;
      LOBYTE(v108) = sub_240935404(v152, v95);
      uint64_t v112 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
      sub_2408662A8(v95, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
      uint64_t v102 = v153;
      sub_2408662A8(v111, (unint64_t *)&qword_26AFCF7F8, v112);
      uint64_t v113 = v163;
      v163(v109, v102);
      v113(v106, v102);
      if (v108)
      {
        uint64_t v104 = (unsigned int *)MEMORY[0x263F44818];
      }
      else
      {
        uint64_t v114 = v152;
        sub_2409519D8();
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v164)(v114, 0, 1, v102);
        uint64_t v160 = &v106[*(int *)(v136 + 48)];
        uint64_t v115 = v160;
        uint64_t v116 = &v106[*(int *)(v136 + 64)];
        uint64_t v117 = (void (*)(char *, uint64_t, uint64_t))v162;
        v162(v106, v143, v102);
        v117(v115, v148, v102);
        v117(v116, v150, v102);
        ((void (*)(uint64_t, char *, uint64_t))v159)(v95, v116, v102);
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v164)(v95, 0, 1, v102);
        LOBYTE(v115) = sub_240935404(v114, v95);
        uint64_t v118 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
        sub_2408662A8(v95, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
        sub_2408662A8(v114, (unint64_t *)&qword_26AFCF7F8, v118);
        unint64_t v119 = v163;
        v163(v160, v102);
        v119(v106, v102);
        if ((v115 & 1) == 0)
        {
LABEL_17:
          (*(void (**)(char *, uint64_t))(v157 + 8))(v155, v156);
          return (id)((uint64_t (*)(char *, uint64_t))v163)(v154, v102);
        }
        uint64_t v104 = (unsigned int *)MEMORY[0x263F44800];
      }
    }
    uint64_t v120 = *v104;
    uint64_t v121 = sub_240953E68();
    uint64_t v122 = v137;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v121 - 8) + 104))(v137, v120, v121);
    uint64_t v123 = v138;
    uint64_t v124 = v139;
    (*(void (**)(char *, void, uint64_t))(v138 + 104))(v122, *MEMORY[0x263F44750], v139);
    uint64_t v125 = sub_240953D98();
    uint64_t v127 = v126;
    (*(void (**)(char *, uint64_t))(v123 + 8))(v122, v124);
    uint64_t v128 = (void (*)(char *, void))sub_240951E38();
    sub_240940118(&v165, v125, v127);
    swift_bridgeObjectRelease();
    v128(v166, 0);
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_240863F24()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HealthRecords30SharedConceptFeedItemGenerator_domain;
  uint64_t v2 = sub_240951F18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_24083AED4(v0 + OBJC_IVAR____TtC13HealthRecords30SharedConceptFeedItemGenerator_context, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_240864010()
{
  return type metadata accessor for SharedConceptFeedItemGenerator(0);
}

uint64_t type metadata accessor for SharedConceptFeedItemGenerator(uint64_t a1)
{
  return sub_24082A2AC(a1, (uint64_t *)&unk_26AFCC640);
}

uint64_t sub_240864038()
{
  uint64_t result = sub_240951F18();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for HealthRecordsGeneratorContext();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_240864130@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC13HealthRecords30SharedConceptFeedItemGenerator_domain;
  uint64_t v4 = sub_240951F18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t *sub_2408641A8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v30 = *v4;
  uint64_t v29 = sub_240951EF8();
  uint64_t v27 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_240951F18();
  uint64_t v10 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a1;
  sub_24083D270(a1, (uint64_t)v4 + OBJC_IVAR____TtC13HealthRecords30SharedConceptFeedItemGenerator_context, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  uint64_t v26 = a2;
  *(uint64_t *)((char *)v4 + OBJC_IVAR____TtC13HealthRecords30SharedConceptFeedItemGenerator_changes) = a2;
  *(uint64_t *)((char *)v4 + OBJC_IVAR____TtC13HealthRecords30SharedConceptFeedItemGenerator_primaryHealthStore) = (uint64_t)a3;
  swift_bridgeObjectRetain();
  id v25 = a3;
  uint64_t v23 = sub_240951F68();
  sub_24082E9CC(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v13 = sub_240951C08();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_2409562B0;
  unint64_t v18 = v17 + v16;
  uint64_t v19 = *(void (**)(unint64_t, void, uint64_t))(v14 + 104);
  v19(v18, *MEMORY[0x263F45520], v13);
  v19(v18 + v15, *MEMORY[0x263F454D0], v13);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v9, *MEMORY[0x263F45698], v29);
  sub_240951F08();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))((uint64_t)v4 + OBJC_IVAR____TtC13HealthRecords30SharedConceptFeedItemGenerator_domain, v12, v28);
  uint64_t v20 = v24;
  uint64_t v21 = sub_24085AE40(v24, v26, v25);
  sub_24083AED4(v20, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  v4[2] = v21;
  return v4;
}

void sub_24086451C()
{
  if (!qword_26AFCF160)
  {
    sub_2408418D4();
    sub_240841958();
    sub_2408645D8();
    sub_2408663E4(&qword_26AFCDCA0, (void (*)(uint64_t))sub_240841958);
    unint64_t v0 = sub_240954278();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF160);
    }
  }
}

uint64_t sub_2408645D8()
{
  return sub_2408663E4(&qword_26AFCDCC0, (void (*)(uint64_t))sub_2408418D4);
}

uint64_t sub_24086460C()
{
  uint64_t v1 = sub_240951FB8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_2408646D8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_240951FB8() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v2 + v7);
  uint64_t v10 = *(void *)(v2 + v8);
  uint64_t v11 = *(void **)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_24085B4E8(a1, v2 + v6, v9, v10, v11, a2);
}

uint64_t sub_2408647A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = sub_240952188();
  uint64_t v6 = sub_240865CC0(v4, v5, v3);
  uint64_t v8 = v7;
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v6;
  a1[1] = v8;
  return result;
}

uint64_t sub_24086480C(uint64_t result, void *a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v3 = 0;
  uint64_t v22 = result + 32;
  uint64_t v19 = a2 + 7;
  uint64_t v4 = MEMORY[0x263F8EE78];
  do
  {
    uint64_t v20 = v4;
    if (v3 <= v2) {
      unint64_t v5 = v2;
    }
    else {
      unint64_t v5 = v3;
    }
    unint64_t v23 = v5;
    while (1)
    {
      if (v3 == v23)
      {
        __break(1u);
LABEL_34:
        __break(1u);
        return result;
      }
      uint64_t v6 = (uint64_t *)(v22 + 16 * v3);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      ++v3;
      swift_bridgeObjectRetain();
      sub_240953258();
      sub_240864EE4();
      char v9 = sub_240955128();
      swift_bridgeObjectRelease();
      if ((v9 & 1) == 0)
      {
        sub_240953268();
        char v10 = sub_240955128();
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0)
        {
          uint64_t v11 = a2[2];
          if (!v11) {
            goto LABEL_24;
          }
          if (a2[4] != v8 || a2[5] != v7)
          {
            uint64_t result = sub_240955618();
            if ((result & 1) == 0) {
              break;
            }
          }
        }
      }
LABEL_7:
      uint64_t result = swift_bridgeObjectRelease();
      if (v3 == v2) {
        return v20;
      }
    }
    if (v11 != 1)
    {
      uint64_t v12 = v19;
      uint64_t v13 = 1;
      do
      {
        uint64_t v14 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_34;
        }
        if (*(v12 - 1) == v8 && *v12 == v7) {
          goto LABEL_7;
        }
        uint64_t result = sub_240955618();
        if (result) {
          goto LABEL_7;
        }
        v12 += 2;
        ++v13;
      }
      while (v14 != v11);
    }
LABEL_24:
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v4 = v20;
    if ((result & 1) == 0)
    {
      uint64_t result = sub_240875C18(0, *(void *)(v20 + 16) + 1, 1);
      uint64_t v4 = v20;
    }
    unint64_t v17 = *(void *)(v4 + 16);
    unint64_t v16 = *(void *)(v4 + 24);
    if (v17 >= v16 >> 1)
    {
      uint64_t result = sub_240875C18(v16 > 1, v17 + 1, 1);
      uint64_t v4 = v20;
    }
    *(void *)(v4 + 16) = v17 + 1;
    uint64_t v18 = v4 + 16 * v17;
    *(void *)(v18 + 32) = v8;
    *(void *)(v18 + 40) = v7;
  }
  while (v3 != v2);
  return v4;
}

uint64_t sub_240864A68()
{
  sub_240864F38();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2409525A8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F45E90], v5);
  sub_240951F38();
  sub_240952268();
  sub_2408371B8((uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_24083FEAC(0, &qword_26AFCDFB0, MEMORY[0x263F8E0F8]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_240956800;
  sub_240864FAC((uint64_t)v13, v9 + 32);
  v12[0] = v9;
  sub_24086511C((uint64_t)v13, (void (*)(void, void, void, void, void))sub_240865008);
  sub_24083FEAC(0, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F8D488]);
  sub_2409543A8();
  sub_2408663E4((unint64_t *)&qword_26AFCDDD8, (void (*)(uint64_t))sub_240864F38);
  uint64_t v10 = sub_240954498();
  sub_24086511C((uint64_t)v13, (void (*)(void, void, void, void, void))sub_24086515C);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v10;
}

unint64_t sub_240864D20()
{
  unint64_t result = qword_26AFCDE90;
  if (!qword_26AFCDE90)
  {
    sub_24082E9CC(255, &qword_26AFCDE88, (uint64_t (*)(uint64_t))sub_2408418D4, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCDE90);
  }
  return result;
}

unint64_t sub_240864DA8()
{
  unint64_t result = qword_26AFCDBE0;
  if (!qword_26AFCDBE0)
  {
    sub_24086559C(255, &qword_26AFCDBE8, (uint64_t (*)(uint64_t))sub_2408418D4, sub_2408645D8, MEMORY[0x263EFDC90]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCDBE0);
  }
  return result;
}

uint64_t sub_240864E44(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_240864E84(uint64_t a1)
{
  return sub_240864EA4(a1, &qword_26AFCD6E8, (void (*)(uint64_t))type metadata accessor for SharedConceptFeedItemGenerator);
}

uint64_t sub_240864EA4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a2;
  if (!*a2)
  {
    a3(255);
    uint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_240864EE4()
{
  unint64_t result = qword_268C90B00;
  if (!qword_268C90B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90B00);
  }
  return result;
}

void sub_240864F38()
{
  if (!qword_26AFCDDE0)
  {
    sub_24083FEAC(255, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F8D488]);
    unint64_t v0 = sub_240954398();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDDE0);
    }
  }
}

uint64_t sub_240864FAC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_240865008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v5 = a5 >> 5;
  if (v5 <= 4) {
    return ((uint64_t (__cdecl *)())((char *)&loc_240865028 + (int)funcs_240865030[v5]))();
  }
  return result;
}

uint64_t sub_240865034()
{
  return swift_bridgeObjectRetain();
}

id sub_240865048(uint64_t a1, void *a2, void *a3, void *a4, char a5)
{
  char v8 = a5 & 0x1F;
  swift_bridgeObjectRetain();

  return sub_2408650B4(a2, a3, a4, v8);
}

id sub_2408650B4(id result, void *a2, void *a3, char a4)
{
  if (!a4)
  {
    a3 = a2;
LABEL_6:
    swift_bridgeObjectRetain();
    uint64_t result = a3;
    goto LABEL_7;
  }
  if (a4 != 2)
  {
    if (a4 != 1) {
      return result;
    }
    goto LABEL_6;
  }
LABEL_7:

  return sub_24081BE90(result);
}

uint64_t sub_24086511C(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_24086515C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v5 = a5 >> 5;
  if (v5 <= 4) {
    return ((uint64_t (__cdecl *)())((char *)&loc_24086517C + (int)funcs_240865184[v5]))();
  }
  return result;
}

uint64_t sub_240865188()
{
  return swift_bridgeObjectRelease();
}

void sub_24086519C(uint64_t a1, void *a2, void *a3, void *a4, char a5)
{
  char v8 = a5 & 0x1F;
  swift_bridgeObjectRelease();

  sub_240865208(a2, a3, a4, v8);
}

void sub_240865208(void *a1, void *a2, void *a3, char a4)
{
  if (!a4)
  {
    a3 = a2;
LABEL_6:
    swift_bridgeObjectRelease();
    a1 = a3;
    goto LABEL_7;
  }
  if (a4 != 2)
  {
    if (a4 != 1) {
      return;
    }
    goto LABEL_6;
  }
LABEL_7:

  sub_240848640(a1);
}

void sub_240865270()
{
  if (!qword_26AFCDB00)
  {
    sub_240865338();
    sub_24083FEAC(255, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F8D488]);
    sub_2408663E4(&qword_26AFCD9A0, (void (*)(uint64_t))sub_240865338);
    unint64_t v0 = sub_240954258();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDB00);
    }
  }
}

void sub_240865338()
{
  if (!qword_26AFCC670)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_240841A78(255, &qword_26AFCDC88, MEMORY[0x263EFDCF0]);
    sub_240841C6C((unint64_t *)&qword_26AFCDC80, &qword_26AFCDC88, v0);
    unint64_t v1 = sub_240954128();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AFCC670);
    }
  }
}

void sub_2408653FC()
{
  if (!qword_26AFCDA90)
  {
    sub_240865270();
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_240865508(255, &qword_26AFCDCB8, MEMORY[0x263EFDCF0]);
    sub_2408663E4(&qword_26AFCDAF8, (void (*)(uint64_t))sub_240865270);
    sub_240865A84(&qword_26AFCDCB0, &qword_26AFCDCB8, v0);
    unint64_t v1 = sub_2409541F8();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AFCDA90);
    }
  }
}

void sub_240865508(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    sub_24083FEAC(255, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F8D488]);
    uint64_t v7 = v6;
    unint64_t v8 = sub_24083F3C0();
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_24086559C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_24086561C()
{
  return sub_2408663E4(&qword_26AFCDA88, (void (*)(uint64_t))sub_2408653FC);
}

void sub_240865650()
{
  if (!qword_26AFCC678)
  {
    sub_240951A28();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_26AFCC678);
    }
  }
}

unint64_t sub_2408656BC()
{
  unint64_t result = qword_268C90A18;
  if (!qword_268C90A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90A18);
  }
  return result;
}

uint64_t sub_240865710(uint64_t a1)
{
  return a1;
}

uint64_t sub_240865784()
{
  uint64_t v1 = sub_240951FB8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

double sub_240865828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(sub_240951FB8() - 8);
  uint64_t v8 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_24085EF18(a1, a2, a3, v8);
}

uint64_t sub_2408658E8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240865920@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void, void))(v2 + 16))(*a1, a1[1], a1[2]);
  *a2 = result;
  return result;
}

uint64_t sub_24086596C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24086597C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24085F810(a1, a2);
}

unint64_t sub_240865984()
{
  unint64_t result = qword_26AFCD9D0;
  if (!qword_26AFCD9D0)
  {
    sub_24086559C(255, &qword_26AFCD9D8, (uint64_t (*)(uint64_t))sub_2408653FC, sub_24086561C, MEMORY[0x263EFDAA0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCD9D0);
  }
  return result;
}

uint64_t sub_240865A20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SharedConceptFeedItemData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_240865A84(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240865508(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_240865AC8()
{
  unint64_t result = qword_26AFCDF00;
  if (!qword_26AFCDF00)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFCDF00);
  }
  return result;
}

void sub_240865B08(uint64_t a1)
{
}

void sub_240865B3C()
{
  if (!qword_26AFCDAE0)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDEA0];
    sub_240841A78(255, &qword_26AFCDFE0, MEMORY[0x263EFDEA0]);
    uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_240841A78(255, &qword_26AFCDC88, MEMORY[0x263EFDCF0]);
    sub_240841C6C((unint64_t *)&qword_26AFCDFD8, &qword_26AFCDFE0, v0);
    sub_240841C6C((unint64_t *)&qword_26AFCDC80, &qword_26AFCDC88, v1);
    unint64_t v2 = sub_2409541F8();
    if (!v3) {
      atomic_store(v2, (unint64_t *)&qword_26AFCDAE0);
    }
  }
}

uint64_t sub_240865C68@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_240861F88(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_240865C88()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240865C98@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_240862550(a1, a2);
}

uint64_t sub_240865CA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240862120(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void (**)(void, void, void))(v2 + 40), a2);
}

uint64_t sub_240865CC0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2409525A8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2409528B8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_2408C416C(a1, a2);
  uint64_t v17 = v14;
  if (!v14) {
    return 0;
  }
  uint64_t v18 = sub_2408C1EBC(v14, v15, v16);
  v22[0] = a3;
  v22[1] = v18;
  sub_240864E44(v17);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x263F45FE8], v10);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F45E90], v6);
  uint64_t v19 = (void *)sub_240951F68();
  uint64_t v20 = sub_240953298();
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v20;
}

unint64_t sub_240865F14(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v36 = a3;
  sub_24082E9CC(0, &qword_26AFD03B8, MEMORY[0x263F45630], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = sub_240951E78();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v35 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v31 = (char *)&v28 - v13;
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v15 = *(void *)(type metadata accessor for SharedConceptFeedItemData(0) - 8);
  uint64_t v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  uint64_t v29 = v10;
  uint64_t v33 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v34 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v32 = *(void *)(v15 + 72);
  uint64_t v28 = a1;
  uint64_t v17 = swift_bridgeObjectRetain();
  unint64_t v18 = MEMORY[0x263F8EE78];
  uint64_t v30 = a2;
  do
  {
    uint64_t v19 = (void *)MEMORY[0x245601B40](v17);
    a2(v16);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v18;
    }
    if ((*v34)(v8, 1, v9) == 1)
    {
      uint64_t v17 = sub_2408662A8((uint64_t)v8, &qword_26AFD03B8, MEMORY[0x263F45630]);
    }
    else
    {
      uint64_t v20 = v9;
      uint64_t v21 = *v33;
      uint64_t v22 = v31;
      (*v33)(v31, v8, v20);
      unint64_t v23 = v22;
      uint64_t v24 = v20;
      v21(v35, v23, v20);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v18 = sub_2408C3044(0, *(void *)(v18 + 16) + 1, 1, v18);
      }
      unint64_t v26 = *(void *)(v18 + 16);
      unint64_t v25 = *(void *)(v18 + 24);
      if (v26 >= v25 >> 1) {
        unint64_t v18 = sub_2408C3044(v25 > 1, v26 + 1, 1, v18);
      }
      *(void *)(v18 + 16) = v26 + 1;
      uint64_t v17 = ((uint64_t (*)(unint64_t, char *, uint64_t))v21)(v18+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(void *)(v29 + 72) * v26, v35, v24);
      uint64_t v9 = v24;
      a2 = v30;
    }
    v16 += v32;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_2408662A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_24082E9CC(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_240866318@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24085FD24(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_240866338()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240866348@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_240860DE4(a1, a2);
}

uint64_t sub_240866350(uint64_t a1, uint64_t a2)
{
  sub_24082E9CC(0, &qword_26AFCD978, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2408663E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240866430@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for HealthRecordsGeneratorContext();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2409540C8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954058();
  uint64_t v13 = sub_2409540B8();
  os_log_type_t v14 = sub_240954C08();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v27 = a3;
    uint64_t v16 = v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v28 = v17;
    uint64_t v29 = a2;
    *(_DWORD *)uint64_t v16 = 136446466;
    uint64_t v26 = a1;
    swift_getMetatypeMetadata();
    uint64_t v18 = sub_2409547E8();
    uint64_t v29 = sub_2408370E4(v18, v19, &v28);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    uint64_t v29 = type metadata accessor for ClinicalSharingGenerator();
    sub_240866C4C();
    uint64_t v20 = sub_2409547E8();
    uint64_t v29 = sub_2408370E4(v20, v21, &v28);
    a1 = v26;
    sub_2409550B8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v13, v14, "[%{public}s]: Emitting %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v17, -1, -1);
    uint64_t v22 = v16;
    a3 = v27;
    MEMORY[0x2456021C0](v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_24083B4E8(a1, (uint64_t)v8);
  uint64_t v23 = type metadata accessor for ClinicalSharingGenerator();
  swift_allocObject();
  uint64_t v24 = sub_24081D768((uint64_t)v8);
  a3[3] = v23;
  uint64_t result = sub_24083696C(&qword_26AFCE380, (void (*)(uint64_t))type metadata accessor for ClinicalSharingGenerator);
  a3[4] = result;
  *a3 = v24;
  return result;
}

uint64_t sub_240866734(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    objc_msgSend(*(id *)(result+ OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline_context+ *(int *)(type metadata accessor for HealthRecordsGeneratorContext() + 20)), sel_removeAccountStateChangeListener_, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_2408667C0()
{
  uint64_t v1 = v0;
  if (*(void *)(v0 + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline_observerToken))
  {
    swift_retain();
    sub_240952A48();
    swift_release();
  }
  swift_release();
  uint64_t v2 = v0 + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline_domain;
  uint64_t v3 = sub_240951F18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  sub_24083AF34(v1 + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline_context, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  sub_240848640(*(id *)(v1
                      + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___accountStateChangeListener));
  sub_240848640(*(id *)(v1
                      + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___healthRecordsSupportedListener));
  sub_240841240(*(void *)(v1
                          + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___accountStateChangePublisher));
  sub_240841240(*(void *)(v1
                          + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___healthRecordsSupportedPublisher));
  swift_release();
  return v1;
}

uint64_t sub_2408668C8()
{
  sub_2408667C0();

  return swift_deallocClassInstance();
}

uint64_t sub_240866920()
{
  return type metadata accessor for ClinicalSharingGeneratorPipeline();
}

uint64_t sub_240866928()
{
  uint64_t result = sub_240951F18();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for HealthRecordsGeneratorContext();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_240866A1C()
{
  unint64_t v1 = (int *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_240866B18@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_240866430(v1 + v4, v5, a1);
}

unint64_t sub_240866BC4()
{
  unint64_t result = qword_26AFCDDB8;
  if (!qword_26AFCDDB8)
  {
    sub_240835BEC(255, &qword_26AFCDDC0, (uint64_t (*)(uint64_t))sub_24084855C, MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCDDB8);
  }
  return result;
}

unint64_t sub_240866C4C()
{
  unint64_t result = qword_26AFCE460;
  if (!qword_26AFCE460)
  {
    type metadata accessor for ClinicalSharingGenerator();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFCE460);
  }
  return result;
}

uint64_t sub_240866C88()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240866CC0()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240866D00()
{
  return sub_240866734(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_240866D08(uint64_t a1)
{
}

void sub_240866D3C(uint64_t a1)
{
}

void sub_240866D70(char a1)
{
  uint64_t v3 = sub_2409540C8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (objc_class *)type metadata accessor for NewRecordsLabFeedItemViewController();
  v12.receiver = v1;
  v12.super_class = v7;
  objc_msgSendSuper2(&v12, sel_viewDidAppear_, a1 & 1);
  sub_240954078();
  uint64_t v8 = sub_2409540B8();
  os_log_type_t v9 = sub_240954C38();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_240818000, v8, v9, "New Lab Records tile did appear", v10, 2u);
    MEMORY[0x2456021C0](v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_2409529A8();
  uint64_t v11 = (void *)sub_240952998();
  sub_240952978();
}

void sub_240866F00(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_240866D70(a3);
}

uint64_t sub_240866F54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_268C90A68;
  swift_beginAccess();
  sub_240869070(v3, (uint64_t)&v8, &qword_268C90810, (unint64_t *)&unk_268C911C0);
  if (!v9)
  {
    sub_240868CBC((uint64_t)&v8);
    uint64_t v4 = sub_240952D78();
    uint64_t v5 = sub_240952D68();
    uint64_t v9 = v4;
    uint64_t v10 = MEMORY[0x263F460E0];
    *(void *)&long long v8 = v5;
    sub_2408690E0((uint64_t)&v8, (uint64_t)v7);
    swift_beginAccess();
    sub_240869144((uint64_t)v7, v3);
    swift_endAccess();
  }
  return sub_24083AB20(&v8, a1);
}

void sub_240867038(uint64_t a1, uint64_t a2)
{
  v23[0] = a1;
  v23[1] = a2;
  uint64_t v24 = sub_240952B98();
  uint64_t v2 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240868D70(0, &qword_26AFCC6A8, MEMORY[0x263F07690]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v23 - v6;
  uint64_t v8 = type metadata accessor for NewLabsFeedItemData(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  objc_super v12 = (uint64_t *)((char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v10);
  os_log_type_t v14 = (char *)v23 - v13;
  sub_240868D70(0, &qword_268C90A90, (void (*)(uint64_t))type metadata accessor for NewLabsFeedItemData);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)v23 - v16;
  sub_240868F90(v23[0], (uint64_t)v23 - v16, &qword_268C90A90, (void (*)(uint64_t))type metadata accessor for NewLabsFeedItemData);
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v17, 1, v8);
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  if (v18 != 1)
  {
    sub_240868DC4((uint64_t)v17, (uint64_t)v14);
    sub_240868E88((uint64_t)v14, (uint64_t)v12, type metadata accessor for NewLabsFeedItemData);
    uint64_t v19 = *v12;
    uint64_t v20 = *(uint64_t **)((char *)v12 + *(int *)(v8 + 24));
    swift_bridgeObjectRetain();
    sub_240868E28((uint64_t)v12, type metadata accessor for NewLabsFeedItemData);
    sub_240868E28((uint64_t)v14, type metadata accessor for NewLabsFeedItemData);
  }
  sub_240852990(v19, v20);
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_240951AB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v7, 1, 1, v21);
  sub_240952B88();
  sub_2409535A8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v24);
  sub_240868F34((uint64_t)v7, &qword_26AFCC6A8, MEMORY[0x263F07690]);
  uint64_t v22 = (void *)sub_240954788();
  swift_bridgeObjectRelease();
  objc_msgSend(v25, sel_setTitle_, v22);
}

uint64_t sub_240867418(void *a1)
{
  sub_240931B08(a1);
  sub_2409529A8();
  uint64_t v2 = (void *)sub_240952998();
  sub_240952978();

  v5[3] = sub_240868D30();
  v5[0] = a1;
  id v3 = a1;
  sub_240867F9C((uint64_t)v5);
  return sub_240868E28((uint64_t)v5, (uint64_t (*)(void))sub_24085776C);
}

uint64_t sub_2408674BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for NewLabsFeedItemData(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240868D70(0, &qword_268C90A90, (void (*)(uint64_t))type metadata accessor for NewLabsFeedItemData);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v25 - v8;
  sub_240868D70(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v10 - 8);
  objc_super v12 = (char *)&v25 - v11;
  uint64_t v13 = (uint64_t)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x60);
  swift_beginAccess();
  sub_240868F90(v13, (uint64_t)v9, &qword_268C90A90, (void (*)(uint64_t))type metadata accessor for NewLabsFeedItemData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3))
  {
    sub_240868F34((uint64_t)v9, &qword_268C90A90, (void (*)(uint64_t))type metadata accessor for NewLabsFeedItemData);
    uint64_t v14 = sub_240951A28();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 1, 1, v14);
  }
  else
  {
    sub_240868E88((uint64_t)v9, (uint64_t)v6, type metadata accessor for NewLabsFeedItemData);
    sub_240868F34((uint64_t)v9, &qword_268C90A90, (void (*)(uint64_t))type metadata accessor for NewLabsFeedItemData);
    sub_240868F90((uint64_t)&v6[*(int *)(v3 + 20)], (uint64_t)v12, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
    sub_240868E28((uint64_t)v6, type metadata accessor for NewLabsFeedItemData);
    uint64_t v15 = sub_240951A28();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v12, 1, v15) != 1)
    {
      sub_240868FFC();
      uint64_t v19 = a1 + *(int *)(v18 + 48);
      (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a1, v12, v15);
      uint64_t v20 = *MEMORY[0x263F43FB0];
      uint64_t v21 = sub_240953908();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v19, v20, v21);
      uint64_t v17 = (unsigned int *)MEMORY[0x263F43FB8];
      goto LABEL_6;
    }
  }
  uint64_t v17 = (unsigned int *)MEMORY[0x263F43FC0];
LABEL_6:
  uint64_t v22 = *v17;
  uint64_t v23 = sub_240953918();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(a1, v22, v23);
}

void sub_2408678C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2409540C8();
  uint64_t v27 = *(void *)(v2 - 8);
  uint64_t v28 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v26 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v25 - v5;
  uint64_t v7 = sub_240953738();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t)v0 + *(void *)((*MEMORY[0x263F8EED0] & *v0) + 0x70);
  swift_beginAccess();
  sub_240869070(v11, (uint64_t)v29, (unint64_t *)&qword_26AFCF770, (unint64_t *)&qword_26AFCF760);
  uint64_t v12 = v30;
  if (v30)
  {
    uint64_t v13 = sub_2408304E8(v29, v30);
    uint64_t v14 = *(void *)(v12 - 8);
    MEMORY[0x270FA5388](v13);
    uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v14 + 16))(v16);
    sub_240953BA8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v12);
    if ((*(unsigned int (**)(char *, uint64_t))(v8 + 88))(v10, v7) == *MEMORY[0x263F43BA0])
    {
      sub_2408371B8((uint64_t)v29);
      sub_240954088();
      uint64_t v17 = sub_2409540B8();
      os_log_type_t v18 = sub_240954C38();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v19 = 0;
        _os_log_impl(&dword_240818000, v17, v18, "User dismissed NewLabRecords tile", v19, 2u);
        MEMORY[0x2456021C0](v19, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v28);
      v29[0] = v1;
      type metadata accessor for NewRecordsLabFeedItemViewController();
      sub_240868EF0(&qword_268C90A98);
      sub_240952CB8();
      sub_2409529A8();
      uint64_t v20 = (void *)sub_240952998();
      sub_240952978();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      sub_2408371B8((uint64_t)v29);
      uint64_t v21 = v26;
      sub_240954088();
      uint64_t v22 = sub_2409540B8();
      os_log_type_t v23 = sub_240954C18();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v24 = 0;
        _os_log_impl(&dword_240818000, v22, v23, "didTapDismis invoked for tile without a dismiss button!", v24, 2u);
        MEMORY[0x2456021C0](v24, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v27 + 8))(v21, v28);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_240867D50()
{
  uint64_t v1 = sub_240953738();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = (uint64_t)v0 + *(void *)((*MEMORY[0x263F8EED0] & *v0) + 0x70);
  swift_beginAccess();
  uint64_t result = sub_240869070(v5, (uint64_t)v15, (unint64_t *)&qword_26AFCF770, (unint64_t *)&qword_26AFCF760);
  uint64_t v7 = v16;
  if (v16)
  {
    uint64_t v8 = sub_2408304E8(v15, v16);
    uint64_t v9 = *(void *)(v7 - 8);
    MEMORY[0x270FA5388](v8);
    uint64_t v11 = &v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(unsigned char *))(v9 + 16))(v11);
    sub_240953BA8();
    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v7);
    int v12 = (*(uint64_t (**)(unsigned char *, uint64_t))(v2 + 88))(v4, v1);
    int v13 = *MEMORY[0x263F43BA0];
    if (v12 != *MEMORY[0x263F43BA0]) {
      (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
    }
    sub_2408371B8((uint64_t)v15);
    return v12 == v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240867F9C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v35 = a1;
  uint64_t v3 = sub_2409540C8();
  uint64_t v33 = *(void *)(v3 - 8);
  uint64_t v34 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v32 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2409526C8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240952808();
  uint64_t v9 = (void *)sub_2409527D8();
  uint64_t v10 = (uint64_t)v2 + *(void *)((*MEMORY[0x263F8EED0] & *v2) + 0x70);
  swift_beginAccess();
  uint64_t result = sub_240869070(v10, (uint64_t)v36, (unint64_t *)&qword_26AFCF770, (unint64_t *)&qword_26AFCF760);
  uint64_t v12 = v37;
  if (v37)
  {
    int v13 = sub_2408304E8(v36, v37);
    uint64_t v14 = *(void *)(v12 - 8);
    MEMORY[0x270FA5388](v13);
    uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v14 + 16))(v16);
    uint64_t v17 = (void *)sub_240953B98();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v12);
    os_log_type_t v18 = (void *)sub_2409527E8();

    sub_2408371B8((uint64_t)v36);
    sub_240866F54((uint64_t)v36);
    sub_2408304E8(v36, v37);
    uint64_t v19 = *MEMORY[0x263F45FE8];
    uint64_t v20 = sub_2409528B8();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v8, v19, v20);
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F45F00], v5);
    uint64_t v21 = (void *)sub_2409530C8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    if (v21)
    {
      sub_2408371B8((uint64_t)v36);
      sub_240868E88(v35, (uint64_t)v36, (uint64_t (*)(void))sub_24085776C);
      uint64_t v22 = v37;
      if (v37)
      {
        os_log_type_t v23 = sub_2408304E8(v36, v37);
        uint64_t v24 = *(void *)(v22 - 8);
        MEMORY[0x270FA5388](v23);
        uint64_t v26 = (char *)&v32 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v24 + 16))(v26);
        uint64_t v27 = sub_2409555F8();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v22);
        sub_2408371B8((uint64_t)v36);
      }
      else
      {
        uint64_t v27 = 0;
      }
      objc_msgSend(v2, sel_showViewController_sender_, v21, v27);

      return swift_unknownObjectRelease();
    }
    else
    {
      sub_2408371B8((uint64_t)v36);
      uint64_t v28 = v32;
      sub_240954088();
      uint64_t v29 = sub_2409540B8();
      uint64_t v30 = sub_240954C18();
      if (os_log_type_enabled(v29, (os_log_type_t)v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v31 = 0;
        _os_log_impl(&dword_240818000, v29, (os_log_type_t)v30, "Error tapping on NewLabRecords feed item, can't load labs view controller", v31, 2u);
        MEMORY[0x2456021C0](v31, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v28, v34);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_2408684D8(unsigned char *a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    sub_2409547C8();
    uint64_t v6 = &a1[qword_268C90A68];
    *(_OWORD *)uint64_t v6 = 0u;
    *((_OWORD *)v6 + 1) = 0u;
    *((void *)v6 + 4) = 0;
    uint64_t v7 = &a1[qword_268C99148];
    uint64_t v8 = *MEMORY[0x263F43CB0];
    uint64_t v9 = sub_240953798();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
    a1[qword_268C99150] = 1;
    id v10 = a4;
    uint64_t v11 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = &a1[qword_268C90A68];
    *(_OWORD *)uint64_t v12 = 0u;
    *((_OWORD *)v12 + 1) = 0u;
    *((void *)v12 + 4) = 0;
    int v13 = &a1[qword_268C99148];
    uint64_t v14 = *MEMORY[0x263F43CB0];
    uint64_t v15 = sub_240953798();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v13, v14, v15);
    a1[qword_268C99150] = 1;
    id v16 = a4;
    uint64_t v11 = 0;
  }
  v19.receiver = a1;
  v19.super_class = (Class)type metadata accessor for NewRecordsLabFeedItemViewController();
  id v17 = objc_msgSendSuper2(&v19, sel_initWithNibName_bundle_, v11, a4);

  return v17;
}

id sub_24086867C(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = &a1[qword_268C90A68];
  *(_OWORD *)uint64_t v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((void *)v5 + 4) = 0;
  uint64_t v6 = &a1[qword_268C99148];
  uint64_t v7 = *MEMORY[0x263F43CB0];
  uint64_t v8 = sub_240953798();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  a1[qword_268C99150] = 1;
  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for NewRecordsLabFeedItemViewController();
  return objc_msgSendSuper2(&v10, sel_initWithCoder_, a3);
}

uint64_t sub_24086874C()
{
  sub_240868CBC(v0 + qword_268C90A68);
  uint64_t v1 = v0 + qword_268C99148;
  uint64_t v2 = sub_240953798();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

id sub_2408687C8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NewRecordsLabFeedItemViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240868800(uint64_t a1)
{
  sub_240868CBC(a1 + qword_268C90A68);
  uint64_t v2 = a1 + qword_268C99148;
  uint64_t v3 = sub_240953798();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

uint64_t type metadata accessor for NewRecordsLabFeedItemViewController()
{
  uint64_t result = qword_268C90A70;
  if (!qword_268C90A70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2408688CC()
{
  uint64_t result = sub_240953798();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_240868970()
{
  return type metadata accessor for NewRecordsLabFeedItemViewController();
}

uint64_t sub_240868980@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + qword_268C99148;
  uint64_t v4 = sub_240953798();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_2408689F8@<X0>(uint64_t a1@<X8>)
{
  return sub_2408674BC(a1);
}

uint64_t sub_240868A1C()
{
  return sub_240953C08() & 1;
}

uint64_t sub_240868A98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F46120];
  uint64_t v3 = sub_240952F68();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_240868B0C()
{
  uint64_t v1 = *v0 + *(void *)((*MEMORY[0x263F8EED0] & *(void *)*v0) + 0x70);
  swift_beginAccess();
  uint64_t result = sub_240869070(v1, (uint64_t)v10, (unint64_t *)&qword_26AFCF770, (unint64_t *)&qword_26AFCF760);
  uint64_t v3 = v11;
  if (v11)
  {
    uint64_t v4 = sub_2408304E8(v10, v11);
    uint64_t v5 = *(void *)(v3 - 8);
    MEMORY[0x270FA5388](v4);
    uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(unsigned char *))(v5 + 16))(v7);
    uint64_t v8 = sub_240953B98();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v3);
    sub_2408371B8((uint64_t)v10);
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240868C88()
{
  return sub_240868EF0(&qword_268C90A80);
}

uint64_t sub_240868CBC(uint64_t a1)
{
  sub_240851A5C(0, &qword_268C90810, (unint64_t *)&unk_268C911C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_240868D30()
{
  unint64_t result = qword_268C90A88;
  if (!qword_268C90A88)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268C90A88);
  }
  return result;
}

void sub_240868D70(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240955098();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_240868DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewLabsFeedItemData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_240868E28(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_240868E88(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_240868EF0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NewRecordsLabFeedItemViewController();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240868F34(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_240868D70(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_240868F90(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_240868D70(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_240868FFC()
{
  if (!qword_268C90AA0)
  {
    sub_240951A28();
    sub_240953908();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C90AA0);
    }
  }
}

uint64_t sub_240869070(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  sub_240851A5C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_2408690E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_240869144(uint64_t a1, uint64_t a2)
{
  sub_240851A5C(0, &qword_268C90810, (unint64_t *)&unk_268C911C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_2408691C0(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_24086A064();
    uint64_t v2 = sub_240955428();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE80];
  }
  uint64_t v25 = a1 + 64;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v5 = v3 & *(void *)(a1 + 64);
  uint64_t v26 = (void *)v2;
  uint64_t v23 = v2 + 64;
  int64_t v24 = (unint64_t)(63 - v4) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      uint64_t v11 = (v5 - 1) & v5;
      unint64_t v12 = __clz(__rbit64(v5)) | (v7 << 6);
      int64_t v13 = v7;
    }
    else
    {
      int64_t v14 = v7 + 1;
      if (__OFADD__(v7, 1)) {
        goto LABEL_40;
      }
      if (v14 >= v24)
      {
LABEL_36:
        sub_24084072C();
        return (unint64_t)v26;
      }
      unint64_t v15 = *(void *)(v25 + 8 * v14);
      int64_t v13 = v7 + 1;
      if (!v15)
      {
        int64_t v13 = v7 + 2;
        if (v7 + 2 >= v24) {
          goto LABEL_36;
        }
        unint64_t v15 = *(void *)(v25 + 8 * v13);
        if (!v15)
        {
          int64_t v13 = v7 + 3;
          if (v7 + 3 >= v24) {
            goto LABEL_36;
          }
          unint64_t v15 = *(void *)(v25 + 8 * v13);
          if (!v15)
          {
            int64_t v13 = v7 + 4;
            if (v7 + 4 >= v24) {
              goto LABEL_36;
            }
            unint64_t v15 = *(void *)(v25 + 8 * v13);
            if (!v15)
            {
              int64_t v16 = v7 + 5;
              if (v7 + 5 >= v24) {
                goto LABEL_36;
              }
              unint64_t v15 = *(void *)(v25 + 8 * v16);
              if (!v15)
              {
                while (1)
                {
                  int64_t v13 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_41;
                  }
                  if (v13 >= v24) {
                    goto LABEL_36;
                  }
                  unint64_t v15 = *(void *)(v25 + 8 * v13);
                  ++v16;
                  if (v15) {
                    goto LABEL_26;
                  }
                }
              }
              int64_t v13 = v7 + 5;
            }
          }
        }
      }
LABEL_26:
      uint64_t v11 = (v15 - 1) & v15;
      unint64_t v12 = __clz(__rbit64(v15)) + (v13 << 6);
    }
    sub_24086A0C8(*(void *)(a1 + 48) + 40 * v12, (uint64_t)v33);
    sub_2408373C4(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v34 + 8);
    v31[0] = v34[0];
    v31[1] = v34[1];
    uint64_t v32 = v35;
    v30[0] = v33[0];
    v30[1] = v33[1];
    sub_24086A0C8((uint64_t)v30, (uint64_t)v29);
    if (!swift_dynamicCast())
    {
      sub_240834A8C((uint64_t)v30, (uint64_t (*)(void))sub_24086A124);
LABEL_35:
      swift_bridgeObjectRelease();
      sub_24084072C();
      swift_release();
      return 0;
    }
    sub_2408373C4((uint64_t)v31 + 8, (uint64_t)v29);
    sub_240834A8C((uint64_t)v30, (uint64_t (*)(void))sub_24086A124);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    unint64_t result = sub_240931400(v27, v28);
    if (v17)
    {
      uint64_t v8 = 16 * result;
      uint64_t v9 = (uint64_t *)(v26[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v9 = v27;
      v9[1] = v28;
      objc_super v10 = (uint64_t *)(v26[7] + v8);
      unint64_t result = swift_bridgeObjectRelease();
      *objc_super v10 = v27;
      v10[1] = v28;
      goto LABEL_8;
    }
    if (v26[2] >= v26[3]) {
      break;
    }
    *(void *)(v23 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    os_log_type_t v18 = (uint64_t *)(v26[6] + 16 * result);
    *os_log_type_t v18 = v27;
    v18[1] = v28;
    objc_super v19 = (uint64_t *)(v26[7] + 16 * result);
    *objc_super v19 = v27;
    v19[1] = v28;
    uint64_t v20 = v26[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_39;
    }
    v26[2] = v22;
LABEL_8:
    int64_t v7 = v13;
    unint64_t v5 = v11;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2408695A4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_240951848();
  if (result)
  {
    unint64_t v3 = sub_2408691C0(result);
    uint64_t result = swift_bridgeObjectRelease();
    if (v3)
    {
      sub_240953438();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
    }
  }
  *a1 = 1;
  return result;
}

uint64_t sub_24086962C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for HealthRecordsGeneratorContext();
  MEMORY[0x270FA5388](v8 - 8);
  objc_super v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2409540C8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  int64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954058();
  unint64_t v15 = sub_2409540B8();
  os_log_type_t v16 = sub_240954C08();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v32 = a4;
    uint64_t v18 = v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v30 = v11;
    uint64_t v20 = v19;
    uint64_t v33 = v19;
    uint64_t v34 = a3;
    *(_DWORD *)uint64_t v18 = 136446466;
    uint64_t v31 = a1;
    swift_getMetatypeMetadata();
    uint64_t v21 = sub_2409547E8();
    uint64_t v34 = sub_2408370E4(v21, v22, &v33);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    uint64_t v34 = type metadata accessor for AccountStatusSummaryTileGenerator();
    sub_24086A028();
    uint64_t v23 = sub_2409547E8();
    uint64_t v34 = sub_2408370E4(v23, v24, &v33);
    a1 = v31;
    sub_2409550B8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v15, v16, "[%{public}s]: Emitting %{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v20, -1, -1);
    uint64_t v25 = v18;
    a4 = v32;
    MEMORY[0x2456021C0](v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v30);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  sub_24083B4E8(a1, (uint64_t)v10);
  uint64_t v26 = type metadata accessor for AccountStatusSummaryTileGenerator();
  swift_allocObject();
  swift_retain();
  uint64_t v27 = sub_24081DA68((uint64_t)v10, a2);
  swift_release();
  a4[3] = v26;
  uint64_t result = sub_240834954(&qword_26AFCE740, (void (*)(uint64_t))type metadata accessor for AccountStatusSummaryTileGenerator);
  a4[4] = result;
  *a4 = v27;
  return result;
}

uint64_t sub_240869960()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    objc_msgSend(*(id *)(result+ OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_context+ *(int *)(type metadata accessor for HealthRecordsGeneratorContext() + 20)), sel_removeAccountStateChangeListener_, *(void *)(result+ OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_accountStateChangeListener));
    return swift_release();
  }
  return result;
}

uint64_t sub_2408699E8()
{
  uint64_t v1 = v0;
  if (*(void *)(v0 + OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_observerToken))
  {
    swift_retain();
    sub_240952A48();
    swift_release();
  }
  swift_release();
  uint64_t v2 = v0 + OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_domain;
  uint64_t v3 = sub_240951F18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  sub_240834A8C(v1 + OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_context, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  objc_release(*(id *)(v1
                     + OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_accountStateChangeListener));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_240869AF0()
{
  sub_2408699E8();

  return swift_deallocClassInstance();
}

uint64_t sub_240869B48()
{
  return type metadata accessor for AccountStatusSummaryTileGeneratorPipeline();
}

uint64_t sub_240869B50()
{
  uint64_t result = sub_240951F18();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for HealthRecordsGeneratorContext();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

void sub_240869C48()
{
  if (!qword_26AFD0560)
  {
    unint64_t v0 = sub_240954A38();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD0560);
    }
  }
}

uint64_t sub_240869CA0()
{
  return sub_240834954(&qword_26AFD0568, (void (*)(uint64_t))sub_240869C48);
}

void sub_240869CD4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_2409542A8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_240869D60(uint64_t a1)
{
}

uint64_t sub_240869D94(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240869CD4(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240869DE4@<X0>(unsigned char *a1@<X8>)
{
  return sub_2408695A4(a1);
}

uint64_t sub_240869E04@<X0>(unsigned char *a1@<X8>)
{
  return sub_2408695A4(a1);
}

uint64_t sub_240869E24()
{
  uint64_t v1 = (int *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_release();

  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_240869F30@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + v5);
  uint64_t v7 = *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_24086962C(v1 + v4, v6, v7, a1);
}

uint64_t sub_240869FE8()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24086A020()
{
  return sub_240869960();
}

unint64_t sub_24086A028()
{
  unint64_t result = qword_26AFCE808;
  if (!qword_26AFCE808)
  {
    type metadata accessor for AccountStatusSummaryTileGenerator();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFCE808);
  }
  return result;
}

void sub_24086A064()
{
  if (!qword_268C90AA8)
  {
    unint64_t v0 = sub_240955438();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C90AA8);
    }
  }
}

uint64_t sub_24086A0C8(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_24086A124()
{
  if (!qword_268C90AB0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C90AB0);
    }
  }
}

unint64_t sub_24086A194()
{
  unint64_t result = qword_26AFCC650;
  if (!qword_26AFCC650)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFCC650);
  }
  return result;
}

uint64_t sub_24086A1EC(void (*a1)(uint64_t, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v18 = sub_240951E78();
  uint64_t v6 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
  if (v9)
  {
    uint64_t v22 = MEMORY[0x263F8EE78];
    sub_240875CD8(0, v9, 0);
    uint64_t v10 = v22;
    uint64_t v11 = *(void *)(sub_240953178() - 8);
    uint64_t v12 = a3 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v17 = *(void *)(v11 + 72);
    uint64_t v16 = v6 + 32;
    while (1)
    {
      v19(v12, &v21);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v22 = v10;
      unint64_t v14 = *(void *)(v10 + 16);
      unint64_t v13 = *(void *)(v10 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_240875CD8(v13 > 1, v14 + 1, 1);
        uint64_t v10 = v22;
      }
      *(void *)(v10 + 16) = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v14, v8, v18);
      v12 += v17;
      if (!--v9) {
        return v10;
      }
    }
    swift_release();
  }
  return v10;
}

void sub_24086A3FC()
{
  id v0 = objc_msgSend(self, sel_sharedBehavior);
  if (!v0) {
    goto LABEL_9;
  }
  uint64_t v1 = v0;
  unsigned int v2 = objc_msgSend(v0, sel_isAppleInternalInstall);

  if (v2)
  {
    sub_24083EDCC(0, &qword_26AFCDEF0);
    uint64_t v3 = (void *)sub_240954C48();
    uint64_t v4 = (void *)sub_240954788();
    id v5 = objc_msgSend(v3, sel_integerForKey_, v4);

    if (v5)
    {
      if (__OFSUB__(0, v5))
      {
        __break(1u);
LABEL_9:
        __break(1u);
        return;
      }
    }
  }

  sub_240951978();
}

void *sub_24086A52C(uint64_t a1)
{
  unsigned int v2 = v1;
  uint64_t v24 = *v1;
  uint64_t v22 = sub_240951EF8();
  uint64_t v4 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_240951F18();
  uint64_t v7 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  int64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for HealthRecordsGeneratorContext;
  sub_24083D2D8(a1, (uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords19AddAccountGenerator_context, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  uint64_t v20 = sub_240951F68();
  sub_24082EA30(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v10 = sub_240951C08();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_240956800;
  (*(void (**)(unint64_t, void, uint64_t))(v11 + 104))(v13 + v12, *MEMORY[0x263F45580], v10);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F45688], v22);
  sub_240951F08();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))((uint64_t)v2 + OBJC_IVAR____TtC13HealthRecords19AddAccountGenerator_domain, v9, v21);
  sub_240951F38();
  uint64_t v14 = v26;
  uint64_t v15 = v27;
  sub_2408304E8(v25, v26);
  id v16 = sub_240879BC0(v14, v15);
  type metadata accessor for AddAccountDataProvider();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  sub_2408371B8((uint64_t)v25);
  *(void *)((char *)v2 + OBJC_IVAR____TtC13HealthRecords19AddAccountGenerator_dataProvider) = v17;
  uint64_t v18 = sub_24086A894(a1, v17);
  sub_24083AF94(a1, (uint64_t (*)(void))v23);
  v2[2] = v18;
  return v2;
}

uint64_t sub_24086A894(uint64_t a1, uint64_t a2)
{
  uint64_t v82 = a2;
  uint64_t v86 = sub_240951FB8();
  uint64_t v85 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  uint64_t v83 = v3;
  uint64_t v84 = (char *)v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24086F21C();
  uint64_t v89 = v4;
  uint64_t v88 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v87 = (char *)v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24086F370();
  uint64_t v92 = v6;
  uint64_t v91 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v90 = (char *)v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24086F41C();
  uint64_t v95 = v8;
  uint64_t v94 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v93 = (char *)v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24086F590();
  uint64_t v100 = v10;
  uint64_t v98 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v96 = (char *)v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24086F660();
  uint64_t v101 = v12;
  uint64_t v99 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v97 = (char *)v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24086F74C();
  uint64_t v103 = *(void *)(v14 - 8);
  uint64_t v104 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v102 = (char *)v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_240952F68();
  uint64_t v106 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  uint64_t v76 = (char *)v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408450C8();
  uint64_t v81 = v17;
  uint64_t v80 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v79 = (char *)v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_240951A98();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_2409525A8();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240951F38();
  (*(void (**)(char *, void, uint64_t))(v24 + 104))(v26, *MEMORY[0x263F45E78], v23);
  uint64_t v108 = a1;
  uint64_t v27 = (void *)sub_240951F68();
  uint64_t v28 = (void *)sub_240951C68();
  uint64_t v29 = sub_240952588();
  if (v28)
  {
    uint64_t v111 = 0x656C69666F72505BLL;
    unint64_t v112 = 0xE90000000000003ALL;
    uint64_t v107 = v29;
    id v105 = v28;
    id v30 = objc_msgSend(v105, sel_identifier);
    sub_240951A78();

    sub_240951A48();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    sub_2409548A8();
    swift_bridgeObjectRelease();
    sub_2409548A8();

    unint64_t v31 = v111;
    unint64_t v32 = v112;
  }
  else
  {
    unint64_t v32 = 0x800000024095C1A0;
    unint64_t v31 = 0xD000000000000013;
  }
  uint64_t v111 = v31;
  unint64_t v112 = v32;
  sub_2409548A8();

  swift_bridgeObjectRelease();
  uint64_t v33 = v111;
  unint64_t v34 = v112;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  type metadata accessor for FeedItemContextChangeGenerator();
  uint64_t v35 = swift_allocObject();
  sub_24083AB20(&v113, v35 + 16);
  uint64_t v77 = v35;
  *(void *)(v35 + 56) = v33;
  *(void *)(v35 + 64) = v34;
  sub_240951F38();
  sub_2408304E8(&v113, v114);
  sub_240951E98();
  sub_240953248();
  swift_allocObject();
  uint64_t v107 = sub_240953238();
  sub_2408371B8((uint64_t)&v113);
  uint64_t v36 = *MEMORY[0x263F46118];
  uint64_t v37 = v106;
  uint64_t v73 = *(void (**)(char *, uint64_t, uint64_t))(v106 + 104);
  uint64_t v38 = v76;
  uint64_t v39 = v78;
  v73(v76, v36, v78);
  uint64_t v40 = sub_240953228();
  uint64_t v72 = *(void (**)(char *, uint64_t))(v37 + 8);
  v72(v38, v39);
  *(void *)&long long v113 = v40;
  *(void *)(swift_allocObject() + 16) = v109;
  uint64_t v74 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_240841AF0(0, &qword_26AFCDC08, (uint64_t (*)(uint64_t))sub_240849BDC, MEMORY[0x263EFDCF0]);
  v71[4] = v41;
  sub_24086F308();
  id v71[2] = v42;
  v71[3] = sub_240841F04();
  uint64_t v106 = MEMORY[0x263EFDCF8];
  v71[1] = sub_2408369B4((unint64_t *)&qword_26AFCDC10, (void (*)(uint64_t))sub_24086F308);
  uint64_t v43 = v79;
  sub_240954508();
  swift_release();
  swift_release();
  uint64_t v75 = MEMORY[0x263EFDB68];
  v71[0] = sub_2408369B4(&qword_26AFCDA68, (void (*)(uint64_t))sub_2408450C8);
  uint64_t v44 = v81;
  id v105 = (id)sub_240954498();
  uint64_t v45 = *(void (**)(char *, uint64_t))(v80 + 8);
  v45(v43, v44);
  v73(v38, *MEMORY[0x263F46140], v39);
  uint64_t v46 = sub_240953228();
  v72(v38, v39);
  *(void *)&long long v113 = v46;
  uint64_t v47 = swift_allocObject();
  uint64_t v48 = v109;
  *(void *)(v47 + 16) = v109;
  sub_240954508();
  swift_release();
  swift_release();
  uint64_t v49 = sub_240954498();
  v45(v43, v44);
  *(void *)&long long v113 = sub_240954E48();
  uint64_t v110 = v49;
  uint64_t v111 = (uint64_t)v105;
  sub_240841250();
  sub_2408369B4((unint64_t *)&qword_26AFD0468, (void (*)(uint64_t))sub_240841250);
  swift_retain();
  swift_retain();
  uint64_t v50 = v87;
  sub_240954138();
  uint64_t v51 = v85;
  uint64_t v52 = v84;
  uint64_t v53 = v86;
  (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v84, v108, v86);
  unint64_t v54 = (*(unsigned __int8 *)(v51 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  unint64_t v55 = (v83 + v54 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v56 = swift_allocObject();
  *(void *)(v56 + 16) = v48;
  (*(void (**)(unint64_t, char *, uint64_t))(v51 + 32))(v56 + v54, v52, v53);
  *(void *)(v56 + v55) = v48;
  uint64_t v57 = swift_allocObject();
  *(void *)(v57 + 16) = sub_24086F8E4;
  *(void *)(v57 + 24) = v56;
  sub_240840084(0);
  sub_2408369B4(&qword_26AFCD9A8, (void (*)(uint64_t))sub_24086F21C);
  uint64_t v58 = v90;
  uint64_t v59 = v89;
  sub_240954548();
  swift_release();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v50, v59);
  *(void *)(swift_allocObject() + 16) = v48;
  sub_240841AF0(0, &qword_26AFCDC88, (uint64_t (*)(uint64_t))sub_240840084, v74);
  sub_2408369B4(&qword_26AFCDB08, (void (*)(uint64_t))sub_24086F370);
  sub_24086F508();
  uint64_t v60 = v93;
  uint64_t v61 = v92;
  sub_240954508();
  swift_release();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v58, v61);
  sub_24083FEFC(0, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
  sub_2408369B4(&qword_26AFCDA98, (void (*)(uint64_t))sub_24086F41C);
  swift_retain();
  uint64_t v62 = v96;
  uint64_t v63 = v95;
  sub_240954548();
  swift_release();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v60, v63);
  *(void *)(swift_allocObject() + 16) = v48;
  sub_2408418D4();
  sub_2408369B4(&qword_26AFCDB28, (void (*)(uint64_t))sub_24086F590);
  sub_2408369B4(&qword_26AFCDCC0, (void (*)(uint64_t))sub_2408418D4);
  uint64_t v64 = v97;
  uint64_t v65 = v100;
  sub_240954508();
  swift_release();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v62, v65);
  *(void *)&long long v113 = MEMORY[0x263F8EE78];
  sub_2408369B4(&qword_26AFCDAC8, (void (*)(uint64_t))sub_24086F660);
  uint64_t v66 = v101;
  uint64_t v67 = v102;
  sub_2409544C8();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v64, v66);
  sub_2408369B4(&qword_26AFCD9E0, (void (*)(uint64_t))sub_24086F74C);
  uint64_t v68 = v104;
  uint64_t v69 = sub_240954498();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v67, v68);
  return v69;
}

uint64_t sub_24086B924@<X0>(const char *a1@<X2>, uint64_t *a2@<X8>)
{
  uint64_t v33 = a1;
  sub_240849BDC();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24082EA30(0, &qword_268C90AC0, (uint64_t (*)(uint64_t))sub_240849BDC, MEMORY[0x263EFDDF8]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v28 - v10;
  uint64_t v34 = sub_2409540C8();
  uint64_t v12 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954078();
  uint64_t v15 = sub_2409540B8();
  os_log_type_t v16 = sub_240954C18();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v31 = v4;
    uint64_t v17 = swift_slowAlloc();
    unint64_t v32 = a2;
    uint64_t v18 = (uint8_t *)v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v30 = v8;
    uint64_t v20 = v19;
    uint64_t v36 = v19;
    uint64_t v29 = v9;
    *(_DWORD *)uint64_t v18 = 136446210;
    v28[1] = v18 + 4;
    uint64_t v35 = sub_24086FC78(0);
    sub_24086FC98(0, &qword_26AFCCAE8, (void (*)(uint64_t))sub_24086FC78);
    uint64_t v21 = sub_2409547E8();
    uint64_t v35 = sub_2408370E4(v21, v22, &v36);
    uint64_t v9 = v29;
    sub_2409550B8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v15, v16, v33, v18, 0xCu);
    swift_arrayDestroy();
    uint64_t v23 = v20;
    uint64_t v8 = v30;
    MEMORY[0x2456021C0](v23, -1, -1);
    uint64_t v24 = v18;
    a2 = v32;
    MEMORY[0x2456021C0](v24, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v34);
  sub_240951968();
  uint64_t v25 = sub_240951A28();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v6, 0, 1, v25);
  sub_2409543A8();
  sub_2408701D4();
  uint64_t v26 = sub_240954498();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *a2 = v26;
  return result;
}

uint64_t sub_24086BCC8(int a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v50 = a5;
  int v51 = a1;
  sub_240849BDC();
  uint64_t v45 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  os_log_type_t v16 = (char *)&v39 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v39 - v17;
  uint64_t v19 = sub_2409540C8();
  uint64_t v47 = *(void *)(v19 - 8);
  uint64_t v48 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954078();
  uint64_t v49 = a2;
  sub_24083D2D8(a2, (uint64_t)v18, (uint64_t (*)(void))sub_240849BDC);
  uint64_t v46 = v16;
  sub_24083D2D8((uint64_t)a3, (uint64_t)v16, (uint64_t (*)(void))sub_240849BDC);
  unint64_t v22 = sub_2409540B8();
  os_log_type_t v23 = sub_240954C38();
  int v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v43 = a6;
    uint64_t v26 = v25;
    uint64_t v41 = swift_slowAlloc();
    uint64_t v53 = v41;
    *(_DWORD *)uint64_t v26 = 136446978;
    uint64_t v44 = v6;
    uint64_t v52 = sub_24086FC78(0);
    sub_24086FC98(0, &qword_26AFCCAE8, (void (*)(uint64_t))sub_24086FC78);
    int v40 = v24;
    uint64_t v27 = sub_2409547E8();
    os_log_t v39 = v22;
    uint64_t v52 = sub_2408370E4(v27, v28, &v53);
    uint64_t v42 = a3;
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2082;
    if (v51) {
      uint64_t v29 = 1702195828;
    }
    else {
      uint64_t v29 = 0x65736C6166;
    }
    if (v51) {
      unint64_t v30 = 0xE400000000000000;
    }
    else {
      unint64_t v30 = 0xE500000000000000;
    }
    uint64_t v52 = sub_2408370E4(v29, v30, &v53);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 22) = 2082;
    sub_24083D2D8((uint64_t)v18, (uint64_t)v13, (uint64_t (*)(void))sub_240849BDC);
    uint64_t v31 = sub_2409547E8();
    uint64_t v52 = sub_2408370E4(v31, v32, &v53);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    sub_24083AF94((uint64_t)v18, (uint64_t (*)(void))sub_240849BDC);
    *(_WORD *)(v26 + 32) = 2082;
    uint64_t v33 = (uint64_t)v46;
    sub_24083D2D8((uint64_t)v46, (uint64_t)v13, (uint64_t (*)(void))sub_240849BDC);
    uint64_t v34 = sub_2409547E8();
    uint64_t v52 = sub_2408370E4(v34, v35, &v53);
    a3 = v42;
    sub_2409550B8();
    swift_bridgeObjectRelease();
    sub_24083AF94(v33, (uint64_t (*)(void))sub_240849BDC);
    os_log_t v36 = v39;
    _os_log_impl(&dword_240818000, v39, (os_log_type_t)v40, "[%{public}s] (Health records onboarding tile state) Onboardable: %{public}s, General tile dismissal date: %{public}s, Labs tile dismissal date: %{public}s", (uint8_t *)v26, 0x2Au);
    uint64_t v37 = v41;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v37, -1, -1);
    MEMORY[0x2456021C0](v26, -1, -1);
  }
  else
  {
    sub_24083AF94((uint64_t)v18, (uint64_t (*)(void))sub_240849BDC);
    sub_24083AF94((uint64_t)v46, (uint64_t (*)(void))sub_240849BDC);
  }
  (*(void (**)(char *, uint64_t))(v47 + 8))(v21, v48);
  return sub_24086C160(v51 & 1, v49, a3, v50);
}

uint64_t sub_24086C160(char a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v8 = sub_240951A28();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0) {
    return MEMORY[0x263F8EE78];
  }
  sub_240951A18();
  unint64_t v12 = sub_24086CCF8(a2, a3, (uint64_t)v11);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  MEMORY[0x270FA5388](v13);
  v16[-2] = a4;
  uint64_t v14 = sub_24086A1EC((void (*)(uint64_t, uint64_t *))sub_24086FDCC, (uint64_t)&v16[-4], v12);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_24086C2D8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24082EA30(0, &qword_26AFCDDD0, (uint64_t (*)(uint64_t))sub_240840084, MEMORY[0x263EFDDF8]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v44 = (char *)&v36 - v7;
  sub_240841AF0(0, &qword_26AFCDFE0, (uint64_t (*)(uint64_t))sub_240840084, MEMORY[0x263EFDEA0]);
  uint64_t v9 = v8;
  uint64_t v43 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v42 = sub_2409540C8();
  uint64_t v12 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  sub_240954058();
  id v16 = v15;
  id v17 = v15;
  uint64_t v18 = sub_2409540B8();
  os_log_type_t v19 = sub_240954C18();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v38 = v9;
    uint64_t v21 = v20;
    uint64_t v37 = swift_slowAlloc();
    uint64_t v46 = v37;
    *(_DWORD *)uint64_t v21 = 136446466;
    uint64_t v41 = a2;
    uint64_t v45 = sub_24086FC78(0);
    sub_24086FC98(0, &qword_26AFCCAE8, (void (*)(uint64_t))sub_24086FC78);
    uint64_t v40 = v5;
    uint64_t v22 = sub_2409547E8();
    uint64_t v39 = v6;
    uint64_t v45 = sub_2408370E4(v22, v23, &v46);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    uint64_t v36 = v21 + 14;
    uint64_t v45 = (uint64_t)v15;
    id v24 = v15;
    id v25 = v15;
    sub_24083F3C0();
    sub_240955658();
    id v26 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v27 = sub_2409547E8();
    unint64_t v29 = v28;

    uint64_t v30 = v27;
    uint64_t v6 = v39;
    uint64_t v45 = sub_2408370E4(v30, v29, &v46);
    sub_2409550B8();
    uint64_t v5 = v40;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240818000, v18, v19, "[%{public}s] Unable to make feed items for commit: %{public}s", (uint8_t *)v21, 0x16u);
    uint64_t v31 = v37;
    a2 = v41;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v31, -1, -1);
    uint64_t v32 = v21;
    uint64_t v9 = v38;
    MEMORY[0x2456021C0](v32, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v42);
  uint64_t v45 = MEMORY[0x263F8EE78];
  sub_240840084(0);
  uint64_t v33 = v44;
  sub_2409543A8();
  sub_24083F3C0();
  sub_240954368();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v33, v5);
  sub_24086FCD8();
  uint64_t v34 = sub_240954498();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v11, v9);
  *a2 = v34;
  return result;
}

uint64_t sub_24086C7D8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (void *)(a1 + 16);
  sub_2408304E8((void *)(a1 + 16), *(void *)(a1 + 40));
  sub_2408304E8(v3, *(void *)(a1 + 40));
  uint64_t v4 = (void *)sub_240951EE8();
  sub_240951ED8();

  uint64_t v5 = sub_2409549C8();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v8) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_24086C8C0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_240864F38();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_2409540C8();
  uint64_t v9 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  sub_240954058();
  id v13 = v12;
  id v14 = v12;
  uint64_t v15 = sub_2409540B8();
  os_log_type_t v16 = sub_240954C18();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v35 = v5;
    uint64_t v18 = v17;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v39 = v33;
    *(_DWORD *)uint64_t v18 = 136446466;
    uint64_t v38 = sub_24086FC78(0);
    sub_24086FC98(0, &qword_26AFCCAE8, (void (*)(uint64_t))sub_24086FC78);
    uint64_t v34 = v6;
    uint64_t v19 = sub_2409547E8();
    uint64_t v36 = a2;
    uint64_t v38 = sub_2408370E4(v19, v20, &v39);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    v32[1] = v18 + 14;
    uint64_t v38 = (uint64_t)v12;
    id v21 = v12;
    id v22 = v12;
    sub_24083F3C0();
    sub_240955658();
    id v23 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v24 = sub_2409547E8();
    unint64_t v26 = v25;

    uint64_t v27 = v24;
    a2 = v36;
    uint64_t v38 = sub_2408370E4(v27, v26, &v39);
    sub_2409550B8();
    uint64_t v6 = v34;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240818000, v15, v16, "[%{public}s] Unable to compute desired difference for commit: %{public}s", (uint8_t *)v18, 0x16u);
    uint64_t v28 = v33;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v28, -1, -1);
    uint64_t v29 = v18;
    uint64_t v5 = v35;
    MEMORY[0x2456021C0](v29, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v37);
  uint64_t v38 = MEMORY[0x263F8EE78];
  sub_24083FEFC(0, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
  sub_2409543A8();
  sub_2408369B4((unint64_t *)&qword_26AFCDDD8, (void (*)(uint64_t))sub_240864F38);
  uint64_t v30 = sub_240954498();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v30;
  return result;
}

unint64_t sub_24086CCF8(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v72 = a3;
  uint64_t v77 = a2;
  uint64_t v78 = sub_240953178();
  uint64_t v76 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  uint64_t v74 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2409540C8();
  uint64_t v70 = *(void *)(v5 - 8);
  uint64_t v71 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v73 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240849BDC();
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v69 = (uint64_t)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v63 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v63 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v63 - v16;
  uint64_t v18 = sub_240951A28();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v67 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v63 - v23;
  MEMORY[0x270FA5388](v22);
  unint64_t v26 = (char *)&v63 - v25;
  uint64_t v75 = (char *)a1;
  sub_24083D2D8(a1, (uint64_t)v17, (uint64_t (*)(void))sub_240849BDC);
  uint64_t v28 = v19 + 48;
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v29 = v27(v17, 1, v18);
  uint64_t v68 = v19;
  if (v29 == 1)
  {
    sub_24083AF94((uint64_t)v17, (uint64_t (*)(void))sub_240849BDC);
    sub_24083D2D8((uint64_t)v77, (uint64_t)v15, (uint64_t (*)(void))sub_240849BDC);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v26, v17, v18);
    sub_240951968();
    char v30 = sub_2409519F8();
    uint64_t v66 = (void (*)(void))v12;
    uint64_t v31 = v15;
    uint64_t v32 = v27;
    uint64_t v33 = v18;
    uint64_t v34 = *(void (**)(char *, uint64_t))(v19 + 8);
    v34(v24, v33);
    v34(v26, v33);
    uint64_t v18 = v33;
    uint64_t v27 = v32;
    uint64_t v15 = v31;
    uint64_t v12 = (char *)v66;
    sub_24083D2D8((uint64_t)v77, (uint64_t)v15, (uint64_t (*)(void))sub_240849BDC);
    if (v30)
    {
      sub_24083AF94((uint64_t)v15, (uint64_t (*)(void))sub_240849BDC);
      return MEMORY[0x263F8EE78];
    }
  }
  sub_24083D2D8((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))sub_240849BDC);
  if (v27(v12, 1, v18) != 1)
  {
    uint64_t v37 = v67;
    uint64_t v36 = v68;
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v67, v12, v18);
    sub_240951968();
    char v38 = sub_2409519F8();
    uint64_t v39 = *(void (**)(char *, uint64_t))(v36 + 8);
    v39(v24, v18);
    v39(v37, v18);
    sub_24083AF94((uint64_t)v15, (uint64_t (*)(void))sub_240849BDC);
    uint64_t v35 = v73;
    if ((v38 & 1) == 0) {
      goto LABEL_9;
    }
    return MEMORY[0x263F8EE78];
  }
  sub_24083AF94((uint64_t)v12, (uint64_t (*)(void))sub_240849BDC);
  sub_24083AF94((uint64_t)v15, (uint64_t (*)(void))sub_240849BDC);
  uint64_t v35 = v73;
LABEL_9:
  sub_24082EA30(0, &qword_26AFCE290, MEMORY[0x263F46178], MEMORY[0x263F8E0F8]);
  uint64_t v41 = v76;
  unint64_t v42 = (*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
  uint64_t v68 = *(void *)(v76 + 72);
  unint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_240956800;
  uint64_t v67 = (char *)v42;
  uint64_t v43 = (BOOL *)(v40 + v42);
  uint64_t v44 = (uint64_t)v75;
  *uint64_t v43 = v27(v75, 1, v18) != 1;
  uint64_t v45 = *MEMORY[0x263F46170];
  uint64_t v66 = *(void (**)(void))(v41 + 104);
  ((void (*)(BOOL *, uint64_t, uint64_t))v66)(v43, v45, v78);
  sub_240954078();
  uint64_t v46 = v18;
  uint64_t v47 = v69;
  sub_24083D2D8(v44, v69, (uint64_t (*)(void))sub_240849BDC);
  uint64_t v48 = sub_2409540B8();
  os_log_type_t v49 = sub_240954C38();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = swift_slowAlloc();
    uint64_t v64 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v27;
    uint64_t v51 = v50;
    uint64_t v65 = swift_slowAlloc();
    v80[0] = v65;
    *(_DWORD *)uint64_t v51 = 136446466;
    uint64_t v63 = v28;
    uint64_t v79 = sub_24086FC78(0);
    sub_24086FC98(0, &qword_26AFCCAE8, (void (*)(uint64_t))sub_24086FC78);
    uint64_t v52 = sub_2409547E8();
    uint64_t v79 = sub_2408370E4(v52, v53, v80);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v51 + 12) = 2082;
    int v54 = v64(v47, 1, v46);
    BOOL v55 = v54 == 1;
    if (v54 == 1) {
      uint64_t v56 = 0x65736C6166;
    }
    else {
      uint64_t v56 = 1702195828;
    }
    if (v55) {
      unint64_t v57 = 0xE500000000000000;
    }
    else {
      unint64_t v57 = 0xE400000000000000;
    }
    uint64_t v79 = sub_2408370E4(v56, v57, v80);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    sub_24083AF94(v47, (uint64_t (*)(void))sub_240849BDC);
    _os_log_impl(&dword_240818000, v48, v49, "[%{public}s] Generating general CHR onboarding tile, hidden in Summary: %{public}s", (uint8_t *)v51, 0x16u);
    uint64_t v58 = v65;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v58, -1, -1);
    MEMORY[0x2456021C0](v51, -1, -1);

    (*(void (**)(char *, uint64_t))(v70 + 8))(v73, v71);
  }
  else
  {
    sub_24083AF94(v47, (uint64_t (*)(void))sub_240849BDC);

    (*(void (**)(char *, uint64_t))(v70 + 8))(v35, v71);
  }
  char v59 = sub_24086E4F0((uint64_t)v75, v77, v72);
  *uint64_t v74 = v59 & 1;
  v66();
  unint64_t v61 = *(void *)(v40 + 16);
  unint64_t v60 = *(void *)(v40 + 24);
  if (v61 >= v60 >> 1) {
    unint64_t v40 = sub_2408C308C(v60 > 1, v61 + 1, 1, v40);
  }
  *(void *)(v40 + 16) = v61 + 1;
  (*(void (**)(char *, unsigned char *, uint64_t))(v76 + 32))(&v67[v40 + v61 * v68], v74, v78);
  return v40;
}

uint64_t sub_24086D5A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v78 = a3;
  uint64_t v85 = a2;
  uint64_t v77 = a4;
  uint64_t v67 = sub_240952138();
  uint64_t v65 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v63 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_2409521C8();
  uint64_t v64 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v62 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2409535F8();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v82 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240953638();
  uint64_t v80 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v88 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_240953178();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v74 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v61 - v15;
  sub_24082EA30(0, &qword_26AFCD990, MEMORY[0x263F46178], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v61 - v18;
  uint64_t v87 = sub_240952DA8();
  uint64_t v79 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v22(v19, a1, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v19, 0, 1, v11);
  sub_240952D88();
  uint64_t v73 = v12 + 16;
  uint64_t v72 = v22;
  v22(v16, a1, v11);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t))(v12 + 88);
  int v24 = v23(v16, v11);
  int v25 = *MEMORY[0x263F46170];
  uint64_t v81 = v9;
  uint64_t v86 = v21;
  uint64_t v76 = v11;
  uint64_t v75 = v12;
  uint64_t v71 = v12 + 88;
  uint64_t v70 = v23;
  int v69 = v25;
  if (v24 == v25)
  {
    unint64_t v26 = (void *)sub_240951F68();
    uint64_t v27 = (void *)sub_240951C68();

    uint64_t v28 = MEMORY[0x2455FF610](v27);
  }
  else
  {
    if (v24 != *MEMORY[0x263F46168]) {
      goto LABEL_25;
    }
    char v30 = (void *)sub_240951F68();
    uint64_t v27 = (void *)sub_240951C68();

    uint64_t v28 = MEMORY[0x2455FF620](v27);
  }
  uint64_t v84 = v28;
  v90[4] = v29;

  sub_240953148();
  sub_240953118();
  sub_240953108();
  sub_240953168();
  uint64_t v68 = a1;
  sub_240953128();
  swift_bridgeObjectRetain();
  uint64_t v31 = v88;
  sub_240953628();
  sub_2409517C8();
  swift_allocObject();
  sub_2409517B8();
  sub_2408369B4(&qword_26AFCD988, MEMORY[0x263F460E8]);
  uint64_t v33 = v86;
  uint64_t v32 = v87;
  uint64_t v34 = v83;
  uint64_t v35 = sub_2409517A8();
  if (v34)
  {
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v80 + 8))(v31, v81);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v33, v32);
    *uint64_t v78 = v34;
    return result;
  }
  uint64_t v38 = v35;
  unint64_t v39 = v36;
  uint64_t v83 = 0;
  swift_release();
  unint64_t v40 = (void *)sub_240951F68();
  uint64_t v41 = v68;
  uint64_t v85 = sub_240953158();
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_2409553D8()) {
    sub_24086FDEC(MEMORY[0x263F8EE78]);
  }
  type metadata accessor for AddAccountFeedItemViewController();
  sub_2408369B4(&qword_26AFCE138, (void (*)(uint64_t))type metadata accessor for AddAccountFeedItemViewController);
  sub_240951D08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_240849C48(v38, v39);
  swift_bridgeObjectRelease();
  unint64_t v42 = v74;
  uint64_t v43 = v76;
  v72(v74, v41, v76);
  int v44 = v70(v42, v43);
  if (v44 == v69)
  {
    (*(void (**)(char *, uint64_t))(v75 + 96))(v42, v43);
    id v45 = objc_msgSend(self, sel_allTypes);
    sub_24083EDCC(0, &qword_26AFCF3A0);
    unint64_t v46 = sub_240954998();

    uint64_t v47 = sub_24093D640(v46);
    swift_bridgeObjectRelease();
    sub_24086E13C(v47);
    swift_bridgeObjectRelease();
    sub_240951DA8();
    sub_240951D58();
    uint64_t v48 = v67;
    uint64_t v49 = v66;
    uint64_t v50 = v86;
LABEL_19:
    (*(void (**)(char *, void, uint64_t))(v65 + 104))(v63, *MEMORY[0x263F45700], v48);
    uint64_t v56 = v62;
    sub_2409521D8();
    sub_240951D38();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v56, v49);
    sub_240953118();
    sub_240951D78();
    sub_240953108();
    sub_240951DC8();
    uint64_t v57 = sub_240952048();
    uint64_t v59 = v58;
    unint64_t v60 = (void (*)(unint64_t *, void))sub_240951E38();
    sub_240940118(v90, v57, v59);
    swift_bridgeObjectRelease();
    v60(&v89, 0);
    (*(void (**)(char *, uint64_t))(v80 + 8))(v88, v81);
    return (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v50, v87);
  }
  uint64_t v50 = v86;
  uint64_t v51 = v75;
  if (v44 != *MEMORY[0x263F46168])
  {
    sub_240951DA8();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v42, v43);
    uint64_t v48 = v67;
LABEL_18:
    uint64_t v49 = v66;
    goto LABEL_19;
  }
  (*(void (**)(char *, uint64_t))(v75 + 96))(v42, v43);
  sub_24083FEFC(0, (unint64_t *)&qword_26AFCF418, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2409568A0;
  id v53 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A1A8]), sel_initWithIdentifier_, *MEMORY[0x263F09490]);
  if (v53)
  {
    *(void *)(inited + 32) = v53;
    unint64_t v89 = inited;
    sub_2409549B8();
    unint64_t v54 = v89;
    if (v89 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_2409553D8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v55 = *(void *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v48 = v67;
    if (v55) {
      sub_2408BAC8C(v54);
    }
    swift_bridgeObjectRelease();
    sub_240951DA8();
    sub_240951D58();
    goto LABEL_18;
  }
  __break(1u);
LABEL_25:
  uint64_t result = sub_240955608();
  __break(1u);
  return result;
}

uint64_t sub_24086E13C(uint64_t a1)
{
  uint64_t v1 = a1;
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_2409551C8()) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v3 = MEMORY[0x263F8EE88];
    if (v2) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v8 = -1 << *(unsigned char *)(v1 + 32);
    uint64_t v29 = v1 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(v1 + 56);
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    uint64_t v6 = 0;
    goto LABEL_11;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_6;
  }
LABEL_3:
  sub_240870140();
  uint64_t v3 = sub_240955278();
  if (!v2) {
    goto LABEL_7;
  }
LABEL_4:
  swift_bridgeObjectRetain();
  swift_retain();
  sub_240955188();
  sub_24083EDCC(0, &qword_26AFCF3A0);
  sub_240857DB8((unint64_t *)&unk_26AFCF3A8, &qword_26AFCF3A0);
  uint64_t result = sub_240954B78();
  uint64_t v1 = v31;
  uint64_t v29 = v32;
  uint64_t v5 = v33;
  uint64_t v6 = v34;
  unint64_t v7 = v35;
LABEL_11:
  int64_t v11 = (unint64_t)(v5 + 64) >> 6;
  uint64_t v12 = v3 + 56;
  while (v1 < 0)
  {
    if (!sub_2409551F8()) {
      goto LABEL_45;
    }
    sub_24083EDCC(0, &qword_26AFCF3A0);
    swift_dynamicCast();
    uint64_t v16 = v30;
LABEL_36:
    uint64_t result = sub_240954FB8();
    uint64_t v22 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v13 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v3 + 48) + 8 * v13) = v16;
    ++*(void *)(v3 + 16);
  }
  if (v7)
  {
    unint64_t v14 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v15 = v14 | (v6 << 6);
LABEL_35:
    uint64_t v16 = *(void **)(*(void *)(v1 + 48) + 8 * v15);
    char v30 = v16;
    id v21 = v16;
    goto LABEL_36;
  }
  int64_t v17 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v17 >= v11) {
      goto LABEL_45;
    }
    unint64_t v18 = *(void *)(v29 + 8 * v17);
    uint64_t v19 = v6 + 1;
    if (!v18)
    {
      uint64_t v19 = v6 + 2;
      if (v6 + 2 >= v11) {
        goto LABEL_45;
      }
      unint64_t v18 = *(void *)(v29 + 8 * v19);
      if (!v18)
      {
        uint64_t v19 = v6 + 3;
        if (v6 + 3 >= v11) {
          goto LABEL_45;
        }
        unint64_t v18 = *(void *)(v29 + 8 * v19);
        if (!v18)
        {
          uint64_t v19 = v6 + 4;
          if (v6 + 4 >= v11) {
            goto LABEL_45;
          }
          unint64_t v18 = *(void *)(v29 + 8 * v19);
          if (!v18)
          {
            uint64_t v19 = v6 + 5;
            if (v6 + 5 >= v11) {
              goto LABEL_45;
            }
            unint64_t v18 = *(void *)(v29 + 8 * v19);
            if (!v18)
            {
              uint64_t v20 = v6 + 6;
              while (v11 != v20)
              {
                unint64_t v18 = *(void *)(v29 + 8 * v20++);
                if (v18)
                {
                  uint64_t v19 = v20 - 1;
                  goto LABEL_34;
                }
              }
LABEL_45:
              swift_release();
              sub_24084072C();
              return v3;
            }
          }
        }
      }
    }
LABEL_34:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v19 << 6);
    uint64_t v6 = v19;
    goto LABEL_35;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_24086E4F0(uint64_t a1, char *a2, uint64_t a3)
{
  unint64_t v89 = a2;
  uint64_t v90 = a3;
  uint64_t v4 = sub_2409540C8();
  uint64_t v93 = *(void *)(v4 - 8);
  uint64_t v94 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)v80 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  unint64_t v13 = (char *)v80 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)v80 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v91 = (char *)v80 - v17;
  sub_240849BDC();
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_240951A28();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  char v25 = (char *)v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  BOOL v27 = (char *)v80 - v26;
  sub_24083D2D8(a1, (uint64_t)v20, (uint64_t (*)(void))sub_240849BDC);
  uint64_t v92 = v22;
  uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  if (v28(v20, 1, v21) == 1)
  {
    sub_24083AF94((uint64_t)v20, (uint64_t (*)(void))sub_240849BDC);
    sub_240954078();
    uint64_t v29 = sub_2409540B8();
    os_log_type_t v30 = sub_240954C38();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v96 = v32;
      uint64_t v33 = v93;
      *(_DWORD *)uint64_t v31 = 136446210;
      uint64_t v95 = sub_24086FC78(0);
      sub_24086FC98(0, &qword_26AFCCAE8, (void (*)(uint64_t))sub_24086FC78);
      uint64_t v34 = sub_2409547E8();
      uint64_t v95 = sub_2408370E4(v34, v35, &v96);
      sub_2409550B8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240818000, v29, v30, "[%{public}s] General CHR Onboarding tile has not been dismissed", v31, 0xCu);
      uint64_t v36 = 1;
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v32, -1, -1);
      MEMORY[0x2456021C0](v31, -1, -1);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v94);
      return v36;
    }

    (*(void (**)(char *, uint64_t))(v93 + 8))(v7, v94);
    return 1;
  }
  uint64_t v85 = v10;
  uint64_t v86 = v25;
  uint64_t v83 = v16;
  uint64_t v84 = v13;
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v92 + 32);
  uint64_t v88 = v21;
  v37(v27, v20, v21);
  uint64_t v87 = v27;
  uint64_t v38 = sub_240899998((uint64_t)v27);
  unint64_t v40 = v39;
  uint64_t v41 = v91;
  sub_240954078();
  swift_bridgeObjectRetain();
  unint64_t v42 = sub_2409540B8();
  os_log_type_t v43 = sub_240954C38();
  int v44 = v43;
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v45 = swift_slowAlloc();
    int v81 = v44;
    uint64_t v46 = v45;
    uint64_t v82 = swift_slowAlloc();
    uint64_t v96 = v82;
    *(_DWORD *)uint64_t v46 = 136446466;
    v80[1] = v46 + 4;
    uint64_t v95 = sub_24086FC78(0);
    sub_24086FC98(0, &qword_26AFCCAE8, (void (*)(uint64_t))sub_24086FC78);
    uint64_t v47 = sub_2409547E8();
    uint64_t v95 = sub_2408370E4(v47, v48, &v96);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v46 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v95 = sub_2408370E4(v38, v40, &v96);
    sub_2409550B8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_240818000, v42, (os_log_type_t)v81, "[%{public}s] %{public}s elapsed since general tile dismissal", (uint8_t *)v46, 0x16u);
    uint64_t v49 = v82;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v49, -1, -1);
    MEMORY[0x2456021C0](v46, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v50 = *(void (**)(char *, uint64_t))(v93 + 8);
  v50(v41, v94);
  uint64_t v51 = v88;
  uint64_t v52 = v86;
  if (v28(v89, 1, v88) != 1)
  {
    uint64_t v64 = v85;
    sub_240954078();
    uint64_t v65 = sub_2409540B8();
    os_log_type_t v66 = sub_240954C38();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = (uint8_t *)swift_slowAlloc();
      uint64_t v68 = swift_slowAlloc();
      uint64_t v96 = v68;
      *(_DWORD *)uint64_t v67 = 136446210;
      uint64_t v95 = sub_24086FC78(0);
      sub_24086FC98(0, &qword_26AFCCAE8, (void (*)(uint64_t))sub_24086FC78);
      uint64_t v69 = sub_2409547E8();
      uint64_t v70 = v92;
      uint64_t v95 = sub_2408370E4(v69, v71, &v96);
      sub_2409550B8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240818000, v65, v66, "[%{public}s] Labs CHR Onboarding tile has been dismissed", v67, 0xCu);
      uint64_t v36 = 1;
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v68, -1, -1);
      MEMORY[0x2456021C0](v67, -1, -1);

      v50(v85, v94);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v87, v88);
      return v36;
    }

    v50(v64, v94);
    (*(void (**)(char *, uint64_t))(v92 + 8))(v87, v51);
    return 1;
  }
  sub_24086A3FC();
  sub_2408369B4(&qword_268C90AB8, MEMORY[0x263F07490]);
  char v53 = sub_240954738();
  uint64_t v54 = v51;
  uint64_t v55 = *(void (**)(char *, uint64_t))(v92 + 8);
  uint64_t v56 = v92 + 8;
  v55(v52, v54);
  if (v53)
  {
    uint64_t v57 = v84;
    sub_240954078();
    uint64_t v58 = sub_2409540B8();
    os_log_type_t v59 = sub_240954C38();
    if (os_log_type_enabled(v58, v59))
    {
      unint64_t v60 = (uint8_t *)swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      uint64_t v96 = v61;
      *(_DWORD *)unint64_t v60 = 136446210;
      uint64_t v95 = sub_24086FC78(0);
      sub_24086FC98(0, &qword_26AFCCAE8, (void (*)(uint64_t))sub_24086FC78);
      uint64_t v62 = sub_2409547E8();
      uint64_t v92 = v56;
      uint64_t v95 = sub_2408370E4(v62, v63, &v96);
      sub_2409550B8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240818000, v58, v59, "[%{public}s] Not enough time elapsed to show Labs CHR Onboarding tile in Summary", v60, 0xCu);
      uint64_t v36 = 1;
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v61, -1, -1);
      MEMORY[0x2456021C0](v60, -1, -1);

      v50(v84, v94);
      v55(v87, v88);
      return v36;
    }

    v50(v57, v94);
    v55(v87, v88);
    return 1;
  }
  uint64_t v72 = v83;
  sub_240954078();
  uint64_t v73 = sub_2409540B8();
  os_log_type_t v74 = sub_240954C38();
  if (os_log_type_enabled(v73, v74))
  {
    uint64_t v75 = (uint8_t *)swift_slowAlloc();
    uint64_t v76 = swift_slowAlloc();
    uint64_t v96 = v76;
    *(_DWORD *)uint64_t v75 = 136446210;
    uint64_t v95 = sub_24086FC78(0);
    sub_24086FC98(0, &qword_26AFCCAE8, (void (*)(uint64_t))sub_24086FC78);
    uint64_t v77 = sub_2409547E8();
    uint64_t v92 = v56;
    uint64_t v95 = sub_2408370E4(v77, v78, &v96);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v73, v74, "[%{public}s] Generating Labs CHR Onboarding tile in Summary", v75, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v76, -1, -1);
    MEMORY[0x2456021C0](v75, -1, -1);

    v50(v83, v94);
  }
  else
  {

    v50(v72, v94);
  }
  v55(v87, v88);
  return 0;
}

uint64_t sub_24086F074()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HealthRecords19AddAccountGenerator_domain;
  uint64_t v2 = sub_240951F18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_24083AF94(v0 + OBJC_IVAR____TtC13HealthRecords19AddAccountGenerator_context, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_24086F150()
{
  return type metadata accessor for AddAccountGenerator();
}

uint64_t type metadata accessor for AddAccountGenerator()
{
  uint64_t result = qword_26AFCFC30;
  if (!qword_26AFCFC30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24086F1A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC13HealthRecords19AddAccountGenerator_domain;
  uint64_t v4 = sub_240951F18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_24086F21C()
{
  if (!qword_26AFCD9B0)
  {
    sub_240841250();
    sub_24086F308();
    sub_2408369B4((unint64_t *)&qword_26AFD0468, (void (*)(uint64_t))sub_240841250);
    sub_2408369B4((unint64_t *)&qword_26AFCDC10, (void (*)(uint64_t))sub_24086F308);
    unint64_t v0 = sub_240954128();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCD9B0);
    }
  }
}

void sub_24086F308()
{
  if (!qword_26AFCDC18)
  {
    sub_240849BDC();
    unint64_t v0 = sub_240954308();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDC18);
    }
  }
}

void sub_24086F370()
{
  if (!qword_26AFCDB10)
  {
    sub_24086F21C();
    sub_240840084(255);
    sub_2408369B4(&qword_26AFCD9A8, (void (*)(uint64_t))sub_24086F21C);
    unint64_t v0 = sub_240954258();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDB10);
    }
  }
}

void sub_24086F41C()
{
  if (!qword_26AFCDAA0)
  {
    sub_24086F370();
    sub_240841AF0(255, &qword_26AFCDC88, (uint64_t (*)(uint64_t))sub_240840084, MEMORY[0x263EFDCF0]);
    sub_2408369B4(&qword_26AFCDB08, (void (*)(uint64_t))sub_24086F370);
    sub_24086F508();
    unint64_t v0 = sub_2409541F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDAA0);
    }
  }
}

unint64_t sub_24086F508()
{
  unint64_t result = qword_26AFCDC80;
  if (!qword_26AFCDC80)
  {
    sub_240841AF0(255, &qword_26AFCDC88, (uint64_t (*)(uint64_t))sub_240840084, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCDC80);
  }
  return result;
}

void sub_24086F590()
{
  if (!qword_26AFCDB30)
  {
    sub_24086F41C();
    sub_24083FEFC(255, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
    sub_2408369B4(&qword_26AFCDA98, (void (*)(uint64_t))sub_24086F41C);
    unint64_t v0 = sub_240954258();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDB30);
    }
  }
}

void sub_24086F660()
{
  if (!qword_26AFCDAD0)
  {
    sub_24086F590();
    sub_2408418D4();
    sub_2408369B4(&qword_26AFCDB28, (void (*)(uint64_t))sub_24086F590);
    sub_2408369B4(&qword_26AFCDCC0, (void (*)(uint64_t))sub_2408418D4);
    unint64_t v0 = sub_2409541F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDAD0);
    }
  }
}

void sub_24086F74C()
{
  if (!qword_26AFCD9E8)
  {
    sub_24086F660();
    sub_2408369B4(&qword_26AFCDAC8, (void (*)(uint64_t))sub_24086F660);
    unint64_t v0 = sub_240954178();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCD9E8);
    }
  }
}

uint64_t sub_24086F7E0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24086F7F0@<X0>(uint64_t *a1@<X8>)
{
  return sub_24086B924("[%{public}s] Unable to fetch CHR generic tile dismissed date", a1);
}

uint64_t sub_24086F814()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24086F824@<X0>(uint64_t *a1@<X8>)
{
  return sub_24086B924("[%{public}s] Unable to fetch CHR labs tile dismissed date", a1);
}

uint64_t sub_24086F848()
{
  uint64_t v1 = sub_240951FB8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_24086F8E4(int a1, uint64_t a2, char *a3)
{
  uint64_t v7 = *(void *)(sub_240951FB8() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_24086BCC8(a1, a2, a3, *(void *)(v3 + 16), v3 + v8, *(void *)(v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_24086F998()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24086F9D0@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v6 = *(uint64_t (**)(uint64_t, unsigned __int8 *, unsigned __int8 *))(v2 + 16);
  uint64_t v7 = *a1;
  sub_24086FD60();
  uint64_t result = v6(v7, &a1[*(int *)(v8 + 48)], &a1[*(int *)(v8 + 64)]);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_24086FA40()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24086FA50@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24086C2D8(a1, a2);
}

uint64_t sub_24086FA58@<X0>(uint64_t *a1@<X8>)
{
  return sub_24086C7D8(v1, a1);
}

uint64_t sub_24086FA74()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24086FA84@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24086C8C0(a1, a2);
}

uint64_t sub_24086FA8C(unint64_t a1, unint64_t a2)
{
  sub_24083EDCC(0, &qword_26AFCF390);
  if (a2 >> 62)
  {
    uint64_t v4 = sub_2409553E8();
    self;
    if (swift_dynamicCastObjCClass()) {
      return v4;
    }
  }
  else
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
    {
      uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
      swift_unknownObjectRetain();
      self;
      if (!swift_dynamicCastObjCClass()) {
        goto LABEL_10;
      }
      return v4;
    }
    __break(1u);
  }
LABEL_10:
  sub_2409552A8();
  sub_2409548A8();
  sub_2409557A8();
  sub_2409548A8();
  swift_bridgeObjectRelease();
  sub_2409548A8();
  swift_getObjectType();
  swift_unknownObjectRelease();
  sub_2409557A8();
  sub_2409548A8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_2409553B8();
  __break(1u);
  return result;
}

uint64_t sub_24086FC78(uint64_t a1)
{
  return sub_24086FC98(a1, &qword_26AFCCAE0, (void (*)(uint64_t))type metadata accessor for AddAccountGenerator);
}

uint64_t sub_24086FC98(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a2;
  if (!*a2)
  {
    a3(255);
    uint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_24086FCD8()
{
  unint64_t result = qword_26AFCDFD8;
  if (!qword_26AFCDFD8)
  {
    sub_240841AF0(255, &qword_26AFCDFE0, (uint64_t (*)(uint64_t))sub_240840084, MEMORY[0x263EFDEA0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCDFD8);
  }
  return result;
}

void sub_24086FD60()
{
  if (!qword_26AFCDEE8)
  {
    sub_240849BDC();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_26AFCDEE8);
    }
  }
}

uint64_t sub_24086FDCC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24086D5A8(a1, *(void *)(v3 + 16), a2, a3);
}

void sub_24086FDEC(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_2409553D8();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_240870140();
      uint64_t v3 = sub_240955278();
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_2409553D8();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = MEMORY[0x263F8EE88];
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = v3 + 56;
  uint64_t v42 = v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = sub_24086FA8C(v8, a1);
      BOOL v10 = __OFADD__(v8++, 1);
      if (v10)
      {
        __break(1u);
        goto LABEL_37;
      }
      uint64_t v11 = v9;
      uint64_t v12 = sub_240954FB8();
      uint64_t v13 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v14 = v12 & ~v13;
      unint64_t v15 = v14 >> 6;
      uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
      uint64_t v17 = 1 << v14;
      if (((1 << v14) & v16) != 0)
      {
        sub_24083EDCC(0, &qword_26AFCF390);
        id v18 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
        char v19 = sub_240954FC8();

        if (v19)
        {
LABEL_11:
          swift_unknownObjectRelease();
          uint64_t v5 = v42;
          goto LABEL_12;
        }
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
          char v22 = sub_240954FC8();

          if (v22) {
            goto LABEL_11;
          }
        }
        uint64_t v5 = v42;
      }
      *(void *)(v7 + 8 * v15) = v17 | v16;
      *(void *)(*(void *)(v3 + 48) + 8 * v14) = v11;
      uint64_t v23 = *(void *)(v3 + 16);
      BOOL v10 = __OFADD__(v23, 1);
      uint64_t v24 = v23 + 1;
      if (v10) {
        goto LABEL_38;
      }
      *(void *)(v3 + 16) = v24;
LABEL_12:
      if (v8 == v5) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v40 = a1 + 32;
  uint64_t v41 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v41)
  {
    id v26 = *(id *)(v40 + 8 * v25);
    uint64_t v27 = sub_240954FB8();
    uint64_t v28 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v29 = v27 & ~v28;
    unint64_t v30 = v29 >> 6;
    uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
    uint64_t v32 = 1 << v29;
    if (((1 << v29) & v31) != 0)
    {
      sub_24083EDCC(0, &qword_26AFCF390);
      id v33 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
      char v34 = sub_240954FC8();

      if (v34)
      {
LABEL_24:

        goto LABEL_25;
      }
      uint64_t v35 = ~v28;
      while (1)
      {
        unint64_t v29 = (v29 + 1) & v35;
        unint64_t v30 = v29 >> 6;
        uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
        uint64_t v32 = 1 << v29;
        if ((v31 & (1 << v29)) == 0) {
          break;
        }
        id v36 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
        char v37 = sub_240954FC8();

        if (v37) {
          goto LABEL_24;
        }
      }
    }
    *(void *)(v7 + 8 * v30) = v32 | v31;
    *(void *)(*(void *)(v3 + 48) + 8 * v29) = v26;
    uint64_t v38 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v38, 1);
    uint64_t v39 = v38 + 1;
    if (v10) {
      goto LABEL_39;
    }
    *(void *)(v3 + 16) = v39;
LABEL_25:
    if (++v25 == v42) {
      return;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

void sub_240870140()
{
  if (!qword_26AFCF3D8)
  {
    sub_24083EDCC(255, &qword_26AFCF390);
    sub_240857DB8(&qword_26AFCF398, &qword_26AFCF390);
    unint64_t v0 = sub_240955288();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF3D8);
    }
  }
}

unint64_t sub_2408701D4()
{
  unint64_t result = qword_268C90AC8;
  if (!qword_268C90AC8)
  {
    sub_24082EA30(255, &qword_268C90AC0, (uint64_t (*)(uint64_t))sub_240849BDC, MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90AC8);
  }
  return result;
}

uint64_t sub_24087025C(uint64_t a1)
{
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v3 = sub_240955178();
    uint64_t v5 = v4;
    uint64_t v6 = sub_240955208();
    char v8 = MEMORY[0x245601480](v3, v5, v6, v7);
    swift_bridgeObjectRelease();
    if (v8)
    {
LABEL_3:
      sub_240878624(v3, v5, v2 != 0);
      return 0;
    }
LABEL_7:
    sub_240877964(v3, v5, v2 != 0, a1);
    uint64_t v9 = v13;
    sub_240878624(v3, v5, v2 != 0);
    return v9;
  }
  uint64_t result = sub_240877BDC(a1);
  if ((v12 & 1) == 0)
  {
    uint64_t v5 = v11;
    if (*(_DWORD *)(a1 + 36) == v11)
    {
      uint64_t v3 = result;
      if (result == 1 << *(unsigned char *)(a1 + 32)) {
        goto LABEL_3;
      }
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_24087036C()
{
  uint64_t v1 = OBJC_IVAR____TtC13HealthRecords30HealthRecordsPluginAppDelegate____lazy_storage___notificationCenterDelegate;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC13HealthRecords30HealthRecordsPluginAppDelegate____lazy_storage___notificationCenterDelegate))
  {
    id v2 = *(id *)(v0
               + OBJC_IVAR____TtC13HealthRecords30HealthRecordsPluginAppDelegate____lazy_storage___notificationCenterDelegate);
  }
  else
  {
    uint64_t v3 = v0;
    sub_240952808();
    uint64_t v4 = (void *)sub_2409527D8();
    uint64_t v5 = (void *)sub_240952798();

    id v6 = objc_msgSend(v5, sel_healthStore);
    id v7 = objc_allocWithZone((Class)sub_240952BB8());
    char v8 = (void *)sub_240952BA8();
    *(void *)(v3 + v1) = v8;
    id v2 = v8;
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  return v2;
}

uint64_t sub_240870474(char a1, uint64_t a2, void (*a3)(void), uint64_t a4, void *a5)
{
  id v78 = a5;
  uint64_t v8 = sub_240951A98();
  uint64_t v79 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  BOOL v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_240952B98();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240878630(0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_2409539A8();
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  char v22 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0) {
    return ((uint64_t (*)(void, void))a3)(0, 0);
  }
  uint64_t v74 = v20;
  uint64_t v75 = v19;
  uint64_t v76 = a4;
  uint64_t v77 = a3;
  uint64_t v23 = sub_240951AB8();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
  uint64_t v68 = v23;
  uint64_t v67 = v25;
  uint64_t v66 = v24 + 56;
  ((void (*)(char *, uint64_t, uint64_t))v25)(v17, 1, 1);
  sub_240952B88();
  sub_2409535A8();
  uint64_t v26 = v8;
  uint64_t v27 = v79;
  uint64_t v28 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v69 = v12 + 8;
  uint64_t v70 = v11;
  uint64_t v65 = v28;
  v28(v14, v11);
  sub_240849924((uint64_t)v17, (uint64_t (*)(void))sub_240878630);
  sub_240951A88();
  sub_240951A48();
  unint64_t v29 = *(void (**)(void))(v27 + 8);
  uint64_t v72 = v10;
  uint64_t v73 = v26;
  uint64_t v79 = v27 + 8;
  unint64_t v71 = v29;
  v29();
  unint64_t v30 = v22;
  sub_240953998();
  sub_240953C88();
  uint64_t v31 = (uint64_t)v78;
  id v32 = v78;
  uint64_t v64 = sub_240953748();
  uint64_t v34 = v33;
  uint64_t v35 = (void *)sub_240954988();
  id v36 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v36)
  {
    uint64_t v37 = sub_2409547C8();
    uint64_t v39 = v38;
  }
  else
  {
    uint64_t v37 = 0;
    uint64_t v39 = 0;
  }
  v67(v17, 1, 1, v68);
  sub_240952B88();
  uint64_t v41 = sub_2409535A8();
  uint64_t v43 = v42;
  v65(v14, v70);
  sub_240849924((uint64_t)v17, (uint64_t (*)(void))sub_240878630);
  uint64_t v44 = type metadata accessor for HealthRecordsPluginAppDelegate.CHRAccountsListItem();
  uint64_t v82 = v44;
  uint64_t v83 = sub_240873E98(&qword_268C90C28, 255, (void (*)(uint64_t))type metadata accessor for HealthRecordsPluginAppDelegate.CHRAccountsListItem);
  uint64_t v45 = sub_240851B6C(v81);
  *uint64_t v45 = v64;
  v45[1] = v34;
  v45[2] = v37;
  v45[3] = v39;
  v45[4] = v41;
  v45[5] = v43;
  v45[6] = 0;
  v45[7] = 0;
  *((unsigned char *)v45 + 64) = 1;
  sub_240951A88();
  *(uint64_t *)((char *)v45 + *(int *)(v44 + 40)) = v31;
  uint64_t v46 = (void (*)(char *, void))sub_240953988();
  unint64_t v48 = v47;
  uint64_t v49 = (void *)*v47;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *unint64_t v48 = (uint64_t)v49;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v49 = sub_2408C30D4(0, v49[2] + 1, 1, v49);
    *unint64_t v48 = (uint64_t)v49;
  }
  unint64_t v52 = v49[2];
  unint64_t v51 = v49[3];
  if (v52 >= v51 >> 1) {
    *unint64_t v48 = (uint64_t)sub_2408C30D4((void *)(v51 > 1), v52 + 1, 1, v49);
  }
  uint64_t v53 = v82;
  uint64_t v54 = v83;
  uint64_t v55 = sub_2408792E8((uint64_t)v81, v82);
  MEMORY[0x270FA5388](v55);
  uint64_t v57 = (char *)&v64 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v58 + 16))(v57);
  sub_240877C64(v52, (uint64_t)v57, v48, v53, v54);
  sub_2408371B8((uint64_t)v81);
  v46(v80, 0);
  sub_240878664(0, (unint64_t *)&unk_268C90C30, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
  uint64_t v59 = v74;
  unint64_t v60 = (*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
  uint64_t v61 = swift_allocObject();
  *(_OWORD *)(v61 + 16) = xmmword_240956800;
  uint64_t v62 = v75;
  (*(void (**)(unint64_t, char *, uint64_t))(v59 + 16))(v61 + v60, v30, v75);
  v81[0] = 0x3C53447961727241;
  v81[1] = 0xE800000000000000;
  unint64_t v63 = v72;
  sub_240951A88();
  sub_240951A48();
  ((void (*)(char *, uint64_t))v71)(v63, v73);
  sub_2409548A8();
  swift_bridgeObjectRelease();
  sub_2409548A8();
  sub_2409537D8();
  swift_allocObject();
  sub_2409537C8();
  v77();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v30, v62);
}

uint64_t sub_240870C60(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_2409540C8();
  uint64_t v27 = *(void *)(v2 - 8);
  uint64_t v28 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_240954638();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v25 - v10;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  *(void *)(v12 + 24) = 0;
  dispatch_semaphore_t v13 = dispatch_semaphore_create(0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v12;
  *(void *)(v14 + 24) = v13;
  swift_retain();
  uint64_t v15 = v13;
  sub_240877E98(a1, (uint64_t)sub_240879248, v14);
  swift_release();
  sub_240954628();
  MEMORY[0x245600930](v9, 5.0);
  uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16(v9, v5);
  LOBYTE(a1) = sub_240954E08();
  v16(v11, v5);
  if (a1)
  {
    sub_240954078();
    uint64_t v18 = sub_2409540B8();
    os_log_type_t v19 = sub_240954C18();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v30 = v21;
      *(_DWORD *)uint64_t v20 = 136315138;
      uint64_t v29 = ObjectType;
      swift_getMetatypeMetadata();
      uint64_t v22 = sub_2409547E8();
      uint64_t v29 = sub_2408370E4(v22, v23, &v30);
      sub_2409550B8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240818000, v18, v19, "%s timed out waiting for healthd to return whether CHR section should be shown", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v21, -1, -1);
      MEMORY[0x2456021C0](v20, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v28);
    swift_release();
    return 0;
  }
  else
  {

    swift_beginAccess();
    uint64_t v17 = *(void *)(v12 + 16);
    swift_unknownObjectRetain();
    swift_release();
  }
  return v17;
}

uint64_t sub_240871020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a3 + 16) = a1;
  *(void *)(a3 + 24) = a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return sub_240954E18();
}

uint64_t sub_240871094()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_2408710C4()
{
  return 0xD000000000000014;
}

void sub_24087112C(uint64_t a1, void *a2)
{
}

uint64_t sub_240871140()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_240871170()
{
  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t sub_24087117C(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*sub_2408711B4())()
{
  return nullsub_1;
}

id sub_2408711D4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HealthRecordsPluginAppDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for HealthRecordsPluginAppDelegate()
{
  return self;
}

id sub_24087123C()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id sub_240871270(uint64_t a1)
{
  if (a1 == 3) {
    return sub_24087036C();
  }
  else {
    return 0;
  }
}

void sub_2408712A0(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  id v6 = (id)sub_240953A58();
  sub_24091C630(a1, v6, a2, a3);
}

void sub_24087131C(void *a1, uint64_t a2, uint64_t a3)
{
  id v5 = (id)sub_240953A58();
  sub_240857E08(a1, v5, a3);
}

uint64_t sub_24087138C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_240952478();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  id v6 = (id *)((char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v32 - v7;
  sub_2409523D8();
  swift_allocObject();
  sub_2409523C8();
  sub_2409523B8();
  swift_release();
  (*(void (**)(id *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
  int v9 = (*(uint64_t (**)(id *, uint64_t))(v3 + 88))(v6, v2);
  if (v9 == *MEMORY[0x263F45DC8])
  {
    (*(void (**)(id *, uint64_t))(v3 + 8))(v6, v2);
LABEL_7:
    uint64_t v12 = (unsigned int *)MEMORY[0x263F43D58];
LABEL_8:
    uint64_t v13 = *v12;
    uint64_t v14 = sub_240953818();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(a1, v13, v14);
  }
  int v10 = v9;
  if (v9 == *MEMORY[0x263F45DA8])
  {
    (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);
    uint64_t v11 = sub_240951A98();
    (*(void (**)(id *, uint64_t))(*(void *)(v11 - 8) + 8))(v6, v11);
    goto LABEL_7;
  }
  if (v9 == *MEMORY[0x263F45DB0])
  {
    (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  if (v9 == *MEMORY[0x263F45DD8])
  {
    (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);
    sub_240873CDC();
    swift_bridgeObjectRelease();
LABEL_12:
    uint64_t v16 = *MEMORY[0x263F43D60];
    uint64_t v17 = sub_240953818();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(a1, v16, v17);
    uint64_t v18 = sub_240951A98();
    return (*(uint64_t (**)(id *, uint64_t))(*(void *)(v18 - 8) + 8))(v6, v18);
  }
  if (v9 == *MEMORY[0x263F45DE0])
  {
    (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);
LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  if (v9 == *MEMORY[0x263F45DB8])
  {
    (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  if (v9 == *MEMORY[0x263F45DF0])
  {
    (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);

    goto LABEL_18;
  }
  if (v9 == *MEMORY[0x263F45DE8])
  {
    (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);
    swift_bridgeObjectRelease();
    sub_240873E2C();
    uint64_t v20 = (char *)v6 + *(int *)(v19 + 48);
    uint64_t v21 = *MEMORY[0x263F43D60];
    uint64_t v22 = sub_240953818();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(a1, v21, v22);
    uint64_t v23 = sub_240951A98();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v23 - 8) + 8))(v20, v23);
  }
  if (v9 == *MEMORY[0x263F45DD0])
  {
    (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);

    sub_240873D74();
    uint64_t v25 = (uint64_t)v6 + *(int *)(v24 + 48);
    uint64_t v26 = *MEMORY[0x263F43D60];
    uint64_t v27 = sub_240953818();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(a1, v26, v27);
    return sub_240849924(v25, (uint64_t (*)(void))sub_240873DF8);
  }
  if (v9 == *MEMORY[0x263F45E00])
  {
    (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);
    goto LABEL_12;
  }
  if (v9 == *MEMORY[0x263F45DF8] || v9 == *MEMORY[0x263F45E08])
  {
    (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);
    uint64_t v31 = sub_240951918();
    (*(void (**)(id *, uint64_t))(*(void *)(v31 - 8) + 8))(v6, v31);
    goto LABEL_18;
  }
  if (v9 == *MEMORY[0x263F45DC0])
  {
LABEL_18:
    uint64_t v12 = (unsigned int *)MEMORY[0x263F43D60];
    goto LABEL_8;
  }
  int v28 = *MEMORY[0x263F45E10];
  uint64_t v29 = *MEMORY[0x263F43D58];
  uint64_t v30 = sub_240953818();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(a1, v29, v30);
  if (v10 != v28) {
    return (*(uint64_t (**)(id *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

uint64_t sub_240871A24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(a1, sel_activityType);
  uint64_t v4 = sub_2409547C8();
  uint64_t v6 = v5;

  if (sub_2409547C8() == v4 && v7 == v6)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v9 = sub_240955618();
  swift_bridgeObjectRelease();
  if (v9)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  if (sub_2409547C8() == v4 && v10 == v6)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v12 = sub_240955618();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      uint64_t v13 = (unsigned int *)MEMORY[0x263F43D58];
      goto LABEL_15;
    }
  }
LABEL_14:
  uint64_t v13 = (unsigned int *)MEMORY[0x263F43D60];
LABEL_15:
  uint64_t v14 = *v13;
  uint64_t v15 = sub_240953818();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104);

  return v16(a2, v14, v15);
}

uint64_t sub_240871B84@<X0>(uint64_t a1@<X8>)
{
  return sub_24087138C(a1);
}

uint64_t sub_240871B9C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240871A24(a1, a2);
}

uint64_t sub_240871BB4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  swift_getObjectType();
  uint64_t v18 = sub_240951C08();
  uint64_t v3 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240873E98(&qword_268C90AF8, v6, (void (*)(uint64_t))type metadata accessor for HealthRecordsPluginAppDelegate);
  uint64_t v7 = sub_240953CE8();
  uint64_t v9 = v8;
  sub_240953D08();
  id v10 = objc_msgSend(a1, sel_uniqueIdentifier);
  uint64_t v11 = sub_2409547C8();
  uint64_t v13 = v12;

  sub_24087821C(v11, v13, v7, v9, 0, 0);
  swift_bridgeObjectRelease();
  if (sub_240952328())
  {
    sub_240953EF8();
    swift_release();
  }
  uint64_t v14 = sub_240952398();
  sub_24087025C(v14);
  swift_bridgeObjectRelease();
  sub_240952378();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F454D0], v18);
  uint64_t v15 = v19;
  sub_240953D68();
  uint64_t v16 = sub_240953D78();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 0, 1, v16);
}

uint64_t sub_240871E2C@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v60 = a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_2409540C8();
  uint64_t v58 = *(void *)(v3 - 8);
  id v59 = (id)v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v57 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v56 = (char *)&v45 - v6;
  uint64_t v7 = sub_240951C08();
  uint64_t v54 = *(void *)(v7 - 8);
  uint64_t v55 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_240952B98();
  uint64_t v52 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240878630(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_240953ED8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  v20(v19, a1, v16);
  if ((*(unsigned int (**)(char *, uint64_t))(v17 + 88))(v19, v16) == *MEMORY[0x263F44A60])
  {
    uint64_t v46 = v15;
    uint64_t v47 = v12;
    uint64_t v49 = v17 + 16;
    uint64_t v50 = (void (*)(unint64_t, char *, uint64_t))v20;
    uint64_t v21 = v56;
    uint64_t v48 = v10;
    unint64_t v51 = v9;
    uint64_t v57 = a1;
    (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (objc_msgSend(self, sel_categoryWithID_, 20))
    {
      uint64_t v22 = v17;
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v24 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      sub_240953EC8();
      id v59 = v24;
      if (!v25)
      {
        uint64_t v37 = sub_240951AB8();
        uint64_t v38 = (uint64_t)v46;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v46, 1, 1, v37);
        uint64_t v39 = v47;
        sub_240952B88();
        sub_240954828();
        (*(void (**)(char *, uint64_t))(v52 + 8))(v39, v48);
        sub_240849924(v38, (uint64_t (*)(void))sub_240878630);
      }
      uint64_t v40 = v60;
      uint64_t v41 = v57;
      sub_240878664(0, (unint64_t *)&unk_268C90B08, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
      unint64_t v42 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
      uint64_t v43 = swift_allocObject();
      *(_OWORD *)(v43 + 16) = xmmword_240956800;
      v50(v43 + v42, v41, v16);
      (*(void (**)(char *, void, uint64_t))(v54 + 104))(v51, *MEMORY[0x263F454D0], v55);
      sub_240953D68();
      uint64_t v44 = sub_240953D78();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v40, 0, 1, v44);
    }
    else
    {
      sub_240954078();
      uint64_t v33 = sub_2409540B8();
      os_log_type_t v34 = sub_240954C18();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v35 = 0;
        _os_log_impl(&dword_240818000, v33, v34, "failed to create lab results category when generating data type item", v35, 2u);
        MEMORY[0x2456021C0](v35, -1, -1);
      }

      (*(void (**)(char *, id))(v58 + 8))(v21, v59);
      uint64_t v36 = sub_240953D78();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v60, 1, 1, v36);
    }
  }
  else
  {
    uint64_t v26 = v17;
    uint64_t v27 = v57;
    sub_240954078();
    int v28 = sub_2409540B8();
    os_log_type_t v29 = sub_240954C18();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl(&dword_240818000, v28, v29, "auth identifier is not of health records concept type", v30, 2u);
      MEMORY[0x2456021C0](v30, -1, -1);
    }

    (*(void (**)(char *, id))(v58 + 8))(v27, v59);
    uint64_t v31 = sub_240953D78();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v60, 1, 1, v31);
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v19, v16);
  }
}

void sub_2408725AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_2409540C8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954078();
  swift_bridgeObjectRetain_n();
  uint64_t v14 = sub_2409540B8();
  os_log_type_t v15 = sub_240954C38();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v38 = a1;
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v35 = v17;
    uint64_t v36 = v11;
    os_log_type_t v34 = v16;
    *(_DWORD *)uint64_t v16 = 136315138;
    uint64_t v32 = v16 + 4;
    uint64_t v39 = v17;
    aBlocuint64_t k = v38;
    uint64_t v41 = a2;
    swift_bridgeObjectRetain_n();
    sub_240955658();
    id v18 = (id)HKSensitiveLogItem();
    uint64_t v37 = v5;
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v19 = sub_2409547E8();
    uint64_t v33 = v10;
    uint64_t v20 = a3;
    uint64_t v21 = a4;
    unint64_t v23 = v22;
    swift_bridgeObjectRelease();
    uint64_t v24 = v19;
    uint64_t v5 = v37;
    aBlocuint64_t k = sub_2408370E4(v24, v23, &v39);
    sub_2409550B8();
    swift_bridgeObjectRelease_n();
    a4 = v21;
    a3 = v20;
    swift_bridgeObjectRelease();
    uint64_t v25 = v34;
    _os_log_impl(&dword_240818000, v14, v15, "Starting attachment search for query string: %s", v34, 0xCu);
    uint64_t v26 = v35;
    a1 = v38;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v26, -1, -1);
    MEMORY[0x2456021C0](v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v33);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F45C40]), sel_init);
  int v28 = (void *)sub_240954788();
  os_log_type_t v29 = (void *)swift_allocObject();
  v29[2] = a1;
  void v29[3] = a2;
  v29[4] = a3;
  void v29[5] = a4;
  v29[6] = v5;
  uint64_t v44 = sub_240878B9C;
  uint64_t v45 = v29;
  aBlocuint64_t k = MEMORY[0x263EF8330];
  uint64_t v41 = 1107296256;
  unint64_t v42 = sub_24087399C;
  uint64_t v43 = &unk_26F4F04B8;
  uint64_t v30 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  id v31 = v5;
  swift_release();
  objc_msgSend(v27, sel_fetchSpotlightSearchResultsForQueryString_completion_, v28, v30);
  _Block_release(v30);
}

uint64_t sub_240872978(unint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, void *), uint64_t a6, void *a7)
{
  uint64_t v13 = sub_2409540C8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (a1 >> 62)
    {
      unint64_t v38 = swift_bridgeObjectRetain();
      uint64_t v17 = (uint64_t)sub_240874388(v38);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v17 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
    }
    v43[0] = v17;
    sub_240873EE0(v43);
    unint64_t v18 = v43[0];
    id v19 = a7;
    unint64_t v20 = sub_240877CFC(v18);
    swift_release();

    uint64_t v21 = sub_2408730A8(v20);
    swift_bridgeObjectRelease();
    a5(v21, a2);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_240954078();
    swift_bridgeObjectRetain();
    id v23 = a2;
    swift_bridgeObjectRetain();
    id v24 = a2;
    uint64_t v25 = sub_2409540B8();
    os_log_type_t v26 = sub_240954C38();
    int v27 = v26;
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v28 = swift_slowAlloc();
      int v41 = v27;
      uint64_t v29 = v28;
      uint64_t v40 = swift_slowAlloc();
      uint64_t v44 = v40;
      *(_DWORD *)uint64_t v29 = 136315394;
      v39[1] = v29 + 4;
      v43[0] = a3;
      v43[1] = a4;
      swift_bridgeObjectRetain_n();
      sub_240955658();
      id v30 = (id)HKSensitiveLogItem();
      unint64_t v42 = a5;
      swift_unknownObjectRelease();
      sub_240955138();
      swift_unknownObjectRelease();
      v39[2] = MEMORY[0x263F8EE58] + 8;
      uint64_t v31 = sub_2409547E8();
      unint64_t v33 = v32;
      swift_bridgeObjectRelease();
      v43[0] = sub_2408370E4(v31, v33, &v44);
      sub_2409550B8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2080;
      v43[0] = (uint64_t)a2;
      id v34 = a2;
      sub_240878BAC();
      uint64_t v35 = sub_2409547E8();
      v43[0] = sub_2408370E4(v35, v36, &v44);
      sub_2409550B8();
      a5 = v42;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_240818000, v25, (os_log_type_t)v41, "No search results returned for “%s” from the spotlight indexer, error: %s", (uint8_t *)v29, 0x16u);
      uint64_t v37 = v40;
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v37, -1, -1);
      MEMORY[0x2456021C0](v29, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return ((uint64_t (*)(void, void *))a5)(MEMORY[0x263F8EE78], a2);
  }
}

uint64_t sub_240872D80@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_240951A98();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v30 = *a1;
  id v8 = objc_msgSend(v30, sel_previewStringMatchRanges);
  sub_24083EDCC(0, &qword_268C90B58);
  unint64_t v9 = sub_240954998();

  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_2409553D8();
    uint64_t v10 = result;
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  uint64_t v33 = v2;
  uint64_t v31 = v7;
  unint64_t v32 = a2;
  if (v10)
  {
    if (v10 < 1)
    {
      __break(1u);
      return result;
    }
    uint64_t v12 = 0;
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    do
    {
      if ((v9 & 0xC000000000000001) != 0) {
        id v14 = (id)MEMORY[0x2456015B0](v12, v9);
      }
      else {
        id v14 = *(id *)(v9 + 8 * v12 + 32);
      }
      uint64_t v15 = v14;
      id v16 = objc_msgSend(v14, sel_rangeValue);
      uint64_t v18 = v17;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = sub_2408C30F0(0, v13[2] + 1, 1, v13);
      }
      unint64_t v20 = v13[2];
      unint64_t v19 = v13[3];
      if (v20 >= v19 >> 1) {
        uint64_t v13 = sub_2408C30F0((void *)(v19 > 1), v20 + 1, 1, v13);
      }
      ++v12;
      v13[2] = v20 + 1;
      uint64_t v21 = &v13[2 * v20];
      v21[4] = v16;
      v21[5] = v18;
    }
    while (v10 != v12);
  }
  swift_bridgeObjectRelease_n();
  id v22 = v30;
  id v23 = objc_msgSend(v30, sel_title);
  sub_2409547C8();

  id v24 = objc_msgSend(v22, sel_previewString);
  if (v24)
  {
    uint64_t v25 = v24;
    sub_2409547C8();
  }
  id v26 = objc_msgSend(v22, sel_medicalRecord);
  id v27 = objc_msgSend(v22, sel_attachmentUUID);
  sub_240951A78();

  sub_240952808();
  uint64_t v28 = (void *)sub_2409527D8();
  sub_240952798();

  sub_240952C98();
  swift_allocObject();
  uint64_t result = sub_240952C88();
  *unint64_t v32 = result;
  return result;
}

uint64_t sub_2408730A8(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_2409553D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2) {
    return v3;
  }
  uint64_t v16 = MEMORY[0x263F8EE78];
  uint64_t result = sub_240875D28(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = v16;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      do
      {
        uint64_t v6 = MEMORY[0x2456015B0](v5, a1);
        uint64_t v16 = v3;
        unint64_t v8 = *(void *)(v3 + 16);
        unint64_t v7 = *(void *)(v3 + 24);
        if (v8 >= v7 >> 1)
        {
          sub_240875D28(v7 > 1, v8 + 1, 1);
          uint64_t v3 = v16;
        }
        ++v5;
        uint64_t v14 = sub_240952C98();
        uint64_t v15 = sub_240873E98(&qword_268C90B40, 255, MEMORY[0x263F460D0]);
        *(void *)&long long v13 = v6;
        *(void *)(v3 + 16) = v8 + 1;
        sub_24083AB20(&v13, v3 + 40 * v8 + 32);
      }
      while (v2 != v5);
    }
    else
    {
      unint64_t v9 = (uint64_t *)(a1 + 32);
      do
      {
        uint64_t v10 = *v9;
        uint64_t v16 = v3;
        unint64_t v11 = *(void *)(v3 + 16);
        unint64_t v12 = *(void *)(v3 + 24);
        swift_retain();
        if (v11 >= v12 >> 1)
        {
          sub_240875D28(v12 > 1, v11 + 1, 1);
          uint64_t v3 = v16;
        }
        uint64_t v14 = sub_240952C98();
        uint64_t v15 = sub_240873E98(&qword_268C90B40, 255, MEMORY[0x263F460D0]);
        *(void *)&long long v13 = v10;
        *(void *)(v3 + 16) = v11 + 1;
        sub_24083AB20(&v13, v3 + 40 * v11 + 32);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_2408732E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SharedConceptCodedValue(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_240875DDC(0, v6, 0);
    uint64_t v7 = v17;
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    do
    {
      sub_240879134(v8, (uint64_t)v5, type metadata accessor for SharedConceptCodedValue);
      uint64_t v17 = v7;
      unint64_t v11 = *(void *)(v7 + 16);
      unint64_t v10 = *(void *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_240875DDC(v10 > 1, v11 + 1, 1);
        uint64_t v7 = v17;
      }
      uint64_t v15 = v2;
      uint64_t v16 = sub_240873E98(&qword_268C90B80, 255, (void (*)(uint64_t))type metadata accessor for SharedConceptCodedValue);
      unint64_t v12 = sub_240851B6C((uint64_t *)&v14);
      sub_240879134((uint64_t)v5, (uint64_t)v12, type metadata accessor for SharedConceptCodedValue);
      *(void *)(v7 + 16) = v11 + 1;
      sub_24083AB20(&v14, v7 + 40 * v11 + 32);
      sub_240849924((uint64_t)v5, type metadata accessor for SharedConceptCodedValue);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_2408734EC(uint64_t a1)
{
  return sub_24087356C(a1, (void (*)(BOOL, unint64_t, uint64_t))sub_240875E20, (uint64_t (*)(void))sub_240878EC8, (void (*)(void *, unint64_t))sub_24083AB20);
}

uint64_t sub_24087352C(uint64_t a1)
{
  return sub_24087356C(a1, (void (*)(BOOL, unint64_t, uint64_t))sub_240875E64, (uint64_t (*)(void))sub_240878DAC, (void (*)(void *, unint64_t))sub_24083AB20);
}

uint64_t sub_24087356C(uint64_t a1, void (*a2)(BOOL, unint64_t, uint64_t), uint64_t (*a3)(void), void (*a4)(void *, unint64_t))
{
  unint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v29 = MEMORY[0x263F8EE78];
    a2(0, v4, 0);
    uint64_t v5 = v29;
    uint64_t v7 = (uint64_t *)(a1 + 56);
    do
    {
      unint64_t v22 = v4;
      uint64_t v8 = *(v7 - 3);
      uint64_t v9 = *(v7 - 1);
      uint64_t v25 = *v7;
      uint64_t v26 = *(v7 - 2);
      uint64_t v10 = v7[1];
      uint64_t v11 = v7[2];
      uint64_t v12 = v7[4];
      uint64_t v13 = v7[5];
      uint64_t v14 = v7[7];
      uint64_t v23 = v7[6];
      uint64_t v24 = v7[3];
      unint64_t v15 = *(void *)(v5 + 16);
      unint64_t v16 = *(void *)(v5 + 24);
      uint64_t v29 = v5;
      uint64_t v27 = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v15 >= v16 >> 1)
      {
        a2(v16 > 1, v15 + 1, 1);
        uint64_t v5 = v29;
      }
      v7 += 11;
      void v28[3] = &type metadata for SharedConceptFormattedRecord;
      v28[4] = a3();
      uint64_t v17 = (void *)swift_allocObject();
      v28[0] = v17;
      void v17[2] = v27;
      v17[3] = v26;
      v17[4] = v9;
      v17[5] = v25;
      v17[6] = v10;
      v17[7] = v11;
      v17[8] = v24;
      v17[9] = v12;
      v17[10] = v13;
      v17[11] = v23;
      v17[12] = v14;
      *(void *)(v5 + 16) = v15 + 1;
      a4(v28, v5 + 40 * v15 + 32);
      unint64_t v4 = v22 - 1;
    }
    while (v22 != 1);
  }
  return v5;
}

uint64_t sub_240873738(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_2409553D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2) {
    return v3;
  }
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t result = sub_240875EC8(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        MEMORY[0x2456015B0](i, a1);
        sub_24083EDCC(0, &qword_268C90BC8);
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_240875EC8(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v7 = *(void *)(v3 + 16);
        unint64_t v6 = *(void *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_240875EC8(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v7 + 1;
        sub_240878F84(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      uint64_t v8 = (id *)(a1 + 32);
      sub_24083EDCC(0, &qword_268C90BC8);
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_240875EC8(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v11 = *(void *)(v3 + 16);
        unint64_t v10 = *(void *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_240875EC8(v10 > 1, v11 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v11 + 1;
        sub_240878F84(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_24087399C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_24083EDCC(0, &qword_268C90B18);
    uint64_t v4 = sub_240954998();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_240873A40()
{
  uint64_t v0 = sub_240952B98();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240878630(0);
  MEMORY[0x270FA5388](v4 - 8);
  id v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240951AB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_240952B58();
  uint64_t v8 = sub_2409535A8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_240849924((uint64_t)v6, (uint64_t (*)(void))sub_240878630);
  return v8;
}

uint64_t sub_240873BFC()
{
  return sub_240954CB8();
}

void sub_240873C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_240873C94(uint64_t a1, uint64_t a2)
{
  return sub_240873E98(&qword_26AFCF6A0, a2, (void (*)(uint64_t))type metadata accessor for HealthRecordsPluginAppDelegate);
}

void sub_240873CDC()
{
  if (!qword_268C90AD8)
  {
    sub_240951A98();
    sub_240840634(255, &qword_26AFCDE50, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C90AD8);
    }
  }
}

void sub_240873D74()
{
  if (!qword_268C90AE8)
  {
    sub_2408484BC(255, qword_26AFD07C0);
    sub_240873DF8(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C90AE8);
    }
  }
}

void sub_240873DF8(uint64_t a1)
{
}

void sub_240873E2C()
{
  if (!qword_268C90AF0)
  {
    sub_240951A98();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C90AF0);
    }
  }
}

uint64_t sub_240873E98(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240873EE0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_240877124();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_2408744E4(v6);
  return sub_240955308();
}

void *sub_240873F5C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_240840634(0, (unint64_t *)&qword_26AFD0670, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_240877138((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_24084072C();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

size_t sub_240874064(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  sub_240878664(0, &qword_268C90C18, type metadata accessor for SharedConceptFeedItemData, MEMORY[0x263F8E0F8]);
  uint64_t v3 = *(void *)(type metadata accessor for SharedConceptFeedItemData(0) - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      uint64_t v6[2] = v1;
      void v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      uint64_t v9 = sub_240877338(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_24084072C();
      if (v9 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

size_t sub_2408741E4(uint64_t a1)
{
  return sub_240874224(a1, sub_24087919C, MEMORY[0x263F45738], MEMORY[0x263F45738]);
}

size_t sub_240874224(uint64_t a1, void (*a2)(void), uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return MEMORY[0x263F8EE78];
  }
  a2(0);
  uint64_t v8 = *(void *)(a3(0) - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v11 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v11);
  if (v9)
  {
    if (result - v10 != 0x8000000000000000 || v9 != -1)
    {
      v11[2] = v4;
      v11[3] = 2 * ((uint64_t)(result - v10) / v9);
      uint64_t v14 = sub_240877618(&v15, (uint64_t)v11 + v10, v4, a1, a4);
      swift_bridgeObjectRetain();
      sub_24084072C();
      if (v14 == v4) {
        return (size_t)v11;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_240874388(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  while (1)
  {
    if (v2 <= 0)
    {
      uint64_t v3 = (void *)MEMORY[0x263F8EE78];
    }
    else
    {
      sub_240840634(0, (unint64_t *)&qword_26AFCF418, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
      uint64_t v3 = (void *)swift_allocObject();
      int64_t v4 = j__malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_240876ECC((unint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_2409553D8();
    swift_bridgeObjectRelease();
    if (!v2) {
      return (void *)MEMORY[0x263F8EE78];
    }
  }
  return v3;
}

size_t sub_2408744A4(uint64_t a1)
{
  return sub_240874224(a1, sub_2408790CC, MEMORY[0x263F45F38], MEMORY[0x263F45F38]);
}

void sub_2408744E4(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = sub_2409555C8();
  if (v4 >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      sub_2408750BC(0, v3, 1, a1);
    }
    return;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v145 = v4;
  uint64_t v150 = v3;
  uint64_t v143 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = (char *)MEMORY[0x263F8EE78];
    uint64_t v162 = MEMORY[0x263F8EE78];
    uint64_t v152 = (void **)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_118:
      if (v12 >= 2)
      {
        uint64_t v137 = *v143;
        do
        {
          unint64_t v138 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v137) {
            goto LABEL_159;
          }
          uint64_t v139 = *(void *)&v8[16 * v138 + 32];
          uint64_t v140 = *(void *)&v8[16 * v12 + 24];
          sub_24087535C((void **)(v137 + 8 * v139), (id *)(v137 + 8 * *(void *)&v8[16 * v12 + 16]), v137 + 8 * v140, v152);
          if (v1) {
            break;
          }
          if (v140 < v139) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_240875C04((uint64_t)v8);
          }
          if (v138 >= *((void *)v8 + 2)) {
            goto LABEL_149;
          }
          uint64_t v141 = &v8[16 * v138 + 32];
          *(void *)uint64_t v141 = v139;
          *((void *)v141 + 1) = v140;
          unint64_t v142 = *((void *)v8 + 2);
          if (v12 > v142) {
            goto LABEL_150;
          }
          memmove(&v8[16 * v12 + 16], &v8[16 * v12 + 32], 16 * (v142 - v12));
          *((void *)v8 + 2) = v142 - 1;
          unint64_t v12 = v142 - 1;
        }
        while (v142 > 2);
      }
LABEL_129:
      swift_bridgeObjectRelease();
      *(void *)((v162 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_2409549B8();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    sub_24083EDCC(0, &qword_268C90B18);
    uint64_t v7 = sub_240954A18();
    *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    uint64_t v152 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v162 = v7;
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v144 = *a1 - 8;
  uint64_t v8 = (char *)MEMORY[0x263F8EE78];
  uint64_t v11 = v3;
  uint64_t v161 = *a1;
  while (1)
  {
    uint64_t v13 = v9++;
    uint64_t v149 = v8;
    if (v9 >= v11) {
      goto LABEL_45;
    }
    uint64_t v14 = v8;
    uint64_t v153 = v9;
    uint64_t v15 = *(void **)(v10 + 8 * v13);
    id v16 = *(id *)(v10 + 8 * v9);
    id v17 = v15;
    id v18 = objc_msgSend(v16, sel_medicalRecord);
    uint64_t v19 = v13;
    id v20 = objc_msgSend(v18, sel_sortDate);

    id v21 = objc_msgSend(v17, sel_medicalRecord);
    id v22 = objc_msgSend(v21, sel_sortDate);

    sub_24083EDCC(0, (unint64_t *)&qword_268C90B60);
    uint64_t v147 = v19;
    if (sub_240954FC8())
    {
      uint64_t v157 = v16;
      id v23 = objc_msgSend(v16, sel_title);
      uint64_t v24 = sub_2409547C8();
      uint64_t v25 = v17;
      uint64_t v27 = v26;

      id v28 = objc_msgSend(v25, sel_title);
      uint64_t v29 = sub_2409547C8();
      uint64_t v31 = v30;

      if (v24 == v29 && v27 == v31) {
        int v32 = 0;
      }
      else {
        int v32 = sub_240955618();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t v13 = v147;
      uint64_t v8 = v149;
      uint64_t v34 = v147 + 2;
      if (v147 + 2 < v150)
      {
LABEL_24:
        uint64_t v35 = v153;
        int v158 = v32;
        do
        {
          unint64_t v38 = *(void **)(v161 + 8 * v35);
          id v39 = *(id *)(v161 + 8 * v34);
          id v40 = v38;
          id v41 = objc_msgSend(v39, sel_medicalRecord);
          id v42 = objc_msgSend(v41, sel_sortDate);

          id v43 = objc_msgSend(v40, sel_medicalRecord);
          id v44 = objc_msgSend(v43, sel_sortDate);

          if (sub_240954FC8())
          {
            uint64_t v159 = v39;
            id v45 = objc_msgSend(v39, sel_title);
            uint64_t v46 = sub_2409547C8();
            uint64_t v48 = v47;

            uint64_t v49 = v40;
            id v50 = objc_msgSend(v40, sel_title);
            uint64_t v51 = sub_2409547C8();
            uint64_t v53 = v52;

            if (v46 == v51 && v48 == v53) {
              int v54 = 0;
            }
            else {
              int v54 = sub_240955618();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            int v32 = v158;
            uint64_t v8 = v149;
            if ((v158 ^ v54)) {
              goto LABEL_35;
            }
          }
          else
          {
            id v36 = objc_msgSend(v44, sel_compare_, v42);

            uint64_t v8 = v149;
            if (((v32 ^ (v36 != (id)-1)) & 1) == 0) {
              goto LABEL_35;
            }
          }
          uint64_t v37 = v34 + 1;
          uint64_t v35 = v34;
          uint64_t v34 = v37;
        }
        while (v37 < v150);
        uint64_t v34 = v37;
LABEL_35:
        uint64_t v13 = v147;
      }
    }
    else
    {
      id v33 = objc_msgSend(v22, sel_compare_, v20);

      int v32 = v33 == (id)-1;
      uint64_t v34 = v19 + 2;
      if (v19 + 2 < v150) {
        goto LABEL_24;
      }
      uint64_t v13 = v19;
      uint64_t v8 = v14;
    }
    if (v32)
    {
      if (v34 < v13) {
        goto LABEL_153;
      }
      if (v13 < v34)
      {
        uint64_t v55 = (uint64_t *)(v144 + 8 * v34);
        uint64_t v56 = v34;
        uint64_t v57 = v13;
        uint64_t v58 = (uint64_t *)(v161 + 8 * v13);
        do
        {
          if (v57 != --v56)
          {
            if (!v161) {
              goto LABEL_158;
            }
            uint64_t v59 = *v58;
            *uint64_t v58 = *v55;
            *uint64_t v55 = v59;
          }
          ++v57;
          --v55;
          ++v58;
        }
        while (v57 < v56);
      }
    }
    uint64_t v9 = v34;
    uint64_t v10 = v161;
LABEL_45:
    if (v9 >= v150) {
      goto LABEL_68;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_151;
    }
    if (v9 - v13 >= v145) {
      goto LABEL_68;
    }
    if (__OFADD__(v13, v145)) {
      goto LABEL_154;
    }
    uint64_t v60 = v13 + v145 >= v150 ? v150 : v13 + v145;
    if (v60 < v13) {
      break;
    }
    if (v9 == v60) {
      goto LABEL_68;
    }
    sub_24083EDCC(0, (unint64_t *)&qword_268C90B60);
    uint64_t v61 = v144 + 8 * v9;
    uint64_t v146 = v60;
    uint64_t v148 = v13;
    while (2)
    {
      uint64_t v62 = *(void **)(v10 + 8 * v9);
      uint64_t v63 = v13;
      uint64_t v151 = v61;
      uint64_t v154 = v9;
      while (1)
      {
        uint64_t v64 = *(void **)v61;
        id v65 = v62;
        id v66 = v64;
        id v67 = objc_msgSend(v65, sel_medicalRecord);
        id v68 = objc_msgSend(v67, sel_sortDate);

        id v69 = objc_msgSend(v66, sel_medicalRecord);
        uint64_t v70 = v68;
        id v71 = objc_msgSend(v69, sel_sortDate);

        if ((sub_240954FC8() & 1) == 0)
        {
          id v81 = objc_msgSend(v71, sel_compare_, v70);

          uint64_t v10 = v161;
          if (v81 != (id)-1) {
            goto LABEL_56;
          }
          goto LABEL_64;
        }
        uint64_t v156 = v70;
        id v72 = objc_msgSend(v65, sel_title);
        uint64_t v73 = sub_2409547C8();
        uint64_t v75 = v74;

        uint64_t v160 = v66;
        id v76 = objc_msgSend(v66, sel_title);
        uint64_t v77 = sub_2409547C8();
        uint64_t v79 = v78;

        if (v73 == v77 && v75 == v79) {
          break;
        }
        char v80 = sub_240955618();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v10 = v161;
        uint64_t v9 = v154;
        if ((v80 & 1) == 0) {
          goto LABEL_56;
        }
LABEL_64:
        if (!v10) {
          goto LABEL_156;
        }
        uint64_t v82 = *(void **)v61;
        uint64_t v62 = *(void **)(v61 + 8);
        *(void *)uint64_t v61 = v62;
        *(void *)(v61 + 8) = v82;
        v61 -= 8;
        if (v9 == ++v63) {
          goto LABEL_56;
        }
      }

      swift_bridgeObjectRelease_n();
      uint64_t v10 = v161;
      uint64_t v9 = v154;
LABEL_56:
      ++v9;
      uint64_t v61 = v151 + 8;
      uint64_t v13 = v148;
      if (v9 != v146) {
        continue;
      }
      break;
    }
    uint64_t v9 = v146;
    uint64_t v8 = v149;
LABEL_68:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_240875964(0, *((void *)v8 + 2) + 1, 1, v8);
    }
    unint64_t v84 = *((void *)v8 + 2);
    unint64_t v83 = *((void *)v8 + 3);
    unint64_t v12 = v84 + 1;
    if (v84 >= v83 >> 1) {
      uint64_t v8 = sub_240875964((char *)(v83 > 1), v84 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v12;
    uint64_t v85 = v8 + 32;
    uint64_t v86 = &v8[16 * v84 + 32];
    *(void *)uint64_t v86 = v13;
    *((void *)v86 + 1) = v9;
    if (v84)
    {
      uint64_t v155 = v9;
      while (1)
      {
        unint64_t v87 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v92 = &v85[16 * v12];
          uint64_t v93 = *((void *)v92 - 8);
          uint64_t v94 = *((void *)v92 - 7);
          BOOL v98 = __OFSUB__(v94, v93);
          uint64_t v95 = v94 - v93;
          if (v98) {
            goto LABEL_135;
          }
          uint64_t v97 = *((void *)v92 - 6);
          uint64_t v96 = *((void *)v92 - 5);
          BOOL v98 = __OFSUB__(v96, v97);
          uint64_t v90 = v96 - v97;
          char v91 = v98;
          if (v98) {
            goto LABEL_136;
          }
          unint64_t v99 = v12 - 2;
          uint64_t v100 = &v85[16 * v12 - 32];
          uint64_t v102 = *(void *)v100;
          uint64_t v101 = *((void *)v100 + 1);
          BOOL v98 = __OFSUB__(v101, v102);
          uint64_t v103 = v101 - v102;
          if (v98) {
            goto LABEL_138;
          }
          BOOL v98 = __OFADD__(v90, v103);
          uint64_t v104 = v90 + v103;
          if (v98) {
            goto LABEL_141;
          }
          if (v104 >= v95)
          {
            uint64_t v122 = &v85[16 * v87];
            uint64_t v124 = *(void *)v122;
            uint64_t v123 = *((void *)v122 + 1);
            BOOL v98 = __OFSUB__(v123, v124);
            uint64_t v125 = v123 - v124;
            if (v98) {
              goto LABEL_145;
            }
            BOOL v115 = v90 < v125;
            goto LABEL_106;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v116 = *((void *)v8 + 4);
            uint64_t v117 = *((void *)v8 + 5);
            BOOL v98 = __OFSUB__(v117, v116);
            uint64_t v109 = v117 - v116;
            char v110 = v98;
            goto LABEL_100;
          }
          uint64_t v89 = *((void *)v8 + 4);
          uint64_t v88 = *((void *)v8 + 5);
          BOOL v98 = __OFSUB__(v88, v89);
          uint64_t v90 = v88 - v89;
          char v91 = v98;
        }
        if (v91) {
          goto LABEL_137;
        }
        unint64_t v99 = v12 - 2;
        id v105 = &v85[16 * v12 - 32];
        uint64_t v107 = *(void *)v105;
        uint64_t v106 = *((void *)v105 + 1);
        BOOL v108 = __OFSUB__(v106, v107);
        uint64_t v109 = v106 - v107;
        char v110 = v108;
        if (v108) {
          goto LABEL_140;
        }
        uint64_t v111 = &v85[16 * v87];
        uint64_t v113 = *(void *)v111;
        uint64_t v112 = *((void *)v111 + 1);
        BOOL v98 = __OFSUB__(v112, v113);
        uint64_t v114 = v112 - v113;
        if (v98) {
          goto LABEL_143;
        }
        if (__OFADD__(v109, v114)) {
          goto LABEL_144;
        }
        if (v109 + v114 >= v90)
        {
          BOOL v115 = v90 < v114;
LABEL_106:
          if (v115) {
            unint64_t v87 = v99;
          }
          goto LABEL_108;
        }
LABEL_100:
        if (v110) {
          goto LABEL_139;
        }
        uint64_t v118 = &v85[16 * v87];
        uint64_t v120 = *(void *)v118;
        uint64_t v119 = *((void *)v118 + 1);
        BOOL v98 = __OFSUB__(v119, v120);
        uint64_t v121 = v119 - v120;
        if (v98) {
          goto LABEL_142;
        }
        if (v121 < v109) {
          goto LABEL_14;
        }
LABEL_108:
        unint64_t v126 = v87 - 1;
        if (v87 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
          goto LABEL_155;
        }
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v127 = v8;
        uint64_t v128 = v10;
        uint64_t v129 = &v85[16 * v126];
        uint64_t v130 = *(void *)v129;
        uint64_t v131 = v85;
        unint64_t v132 = v87;
        uint64_t v133 = &v85[16 * v87];
        uint64_t v134 = *((void *)v133 + 1);
        uint64_t v135 = v128;
        sub_24087535C((void **)(v128 + 8 * *(void *)v129), (id *)(v128 + 8 * *(void *)v133), v128 + 8 * v134, v152);
        if (v1) {
          goto LABEL_129;
        }
        if (v134 < v130) {
          goto LABEL_132;
        }
        if (v132 > *((void *)v127 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v129 = v130;
        *(void *)&v131[16 * v126 + 8] = v134;
        unint64_t v136 = *((void *)v127 + 2);
        if (v132 >= v136) {
          goto LABEL_134;
        }
        uint64_t v8 = v127;
        unint64_t v12 = v136 - 1;
        memmove(v133, v133 + 16, 16 * (v136 - 1 - v132));
        uint64_t v85 = v131;
        *((void *)v127 + 2) = v136 - 1;
        uint64_t v9 = v155;
        uint64_t v10 = v135;
        if (v136 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_14:
    uint64_t v11 = v150;
    if (v9 >= v150) {
      goto LABEL_118;
    }
  }
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  sub_240955398();
  __break(1u);
}

void sub_2408750BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    uint64_t v6 = *a4 + 8 * a3 - 8;
    uint64_t v7 = &off_2650D8000;
    uint64_t v34 = *a4;
    sub_24083EDCC(0, (unint64_t *)&qword_268C90B60);
LABEL_6:
    uint64_t v9 = *(void **)(v5 + 8 * v4);
    uint64_t v10 = a1;
    uint64_t v31 = v6;
    uint64_t v35 = v4;
    while (1)
    {
      uint64_t v11 = *(void **)v6;
      id v12 = v9;
      id v13 = v11;
      id v14 = [v12 (SEL)v7[376]];
      id v15 = objc_msgSend(v14, sel_sortDate);

      id v16 = [v13 (SEL)v7[376]];
      id v17 = objc_msgSend(v16, sel_sortDate);

      if (sub_240954FC8())
      {
        int v32 = v15;
        id v33 = v12;
        id v18 = objc_msgSend(v12, sel_title);
        uint64_t v19 = sub_2409547C8();
        uint64_t v21 = v20;

        id v22 = objc_msgSend(v13, sel_title);
        uint64_t v23 = sub_2409547C8();
        uint64_t v25 = v24;

        if (v19 == v23 && v21 == v25)
        {

          swift_bridgeObjectRelease_n();
          uint64_t v8 = v35;
          uint64_t v5 = v34;
          uint64_t v7 = &off_2650D8000;
LABEL_5:
          uint64_t v4 = v8 + 1;
          uint64_t v6 = v31 + 8;
          if (v4 == a2) {
            return;
          }
          goto LABEL_6;
        }
        char v26 = sub_240955618();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v8 = v35;
        uint64_t v5 = v34;
        uint64_t v7 = &off_2650D8000;
        if ((v26 & 1) == 0) {
          goto LABEL_5;
        }
      }
      else
      {
        id v27 = objc_msgSend(v17, sel_compare_, v15);

        uint64_t v5 = v34;
        uint64_t v8 = v35;
        if (v27 != (id)-1) {
          goto LABEL_5;
        }
      }
      if (!v5) {
        break;
      }
      id v28 = *(void **)v6;
      uint64_t v9 = *(void **)(v6 + 8);
      *(void *)uint64_t v6 = v9;
      *(void *)(v6 + 8) = v28;
      v6 -= 8;
      if (v8 == ++v10) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
}

uint64_t sub_24087535C(void **__src, id *a2, unint64_t a3, void **__dst)
{
  uint64_t v4 = __dst;
  unint64_t v5 = a3;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  id v71 = __src;
  uint64_t v70 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7) {
      goto LABEL_54;
    }
    if (__dst != a2 || &a2[v13] <= __dst) {
      memmove(__dst, a2, 8 * v13);
    }
    id v33 = &v4[v13];
    id v69 = v33;
    id v71 = v6;
    if (v7 >= v6 || v11 < 8)
    {
LABEL_53:
      sub_240875B48((void **)&v71, (const void **)&v70, &v69);
      return 1;
    }
    sub_24083EDCC(0, (unint64_t *)&qword_268C90B60);
    uint64_t v34 = (id *)(v5 - 8);
    uint64_t v35 = v6;
    uint64_t v59 = v4;
    uint64_t v61 = v7;
    while (1)
    {
      unint64_t v66 = (unint64_t)v33;
      id v68 = v6;
      id v36 = *(v33 - 1);
      uint64_t v63 = v33 - 1;
      uint64_t v64 = v34 + 1;
      uint64_t v37 = *(v35 - 1);
      uint64_t v57 = v35 - 1;
      id v38 = v36;
      id v39 = v37;
      id v40 = objc_msgSend(v38, sel_medicalRecord);
      id v41 = objc_msgSend(v40, sel_sortDate);

      id v42 = objc_msgSend(v39, sel_medicalRecord);
      id v43 = objc_msgSend(v42, sel_sortDate);

      if (sub_240954FC8())
      {
        id v44 = objc_msgSend(v38, sel_title);
        uint64_t v45 = sub_2409547C8();
        uint64_t v47 = v46;

        uint64_t v56 = v39;
        id v48 = objc_msgSend(v39, sel_title);
        uint64_t v49 = sub_2409547C8();
        uint64_t v51 = v50;

        if (v45 == v49 && v47 == v51)
        {

          swift_bridgeObjectRelease_n();
          uint64_t v52 = v59;
          uint64_t v7 = v61;
LABEL_41:
          id v33 = v63;
          id v69 = v63;
          uint64_t v35 = v68;
          if ((unint64_t)v64 < v66 || (unint64_t)v34 >= v66 || v64 != (id *)v66) {
            *uint64_t v34 = *v63;
          }
          if (v68 <= v7) {
            goto LABEL_53;
          }
          goto LABEL_52;
        }
        char v54 = sub_240955618();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v52 = v59;
        uint64_t v7 = v61;
        if ((v54 & 1) == 0) {
          goto LABEL_41;
        }
      }
      else
      {
        id v53 = objc_msgSend(v43, sel_compare_, v41);

        uint64_t v52 = v59;
        if (v53 != (id)-1) {
          goto LABEL_41;
        }
      }
      id v33 = (void **)v66;
      uint64_t v35 = v57;
      if (v64 != v68 || v34 >= v68) {
        *uint64_t v34 = *v57;
      }
      id v71 = v57;
      if (v57 <= v7) {
        goto LABEL_53;
      }
LABEL_52:
      --v34;
      uint64_t v6 = v35;
      if (v33 <= v52) {
        goto LABEL_53;
      }
    }
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    id v65 = &v4[v10];
    id v69 = v65;
    if ((unint64_t)v6 < v5 && v8 >= 8)
    {
      unint64_t v62 = v5;
      sub_24083EDCC(0, (unint64_t *)&qword_268C90B60);
      while (1)
      {
        uint64_t v60 = v7;
        id v67 = v6;
        id v14 = *v4;
        id v15 = *v6;
        id v16 = v14;
        id v17 = objc_msgSend(v15, sel_medicalRecord);
        id v18 = objc_msgSend(v17, sel_sortDate);

        id v19 = objc_msgSend(v16, sel_medicalRecord);
        id v20 = objc_msgSend(v19, sel_sortDate);

        if (sub_240954FC8())
        {
          uint64_t v58 = v4;
          id v21 = objc_msgSend(v15, sel_title);
          uint64_t v22 = sub_2409547C8();
          uint64_t v24 = v23;

          id v25 = objc_msgSend(v16, sel_title);
          uint64_t v26 = sub_2409547C8();
          uint64_t v28 = v27;

          if (v22 == v26 && v24 == v28)
          {

            swift_bridgeObjectRelease_n();
            uint64_t v4 = v58;
            unint64_t v5 = v62;
          }
          else
          {
            char v32 = sub_240955618();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v4 = v58;
            unint64_t v5 = v62;
            if (v32)
            {
LABEL_22:
              uint64_t v31 = v67 + 1;
              uint64_t v30 = v60;
              if (v60 < v67 || v60 >= v31 || v60 != v67) {
                *uint64_t v60 = *v67;
              }
              goto LABEL_26;
            }
          }
        }
        else
        {
          id v29 = objc_msgSend(v20, sel_compare_, v18);

          if (v29 == (id)-1) {
            goto LABEL_22;
          }
        }
        uint64_t v30 = v60;
        if (v60 != v4) {
          *uint64_t v60 = *v4;
        }
        uint64_t v70 = ++v4;
        uint64_t v31 = v67;
LABEL_26:
        uint64_t v7 = v30 + 1;
        if (v4 < v65)
        {
          uint64_t v6 = v31;
          if ((unint64_t)v31 < v5) {
            continue;
          }
        }
        id v71 = v7;
        goto LABEL_53;
      }
    }
    goto LABEL_53;
  }
LABEL_54:
  uint64_t result = sub_240955448();
  __break(1u);
  return result;
}

char *sub_240875964(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_240878664(0, &qword_268C90B68, (uint64_t (*)(uint64_t))sub_240878CE4, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  id v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_240875A8C(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_240955448();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_240875B48(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_240955448();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_240875C04(uint64_t a1)
{
  return sub_240875964(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_240875C18(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_240875F38(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_240875C38(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_240876800(a1, a2, a3, (void *)*v3, &qword_268C90C18, type metadata accessor for SharedConceptFeedItemData, type metadata accessor for SharedConceptFeedItemData);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_240875C88(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_240876800(a1, a2, a3, (void *)*v3, &qword_268C90C10, MEMORY[0x263F45618], MEMORY[0x263F45618]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_240875CD8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_240876800(a1, a2, a3, (void *)*v3, &qword_26AFD05E0, MEMORY[0x263F45630], MEMORY[0x263F45630]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_240875D28(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_240876278(a1, a2, a3, (void *)*v3, (void (*)(void))sub_240878C7C, &qword_268C90B50);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_240875D6C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2408760C4(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_240875D8C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_240876800(a1, a2, a3, (void *)*v3, (unint64_t *)&unk_268C90C00, (uint64_t (*)(uint64_t))type metadata accessor for RecordKindFeedItemData, (uint64_t (*)(void))type metadata accessor for RecordKindFeedItemData);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_240875DDC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_240876278(a1, a2, a3, (void *)*v3, (void (*)(void))sub_240878D44, &qword_268C90B90);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_240875E20(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_240876278(a1, a2, a3, (void *)*v3, (void (*)(void))sub_240878F1C, &qword_268C90BC0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_240875E64(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_240876278(a1, a2, a3, (void *)*v3, (void (*)(void))sub_240878E60, &qword_268C90BA8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_240875EA8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_240876430(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_240875EC8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24087666C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_240875EE8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_240876800(a1, a2, a3, (void *)*v3, &qword_268C90BF8, type metadata accessor for LabNameWithDate, type metadata accessor for LabNameWithDate);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_240875F38(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_240840634(0, (unint64_t *)&qword_26AFD0670, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  id v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_240955448();
  __break(1u);
  return result;
}

uint64_t sub_2408760C4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_240878664(0, &qword_26AFD0608, (uint64_t (*)(uint64_t))sub_240879100, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    void v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_240879100(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_240955448();
  __break(1u);
  return result;
}

uint64_t sub_240876278(char a1, int64_t a2, char a3, void *a4, void (*a5)(void), unint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    a5(0);
    unint64_t v13 = (void *)swift_allocObject();
    size_t v14 = j__malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    unint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    sub_2408484BC(0, a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = sub_240955448();
  __break(1u);
  return result;
}

uint64_t sub_240876430(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_2408790CC(0);
  uint64_t v10 = *(void *)(sub_2409526C8() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_2409526C8() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  id v18 = (char *)v13 + v17;
  id v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  id v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_240955448();
  __break(1u);
  return result;
}

uint64_t sub_24087666C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_240840634(0, &qword_268C90BD0, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_240955448();
  __break(1u);
  return result;
}

uint64_t sub_240876800(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v10 = a4[3];
    int64_t v11 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) < a2)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v11 = a2;
      }
    }
  }
  else
  {
    int64_t v11 = a2;
  }
  uint64_t v12 = a4[2];
  if (v11 <= v12) {
    uint64_t v13 = a4[2];
  }
  else {
    uint64_t v13 = v11;
  }
  if (!v13)
  {
    unint64_t v17 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_240878664(0, a5, a6, MEMORY[0x263F8E0F8]);
  uint64_t v14 = *(void *)(a7(0) - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v17 = (void *)swift_allocObject();
  size_t v18 = j__malloc_size(v17);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v18 - v16 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_34;
  }
  void v17[2] = v12;
  v17[3] = 2 * ((uint64_t)(v18 - v16) / v15);
LABEL_19:
  uint64_t v20 = *(void *)(a7(0) - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  unint64_t v22 = (char *)v17 + v21;
  uint64_t v23 = (char *)a4 + v21;
  if (a1)
  {
    if (v17 < a4 || v22 >= &v23[*(void *)(v20 + 72) * v12])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v17 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v24 = *(void *)(v20 + 72) * v12;
  id v25 = &v22[v24];
  unint64_t v26 = (unint64_t)&v23[v24];
  if (v23 >= v25 || (unint64_t)v22 >= v26)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v17;
  }
LABEL_36:
  uint64_t result = sub_240955448();
  __break(1u);
  return result;
}

uint64_t (*sub_240876A64(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_240876B80(v6, a2, a3);
  return sub_240876ACC;
}

uint64_t (*sub_240876AD0(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_240876C00(v6, a2, a3);
  return sub_240876ACC;
}

void sub_240876B38(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_240876B80(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x2456015B0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_240879BBC;
  }
  __break(1u);
  return result;
}

void (*sub_240876C00(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x2456015B0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_240876C80;
  }
  __break(1u);
  return result;
}

void sub_240876C80(id *a1)
{
}

uint64_t sub_240876C88(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_2409553D8();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_2409553D8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_240879338();
        sub_240873E98((unint64_t *)&unk_268C90C48, 255, (void (*)(uint64_t))sub_240879338);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_240876A64(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_24083EDCC(0, &qword_268C91A80);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_240955448();
  __break(1u);
  return result;
}

uint64_t sub_240876ECC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_2409553D8();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_2409553D8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_240878C14();
        sub_240873E98(&qword_268C90B38, 255, (void (*)(uint64_t))sub_240878C14);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_240876A64(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_24083EDCC(0, &qword_268C90B18);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_240955448();
  __break(1u);
  return result;
}

uint64_t sub_240877110(uint64_t a1)
{
  return sub_240875F38(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_240877124()
{
}

uint64_t sub_240877138(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    void v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *int64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_240877338(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for SharedConceptFeedItemData(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8 - 8);
  int64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v10);
  unint64_t v15 = (char *)&v30 - v14;
  uint64_t v35 = a4;
  uint64_t v18 = *(void *)(a4 + 56);
  uint64_t v17 = a4 + 56;
  uint64_t v16 = v18;
  uint64_t v19 = -1 << *(unsigned char *)(v17 - 24);
  if (-v19 < 64) {
    uint64_t v20 = ~(-1 << -(char)v19);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v21 = v20 & v16;
  if (!a2)
  {
    int64_t v22 = 0;
    a3 = 0;
LABEL_38:
    *a1 = v35;
    a1[1] = v17;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    int64_t v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v32 = -1 << *(unsigned char *)(v17 - 24);
  id v33 = a1;
  int64_t v22 = 0;
  uint64_t v23 = 0;
  int64_t v34 = (unint64_t)(63 - v19) >> 6;
  int64_t v31 = v34 - 1;
  if (!v21) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  unint64_t v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    uint64_t v29 = *(void *)(v9 + 72);
    sub_240879134(*(void *)(v35 + 48) + v29 * v25, (uint64_t)v12, type metadata accessor for SharedConceptFeedItemData);
    sub_240865A20((uint64_t)v12, (uint64_t)v15);
    uint64_t result = sub_240865A20((uint64_t)v15, a2);
    if (v23 == a3) {
      goto LABEL_37;
    }
    a2 += v29;
    if (v21) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v34) {
      goto LABEL_32;
    }
    unint64_t v27 = *(void *)(v17 + 8 * v26);
    if (!v27) {
      break;
    }
LABEL_18:
    unint64_t v21 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v34)
  {
    unint64_t v21 = 0;
    int64_t v22 = v26;
    goto LABEL_36;
  }
  unint64_t v27 = *(void *)(v17 + 8 * v22);
  if (v27) {
    goto LABEL_14;
  }
  int64_t v28 = v26 + 2;
  if (v26 + 2 >= v34) {
    goto LABEL_32;
  }
  unint64_t v27 = *(void *)(v17 + 8 * v28);
  if (v27) {
    goto LABEL_17;
  }
  int64_t v22 = v26 + 3;
  if (v26 + 3 >= v34)
  {
    unint64_t v21 = 0;
    int64_t v22 = v26 + 2;
    goto LABEL_36;
  }
  unint64_t v27 = *(void *)(v17 + 8 * v22);
  if (v27)
  {
LABEL_14:
    int64_t v26 = v22;
    goto LABEL_18;
  }
  int64_t v28 = v26 + 4;
  if (v26 + 4 >= v34)
  {
LABEL_32:
    unint64_t v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    uint64_t v19 = v32;
    a1 = v33;
    goto LABEL_38;
  }
  unint64_t v27 = *(void *)(v17 + 8 * v28);
  if (v27)
  {
LABEL_17:
    int64_t v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v34)
    {
      unint64_t v21 = 0;
      int64_t v22 = v31;
      goto LABEL_36;
    }
    unint64_t v27 = *(void *)(v17 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_240877618(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v9 = a5(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  id v43 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v11);
  id v42 = (char *)&v33 - v14;
  uint64_t v44 = a4;
  uint64_t v17 = *(void *)(a4 + 56);
  uint64_t v16 = a4 + 56;
  uint64_t v15 = v17;
  uint64_t v38 = v16;
  uint64_t v18 = -1 << *(unsigned char *)(v16 - 24);
  if (-v18 < 64) {
    uint64_t v19 = ~(-1 << -(char)v18);
  }
  else {
    uint64_t v19 = -1;
  }
  unint64_t v20 = v19 & v15;
  if (!a2)
  {
    int64_t v21 = 0;
    a3 = 0;
LABEL_38:
    uint64_t v32 = v38;
    *a1 = v44;
    a1[1] = v32;
    a1[2] = ~v18;
    a1[3] = v21;
    a1[4] = v20;
    return a3;
  }
  if (!a3)
  {
    int64_t v21 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v35 = -1 << *(unsigned char *)(v16 - 24);
  id v36 = a1;
  int64_t v21 = 0;
  uint64_t v22 = 0;
  uint64_t v39 = v10 + 32;
  uint64_t v40 = v10 + 16;
  int64_t v37 = (unint64_t)(63 - v18) >> 6;
  int64_t v34 = v37 - 1;
  uint64_t v41 = a3;
  uint64_t v23 = v42;
  if (!v20) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v24 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  unint64_t v25 = v24 | (v21 << 6);
  while (1)
  {
    ++v22;
    uint64_t v29 = v43;
    uint64_t v30 = *(void *)(v10 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v43, *(void *)(v44 + 48) + v30 * v25, v9);
    int64_t v31 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v31(v23, v29, v9);
    uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v31)(a2, v23, v9);
    a3 = v41;
    if (v22 == v41) {
      goto LABEL_37;
    }
    a2 += v30;
    if (v20) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v26 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v37) {
      goto LABEL_32;
    }
    unint64_t v27 = *(void *)(v38 + 8 * v26);
    if (!v27) {
      break;
    }
LABEL_18:
    unint64_t v20 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v21 = v26;
  }
  v21 += 2;
  if (v26 + 1 >= v37)
  {
    unint64_t v20 = 0;
    int64_t v21 = v26;
    goto LABEL_36;
  }
  unint64_t v27 = *(void *)(v38 + 8 * v21);
  if (v27) {
    goto LABEL_14;
  }
  int64_t v28 = v26 + 2;
  if (v26 + 2 >= v37) {
    goto LABEL_32;
  }
  unint64_t v27 = *(void *)(v38 + 8 * v28);
  if (v27) {
    goto LABEL_17;
  }
  int64_t v21 = v26 + 3;
  if (v26 + 3 >= v37)
  {
    unint64_t v20 = 0;
    int64_t v21 = v26 + 2;
    goto LABEL_36;
  }
  unint64_t v27 = *(void *)(v38 + 8 * v21);
  if (v27)
  {
LABEL_14:
    int64_t v26 = v21;
    goto LABEL_18;
  }
  int64_t v28 = v26 + 4;
  if (v26 + 4 >= v37)
  {
LABEL_32:
    unint64_t v20 = 0;
LABEL_36:
    a3 = v22;
LABEL_37:
    uint64_t v18 = v35;
    a1 = v36;
    goto LABEL_38;
  }
  unint64_t v27 = *(void *)(v38 + 8 * v28);
  if (v27)
  {
LABEL_17:
    int64_t v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v37)
    {
      unint64_t v20 = 0;
      int64_t v21 = v34;
      goto LABEL_36;
    }
    unint64_t v27 = *(void *)(v38 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_240877964(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  unint64_t v6 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      if (a4 < 0) {
        uint64_t v7 = a4;
      }
      else {
        uint64_t v7 = a4 & 0xFFFFFFFFFFFFFF8;
      }
      MEMORY[0x2456014D0](a1, a2, v7);
      sub_24083EDCC(0, &qword_26AFCF390);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
LABEL_27:
    __break(1u);
    return;
  }
  if (a3) {
    goto LABEL_13;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_20;
  }
  __break(1u);
LABEL_13:
  if (sub_2409551A8() != *(_DWORD *)(a4 + 36))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_2409551B8();
  sub_24083EDCC(0, &qword_26AFCF390);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v4 = v17;
  swift_unknownObjectRelease();
  uint64_t v8 = sub_240954FB8();
  uint64_t v9 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v6 = v8 & ~v9;
  if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_26:

    __break(1u);
    goto LABEL_27;
  }
  id v10 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
  char v11 = sub_240954FC8();

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v9;
    do
    {
      unint64_t v6 = (v6 + 1) & v12;
      if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_26;
      }
      id v13 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
      char v14 = sub_240954FC8();
    }
    while ((v14 & 1) == 0);
  }

LABEL_20:
  uint64_t v15 = *(void **)(*(void *)(a4 + 48) + 8 * v6);

  id v16 = v15;
}

uint64_t sub_240877BDC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_240877C64(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  uint64_t v9 = sub_240851B6C((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v9, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_24083AB20(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_240877CFC(unint64_t a1)
{
  uint64_t v11 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_2409553D8())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2456015B0](i - 4, a1) : *(id *)(a1 + 8 * i);
      unsigned int v6 = v5;
      uint64_t v7 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v10 = v5;
      sub_240872D80(&v10, &v9);
      if (v1)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      if (v9)
      {
        MEMORY[0x245600C60]();
        if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_240954A08();
        }
        sub_240954A28();
        sub_2409549B8();
      }
      if (v7 == v3)
      {
        swift_bridgeObjectRelease();
        return v11;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

void sub_240877E98(void *a1, uint64_t a2, uint64_t a3)
{
  sub_240952808();
  unsigned int v6 = (void *)sub_2409527D8();
  uint64_t v7 = (void *)sub_240952798();

  id v8 = objc_msgSend(v7, sel_clinicalAccountStore);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = a2;
  v9[3] = a3;
  v9[4] = a1;
  v12[4] = sub_240879290;
  void v12[5] = v9;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 1107296256;
  _OWORD v12[2] = sub_240840734;
  uint64_t v12[3] = &unk_26F4F0580;
  id v10 = _Block_copy(v12);
  id v11 = a1;
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_shouldShowHealthRecordsSectionWithCompletion_, v10);
  _Block_release(v10);
}

void sub_240877FD0(void *a1)
{
  uint64_t v3 = sub_2409540C8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240952D78();
  uint64_t v7 = (void *)sub_240952D68();
  id v8 = *(void **)(v1 + *(int *)(type metadata accessor for HealthRecordsPluginAppDelegate.CHRAccountsListItem() + 40));
  sub_240952808();
  if (v8)
  {
    id v9 = v8;
    id v10 = (void *)sub_2409527D8();
    id v11 = (void *)sub_2409527F8();
  }
  else
  {
    id v10 = (void *)sub_2409527D8();
    id v11 = (void *)sub_2409527A8();
  }

  id v19 = (id)sub_240952CD8();
  id v12 = objc_msgSend(a1, sel_navigationController);
  if (v12)
  {
    uint64_t v13 = v12;
    objc_msgSend(v12, sel_pushViewController_animated_, v19, 1);

    id v14 = v19;
  }
  else
  {
    sub_240954078();
    uint64_t v15 = sub_2409540B8();
    os_log_type_t v16 = sub_240954C28();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_240818000, v15, v16, "CHRAccountsListItem was given a view controller without a navigation controller, unable to present settings view controller", v17, 2u);
      MEMORY[0x2456021C0](v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

unint64_t sub_24087821C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v45 = a6;
  uint64_t v46 = a4;
  uint64_t v41 = a3;
  uint64_t v42 = a5;
  uint64_t v8 = sub_240953ED8();
  uint64_t v43 = *(void *)(v8 - 8);
  uint64_t v44 = v8;
  MEMORY[0x270FA5388](v8);
  id v10 = (uint64_t *)((char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_240878630(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a1;
  uint64_t v50 = a2;
  unint64_t v47 = 0x676E69726168535BLL;
  unint64_t v48 = 0xEB000000003A4449;
  uint64_t v14 = sub_240951AB8();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v13, 1, 1, v14);
  sub_240864EE4();
  sub_240955118();
  unint64_t v17 = v16;
  char v19 = v18;
  sub_240849924((uint64_t)v13, (uint64_t (*)(void))sub_240878630);
  swift_bridgeObjectRelease();
  if (v19) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v49 = a1;
  uint64_t v50 = a2;
  unint64_t v47 = 0xD000000000000010;
  unint64_t v48 = 0x800000024095CD20;
  v15(v13, 1, 1, v14);
  sub_240955118();
  char v21 = v20;
  sub_240849924((uint64_t)v13, (uint64_t (*)(void))sub_240878630);
  swift_bridgeObjectRelease();
  if (v21) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t result = sub_240954898();
  if (result >> 14 >= v17 >> 14)
  {
    uint64_t v23 = sub_240954948();
    uint64_t v24 = MEMORY[0x245600B00](v23);
    unint64_t v26 = v25;
    swift_bridgeObjectRelease();
    uint64_t v27 = HIBYTE(v26) & 0xF;
    if ((v26 & 0x2000000000000000) == 0) {
      uint64_t v27 = v24 & 0xFFFFFFFFFFFFLL;
    }
    if (v27)
    {
      uint64_t v28 = sub_2408C416C(v24, v26);
      if (v28)
      {
        uint64_t v31 = v28;
        uint64_t v32 = sub_2408C1EBC(v28, v29, v30);
        uint64_t v34 = v33;
        sub_240864E44(v31);
        *id v10 = v32;
        v10[1] = v34;
        uint64_t v36 = v45;
        uint64_t v35 = v46;
        v10[2] = v41;
        void v10[3] = v35;
        uint64_t v37 = v43;
        v10[4] = v42;
        v10[5] = v36;
        uint64_t v38 = v44;
        (*(void (**)(uint64_t *, void, uint64_t))(v37 + 104))(v10, *MEMORY[0x263F44A60], v44);
        sub_240878664(0, (unint64_t *)&unk_268C90B08, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
        unint64_t v39 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
        uint64_t v40 = swift_allocObject();
        *(_OWORD *)(v40 + 16) = xmmword_240956800;
        (*(void (**)(unint64_t, uint64_t *, uint64_t))(v37 + 32))(v40 + v39, v10, v38);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        return v40;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return MEMORY[0x263F8EE78];
  }
  __break(1u);
  return result;
}

uint64_t sub_240878624(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_240878630(uint64_t a1)
{
}

void sub_240878664(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2408786C8(uint64_t a1)
{
  uint64_t v2 = sub_2409525A8();
  uint64_t v30 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240878B20(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2409528B8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_240953ED8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (uint64_t *)((char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v13 + 88))(v15, v12) == *MEMORY[0x263F44A60])
  {
    (*(void (**)(uint64_t *, uint64_t))(v13 + 96))(v15, v12);
    uint64_t v16 = *v15;
    unint64_t v17 = v15[1];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_2408C416C(v16, v17);
    if (v18)
    {
      uint64_t v21 = v18;
      uint64_t v22 = v19;
      uint64_t v23 = v20;
      if (*(void *)(swift_bridgeObjectRetain() + 16))
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v7, v21 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v8);
        uint64_t v24 = 0;
      }
      else
      {
        uint64_t v24 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, v24, 1, v8);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
        sub_2408C1EBC(v21, v22, v23);
        sub_240864E44(v21);
        uint64_t v27 = v30;
        (*(void (**)(char *, void, uint64_t))(v30 + 104))(v4, *MEMORY[0x263F45E90], v2);
        uint64_t v28 = (void *)sub_240951C98();
        uint64_t v25 = sub_240953298();
        swift_bridgeObjectRelease();

        (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v2);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        return v25;
      }
      sub_240864E44(v21);
      sub_240849924((uint64_t)v7, (uint64_t (*)(void))sub_240878B20);
    }
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  }
  return 0;
}

void sub_240878B20(uint64_t a1)
{
}

uint64_t sub_240878B54()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_240878B9C(unint64_t a1, void *a2)
{
  return sub_240872978(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void (**)(uint64_t, void *))(v2 + 32), *(void *)(v2 + 40), *(void **)(v2 + 48));
}

void sub_240878BAC()
{
  if (!qword_268C90B20)
  {
    sub_2408484BC(255, qword_26AFD07C0);
    unint64_t v0 = sub_240955098();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C90B20);
    }
  }
}

void sub_240878C14()
{
  if (!qword_268C90B30)
  {
    sub_24083EDCC(255, &qword_268C90B18);
    unint64_t v0 = sub_240954A38();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C90B30);
    }
  }
}

void sub_240878C7C()
{
  if (!qword_268C90B48)
  {
    sub_2408484BC(255, &qword_268C90B50);
    unint64_t v0 = sub_2409555E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C90B48);
    }
  }
}

void sub_240878CE4()
{
  if (!qword_268C90B70)
  {
    unint64_t v0 = sub_240954B88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C90B70);
    }
  }
}

void sub_240878D44()
{
  if (!qword_268C90B88)
  {
    sub_2408484BC(255, &qword_268C90B90);
    unint64_t v0 = sub_2409555E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C90B88);
    }
  }
}

unint64_t sub_240878DAC()
{
  unint64_t result = qword_268C90B98;
  if (!qword_268C90B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90B98);
  }
  return result;
}

uint64_t sub_240878E00()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 104, 7);
}

void sub_240878E60()
{
  if (!qword_268C90BA0)
  {
    sub_2408484BC(255, &qword_268C90BA8);
    unint64_t v0 = sub_2409555E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C90BA0);
    }
  }
}

unint64_t sub_240878EC8()
{
  unint64_t result = qword_268C90BB0;
  if (!qword_268C90BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90BB0);
  }
  return result;
}

void sub_240878F1C()
{
  if (!qword_268C90BB8)
  {
    sub_2408484BC(255, &qword_268C90BC0);
    unint64_t v0 = sub_2409555E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C90BB8);
    }
  }
}

_OWORD *sub_240878F84(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_240878F94()
{
  if (!qword_26AFCF600)
  {
    sub_24083EDCC(255, (unint64_t *)&unk_26AFCF3B8);
    unint64_t v0 = sub_240954A38();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF600);
    }
  }
}

unint64_t sub_240878FFC()
{
  unint64_t result = qword_26AFD0588;
  if (!qword_26AFD0588)
  {
    sub_24083EDCC(255, (unint64_t *)&qword_26AFD0580);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD0588);
  }
  return result;
}

void sub_240879064()
{
  if (!qword_268C90BE8)
  {
    sub_24083EDCC(255, &qword_26AFD0640);
    unint64_t v0 = sub_240954A38();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C90BE8);
    }
  }
}

void sub_2408790CC(uint64_t a1)
{
}

void sub_240879100(uint64_t a1)
{
}

uint64_t sub_240879134(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_24087919C(uint64_t a1)
{
}

uint64_t sub_2408791D0()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240879208()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240879248(uint64_t a1, uint64_t a2)
{
  return sub_240871020(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_240879250()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_240879290(char a1, uint64_t a2)
{
  return sub_240870474(a1, a2, *(void (**)(void))(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t type metadata accessor for HealthRecordsPluginAppDelegate.CHRAccountsListItem()
{
  uint64_t result = qword_268C90C58;
  if (!qword_268C90C58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2408792E8(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

void sub_240879338()
{
  if (!qword_268C90C40)
  {
    sub_24083EDCC(255, &qword_268C91A80);
    unint64_t v0 = sub_240954A38();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C90C40);
    }
  }
}

void *sub_2408793A0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    uint64_t v10 = a2[6];
    uint64_t v11 = a2[7];
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    uint64_t v12 = *(int *)(a3 + 36);
    uint64_t v20 = (uint64_t)a2 + v12;
    uint64_t v21 = a1 + v12;
    *(void *)(a1 + 48) = v10;
    *(void *)(a1 + 56) = v11;
    uint64_t v13 = sub_240951A98();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v21, v20, v13);
    uint64_t v15 = *(int *)(a3 + 40);
    uint64_t v16 = *(void **)((char *)a2 + v15);
    *(void *)((char *)v4 + v15) = v16;
    id v17 = v16;
  }
  return v4;
}

void sub_2408794E8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_240951A98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = *(void **)(a1 + *(int *)(a2 + 40));
}

uint64_t sub_24087958C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v11 = *(int *)(a3 + 36);
  uint64_t v18 = a2 + v11;
  uint64_t v19 = a1 + v11;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  uint64_t v12 = sub_240951A98();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v19, v18, v12);
  uint64_t v14 = *(int *)(a3 + 40);
  uint64_t v15 = *(void **)(a2 + v14);
  *(void *)(a1 + v14) = v15;
  id v16 = v15;
  return a1;
}

uint64_t sub_240879684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_240951A98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 40);
  uint64_t v11 = *(void **)(a1 + v10);
  uint64_t v12 = *(void **)(a2 + v10);
  *(void *)(a1 + v10) = v12;
  id v13 = v12;

  return a1;
}

uint64_t sub_2408797A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_240951A98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  *(void *)(a1 + *(int *)(a3 + 40)) = *(void *)(a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_240879850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v10 = *(int *)(a3 + 36);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_240951A98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = *(int *)(a3 + 40);
  uint64_t v15 = *(void **)(a1 + v14);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);

  return a1;
}

uint64_t sub_240879930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240879944);
}

uint64_t sub_240879944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_240951A98();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_2408799F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240879A08);
}

uint64_t sub_240879A08(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_240951A98();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_240879AB0()
{
  uint64_t result = sub_240951A98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_240879B68()
{
  return sub_240873E98(&qword_268C90C28, 255, (void (*)(uint64_t))type metadata accessor for HealthRecordsPluginAppDelegate.CHRAccountsListItem);
}

id sub_240879BC0(uint64_t a1, uint64_t a2)
{
  return sub_24083C9A8(a1, a2, (SEL *)&selRef_clinicalAccountStore);
}

uint64_t sub_240879BCC()
{
  return sub_240954958();
}

uint64_t sub_240879C58@<X0>(void *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  uint64_t v5 = type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t v18 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v18 + 64);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = sub_240951A98();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(a1, sel_identifier);
  sub_240951A78();

  sub_240951A48();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v12 = sub_240953428();
  swift_bridgeObjectRelease();
  uint64_t v22 = v12;
  sub_24083B4E8(v19, (uint64_t)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v13 = (*(unsigned __int8 *)(v18 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  sub_24083B484((uint64_t)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13);
  *(void *)(v14 + ((v6 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = v20;
  sub_240841338();
  sub_240951E78();
  sub_2408234F4(&qword_26AFCDD70, (void (*)(uint64_t))sub_240841338);
  id v15 = a1;
  sub_2409544A8();
  swift_release();
  return swift_release();
}

void sub_240879EF4(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v53 = a4;
  uint64_t v55 = a5;
  uint64_t v8 = sub_240951A98();
  uint64_t v51 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2409540C8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  id v15 = (char *)v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)v47 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)v47 - v19;
  if (*a1 == 1)
  {
    uint64_t v50 = a3;
    uint64_t v52 = v12;
    sub_240954078();
    id v21 = a2;
    uint64_t v22 = sub_2409540B8();
    os_log_type_t v23 = sub_240954BF8();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v49 = v15;
      uint64_t v25 = v24;
      uint64_t v48 = swift_slowAlloc();
      uint64_t v57 = v48;
      *(_DWORD *)uint64_t v25 = 136315394;
      uint64_t v56 = v53;
      swift_getMetatypeMetadata();
      uint64_t v54 = v11;
      uint64_t v26 = sub_2409547E8();
      uint64_t v56 = sub_2408370E4(v26, v27, &v57);
      sub_2409550B8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2080;
      v47[1] = v25 + 14;
      id v28 = objc_msgSend(v21, sel_identifier);
      sub_240951A78();

      sub_2408234F4(&qword_268C90688, MEMORY[0x263F07508]);
      uint64_t v29 = sub_2409555D8();
      unint64_t v31 = v30;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v10, v8);
      uint64_t v56 = sub_2408370E4(v29, v31, &v57);
      uint64_t v11 = v54;
      sub_2409550B8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240818000, v22, v23, "%s: generating feed item for account %s", (uint8_t *)v25, 0x16u);
      uint64_t v32 = v48;
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v32, -1, -1);
      MEMORY[0x2456021C0](v25, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v52 + 8))(v20, v11);
    uint64_t v45 = (void *)sub_240951F68();
    sub_24087A798(v21, v45, v55);
  }
  else
  {
    uint64_t v54 = v11;
    sub_240954078();
    id v33 = a2;
    uint64_t v34 = sub_2409540B8();
    os_log_type_t v35 = sub_240954C08();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v52 = v12;
      uint64_t v37 = v36;
      uint64_t v50 = swift_slowAlloc();
      uint64_t v57 = v50;
      *(_DWORD *)uint64_t v37 = 136315394;
      uint64_t v56 = v53;
      swift_getMetatypeMetadata();
      uint64_t v38 = sub_2409547E8();
      uint64_t v56 = sub_2408370E4(v38, v39, &v57);
      sub_2409550B8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2080;
      uint64_t v53 = v37 + 14;
      id v40 = objc_msgSend(v33, sel_identifier);
      sub_240951A78();

      sub_2408234F4(&qword_268C90688, MEMORY[0x263F07508]);
      uint64_t v41 = sub_2409555D8();
      unint64_t v43 = v42;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v10, v8);
      uint64_t v56 = sub_2408370E4(v41, v43, &v57);
      sub_2409550B8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240818000, v34, v35, "%s: should not generate feed item for account %s", (uint8_t *)v37, 0x16u);
      uint64_t v44 = v50;
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v44, -1, -1);
      MEMORY[0x2456021C0](v37, -1, -1);

      (*(void (**)(char *, uint64_t))(v52 + 8))(v18, v54);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v54);
    }
    uint64_t v46 = sub_240951E78();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v55, 1, 1, v46);
  }
}

uint64_t sub_24087A798@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v147 = a2;
  uint64_t v159 = a3;
  uint64_t v4 = sub_240951A98();
  uint64_t v150 = *(void *)(v4 - 8);
  uint64_t v151 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v149 = (char *)v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2409540C8();
  uint64_t v155 = *(void *)(v6 - 8);
  uint64_t v156 = (void (*)(char *, uint64_t))v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v160 = (char *)v127 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v152 = (char *)v127 - v9;
  uint64_t v10 = sub_240951838();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v134 = (char *)v127 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24082EA94(0, &qword_268C90A48, MEMORY[0x263F45770], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v13 - 8);
  unint64_t v132 = (char *)v127 - v14;
  sub_24082EA94(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], v12);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v140 = (char *)v127 - v16;
  uint64_t v142 = sub_240951A28();
  uint64_t v143 = *(void *)(v142 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v142);
  uint64_t v135 = (char *)v127 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  unint64_t v136 = (char *)v127 - v19;
  uint64_t v138 = sub_240951C08();
  uint64_t v137 = *(void *)(v138 - 8);
  MEMORY[0x270FA5388](v138);
  uint64_t v139 = (char *)v127 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_240951E78();
  uint64_t v157 = *(void *)(v21 - 8);
  uint64_t v158 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v145 = (char *)v127 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24082EA94(0, &qword_26AFCE168, MEMORY[0x263F45B10], v12);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v25 = (char *)v127 - v24;
  uint64_t v26 = sub_240953F38();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v141 = (char *)v127 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v133 = (char *)v127 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v153 = (char *)v127 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v146 = (char *)v127 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v148 = (char *)v127 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  id v40 = (char *)v127 - v39;
  MEMORY[0x270FA5388](v38);
  uint64_t v154 = (char *)v127 - v41;
  sub_24082EA94(0, &qword_268C90C88, MEMORY[0x263F461A8], v12);
  MEMORY[0x270FA5388](v42 - 8);
  uint64_t v44 = (char *)v127 - v43;
  uint64_t v45 = sub_2409533C8();
  uint64_t v46 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v48 = (char *)v127 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v49 = a1;
  sub_2409533D8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45) == 1)
  {
    sub_24087F0B8((uint64_t)v44, &qword_268C90C88, MEMORY[0x263F461A8]);
    sub_240954078();
    id v50 = v49;
    uint64_t v51 = sub_2409540B8();
    os_log_type_t v52 = sub_240954C38();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      uint64_t v154 = (char *)swift_slowAlloc();
      uint64_t v165 = v154;
      *(_DWORD *)uint64_t v53 = 136315138;
      uint64_t v153 = (char *)(v53 + 4);
      id v54 = objc_msgSend(v50, sel_identifier);
      uint64_t v55 = v149;
      sub_240951A78();

      sub_2408234F4(&qword_268C90688, MEMORY[0x263F07508]);
      uint64_t v56 = v151;
      uint64_t v57 = sub_2409555D8();
      unint64_t v59 = v58;
      (*(void (**)(char *, uint64_t))(v150 + 8))(v55, v56);
      uint64_t v163 = sub_2408370E4(v57, v59, (uint64_t *)&v165);
      sub_2409550B8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240818000, v51, v52, "AccountStatusSummaryTileGenerator not generating feed item data for account %s", v53, 0xCu);
      uint64_t v60 = 1;
      uint64_t v61 = v154;
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v61, -1, -1);
      MEMORY[0x2456021C0](v53, -1, -1);

      (*(void (**)(char *, void))(v155 + 8))(v160, v156);
LABEL_14:
      uint64_t v82 = v158;
      uint64_t v83 = v159;
      uint64_t v84 = v157;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 56))(v83, v60, 1, v82);
    }

    (*(void (**)(char *, void))(v155 + 8))(v160, v156);
    goto LABEL_13;
  }
  id v144 = v49;
  uint64_t v131 = v46;
  unint64_t v62 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
  uint64_t v160 = (char *)v45;
  v62(v48, v44, v45);
  sub_240953388();
  uint64_t v63 = v48;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
    sub_24087F0B8((uint64_t)v25, &qword_26AFCE168, MEMORY[0x263F45B10]);
LABEL_6:
    uint64_t v64 = v152;
    sub_240954078();
    id v65 = v144;
    unint64_t v66 = sub_2409540B8();
    os_log_type_t v67 = sub_240954C38();
    if (os_log_type_enabled(v66, v67))
    {
      id v68 = (uint8_t *)swift_slowAlloc();
      uint64_t v154 = (char *)swift_slowAlloc();
      uint64_t v165 = v154;
      *(_DWORD *)id v68 = 136315138;
      uint64_t v130 = v63;
      uint64_t v153 = (char *)(v68 + 4);
      id v69 = objc_msgSend(v65, sel_identifier);
      uint64_t v70 = v149;
      sub_240951A78();

      sub_2408234F4(&qword_268C90688, MEMORY[0x263F07508]);
      uint64_t v71 = v151;
      uint64_t v72 = sub_2409555D8();
      unint64_t v74 = v73;
      (*(void (**)(char *, uint64_t))(v150 + 8))(v70, v71);
      uint64_t v163 = sub_2408370E4(v72, v74, (uint64_t *)&v165);
      sub_2409550B8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240818000, v66, v67, "AccountStatusSummaryTileGenerator generating unsupported type for account %s", v68, 0xCu);
      uint64_t v60 = 1;
      uint64_t v75 = v154;
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v75, -1, -1);
      MEMORY[0x2456021C0](v68, -1, -1);

      (*(void (**)(char *, void))(v155 + 8))(v152, v156);
      (*(void (**)(char *, char *))(v131 + 8))(v130, v160);
      goto LABEL_14;
    }

    (*(void (**)(char *, void))(v155 + 8))(v64, v156);
    (*(void (**)(char *, char *))(v131 + 8))(v63, v160);
LABEL_13:
    uint64_t v60 = 1;
    goto LABEL_14;
  }
  uint64_t v76 = v26;
  uint64_t v77 = v154;
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v154, v25, v76);
  uint64_t v78 = *MEMORY[0x263F45AF8];
  uint64_t v79 = *(void (**)(char *))(v27 + 104);
  uint64_t v129 = v27 + 104;
  uint64_t v128 = v79;
  ((void (*)(char *, uint64_t, uint64_t))v79)(v40, v78, v76);
  uint64_t v80 = sub_2408234F4(&qword_268C90C80, MEMORY[0x263F45B10]);
  sub_240954968();
  v127[1] = v80;
  sub_240954968();
  if (v165 == (char *)v163 && v166 == v164) {
    char v81 = 1;
  }
  else {
    char v81 = sub_240955618();
  }
  uint64_t v130 = v48;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v87 = v27 + 8;
  uint64_t v86 = *(void (**)(char *, uint64_t))(v27 + 8);
  v86(v40, v76);
  uint64_t v88 = v148;
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v148, v77, v76);
  if (v81)
  {
    v86(v88, v76);
    uint64_t v89 = *MEMORY[0x263F45B00];
    uint64_t v90 = v160;
  }
  else
  {
    uint64_t v89 = *MEMORY[0x263F45B00];
    v128(v146);
    sub_240954968();
    sub_240954968();
    uint64_t v90 = v160;
    if (v165 == (char *)v163 && v166 == v164)
    {
      swift_bridgeObjectRelease_n();
      v86(v146, v76);
      v86(v148, v76);
    }
    else
    {
      char v91 = sub_240955618();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v86(v146, v76);
      v86(v148, v76);
      if ((v91 & 1) == 0)
      {
        v86(v77, v76);
        uint64_t v63 = v130;
        goto LABEL_6;
      }
    }
  }
  uint64_t v156 = v86;
  sub_240953508();
  LODWORD(v152) = v89;
  ((void (*)(char *, uint64_t, uint64_t))v128)(v153, v89, v76);
  sub_240954968();
  sub_240954968();
  uint64_t v155 = v76;
  v127[0] = v87;
  if (v165 == (char *)v163 && v166 == v164)
  {
    swift_bridgeObjectRelease_n();
    v156(v153, v76);
LABEL_27:
    type metadata accessor for AccountStatusUpgradeSummaryTileFeedItemViewController(0);
    goto LABEL_29;
  }
  char v92 = sub_240955618();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v156(v153, v76);
  if (v92) {
    goto LABEL_27;
  }
  type metadata accessor for AccountStatusReloginSummaryTileFeedItemViewController();
LABEL_29:
  uint64_t v93 = v90;
  sub_2409517C8();
  swift_allocObject();
  sub_2409517B8();
  sub_2408234F4(&qword_268C90C78, MEMORY[0x263F461A8]);
  uint64_t v94 = v130;
  uint64_t v95 = v167;
  sub_2409517A8();
  if (!v95)
  {
    uint64_t v167 = 0;
    swift_release();
    (*(void (**)(char *, void, uint64_t))(v137 + 104))(v139, *MEMORY[0x263F45548], v138);
    sub_24083EDCC(0, &qword_268C90C90);
    id v96 = v147;
    sub_240951CC8();
    id v97 = objc_msgSend(v144, sel_lastFailedFetchDate);
    if (v97)
    {
      BOOL v98 = v97;
      unint64_t v99 = v135;
      sub_240951A08();

      uint64_t v100 = v143;
      uint64_t v101 = *(void (**)(char *, char *, uint64_t))(v143 + 32);
      uint64_t v102 = (uint64_t)v140;
      uint64_t v103 = v142;
      v101(v140, v99, v142);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v100 + 56))(v102, 0, 1, v103);
      int v104 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v100 + 48))(v102, 1, v103);
      uint64_t v83 = v159;
      uint64_t v105 = v131;
      if (v104 != 1)
      {
        uint64_t v106 = v136;
        v101(v136, (char *)v102, v103);
        (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v99, v106, v103);
        sub_240951828();
        uint64_t v107 = v133;
        ((void (*)(char *, void, uint64_t))v128)(v133, v152, v155);
        sub_240954968();
        sub_240954968();
        if (v165 == (char *)v163 && v166 == v164)
        {
          swift_bridgeObjectRelease_n();
          v156(v107, v155);
        }
        else
        {
          sub_240955618();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v156(v107, v155);
          uint64_t v103 = v142;
        }
        BOOL v108 = v160;
        uint64_t v109 = v132;
        uint64_t v110 = v143;
        sub_240954AD8();
        sub_2409521E8();
        uint64_t v111 = sub_240952208();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v111 - 8) + 56))(v109, 0, 1, v111);
        sub_240951DD8();
        (*(void (**)(char *, uint64_t))(v110 + 8))(v136, v103);
LABEL_41:
        uint64_t v112 = v141;
        uint64_t v113 = v155;
        ((void (*)(char *, void, uint64_t))v128)(v141, v152, v155);
        sub_2408234F4(&qword_268C90C98, MEMORY[0x263F45B10]);
        uint64_t v114 = v154;
        char v115 = sub_240954778();
        uint64_t v116 = v156;
        v156(v112, v113);
        if ((v115 & 1) == 0)
        {
          sub_24083FF48(0, (unint64_t *)&qword_26AFD0670, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
          uint64_t v117 = swift_allocObject();
          *(_OWORD *)(v117 + 16) = xmmword_2409562B0;
          *(void *)(v117 + 32) = 0xD000000000000012;
          *(void *)(v117 + 40) = 0x800000024095D000;
          id v118 = objc_msgSend(v144, sel_title);
          uint64_t v119 = sub_2409547C8();
          uint64_t v121 = v120;

          uint64_t v165 = (char *)v119;
          uint64_t v166 = v121;
          uint64_t v163 = 32;
          unint64_t v164 = 0xE100000000000000;
          uint64_t v161 = 0;
          unint64_t v162 = 0xE000000000000000;
          sub_240864EE4();
          uint64_t v122 = sub_240955108();
          uint64_t v124 = v123;
          swift_bridgeObjectRelease();
          *(void *)(v117 + 48) = v122;
          *(void *)(v117 + 56) = v124;
          uint64_t v125 = (void *)sub_240954988();
          swift_bridgeObjectRelease();
          id v126 = (id)HKUIJoinStringsForAutomationIdentifier();

          if (v126)
          {
            sub_2409547C8();
          }
          sub_240951E18();
          BOOL v108 = v160;
          uint64_t v114 = v154;
          uint64_t v113 = v155;
          uint64_t v116 = v156;
        }
        v116(v114, v113);
        (*(void (**)(char *, char *))(v105 + 8))(v130, v108);
        uint64_t v84 = v157;
        uint64_t v82 = v158;
        (*(void (**)(uint64_t, char *, uint64_t))(v157 + 32))(v83, v145, v158);
        uint64_t v60 = 0;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 56))(v83, v60, 1, v82);
      }
    }
    else
    {
      uint64_t v102 = (uint64_t)v140;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v143 + 56))(v140, 1, 1, v142);
      uint64_t v83 = v159;
      uint64_t v105 = v131;
    }
    sub_24087F0B8(v102, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
    BOOL v108 = v160;
    goto LABEL_41;
  }
  swift_bridgeObjectRelease();
  swift_release();
  v156(v154, v155);
  return (*(uint64_t (**)(char *, char *))(v131 + 8))(v94, v93);
}

unint64_t sub_24087BEC8(uint64_t a1, uint64_t a2)
{
  uint64_t v103 = a2;
  uint64_t v119 = sub_2409540C8();
  uint64_t v107 = *(void *)(v119 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v119);
  uint64_t v106 = (char *)v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v97 - v5;
  uint64_t v105 = sub_240953F38();
  uint64_t v104 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  uint64_t v102 = (char *)v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24082EA94(0, &qword_26AFD03B8, MEMORY[0x263F45630], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v101 = (uint64_t)v97 - v9;
  uint64_t v114 = sub_240951A98();
  uint64_t v115 = *(void *)(v114 - 8);
  MEMORY[0x270FA5388](v114);
  uint64_t v120 = (char *)v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_2409533C8();
  uint64_t v110 = *(void (***)(char *, uint64_t))(v123 - 8);
  MEMORY[0x270FA5388](v123);
  uint64_t v12 = (char *)v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_240951E78();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  unint64_t v99 = (char *)v97 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  BOOL v98 = (char *)v97 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v122 = (char *)v97 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  id v126 = (char *)v97 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v117 = (char *)v97 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v131 = (char *)v97 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)v97 - v30;
  unint64_t v32 = MEMORY[0x263F8EE78];
  unint64_t v132 = MEMORY[0x263F8EE78];
  uint64_t v33 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v130 = v13;
  uint64_t v121 = v12;
  uint64_t v113 = a1;
  uint64_t v112 = v14;
  uint64_t v116 = v6;
  id v118 = v17;
  if (v33)
  {
    unint64_t v128 = *(void *)(v14 + 16);
    uint64_t v129 = (void (*)(char *, char *, uint64_t))(v14 + 16);
    uint64_t v34 = *(void *)(v14 + 72);
    uint64_t v125 = (char *)((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v35 = &v125[a1];
    uint64_t v124 = (void (**)(char *, uint64_t))(v14 + 8);
    uint64_t v36 = (void (**)(char *, char *, uint64_t))(v14 + 32);
    uint64_t v127 = (void (**)(char *, uint64_t))0x800000024095CF30;
    uint64_t v111 = v33;
    uint64_t v37 = v33;
    ((void (*)(char *, char *, uint64_t))v128)(v31, &v125[a1], v13);
    while (1)
    {
      uint64_t v38 = sub_240951D48();
      uint64_t v40 = v39;
      unsigned __int8 v42 = v41;
      char v43 = MEMORY[0x2455FDFA0]();
      sub_24087EEEC(v38, v40, v42);
      if (v43)
      {
        uint64_t v44 = *v36;
        (*v36)(v131, v31, v13);
        unint64_t v45 = v132;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_240875CD8(0, *(void *)(v45 + 16) + 1, 1);
          unint64_t v45 = v132;
        }
        unint64_t v47 = *(void *)(v45 + 16);
        unint64_t v46 = *(void *)(v45 + 24);
        if (v47 >= v46 >> 1)
        {
          sub_240875CD8(v46 > 1, v47 + 1, 1);
          unint64_t v45 = v132;
        }
        *(void *)(v45 + 16) = v47 + 1;
        unint64_t v48 = (unint64_t)&v125[v45 + v47 * v34];
        uint64_t v13 = v130;
        v44((char *)v48, v131, v130);
        unint64_t v132 = v45;
      }
      else
      {
        (*v124)(v31, v13);
      }
      v35 += v34;
      if (!--v37) {
        break;
      }
      ((void (*)(char *, char *, uint64_t))v128)(v31, v35, v13);
    }
    unint64_t v49 = v132;
    a1 = v113;
    uint64_t v14 = v112;
    uint64_t v6 = v116;
    uint64_t v12 = v121;
    unint64_t v32 = MEMORY[0x263F8EE78];
    uint64_t v33 = v111;
  }
  else
  {
    unint64_t v49 = v32;
  }
  swift_bridgeObjectRelease();
  if (v33 - *(void *)(v49 + 16) <= 1)
  {
    swift_bridgeObjectRetain();
    swift_release();
  }
  else
  {
    unint64_t v100 = v49;
    unint64_t v132 = v32;
    swift_bridgeObjectRetain();
    if (v33)
    {
      uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
      id v50 = (char *)(v14 + 16);
      uint64_t v52 = *((void *)v50 + 7);
      uint64_t v127 = (void (**)(char *, uint64_t))((v50[64] + 32) & ~(unint64_t)v50[64]);
      uint64_t v53 = (char *)v127 + a1;
      uint64_t v125 = v50 - 8;
      uint64_t v131 = v50;
      id v54 = (void (**)(uint64_t, char *, uint64_t))(v50 + 16);
      unint64_t v128 = 0x800000024095CF80;
      uint64_t v129 = v51;
      uint64_t v55 = v117;
      do
      {
        uint64_t v56 = v33;
        v129(v55, v53, v13);
        uint64_t v57 = sub_240951D48();
        uint64_t v59 = v58;
        unsigned __int8 v61 = v60;
        char v62 = MEMORY[0x2455FDFA0]();
        sub_24087EEEC(v57, v59, v61);
        if (v62)
        {
          uint64_t v63 = *v54;
          (*v54)((uint64_t)v126, v55, v13);
          unint64_t v64 = v132;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_240875CD8(0, *(void *)(v64 + 16) + 1, 1);
            uint64_t v55 = v117;
            unint64_t v64 = v132;
          }
          unint64_t v66 = *(void *)(v64 + 16);
          unint64_t v65 = *(void *)(v64 + 24);
          if (v66 >= v65 >> 1)
          {
            sub_240875CD8(v65 > 1, v66 + 1, 1);
            uint64_t v55 = v117;
            unint64_t v64 = v132;
          }
          *(void *)(v64 + 16) = v66 + 1;
          os_log_type_t v67 = (char *)v127 + v64 + v66 * v52;
          uint64_t v13 = v130;
          v63((uint64_t)v67, v126, v130);
          unint64_t v132 = v64;
        }
        else
        {
          (*(void (**)(char *, uint64_t))v125)(v55, v13);
        }
        v53 += v52;
        uint64_t v33 = v56 - 1;
      }
      while (v56 != 1);
      unint64_t v32 = v132;
      uint64_t v14 = v112;
      uint64_t v6 = v116;
      uint64_t v12 = v121;
    }
    swift_bridgeObjectRelease();
    uint64_t v69 = *(void *)(v32 + 16);
    if (v69)
    {
      uint64_t v70 = (char *)(v14 + 16);
      uint64_t v129 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
      unint64_t v71 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      v97[1] = v32;
      unint64_t v72 = v32 + v71;
      unint64_t v73 = *((void *)v70 + 7);
      uint64_t v131 = v70;
      uint64_t v127 = (void (**)(char *, uint64_t))(v70 - 8);
      unint64_t v128 = v73;
      uint64_t v124 = (void (**)(char *, uint64_t))(v107 + 8);
      uint64_t v111 = v115 + 32;
      ++v110;
      uint64_t v125 = (char *)MEMORY[0x263F8EE78];
      *(void *)&long long v68 = 136315394;
      long long v109 = v68;
      uint64_t v108 = MEMORY[0x263F8EE58] + 8;
      unint64_t v74 = v122;
      v129(v122, (char *)(v32 + v71), v13);
      while (1)
      {
        uint64_t v75 = sub_240951E68();
        if (v76 >> 60 == 15)
        {
          (*v127)(v74, v13);
        }
        else
        {
          unint64_t v77 = v76;
          uint64_t v78 = v6;
          uint64_t v79 = v75;
          sub_240951798();
          swift_allocObject();
          sub_240951788();
          sub_2408234F4(&qword_268C90C70, MEMORY[0x263F461A8]);
          id v126 = (char *)v79;
          sub_240951778();
          swift_release();
          sub_2409533A8();
          uint64_t v6 = v78;
          if (swift_isUniquelyReferenced_nonNull_native()) {
            unint64_t v80 = (unint64_t)v125;
          }
          else {
            unint64_t v80 = sub_2408C322C(0, *((void *)v125 + 2) + 1, 1, (unint64_t)v125);
          }
          unint64_t v82 = *(void *)(v80 + 16);
          unint64_t v81 = *(void *)(v80 + 24);
          if (v82 >= v81 >> 1) {
            unint64_t v80 = sub_2408C322C(v81 > 1, v82 + 1, 1, v80);
          }
          *(void *)(v80 + 16) = v82 + 1;
          unint64_t v83 = (*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80);
          uint64_t v125 = (char *)v80;
          (*(void (**)(unint64_t, char *, uint64_t))(v115 + 32))(v80 + v83 + *(void *)(v115 + 72) * v82, v120, v114);
          sub_240849C34((uint64_t)v126, v77);
          (*v110)(v12, v123);
          unint64_t v74 = v122;
          (*v127)(v122, v13);
        }
        v72 += v128;
        if (!--v69) {
          break;
        }
        v129(v74, (char *)v72, v13);
      }
      swift_release();
      uint64_t v14 = v112;
      uint64_t v84 = (uint64_t)v125;
    }
    else
    {
      swift_release();
      uint64_t v84 = MEMORY[0x263F8EE78];
    }
    uint64_t v85 = v104;
    uint64_t v86 = (uint64_t)v102;
    uint64_t v87 = v105;
    (*(void (**)(char *, void, uint64_t))(v104 + 104))(v102, *MEMORY[0x263F45B08], v105);
    uint64_t v88 = (void *)sub_240951F68();
    uint64_t v89 = v101;
    sub_24087D7C0(v84, v86, v88, v101);
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v86, v87);
    swift_bridgeObjectRelease();

    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v89, 1, v13) == 1)
    {
      sub_24087F0B8(v89, &qword_26AFD03B8, MEMORY[0x263F45630]);
      return v100;
    }
    else
    {
      uint64_t v90 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 32);
      char v91 = v98;
      v90(v98, v89, v13);
      char v92 = v99;
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v99, v91, v13);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v100 = sub_2408C3044(0, *(void *)(v100 + 16) + 1, 1, v100);
      }
      unint64_t v94 = *(void *)(v100 + 16);
      unint64_t v93 = *(void *)(v100 + 24);
      if (v94 >= v93 >> 1) {
        unint64_t v100 = sub_2408C3044(v93 > 1, v94 + 1, 1, v100);
      }
      unint64_t v95 = v100;
      *(void *)(v100 + 16) = v94 + 1;
      v90((char *)(v95+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v94), (uint64_t)v92, v13);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v91, v13);
      return v95;
    }
  }
  return a1;
}

uint64_t sub_24087D0C0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = sub_2409534F8();
  uint64_t v6 = v5;
  uint64_t v7 = sub_240951F68();
  sub_24083FF48(0, &qword_26AFCDFB0, MEMORY[0x263F45828], MEMORY[0x263F8E0F8]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_240956800;
  *(void *)(v8 + 32) = v3;
  *(void *)(v8 + 40) = v4;
  *(void *)(v8 + 48) = v6;
  *(void *)(v8 + 56) = v7;
  *(unsigned char *)(v8 + 64) = -127;
  *a2 = v8;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24087D174@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_240864F38();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_2409540C8();
  uint64_t v9 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  sub_240954058();
  id v13 = v12;
  id v14 = v12;
  uint64_t v15 = sub_2409540B8();
  os_log_type_t v16 = sub_240954C18();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v35 = v5;
    uint64_t v18 = v17;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v39 = v33;
    *(_DWORD *)uint64_t v18 = 136446466;
    unint64_t v38 = sub_24086A028();
    sub_24087EEAC(0, &qword_268C90C68, (void (*)(uint64_t))sub_24086A028);
    uint64_t v34 = v6;
    uint64_t v19 = sub_2409547E8();
    uint64_t v36 = a2;
    unint64_t v38 = sub_2408370E4(v19, v20, &v39);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    v32[1] = v18 + 14;
    unint64_t v38 = (unint64_t)v12;
    id v21 = v12;
    id v22 = v12;
    sub_24083F3C0();
    sub_240955658();
    id v23 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v24 = sub_2409547E8();
    unint64_t v26 = v25;

    uint64_t v27 = v24;
    a2 = v36;
    unint64_t v38 = sub_2408370E4(v27, v26, &v39);
    sub_2409550B8();
    uint64_t v6 = v34;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240818000, v15, v16, "[%{public}s] Unable to compute desired difference for commit: %{public}s", (uint8_t *)v18, 0x16u);
    uint64_t v28 = v33;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v28, -1, -1);
    uint64_t v29 = v18;
    uint64_t v5 = v35;
    MEMORY[0x2456021C0](v29, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v37);
  unint64_t v38 = MEMORY[0x263F8EE78];
  sub_24083FF48(0, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
  sub_2409543A8();
  sub_2408234F4((unint64_t *)&qword_26AFCDDD8, (void (*)(uint64_t))sub_240864F38);
  uint64_t v30 = sub_240954498();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v30;
  return result;
}

uint64_t sub_24087D5AC()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HealthRecords33AccountStatusSummaryTileGenerator_domain;
  uint64_t v2 = sub_240951F18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_24083B3B4(v0 + OBJC_IVAR____TtC13HealthRecords33AccountStatusSummaryTileGenerator_context);

  return swift_deallocClassInstance();
}

uint64_t sub_24087D664()
{
  return type metadata accessor for AccountStatusSummaryTileGenerator();
}

uint64_t sub_24087D66C()
{
  uint64_t result = sub_240951F18();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for HealthRecordsGeneratorContext();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_24087D748@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC13HealthRecords33AccountStatusSummaryTileGenerator_domain;
  uint64_t v4 = sub_240951F18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_24087D7C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v79 = a1;
  unint64_t v80 = a3;
  uint64_t v86 = a4;
  uint64_t v5 = sub_2409540C8();
  uint64_t v82 = *(void *)(v5 - 8);
  uint64_t v83 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v88 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240951A28();
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v74 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240951838();
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v77 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24082EA94(0, &qword_268C90A48, MEMORY[0x263F45770], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  unint64_t v76 = (char *)&v67 - v13;
  uint64_t v72 = sub_240951C08();
  uint64_t v70 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  unint64_t v71 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_240951E78();
  uint64_t v84 = *(void *)(v15 - 8);
  uint64_t v85 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v75 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_240953F38();
  uint64_t v89 = *(void *)(v17 - 8);
  uint64_t v90 = v17;
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v87 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  unint64_t v73 = (char *)&v67 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v78 = (char *)&v67 - v22;
  uint64_t v23 = sub_2409533C8();
  uint64_t v81 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  unint64_t v25 = (char *)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24082EA94(0, &qword_26AFCE2A0, MEMORY[0x263F07508], v11);
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v28 = (char *)&v67 - v27;
  uint64_t v29 = sub_240951A98();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v33 = (char *)&v67 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)&v67 - v34;
  uint64_t v36 = v95;
  uint64_t result = sub_24087E360(a2, (uint64_t)v28);
  if (!v36)
  {
    uint64_t v69 = v35;
    char v91 = v25;
    uint64_t v38 = v29;
    uint64_t v39 = v88;
    uint64_t v68 = v23;
    uint64_t v40 = v89;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v38) == 1)
    {
      uint64_t v95 = 0;
      sub_24087F0B8((uint64_t)v28, &qword_26AFCE2A0, MEMORY[0x263F07508]);
      unsigned __int8 v41 = v39;
      sub_240954078();
      unsigned __int8 v42 = v87;
      uint64_t v43 = v90;
      (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v87, a2, v90);
      uint64_t v44 = sub_2409540B8();
      os_log_type_t v45 = sub_240954C38();
      if (os_log_type_enabled(v44, v45))
      {
        unint64_t v46 = (uint8_t *)swift_slowAlloc();
        uint64_t v47 = swift_slowAlloc();
        v94[0] = v47;
        *(_DWORD *)unint64_t v46 = 136315138;
        uint64_t v48 = sub_240953F28();
        uint64_t v92 = sub_2408370E4(v48, v49, v94);
        sub_2409550B8();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v87, v90);
        _os_log_impl(&dword_240818000, v44, v45, "AccountStatusSummaryTileGenerator could not create valid id for type %s", v46, 0xCu);
        uint64_t v50 = 1;
        swift_arrayDestroy();
        MEMORY[0x2456021C0](v47, -1, -1);
        MEMORY[0x2456021C0](v46, -1, -1);

        (*(void (**)(char *, uint64_t))(v82 + 8))(v41, v83);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v43);

        (*(void (**)(char *, uint64_t))(v82 + 8))(v41, v83);
        uint64_t v50 = 1;
      }
      uint64_t v54 = v85;
      uint64_t v53 = v86;
      uint64_t v55 = v84;
    }
    else
    {
      uint64_t v51 = v69;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v69, v28, v38);
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v33, v51, v38);
      (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v78, a2, v90);
      swift_bridgeObjectRetain();
      sub_2409533B8();
      uint64_t v88 = (char *)a2;
      uint64_t v52 = v80;
      uint64_t v87 = (char *)MEMORY[0x2455FF800](v51, a2, v80);
      sub_2409517C8();
      swift_allocObject();
      sub_2409517B8();
      sub_2408234F4(&qword_268C90C78, MEMORY[0x263F461A8]);
      sub_2409517A8();
      uint64_t v95 = 0;
      uint64_t v82 = v30;
      uint64_t v83 = v38;
      swift_release();
      type metadata accessor for AccountStatusUpgradeSummaryTileFeedItemViewController(0);
      (*(void (**)(char *, void, uint64_t))(v70 + 104))(v71, *MEMORY[0x263F45548], v72);
      id v56 = v52;
      uint64_t v57 = v75;
      sub_240951CC8();
      sub_240951A18();
      sub_240951828();
      uint64_t v58 = v89;
      uint64_t v59 = v90;
      unsigned __int8 v60 = v73;
      (*(void (**)(char *, void, uint64_t))(v89 + 104))(v73, *MEMORY[0x263F45B00], v90);
      sub_2408234F4(&qword_268C90C80, MEMORY[0x263F45B10]);
      sub_240954968();
      sub_240954968();
      if (v94[0] == v92 && v94[1] == v93)
      {
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v59);
      }
      else
      {
        sub_240955618();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v59);
      }
      uint64_t v55 = v84;
      unsigned __int8 v61 = v76;
      uint64_t v62 = v81;
      uint64_t v63 = v91;
      unint64_t v64 = v69;
      sub_240954AD8();
      sub_2409521E8();
      uint64_t v65 = sub_240952208();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v61, 0, 1, v65);
      sub_240951DD8();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v63, v68);
      (*(void (**)(char *, uint64_t))(v82 + 8))(v64, v83);
      unint64_t v66 = v57;
      uint64_t v54 = v85;
      uint64_t v53 = v86;
      (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(v86, v66, v85);
      uint64_t v50 = 0;
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56))(v53, v50, 1, v54);
  }
  return result;
}

uint64_t sub_24087E360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_2409540C8();
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v29 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240953F38();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v25 - v12;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))((char *)&v25 - v12, *MEMORY[0x263F45B08], v7);
  sub_2408234F4(&qword_268C90C80, MEMORY[0x263F45B10]);
  sub_240954968();
  sub_240954968();
  uint64_t v34 = v2;
  uint64_t v30 = a2;
  if (v33[0] == v31 && v33[1] == v32) {
    char v14 = 1;
  }
  else {
    char v14 = sub_240955618();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v13, v7);
  if (v14) {
    return sub_240951A38();
  }
  uint64_t v17 = v29;
  sub_240954078();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  uint64_t v18 = sub_2409540B8();
  os_log_type_t v19 = sub_240954C18();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    v33[0] = v26;
    *(_DWORD *)uint64_t v20 = 136315138;
    unint64_t v25 = v20 + 4;
    uint64_t v21 = sub_240953F28();
    uint64_t v31 = sub_2408370E4(v21, v22, v33);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    v15(v11, v7);
    _os_log_impl(&dword_240818000, v18, v19, "MultiTileAccountId not currently supported for type %s", v20, 0xCu);
    uint64_t v23 = v26;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v23, -1, -1);
    MEMORY[0x2456021C0](v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v28);
  }
  else
  {
    v15(v11, v7);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v17, v28);
  }
  uint64_t v24 = sub_240951A98();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v30, 1, 1, v24);
}

void sub_24087E7A8()
{
  if (!qword_26AFCE188)
  {
    sub_240842360();
    sub_24083F3C0();
    sub_2408234F4(&qword_26AFCE208, (void (*)(uint64_t))sub_240842360);
    unint64_t v0 = sub_2409541A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCE188);
    }
  }
}

void sub_24087E864()
{
  if (!qword_26AFCE020)
  {
    sub_24083EDCC(255, (unint64_t *)&qword_26AFD05A0);
    sub_240953F38();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AFCE020);
    }
  }
}

unint64_t sub_24087E8E4()
{
  unint64_t result = qword_26AFCE270;
  if (!qword_26AFCE270)
  {
    sub_24082EA94(255, &qword_26AFCE268, (uint64_t (*)(uint64_t))sub_24087E864, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCE270);
  }
  return result;
}

uint64_t sub_24087E96C()
{
  uint64_t v1 = (int *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_24087EA70@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_240879C58(a1, v2 + v6, v7, a2);
}

uint64_t sub_24087EB28()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24087EB60(char *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  uint64_t v4 = *(void *)a1;
  sub_24087E864();
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

uint64_t sub_24087EBBC()
{
  uint64_t v1 = (int *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x270FA0238](v0, v4, v5);
}

unint64_t sub_24087ECAC@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  unint64_t result = sub_24087BEC8(*a1, v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
  *a2 = result;
  return result;
}

uint64_t sub_24087ED28()
{
  uint64_t v1 = (int *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_24087EE18@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24087D0C0(a1, a2);
}

uint64_t sub_24087EE94()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24087EEA4@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24087D174(a1, a2);
}

uint64_t sub_24087EEAC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a2;
  if (!*a2)
  {
    a3(255);
    uint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_24087EEEC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 5u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24087EF04()
{
  uint64_t v1 = (int *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;

  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x270FA0238](v0, v5, v4);
}

void sub_24087F008(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void **)(v2 + 16);
  uint64_t v8 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_240879EF4(a1, v7, v2 + v6, v8, a2);
}

uint64_t sub_24087F0B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_24082EA94(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t *sub_24087F128(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_240951A98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    char v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_240951A28();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v21(v18, 1, v19))
    {
      sub_240882A3C(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
      memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
  }
  return a1;
}

uint64_t sub_24087F348(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240951A98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 32);
  uint64_t v6 = sub_240951A28();
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v5, 1, v6);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v5, v6);
  }
  return result;
}

uint64_t sub_24087F474(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_240951A98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = sub_240951A28();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20(v17, 1, v18))
  {
    sub_240882A3C(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  return a1;
}

uint64_t sub_24087F644(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_240951A98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = sub_240951A28();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 24))(v14, v15, v16);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    sub_240882A3C(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v14, v15, v16);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  return a1;
}

uint64_t sub_24087F898(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_240951A98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_240951A28();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_240882A3C(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_24087FA30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_240951A98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)(a1 + v17);
  int v19 = (void *)(a2 + v17);
  uint64_t v20 = sub_240951A28();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 40))(v18, v19, v20);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_6;
  }
  if (v24)
  {
LABEL_6:
    sub_240882A3C(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 32))(v18, v19, v20);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  return a1;
}

uint64_t sub_24087FC5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24087FC70);
}

uint64_t sub_24087FC70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240951A98();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    sub_240882A3C(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 32);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_24087FDD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24087FDE4);
}

uint64_t sub_24087FDE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_240951A98();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    sub_240882A3C(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 32);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for NewRecordsFeedItemData(uint64_t a1)
{
  return sub_24082A2AC(a1, (uint64_t *)&unk_268C90CA0);
}

void sub_24087FF64()
{
  sub_240951A98();
  if (v0 <= 0x3F)
  {
    sub_240882A3C(319, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_24088007C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_240951A28();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      sub_240882A3C(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_24088022C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_240951A28();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  }

  return swift_bridgeObjectRelease();
}

void *sub_240880308(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_240951A28();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_240882A3C(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_240880468(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_240951A28();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_240882A3C(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_240880638(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_240951A28();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_240882A3C(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_240880794(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_240951A28();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_240882A3C(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24088095C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240880970);
}

uint64_t sub_240880970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240882A3C(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_240880A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240880A78);
}

void sub_240880A78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_240882A3C(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
}

uint64_t type metadata accessor for NewLabsFeedItemData(uint64_t a1)
{
  return sub_24082A2AC(a1, qword_26AFCCAF0);
}

void sub_240880B88()
{
  sub_240882A3C(319, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_240880C60()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_240951A28();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  int v19 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240882A3C(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v16 - v6;
  sub_240951A98();
  sub_2408829A0(&qword_26AFCC5F0, MEMORY[0x263F07508]);
  sub_240954708();
  uint64_t v8 = (int *)type metadata accessor for NewRecordsFeedItemData(0);
  swift_bridgeObjectRetain();
  sub_240954868();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v8[6] + 8))
  {
    sub_240955718();
    swift_bridgeObjectRetain();
    sub_240954868();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_240955718();
  }
  uint64_t v9 = *(void *)(v0 + v8[7]);
  uint64_t v10 = *(void *)(v9 + 16);
  sub_240955708();
  if (v10)
  {
    uint64_t v17 = v3;
    uint64_t v18 = v2;
    uint64_t v11 = *(void *)(sub_2409525E8() - 8);
    uint64_t v12 = v9 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v13 = *(void *)(v11 + 72);
    sub_2408829A0(&qword_268C90D08, MEMORY[0x263F45EC8]);
    swift_bridgeObjectRetain();
    do
    {
      sub_240954708();
      v12 += v13;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    uint64_t v3 = v17;
    uint64_t v2 = v18;
  }
  sub_240882BF4(v1 + v8[8], (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v7, 1, v2) == 1) {
    return sub_240955718();
  }
  uint64_t v15 = v19;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v19, v7, v2);
  sub_240955718();
  sub_2408829A0(&qword_268C90D10, MEMORY[0x263F07490]);
  sub_240954708();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v15, v2);
}

BOOL sub_240881030(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_240881048()
{
  return sub_240955708();
}

uint64_t sub_240881078()
{
  uint64_t result = 0x49746E756F636361;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x54746E756F636361;
      break;
    case 2:
      uint64_t result = 0x53746E756F636361;
      break;
    case 3:
      uint64_t result = 0x79726F6765746163;
      break;
    case 4:
      uint64_t result = 0x65676E497473616CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24088114C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_240883D6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_240881174()
{
  return 0;
}

void sub_240881180(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_24088118C(uint64_t a1)
{
  unint64_t v2 = sub_2408829E8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2408811C8(uint64_t a1)
{
  unint64_t v2 = sub_2408829E8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240881204(void *a1)
{
  uint64_t v3 = v1;
  sub_24088375C(0, &qword_268C90CF0, (uint64_t (*)(void))sub_2408829E8, (uint64_t)&type metadata for NewRecordsFeedItemData.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v12 - v8;
  sub_2408304E8(a1, a1[3]);
  sub_2408829E8();
  sub_240955778();
  char v17 = 0;
  sub_240951A98();
  sub_2408829A0(&qword_26AFCE298, MEMORY[0x263F07508]);
  sub_240955598();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for NewRecordsFeedItemData(0);
    char v16 = 1;
    sub_240955558();
    char v15 = 2;
    sub_240955518();
    v12[1] = *(void *)(v3 + *(int *)(v10 + 28));
    char v14 = 3;
    sub_240882A3C(0, &qword_268C90CD8, MEMORY[0x263F45EC8], MEMORY[0x263F8D488]);
    sub_240882B34(&qword_268C90CF8, &qword_268C90D00);
    sub_240955598();
    char v13 = 4;
    sub_240951A28();
    sub_2408829A0(&qword_26AFCC680, MEMORY[0x263F07490]);
    sub_240955548();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_240881554@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  sub_240882A3C(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v26 = (char *)&v24 - v4;
  uint64_t v5 = sub_240951A98();
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v29 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24088375C(0, &qword_268C90CC0, (uint64_t (*)(void))sub_2408829E8, (uint64_t)&type metadata for NewRecordsFeedItemData.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v30 = v7;
  uint64_t v27 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v24 - v8;
  uint64_t v10 = (int *)type metadata accessor for NewRecordsFeedItemData(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408304E8(a1, a1[3]);
  sub_2408829E8();
  uint64_t v31 = v9;
  uint64_t v13 = (uint64_t)v32;
  sub_240955768();
  if (v13) {
    return sub_2408371B8((uint64_t)a1);
  }
  uint64_t v14 = v28;
  uint64_t v32 = a1;
  char v38 = 0;
  sub_2408829A0(&qword_268C90CD0, MEMORY[0x263F07508]);
  sub_2409554F8();
  uint64_t v15 = (uint64_t)v12;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v29, v5);
  char v37 = 1;
  uint64_t v16 = sub_2409554B8();
  char v17 = (uint64_t *)&v12[v10[5]];
  *char v17 = v16;
  v17[1] = v18;
  char v36 = 2;
  uint64_t v19 = sub_240955478();
  uint64_t v20 = (uint64_t *)&v12[v10[6]];
  *uint64_t v20 = v19;
  v20[1] = v21;
  sub_240882A3C(0, &qword_268C90CD8, MEMORY[0x263F45EC8], MEMORY[0x263F8D488]);
  char v35 = 3;
  sub_240882B34(&qword_268C90CE0, &qword_268C90CE8);
  sub_2409554F8();
  *(void *)&v12[v10[7]] = v33;
  sub_240951A28();
  char v34 = 4;
  sub_2408829A0(&qword_26AFCC688, MEMORY[0x263F07490]);
  uint64_t v22 = (uint64_t)v26;
  sub_2409554A8();
  MEMORY[8](v31, v30);
  sub_240882AA0(v22, v15 + v10[8]);
  sub_2408836F4(v15, v25, type metadata accessor for NewRecordsFeedItemData);
  sub_2408371B8((uint64_t)v32);
  return sub_2408835E8(v15, type metadata accessor for NewRecordsFeedItemData);
}

uint64_t sub_240881B68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240881554(a1, a2);
}

uint64_t sub_240881B80(void *a1)
{
  return sub_240881204(a1);
}

uint64_t sub_240881B98(uint64_t a1, uint64_t a2)
{
  return sub_240882864(a1, a2, (void (*)(unsigned char *))sub_240880C60);
}

uint64_t sub_240881BB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2408828C8(a1, a2, a3, (void (*)(unsigned char *))sub_240880C60);
}

uint64_t sub_240881BD0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  uint64_t v6 = sub_240951A98();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(a1, sel_identifier);
  sub_240951A78();

  id v11 = objc_msgSend(a1, sel_provenance);
  id v12 = objc_msgSend(v11, sel_title);

  uint64_t v13 = sub_2409547C8();
  uint64_t v15 = v14;

  id v16 = objc_msgSend(a1, sel_provenance);
  id v17 = objc_msgSend(v16, sel_subtitle);

  if (v17)
  {
    uint64_t v18 = sub_2409547C8();
    uint64_t v20 = v19;
  }
  else
  {

    uint64_t v18 = 0;
    uint64_t v20 = 0;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a4, v9, v6);
  uint64_t v21 = (int *)type metadata accessor for NewRecordsFeedItemData(0);
  uint64_t v22 = (uint64_t *)(a4 + v21[5]);
  *uint64_t v22 = v13;
  v22[1] = v15;
  int v23 = (uint64_t *)(a4 + v21[6]);
  *int v23 = v18;
  v23[1] = v20;
  *(void *)(a4 + v21[7]) = v25;
  return sub_240882AA0(v26, a4 + v21[8]);
}

uint64_t sub_240881DC4()
{
  uint64_t v1 = sub_240951A28();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240882A3C(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v13 - v6;
  sub_240955708();
  uint64_t v8 = type metadata accessor for NewLabsFeedItemData(0);
  sub_240882BF4(v0 + *(int *)(v8 + 20), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_240955718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_240955718();
    sub_2408829A0(&qword_268C90D10, MEMORY[0x263F07490]);
    sub_240954708();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  uint64_t v9 = *(void *)(v0 + *(int *)(v8 + 24));
  uint64_t result = sub_240955708();
  uint64_t v11 = *(void *)(v9 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = v9 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_240954868();
      swift_bridgeObjectRelease();
      v12 += 16;
      --v11;
    }
    while (v11);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_240882038(void *a1)
{
  uint64_t v3 = v1;
  sub_24088375C(0, &qword_268C90D38, (uint64_t (*)(void))sub_240883648, (uint64_t)&type metadata for NewLabsFeedItemData.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v12 - v8;
  sub_2408304E8(a1, a1[3]);
  sub_240883648();
  sub_240955778();
  char v15 = 0;
  sub_240955588();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for NewLabsFeedItemData(0);
    char v14 = 1;
    sub_240951A28();
    sub_2408829A0(&qword_26AFCC680, MEMORY[0x263F07490]);
    sub_240955548();
    v12[1] = *(void *)(v3 + *(int *)(v10 + 24));
    char v13 = 2;
    sub_24088369C();
    sub_2408837C4(&qword_268C90D40);
    sub_240955598();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_24088229C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  sub_240882A3C(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v17 - v4;
  sub_24088375C(0, &qword_268C90D20, (uint64_t (*)(void))sub_240883648, (uint64_t)&type metadata for NewLabsFeedItemData.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v19 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = type metadata accessor for NewLabsFeedItemData(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (uint64_t *)((char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2408304E8(a1, a1[3]);
  sub_240883648();
  uint64_t v20 = v8;
  uint64_t v12 = v21;
  sub_240955768();
  if (v12) {
    return sub_2408371B8((uint64_t)a1);
  }
  uint64_t v13 = v9;
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  char v25 = 0;
  *uint64_t v11 = sub_2409554E8();
  sub_240951A28();
  char v24 = 1;
  sub_2408829A0(&qword_26AFCC688, MEMORY[0x263F07490]);
  sub_2409554A8();
  sub_240882AA0((uint64_t)v5, (uint64_t)v11 + *(int *)(v13 + 20));
  sub_24088369C();
  char v23 = 2;
  sub_2408837C4(&qword_268C90D30);
  sub_2409554F8();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v15);
  *(uint64_t *)((char *)v11 + *(int *)(v13 + 24)) = v22;
  sub_2408836F4((uint64_t)v11, v17, type metadata accessor for NewLabsFeedItemData);
  sub_2408371B8((uint64_t)a1);
  return sub_2408835E8((uint64_t)v11, type metadata accessor for NewLabsFeedItemData);
}

uint64_t sub_240882680()
{
  return sub_240955748();
}

uint64_t sub_2408826C8()
{
  return sub_240955748();
}

unint64_t sub_24088270C()
{
  uint64_t v1 = 0x65676E497473616CLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x73656D614E62616CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_240882770@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_240884004(a1, a2);
  *a3 = result;
  return result;
}

void sub_240882798(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_2408827A4(uint64_t a1)
{
  unint64_t v2 = sub_240883648();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2408827E0(uint64_t a1)
{
  unint64_t v2 = sub_240883648();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24088281C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24088229C(a1, a2);
}

uint64_t sub_240882834(void *a1)
{
  return sub_240882038(a1);
}

uint64_t sub_24088284C(uint64_t a1, uint64_t a2)
{
  return sub_240882864(a1, a2, (void (*)(unsigned char *))sub_240881DC4);
}

uint64_t sub_240882864(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *))
{
  sub_2409556F8();
  a3(v5);
  return sub_240955748();
}

uint64_t sub_2408828B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2408828C8(a1, a2, a3, (void (*)(unsigned char *))sub_240881DC4);
}

uint64_t sub_2408828C8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  sub_2409556F8();
  a4(v6);
  return sub_240955748();
}

uint64_t sub_240882910()
{
  return sub_2408829A0(&qword_268C90CB0, (void (*)(uint64_t))type metadata accessor for NewLabsFeedItemData);
}

uint64_t sub_240882958()
{
  return sub_2408829A0(&qword_268C90CB8, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
}

uint64_t sub_2408829A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2408829E8()
{
  unint64_t result = qword_268C90CC8;
  if (!qword_268C90CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90CC8);
  }
  return result;
}

void sub_240882A3C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_240882AA0(uint64_t a1, uint64_t a2)
{
  sub_240882A3C(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_240882B34(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240882A3C(255, &qword_268C90CD8, MEMORY[0x263F45EC8], MEMORY[0x263F8D488]);
    sub_2408829A0(a2, MEMORY[0x263F45EC8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240882BF4(uint64_t a1, uint64_t a2)
{
  sub_240882A3C(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240882C88(void *a1, void *a2)
{
  uint64_t v4 = sub_240951A28();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408834C8();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240882A3C(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v34 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v34 - v19;
  if (*a1 != *a2) {
    goto LABEL_8;
  }
  char v34 = v7;
  uint64_t v21 = v5;
  uint64_t v22 = type metadata accessor for NewLabsFeedItemData(0);
  uint64_t v23 = *(int *)(v22 + 20);
  char v36 = a1;
  sub_240882BF4((uint64_t)a1 + v23, (uint64_t)v20);
  uint64_t v35 = v22;
  uint64_t v24 = *(int *)(v22 + 20);
  uint64_t v25 = v21;
  char v37 = a2;
  sub_240882BF4((uint64_t)a2 + v24, (uint64_t)v18);
  uint64_t v26 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_240882BF4((uint64_t)v20, (uint64_t)v11);
  sub_240882BF4((uint64_t)v18, v26);
  uint64_t v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (v27((uint64_t)v11, 1, v4) == 1)
  {
    sub_24088355C((uint64_t)v18);
    sub_24088355C((uint64_t)v20);
    if (v27(v26, 1, v4) == 1)
    {
      sub_24088355C((uint64_t)v11);
LABEL_11:
      char v28 = sub_24088CC6C(*(void **)((char *)v36 + *(int *)(v35 + 24)), *(void **)((char *)v37 + *(int *)(v35 + 24)));
      return v28 & 1;
    }
    goto LABEL_7;
  }
  sub_240882BF4((uint64_t)v11, (uint64_t)v15);
  if (v27(v26, 1, v4) == 1)
  {
    sub_24088355C((uint64_t)v18);
    sub_24088355C((uint64_t)v20);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v15, v4);
LABEL_7:
    sub_2408835E8((uint64_t)v11, (uint64_t (*)(void))sub_2408834C8);
    goto LABEL_8;
  }
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 32);
  uint64_t v31 = v34;
  v30(v34, v26, v4);
  sub_2408829A0(&qword_268C90D18, MEMORY[0x263F07490]);
  char v32 = sub_240954778();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v25 + 8);
  v33(v31, v4);
  sub_24088355C((uint64_t)v18);
  sub_24088355C((uint64_t)v20);
  v33(v15, v4);
  sub_24088355C((uint64_t)v11);
  if (v32) {
    goto LABEL_11;
  }
LABEL_8:
  char v28 = 0;
  return v28 & 1;
}

uint64_t sub_240883070(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240951A28();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408834C8();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240882A3C(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v40 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v40 - v19;
  if ((sub_240951A68() & 1) == 0) {
    return 0;
  }
  uint64_t v41 = v5;
  uint64_t v21 = (int *)type metadata accessor for NewRecordsFeedItemData(0);
  uint64_t v22 = v21[5];
  uint64_t v23 = *(void *)(a1 + v22);
  uint64_t v24 = *(void *)(a1 + v22 + 8);
  uint64_t v25 = (void *)(a2 + v22);
  BOOL v26 = v23 == *v25 && v24 == v25[1];
  if (v26 || (char v27 = sub_240955618(), result = 0, (v27 & 1) != 0))
  {
    uint64_t v29 = v21[6];
    uint64_t v30 = (void *)(a1 + v29);
    uint64_t v31 = *(void *)(a1 + v29 + 8);
    char v32 = (void *)(a2 + v29);
    uint64_t v33 = v32[1];
    if (v31)
    {
      if (!v33) {
        return 0;
      }
      if (*v30 != *v32 || v31 != v33)
      {
        char v34 = sub_240955618();
        uint64_t result = 0;
        if ((v34 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v33)
    {
      return 0;
    }
    if (sub_24088E6E4(*(void *)(a1 + v21[7]), *(void *)(a2 + v21[7])))
    {
      sub_240882BF4(a1 + v21[8], (uint64_t)v20);
      sub_240882BF4(a2 + v21[8], (uint64_t)v18);
      uint64_t v35 = (uint64_t)&v11[*(int *)(v9 + 48)];
      sub_240882BF4((uint64_t)v20, (uint64_t)v11);
      sub_240882BF4((uint64_t)v18, v35);
      uint64_t v36 = v41;
      char v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
      if (v37((uint64_t)v11, 1, v4) == 1)
      {
        sub_24088355C((uint64_t)v18);
        sub_24088355C((uint64_t)v20);
        if (v37(v35, 1, v4) == 1)
        {
          sub_24088355C((uint64_t)v11);
          return 1;
        }
        goto LABEL_20;
      }
      sub_240882BF4((uint64_t)v11, (uint64_t)v15);
      if (v37(v35, 1, v4) == 1)
      {
        sub_24088355C((uint64_t)v18);
        sub_24088355C((uint64_t)v20);
        (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v4);
LABEL_20:
        sub_2408835E8((uint64_t)v11, (uint64_t (*)(void))sub_2408834C8);
        return 0;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v7, v35, v4);
      sub_2408829A0(&qword_268C90D18, MEMORY[0x263F07490]);
      char v38 = sub_240954778();
      uint64_t v39 = *(void (**)(char *, uint64_t))(v36 + 8);
      v39(v7, v4);
      sub_24088355C((uint64_t)v18);
      sub_24088355C((uint64_t)v20);
      v39(v15, v4);
      sub_24088355C((uint64_t)v11);
      if (v38) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

void sub_2408834C8()
{
  if (!qword_26AFCC690)
  {
    sub_240882A3C(255, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AFCC690);
    }
  }
}

uint64_t sub_24088355C(uint64_t a1)
{
  sub_240882A3C(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2408835E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_240883648()
{
  unint64_t result = qword_268C90D28;
  if (!qword_268C90D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90D28);
  }
  return result;
}

void sub_24088369C()
{
  if (!qword_26AFD0550)
  {
    unint64_t v0 = sub_240954A38();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD0550);
    }
  }
}

uint64_t sub_2408836F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_24088375C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_2408837C4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24088369C();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NewLabsFeedItemData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for NewLabsFeedItemData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240883980);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NewLabsFeedItemData.CodingKeys()
{
  return &type metadata for NewLabsFeedItemData.CodingKeys;
}

uint64_t getEnumTagSinglePayload for NewRecordsFeedItemData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for NewRecordsFeedItemData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240883B14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_240883B3C(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_240883B44(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for NewRecordsFeedItemData.CodingKeys()
{
  return &type metadata for NewRecordsFeedItemData.CodingKeys;
}

unint64_t sub_240883B60()
{
  unint64_t result = qword_268C90D48;
  if (!qword_268C90D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90D48);
  }
  return result;
}

unint64_t sub_240883BB8()
{
  unint64_t result = qword_268C90D50;
  if (!qword_268C90D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90D50);
  }
  return result;
}

unint64_t sub_240883C10()
{
  unint64_t result = qword_268C90D58;
  if (!qword_268C90D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90D58);
  }
  return result;
}

unint64_t sub_240883C68()
{
  unint64_t result = qword_268C90D60;
  if (!qword_268C90D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90D60);
  }
  return result;
}

unint64_t sub_240883CC0()
{
  unint64_t result = qword_268C90D68;
  if (!qword_268C90D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90D68);
  }
  return result;
}

unint64_t sub_240883D18()
{
  unint64_t result = qword_268C90D70;
  if (!qword_268C90D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90D70);
  }
  return result;
}

uint64_t sub_240883D6C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x49746E756F636361 && a2 == 0xE900000000000064;
  if (v2 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x54746E756F636361 && a2 == 0xEC000000656C7469 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x53746E756F636361 && a2 == 0xEF656C7469746275 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x79726F6765746163 && a2 == 0xEE0073746E756F43 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65676E497473616CLL && a2 == 0xEA00000000007473)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_240955618();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_240884004(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000024095D020 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65676E497473616CLL && a2 == 0xEA00000000007473 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73656D614E62616CLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_240955618();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void sub_24088417C(uint64_t a1, void *a2, void *a3, void *aBlock)
{
  char v6 = *(void (**)(id, id, uint64_t (*)(char), uint64_t))(a1 + 32);
  BOOL v7 = _Block_copy(aBlock);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  swift_retain();
  id v10 = a2;
  id v9 = a3;
  v6(v10, v9, sub_2408848AC, v8);
  swift_release();
  swift_release();
}

id _sSo18UIContextualActionC13HealthRecordsE05unpinB07handlerAByAB_So6UIViewCySbctc_tFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240952B98();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  BOOL v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240878630(0);
  MEMORY[0x270FA5388](v8 - 8);
  id v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_240951AB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_240952B88();
  sub_2409535A8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_240853DC4((uint64_t)v10);
  swift_retain();
  uint64_t v12 = (void *)sub_240954788();
  swift_bridgeObjectRelease();
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24088417C;
  aBlock[3] = &unk_26F4F0808;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = objc_msgSend(self, sel_contextualActionWithStyle_title_handler_, 0, v12, v13);

  _Block_release(v13);
  swift_release();
  uint64_t v15 = (void *)sub_240954788();
  id v16 = objc_msgSend(self, sel_systemImageNamed_, v15);

  objc_msgSend(v14, sel_setImage_, v16);
  id v17 = objc_msgSend(self, sel_systemYellowColor);
  objc_msgSend(v14, sel_setBackgroundColor_, v17);

  return v14;
}

id _sSo18UIContextualActionC13HealthRecordsE03pinB07handlerAByAB_So6UIViewCySbctc_tFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240952B98();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  BOOL v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240878630(0);
  MEMORY[0x270FA5388](v8 - 8);
  id v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_240951AB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_240952B88();
  sub_2409535A8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_240853DC4((uint64_t)v10);
  swift_retain();
  uint64_t v12 = (void *)sub_240954788();
  swift_bridgeObjectRelease();
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24088417C;
  aBlock[3] = &unk_26F4F07B8;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = objc_msgSend(self, sel_contextualActionWithStyle_title_handler_, 0, v12, v13);

  _Block_release(v13);
  swift_release();
  uint64_t v15 = (void *)sub_240954788();
  id v16 = objc_msgSend(self, sel_systemImageNamed_, v15);

  objc_msgSend(v14, sel_setImage_, v16);
  id v17 = objc_msgSend(self, sel_systemYellowColor);
  objc_msgSend(v14, sel_setBackgroundColor_, v17);

  return v14;
}

uint64_t sub_240884874()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2408848AC(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

id sub_2408848CC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v63 = a3;
  uint64_t v9 = sub_2409528B8();
  uint64_t v64 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_allocWithZone(MEMORY[0x263F62228]);
  uint64_t v13 = (void *)sub_240951928();
  id v14 = objc_msgSend(v12, sel_initWithData_, v13);

  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F464E0]), sel_init);
  if (v15)
  {
    id v16 = v15;
    objc_msgSend(v15, sel_readFrom_, v14);
    if ((objc_msgSend(v16, sel_hasConceptIdentifier) & 1) != 0
      && objc_msgSend(v16, sel_hasPreferredName)
      && objc_msgSend(v16, sel_hasLatestRecord)
      && objc_msgSend(v16, sel_hasIsPinned))
    {
      uint64_t v65 = (void *)MEMORY[0x263F8EE78];
      if ((uint64_t)objc_msgSend(v16, sel_allRecordsCount) >= 1)
      {
        id result = objc_msgSend(v16, sel_allRecords);
        if (!result)
        {
LABEL_25:
          __break(1u);
          return result;
        }
        uint64_t v18 = result;
        id v62 = v16;
        uint64_t v19 = sub_240890B3C(v18, v62);

        sub_2408FEF20((uint64_t)v19);
      }
      id result = objc_msgSend(v16, sel_conceptIdentifier);
      if (result)
      {
        uint64_t v20 = result;
        uint64_t v21 = (void *)sub_2409547C8();
        uint64_t v61 = v22;
        id v62 = v21;

        (*(void (**)(char *, void, uint64_t))(v64 + 104))(v11, *MEMORY[0x263F45FE8], v9);
        id result = objc_msgSend(v16, sel_preferredName);
        if (result)
        {
          uint64_t v23 = result;
          uint64_t v24 = sub_2409547C8();
          uint64_t v58 = v25;
          uint64_t v59 = v24;

          uint64_t v57 = sub_240954ED8();
          uint64_t v56 = v26;
          uint64_t v27 = sub_240954EE8();
          uint64_t v55 = v28;
          unsigned int v54 = objc_msgSend(v16, sel_isPinned);
          id result = objc_msgSend(v16, sel_latestRecord);
          id v60 = result;
          if (result)
          {
            id result = objc_msgSend(v16, sel_conceptIdentifier);
            if (result)
            {
              uint64_t v29 = result;
              uint64_t v53 = v27;
              uint64_t v51 = sub_2409547C8();
              uint64_t v52 = (char *)v30;

              id result = objc_msgSend(v16, sel_preferredName);
              if (result)
              {
                uint64_t v31 = result;
                v50[0] = sub_2409547C8();
                uint64_t v33 = v32;
                v50[1] = v32;

                uint64_t v34 = v33;
                uint64_t v35 = v60;
                sub_24088BC8C(v51, (uint64_t)v52, v50[0], v34, v66);

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                id v60 = v65;
                uint64_t v36 = (int *)type metadata accessor for SharedConceptFeedItemData(0);
                uint64_t v52 = &a5[v36[13]];
                sub_24083EDCC(0, &qword_26AFCDF70);
                sub_24083F780((unint64_t *)&qword_268C90F28, &qword_26AFCDF70);
                sub_240953AA8();
                sub_240849C48(a1, a2);

                uint64_t v37 = v64;
                *(void *)a5 = v63;
                *((void *)a5 + 1) = a4;
                uint64_t v38 = v61;
                *((void *)a5 + 2) = v62;
                *((void *)a5 + 3) = v38;
                (*(void (**)(char *, char *, uint64_t))(v37 + 32))(&a5[v36[6]], v11, v9);
                uint64_t v39 = (uint64_t *)&a5[v36[7]];
                uint64_t v40 = v58;
                *uint64_t v39 = v59;
                v39[1] = v40;
                uint64_t v41 = (uint64_t *)&a5[v36[8]];
                uint64_t v42 = v56;
                *uint64_t v41 = v57;
                v41[1] = v42;
                uint64_t v43 = (uint64_t *)&a5[v36[9]];
                uint64_t v44 = v55;
                *uint64_t v43 = v53;
                v43[1] = v44;
                a5[v36[10]] = v54;
                os_log_type_t v45 = &a5[v36[11]];
                long long v46 = v66[3];
                *((_OWORD *)v45 + 2) = v66[2];
                *((_OWORD *)v45 + 3) = v46;
                *((_OWORD *)v45 + 4) = v66[4];
                *((void *)v45 + 10) = v67;
                long long v47 = v66[1];
                *(_OWORD *)os_log_type_t v45 = v66[0];
                *((_OWORD *)v45 + 1) = v47;
                *(void *)&a5[v36[12]] = v60;
                return (id)(*(uint64_t (**)(char *, void, uint64_t, int *))(*((void *)v36 - 1) + 56))(a5, 0, 1, v36);
              }
              goto LABEL_24;
            }
LABEL_23:
            __break(1u);
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
LABEL_22:
          __break(1u);
          goto LABEL_23;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_22;
    }
    sub_240849C48(a1, a2);

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_240849C48(a1, a2);

    swift_bridgeObjectRelease();
  }
  uint64_t v48 = type metadata accessor for SharedConceptFeedItemData(0);
  unint64_t v49 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56);

  return (id)v49(a5, 1, 1, v48);
}

uint64_t sub_240884EB8()
{
  sub_2409528B8();
  sub_2408938A8(&qword_268C90DD0, MEMORY[0x263F46018]);
  sub_240954708();
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SharedConceptComboFeedItemData(0) + 20));
  sub_240955708();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_240954868();
      swift_bridgeObjectRelease();
      v3 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  sub_240951A28();
  sub_2408938A8(&qword_268C90D10, MEMORY[0x263F07490]);
  return sub_240954708();
}

uint64_t sub_240885008(void *a1)
{
  uint64_t v3 = v1;
  sub_240894250(0, &qword_268C90DC0, (uint64_t (*)(void))sub_24088BBC8, (uint64_t)&type metadata for SharedConceptComboFeedItemData.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v11 - v8;
  sub_2408304E8(a1, a1[3]);
  sub_24088BBC8();
  sub_240955778();
  char v14 = 0;
  sub_2409528B8();
  sub_2408938A8(&qword_268C90DC8, MEMORY[0x263F46018]);
  sub_240955598();
  if (!v2)
  {
    v11[1] = *(void *)(v3 + *(int *)(type metadata accessor for SharedConceptComboFeedItemData(0) + 20));
    char v13 = 1;
    sub_2408377E0(0, (unint64_t *)&qword_26AFD0550);
    sub_24088BC1C(&qword_268C90D40);
    sub_240955598();
    char v12 = 2;
    sub_240951A28();
    sub_2408938A8(&qword_26AFCC680, MEMORY[0x263F07490]);
    sub_240955598();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_2408852C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v25 = sub_240951A28();
  uint64_t v20 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v22 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_2409528B8();
  uint64_t v23 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v26 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240894250(0, &qword_268C90DA8, (uint64_t (*)(void))sub_24088BBC8, (uint64_t)&type metadata for SharedConceptComboFeedItemData.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v27 = v6;
  uint64_t v24 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = type metadata accessor for SharedConceptComboFeedItemData(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408304E8(a1, a1[3]);
  sub_24088BBC8();
  uint64_t v28 = v8;
  uint64_t v12 = v29;
  sub_240955768();
  if (v12) {
    return sub_2408371B8((uint64_t)a1);
  }
  uint64_t v29 = v9;
  uint64_t v14 = v24;
  uint64_t v13 = v25;
  char v33 = 0;
  sub_2408938A8(&qword_268C90DB8, MEMORY[0x263F46018]);
  sub_2409554F8();
  id v15 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  uint64_t v19 = v11;
  v15(v11, v26, v4);
  sub_2408377E0(0, (unint64_t *)&qword_26AFD0550);
  char v32 = 1;
  sub_24088BC1C(&qword_268C90D30);
  sub_2409554F8();
  uint64_t v26 = (char *)v4;
  *(void *)&v19[*(int *)(v29 + 20)] = v30;
  char v31 = 2;
  sub_2408938A8(&qword_26AFCC688, MEMORY[0x263F07490]);
  id v16 = v22;
  sub_2409554F8();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v28, v27);
  uint64_t v17 = (uint64_t)v19;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v19[*(int *)(v29 + 24)], v16, v13);
  sub_24088F570(v17, v21, type metadata accessor for SharedConceptComboFeedItemData);
  sub_2408371B8((uint64_t)a1);
  return sub_24088F5D8(v17, type metadata accessor for SharedConceptComboFeedItemData);
}

uint64_t sub_2408857EC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_240952258();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408925E8(0, &qword_26AFCD978, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v17 - v9;
  swift_bridgeObjectRetain();
  sub_240954868();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_240954868();
  swift_bridgeObjectRelease();
  uint64_t v11 = (int *)type metadata accessor for SharedConceptFeedItemData(0);
  sub_2409528B8();
  sub_2408938A8(&qword_268C90DD0, MEMORY[0x263F46018]);
  sub_240954708();
  swift_bridgeObjectRetain();
  sub_240954868();
  swift_bridgeObjectRelease();
  if (*(void *)(v1 + v11[8] + 8))
  {
    sub_240955718();
    swift_bridgeObjectRetain();
    sub_240954868();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_240955718();
  }
  if (*(void *)(v1 + v11[9] + 8))
  {
    sub_240955718();
    swift_bridgeObjectRetain();
    sub_240954868();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_240955718();
  }
  sub_240955718();
  uint64_t v12 = v1 + v11[11];
  long long v13 = *(_OWORD *)(v12 + 48);
  void v17[2] = *(_OWORD *)(v12 + 32);
  v17[3] = v13;
  v17[4] = *(_OWORD *)(v12 + 64);
  uint64_t v18 = *(void *)(v12 + 80);
  long long v14 = *(_OWORD *)(v12 + 16);
  v17[0] = *(_OWORD *)v12;
  v17[1] = v14;
  sub_240865710((uint64_t)v17);
  sub_240886A38(a1);
  sub_240892468((uint64_t)v17);
  uint64_t v15 = *(void *)(v1 + v11[12]);
  swift_bridgeObjectRetain();
  sub_24088EF70(a1, v15);
  swift_bridgeObjectRelease();
  sub_240866350(v2 + v11[13], (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1) {
    return sub_240955718();
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
  sub_240955718();
  sub_2408938A8(&qword_268C90F08, MEMORY[0x263F45780]);
  sub_240954708();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_240885BE8(char a1)
{
  unint64_t result = 0x656C626172616873;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x656C746974;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x7470697263736564;
      break;
    case 6:
      unint64_t result = 0x64656E6E69507369;
      break;
    case 7:
      unint64_t result = 0x655274736574616CLL;
      break;
    case 8:
      unint64_t result = 0x6465646465626D65;
      break;
    case 9:
      unint64_t result = 0x6E6F6973726576;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_240885D54(void *a1)
{
  uint64_t v3 = v1;
  sub_240894250(0, &qword_268C90EE8, (uint64_t (*)(void))sub_24089225C, (uint64_t)&type metadata for SharedConceptFeedItemData.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v20 - v8;
  sub_2408304E8(a1, a1[3]);
  sub_24089225C();
  sub_240955778();
  LOBYTE(v21) = 0;
  sub_240955558();
  if (!v2)
  {
    LOBYTE(v21) = 1;
    sub_240955558();
    uint64_t v10 = type metadata accessor for SharedConceptFeedItemData(0);
    LOBYTE(v21) = 2;
    sub_2409528B8();
    sub_2408938A8(&qword_268C90DC8, MEMORY[0x263F46018]);
    sub_240955598();
    LOBYTE(v21) = 3;
    sub_240955558();
    LOBYTE(v21) = 4;
    sub_240955518();
    LOBYTE(v21) = 5;
    sub_240955518();
    LOBYTE(v21) = 6;
    sub_240955568();
    uint64_t v11 = (long long *)(v3 + *(int *)(v10 + 44));
    uint64_t v12 = *((void *)v11 + 2);
    uint64_t v13 = *((void *)v11 + 3);
    uint64_t v14 = *((void *)v11 + 6);
    uint64_t v15 = *((void *)v11 + 7);
    uint64_t v16 = *((void *)v11 + 8);
    uint64_t v17 = *((void *)v11 + 9);
    uint64_t v18 = *((void *)v11 + 10);
    long long v21 = *v11;
    uint64_t v22 = v12;
    uint64_t v23 = v13;
    long long v24 = v11[2];
    uint64_t v25 = v14;
    uint64_t v26 = v15;
    uint64_t v27 = v16;
    uint64_t v28 = v17;
    uint64_t v29 = v18;
    char v30 = 7;
    sub_240892414();
    sub_240955598();
    *(void *)&long long v21 = *(void *)(v3 + *(int *)(v10 + 48));
    char v30 = 8;
    sub_2408377E0(0, (unint64_t *)&qword_268C90ED0);
    sub_240892304(&qword_268C90EF8, (void (*)(void))sub_240892414);
    sub_240955598();
    LOBYTE(v21) = 9;
    sub_240952258();
    sub_2408938A8(&qword_268C90F00, MEMORY[0x263F45780]);
    sub_240955548();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_2408861A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  sub_2408925E8(0, &qword_26AFCD978, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v43 - v5;
  uint64_t v7 = sub_2409528B8();
  uint64_t v47 = *(void *)(v7 - 8);
  uint64_t v48 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240894250(0, &qword_268C90EB8, (uint64_t (*)(void))sub_24089225C, (uint64_t)&type metadata for SharedConceptFeedItemData.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v46 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v43 - v12;
  uint64_t v51 = type metadata accessor for SharedConceptFeedItemData(0);
  MEMORY[0x270FA5388](v51);
  unint64_t v49 = a1;
  uint64_t v50 = (uint64_t *)((char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2408304E8(a1, a1[3]);
  sub_24089225C();
  sub_240955768();
  if (v2) {
    return sub_2408371B8((uint64_t)v49);
  }
  uint64_t v44 = v6;
  uint64_t v15 = v11;
  uint64_t v16 = v45;
  LOBYTE(v52) = 0;
  uint64_t v17 = sub_2409554B8();
  uint64_t v18 = (char *)v50;
  uint64_t *v50 = v17;
  *((void *)v18 + 1) = v19;
  LOBYTE(v52) = 1;
  uint64_t v20 = sub_2409554B8();
  long long v21 = (int *)v51;
  *((void *)v18 + 2) = v20;
  *((void *)v18 + 3) = v22;
  LOBYTE(v52) = 2;
  sub_2408938A8(&qword_268C90DB8, MEMORY[0x263F46018]);
  uint64_t v23 = v48;
  sub_2409554F8();
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))(&v18[v21[6]], v9, v23);
  LOBYTE(v52) = 3;
  uint64_t v24 = sub_2409554B8();
  uint64_t v25 = (uint64_t *)&v18[v21[7]];
  *uint64_t v25 = v24;
  v25[1] = v26;
  LOBYTE(v52) = 4;
  uint64_t v27 = sub_240955478();
  uint64_t v28 = (uint64_t *)&v18[v21[8]];
  *uint64_t v28 = v27;
  v28[1] = v29;
  LOBYTE(v52) = 5;
  uint64_t v30 = sub_240955478();
  char v31 = (uint64_t *)&v18[v21[9]];
  *char v31 = v30;
  v31[1] = v32;
  LOBYTE(v52) = 6;
  v18[v21[10]] = sub_2409554C8() & 1;
  char v61 = 7;
  sub_2408922B0();
  sub_2409554F8();
  uint64_t v33 = v53;
  uint64_t v34 = v54;
  uint64_t v35 = v56;
  uint64_t v36 = v57;
  uint64_t v37 = v58;
  uint64_t v38 = v59;
  uint64_t v39 = v60;
  uint64_t v40 = &v18[v21[11]];
  *(_OWORD *)uint64_t v40 = v52;
  *((void *)v40 + 2) = v33;
  *((void *)v40 + 3) = v34;
  *((_OWORD *)v40 + 2) = v55;
  *((void *)v40 + 6) = v35;
  *((void *)v40 + 7) = v36;
  *((void *)v40 + 8) = v37;
  *((void *)v40 + 9) = v38;
  *((void *)v40 + 10) = v39;
  sub_2408377E0(0, (unint64_t *)&qword_268C90ED0);
  char v61 = 8;
  sub_240892304(&qword_268C90ED8, (void (*)(void))sub_2408922B0);
  sub_2409554F8();
  *(void *)&v18[v21[12]] = v52;
  sub_240952258();
  LOBYTE(v52) = 9;
  sub_2408938A8(&qword_268C90EE0, MEMORY[0x263F45780]);
  sub_2409554A8();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v46);
  uint64_t v41 = (uint64_t)v50;
  sub_240892380((uint64_t)v44, (uint64_t)v50 + *(int *)(v51 + 52));
  sub_24088F570(v41, v16, type metadata accessor for SharedConceptFeedItemData);
  sub_2408371B8((uint64_t)v49);
  return sub_24088F5D8(v41, type metadata accessor for SharedConceptFeedItemData);
}

uint64_t sub_240886A38(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v12 = v4;
  uint64_t v5 = *(void *)(v4 + 16);
  sub_240955708();
  if (v5)
  {
    sub_24082EF28(0, (unint64_t *)&qword_268C90E10, &qword_268C90E18);
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = v4 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    sub_240892048((uint64_t)&v12);
    uint64_t v9 = *(void *)(v7 + 72);
    sub_2408921B0(&qword_268C90E70, &qword_268C90E78);
    do
    {
      sub_240954708();
      v8 += v9;
      --v5;
    }
    while (v5);
    sub_240892074((uint64_t)&v12);
  }
  swift_bridgeObjectRetain();
  sub_240954868();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_240954868();
  swift_bridgeObjectRelease();
  uint64_t v10 = v2[5];
  swift_bridgeObjectRetain();
  sub_24088E9F4(a1, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_240954868();
  swift_bridgeObjectRelease();
  sub_240955738();
  swift_bridgeObjectRetain();
  sub_240954868();
  return swift_bridgeObjectRelease();
}

unint64_t sub_240886C40(char a1)
{
  unint64_t result = 0x73676E69646F63;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x6C61566465646F63;
      break;
    case 4:
      unint64_t result = 0x74696E556D756375;
      break;
    case 5:
      unint64_t result = 0x6174614465746164;
      break;
    case 6:
      unint64_t result = 0x555564726F636572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_240886D4C(void *a1)
{
  uint64_t v3 = v1;
  sub_240894250(0, &qword_268C90E48, (uint64_t (*)(void))sub_240891E20, (uint64_t)&type metadata for SharedConceptFormattedRecord.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v11 - v8;
  sub_2408304E8(a1, a1[3]);
  sub_240891E20();
  sub_240955778();
  uint64_t v13 = *v3;
  char v12 = 0;
  sub_2408926B4(0, &qword_268C90E08, MEMORY[0x263F8D488]);
  sub_240891F54(&qword_268C90E50, &qword_268C90E58);
  sub_240955598();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_240955558();
    LOBYTE(v13) = 2;
    sub_240955558();
    uint64_t v13 = v3[5];
    char v12 = 3;
    sub_2408925E8(0, &qword_268C90E30, type metadata accessor for SharedConceptCodedValue, MEMORY[0x263F8D488]);
    sub_240891E94(&qword_268C90E60, &qword_268C90E68);
    sub_240955598();
    LOBYTE(v13) = 4;
    sub_240955558();
    LOBYTE(v13) = 5;
    sub_240955578();
    LOBYTE(v13) = 6;
    sub_240955558();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_2408870A8()
{
  uint64_t v1 = v0;
  sub_24082EF28(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v17 - v5;
  sub_240851D44();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v0;
  uint64_t v11 = *(void *)(*v0 + 16);
  sub_240955708();
  if (v11)
  {
    uint64_t v17 = v6;
    uint64_t v18 = v0;
    sub_24082EF28(0, (unint64_t *)&qword_268C90E10, &qword_268C90E18);
    uint64_t v13 = v10
        + ((*(unsigned __int8 *)(*(void *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v12 - 8) + 80));
    uint64_t v14 = *(void *)(*(void *)(v12 - 8) + 72);
    sub_2408921B0(&qword_268C90E70, &qword_268C90E78);
    swift_bridgeObjectRetain();
    do
    {
      sub_240954708();
      v13 += v14;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    uint64_t v6 = v17;
    uint64_t v1 = v18;
  }
  uint64_t v15 = (int *)type metadata accessor for SharedConceptCodedValue(0);
  sub_24088F570((uint64_t)v1 + v15[5], (uint64_t)v9, (uint64_t (*)(void))sub_240851D44);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
    sub_240955718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
    sub_240955718();
    sub_2408920A0(&qword_268C90E80, &qword_268C90E88);
    sub_240954708();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  if (*(uint64_t *)((char *)v1 + v15[6] + 8))
  {
    sub_240955718();
    swift_bridgeObjectRetain();
    sub_240954868();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_240955718();
  }
  if (!*(uint64_t *)((char *)v1 + v15[7] + 8)) {
    return sub_240955718();
  }
  sub_240955718();
  swift_bridgeObjectRetain();
  sub_240954868();
  return swift_bridgeObjectRelease();
}

uint64_t sub_240887464(void *a1)
{
  uint64_t v3 = v1;
  sub_240894250(0, &qword_268C90FE8, (uint64_t (*)(void))sub_2408941A0, (uint64_t)&type metadata for SharedConceptCodedValue.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v11[-v8];
  sub_2408304E8(a1, a1[3]);
  sub_2408941A0();
  sub_240955778();
  uint64_t v12 = *v3;
  v11[15] = 0;
  sub_2408926B4(0, &qword_268C90E08, MEMORY[0x263F8D488]);
  sub_240891F54(&qword_268C90E50, &qword_268C90E58);
  sub_240955598();
  if (!v2)
  {
    type metadata accessor for SharedConceptCodedValue(0);
    v11[14] = 1;
    sub_24082EF28(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
    sub_2408941F4(&qword_268C90FF0);
    sub_240955548();
    v11[13] = 2;
    sub_240955518();
    v11[12] = 3;
    sub_240955518();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_240887730@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  sub_240851D44();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240894250(0, &qword_268C90FD0, (uint64_t (*)(void))sub_2408941A0, (uint64_t)&type metadata for SharedConceptCodedValue.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v25 = *(void *)(v6 - 8);
  uint64_t v26 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v24 - v7;
  uint64_t v9 = type metadata accessor for SharedConceptCodedValue(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (uint64_t *)((char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2408304E8(a1, a1[3]);
  sub_2408941A0();
  uint64_t v27 = v8;
  uint64_t v12 = (uint64_t)v28;
  sub_240955768();
  if (v12) {
    return sub_2408371B8((uint64_t)a1);
  }
  uint64_t v28 = a1;
  uint64_t v13 = v25;
  sub_2408926B4(0, &qword_268C90E08, MEMORY[0x263F8D488]);
  char v32 = 0;
  sub_240891F54(&qword_268C90E20, &qword_268C90E28);
  uint64_t v14 = v26;
  sub_2409554F8();
  *uint64_t v11 = v33;
  sub_24082EF28(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
  char v31 = 1;
  sub_2408941F4(&qword_268C90FE0);
  sub_2409554A8();
  uint64_t v15 = v9;
  sub_24089264C((uint64_t)v5, (uint64_t)v11 + *(int *)(v9 + 20), (uint64_t (*)(void))sub_240851D44);
  char v30 = 2;
  uint64_t v16 = sub_240955478();
  uint64_t v17 = (void *)((char *)v11 + *(int *)(v9 + 24));
  *uint64_t v17 = v16;
  v17[1] = v18;
  char v29 = 3;
  uint64_t v19 = sub_240955478();
  uint64_t v21 = v20;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v27, v14);
  uint64_t v22 = (void *)((char *)v11 + *(int *)(v15 + 28));
  *uint64_t v22 = v19;
  v22[1] = v21;
  sub_24088F570((uint64_t)v11, v24, type metadata accessor for SharedConceptCodedValue);
  sub_2408371B8((uint64_t)v28);
  return sub_24088F5D8((uint64_t)v11, type metadata accessor for SharedConceptCodedValue);
}

uint64_t sub_240887BE8()
{
  sub_2409528B8();
  sub_2408938A8(&qword_268C90DD0, MEMORY[0x263F46018]);
  sub_240954708();
  uint64_t v1 = type metadata accessor for SharedNewRecordsAlertData(0);
  sub_240955708();
  uint64_t v2 = *(void *)(v0 + *(int *)(v1 + 24));
  sub_240955708();
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = v2 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_240954868();
      swift_bridgeObjectRelease();
      v4 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_240954868();
  swift_bridgeObjectRelease();
  sub_240951A28();
  sub_2408938A8(&qword_268C90D10, MEMORY[0x263F07490]);
  return sub_240954708();
}

uint64_t sub_240887D70(void *a1)
{
  uint64_t v3 = v1;
  sub_240894250(0, &qword_268C90DF0, (uint64_t (*)(void))sub_24088F51C, (uint64_t)&type metadata for SharedNewRecordsAlertData.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v12 - v8;
  sub_2408304E8(a1, a1[3]);
  sub_24088F51C();
  sub_240955778();
  char v17 = 0;
  sub_2409528B8();
  sub_2408938A8(&qword_268C90DC8, MEMORY[0x263F46018]);
  sub_240955598();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for SharedNewRecordsAlertData(0);
    char v16 = 1;
    sub_240955588();
    v12[1] = *(void *)(v3 + *(int *)(v10 + 24));
    char v15 = 2;
    sub_2408377E0(0, (unint64_t *)&qword_26AFD0550);
    sub_24088BC1C(&qword_268C90D40);
    sub_240955598();
    char v14 = 3;
    sub_240955558();
    char v13 = 4;
    sub_240951A28();
    sub_2408938A8(&qword_26AFCC680, MEMORY[0x263F07490]);
    sub_240955598();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_240888088@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v25 = sub_240951A28();
  uint64_t v20 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v22 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_2409528B8();
  uint64_t v24 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v26 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240894250(0, &qword_268C90DE0, (uint64_t (*)(void))sub_24088F51C, (uint64_t)&type metadata for SharedNewRecordsAlertData.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v28 = v6;
  uint64_t v23 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = (int *)type metadata accessor for SharedNewRecordsAlertData(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408304E8(a1, a1[3]);
  sub_24088F51C();
  uint64_t v27 = v8;
  uint64_t v12 = v29;
  sub_240955768();
  if (v12) {
    return sub_2408371B8((uint64_t)a1);
  }
  uint64_t v13 = v24;
  uint64_t v14 = v25;
  char v35 = 0;
  sub_2408938A8(&qword_268C90DB8, MEMORY[0x263F46018]);
  sub_2409554F8();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v11, v26, v4);
  char v34 = 1;
  *(void *)&v11[v9[5]] = sub_2409554E8();
  sub_2408377E0(0, (unint64_t *)&qword_26AFD0550);
  char v33 = 2;
  sub_24088BC1C(&qword_268C90D30);
  sub_2409554F8();
  *(void *)&v11[v9[6]] = v30;
  char v32 = 3;
  uint64_t v15 = sub_2409554B8();
  char v16 = (uint64_t *)&v11[v9[7]];
  *char v16 = v15;
  v16[1] = v17;
  char v31 = 4;
  sub_2408938A8(&qword_26AFCC688, MEMORY[0x263F07490]);
  sub_2409554F8();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v28);
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v11[v9[8]], v22, v14);
  sub_24088F570((uint64_t)v11, v21, type metadata accessor for SharedNewRecordsAlertData);
  sub_2408371B8((uint64_t)a1);
  return sub_24088F5D8((uint64_t)v11, type metadata accessor for SharedNewRecordsAlertData);
}

unint64_t sub_240888634()
{
  uint64_t v1 = 0x736D657469;
  if (*v0 != 1) {
    uint64_t v1 = 1702125924;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000013;
  }
}

uint64_t sub_240888688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_240890EBC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2408886B0(uint64_t a1)
{
  unint64_t v2 = sub_24088BBC8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2408886EC(uint64_t a1)
{
  unint64_t v2 = sub_24088BBC8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240888728@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2408852C4(a1, a2);
}

uint64_t sub_240888740(void *a1)
{
  return sub_240885008(a1);
}

uint64_t sub_240888758(uint64_t a1, uint64_t a2)
{
  return sub_240888E44(a1, a2, (void (*)(unsigned char *))sub_240884EB8);
}

uint64_t sub_240888774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240888EA8(a1, a2, a3, (void (*)(unsigned char *))sub_240884EB8);
}

unint64_t sub_240888790()
{
  return sub_240885BE8(*v0);
}

uint64_t sub_240888798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_240890FF8(a1, a2);
  *a3 = result;
  return result;
}

void sub_2408887C0(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_2408887CC(uint64_t a1)
{
  unint64_t v2 = sub_24089225C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240888808(uint64_t a1)
{
  unint64_t v2 = sub_24089225C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240888844@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2408861A0(a1, a2);
}

uint64_t sub_24088885C(void *a1)
{
  return sub_240885D54(a1);
}

uint64_t sub_240888874(uint64_t a1, uint64_t a2)
{
  return sub_240888E44(a1, a2, (void (*)(unsigned char *))sub_2408857EC);
}

uint64_t sub_240888890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240888EA8(a1, a2, a3, (void (*)(unsigned char *))sub_2408857EC);
}

unint64_t sub_2408888AC()
{
  return sub_240886C40(*v0);
}

uint64_t sub_2408888B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_240891460(a1, a2);
  *a3 = result;
  return result;
}

void sub_2408888DC(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_2408888E8(uint64_t a1)
{
  unint64_t v2 = sub_240891E20();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240888924(uint64_t a1)
{
  unint64_t v2 = sub_240891E20();

  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_240888960@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_240891784(a1, v7);
  if (!v2)
  {
    long long v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(void *)(a2 + 80) = v8;
    double result = *(double *)v7;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_2408889BC(void *a1)
{
  return sub_240886D4C(a1);
}

uint64_t sub_2408889D4()
{
  sub_2409556F8();
  sub_240886A38((uint64_t)v1);
  return sub_240955748();
}

uint64_t sub_240888A18()
{
  sub_2409556F8();
  sub_240886A38((uint64_t)v1);
  return sub_240955748();
}

uint64_t sub_240888A54(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v7[4] = *(_OWORD *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 80);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v9[4] = *(_OWORD *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 80);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_240886C3C(v7, v9) & 1;
}

unint64_t sub_240888AC0()
{
  unint64_t result = 0x646F436465786F62;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0x566C617574786574;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_240888B6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_240893D10(a1, a2);
  *a3 = result;
  return result;
}

void sub_240888B94(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_240888BA0(uint64_t a1)
{
  unint64_t v2 = sub_2408941A0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240888BDC(uint64_t a1)
{
  unint64_t v2 = sub_2408941A0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240888C18@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240887730(a1, a2);
}

uint64_t sub_240888C30(void *a1)
{
  return sub_240887464(a1);
}

uint64_t sub_240888C48(uint64_t a1, uint64_t a2)
{
  return sub_240888E44(a1, a2, (void (*)(unsigned char *))sub_2408870A8);
}

uint64_t sub_240888C64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240888EA8(a1, a2, a3, (void (*)(unsigned char *))sub_2408870A8);
}

uint64_t sub_240888C80()
{
  uint64_t result = 0x4379616C70736964;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x664F7265626D756ELL;
      break;
    case 2:
      uint64_t result = 0x614E64726F636572;
      break;
    case 3:
      uint64_t result = 0x4E7463656A627573;
      break;
    case 4:
      uint64_t result = 0x6164705565746164;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_240888D5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_240893EF0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_240888D84(uint64_t a1)
{
  unint64_t v2 = sub_24088F51C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240888DC0(uint64_t a1)
{
  unint64_t v2 = sub_24088F51C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240888DFC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240888088(a1, a2);
}

uint64_t sub_240888E14(void *a1)
{
  return sub_240887D70(a1);
}

uint64_t sub_240888E2C(uint64_t a1, uint64_t a2)
{
  return sub_240888E44(a1, a2, (void (*)(unsigned char *))sub_240887BE8);
}

uint64_t sub_240888E44(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *))
{
  sub_2409556F8();
  a3(v5);
  return sub_240955748();
}

uint64_t sub_240888E90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240888EA8(a1, a2, a3, (void (*)(unsigned char *))sub_240887BE8);
}

uint64_t sub_240888EA8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  sub_2409556F8();
  a4(v6);
  return sub_240955748();
}

id sub_240888EF0()
{
  return objc_msgSend(v0, sel_hasLatestSupportedVersion);
}

id sub_240888F14(char a1)
{
  return objc_msgSend(v1, sel_setHasLatestSupportedVersion_, a1 & 1);
}

id (*sub_240888F28(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = objc_msgSend(v1, sel_hasLatestSupportedVersion);
  return sub_240888F7C;
}

id sub_240888F7C(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setHasLatestSupportedVersion_, *(unsigned __int8 *)(a1 + 8));
}

id sub_240888F94()
{
  return objc_msgSend(v0, sel_latestSupportedVersion);
}

id sub_240888FA4(uint64_t a1)
{
  return objc_msgSend(v1, sel_setLatestSupportedVersion_, a1);
}

id (*sub_240888FB8(void *a1))(uint64_t a1)
{
  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_latestSupportedVersion);
  return sub_24088900C;
}

id sub_24088900C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setLatestSupportedVersion_, *(void *)a1);
}

id sub_240889020()
{
  return objc_msgSend(v0, sel_hasMinimumSupportedVersion);
}

id sub_240889044(char a1)
{
  return objc_msgSend(v1, sel_setHasMinimumSupportedVersion_, a1 & 1);
}

id (*sub_240889058(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = objc_msgSend(v1, sel_hasMinimumSupportedVersion);
  return sub_2408890AC;
}

id sub_2408890AC(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setHasMinimumSupportedVersion_, *(unsigned __int8 *)(a1 + 8));
}

id sub_2408890C4()
{
  return objc_msgSend(v0, sel_minimumSupportedVersion);
}

id sub_2408890D4(uint64_t a1)
{
  return objc_msgSend(v1, sel_setMinimumSupportedVersion_, a1);
}

id (*sub_2408890E8(void *a1))(uint64_t a1)
{
  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_minimumSupportedVersion);
  return sub_24088913C;
}

id sub_24088913C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setMinimumSupportedVersion_, *(void *)a1);
}

uint64_t *sub_240889150(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2409528B8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_240951A28();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_24088927C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_240951A28();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_240889330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_240951A28();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  return a1;
}

uint64_t sub_24088940C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_240951A28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_2408894E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_240951A28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_2408895A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_240951A28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_24088966C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240889680);
}

uint64_t sub_240889680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2409528B8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_240951A28();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_2408897AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2408897C0);
}

uint64_t sub_2408897C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_2409528B8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_240951A28();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for SharedConceptComboFeedItemData(uint64_t a1)
{
  return sub_24082A2AC(a1, (uint64_t *)&unk_268C90D78);
}

uint64_t sub_24088990C()
{
  uint64_t result = sub_2409528B8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_240951A28();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2408899E0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2409528B8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    uint64_t v9 = a3[7];
    uint64_t v10 = a3[8];
    uint64_t v11 = (uint64_t *)((char *)a1 + v9);
    uint64_t v12 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v13;
    uint64_t v14 = (char *)a1 + v10;
    uint64_t v15 = (char *)a2 + v10;
    uint64_t v16 = sub_240951A28();
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17(v14, v15, v16);
  }
  return a1;
}

uint64_t sub_240889B30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 32);
  uint64_t v6 = sub_240951A28();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_240889BF4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a3[8];
  uint64_t v10 = (void *)(a1 + v8);
  uint64_t v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = a1 + v9;
  uint64_t v14 = a2 + v9;
  uint64_t v15 = sub_240951A28();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16(v13, v14, v15);
  return a1;
}

uint64_t sub_240889CF4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[8];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_240951A28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t sub_240889E00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_240951A28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t sub_240889ED4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[7];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[8];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_240951A28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t sub_240889FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240889FD8);
}

uint64_t sub_240889FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2409528B8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_240951A28();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 32);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_24088A104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24088A118);
}

uint64_t sub_24088A118(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_2409528B8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_240951A28();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 32);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for SharedNewRecordsAlertData(uint64_t a1)
{
  return sub_24082A2AC(a1, qword_26AFCC838);
}

uint64_t sub_24088A264()
{
  uint64_t result = sub_2409528B8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_240951A28();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t destroy for SharedConceptFormattedRecord()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SharedConceptFormattedRecord(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SharedConceptFormattedRecord(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for SharedConceptFormattedRecord(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for SharedConceptFormattedRecord(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SharedConceptFormattedRecord(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SharedConceptFormattedRecord(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedConceptFormattedRecord()
{
  return &type metadata for SharedConceptFormattedRecord;
}

void *sub_24088A684(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v35 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v35 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    unint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_2409528B8();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    uint64_t v16 = (void *)((char *)v4 + v14);
    uint64_t v17 = (void *)((char *)a2 + v14);
    uint64_t v42 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v42;
    uint64_t v18 = (void *)((char *)v4 + v15);
    uint64_t v19 = (void *)((char *)a2 + v15);
    uint64_t v41 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v41;
    uint64_t v20 = a3[9];
    uint64_t v21 = a3[10];
    uint64_t v22 = (void *)((char *)v4 + v20);
    uint64_t v23 = (void *)((char *)a2 + v20);
    uint64_t v40 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v40;
    *((unsigned char *)v4 + v21) = *((unsigned char *)a2 + v21);
    uint64_t v24 = a3[11];
    uint64_t v25 = a3[12];
    uint64_t v26 = (char *)v4 + v24;
    uint64_t v27 = (char *)a2 + v24;
    uint64_t v28 = *((void *)v27 + 1);
    *(void *)uint64_t v26 = *(void *)v27;
    *((void *)v26 + 1) = v28;
    uint64_t v29 = *((void *)v27 + 3);
    *((void *)v26 + 2) = *((void *)v27 + 2);
    *((void *)v26 + 3) = v29;
    uint64_t v30 = *((void *)v27 + 5);
    *((void *)v26 + 4) = *((void *)v27 + 4);
    *((void *)v26 + 5) = v30;
    uint64_t v31 = *((void *)v27 + 7);
    *((void *)v26 + 6) = *((void *)v27 + 6);
    *((void *)v26 + 7) = v31;
    *((_OWORD *)v26 + 4) = *((_OWORD *)v27 + 4);
    *((void *)v26 + 10) = *((void *)v27 + 10);
    uint64_t v32 = a3[13];
    __dst = (char *)v4 + v32;
    uint64_t v38 = (char *)a2 + v32;
    *(void *)((char *)v4 + v25) = *(void *)((char *)a2 + v25);
    uint64_t v33 = sub_240952258();
    uint64_t v37 = *(void *)(v33 - 8);
    uint64_t v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v39(v38, 1, v33))
    {
      sub_2408925E8(0, &qword_26AFCD978, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
      memcpy(__dst, v38, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(__dst, v38, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v33);
    }
  }
  return v4;
}

uint64_t sub_24088A994(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 52);
  uint64_t v7 = sub_240952258();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

void *sub_24088AB2C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_2409528B8();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)((char *)a1 + v13);
  uint64_t v16 = (void *)((char *)a2 + v13);
  uint64_t v40 = v16[1];
  void *v15 = *v16;
  v15[1] = v40;
  uint64_t v17 = (void *)((char *)a1 + v14);
  uint64_t v18 = (void *)((char *)a2 + v14);
  uint64_t v39 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v39;
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = (void *)((char *)a1 + v19);
  uint64_t v22 = (void *)((char *)a2 + v19);
  uint64_t v38 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v38;
  *((unsigned char *)a1 + v20) = *((unsigned char *)a2 + v20);
  uint64_t v23 = a3[11];
  uint64_t v24 = a3[12];
  uint64_t v25 = (char *)a1 + v23;
  uint64_t v26 = (char *)a2 + v23;
  uint64_t v27 = *((void *)v26 + 1);
  *(void *)uint64_t v25 = *(void *)v26;
  *((void *)v25 + 1) = v27;
  uint64_t v28 = *((void *)v26 + 3);
  *((void *)v25 + 2) = *((void *)v26 + 2);
  *((void *)v25 + 3) = v28;
  uint64_t v29 = *((void *)v26 + 5);
  *((void *)v25 + 4) = *((void *)v26 + 4);
  *((void *)v25 + 5) = v29;
  uint64_t v30 = *((void *)v26 + 7);
  *((void *)v25 + 6) = *((void *)v26 + 6);
  *((void *)v25 + 7) = v30;
  *((_OWORD *)v25 + 4) = *((_OWORD *)v26 + 4);
  *((void *)v25 + 10) = *((void *)v26 + 10);
  uint64_t v31 = a3[13];
  __dst = (char *)a1 + v31;
  uint64_t v36 = (char *)a2 + v31;
  *(void *)((char *)a1 + v24) = *(void *)((char *)a2 + v24);
  uint64_t v32 = sub_240952258();
  uint64_t v35 = *(void *)(v32 - 8);
  uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v37(v36, 1, v32))
  {
    sub_2408925E8(0, &qword_26AFCD978, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
    memcpy(__dst, v36, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(__dst, v36, v32);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(__dst, 0, 1, v32);
  }
  return a1;
}

void *sub_24088ADEC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2409528B8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[9];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  uint64_t v19 = a3[11];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  *(void *)((char *)a1 + v19) = *(void *)((char *)a2 + v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20[1] = v21[1];
  void v20[2] = v21[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20[3] = v21[3];
  v20[4] = v21[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20[5] = v21[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20[6] = v21[6];
  v20[7] = v21[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20[8] = v21[8];
  v20[9] = v21[9];
  v20[10] = v21[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[13];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_240952258();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  LODWORD(v20) = v27(v23, 1, v25);
  int v28 = v27(v24, 1, v25);
  if (!v20)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_6;
  }
  if (v28)
  {
LABEL_6:
    sub_2408925E8(0, &qword_26AFCD978, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
    memcpy(v23, v24, *(void *)(*(void *)(v29 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  return a1;
}

_OWORD *sub_24088B188(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_2409528B8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  uint64_t v12 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
  uint64_t v13 = a3[11];
  uint64_t v14 = a3[12];
  uint64_t v15 = (char *)a1 + v13;
  uint64_t v16 = (char *)a2 + v13;
  *((void *)v15 + 10) = *((void *)v16 + 10);
  long long v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  long long v18 = *((_OWORD *)v16 + 4);
  long long v20 = *((_OWORD *)v16 + 2);
  long long v19 = *((_OWORD *)v16 + 3);
  uint64_t v21 = a3[13];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  *((_OWORD *)v15 + 3) = v19;
  *((_OWORD *)v15 + 4) = v18;
  *((_OWORD *)v15 + 2) = v20;
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
  uint64_t v24 = sub_240952258();
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    sub_2408925E8(0, &qword_26AFCD978, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  return a1;
}

void *sub_24088B374(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_2409528B8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  long long v18 = (void *)((char *)a1 + v17);
  long long v19 = (void *)((char *)a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *long long v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[9];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  int v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = (void *)((char *)a2 + v27);
  *(void *)((char *)a1 + v27) = *(void *)((char *)a2 + v27);
  swift_bridgeObjectRelease();
  uint64_t v30 = v29[2];
  v28[1] = v29[1];
  void v28[2] = v30;
  swift_bridgeObjectRelease();
  uint64_t v31 = v29[4];
  void v28[3] = v29[3];
  v28[4] = v31;
  swift_bridgeObjectRelease();
  void v28[5] = v29[5];
  swift_bridgeObjectRelease();
  uint64_t v32 = v29[7];
  v28[6] = v29[6];
  v28[7] = v32;
  swift_bridgeObjectRelease();
  v28[8] = v29[8];
  uint64_t v33 = v29[10];
  v28[9] = v29[9];
  v28[10] = v33;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[13];
  uint64_t v35 = (char *)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = sub_240952258();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
  LODWORD(v29) = v39(v35, 1, v37);
  int v40 = v39(v36, 1, v37);
  if (!v29)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 40))(v35, v36, v37);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v37);
    goto LABEL_6;
  }
  if (v40)
  {
LABEL_6:
    sub_2408925E8(0, &qword_26AFCD978, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
    memcpy(v35, v36, *(void *)(*(void *)(v41 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  return a1;
}

uint64_t sub_24088B664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24088B678);
}

uint64_t sub_24088B678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_2409528B8();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_2408925E8(0, &qword_26AFCD978, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 52);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_24088B7D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24088B7E8);
}

uint64_t sub_24088B7E8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_2409528B8();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_2408925E8(0, &qword_26AFCD978, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 52);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for SharedConceptFeedItemData(uint64_t a1)
{
  return sub_24082A2AC(a1, qword_26AFCCF28);
}

void sub_24088B964()
{
  sub_2409528B8();
  if (v0 <= 0x3F)
  {
    sub_2408925E8(319, &qword_26AFCD978, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_24088BA98()
{
  return sub_2408938A8(&qword_268C90D88, (void (*)(uint64_t))type metadata accessor for SharedConceptFeedItemData);
}

unint64_t sub_24088BAE4()
{
  unint64_t result = qword_268C90D90;
  if (!qword_268C90D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90D90);
  }
  return result;
}

uint64_t sub_24088BB38()
{
  return sub_2408938A8(&qword_268C90D98, (void (*)(uint64_t))type metadata accessor for SharedNewRecordsAlertData);
}

uint64_t sub_24088BB80()
{
  return sub_2408938A8(&qword_268C90DA0, (void (*)(uint64_t))type metadata accessor for SharedConceptComboFeedItemData);
}

unint64_t sub_24088BBC8()
{
  unint64_t result = qword_268C90DB0;
  if (!qword_268C90DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90DB0);
  }
  return result;
}

uint64_t sub_24088BC1C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2408377E0(255, (unint64_t *)&qword_26AFD0550);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_24088BC8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v35 = a1;
  uint64_t v9 = sub_240951A98();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t v39 = MEMORY[0x263F8EE78];
  if ((uint64_t)objc_msgSend(v5, sel_valueWithRangesCount) >= 1)
  {
    id result = objc_msgSend(v5, sel_valueWithRanges);
    if (!result)
    {
      __break(1u);
      goto LABEL_16;
    }
    uint64_t v15 = result;
    uint64_t v16 = (void *)MEMORY[0x270FA5388](result);
    *(&v35 - 2) = (uint64_t)v6;
    unint64_t v17 = sub_240890360(v16, (void (*)(_OWORD *))sub_2408925E0, (uint64_t)(&v35 - 4));

    sub_2408FEEF4(v17);
  }
  uint64_t v38 = v13;
  if ((uint64_t)objc_msgSend(v6, sel_codesCount, v35, v36) < 1) {
    goto LABEL_7;
  }
  id result = objc_msgSend(v6, sel_codes);
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  long long v18 = result;
  unint64_t v19 = sub_24089074C(result);

  sub_2408FED24(v19);
LABEL_7:
  if (!objc_msgSend(v6, sel_hasUcumUnitString))
  {
    uint64_t v21 = 0;
    unint64_t v23 = 0xE000000000000000;
    goto LABEL_11;
  }
  id result = objc_msgSend(v6, sel_ucumUnitString);
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v20 = result;
  uint64_t v21 = sub_2409547C8();
  unint64_t v23 = v22;

LABEL_11:
  sub_240951A88();
  uint64_t v24 = sub_240951A48();
  uint64_t v26 = v25;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (!objc_msgSend(v6, sel_hasRecordUUID))
  {
LABEL_14:
    uint64_t v29 = v38;
    uint64_t v30 = v39;
    swift_bridgeObjectRetain();
    uint64_t v31 = v37;
    swift_bridgeObjectRetain();
    id result = objc_msgSend(v6, sel_dateData);
    uint64_t v32 = v35;
    *a5 = v29;
    a5[1] = v32;
    uint64_t v33 = v36;
    a5[2] = a2;
    a5[3] = v33;
    a5[4] = v31;
    a5[5] = v30;
    a5[6] = v21;
    a5[7] = v23;
    a5[8] = v34;
    a5[9] = v24;
    a5[10] = v26;
    return result;
  }
  swift_bridgeObjectRelease();
  id result = objc_msgSend(v6, sel_recordUUID);
  if (result)
  {
    uint64_t v27 = result;
    uint64_t v24 = sub_2409547C8();
    uint64_t v26 = v28;

    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

id sub_24088BF74@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_240851D44();
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v36 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v36 - v11;
  sub_2408373C4(a1, (uint64_t)v38);
  sub_24083EDCC(0, &qword_268C90F40);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v26 = type metadata accessor for SharedConceptCodedValue(0);
    return (id)(*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(a2, 1, 1, v26);
  }
  id v13 = v37;
  v38[0] = MEMORY[0x263F8EE78];
  if ((uint64_t)objc_msgSend(v37, sel_codesCount) >= 1)
  {
    id result = objc_msgSend(v13, sel_codes);
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v15 = result;
    unint64_t v16 = sub_24089074C(result);

    sub_2408FED24(v16);
  }
  sub_24082EF28(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
  uint64_t v18 = v17;
  unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  v19(v12, 1, 1, v17);
  sub_24088C36C();
  if (v20)
  {
    sub_24083EDCC(0, (unint64_t *)&qword_26AFCDF30);
    sub_240954688();
    sub_24088F5D8((uint64_t)v12, (uint64_t (*)(void))sub_240851D44);
    v19(v10, 0, 1, v18);
    sub_24089264C((uint64_t)v10, (uint64_t)v12, (uint64_t (*)(void))sub_240851D44);
  }
  if (objc_msgSend(v13, sel_hasValueTitle)
    && (id v21 = objc_msgSend(v13, sel_valueTitle)) != 0)
  {
    unint64_t v22 = v21;
    uint64_t v23 = sub_2409547C8();
    uint64_t v25 = v24;
  }
  else
  {
    uint64_t v23 = 0;
    uint64_t v25 = 0;
  }
  uint64_t v27 = v38[0];
  sub_24088F570((uint64_t)v12, (uint64_t)v7, (uint64_t (*)(void))sub_240851D44);
  id v28 = objc_msgSend(v13, sel_textualValue);
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v30 = sub_2409547C8();
    uint64_t v32 = v31;
  }
  else
  {

    uint64_t v30 = 0;
    uint64_t v32 = 0;
  }
  sub_24088F5D8((uint64_t)v12, (uint64_t (*)(void))sub_240851D44);
  *a2 = v27;
  uint64_t v33 = (int *)type metadata accessor for SharedConceptCodedValue(0);
  sub_24089264C((uint64_t)v7, (uint64_t)a2 + v33[5], (uint64_t (*)(void))sub_240851D44);
  uint64_t v34 = (void *)((char *)a2 + v33[6]);
  *uint64_t v34 = v23;
  v34[1] = v25;
  uint64_t v35 = (void *)((char *)a2 + v33[7]);
  *uint64_t v35 = v30;
  v35[1] = v32;
  return (id)(*(uint64_t (**)(void *, void, uint64_t, int *))(*((void *)v33 - 1) + 56))(a2, 0, 1, v33);
}

void sub_24088C36C()
{
  if (!objc_msgSend(v0, sel_hasQuantityValue)) {
    return;
  }
  id v3 = objc_msgSend(self, sel_UCUMSystem);
  id v4 = objc_msgSend(v0, sel_quantityValue);
  if (!v4)
  {
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v5 = v4;
  uint64_t v6 = &off_2650D8000;
  id v1 = objc_msgSend(v4, sel_unitString);

  if (v1)
  {
    sub_2409547C8();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v8 = 0;
  }
  id v9 = objc_msgSend(v0, sel_quantityValue);
  if (!v9) {
    goto LABEL_31;
  }
  uint64_t v10 = v9;
  id v11 = objc_msgSend(v9, sel_unitString);

  if (v11)
  {
    sub_2409547C8();
    uint64_t v13 = v12;
  }
  else
  {
    uint64_t v13 = 0;
  }
  id v1 = (id)sub_240954788();
  if (v8)
  {
    uint64_t v14 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
    if (v13)
    {
LABEL_13:
      id v2 = (id)sub_240954788();
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v14 = 0;
    if (v13) {
      goto LABEL_13;
    }
  }
  id v2 = 0;
LABEL_16:
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A4A0]), sel_initWithCodingSystem_codingVersion_code_displayString_, v3, v1, v14, v2);

  id v16 = objc_msgSend(v0, sel_quantityValue);
  if (!v16)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v17 = v16;
  objc_msgSend(v16, sel_value);

  sub_240954AE8();
  id v18 = v15;
  unint64_t v19 = (void *)sub_240954788();
  swift_bridgeObjectRelease();
  uint64_t v20 = self;
  id v21 = objc_msgSend(v20, sel_codedQuantityWithValue_unitCoding_, v19, v18);

  unint64_t v22 = self;
  id v23 = objc_msgSend(v22, sel_inspectableValueWithCodedQuantity_, v21);

  id v24 = objc_msgSend(self, sel_inspectableValueCollectionSingleWithValue_, v23);
  if (objc_msgSend(v0, sel_hasReferenceRangeMin))
  {
    id v25 = objc_msgSend(v0, sel_referenceRangeMin);
    if (!v25)
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    uint64_t v26 = v25;
    objc_msgSend(v25, sel_value);

    sub_240954AE8();
    id v27 = v18;
    id v28 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
    id v29 = objc_msgSend(v20, sel_codedQuantityWithValue_unitCoding_, v28, v27);

    id v2 = objc_msgSend(v22, sel_inspectableValueWithCodedQuantity_, v29);
    uint64_t v6 = &off_2650D8000;
  }
  else
  {
    id v2 = 0;
  }
  if (objc_msgSend(v0, sel_hasReferenceRangeMax))
  {
    id v40 = v23;
    uint64_t v30 = v6;
    id v31 = objc_msgSend(v0, sel_referenceRangeMax);
    if (!v31)
    {
LABEL_35:

      __break(1u);
      return;
    }
    uint64_t v32 = v31;
    objc_msgSend(v31, sel_value);

    sub_240954AE8();
    id v33 = v18;
    uint64_t v34 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
    id v35 = objc_msgSend(v20, sel_codedQuantityWithValue_unitCoding_, v34, v33);

    id v1 = objc_msgSend(v22, sel_inspectableValueWithCodedQuantity_, v35);
    uint64_t v6 = v30;
    id v23 = v40;
  }
  else
  {
    id v1 = 0;
  }
  id v36 = objc_msgSend(v0, sel_quantityValue);
  if (!v36)
  {
LABEL_33:

    __break(1u);
    goto LABEL_34;
  }
  id v37 = v36;
  id v38 = [v36 (SEL)v6[417]];

  if (v38)
  {
    sub_2409547C8();

    uint64_t v39 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v39 = 0;
  }
  objc_msgSend(self, sel_valueInRangeWithLow_high_currentValue_unit_, v2, v1, v24, v39);
}

id sub_24088C910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2408373C4(a1, (uint64_t)v35);
  sub_24083EDCC(0, &qword_268C90F50);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_24082EF28(0, (unint64_t *)&qword_268C90E10, &qword_268C90E18);
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a2, 1, 1, v12);
  }
  id v3 = v36;
  if (objc_msgSend(v36, sel_hasSystem))
  {
    id result = objc_msgSend(v3, sel_system);
    if (!result)
    {
      __break(1u);
      goto LABEL_25;
    }
    uint64_t v5 = result;
    uint64_t v6 = sub_2409547C8();
    unint64_t v8 = v7;

    swift_bridgeObjectRelease();
    uint64_t v9 = HIBYTE(v8) & 0xF;
    if ((v8 & 0x2000000000000000) == 0) {
      uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
    }
    if (v9)
    {
      id result = objc_msgSend(v3, sel_system);
      if (result)
      {
        uint64_t v10 = result;
        id v11 = objc_msgSend(self, sel_codeSystemWithIdentifier_, result);

        goto LABEL_11;
      }
LABEL_25:
      __break(1u);
      return result;
    }
  }
  id v11 = 0;
LABEL_11:
  if (objc_msgSend(v3, sel_hasVersion)
    && (id v13 = objc_msgSend(v3, sel_version)) != 0)
  {
    uint64_t v14 = v13;
    uint64_t v15 = sub_2409547C8();
    uint64_t v30 = v16;
    uint64_t v32 = v15;
  }
  else
  {
    uint64_t v30 = 0;
    uint64_t v32 = 0;
  }
  uint64_t v34 = a2;
  if (objc_msgSend(v3, sel_hasCode, v30, v32)
    && (id v17 = objc_msgSend(v3, sel_code)) != 0)
  {
    id v18 = v17;
    uint64_t v19 = sub_2409547C8();
    uint64_t v21 = v20;
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v21 = 0;
  }
  if (objc_msgSend(v3, sel_hasDisplayName)
    && (id v22 = objc_msgSend(v3, sel_displayName)) != 0)
  {
    id v23 = v22;
    uint64_t v24 = sub_2409547C8();
    uint64_t v26 = v25;
  }
  else
  {
    uint64_t v24 = 0;
    uint64_t v26 = 0;
  }
  id v27 = objc_allocWithZone(MEMORY[0x263F0A4A0]);
  id v28 = v11;
  sub_24088E904(v11, v33, v31, v19, v21, v24, v26);
  sub_24083EDCC(0, &qword_268C90E18);
  sub_240954688();

  sub_24082EF28(0, (unint64_t *)&qword_268C90E10, &qword_268C90E18);
  return (id)(*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v34, 0, 1, v29);
}

uint64_t sub_24088CC6C(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = sub_240955618(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (uint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_240955618() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_24088CD34(uint64_t a1, uint64_t a2)
{
  sub_24082EF28(0, (unint64_t *)&qword_268C90E10, &qword_268C90E18);
  uint64_t v5 = v4;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v23 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
      uint64_t v13 = v7 + 16;
      uint64_t v31 = v8;
      uint64_t v32 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v33 = v13;
      uint64_t v29 = v15;
      uint64_t v30 = (void (**)(char *, uint64_t))(v13 - 8);
      uint64_t v16 = v11 - 1;
      id v17 = v8;
      do
      {
        uint64_t v18 = a1;
        uint64_t v19 = v10;
        uint64_t v20 = v10;
        uint64_t v21 = v32;
        v32(v19, a1 + v12, v5);
        uint64_t v22 = a2;
        v21(v17, a2 + v12, v5);
        uint64_t v10 = v20;
        sub_2408921B0(&qword_268C90E98, &qword_268C90EA0);
        char v23 = sub_240954778();
        uint64_t v24 = *v30;
        (*v30)(v17, v5);
        v24(v20, v5);
        BOOL v26 = v16-- != 0;
        if ((v23 & 1) == 0) {
          break;
        }
        v12 += v29;
        a2 = v22;
        a1 = v18;
      }
      while (v26);
    }
  }
  else
  {
    char v23 = 0;
  }
  return v23 & 1;
}

uint64_t sub_24088CF74(uint64_t a1, uint64_t a2)
{
  uint64_t v89 = a1;
  sub_24082EF28(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
  uint64_t v4 = v3;
  uint64_t v87 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v69 - v5;
  sub_240851D44();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24089214C();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24082EF28(0, (unint64_t *)&qword_268C90E10, &qword_268C90E18);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v69 - v20;
  uint64_t v22 = type metadata accessor for SharedConceptCodedValue(0);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v29 = *(void *)(v26 + 16);
  if (v29 == *(void *)(a2 + 16))
  {
    uint64_t v85 = (uint64_t *)((char *)&v69 - v27);
    uint64_t v86 = v28;
    uint64_t v90 = v19;
    char v91 = v21;
    uint64_t v83 = v16;
    if (!v29 || v26 == a2) {
      return 1;
    }
    uint64_t v84 = (int *)v24;
    uint64_t v76 = v11;
    unint64_t v77 = v13;
    unint64_t v73 = v9;
    unint64_t v71 = v6;
    uint64_t v30 = 0;
    unint64_t v31 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    uint64_t v80 = a2 + v31;
    uint64_t v81 = v26 + v31;
    uint64_t v32 = *(void *)(v25 + 72);
    uint64_t v78 = v4;
    uint64_t v79 = v32;
    uint64_t v88 = (void (**)(char *, uint64_t))(v83 + 8);
    uint64_t v89 = v83 + 16;
    uint64_t v75 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48);
    uint64_t v70 = (void (**)(char *, uint64_t, uint64_t))(v87 + 32);
    uint64_t v72 = (void (**)(uint64_t, uint64_t))(v87 + 8);
    uint64_t v34 = v85;
    uint64_t v33 = v86;
    id v35 = v91;
    uint64_t v74 = v29;
    while (1)
    {
      uint64_t v82 = v30;
      uint64_t v37 = v79 * v30;
      sub_24088F570(v81 + v37, (uint64_t)v34, type metadata accessor for SharedConceptCodedValue);
      uint64_t v38 = v80 + v37;
      uint64_t v39 = v83;
      sub_24088F570(v38, v33, type metadata accessor for SharedConceptCodedValue);
      uint64_t v40 = *v34;
      uint64_t v41 = *(void *)v33;
      uint64_t v42 = *(void *)(v40 + 16);
      if (v42 != *(void *)(*(void *)v33 + 16)) {
        break;
      }
      if (v42 && v40 != v41)
      {
        unint64_t v43 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
        uint64_t v87 = *(void *)(v39 + 72);
        uint64_t v44 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 16);
        do
        {
          v44(v35, v40 + v43, v15);
          uint64_t v45 = v90;
          v44(v90, v41 + v43, v15);
          sub_2408921B0(&qword_268C90E98, &qword_268C90EA0);
          char v46 = sub_240954778();
          uint64_t v47 = *v88;
          uint64_t v48 = v45;
          id v35 = v91;
          (*v88)(v48, v15);
          v47(v35, v15);
          if ((v46 & 1) == 0) {
            goto LABEL_34;
          }
          v43 += v87;
        }
        while (--v42);
      }
      uint64_t v49 = v84[5];
      uint64_t v50 = v86 + v49;
      uint64_t v51 = (uint64_t)v77;
      uint64_t v52 = (uint64_t)&v77[*(int *)(v76 + 48)];
      sub_24088F570((uint64_t)v85 + v49, (uint64_t)v77, (uint64_t (*)(void))sub_240851D44);
      sub_24088F570(v50, v52, (uint64_t (*)(void))sub_240851D44);
      uint64_t v53 = *v75;
      uint64_t v54 = v78;
      if ((*v75)(v51, 1, v78) == 1)
      {
        if (v53(v52, 1, v54) != 1) {
          goto LABEL_33;
        }
        sub_24088F5D8(v51, (uint64_t (*)(void))sub_240851D44);
      }
      else
      {
        uint64_t v55 = (uint64_t)v73;
        sub_24088F570(v51, (uint64_t)v73, (uint64_t (*)(void))sub_240851D44);
        if (v53(v52, 1, v54) == 1)
        {
          (*v72)(v55, v54);
LABEL_33:
          sub_24088F5D8(v51, (uint64_t (*)(void))sub_24089214C);
          break;
        }
        uint64_t v56 = v71;
        (*v70)(v71, v52, v54);
        sub_2408920A0((unint64_t *)&qword_268C90EA8, &qword_268C90EB0);
        char v57 = sub_240954778();
        uint64_t v58 = *v72;
        (*v72)((uint64_t)v56, v54);
        v58(v55, v54);
        sub_24088F5D8(v51, (uint64_t (*)(void))sub_240851D44);
        if ((v57 & 1) == 0) {
          break;
        }
      }
      uint64_t v59 = v84[6];
      uint64_t v60 = (uint64_t *)((char *)v85 + v59);
      uint64_t v61 = *(uint64_t *)((char *)v85 + v59 + 8);
      id v62 = (void *)(v86 + v59);
      uint64_t v63 = v62[1];
      if (v61)
      {
        if (!v63 || (*v60 != *v62 || v61 != v63) && (sub_240955618() & 1) == 0) {
          break;
        }
      }
      else if (v63)
      {
        break;
      }
      uint64_t v64 = v84[7];
      uint64_t v65 = (uint64_t *)((char *)v85 + v64);
      uint64_t v66 = *(uint64_t *)((char *)v85 + v64 + 8);
      uint64_t v67 = (void *)(v86 + v64);
      uint64_t v68 = v67[1];
      if (v66)
      {
        if (!v68 || (*v65 != *v67 || v66 != v68) && (sub_240955618() & 1) == 0) {
          break;
        }
      }
      else if (v68)
      {
        break;
      }
      uint64_t v30 = v82 + 1;
      uint64_t v33 = v86;
      sub_24088F5D8(v86, type metadata accessor for SharedConceptCodedValue);
      uint64_t v34 = v85;
      sub_24088F5D8((uint64_t)v85, type metadata accessor for SharedConceptCodedValue);
      uint64_t result = 1;
      if (v30 == v74) {
        return result;
      }
    }
LABEL_34:
    sub_24088F5D8(v86, type metadata accessor for SharedConceptCodedValue);
    sub_24088F5D8((uint64_t)v85, type metadata accessor for SharedConceptCodedValue);
  }
  return 0;
}

uint64_t sub_24088D74C(uint64_t a1, uint64_t a2)
{
  sub_24082EF28(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v92 - v7;
  sub_240851D44();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24089214C();
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = (int *)type metadata accessor for SharedConceptCodedValue(0);
  uint64_t v120 = *((void *)v127 - 1);
  uint64_t v16 = MEMORY[0x270FA5388](v127);
  uint64_t v130 = (uint64_t *)((char *)&v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v92 - v18;
  sub_24082EF28(0, (unint64_t *)&qword_268C90E10, &qword_268C90E18);
  uint64_t v21 = v20;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v135 = (char *)&v92 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  unint64_t v136 = (char *)&v92 - v25;
  uint64_t v26 = *(void *)(a1 + 16);
  if (v26 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v26 || a1 == a2) {
    return 1;
  }
  unint64_t v94 = v8;
  uint64_t v27 = 0;
  uint64_t v28 = a1 + 32;
  uint64_t v29 = a2 + 32;
  uint64_t v106 = v24;
  uint64_t v133 = (void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v102 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  uint64_t v93 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
  uint64_t v95 = (void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v134 = v24 + 16;
  uint64_t v105 = v5;
  id v96 = v11;
  uint64_t v104 = v15;
  uint64_t v103 = v13;
  id v126 = (uint64_t *)v19;
  uint64_t v99 = v26;
  uint64_t v98 = a1 + 32;
  uint64_t v97 = a2 + 32;
  while (1)
  {
    uint64_t v30 = (double *)(v28 + 88 * v27);
    uint64_t v31 = *(void *)v30;
    uint64_t v32 = (double *)(v29 + 88 * v27);
    uint64_t v33 = *(void *)v32;
    uint64_t v34 = *(void *)(*(void *)v30 + 16);
    if (v34 != *(void *)(*(void *)v32 + 16)) {
      return 0;
    }
    uint64_t v107 = v27;
    uint64_t v128 = *((void *)v30 + 1);
    uint64_t v125 = *((void *)v30 + 2);
    uint64_t v113 = *((void *)v30 + 3);
    uint64_t v35 = *((void *)v30 + 5);
    uint64_t v124 = *((void *)v30 + 4);
    uint64_t v111 = *((void *)v30 + 6);
    uint64_t v121 = *((void *)v30 + 7);
    double v36 = v30[8];
    uint64_t v37 = *((void *)v30 + 10);
    uint64_t v109 = *((void *)v30 + 9);
    unint64_t v114 = *((void *)v32 + 1);
    uint64_t v123 = *((void *)v32 + 2);
    uint64_t v38 = *((void *)v32 + 4);
    uint64_t v112 = *((void *)v32 + 3);
    uint64_t v39 = *((void *)v32 + 5);
    uint64_t v110 = *((void *)v32 + 6);
    uint64_t v122 = *((void *)v32 + 7);
    double v40 = v32[8];
    uint64_t v42 = *((void *)v32 + 9);
    uint64_t v41 = *((void *)v32 + 10);
    uint64_t v108 = v42;
    uint64_t v118 = v38;
    uint64_t v119 = v41;
    uint64_t v117 = v39;
    uint64_t v116 = v35;
    uint64_t v43 = v33;
    uint64_t v132 = v31;
    uint64_t v115 = v37;
    if (v34 && v31 != v33)
    {
      uint64_t v131 = v34;
      unint64_t v44 = (*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80);
      uint64_t v129 = *(void *)(v106 + 72);
      uint64_t v45 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v106 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v46 = 0;
      while (1)
      {
        uint64_t v47 = v136;
        uint64_t result = v45(v136, v132 + v44, v21);
        if (v46 >= *(void *)(v43 + 16)) {
          break;
        }
        uint64_t v49 = v135;
        v45(v135, v43 + v44, v21);
        sub_2408921B0(&qword_268C90E98, &qword_268C90EA0);
        uint64_t v50 = v47;
        char v51 = sub_240954778();
        uint64_t v52 = *v133;
        (*v133)(v49, v21);
        v52(v50, v21);
        if ((v51 & 1) == 0) {
          goto LABEL_63;
        }
        ++v46;
        v44 += v129;
        if (v131 == v46) {
          goto LABEL_14;
        }
      }
      __break(1u);
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_14:
    if ((v128 != v114 || v125 != v123) && (sub_240955618() & 1) == 0) {
      break;
    }
    uint64_t v53 = v117;
    uint64_t v54 = v116;
    if ((v113 != v112 || v124 != v118) && (sub_240955618() & 1) == 0) {
      break;
    }
    uint64_t v55 = *(void *)(v54 + 16);
    if (v55 != *(void *)(v53 + 16)) {
      break;
    }
    uint64_t v56 = v126;
    if (v55 && v54 != v53)
    {
      unint64_t v57 = 0;
      unint64_t v58 = (*(unsigned __int8 *)(v120 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80);
      uint64_t v113 = v54 + v58;
      uint64_t v101 = v53 + v58;
      uint64_t v112 = *(void *)(v120 + 72);
      uint64_t v100 = v43;
      uint64_t v92 = v55;
      while (1)
      {
        uint64_t v59 = v112 * v57;
        uint64_t result = sub_24088F570(v113 + v112 * v57, (uint64_t)v56, type metadata accessor for SharedConceptCodedValue);
        if (v57 >= *(void *)(v53 + 16)) {
          break;
        }
        unint64_t v114 = v57;
        uint64_t v60 = v130;
        sub_24088F570(v101 + v59, (uint64_t)v130, type metadata accessor for SharedConceptCodedValue);
        uint64_t v61 = *v56;
        uint64_t v62 = *v60;
        uint64_t v129 = v61;
        uint64_t v63 = *(void *)(v61 + 16);
        uint64_t v64 = *(void *)(v62 + 16);
        uint64_t v131 = v63;
        if (v63 != v64) {
          goto LABEL_68;
        }
        if (v131 && v129 != v62)
        {
          unint64_t v65 = 0;
          unint64_t v66 = (*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80);
          uint64_t v128 = *(void *)(v106 + 72);
          uint64_t v67 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v106 + 16);
          do
          {
            uint64_t v68 = v136;
            uint64_t result = v67(v136, v129 + v66, v21);
            if (v65 >= *(void *)(v62 + 16)) {
              goto LABEL_72;
            }
            uint64_t v69 = v135;
            v67(v135, v62 + v66, v21);
            sub_2408921B0(&qword_268C90E98, &qword_268C90EA0);
            char v70 = sub_240954778();
            unint64_t v71 = *v133;
            (*v133)(v69, v21);
            v71(v68, v21);
            if ((v70 & 1) == 0) {
              goto LABEL_68;
            }
            ++v65;
            v66 += v128;
          }
          while (v131 != v65);
        }
        uint64_t v72 = v127[5];
        uint64_t v73 = (uint64_t)v130 + v72;
        uint64_t v74 = (uint64_t)v104;
        uint64_t v75 = (uint64_t)&v104[*(int *)(v103 + 48)];
        sub_24088F570((uint64_t)v126 + v72, (uint64_t)v104, (uint64_t (*)(void))sub_240851D44);
        sub_24088F570(v73, v75, (uint64_t (*)(void))sub_240851D44);
        uint64_t v76 = *v102;
        uint64_t v77 = v105;
        if ((*v102)(v74, 1, v105) == 1)
        {
          if (v76(v75, 1, v77) != 1) {
            goto LABEL_67;
          }
          sub_24088F5D8(v74, (uint64_t (*)(void))sub_240851D44);
        }
        else
        {
          uint64_t v78 = (uint64_t)v96;
          sub_24088F570(v74, (uint64_t)v96, (uint64_t (*)(void))sub_240851D44);
          if (v76(v75, 1, v77) == 1)
          {
            (*v95)(v78, v77);
LABEL_67:
            sub_24088F5D8(v74, (uint64_t (*)(void))sub_24089214C);
LABEL_68:
            sub_24088F5D8((uint64_t)v130, type metadata accessor for SharedConceptCodedValue);
            sub_24088F5D8((uint64_t)v126, type metadata accessor for SharedConceptCodedValue);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_69;
          }
          uint64_t v79 = v94;
          (*v93)(v94, v75, v77);
          sub_2408920A0((unint64_t *)&qword_268C90EA8, &qword_268C90EB0);
          char v80 = sub_240954778();
          uint64_t v81 = *v95;
          (*v95)((uint64_t)v79, v77);
          v81(v78, v77);
          sub_24088F5D8(v74, (uint64_t (*)(void))sub_240851D44);
          if ((v80 & 1) == 0) {
            goto LABEL_68;
          }
        }
        uint64_t v82 = v127[6];
        uint64_t v83 = (uint64_t *)((char *)v126 + v82);
        uint64_t v84 = *(uint64_t *)((char *)v126 + v82 + 8);
        uint64_t v85 = (uint64_t *)((char *)v130 + v82);
        uint64_t v86 = v85[1];
        if (v84)
        {
          if (!v86 || (*v83 != *v85 || v84 != v86) && (sub_240955618() & 1) == 0) {
            goto LABEL_68;
          }
        }
        else if (v86)
        {
          goto LABEL_68;
        }
        uint64_t v87 = v127[7];
        uint64_t v88 = (uint64_t *)((char *)v126 + v87);
        uint64_t v89 = *(uint64_t *)((char *)v126 + v87 + 8);
        uint64_t v90 = (uint64_t *)((char *)v130 + v87);
        uint64_t v91 = v90[1];
        if (v89)
        {
          if (!v91 || (*v88 != *v90 || v89 != v91) && (sub_240955618() & 1) == 0) {
            goto LABEL_68;
          }
        }
        else if (v91)
        {
          goto LABEL_68;
        }
        unint64_t v57 = v114 + 1;
        sub_24088F5D8((uint64_t)v130, type metadata accessor for SharedConceptCodedValue);
        uint64_t v56 = v126;
        sub_24088F5D8((uint64_t)v126, type metadata accessor for SharedConceptCodedValue);
        uint64_t v53 = v117;
        if (v57 == v92) {
          goto LABEL_52;
        }
      }
LABEL_73:
      __break(1u);
      return result;
    }
LABEL_52:
    if ((v111 != v110 || v121 != v122) && (sub_240955618() & 1) == 0 || v36 != v40) {
      break;
    }
    if (v109 == v108 && v115 == v119)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      LODWORD(v131) = sub_240955618();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v131 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v27 = v107 + 1;
    uint64_t result = 1;
    uint64_t v28 = v98;
    uint64_t v29 = v97;
    if (v107 + 1 == v99) {
      return result;
    }
  }
LABEL_63:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_69:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24088E6E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2409525E8();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10 == *(void *)(a2 + 16))
  {
    if (!v10 || a1 == a2)
    {
      char v23 = 1;
    }
    else
    {
      uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
      uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      uint64_t v12 = v6 + 16;
      uint64_t v31 = v7;
      uint64_t v32 = v13;
      uint64_t v14 = (v11 + 32) & ~v11;
      uint64_t v15 = *(void *)(v12 + 56);
      uint64_t v33 = v12;
      uint64_t v29 = v15;
      uint64_t v30 = (void (**)(uint64_t, uint64_t))(v12 - 8);
      uint64_t v16 = v10 - 1;
      uint64_t v17 = v7;
      do
      {
        uint64_t v18 = a1;
        uint64_t v19 = v9;
        uint64_t v20 = v9;
        uint64_t v21 = v32;
        v32((uint64_t)v19, a1 + v14, v4);
        uint64_t v22 = a2;
        v21(v17, a2 + v14, v4);
        uint64_t v9 = v20;
        sub_2408938A8(&qword_268C90F20, MEMORY[0x263F45EC8]);
        char v23 = sub_240954778();
        uint64_t v24 = *v30;
        (*v30)(v17, v4);
        v24((uint64_t)v20, v4);
        BOOL v26 = v16-- != 0;
        if ((v23 & 1) == 0) {
          break;
        }
        v14 += v29;
        a2 = v22;
        a1 = v18;
      }
      while (v26);
    }
  }
  else
  {
    char v23 = 0;
  }
  return v23 & 1;
}

id sub_24088E904(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a3)
  {
    uint64_t v11 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
    if (a5) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v12 = 0;
    if (a7) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v13 = 0;
    goto LABEL_8;
  }
  uint64_t v11 = 0;
  if (!a5) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v12 = (void *)sub_240954788();
  swift_bridgeObjectRelease();
  if (!a7) {
    goto LABEL_7;
  }
LABEL_4:
  uint64_t v13 = (void *)sub_240954788();
  swift_bridgeObjectRelease();
LABEL_8:
  id v14 = objc_msgSend(v7, sel_initWithCodingSystem_codingVersion_code_displayString_, a1, v11, v12, v13);

  return v14;
}

uint64_t sub_24088E9F4(uint64_t a1, uint64_t a2)
{
  sub_24082EF28(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
  uint64_t v39 = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v31 = (char *)&v28 - v5;
  sub_240851D44();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v38 = (uint64_t)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24082EF28(0, (unint64_t *)&qword_268C90E10, &qword_268C90E18);
  uint64_t v9 = v8;
  uint64_t v32 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v28 - v10;
  uint64_t v37 = type metadata accessor for SharedConceptCodedValue(0);
  uint64_t v12 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  id v14 = (uint64_t *)((char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void *)(a2 + 16);
  uint64_t result = sub_240955708();
  uint64_t v36 = v15;
  if (v15)
  {
    uint64_t v17 = 0;
    uint64_t v35 = a2 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v18 = *(void *)(v12 + 72);
    uint64_t v19 = (void (**)(char *, uint64_t))(v32 + 8);
    uint64_t v33 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    uint64_t v34 = v18;
    uint64_t v29 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v30 = (void (**)(char *, uint64_t, uint64_t))(v4 + 32);
    uint64_t v41 = v14;
    do
    {
      uint64_t v42 = v17;
      sub_24088F570(v35 + v34 * v17, (uint64_t)v14, type metadata accessor for SharedConceptCodedValue);
      uint64_t v20 = *v14;
      sub_240955708();
      uint64_t v21 = *(void *)(v20 + 16);
      if (v21)
      {
        uint64_t v22 = v20 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
        uint64_t v43 = *(void *)(v32 + 72);
        char v23 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 16);
        uint64_t v40 = v20;
        swift_bridgeObjectRetain();
        do
        {
          v23(v11, v22, v9);
          sub_2408921B0(&qword_268C90E70, &qword_268C90E78);
          sub_240954708();
          (*v19)(v11, v9);
          v22 += v43;
          --v21;
        }
        while (v21);
        swift_bridgeObjectRelease();
        id v14 = v41;
      }
      uint64_t v25 = v37;
      uint64_t v24 = v38;
      sub_24088F570((uint64_t)v14 + *(int *)(v37 + 20), v38, (uint64_t (*)(void))sub_240851D44);
      uint64_t v26 = v39;
      if ((*v33)(v24, 1, v39) == 1)
      {
        sub_240955718();
      }
      else
      {
        uint64_t v27 = v31;
        (*v30)(v31, v24, v26);
        sub_240955718();
        sub_2408920A0(&qword_268C90E80, &qword_268C90E88);
        sub_240954708();
        (*v29)(v27, v26);
      }
      if (*(void *)((char *)v14 + *(int *)(v25 + 24) + 8))
      {
        sub_240955718();
        swift_bridgeObjectRetain();
        id v14 = v41;
        sub_240954868();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_240955718();
      }
      if (*(void *)((char *)v14 + *(int *)(v25 + 28) + 8))
      {
        sub_240955718();
        swift_bridgeObjectRetain();
        id v14 = v41;
        sub_240954868();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_240955718();
      }
      uint64_t v17 = v42 + 1;
      uint64_t result = sub_24088F5D8((uint64_t)v14, type metadata accessor for SharedConceptCodedValue);
    }
    while (v17 != v36);
  }
  return result;
}

uint64_t sub_24088EF70(uint64_t a1, uint64_t a2)
{
  sub_24082EF28(0, (unint64_t *)&qword_268C90E10, &qword_268C90E18);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v29 = v4;
  uint64_t v30 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v28 = (char *)v27 - v6;
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t result = sub_240955708();
  uint64_t v32 = v7;
  if (v7)
  {
    uint64_t v9 = 0;
    uint64_t v31 = a2 + 32;
    v27[0] = v30 + 8;
    v27[1] = v30 + 16;
    do
    {
      uint64_t v10 = (uint64_t *)(v31 + 88 * v9);
      uint64_t v11 = *v10;
      uint64_t v13 = v10[2];
      uint64_t v12 = v10[3];
      uint64_t v41 = v10[1];
      uint64_t v42 = v12;
      uint64_t v14 = v10[4];
      uint64_t v15 = v10[5];
      uint64_t v16 = v10[7];
      uint64_t v43 = v10[6];
      uint64_t v17 = v10[9];
      uint64_t v40 = v10[8];
      uint64_t v18 = v10[10];
      sub_240955708();
      uint64_t v19 = v11;
      uint64_t v20 = *(void *)(v11 + 16);
      uint64_t v44 = v17;
      if (v20)
      {
        uint64_t v34 = v9;
        uint64_t v35 = v16;
        uint64_t v21 = v19 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
        uint64_t v22 = *(void *)(v30 + 72);
        uint64_t v38 = v18;
        uint64_t v39 = v13;
        char v23 = (void (**)(char *, uint64_t))v27[0];
        uint64_t v36 = v15;
        uint64_t v37 = v14;
        uint64_t v24 = v28;
        uint64_t v25 = v29;
        uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
        uint64_t v33 = v19;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        do
        {
          v26(v24, v21, v25);
          sub_2408921B0(&qword_268C90E70, &qword_268C90E78);
          sub_240954708();
          (*v23)(v24, v25);
          v21 += v22;
          --v20;
        }
        while (v20);
        swift_bridgeObjectRelease();
        uint64_t v9 = v34;
        uint64_t v15 = v36;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      ++v9;
      swift_bridgeObjectRetain();
      sub_240954868();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_240954868();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24088E9F4(a1, v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_240954868();
      swift_bridgeObjectRelease();
      sub_240955738();
      swift_bridgeObjectRetain();
      sub_240954868();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease_n();
    }
    while (v9 != v32);
  }
  return result;
}

uint64_t sub_24088F2F4(uint64_t a1, uint64_t a2)
{
  sub_2409528B8();
  sub_2408938A8(&qword_268C90DD8, MEMORY[0x263F46018]);
  sub_240954968();
  sub_240954968();
  if (v15 == v14
    && (uint64_t v4 = type metadata accessor for SharedNewRecordsAlertData(0),
        *(void *)(a1 + *(int *)(v4 + 20)) == *(void *)(a2 + *(int *)(v4 + 20)))
    && (uint64_t v5 = v4, (sub_24088CC6C(*(void **)(a1 + *(int *)(v4 + 24)), *(void **)(a2 + *(int *)(v4 + 24))) & 1) != 0))
  {
    uint64_t v6 = *(int *)(v5 + 28);
    uint64_t v7 = *(void *)(a1 + v6);
    uint64_t v8 = *(void *)(a1 + v6 + 8);
    uint64_t v9 = (void *)(a2 + v6);
    BOOL v10 = v7 == *v9 && v8 == v9[1];
    if (v10 || (char v11 = sub_240955618(), v12 = 0, (v11 & 1) != 0)) {
      char v12 = sub_2409519F8();
    }
  }
  else
  {
    char v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_24088F42C(uint64_t a1, uint64_t a2)
{
  sub_2409528B8();
  sub_2408938A8(&qword_268C90DD8, MEMORY[0x263F46018]);
  sub_240954968();
  sub_240954968();
  if (v8 == v7
    && (uint64_t v4 = type metadata accessor for SharedConceptComboFeedItemData(0),
        (sub_24088CC6C(*(void **)(a1 + *(int *)(v4 + 20)), *(void **)(a2 + *(int *)(v4 + 20))) & 1) != 0))
  {
    char v5 = sub_2409519F8();
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

unint64_t sub_24088F51C()
{
  unint64_t result = qword_268C90DE8;
  if (!qword_268C90DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90DE8);
  }
  return result;
}

uint64_t sub_24088F570(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24088F5D8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24088F638(uint64_t a1, uint64_t a2)
{
  if ((sub_24088CD34(*(void *)a1, *(void *)a2) & 1) == 0) {
    return 0;
  }
  BOOL v4 = *(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16);
  if (v4 || (char v5 = sub_240955618(), result = 0, (v5 & 1) != 0))
  {
    BOOL v7 = *(void *)(a1 + 24) == *(void *)(a2 + 24) && *(void *)(a1 + 32) == *(void *)(a2 + 32);
    if (v7 || (char v8 = sub_240955618(), result = 0, (v8 & 1) != 0))
    {
      if ((sub_24088CF74(*(void *)(a1 + 40), *(void *)(a2 + 40)) & 1) == 0) {
        return 0;
      }
      if (*(void *)(a1 + 48) == *(void *)(a2 + 48) && *(void *)(a1 + 56) == *(void *)(a2 + 56)
        || (char v9 = sub_240955618(), result = 0, (v9 & 1) != 0))
      {
        if (*(double *)(a1 + 64) == *(double *)(a2 + 64))
        {
          if (*(void *)(a1 + 72) == *(void *)(a2 + 72) && *(void *)(a1 + 80) == *(void *)(a2 + 80)) {
            return 1;
          }
          return sub_240955618();
        }
        return 0;
      }
    }
  }
  return result;
}

BOOL sub_24088F74C(void *a1, void *a2)
{
  uint64_t v4 = sub_240952258();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  BOOL v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408924DC();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v8);
  char v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408925E8(0, &qword_26AFCD978, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v65 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v70 = (uint64_t)&v65 - v19;
  if (*a1 == *a2 && a1[1] == a2[1] || (char v20 = sub_240955618(), result = 0, (v20 & 1) != 0))
  {
    if (a1[2] == a2[2] && a1[3] == a2[3] || (char v22 = sub_240955618(), result = 0, (v22 & 1) != 0))
    {
      uint64_t v67 = v15;
      unint64_t v66 = v7;
      uint64_t v68 = v5;
      uint64_t v69 = v11;
      char v23 = (int *)type metadata accessor for SharedConceptFeedItemData(0);
      sub_2409528B8();
      sub_2408938A8(&qword_268C90DD8, MEMORY[0x263F46018]);
      sub_240954968();
      sub_240954968();
      if (*(void *)&v73[0] != *(void *)&v71[0]) {
        return 0;
      }
      uint64_t v24 = v23[7];
      uint64_t v25 = *(void *)((char *)a1 + v24);
      uint64_t v26 = *(void *)((char *)a1 + v24 + 8);
      uint64_t v27 = (void *)((char *)a2 + v24);
      uint64_t v28 = v4;
      uint64_t v29 = (uint64_t)v69;
      uint64_t v30 = v68;
      if (v25 == *v27 && v26 == v27[1] || (char v31 = sub_240955618(), result = 0, (v31 & 1) != 0))
      {
        uint64_t v32 = v23[8];
        uint64_t v33 = (void *)((char *)a1 + v32);
        uint64_t v34 = *(void *)((char *)a1 + v32 + 8);
        uint64_t v35 = (void *)((char *)a2 + v32);
        uint64_t v36 = v35[1];
        if (v34)
        {
          if (!v36) {
            return 0;
          }
          if (*v33 != *v35 || v34 != v36)
          {
            char v37 = sub_240955618();
            BOOL result = 0;
            if ((v37 & 1) == 0) {
              return result;
            }
          }
        }
        else if (v36)
        {
          return 0;
        }
        uint64_t v38 = v23[9];
        uint64_t v39 = (void *)((char *)a1 + v38);
        uint64_t v40 = *(void *)((char *)a1 + v38 + 8);
        uint64_t v41 = (void *)((char *)a2 + v38);
        uint64_t v42 = v41[1];
        if (v40)
        {
          if (!v42) {
            return 0;
          }
          if (*v39 != *v41 || v40 != v42)
          {
            char v43 = sub_240955618();
            BOOL result = 0;
            if ((v43 & 1) == 0) {
              return result;
            }
          }
        }
        else if (v42)
        {
          return 0;
        }
        if (*((unsigned __int8 *)a1 + v23[10]) != *((unsigned __int8 *)a2 + v23[10])) {
          return 0;
        }
        uint64_t v44 = (char *)a1 + v23[11];
        long long v45 = *((_OWORD *)v44 + 3);
        id v71[2] = *((_OWORD *)v44 + 2);
        v71[3] = v45;
        v71[4] = *((_OWORD *)v44 + 4);
        uint64_t v72 = *((void *)v44 + 10);
        long long v46 = *((_OWORD *)v44 + 1);
        v71[0] = *(_OWORD *)v44;
        v71[1] = v46;
        uint64_t v47 = (char *)a2 + v23[11];
        long long v48 = *((_OWORD *)v47 + 1);
        v73[0] = *(_OWORD *)v47;
        v73[1] = v48;
        uint64_t v74 = *((void *)v47 + 10);
        long long v49 = *((_OWORD *)v47 + 4);
        long long v50 = *((_OWORD *)v47 + 2);
        void v73[3] = *((_OWORD *)v47 + 3);
        v73[4] = v49;
        v73[2] = v50;
        if ((sub_24088F638((uint64_t)v71, (uint64_t)v73) & 1) == 0
          || (sub_24088D74C(*(void *)((char *)a1 + v23[12]), *(void *)((char *)a2 + v23[12])) & 1) == 0)
        {
          return 0;
        }
        uint64_t v51 = (uint64_t)a1 + v23[13];
        uint64_t v52 = v70;
        sub_240866350(v51, v70);
        sub_240866350((uint64_t)a2 + v23[13], (uint64_t)v18);
        uint64_t v53 = v29 + *(int *)(v9 + 48);
        sub_240866350(v52, v29);
        sub_240866350((uint64_t)v18, v53);
        uint64_t v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
        if (v54(v29, 1, v28) == 1)
        {
          uint64_t v55 = v28;
          uint64_t v56 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
          sub_240892570((uint64_t)v18, &qword_26AFCD978, MEMORY[0x263F45780]);
          sub_240892570(v52, &qword_26AFCD978, v56);
          if (v54(v53, 1, v55) == 1)
          {
            sub_240892570((uint64_t)v69, &qword_26AFCD978, MEMORY[0x263F45780]);
            return 1;
          }
          goto LABEL_33;
        }
        uint64_t v57 = (uint64_t)v67;
        sub_240866350(v29, (uint64_t)v67);
        if (v54(v53, 1, v28) == 1)
        {
          unint64_t v58 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
          sub_240892570((uint64_t)v18, &qword_26AFCD978, MEMORY[0x263F45780]);
          sub_240892570(v70, &qword_26AFCD978, v58);
          (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v57, v28);
LABEL_33:
          sub_24088F5D8((uint64_t)v69, (uint64_t (*)(void))sub_2408924DC);
          return 0;
        }
        uint64_t v59 = v68;
        uint64_t v60 = v66;
        (*(void (**)(char *, uint64_t, uint64_t))(v68 + 32))(v66, v53, v28);
        sub_2408938A8(&qword_268C90F18, MEMORY[0x263F45780]);
        char v61 = sub_240954778();
        uint64_t v62 = *(void (**)(char *, uint64_t))(v59 + 8);
        v62(v60, v28);
        uint64_t v63 = v28;
        uint64_t v64 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
        sub_240892570((uint64_t)v18, &qword_26AFCD978, MEMORY[0x263F45780]);
        sub_240892570(v70, &qword_26AFCD978, v64);
        v62((char *)v57, v63);
        sub_240892570(v29, &qword_26AFCD978, v64);
        return (v61 & 1) != 0;
      }
    }
  }
  return result;
}

uint64_t sub_24088FE60(uint64_t *a1, uint64_t *a2)
{
  sub_24082EF28(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v46 - v7;
  sub_24089214C();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240851D44();
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v46 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v46 - v20;
  if ((sub_24088CD34(*a1, *a2) & 1) == 0) {
    return 0;
  }
  long long v46 = v8;
  uint64_t v22 = type metadata accessor for SharedConceptCodedValue(0);
  uint64_t v23 = *(int *)(v22 + 20);
  long long v48 = a1;
  sub_24088F570((uint64_t)a1 + v23, (uint64_t)v21, (uint64_t (*)(void))sub_240851D44);
  uint64_t v47 = v22;
  uint64_t v24 = *(int *)(v22 + 20);
  long long v49 = a2;
  sub_24088F570((uint64_t)a2 + v24, (uint64_t)v19, (uint64_t (*)(void))sub_240851D44);
  uint64_t v25 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_24088F570((uint64_t)v21, (uint64_t)v12, (uint64_t (*)(void))sub_240851D44);
  sub_24088F570((uint64_t)v19, v25, (uint64_t (*)(void))sub_240851D44);
  uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v26((uint64_t)v12, 1, v5) == 1)
  {
    sub_24088F5D8((uint64_t)v19, (uint64_t (*)(void))sub_240851D44);
    sub_24088F5D8((uint64_t)v21, (uint64_t (*)(void))sub_240851D44);
    if (v26(v25, 1, v5) == 1)
    {
      sub_24088F5D8((uint64_t)v12, (uint64_t (*)(void))sub_240851D44);
      goto LABEL_11;
    }
LABEL_7:
    sub_24088F5D8((uint64_t)v12, (uint64_t (*)(void))sub_24089214C);
    return 0;
  }
  sub_24088F570((uint64_t)v12, (uint64_t)v16, (uint64_t (*)(void))sub_240851D44);
  if (v26(v25, 1, v5) == 1)
  {
    sub_24088F5D8((uint64_t)v19, (uint64_t (*)(void))sub_240851D44);
    sub_24088F5D8((uint64_t)v21, (uint64_t (*)(void))sub_240851D44);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v5);
    goto LABEL_7;
  }
  uint64_t v28 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v46, v25, v5);
  sub_2408920A0((unint64_t *)&qword_268C90EA8, &qword_268C90EB0);
  uint64_t v29 = v6;
  char v30 = sub_240954778();
  char v31 = *(void (**)(char *, uint64_t))(v29 + 8);
  v31(v28, v5);
  sub_24088F5D8((uint64_t)v19, (uint64_t (*)(void))sub_240851D44);
  sub_24088F5D8((uint64_t)v21, (uint64_t (*)(void))sub_240851D44);
  v31(v16, v5);
  sub_24088F5D8((uint64_t)v12, (uint64_t (*)(void))sub_240851D44);
  if ((v30 & 1) == 0) {
    return 0;
  }
LABEL_11:
  uint64_t v33 = v47;
  uint64_t v32 = v48;
  uint64_t v34 = *(int *)(v47 + 24);
  uint64_t v35 = (uint64_t *)((char *)v48 + v34);
  uint64_t v36 = *(uint64_t *)((char *)v48 + v34 + 8);
  char v37 = v49;
  uint64_t v38 = (uint64_t *)((char *)v49 + v34);
  uint64_t v39 = v38[1];
  if (!v36)
  {
    if (!v39) {
      goto LABEL_18;
    }
    return 0;
  }
  if (!v39) {
    return 0;
  }
  if (*v35 == *v38 && v36 == v39 || (char v40 = sub_240955618(), result = 0, (v40 & 1) != 0))
  {
LABEL_18:
    uint64_t v41 = *(int *)(v33 + 28);
    uint64_t v42 = (uint64_t *)((char *)v32 + v41);
    uint64_t v43 = *(uint64_t *)((char *)v32 + v41 + 8);
    uint64_t v44 = (uint64_t *)((char *)v37 + v41);
    uint64_t v45 = v44[1];
    if (v43)
    {
      if (v45 && (*v42 == *v44 && v43 == v45 || (sub_240955618() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v45)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_240890360(void *a1, void (*a2)(_OWORD *), uint64_t a3)
{
  uint64_t v31 = a3;
  uint64_t v27 = a2;
  sub_2408925E8(0, &qword_268C90F38, type metadata accessor for SharedConceptCodedValue, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v23 - v5;
  uint64_t v26 = type metadata accessor for SharedConceptCodedValue(0);
  uint64_t v7 = *(void *)(v26 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v26);
  uint64_t v25 = (uint64_t)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v23 - v10;
  uint64_t v12 = sub_2409518F8();
  uint64_t v23 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = a1;
  sub_240954F58();

  sub_2408938A8(&qword_268C90F30, MEMORY[0x263F06DC0]);
  sub_2409550A8();
  if (v30)
  {
    uint64_t v24 = v7;
    uint64_t v16 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
    unint64_t v17 = MEMORY[0x263F8EE78];
    do
    {
      uint64_t v18 = sub_240878F84(&v29, v28);
      uint64_t v19 = (void *)MEMORY[0x245601B40](v18);
      v27(v28);
      sub_2408371B8((uint64_t)v28);
      if ((*v16)(v6, 1, v26) == 1)
      {
        sub_240892570((uint64_t)v6, &qword_268C90F38, type metadata accessor for SharedConceptCodedValue);
      }
      else
      {
        sub_24089264C((uint64_t)v6, (uint64_t)v11, type metadata accessor for SharedConceptCodedValue);
        sub_24089264C((uint64_t)v11, v25, type metadata accessor for SharedConceptCodedValue);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v17 = sub_2408C2EB0(0, *(void *)(v17 + 16) + 1, 1, v17);
        }
        unint64_t v21 = *(void *)(v17 + 16);
        unint64_t v20 = *(void *)(v17 + 24);
        if (v21 >= v20 >> 1) {
          unint64_t v17 = sub_2408C2EB0(v20 > 1, v21 + 1, 1, v17);
        }
        *(void *)(v17 + 16) = v21 + 1;
        sub_24089264C(v25, v17+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v21, type metadata accessor for SharedConceptCodedValue);
      }
      sub_2409550A8();
    }
    while (v30);
  }
  else
  {
    unint64_t v17 = MEMORY[0x263F8EE78];
  }
  (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v12);
  return v17;
}

unint64_t sub_24089074C(void *a1)
{
  sub_2408926B4(0, &qword_268C90F48, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v25 - v3;
  sub_24082EF28(0, (unint64_t *)&qword_268C90E10, &qword_268C90E18);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v30 = (char *)&v25 - v11;
  uint64_t v12 = sub_2409518F8();
  uint64_t v26 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = a1;
  sub_240954F58();

  sub_2408938A8(&qword_268C90F30, MEMORY[0x263F06DC0]);
  uint64_t v31 = v14;
  sub_2409550A8();
  if (v34)
  {
    uint64_t v16 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v29 = v7;
    unint64_t v17 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    unint64_t v18 = MEMORY[0x263F8EE78];
    uint64_t v27 = v10;
    uint64_t v28 = v12;
    do
    {
      sub_240878F84(&v33, v32);
      sub_24088C910((uint64_t)v32, (uint64_t)v4);
      sub_2408371B8((uint64_t)v32);
      if ((*v16)(v4, 1, v6) == 1)
      {
        sub_24089272C((uint64_t)v4);
      }
      else
      {
        uint64_t v19 = *v17;
        unint64_t v20 = v30;
        (*v17)(v30, v4, v6);
        v19(v10, v20, v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v18 = sub_2408C2E68(0, *(void *)(v18 + 16) + 1, 1, v18);
        }
        unint64_t v22 = *(void *)(v18 + 16);
        unint64_t v21 = *(void *)(v18 + 24);
        if (v22 >= v21 >> 1) {
          unint64_t v18 = sub_2408C2E68(v21 > 1, v22 + 1, 1, v18);
        }
        *(void *)(v18 + 16) = v22 + 1;
        unint64_t v23 = v18
            + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))
            + *(void *)(v29 + 72) * v22;
        uint64_t v10 = v27;
        v19((char *)v23, v27, v6);
        uint64_t v12 = v28;
      }
      sub_2409550A8();
    }
    while (v34);
  }
  else
  {
    unint64_t v18 = MEMORY[0x263F8EE78];
  }
  (*(void (**)(char *, uint64_t))(v26 + 8))(v31, v12);
  return v18;
}

void *sub_240890B3C(void *a1, void *a2)
{
  uint64_t v4 = sub_2409518F8();
  uint64_t v31 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = a1;
  sub_240954F58();

  uint64_t v8 = sub_2408938A8(&qword_268C90F30, MEMORY[0x263F06DC0]);
  sub_2409550A8();
  if (!v38)
  {
    uint64_t v9 = (void *)MEMORY[0x263F8EE78];
LABEL_14:
    (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v4);
    return v9;
  }
  uint64_t v9 = (void *)MEMORY[0x263F8EE78];
  uint64_t v41 = a2;
  uint64_t v33 = v8;
  uint64_t v32 = MEMORY[0x263F8EE58] + 8;
  while (1)
  {
    sub_240878F84(&v37, v36);
    sub_2408373C4((uint64_t)v36, (uint64_t)v35);
    sub_24083EDCC(0, &qword_268C90BC8);
    if (!swift_dynamicCast())
    {
      sub_2408371B8((uint64_t)v36);
      goto LABEL_4;
    }
    uint64_t v10 = v9;
    uint64_t v11 = v6;
    uint64_t v12 = v34;
    uint64_t result = objc_msgSend(a2, sel_conceptIdentifier);
    if (!result) {
      break;
    }
    uint64_t v14 = result;
    uint64_t v15 = v4;
    uint64_t v16 = sub_2409547C8();
    uint64_t v18 = v17;

    uint64_t result = objc_msgSend(a2, sel_preferredName);
    if (!result) {
      goto LABEL_16;
    }
    uint64_t v19 = result;
    uint64_t v20 = sub_2409547C8();
    uint64_t v22 = v21;

    sub_24088BC8C(v16, v18, v20, v22, v39);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_2408371B8((uint64_t)v36);
    uint64_t v9 = v10;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_2408C2EF8(0, v10[2] + 1, 1, v10);
    }
    uint64_t v4 = v15;
    uint64_t v6 = v11;
    unint64_t v24 = v9[2];
    unint64_t v23 = v9[3];
    if (v24 >= v23 >> 1) {
      uint64_t v9 = sub_2408C2EF8((void *)(v23 > 1), v24 + 1, 1, v9);
    }
    v9[2] = v24 + 1;
    uint64_t v25 = &v9[11 * v24];
    long long v26 = v39[1];
    *((_OWORD *)v25 + 2) = v39[0];
    *((_OWORD *)v25 + 3) = v26;
    long long v27 = v39[2];
    long long v28 = v39[3];
    long long v29 = v39[4];
    v25[14] = v40;
    *((_OWORD *)v25 + 5) = v28;
    *((_OWORD *)v25 + 6) = v29;
    *((_OWORD *)v25 + 4) = v27;
    a2 = v41;
LABEL_4:
    sub_2409550A8();
    if (!v38) {
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_240890EBC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x800000024095D0C0 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_240955618();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_240890FF8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C626172616873 && a2 == 0xEF64496C65646F4DLL;
  if (v2 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024095D0E0 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024095D0C0 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024095D120 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x64656E6E69507369 && a2 == 0xE800000000000000 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x655274736574616CLL && a2 == 0xEC00000064726F63 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6465646465626D65 && a2 == 0xEF7364726F636552 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_240955618();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_240891460(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73676E69646F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024095D0E0 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024095D100 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C61566465646F63 && a2 == 0xEB00000000736575 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74696E556D756375 && a2 == 0xEE00676E69727453 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614465746164 && a2 == 0xE800000000000000 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x555564726F636572 && a2 == 0xEA00000000004449)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_240955618();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_240891784@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_240894250(0, &qword_268C90DF8, (uint64_t (*)(void))sub_240891E20, (uint64_t)&type metadata for SharedConceptFormattedRecord.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v38 - v8;
  uint64_t v10 = a1[3];
  uint64_t v45 = a1;
  sub_2408304E8(a1, v10);
  sub_240891E20();
  sub_240955768();
  if (v2) {
    return sub_2408371B8((uint64_t)v45);
  }
  uint64_t v11 = v7;
  uint64_t v44 = a2;
  sub_2408926B4(0, &qword_268C90E08, MEMORY[0x263F8D488]);
  char v46 = 0;
  sub_240891F54(&qword_268C90E20, &qword_268C90E28);
  uint64_t v12 = v6;
  sub_2409554F8();
  uint64_t v13 = v47;
  LOBYTE(v47) = 1;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_2409554B8();
  uint64_t v16 = v15;
  uint64_t v17 = v14;
  LOBYTE(v47) = 2;
  swift_bridgeObjectRetain();
  uint64_t v19 = v16;
  uint64_t v18 = sub_2409554B8();
  uint64_t v21 = v20;
  uint64_t v42 = v18;
  uint64_t v43 = v17;
  sub_2408925E8(0, &qword_268C90E30, type metadata accessor for SharedConceptCodedValue, MEMORY[0x263F8D488]);
  char v46 = 3;
  sub_240891E94(&qword_268C90E38, &qword_268C90E40);
  swift_bridgeObjectRetain();
  sub_2409554F8();
  uint64_t v41 = v21;
  uint64_t v22 = v47;
  LOBYTE(v47) = 4;
  swift_bridgeObjectRetain();
  uint64_t v40 = 0;
  uint64_t v23 = v19;
  uint64_t v38 = sub_2409554B8();
  LOBYTE(v47) = 5;
  uint64_t v25 = v24;
  swift_bridgeObjectRetain();
  sub_2409554D8();
  uint64_t v39 = v25;
  uint64_t v27 = v26;
  LOBYTE(v47) = 6;
  uint64_t v28 = sub_2409554B8();
  uint64_t v30 = v29;
  uint64_t v31 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v40 = v28;
  v31(v9, v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v32 = v41;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2408371B8((uint64_t)v45);
  swift_bridgeObjectRelease();
  uint64_t v33 = v39;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v36 = v43;
  uint64_t v35 = v44;
  *uint64_t v44 = v13;
  v35[1] = v36;
  uint64_t v37 = v42;
  v35[2] = v23;
  v35[3] = v37;
  v35[4] = v32;
  v35[5] = v22;
  v35[6] = v38;
  v35[7] = v33;
  v35[8] = v27;
  v35[9] = v40;
  v35[10] = v30;
  return result;
}

unint64_t sub_240891E20()
{
  unint64_t result = qword_268C90E00;
  if (!qword_268C90E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90E00);
  }
  return result;
}

uint64_t type metadata accessor for SharedConceptCodedValue(uint64_t a1)
{
  return sub_24082A2AC(a1, (uint64_t *)&unk_268C90F58);
}

uint64_t sub_240891E94(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2408925E8(255, &qword_268C90E30, type metadata accessor for SharedConceptCodedValue, MEMORY[0x263F8D488]);
    sub_2408938A8(a2, (void (*)(uint64_t))type metadata accessor for SharedConceptCodedValue);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240891F54(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2408926B4(255, &qword_268C90E08, MEMORY[0x263F8D488]);
    sub_240891FEC(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240891FEC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24082EF28(255, (unint64_t *)&qword_268C90E10, &qword_268C90E18);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240892048(uint64_t a1)
{
  return a1;
}

uint64_t sub_240892074(uint64_t a1)
{
  return a1;
}

uint64_t sub_2408920A0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24082EF28(255, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
    sub_24083F780(a2, (unint64_t *)&qword_26AFCDF30);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24089214C()
{
  if (!qword_268C90E90)
  {
    sub_240851D44();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C90E90);
    }
  }
}

uint64_t sub_2408921B0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24082EF28(255, (unint64_t *)&qword_268C90E10, &qword_268C90E18);
    sub_24083F780(a2, &qword_268C90E18);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24089225C()
{
  unint64_t result = qword_268C90EC0;
  if (!qword_268C90EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90EC0);
  }
  return result;
}

unint64_t sub_2408922B0()
{
  unint64_t result = qword_268C90EC8;
  if (!qword_268C90EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90EC8);
  }
  return result;
}

uint64_t sub_240892304(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2408377E0(255, (unint64_t *)&qword_268C90ED0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240892380(uint64_t a1, uint64_t a2)
{
  sub_2408925E8(0, &qword_26AFCD978, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_240892414()
{
  unint64_t result = qword_268C90EF0;
  if (!qword_268C90EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90EF0);
  }
  return result;
}

uint64_t sub_240892468(uint64_t a1)
{
  return a1;
}

void sub_2408924DC()
{
  if (!qword_268C90F10)
  {
    sub_2408925E8(255, &qword_26AFCD978, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C90F10);
    }
  }
}

uint64_t sub_240892570(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_2408925E8(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

id sub_2408925E0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_24088BF74(a1, a2);
}

void sub_2408925E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_24089264C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_2408926B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_24082EF28(255, (unint64_t *)&qword_268C90E10, &qword_268C90E18);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_24089272C(uint64_t a1)
{
  sub_2408926B4(0, &qword_268C90F48, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for SharedConceptFeedItemData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SharedConceptFeedItemData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240892900);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedConceptFeedItemData.CodingKeys()
{
  return &type metadata for SharedConceptFeedItemData.CodingKeys;
}

uint64_t getEnumTagSinglePayload for SharedConceptFormattedRecord.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SharedConceptFormattedRecord.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240892A94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedConceptFormattedRecord.CodingKeys()
{
  return &type metadata for SharedConceptFormattedRecord.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SharedNewRecordsAlertData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240892B98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedNewRecordsAlertData.CodingKeys()
{
  return &type metadata for SharedNewRecordsAlertData.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SharedConceptComboFeedItemData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240892C9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedConceptComboFeedItemData.CodingKeys()
{
  return &type metadata for SharedConceptComboFeedItemData.CodingKeys;
}

uint64_t *sub_240892CD4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    BOOL v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    BOOL v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_24082EF28(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
    uint64_t v12 = v11;
    uint64_t v13 = *(void *)(v11 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    if (v14(v10, 1, v12))
    {
      sub_240851D44();
      memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v9, v10, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = a3[7];
    uint64_t v18 = (uint64_t *)((char *)v7 + v16);
    uint64_t v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = (uint64_t *)((char *)v7 + v17);
    uint64_t v22 = (uint64_t *)((char *)a2 + v17);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_240892E98(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_24082EF28(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_240892F94(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  sub_24082EF28(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v8, 1, v10))
  {
    sub_240851D44();
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v8, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v14);
  uint64_t v17 = (void *)((char *)a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (void *)((char *)a1 + v15);
  uint64_t v20 = (void *)((char *)a2 + v15);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_24089310C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  sub_24082EF28(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v7, 1, v9);
  int v14 = v12(v8, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v7, v8, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_240851D44();
    memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v8, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[7];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_240893310(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  sub_24082EF28(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v9))
  {
    sub_240851D44();
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v7, v8, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
  }
  uint64_t v13 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  return a1;
}

void *sub_24089345C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  sub_24082EF28(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v7, 1, v9);
  int v14 = v12(v8, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v7, v8, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_240851D44();
    memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v7, v8, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[7];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_240893638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24089364C);
}

uint64_t sub_24089364C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_240851D44();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_2408936FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240893710);
}

void *sub_240893710(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    sub_240851D44();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_2408937B8()
{
  sub_240851D44();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_240893860()
{
  return sub_2408938A8(&qword_268C90F68, (void (*)(uint64_t))type metadata accessor for SharedConceptCodedValue);
}

uint64_t sub_2408938A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2408938F4()
{
  unint64_t result = qword_268C90F70;
  if (!qword_268C90F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90F70);
  }
  return result;
}

unint64_t sub_24089394C()
{
  unint64_t result = qword_268C90F78;
  if (!qword_268C90F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90F78);
  }
  return result;
}

unint64_t sub_2408939A4()
{
  unint64_t result = qword_268C90F80;
  if (!qword_268C90F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90F80);
  }
  return result;
}

unint64_t sub_2408939FC()
{
  unint64_t result = qword_268C90F88;
  if (!qword_268C90F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90F88);
  }
  return result;
}

unint64_t sub_240893A54()
{
  unint64_t result = qword_268C90F90;
  if (!qword_268C90F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90F90);
  }
  return result;
}

unint64_t sub_240893AAC()
{
  unint64_t result = qword_268C90F98;
  if (!qword_268C90F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90F98);
  }
  return result;
}

unint64_t sub_240893B04()
{
  unint64_t result = qword_268C90FA0;
  if (!qword_268C90FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90FA0);
  }
  return result;
}

unint64_t sub_240893B5C()
{
  unint64_t result = qword_268C90FA8;
  if (!qword_268C90FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90FA8);
  }
  return result;
}

unint64_t sub_240893BB4()
{
  unint64_t result = qword_268C90FB0;
  if (!qword_268C90FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90FB0);
  }
  return result;
}

unint64_t sub_240893C0C()
{
  unint64_t result = qword_268C90FB8;
  if (!qword_268C90FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90FB8);
  }
  return result;
}

unint64_t sub_240893C64()
{
  unint64_t result = qword_268C90FC0;
  if (!qword_268C90FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90FC0);
  }
  return result;
}

unint64_t sub_240893CBC()
{
  unint64_t result = qword_268C90FC8;
  if (!qword_268C90FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90FC8);
  }
  return result;
}

uint64_t sub_240893D10(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x646F436465786F62 && a2 == 0xEC00000073676E69;
  if (v2 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024095D140 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000024095D160 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x566C617574786574 && a2 == 0xEC00000065756C61)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_240955618();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_240893EF0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4379616C70736964 && a2 == 0xEF79726F67657461;
  if (v2 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x664F7265626D756ELL && a2 == 0xEF7364726F636552 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x614E64726F636572 && a2 == 0xEB0000000073656DLL || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4E7463656A627573 && a2 == 0xEB00000000656D61 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6164705565746164 && a2 == 0xEB00000000646574)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_240955618();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t sub_2408941A0()
{
  unint64_t result = qword_268C90FD8;
  if (!qword_268C90FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90FD8);
  }
  return result;
}

uint64_t sub_2408941F4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24082EF28(255, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_240894250(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for SharedConceptCodedValue.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SharedConceptCodedValue.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240894414);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedConceptCodedValue.CodingKeys()
{
  return &type metadata for SharedConceptCodedValue.CodingKeys;
}

unint64_t sub_240894450()
{
  unint64_t result = qword_268C90FF8;
  if (!qword_268C90FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90FF8);
  }
  return result;
}

unint64_t sub_2408944A8()
{
  unint64_t result = qword_268C91000;
  if (!qword_268C91000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91000);
  }
  return result;
}

unint64_t sub_240894500()
{
  unint64_t result = qword_268C91008;
  if (!qword_268C91008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91008);
  }
  return result;
}

uint64_t sub_240894554()
{
  uint64_t v1 = sub_240951A98();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  unsigned int v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2409526C8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v0, v5);
  int v9 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
  if (v9 == *MEMORY[0x263F45F00])
  {
    (*(void (**)(char *, uint64_t))(v6 + 96))(v8, v5);
    uint64_t v20 = sub_2409526B8();
    unint64_t v21 = v10;
    uint64_t v11 = sub_240954938();
    uint64_t v12 = sub_2409528B8();
    (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v8, v12);
  }
  else
  {
    int v13 = v9;
    if (v9 == *MEMORY[0x263F45F30])
    {
      (*(void (**)(char *, uint64_t))(v6 + 96))(v8, v5);
      sub_240894CA4();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v8, v1);
      uint64_t v20 = 0x2D746E756F636361;
      unint64_t v21 = 0xE800000000000000;
      sub_240951A48();
      sub_2409548A8();
      swift_bridgeObjectRelease();
      sub_2409548A8();
      uint64_t v11 = v20;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    else
    {
      BOOL v14 = v9 == *MEMORY[0x263F45F28] || v9 == *MEMORY[0x263F45F20];
      if (v14
        || v9 == *MEMORY[0x263F45EF0]
        || v9 == *MEMORY[0x263F45F08]
        || (v9 != *MEMORY[0x263F45EF8] ? (BOOL v15 = v9 == *MEMORY[0x263F45F10]) : (BOOL v15 = 1), v15))
      {
        uint64_t v18 = sub_2409526B8();
      }
      else
      {
        int v17 = *MEMORY[0x263F45F18];
        uint64_t v18 = sub_2409526B8();
        if (v13 != v17)
        {
          uint64_t v20 = v18;
          unint64_t v21 = v19;
          uint64_t v11 = sub_240954938();
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
          return v11;
        }
      }
      uint64_t v20 = v18;
      unint64_t v21 = v19;
      return sub_240954938();
    }
  }
  return v11;
}

uint64_t sub_240894924(uint64_t a1)
{
  v19[1] = a1;
  uint64_t v1 = sub_240951A98();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  unsigned int v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2409525A8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408374D0(0, (unint64_t *)&qword_26AFD0670, MEMORY[0x263F8E0F8]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_2409562B0;
  unint64_t v10 = (void *)sub_240951C68();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F45EB8], v5);
  v19[0] = sub_240952588();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v10)
  {
    unint64_t v20 = 0x656C69666F72505BLL;
    unint64_t v21 = 0xE90000000000003ALL;
    id v11 = v10;
    id v12 = objc_msgSend(v11, sel_identifier);
    sub_240951A78();

    sub_240951A48();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    sub_2409548A8();
    swift_bridgeObjectRelease();
    sub_2409548A8();

    unint64_t v13 = v20;
    unint64_t v14 = v21;
  }
  else
  {
    unint64_t v13 = 0xD000000000000013;
    unint64_t v14 = 0x800000024095C1A0;
  }
  unint64_t v20 = v13;
  unint64_t v21 = v14;
  sub_2409548A8();
  swift_bridgeObjectRelease();

  unint64_t v15 = v21;
  *(void *)(v9 + 32) = v20;
  *(void *)(v9 + 40) = v15;
  unint64_t v20 = 0;
  unint64_t v21 = 0xE000000000000000;
  sub_2409552A8();
  swift_bridgeObjectRelease();
  unint64_t v20 = 0xD000000000000010;
  unint64_t v21 = 0x800000024095D180;
  sub_240894554();
  sub_2409548A8();
  swift_bridgeObjectRelease();
  sub_2409548A8();
  unint64_t v16 = v21;
  *(void *)(v9 + 48) = v20;
  *(void *)(v9 + 56) = v16;
  unint64_t v20 = v9;
  sub_2408374D0(0, (unint64_t *)&qword_26AFD0550, MEMORY[0x263F8D488]);
  sub_24084A9B0();
  uint64_t v17 = sub_240954728();
  swift_bridgeObjectRelease();
  return v17;
}

void sub_240894CA4()
{
  if (!qword_268C91010)
  {
    sub_240951A98();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C91010);
    }
  }
}

uint64_t sub_240894D10()
{
  sub_2408371B8(v0 + 16);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_240894D50()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AddAccountDataProvider()
{
  return self;
}

uint64_t *sub_240894DAC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    unint64_t v10 = (char *)a1 + v9;
    id v11 = (char *)a2 + v9;
    uint64_t v12 = sub_240951A98();
    unint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_240894EC4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_240951A98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

void *sub_240894F58(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  unint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_240951A98();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_240895020(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_240951A98();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_240895100(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_240951A98();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *sub_240895198(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_240951A98();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_240895250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240895264);
}

uint64_t sub_240895264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_240951A98();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_240895314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240895328);
}

uint64_t sub_240895328(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_240951A98();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for NewRecordsFeedItemViewData()
{
  uint64_t result = qword_268C91018;
  if (!qword_268C91018) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24089541C()
{
  uint64_t result = sub_240951A98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2408954C8(void *a1)
{
  sub_240899614(0, &qword_268C91040, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v9[-v6];
  sub_2408304E8(a1, a1[3]);
  sub_2408995C0();
  sub_240955778();
  v9[15] = 0;
  sub_24082EAF8(0, &qword_26AFCE248, (uint64_t (*)(uint64_t))sub_240898C54, MEMORY[0x263F08F88]);
  sub_240840794(&qword_26AFCE238);
  sub_240955598();
  if (!v1)
  {
    type metadata accessor for RecordKindGeneratorData(0);
    v9[14] = 1;
    sub_240951A28();
    sub_2408228F4(&qword_26AFCC680, MEMORY[0x263F07490]);
    sub_240955598();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2408956F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v27 = sub_240951A28();
  uint64_t v23 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24082EAF8(0, &qword_26AFCE248, (uint64_t (*)(uint64_t))sub_240898C54, MEMORY[0x263F08F88]);
  uint64_t v29 = v6;
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v26 = (char *)&v21 - v7;
  sub_240899614(0, &qword_268C91050, MEMORY[0x263F8E040]);
  uint64_t v30 = v8;
  uint64_t v28 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = type metadata accessor for RecordKindGeneratorData(0);
  MEMORY[0x270FA5388](v11);
  unint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408304E8(a1, a1[3]);
  sub_2408995C0();
  sub_240955768();
  if (v2) {
    return sub_2408371B8((uint64_t)a1);
  }
  uint64_t v22 = v11;
  uint64_t v14 = v13;
  uint64_t v15 = v25;
  uint64_t v16 = v27;
  char v32 = 0;
  sub_240840794(&qword_26AFCE240);
  uint64_t v17 = v26;
  sub_2409554F8();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  uint64_t v21 = (uint64_t)v14;
  v18(v14, v17, v29);
  char v31 = 1;
  sub_2408228F4(&qword_26AFCC688, MEMORY[0x263F07490]);
  sub_2409554F8();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v30);
  uint64_t v19 = v21;
  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v21 + *(int *)(v22 + 20), v5, v16);
  sub_24083D340(v19, v24, type metadata accessor for RecordKindGeneratorData);
  sub_2408371B8((uint64_t)a1);
  return sub_24083AFF4(v19, type metadata accessor for RecordKindGeneratorData);
}

BOOL sub_240895B6C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_240895B84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_240899890(a1, a2);
  *a3 = result;
  return result;
}

void sub_240895BAC(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_240895BB8(uint64_t a1)
{
  unint64_t v2 = sub_2408995C0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240895BF4(uint64_t a1)
{
  unint64_t v2 = sub_2408995C0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240895C30@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2408956F8(a1, a2);
}

uint64_t sub_240895C48(void *a1)
{
  return sub_2408954C8(a1);
}

uint64_t sub_240895C60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v21 = a5;
  uint64_t v22 = a6;
  uint64_t v20 = a4;
  uint64_t v23 = a7;
  uint64_t v10 = sub_240951FB8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v15 = (v12 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v17 + v14, v13, v10);
  uint64_t v18 = v21;
  *(void *)(v17 + v15) = v20;
  *(void *)(v17 + v16) = v18;
  *(void *)(v17 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8)) = v22;
  sub_240840E8C();
  swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t result = sub_2409543E8();
  *uint64_t v23 = result;
  return result;
}

uint64_t sub_240895E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v27 = a7;
  uint64_t v28 = a8;
  v25[1] = a2;
  uint64_t v26 = a6;
  uint64_t v29 = a3;
  uint64_t v12 = sub_240951FB8();
  v25[0] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12);
  unint64_t v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a5, v12);
  unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v18 = (v14 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a4;
  (*(void (**)(unint64_t, char *, void))(v13 + 32))(v21 + v17, v15, v25[0]);
  uint64_t v22 = v27;
  *(void *)(v21 + v18) = v26;
  *(void *)(v21 + v19) = v22;
  uint64_t v23 = (uint64_t (**)(uint64_t, char))(v21 + v20);
  *uint64_t v23 = sub_24083F2C4;
  v23[1] = (uint64_t (*)(uint64_t, char))v16;
  *(void *)(v21 + ((v20 + 23) & 0xFFFFFFFFFFFFFFF8)) = v28;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_240952E18();
  swift_release();
  return swift_release();
}

void sub_240896018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(unint64_t, void), uint64_t a7, uint64_t a8)
{
  uint64_t v142 = a8;
  uint64_t v144 = a4;
  uint64_t v143 = a3;
  uint64_t v141 = a2;
  sub_24082EAF8(0, &qword_26AFCD968, MEMORY[0x263F455C8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v140 = (uint64_t)&v136 - v13;
  uint64_t v139 = sub_240951C58();
  int64_t v138 = *(void *)(v139 - 8);
  MEMORY[0x270FA5388](v139);
  uint64_t v137 = (char *)&v136 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = sub_2409540C8();
  uint64_t v148 = *(void *)(v149 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v149);
  id v147 = (char *)&v136 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  unint64_t v18 = (char *)&v136 - v17;
  uint64_t v175 = sub_240952AE8();
  uint64_t v152 = *(void *)(v175 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v175);
  int v173 = (char *)&v136 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  int v174 = (char *)&v136 - v21;
  uint64_t v22 = type metadata accessor for RecordKindFeedItemData();
  uint64_t v178 = *(void *)(v22 - 8);
  uint64_t v179 = v22;
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  v172 = (char *)&v136 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v151 = (char *)&v136 - v25;
  sub_240898944();
  uint64_t v161 = v26;
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  uint64_t v160 = (char *)&v136 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v169 = (uint64_t)&v136 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v159 = (char *)&v136 - v32;
  MEMORY[0x270FA5388](v31);
  uint64_t v158 = (char *)&v136 - v33;
  uint64_t v34 = sub_240952F98();
  uint64_t v35 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v37 = (char *)&v136 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408989E8();
  int64_t v39 = v38;
  MEMORY[0x270FA5388](v38);
  uint64_t v41 = (void **)((char *)&v136 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24083D340(a1, (uint64_t)v41, (uint64_t (*)(void))sub_2408989E8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v146 = a6;
  uint64_t v145 = a7;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v43 = *v41;
    sub_240954058();
    id v44 = v43;
    id v45 = v43;
    char v46 = sub_2409540B8();
    os_log_type_t v47 = sub_240954C18();
    if (os_log_type_enabled(v46, v47))
    {
      long long v48 = (uint8_t *)swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      int v182 = (void **)v49;
      *(_DWORD *)long long v48 = 136446210;
      uint64_t v181 = (uint64_t)v43;
      id v50 = v43;
      sub_24083F3C0();
      sub_240955658();
      id v51 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_240955138();
      swift_unknownObjectRelease();
      uint64_t v52 = sub_240954808();
      uint64_t v181 = sub_2408370E4(v52, v53, (uint64_t *)&v182);
      sub_2409550B8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_240818000, v46, v47, "Error fetching record kinds: %{public}s", v48, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v49, -1, -1);
      MEMORY[0x2456021C0](v48, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v148 + 8))(v18, v149);
    uint64_t v180 = 0;
    goto LABEL_63;
  }
  (*(void (**)(char *, void **, uint64_t))(v35 + 32))(v37, v41, v34);
  unint64_t v54 = sub_240952F78();
  int64_t v55 = *(void *)(v54 + 16);
  unint64_t v136 = v37;
  if (v55)
  {
    uint64_t v181 = MEMORY[0x263F8EE78];
    uint64_t v56 = &v181;
    sub_240875D6C(0, v55, 0);
    unint64_t v58 = sub_240898B24(v54);
    uint64_t v59 = 0;
    unint64_t v60 = v54 + 64;
    uint64_t v170 = (void (**)(char *, uint64_t))(v152 + 8);
    uint64_t v171 = v152 + 16;
    char v61 = *(unsigned char *)(v54 + 32);
    uint64_t v153 = v57;
    unint64_t v162 = v54 + 80;
    uint64_t v150 = v34;
    uint64_t v157 = v35;
    unint64_t v156 = v54;
    int64_t v154 = v55;
    unint64_t v155 = v54 + 64;
    do
    {
      if ((v58 & 0x8000000000000000) != 0 || (uint64_t)v58 >= 1 << v61)
      {
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
        goto LABEL_85;
      }
      if ((*(void *)(v60 + 8 * (v58 >> 6)) & (1 << v58)) == 0) {
        goto LABEL_76;
      }
      if (*(_DWORD *)(v54 + 36) != v57) {
        goto LABEL_77;
      }
      uint64_t v166 = 1 << v58;
      unint64_t v167 = v58 >> 6;
      uint64_t v165 = v57;
      uint64_t v164 = v59;
      uint64_t v63 = v161;
      int64_t v39 = *(int *)(v161 + 48);
      uint64_t v64 = *(void *)(v54 + 48);
      unint64_t v65 = v54;
      uint64_t v66 = sub_2409528B8();
      uint64_t v67 = *(void *)(v66 - 8);
      uint64_t v68 = v67;
      uint64_t v69 = v64 + *(void *)(v67 + 72) * v58;
      unint64_t v70 = v58;
      unint64_t v71 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
      uint64_t v72 = (uint64_t)v158;
      v71(v158, v69, v66);
      uint64_t v73 = *(void *)(v65 + 56);
      uint64_t v168 = v70;
      uint64_t v74 = *(void *)(v73 + 8 * v70);
      *(void *)(v72 + v39) = v74;
      uint64_t v75 = v159;
      v71(v159, v72, v66);
      *(void *)&v75[*(int *)(v63 + 48)] = v74;
      uint64_t v76 = (uint64_t)v75;
      uint64_t v77 = v169;
      sub_240898BAC(v76, v169, (uint64_t (*)(void))sub_240898944);
      swift_bridgeObjectRetain_n();
      sub_24083AFF4(v72, (uint64_t (*)(void))sub_240898944);
      uint64_t v78 = *(int *)(v63 + 48);
      uint64_t v79 = v160;
      v71(v160, v77, v66);
      uint64_t v8 = *(char **)(v77 + v78);
      *(void *)&v79[v78] = v8;
      char v80 = *(void (**)(char *, uint64_t))(v68 + 8);
      swift_bridgeObjectRetain();
      v80(v79, v66);
      uint64_t v81 = (char *)*((void *)v8 + 2);
      if (v81)
      {
        int v182 = (void **)MEMORY[0x263F8EE78];
        sub_240875D8C(0, (int64_t)v81, 0);
        unint64_t v82 = (*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80);
        uint64_t v163 = v8;
        uint64_t v83 = &v8[v82];
        uint64_t v84 = *(void *)(v152 + 72);
        uint64_t v176 = *(void (**)(char *, char *, uint64_t))(v152 + 16);
        uint64_t v177 = v84;
        uint64_t v85 = (uint64_t)v151;
        do
        {
          uint64_t v180 = v81;
          uint64_t v8 = v174;
          uint64_t v86 = v175;
          uint64_t v87 = v176;
          v176(v174, v83, v175);
          uint64_t v88 = v173;
          v87(v173, v8, v86);
          uint64_t v89 = (uint64_t)v172;
          sub_240952AA8();
          uint64_t v90 = sub_240952AD8();
          uint64_t v91 = sub_240952AC8();
          uint64_t v93 = v92;
          uint64_t v94 = v179;
          sub_240952AB8();
          *(void *)(v89 + *(int *)(v94 + 20)) = v90;
          uint64_t v95 = (uint64_t *)(v89 + *(int *)(v94 + 24));
          uint64_t *v95 = v91;
          v95[1] = v93;
          id v96 = *v170;
          (*v170)(v88, v86);
          sub_240898BAC(v89, v85, (uint64_t (*)(void))type metadata accessor for RecordKindFeedItemData);
          v96(v8, v86);
          uint64_t v41 = v182;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_240875D8C(0, (int64_t)v41[2] + 1, 1);
            uint64_t v41 = v182;
          }
          unint64_t v98 = (unint64_t)v41[2];
          unint64_t v97 = (unint64_t)v41[3];
          int64_t v39 = v98 + 1;
          uint64_t v99 = v180;
          if (v98 >= v97 >> 1)
          {
            sub_240875D8C(v97 > 1, v98 + 1, 1);
            uint64_t v41 = v182;
          }
          v41[2] = (void *)v39;
          sub_240898BAC(v85, (uint64_t)v41+ ((*(unsigned __int8 *)(v178 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v178 + 80))+ *(void *)(v178 + 72) * v98, (uint64_t (*)(void))type metadata accessor for RecordKindFeedItemData);
          v83 += v177;
          uint64_t v81 = v99 - 1;
        }
        while (v81);
        swift_bridgeObjectRelease();
        uint64_t v34 = v150;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v41 = (void **)MEMORY[0x263F8EE78];
      }
      sub_24083AFF4(v169, (uint64_t (*)(void))sub_240898944);
      uint64_t v56 = (uint64_t *)v181;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v35 = v157;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_240875D6C(0, v56[2] + 1, 1);
        uint64_t v56 = (uint64_t *)v181;
      }
      unint64_t v102 = v56[2];
      unint64_t v101 = v56[3];
      if (v102 >= v101 >> 1)
      {
        sub_240875D6C(v101 > 1, v102 + 1, 1);
        uint64_t v56 = (uint64_t *)v181;
      }
      v56[2] = v102 + 1;
      v56[v102 + 4] = (uint64_t)v41;
      unint64_t v54 = v156;
      char v61 = *(unsigned char *)(v156 + 32);
      unint64_t v58 = 1 << v61;
      if (v168 >= 1 << v61) {
        goto LABEL_78;
      }
      unint64_t v60 = v155;
      unint64_t v103 = v167;
      uint64_t v104 = *(void *)(v155 + 8 * v167);
      if ((v104 & v166) == 0) {
        goto LABEL_79;
      }
      if (*(_DWORD *)(v156 + 36) != v165) {
        goto LABEL_80;
      }
      unint64_t v105 = v104 & (-2 << (v168 & 0x3F));
      if (v105)
      {
        unint64_t v58 = __clz(__rbit64(v105)) | v168 & 0xFFFFFFFFFFFFFFC0;
        int64_t v62 = v154;
      }
      else
      {
        unint64_t v106 = v167 + 1;
        unint64_t v107 = (v58 + 63) >> 6;
        int64_t v62 = v154;
        if (v167 + 1 < v107)
        {
          unint64_t v108 = *(void *)(v155 + 8 * v106);
          if (v108)
          {
LABEL_34:
            unint64_t v58 = __clz(__rbit64(v108)) + (v106 << 6);
          }
          else
          {
            while (v107 - 2 != v103)
            {
              unint64_t v108 = *(void *)(v162 + 8 * v103++);
              if (v108)
              {
                unint64_t v106 = v103 + 1;
                goto LABEL_34;
              }
            }
          }
        }
      }
      uint64_t v59 = v164 + 1;
      uint64_t v57 = v153;
    }
    while (v164 + 1 != v62);
    swift_bridgeObjectRelease();
    uint64_t v8 = (char *)v56[2];
    if (v8) {
      goto LABEL_36;
    }
    goto LABEL_61;
  }
  swift_bridgeObjectRelease();
  uint64_t v56 = (uint64_t *)MEMORY[0x263F8EE78];
  uint64_t v8 = *(char **)(MEMORY[0x263F8EE78] + 16);
  if (v8)
  {
LABEL_36:
    swift_bridgeObjectRetain();
    unint64_t v58 = 0;
    unint64_t v54 = MEMORY[0x263F8EE78];
    while (1)
    {
      uint64_t v109 = v56[v58 + 4];
      uint64_t v110 = *(void *)(v109 + 16);
      int64_t v39 = *(void *)(v54 + 16);
      uint64_t v41 = (void **)(v39 + v110);
      if (__OFADD__(v39, v110)) {
        goto LABEL_81;
      }
      swift_bridgeObjectRetain();
      int v111 = swift_isUniquelyReferenced_nonNull_native();
      if (v111 && (uint64_t)v41 <= *(void *)(v54 + 24) >> 1)
      {
        if (*(void *)(v109 + 16)) {
          goto LABEL_48;
        }
      }
      else
      {
        if (v39 <= (uint64_t)v41) {
          int64_t v112 = v39 + v110;
        }
        else {
          int64_t v112 = v39;
        }
        unint64_t v54 = sub_2408C33B4(v111, v112, 1, v54);
        if (*(void *)(v109 + 16))
        {
LABEL_48:
          uint64_t v113 = *(void *)(v54 + 16);
          if ((*(void *)(v54 + 24) >> 1) - v113 < v110) {
            goto LABEL_83;
          }
          unint64_t v114 = (*(unsigned __int8 *)(v178 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v178 + 80);
          uint64_t v115 = *(void *)(v178 + 72);
          unint64_t v116 = v54 + v114 + v115 * v113;
          if (v109 + v114 < v116 + v115 * v110 && v116 < v109 + v114 + v115 * v110)
          {
            LODWORD(v135) = 0;
            uint64_t v134 = 1092;
            LOBYTE(v133) = 2;
            sub_240955448();
            __break(1u);
            return;
          }
          swift_arrayInitWithCopy();
          if (v110)
          {
            uint64_t v118 = *(void *)(v54 + 16);
            BOOL v119 = __OFADD__(v118, v110);
            uint64_t v120 = v118 + v110;
            if (v119) {
              goto LABEL_84;
            }
            *(void *)(v54 + 16) = v120;
          }
          goto LABEL_38;
        }
      }
      if (v110) {
        goto LABEL_82;
      }
LABEL_38:
      ++v58;
      swift_bridgeObjectRelease();
      if (v8 == (char *)v58)
      {
        swift_bridgeObjectRelease();
        goto LABEL_62;
      }
    }
  }
LABEL_61:
  unint64_t v54 = MEMORY[0x263F8EE78];
LABEL_62:
  uint64_t v121 = swift_bridgeObjectRelease();
  MEMORY[0x270FA5388](v121);
  uint64_t v133 = v141;
  uint64_t v134 = v143;
  uint64_t v135 = v142;
  sub_2409347A0((void (*)(void))sub_240898C14, (uint64_t)(&v136 - 6), v54);
  swift_bridgeObjectRelease();
  uint64_t v122 = v136;
  uint64_t v180 = (char *)sub_240952F88();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v122, v34);
LABEL_63:
  uint64_t v123 = v144;
  uint64_t v124 = (void *)(v144 + 16);
  sub_2408304E8((void *)(v144 + 16), *(void *)(v144 + 40));
  sub_2408304E8(v124, *(void *)(v123 + 40));
  uint64_t v125 = (void *)sub_240951EE8();
  sub_240951ED8();

  unint64_t v54 = sub_2409549C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v126 = v180;
  if (v180)
  {
    unint64_t v58 = v180;
    uint64_t v127 = (void *)sub_240951F68();
    uint64_t v128 = v140;
    sub_240897F2C(v126, v127, v140);

    int64_t v39 = v138;
    uint64_t v8 = (char *)v139;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v138 + 48))(v128, 1, v139) == 1)
    {

      sub_240898A98(v128);
    }
    else
    {
      uint64_t v41 = (void **)v137;
      (*(void (**)(char *, uint64_t, char *))(v39 + 32))(v137, v128, v8);
      sub_24082EAF8(0, &qword_26AFCDFA8, MEMORY[0x263F455C8], MEMORY[0x263F8E0F8]);
      unint64_t v129 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
      uint64_t v56 = (uint64_t *)swift_allocObject();
      *((_OWORD *)v56 + 1) = xmmword_240956800;
      (*(void (**)(char *, void **, char *))(v39 + 16))((char *)v56 + v129, v41, v8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_85:
      }
        unint64_t v54 = (unint64_t)sub_2408C3274(0, *(void *)(v54 + 16) + 1, 1, (void *)v54);
      unint64_t v131 = *(void *)(v54 + 16);
      unint64_t v130 = *(void *)(v54 + 24);
      if (v131 >= v130 >> 1) {
        unint64_t v54 = (unint64_t)sub_2408C3274((void *)(v130 > 1), v131 + 1, 1, (void *)v54);
      }
      *(void *)(v54 + 16) = v131 + 1;
      unint64_t v132 = v54 + 40 * v131;
      *(void *)(v132 + 32) = v56;
      *(void *)(v132 + 40) = 0;
      *(void *)(v132 + 48) = 0;
      *(void *)(v132 + 56) = 0;
      *(unsigned char *)(v132 + 64) = 64;

      (*(void (**)(void **, char *))(v39 + 8))(v41, v8);
    }
    id v126 = v180;
    v146(v54, 0);
  }
  else
  {
    v146(v54, 0);
  }
  swift_bridgeObjectRelease();
}

uint64_t sub_2408974E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_2409540C8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void *)sub_240951F68();
  sub_240897848(a1, v9, a2);
  if (v2)
  {

    sub_240954058();
    id v10 = v2;
    id v11 = v2;
    uint64_t v12 = sub_2409540B8();
    os_log_type_t v13 = sub_240954C18();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v26 = a2;
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v28 = v25;
      *(_DWORD *)uint64_t v14 = 136446210;
      uint64_t v23 = v14 + 4;
      uint64_t v27 = (uint64_t)v2;
      id v15 = v2;
      sub_24083F3C0();
      sub_240955658();
      id v16 = (id)HKSensitiveLogItem();
      uint64_t v24 = v5;
      swift_unknownObjectRelease();
      sub_240955138();
      swift_unknownObjectRelease();
      uint64_t v17 = sub_240954808();
      uint64_t v27 = sub_2408370E4(v17, v18, &v28);
      sub_2409550B8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_240818000, v12, v13, "Error making feed item for record, hiding from UI: %{public}s", v14, 0xCu);
      uint64_t v19 = v25;
      a2 = v26;
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v19, -1, -1);
      MEMORY[0x2456021C0](v14, -1, -1);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v24);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    uint64_t v22 = sub_240951E78();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a2, 1, 1, v22);
  }
  else
  {

    uint64_t v20 = sub_240951E78();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a2, 0, 1, v20);
  }
}

uint64_t sub_240897848@<X0>(uint64_t a1@<X0>, void *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v56 = a3;
  uint64_t v55 = sub_2409528B8();
  uint64_t v52 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  id v50 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240951838();
  MEMORY[0x270FA5388](v6 - 8);
  os_log_type_t v47 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_240951A28();
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v54 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  id v45 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  char v46 = (char *)&v44 - v11;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24082EAF8(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v49 = (uint64_t)&v44 - v14;
  sub_24082EAF8(0, &qword_268C90A48, MEMORY[0x263F45770], v12);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v44 - v16;
  uint64_t v18 = sub_240951C08();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for RecordKindFeedItemData();
  id v51 = a2;
  uint64_t v48 = sub_240953378();
  sub_2408228F4(&qword_268C91030, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
  uint64_t v23 = v57;
  sub_2409517A8();
  if (v23) {
    return swift_bridgeObjectRelease();
  }
  id v44 = v17;
  uint64_t v57 = 0;
  type metadata accessor for RecordKindFeedItemViewController();
  (*(void (**)(char *, void, uint64_t))(v19 + 104))(v21, *MEMORY[0x263F45520], v18);
  id v25 = v51;
  sub_240951CC8();
  uint64_t v26 = v49;
  sub_240882BF4(a1 + *(int *)(v22 + 28), v49);
  uint64_t v28 = v53;
  uint64_t v27 = v54;
  int v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v26, 1, v54);
  uint64_t v30 = v52;
  uint64_t v31 = v50;
  if (v29 == 1)
  {
    uint64_t v32 = sub_240952208();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v44, 1, 1, v32);
  }
  else
  {
    uint64_t v33 = v46;
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v46, v26, v27);
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v45, v33, v27);
    sub_240951828();
    uint64_t v34 = v44;
    sub_2409521E8();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v33, v27);
    uint64_t v35 = sub_240952208();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 0, 1, v35);
  }
  sub_240951DD8();
  swift_bridgeObjectRetain();
  sub_240951D78();
  sub_240951DC8();
  uint64_t v59 = MEMORY[0x263F8EE88];
  uint64_t v36 = sub_24090F040();
  sub_24089E058(v36);
  uint64_t v37 = sub_2409520B8();
  sub_240940118(&v58, v37, v38);
  swift_bridgeObjectRelease();
  uint64_t v39 = v59;
  uint64_t v40 = (void (*)(uint64_t *, void))sub_240951E38();
  sub_24089E058(v39);
  v40(&v58, 0);
  uint64_t v41 = v55;
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v31, *MEMORY[0x263F45FE8], v55);
  sub_2408228F4(&qword_268C90DD8, MEMORY[0x263F46018]);
  sub_240954968();
  sub_240954968();
  uint64_t v42 = v58;
  uint64_t v43 = v59;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v31, v41);
  if (v42 == v43) {
    return sub_240951D68();
  }
  return result;
}

void sub_240897F2C(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v31 = type metadata accessor for RecordKindGeneratorData(0);
  MEMORY[0x270FA5388](v31);
  uint64_t v32 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2409525A8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_240951A98();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    goto LABEL_6;
  }
  uint64_t v30 = a3;
  id v15 = a1;
  id v29 = a2;
  uint64_t v16 = (void *)sub_240951C68();
  if (!v16)
  {

    a3 = v30;
LABEL_6:
    uint64_t v25 = sub_240951C58();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(a3, 1, 1, v25);
    return;
  }
  uint64_t v17 = v16;
  id v18 = objc_msgSend(v16, sel_identifier);

  sub_240951A78();
  uint64_t v19 = sub_240951A48();
  uint64_t v21 = v20;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v33 = v19;
  uint64_t v34 = v21;
  sub_2409548A8();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F45E70], v7);
  sub_240952598();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_2409548A8();
  swift_bridgeObjectRelease();
  sub_240898C54();
  id v22 = v15;
  uint64_t v23 = (uint64_t)v32;
  sub_240954688();
  sub_240951A18();
  sub_2409517C8();
  swift_allocObject();
  sub_2409517B8();
  sub_2408228F4(&qword_268C91038, (void (*)(uint64_t))type metadata accessor for RecordKindGeneratorData);
  uint64_t v24 = v35;
  sub_2409517A8();
  uint64_t v35 = v24;
  if (v24)
  {
    sub_24083AFF4(v23, type metadata accessor for RecordKindGeneratorData);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_release();
    id v26 = v29;
    uint64_t v27 = v30;
    sub_240951C38();

    sub_24083AFF4(v23, type metadata accessor for RecordKindGeneratorData);
    uint64_t v28 = sub_240951C58();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 0, 1, v28);
  }
}

uint64_t sub_240898364()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HealthRecords19RecordKindGenerator_domain;
  uint64_t v2 = sub_240951F18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_24083AFF4(v0 + OBJC_IVAR____TtC13HealthRecords19RecordKindGenerator_context, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);

  return swift_deallocClassInstance();
}

uint64_t sub_240898430()
{
  return type metadata accessor for RecordKindGenerator(0);
}

uint64_t sub_240898438@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC13HealthRecords19RecordKindGenerator_domain;
  uint64_t v4 = sub_240951F18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_2408984B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_240951FB8() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v9 = *(void *)(v1 + v5);
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = *(void *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_240895C60(v7, v8, v1 + v4, v9, v10, v11, a1);
}

uint64_t sub_240898570()
{
  uint64_t v1 = sub_240951FB8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_240898670(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_240951FB8() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v2 + 16);
  uint64_t v10 = *(void *)(v2 + 24);
  uint64_t v11 = *(void *)(v2 + v7);
  uint64_t v12 = *(void *)(v2 + v8);
  uint64_t v13 = *(void *)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_240895E20(a1, a2, v9, v10, v2 + v6, v11, v12, v13);
}

uint64_t sub_240898738()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240898770()
{
  uint64_t v1 = sub_240951FB8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

void sub_24089887C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_240951FB8() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v9 = *(void *)(v1 + v5);
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = *(void (**)(unint64_t, void))(v1 + v7);
  uint64_t v12 = *(void *)(v1 + v7 + 8);
  uint64_t v13 = *(void *)(v1 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8));

  sub_240896018(a1, v8, v1 + v4, v9, v10, v11, v12, v13);
}

void sub_240898944()
{
  if (!qword_26AFCEC98)
  {
    sub_2409528B8();
    sub_24082EAF8(255, &qword_26AFD0510, MEMORY[0x263F46078], MEMORY[0x263F8D488]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AFCEC98);
    }
  }
}

void sub_2408989E8()
{
  if (!qword_26AFCF420)
  {
    sub_240952F98();
    sub_24083F3C0();
    unint64_t v0 = sub_240955758();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF420);
    }
  }
}

uint64_t sub_240898A58(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a2;
  if (!*a2)
  {
    a3(255);
    uint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_240898A98(uint64_t a1)
{
  sub_24082EAF8(0, &qword_26AFCD968, MEMORY[0x263F455C8], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240898B24(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_240898BAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_240898C14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2408974E4(a1, a2);
}

uint64_t type metadata accessor for RecordKindGeneratorData(uint64_t a1)
{
  return sub_24082A2AC(a1, qword_26AFCF608);
}

unint64_t sub_240898C54()
{
  unint64_t result = qword_26AFD0590;
  if (!qword_26AFD0590)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD0590);
  }
  return result;
}

uint64_t *sub_240898C94(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_24082EAF8(0, &qword_26AFCE248, (uint64_t (*)(uint64_t))sub_240898C54, MEMORY[0x263F08F88]);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_240951A28();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_240898DCC(uint64_t a1, uint64_t a2)
{
  sub_24082EAF8(0, &qword_26AFCE248, (uint64_t (*)(uint64_t))sub_240898C54, MEMORY[0x263F08F88]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_240951A28();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_240898EA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24082EAF8(0, &qword_26AFCE248, (uint64_t (*)(uint64_t))sub_240898C54, MEMORY[0x263F08F88]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_240951A28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_240898F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24082EAF8(0, &qword_26AFCE248, (uint64_t (*)(uint64_t))sub_240898C54, MEMORY[0x263F08F88]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_240951A28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_240899074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24082EAF8(0, &qword_26AFCE248, (uint64_t (*)(uint64_t))sub_240898C54, MEMORY[0x263F08F88]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_240951A28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_24089915C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24082EAF8(0, &qword_26AFCE248, (uint64_t (*)(uint64_t))sub_240898C54, MEMORY[0x263F08F88]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_240951A28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_240899244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240899258);
}

uint64_t sub_240899258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24082EAF8(0, &qword_26AFCE248, (uint64_t (*)(uint64_t))sub_240898C54, MEMORY[0x263F08F88]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_240951A28();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_240899380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240899394);
}

uint64_t sub_240899394(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_24082EAF8(0, &qword_26AFCE248, (uint64_t (*)(uint64_t))sub_240898C54, MEMORY[0x263F08F88]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_240951A28();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_2408994C8()
{
  sub_24082EAF8(319, &qword_26AFCE248, (uint64_t (*)(uint64_t))sub_240898C54, MEMORY[0x263F08F88]);
  if (v0 <= 0x3F)
  {
    sub_240951A28();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_2408995C0()
{
  unint64_t result = qword_268C91048;
  if (!qword_268C91048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91048);
  }
  return result;
}

void sub_240899614(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_2408995C0();
    unint64_t v7 = a3(a1, &type metadata for RecordKindGeneratorData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for RecordKindGeneratorData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240899744);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_24089976C(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for RecordKindGeneratorData.CodingKeys()
{
  return &type metadata for RecordKindGeneratorData.CodingKeys;
}

unint64_t sub_24089978C()
{
  unint64_t result = qword_268C91058;
  if (!qword_268C91058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91058);
  }
  return result;
}

unint64_t sub_2408997E4()
{
  unint64_t result = qword_268C91060;
  if (!qword_268C91060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91060);
  }
  return result;
}

unint64_t sub_24089983C()
{
  unint64_t result = qword_268C91068;
  if (!qword_268C91068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91068);
  }
  return result;
}

uint64_t sub_240899890(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x800000024095D2B0 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x446E75527473616CLL && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_240955618();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_240899998(uint64_t a1)
{
  uint64_t v42 = a1;
  uint64_t v43 = sub_240951B48();
  uint64_t v1 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  int v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_2409518C8();
  uint64_t v40 = *(void *)(v4 - 8);
  uint64_t v41 = v4;
  MEMORY[0x270FA5388](v4);
  unsigned int v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240899FF0();
  uint64_t v7 = sub_240951B38();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_240958650;
  unint64_t v12 = v11 + v10;
  uint64_t v13 = *(void (**)(unint64_t, void, uint64_t))(v8 + 104);
  v13(v12, *MEMORY[0x263F07870], v7);
  v13(v12 + v9, *MEMORY[0x263F07890], v7);
  v13(v12 + 2 * v9, *MEMORY[0x263F078C0], v7);
  v13(v12 + 3 * v9, *MEMORY[0x263F078C8], v7);
  sub_240824E48(v11);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  id v14 = objc_msgSend(self, sel_currentCalendar);
  sub_240951B08();

  sub_240951AE8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v43);
  uint64_t v45 = 0;
  unint64_t v46 = 0xE000000000000000;
  uint64_t v15 = sub_2409518A8();
  if (v16) {
    uint64_t v17 = 0;
  }
  else {
    uint64_t v17 = v15;
  }
  uint64_t v44 = v17;
  sub_2409555D8();
  sub_2409548A8();
  swift_bridgeObjectRelease();
  sub_2409548A8();
  uint64_t v18 = v45;
  uint64_t v45 = 0;
  unint64_t v46 = 0xE000000000000000;
  uint64_t v19 = sub_240951898();
  if (v20) {
    uint64_t v21 = 0;
  }
  else {
    uint64_t v21 = v19;
  }
  uint64_t v44 = v21;
  sub_2409555D8();
  sub_2409548A8();
  swift_bridgeObjectRelease();
  sub_2409548A8();
  swift_bridgeObjectRetain();
  sub_2409548A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v43 = v18;
  sub_2409548A8();
  swift_bridgeObjectRelease();
  uint64_t v22 = v45;
  uint64_t v45 = 0;
  unint64_t v46 = 0xE000000000000000;
  uint64_t v23 = sub_240951888();
  if (v24) {
    uint64_t v25 = 0;
  }
  else {
    uint64_t v25 = v23;
  }
  uint64_t v44 = v25;
  sub_2409555D8();
  sub_2409548A8();
  swift_bridgeObjectRelease();
  sub_2409548A8();
  swift_bridgeObjectRetain();
  sub_2409548A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2409548A8();
  swift_bridgeObjectRelease();
  uint64_t v26 = v45;
  uint64_t v45 = 0;
  unint64_t v46 = 0xE000000000000000;
  uint64_t v27 = sub_240951878();
  if (v28) {
    uint64_t v29 = 0;
  }
  else {
    uint64_t v29 = v27;
  }
  uint64_t v44 = v29;
  sub_2409555D8();
  sub_2409548A8();
  swift_bridgeObjectRelease();
  sub_2409548A8();
  swift_bridgeObjectRetain();
  sub_2409548A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2409548A8();
  swift_bridgeObjectRelease();
  uint64_t v30 = v45;
  uint64_t v31 = sub_240951878();
  if ((v32 & 1) != 0 || v31 < 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v33 = sub_240951888();
    if ((v34 & 1) != 0 || v33 < 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v35 = sub_240951898();
      if ((v36 & 1) != 0 || v35 < 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v37 = sub_2409518A8();
        if ((v38 & 1) != 0 || v37 < 1)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v41);
          return 7549244;
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v41);
          return v43;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v41);
        swift_bridgeObjectRelease();
        return v22;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v41);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v26;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v41);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v30;
}

void sub_240899FF0()
{
  if (!qword_26AFCDFA0)
  {
    sub_240951B38();
    unint64_t v0 = sub_2409555E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDFA0);
    }
  }
}

uint64_t type metadata accessor for CategoryFeedItemViewController()
{
  uint64_t result = qword_26AFD0788;
  if (!qword_26AFD0788) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24089A094()
{
  return swift_initClassMetadata2();
}

id sub_24089A0EC(char a1)
{
  uint64_t v3 = sub_2409526C8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v14 - v8;
  unint64_t v10 = (objc_class *)type metadata accessor for CategoryFeedItemViewController();
  v14.receiver = v1;
  v14.super_class = v10;
  id result = objc_msgSendSuper2(&v14, sel_viewDidAppear_, a1 & 1);
  uint64_t v12 = *(void *)&v1[qword_26AFD0778];
  if (v12)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v12 + *(void *)(*(void *)v12 + 88), v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v7, v3);
    sub_2409529A8();
    uint64_t v13 = (void *)sub_240952998();
    sub_240952988();

    return (id)(*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  return result;
}

void sub_24089A27C(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_24089A0EC(a3);
}

id sub_24089A2D0()
{
  sub_24089D2AC(0, (unint64_t *)&unk_26AFD0660, MEMORY[0x263F45F38], MEMORY[0x263F8D8F0]);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v5 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v23 - v6;
  id result = objc_msgSend(self, sel_isMainThread);
  if (result)
  {
    uint64_t v9 = qword_26AFD0778;
    uint64_t v10 = *(void *)(v0 + qword_26AFD0778);
    if (v10)
    {
      sub_24089D2AC(0, &qword_26AFCF738, MEMORY[0x263F45F38], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for BrowseItem);
      *((void *)&v24 + 1) = v11;
      unint64_t v25 = sub_24089D224();
      *(void *)&long long v23 = v10;
    }
    else
    {
      unint64_t v25 = 0;
      long long v23 = 0u;
      long long v24 = 0u;
    }
    swift_retain();
    sub_240953A28();
    uint64_t v12 = *(void *)(v0 + v9);
    if (v12)
    {
      uint64_t v13 = v12 + *(void *)(*(void *)v12 + 88);
      uint64_t v14 = sub_2409526C8();
      uint64_t v15 = *(void *)(v14 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v7, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
      uint64_t v16 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v17 = (uint64_t (*)(uint64_t))MEMORY[0x263F45F38];
      sub_24089D8D0((uint64_t)v7, (uint64_t)v5, (unint64_t *)&unk_26AFD0660, MEMORY[0x263F45F38]);
      unint64_t v18 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = v16;
      sub_24089D690((uint64_t)v5, v19 + v18, (unint64_t *)&unk_26AFD0660, v17);
      char v20 = *(void (**)(uint64_t (*)(uint64_t), void *))(v12 + *(void *)(*(void *)v12 + 104));
      if (v20)
      {
        uint64_t v21 = (void *)swift_allocObject();
        v21[2] = v12;
        v21[3] = sub_24089D710;
        v21[4] = v19;
        swift_retain_n();
        swift_retain_n();
        sub_24089D800((uint64_t)v20);
        swift_retain();
        v20(sub_24089D7F4, v21);
        swift_release();
        sub_24089D810((uint64_t)v20);
      }
      else
      {
        swift_retain_n();
        swift_retain();
      }
      swift_release();
      swift_release();
      swift_release();
      sub_24089DA40((uint64_t)v7, (unint64_t *)&unk_26AFD0660, MEMORY[0x263F45F38]);
      return (id)swift_release();
    }
    else
    {
      uint64_t v22 = sub_2409526C8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v7, 1, 1, v22);
      return (id)sub_24089DA40((uint64_t)v7, (unint64_t *)&unk_26AFD0660, MEMORY[0x263F45F38]);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24089A720(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = a2;
  uint64_t v5 = sub_2409545F8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240954618();
  uint64_t v25 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24089D2AC(0, (unint64_t *)&unk_26AFD0660, MEMORY[0x263F45F38], MEMORY[0x263F8D8F0]);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t result = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v16 = (char *)&v22 - v15;
  if (a1)
  {
    sub_24083EDCC(0, (unint64_t *)&qword_26AFD07B0);
    uint64_t v22 = sub_240954D78();
    uint64_t v23 = v9;
    uint64_t v17 = (uint64_t (*)(uint64_t))MEMORY[0x263F45F38];
    sub_24089D8D0(a3, (uint64_t)v16, (unint64_t *)&unk_26AFD0660, MEMORY[0x263F45F38]);
    unint64_t v18 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v24;
    sub_24089D690((uint64_t)v16, v19 + v18, (unint64_t *)&unk_26AFD0660, v17);
    aBlock[4] = sub_24089DC08;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24084C358;
    aBlock[3] = &unk_26F4F0D90;
    char v20 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    sub_240954608();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_24089DD9C(&qword_26AFD04E0, MEMORY[0x263F8F030]);
    sub_24089D2AC(0, (unint64_t *)&qword_26AFD0530, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    sub_24089DC9C();
    sub_240955148();
    uint64_t v21 = (void *)v22;
    MEMORY[0x245601070](0, v11, v8, v20);
    _Block_release(v20);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v11, v23);
  }
  return result;
}

void sub_24089AB14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2409526C8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x263F45F38];
  sub_24089DD24(0, &qword_268C91080, (unint64_t *)&unk_26AFD0660, MEMORY[0x263F45F38]);
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v38 - v11;
  sub_24089D2AC(0, (unint64_t *)&unk_26AFD0660, v8, MEMORY[0x263F8D8F0]);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  unint64_t v18 = (char *)&v38 - v17;
  uint64_t v19 = a1 + 16;
  swift_beginAccess();
  uint64_t v20 = MEMORY[0x245602290](v19);
  char v38 = v7;
  if (v20)
  {
    uint64_t v21 = (void *)v20;
    uint64_t v22 = a2;
    uint64_t v23 = *(void *)(v20 + qword_26AFD0778);
    swift_retain();

    if (v23)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v18, v23 + *(void *)(*(void *)v23 + 88), v4);
      swift_release();
      uint64_t v24 = 0;
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v22 = a2;
  }
  uint64_t v24 = 1;
LABEL_6:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v18, v24, 1, v4);
  uint64_t v25 = (uint64_t)&v12[*(int *)(v10 + 48)];
  uint64_t v26 = (uint64_t (*)(uint64_t))MEMORY[0x263F45F38];
  sub_24089D8D0((uint64_t)v18, (uint64_t)v12, (unint64_t *)&unk_26AFD0660, MEMORY[0x263F45F38]);
  sub_24089D8D0(v22, v25, (unint64_t *)&unk_26AFD0660, v26);
  uint64_t v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v27((uint64_t)v12, 1, v4) != 1)
  {
    sub_24089D8D0((uint64_t)v12, (uint64_t)v16, (unint64_t *)&unk_26AFD0660, MEMORY[0x263F45F38]);
    if (v27(v25, 1, v4) != 1)
    {
      char v28 = v38;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v38, v25, v4);
      sub_24089DD9C(&qword_26AFD03E8, MEMORY[0x263F45F38]);
      char v29 = sub_240954778();
      uint64_t v30 = *(void (**)(char *, uint64_t))(v5 + 8);
      v30(v28, v4);
      uint64_t v31 = (uint64_t (*)(uint64_t))MEMORY[0x263F45F38];
      sub_24089DA40((uint64_t)v18, (unint64_t *)&unk_26AFD0660, MEMORY[0x263F45F38]);
      v30(v16, v4);
      sub_24089DA40((uint64_t)v12, (unint64_t *)&unk_26AFD0660, v31);
      if ((v29 & 1) == 0) {
        return;
      }
      goto LABEL_13;
    }
    sub_24089DA40((uint64_t)v18, (unint64_t *)&unk_26AFD0660, MEMORY[0x263F45F38]);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v16, v4);
LABEL_11:
    sub_24089D950((uint64_t)v12, &qword_268C91080, (unint64_t *)&unk_26AFD0660, MEMORY[0x263F45F38]);
    return;
  }
  sub_24089DA40((uint64_t)v18, (unint64_t *)&unk_26AFD0660, MEMORY[0x263F45F38]);
  if (v27(v25, 1, v4) != 1) {
    goto LABEL_11;
  }
  sub_24089DA40((uint64_t)v12, (unint64_t *)&unk_26AFD0660, MEMORY[0x263F45F38]);
LABEL_13:
  swift_beginAccess();
  uint64_t v32 = MEMORY[0x245602290](v19);
  if (v32)
  {
    uint64_t v33 = (void *)v32;
    swift_beginAccess();
    uint64_t v34 = MEMORY[0x245602290](v19);
    if (v34 && (uint64_t v35 = (void *)v34, v36 = *(void *)(v34 + qword_26AFD0778), swift_retain(), v35, v36))
    {
      sub_24089D2AC(0, &qword_26AFCF738, MEMORY[0x263F45F38], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for BrowseItem);
      *((void *)&v40 + 1) = v37;
      unint64_t v41 = sub_24089D224();
      *(void *)&long long v39 = v36;
    }
    else
    {
      unint64_t v41 = 0;
      long long v39 = 0u;
      long long v40 = 0u;
    }
    sub_240953A28();
  }
}

id sub_24089B0BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2409540C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v71 = (char *)v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24089D2AC(0, &qword_26AFCF740, MEMORY[0x263F45E28], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v65 = (char *)v57 - v6;
  uint64_t v7 = sub_240952518();
  uint64_t v63 = *(void *)(v7 - 8);
  uint64_t v64 = v7;
  uint64_t v8 = *(void *)(v63 + 64);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  MEMORY[0x270FA5388](v9);
  uint64_t v67 = (char *)v57 - v10;
  uint64_t v73 = sub_2409526C8();
  uint64_t v69 = *(void *)(v73 - 8);
  uint64_t v11 = *(void *)(v69 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v73);
  uint64_t v66 = (char *)v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v68 = (char *)v57 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v57 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v57 - v18;
  sub_240953A48();
  uint64_t v20 = v75;
  if (v75)
  {
    uint64_t v61 = v2;
    int64_t v62 = (char *)v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v60 = v3;
    uint64_t v21 = sub_2408304E8(v74, v75);
    uint64_t v22 = *(void *)(v20 - 8);
    uint64_t v72 = v0;
    uint64_t v23 = v22;
    MEMORY[0x270FA5388](v21);
    uint64_t v25 = (char *)v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v23 + 16))(v25);
    sub_24089D310((uint64_t)v74, (uint64_t (*)(void))sub_24089D370);
    uint64_t v26 = sub_240953BB8();
    unint64_t v28 = v27;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v20);
    uint64_t v1 = v72;
    unint64_t v70 = v28;
    if (v28 >> 60 != 15)
    {
      sub_24089DD9C((unint64_t *)&unk_26AFCF750, MEMORY[0x263F45F38]);
      uint64_t v29 = v73;
      sub_240951778();
      uint64_t v59 = v19;
      uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
      v30(v17, v19, v29);
      uint64_t v31 = *MEMORY[0x263F45E40];
      uint64_t v32 = v63;
      uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 104);
      uint64_t v34 = v67;
      uint64_t v61 = v26;
      uint64_t v35 = v64;
      v33(v67, v31, v64);
      sub_240952A98();
      unint64_t v71 = (char *)sub_240952A88();
      v30(v68, v17, v29);
      uint64_t v60 = sub_240952608();
      uint64_t v58 = v36;
      v30(v66, v17, v29);
      uint64_t v37 = v72;
      uint64_t v38 = v35;
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v62, v34, v35);
      uint64_t v39 = v69;
      unint64_t v40 = (*(unsigned __int8 *)(v69 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
      unint64_t v41 = (v11 + *(unsigned __int8 *)(v32 + 80) + v40) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
      uint64_t v42 = swift_allocObject();
      *(void *)(v42 + 16) = v71;
      unint64_t v43 = v42 + v40;
      uint64_t v44 = v39;
      v57[0] = *(void *)(v39 + 32);
      v57[1] = v39 + 32;
      uint64_t v45 = v73;
      ((void (*)(unint64_t, char *, uint64_t))v57[0])(v43, v66, v73);
      uint64_t v46 = v38;
      (*(void (**)(unint64_t, char *, uint64_t))(v32 + 32))(v42 + v41, v62, v38);
      swift_retain();
      uint64_t v47 = (uint64_t)v65;
      uint64_t v48 = v67;
      sub_240952A78();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v48, v46);
      uint64_t v49 = *(void (**)(char *, uint64_t))(v44 + 8);
      v49(v17, v45);
      sub_24089D2AC(0, &qword_26AFCF738, MEMORY[0x263F45F38], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for BrowseItem);
      uint64_t v50 = swift_allocObject();
      uint64_t v51 = v50 + *(void *)(*(void *)v50 + 112);
      uint64_t v52 = sub_2409524D8();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v51, 1, 1, v52);
      ((void (*)(uint64_t, char *, uint64_t))v57[0])(v50 + *(void *)(*(void *)v50 + 88), v68, v45);
      uint64_t v53 = (uint64_t *)(v50 + *(void *)(*(void *)v50 + 96));
      uint64_t v54 = v58;
      *uint64_t v53 = v60;
      v53[1] = v54;
      uint64_t v55 = (void (**)())(v50 + *(void *)(*(void *)v50 + 104));
      *uint64_t v55 = sub_24089D56C;
      v55[1] = (void (*)())v42;
      sub_24089D690(v47, v50 + *(void *)(*(void *)v50 + 120), &qword_26AFCF740, MEMORY[0x263F45E28]);
      swift_release();
      sub_240849C34(v61, v70);
      v49(v59, v45);
      *(void *)(v37 + qword_26AFD0778) = v50;
      swift_retain_n();
      swift_release();
      sub_24089A2D0();
      return (id)swift_release_n();
    }
  }
  else
  {
    sub_24089D310((uint64_t)v74, (uint64_t (*)(void))sub_24089D370);
  }
  *(void *)(v1 + qword_26AFD0778) = 0;
  swift_release();
  return sub_24089A2D0();
}

uint64_t sub_24089BB28(uint64_t a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for CategoryFeedItemViewController();
  objc_msgSendSuper2(&v4, sel_traitCollectionDidChange_, a1);
  if (*(void *)&v1[qword_26AFD0778])
  {
    sub_24089D2AC(0, &qword_26AFCF738, MEMORY[0x263F45F38], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for BrowseItem);
    sub_24089D224();
  }
  swift_retain();
  return sub_240953A28();
}

void sub_24089BBE8(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  sub_24089BB28((uint64_t)a3);
}

uint64_t sub_24089BC54(uint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v65 = (uint8_t *)a1;
  uint64_t v3 = sub_2409540C8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v59 - v8;
  uint64_t v10 = sub_2409526C8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v59 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v59 - v18;
  uint64_t v20 = *(void *)&v2[qword_26AFD0778];
  if (v20)
  {
    int64_t v62 = v9;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v17, v20 + *(void *)(*(void *)v20 + 88), v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v19, v17, v10);
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v14, *MEMORY[0x263F45F20], v10);
    sub_24089DD9C(&qword_26AFCEC90, MEMORY[0x263F45F38]);
    sub_240954968();
    sub_240954968();
    if (v68[0] == v66[0] && v68[1] == v66[1]) {
      char v21 = 1;
    }
    else {
      char v21 = sub_240955618();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v33 = *(void (**)(char *, uint64_t))(v11 + 8);
    v33(v14, v10);
    if (v21)
    {
      if (qword_26AFD0648 != -1) {
        swift_once();
      }
      uint64_t v34 = (void *)static NSNotificationName.showAllHealthRecordsCategories;
      id v35 = objc_allocWithZone((Class)sub_240953658());
      id v36 = v34;
      uint64_t v37 = (void *)sub_240953648();
      sub_24083EDCC(0, &qword_268C91088);
      uint64_t v38 = (void *)sub_240954CA8();
      objc_msgSend(v38, sel_addOperation_, v37);

      return ((uint64_t (*)(char *, uint64_t))v33)(v19, v10);
    }
    else
    {
      uint64_t v61 = (uint64_t (*)(char *, uint64_t))v33;
      uint64_t v63 = v4;
      uint64_t v64 = v3;
      sub_240952D78();
      uint64_t v39 = (void *)sub_240952D68();
      sub_240952808();
      unint64_t v40 = (void *)sub_2409527D8();
      id v60 = v2;
      uint64_t result = sub_240953A48();
      uint64_t v41 = v69;
      if (v69)
      {
        uint64_t v42 = sub_2408304E8(v68, v69);
        uint64_t v43 = *(void *)(v41 - 8);
        MEMORY[0x270FA5388](v42);
        uint64_t v45 = (char *)&v59 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v43 + 16))(v45);
        uint64_t v46 = (void *)sub_240953B98();
        (*(void (**)(char *, uint64_t))(v43 + 8))(v45, v41);
        uint64_t v47 = (void *)sub_2409527E8();

        sub_2408371B8((uint64_t)v68);
        uint64_t v48 = (void *)sub_240952D48();

        if (v48)
        {
          sub_24089DDE4((uint64_t)v65, (uint64_t)v68, (uint64_t (*)(void))sub_24085776C);
          uint64_t v49 = v69;
          if (v69)
          {
            uint64_t v50 = sub_2408304E8(v68, v69);
            uint64_t v51 = *(void *)(v49 - 8);
            MEMORY[0x270FA5388](v50);
            uint64_t v53 = (char *)&v59 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *))(v51 + 16))(v53);
            uint64_t v54 = sub_2409555F8();
            (*(void (**)(char *, uint64_t))(v51 + 8))(v53, v49);
            sub_2408371B8((uint64_t)v68);
          }
          else
          {
            uint64_t v54 = 0;
          }
          objc_msgSend(v60, sel_showViewController_sender_, v48, v54);

          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v55 = v62;
          sub_240954088();
          uint64_t v56 = sub_2409540B8();
          os_log_type_t v57 = sub_240954C18();
          if (os_log_type_enabled(v56, v57))
          {
            uint64_t v58 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v58 = 0;
            _os_log_impl(&dword_240818000, v56, v57, "Unable to create category view controller.", v58, 2u);
            MEMORY[0x2456021C0](v58, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v63 + 8))(v55, v64);
        }
        return v61(v19, v10);
      }
      else
      {
        __break(1u);
      }
    }
  }
  else
  {
    sub_240954088();
    uint64_t v22 = v2;
    uint64_t v23 = sub_2409540B8();
    os_log_type_t v24 = sub_240954C18();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v64 = v3;
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v63 = v4;
      uint64_t v27 = v26;
      uint64_t v67 = v26;
      *(_DWORD *)uint64_t v25 = 136446210;
      unint64_t v65 = v25 + 4;
      sub_240953A48();
      sub_24089DDE4((uint64_t)v68, (uint64_t)v66, (uint64_t (*)(void))sub_24089D370);
      sub_24089D370();
      sub_240955658();
      id v28 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_240955138();
      swift_unknownObjectRelease();
      uint64_t v29 = sub_240954808();
      unint64_t v31 = v30;
      sub_24089D310((uint64_t)v68, (uint64_t (*)(void))sub_24089D370);
      v68[0] = sub_2408370E4(v29, v31, &v67);
      sub_2409550B8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240818000, v23, v24, "Unable to present category room: %{public}s", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v27, -1, -1);
      MEMORY[0x2456021C0](v25, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v7, v64);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
  }
  return result;
}

uint64_t sub_24089C524(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v4 = a1;
    swift_unknownObjectRetain();
    sub_240955138();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
    id v5 = a1;
  }
  sub_24089BC54((uint64_t)v7);

  return sub_24089D310((uint64_t)v7, (uint64_t (*)(void))sub_24085776C);
}

id sub_24089C5A8(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&v3[qword_26AFD0778] = 0;
  uint64_t v6 = qword_26AFD0780;
  sub_240951798();
  swift_allocObject();
  uint64_t v7 = v3;
  *(void *)&v3[v6] = sub_240951788();

  if (a2)
  {
    uint64_t v8 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = 0;
  }
  v11.receiver = v7;
  v11.super_class = (Class)type metadata accessor for CategoryFeedItemViewController();
  id v9 = objc_msgSendSuper2(&v11, sel_initWithNibName_bundle_, v8, a3);

  return v9;
}

id sub_24089C68C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    uint64_t v5 = sub_2409547C8();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  id v8 = a4;
  return sub_24089C5A8(v5, v7, a4);
}

id sub_24089C6EC(char *a1, uint64_t a2, void *a3)
{
  *(void *)&a1[qword_26AFD0778] = 0;
  uint64_t v5 = qword_26AFD0780;
  sub_240951798();
  swift_allocObject();
  id v6 = a3;
  uint64_t v7 = a1;
  *(void *)&a1[v5] = sub_240951788();

  v10.receiver = v7;
  v10.super_class = (Class)type metadata accessor for CategoryFeedItemViewController();
  id v8 = objc_msgSendSuper2(&v10, sel_initWithCoder_, v6);

  return v8;
}

uint64_t sub_24089C79C()
{
  swift_release();

  return swift_release();
}

id sub_24089C7DC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CategoryFeedItemViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24089C814()
{
  swift_release();

  return swift_release();
}

uint64_t sub_24089C860()
{
  return type metadata accessor for CategoryFeedItemViewController();
}

uint64_t sub_24089C868(void *a1)
{
  return sub_24089D06C(a1);
}

uint64_t sub_24089C88C@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 1;
  uint64_t v2 = *MEMORY[0x263F440D8];
  uint64_t v3 = sub_240953A18();
  id v4 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_24089C908(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v51 = a4;
  uint64_t v52 = a3;
  uint64_t v6 = sub_2409524D8();
  uint64_t v48 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v47 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2409540C8();
  uint64_t v49 = *(void *)(v8 - 8);
  uint64_t v50 = v8;
  MEMORY[0x270FA5388](v8);
  objc_super v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_super v11 = (uint64_t (*)(uint64_t))MEMORY[0x263F45E28];
  sub_24089DD24(0, &qword_26AFCF748, &qword_26AFCF740, MEMORY[0x263F45E28]);
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v46 - v14;
  sub_24089D820();
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (uint64_t *)((char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24089D2AC(0, &qword_26AFCF740, v11, MEMORY[0x263F8D8F0]);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  os_log_type_t v24 = (char *)&v46 - v23;
  sub_24089DDE4(a1, (uint64_t)v18, (uint64_t (*)(void))sub_24089D820);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    id v36 = (uint64_t (*)(uint64_t))MEMORY[0x263F45E28];
    sub_24089D690((uint64_t)v18, (uint64_t)v24, &qword_26AFCF740, MEMORY[0x263F45E28]);
    uint64_t v37 = a2 + *(void *)(*(void *)a2 + 112);
    swift_beginAccess();
    uint64_t v38 = (uint64_t)&v15[*(int *)(v13 + 48)];
    sub_24089D8D0(v37, (uint64_t)v15, &qword_26AFCF740, v36);
    sub_24089D8D0((uint64_t)v24, v38, &qword_26AFCF740, v36);
    uint64_t v39 = v48;
    unint64_t v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
    if (v40((uint64_t)v15, 1, v6) == 1)
    {
      if (v40(v38, 1, v6) == 1)
      {
        sub_24089DA40((uint64_t)v15, &qword_26AFCF740, MEMORY[0x263F45E28]);
        uint64_t v41 = 0;
LABEL_15:
        sub_24089DA40((uint64_t)v24, &qword_26AFCF740, MEMORY[0x263F45E28]);
        return v52(v41);
      }
    }
    else
    {
      sub_24089D8D0((uint64_t)v15, (uint64_t)v22, &qword_26AFCF740, MEMORY[0x263F45E28]);
      if (v40(v38, 1, v6) != 1)
      {
        uint64_t v42 = v47;
        (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v47, v38, v6);
        sub_24089DD9C(&qword_268C91078, MEMORY[0x263F45E28]);
        char v43 = sub_240954778();
        uint64_t v44 = *(void (**)(char *, uint64_t))(v39 + 8);
        v44(v42, v6);
        v44(v22, v6);
        sub_24089DA40((uint64_t)v15, &qword_26AFCF740, MEMORY[0x263F45E28]);
        if (v43)
        {
          uint64_t v41 = 0;
          goto LABEL_15;
        }
LABEL_14:
        swift_beginAccess();
        sub_24089D9AC((uint64_t)v24, v37);
        swift_endAccess();
        uint64_t v41 = 1;
        goto LABEL_15;
      }
      (*(void (**)(char *, uint64_t))(v39 + 8))(v22, v6);
    }
    sub_24089D950((uint64_t)v15, &qword_26AFCF748, &qword_26AFCF740, MEMORY[0x263F45E28]);
    goto LABEL_14;
  }
  uint64_t v54 = *v18;
  uint64_t v25 = (void *)v54;
  sub_2408484BC(0, qword_26AFD07C0);
  swift_willThrowTypedImpl();
  sub_240954048();
  id v26 = v25;
  id v27 = v25;
  id v28 = sub_2409540B8();
  os_log_type_t v29 = sub_240954C18();
  if (os_log_type_enabled(v28, v29))
  {
    unint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    v53[0] = v31;
    *(_DWORD *)unint64_t v30 = 136446210;
    uint64_t v54 = (uint64_t)v25;
    id v32 = v25;
    sub_240955658();
    id v33 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v34 = sub_240954808();
    uint64_t v54 = sub_2408370E4(v34, v35, v53);
    sub_2409550B8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240818000, v28, v29, "Error fetching icon for BrowseItem: %{public}s", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v31, -1, -1);
    MEMORY[0x2456021C0](v30, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v49 + 8))(v10, v50);
  uint64_t v41 = 0;
  return v52(v41);
}

uint64_t sub_24089D06C(void *a1)
{
  uint64_t v3 = sub_2409526C8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v14 - v8;
  v14[3] = sub_24083EDCC(0, (unint64_t *)&qword_268C90A88);
  v14[0] = a1;
  id v10 = a1;
  sub_24089BC54((uint64_t)v14);
  uint64_t result = sub_24089D310((uint64_t)v14, (uint64_t (*)(void))sub_24085776C);
  uint64_t v12 = *(void *)(v1 + qword_26AFD0778);
  if (v12)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v12 + *(void *)(*(void *)v12 + 88), v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v7, v3);
    sub_2409529A8();
    uint64_t v13 = (void *)sub_240952998();
    sub_240952988();

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  return result;
}

unint64_t sub_24089D224()
{
  unint64_t result = qword_26AFCF730;
  if (!qword_26AFCF730)
  {
    sub_24089D2AC(255, &qword_26AFCF738, MEMORY[0x263F45F38], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for BrowseItem);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCF730);
  }
  return result;
}

void sub_24089D2AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_24089D310(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_24089D370()
{
  if (!qword_26AFCF770)
  {
    sub_2408484BC(255, (unint64_t *)&qword_26AFCF760);
    unint64_t v0 = sub_240955098();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF770);
    }
  }
}

unint64_t sub_24089D3D8()
{
  unint64_t result = qword_268C91070;
  if (!qword_268C91070)
  {
    sub_2409526C8();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C91070);
  }
  return result;
}

uint64_t sub_24089D414()
{
  uint64_t v1 = sub_2409526C8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_240952518();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return MEMORY[0x270FA0238](v0, v10, v11);
}

void sub_24089D56C()
{
  sub_2409526C8();
  sub_240952518();

  sub_2408DB0B8();
}

uint64_t sub_24089D654()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24089D690(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_24089D2AC(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_24089D710(char a1)
{
  sub_24089D2AC(0, (unint64_t *)&unk_26AFD0660, MEMORY[0x263F45F38], MEMORY[0x263F8D8F0]);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1
     + ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));

  return sub_24089A720(a1, v4, v5);
}

uint64_t sub_24089D7B4()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24089D7F4(uint64_t a1)
{
  return sub_24089C908(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_24089D800(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_24089D810(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void sub_24089D820()
{
  if (!qword_26AFCF788)
  {
    sub_24089D2AC(255, &qword_26AFCF740, MEMORY[0x263F45E28], MEMORY[0x263F8D8F0]);
    sub_2408484BC(255, qword_26AFD07C0);
    unint64_t v0 = sub_240955758();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF788);
    }
  }
}

uint64_t sub_24089D8D0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_24089D2AC(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_24089D950(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_24089DD24(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_24089D9AC(uint64_t a1, uint64_t a2)
{
  sub_24089D2AC(0, &qword_26AFCF740, MEMORY[0x263F45E28], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_24089DA40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_24089D2AC(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_24089DAB4()
{
  sub_24089D2AC(0, (unint64_t *)&unk_26AFD0660, MEMORY[0x263F45F38], MEMORY[0x263F8D8F0]);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  uint64_t v5 = sub_2409526C8();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

void sub_24089DC08()
{
  sub_24089D2AC(0, (unint64_t *)&unk_26AFD0660, MEMORY[0x263F45F38], MEMORY[0x263F8D8F0]);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  sub_24089AB14(v3, v4);
}

unint64_t sub_24089DC9C()
{
  unint64_t result = qword_26AFD0540;
  if (!qword_26AFD0540)
  {
    sub_24089D2AC(255, (unint64_t *)&qword_26AFD0530, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFD0540);
  }
  return result;
}

void sub_24089DD24(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_24089D2AC(255, a3, a4, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_24089DD9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24089DDE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24089DE4C(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v16 = result + 56;
  uint64_t v3 = 1 << *(unsigned char *)(result + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(result + 56);
  int64_t v17 = (unint64_t)(v3 + 63) >> 6;
  while (1)
  {
    if (v5)
    {
      unint64_t v6 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v7 = v6 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v17) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v16 + 8 * v13);
    ++v2;
    if (!v14)
    {
      int64_t v2 = v13 + 1;
      if (v13 + 1 >= v17) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v16 + 8 * v2);
      if (!v14)
      {
        int64_t v2 = v13 + 2;
        if (v13 + 2 >= v17) {
          return swift_release();
        }
        unint64_t v14 = *(void *)(v16 + 8 * v2);
        if (!v14)
        {
          int64_t v2 = v13 + 3;
          if (v13 + 3 >= v17) {
            return swift_release();
          }
          unint64_t v14 = *(void *)(v16 + 8 * v2);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v7 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    uint64_t v8 = *(void *)(v1 + 48) + 88 * v7;
    long long v9 = *(_OWORD *)(v8 + 16);
    v19[0] = *(_OWORD *)v8;
    v19[1] = v9;
    long long v11 = *(_OWORD *)(v8 + 48);
    long long v10 = *(_OWORD *)(v8 + 64);
    uint64_t v12 = *(void *)(v8 + 80);
    void v19[2] = *(_OWORD *)(v8 + 32);
    uint64_t v20 = v12;
    v19[3] = v11;
    v19[4] = v10;
    sub_240865710((uint64_t)v19);
    sub_24094031C(&v18, (uint64_t *)v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v17) {
    return swift_release();
  }
  unint64_t v14 = *(void *)(v16 + 8 * v15);
  if (v14)
  {
    int64_t v2 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v2 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v2 >= v17) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v16 + 8 * v2);
    ++v15;
    if (v14) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_24089E058(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v13 >= v7) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      int64_t v2 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v2);
      if (!v14)
      {
        int64_t v2 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        if (!v14)
        {
          int64_t v2 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v2);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    long long v10 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v9);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_240940118(&v16, v11, v12);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v2 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v15;
    goto LABEL_22;
  }
LABEL_23:

  return swift_release();
}

uint64_t sub_24089E1D8(uint64_t a1, uint64_t a2)
{
  sub_2408A5994();
  uint64_t v5 = v4;
  uint64_t v21 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  int64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408A5C9C(0, &qword_26AFCEF40, (uint64_t (*)(uint64_t))sub_2408A5994, sub_2408A5A7C, MEMORY[0x263EFDB28]);
  uint64_t v9 = v8;
  uint64_t v20 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v12 = sub_24089E540(a1, a2);
  int64_t v13 = self;
  swift_retain();
  id v14 = objc_msgSend(v13, sel_sharedBehavior);
  if (!v14)
  {
    swift_release();
    __break(1u);
    goto LABEL_8;
  }
  int64_t v15 = v14;
  id v16 = objc_msgSend(v14, sel_features);

  if (!v16)
  {
LABEL_8:
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  unsigned __int8 v17 = objc_msgSend(v16, sel_stanley);

  if (v17)
  {
    uint64_t v22 = sub_24089EF80(a1, a2);
    uint64_t v23 = v12;
    sub_2408418D4();
    sub_2408A5A34(&qword_26AFCDCC0, (void (*)(uint64_t))sub_2408418D4);
    sub_2409544E8();
    sub_24083FEFC(0, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
    sub_2408A5A7C();
    sub_2409544F8();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v5);
    sub_2408A5AB0();
    uint64_t v18 = sub_240954498();
    swift_release();
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v9);
    return v18;
  }
  else
  {
    swift_release();
  }
  return v12;
}

uint64_t sub_24089E540(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v59 = a2;
  uint64_t v5 = type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t v60 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v61 = v6;
  uint64_t v63 = (uint64_t)v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_240951C08();
  uint64_t v57 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v56 = (char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408A5B4C(0, &qword_26AFCDAF0, MEMORY[0x263EFDC00]);
  uint64_t v65 = *(void *)(v8 - 8);
  uint64_t v66 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v64 = (char *)v52 - v9;
  sub_2408A6170();
  uint64_t v68 = *(void *)(v10 - 8);
  uint64_t v69 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v67 = (char *)v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408A5C9C(0, &qword_26AFCDB20, (uint64_t (*)(uint64_t))sub_2408A6170, sub_2408A6320, MEMORY[0x263EFDC00]);
  uint64_t v72 = *(void *)(v12 - 8);
  uint64_t v73 = v12;
  MEMORY[0x270FA5388](v12);
  unint64_t v70 = (char *)v52 - v13;
  sub_2408A6354();
  uint64_t v15 = v14;
  uint64_t v74 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  unint64_t v71 = (char *)v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_240951A98();
  uint64_t v54 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_2409525A8();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240951F38();
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v23, *MEMORY[0x263F45EB8], v20);
  uint64_t v62 = a1;
  os_log_type_t v24 = (void *)sub_240951F68();
  uint64_t v25 = (void *)sub_240951C68();
  id v26 = (void *)sub_240952588();
  uint64_t v55 = v27;
  if (v25)
  {
    uint64_t v75 = 0x656C69666F72505BLL;
    unint64_t v76 = 0xE90000000000003ALL;
    v52[1] = v26;
    id v28 = v25;
    uint64_t v53 = v3;
    v52[0] = v28;
    id v29 = objc_msgSend(v28, sel_identifier);
    sub_240951A78();

    sub_240951A48();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v19, v17);
    sub_2409548A8();
    swift_bridgeObjectRelease();
    sub_2409548A8();

    uint64_t v3 = v53;
    unint64_t v30 = v75;
    unint64_t v31 = v76;
  }
  else
  {
    unint64_t v31 = 0x800000024095C1A0;
    unint64_t v30 = 0xD000000000000013;
  }
  uint64_t v75 = v30;
  unint64_t v76 = v31;
  sub_2409548A8();

  swift_bridgeObjectRelease();
  uint64_t v32 = v75;
  unint64_t v33 = v76;
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  type metadata accessor for FeedItemContextChangeGenerator();
  uint64_t v34 = swift_allocObject();
  sub_24083AB20(v77, v34 + 16);
  *(void *)(v34 + 56) = v32;
  *(void *)(v34 + 64) = v33;
  uint64_t v35 = v57;
  uint64_t v36 = (uint64_t)v56;
  uint64_t v37 = v58;
  (*(void (**)(char *, void, uint64_t))(v57 + 104))(v56, *MEMORY[0x263F45568], v58);
  uint64_t v38 = sub_2408E89F8(v36);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v37);
  *(void *)&v77[0] = v38;
  uint64_t v39 = v63;
  sub_24083D3A8(v62, v63, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  unint64_t v40 = (*(unsigned __int8 *)(v60 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  uint64_t v41 = swift_allocObject();
  sub_2408243F8(v39, v41 + v40, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  sub_2408A5BD0();
  sub_240840084(0);
  sub_2408A5C68();
  uint64_t v42 = v64;
  sub_240954548();
  swift_release();
  swift_release();
  char v43 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_240841B6C(0, &qword_26AFCDC88, MEMORY[0x263EFDCF0]);
  sub_2408A6268();
  sub_2408A62DC((unint64_t *)&qword_26AFCDC80, &qword_26AFCDC88, v43);
  uint64_t v44 = v66;
  uint64_t v45 = v67;
  sub_240954508();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v42, v44);
  sub_24083FEFC(0, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
  sub_2408A6320();
  swift_retain();
  uint64_t v46 = v69;
  uint64_t v47 = v70;
  sub_240954548();
  swift_release();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v45, v46);
  *(void *)(swift_allocObject() + 16) = v3;
  sub_2408418D4();
  sub_2408A5E78(&qword_26AFCDB18, &qword_26AFCDB20, (uint64_t (*)(uint64_t))sub_2408A6170, sub_2408A6320);
  sub_2408A5A34(&qword_26AFCDCC0, (void (*)(uint64_t))sub_2408418D4);
  uint64_t v48 = v71;
  uint64_t v49 = v73;
  sub_240954508();
  swift_release();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v47, v49);
  sub_2408A5A34(&qword_26AFCDAB8, (void (*)(uint64_t))sub_2408A6354);
  uint64_t v50 = sub_240954498();
  swift_release();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v48, v15);
  return v50;
}

uint64_t sub_24089EF80(uint64_t a1, uint64_t a2)
{
  uint64_t v54 = a2;
  sub_240864F38();
  uint64_t v64 = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2409540C8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_240951C08();
  uint64_t v53 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408A5B4C(0, &qword_26AFCEF00, MEMORY[0x263EFDB28]);
  uint64_t v56 = *(void *)(v14 - 8);
  uint64_t v57 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v55 = (char *)&v52 - v15;
  sub_2408A5C9C(0, &qword_26AFCF088, (uint64_t (*)(uint64_t))sub_2408A5BD0, sub_2408A5C68, MEMORY[0x263EFDC00]);
  uint64_t v59 = *(void *)(v16 - 8);
  uint64_t v60 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v58 = (char *)&v52 - v17;
  sub_2408A5D50();
  uint64_t v62 = *(void *)(v18 - 8);
  uint64_t v63 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v61 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (void *)sub_240951F68();
  uint64_t v21 = v20;
  if (v20)
  {
    uint64_t v52 = v2;
    id v22 = v20;
    if (objc_msgSend(v22, sel_type) == (id)1)
    {
      sub_240951F38();
      uint64_t v23 = sub_240954838();
      uint64_t v25 = v24;
      type metadata accessor for FeedItemContextChangeGenerator();
      uint64_t v26 = swift_allocObject();
      sub_24083AB20(v65, v26 + 16);
      *(void *)(v26 + 56) = v23;
      *(void *)(v26 + 64) = v25;
      uint64_t v27 = v53;
      (*(void (**)(char *, void, uint64_t))(v53 + 104))(v13, *MEMORY[0x263F45560], v11);
      uint64_t v28 = sub_2408E89F8((uint64_t)v13);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v11);
      *(void *)&v65[0] = v28;
      uint64_t v29 = swift_allocObject();
      uint64_t v30 = v52;
      *(void *)(v29 + 16) = v21;
      *(void *)(v29 + 24) = v30;
      sub_2408A5BD0();
      sub_240840084(0);
      sub_2408A5C68();
      id v31 = v22;
      uint64_t v32 = v55;
      sub_2409544F8();
      swift_release();
      swift_release();
      sub_24083FEFC(0, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
      swift_retain();
      uint64_t v33 = v57;
      uint64_t v34 = v58;
      sub_2409541B8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v32, v33);
      *(void *)(swift_allocObject() + 16) = v30;
      sub_2408418D4();
      sub_2408A5E78(&qword_26AFCF080, &qword_26AFCF088, (uint64_t (*)(uint64_t))sub_2408A5BD0, sub_2408A5C68);
      sub_2408A5A34(&qword_26AFCDCC0, (void (*)(uint64_t))sub_2408418D4);
      uint64_t v36 = v60;
      uint64_t v35 = v61;
      sub_240954508();
      swift_release();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v34, v36);
      sub_2408A5A34(&qword_26AFCEFA0, (void (*)(uint64_t))sub_2408A5D50);
      uint64_t v37 = v63;
      uint64_t v38 = sub_240954498();
      swift_release();

      (*(void (**)(char *, uint64_t))(v62 + 8))(v35, v37);
      return v38;
    }
  }
  sub_240954058();
  id v39 = v21;
  unint64_t v40 = sub_2409540B8();
  os_log_type_t v41 = sub_240954C18();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = swift_slowAlloc();
    uint64_t v62 = v7;
    uint64_t v43 = v42;
    uint64_t v44 = swift_slowAlloc();
    uint64_t v63 = v4;
    uint64_t v61 = (char *)v44;
    *(void *)&v65[0] = v44;
    *(_DWORD *)uint64_t v43 = 136446466;
    uint64_t v66 = sub_2408A5EDC(0);
    sub_2408A5EFC(0, &qword_268C91090, (void (*)(uint64_t))sub_2408A5EDC);
    uint64_t v60 = v8;
    uint64_t v45 = sub_2409547E8();
    uint64_t v66 = sub_2408370E4(v45, v46, (uint64_t *)v65);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v43 + 12) = 2082;
    uint64_t v47 = sub_240951C78();
    uint64_t v66 = sub_2408370E4(v47, v48, (uint64_t *)v65);
    sub_2409550B8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v40, v41, "[%{public}s] Sidebar feed item is not supported for non-primary profile: %{public}s", (uint8_t *)v43, 0x16u);
    uint64_t v49 = v61;
    swift_arrayDestroy();
    uint64_t v4 = v63;
    MEMORY[0x2456021C0](v49, -1, -1);
    MEMORY[0x2456021C0](v43, -1, -1);

    (*(void (**)(char *, uint64_t))(v60 + 8))(v10, v62);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  *(void *)&v65[0] = MEMORY[0x263F8EE78];
  sub_24083FEFC(0, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
  sub_2409543A8();
  sub_2408A5A34((unint64_t *)&qword_26AFCDDD8, (void (*)(uint64_t))sub_240864F38);
  uint64_t v50 = v64;
  uint64_t v38 = sub_240954498();

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v50);
  return v38;
}

uint64_t sub_24089F8E0(uint64_t a1)
{
  uint64_t v2 = sub_2409540C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954098();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_2409540B8();
  os_log_type_t v7 = sub_240954C08();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v25 = v3;
    uint64_t v9 = v8;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v27 = v23;
    *(_DWORD *)uint64_t v9 = 136446466;
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = MEMORY[0x263F45828];
    uint64_t v12 = MEMORY[0x245600C90](v10, MEMORY[0x263F45828]);
    uint64_t v24 = v2;
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    uint64_t v26 = sub_2408370E4(v12, v14, &v27);
    sub_2409550B8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = MEMORY[0x245600C90](v15, v11);
    unint64_t v18 = v17;
    swift_bridgeObjectRelease();
    uint64_t v26 = sub_2408370E4(v16, v18, &v27);
    sub_2409550B8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v6, v7, "Categories: %{public}s, Sidebars: %{public}s", (uint8_t *)v9, 0x16u);
    uint64_t v19 = v23;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v19, -1, -1);
    MEMORY[0x2456021C0](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v24);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  uint64_t v27 = a1;
  swift_bridgeObjectRetain();
  uint64_t v20 = swift_bridgeObjectRetain();
  sub_2408FF258(v20);
  return v27;
}

uint64_t sub_24089FBC8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_24089F8E0(*a1);
  *a2 = result;
  return result;
}

void sub_24089FBF8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = (void *)sub_240951F68();
  sub_24089FCA0(a1, v5);

  if (!v2)
  {
    uint64_t v6 = sub_240951E78();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a2, 0, 1, v6);
  }
}

uint64_t sub_24089FCA0(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_240951C08();
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x270FA5388](v5);
  os_log_type_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2409526C8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  id v31 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)v26 - v12;
  sub_2409517C8();
  swift_allocObject();
  uint64_t v14 = sub_2409517B8();
  uint64_t v34 = v9;
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v29(v13, a1, v8);
  id v30 = a2;
  v26[3] = sub_240894924(a1);
  uint64_t v32 = v15;
  sub_2408A5A34(&qword_26AFD03D8, MEMORY[0x263F45F38]);
  sub_2409517A8();
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v8);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    v26[1] = 0;
    v26[2] = v14;
    type metadata accessor for CategoryFeedItemViewController();
    v26[0] = a1;
    (*(void (**)(char *, void, uint64_t))(v27 + 104))(v7, *MEMORY[0x263F45568], v28);
    id v17 = v30;
    sub_240951CC8();
    uint64_t v18 = v26[0];
    uint64_t v19 = sub_2408A4990(v26[0]);
    uint64_t v20 = (void (*)(char *, void))sub_240951E38();
    sub_24089E058(v19);
    v20(v33, 0);
    sub_240952608();
    sub_240951D78();
    sub_2408A6660(v18);
    sub_240951E58();
    sub_2408A69C0(v18);
    sub_240951DB8();
    uint64_t v21 = v31;
    v29(v31, v18, v8);
    uint64_t v22 = v34;
    int v23 = (*(uint64_t (**)(char *, uint64_t))(v34 + 88))(v21, v8);
    if (v23 != *MEMORY[0x263F45F28] && v23 != *MEMORY[0x263F45EF8] && v23 != *MEMORY[0x263F45F10]) {
      (*(void (**)(char *, uint64_t))(v22 + 8))(v21, v8);
    }
    sub_240951D68();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v13, v8);
  }
}

uint64_t sub_2408A0090@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24082EB5C(0, &qword_26AFCDDD0, (uint64_t (*)(uint64_t))sub_240840084, MEMORY[0x263EFDDF8]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v38 = (char *)&v31 - v7;
  sub_240841B6C(0, &qword_26AFCDFE0, MEMORY[0x263EFDEA0]);
  uint64_t v9 = v8;
  uint64_t v39 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v37 = sub_2409540C8();
  uint64_t v12 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  sub_240954058();
  id v16 = v15;
  id v17 = v15;
  uint64_t v18 = sub_2409540B8();
  os_log_type_t v19 = sub_240954C18();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v36 = a2;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v35 = v5;
    uint64_t v21 = (uint8_t *)v20;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v41 = v32;
    uint64_t v33 = v6;
    *(_DWORD *)uint64_t v21 = 136446210;
    id v31 = v21 + 4;
    uint64_t v40 = (uint64_t)v15;
    id v22 = v15;
    sub_24083F3C0();
    sub_240955658();
    uint64_t v34 = v9;
    id v23 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v24 = sub_240954808();
    uint64_t v40 = sub_2408370E4(v24, v25, &v41);
    uint64_t v6 = v33;
    sub_2409550B8();
    uint64_t v9 = v34;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240818000, v18, v19, "Error making feed item for category, hiding from UI: %{public}s", v21, 0xCu);
    uint64_t v26 = v32;
    a2 = v36;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v26, -1, -1);
    uint64_t v27 = v21;
    uint64_t v5 = v35;
    MEMORY[0x2456021C0](v27, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v37);
  uint64_t v40 = MEMORY[0x263F8EE78];
  sub_240840084(0);
  uint64_t v28 = v38;
  sub_2409543A8();
  sub_24083F3C0();
  sub_240954368();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v28, v5);
  sub_2408A62DC((unint64_t *)&qword_26AFCDFD8, &qword_26AFCDFE0, MEMORY[0x263EFDEA0]);
  uint64_t v29 = sub_240954498();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v11, v9);
  *a2 = v29;
  return result;
}

uint64_t sub_2408A0528@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v8 = sub_2409526C8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F45F08], v8);
  sub_24091E6F8((uint64_t)v11, v12);
  char v14 = (v13 & 1) == 0;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v19 = MEMORY[0x263F8EE88];
  id v15 = a2;
  unint64_t v16 = sub_2408A51DC(v12, v14, a2, &v19, a3);

  *a4 = v16;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2408A0688@<X0>(uint64_t a1@<X0>, int a2@<W1>, void *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v50 = a4;
  uint64_t v51 = a5;
  uint64_t v9 = sub_2409540C8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (void *)((char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24082EB5C(0, &qword_26AFD03B8, MEMORY[0x263F45630], MEMORY[0x263F8D8F0]);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  unint64_t v16 = (char *)v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v43 - v17;
  sub_2408A0BAC(a1, a2, a3, (char *)v43 - v17);
  sub_2408A5FB0((uint64_t)v18, (uint64_t)v16);
  uint64_t v19 = sub_240951E78();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v16, 1, v19) == 1)
  {
    sub_2408A6D00((uint64_t)v16, &qword_26AFD03B8, MEMORY[0x263F45630]);
    return sub_2408A6044((uint64_t)v18, v51);
  }
  uint64_t v47 = v10;
  uint64_t v48 = v9;
  uint64_t v49 = v5;
  uint64_t v21 = sub_240951D98();
  uint64_t v23 = v22;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v16, v19);
  uint64_t v24 = *v50;
  swift_bridgeObjectRetain();
  char v25 = sub_2408A2388(v21, v23, v24);
  swift_bridgeObjectRelease();
  if ((v25 & 1) == 0)
  {
    sub_240940118(v52, v21, v23);
    swift_bridgeObjectRelease();
    return sub_2408A6044((uint64_t)v18, v51);
  }
  uint64_t v26 = v12;
  sub_240954058();
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_2409540B8();
  os_log_type_t v28 = sub_240954C18();
  int v29 = v28;
  BOOL v30 = os_log_type_enabled(v27, v28);
  uint64_t v31 = v47;
  if (v30)
  {
    uint64_t v32 = swift_slowAlloc();
    int v46 = v29;
    uint64_t v33 = v32;
    uint64_t v45 = swift_slowAlloc();
    uint64_t v53 = v45;
    *(_DWORD *)uint64_t v33 = 136446466;
    uint64_t v50 = v26;
    os_log_t v44 = v27;
    v52[0] = sub_2408A5EDC(0);
    sub_2408A5EFC(0, &qword_268C91090, (void (*)(uint64_t))sub_2408A5EDC);
    uint64_t v34 = sub_2409547E8();
    v52[0] = sub_2408370E4(v34, v35, &v53);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2082;
    v43[1] = v33 + 14;
    v52[0] = v21;
    v52[1] = v23;
    swift_bridgeObjectRetain_n();
    sub_240955658();
    id v36 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v37 = sub_2409547E8();
    unint64_t v39 = v38;
    swift_bridgeObjectRelease();
    v52[0] = sub_2408370E4(v37, v39, &v53);
    sub_2409550B8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v40 = v44;
    _os_log_impl(&dword_240818000, v44, (os_log_type_t)v46, "[%{public}s] Duplicated unique identifier for sidebar item found: %{public}s", (uint8_t *)v33, 0x16u);
    uint64_t v41 = v45;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v41, -1, -1);
    MEMORY[0x2456021C0](v33, -1, -1);

    (*(void (**)(uint64_t *, uint64_t))(v31 + 8))(v50, v48);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t *, uint64_t))(v31 + 8))(v26, v48);
  }
  sub_2408A6D00((uint64_t)v18, &qword_26AFD03B8, MEMORY[0x263F45630]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v51, 1, 1, v19);
}

uint64_t sub_2408A0BAC@<X0>(uint64_t a1@<X0>, int a2@<W1>, void *a3@<X2>, char *a4@<X8>)
{
  int v133 = a2;
  uint64_t v153 = a4;
  uint64_t v6 = sub_2409540C8();
  uint64_t v150 = *(void *)(v6 - 8);
  uint64_t v151 = (void (*)(char *, char *, uint64_t))v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v148 = (char *)v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v114 - v9;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24082EB5C(0, &qword_26AFCE9A0, type metadata accessor for AccountSidebarContentConfigurationModel, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v134 = (uint64_t)v114 - v13;
  uint64_t v14 = type metadata accessor for AccountSidebarContentConfigurationModel(0);
  uint64_t v126 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v137 = (void *)((char *)v114 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24082EB5C(0, &qword_26AFCECA0, MEMORY[0x263F43640], v11);
  MEMORY[0x270FA5388](v16 - 8);
  unint64_t v131 = (char *)v114 - v17;
  uint64_t v18 = sub_2409535F8();
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v129 = (uint64_t)v114 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = sub_240953A98();
  uint64_t v127 = *(void *)(v128 - 8);
  MEMORY[0x270FA5388](v128);
  uint64_t v139 = (char *)v114 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_240953788();
  uint64_t v144 = *(void *)(v146 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v146);
  uint64_t v23 = (char *)v114 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  unint64_t v130 = (char *)v114 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v125 = (char *)v114 - v26;
  uint64_t v27 = sub_2409526C8();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  id v147 = (char *)v114 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v124 = (char *)v114 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  int64_t v138 = (char *)v114 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v140 = (uint64_t)v114 - v36;
  MEMORY[0x270FA5388](v35);
  unint64_t v38 = (char *)v114 - v37;
  uint64_t v39 = sub_2409528B8();
  uint64_t v142 = *(void *)(v39 - 8);
  uint64_t v143 = (void (*)(void, void))v39;
  MEMORY[0x270FA5388](v39);
  uint64_t v141 = (char *)v114 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = sub_240951E78();
  uint64_t v154 = *(void *)(v152 - 8);
  uint64_t v41 = MEMORY[0x270FA5388](v152);
  unint64_t v132 = (char *)v114 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  unint64_t v136 = (char *)v114 - v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  uint64_t v47 = (char *)v114 - v46;
  MEMORY[0x270FA5388](v45);
  uint64_t v135 = (char *)v114 - v48;
  uint64_t v49 = type metadata accessor for HealthRecordsSidebarActionHandlerData(0);
  MEMORY[0x270FA5388](v49);
  uint64_t v149 = (uint64_t)v114 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    uint64_t v145 = v27;
    id v51 = a3;
    if (objc_msgSend(v51, sel_type) == (id)1)
    {
      uint64_t v119 = v14;
      uint64_t v120 = v23;
      uint64_t v121 = a3;
      id v122 = v51;
      uint64_t v52 = v28 + 16;
      uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16);
      uint64_t v54 = v28;
      uint64_t v55 = v145;
      v53(v149, a1, v145);
      sub_2409517C8();
      swift_allocObject();
      sub_2409517B8();
      sub_2408A5A34(&qword_26AFCE308, (void (*)(uint64_t))type metadata accessor for HealthRecordsSidebarActionHandlerData);
      uint64_t v56 = sub_2409517A8();
      uint64_t v123 = v54;
      uint64_t v118 = v56;
      unint64_t v115 = v70;
      swift_release();
      uint64_t v116 = v52;
      uint64_t v117 = (void (*)(char *, uint64_t, uint64_t))v53;
      v53((uint64_t)v38, a1, v55);
      unint64_t v71 = *(uint64_t (**)(char *, uint64_t))(v54 + 88);
      v114[1] = v54 + 88;
      v114[0] = v71;
      int v72 = v71(v38, v55);
      if (v72 == *MEMORY[0x263F45F00])
      {
        (*(void (**)(char *, uint64_t))(v54 + 96))(v38, v55);
        uint64_t v74 = v141;
        uint64_t v73 = v142;
        uint64_t v75 = v143;
        (*(void (**)(char *, char *, void (*)(void, void)))(v142 + 32))(v141, v38, v143);
        uint64_t v76 = sub_240952868();
        if (v76)
        {
          uint64_t v77 = (void *)v76;
          type metadata accessor for HealthRecordsSidebarActionHandler(0);
          uint64_t v78 = v144;
          uint64_t v79 = v125;
          uint64_t v80 = v146;
          (*(void (**)(char *, void, uint64_t))(v144 + 104))(v125, *MEMORY[0x263F43CA0], v146);
          unint64_t v81 = v115;
          sub_2408A6118(v118, v115);
          sub_2408A5A34(&qword_26AFCE2B0, (void (*)(uint64_t))type metadata accessor for HealthRecordsSidebarActionHandler);
          sub_240951CD8();
          uint64_t v140 = a1;
          sub_240849C48(v118, v81);

          (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v80);
          (*(void (**)(char *, void))(v142 + 8))(v141, v143);
          unint64_t v107 = *(void (**)(char *, char *, uint64_t))(v154 + 32);
          unint64_t v108 = v135;
          uint64_t v109 = v135;
          uint64_t v110 = v47;
LABEL_27:
          uint64_t v68 = v152;
          uint64_t v151 = v107;
          v107(v109, v110, v152);
          uint64_t v67 = v153;
          goto LABEL_28;
        }
        (*(void (**)(char *, void))(v73 + 8))(v74, v75);
        uint64_t v54 = v123;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v54 + 8))(v38, v55);
      }
      uint64_t v82 = v140;
      (*(void (**)(uint64_t, void, uint64_t))(v54 + 104))(v140, *MEMORY[0x263F45F08], v55);
      sub_2408A5A34(&qword_26AFCEC90, MEMORY[0x263F45F38]);
      sub_240954968();
      sub_240954968();
      if (v157[0] == v155 && v157[1] == v156) {
        char v83 = 1;
      }
      else {
        char v83 = sub_240955618();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v84 = v123;
      uint64_t v85 = *(void (**)(uint64_t, uint64_t))(v123 + 8);
      v85(v82, v55);
      if (v83)
      {
        uint64_t v86 = v138;
        v117(v138, a1, v55);
        uint64_t v142 = sub_240952608();
        uint64_t v143 = v85;
        uint64_t v141 = v87;
        sub_2408C5B10(v129);
        uint64_t v88 = sub_2409535B8();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v131, 1, 1, v88);
        sub_240953A88();
        v143(v86, v55);
        sub_240952678();
        uint64_t v89 = v144;
        uint64_t v90 = v130;
        uint64_t v91 = v146;
        (*(void (**)(char *, void, uint64_t))(v144 + 104))(v130, *MEMORY[0x263F43CA0], v146);
        sub_240951CF8();
        uint64_t v140 = a1;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v89 + 8))(v90, v91);
        (*(void (**)(char *, uint64_t))(v127 + 8))(v139, v128);
        unint64_t v108 = v135;
        uint64_t v68 = v152;
        uint64_t v151 = *(void (**)(char *, char *, uint64_t))(v154 + 32);
        v151(v135, v136, v152);
        uint64_t v67 = v153;
        unint64_t v81 = v115;
LABEL_28:
        uint64_t v111 = v140;
        uint64_t v112 = sub_2408A4990(v140);
        uint64_t v113 = (void (*)(uint64_t *, void))sub_240951E38();
        sub_24089E058(v112);
        v113(v157, 0);
        sub_240952608();
        sub_240951D78();
        sub_2408A4E60(v111);
        sub_240951E58();

        sub_240849C48(v118, v81);
        sub_24083B054(v149, type metadata accessor for HealthRecordsSidebarActionHandlerData);
        v151(v67, v108, v68);
        uint64_t v66 = 0;
        return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v154 + 56))(v67, v66, 1, v68);
      }
      uint64_t v92 = v144;
      if (v133)
      {
        uint64_t v93 = v124;
        v117(v124, a1, v55);
        int v94 = ((uint64_t (*)(char *, uint64_t))v114[0])(v93, v55);
        if (v94 != *MEMORY[0x263F45F30])
        {
          unint64_t v97 = v137;
          uint64_t v98 = v126;
          if (v94 == *MEMORY[0x263F45F10])
          {
            uint64_t v96 = 2;
          }
          else
          {
            v85((uint64_t)v124, v55);
            uint64_t v96 = 0;
          }
          goto LABEL_26;
        }
        (*(void (**)(char *, uint64_t))(v84 + 96))(v93, v55);
        sub_240894CA4();
        swift_bridgeObjectRelease();
        uint64_t v95 = sub_240951A98();
        (*(void (**)(char *, uint64_t))(*(void *)(v95 - 8) + 8))(v93, v95);
        uint64_t v96 = 2;
      }
      else
      {
        uint64_t v96 = 0;
      }
      unint64_t v97 = v137;
      uint64_t v98 = v126;
LABEL_26:
      uint64_t v99 = (uint64_t)v138;
      v117(v138, a1, v55);
      AccountSidebarContentConfigurationModel.init(browseCategory:indentationLevel:)(v99, v96, (uint64_t)v97);
      uint64_t v143 = (void (*)(void, void))type metadata accessor for AccountSidebarContentConfigurationProvider(0);
      uint64_t v100 = v134;
      sub_24083D3A8((uint64_t)v97, v134, type metadata accessor for AccountSidebarContentConfigurationModel);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v98 + 56))(v100, 0, 1, v119);
      uint64_t v101 = a1;
      uint64_t v142 = *v97;
      type metadata accessor for HealthRecordsSidebarActionHandler(0);
      uint64_t v102 = v118;
      unint64_t v103 = v115;
      sub_2408A6118(v118, v115);
      swift_bridgeObjectRetain();
      uint64_t v140 = v101;
      uint64_t v141 = (char *)sub_240952678();
      uint64_t v104 = v92;
      unint64_t v105 = v120;
      (*(void (**)(char *, void, uint64_t))(v92 + 104))(v120, *MEMORY[0x263F43CA0], v146);
      sub_2408A5A34(&qword_26AFCEB28, (void (*)(uint64_t))type metadata accessor for AccountSidebarContentConfigurationProvider);
      sub_2408A5A34(&qword_26AFCE2B0, (void (*)(uint64_t))type metadata accessor for HealthRecordsSidebarActionHandler);
      unint64_t v106 = v132;
      sub_240951CE8();
      swift_bridgeObjectRelease();
      sub_240849C48(v102, v103);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v104 + 8))(v105, v146);
      sub_2408A6D00(v100, &qword_26AFCE9A0, type metadata accessor for AccountSidebarContentConfigurationModel);
      sub_24083B054((uint64_t)v137, type metadata accessor for AccountSidebarContentConfigurationModel);
      unint64_t v107 = *(void (**)(char *, char *, uint64_t))(v154 + 32);
      unint64_t v81 = v103;
      unint64_t v108 = v135;
      uint64_t v109 = v135;
      uint64_t v110 = v106;
      goto LABEL_27;
    }
  }
  sub_240954058();
  id v57 = a3;
  uint64_t v58 = sub_2409540B8();
  os_log_type_t v59 = sub_240954C18();
  if (os_log_type_enabled(v58, v59))
  {
    uint64_t v60 = swift_slowAlloc();
    uint64_t v61 = swift_slowAlloc();
    v157[0] = v61;
    *(_DWORD *)uint64_t v60 = 136446466;
    uint64_t v155 = sub_2408A60F8(0);
    sub_2408A5EFC(0, &qword_268C910A0, (void (*)(uint64_t))sub_2408A60F8);
    uint64_t v62 = sub_2409547E8();
    uint64_t v155 = sub_2408370E4(v62, v63, v157);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v60 + 12) = 2082;
    uint64_t v64 = sub_240951C78();
    uint64_t v155 = sub_2408370E4(v64, v65, v157);
    sub_2409550B8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v58, v59, "[%{public}s] Sidebar feed item is not supported for non-primary profile: %{public}s", (uint8_t *)v60, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v61, -1, -1);
    MEMORY[0x2456021C0](v60, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v150 + 8))(v10, v151);
  uint64_t v66 = 1;
  uint64_t v68 = v152;
  uint64_t v67 = v153;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v154 + 56))(v67, v66, 1, v68);
}

uint64_t sub_2408A2388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_2409556F8();
    sub_240954868();
    uint64_t v6 = sub_240955748();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_240955618() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_240955618() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_2408A24C0@<X0>(void **a1@<X0>, const char *a2@<X2>, uint64_t *a3@<X8>)
{
  unint64_t v38 = a2;
  sub_240864F38();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_2409540C8();
  uint64_t v10 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  BOOL v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  sub_240954058();
  id v14 = v13;
  id v15 = v13;
  uint64_t v16 = sub_2409540B8();
  os_log_type_t v17 = sub_240954C18();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v35 = v7;
    uint64_t v19 = v18;
    uint64_t v34 = swift_slowAlloc();
    uint64_t v41 = v34;
    *(_DWORD *)uint64_t v19 = 136446466;
    uint64_t v36 = v6;
    uint64_t v40 = sub_2408A5EDC(0);
    sub_2408A5EFC(0, &qword_268C91090, (void (*)(uint64_t))sub_2408A5EDC);
    uint64_t v20 = sub_2409547E8();
    uint64_t v37 = a3;
    uint64_t v40 = sub_2408370E4(v20, v21, &v41);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2082;
    uint64_t v33 = v19 + 14;
    uint64_t v40 = (uint64_t)v13;
    id v22 = v13;
    id v23 = v13;
    sub_24083F3C0();
    sub_240955658();
    id v24 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v25 = sub_2409547E8();
    unint64_t v27 = v26;

    uint64_t v28 = v25;
    uint64_t v6 = v36;
    uint64_t v40 = sub_2408370E4(v28, v27, &v41);
    sub_2409550B8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240818000, v16, v17, v38, (uint8_t *)v19, 0x16u);
    uint64_t v29 = v34;
    a3 = v37;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v29, -1, -1);
    uint64_t v30 = v19;
    uint64_t v7 = v35;
    MEMORY[0x2456021C0](v30, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v39);
  uint64_t v40 = MEMORY[0x263F8EE78];
  sub_24083FEFC(0, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
  sub_2409543A8();
  sub_2408A5A34((unint64_t *)&qword_26AFCDDD8, (void (*)(uint64_t))sub_240864F38);
  uint64_t v31 = sub_240954498();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *a3 = v31;
  return result;
}

uint64_t sub_2408A28F8()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HealthRecords17CategoryGenerator_domain;
  uint64_t v2 = sub_240951F18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_24083B054(v0 + OBJC_IVAR____TtC13HealthRecords17CategoryGenerator_context, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);

  return swift_deallocClassInstance();
}

uint64_t sub_2408A29C4()
{
  return type metadata accessor for CategoryGenerator(0);
}

uint64_t type metadata accessor for CategoryGenerator(uint64_t a1)
{
  return sub_24082A2AC(a1, (uint64_t *)&unk_26AFCFB50);
}

uint64_t type metadata accessor for HealthRecordsSidebarActionHandler(uint64_t a1)
{
  return sub_24082A2AC(a1, qword_26AFCE2B8);
}

uint64_t sub_2408A2A0C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2408A2A4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC13HealthRecords17CategoryGenerator_domain;
  uint64_t v4 = sub_240951F18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_2408A2AC4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = sub_2409526C8();
  uint64_t v19 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v20 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408A71B4(0, &qword_268C910B8, MEMORY[0x263F8E040]);
  uint64_t v7 = v6;
  uint64_t v18 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = type metadata accessor for HealthRecordsSidebarActionHandlerData(0);
  MEMORY[0x270FA5388](v10 - 8);
  BOOL v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408304E8(a1, a1[3]);
  sub_2408A7160();
  sub_240955768();
  if (!v2)
  {
    uint64_t v13 = v18;
    uint64_t v14 = v19;
    sub_2408A5A34((unint64_t *)&unk_26AFCF750, MEMORY[0x263F45F38]);
    sub_2409554F8();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v7);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v20, v4);
    sub_2408243F8((uint64_t)v12, v17, type metadata accessor for HealthRecordsSidebarActionHandlerData);
  }
  return sub_2408371B8((uint64_t)a1);
}

uint64_t sub_2408A2D84()
{
  return sub_240955748();
}

uint64_t sub_2408A2DC8()
{
  return sub_240955708();
}

uint64_t sub_2408A2DF0()
{
  return sub_240955748();
}

uint64_t sub_2408A2E30()
{
  return 0x79726F6765746163;
}

uint64_t sub_2408A2E48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x79726F6765746163 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_240955618();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2408A2EE0(uint64_t a1)
{
  unint64_t v2 = sub_2408A7160();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2408A2F1C(uint64_t a1)
{
  unint64_t v2 = sub_2408A7160();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2408A2F58@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2408A2AC4(a1, a2);
}

uint64_t sub_2408A2F70(void *a1)
{
  sub_2408A71B4(0, &qword_26AFCF3E0, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - v5;
  sub_2408304E8(a1, a1[3]);
  sub_2408A7160();
  sub_240955778();
  sub_2409526C8();
  sub_2408A5A34(&qword_26AFD03D8, MEMORY[0x263F45F38]);
  sub_240955598();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2408A30F8()
{
  uint64_t v1 = sub_2409540C8();
  uint64_t v91 = *(void *)(v1 - 8);
  uint64_t v92 = (void (*)(char *, char *, uint64_t))v1;
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v79 = (char *)&v73 - v5;
  uint64_t v87 = sub_2409526C8();
  uint64_t v90 = *(void *)(v87 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v87);
  uint64_t v78 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  unint64_t v81 = (char *)&v73 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v80 = (char *)&v73 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  char v83 = (char *)&v73 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v82 = (char *)&v73 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v89 = (char *)&v73 - v16;
  sub_24082EB5C(0, &qword_268C910A8, type metadata accessor for HealthRecordsSidebarActionHandlerData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v73 - v18;
  uint64_t v20 = type metadata accessor for HealthRecordsSidebarActionHandlerData(0);
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v88 = (uint64_t)&v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_240953CD8();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v84 = (char *)&v73 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v73 - v27;
  uint64_t v86 = v0;
  sub_240953B38();
  uint64_t v29 = sub_240953CB8();
  unint64_t v31 = v30;
  uint64_t v32 = *(void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v85 = v23;
  v32(v28, v23);
  if (v31 >> 60 != 15)
  {
    uint64_t v77 = v32;
    sub_240951798();
    swift_allocObject();
    sub_240951788();
    sub_2408A5A34(&qword_268C910B0, (void (*)(uint64_t))type metadata accessor for HealthRecordsSidebarActionHandlerData);
    sub_240951778();
    uint64_t v75 = v29;
    unint64_t v76 = v31;
    swift_release();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v19, 0, 1, v20);
    uint64_t v37 = v88;
    sub_2408243F8((uint64_t)v19, v88, type metadata accessor for HealthRecordsSidebarActionHandlerData);
    unint64_t v38 = v89;
    uint64_t v39 = v90 + 16;
    uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v90 + 16);
    uint64_t v41 = v87;
    v40(v89, v37, v87);
    sub_240952D78();
    uint64_t v42 = (void *)sub_240952D68();
    sub_240952808();
    uint64_t v43 = (void *)sub_2409527D8();
    uint64_t v44 = v84;
    sub_240953B38();
    sub_240953CA8();
    v77(v44, v85);
    uint64_t v45 = (void *)sub_240953888();
    swift_release();
    uint64_t v46 = (void *)sub_2409527E8();

    uint64_t v47 = v38;
    uint64_t v48 = sub_240952D48();

    if (!v48)
    {
      uint64_t v53 = v79;
      sub_240954088();
      uint64_t v54 = sub_2409540B8();
      os_log_type_t v55 = sub_240954C18();
      if (os_log_type_enabled(v54, v55))
      {
        uint64_t v56 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v56 = 0;
        _os_log_impl(&dword_240818000, v54, v55, "Unable to create category view controller.", v56, 2u);
        MEMORY[0x2456021C0](v56, -1, -1);
      }
      sub_240849C34(v75, v76);

      (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v91 + 8))(v53, v92);
      (*(void (**)(char *, uint64_t))(v90 + 8))(v47, v41);
      return sub_24083B054(v88, type metadata accessor for HealthRecordsSidebarActionHandlerData);
    }
    uint64_t v92 = (void (*)(char *, char *, uint64_t))v40;
    uint64_t v49 = *MEMORY[0x263F45EF8];
    uint64_t v50 = v82;
    uint64_t v91 = *(void *)(v90 + 104);
    ((void (*)(char *, uint64_t, uint64_t))v91)(v82, v49, v41);
    uint64_t v51 = sub_2408A5A34(&qword_26AFCEC90, MEMORY[0x263F45F38]);
    sub_240954968();
    uint64_t v79 = (char *)v51;
    sub_240954968();
    uint64_t v74 = (void *)v48;
    if (v95 == v93 && v96 == v94) {
      char v52 = 1;
    }
    else {
      char v52 = sub_240955618();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v57 = *(void (**)(char *, uint64_t))(v90 + 8);
    uint64_t v58 = v87;
    v57(v50, v87);
    os_log_type_t v59 = v83;
    uint64_t v60 = v89;
    uint64_t v61 = v92;
    v92(v83, v89, v58);
    if ((v52 & 1) == 0)
    {
      uint64_t v90 = v39;
      ((void (*)(char *, void, uint64_t))v91)(v80, *MEMORY[0x263F45F10], v58);
      sub_240954968();
      sub_240954968();
      if (v95 != v93 || v96 != v94)
      {
        char v68 = sub_240955618();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v58 = v87;
        v57(v80, v87);
        v57(v59, v58);
        unint64_t v63 = v81;
        v92(v81, v89, v58);
        uint64_t v64 = v74;
        if ((v68 & 1) == 0)
        {
          ((void (*)(char *, void, uint64_t))v91)(v78, *MEMORY[0x263F45F28], v58);
          sub_240954968();
          sub_240954968();
          if (v95 != v93 || v96 != v94)
          {
            uint64_t v65 = v58;
            char v69 = sub_240955618();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v57(v78, v65);
            v57(v63, v65);
            if ((v69 & 1) == 0)
            {
              unint64_t v70 = v84;
              uint64_t v71 = v86;
              sub_240953B38();
              int v72 = (void *)sub_240953CC8();
              v77(v70, v85);
              objc_msgSend(v72, sel_showDetailViewController_sender_, v64, v71);
              sub_240849C34(v75, v76);

              goto LABEL_22;
            }
LABEL_21:
            uint64_t v66 = v84;
            sub_240953B38();
            uint64_t v67 = (void *)sub_240953CC8();
            v77(v66, v85);
            objc_msgSend(v67, sel_presentViewController_animated_completion_, v64, 1, 0);
            sub_240849C34(v75, v76);

LABEL_22:
            v57(v89, v65);
            return sub_24083B054(v88, type metadata accessor for HealthRecordsSidebarActionHandlerData);
          }
          swift_bridgeObjectRelease_n();
          v57(v78, v58);
        }
LABEL_20:
        v57(v63, v58);
        uint64_t v65 = v58;
        goto LABEL_21;
      }
      swift_bridgeObjectRelease_n();
      uint64_t v58 = v87;
      v57(v80, v87);
      uint64_t v60 = v89;
      uint64_t v61 = v92;
    }
    v57(v59, v58);
    uint64_t v62 = v81;
    v61(v81, v60, v58);
    unint64_t v63 = v62;
    uint64_t v64 = v74;
    goto LABEL_20;
  }
  sub_240954088();
  uint64_t v33 = sub_2409540B8();
  os_log_type_t v34 = sub_240954C18();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v35 = 0;
    _os_log_impl(&dword_240818000, v33, v34, "Unable to decode and find the correct health records category for sidebar item", v35, 2u);
    MEMORY[0x2456021C0](v35, -1, -1);
  }

  return (*(uint64_t (**)(char *, void (*)(char *, char *, uint64_t)))(v91 + 8))(v4, v92);
}

BOOL sub_2408A3CC8()
{
  unint64_t v58 = sub_2409540C8();
  uint64_t v0 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v2 = (char *)&v46 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_2409526C8();
  uint64_t v56 = *(void *)(v54 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v54);
  uint64_t v49 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v51 = (char *)&v46 - v6;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v50 = (char *)&v46 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v53 = (char *)&v46 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  char v52 = (char *)&v46 - v12;
  MEMORY[0x270FA5388](v11);
  id v57 = (char *)&v46 - v13;
  sub_24082EB5C(0, &qword_268C910A8, type metadata accessor for HealthRecordsSidebarActionHandlerData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v46 - v15;
  uint64_t v17 = type metadata accessor for HealthRecordsSidebarActionHandlerData(0);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v55 = (uint64_t)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_240953CD8();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240953B38();
  uint64_t v24 = sub_240953CB8();
  unint64_t v26 = v25;
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  if (v26 >> 60 == 15)
  {
    sub_240954088();
    uint64_t v27 = sub_2409540B8();
    os_log_type_t v28 = sub_240954C18();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl(&dword_240818000, v27, v28, "Unable to decode and find the correct health records category for sidebar item", v29, 2u);
      MEMORY[0x2456021C0](v29, -1, -1);
    }

    (*(void (**)(char *, unint64_t))(v0 + 8))(v2, v58);
    return 1;
  }
  else
  {
    sub_240951798();
    swift_allocObject();
    sub_240951788();
    sub_2408A5A34(&qword_268C910B0, (void (*)(uint64_t))type metadata accessor for HealthRecordsSidebarActionHandlerData);
    sub_240951778();
    uint64_t v48 = v24;
    unint64_t v58 = v26;
    swift_release();
    char v31 = 1;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v17);
    uint64_t v32 = v55;
    sub_2408243F8((uint64_t)v16, v55, type metadata accessor for HealthRecordsSidebarActionHandlerData);
    uint64_t v33 = v56;
    os_log_type_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 16);
    uint64_t v35 = v32;
    uint64_t v36 = v54;
    v34(v57, v35, v54);
    uint64_t v37 = *MEMORY[0x263F45EF8];
    unint64_t v38 = v52;
    uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 104);
    v47(v52, v37, v36);
    sub_2408A5A34(&qword_26AFCEC90, MEMORY[0x263F45F38]);
    sub_240954968();
    sub_240954968();
    if (v61 != v59 || v62 != v60) {
      char v31 = sub_240955618();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v39 = *(void (**)(char *, uint64_t))(v56 + 8);
    v39(v38, v36);
    uint64_t v40 = v53;
    uint64_t v41 = v57;
    v34(v53, (uint64_t)v57, v36);
    if (v31) {
      goto LABEL_14;
    }
    v47(v50, *MEMORY[0x263F45F10], v36);
    sub_240954968();
    sub_240954968();
    if (v61 == v59 && v62 == v60)
    {
      swift_bridgeObjectRelease_n();
      v39(v50, v36);
      uint64_t v41 = v57;
LABEL_14:
      v39(v40, v36);
      uint64_t v42 = v51;
      v34(v51, (uint64_t)v41, v36);
LABEL_15:
      sub_240849C34(v48, v58);
      v39(v42, v36);
      uint64_t v43 = v41;
LABEL_16:
      v39(v43, v36);
      sub_24083B054(v55, type metadata accessor for HealthRecordsSidebarActionHandlerData);
      return 0;
    }
    LODWORD(v56) = sub_240955618();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v39(v50, v36);
    v39(v40, v36);
    uint64_t v42 = v51;
    uint64_t v41 = v57;
    v34(v51, (uint64_t)v57, v36);
    if (v56) {
      goto LABEL_15;
    }
    uint64_t v44 = v49;
    v47(v49, *MEMORY[0x263F45F28], v36);
    sub_240954968();
    sub_240954968();
    if (v61 == v59 && v62 == v60)
    {
      swift_bridgeObjectRelease_n();
      sub_240849C34(v48, v58);
      v39(v44, v36);
      v39(v42, v36);
      uint64_t v43 = v57;
      goto LABEL_16;
    }
    char v45 = sub_240955618();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_240849C34(v48, v58);
    v39(v44, v36);
    v39(v42, v36);
    v39(v57, v36);
    sub_24083B054(v55, type metadata accessor for HealthRecordsSidebarActionHandlerData);
    return (v45 & 1) == 0;
  }
}

uint64_t sub_2408A4620(uint64_t a1)
{
  uint64_t v2 = sub_240953CD8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v6 = sub_240953B48();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v6;
}

uint64_t sub_2408A4728()
{
  sub_240953B58();

  return swift_deallocClassInstance();
}

uint64_t sub_2408A4758()
{
  return type metadata accessor for HealthRecordsSidebarActionHandler(0);
}

uint64_t sub_2408A4760()
{
  return sub_2408A5A34(&qword_26AFCE2B0, (void (*)(uint64_t))type metadata accessor for HealthRecordsSidebarActionHandler);
}

uint64_t sub_2408A47AC@<X0>(unsigned char *a1@<X8>)
{
  if (sub_2408A3CC8())
  {
    uint64_t v2 = (unsigned int *)MEMORY[0x263F440E0];
  }
  else
  {
    *a1 = 1;
    uint64_t v2 = (unsigned int *)MEMORY[0x263F440D8];
  }
  uint64_t v3 = *v2;
  uint64_t v4 = sub_240953A18();
  uint64_t v5 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 104);

  return v5(a1, v3, v4);
}

uint64_t sub_2408A4848(uint64_t a1)
{
  uint64_t v2 = sub_2409521B8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v14, v2);
      sub_2409402C8((uint64_t)v9, v6);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 - 8))(v9, v2);
      v14 += v15;
      --v10;
    }
    while (v10);
  }
  return result;
}

uint64_t sub_2408A4990(uint64_t a1)
{
  uint64_t v2 = sub_2409528B8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_2409526C8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  int v10 = (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == *MEMORY[0x263F45F00])
  {
    (*(void (**)(unsigned char *, uint64_t))(v7 + 96))(v9, v6);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 32))(v5, v9, v2);
    uint64_t v11 = sub_24090F040();
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    int v12 = v10;
    if (v10 == *MEMORY[0x263F45F30])
    {
      (*(void (**)(unsigned char *, uint64_t))(v7 + 96))(v9, v6);
      sub_240894CA4();
      swift_bridgeObjectRelease();
      sub_24083FEFC(0, (unint64_t *)&qword_26AFD0670, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
      uint64_t inited = swift_initStackObject();
      *(void *)(inited + 32) = 0xD000000000000010;
      *(_OWORD *)(inited + 16) = xmmword_2409562B0;
      *(void *)(inited + 40) = 0x800000024095D390;
      *(void *)(inited + 48) = sub_240952048();
      *(void *)(inited + 56) = v14;
      uint64_t v11 = sub_24093D478(inited);
      swift_setDeallocating();
      swift_arrayDestroy();
      uint64_t v15 = sub_240951A98();
      (*(void (**)(unsigned char *, uint64_t))(*(void *)(v15 - 8) + 8))(v9, v15);
    }
    else if (v10 == *MEMORY[0x263F45F28] {
           || v10 == *MEMORY[0x263F45F20]
    }
           || v10 == *MEMORY[0x263F45EF0]
           || v10 == *MEMORY[0x263F45EF8]
           || v10 == *MEMORY[0x263F45F10])
    {
      sub_24083FEFC(0, (unint64_t *)&qword_26AFD0670, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
      uint64_t v20 = swift_initStackObject();
      *(_OWORD *)(v20 + 16) = xmmword_240956800;
      *(void *)(v20 + 32) = sub_240952048();
      *(void *)(v20 + 40) = v21;
      uint64_t v11 = sub_24093D478(v20);
      swift_setDeallocating();
      swift_arrayDestroy();
    }
    else
    {
      int v22 = *MEMORY[0x263F45F18];
      sub_24083FEFC(0, (unint64_t *)&qword_26AFD0670, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
      if (v12 == v22)
      {
        uint64_t v23 = swift_initStackObject();
        *(_OWORD *)(v23 + 16) = xmmword_240956800;
        *(void *)(v23 + 32) = sub_240952078();
        *(void *)(v23 + 40) = v24;
        uint64_t v11 = sub_24093D478(v23);
        swift_setDeallocating();
        swift_arrayDestroy();
      }
      else
      {
        uint64_t v25 = swift_initStackObject();
        *(_OWORD *)(v25 + 16) = xmmword_240956800;
        *(void *)(v25 + 32) = sub_240952088();
        *(void *)(v25 + 40) = v26;
        uint64_t v11 = sub_24093D478(v25);
        swift_setDeallocating();
        swift_arrayDestroy();
        (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
      }
    }
  }
  return v11;
}

uint64_t sub_2408A4E60(uint64_t a1)
{
  uint64_t v2 = sub_2409528B8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2409526C8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == *MEMORY[0x263F45F00])
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    int v11 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
    if (v11 == *MEMORY[0x263F45FF8]) {
      return 0x8000000000000000;
    }
    if (v11 == *MEMORY[0x263F46000]) {
      return 0x8000000000000001;
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0x7FFFFFFFFFFFFFFDLL;
  }
  else
  {
    int v13 = v10;
    if (v10 == *MEMORY[0x263F45F30])
    {
      (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
      sub_240894CA4();
      swift_bridgeObjectRelease();
      uint64_t v14 = sub_240951A98();
      (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v9, v14);
      return 0x8000000000000003;
    }
    uint64_t result = 0x8000000000000002;
    if (v13 != *MEMORY[0x263F45F28])
    {
      if (v13 == *MEMORY[0x263F45F20])
      {
        return 0x8000000000000003;
      }
      else if (v13 == *MEMORY[0x263F45EF0])
      {
        return 0x7FFFFFFFFFFFFFFELL;
      }
      else if (v13 == *MEMORY[0x263F45F08])
      {
        return 0x8000000000000004;
      }
      else if (v13 != *MEMORY[0x263F45EF8] && v13 != *MEMORY[0x263F45F10])
      {
        if (v13 != *MEMORY[0x263F45F18])
        {
          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
          return 0x8000000000000000;
        }
        return 0x8000000000000001;
      }
    }
  }
  return result;
}

unint64_t sub_2408A51DC(uint64_t a1, char a2, void *a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  sub_24082EB5C(0, &qword_26AFD03B8, MEMORY[0x263F45630], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  int v11 = (char *)&v27 - v10;
  uint64_t v12 = sub_240951E78();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v35 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  char v31 = (char *)&v27 - v16;
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v18 = *(void *)(sub_2409526C8() - 8);
  uint64_t v19 = a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  uint64_t v29 = v13;
  uint64_t v33 = (void (**)(char *, char *, uint64_t))(v13 + 32);
  os_log_type_t v34 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v32 = *(void *)(v18 + 72);
  uint64_t v27 = a1;
  swift_bridgeObjectRetain();
  unint64_t v20 = MEMORY[0x263F8EE78];
  int v21 = a2 & 1;
  uint64_t v30 = a5;
  int v28 = v21;
  do
  {
    sub_2408A0688(v19, v21, v36, v37, (uint64_t)v11);
    if (v5)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v20;
    }
    if ((*v34)(v11, 1, v12) == 1)
    {
      sub_2408A6D00((uint64_t)v11, &qword_26AFD03B8, MEMORY[0x263F45630]);
    }
    else
    {
      int v22 = *v33;
      uint64_t v23 = v31;
      (*v33)(v31, v11, v12);
      v22(v35, v23, v12);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v20 = sub_2408C3044(0, *(void *)(v20 + 16) + 1, 1, v20);
      }
      unint64_t v25 = *(void *)(v20 + 16);
      unint64_t v24 = *(void *)(v20 + 24);
      if (v25 >= v24 >> 1) {
        unint64_t v20 = sub_2408C3044(v24 > 1, v25 + 1, 1, v20);
      }
      *(void *)(v20 + 16) = v25 + 1;
      v22((char *)(v20+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(void *)(v29 + 72) * v25), v35, v12);
      int v21 = v28;
    }
    v19 += v32;
    --v17;
  }
  while (v17);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t *sub_2408A556C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v32 = a2;
  uint64_t v35 = *MEMORY[0x263EF8340];
  uint64_t v31 = *v3;
  uint64_t v30 = sub_240951EF8();
  uint64_t v28 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v26 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_240951F18();
  uint64_t v27 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  unint64_t v25 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a1;
  sub_24083D3A8(a1, (uint64_t)v3 + OBJC_IVAR____TtC13HealthRecords17CategoryGenerator_context, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  sub_24082EB5C(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v8 = v7;
  uint64_t v9 = sub_240951C08();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v24 = v8;
  uint64_t v12 = swift_allocObject();
  long long v23 = xmmword_240956800;
  *(_OWORD *)(v12 + 16) = xmmword_240956800;
  uint64_t v13 = *(void (**)(unint64_t, void, uint64_t))(v10 + 104);
  v13(v12 + v11, *MEMORY[0x263F45568], v9);
  uint64_t v34 = v12;
  id v14 = objc_msgSend(self, sel_sharedBehavior);
  if (!v14)
  {
    __break(1u);
LABEL_7:
    __break(1u);
  }
  uint64_t v15 = v14;
  id v16 = objc_msgSend(v14, sel_features);

  if (!v16) {
    goto LABEL_7;
  }
  unsigned int v17 = objc_msgSend(v16, sel_stanley);

  if (v17)
  {
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = v23;
    v13(v18 + v11, *MEMORY[0x263F45560], v9);
    sub_2408FF0A8(v18);
  }
  uint64_t v19 = v33;
  sub_240951F68();
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v26, *MEMORY[0x263F45688], v30);
  unint64_t v20 = v25;
  sub_240951F08();
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))((uint64_t)v3 + OBJC_IVAR____TtC13HealthRecords17CategoryGenerator_domain, v20, v29);
  uint64_t v21 = sub_24089E1D8(v19, v32);
  sub_24083B054(v19, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  v3[2] = v21;
  return v3;
}

void sub_2408A5994()
{
  if (!qword_26AFCECE8)
  {
    sub_2408418D4();
    sub_2408A5A34(&qword_26AFCDCC0, (void (*)(uint64_t))sub_2408418D4);
    unint64_t v0 = sub_240954118();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCECE8);
    }
  }
}

uint64_t sub_2408A5A34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2408A5A7C()
{
  return sub_2408A5A34(&qword_26AFCECE0, (void (*)(uint64_t))sub_2408A5994);
}

unint64_t sub_2408A5AB0()
{
  unint64_t result = qword_26AFCEF38;
  if (!qword_26AFCEF38)
  {
    sub_2408A5C9C(255, &qword_26AFCEF40, (uint64_t (*)(uint64_t))sub_2408A5994, sub_2408A5A7C, MEMORY[0x263EFDB28]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCEF38);
  }
  return result;
}

void sub_2408A5B4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_2408A5BD0();
    uint64_t v7 = v6;
    sub_240840084(255);
    uint64_t v9 = v8;
    uint64_t v10 = sub_2408A5C68();
    unint64_t v11 = a3(a1, v7, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_2408A5BD0()
{
  if (!qword_26AFCDCF8)
  {
    sub_24082EB5C(255, &qword_26AFCC608, MEMORY[0x263F45F38], MEMORY[0x263F8D488]);
    unint64_t v0 = sub_240954308();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDCF8);
    }
  }
}

uint64_t sub_2408A5C68()
{
  return sub_2408A5A34(&qword_26AFCDCF0, (void (*)(uint64_t))sub_2408A5BD0);
}

void sub_2408A5C9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    sub_24083FEFC(255, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
    uint64_t v11 = v10;
    uint64_t v12 = a4();
    unint64_t v13 = a5(a1, v9, v11, v12);
    if (!v14) {
      atomic_store(v13, a2);
    }
  }
}

void sub_2408A5D50()
{
  if (!qword_26AFCEFA8)
  {
    sub_2408A5C9C(255, &qword_26AFCF088, (uint64_t (*)(uint64_t))sub_2408A5BD0, sub_2408A5C68, MEMORY[0x263EFDC00]);
    sub_2408418D4();
    sub_2408A5E78(&qword_26AFCF080, &qword_26AFCF088, (uint64_t (*)(uint64_t))sub_2408A5BD0, sub_2408A5C68);
    sub_2408A5A34(&qword_26AFCDCC0, (void (*)(uint64_t))sub_2408418D4);
    unint64_t v0 = sub_2409541F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCEFA8);
    }
  }
}

uint64_t sub_2408A5E78(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2408A5C9C(255, a2, a3, a4, MEMORY[0x263EFDC00]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2408A5EDC(uint64_t a1)
{
  return sub_2408A5EFC(a1, &qword_26AFCE378, (void (*)(uint64_t))type metadata accessor for CategoryGenerator);
}

uint64_t sub_2408A5EFC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a2;
  if (!*a2)
  {
    a3(255);
    uint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_2408A5F3C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2408A5F74@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_2408A0528(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_2408A5F7C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2408A5F8C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2408A24C0(a1, "[%{public}s] Unable to compute desired difference for sidebar items for commit: %{public}s", a2);
}

uint64_t sub_2408A5FB0(uint64_t a1, uint64_t a2)
{
  sub_24082EB5C(0, &qword_26AFD03B8, MEMORY[0x263F45630], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2408A6044(uint64_t a1, uint64_t a2)
{
  sub_24082EB5C(0, &qword_26AFD03B8, MEMORY[0x263F45630], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for HealthRecordsSidebarActionHandlerData(uint64_t a1)
{
  return sub_24082A2AC(a1, qword_26AFCE310);
}

uint64_t sub_2408A60F8(uint64_t a1)
{
  return sub_2408A5EFC(a1, &qword_268C91098, MEMORY[0x263F45630]);
}

uint64_t sub_2408A6118(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

void sub_2408A6170()
{
  if (!qword_26AFCDA80)
  {
    sub_2408A5B4C(255, &qword_26AFCDAF0, MEMORY[0x263EFDC00]);
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_240841B6C(255, &qword_26AFCDC88, MEMORY[0x263EFDCF0]);
    sub_2408A6268();
    sub_2408A62DC((unint64_t *)&qword_26AFCDC80, &qword_26AFCDC88, v0);
    unint64_t v1 = sub_2409541F8();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AFCDA80);
    }
  }
}

unint64_t sub_2408A6268()
{
  unint64_t result = qword_26AFCDAE8;
  if (!qword_26AFCDAE8)
  {
    sub_2408A5B4C(255, &qword_26AFCDAF0, MEMORY[0x263EFDC00]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCDAE8);
  }
  return result;
}

uint64_t sub_2408A62DC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_240841B6C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2408A6320()
{
  return sub_2408A5A34(&qword_26AFCDA78, (void (*)(uint64_t))sub_2408A6170);
}

void sub_2408A6354()
{
  if (!qword_26AFCDAC0)
  {
    sub_2408A5C9C(255, &qword_26AFCDB20, (uint64_t (*)(uint64_t))sub_2408A6170, sub_2408A6320, MEMORY[0x263EFDC00]);
    sub_2408418D4();
    sub_2408A5E78(&qword_26AFCDB18, &qword_26AFCDB20, (uint64_t (*)(uint64_t))sub_2408A6170, sub_2408A6320);
    sub_2408A5A34(&qword_26AFCDCC0, (void (*)(uint64_t))sub_2408418D4);
    unint64_t v0 = sub_2409541F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDAC0);
    }
  }
}

uint64_t sub_2408A647C()
{
  uint64_t v1 = (int *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x270FA0238](v0, v4, v5);
}

unint64_t sub_2408A656C@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v6 = *(void *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  uint64_t v7 = *a1;
  v9[2] = v2 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  unint64_t result = sub_2409347CC((void (*)(void))sub_2408A6644, (uint64_t)v9, v7);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_2408A6610()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2408A6620@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2408A24C0(a1, "[%{public}s] Unable to compute desired difference for category items for commit: %{public}s", a2);
}

void sub_2408A6644(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_2408A6660(uint64_t a1)
{
  uint64_t v2 = sub_2409528B8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2409526C8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == *MEMORY[0x263F45F00])
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    int v11 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
    if (v11 == *MEMORY[0x263F45FF8]) {
      return 0x8000000000000000;
    }
    if (v11 == *MEMORY[0x263F46000]) {
      return 0x8000000000000001;
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0x7FFFFFFFFFFFFFFDLL;
  }
  else
  {
    int v13 = v10;
    if (v10 == *MEMORY[0x263F45F30])
    {
      (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
      sub_240894CA4();
      swift_bridgeObjectRelease();
      uint64_t v14 = sub_240951A98();
      (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v9, v14);
      return 0x8000000000000003;
    }
    uint64_t result = 0x8000000000000002;
    if (v13 != *MEMORY[0x263F45F28])
    {
      if (v13 == *MEMORY[0x263F45F20])
      {
        return 0x8000000000000003;
      }
      else if (v13 == *MEMORY[0x263F45EF0])
      {
        return 0x7FFFFFFFFFFFFFFELL;
      }
      else if (v13 != *MEMORY[0x263F45EF8] && v13 != *MEMORY[0x263F45F10])
      {
        if (v13 != *MEMORY[0x263F45F18])
        {
          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
          return 0x8000000000000000;
        }
        return 0x8000000000000001;
      }
    }
  }
  return result;
}

uint64_t sub_2408A69C0(uint64_t a1)
{
  uint64_t v2 = sub_2409528B8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2409526C8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == *MEMORY[0x263F45F00])
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    int v11 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
    if (v11 == *MEMORY[0x263F45FF8] || v11 == *MEMORY[0x263F46000])
    {
      return 8;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return 5;
    }
  }
  else if (v10 == *MEMORY[0x263F45F30])
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    sub_240894CA4();
    swift_bridgeObjectRelease();
    uint64_t v13 = sub_240951A98();
    (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v9, v13);
    return 6;
  }
  else if (v10 == *MEMORY[0x263F45F28] || v10 == *MEMORY[0x263F45F20] || v10 == *MEMORY[0x263F45EF0])
  {
    return 5;
  }
  else if (v10 == *MEMORY[0x263F45EF8] || v10 == *MEMORY[0x263F45F10])
  {
    return 6;
  }
  else if (v10 == *MEMORY[0x263F45F18])
  {
    return 7;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return 13;
  }
}

uint64_t sub_2408A6D00(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_24082EB5C(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2408A6D70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2409526C8();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_2408A6DDC(uint64_t a1)
{
  uint64_t v2 = sub_2409526C8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_2408A6E40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2409526C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_2408A6EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2409526C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_2408A6F08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2409526C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_2408A6F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2409526C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_2408A6FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2408A6FE4);
}

uint64_t sub_2408A6FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2409526C8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_2408A7050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2408A7064);
}

uint64_t sub_2408A7064(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2409526C8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_2408A70D4()
{
  uint64_t result = sub_2409526C8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_2408A7160()
{
  unint64_t result = qword_26AFCE2F0;
  if (!qword_26AFCE2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCE2F0);
  }
  return result;
}

void sub_2408A71B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_2408A7160();
    unint64_t v7 = a3(a1, &type metadata for HealthRecordsSidebarActionHandlerData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for HealthRecordsSidebarActionHandlerData.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for HealthRecordsSidebarActionHandlerData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2408A7308);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthRecordsSidebarActionHandlerData.CodingKeys()
{
  return &type metadata for HealthRecordsSidebarActionHandlerData.CodingKeys;
}

unint64_t sub_2408A7344()
{
  unint64_t result = qword_268C910C0;
  if (!qword_268C910C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C910C0);
  }
  return result;
}

unint64_t sub_2408A739C()
{
  unint64_t result = qword_26AFCE300;
  if (!qword_26AFCE300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCE300);
  }
  return result;
}

unint64_t sub_2408A73F4()
{
  unint64_t result = qword_26AFCE2F8;
  if (!qword_26AFCE2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCE2F8);
  }
  return result;
}

uint64_t sub_2408A7448(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 28));
  swift_bridgeObjectRetain();
  return v2;
}

id sub_2408A7480()
{
  uint64_t v73 = 0;
  v88[1] = *MEMORY[0x263EF8340];
  uint64_t v70 = sub_240951A28();
  uint64_t v69 = *(void *)(v70 - 8);
  uint64_t v1 = MEMORY[0x270FA5388](v70);
  uint64_t v67 = (char *)&v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  char v68 = (char *)&v66 - v3;
  sub_24082EF28(0, (unint64_t *)&qword_268C90E10, &qword_268C90E18);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  char v83 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  int v10 = (char *)&v66 - v9;
  sub_240851D44();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SharedConceptCodedValue(0);
  MEMORY[0x270FA5388](v14);
  uint64_t v79 = (uint64_t *)((char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = v0[5];
  v88[0] = v17;
  uint64_t v87 = MEMORY[0x263F8EE78];
  uint64_t v82 = *(void *)(v17 + 16);
  uint64_t v71 = v0;
  if (v82)
  {
    unint64_t v81 = v17 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v84 = (uint64_t (**)(char *, uint64_t))(v6 + 8);
    uint64_t v85 = v6 + 16;
    uint64_t v80 = *(void *)(v15 + 72);
    swift_bridgeObjectRetain_n();
    uint64_t v18 = 0;
    uint64_t v19 = v79;
    uint64_t v72 = v6;
    uint64_t v74 = v14;
    uint64_t v75 = v13;
    while (1)
    {
      sub_2408A809C(v81 + v80 * v18, (uint64_t)v19, type metadata accessor for SharedConceptCodedValue);
      sub_2408A809C((uint64_t)v19 + *(int *)(v14 + 20), (uint64_t)v13, (uint64_t (*)(void))sub_240851D44);
      sub_24082EF28(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
      uint64_t v21 = v20;
      uint64_t v22 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v13, 1, v20) == 1)
      {
        sub_2408A8104((uint64_t)v13, (uint64_t (*)(void))sub_240851D44);
      }
      else
      {
        long long v23 = (void *)sub_240954658();
        (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v21);
        id v24 = objc_msgSend(v23, sel_currentValue);
        id v25 = objc_msgSend(v24, sel_inspectableValue);

        if (v25)
        {
          id v26 = objc_msgSend(v25, sel_codedQuantityValue);

          uint64_t v19 = v79;
          if (v26)
          {
            id v78 = v26;
            uint64_t v27 = *v79;
            unint64_t v86 = MEMORY[0x263F8EE78];
            uint64_t v28 = *(void *)(v27 + 16);
            if (v28)
            {
              uint64_t v76 = v27;
              uint64_t v77 = v23;
              uint64_t v29 = v27 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
              uint64_t v30 = *(void *)(v6 + 72);
              uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
              swift_bridgeObjectRetain();
              do
              {
                v31(v10, v29, v5);
                sub_240954658();
                uint64_t v32 = (*v84)(v10, v5);
                MEMORY[0x245600C60](v32);
                if (*(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  sub_240954A08();
                }
                sub_240954A28();
                sub_2409549B8();
                v29 += v30;
                --v28;
              }
              while (v28);
              uint64_t v6 = v72;
              long long v23 = v77;
            }
            else
            {
              swift_bridgeObjectRetain();
            }
            swift_bridgeObjectRelease();
            id v33 = objc_msgSend(v23, sel_lowValue);
            id v34 = objc_msgSend(v33, sel_codedQuantityValue);

            id v35 = objc_msgSend(v23, sel_highValue);
            id v36 = objc_msgSend(v35, sel_codedQuantityValue);

            sub_24083EDCC(0, &qword_268C90E18);
            uint64_t v37 = (void *)sub_240954988();
            swift_bridgeObjectRelease();
            unint64_t v38 = self;
            unint64_t v86 = 0;
            uint64_t v39 = v78;
            id v40 = objc_msgSend(v38, sel_chartableCodedQuantityWithCodings_originalCodedQuantity_originalRangeLowCodedQuantity_originalRangeHighCodedQuantity_error_, v37, v78, v34, v36, &v86);

            if (v40)
            {
              id v41 = (id)v86;

              uint64_t v42 = sub_2408A8104((uint64_t)v79, type metadata accessor for SharedConceptCodedValue);
              MEMORY[0x245600C60](v42);
              if (*(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_240954A08();
              }
              sub_240954A28();
              sub_2409549B8();
              uint64_t v14 = v74;
              uint64_t v13 = v75;
              uint64_t v19 = v79;
            }
            else
            {
              uint64_t v43 = v39;
              id v44 = (id)v86;
              char v45 = (void *)sub_2409518E8();

              swift_willThrow();
              uint64_t v19 = v79;
              sub_2408A8104((uint64_t)v79, type metadata accessor for SharedConceptCodedValue);
              uint64_t v73 = 0;
              uint64_t v14 = v74;
              uint64_t v13 = v75;
            }
            goto LABEL_5;
          }
        }
        else
        {

          uint64_t v19 = v79;
        }
      }
      sub_2408A8104((uint64_t)v19, type metadata accessor for SharedConceptCodedValue);
LABEL_5:
      if (++v18 == v82)
      {
        sub_240892074((uint64_t)v88);
        uint64_t v46 = v87;
        uint64_t v0 = v71;
        goto LABEL_25;
      }
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v46 = MEMORY[0x263F8EE78];
LABEL_25:
  sub_240892074((uint64_t)v88);
  uint64_t v87 = *v0;
  unint64_t v86 = MEMORY[0x263F8EE78];
  uint64_t v47 = *(void *)(v87 + 16);
  if (v47)
  {
    uint64_t v85 = v46;
    uint64_t v50 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v49 = v6 + 16;
    uint64_t v48 = v50;
    unint64_t v51 = v87 + ((*(unsigned __int8 *)(v49 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 64));
    uint64_t v52 = *(void *)(v49 + 56);
    uint64_t v53 = (uint64_t (**)(char *, uint64_t))(v49 - 8);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v54 = v83;
      v48(v83, v51, v5);
      sub_240954658();
      uint64_t v55 = (*v53)(v54, v5);
      MEMORY[0x245600C60](v55);
      if (*(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_240954A08();
      }
      sub_240954A28();
      sub_2409549B8();
      v51 += v52;
      --v47;
    }
    while (v47);
    int64_t v56 = v86;
    uint64_t v46 = v85;
  }
  else
  {
    swift_bridgeObjectRetain();
    int64_t v56 = MEMORY[0x263F8EE78];
  }
  sub_240892074((uint64_t)&v87);
  id v57 = v68;
  sub_2409519D8();
  sub_24083EDCC(0, &qword_268C910C8);
  uint64_t v58 = v69;
  uint64_t v59 = v67;
  uint64_t v60 = v70;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v67, v57, v70);
  uint64_t v61 = (uint64_t)v59;
  uint64_t v62 = v73;
  id v63 = sub_2408A7DB8(v56, v46, v61);
  if (v62)
  {

    id v64 = 0;
  }
  else
  {
    id v64 = v63;
  }
  (*(void (**)(char *, uint64_t))(v58 + 8))(v57, v60);
  return v64;
}

id sub_2408A7DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v15[1] = *(id *)MEMORY[0x263EF8340];
  sub_24083EDCC(0, &qword_268C90E18);
  uint64_t v4 = (void *)sub_240954988();
  swift_bridgeObjectRelease();
  sub_24083EDCC(0, &qword_268C910D0);
  uint64_t v5 = (void *)sub_240954988();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)sub_2409519A8();
  v15[0] = 0;
  id v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_setWithMedicalCodings_quantities_date_error_, v4, v5, v6, v15);

  id v8 = v15[0];
  if (v7)
  {
    uint64_t v9 = sub_240951A28();
    int v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    id v11 = v8;
    v10(a3, v9);
  }
  else
  {
    id v12 = v15[0];
    sub_2409518E8();

    swift_willThrow();
    uint64_t v13 = sub_240951A28();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a3, v13);
  }
  return v7;
}

uint64_t sub_2408A7F88()
{
  uint64_t v0 = sub_240952CA8();
  MEMORY[0x270FA5388](v0);
  (*(void (**)(char *, void))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F460D8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_240952FA8();
}

uint64_t sub_2408A8090()
{
  return 2;
}

uint64_t sub_2408A809C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2408A8104(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2408A8164(uint64_t a1)
{
  uint64_t v2 = sub_2409540F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2409540C8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954058();
  sub_2408690E0(a1, (uint64_t)v30);
  int v10 = sub_2409540B8();
  os_log_type_t v11 = sub_240954C38();
  int v12 = v11;
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v24 = v2;
    uint64_t v14 = v13;
    uint64_t v27 = swift_slowAlloc();
    uint64_t v29 = v27;
    *(_DWORD *)uint64_t v14 = 136446466;
    int v25 = v12;
    uint64_t v28 = type metadata accessor for UserDomainConceptPipeline();
    sub_2408A9070(0, &qword_26AFCD0C0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptPipeline);
    uint64_t v15 = sub_2409547E8();
    uint64_t v26 = v6;
    uint64_t v28 = sub_2408370E4(v15, v16, &v29);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2082;
    uint64_t v23 = v14 + 14;
    sub_2408304E8(v30, v30[3]);
    sub_2409540E8();
    sub_24083971C(&qword_26AFCD998, MEMORY[0x263EFD9F0]);
    uint64_t v17 = v24;
    uint64_t v18 = sub_2409555D8();
    unint64_t v20 = v19;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v17);
    uint64_t v28 = sub_2408370E4(v18, v20, &v29);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    sub_2408371B8((uint64_t)v30);
    _os_log_impl(&dword_240818000, v10, (os_log_type_t)v25, "[%{public}s] receivedSubscription %{public}s", (uint8_t *)v14, 0x16u);
    uint64_t v21 = v27;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v21, -1, -1);
    MEMORY[0x2456021C0](v14, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v26);
  }
  else
  {
    sub_2408371B8((uint64_t)v30);

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_2408A84F0(uint64_t a1)
{
  sub_2408A8FD0();
  uint64_t v3 = v2;
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v47 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v46 = (char *)v42 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  int v10 = (char *)v42 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)v42 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v42 - v14;
  uint64_t v16 = sub_2409540C8();
  uint64_t v51 = *(void *)(v16 - 8);
  uint64_t v52 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954058();
  uint64_t v48 = v3;
  uint64_t v19 = *(int *)(v3 + 48);
  uint64_t v20 = sub_240953FE8();
  uint64_t v21 = *(void *)(v20 - 8);
  char v45 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v45(v15, a1, v20);
  uint64_t v22 = *(void **)(a1 + v19);
  *(void *)&v15[v19] = v22;
  sub_24083D410((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(void))sub_2408A8FD0);
  uint64_t v50 = v10;
  sub_240824460((uint64_t)v15, (uint64_t)v10, (uint64_t (*)(void))sub_2408A8FD0);
  id v23 = v22;
  uint64_t v49 = v18;
  uint64_t v24 = sub_2409540B8();
  os_log_type_t v25 = sub_240954BF8();
  int v26 = v25;
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    uint64_t v54 = v44;
    *(_DWORD *)uint64_t v27 = 136446466;
    uint64_t v53 = type metadata accessor for UserDomainConceptPipeline();
    sub_2408A9070(0, &qword_26AFCD0C0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptPipeline);
    uint64_t v28 = sub_2409547E8();
    uint64_t v53 = sub_2408370E4(v28, v29, &v54);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2082;
    v42[1] = v27 + 14;
    os_log_t v43 = v24;
    uint64_t v30 = v48;
    uint64_t v31 = *(int *)(v48 + 48);
    uint64_t v32 = v46;
    v45(v46, (uint64_t)v13, v20);
    id v33 = *(void **)&v13[v31];
    uint64_t v34 = *(int *)(v30 + 48);
    id v35 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    LODWORD(v45) = v26;
    id v36 = v47;
    v35(v47, v32, v20);
    *(void *)&v36[v34] = v33;
    id v37 = v33;
    uint64_t v38 = sub_2409547E8();
    uint64_t v53 = sub_2408370E4(v38, v39, &v54);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    sub_240838594((uint64_t)v50, (uint64_t (*)(void))sub_2408A8FD0);
    sub_240838594((uint64_t)v13, (uint64_t (*)(void))sub_2408A8FD0);
    uint64_t v24 = v43;
    _os_log_impl(&dword_240818000, v43, (os_log_type_t)v45, "[%{public}s] receiveOutput: %{public}s", (uint8_t *)v27, 0x16u);
    uint64_t v40 = v44;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v40, -1, -1);
    MEMORY[0x2456021C0](v27, -1, -1);
  }
  else
  {
    sub_240838594((uint64_t)v50, (uint64_t (*)(void))sub_2408A8FD0);
    sub_240838594((uint64_t)v13, (uint64_t (*)(void))sub_2408A8FD0);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v49, v52);
}

uint64_t sub_2408A8974@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for HealthRecordsGeneratorContext();
  MEMORY[0x270FA5388](v8 - 8);
  int v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2409540C8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954058();
  uint64_t v15 = sub_2409540B8();
  os_log_type_t v16 = sub_240954C08();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v34 = a4;
    uint64_t v18 = v17;
    uint64_t v19 = swift_slowAlloc();
    id v33 = a1;
    uint64_t v20 = v19;
    uint64_t v35 = v19;
    uint64_t v36 = a3;
    *(_DWORD *)uint64_t v18 = 136446466;
    uint64_t v32 = a2;
    swift_getMetatypeMetadata();
    uint64_t v21 = sub_2409547E8();
    uint64_t v36 = sub_2408370E4(v21, v22, &v35);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    uint64_t v36 = type metadata accessor for UDCSnippetGenerator(0);
    sub_2408A9070(0, &qword_26AFCCC68, (void (*)(uint64_t))type metadata accessor for UDCSnippetGenerator);
    uint64_t v23 = sub_2409547E8();
    uint64_t v36 = sub_2408370E4(v23, v24, &v35);
    a2 = v32;
    sub_2409550B8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v15, v16, "[%{public}s]: Emitting %{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    uint64_t v25 = v20;
    a1 = v33;
    MEMORY[0x2456021C0](v25, -1, -1);
    uint64_t v26 = v18;
    a4 = v34;
    MEMORY[0x2456021C0](v26, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_24083D410(a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  uint64_t v27 = type metadata accessor for UDCSnippetGenerator(0);
  swift_allocObject();
  id v28 = a1;
  unint64_t v29 = sub_2408D3DC8((uint64_t)v10, a1);

  a4[3] = v27;
  uint64_t result = sub_24083971C(&qword_26AFCCB88, (void (*)(uint64_t))type metadata accessor for UDCSnippetGenerator);
  a4[4] = result;
  *a4 = v29;
  return result;
}

uint64_t sub_2408A8CC4()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HealthRecords25UserDomainConceptPipeline_domain;
  uint64_t v2 = sub_240951F18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_240838594(v0 + OBJC_IVAR____TtC13HealthRecords25UserDomainConceptPipeline_context, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);

  return swift_deallocClassInstance();
}

uint64_t sub_2408A8D90()
{
  return type metadata accessor for UserDomainConceptPipeline();
}

uint64_t sub_2408A8D98()
{
  uint64_t v1 = (int *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_2408A8E94@<X0>(void *a1@<X1>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_2408A8974(a1, v2 + v6, v7, a2);
}

uint64_t sub_2408A8F48()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2408A8F80(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, void))(v1 + 16);
  sub_2408A8FD0();
  return v3(a1, *(void *)(a1 + *(int *)(v4 + 48)));
}

void sub_2408A8FD0()
{
  if (!qword_26AFCECB0)
  {
    sub_240953FE8();
    sub_240838530(255, (unint64_t *)&qword_26AFD0598, (uint64_t (*)(uint64_t))sub_240898C54, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AFCECB0);
    }
  }
}

uint64_t sub_2408A9070(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a2;
  if (!*a2)
  {
    a3(255);
    uint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t type metadata accessor for LabsOnboardingAppPluginViewController()
{
  uint64_t result = qword_268C910D8;
  if (!qword_268C910D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2408A90FC()
{
  return swift_initClassMetadata2();
}

id sub_2408A913C(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for LabsOnboardingAppPluginViewController();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_2408A9188()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LabsOnboardingAppPluginViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2408A91C0()
{
  return type metadata accessor for LabsOnboardingAppPluginViewController();
}

void sub_2408A91C8(char a1)
{
  uint64_t v3 = sub_2409540C8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (objc_class *)type metadata accessor for NewRecordsFeedItemViewController();
  v12.receiver = v1;
  v12.super_class = v7;
  objc_msgSendSuper2(&v12, sel_viewDidAppear_, a1 & 1);
  sub_240954078();
  uint64_t v8 = sub_2409540B8();
  os_log_type_t v9 = sub_240954C38();
  if (os_log_type_enabled(v8, v9))
  {
    int v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v10 = 0;
    _os_log_impl(&dword_240818000, v8, v9, "New Records tile did appear", v10, 2u);
    MEMORY[0x2456021C0](v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_2409529A8();
  uint64_t v11 = (void *)sub_240952998();
  sub_240952978();
}

void sub_2408A9358(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_2408A91C8(a3);
}

uint64_t sub_2408A93AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_268C910E8;
  swift_beginAccess();
  sub_240869070(v3, (uint64_t)&v8, &qword_268C90810, (unint64_t *)&unk_268C911C0);
  if (!v9)
  {
    sub_240868CBC((uint64_t)&v8);
    uint64_t v4 = sub_240952D78();
    uint64_t v5 = sub_240952D68();
    uint64_t v9 = v4;
    uint64_t v10 = MEMORY[0x263F460E0];
    *(void *)&long long v8 = v5;
    sub_2408690E0((uint64_t)&v8, (uint64_t)v7);
    swift_beginAccess();
    sub_240869144((uint64_t)v7, v3);
    swift_endAccess();
  }
  return sub_24083AB20(&v8, a1);
}

void sub_2408A9490(uint64_t (*a1)(uint64_t a1), uint64_t a2)
{
  unint64_t v39 = a1;
  uint64_t v42 = a2;
  uint64_t v2 = sub_240952B98();
  uint64_t v45 = *(void *)(v2 - 8);
  uint64_t v46 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v44 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408ABB24(0, &qword_26AFCC6A8, MEMORY[0x263F07690]);
  MEMORY[0x270FA5388](v4 - 8);
  os_log_t v43 = (char *)&v37 - v5;
  uint64_t v41 = type metadata accessor for NewRecordsFeedItemViewData();
  uint64_t v6 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  long long v8 = (uint64_t *)((char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = (int *)type metadata accessor for NewRecordsFeedItemData(0);
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v37 - v14;
  sub_2408ABB24(0, &qword_268C91108, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v37 - v17;
  sub_2408ABB24(0, &qword_268C91110, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemViewData);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (void (**)(char *, uint64_t))((char *)&v37 - v20);
  sub_2408ABD48((uint64_t)v39, (uint64_t)v18, &qword_268C91108, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v18, 1, v9) == 1)
  {
    (*(void (**)(void (**)(char *, uint64_t), uint64_t, uint64_t, uint64_t))(v6 + 56))(v21, 1, 1, v41);
  }
  else
  {
    uint64_t v38 = v15;
    sub_2408ABC34((uint64_t)v18, (uint64_t)v15, type metadata accessor for NewRecordsFeedItemData);
    unint64_t v39 = type metadata accessor for NewRecordsFeedItemData;
    sub_2408ABC9C((uint64_t)v15, (uint64_t)v13, type metadata accessor for NewRecordsFeedItemData);
    unint64_t v22 = &v13[v9[5]];
    uint64_t v24 = *(void *)v22;
    uint64_t v23 = *((void *)v22 + 1);
    uint64_t v25 = &v13[v9[6]];
    uint64_t v26 = *((void *)v25 + 1);
    uint64_t v37 = *(void *)v25;
    uint64_t v27 = v6;
    uint64_t v28 = v41;
    unint64_t v29 = (char *)v8 + *(int *)(v41 + 24);
    uint64_t v30 = sub_240951A98();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v29, v13, v30);
    uint64_t v31 = *(void *)&v13[v9[7]];
    *long long v8 = v24;
    v8[1] = v23;
    void v8[2] = v37;
    v8[3] = v26;
    *(void *)((char *)v8 + *(int *)(v28 + 28)) = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v32 = v39;
    sub_2408ABB78((uint64_t)v13, v39);
    sub_2408ABC34((uint64_t)v8, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for NewRecordsFeedItemViewData);
    (*(void (**)(void (**)(char *, uint64_t), void, uint64_t, uint64_t))(v27 + 56))(v21, 0, 1, v28);
    sub_2408ABB78((uint64_t)v38, v32);
  }
  sub_2408DB340(v21);
  sub_2408ABBD8((uint64_t)v21, &qword_268C91110, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemViewData);
  uint64_t v33 = sub_240951AB8();
  uint64_t v34 = (uint64_t)v43;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v43, 1, 1, v33);
  uint64_t v35 = v44;
  sub_240952B88();
  sub_2409535A8();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v35, v46);
  sub_2408ABBD8(v34, &qword_26AFCC6A8, MEMORY[0x263F07690]);
  uint64_t v36 = (void *)sub_240954788();
  swift_bridgeObjectRelease();
  objc_msgSend(v40, sel_setTitle_, v36);
}

uint64_t sub_2408A9A58(void *a1)
{
  sub_240932014(a1);
  sub_2409529A8();
  uint64_t v2 = (void *)sub_240952998();
  sub_240952978();

  v5[3] = sub_240868D30();
  v5[0] = a1;
  id v3 = a1;
  sub_2408AA5D0((uint64_t)v5);
  return sub_2408ABB78((uint64_t)v5, (uint64_t (*)(void))sub_24085776C);
}

uint64_t sub_2408A9AFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for NewRecordsFeedItemData(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408ABB24(0, &qword_268C91108, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v25 - v8;
  sub_2408ABB24(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v25 - v11;
  uint64_t v13 = (uint64_t)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x60);
  swift_beginAccess();
  sub_2408ABD48(v13, (uint64_t)v9, &qword_268C91108, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3))
  {
    sub_2408ABBD8((uint64_t)v9, &qword_268C91108, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
    uint64_t v14 = sub_240951A28();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 1, 1, v14);
  }
  else
  {
    sub_2408ABC9C((uint64_t)v9, (uint64_t)v6, type metadata accessor for NewRecordsFeedItemData);
    sub_2408ABBD8((uint64_t)v9, &qword_268C91108, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
    sub_2408ABD48((uint64_t)&v6[*(int *)(v3 + 32)], (uint64_t)v12, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
    sub_2408ABB78((uint64_t)v6, type metadata accessor for NewRecordsFeedItemData);
    uint64_t v15 = sub_240951A28();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v12, 1, v15) != 1)
    {
      sub_240868FFC();
      uint64_t v19 = a1 + *(int *)(v18 + 48);
      (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a1, v12, v15);
      uint64_t v20 = *MEMORY[0x263F43FB0];
      uint64_t v21 = sub_240953908();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v19, v20, v21);
      uint64_t v17 = (unsigned int *)MEMORY[0x263F43FB8];
      goto LABEL_6;
    }
  }
  uint64_t v17 = (unsigned int *)MEMORY[0x263F43FC0];
LABEL_6:
  uint64_t v22 = *v17;
  uint64_t v23 = sub_240953918();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(a1, v22, v23);
}

void sub_2408A9EFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2409540C8();
  uint64_t v27 = *(void *)(v2 - 8);
  uint64_t v28 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v26 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v25 - v5;
  uint64_t v7 = sub_240953738();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t)v0 + *(void *)((*MEMORY[0x263F8EED0] & *v0) + 0x70);
  swift_beginAccess();
  sub_240869070(v11, (uint64_t)v29, (unint64_t *)&qword_26AFCF770, (unint64_t *)&qword_26AFCF760);
  uint64_t v12 = v30;
  if (v30)
  {
    uint64_t v13 = sub_2408304E8(v29, v30);
    uint64_t v14 = *(void *)(v12 - 8);
    MEMORY[0x270FA5388](v13);
    uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v14 + 16))(v16);
    sub_240953BA8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v12);
    if ((*(unsigned int (**)(char *, uint64_t))(v8 + 88))(v10, v7) == *MEMORY[0x263F43BA0])
    {
      sub_2408371B8((uint64_t)v29);
      sub_240954088();
      uint64_t v17 = sub_2409540B8();
      os_log_type_t v18 = sub_240954C38();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v19 = 0;
        _os_log_impl(&dword_240818000, v17, v18, "User dismissed NewRecords tile", v19, 2u);
        MEMORY[0x2456021C0](v19, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v28);
      v29[0] = v1;
      type metadata accessor for NewRecordsFeedItemViewController();
      sub_2408ABD04((unint64_t *)&unk_268C91118);
      sub_240952CB8();
      sub_2409529A8();
      uint64_t v20 = (void *)sub_240952998();
      sub_240952978();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      sub_2408371B8((uint64_t)v29);
      uint64_t v21 = v26;
      sub_240954088();
      uint64_t v22 = sub_2409540B8();
      os_log_type_t v23 = sub_240954C18();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v24 = 0;
        _os_log_impl(&dword_240818000, v22, v23, "didTapDismis invoked for tile without a dismiss button!", v24, 2u);
        MEMORY[0x2456021C0](v24, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v27 + 8))(v21, v28);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2408AA384()
{
  uint64_t v1 = sub_240953738();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = (uint64_t)v0 + *(void *)((*MEMORY[0x263F8EED0] & *v0) + 0x70);
  swift_beginAccess();
  uint64_t result = sub_240869070(v5, (uint64_t)v15, (unint64_t *)&qword_26AFCF770, (unint64_t *)&qword_26AFCF760);
  uint64_t v7 = v16;
  if (v16)
  {
    uint64_t v8 = sub_2408304E8(v15, v16);
    uint64_t v9 = *(void *)(v7 - 8);
    MEMORY[0x270FA5388](v8);
    uint64_t v11 = &v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(unsigned char *))(v9 + 16))(v11);
    sub_240953BA8();
    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v7);
    int v12 = (*(uint64_t (**)(unsigned char *, uint64_t))(v2 + 88))(v4, v1);
    int v13 = *MEMORY[0x263F43BA0];
    if (v12 != *MEMORY[0x263F43BA0]) {
      (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
    }
    sub_2408371B8((uint64_t)v15);
    return v12 == v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2408AA5D0(uint64_t a1)
{
  uint64_t v48 = a1;
  uint64_t v2 = sub_2409540C8();
  uint64_t v51 = *(void *)(v2 - 8);
  uint64_t v52 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v50 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for NewRecordsFeedItemData(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v49 = (uint64_t)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408ABB24(0, &qword_268C91108, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v46 - v8;
  sub_2408ABB24(0, &qword_26AFCE2A0, MEMORY[0x263F07508]);
  MEMORY[0x270FA5388](v10 - 8);
  int v12 = (char *)&v46 - v11;
  uint64_t v13 = sub_240951A98();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (uint64_t)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x60);
  swift_beginAccess();
  sub_2408ABD48(v17, (uint64_t)v9, &qword_268C91108, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4))
  {
    sub_2408ABBD8((uint64_t)v9, &qword_268C91108, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
LABEL_4:
    sub_2408ABBD8((uint64_t)v12, &qword_26AFCE2A0, MEMORY[0x263F07508]);
    uint64_t v21 = v50;
    sub_240954088();
    uint64_t v22 = sub_2409540B8();
    os_log_type_t v23 = sub_240954C18();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_240818000, v22, v23, "Error tapping on NewRecords feed item without an accountId", v24, 2u);
      MEMORY[0x2456021C0](v24, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v21, v52);
  }
  os_log_type_t v18 = (void *)MEMORY[0x263F8EED0];
  uint64_t v47 = v16;
  uint64_t v19 = v1;
  uint64_t v20 = v49;
  sub_2408ABC9C((uint64_t)v9, v49, type metadata accessor for NewRecordsFeedItemData);
  sub_2408ABBD8((uint64_t)v9, &qword_268C91108, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, v20, v13);
  sub_2408ABB78(v20, type metadata accessor for NewRecordsFeedItemData);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1) {
    goto LABEL_4;
  }
  uint64_t v26 = v13;
  uint64_t v27 = v14;
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  unint64_t v29 = v47;
  v28(v47, v12, v26);
  sub_240952808();
  uint64_t v30 = (void *)sub_2409527D8();
  uint64_t v31 = (uint64_t)v1 + *(void *)((*v18 & *v1) + 0x70);
  swift_beginAccess();
  uint64_t result = sub_240869070(v31, (uint64_t)v53, (unint64_t *)&qword_26AFCF770, (unint64_t *)&qword_26AFCF760);
  uint64_t v32 = v54;
  if (v54)
  {
    uint64_t v33 = sub_2408304E8(v53, v54);
    uint64_t v34 = *(void *)(v32 - 8);
    MEMORY[0x270FA5388](v33);
    uint64_t v36 = (char *)&v46 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v34 + 16))(v36);
    uint64_t v37 = (void *)sub_240953B98();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v32);
    uint64_t v38 = (void *)sub_2409527E8();

    sub_2408371B8((uint64_t)v53);
    sub_2408A93AC((uint64_t)v53);
    sub_2408304E8(v53, v54);
    unint64_t v39 = (void *)sub_240953088();
    sub_2408371B8((uint64_t)v53);
    sub_2408ABC9C(v48, (uint64_t)v53, (uint64_t (*)(void))sub_24085776C);
    uint64_t v40 = v54;
    if (v54)
    {
      uint64_t v41 = sub_2408304E8(v53, v54);
      uint64_t v42 = *(void *)(v40 - 8);
      MEMORY[0x270FA5388](v41);
      uint64_t v44 = (char *)&v46 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v42 + 16))(v44);
      uint64_t v45 = sub_2409555F8();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v40);
      unint64_t v29 = v47;
      sub_2408371B8((uint64_t)v53);
    }
    else
    {
      uint64_t v45 = 0;
    }
    objc_msgSend(v19, sel_showViewController_sender_, v39, v45);

    swift_unknownObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_2408AAD9C(unsigned char *a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    sub_2409547C8();
    uint64_t v6 = &a1[qword_268C910E8];
    *(_OWORD *)uint64_t v6 = 0u;
    *((_OWORD *)v6 + 1) = 0u;
    *((void *)v6 + 4) = 0;
    uint64_t v7 = &a1[qword_268C99168];
    uint64_t v8 = *MEMORY[0x263F43CB0];
    uint64_t v9 = sub_240953798();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
    a1[qword_268C99170] = 1;
    id v10 = a4;
    uint64_t v11 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
  }
  else
  {
    int v12 = &a1[qword_268C910E8];
    *(_OWORD *)int v12 = 0u;
    *((_OWORD *)v12 + 1) = 0u;
    *((void *)v12 + 4) = 0;
    uint64_t v13 = &a1[qword_268C99168];
    uint64_t v14 = *MEMORY[0x263F43CB0];
    uint64_t v15 = sub_240953798();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v13, v14, v15);
    a1[qword_268C99170] = 1;
    id v16 = a4;
    uint64_t v11 = 0;
  }
  v19.receiver = a1;
  v19.super_class = (Class)type metadata accessor for NewRecordsFeedItemViewController();
  id v17 = objc_msgSendSuper2(&v19, sel_initWithNibName_bundle_, v11, a4);

  return v17;
}

id sub_2408AAF40(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = &a1[qword_268C910E8];
  *(_OWORD *)uint64_t v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((void *)v5 + 4) = 0;
  uint64_t v6 = &a1[qword_268C99168];
  uint64_t v7 = *MEMORY[0x263F43CB0];
  uint64_t v8 = sub_240953798();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  a1[qword_268C99170] = 1;
  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for NewRecordsFeedItemViewController();
  return objc_msgSendSuper2(&v10, sel_initWithCoder_, a3);
}

uint64_t sub_2408AB010()
{
  sub_240868CBC(v0 + qword_268C910E8);
  uint64_t v1 = v0 + qword_268C99168;
  uint64_t v2 = sub_240953798();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

id sub_2408AB08C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NewRecordsFeedItemViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2408AB0C4(uint64_t a1)
{
  sub_240868CBC(a1 + qword_268C910E8);
  uint64_t v2 = a1 + qword_268C99168;
  uint64_t v3 = sub_240953798();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

uint64_t type metadata accessor for NewRecordsFeedItemViewController()
{
  uint64_t result = qword_268C910F0;
  if (!qword_268C910F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2408AB190()
{
  uint64_t result = sub_240953798();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_2408AB234()
{
  return type metadata accessor for NewRecordsFeedItemViewController();
}

uint64_t sub_2408AB244@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + qword_268C99168;
  uint64_t v4 = sub_240953798();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_2408AB2BC@<X0>(uint64_t a1@<X8>)
{
  return sub_2408A9AFC(a1);
}

uint64_t sub_2408AB2E0()
{
  return sub_240953C08() & 1;
}

uint64_t sub_2408AB35C@<X0>(char *a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v2 = sub_2409540C8();
  uint64_t v35 = *(void *)(v2 - 8);
  uint64_t v36 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v34 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for NewRecordsFeedItemData(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408ABB24(0, &qword_268C91108, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
  MEMORY[0x270FA5388](v8 - 8);
  objc_super v10 = (char *)&v34 - v9;
  sub_2408ABB24(0, &qword_26AFCE2A0, MEMORY[0x263F07508]);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v37 = (char *)&v34 - v15;
  uint64_t v16 = sub_240951A98();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  objc_super v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x60);
  swift_beginAccess();
  sub_2408ABD48(v20, (uint64_t)v10, &qword_268C91108, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4))
  {
    sub_2408ABBD8((uint64_t)v10, &qword_268C91108, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
    v21(v14, 1, 1, v16);
LABEL_4:
    uint64_t v23 = (uint64_t)v37;
    uint64_t v24 = v38;
    sub_2408ABBD8((uint64_t)v14, &qword_26AFCE2A0, MEMORY[0x263F07508]);
    v21((char *)v23, 1, 1, v16);
    goto LABEL_5;
  }
  sub_2408ABC9C((uint64_t)v10, (uint64_t)v7, type metadata accessor for NewRecordsFeedItemData);
  sub_2408ABBD8((uint64_t)v10, &qword_268C91108, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v7, v16);
  sub_2408ABB78((uint64_t)v7, type metadata accessor for NewRecordsFeedItemData);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v21(v14, 0, 1, v16);
  uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v22(v14, 1, v16) == 1) {
    goto LABEL_4;
  }
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  uint64_t v23 = (uint64_t)v37;
  v32(v37, v14, v16);
  v21((char *)v23, 0, 1, v16);
  unsigned int v33 = v22((char *)v23, 1, v16);
  uint64_t v24 = v38;
  if (v33 != 1)
  {
    v32(v19, (char *)v23, v16);
    v32(v24, v19, v16);
    goto LABEL_8;
  }
LABEL_5:
  sub_2408ABBD8(v23, &qword_26AFCE2A0, MEMORY[0x263F07508]);
  uint64_t v25 = v34;
  sub_240954068();
  uint64_t v26 = sub_2409540B8();
  os_log_type_t v27 = sub_240954C18();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v28 = 0;
    _os_log_impl(&dword_240818000, v26, v27, "NewRecordsFeedItemViewController - Error accessing NewRecordsFeedItemData.accountId", v28, 2u);
    MEMORY[0x2456021C0](v28, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v35 + 8))(v25, v36);
  sub_240951A88();
LABEL_8:
  uint64_t v29 = *MEMORY[0x263F46138];
  uint64_t v30 = sub_240952F68();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v24, v29, v30);
}

uint64_t sub_2408AB950@<X0>(char *a1@<X8>)
{
  return sub_2408AB35C(a1);
}

uint64_t sub_2408AB974()
{
  uint64_t v1 = *v0 + *(void *)((*MEMORY[0x263F8EED0] & *(void *)*v0) + 0x70);
  swift_beginAccess();
  uint64_t result = sub_240869070(v1, (uint64_t)v10, (unint64_t *)&qword_26AFCF770, (unint64_t *)&qword_26AFCF760);
  uint64_t v3 = v11;
  if (v11)
  {
    uint64_t v4 = sub_2408304E8(v10, v11);
    uint64_t v5 = *(void *)(v3 - 8);
    MEMORY[0x270FA5388](v4);
    uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(unsigned char *))(v5 + 16))(v7);
    uint64_t v8 = sub_240953B98();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v3);
    sub_2408371B8((uint64_t)v10);
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2408ABAF0()
{
  return sub_2408ABD04(&qword_268C91100);
}

void sub_2408ABB24(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240955098();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2408ABB78(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2408ABBD8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_2408ABB24(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2408ABC34(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2408ABC9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2408ABD04(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NewRecordsFeedItemViewController();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2408ABD48(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_2408ABB24(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_2408ABDB4(uint64_t a1)
{
  return sub_2408ABE04(a1, 0xD000000000000021, 0x800000024095D510, &qword_26AFD0A50, algn_26AFD0A58);
}

uint64_t sub_2408ABDDC(uint64_t a1)
{
  return sub_2408ABE04(a1, 0xD000000000000029, 0x800000024095D540, &qword_268C99178, &qword_268C99180);
}

uint64_t sub_2408ABE04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  uint64_t v7 = sub_240952B98();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  objc_super v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240878630(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_240951AB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  sub_240952B68();
  uint64_t v15 = sub_2409535A8();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t result = sub_240853DC4((uint64_t)v13);
  *a4 = v15;
  *a5 = v17;
  return result;
}

uint64_t sub_2408ABFB4()
{
  return 0x656C746974;
}

uint64_t sub_2408ABFC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_240955618();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2408AC058(uint64_t a1)
{
  unint64_t v2 = sub_2408AD9BC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2408AC094(uint64_t a1)
{
  unint64_t v2 = sub_2408AD9BC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2408AC0D0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2408ADA10(0, (unint64_t *)&unk_26AFCE088, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v14 - v8;
  sub_2408304E8(a1, a1[3]);
  sub_2408AD9BC();
  sub_240955768();
  if (v2) {
    return sub_2408371B8((uint64_t)a1);
  }
  uint64_t v10 = sub_2409554B8();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t result = sub_2408371B8((uint64_t)a1);
  *a2 = v10;
  a2[1] = v12;
  return result;
}

uint64_t sub_2408AC25C(void *a1)
{
  sub_2408ADA10(0, &qword_26AFCF3F8, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - v5;
  sub_2408304E8(a1, a1[3]);
  sub_2408AD9BC();
  sub_240955778();
  sub_240955558();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2408AC3A8()
{
  sub_240953C88();
  uint64_t result = sub_240953C78();
  qword_26AFCE060 = v1;
  return result;
}

uint64_t sub_2408AC3DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController____lazy_storage___factory;
  swift_beginAccess();
  sub_240869070(v3, (uint64_t)&v8, &qword_268C90810, (unint64_t *)&unk_268C911C0);
  if (!v9)
  {
    sub_240851CE8((uint64_t)&v8, &qword_268C90810, (unint64_t *)&unk_268C911C0);
    uint64_t v4 = sub_240952D78();
    uint64_t v5 = sub_240952D68();
    uint64_t v9 = v4;
    uint64_t v10 = MEMORY[0x263F460E0];
    *(void *)&long long v8 = v5;
    sub_2408690E0((uint64_t)&v8, (uint64_t)v7);
    swift_beginAccess();
    sub_240869144((uint64_t)v7, v3);
    swift_endAccess();
  }
  return sub_24083AB20(&v8, a1);
}

id sub_2408AC4D8()
{
  uint64_t v1 = OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController____lazy_storage___label;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController____lazy_storage___label);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController____lazy_storage___label);
  }
  else
  {
    uint64_t v4 = v0;
    sub_240953808();
    sub_24083EDCC(0, &qword_26AFCF780);
    sub_240954F08();
    id v5 = objc_msgSend(self, sel_linkColor);
    uint64_t v6 = (void *)sub_240954F88();
    objc_msgSend(v6, sel_setLineBreakMode_, 0);
    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v7 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

void sub_2408AC5E8()
{
  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for ClinicalSharingOnboardingTileViewController();
  objc_msgSendSuper2(&v13, sel_viewDidLoad);
  id v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v2 = v1;
  id v3 = objc_msgSend(self, sel_secondarySystemGroupedBackgroundColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v3);

  id v4 = objc_msgSend(v0, sel_view);
  if (!v4)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v5 = v4;
  id v6 = sub_2408AC4D8();
  objc_msgSend(v5, sel_addSubview_, v6);

  id v7 = objc_msgSend(v0, sel_view);
  if (!v7)
  {
LABEL_9:
    __break(1u);
    return;
  }
  id v8 = v7;
  id v9 = objc_msgSend(v7, sel_heightAnchor);

  id v10 = objc_msgSend(v9, sel_constraintGreaterThanOrEqualToConstant_, 44.0);
  objc_msgSend(v10, sel_setActive_, 1);

  id v11 = sub_2408AC4D8();
  id v12 = objc_msgSend(v0, sel_view);
  if (qword_26AFCE070 != -1) {
    swift_once();
  }
  sub_240954E98();
  objc_msgSend(v11, sel_hk_alignConstraintsWithView_insets_, v12);

  sub_2408AC978();
  sub_2408AC81C();
}

void sub_2408AC81C()
{
  sub_2408AD820();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2409562B0;
  *(void *)(v1 + 32) = sub_2409547C8();
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 48) = 0xD000000000000013;
  *(void *)(v1 + 56) = 0x800000024095D570;
  id v3 = (void *)sub_240954988();
  swift_bridgeObjectRelease();
  id v4 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v4)
  {
    uint64_t v5 = sub_2409547C8();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  id v8 = (uint64_t *)(v0 + OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController_baseIdentifier);
  swift_beginAccess();
  *id v8 = v5;
  v8[1] = v7;
  swift_bridgeObjectRelease();
  id v9 = sub_2408AC4D8();
  if (v8[1])
  {
    swift_bridgeObjectRetain();
    id v10 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v10 = 0;
  }
  objc_msgSend(v9, sel_setAccessibilityIdentifier_, v10);
}

uint64_t sub_2408AC978()
{
  swift_getObjectType();
  uint64_t v1 = sub_2409540C8();
  v14[1] = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v2 = v0 + OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController_context;
  swift_beginAccess();
  uint64_t result = sub_240869070(v2, (uint64_t)&v15, (unint64_t *)&qword_26AFCF770, (unint64_t *)&qword_26AFCF760);
  uint64_t v4 = v16;
  if (v16)
  {
    uint64_t v5 = sub_2408304E8(&v15, v16);
    uint64_t v6 = *(void *)(v4 - 8);
    MEMORY[0x270FA5388](v5);
    id v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    uint64_t v9 = sub_240953BB8();
    unint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
    uint64_t result = sub_2408371B8((uint64_t)&v15);
    if (v11 >> 60 != 15)
    {
      sub_240951798();
      swift_allocObject();
      sub_240951788();
      sub_2408AD7CC();
      sub_240951778();
      swift_release();
      id v12 = sub_2408AC4D8();
      objc_super v13 = (void *)sub_240954788();
      swift_bridgeObjectRelease();
      objc_msgSend(v12, sel_setText_, v13);

      return sub_240849C34(v9, v11);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2408ACD5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_240952C68();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(v0, sel_navigationController);
  if (!v6) {
    goto LABEL_4;
  }
  uint64_t v7 = v6;
  id v8 = objc_msgSend(v6, sel_topViewController);

  if (!v8
    || (sub_2408AC3DC((uint64_t)v12),
        sub_2408304E8(v12, v13),
        char v9 = sub_240953098(),
        v8,
        sub_2408371B8((uint64_t)v12),
        (v9 & 1) == 0))
  {
LABEL_4:
    sub_2408AC3DC((uint64_t)v12);
    sub_2408304E8(v12, v13);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F460B0], v2);
    unint64_t v10 = (void *)sub_240953078();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_2408371B8((uint64_t)v12);
    objc_msgSend(v1, sel_showViewController_sender_, v10, v1);
  }
}

id sub_2408ACFC4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = &v3[OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController_context];
  *(_OWORD *)uint64_t v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((void *)v7 + 4) = 0;
  id v8 = &v3[OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController_baseIdentifier];
  *(void *)id v8 = 0;
  *((void *)v8 + 1) = 0;
  char v9 = &v3[OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController____lazy_storage___factory];
  *(_OWORD *)char v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  uint64_t v10 = OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController_profile;
  sub_240952808();
  unint64_t v11 = v3;
  id v12 = (void *)sub_2409527D8();
  uint64_t v13 = sub_2409527A8();

  *(void *)&v4[v10] = v13;
  *(void *)&v11[OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController____lazy_storage___label] = 0;

  if (a2)
  {
    uint64_t v14 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = 0;
  }
  v17.receiver = v11;
  v17.super_class = (Class)type metadata accessor for ClinicalSharingOnboardingTileViewController();
  id v15 = objc_msgSendSuper2(&v17, sel_initWithNibName_bundle_, v14, a3);

  return v15;
}

id sub_2408AD144(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = &v1[OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController_context];
  *(_OWORD *)uint64_t v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((void *)v4 + 4) = 0;
  uint64_t v5 = &v1[OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController_baseIdentifier];
  *(void *)uint64_t v5 = 0;
  *((void *)v5 + 1) = 0;
  id v6 = &v1[OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController____lazy_storage___factory];
  *(_OWORD *)id v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((void *)v6 + 4) = 0;
  uint64_t v7 = OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController_profile;
  sub_240952808();
  id v8 = v1;
  char v9 = (void *)sub_2409527D8();
  uint64_t v10 = sub_2409527A8();

  *(void *)&v2[v7] = v10;
  *(void *)&v8[OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController____lazy_storage___label] = 0;

  v13.receiver = v8;
  v13.super_class = (Class)type metadata accessor for ClinicalSharingOnboardingTileViewController();
  id v11 = objc_msgSendSuper2(&v13, sel_initWithCoder_, a1);

  return v11;
}

id sub_2408AD250()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClinicalSharingOnboardingTileViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ClinicalSharingOnboardingTileViewController()
{
  return self;
}

uint64_t sub_2408AD358@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController_context;
  swift_beginAccess();
  return sub_240869070(v3, a1, (unint64_t *)&qword_26AFCF770, (unint64_t *)&qword_26AFCF760);
}

uint64_t sub_2408AD3C4(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController_context;
  swift_beginAccess();
  sub_24085A89C(a1, v3);
  swift_endAccess();
  sub_2408AC978();
  return sub_240851CE8(a1, (unint64_t *)&qword_26AFCF770, (unint64_t *)&qword_26AFCF760);
}

uint64_t (*sub_2408AD44C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2408AD4AC;
}

uint64_t sub_2408AD4AC(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_2408AC978();
  }
  return result;
}

void sub_2408AD4E0()
{
  uint64_t v1 = *v0;
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46210]), sel_initWithContext_onboardingOptions_sourceIdentifier_profile_existingAccount_, 6, 1, 0, *(void *)((char *)*v0 + OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController_profile), 0);
  objc_msgSend(v2, sel_setOnboardingDelegate_, v1);
  objc_msgSend(v1, sel_presentViewController_animated_completion_, v2, 1, 0);
}

uint64_t sub_2408AD584()
{
  uint64_t v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController_baseIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_2408AD5E0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(*v2 + OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController_baseIdentifier);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2408AD644())()
{
  return j__swift_endAccess;
}

void sub_2408AD6A8(char a1)
{
  id v3 = objc_msgSend(*v1, sel_view);
  if (v3)
  {
    uint64_t v4 = v3;
    if (a1)
    {
      sub_24083EDCC(0, &qword_26AFCF3D0);
      id v5 = (id)sub_240954F68();
    }
    else
    {
      id v5 = objc_msgSend(self, sel_secondarySystemGroupedBackgroundColor);
    }
    id v6 = v5;
    objc_msgSend(v4, sel_setBackgroundColor_);
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_2408AD778()
{
  unint64_t result = qword_26AFCE018;
  if (!qword_26AFCE018)
  {
    type metadata accessor for ClinicalSharingOnboardingTileViewController();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCE018);
  }
  return result;
}

unint64_t sub_2408AD7CC()
{
  unint64_t result = qword_26AFCE080;
  if (!qword_26AFCE080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCE080);
  }
  return result;
}

void sub_2408AD820()
{
  if (!qword_26AFD0670)
  {
    unint64_t v0 = sub_2409555E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD0670);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ClinicalSharingOnboardingTileViewController.ViewModel(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ClinicalSharingOnboardingTileViewController.ViewModel()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for ClinicalSharingOnboardingTileViewController.ViewModel(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ClinicalSharingOnboardingTileViewController.ViewModel(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingOnboardingTileViewController.ViewModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingOnboardingTileViewController.ViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingOnboardingTileViewController.ViewModel()
{
  return &type metadata for ClinicalSharingOnboardingTileViewController.ViewModel;
}

unint64_t sub_2408AD9BC()
{
  unint64_t result = qword_26AFCF7C0;
  if (!qword_26AFCF7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCF7C0);
  }
  return result;
}

void sub_2408ADA10(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_2408AD9BC();
    unint64_t v7 = a3(a1, &type metadata for ClinicalSharingOnboardingTileViewController.ViewModel.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ClinicalSharingOnboardingTileViewController.ViewModel.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2408ADB10);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingOnboardingTileViewController.ViewModel.CodingKeys()
{
  return &type metadata for ClinicalSharingOnboardingTileViewController.ViewModel.CodingKeys;
}

unint64_t sub_2408ADB4C()
{
  unint64_t result = qword_268C911D0;
  if (!qword_268C911D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_268C911D0);
  }
  return result;
}

unint64_t sub_2408ADBA4()
{
  unint64_t result = qword_26AFCF7E8;
  if (!qword_26AFCF7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCF7E8);
  }
  return result;
}

unint64_t sub_2408ADBFC()
{
  unint64_t result = qword_26AFCF7D0[0];
  if (!qword_26AFCF7D0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26AFCF7D0);
  }
  return result;
}

uint64_t static ConceptSharableModelVersioning.delimiter.getter()
{
  return 3815994;
}

uint64_t static ConceptSharableModelVersioning.versionPrefix.getter()
{
  return sub_2409547E8();
}

uint64_t static ConceptSharableModelVersioning.stringIdentifier(for:)()
{
  return 0;
}

uint64_t static ConceptSharableModelVersioning.version(from:)()
{
  swift_getMetatypeMetadata();
  sub_2409547E8();
  sub_2409548A8();
  swift_bridgeObjectRelease();
  char v0 = sub_240954918();
  swift_bridgeObjectRelease();
  if ((v0 & 1) == 0) {
    return 0;
  }
  sub_240864EE4();
  uint64_t v1 = (void *)sub_2409550E8();
  swift_bridgeObjectRelease();
  if (v1[2] != 2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v3 = v1[6];
  uint64_t v2 = v1[7];
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_bridgeObjectRelease();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  if ((v2 & 0x1000000000000000) != 0 || !(v2 & 0x2000000000000000 | v3 & 0x1000000000000000))
  {
    sub_240955298();
    swift_bridgeObjectRelease();
  }
  else
  {
    MEMORY[0x270FA5388](v5);
    if ((v2 & 0x2000000000000000) != 0)
    {
      if (v3 > 0x20u || ((0x100003E01uLL >> v3) & 1) == 0) {
        _swift_stdlib_strtod_clocale();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v3 & 0x1000000000000000) != 0)
      {
        uint64_t v6 = (v2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v7 = v3 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v6 = sub_2409552E8();
      }
      sub_2408ADFC0(v6, v7, (void (*)(uint64_t *__return_ptr))sub_2408AE090);
      swift_bridgeObjectRelease();
    }
  }
  return 0;
}

uint64_t sub_2408ADFC0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

unsigned char *sub_2408AE020@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  BOOL v7 = v6 && (result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

void *sub_2408AE090@<X0>(unsigned char *a1@<X8>)
{
  unint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_2408AE0D4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  *(void *)(swift_allocObject() + 16) = a1;
  sub_240828514(0, &qword_26AFCF318, MEMORY[0x263EFDE20]);
  swift_allocObject();
  id v4 = a1;
  uint64_t result = sub_2409543E8();
  *a2 = result;
  return result;
}

void sub_2408AE178(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_24083F2C0;
  *(void *)(v7 + 24) = v6;
  void v9[4] = sub_2408AFED0;
  _OWORD v9[5] = v7;
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 1107296256;
  v9[2] = sub_2408AE310;
  v9[3] = &unk_26F4F10C0;
  uint64_t v8 = _Block_copy(v9);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_fetchAllAccountsWithCompletion_, v8);
  _Block_release(v8);
}

void sub_2408AE288(void *a1, id a2, void (*a3)(id, uint64_t))
{
  if (a2)
  {
    id v5 = a2;
    a3(a2, 1);
  }
  else
  {
    if (!a1) {
      a1 = (void *)MEMORY[0x263F8EE78];
    }
    a3(a1, 0);
  }
}

uint64_t sub_2408AE310(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  id v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_24083EDCC(0, (unint64_t *)&qword_26AFD05A0);
    uint64_t v4 = sub_240954998();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2408AE3B4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  *(void *)(swift_allocObject() + 16) = a1;
  sub_2408B0008();
  swift_allocObject();
  id v4 = a1;
  uint64_t result = sub_2409543E8();
  *a2 = result;
  return result;
}

void sub_2408AE43C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_24083F2C0;
  *(void *)(v7 + 24) = v6;
  void v9[4] = sub_2408B00FC;
  _OWORD v9[5] = v7;
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 1107296256;
  v9[2] = sub_2408AE310;
  v9[3] = &unk_26F4F12C8;
  uint64_t v8 = _Block_copy(v9);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_fetchAllAccountsWithCompletion_, v8);
  _Block_release(v8);
}

void sub_2408AE54C(unint64_t a1, id a2, void (*a3)(id, uint64_t))
{
  if (a2)
  {
    id v5 = a2;
    a3(a2, 1);

    return;
  }
  if (!a1)
  {
    a3((id)MEMORY[0x263F8EE78], 0);
    return;
  }
  id v12 = (void *)MEMORY[0x263F8EE78];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_2409553D8();
    if (v7) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_8:
      if (v7 < 1)
      {
        __break(1u);
        return;
      }
      for (uint64_t i = 0; i != v7; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v9 = (id)MEMORY[0x2456015B0](i, a1);
        }
        else {
          id v9 = *(id *)(a1 + 8 * i + 32);
        }
        uint64_t v10 = v9;
        if (objc_msgSend(v9, sel_isSharingToProvider))
        {
          sub_2409552F8();
          sub_240955328();
          sub_240955338();
          sub_240955308();
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      id v11 = v12;
      goto LABEL_21;
    }
  }
  swift_bridgeObjectRelease();
  id v11 = (void *)MEMORY[0x263F8EE78];
LABEL_21:
  a3(v11, 0);

  swift_release();
}

uint64_t sub_2408AE754()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  sub_24084097C();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v1;
  *(void *)(v8 + 24) = ObjectType;
  id v9 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
  sub_240828514(0, &qword_26AFCF318, MEMORY[0x263EFDE20]);
  sub_240829E98(&qword_26AFCF310, &qword_26AFCF318, v9);
  id v10 = v1;
  sub_240954418();
  sub_2408285B8(&qword_26AFCF360, (void (*)(uint64_t))sub_24084097C);
  uint64_t v11 = sub_240954498();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v11;
}

uint64_t sub_2408AE918@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24083FAAC(0, &qword_26AFCE168, MEMORY[0x263F45B10], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v37 - v6;
  uint64_t v8 = sub_240953F38();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v41 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24083FAAC(0, &qword_26AFCE278, (uint64_t (*)(uint64_t))sub_24087E864, v4);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (uint64_t *)((char *)&v37 - v12);
  sub_24087E864();
  uint64_t v50 = v14;
  uint64_t v42 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v49 = (uint64_t)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v40 = (uint64_t)&v37 - v17;
  uint64_t v18 = *a1;
  if (!((unint64_t)*a1 >> 62))
  {
    uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v21 = v50;
    if (v19) {
      goto LABEL_3;
    }
LABEL_21:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v25 = MEMORY[0x263F8EE78];
LABEL_22:
    *a2 = v25;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_2409553D8();
  uint64_t v19 = result;
  uint64_t v21 = v50;
  if (!result) {
    goto LABEL_21;
  }
LABEL_3:
  if (v19 >= 1)
  {
    uint64_t v46 = v8;
    uint64_t v22 = 0;
    uint64_t v44 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    unint64_t v45 = v18 & 0xC000000000000001;
    uint64_t v38 = a2;
    unint64_t v39 = (void (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v23 = (void (**)(void *, uint64_t, uint64_t, uint64_t))(v42 + 56);
    uint64_t v24 = (unsigned int (**)(void *, uint64_t, uint64_t))(v42 + 48);
    unint64_t v25 = MEMORY[0x263F8EE78];
    uint64_t v47 = v19;
    uint64_t v48 = v18;
    do
    {
      if (v45) {
        id v26 = (id)MEMORY[0x2456015B0](v22, v18);
      }
      else {
        id v26 = *(id *)(v18 + 8 * v22 + 32);
      }
      os_log_type_t v27 = v26;
      sub_240954D08();
      uint64_t v28 = v46;
      if ((*v44)(v7, 1, v46) == 1)
      {
        sub_240839FCC((uint64_t)v7, &qword_26AFCE168, MEMORY[0x263F45B10]);
        (*v23)(v13, 1, 1, v21);
      }
      else
      {
        unint64_t v43 = v25;
        uint64_t v29 = *v39;
        uint64_t v30 = v41;
        (*v39)(v41, v7, v28);
        uint64_t v31 = (char *)v13 + *(int *)(v50 + 48);
        *uint64_t v13 = v27;
        uint64_t v32 = v30;
        uint64_t v21 = v50;
        v29(v31, v32, v28);
        unint64_t v25 = v43;
        uint64_t v18 = v48;
        (*v23)(v13, 0, 1, v21);
      }
      uint64_t v33 = v47;
      if ((*v24)(v13, 1, v21) == 1)
      {
        sub_240839FCC((uint64_t)v13, &qword_26AFCE278, (uint64_t (*)(uint64_t))sub_24087E864);
      }
      else
      {
        uint64_t v34 = v40;
        sub_2408B0104((uint64_t)v13, v40);
        sub_2408B0104(v34, v49);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v25 = sub_2408C3444(0, *(void *)(v25 + 16) + 1, 1, v25);
        }
        unint64_t v36 = *(void *)(v25 + 16);
        unint64_t v35 = *(void *)(v25 + 24);
        if (v36 >= v35 >> 1) {
          unint64_t v25 = sub_2408C3444(v35 > 1, v36 + 1, 1, v25);
        }
        *(void *)(v25 + 16) = v36 + 1;
        sub_2408B0104(v49, v25+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v42 + 72) * v36);
        uint64_t v18 = v48;
      }
      ++v22;
    }
    while (v33 != v22);
    uint64_t result = swift_bridgeObjectRelease();
    a2 = v38;
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_2408AEE40@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  sub_240828514(0, &qword_26AFCF318, MEMORY[0x263EFDE20]);
  swift_allocObject();
  id v7 = a1;
  uint64_t result = sub_2409543E8();
  *a3 = result;
  return result;
}

void sub_2408AEEE8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = sub_24083F2C0;
  v9[3] = v8;
  void v9[4] = a4;
  v11[4] = sub_2408AFF90;
  v11[5] = v9;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 1107296256;
  void v11[2] = sub_2408AE310;
  v11[3] = &unk_26F4F1188;
  uint64_t v10 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_fetchAllAccountsWithCompletion_, v10);
  _Block_release(v10);
}

void sub_2408AF008(uint64_t a1, id a2, void (*a3)(id, uint64_t))
{
  if (a2)
  {
    id v5 = a2;
    a3(a2, 1);
  }
  else if (a1)
  {
    sub_2409530F8();
    swift_allocObject();
    swift_bridgeObjectRetain();
    sub_2409530E8();
    uint64_t v6 = sub_2409530D8();
    swift_release();
    a3((id)v6, 0);
    swift_bridgeObjectRelease();
  }
  else
  {
    a3((id)MEMORY[0x263F8EE78], 0);
  }
}

uint64_t sub_2408AF110(uint64_t a1)
{
  v2[20] = a1;
  v2[21] = v1;
  v2[22] = swift_getObjectType();
  uint64_t v3 = sub_2409540C8();
  v2[23] = v3;
  v2[24] = *(void *)(v3 - 8);
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  v2[27] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2408AF1F8, 0, 0);
}

uint64_t sub_2408AF1F8()
{
  uint64_t v1 = (void *)v0[21];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_2408AF2F4;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_2408AFD78;
  v0[13] = &unk_2650D85F0;
  v0[14] = v2;
  objc_msgSend(v1, sel_deviceConfigurationSupportsHealthRecords_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_2408AF2F4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 224) = v1;
  if (v1) {
    uint64_t v2 = sub_2408AF710;
  }
  else {
    uint64_t v2 = sub_2408AF404;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2408AF404()
{
  unint64_t v25 = v0;
  uint64_t v1 = v0[15];
  if (!v1)
  {
    sub_240954078();
    uint64_t v2 = sub_2409540B8();
    os_log_type_t v13 = sub_240954C28();
    BOOL v14 = os_log_type_enabled(v2, v13);
    uint64_t v5 = v0[27];
    uint64_t v7 = v0[23];
    uint64_t v6 = v0[24];
    if (v14)
    {
      uint64_t v23 = v0[27];
      uint64_t v22 = v0[23];
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v24 = v16;
      *(_DWORD *)uint64_t v15 = 136315138;
      uint64_t v17 = sub_2409557A8();
      v0[19] = sub_2408370E4(v17, v18, &v24);
      sub_2409550B8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240818000, v2, v13, "%s got an error response from deviceConfigurationSupportsHealthRecords(), which should have thrown", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v16, -1, -1);
      uint64_t v12 = v15;
      goto LABEL_8;
    }
LABEL_10:

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    goto LABEL_11;
  }
  if (v1 == 1)
  {
    uint64_t v19 = 1;
    goto LABEL_12;
  }
  if (v1 != 2)
  {
    sub_240954078();
    uint64_t v2 = sub_2409540B8();
    os_log_type_t v3 = sub_240954C18();
    BOOL v4 = os_log_type_enabled(v2, v3);
    uint64_t v5 = v0[26];
    uint64_t v7 = v0[23];
    uint64_t v6 = v0[24];
    if (v4)
    {
      uint64_t v23 = v0[26];
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v24 = v9;
      uint64_t v22 = v7;
      *(_DWORD *)uint64_t v8 = 136315138;
      uint64_t v10 = sub_2409557A8();
      v0[18] = sub_2408370E4(v10, v11, &v24);
      sub_2409550B8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240818000, v2, v3, "%s got unknown response from deviceConfigurationSupportsHealthRecords()", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v9, -1, -1);
      uint64_t v12 = v8;
LABEL_8:
      MEMORY[0x2456021C0](v12, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v23, v22);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_11:
  uint64_t v19 = 0;
LABEL_12:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(uint64_t))v0[1];
  return v20(v19);
}

uint64_t sub_2408AF710()
{
  uint64_t v30 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = (void *)v0[28];
  swift_willThrow();
  sub_240954078();
  id v3 = v2;
  id v4 = v2;
  uint64_t v5 = sub_2409540B8();
  os_log_type_t v6 = sub_240954C18();
  if (!os_log_type_enabled(v5, v6))
  {
    uint64_t v19 = (void *)v0[28];
    uint64_t v21 = v1[24];
    uint64_t v20 = v1[25];
    uint64_t v22 = v1[23];

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    BOOL v14 = (void *)v1[20];
    if (v14) {
      goto LABEL_3;
    }
LABEL_8:

    goto LABEL_10;
  }
  uint64_t v7 = (void *)v0[28];
  uint64_t v26 = v0[24];
  uint64_t v27 = v0[23];
  uint64_t v28 = v0[25];
  uint64_t v8 = swift_slowAlloc();
  uint64_t v9 = (void *)swift_slowAlloc();
  uint64_t v25 = swift_slowAlloc();
  uint64_t v29 = v25;
  *(_DWORD *)uint64_t v8 = 136315394;
  uint64_t v10 = sub_2409557A8();
  v0[16] = sub_2408370E4(v10, v11, &v29);
  sub_2409550B8();
  swift_bridgeObjectRelease();
  *(_WORD *)(v8 + 12) = 2112;
  id v12 = v7;
  uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
  v0[17] = v13;
  sub_2409550B8();
  *uint64_t v9 = v13;

  _os_log_impl(&dword_240818000, v5, v6, "%s failed calling into deviceConfigurationSupportsHealthRecords(): %@", (uint8_t *)v8, 0x16u);
  sub_2408AFE68(0, (unint64_t *)&qword_26AFCE288, (unint64_t *)&qword_26AFCE280, 0x263F8C6D0, MEMORY[0x263F8D8F0]);
  swift_arrayDestroy();
  MEMORY[0x2456021C0](v9, -1, -1);
  swift_arrayDestroy();
  MEMORY[0x2456021C0](v25, -1, -1);
  MEMORY[0x2456021C0](v8, -1, -1);

  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  BOOL v14 = (void *)v0[20];
  if (!v14) {
    goto LABEL_8;
  }
LABEL_3:
  uint64_t v15 = self;
  id v16 = v14;
  if (objc_msgSend(v15, sel_isAppleInternalInstall))
  {
    v1[29] = self;
    v1[30] = sub_240954788();
    v1[31] = sub_240954788();
    v1[32] = sub_2409518D8();
    v1[33] = sub_240954A98();
    v1[34] = sub_240954A88();
    uint64_t v18 = sub_240954A48();
    return MEMORY[0x270FA2498](sub_2408AFB28, v18, v17);
  }

LABEL_10:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v1[1];
  return v23(0);
}

uint64_t sub_2408AFB28()
{
  uint64_t v1 = (void *)v0[31];
  uint64_t v2 = (void *)v0[32];
  id v4 = (void *)v0[29];
  id v3 = (void *)v0[30];
  swift_release();
  v0[35] = objc_msgSend(v4, sel_basicAlertControllerWithTitle_message_internalError_, v3, v1, v2);

  return MEMORY[0x270FA2498](sub_2408AFBD4, 0, 0);
}

uint64_t sub_2408AFBD4()
{
  *(void *)(v0 + 288) = sub_240954A88();
  uint64_t v2 = sub_240954A48();
  return MEMORY[0x270FA2498](sub_2408AFC60, v2, v1);
}

uint64_t sub_2408AFC60()
{
  uint64_t v1 = *(void *)(v0 + 280);
  uint64_t v2 = *(void **)(v0 + 160);
  swift_release();
  objc_msgSend(v2, sel_presentViewController_animated_completion_, v1, 1, 0);
  return MEMORY[0x270FA2498](sub_2408AFCE8, 0, 0);
}

uint64_t sub_2408AFCE8()
{
  uint64_t v1 = *(void **)(v0 + 280);
  uint64_t v2 = *(void **)(v0 + 160);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3(0);
}

uint64_t sub_2408AFD78(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_24083F3C0();
    uint64_t v5 = swift_allocError();
    void *v6 = a3;
    id v7 = a3;
    return MEMORY[0x270FA2410](v3, v5);
  }
  else
  {
    **(void **)(*(void *)(v3 + 64) + 40) = a2;
    return MEMORY[0x270FA2408](v3);
  }
}

uint64_t sub_2408AFE28()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_2408AFE60(uint64_t a1, uint64_t a2)
{
  sub_2408AE178(a1, a2, *(void **)(v2 + 16));
}

void sub_2408AFE68(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_24083EDCC(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_2408AFED0(void *a1, void *a2)
{
  sub_2408AE288(a1, a2, *(void (**)(id, uint64_t))(v2 + 16));
}

uint64_t sub_2408AFED8@<X0>(uint64_t *a1@<X8>)
{
  return sub_2408AEE40(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_2408AFEE0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_2408AFF18(uint64_t a1, uint64_t a2)
{
  sub_2408AEEE8(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_2408AFF20()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2408AFF58()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_2408AFF90(uint64_t a1, void *a2)
{
  sub_2408AF008(a1, a2, *(void (**)(id, uint64_t))(v2 + 16));
}

void sub_2408AFF9C()
{
  if (!qword_26AFCF380)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AFCF380);
    }
  }
}

void sub_2408B0000(uint64_t a1, uint64_t a2)
{
  sub_2408AE43C(a1, a2, *(void **)(v2 + 16));
}

void sub_2408B0008()
{
  if (!qword_26AFCDDF8)
  {
    sub_2408B0078();
    sub_24083F3C0();
    unint64_t v0 = sub_2409543D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDDF8);
    }
  }
}

void sub_2408B0078()
{
  if (!qword_26AFCDEA0)
  {
    sub_2408AFE68(255, (unint64_t *)&qword_26AFCC610, (unint64_t *)&qword_26AFD05A0, 0x263F45C68, MEMORY[0x263F8D488]);
    unint64_t v0 = sub_240955098();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDEA0);
    }
  }
}

void sub_2408B00FC(unint64_t a1, void *a2)
{
  sub_2408AE54C(a1, a2, *(void (**)(id, uint64_t))(v2 + 16));
}

uint64_t sub_2408B0104(uint64_t a1, uint64_t a2)
{
  sub_24087E864();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

Swift::Void __swiftcall BaseFeedItemViewController.reloadView()()
{
}

uint64_t BaseFeedItemViewController.feedItemData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x60);
  swift_beginAccess();
  uint64_t v4 = sub_240955098();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BaseFeedItemViewController.feedItemData.setter(uint64_t a1)
{
  sub_2408B2DEC(a1);
  uint64_t v2 = sub_240955098();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

void (*BaseFeedItemViewController.feedItemData.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x50uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = *MEMORY[0x263F8EED0] & *v1;
  uint64_t v5 = sub_240955098();
  v3[4] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  v3[5] = v6;
  size_t v8 = *(void *)(v6 + 64);
  v3[6] = malloc(v8);
  unint64_t v9 = malloc(v8);
  v3[7] = v9;
  uint64_t v10 = (char *)v1 + *(void *)(v4 + 96);
  swift_beginAccess();
  unint64_t v11 = *(void (**)(void *, char *, uint64_t))(v7 + 16);
  v3[8] = v11;
  v3[9] = (v7 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v11(v9, v10, v5);
  return sub_2408B0460;
}

void sub_2408B0460(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = *(void **)(*a1 + 48);
  uint64_t v3 = *(void **)(*a1 + 56);
  uint64_t v5 = *(void *)(*a1 + 32);
  uint64_t v6 = *(void *)(*a1 + 40);
  if (a2)
  {
    (*(void (**)(void, void, void))(v2 + 64))(*(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 32));
    sub_2408B2DEC((uint64_t)v4);
    uint64_t v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v4, v5);
    v7(v3, v5);
  }
  else
  {
    sub_2408B2DEC(*(void *)(v2 + 56));
    (*(void (**)(void *, uint64_t))(v6 + 8))(v3, v5);
  }
  free(v3);
  free(v4);

  free((void *)v2);
}

uint64_t BaseFeedItemViewController.decoder.getter()
{
  uint64_t v1 = *(void *)((*MEMORY[0x263F8EED0] & *v0) + 0x68);
  if (*(void *)((char *)v0 + v1))
  {
    uint64_t v2 = *(void *)((char *)v0 + v1);
  }
  else
  {
    uint64_t v3 = v0;
    sub_240951798();
    swift_allocObject();
    uint64_t v2 = sub_240951788();
    *(void *)((char *)v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t BaseFeedItemViewController.context.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x70);
  swift_beginAccess();
  return sub_24085AA1C(v3, a1);
}

uint64_t BaseFeedItemViewController.context.setter(uint64_t a1)
{
  sub_2408B1D70();
  uint64_t v3 = (uint64_t)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x70);
  swift_beginAccess();
  sub_24085A89C(a1, v3);
  swift_endAccess();
  sub_2408B1FD0();
  return sub_24085A994(a1);
}

void (*BaseFeedItemViewController.context.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[13] = v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x70);
  swift_beginAccess();
  sub_24085AA1C(v4, (uint64_t)v3);
  return sub_2408B0774;
}

void sub_2408B0774(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  if (a2)
  {
    sub_24085AA1C(*a1, (uint64_t)v2 + 40);
    BaseFeedItemViewController.context.setter((uint64_t)v2 + 40);
    sub_24085A994((uint64_t)v2);
  }
  else
  {
    BaseFeedItemViewController.context.setter(*a1);
  }

  free(v2);
}

uint64_t BaseFeedItemViewController.reloadData()()
{
  uint64_t v20 = *MEMORY[0x263F8EED0] & *v0;
  uint64_t v1 = sub_2409540C8();
  _OWORD v19[5] = *(void *)(v1 - 8);
  v19[6] = v1;
  MEMORY[0x270FA5388](v1);
  v19[7] = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = *(void *)(v20 + 80);
  uint64_t v4 = sub_240955098();
  uint64_t v21 = *(void *)(v4 - 8);
  uint64_t v22 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v9 = (char *)v19 - v8;
  uint64_t result = BaseFeedItemViewController.context.getter((uint64_t)v23);
  uint64_t v11 = v24;
  if (v24)
  {
    id v12 = sub_2408304E8(v23, v24);
    uint64_t v13 = *(void *)(v11 - 8);
    MEMORY[0x270FA5388](v12);
    uint64_t v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v13 + 16))(v15);
    uint64_t v16 = sub_240953BB8();
    unint64_t v18 = v17;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v11);
    sub_2408371B8((uint64_t)v23);
    if (v18 >> 60 == 15)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v7, 1, 1, v3);
      sub_2408B2DEC((uint64_t)v7);
      return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v7, v22);
    }
    else
    {
      BaseFeedItemViewController.decoder.getter();
      sub_240951778();
      swift_release();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v9, 0, 1, v3);
      sub_2408B2DEC((uint64_t)v9);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v22);
      return sub_240849C34(v16, v18);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall BaseFeedItemViewController.didSelectCell(_:in:)(UIView *_, UIViewController *in)
{
  uint64_t v4 = (void *)MEMORY[0x263F8EED0];
  uint64_t v5 = *MEMORY[0x263F8EED0] & *v2;
  uint64_t v6 = *(void *)(v5 + 0x50);
  uint64_t v7 = sub_240955098();
  uint64_t v43 = *(void *)(v7 - 8);
  uint64_t v44 = v7;
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = (char *)&v39 - v8;
  uint64_t v10 = sub_2409540C8();
  uint64_t v41 = *(void *)(v10 - 8);
  uint64_t v42 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  unint64_t v45 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v39 - v13;
  sub_240954088();
  uint64_t v46 = v2;
  uint64_t v15 = v2;
  uint64_t v16 = _;
  unint64_t v17 = v15;
  unint64_t v18 = v16;
  uint64_t v19 = sub_2409540B8();
  os_log_type_t v20 = sub_240954C08();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v47 = v5;
  if (v21)
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    v49[0] = v39;
    *(_DWORD *)uint64_t v22 = 136446466;
    uint64_t ObjectType = swift_getObjectType();
    type metadata accessor for BaseFeedItemViewController();
    swift_getMetatypeMetadata();
    uint64_t v23 = sub_2409547E8();
    uint64_t v40 = v6;
    uint64_t ObjectType = sub_2408370E4(v23, v24, v49);
    sub_2409550B8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2082;
    uint64_t ObjectType = (uint64_t)v18;
    sub_240868D30();
    uint64_t v25 = v18;
    uint64_t v26 = sub_240954808();
    uint64_t ObjectType = sub_2408370E4(v26, v27, v49);
    uint64_t v6 = v40;
    sub_2409550B8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v19, v20, "didSelectCell: %{public}s %{public}s", (uint8_t *)v22, 0x16u);
    uint64_t v28 = v39;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v28, -1, -1);
    uint64_t v29 = v22;
    uint64_t v4 = (void *)MEMORY[0x263F8EED0];
    MEMORY[0x2456021C0](v29, -1, -1);
  }
  else
  {
  }
  uint64_t v30 = *(void (**)(char *, uint64_t))(v41 + 8);
  uint64_t v31 = v14;
  uint64_t v32 = v42;
  v30(v31, v42);
  BaseFeedItemViewController.feedItemData.getter((uint64_t)v9);
  int v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v9, 1, v6);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v9, v44);
  if (v33 == 1)
  {
    sub_240954088();
    uint64_t v34 = sub_2409540B8();
    os_log_type_t v35 = sub_240954C18();
    if (os_log_type_enabled(v34, v35))
    {
      unint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v36 = 0;
      _os_log_impl(&dword_240818000, v34, v35, "User tapped tile before its data was available", v36, 2u);
      MEMORY[0x2456021C0](v36, -1, -1);
    }

    v30(v45, v32);
  }
  v49[3] = type metadata accessor for BaseFeedItemViewController();
  v49[0] = (uint64_t)v17;
  uint64_t v37 = *(void (**)(uint64_t *))((*v4 & *v17) + 0xD0);
  uint64_t v38 = v17;
  v37(v49);
  sub_240858A4C((uint64_t)v49);
}

uint64_t BaseFeedItemViewController.deselectionBehavior.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F440E0];
  uint64_t v3 = sub_240953A18();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t BaseFeedItemViewController.didTapTile(sender:)()
{
  uint64_t v1 = sub_2409540C8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954088();
  id v5 = v0;
  uint64_t v6 = sub_2409540B8();
  os_log_type_t v7 = sub_240954C08();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v1;
    unint64_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v17 = v10;
    *(_DWORD *)unint64_t v9 = 136446210;
    uint64_t ObjectType = swift_getObjectType();
    type metadata accessor for BaseFeedItemViewController();
    swift_getMetatypeMetadata();
    uint64_t v11 = sub_2409547E8();
    uint64_t ObjectType = sub_2408370E4(v11, v12, &v17);
    sub_2409550B8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v6, v7, "didTapTile: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v10, -1, -1);
    MEMORY[0x2456021C0](v9, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v15);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t sub_2408B1604()
{
  uint64_t v1 = *MEMORY[0x263F8EED0] & *v0;
  uint64_t v2 = sub_2409540C8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(v1 + 200))(v4);
  sub_240954088();
  os_log_type_t v7 = v0;
  uint64_t v8 = sub_2409540B8();
  os_log_type_t v9 = sub_240954C08();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v17 = v2;
    uint64_t v11 = (uint8_t *)v10;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v19 = v12;
    *(_DWORD *)uint64_t v11 = 136446210;
    uint64_t ObjectType = swift_getObjectType();
    type metadata accessor for BaseFeedItemViewController();
    swift_getMetatypeMetadata();
    uint64_t v13 = sub_2409547E8();
    uint64_t ObjectType = sub_2408370E4(v13, v14, &v19);
    sub_2409550B8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v8, v9, "dataDidUpdate: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v12, -1, -1);
    MEMORY[0x2456021C0](v11, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v17);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
}

Swift::Void __swiftcall BaseFeedItemViewController.viewDidLoad()()
{
  uint64_t v1 = (void *)MEMORY[0x263F8EED0];
  uint64_t v2 = sub_2409540C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (objc_class *)type metadata accessor for BaseFeedItemViewController();
  v20.receiver = v0;
  v20.super_class = v6;
  id v7 = objc_msgSendSuper2(&v20, sel_viewDidLoad);
  (*(void (**)(id))((*v1 & *v0) + 0xC8))(v7);
  sub_240954088();
  uint64_t v8 = v0;
  os_log_type_t v9 = sub_2409540B8();
  os_log_type_t v10 = sub_240954C08();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v17 = v2;
    uint64_t v13 = v12;
    uint64_t v19 = v12;
    *(_DWORD *)uint64_t v11 = 136446210;
    uint64_t ObjectType = swift_getObjectType();
    swift_getMetatypeMetadata();
    uint64_t v14 = sub_2409547E8();
    uint64_t ObjectType = sub_2408370E4(v14, v15, &v19);
    sub_2409550B8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v9, v10, "viewDidLoad: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v13, -1, -1);
    MEMORY[0x2456021C0](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v17);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

void sub_2408B1B20(void *a1)
{
  id v1 = a1;
  BaseFeedItemViewController.viewDidLoad()();
}

Swift::Void __swiftcall BaseFeedItemViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  uint64_t v3 = sub_2409540C8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  id v7 = (objc_class *)type metadata accessor for BaseFeedItemViewController();
  v15.receiver = v1;
  v15.super_class = v7;
  objc_msgSendSuper2(&v15, sel_viewDidAppear_, a1);
  BaseFeedItemViewController.context.getter((uint64_t)v13);
  uint64_t v8 = v14;
  sub_24085A994((uint64_t)v13);
  if (!v8)
  {
    sub_240954088();
    os_log_type_t v9 = sub_2409540B8();
    os_log_type_t v10 = sub_240954C18();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_240818000, v9, v10, "FeedItemViewControllerContext should be set before the tile appears", v11, 2u);
      MEMORY[0x2456021C0](v11, -1, -1);
    }

    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

void sub_2408B1D1C(void *a1, uint64_t a2, Swift::Bool a3)
{
  id v4 = a1;
  BaseFeedItemViewController.viewDidAppear(_:)(a3);
}

uint64_t sub_2408B1D70()
{
  uint64_t v1 = sub_2409540C8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  id v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954088();
  id v5 = v0;
  uint64_t v6 = sub_2409540B8();
  os_log_type_t v7 = sub_240954C08();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v1;
    os_log_type_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v17 = v10;
    *(_DWORD *)os_log_type_t v9 = 136446210;
    uint64_t ObjectType = swift_getObjectType();
    type metadata accessor for BaseFeedItemViewController();
    swift_getMetatypeMetadata();
    uint64_t v11 = sub_2409547E8();
    uint64_t ObjectType = sub_2408370E4(v11, v12, &v17);
    sub_2409550B8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v6, v7, "contextWillUpdate: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v10, -1, -1);
    MEMORY[0x2456021C0](v9, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v15);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t sub_2408B1FD0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *MEMORY[0x263F8EED0] & *v0;
  uint64_t v3 = sub_2409540C8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  os_log_type_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  os_log_type_t v9 = (char *)&v23 - v8;
  uint64_t v10 = (uint64_t)v1 + *(void *)(v2 + 112);
  swift_beginAccess();
  sub_24085AA1C(v10, (uint64_t)v25);
  uint64_t v11 = v25[3];
  sub_24085A994((uint64_t)v25);
  if (!v11)
  {
    sub_240954088();
    unint64_t v12 = sub_2409540B8();
    os_log_type_t v13 = sub_240954C18();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_240818000, v12, v13, "FeedItemViewControllerContext should never be null", v14, 2u);
      MEMORY[0x2456021C0](v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  BaseFeedItemViewController.reloadData()();
  sub_240954088();
  id v15 = v1;
  uint64_t v16 = sub_2409540B8();
  os_log_type_t v17 = sub_240954C08();
  if (os_log_type_enabled(v16, v17))
  {
    unint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    v25[0] = v19;
    uint64_t v23 = v3;
    *(_DWORD *)unint64_t v18 = 136446210;
    uint64_t ObjectType = swift_getObjectType();
    type metadata accessor for BaseFeedItemViewController();
    swift_getMetatypeMetadata();
    uint64_t v20 = sub_2409547E8();
    uint64_t ObjectType = sub_2408370E4(v20, v21, v25);
    sub_2409550B8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v16, v17, "contextDidUpdate: %{public}s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v19, -1, -1);
    MEMORY[0x2456021C0](v18, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v23);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
}

id BaseFeedItemViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

id BaseFeedItemViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (void *)MEMORY[0x263F8EED0];
  (*(void (**)(char *, uint64_t, uint64_t, void))(*(void *)(*(void *)((*MEMORY[0x263F8EED0] & *(void *)v3)
                                                                                   + 0x50)
                                                                       - 8)
                                                           + 56))(&v3[*(void *)((*MEMORY[0x263F8EED0] & *(void *)v3) + 0x60)], 1, 1, *(void *)((*MEMORY[0x263F8EED0] & *(void *)v3) + 0x50));
  *(void *)&v3[*(void *)((*v6 & *(void *)v3) + 0x68)] = 0;
  id v7 = &v3[*(void *)((*v6 & *(void *)v3) + 0x70)];
  *(_OWORD *)id v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((void *)v7 + 4) = 0;
  if (a2)
  {
    uint64_t v8 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = 0;
  }
  v11.receiver = v3;
  v11.super_class = (Class)type metadata accessor for BaseFeedItemViewController();
  id v9 = objc_msgSendSuper2(&v11, sel_initWithNibName_bundle_, v8, a3);

  return v9;
}

id sub_2408B2540(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    uint64_t v5 = sub_2409547C8();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  id v8 = a4;
  return BaseFeedItemViewController.init(nibName:bundle:)(v5, v7, a4);
}

id BaseFeedItemViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id BaseFeedItemViewController.init(coder:)(void *a1)
{
  id v3 = (void *)MEMORY[0x263F8EED0];
  (*(void (**)(char *, uint64_t, uint64_t, void))(*(void *)(*(void *)((*MEMORY[0x263F8EED0] & *(void *)v1)
                                                                                   + 0x50)
                                                                       - 8)
                                                           + 56))(&v1[*(void *)((*MEMORY[0x263F8EED0] & *(void *)v1) + 0x60)], 1, 1, *(void *)((*MEMORY[0x263F8EED0] & *(void *)v1) + 0x50));
  *(void *)&v1[*(void *)((*v3 & *(void *)v1) + 0x68)] = 0;
  uint64_t v4 = &v1[*(void *)((*v3 & *(void *)v1) + 0x70)];
  *(_OWORD *)uint64_t v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((void *)v4 + 4) = 0;
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for BaseFeedItemViewController();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithCoder_, a1);

  return v5;
}

id sub_2408B2720(uint64_t a1, uint64_t a2, void *a3)
{
  return BaseFeedItemViewController.init(coder:)(a3);
}

id BaseFeedItemViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BaseFeedItemViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2408B27BC(void *a1)
{
  objc_super v2 = (void *)MEMORY[0x263F8EED0];
  id v3 = (char *)a1 + *(void *)((*MEMORY[0x263F8EED0] & *a1) + 0x60);
  uint64_t v4 = sub_240955098();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  uint64_t v5 = (uint64_t)a1 + *(void *)((*v2 & *a1) + 0x70);

  return sub_24085A994(v5);
}

void (*sub_2408B28B8(void *a1))(void *a1)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = BaseFeedItemViewController.context.modify(v2);
  return sub_2408B2910;
}

void sub_2408B2910(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_2408B2958()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **v0) + 0xD8))();
}

uint64_t sub_2408B29AC()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **v0) + 0xE0))();
}

uint64_t sub_2408B2A00(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_2408B2F90(0, &qword_26AFCF410, MEMORY[0x263F8E778], MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 32;
  os_log_type_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_240955448();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for BaseFeedItemViewController()
{
  return sub_240852868();
}

uint64_t sub_2408B2B88(const char *a1)
{
  uint64_t v3 = sub_2409540C8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954088();
  id v7 = v1;
  int64_t v8 = sub_2409540B8();
  os_log_type_t v9 = sub_240954C08();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v17 = v3;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v16 = a1;
    size_t v11 = (uint8_t *)v10;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v19 = v12;
    *(_DWORD *)size_t v11 = 136446210;
    uint64_t ObjectType = swift_getObjectType();
    type metadata accessor for BaseFeedItemViewController();
    swift_getMetatypeMetadata();
    uint64_t v13 = sub_2409547E8();
    uint64_t ObjectType = sub_2408370E4(v13, v14, &v19);
    sub_2409550B8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v8, v9, v16, v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v12, -1, -1);
    MEMORY[0x2456021C0](v11, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v17);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_2408B2DEC(uint64_t a1)
{
  uint64_t v3 = (void *)MEMORY[0x263F8EED0];
  sub_2408B2B88("dataWillUpdate: %{public}s");
  uint64_t v4 = (char *)v1 + *(void *)((*v3 & *v1) + 0x60);
  swift_beginAccess();
  uint64_t v5 = sub_240955098();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(v4, a1, v5);
  swift_endAccess();
  return sub_2408B1604();
}

uint64_t sub_2408B2ECC()
{
  return swift_getWitnessTable();
}

uint64_t sub_2408B2EE8()
{
  uint64_t result = sub_240955098();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_2408B2F90(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t type metadata accessor for RecordKindFeedItemViewController()
{
  uint64_t result = qword_268C91278;
  if (!qword_268C91278) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2408B3028()
{
  sub_2408B5844(319, &qword_26AFCC5D8, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t sub_2408B30F4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for RecordKindFeedItemData();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408B5844(0, &qword_26AFCC5D8, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
  MEMORY[0x270FA5388](v7 - 8);
  os_log_type_t v9 = (char *)v12 - v8;
  uint64_t v10 = v1 + qword_268C91260;
  swift_beginAccess();
  sub_2408B5C0C(a1, v10);
  swift_endAccess();
  sub_2408B5998(v10, (uint64_t)v9, &qword_26AFCC5D8, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
    uint64_t v13 = 0;
    memset(v12, 0, sizeof(v12));
  }
  else
  {
    sub_2408B58F8((uint64_t)v9, (uint64_t)v6);
    sub_2408B39E4((uint64_t)v6, (uint64_t)v12);
    sub_2408B5898((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for RecordKindFeedItemData);
  }
  sub_240953A28();
  return sub_2408B5A04(a1, &qword_26AFCC5D8, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
}

uint64_t sub_2408B32F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_268C91270;
  swift_beginAccess();
  sub_2408B5B90(v3, (uint64_t)&v8);
  if (!v9)
  {
    sub_240851CE8((uint64_t)&v8, &qword_268C90810, (unint64_t *)&unk_268C911C0);
    uint64_t v4 = sub_240952D78();
    uint64_t v5 = sub_240952D68();
    uint64_t v9 = v4;
    uint64_t v10 = MEMORY[0x263F460E0];
    *(void *)&long long v8 = v5;
    sub_2408690E0((uint64_t)&v8, (uint64_t)v7);
    swift_beginAccess();
    sub_240869144((uint64_t)v7, v3);
    swift_endAccess();
  }
  return sub_24083AB20(&v8, a1);
}

uint64_t sub_2408B33D8()
{
  uint64_t v0 = sub_2409540C8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  sub_2408B5844(0, &qword_26AFCC5D8, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v21 - v6;
  sub_240953A48();
  uint64_t v8 = v23;
  if (v23)
  {
    v21[6] = v1;
    uint64_t v9 = sub_2408304E8(v22, v23);
    uint64_t v10 = *(void *)(v8 - 8);
    MEMORY[0x270FA5388](v9);
    uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v10 + 16))(v12);
    sub_240851CE8((uint64_t)v22, (unint64_t *)&qword_26AFCF770, (unint64_t *)&qword_26AFCF760);
    uint64_t v13 = sub_240953BB8();
    unint64_t v15 = v14;
    uint64_t v16 = v8;
    unint64_t v17 = v15;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v16);
    if (v17 >> 60 != 15)
    {
      uint64_t v18 = type metadata accessor for RecordKindFeedItemData();
      sub_2408B5B48(&qword_268C91288, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
      sub_240951778();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v7, 0, 1, v18);
      sub_2408B30F4((uint64_t)v7);
      return sub_240849C34(v13, v17);
    }
  }
  else
  {
    sub_240851CE8((uint64_t)v22, (unint64_t *)&qword_26AFCF770, (unint64_t *)&qword_26AFCF760);
  }
  uint64_t v19 = type metadata accessor for RecordKindFeedItemData();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v5, 1, 1, v19);
  return sub_2408B30F4((uint64_t)v5);
}

uint64_t sub_2408B39E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v52 = a2;
  uint64_t v3 = sub_2409540C8();
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_2409526C8();
  uint64_t v48 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v47 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for RecordKindFeedItemData();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408B5844(0, &qword_26AFCC5D8, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v44 - v12;
  uint64_t v14 = sub_2409528B8();
  uint64_t v45 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  unint64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v44 - v18;
  uint64_t v20 = v2 + qword_268C91260;
  swift_beginAccess();
  sub_2408B5998(v20, (uint64_t)v13, &qword_26AFCC5D8, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7))
  {
    sub_2408B5A04((uint64_t)v13, &qword_26AFCC5D8, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
    sub_240954088();
    unint64_t v21 = sub_2409540B8();
    os_log_type_t v22 = sub_240954C18();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_240818000, v21, v22, "Error tapping on RecordType FeedItem without a CategoryKind", v23, 2u);
      MEMORY[0x2456021C0](v23, -1, -1);
    }

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v5, v50);
    uint64_t v25 = (_OWORD *)v52;
    *(void *)(v52 + 32) = 0;
    *uint64_t v25 = 0u;
    v25[1] = 0u;
  }
  else
  {
    uint64_t v26 = v46;
    sub_2408B5A60((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for RecordKindFeedItemData);
    sub_2408B5A04((uint64_t)v13, &qword_26AFCC5D8, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
    uint64_t v27 = v45;
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
    v28(v17, v10, v14);
    sub_2408B5898((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for RecordKindFeedItemData);
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v19, v17, v14);
    uint64_t v29 = v47;
    v28(v47, v19, v14);
    uint64_t v30 = v48;
    (*(void (**)(char *, void, uint64_t))(v48 + 104))(v29, *MEMORY[0x263F45F00], v51);
    id v31 = (id)sub_2409525F8();
    if (!v31) {
      id v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init);
    }
    id v32 = v31;
    uint64_t v33 = sub_240952688();
    if (v33)
    {
      uint64_t v34 = (void *)v33;
      id v35 = objc_msgSend(v32, sel_imageWithTintColor_renderingMode_, v33, 1);

      id v32 = v34;
    }
    else
    {
      id v35 = v32;
    }

    (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v51);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v14);
    unint64_t v36 = (uint64_t *)(v26 + *(int *)(v7 + 24));
    uint64_t v38 = *v36;
    uint64_t v37 = v36[1];
    uint64_t v39 = type metadata accessor for RecordKindFeedItemViewData();
    uint64_t v40 = (uint64_t *)v52;
    *(void *)(v52 + 24) = v39;
    v40[4] = sub_2408B5B48(&qword_268C912A0, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemViewData);
    uint64_t v41 = sub_240851B6C(v40);
    *uint64_t v41 = (uint64_t)v35;
    v41[1] = v38;
    v41[2] = v37;
    uint64_t v42 = *MEMORY[0x263F44180];
    uint64_t v43 = sub_240953A38();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 104))(v41, v42, v43);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2408B4000(uint64_t a1)
{
  uint64_t v69 = a1;
  uint64_t v2 = sub_2409540C8();
  uint64_t v78 = *(void *)(v2 - 8);
  uint64_t v79 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v74 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v77 = (char *)&v64 - v5;
  sub_2408B5844(0, &qword_26AFCE2A0, MEMORY[0x263F07508]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v76 = (uint64_t *)((char *)&v64 - v7);
  uint64_t v73 = sub_2409528B8();
  uint64_t v72 = *(void *)(v73 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v73);
  uint64_t v70 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v71 = (char *)&v64 - v10;
  sub_2408B5844(0, &qword_268C91298, MEMORY[0x263F46040]);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  unint64_t v17 = (char *)&v64 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v80 = (uint64_t)&v64 - v18;
  uint64_t v19 = type metadata accessor for RecordKindFeedItemData();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v75 = (uint64_t)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408B5844(0, &qword_26AFCC5D8, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
  uint64_t v23 = MEMORY[0x270FA5388](v22 - 8);
  uint64_t v25 = (char *)&v64 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v64 - v26;
  uint64_t v28 = (uint64_t)&v1[qword_268C91260];
  swift_beginAccess();
  sub_2408B5998(v28, (uint64_t)v27, &qword_26AFCC5D8, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
  uint64_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v29(v27, 1, v19))
  {
    sub_2408B5A04((uint64_t)v27, &qword_26AFCC5D8, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
    uint64_t v30 = v77;
    sub_240954088();
    id v31 = sub_2409540B8();
    os_log_type_t v32 = sub_240954C18();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v33 = 0;
      _os_log_impl(&dword_240818000, v31, v32, "Error tapping on RecordType FeedItem without an identifier", v33, 2u);
      MEMORY[0x2456021C0](v33, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v30, v79);
  }
  else
  {
    uint64_t v66 = v17;
    char v68 = v14;
    uint64_t v77 = v1;
    uint64_t v35 = v75;
    sub_2408B5A60((uint64_t)v27, v75, (uint64_t (*)(void))type metadata accessor for RecordKindFeedItemData);
    sub_2408B5A04((uint64_t)v27, &qword_26AFCC5D8, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
    uint64_t v36 = *(void *)(v35 + *(int *)(v19 + 20));
    sub_2408B5898(v35, (uint64_t (*)(void))type metadata accessor for RecordKindFeedItemData);
    uint64_t v37 = sub_2409528E8();
    uint64_t v38 = *(void *)(v37 - 8);
    uint64_t v65 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56);
    uint64_t v64 = v38 + 56;
    v65(v80, 1, 1, v37);
    sub_2408B5998(v28, (uint64_t)v25, &qword_26AFCC5D8, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
    int v39 = v29(v25, 1, v19);
    uint64_t v67 = v36;
    if (v39)
    {
      sub_2408B5A04((uint64_t)v25, &qword_26AFCC5D8, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
      uint64_t v40 = v80;
    }
    else
    {
      sub_2408B5A60((uint64_t)v25, v35, (uint64_t (*)(void))type metadata accessor for RecordKindFeedItemData);
      sub_2408B5A04((uint64_t)v25, &qword_26AFCC5D8, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
      uint64_t v41 = v72;
      uint64_t v42 = v70;
      uint64_t v43 = v73;
      (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v70, v35, v73);
      sub_2408B5898(v35, (uint64_t (*)(void))type metadata accessor for RecordKindFeedItemData);
      uint64_t v44 = v71;
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v71, v42, v43);
      sub_240952C38();
      uint64_t v45 = (uint64_t)v66;
      sub_240952C28();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v44, v43);
      uint64_t v40 = v80;
      sub_2408B5A04(v80, &qword_268C91298, MEMORY[0x263F46040]);
      v65(v45, 0, 1, v37);
      sub_2408B5AC8(v45, v40);
    }
    uint64_t v46 = (uint64_t)v76;
    uint64_t v47 = (uint64_t)v68;
    sub_2408B32F4((uint64_t)v83);
    uint64_t v76 = sub_2408304E8(v83, v83[3]);
    sub_2408B5998(v40, v47, &qword_268C91298, MEMORY[0x263F46040]);
    uint64_t v48 = sub_240951A98();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v46, 1, 1, v48);
    sub_240952808();
    uint64_t v49 = (void *)sub_2409527D8();
    uint64_t result = sub_240953A48();
    uint64_t v50 = v82;
    if (v82)
    {
      uint64_t v51 = sub_2408304E8(v81, v82);
      uint64_t v52 = *(void *)(v50 - 8);
      MEMORY[0x270FA5388](v51);
      uint64_t v54 = (char *)&v64 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v52 + 16))(v54);
      uint64_t v55 = (void *)sub_240953B98();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v54, v50);
      int64_t v56 = (void *)sub_2409527E8();

      sub_2408371B8((uint64_t)v81);
      id v57 = (void *)sub_2409530A8();

      sub_2408B5A04(v46, &qword_26AFCE2A0, MEMORY[0x263F07508]);
      sub_2408B5A04(v47, &qword_268C91298, MEMORY[0x263F46040]);
      sub_2408B5A60(v69, (uint64_t)v81, (uint64_t (*)(void))sub_24085776C);
      uint64_t v58 = v82;
      if (v82)
      {
        uint64_t v59 = sub_2408304E8(v81, v82);
        uint64_t v60 = *(void *)(v58 - 8);
        MEMORY[0x270FA5388](v59);
        uint64_t v62 = (char *)&v64 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v60 + 16))(v62);
        uint64_t v63 = sub_2409555F8();
        (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v58);
        sub_2408371B8((uint64_t)v81);
      }
      else
      {
        uint64_t v63 = 0;
      }
      objc_msgSend(v77, sel_showViewController_sender_, v57, v63);

      swift_unknownObjectRelease();
      sub_2408B5A04(v80, &qword_268C91298, MEMORY[0x263F46040]);
      return sub_2408371B8((uint64_t)v83);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_2408B4D1C(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v4 = a1;
    swift_unknownObjectRetain();
    sub_240955138();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
    id v5 = a1;
  }
  sub_2408B4000((uint64_t)v7);

  return sub_2408B5898((uint64_t)v7, (uint64_t (*)(void))sub_24085776C);
}

id sub_2408B4DA0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  uint64_t v7 = &v3[qword_268C91260];
  uint64_t v8 = type metadata accessor for RecordKindFeedItemData();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = qword_268C91268;
  sub_240951798();
  swift_allocObject();
  uint64_t v10 = v4;
  *(void *)&v4[v9] = sub_240951788();
  uint64_t v11 = &v10[qword_268C91270];
  *((void *)v11 + 4) = 0;
  *(_OWORD *)uint64_t v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;

  if (a2)
  {
    uint64_t v12 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = 0;
  }
  v15.receiver = v10;
  v15.super_class = (Class)type metadata accessor for RecordKindFeedItemViewController();
  id v13 = objc_msgSendSuper2(&v15, sel_initWithNibName_bundle_, v12, a3);

  return v13;
}

id sub_2408B4EDC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    uint64_t v5 = sub_2409547C8();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  id v8 = a4;
  return sub_2408B4DA0(v5, v7, a4);
}

id sub_2408B4F3C(void *a1)
{
  uint64_t v2 = v1;
  id v4 = &v1[qword_268C91260];
  uint64_t v5 = type metadata accessor for RecordKindFeedItemData();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = qword_268C91268;
  sub_240951798();
  swift_allocObject();
  uint64_t v7 = v2;
  *(void *)&v2[v6] = sub_240951788();
  id v8 = &v7[qword_268C91270];
  *((void *)v8 + 4) = 0;
  *(_OWORD *)id v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;

  v11.receiver = v7;
  v11.super_class = (Class)type metadata accessor for RecordKindFeedItemViewController();
  id v9 = objc_msgSendSuper2(&v11, sel_initWithCoder_, a1);

  return v9;
}

id sub_2408B503C(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_2408B4F3C(a3);
}

uint64_t sub_2408B5064()
{
  sub_2408B5A04(v0 + qword_268C91260, &qword_26AFCC5D8, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
  swift_release();
  return sub_240851CE8(v0 + qword_268C91270, &qword_268C90810, (unint64_t *)&unk_268C911C0);
}

id sub_2408B50DC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecordKindFeedItemViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2408B5114(uint64_t a1)
{
  return sub_240851CE8(a1 + qword_268C91270, &qword_268C90810, (unint64_t *)&unk_268C911C0);
}

uint64_t sub_2408B5198()
{
  return type metadata accessor for RecordKindFeedItemViewController();
}

uint64_t sub_2408B51A0(void *a1)
{
  return sub_2408B51C4(a1);
}

uint64_t sub_2408B51C4(void *a1)
{
  sub_2408B5844(0, &qword_26AFCC5E0, MEMORY[0x263F46018]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v41 = (char *)&v39 - v4;
  uint64_t v44 = sub_240953738();
  uint64_t v5 = *(void *)(v44 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v44);
  uint64_t v43 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v39 - v8;
  uint64_t v10 = type metadata accessor for RecordKindFeedItemData();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v40 = (uint64_t)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408B5844(0, &qword_26AFCC5D8, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v39 - v17;
  unint64_t v48 = sub_240868D30();
  v47[0] = a1;
  id v19 = a1;
  sub_2408B4000((uint64_t)v47);
  sub_2408B5898((uint64_t)v47, (uint64_t (*)(void))sub_24085776C);
  uint64_t v20 = v1 + qword_268C91260;
  swift_beginAccess();
  sub_2408B5998(v20, (uint64_t)v18, &qword_26AFCC5D8, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v45 = v11 + 48;
  uint64_t v46 = v10;
  uint64_t v42 = v21;
  id v22 = 0;
  if (v21(v18, 1, v10) != 1)
  {
    uint64_t v23 = v40;
    sub_2408B58F8((uint64_t)v18, v40);
    id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A1F8]), sel_initWithRawIdentifier_, *(void *)(v23 + *(int *)(v46 + 20)));
    sub_2408B5898(v23, (uint64_t (*)(void))type metadata accessor for RecordKindFeedItemData);
  }
  uint64_t result = sub_240953A48();
  unint64_t v25 = v48;
  if (v48)
  {
    uint64_t v26 = sub_2408304E8(v47, v48);
    uint64_t v27 = *(void *)(v25 - 8);
    MEMORY[0x270FA5388](v26);
    uint64_t v29 = (char *)&v39 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v27 + 16))(v29);
    sub_240953BA8();
    (*(void (**)(char *, unint64_t))(v27 + 8))(v29, v25);
    id v31 = v43;
    uint64_t v30 = v44;
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v43, *MEMORY[0x263F43BE0], v44);
    sub_240953728();
    os_log_type_t v32 = *(void (**)(char *, uint64_t))(v5 + 8);
    v32(v31, v30);
    v32(v9, v30);
    sub_2408371B8((uint64_t)v47);
    sub_2409529A8();
    uint64_t v33 = (void *)sub_240952998();
    sub_2408B5998(v20, (uint64_t)v16, &qword_26AFCC5D8, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
    if (v42(v16, 1, v46))
    {
      sub_2408B5A04((uint64_t)v16, &qword_26AFCC5D8, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
      uint64_t v34 = sub_2409528B8();
      uint64_t v35 = (uint64_t)v41;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v41, 1, 1, v34);
    }
    else
    {
      uint64_t v36 = v40;
      sub_2408B5A60((uint64_t)v16, v40, (uint64_t (*)(void))type metadata accessor for RecordKindFeedItemData);
      sub_2408B5A04((uint64_t)v16, &qword_26AFCC5D8, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
      uint64_t v37 = sub_2409528B8();
      uint64_t v38 = *(void *)(v37 - 8);
      uint64_t v35 = (uint64_t)v41;
      (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v41, v36, v37);
      sub_2408B5898(v36, (uint64_t (*)(void))type metadata accessor for RecordKindFeedItemData);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
    }
    sub_240952968();

    return sub_2408B5A04(v35, &qword_26AFCC5E0, MEMORY[0x263F46018]);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2408B5844(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240955098();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2408B5898(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2408B58F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RecordKindFeedItemData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2408B595C()
{
  unint64_t result = qword_268C91290;
  if (!qword_268C91290)
  {
    type metadata accessor for RecordKindFeedItemData();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C91290);
  }
  return result;
}

uint64_t sub_2408B5998(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_2408B5844(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_2408B5A04(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_2408B5844(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2408B5A60(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2408B5AC8(uint64_t a1, uint64_t a2)
{
  sub_2408B5844(0, &qword_268C91298, MEMORY[0x263F46040]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2408B5B48(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2408B5B90(uint64_t a1, uint64_t a2)
{
  sub_240851A5C(0, &qword_268C90810, (unint64_t *)&unk_268C911C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2408B5C0C(uint64_t a1, uint64_t a2)
{
  sub_2408B5844(0, &qword_26AFCC5D8, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_2408B5C8C()
{
  uint64_t v1 = sub_240952B98();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240878630(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SharedConceptFeedItemData(0);
  id v9 = (void *)(v0 + *(int *)(v8 + 36));
  unint64_t v10 = v9[1];
  if (!v10) {
    goto LABEL_11;
  }
  uint64_t v11 = *v9 & 0xFFFFFFFFFFFFLL;
  if (!((v10 & 0x2000000000000000) != 0 ? HIBYTE(v10) & 0xF : v11)) {
    goto LABEL_11;
  }
  uint64_t v13 = (uint64_t *)(v0 + *(int *)(v8 + 32));
  unint64_t v14 = v13[1];
  if (!v14) {
    goto LABEL_11;
  }
  uint64_t v15 = *v13;
  uint64_t v16 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0) {
    uint64_t v16 = v15 & 0xFFFFFFFFFFFFLL;
  }
  if (v16)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
LABEL_11:
    uint64_t v17 = sub_240951AB8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v7, 1, 1, v17);
    sub_240952B88();
    uint64_t v15 = sub_240954828();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    sub_2408B816C((uint64_t)v7, (uint64_t (*)(void))sub_240878630);
  }
  return v15;
}

BOOL sub_2408B5EAC(uint64_t a1)
{
  uint64_t v2 = (void *)(v1 + *(int *)(a1 + 36));
  unint64_t v3 = v2[1];
  BOOL result = 0;
  if (v3)
  {
    uint64_t v4 = *v2 & 0xFFFFFFFFFFFFLL;
    if ((v3 & 0x2000000000000000) != 0 ? HIBYTE(v3) & 0xF : v4) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_2408B5EE4(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(v1 + *(int *)(a1 + 36));
  unint64_t v3 = v2[1];
  if (!v3) {
    return 0;
  }
  uint64_t v4 = *v2;
  uint64_t v5 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0) {
    uint64_t v5 = v4 & 0xFFFFFFFFFFFFLL;
  }
  if (!v5) {
    return 0;
  }
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t sub_2408B5F50()
{
  return 0;
}

uint64_t sub_2408B5F5C()
{
  uint64_t v1 = sub_240951808();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240851D44();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SharedConceptCodedValue(0);
  id v9 = (uint64_t *)(v0 + *(int *)(v8 + 28));
  if (v9[1])
  {
    uint64_t v10 = *v9;
  }
  else
  {
    sub_2408B7178(v0 + *(int *)(v8 + 20), (uint64_t)v7, (uint64_t (*)(void))sub_240851D44);
    sub_2408B7104(0);
    uint64_t v12 = v11;
    uint64_t v13 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v11) == 1)
    {
      sub_2408B816C((uint64_t)v7, (uint64_t (*)(void))sub_240851D44);
      uint64_t v10 = 0;
    }
    else
    {
      unint64_t v14 = (void *)sub_240954658();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v12);
      id v15 = objc_msgSend(v14, sel_currentValue);

      id v16 = objc_msgSend(v15, sel_displayString);
      uint64_t v17 = sub_2409547C8();
      uint64_t v19 = v18;

      v21[0] = v17;
      v21[1] = v19;
      sub_2409517E8();
      sub_240864EE4();
      uint64_t v10 = sub_2409550F8();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRetain();
  return v10;
}

uint64_t sub_2408B6200()
{
  sub_240851D44();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SharedConceptCodedValue(0);
  sub_2408B7178(v0 + *(int *)(v4 + 20), (uint64_t)v3, (uint64_t (*)(void))sub_240851D44);
  sub_2408B7104(0);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v3, 1, v5) == 1)
  {
    sub_2408B816C((uint64_t)v3, (uint64_t (*)(void))sub_240851D44);
    return 0;
  }
  uint64_t v8 = (void *)sub_240954658();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v3, v6);
  id v9 = objc_msgSend(v8, sel_unitString);

  if (!v9) {
    return 0;
  }
  uint64_t v10 = sub_2409547C8();

  return v10;
}

uint64_t sub_2408B638C(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 24));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_2408B63C4(uint64_t a1)
{
  sub_240851D44();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408B7178(v1 + *(int *)(a1 + 20), (uint64_t)v5, (uint64_t (*)(void))sub_240851D44);
  sub_2408B7104(0);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    sub_2408B816C((uint64_t)v5, (uint64_t (*)(void))sub_240851D44);
    return 0;
  }
  else
  {
    uint64_t v9 = sub_240954658();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
  }
  return v9;
}

uint64_t sub_2408B6518()
{
  sub_240851D44();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SharedConceptCodedValue(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v0 + 40);
  if (!*(void *)(v8 + 16)) {
    return 0;
  }
  sub_2408B7178(v8 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), (uint64_t)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SharedConceptCodedValue);
  sub_2408B7178((uint64_t)&v7[*(int *)(v4 + 20)], (uint64_t)v3, (uint64_t (*)(void))sub_240851D44);
  sub_2408B7104(0);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v3, 1, v9) == 1)
  {
    sub_2408B816C((uint64_t)v3, (uint64_t (*)(void))sub_240851D44);
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v12 = sub_240954658();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v3, v10);
  }
  sub_2408B816C((uint64_t)v7, type metadata accessor for SharedConceptCodedValue);
  return v12;
}

uint64_t sub_2408B6734()
{
  uint64_t v1 = sub_240951808();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240851D44();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SharedConceptCodedValue(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v0 + 40);
  if (!*(void *)(v12 + 16)) {
    return 0;
  }
  uint64_t v13 = v12 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  sub_2408B7178(v13, (uint64_t)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SharedConceptCodedValue);
  sub_2408B7178((uint64_t)&v11[*(int *)(v8 + 20)], (uint64_t)v7, (uint64_t (*)(void))sub_240851D44);
  sub_2408B7104(0);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v7, 1, v14) == 1)
  {
    sub_2408B816C((uint64_t)v7, (uint64_t (*)(void))sub_240851D44);
    sub_2408B816C((uint64_t)v11, type metadata accessor for SharedConceptCodedValue);
    uint64_t v17 = *(void *)(v13 + *(int *)(v8 + 28));
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v18 = (void *)sub_240954658();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v15);
    sub_2408B816C((uint64_t)v11, type metadata accessor for SharedConceptCodedValue);
    id v19 = objc_msgSend(v18, sel_currentValue);
    id v20 = objc_msgSend(v19, sel_displayString);

    uint64_t v21 = sub_2409547C8();
    uint64_t v23 = v22;

    v25[0] = v21;
    v25[1] = v23;
    sub_2409517E8();
    sub_240864EE4();
    uint64_t v17 = sub_2409550F8();

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    swift_bridgeObjectRelease();
  }
  return v17;
}

uint64_t sub_2408B6AB4()
{
  sub_240851D44();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SharedConceptCodedValue(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v0 + 40);
  if (!*(void *)(v8 + 16)) {
    return 0;
  }
  sub_2408B7178(v8 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), (uint64_t)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SharedConceptCodedValue);
  sub_2408B7178((uint64_t)&v7[*(int *)(v4 + 20)], (uint64_t)v3, (uint64_t (*)(void))sub_240851D44);
  sub_2408B7104(0);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v3, 1, v9) == 1)
  {
    sub_2408B816C((uint64_t)v3, (uint64_t (*)(void))sub_240851D44);
    sub_2408B816C((uint64_t)v7, type metadata accessor for SharedConceptCodedValue);
    return 0;
  }
  uint64_t v12 = (void *)sub_240954658();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v3, v10);
  sub_2408B816C((uint64_t)v7, type metadata accessor for SharedConceptCodedValue);
  id v13 = objc_msgSend(v12, sel_unitString);

  if (!v13) {
    return 0;
  }
  uint64_t v14 = sub_2409547C8();

  return v14;
}

uint64_t sub_2408B6D28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F45FE8];
  uint64_t v3 = sub_2409528B8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_2408B6D9C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2408B6DCC@<X0>(uint64_t a1@<X8>)
{
  sub_2409519D8();
  uint64_t v2 = sub_240951A28();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 0, 1, v2);
}

uint64_t sub_2408B6E40()
{
  return 0;
}

uint64_t sub_2408B6E4C()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2408B6E7C()
{
  return sub_2408732E4(*(void *)(v0 + 40));
}

uint64_t sub_2408B6E94@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_2408734EC(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_2408B6EC0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_24087352C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_2408B6EEC()
{
  sub_2408B816C(v0 + OBJC_IVAR____TtC13HealthRecords37SharedConceptDetailDataSourceProvider_chartDefining, type metadata accessor for SharedConceptFeedItemData);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_2408B6F84()
{
  return type metadata accessor for SharedConceptDetailDataSourceProvider();
}

uint64_t type metadata accessor for SharedConceptDetailDataSourceProvider()
{
  uint64_t result = qword_268C912A8;
  if (!qword_268C912A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2408B6FD8()
{
  uint64_t result = type metadata accessor for SharedConceptFeedItemData(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void *sub_2408B7084()
{
  return sub_2408B75DC();
}

unint64_t sub_2408B70B0()
{
  unint64_t result = qword_268C912B8;
  if (!qword_268C912B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C912B8);
  }
  return result;
}

void sub_2408B7104(uint64_t a1)
{
}

unint64_t sub_2408B7138()
{
  unint64_t result = qword_26AFCDF30;
  if (!qword_26AFCDF30)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFCDF30);
  }
  return result;
}

uint64_t sub_2408B7178(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2408B71E0()
{
  uint64_t v1 = sub_240953598();
  uint64_t v19 = *(void *)(v1 - 8);
  uint64_t v20 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v18 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408B7E18(0, &qword_268C912C0, (uint64_t (*)(uint64_t))sub_2408B7E7C, MEMORY[0x263EFDDF8]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v18 - v6;
  sub_2408B8098(0, &qword_268C91310, &qword_268C91318, &qword_268C90BC0);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v18 - v11;
  v21[0] = *(void *)(v0 + OBJC_IVAR____TtC13HealthRecords37SharedConceptDetailDataSourceProvider_chartPoints);
  sub_2408B7E7C();
  swift_bridgeObjectRetain();
  sub_2409543A8();
  sub_2408B7ED4(0, &qword_268C91318, &qword_268C90BC0);
  sub_240954378();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_2408B80F4();
  sub_240954498();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v13 = v0 + OBJC_IVAR____TtC13HealthRecords37SharedConceptDetailDataSourceProvider_chartDefining;
  v21[3] = type metadata accessor for SharedConceptFeedItemData(0);
  v21[4] = sub_2408B7F30(&qword_268C91328, (void (*)(uint64_t))type metadata accessor for SharedConceptFeedItemData);
  uint64_t v14 = sub_240851B6C(v21);
  sub_2408B7178(v13, (uint64_t)v14, type metadata accessor for SharedConceptFeedItemData);
  (*(void (**)(char *, void, uint64_t))(v19 + 104))(v18, *MEMORY[0x263F461D8], v20);
  id v15 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC13HealthRecords37SharedConceptDetailDataSourceProvider_profile), sel_healthStore);
  sub_240952848();
  swift_allocObject();
  uint64_t v16 = sub_240952838();
  sub_2408B7F30(&qword_268C91330, MEMORY[0x263F45FB8]);
  return v16;
}

void *sub_2408B75DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2409540C8();
  uint64_t v56 = *(void *)(v2 - 8);
  uint64_t v57 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v58 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408B7E18(0, &qword_268C912C0, (uint64_t (*)(uint64_t))sub_2408B7E7C, MEMORY[0x263EFDDF8]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v56 - v7;
  sub_2408B8098(0, &qword_268C912C8, &qword_268C912D0, &qword_268C90BA8);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v56 - v12;
  long long v61 = xmmword_240958650;
  uint64_t v62 = sub_2408B71E0();
  uint64_t v63 = v14;
  uint64_t v15 = (uint64_t)v0 + OBJC_IVAR____TtC13HealthRecords37SharedConceptDetailDataSourceProvider_chartDefining;
  v60[3] = type metadata accessor for SharedConceptFeedItemData(0);
  v60[4] = sub_2408B7F30(&qword_268C912D8, (void (*)(uint64_t))type metadata accessor for SharedConceptFeedItemData);
  uint64_t v16 = sub_240851B6C(v60);
  sub_2408B7178(v15, (uint64_t)v16, type metadata accessor for SharedConceptFeedItemData);
  sub_240952C58();
  swift_allocObject();
  uint64_t v17 = sub_240952C48();
  uint64_t v18 = sub_2408B7F30(&qword_268C912E0, MEMORY[0x263F460A8]);
  uint64_t v64 = v17;
  uint64_t v65 = v18;
  v60[0] = *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC13HealthRecords37SharedConceptDetailDataSourceProvider_chartPoints);
  sub_2408B7E7C();
  swift_bridgeObjectRetain();
  sub_2409543A8();
  sub_2408B7ED4(0, &qword_268C912D0, &qword_268C90BA8);
  sub_240954378();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_2408B7F78();
  sub_240954498();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v19 = *(void **)((char *)v1 + OBJC_IVAR____TtC13HealthRecords37SharedConceptDetailDataSourceProvider_profile);
  sub_240952A28();
  swift_allocObject();
  id v20 = v19;
  uint64_t v21 = sub_240952A18();
  uint64_t v22 = sub_2408B7F30(&qword_268C912F0, MEMORY[0x263F46050]);
  uint64_t v66 = v21;
  uint64_t v67 = v22;
  uint64_t v68 = 0;
  uint64_t v69 = 0;
  uint64_t v23 = v62;
  if (v62)
  {
    uint64_t v24 = v63;
    swift_unknownObjectRetain();
    unint64_t v25 = sub_2408C348C(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v27 = v25[2];
    unint64_t v26 = v25[3];
    if (v27 >= v26 >> 1) {
      unint64_t v25 = sub_2408C348C((void *)(v26 > 1), v27 + 1, 1, v25);
    }
    uint64_t v28 = v58;
    void v25[2] = v27 + 1;
    uint64_t v29 = &v25[2 * v27];
    v29[4] = v23;
    void v29[5] = v24;
  }
  else
  {
    unint64_t v25 = (void *)MEMORY[0x263F8EE78];
    uint64_t v28 = v58;
  }
  uint64_t v30 = v64;
  if (v64)
  {
    uint64_t v31 = v65;
    swift_unknownObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v25 = sub_2408C348C(0, v25[2] + 1, 1, v25);
    }
    unint64_t v33 = v25[2];
    unint64_t v32 = v25[3];
    if (v33 >= v32 >> 1) {
      unint64_t v25 = sub_2408C348C((void *)(v32 > 1), v33 + 1, 1, v25);
    }
    void v25[2] = v33 + 1;
    uint64_t v34 = &v25[2 * v33];
    void v34[4] = v30;
    v34[5] = v31;
    uint64_t v21 = v66;
  }
  if (v21)
  {
    uint64_t v35 = v67;
    swift_unknownObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v25 = sub_2408C348C(0, v25[2] + 1, 1, v25);
    }
    unint64_t v37 = v25[2];
    unint64_t v36 = v25[3];
    if (v37 >= v36 >> 1) {
      unint64_t v25 = sub_2408C348C((void *)(v36 > 1), v37 + 1, 1, v25);
    }
    void v25[2] = v37 + 1;
    uint64_t v38 = &v25[2 * v37];
    uint64_t v38[4] = v21;
    v38[5] = v35;
  }
  uint64_t v39 = v68;
  if (v68)
  {
    uint64_t v40 = v69;
    swift_unknownObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v25 = sub_2408C348C(0, v25[2] + 1, 1, v25);
    }
    unint64_t v42 = v25[2];
    unint64_t v41 = v25[3];
    if (v42 >= v41 >> 1) {
      unint64_t v25 = sub_2408C348C((void *)(v41 > 1), v42 + 1, 1, v25);
    }
    void v25[2] = v42 + 1;
    uint64_t v43 = &v25[2 * v42];
    uint64_t v43[4] = v39;
    v43[5] = v40;
  }
  sub_2408B7FF0();
  swift_arrayDestroy();
  sub_240954078();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v44 = sub_2409540B8();
  os_log_type_t v45 = sub_240954C38();
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v46 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    *(_DWORD *)uint64_t v46 = 136446466;
    uint64_t v59 = *v1;
    v60[0] = v47;
    sub_2408B805C();
    uint64_t v48 = sub_2409547E8();
    uint64_t v59 = sub_2408370E4(v48, v49, v60);
    sub_2409550B8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v46 + 12) = 2082;
    uint64_t v50 = sub_24084850C(0, (unint64_t *)&qword_268C91300);
    uint64_t v51 = swift_bridgeObjectRetain();
    uint64_t v52 = MEMORY[0x245600C90](v51, v50);
    unint64_t v54 = v53;
    swift_bridgeObjectRelease();
    uint64_t v59 = sub_2408370E4(v52, v54, v60);
    sub_2409550B8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v44, v45, "[%{public}s] Notifying data sources of hidden display types change, sources: %{public}s", (uint8_t *)v46, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v47, -1, -1);
    MEMORY[0x2456021C0](v46, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v56 + 8))(v28, v57);
  return v25;
}

void sub_2408B7E18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2408B7E7C()
{
  if (!qword_268C90ED0)
  {
    unint64_t v0 = sub_240954A38();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C90ED0);
    }
  }
}

void sub_2408B7ED4(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_24084850C(255, a3);
    unint64_t v4 = sub_240954A38();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2408B7F30(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2408B7F78()
{
  unint64_t result = qword_268C912E8;
  if (!qword_268C912E8)
  {
    sub_2408B8098(255, &qword_268C912C8, &qword_268C912D0, &qword_268C90BA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C912E8);
  }
  return result;
}

void sub_2408B7FF0()
{
  if (!qword_268C912F8)
  {
    sub_24084850C(255, (unint64_t *)&qword_268C91300);
    unint64_t v0 = sub_240955098();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C912F8);
    }
  }
}

unint64_t sub_2408B805C()
{
  unint64_t result = qword_268C91308;
  if (!qword_268C91308)
  {
    type metadata accessor for SharedConceptDetailDataSourceProvider();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C91308);
  }
  return result;
}

void sub_2408B8098(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  if (!*a2)
  {
    sub_2408B7ED4(255, a3, a4);
    unint64_t v5 = sub_240954398();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_2408B80F4()
{
  unint64_t result = qword_268C91320;
  if (!qword_268C91320)
  {
    sub_2408B8098(255, &qword_268C91310, &qword_268C91318, &qword_268C90BC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91320);
  }
  return result;
}

uint64_t sub_2408B816C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for SharedConceptDetailViewController()
{
  uint64_t result = qword_268C91338;
  if (!qword_268C91338) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2408B8218()
{
  uint64_t result = type metadata accessor for SharedConceptFeedItemData(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_2408B82BC()
{
}

id sub_2408B8318()
{
  uint64_t v1 = type metadata accessor for SharedConceptFeedItemData(0);
  uint64_t v2 = v1 - 8;
  MEMORY[0x270FA5388](v1);
  unint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v5 = &v0[qword_268C991B0];
  sub_2408B8BD8((uint64_t)&v0[qword_268C991B0], (uint64_t)v4);
  uint64_t v6 = *(void *)&v5[*(int *)(v2 + 56)];
  uint64_t v7 = *(void **)&v0[qword_268C991B8];
  uint64_t v8 = type metadata accessor for SharedConceptDetailDataSourceProvider();
  uint64_t v9 = swift_allocObject();
  sub_240865A20((uint64_t)v4, v9 + OBJC_IVAR____TtC13HealthRecords37SharedConceptDetailDataSourceProvider_chartDefining);
  *(void *)(v9 + OBJC_IVAR____TtC13HealthRecords37SharedConceptDetailDataSourceProvider_chartPoints) = v6;
  *(void *)(v9 + OBJC_IVAR____TtC13HealthRecords37SharedConceptDetailDataSourceProvider_profile) = v7;
  uint64_t v17 = v8;
  unint64_t v18 = sub_2408B8C3C();
  uint64_t v16 = v9;
  swift_bridgeObjectRetain();
  id v10 = v7;
  sub_240953E38();
  uint64_t v11 = (void *)sub_240954788();
  objc_msgSend(v0, sel_setTitle_, v11);

  uint64_t v12 = (objc_class *)type metadata accessor for SharedConceptDetailViewController();
  v15.receiver = v0;
  v15.super_class = v12;
  return objc_msgSendSuper2(&v15, sel_viewDidLoad);
}

void sub_2408B8488(void *a1)
{
  id v1 = a1;
  sub_2408B8318();
}

id sub_2408B84D0()
{
  id result = objc_msgSend(v0, sel_collectionView);
  if (result)
  {
    sub_240953E28();
    sub_240953E08();
    swift_allocObject();
    return (id)sub_240953DF8();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_2408B8554()
{
  sub_240953E48();
  id v1 = (void (*)(void))sub_240953E58();
  v1();
  sub_240953E28();
  uint64_t v2 = sub_240953AC8();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    sub_24084850C(0, (unint64_t *)&qword_268C91300);
    sub_24084850C(0, &qword_268C91368);
    uint64_t v4 = 0;
    while (1)
    {
      long long v9 = *(_OWORD *)(v2 + 16 * v4 + 32);
      swift_unknownObjectRetain_n();
      if (swift_dynamicCast())
      {
        sub_24083AB20(v7, (uint64_t)v10);
        sub_2408304E8(v10, v10[3]);
        id result = objc_msgSend(v0, sel_collectionView);
        if (!result)
        {
          __break(1u);
          return result;
        }
        uint64_t v6 = result;
        sub_240953B68();

        swift_unknownObjectRelease();
        sub_2408371B8((uint64_t)v10);
      }
      else
      {
        uint64_t v8 = 0;
        memset(v7, 0, sizeof(v7));
        swift_unknownObjectRelease();
        sub_2408B8CF0((uint64_t)v7, &qword_268C91370, &qword_268C91368);
      }
      if (v3 == ++v4) {
        return (id)swift_bridgeObjectRelease();
      }
    }
  }

  return (id)swift_bridgeObjectRelease();
}

void sub_2408B8748(void *a1)
{
  uint64_t v2 = (void *)sub_240951B78();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v2, 1);

  uint64_t v3 = (void *)sub_240951B78();
  id v4 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v3);

  if (v4)
  {
    sub_240953E28();
    sub_240953AD8();
    sub_240953848();
    swift_release();
    sub_2408690E0((uint64_t)v11, (uint64_t)v8);
    sub_24084850C(0, &qword_268C90B50);
    sub_24084850C(0, &qword_268C91348);
    if (swift_dynamicCast())
    {
      unint64_t v5 = v6;
LABEL_6:
      sub_24083AB20(v5, (uint64_t)v10);
      sub_2408304E8(v10, v10[3]);
      sub_240953928();

      sub_2408371B8((uint64_t)v11);
      sub_2408371B8((uint64_t)v10);
      return;
    }
    uint64_t v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_2408B8CF0((uint64_t)v6, &qword_268C91350, &qword_268C91348);
    *(void *)&v6[0] = v4;
    sub_2408B8B98();
    id v4 = v4;
    if (swift_dynamicCast())
    {
      unint64_t v5 = v8;
      goto LABEL_6;
    }
    uint64_t v9 = 0;
    memset(v8, 0, sizeof(v8));

    sub_2408371B8((uint64_t)v11);
    sub_2408B8CF0((uint64_t)v8, &qword_268C91350, &qword_268C91348);
  }
}

uint64_t sub_2408B896C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_240951B98();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240951B88();
  id v9 = a3;
  id v10 = a1;
  sub_2408B8748(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_2408B8A68()
{
}

void sub_2408B8A98(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_2408B8ACC()
{
  sub_2408B8C94(v0 + qword_268C991B0);
  id v1 = *(void **)(v0 + qword_268C991B8);
}

id sub_2408B8B0C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharedConceptDetailViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_2408B8B44(uint64_t a1)
{
  sub_2408B8C94(a1 + qword_268C991B0);
  objc_super v2 = *(void **)(a1 + qword_268C991B8);
}

uint64_t sub_2408B8B90()
{
  return type metadata accessor for SharedConceptDetailViewController();
}

unint64_t sub_2408B8B98()
{
  unint64_t result = qword_268C91358;
  if (!qword_268C91358)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268C91358);
  }
  return result;
}

uint64_t sub_2408B8BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SharedConceptFeedItemData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2408B8C3C()
{
  unint64_t result = qword_268C91360;
  if (!qword_268C91360)
  {
    type metadata accessor for SharedConceptDetailDataSourceProvider();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91360);
  }
  return result;
}

uint64_t sub_2408B8C94(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SharedConceptFeedItemData(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2408B8CF0(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  sub_2408B8D4C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_2408B8D4C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_24084850C(255, a3);
    unint64_t v4 = sub_240955098();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2408B8DA8()
{
  uint64_t v0 = sub_2409525A8();
  sub_2408BB348(v0, qword_26AFD0868);
  uint64_t v1 = sub_24083F214(v0, (uint64_t)qword_26AFD0868);
  uint64_t v2 = *MEMORY[0x263F45EA0];
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t sub_2408B8E30(void *a1)
{
  sub_24084221C();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[1] = *a1;
  sub_2408BA6C0(0, &qword_26AFCDEB8, MEMORY[0x263F8D488]);
  sub_2408BA730();
  sub_240954958();
  sub_24083F3C0();
  sub_240954298();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2408B8F68(void **a1)
{
  uint64_t v2 = sub_240952F68();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *a1;
  v11[1] = sub_240953188();
  id v7 = objc_msgSend(v6, sel_UUID);
  sub_240951A78();

  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F46130], v2);
  uint64_t v8 = sub_240953228();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v11[0] = v8;
  sub_2408BA81C(0, &qword_26AFCDD90, &qword_26AFCDF50, (uint64_t (*)(uint64_t))sub_2408BA7A4);
  id v9 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_2408BA81C(0, &qword_26AFCDC08, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
  sub_2408BA8A8(&qword_26AFCDD88, &qword_26AFCDD90, &qword_26AFCDF50, (uint64_t (*)(uint64_t))sub_2408BA7A4);
  sub_2408BA8A8((unint64_t *)&qword_26AFCDC00, &qword_26AFCDC08, (unint64_t *)&qword_26AFCF7F8, v9);
  return sub_2409541E8();
}

BOOL sub_2408B9198(void *a1)
{
  if (!*a1) {
    return 0;
  }
  uint64_t v1 = a1[1];
  sub_24083EDCC(0, &qword_26AFCDEF0);
  return v1 >= sub_240954C78();
}

uint64_t sub_2408B91F0@<X0>(long long *a1@<X0>, NSObject *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v84 = a5;
  uint64_t v80 = a4;
  uint64_t v75 = a3;
  os_log_t v83 = a2;
  uint64_t v6 = sub_240951A98();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v79 = &v68[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_240952B38();
  uint64_t v76 = *(void *)(v8 - 8);
  uint64_t v77 = v8;
  MEMORY[0x270FA5388](v8);
  unint64_t v81 = &v68[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_2409540C8();
  uint64_t v73 = *(void *)(v10 - 8);
  uint64_t v74 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v82 = &v68[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_24082EBC0(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v72 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v71 = &v68[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v78 = &v68[-v17];
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  id v20 = &v68[-v19];
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = &v68[-v21];
  sub_24083F870();
  uint64_t v24 = v23;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  unint64_t v27 = &v68[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v29 = *(int *)(MEMORY[0x270FA5388](v25) + 48);
  uint64_t v30 = &v68[v29 - v28];
  uint64_t v31 = (uint64_t)a1 + v29;
  long long v86 = *a1;
  *(_OWORD *)&v68[-v28] = v86;
  sub_24081B6E8((uint64_t)a1 + v29, (uint64_t)v30, (unint64_t *)&qword_26AFCF7F8, v12);
  if (!(void)v86)
  {
    uint64_t v22 = v30;
    goto LABEL_9;
  }
  id v32 = (id)v86;
  unint64_t v33 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_24081B504((uint64_t)v30, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
  uint64_t v34 = (uint64_t)&v27[*(int *)(v24 + 48)];
  sub_24081B6E8(v31, v34, (unint64_t *)&qword_26AFCF7F8, v33);
  sub_240882AA0(v34, (uint64_t)v22);
  LOBYTE(v34) = sub_240953F88();
  sub_24081B6E8((uint64_t)v22, (uint64_t)v20, (unint64_t *)&qword_26AFCF7F8, v33);
  if (v34)
  {

    sub_24081B504((uint64_t)v20, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
LABEL_9:
    uint64_t v57 = v84;
    sub_24081B504((uint64_t)v22, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
    uint64_t v58 = sub_240951E78();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v57, 1, 1, v58);
  }
  uint64_t v35 = sub_240951A28();
  int v36 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v20, 1, v35);
  sub_24081B504((uint64_t)v20, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
  if (v36 != 1)
  {

    goto LABEL_9;
  }
  unint64_t v37 = v82;
  sub_240954078();
  uint64_t v38 = v78;
  sub_24081B6E8((uint64_t)v22, (uint64_t)v78, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
  id v39 = v32;
  uint64_t v40 = sub_2409540B8();
  os_log_type_t v41 = sub_240954C38();
  int v42 = v41;
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v43 = swift_slowAlloc();
    os_log_t v83 = v40;
    uint64_t v44 = v43;
    uint64_t v70 = swift_slowAlloc();
    uint64_t v88 = v70;
    *(_DWORD *)uint64_t v44 = 136446466;
    id v45 = v39;
    *(void *)&long long v86 = v39;
    id v46 = v45;
    id v47 = (id)HKSensitiveLogItem();
    uint64_t v48 = (uint64_t)v38;
    sub_240955138();
    swift_unknownObjectRelease();
    int v69 = v42;
    uint64_t v49 = sub_2409547E8();
    unint64_t v51 = v50;

    uint64_t v87 = sub_2408370E4(v49, v51, &v88);
    sub_2409550B8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v44 + 12) = 2082;
    uint64_t v52 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
    sub_24081B6E8(v48, (uint64_t)v71, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
    uint64_t v53 = sub_2409547E8();
    uint64_t v87 = sub_2408370E4(v53, v54, &v88);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    id v39 = (id)v86;
    sub_24081B504(v48, (unint64_t *)&qword_26AFCF7F8, v52);
    os_log_t v55 = v83;
    _os_log_impl(&dword_240818000, v83, (os_log_type_t)v69, "Generating tip for concept: %{public}s, tile dismissed date: %{public}s", (uint8_t *)v44, 0x16u);
    uint64_t v56 = v70;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v56, -1, -1);
    MEMORY[0x2456021C0](v44, -1, -1);

    (*(void (**)(unsigned char *, uint64_t))(v73 + 8))(v82, v74);
  }
  else
  {

    sub_24081B504((uint64_t)v38, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
    (*(void (**)(unsigned char *, uint64_t))(v73 + 8))(v37, v74);
  }
  uint64_t v60 = v84;
  uint64_t v61 = v75;
  id v62 = v39;
  sub_240954EB8();
  sub_24083EDCC(0, &qword_26AFCDEF0);
  sub_240954C68();
  id v63 = objc_msgSend(v62, sel_UUID);
  sub_240951A78();

  uint64_t v64 = v81;
  sub_240952B28();
  uint64_t v65 = (void *)sub_240951F68();
  uint64_t v66 = v85;
  sub_2408B9AB4(v61, v65, 0, v60);

  (*(void (**)(unsigned char *, uint64_t))(v76 + 8))(v64, v77);
  if (v66) {
    return sub_24081B504((uint64_t)v22, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
  }
  sub_24081B504((uint64_t)v22, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
  uint64_t v67 = sub_240951E78();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v60, 0, 1, v67);
}

uint64_t sub_2408B9AB4@<X0>(uint64_t a1@<X1>, void *a2@<X2>, int a3@<W3>, uint64_t a4@<X8>)
{
  id v48 = a2;
  int v44 = a3;
  uint64_t v45 = a4;
  uint64_t v46 = a1;
  uint64_t v4 = sub_240951A28();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v43 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24082EBC0(0, &qword_26AFCF7F0, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  int v42 = (char *)&v37 - v8;
  sub_24082EBC0(0, &qword_268C90A48, MEMORY[0x263F45770], v6);
  MEMORY[0x270FA5388](v9 - 8);
  os_log_type_t v41 = (char *)&v37 - v10;
  uint64_t v40 = sub_240951C08();
  uint64_t v38 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  id v39 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2409528B8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408BA6C0(0, (unint64_t *)&qword_26AFCE260, MEMORY[0x263F08F88]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  id v20 = (char *)&v37 - v19;
  sub_24082EBC0(0, &qword_26AFCE2A0, MEMORY[0x263F07508], v6);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (char *)&v37 - v22;
  sub_240952B18();
  uint64_t v24 = (void *)sub_240954658();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  id v25 = objc_msgSend(v24, sel_UUID);

  sub_240951A78();
  uint64_t v26 = sub_240951A98();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v23, 0, 1, v26);
  if (qword_26AFCC9F8 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_2409525A8();
  sub_24083F214(v27, (uint64_t)qword_26AFD0868);
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F45FE8], v12);
  sub_2409534E8();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_24081B504((uint64_t)v23, &qword_26AFCE2A0, MEMORY[0x263F07508]);
  sub_240952B38();
  sub_24083ED3C(&qword_268C91388, MEMORY[0x263F46090]);
  uint64_t v28 = v47;
  sub_2409517A8();
  if (v28) {
    return swift_bridgeObjectRelease();
  }
  type metadata accessor for LabsTipViewController();
  (*(void (**)(char *, void, uint64_t))(v38 + 104))(v39, *MEMORY[0x263F45520], v40);
  id v30 = v48;
  sub_240951CC8();
  sub_240951A18();
  uint64_t v31 = v42;
  sub_240951828();
  uint64_t v32 = sub_240951838();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 0, 1, v32);
  sub_2409521F8();
  sub_240951DD8();
  sub_240951D78();
  sub_240951E58();
  sub_240951D68();
  sub_240951D58();
  uint64_t v50 = MEMORY[0x263F8EE88];
  uint64_t v33 = sub_2409520B8();
  sub_240940118(&v49, v33, v34);
  swift_bridgeObjectRelease();
  uint64_t v35 = v50;
  int v36 = (uint64_t (*)(uint64_t *, void))sub_240951E38();
  sub_24089E058(v35);
  return v36(&v49, 0);
}

uint64_t sub_2408BA178@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24082EBC0(0, (unint64_t *)&qword_26AFCDDE0, (uint64_t (*)(uint64_t))sub_24083FF94, MEMORY[0x263EFDDF8]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v32 - v7;
  uint64_t v37 = sub_2409540C8();
  uint64_t v9 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  sub_240954058();
  id v13 = v12;
  id v14 = v12;
  uint64_t v15 = sub_2409540B8();
  os_log_type_t v16 = sub_240954C18();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v35 = v5;
    uint64_t v18 = v17;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v39 = v33;
    *(_DWORD *)uint64_t v18 = 136446466;
    uint64_t v38 = sub_2408BB2C4(0);
    sub_2408BB2E4(0, &qword_268C91380, (void (*)(uint64_t))sub_2408BB2C4);
    uint64_t v34 = v6;
    uint64_t v19 = sub_2409547E8();
    int v36 = a2;
    uint64_t v38 = sub_2408370E4(v19, v20, &v39);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    v32[1] = v18 + 14;
    uint64_t v38 = (uint64_t)v12;
    id v21 = v12;
    id v22 = v12;
    sub_24083F3C0();
    sub_240955658();
    id v23 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v24 = sub_2409547E8();
    unint64_t v26 = v25;

    uint64_t v27 = v24;
    a2 = v36;
    uint64_t v38 = sub_2408370E4(v27, v26, &v39);
    sub_2409550B8();
    uint64_t v6 = v34;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240818000, v15, v16, "[%{public}s] Unable to compute desired difference for commit: %{public}s", (uint8_t *)v18, 0x16u);
    uint64_t v28 = v33;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v28, -1, -1);
    uint64_t v29 = v18;
    uint64_t v5 = v35;
    MEMORY[0x2456021C0](v29, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v37);
  uint64_t v38 = MEMORY[0x263F8EE78];
  sub_24083FF94();
  sub_2409543A8();
  sub_2408BB23C();
  uint64_t v30 = sub_240954498();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v30;
  return result;
}

uint64_t sub_2408BA588()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HealthRecords16LabTipsGenerator_domain;
  uint64_t v2 = sub_240951F18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_24083B3B4(v0 + OBJC_IVAR____TtC13HealthRecords16LabTipsGenerator_context);

  return swift_deallocClassInstance();
}

uint64_t sub_2408BA640()
{
  return type metadata accessor for LabTipsGenerator();
}

uint64_t sub_2408BA648@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC13HealthRecords16LabTipsGenerator_domain;
  uint64_t v4 = sub_240951F18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_2408BA6C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_24083EDCC(255, &qword_26AFCDF40);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_2408BA730()
{
  unint64_t result = qword_26AFCDEC0;
  if (!qword_26AFCDEC0)
  {
    sub_2408BA6C0(255, &qword_26AFCDEB8, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCDEC0);
  }
  return result;
}

void sub_2408BA7A4()
{
  if (!qword_26AFCDF48)
  {
    sub_24083EDCC(255, &qword_26AFCDF40);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AFCDF48);
    }
  }
}

void sub_2408BA81C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_24082EBC0(255, a3, a4, MEMORY[0x263F8D8F0]);
    sub_24083F3C0();
    unint64_t v5 = sub_240954308();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_2408BA8A8(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2408BA81C(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2408BA8F8(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v37 = a3;
  sub_24082EBC0(0, &qword_26AFD03B8, MEMORY[0x263F45630], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v29 - v7;
  uint64_t v9 = sub_240951E78();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  int v36 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v32 = (char *)&v29 - v13;
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14) {
    return MEMORY[0x263F8EE78];
  }
  sub_24083F870();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  uint64_t v30 = v10;
  uint64_t v34 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v35 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v33 = *(void *)(v16 + 72);
  uint64_t v29 = a1;
  uint64_t v18 = swift_bridgeObjectRetain();
  unint64_t v19 = MEMORY[0x263F8EE78];
  uint64_t v31 = a2;
  do
  {
    unint64_t v20 = (void *)MEMORY[0x245601B40](v18);
    a2(v17);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v19;
    }
    if ((*v35)(v8, 1, v9) == 1)
    {
      uint64_t v18 = sub_24081B504((uint64_t)v8, &qword_26AFD03B8, MEMORY[0x263F45630]);
    }
    else
    {
      uint64_t v21 = v9;
      id v22 = *v34;
      id v23 = v32;
      (*v34)(v32, v8, v21);
      uint64_t v24 = v23;
      uint64_t v25 = v21;
      v22(v36, v24, v21);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v19 = sub_2408C3044(0, *(void *)(v19 + 16) + 1, 1, v19);
      }
      unint64_t v27 = *(void *)(v19 + 16);
      unint64_t v26 = *(void *)(v19 + 24);
      if (v27 >= v26 >> 1) {
        unint64_t v19 = sub_2408C3044(v26 > 1, v27 + 1, 1, v19);
      }
      *(void *)(v19 + 16) = v27 + 1;
      uint64_t v18 = ((uint64_t (*)(unint64_t, char *, uint64_t))v22)(v19+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(void *)(v30 + 72) * v27, v36, v25);
      uint64_t v9 = v25;
      a2 = v31;
    }
    v17 += v33;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v19;
}

void sub_2408BAC8C(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_2409553D8();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_240870140();
      uint64_t v3 = sub_240955278();
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_2409553D8();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = MEMORY[0x263F8EE88];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = v3 + 56;
  uint64_t v43 = v5;
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    unint64_t v41 = v1;
    while (1)
    {
      while (1)
      {
        uint64_t v9 = MEMORY[0x2456015B0](v8, v1);
        BOOL v10 = __OFADD__(v8++, 1);
        if (v10)
        {
          __break(1u);
          goto LABEL_36;
        }
        uint64_t v11 = v9;
        uint64_t v12 = sub_240954FB8();
        uint64_t v13 = -1 << *(unsigned char *)(v3 + 32);
        unint64_t v14 = v12 & ~v13;
        unint64_t v15 = v14 >> 6;
        uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
        uint64_t v17 = 1 << v14;
        if (((1 << v14) & v16) != 0) {
          break;
        }
LABEL_20:
        *(void *)(v7 + 8 * v15) = v17 | v16;
        *(void *)(*(void *)(v3 + 48) + 8 * v14) = v11;
        uint64_t v23 = *(void *)(v3 + 16);
        BOOL v10 = __OFADD__(v23, 1);
        uint64_t v24 = v23 + 1;
        if (v10) {
          goto LABEL_37;
        }
        *(void *)(v3 + 16) = v24;
        if (v8 == v5) {
          return;
        }
      }
      sub_24083EDCC(0, &qword_26AFCF390);
      id v18 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
      char v19 = sub_240954FC8();

      if ((v19 & 1) == 0)
      {
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
          char v22 = sub_240954FC8();

          if (v22) {
            goto LABEL_11;
          }
        }
        unint64_t v1 = v41;
        uint64_t v5 = v43;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      unint64_t v1 = v41;
      uint64_t v5 = v43;
      if (v8 == v43) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v40 = v1 + 32;
  uint64_t v42 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v42)
  {
    id v26 = *(id *)(v40 + 8 * v25);
    uint64_t v27 = sub_240954FB8();
    uint64_t v28 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v29 = v27 & ~v28;
    unint64_t v30 = v29 >> 6;
    uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
    uint64_t v32 = 1 << v29;
    if (((1 << v29) & v31) != 0)
    {
      sub_24083EDCC(0, &qword_26AFCF390);
      id v33 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
      char v34 = sub_240954FC8();

      if (v34)
      {
LABEL_24:

        goto LABEL_25;
      }
      uint64_t v35 = ~v28;
      while (1)
      {
        unint64_t v29 = (v29 + 1) & v35;
        unint64_t v30 = v29 >> 6;
        uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
        uint64_t v32 = 1 << v29;
        if ((v31 & (1 << v29)) == 0) {
          break;
        }
        id v36 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
        char v37 = sub_240954FC8();

        if (v37) {
          goto LABEL_24;
        }
      }
    }
    *(void *)(v7 + 8 * v30) = v32 | v31;
    *(void *)(*(void *)(v3 + 48) + 8 * v29) = v26;
    uint64_t v38 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v38, 1);
    uint64_t v39 = v38 + 1;
    if (v10) {
      goto LABEL_38;
    }
    *(void *)(v3 + 16) = v39;
LABEL_25:
    if (++v25 == v43) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t sub_2408BAFE4()
{
  swift_release();

  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_2408BB02C(void **a1)
{
  return sub_2408B8F68(a1);
}

uint64_t sub_2408BB038()
{
  unint64_t v1 = (int *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  swift_release();
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x270FA0238](v0, v5, v4);
}

unint64_t sub_2408BB144@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v6 = *(void *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v2 + 32);
  uint64_t v9 = *(void *)(v2 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *a1;
  v12[1] = *(_OWORD *)(v2 + 16);
  uint64_t v13 = v8;
  uint64_t v14 = v2 + v7;
  uint64_t v15 = v9;
  unint64_t result = sub_2408BA8F8(v10, (void (*)(void))sub_2408BB324, (uint64_t)v12);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_2408BB224()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2408BB234@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2408BA178(a1, a2);
}

unint64_t sub_2408BB23C()
{
  unint64_t result = qword_26AFCDDD8;
  if (!qword_26AFCDDD8)
  {
    sub_24082EBC0(255, (unint64_t *)&qword_26AFCDDE0, (uint64_t (*)(uint64_t))sub_24083FF94, MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCDDD8);
  }
  return result;
}

uint64_t sub_2408BB2C4(uint64_t a1)
{
  return sub_2408BB2E4(a1, &qword_268C91378, (void (*)(uint64_t))type metadata accessor for LabTipsGenerator);
}

uint64_t sub_2408BB2E4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a2;
  if (!*a2)
  {
    a3(255);
    uint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_2408BB324@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2408B91F0(a1, *(NSObject **)(v2 + 16), *(void *)(v2 + 32), *(void *)(v2 + 40), a2);
}

uint64_t *sub_2408BB348(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_2408BB3AC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_2408BB54C();
    uint64_t v3 = sub_240955278();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_2409556F8();
      swift_bridgeObjectRetain();
      sub_240954868();
      uint64_t result = sub_240955748();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_240955618(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          char v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_240955618();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      id v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *id v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

void sub_2408BB54C()
{
  if (!qword_26AFD05C8)
  {
    unint64_t v0 = sub_240955288();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD05C8);
    }
  }
}

id sub_2408BB5AC()
{
  return sub_2408BB5DC(&OBJC_IVAR____TtC13HealthRecords18CategoryUpdateView____lazy_storage___countLabel, MEMORY[0x263F835D0]);
}

id sub_2408BB5C4()
{
  return sub_2408BB5DC(&OBJC_IVAR____TtC13HealthRecords18CategoryUpdateView____lazy_storage___descriptionLabel, MEMORY[0x263F835F0]);
}

id sub_2408BB5DC(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v7 = v2;
    sub_24083EDCC(0, &qword_268C913E8);
    id v8 = objc_msgSend(self, sel_preferredFontForTextStyle_, *a2);
    id v9 = objc_msgSend(self, sel_labelColor);
    uint64_t v10 = (void *)sub_240954F88();
    unint64_t v11 = *(void **)(v2 + v3);
    *(void *)(v7 + v3) = v10;
    id v5 = v10;

    uint64_t v4 = 0;
  }
  id v12 = v4;
  return v5;
}

id sub_2408BB6BC()
{
  return sub_2408BB5DC(&OBJC_IVAR____TtC13HealthRecords18CategoryUpdateView____lazy_storage___actionLabel, MEMORY[0x263F835F0]);
}

void sub_2408BB6D4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC13HealthRecords18CategoryUpdateView_viewData + 8);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC13HealthRecords18CategoryUpdateView_viewData);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v3 = sub_2408BB5AC();
    uint64_t v4 = (void *)sub_240954788();
    objc_msgSend(v3, sel_setText_, v4);

    id v5 = sub_2408BB5C4();
    uint64_t v6 = (void *)sub_240954788();
    objc_msgSend(v5, sel_setText_, v6);

    id v7 = sub_2408BB6BC();
    id v10 = (id)sub_240954788();
    sub_2408BF0B8(v2, v1);
    objc_msgSend(v7, sel_setText_, v10);
  }
  else
  {
    id v8 = sub_2408BB5AC();
    objc_msgSend(v8, sel_setText_, 0);

    id v9 = sub_2408BB5C4();
    objc_msgSend(v9, sel_setText_, 0);

    id v10 = sub_2408BB6BC();
    objc_msgSend(v10, sel_setText_, 0);
  }
}

id sub_2408BB85C(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC13HealthRecords18CategoryUpdateView____lazy_storage___countLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC13HealthRecords18CategoryUpdateView____lazy_storage___descriptionLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC13HealthRecords18CategoryUpdateView____lazy_storage___actionLabel] = 0;
  id v9 = &v4[OBJC_IVAR____TtC13HealthRecords18CategoryUpdateView_viewData];
  updated = (objc_class *)type metadata accessor for CategoryUpdateView();
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  v14.receiver = v4;
  v14.super_class = updated;
  id v11 = objc_msgSendSuper2(&v14, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_2408BBAB4();
  sub_2408BBBD4();
  id v12 = v11;
  sub_240954E88();
  objc_msgSend(v12, sel_setDirectionalLayoutMargins_);

  return v12;
}

void sub_2408BBAB4()
{
  id v1 = sub_2408BB5AC();
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  id v2 = sub_2408BB5C4();
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  id v3 = sub_2408BB6BC();
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  id v4 = sub_2408BB6BC();
  id v5 = objc_msgSend(v0, sel_tintColor);
  objc_msgSend(v4, sel_setTextColor_, v5);

  id v6 = sub_2408BB5AC();
  objc_msgSend(v0, sel_addSubview_, v6);

  id v7 = sub_2408BB5C4();
  objc_msgSend(v0, sel_addSubview_, v7);

  id v8 = sub_2408BB6BC();
  objc_msgSend(v0, sel_addSubview_, v8);
}

void sub_2408BBBD4()
{
  unint64_t v51 = self;
  sub_2408B2F90(0, (unint64_t *)&qword_26AFCF418, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_240959320;
  id v2 = sub_2408BB5AC();
  id v3 = objc_msgSend(v2, sel_leadingAnchor);

  id v4 = objc_msgSend(v0, sel_layoutMarginsGuide);
  id v5 = objc_msgSend(v4, sel_leadingAnchor);

  id v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_, v5);
  *(void *)(v1 + 32) = v6;
  id v7 = sub_2408BB5AC();
  id v8 = objc_msgSend(v7, sel_trailingAnchor);

  id v9 = objc_msgSend(v0, (SEL)&selRef_setThreadIdentifier_ + 1);
  id v10 = objc_msgSend(v9, sel_trailingAnchor);

  id v11 = objc_msgSend(v8, (SEL)&off_2650D82E8 + 6, v10);
  *(void *)(v1 + 40) = v11;
  id v12 = sub_2408BB5AC();
  id v13 = objc_msgSend(v12, sel_topAnchor);

  id v14 = objc_msgSend(v0, sel_topAnchor);
  id v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v14, 12.0);

  *(void *)(v1 + 48) = v15;
  id v16 = sub_2408BB5AC();
  id v17 = objc_msgSend(v16, sel_bottomAnchor);

  id v18 = sub_2408BB5C4();
  id v19 = objc_msgSend(v18, sel_topAnchor);

  id v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v19, -4.0);
  *(void *)(v1 + 56) = v20;
  id v21 = sub_2408BB5C4();
  id v22 = objc_msgSend(v21, sel_leadingAnchor);

  id v23 = sub_2408BB5AC();
  id v24 = objc_msgSend(v23, sel_leadingAnchor);

  id v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v24);
  *(void *)(v1 + 64) = v25;
  id v26 = sub_2408BB5C4();
  id v27 = objc_msgSend(v26, sel_trailingAnchor);

  id v28 = sub_2408BB5AC();
  id v29 = objc_msgSend(v28, sel_trailingAnchor);

  id v30 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v29);
  *(void *)(v1 + 72) = v30;
  id v31 = sub_2408BB5C4();
  id v32 = objc_msgSend(v31, sel_bottomAnchor);

  id v33 = sub_2408BB6BC();
  id v34 = objc_msgSend(v33, sel_topAnchor);

  id v35 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v34, -4.0);
  *(void *)(v1 + 80) = v35;
  id v36 = sub_2408BB6BC();
  id v37 = objc_msgSend(v36, sel_leadingAnchor);

  id v38 = sub_2408BB5AC();
  id v39 = objc_msgSend(v38, sel_leadingAnchor);

  id v40 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v39);
  *(void *)(v1 + 88) = v40;
  id v41 = sub_2408BB6BC();
  id v42 = objc_msgSend(v41, sel_trailingAnchor);

  id v43 = sub_2408BB5AC();
  id v44 = objc_msgSend(v43, sel_trailingAnchor);

  id v45 = objc_msgSend(v42, sel_constraintEqualToAnchor_, v44);
  *(void *)(v1 + 96) = v45;
  id v46 = sub_2408BB6BC();
  id v47 = objc_msgSend(v46, sel_bottomAnchor);

  id v48 = objc_msgSend(v0, sel_layoutMarginsGuide);
  id v49 = objc_msgSend(v48, sel_bottomAnchor);

  id v50 = objc_msgSend(v47, sel_constraintEqualToAnchor_, v49);
  *(void *)(v1 + 104) = v50;
  sub_2409549B8();
  sub_24083EDCC(0, &qword_268C91A80);
  id v52 = (id)sub_240954988();
  swift_bridgeObjectRelease();
  objc_msgSend(v51, sel_activateConstraints_, v52);
}

id sub_2408BC154(uint64_t a1)
{
  return sub_2408BDE34(a1, type metadata accessor for CategoryUpdateView);
}

uint64_t type metadata accessor for CategoryUpdateView()
{
  return self;
}

id sub_2408BC208()
{
  uint64_t v1 = qword_268C913C8;
  id v2 = *(void **)(v0 + qword_268C913C8);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_268C913C8);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CategoryUpdateView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_2408BC288()
{
  uint64_t v1 = sub_240952B98();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  id v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408BE454(0, &qword_26AFCC6A8, MEMORY[0x263F07690]);
  MEMORY[0x270FA5388](v5 - 8);
  id v7 = (char *)&v14 - v6;
  updated = (objc_class *)type metadata accessor for CategoryUpdateViewController();
  v14.receiver = v0;
  v14.super_class = updated;
  objc_msgSendSuper2(&v14, sel_viewDidLoad);
  id v9 = objc_msgSend(v0, sel_view);
  if (v9)
  {
    id v10 = v9;
    id v11 = sub_2408BC208();
    objc_msgSend(v10, sel_addSubview_, v11);

    sub_2408BC928();
    sub_2408BCC44();
    uint64_t v12 = sub_240951AB8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v7, 1, 1, v12);
    sub_240952B88();
    sub_2409535A8();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    sub_2408BF164((uint64_t)v7, &qword_26AFCC6A8, MEMORY[0x263F07690]);
    id v13 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
    objc_msgSend(v0, sel_setTitle_, v13);
  }
  else
  {
    __break(1u);
  }
}

void sub_2408BC504(void *a1)
{
  id v1 = a1;
  sub_2408BC288();
}

uint64_t sub_2408BC54C@<X0>(char *a1@<X8>)
{
  sub_2408BE454(0, qword_26AFCC880, (void (*)(uint64_t))type metadata accessor for SharedNewRecordsAlertData);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v24 - v4;
  sub_2408BE454(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v6 - 8);
  id v8 = (char *)&v24 - v7;
  uint64_t v9 = sub_240951A28();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x60);
  swift_beginAccess();
  sub_2408BE4A8(v13, (uint64_t)v5);
  uint64_t v14 = type metadata accessor for SharedNewRecordsAlertData(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v5, 1, v14))
  {
    sub_2408BF164((uint64_t)v5, qword_26AFCC880, (void (*)(uint64_t))type metadata accessor for SharedNewRecordsAlertData);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v8, &v5[*(int *)(v14 + 32)], v9);
    sub_2408BF164((uint64_t)v5, qword_26AFCC880, (void (*)(uint64_t))type metadata accessor for SharedNewRecordsAlertData);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      id v16 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v16(v12, v8, v9);
      sub_240868FFC();
      id v18 = &a1[*(int *)(v17 + 48)];
      v16(a1, v12, v9);
      uint64_t v19 = *MEMORY[0x263F43FB0];
      uint64_t v20 = sub_240953908();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v18, v19, v20);
      id v15 = (unsigned int *)MEMORY[0x263F43FB8];
      goto LABEL_6;
    }
  }
  sub_2408BF164((uint64_t)v8, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
  id v15 = (unsigned int *)MEMORY[0x263F43FC0];
LABEL_6:
  uint64_t v21 = *v15;
  uint64_t v22 = sub_240953918();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(a1, v21, v22);
}

void sub_2408BC928()
{
  sub_2408B2F90(0, (unint64_t *)&qword_26AFCF418, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_240959330;
  id v2 = sub_2408BC208();
  id v3 = objc_msgSend(v2, sel_leadingAnchor);

  id v4 = objc_msgSend(v0, sel_view);
  if (!v4)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v5 = v4;
  id v6 = objc_msgSend(v4, sel_leadingAnchor);

  id v7 = objc_msgSend(v3, sel_constraintEqualToAnchor_, v6);
  *(void *)(v1 + 32) = v7;
  id v8 = sub_2408BC208();
  id v9 = objc_msgSend(v8, sel_trailingAnchor);

  id v10 = objc_msgSend(v0, sel_view);
  if (!v10)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v11 = v10;
  id v12 = objc_msgSend(v10, sel_trailingAnchor);

  id v13 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v12);
  *(void *)(v1 + 40) = v13;
  id v14 = sub_2408BC208();
  id v15 = objc_msgSend(v14, sel_topAnchor);

  id v16 = objc_msgSend(v0, sel_view);
  if (!v16)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v17 = v16;
  id v18 = objc_msgSend(v16, sel_topAnchor);

  id v19 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v18);
  *(void *)(v1 + 48) = v19;
  id v20 = sub_2408BC208();
  id v21 = objc_msgSend(v20, sel_bottomAnchor);

  id v22 = objc_msgSend(v0, sel_view);
  if (!v22)
  {
LABEL_11:
    __break(1u);
    return;
  }
  id v23 = v22;
  uint64_t v24 = self;
  id v25 = objc_msgSend(v23, sel_bottomAnchor);

  id v26 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v25);
  *(void *)(v1 + 56) = v26;
  sub_2409549B8();
  sub_24083EDCC(0, &qword_268C91A80);
  id v27 = (id)sub_240954988();
  swift_bridgeObjectRelease();
  objc_msgSend(v24, sel_activateConstraints_, v27);
}

uint64_t sub_2408BCC44()
{
  sub_2408BE454(0, &qword_26AFCC6A8, MEMORY[0x263F07690]);
  MEMORY[0x270FA5388](v1 - 8);
  id v3 = (char *)&v93 - v2;
  uint64_t v4 = sub_240952B98();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408BE454(0, qword_26AFCC880, (void (*)(uint64_t))type metadata accessor for SharedNewRecordsAlertData);
  MEMORY[0x270FA5388](v8 - 8);
  id v10 = (char *)&v93 - v9;
  uint64_t v11 = type metadata accessor for SharedNewRecordsAlertData(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)v0 + *(void *)((*MEMORY[0x263F8EED0] & *v0) + 0x60);
  swift_beginAccess();
  sub_2408BE4A8(v15, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_2408BF164((uint64_t)v10, qword_26AFCC880, (void (*)(uint64_t))type metadata accessor for SharedNewRecordsAlertData);
  }
  uint64_t v95 = v0;
  sub_2408BE528((uint64_t)v10, (uint64_t)v14);
  uint64_t v100 = *(void *)&v14[*(int *)(v11 + 20)];
  sub_240952B78();
  uint64_t v17 = v7;
  uint64_t v18 = sub_240951AB8();
  uint64_t v19 = *(void *)(v18 - 8);
  unint64_t v106 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  uint64_t v20 = v19 + 56;
  v106(v3, 1, 1, v18);
  uint64_t v103 = sub_240954828();
  sub_2408BF164((uint64_t)v3, &qword_26AFCC6A8, MEMORY[0x263F07690]);
  id v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v96 = v5 + 8;
  unint64_t v97 = v21;
  v21(v17, v4);
  sub_2408BE58C(0, (unint64_t *)&qword_26AFD0610, (unint64_t *)&qword_26AFD0630, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
  uint64_t v98 = v22;
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = (uint64_t)v14;
  id v25 = (void *)v23;
  long long v93 = xmmword_2409562B0;
  *(_OWORD *)(v23 + 16) = xmmword_2409562B0;
  uint64_t v26 = *(int *)(v11 + 28);
  uint64_t v104 = v24;
  uint64_t v105 = v4;
  id v27 = (uint64_t *)(v24 + v26);
  uint64_t v28 = *v27;
  unint64_t v29 = v27[1];
  *(void *)(v23 + 56) = MEMORY[0x263F8D310];
  unint64_t v30 = sub_240853EA8();
  v25[4] = v28;
  uint64_t v25[5] = v29;
  uint64_t v31 = MEMORY[0x263F8D750];
  v25[12] = MEMORY[0x263F8D6C8];
  v25[13] = v31;
  unint64_t v94 = v30;
  uint64_t v32 = v100;
  v25[8] = v30;
  v25[9] = v32;
  swift_bridgeObjectRetain();
  uint64_t v99 = sub_240954798();
  uint64_t v34 = v33;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v35 = HIBYTE(v29) & 0xF;
  uint64_t v36 = v28 & 0xFFFFFFFFFFFFLL;
  id v37 = v106;
  if ((v29 & 0x2000000000000000) == 0) {
    uint64_t v35 = v36;
  }
  uint64_t v102 = v17;
  uint64_t v103 = v18;
  uint64_t v101 = v20;
  if (v35)
  {
    uint64_t v100 = v34;
    id v38 = v97;
    uint64_t v39 = v105;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_240952B78();
    v37(v3, 1, 1, v18);
    sub_240954828();
    sub_2408BF164((uint64_t)v3, &qword_26AFCC6A8, MEMORY[0x263F07690]);
    id v41 = v17;
    uint64_t v39 = v105;
    id v38 = v97;
    v97(v41, v105);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_240956800;
    *(void *)(v42 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v42 + 64) = MEMORY[0x263F8D750];
    *(void *)(v42 + 32) = v100;
    uint64_t v99 = sub_240954798();
    uint64_t v100 = v43;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v40 = (uint64_t)v3;
  uint64_t v44 = swift_bridgeObjectRetain();
  uint64_t v45 = sub_24093D478(v44);
  swift_bridgeObjectRelease();
  id v46 = sub_240873F5C(v45);
  swift_bridgeObjectRelease();
  unint64_t v107 = v46;
  swift_retain();
  sub_2408BE5F4((uint64_t *)&v107);
  swift_release();
  id v47 = v107;
  uint64_t v48 = v107[2];
  switch(v48)
  {
    case 0:
      swift_release();
      uint64_t v49 = 0;
      unint64_t v50 = 0xE000000000000000;
      unint64_t v51 = v38;
      goto LABEL_22;
    case 1:
      uint64_t v49 = v107[4];
      unint64_t v50 = v107[5];
      swift_bridgeObjectRetain();
      swift_release();
      unint64_t v51 = v38;
      goto LABEL_22;
    case 2:
      v106(v3, 1, 1, v103);
      id v52 = v102;
      sub_240952B88();
      sub_2409535A8();
      uint64_t v53 = v52;
      unint64_t v51 = v38;
      v38(v53, v39);
      sub_2408BF164(v40, &qword_26AFCC6A8, MEMORY[0x263F07690]);
      uint64_t v54 = swift_allocObject();
      *(_OWORD *)(v54 + 16) = v93;
      uint64_t v55 = MEMORY[0x263F8D310];
      unint64_t v56 = v94;
      *(void *)(v54 + 56) = MEMORY[0x263F8D310];
      *(void *)(v54 + 64) = v56;
      uint64_t v57 = v47[2];
      if (!v57)
      {
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
      uint64_t v58 = (void *)v54;
      uint64_t v59 = v47[5];
      v58[4] = v47[4];
      v58[5] = v59;
      v58[12] = v55;
      v58[13] = v56;
      if (v57 == 1)
      {
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        swift_release();
        __break(1u);
        JUMPOUT(0x2408BD7D8);
      }
      uint64_t v60 = v47[6];
      uint64_t v61 = v47[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      v58[9] = v60;
      v58[10] = v61;
LABEL_16:
      uint64_t v49 = sub_2409547D8();
      unint64_t v50 = v72;
LABEL_21:
      swift_bridgeObjectRelease();
LABEL_22:
      v106((char *)v40, 1, 1, v103);
      uint64_t v84 = v102;
      sub_240952B88();
      uint64_t v85 = sub_240954828();
      uint64_t v87 = v86;
      v51(v84, v105);
      sub_2408BF164(v40, &qword_26AFCC6A8, MEMORY[0x263F07690]);
      uint64_t v88 = (char *)sub_2408BC208();
      uint64_t v89 = (uint64_t *)&v88[OBJC_IVAR____TtC13HealthRecords18CategoryUpdateView_viewData];
      uint64_t v90 = *(void *)&v88[OBJC_IVAR____TtC13HealthRecords18CategoryUpdateView_viewData];
      uint64_t v91 = *(void *)&v88[OBJC_IVAR____TtC13HealthRecords18CategoryUpdateView_viewData + 8];
      uint64_t v92 = v100;
      *uint64_t v89 = v99;
      v89[1] = v92;
      v89[2] = v49;
      v89[3] = v50;
      v89[4] = v85;
      v89[5] = v87;
      sub_2408BF0B8(v90, v91);
      sub_2408BB6D4();

      return sub_2408BF108(v104);
    case 3:
      v106(v3, 1, 1, v103);
      id v62 = v102;
      sub_240952B88();
      sub_2409535A8();
      id v63 = v62;
      unint64_t v51 = v38;
      v38(v63, v39);
      sub_2408BF164(v40, &qword_26AFCC6A8, MEMORY[0x263F07690]);
      uint64_t v64 = swift_allocObject();
      *(_OWORD *)(v64 + 16) = xmmword_240956880;
      uint64_t v65 = MEMORY[0x263F8D310];
      unint64_t v66 = v94;
      *(void *)(v64 + 56) = MEMORY[0x263F8D310];
      *(void *)(v64 + 64) = v66;
      uint64_t v67 = v47[2];
      if (!v67) {
        goto LABEL_24;
      }
      uint64_t v68 = (void *)v64;
      uint64_t v69 = v47[5];
      v68[4] = v47[4];
      v68[5] = v69;
      unsigned char v68[12] = v65;
      v68[13] = v66;
      if (v67 == 1) {
        goto LABEL_27;
      }
      uint64_t v70 = v47[6];
      uint64_t v71 = v47[7];
      v68[9] = v70;
      v68[10] = v71;
      v68[17] = v65;
      v68[18] = v66;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_release();
      v68[14] = v70;
      v68[15] = v71;
      goto LABEL_16;
    default:
      v106(v3, 1, 1, v103);
      uint64_t v73 = v102;
      sub_240952B88();
      uint64_t v98 = sub_2409535A8();
      uint64_t v74 = v73;
      unint64_t v51 = v38;
      v38(v74, v39);
      sub_2408BF164(v40, &qword_26AFCC6A8, MEMORY[0x263F07690]);
      uint64_t v75 = swift_allocObject();
      *(_OWORD *)(v75 + 16) = xmmword_240956880;
      uint64_t v76 = MEMORY[0x263F8D310];
      unint64_t v77 = v94;
      *(void *)(v75 + 56) = MEMORY[0x263F8D310];
      *(void *)(v75 + 64) = v77;
      uint64_t v78 = v47[2];
      if (!v78) {
        goto LABEL_25;
      }
      uint64_t v79 = (void *)v75;
      uint64_t v80 = v47[5];
      v79[4] = v47[4];
      v79[5] = v80;
      v79[12] = v76;
      v79[13] = v77;
      uint64_t v81 = MEMORY[0x263F8D6C8];
      if (v78 == 1) {
        goto LABEL_28;
      }
      uint64_t v82 = v47[7];
      v79[9] = v47[6];
      v79[10] = v82;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      v79[17] = v81;
      v79[18] = MEMORY[0x263F8D750];
      v79[14] = v48 - 2;
      uint64_t v49 = sub_2409547D8();
      unint64_t v50 = v83;
      goto LABEL_21;
  }
}

uint64_t sub_2408BD7E8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x70);
  swift_beginAccess();
  uint64_t result = sub_24085AA1C(v4, (uint64_t)v26);
  uint64_t v6 = v27;
  if (v27)
  {
    id v7 = sub_2408304E8(v26, v27);
    uint64_t v8 = *(void *)(v6 - 8);
    MEMORY[0x270FA5388](v7);
    id v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v8 + 16))(v10);
    uint64_t v11 = (void *)sub_240953B98();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
    uint64_t v12 = (void *)sub_240954BD8();

    uint64_t v13 = (objc_class *)type metadata accessor for LabListViewController();
    id v14 = (char *)objc_allocWithZone(v13);
    *(void *)&v14[qword_268C91D80] = v12;
    id v15 = objc_allocWithZone(MEMORY[0x263F82570]);
    id v16 = v12;
    id v17 = objc_msgSend(v15, sel_init);
    v25.receiver = v14;
    v25.super_class = v13;
    id v18 = objc_msgSendSuper2(&v25, sel_initWithCollectionViewLayout_, v17);

    sub_2408371B8((uint64_t)v26);
    sub_2408BE3C8(a1, (uint64_t)v26);
    uint64_t v19 = v27;
    if (v27)
    {
      uint64_t v20 = sub_2408304E8(v26, v27);
      uint64_t v21 = *(void *)(v19 - 8);
      MEMORY[0x270FA5388](v20);
      uint64_t v23 = (char *)&v25 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v21 + 16))(v23);
      uint64_t v24 = sub_2409555F8();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v19);
      sub_2408371B8((uint64_t)v26);
    }
    else
    {
      uint64_t v24 = 0;
    }
    objc_msgSend(v2, sel_showViewController_sender_, v18, v24);

    return swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_2408BDAE8(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&v3[qword_268C913B0] = 0;
  *(void *)&v3[qword_268C913B8] = 0;
  *(void *)&v3[qword_268C913C0] = 0;
  *(void *)&v3[qword_268C913C8] = 0;
  uint64_t v6 = &v3[qword_268C991D0];
  uint64_t v7 = *MEMORY[0x263F43CB0];
  uint64_t v8 = sub_240953798();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  if (a2)
  {
    uint64_t v9 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = 0;
  }
  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for CategoryUpdateViewController();
  id v10 = objc_msgSendSuper2(&v12, sel_initWithNibName_bundle_, v9, a3);

  return v10;
}

id sub_2408BDC04(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    uint64_t v5 = sub_2409547C8();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  id v8 = a4;
  return sub_2408BDAE8(v5, v7, a4);
}

id sub_2408BDC64(void *a1)
{
  *(void *)&v1[qword_268C913B0] = 0;
  *(void *)&v1[qword_268C913B8] = 0;
  *(void *)&v1[qword_268C913C0] = 0;
  *(void *)&v1[qword_268C913C8] = 0;
  id v3 = &v1[qword_268C991D0];
  uint64_t v4 = *MEMORY[0x263F43CB0];
  uint64_t v5 = sub_240953798();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(v3, v4, v5);
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for CategoryUpdateViewController();
  id v6 = objc_msgSendSuper2(&v8, sel_initWithCoder_, a1);

  return v6;
}

id sub_2408BDD44(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_2408BDC64(a3);
}

uint64_t sub_2408BDD6C()
{
  uint64_t v1 = v0 + qword_268C991D0;
  uint64_t v2 = sub_240953798();
  id v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

id sub_2408BDE18()
{
  return sub_2408BDE34(0, type metadata accessor for CategoryUpdateViewController);
}

id sub_2408BDE34(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_2408BDE6C(uint64_t a1)
{
  uint64_t v2 = a1 + qword_268C991D0;
  uint64_t v3 = sub_240953798();
  objc_super v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

uint64_t type metadata accessor for CategoryUpdateViewController()
{
  uint64_t result = qword_268C913D0;
  if (!qword_268C913D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2408BDF68()
{
  uint64_t result = sub_240953798();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_2408BE008()
{
  return type metadata accessor for CategoryUpdateViewController();
}

uint64_t destroy for CategoryUpdateViewData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for CategoryUpdateViewData(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CategoryUpdateViewData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for CategoryUpdateViewData(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for CategoryUpdateViewData(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CategoryUpdateViewData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CategoryUpdateViewData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CategoryUpdateViewData()
{
  return &type metadata for CategoryUpdateViewData;
}

uint64_t sub_2408BE254@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + qword_268C991D0;
  uint64_t v4 = sub_240953798();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_2408BE2CC@<X0>(char *a1@<X8>)
{
  return sub_2408BC54C(a1);
}

uint64_t sub_2408BE2F0()
{
  return sub_240953C08() & 1;
}

unint64_t sub_2408BE370()
{
  unint64_t result = qword_268C913E0;
  if (!qword_268C913E0)
  {
    type metadata accessor for CategoryUpdateViewController();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C913E0);
  }
  return result;
}

uint64_t sub_2408BE3C8(uint64_t a1, uint64_t a2)
{
  sub_2408B2F90(0, (unint64_t *)&qword_268C91A60, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2408BE454(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240955098();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2408BE4A8(uint64_t a1, uint64_t a2)
{
  sub_2408BE454(0, qword_26AFCC880, (void (*)(uint64_t))type metadata accessor for SharedNewRecordsAlertData);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2408BE528(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SharedNewRecordsAlertData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2408BE58C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_2408484BC(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_2408BE5F4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_240877110(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_2408BE660(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_2408BE660(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_2409555C8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_2408BED4C(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  uint64_t v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_118:
      unint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          unint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_2408BEE1C((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v97 = sub_240875C04((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          uint64_t v100 = &v97[16 * v96 + 32];
          *(void *)uint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          unint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_240954A18();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    id v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    id v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_240955618();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_240955618()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_240875964(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_240875964((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v42 = v11 + 32;
    uint64_t v43 = &v11[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        id v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        uint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v85 = v11;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_2408BEE1C((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        uint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        uint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        id v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_240955618() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)id v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_240955398();
  __break(1u);
  return result;
}

uint64_t sub_2408BED4C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_240955618(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2408BEE1C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      id v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        id v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_240955618() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)id v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)id v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    id v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_240955618() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_240875A8C((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_240955448();
  __break(1u);
  return result;
}

uint64_t sub_2408BF0B8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2408BF108(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SharedNewRecordsAlertData(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2408BF164(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_2408BE454(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2408BF1C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t **a4@<X8>)
{
  uint64_t v8 = type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v43 - v12;
  uint64_t v14 = sub_2409540C8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  id v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954058();
  sub_24083B4E8(a2, (uint64_t)v13);
  swift_bridgeObjectRetain_n();
  id v18 = sub_2409540B8();
  os_log_type_t v19 = sub_240954C08();
  int v50 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v46 = v14;
    uint64_t v21 = v20;
    uint64_t v45 = swift_slowAlloc();
    uint64_t v51 = v45;
    v52[0] = a3;
    *(_DWORD *)uint64_t v21 = 136446978;
    os_log_t v44 = v18;
    swift_getMetatypeMetadata();
    uint64_t v47 = a2;
    uint64_t v22 = sub_2409547E8();
    v52[0] = sub_2408370E4(v22, v23, &v51);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    v52[0] = type metadata accessor for SharedConceptFeedItemGenerator(0);
    sub_240864E84(0);
    uint64_t v24 = sub_2409547E8();
    v52[0] = sub_2408370E4(v24, v25, &v51);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 22) = 2082;
    v52[0] = a1;
    sub_240833270(0, &qword_26AFCDE80, MEMORY[0x263F458B0], MEMORY[0x263F8D488]);
    swift_bridgeObjectRetain_n();
    sub_240955658();
    id v26 = (id)HKSensitiveLogItem();
    char v48 = v11;
    swift_unknownObjectRelease();
    uint64_t v49 = a4;
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v27 = sub_2409547E8();
    unint64_t v29 = v28;
    swift_bridgeObjectRelease();
    v52[0] = sub_2408370E4(v27, v29, &v51);
    sub_2409550B8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 32) = 2082;
    uint64_t v30 = (void *)sub_240951F68();
    uint64_t v31 = (void *)sub_240951C68();

    v52[0] = v31;
    sub_2408C0128();
    id v32 = v31;
    sub_240955658();
    id v33 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v34 = sub_2409547E8();
    unint64_t v36 = v35;

    a2 = v47;
    v52[0] = sub_2408370E4(v34, v36, &v51);
    uint64_t v11 = v48;
    sub_2409550B8();
    a4 = v49;
    swift_bridgeObjectRelease();
    sub_24083B3B4((uint64_t)v13);
    os_log_t v37 = v44;
    _os_log_impl(&dword_240818000, v44, (os_log_type_t)v50, "[%{public}s]: Emitting %{public}s, with sharable model changes: %{public}s, for profile: %{public}s", (uint8_t *)v21, 0x2Au);
    uint64_t v38 = v45;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v38, -1, -1);
    MEMORY[0x2456021C0](v21, -1, -1);

    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v46);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_24083B3B4((uint64_t)v13);

    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  sub_24083B4E8(a2, (uint64_t)v11);
  swift_bridgeObjectRetain();
  sub_240951F38();
  sub_2408304E8(v52, v52[3]);
  BOOL v39 = (void *)sub_240951E98();
  uint64_t v40 = type metadata accessor for SharedConceptFeedItemGenerator(0);
  swift_allocObject();
  unint64_t v41 = sub_2408641A8((uint64_t)v11, a1, v39);
  swift_bridgeObjectRelease();

  sub_2408371B8((uint64_t)v52);
  a4[3] = (uint64_t *)v40;
  uint64_t result = sub_240833160(&qword_26AFCD608, (void (*)(uint64_t))type metadata accessor for SharedConceptFeedItemGenerator);
  a4[4] = (uint64_t *)result;
  *a4 = v41;
  return result;
}

uint64_t sub_2408BF754@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t **a4@<X8>)
{
  uint64_t v8 = type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = &v45[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = &v45[-v12];
  uint64_t v52 = sub_2409540C8();
  uint64_t v14 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v16 = &v45[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = *a1;
  sub_240954058();
  sub_24083B4E8(a2, (uint64_t)v13);
  swift_bridgeObjectRetain_n();
  id v18 = sub_2409540B8();
  os_log_type_t v19 = sub_240954C08();
  int v20 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v21 = swift_slowAlloc();
    int v50 = v11;
    uint64_t v22 = v21;
    uint64_t v48 = swift_slowAlloc();
    uint64_t v54 = v48;
    *(_DWORD *)uint64_t v22 = 136446978;
    os_log_t v47 = v18;
    uint64_t v53 = a3;
    swift_getMetatypeMetadata();
    uint64_t v49 = a2;
    uint64_t v23 = sub_2409547E8();
    int v46 = v20;
    uint64_t v53 = sub_2408370E4(v23, v24, &v54);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2082;
    uint64_t v53 = type metadata accessor for SharedConceptFeedItemGenerator(0);
    sub_240864E84(0);
    uint64_t v51 = a4;
    uint64_t v25 = sub_2409547E8();
    uint64_t v53 = sub_2408370E4(v25, v26, &v54);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 22) = 2082;
    uint64_t v53 = v17;
    sub_240833270(0, &qword_26AFCDE80, MEMORY[0x263F458B0], MEMORY[0x263F8D488]);
    swift_bridgeObjectRetain_n();
    sub_240955658();
    id v27 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v28 = sub_2409547E8();
    unint64_t v30 = v29;
    swift_bridgeObjectRelease();
    uint64_t v53 = sub_2408370E4(v28, v30, &v54);
    sub_2409550B8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 32) = 2082;
    uint64_t v31 = (void *)sub_240951F68();
    id v32 = (void *)sub_240951C68();

    uint64_t v53 = (uint64_t)v32;
    sub_2408C0128();
    id v33 = v32;
    sub_240955658();
    id v34 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v35 = sub_2409547E8();
    unint64_t v37 = v36;

    a4 = v51;
    uint64_t v53 = sub_2408370E4(v35, v37, &v54);
    sub_2409550B8();
    a2 = v49;
    swift_bridgeObjectRelease();
    sub_24083B3B4((uint64_t)v13);
    id v18 = v47;
    _os_log_impl(&dword_240818000, v47, (os_log_type_t)v46, "[%{public}s]: Emitting %{public}s, with sharable model changes: %{public}s, for profile: %{public}s", (uint8_t *)v22, 0x2Au);
    uint64_t v38 = v48;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v38, -1, -1);
    uint64_t v39 = v22;
    uint64_t v11 = v50;
    MEMORY[0x2456021C0](v39, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_24083B3B4((uint64_t)v13);
  }

  (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v52);
  sub_24083B4E8(a2, (uint64_t)v11);
  id v40 = objc_allocWithZone(MEMORY[0x263F0A410]);
  swift_bridgeObjectRetain();
  id v41 = objc_msgSend(v40, sel_init);
  uint64_t v42 = type metadata accessor for SharedConceptFeedItemGenerator(0);
  swift_allocObject();
  uint64_t v43 = sub_2408641A8((uint64_t)v11, v17, v41);
  swift_bridgeObjectRelease();

  a4[3] = (uint64_t *)v42;
  uint64_t result = sub_240833160(&qword_26AFCD608, (void (*)(uint64_t))type metadata accessor for SharedConceptFeedItemGenerator);
  a4[4] = (uint64_t *)result;
  *a4 = v43;
  return result;
}

uint64_t sub_2408BFCD0()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HealthRecords29SharedConceptFeedItemPipeline_domain;
  uint64_t v2 = sub_240951F18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_24083B3B4(v0 + OBJC_IVAR____TtC13HealthRecords29SharedConceptFeedItemPipeline_context);

  return swift_deallocClassInstance();
}

uint64_t sub_2408BFD88()
{
  return type metadata accessor for SharedConceptFeedItemPipeline();
}

uint64_t sub_2408BFD94@<X0>(uint64_t *a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_2408BF754(a1, v2 + v6, v7, a2);
}

uint64_t sub_2408BFE44()
{
  uint64_t v1 = (int *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_2408BFF40@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_2408BF1C0(a1, v2 + v6, v7, a2);
}

uint64_t sub_2408BFFF4()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2408C002C(char *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  uint64_t v4 = *(void *)a1;
  sub_2408C0088();
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

void sub_2408C0088()
{
  if (!qword_26AFCF370)
  {
    sub_240833270(255, &qword_26AFCDE80, MEMORY[0x263F458B0], MEMORY[0x263F8D488]);
    sub_240953FE8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AFCF370);
    }
  }
}

void sub_2408C0128()
{
  if (!qword_26AFCDF08)
  {
    sub_24083EDCC(255, (unint64_t *)&qword_26AFCDF00);
    unint64_t v0 = sub_240955098();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDF08);
    }
  }
}

uint64_t ClinicalSharingFeedItemData.accountId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_240951A98();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t ClinicalSharingFeedItemData.title.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ClinicalSharingFeedItemData() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for ClinicalSharingFeedItemData()
{
  uint64_t result = qword_268C91418;
  if (!qword_268C91418) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ClinicalSharingFeedItemData.multiDeviceStatus.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ClinicalSharingFeedItemData() + 24));
}

uint64_t ClinicalSharingFeedItemData.init(accountId:title:state:multiDeviceStatus:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_240951A98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a5, a1, v10);
  uint64_t result = type metadata accessor for ClinicalSharingFeedItemData();
  uint64_t v12 = (void *)(a5 + *(int *)(result + 20));
  *uint64_t v12 = a2;
  v12[1] = a3;
  *(void *)(a5 + *(int *)(result + 24)) = a4;
  return result;
}

uint64_t ClinicalSharingFeedItemData.hash(into:)()
{
  return sub_240955708();
}

uint64_t sub_2408C040C()
{
  unint64_t v1 = 0x656C746974;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000011;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x49746E756F636361;
  }
}

uint64_t sub_2408C046C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2408C1D64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2408C0494(uint64_t a1)
{
  unint64_t v2 = sub_2408C1354();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2408C04D0(uint64_t a1)
{
  unint64_t v2 = sub_2408C1354();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ClinicalSharingFeedItemData.encode(to:)(void *a1)
{
  sub_2408C13A8(0, &qword_268C913F8, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v9[-v6];
  sub_2408304E8(a1, a1[3]);
  sub_2408C1354();
  sub_240955778();
  v9[15] = 0;
  sub_240951A98();
  sub_2408C1514(&qword_26AFCE298, MEMORY[0x263F07508]);
  sub_240955598();
  if (!v1)
  {
    type metadata accessor for ClinicalSharingFeedItemData();
    v9[14] = 1;
    sub_240955558();
    v9[13] = 2;
    sub_240955588();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ClinicalSharingFeedItemData.hashValue.getter()
{
  return sub_240955748();
}

uint64_t ClinicalSharingFeedItemData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v4 = sub_240951A98();
  uint64_t v26 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v27 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408C13A8(0, &qword_268C91408, MEMORY[0x263F8E040]);
  uint64_t v28 = v6;
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = type metadata accessor for ClinicalSharingFeedItemData();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408304E8(a1, a1[3]);
  sub_2408C1354();
  sub_240955768();
  if (v2) {
    return sub_2408371B8((uint64_t)a1);
  }
  uint64_t v13 = v25;
  uint64_t v12 = v26;
  uint64_t v23 = v9;
  char v31 = 0;
  sub_2408C1514(&qword_268C90CD0, MEMORY[0x263F07508]);
  sub_2409554F8();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  uint64_t v22 = v11;
  v14(v11, v27, v4);
  char v30 = 1;
  uint64_t v15 = sub_2409554B8();
  uint64_t v16 = (uint64_t *)&v22[*(int *)(v23 + 20)];
  *uint64_t v16 = v15;
  v16[1] = v17;
  char v29 = 2;
  uint64_t v18 = sub_2409554E8();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v28);
  uint64_t v19 = (uint64_t)v22;
  *(void *)&v22[*(int *)(v23 + 24)] = v18;
  sub_2408C140C(v19, v24);
  sub_2408371B8((uint64_t)a1);
  return sub_2408C1470(v19);
}

uint64_t sub_2408C0B94@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ClinicalSharingFeedItemData.init(from:)(a1, a2);
}

uint64_t sub_2408C0BAC(void *a1)
{
  return ClinicalSharingFeedItemData.encode(to:)(a1);
}

uint64_t sub_2408C0BC4()
{
  return sub_240955748();
}

uint64_t sub_2408C0C94()
{
  return sub_240955708();
}

uint64_t sub_2408C0D54()
{
  return sub_240955748();
}

uint64_t ClinicalSharingFeedItemData.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_240951A98();
  uint64_t v38 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2409540C8();
  uint64_t v39 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954078();
  id v10 = a1;
  uint64_t v11 = sub_2409540B8();
  os_log_type_t v12 = sub_240954C38();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v36 = v7;
    uint64_t v14 = (uint8_t *)v13;
    uint64_t v35 = swift_slowAlloc();
    uint64_t v41 = v35;
    uint64_t v37 = a2;
    *(_DWORD *)uint64_t v14 = 136315138;
    id v15 = objc_msgSend(v10, sel_identifier, v14 + 4);
    sub_240951A78();

    sub_2408C1514(&qword_268C90688, MEMORY[0x263F07508]);
    uint64_t v16 = sub_2409555D8();
    unint64_t v18 = v17;
    (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v4);
    uint64_t v40 = sub_2408370E4(v16, v18, &v41);
    a2 = v37;
    sub_2409550B8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v11, v12, "Creating clinical acount sharing information for account: %s", v14, 0xCu);
    uint64_t v19 = v35;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v19, -1, -1);
    MEMORY[0x2456021C0](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v36);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v7);
  }
  id v20 = objc_msgSend(v10, sel_provenance);
  id v21 = objc_msgSend(v20, sel_type);

  if (v21)
  {

    uint64_t v22 = type metadata accessor for ClinicalSharingFeedItemData();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a2, 1, 1, v22);
  }
  else
  {
    id v24 = objc_msgSend(v10, sel_identifier);
    sub_240951A78();

    id v25 = objc_msgSend(v10, sel_provenance);
    id v26 = objc_msgSend(v25, sel_title);

    uint64_t v27 = sub_2409547C8();
    uint64_t v29 = v28;

    objc_msgSend(v10, sel_state);
    id v30 = objc_msgSend(v10, sel_clinicalSharingStatus);
    id v31 = objc_msgSend(v30, sel_multiDeviceStatus);

    uint64_t v32 = type metadata accessor for ClinicalSharingFeedItemData();
    id v33 = (uint64_t *)(a2 + *(int *)(v32 + 20));
    uint64_t *v33 = v27;
    v33[1] = v29;
    *(void *)(a2 + *(int *)(v32 + 24)) = v31;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(a2, 0, 1, v32);
  }
}

BOOL _s13HealthRecords27ClinicalSharingFeedItemDataV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_240951A68() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for ClinicalSharingFeedItemData();
  uint64_t v5 = *(int *)(v4 + 20);
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  if (v6 == *v8 && v7 == v8[1]) {
    return *(void *)(a1 + *(int *)(v4 + 24)) == *(void *)(a2 + *(int *)(v4 + 24));
  }
  char v10 = sub_240955618();
  BOOL result = 0;
  if (v10) {
    return *(void *)(a1 + *(int *)(v4 + 24)) == *(void *)(a2 + *(int *)(v4 + 24));
  }
  return result;
}

unint64_t sub_2408C1354()
{
  unint64_t result = qword_268C91400;
  if (!qword_268C91400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91400);
  }
  return result;
}

void sub_2408C13A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_2408C1354();
    unint64_t v7 = a3(a1, &type metadata for ClinicalSharingFeedItemData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_2408C140C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClinicalSharingFeedItemData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2408C1470(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ClinicalSharingFeedItemData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2408C14CC()
{
  return sub_2408C1514(&qword_268C91410, (void (*)(uint64_t))type metadata accessor for ClinicalSharingFeedItemData);
}

uint64_t sub_2408C1514(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ClinicalSharingFeedItemData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_240951A98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    char v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *char v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ClinicalSharingFeedItemData(uint64_t a1)
{
  uint64_t v2 = sub_240951A98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ClinicalSharingFeedItemData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240951A98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  char v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClinicalSharingFeedItemData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240951A98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for ClinicalSharingFeedItemData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240951A98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for ClinicalSharingFeedItemData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240951A98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingFeedItemData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2408C191C);
}

uint64_t sub_2408C191C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240951A98();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingFeedItemData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2408C19F4);
}

uint64_t sub_2408C19F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_240951A98();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_2408C1AB4()
{
  uint64_t result = sub_240951A98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ClinicalSharingFeedItemData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2408C1C24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingFeedItemData.CodingKeys()
{
  return &type metadata for ClinicalSharingFeedItemData.CodingKeys;
}

unint64_t sub_2408C1C60()
{
  unint64_t result = qword_268C91428;
  if (!qword_268C91428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91428);
  }
  return result;
}

unint64_t sub_2408C1CB8()
{
  unint64_t result = qword_268C91430;
  if (!qword_268C91430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91430);
  }
  return result;
}

unint64_t sub_2408C1D10()
{
  unint64_t result = qword_268C91438;
  if (!qword_268C91438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91438);
  }
  return result;
}

uint64_t sub_2408C1D64(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x49746E756F636361 && a2 == 0xE900000000000064;
  if (v2 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024095DC70)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_240955618();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2408C1EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23[2] = a2;
  uint64_t v26 = sub_2409528B8();
  uint64_t v5 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    v23[0] = a1;
    v23[1] = a3;
    unint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v9 = v5 + 16;
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v9 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 64));
    uint64_t v24 = *(void *)(v9 + 56);
    id v25 = v10;
    uint64_t v12 = (void (**)(char *, uint64_t))(v9 - 8);
    swift_bridgeObjectRetain();
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    do
    {
      uint64_t v14 = v26;
      uint64_t v15 = v9;
      v25(v7, v11, v26);
      uint64_t v27 = sub_2409528A8();
      uint64_t v16 = sub_2409555D8();
      uint64_t v18 = v17;
      (*v12)(v7, v14);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = sub_2408C296C(0, v13[2] + 1, 1, v13);
      }
      unint64_t v20 = v13[2];
      unint64_t v19 = v13[3];
      if (v20 >= v19 >> 1) {
        uint64_t v13 = sub_2408C296C((void *)(v19 > 1), v20 + 1, 1, v13);
      }
      v13[2] = v20 + 1;
      id v21 = &v13[2 * v20];
      v21[4] = v16;
      uint64_t v21[5] = v18;
      v11 += v24;
      --v8;
      uint64_t v9 = v15;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v27 = (uint64_t)v13;
  sub_240837828(0, (unint64_t *)&qword_26AFD0550, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_24084A9B0();
  sub_240954728();
  swift_bridgeObjectRelease();
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  sub_240955348();
  sub_240954718();
  sub_2409548A8();
  sub_240954718();
  sub_2409548A8();
  swift_bridgeObjectRelease();
  sub_240954718();
  swift_bridgeObjectRetain();
  sub_2409548A8();
  swift_bridgeObjectRelease();
  return v27;
}

uint64_t sub_2408C21E8()
{
  return sub_240955748();
}

uint64_t sub_2408C2240()
{
  return sub_240954868();
}

uint64_t sub_2408C225C()
{
  return sub_240955748();
}

uint64_t sub_2408C22B0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_240955468();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_2408C2304(void *a1@<X8>)
{
  *a1 = 0x65636E6F43696863;
  a1[1] = 0xEA00000000007470;
}

uint64_t sub_2408C2324(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0) {
    goto LABEL_42;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x263F8EE78];
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_2408C27C8(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v42 = a1;
  uint64_t v43 = v10;
  unint64_t v48 = 4 * v12;
  uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_240954928();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      break;
    }
    unint64_t v14 = sub_240954878();
LABEL_9:
    if (v48 == v14 >> 14) {
      goto LABEL_29;
    }
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v14 = sub_240954878();
    *(void *)(v47 + 16) = v14;
    unint64_t v15 = v14;
    unint64_t v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14) {
    goto LABEL_41;
  }
  uint64_t v20 = sub_240954948();
  uint64_t v44 = v21;
  uint64_t v45 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_2408C2D38(0, v13[2] + 1, 1, v13);
  }
  unint64_t v27 = v13[2];
  unint64_t v26 = v13[3];
  if (v27 >= v26 >> 1) {
    uint64_t v13 = sub_2408C2D38((void *)(v26 > 1), v27 + 1, 1, v13);
  }
  v13[2] = v27 + 1;
  unint64_t v28 = &v13[4 * v27];
  v28[4] = v45;
  void v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(void *)(v43 + 16) = v13;
  uint64_t v29 = sub_240954878();
  unint64_t v14 = v29;
  *(void *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    unint64_t v15 = v29;
    unint64_t v16 = v29;
    goto LABEL_9;
  }
  unint64_t v16 = v29;
  unint64_t v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_240954948();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_2408C2D38(0, v13[2] + 1, 1, v13);
    }
    unint64_t v39 = v13[2];
    unint64_t v38 = v13[3];
    if (v39 >= v38 >> 1) {
      uint64_t v13 = sub_2408C2D38((void *)(v38 > 1), v39 + 1, 1, v13);
    }
    v13[2] = v39 + 1;
    uint64_t v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(void *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_240955398();
  __break(1u);
LABEL_42:
  uint64_t result = sub_240955398();
  __break(1u);
  return result;
}

uint64_t sub_2408C27C8(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_240954948();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    unint64_t v14 = *(void **)(a4 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v14 = sub_2408C2D38(0, v14[2] + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      unint64_t v14 = sub_2408C2D38((void *)(v16 > 1), v17 + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    void v14[2] = v17 + 1;
    char v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_240955398();
  __break(1u);
  return result;
}

uint64_t sub_2408C2924(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2408C2A9C(a1, a2, a3, a4, &qword_268C90C18, type metadata accessor for SharedConceptFeedItemData, type metadata accessor for SharedConceptFeedItemData, type metadata accessor for SharedConceptFeedItemData);
}

void *sub_2408C296C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_240837828(0, (unint64_t *)&qword_26AFD0670, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      void v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2408C3F84(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2408C2A9C(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  if (a3)
  {
    unint64_t v12 = *(void *)(a4 + 24);
    uint64_t v13 = v12 >> 1;
    if ((uint64_t)(v12 >> 1) < a2)
    {
      if (v13 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v12 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v13 = a2;
      }
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v13 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v13;
  }
  if (!v15)
  {
    char v19 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_2408C541C(0, a5, a6, MEMORY[0x263F8E0F8]);
  uint64_t v16 = *(void *)(a7(0) - 8);
  uint64_t v17 = *(void *)(v16 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  char v19 = (void *)swift_allocObject();
  size_t v20 = j__malloc_size(v19);
  if (!v17 || (v20 - v18 == 0x8000000000000000 ? (BOOL v21 = v17 == -1) : (BOOL v21 = 0), v21))
  {
LABEL_29:
    uint64_t result = sub_240955398();
    __break(1u);
    return result;
  }
  void v19[2] = v14;
  v19[3] = 2 * ((uint64_t)(v20 - v18) / v17);
LABEL_19:
  uint64_t v22 = *(void *)(a7(0) - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v24 = (unint64_t)v19 + v23;
  if (a1)
  {
    if ((unint64_t)v19 < a4 || v24 >= a4 + v23 + *(void *)(v22 + 72) * v14)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v19 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_2408C4D28(0, v14, v24, a4, a8);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v19;
}

void *sub_2408C2D38(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_240837828(0, &qword_268C91440, MEMORY[0x263F8D980], MEMORY[0x263F8E0F8]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      void v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2408C4078(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2408C2E68(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2408C2A9C(a1, a2, a3, a4, &qword_268C91478, (uint64_t (*)(uint64_t))sub_2408C5480, (uint64_t (*)(void))sub_2408C5480, (uint64_t (*)(void))sub_2408C5480);
}

uint64_t sub_2408C2EB0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2408C2A9C(a1, a2, a3, a4, &qword_268C91470, type metadata accessor for SharedConceptCodedValue, type metadata accessor for SharedConceptCodedValue, type metadata accessor for SharedConceptCodedValue);
}

void *sub_2408C2EF8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_240837828(0, &qword_268C91468, (uint64_t)&type metadata for SharedConceptFormattedRecord, MEMORY[0x263F8E0F8]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 88);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[11 * v8 + 4]) {
          memmove(v12, a4 + 4, 88 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2408C4E84(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2408C3044(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2408C2A9C(a1, a2, a3, a4, &qword_26AFD05E0, MEMORY[0x263F45630], MEMORY[0x263F45630], MEMORY[0x263F45630]);
}

uint64_t sub_2408C308C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2408C2A9C(a1, a2, a3, a4, &qword_26AFCE290, MEMORY[0x263F46178], MEMORY[0x263F46178], MEMORY[0x263F46178]);
}

void *sub_2408C30D4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24083ACF0(a1, a2, a3, a4, (unint64_t *)&qword_268C90B48, &qword_268C90B50, MEMORY[0x263F437A0]);
}

void *sub_2408C30F0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_2408C541C(0, &qword_268C91448, (uint64_t (*)(uint64_t))type metadata accessor for _NSRange, MEMORY[0x263F8E0F8]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      void v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2408C4F78(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2408C322C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2408C2A9C(a1, a2, a3, a4, &qword_268C91458, MEMORY[0x263F07508], MEMORY[0x263F07508], MEMORY[0x263F07508]);
}

void *sub_2408C3274(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_240837828(0, &qword_26AFCDFB0, MEMORY[0x263F45828], MEMORY[0x263F8E0F8]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2408C50D0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2408C33B4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2408C2A9C(a1, a2, a3, a4, (unint64_t *)&unk_268C90C00, (uint64_t (*)(uint64_t))type metadata accessor for RecordKindFeedItemData, (uint64_t (*)(void))type metadata accessor for RecordKindFeedItemData, (uint64_t (*)(void))type metadata accessor for RecordKindFeedItemData);
}

uint64_t sub_2408C33FC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2408C2A9C(a1, a2, a3, a4, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F45588], MEMORY[0x263F45588]);
}

uint64_t sub_2408C3444(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2408C2A9C(a1, a2, a3, a4, &qword_268C91460, (uint64_t (*)(uint64_t))sub_24087E864, (uint64_t (*)(void))sub_24087E864, (uint64_t (*)(void))sub_24087E864);
}

void *sub_2408C348C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_2408C5064();
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      void v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2408C51C8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2408C3598(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2408C2A9C(a1, a2, a3, a4, &qword_26AFD05F8, MEMORY[0x263F45F38], MEMORY[0x263F45F38], MEMORY[0x263F45F38]);
}

uint64_t sub_2408C35E0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2408C2A9C(a1, a2, a3, a4, &qword_268C90C20, MEMORY[0x263F45738], MEMORY[0x263F45738], MEMORY[0x263F45738]);
}

uint64_t sub_2408C3628(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2408C2A9C(a1, a2, a3, a4, &qword_26AFCDFC0, MEMORY[0x263F458B0], MEMORY[0x263F458B0], MEMORY[0x263F458B0]);
}

uint64_t sub_2408C3670(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2408C2A9C(a1, a2, a3, a4, &qword_268C90BF8, type metadata accessor for LabNameWithDate, type metadata accessor for LabNameWithDate, type metadata accessor for LabNameWithDate);
}

uint64_t sub_2408C36B8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_240954908();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x245600BC0](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unsigned __int8 *sub_2408C3734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_240954938();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_2408C3A98();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)sub_2409552E8();
  }
LABEL_7:
  uint64_t v11 = sub_2408C381C(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_2408C381C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  unint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_2408C3A98()
{
  unint64_t v0 = sub_240954948();
  uint64_t v4 = sub_2408C3B18(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_2408C3B18(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_2408C3C70(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_240837730(v9, 0);
      unint64_t v12 = sub_2408C3D70((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_2409552E8();
LABEL_4:
        JUMPOUT(0x245600B40);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x245600B40](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x245600B40]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_2408C3C70(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_2408C36B8(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_2408C36B8(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x270F9D808](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x270F9D808](a1, a2, a3, a4);
}

unint64_t sub_2408C3D70(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    void v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_2408C36B8(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_2409548F8();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_2409552E8();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_2408C36B8(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_2409548C8();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_2408C3F84(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_240955448();
  __break(1u);
  return result;
}

uint64_t sub_2408C4078(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_240955448();
  __break(1u);
  return result;
}

uint64_t sub_2408C416C(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_2409540C8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408C541C(0, &qword_26AFCC5E0, MEMORY[0x263F46018], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (char *)&v84 - v9;
  uint64_t v11 = sub_2409528B8();
  uint64_t v92 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  unint64_t v93 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v91 = (char *)&v84 - v14;
  uint64_t v98 = 10848482;
  uint64_t v99 = 0xA300000000000000;
  uint64_t v95 = &v98;
  swift_bridgeObjectRetain();
  uint64_t v15 = (void *)sub_2408C2324(0x7FFFFFFFFFFFFFFFLL, 0, sub_2408C4BFC, (uint64_t)v94, a1, a2);
  swift_bridgeObjectRelease();
  if (v15[2] != 4) {
    goto LABEL_3;
  }
  uint64_t v90 = v5;
  uint64_t v16 = v15[4];
  uint64_t v17 = v15[5];
  uint64_t v18 = v15[6];
  uint64_t v19 = v15[7];
  swift_bridgeObjectRetain();
  MEMORY[0x245600B00](v16, v17, v18, v19);
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_240955468();
  uint64_t result = swift_bridgeObjectRelease();
  if (v20)
  {
LABEL_3:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v15[2] < 2uLL) {
    goto LABEL_84;
  }
  uint64_t v23 = v15[8];
  uint64_t v24 = v15[9];
  uint64_t v25 = v15[10];
  uint64_t v26 = v15[11];
  swift_bridgeObjectRetain();
  MEMORY[0x245600B00](v23, v24, v25, v26);
  swift_bridgeObjectRelease();
  uint64_t v27 = sub_240955468();
  uint64_t result = swift_bridgeObjectRelease();
  if (v27)
  {
    sub_240954078();
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_2409540B8();
    os_log_type_t v29 = sub_240954C18();
    int v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v31 = swift_slowAlloc();
      LODWORD(v93) = v30;
      uint64_t v32 = v31;
      uint64_t v92 = swift_slowAlloc();
      uint64_t v98 = v92;
      *(_DWORD *)uint64_t v32 = 136446466;
      uint64_t v96 = sub_2408370E4(0xD00000000000001ELL, 0x8000000240959760, &v98);
      sub_2409550B8();
      *(_WORD *)(v32 + 12) = 2082;
      uint64_t v91 = (char *)(v32 + 14);
      uint64_t v34 = v15[8];
      uint64_t v33 = v15[9];
      uint64_t v36 = v15[10];
      uint64_t v35 = v15[11];
      swift_bridgeObjectRetain();
      uint64_t v37 = MEMORY[0x245600B00](v34, v33, v36, v35);
      unint64_t v39 = v38;
      swift_bridgeObjectRelease();
      uint64_t v96 = sub_2408370E4(v37, v39, &v98);
      sub_2409550B8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240818000, v28, (os_log_type_t)v93, "[%{public}s] Unsupported version found when decoding version: '%{public}s'", (uint8_t *)v32, 0x16u);
      uint64_t v40 = v92;
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v40, -1, -1);
      MEMORY[0x2456021C0](v32, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v90 + 8))(v7, v4);
    return 0;
  }
  if (v15[2] < 3uLL) {
    goto LABEL_85;
  }
  uint64_t v41 = v15[12];
  uint64_t v42 = v15[13];
  uint64_t v43 = v15[14];
  uint64_t v44 = v15[15];
  swift_bridgeObjectRetain();
  uint64_t v45 = MEMORY[0x245600B00](v41, v42, v43, v44);
  uint64_t v47 = v46;
  swift_bridgeObjectRelease();
  uint64_t v98 = v45;
  uint64_t v99 = v47;
  uint64_t v96 = 8431330;
  unint64_t v97 = 0xA300000000000000;
  sub_240864EE4();
  uint64_t v48 = sub_2409550E8();
  swift_bridgeObjectRelease();
  uint64_t v90 = *(void *)(v48 + 16);
  if (!v90)
  {
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v22 = MEMORY[0x263F8EE78];
LABEL_80:
    if (v15[2] < 4uLL) {
      goto LABEL_86;
    }
    uint64_t v80 = v15[16];
    uint64_t v81 = v15[17];
    uint64_t v82 = v15[18];
    uint64_t v83 = v15[19];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    MEMORY[0x245600B00](v80, v81, v82, v83);
    swift_bridgeObjectRelease();
    return v22;
  }
  uint64_t v84 = (char *)&v98 + 2;
  uint64_t v85 = (char *)&v98 + 3;
  uint64_t v86 = v48;
  uint64_t v87 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v92 + 56);
  uint64_t v88 = (unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48);
  uint64_t v89 = v48 + 32;
  uint64_t v49 = (void (**)(char *, char *, uint64_t))(v92 + 32);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v50 = 0;
  unint64_t v22 = MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v51 = (uint64_t *)(v89 + 16 * v50);
    uint64_t v52 = *v51;
    unint64_t v53 = v51[1];
    uint64_t v54 = HIBYTE(v53) & 0xF;
    uint64_t v55 = v52 & 0xFFFFFFFFFFFFLL;
    if ((v53 & 0x2000000000000000) != 0) {
      uint64_t v56 = HIBYTE(v53) & 0xF;
    }
    else {
      uint64_t v56 = v52 & 0xFFFFFFFFFFFFLL;
    }
    if (!v56)
    {
      swift_bridgeObjectRetain();
LABEL_68:
      (*v87)(v10, 1, 1, v11);
      goto LABEL_69;
    }
    if ((v53 & 0x1000000000000000) == 0) {
      break;
    }
    swift_bridgeObjectRetain();
    sub_2408C3734(v52, v53, 10);
    if (v75) {
      goto LABEL_68;
    }
LABEL_49:
    sub_240952898();
LABEL_69:
    swift_bridgeObjectRelease();
    if ((*v88)(v10, 1, v11) == 1)
    {
      uint64_t result = sub_2408C4C54((uint64_t)v10);
    }
    else
    {
      uint64_t v76 = *v49;
      uint64_t v77 = v91;
      (*v49)(v91, v10, v11);
      v76(v93, v77, v11);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v22 = sub_2408C2A9C(0, *(void *)(v22 + 16) + 1, 1, v22, &qword_26AFCF400, MEMORY[0x263F46018], MEMORY[0x263F46018], MEMORY[0x263F46018]);
      }
      unint64_t v79 = *(void *)(v22 + 16);
      unint64_t v78 = *(void *)(v22 + 24);
      if (v79 >= v78 >> 1) {
        unint64_t v22 = sub_2408C2A9C(v78 > 1, v79 + 1, 1, v22, &qword_26AFCF400, MEMORY[0x263F46018], MEMORY[0x263F46018], MEMORY[0x263F46018]);
      }
      *(void *)(v22 + 16) = v79 + 1;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v76)(v22+ ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80))+ *(void *)(v92 + 72) * v79, v93, v11);
    }
    if (++v50 == v90)
    {
      uint64_t result = swift_bridgeObjectRelease_n();
      goto LABEL_80;
    }
  }
  if ((v53 & 0x2000000000000000) == 0)
  {
    if ((v52 & 0x1000000000000000) != 0) {
      uint64_t v57 = (unsigned __int8 *)((v53 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v57 = (unsigned __int8 *)sub_2409552E8();
    }
    sub_2408C381C(v57, v55, 10);
    char v59 = v58 & 1;
LABEL_48:
    swift_bridgeObjectRetain();
    if (v59) {
      goto LABEL_68;
    }
    goto LABEL_49;
  }
  uint64_t v98 = v52;
  uint64_t v99 = v53 & 0xFFFFFFFFFFFFFFLL;
  if (v52 == 43)
  {
    if (!v54) {
      goto LABEL_83;
    }
    if (v54 == 1 || (BYTE1(v52) - 48) > 9u) {
      goto LABEL_45;
    }
    if (v54 == 2) {
      goto LABEL_47;
    }
    if ((BYTE2(v52) - 48) <= 9u)
    {
      uint64_t v60 = 10 * (BYTE1(v52) - 48) + (BYTE2(v52) - 48);
      uint64_t v61 = v54 - 3;
      if (v61)
      {
        id v62 = (unsigned __int8 *)v85;
        while (1)
        {
          unsigned int v63 = *v62 - 48;
          if (v63 > 9) {
            goto LABEL_45;
          }
          uint64_t v64 = 10 * v60;
          if ((unsigned __int128)(v60 * (__int128)10) >> 64 != (10 * v60) >> 63) {
            goto LABEL_45;
          }
          uint64_t v60 = v64 + v63;
          if (__OFADD__(v64, v63)) {
            goto LABEL_45;
          }
          char v59 = 0;
          ++v62;
          if (!--v61) {
            goto LABEL_48;
          }
        }
      }
      goto LABEL_47;
    }
    goto LABEL_45;
  }
  if (v52 != 45)
  {
    if (v54 && (v52 - 48) <= 9u)
    {
      if (v54 == 1) {
        goto LABEL_47;
      }
      if ((BYTE1(v52) - 48) <= 9u)
      {
        uint64_t v65 = 10 * (v52 - 48) + (BYTE1(v52) - 48);
        uint64_t v66 = v54 - 2;
        if (v66)
        {
          char v67 = (unsigned __int8 *)v84;
          while (1)
          {
            unsigned int v68 = *v67 - 48;
            if (v68 > 9) {
              goto LABEL_45;
            }
            uint64_t v69 = 10 * v65;
            if ((unsigned __int128)(v65 * (__int128)10) >> 64 != (10 * v65) >> 63) {
              goto LABEL_45;
            }
            uint64_t v65 = v69 + v68;
            if (__OFADD__(v69, v68)) {
              goto LABEL_45;
            }
            char v59 = 0;
            ++v67;
            if (!--v66) {
              goto LABEL_48;
            }
          }
        }
        goto LABEL_47;
      }
    }
LABEL_45:
    char v59 = 1;
    goto LABEL_48;
  }
  if (v54)
  {
    if (v54 == 1 || (BYTE1(v52) - 48) > 9u) {
      goto LABEL_45;
    }
    if (v54 == 2)
    {
      char v59 = 0;
      goto LABEL_48;
    }
    if ((BYTE2(v52) - 48) > 9u) {
      goto LABEL_45;
    }
    uint64_t v70 = -10 * (BYTE1(v52) - 48) - (BYTE2(v52) - 48);
    uint64_t v71 = v54 - 3;
    if (v71)
    {
      BOOL v72 = (unsigned __int8 *)v85;
      while (1)
      {
        unsigned int v73 = *v72 - 48;
        if (v73 > 9) {
          goto LABEL_45;
        }
        uint64_t v74 = 10 * v70;
        if ((unsigned __int128)(v70 * (__int128)10) >> 64 != (10 * v70) >> 63) {
          goto LABEL_45;
        }
        uint64_t v70 = v74 - v73;
        if (__OFSUB__(v74, v73)) {
          goto LABEL_45;
        }
        char v59 = 0;
        ++v72;
        if (!--v71) {
          goto LABEL_48;
        }
      }
    }
LABEL_47:
    char v59 = 0;
    goto LABEL_48;
  }
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
  return result;
}

uint64_t sub_2408C4BFC(void *a1)
{
  unint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_240955618() & 1;
  }
}

uint64_t sub_2408C4C54(uint64_t a1)
{
  sub_2408C541C(0, &qword_26AFCC5E0, MEMORY[0x263F46018], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2408C4CE0()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2408C4D18()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2408C4D28(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_240955448();
  __break(1u);
  return result;
}

uint64_t sub_2408C4E84(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 88 * a1 + 32;
    unint64_t v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_240955448();
  __break(1u);
  return result;
}

char *sub_2408C4F78(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_240955448();
  __break(1u);
  return result;
}

void sub_2408C5064()
{
  if (!qword_268C91450)
  {
    sub_24084850C(255, (unint64_t *)&qword_268C91300);
    unint64_t v0 = sub_2409555E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C91450);
    }
  }
}

uint64_t sub_2408C50D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_240955448();
  __break(1u);
  return result;
}

uint64_t sub_2408C51C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_24084850C(0, (unint64_t *)&qword_268C91300);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_240955448();
  __break(1u);
  return result;
}

uint64_t sub_2408C52E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_24083AE4C(0, (unint64_t *)&qword_26AFD0638, &qword_26AFD03C0, MEMORY[0x263F456E8], MEMORY[0x263F8D8F0]);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_240955448();
  __break(1u);
  return result;
}

void sub_2408C541C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2408C5480()
{
  if (!qword_268C90E10)
  {
    sub_24083EDCC(255, &qword_268C90E18);
    unint64_t v0 = sub_240954678();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C90E10);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ConceptSharableModelIdentifier.Domain(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2408C5584);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ConceptSharableModelIdentifier.Domain()
{
  return &type metadata for ConceptSharableModelIdentifier.Domain;
}

unint64_t sub_2408C55C0()
{
  unint64_t result = qword_268C91480;
  if (!qword_268C91480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91480);
  }
  return result;
}

uint64_t AccountSidebarContentConfigurationModel.init(browseCategory:indentationLevel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v49 = a3;
  uint64_t v47 = type metadata accessor for AccountSidebarContentConfigurationModel(0);
  MEMORY[0x270FA5388](v47);
  uint64_t v5 = (uint64_t *)((char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v46 = sub_2409535F8();
  uint64_t v44 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v42 = (uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2409526C8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_240951A98();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408CAFA0(0, &qword_26AFCE2A0, MEMORY[0x263F07508], MEMORY[0x263F8D8F0]);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v41 = (uint64_t)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v39 - v18;
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v50 = v11;
  uint64_t v21 = v11;
  unint64_t v22 = v20;
  v20((uint64_t)&v39 - v18, 1, 1, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  int v23 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v10, v7);
  int v24 = *MEMORY[0x263F45F30];
  uint64_t v45 = v7;
  uint64_t v43 = v8;
  if (v23 == v24)
  {
    sub_240849984((uint64_t)v19, &qword_26AFCE2A0, MEMORY[0x263F07508]);
    (*(void (**)(char *, uint64_t))(v8 + 96))(v10, v7);
    sub_240894CA4();
    swift_bridgeObjectRelease();
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    uint64_t v26 = v50;
    v25(v14, v10, v50);
    v25(v19, v14, v26);
    v22((uint64_t)v19, 0, 1, v26);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v27 = (uint64_t)v19;
  uint64_t v28 = v22;
  uint64_t v39 = v27;
  uint64_t v29 = sub_240952608();
  uint64_t v31 = v30;
  uint64_t v32 = v42;
  sub_2408C5B10(v42);
  uint64_t v40 = a1;
  uint64_t v33 = (uint64_t (*)(uint64_t))MEMORY[0x263F07508];
  uint64_t v34 = v41;
  sub_2408CB004(v27, v41, &qword_26AFCE2A0, MEMORY[0x263F07508]);
  uint64_t v35 = v47;
  uint64_t v36 = (uint64_t)v5 + *(int *)(v47 + 24);
  v28(v36, 1, 1, v50);
  *uint64_t v5 = v29;
  v5[1] = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 32))((char *)v5 + *(int *)(v35 + 20), v32, v46);
  sub_2408C6678(v34, v36);
  uint64_t v37 = v49;
  *(uint64_t *)((char *)v5 + *(int *)(v35 + 28)) = v48;
  sub_2408CB084((uint64_t)v5, v37, type metadata accessor for AccountSidebarContentConfigurationModel);
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v40, v45);
  return sub_240849984(v39, &qword_26AFCE2A0, v33);
}

uint64_t sub_2408C5B10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v34 = a1;
  uint64_t v3 = sub_2409526C8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v32[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = &v32[-v9];
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v32[-v11];
  uint64_t v13 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16);
  v13(&v32[-v11], v2, v3);
  uint64_t v14 = *(uint64_t (**)(unsigned char *, uint64_t))(v4 + 88);
  int v15 = v14(v12, v3);
  if (v15 == *MEMORY[0x263F45F28]) {
    goto LABEL_9;
  }
  if (v15 == *MEMORY[0x263F45F08])
  {
    sub_2408CCE88();
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_2409568A0;
    *(void *)(v16 + 32) = objc_msgSend(self, sel_systemGray3Color);
    uint64_t v35 = v16;
    sub_2409549B8();
    sub_24083EDCC(0, &qword_26AFCF3D0);
    uint64_t v17 = (void *)sub_240954988();
    swift_bridgeObjectRelease();
    objc_msgSend(self, sel_configurationWithPaletteColors_, v17);

    return sub_2409535C8();
  }
  if (v15 == *MEMORY[0x263F45EF8] || v15 == *MEMORY[0x263F45F10])
  {
LABEL_9:
    sub_2408CCE88();
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_240959860;
    uint64_t v20 = self;
    *(void *)(v19 + 32) = objc_msgSend(v20, sel_systemWhiteColor);
    *(void *)(v19 + 40) = objc_msgSend(v20, sel_systemBlueColor);
    uint64_t v35 = v19;
    sub_2409549B8();
    sub_24083EDCC(0, &qword_26AFCF3D0);
    uint64_t v21 = (void *)sub_240954988();
    swift_bridgeObjectRelease();
    objc_msgSend(self, sel_configurationWithPaletteColors_, v21);

    return sub_2409535C8();
  }
  v13(v10, (uint64_t)v12, v3);
  sub_240952618();
  sub_2408C6B10(&qword_26AFD03E8, MEMORY[0x263F45F38]);
  int v33 = sub_240954778();
  int v23 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
  v23(v7, v3);
  v23(v10, v3);
  if (v33)
  {
    id v24 = objc_msgSend(self, sel_configurationPreferringMulticolor);
    sub_2409535C8();
    return ((uint64_t (*)(unsigned char *, uint64_t))v23)(v12, v3);
  }
  int v25 = v14(v12, v3);
  if (v25 != *MEMORY[0x263F45F30])
  {
    if (v25 == *MEMORY[0x263F45EF0] || v25 == *MEMORY[0x263F45F18])
    {
      id v31 = objc_msgSend(self, sel_configurationPreferringMulticolor);
      return sub_2409535C8();
    }
    sub_240952638();
    sub_24083EDCC(0, &qword_268C908F0);
    sub_240954FA8();
    sub_2409535E8();
    return ((uint64_t (*)(unsigned char *, uint64_t))v23)(v12, v3);
  }
  (*(void (**)(unsigned char *, uint64_t))(v4 + 96))(v12, v3);
  sub_240894CA4();
  sub_2408F5B4C(*(void *)&v12[*(int *)(v26 + 48)], *(void *)&v12[*(int *)(v26 + 48) + 8]);
  swift_bridgeObjectRelease();
  sub_2408CCE88();
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_240959860;
  *(void *)(v27 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 0.85, 1.0);
  *(void *)(v27 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 0.55, 1.0);
  uint64_t v35 = v27;
  sub_2409549B8();
  sub_24083EDCC(0, &qword_26AFCF3D0);
  uint64_t v28 = (void *)sub_240954988();
  swift_bridgeObjectRelease();
  id v29 = objc_msgSend(self, sel_configurationWithPaletteColors_, v28);

  sub_2409535C8();
  uint64_t v30 = sub_240951A98();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)(v30 - 8) + 8))(v12, v30);
}

uint64_t AccountSidebarContentConfigurationModel.title.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AccountSidebarContentConfigurationModel.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AccountSidebarContentConfigurationModel.title.modify())()
{
  return nullsub_1;
}

uint64_t AccountSidebarContentConfigurationModel.imageRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccountSidebarContentConfigurationModel(0) + 20);
  uint64_t v4 = sub_2409535F8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AccountSidebarContentConfigurationModel.imageRepresentation.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccountSidebarContentConfigurationModel(0) + 20);
  uint64_t v4 = sub_2409535F8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AccountSidebarContentConfigurationModel.imageRepresentation.modify())()
{
  return nullsub_1;
}

uint64_t AccountSidebarContentConfigurationModel.accountId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AccountSidebarContentConfigurationModel(0);
  return sub_2408CB004(v1 + *(int *)(v3 + 24), a1, &qword_26AFCE2A0, MEMORY[0x263F07508]);
}

uint64_t AccountSidebarContentConfigurationModel.accountId.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccountSidebarContentConfigurationModel(0) + 24);

  return sub_2408C6678(a1, v3);
}

uint64_t (*AccountSidebarContentConfigurationModel.accountId.modify())()
{
  return nullsub_1;
}

uint64_t AccountSidebarContentConfigurationModel.indentationLevel.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for AccountSidebarContentConfigurationModel(0) + 28));
}

uint64_t AccountSidebarContentConfigurationModel.indentationLevel.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for AccountSidebarContentConfigurationModel(0);
  *(void *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*AccountSidebarContentConfigurationModel.indentationLevel.modify())()
{
  return nullsub_1;
}

uint64_t AccountSidebarContentConfigurationModel.init(title:imageRepresentation:accountId:indentationLevel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v12 = (int *)type metadata accessor for AccountSidebarContentConfigurationModel(0);
  uint64_t v13 = (uint64_t)a6 + v12[6];
  uint64_t v14 = sub_240951A98();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *a6 = a1;
  a6[1] = a2;
  int v15 = (char *)a6 + v12[5];
  uint64_t v16 = sub_2409535F8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v15, a3, v16);
  uint64_t result = sub_2408C6678(a4, v13);
  *(void *)((char *)a6 + v12[7]) = a5;
  return result;
}

uint64_t type metadata accessor for AccountSidebarContentConfigurationModel(uint64_t a1)
{
  return sub_24082A2AC(a1, qword_26AFCE960);
}

uint64_t sub_2408C6678(uint64_t a1, uint64_t a2)
{
  sub_2408CAFA0(0, &qword_26AFCE2A0, MEMORY[0x263F07508], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_2408C670C()
{
  unint64_t result = 0x656C746974;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0x49746E756F636361;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2408C67A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2408CAC60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2408C67D0(uint64_t a1)
{
  unint64_t v2 = sub_2408C6ABC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2408C680C(uint64_t a1)
{
  unint64_t v2 = sub_2408C6ABC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AccountSidebarContentConfigurationModel.encode(to:)(void *a1)
{
  sub_2408C70D4(0, (unint64_t *)&unk_26AFCF3E8, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v9[-v6];
  sub_2408304E8(a1, a1[3]);
  sub_2408C6ABC();
  sub_240955778();
  v9[15] = 0;
  sub_240955558();
  if (!v1)
  {
    type metadata accessor for AccountSidebarContentConfigurationModel(0);
    v9[14] = 1;
    sub_2409535F8();
    sub_2408C6B10(&qword_26AFCECA8, MEMORY[0x263F43658]);
    sub_240955598();
    v9[13] = 2;
    sub_240951A98();
    sub_2408C6B10(&qword_26AFCE298, MEMORY[0x263F07508]);
    sub_240955548();
    v9[12] = 3;
    sub_240955588();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_2408C6ABC()
{
  unint64_t result = qword_26AFCE928;
  if (!qword_26AFCE928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCE928);
  }
  return result;
}

uint64_t sub_2408C6B10(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t AccountSidebarContentConfigurationModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  sub_2408CAFA0(0, &qword_26AFCE2A0, MEMORY[0x263F07508], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  int v33 = (char *)v30 - v4;
  uint64_t v5 = sub_2409535F8();
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v36 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408C70D4(0, &qword_268C91488, MEMORY[0x263F8E040]);
  uint64_t v37 = v8;
  uint64_t v34 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v30 - v9;
  uint64_t v11 = type metadata accessor for AccountSidebarContentConfigurationModel(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (void *)((char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = (uint64_t)v14 + *(int *)(v12 + 24);
  uint64_t v16 = sub_240951A98();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v39 = v15;
  v17(v15, 1, 1, v16);
  sub_2408304E8(a1, a1[3]);
  sub_2408C6ABC();
  unint64_t v38 = v10;
  uint64_t v18 = (uint64_t)v40;
  sub_240955768();
  if (v18)
  {
    sub_2408371B8((uint64_t)a1);
    return sub_240849984(v39, &qword_26AFCE2A0, MEMORY[0x263F07508]);
  }
  else
  {
    uint64_t v40 = a1;
    id v31 = v14;
    uint64_t v20 = v35;
    uint64_t v19 = v36;
    char v44 = 0;
    uint64_t v21 = sub_2409554B8();
    unint64_t v22 = v31;
    *id v31 = v21;
    v22[1] = v23;
    char v43 = 1;
    sub_2408C6B10(&qword_268C91490, MEMORY[0x263F43658]);
    sub_2409554F8();
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))((char *)v22 + *(int *)(v11 + 20), v7, v19);
    char v42 = 2;
    sub_2408C6B10(&qword_268C90CD0, MEMORY[0x263F07508]);
    uint64_t v24 = (uint64_t)v33;
    uint64_t v25 = v37;
    v30[1] = 0;
    sub_2409554A8();
    sub_2408C6678(v24, v39);
    char v41 = 3;
    uint64_t v26 = sub_2409554E8();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v38, v25);
    uint64_t v28 = (uint64_t)v31;
    uint64_t v27 = v32;
    *(uint64_t *)((char *)v31 + *(int *)(v11 + 28)) = v26;
    sub_2408CCC34(v28, v27, type metadata accessor for AccountSidebarContentConfigurationModel);
    sub_2408371B8((uint64_t)v40);
    return sub_2408CB148(v28, type metadata accessor for AccountSidebarContentConfigurationModel);
  }
}

void sub_2408C70D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_2408C6ABC();
    unint64_t v7 = a3(a1, &type metadata for AccountSidebarContentConfigurationModel.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_2408C7138()
{
  return sub_2409539C8();
}

uint64_t sub_2408C71C8()
{
  return sub_2409539B8();
}

uint64_t sub_2408C7230@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AccountSidebarContentConfigurationModel.init(from:)(a1, a2);
}

uint64_t sub_2408C7248(void *a1)
{
  return AccountSidebarContentConfigurationModel.encode(to:)(a1);
}

uint64_t sub_2408C7260()
{
  if ((sub_240951A68() & 1) == 0) {
    return 0;
  }
  sub_24083EDCC(0, (unint64_t *)&qword_26AFCE280);
  return sub_240954FC8() & 1;
}

uint64_t sub_2408C72D4(uint64_t a1)
{
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2408CAFA0(0, (unint64_t *)&unk_26AFCE028, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v28 = (char *)&v27 - v5;
  uint64_t v6 = sub_240951A98();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v27 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t (*)(uint64_t))MEMORY[0x263F07508];
  sub_2408CAFA0(0, &qword_26AFCE2A0, MEMORY[0x263F07508], v3);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v27 - v11;
  sub_2408CCE10(0, &qword_268C91498, &qword_26AFCE2A0, v9);
  uint64_t v14 = v13 - 8;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v27 - v15;
  uint64_t v29 = v1;
  uint64_t v17 = v1 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_accountId;
  swift_beginAccess();
  uint64_t v18 = (uint64_t)&v16[*(int *)(v14 + 56)];
  sub_2408CB004(v17, (uint64_t)v16, &qword_26AFCE2A0, v9);
  sub_2408CB004(a1, v18, &qword_26AFCE2A0, v9);
  uint64_t v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v19((uint64_t)v16, 1, v6) == 1)
  {
    if (v19(v18, 1, v6) == 1) {
      return sub_240849984((uint64_t)v16, &qword_26AFCE2A0, MEMORY[0x263F07508]);
    }
  }
  else
  {
    sub_2408CB004((uint64_t)v16, (uint64_t)v12, &qword_26AFCE2A0, MEMORY[0x263F07508]);
    if (v19(v18, 1, v6) != 1)
    {
      uint64_t v21 = v27;
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v27, v18, v6);
      sub_2408C6B10(&qword_268C914A8, MEMORY[0x263F07508]);
      char v22 = sub_240954778();
      uint64_t v23 = *(void (**)(char *, uint64_t))(v7 + 8);
      v23(v21, v6);
      v23(v12, v6);
      uint64_t result = sub_240849984((uint64_t)v16, &qword_26AFCE2A0, MEMORY[0x263F07508]);
      if (v22) {
        return result;
      }
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  sub_2408CB0EC((uint64_t)v16, &qword_268C91498, &qword_26AFCE2A0, MEMORY[0x263F07508]);
LABEL_8:
  uint64_t v24 = sub_240954AB8();
  uint64_t v25 = (uint64_t)v28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v28, 1, 1, v24);
  uint64_t v26 = (void *)swift_allocObject();
  v26[2] = 0;
  void v26[3] = 0;
  uint64_t v26[4] = v29;
  swift_retain();
  sub_240839E0C(v25, (uint64_t)&unk_268C914E0, (uint64_t)v26);
  return swift_release();
}

uint64_t sub_2408C7778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a4;
  uint64_t v5 = sub_2409540C8();
  v4[12] = v5;
  v4[13] = *(void *)(v5 - 8);
  v4[14] = swift_task_alloc();
  uint64_t v6 = sub_240951A98();
  v4[15] = v6;
  v4[16] = *(void *)(v6 - 8);
  v4[17] = swift_task_alloc();
  sub_2408CAFA0(0, &qword_26AFCE2A0, MEMORY[0x263F07508], MEMORY[0x263F8D8F0]);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2408C7900, 0, 0);
}

uint64_t sub_2408C7900()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[16];
  uint64_t v5 = v0[11] + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_accountId;
  swift_beginAccess();
  uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F07508];
  sub_2408CB004(v5, v2, &qword_26AFCE2A0, MEMORY[0x263F07508]);
  sub_2408CB004(v2, v1, &qword_26AFCE2A0, v6);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) == 1)
  {
    uint64_t v7 = (uint64_t (*)(uint64_t))MEMORY[0x263F07508];
    sub_240849984(v0[18], &qword_26AFCE2A0, MEMORY[0x263F07508]);
    sub_240849984(v0[19], &qword_26AFCE2A0, v7);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    (*(void (**)(void, void, void))(v0[16] + 32))(v0[17], v0[18], v0[15]);
    uint64_t v10 = (void *)swift_task_alloc();
    v0[20] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_2408C7B00;
    uint64_t v11 = v0[17];
    return sub_2408C9DD0(v11);
  }
}

uint64_t sub_2408C7B00(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 168) = a1;
  *(void *)(v3 + 176) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_2408C7EB8;
  }
  else {
    uint64_t v4 = sub_2408C7C14;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2408C7C14()
{
  if (v0[21])
  {
    sub_240954A98();
    v0[23] = sub_240954A88();
    uint64_t v2 = sub_240954A48();
    return MEMORY[0x270FA2498](sub_2408C7D50, v2, v1);
  }
  else
  {
    (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
    sub_240849984(v0[19], &qword_26AFCE2A0, MEMORY[0x263F07508]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
}

uint64_t sub_2408C7D50()
{
  uint64_t v1 = (void *)v0[21];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[11];
  swift_release();
  sub_2408C9794(v2, v3, v1);
  return MEMORY[0x270FA2498](sub_2408C7DE4, 0, 0);
}

uint64_t sub_2408C7DE4()
{
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 120);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_240849984(*(void *)(v0 + 152), &qword_26AFCE2A0, MEMORY[0x263F07508]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_2408C7EB8()
{
  uint64_t v26 = v0;
  uint64_t v1 = (void *)v0[22];
  uint64_t v2 = v0[19];
  (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
  sub_240849984(v2, &qword_26AFCE2A0, MEMORY[0x263F07508]);
  sub_240954078();
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_2409540B8();
  os_log_type_t v6 = sub_240954C18();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (void *)v0[22];
    uint64_t v22 = v0[13];
    uint64_t v23 = v0[12];
    uint64_t v24 = v0[14];
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446210;
    uint64_t v25 = v9;
    v0[9] = v7;
    id v10 = v7;
    id v11 = v7;
    sub_24083F3C0();
    sub_240955658();
    id v12 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v13 = sub_2409547E8();
    unint64_t v15 = v14;

    v0[10] = sub_2408370E4(v13, v15, &v25);
    sub_2409550B8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240818000, v5, v6, "Failed to load account image for sidebars: %{public}s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v9, -1, -1);
    MEMORY[0x2456021C0](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v23);
  }
  else
  {
    uint64_t v16 = (void *)v0[22];
    uint64_t v18 = v0[13];
    uint64_t v17 = v0[14];
    uint64_t v19 = v0[12];

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_2408C81B8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FetchedAccountIcon(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v20 = (uint64_t)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408CAFA0(0, &qword_26AFCE130, type metadata accessor for FetchedAccountIcon, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v20 - v7;
  sub_2408CCE10(0, &qword_268C914E8, &qword_26AFCE130, type metadata accessor for FetchedAccountIcon);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  id v12 = (char *)&v20 - v11;
  uint64_t v21 = v1;
  uint64_t v13 = v1 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_fetchedAccountIcon;
  swift_beginAccess();
  uint64_t v14 = (uint64_t)&v12[*(int *)(v10 + 56)];
  sub_2408CB004(v13, (uint64_t)v12, &qword_26AFCE130, type metadata accessor for FetchedAccountIcon);
  sub_2408CB004(a1, v14, &qword_26AFCE130, type metadata accessor for FetchedAccountIcon);
  unint64_t v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v15((uint64_t)v12, 1, v3) == 1)
  {
    if (v15(v14, 1, v3) == 1) {
      return sub_240849984((uint64_t)v12, &qword_26AFCE130, type metadata accessor for FetchedAccountIcon);
    }
    goto LABEL_6;
  }
  sub_2408CB004((uint64_t)v12, (uint64_t)v8, &qword_26AFCE130, type metadata accessor for FetchedAccountIcon);
  if (v15(v14, 1, v3) == 1)
  {
    sub_2408CB148((uint64_t)v8, type metadata accessor for FetchedAccountIcon);
LABEL_6:
    sub_2408CB0EC((uint64_t)v12, &qword_268C914E8, &qword_26AFCE130, type metadata accessor for FetchedAccountIcon);
    goto LABEL_11;
  }
  uint64_t v17 = v20;
  sub_2408CB084(v14, v20, type metadata accessor for FetchedAccountIcon);
  if (sub_240951A68())
  {
    sub_24083EDCC(0, (unint64_t *)&qword_26AFCE280);
    char v18 = sub_240954FC8();
    sub_2408CB148(v17, type metadata accessor for FetchedAccountIcon);
    sub_2408CB148((uint64_t)v8, type metadata accessor for FetchedAccountIcon);
    uint64_t result = sub_240849984((uint64_t)v12, &qword_26AFCE130, type metadata accessor for FetchedAccountIcon);
    if (v18) {
      return result;
    }
  }
  else
  {
    sub_2408CB148(v17, type metadata accessor for FetchedAccountIcon);
    sub_2408CB148((uint64_t)v8, type metadata accessor for FetchedAccountIcon);
    sub_240849984((uint64_t)v12, &qword_26AFCE130, type metadata accessor for FetchedAccountIcon);
  }
LABEL_11:
  uint64_t v19 = (void *)(v21 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_delegate);
  uint64_t result = swift_beginAccess();
  if (*v19)
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_240953D48();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t AccountSidebarContentConfigurationProvider.delegate.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t AccountSidebarContentConfigurationProvider.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_delegate);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_unknownObjectRelease();
}

uint64_t (*AccountSidebarContentConfigurationProvider.delegate.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t AccountSidebarContentConfigurationProvider.init()()
{
  uint64_t v1 = v0;
  sub_24083EDCC(0, (unint64_t *)&qword_268C90618);
  sub_240954DD8();
  sub_240952A08();
  sub_2409529F8();
  sub_240952C18();
  swift_allocObject();
  *(void *)(v0 + 16) = sub_240952BF8();
  sub_240953B28();
  swift_allocObject();
  *(void *)(v0 + 24) = sub_240953B18();
  uint64_t v2 = v0 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_accountId;
  uint64_t v3 = sub_240951A98();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v4 = v1 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_fetchedAccountIcon;
  uint64_t v5 = type metadata accessor for FetchedAccountIcon(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = (void *)(v1 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_delegate);
  void *v6 = 0;
  v6[1] = 0;
  return v1;
}

uint64_t AccountSidebarContentConfigurationProvider.makeContentConfiguration(viewModelState:viewContext:cellState:actionHandlerContent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v98 = a4;
  uint64_t v96 = a2;
  uint64_t v97 = a3;
  uint64_t v95 = a5;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2408CAFA0(0, &qword_26AFCECA0, MEMORY[0x263F43640], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v94 = (char *)&v72 - v8;
  uint64_t v88 = sub_240953A98();
  uint64_t v87 = *(void *)(v88 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v88);
  uint64_t v83 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unsigned int v73 = (char *)&v72 - v11;
  sub_2408CAFA0(0, qword_26AFCF6A8, MEMORY[0x263F43658], v6);
  MEMORY[0x270FA5388](v12 - 8);
  char v75 = (char *)&v72 - v13;
  uint64_t v86 = sub_2409535F8();
  uint64_t v100 = *(void *)(v86 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v86);
  unint64_t v93 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v76 = (char *)&v72 - v16;
  uint64_t v82 = sub_240951A98();
  uint64_t v81 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v74 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v18 = (uint64_t (*)(uint64_t))MEMORY[0x263F07508];
  sub_2408CCE10(0, &qword_268C91498, &qword_26AFCE2A0, MEMORY[0x263F07508]);
  uint64_t v79 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v80 = (uint64_t)&v72 - v20;
  uint64_t v91 = type metadata accessor for FetchedAccountIcon;
  sub_2408CAFA0(0, &qword_26AFCE130, type metadata accessor for FetchedAccountIcon, v6);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (char *)&v72 - v22;
  uint64_t v101 = type metadata accessor for FetchedAccountIcon(0);
  uint64_t v90 = *(void *)(v101 - 8);
  MEMORY[0x270FA5388](v101);
  uint64_t v99 = (uint64_t)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408CAFA0(0, &qword_26AFCE2A0, v18, v6);
  uint64_t v26 = MEMORY[0x270FA5388](v25 - 8);
  uint64_t v78 = (uint64_t)&v72 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v84 = (uint64_t)&v72 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v72 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v34 = (char *)&v72 - v33;
  uint64_t v35 = type metadata accessor for AccountSidebarContentConfigurationModel(0);
  uint64_t v36 = MEMORY[0x270FA5388](v35);
  uint64_t v77 = (uint64_t)&v72 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v36);
  uint64_t v39 = (char *)&v72 - v38;
  sub_2408CAFA0(0, &qword_268C914A0, type metadata accessor for AccountSidebarContentConfigurationModel, MEMORY[0x263F43CB8]);
  uint64_t v89 = v40;
  uint64_t v85 = a1;
  sub_2409537A8();
  uint64_t v92 = v35;
  sub_2408CB004((uint64_t)&v39[*(int *)(v35 + 24)], (uint64_t)v34, &qword_26AFCE2A0, v18);
  sub_2408CB148((uint64_t)v39, type metadata accessor for AccountSidebarContentConfigurationModel);
  uint64_t v41 = v102;
  uint64_t v42 = v102 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_accountId;
  swift_beginAccess();
  sub_2408CB004(v42, (uint64_t)v32, &qword_26AFCE2A0, v18);
  swift_beginAccess();
  sub_2408CCD90((uint64_t)v34, v42, &qword_26AFCE2A0, v18);
  swift_endAccess();
  sub_2408C72D4((uint64_t)v32);
  sub_240849984((uint64_t)v34, &qword_26AFCE2A0, v18);
  sub_240849984((uint64_t)v32, &qword_26AFCE2A0, v18);
  uint64_t v43 = v41 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_fetchedAccountIcon;
  swift_beginAccess();
  sub_2408CB004(v43, (uint64_t)v23, &qword_26AFCE130, v91);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v23, 1, v101) == 1)
  {
    sub_240849984((uint64_t)v23, &qword_26AFCE130, type metadata accessor for FetchedAccountIcon);
    uint64_t v44 = v86;
    goto LABEL_13;
  }
  uint64_t v45 = (uint64_t)v23;
  uint64_t v46 = v99;
  sub_2408CB084(v45, v99, type metadata accessor for FetchedAccountIcon);
  uint64_t v47 = v81;
  uint64_t v48 = v84;
  uint64_t v49 = v82;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16))(v84, v46, v82);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v48, 0, 1, v49);
  uint64_t v50 = v80;
  uint64_t v51 = v80 + *(int *)(v79 + 48);
  uint64_t v52 = (uint64_t (*)(uint64_t))MEMORY[0x263F07508];
  sub_2408CB004(v48, v80, &qword_26AFCE2A0, MEMORY[0x263F07508]);
  sub_2408CB004(v42, v51, &qword_26AFCE2A0, v52);
  unint64_t v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
  if (v53(v50, 1, v49) != 1)
  {
    uint64_t v56 = v78;
    sub_2408CB004(v50, v78, &qword_26AFCE2A0, MEMORY[0x263F07508]);
    if (v53(v51, 1, v49) != 1)
    {
      uint64_t v57 = v74;
      (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v74, v51, v49);
      sub_2408C6B10(&qword_268C914A8, MEMORY[0x263F07508]);
      char v58 = sub_240954778();
      char v59 = *(void (**)(char *, uint64_t))(v47 + 8);
      v59(v57, v49);
      uint64_t v60 = (uint64_t (*)(uint64_t))MEMORY[0x263F07508];
      sub_240849984(v84, &qword_26AFCE2A0, MEMORY[0x263F07508]);
      v59((char *)v56, v49);
      sub_240849984(v50, &qword_26AFCE2A0, v60);
      uint64_t v44 = v86;
      uint64_t v55 = v99;
      if (v58) {
        goto LABEL_11;
      }
LABEL_9:
      sub_2408CB148(v55, type metadata accessor for FetchedAccountIcon);
      goto LABEL_13;
    }
    sub_240849984(v84, &qword_26AFCE2A0, MEMORY[0x263F07508]);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v56, v49);
    uint64_t v44 = v86;
    uint64_t v55 = v99;
LABEL_8:
    sub_2408CB0EC(v50, &qword_268C91498, &qword_26AFCE2A0, MEMORY[0x263F07508]);
    goto LABEL_9;
  }
  sub_240849984(v84, &qword_26AFCE2A0, MEMORY[0x263F07508]);
  unsigned int v54 = v53(v51, 1, v49);
  uint64_t v44 = v86;
  uint64_t v55 = v99;
  if (v54 != 1) {
    goto LABEL_8;
  }
  sub_240849984(v50, &qword_26AFCE2A0, MEMORY[0x263F07508]);
LABEL_11:
  id v61 = *(id *)(v55 + *(int *)(v101 + 20));
  uint64_t v62 = (uint64_t)v75;
  sub_2409535D8();
  uint64_t v63 = v100;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v100 + 48))(v62, 1, v44) != 1)
  {
    char v67 = v76;
    (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v76, v62, v44);
    uint64_t v68 = v77;
    sub_2409537A8();
    uint64_t v69 = v92;
    (*(void (**)(uint64_t, char *, uint64_t))(v63 + 24))(v68 + *(int *)(v92 + 20), v67, v44);
    uint64_t v102 = *(void *)(v102 + 24);
    uint64_t v101 = sub_2409537B8();
    sub_2408CCC34(v68, (uint64_t)v39, type metadata accessor for AccountSidebarContentConfigurationModel);
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v93, &v39[*(int *)(v69 + 20)], v44);
    uint64_t v70 = sub_2409535B8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v94, 1, 1, v70);
    swift_bridgeObjectRetain();
    uint64_t v71 = v73;
    sub_240953A88();
    sub_2408CB148((uint64_t)v39, type metadata accessor for AccountSidebarContentConfigurationModel);
    sub_240953AE8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v87 + 8))(v71, v88);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v76, v44);
    sub_2408CB148(v99, type metadata accessor for FetchedAccountIcon);
    return sub_2408CB148(v77, type metadata accessor for AccountSidebarContentConfigurationModel);
  }
  sub_2408CB148(v55, type metadata accessor for FetchedAccountIcon);
  sub_240849984(v62, qword_26AFCF6A8, MEMORY[0x263F43658]);
LABEL_13:
  sub_2409537B8();
  sub_2409537A8();
  (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v93, &v39[*(int *)(v92 + 20)], v44);
  uint64_t v64 = sub_2409535B8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v94, 1, 1, v64);
  swift_bridgeObjectRetain();
  uint64_t v65 = v83;
  sub_240953A88();
  sub_2408CB148((uint64_t)v39, type metadata accessor for AccountSidebarContentConfigurationModel);
  sub_240953AE8();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v65, v88);
  return swift_bridgeObjectRelease();
}

uint64_t AccountSidebarContentConfigurationProvider.makeBackgroundConfiguration(cellState:)()
{
  return sub_240953AF8();
}

uint64_t AccountSidebarContentConfigurationProvider.makeAccessories()()
{
  return sub_240953B08();
}

uint64_t AccountSidebarContentConfigurationProvider.getCellIndentationLevel(viewModel:)(uint64_t a1)
{
  return *(void *)(a1 + *(int *)(type metadata accessor for AccountSidebarContentConfigurationModel(0) + 28));
}

uint64_t sub_2408C9794(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v43 = a3;
  uint64_t v45 = a2;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2408CAFA0(0, &qword_26AFCE130, type metadata accessor for FetchedAccountIcon, MEMORY[0x263F8D8F0]);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v42 = (uint64_t)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v41 = (char *)&v37 - v8;
  uint64_t v9 = sub_240951A98();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v38 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t (*)(uint64_t))MEMORY[0x263F07508];
  sub_2408CCE10(0, &qword_268C91498, &qword_26AFCE2A0, MEMORY[0x263F07508]);
  uint64_t v14 = v13 - 8;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v37 - v15;
  sub_2408CAFA0(0, &qword_26AFCE2A0, v12, v4);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v44 = (uint64_t)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v37 - v20;
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v40 = a1;
  v39((char *)&v37 - v20, a1, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v21, 0, 1, v9);
  uint64_t v22 = v45 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_accountId;
  swift_beginAccess();
  uint64_t v23 = (uint64_t)&v16[*(int *)(v14 + 56)];
  sub_2408CB004((uint64_t)v21, (uint64_t)v16, &qword_26AFCE2A0, v12);
  sub_2408CB004(v22, v23, &qword_26AFCE2A0, v12);
  uint64_t v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (v24((uint64_t)v16, 1, v9) != 1)
  {
    uint64_t v25 = v44;
    sub_2408CB004((uint64_t)v16, v44, &qword_26AFCE2A0, MEMORY[0x263F07508]);
    if (v24(v23, 1, v9) != 1)
    {
      uint64_t v27 = v38;
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v38, v23, v9);
      sub_2408C6B10(&qword_268C914A8, MEMORY[0x263F07508]);
      char v28 = sub_240954778();
      uint64_t v29 = *(void (**)(char *, uint64_t))(v10 + 8);
      v29(v27, v9);
      uint64_t v30 = (uint64_t (*)(uint64_t))MEMORY[0x263F07508];
      sub_240849984((uint64_t)v21, &qword_26AFCE2A0, MEMORY[0x263F07508]);
      v29((char *)v25, v9);
      uint64_t result = sub_240849984((uint64_t)v16, &qword_26AFCE2A0, v30);
      if ((v28 & 1) == 0) {
        return result;
      }
      goto LABEL_8;
    }
    sub_240849984((uint64_t)v21, &qword_26AFCE2A0, MEMORY[0x263F07508]);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v25, v9);
    return sub_2408CB0EC((uint64_t)v16, &qword_268C91498, &qword_26AFCE2A0, MEMORY[0x263F07508]);
  }
  sub_240849984((uint64_t)v21, &qword_26AFCE2A0, MEMORY[0x263F07508]);
  if (v24(v23, 1, v9) != 1) {
    return sub_2408CB0EC((uint64_t)v16, &qword_268C91498, &qword_26AFCE2A0, MEMORY[0x263F07508]);
  }
  sub_240849984((uint64_t)v16, &qword_26AFCE2A0, MEMORY[0x263F07508]);
LABEL_8:
  uint64_t v31 = (uint64_t)v41;
  v39(v41, v40, v9);
  uint64_t v32 = type metadata accessor for FetchedAccountIcon(0);
  uint64_t v33 = v43;
  *(void *)(v31 + *(int *)(v32 + 20)) = v43;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 0, 1, v32);
  uint64_t v34 = v45 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_fetchedAccountIcon;
  swift_beginAccess();
  uint64_t v35 = v42;
  sub_2408CB004(v34, v42, &qword_26AFCE130, type metadata accessor for FetchedAccountIcon);
  swift_beginAccess();
  id v36 = v33;
  sub_2408CCD90(v31, v34, &qword_26AFCE130, type metadata accessor for FetchedAccountIcon);
  swift_endAccess();
  sub_2408C81B8(v35);
  sub_240849984(v31, &qword_26AFCE130, type metadata accessor for FetchedAccountIcon);
  return sub_240849984(v35, &qword_26AFCE130, type metadata accessor for FetchedAccountIcon);
}

uint64_t sub_2408C9DD0(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = sub_240952508();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  sub_2408CAFA0(0, &qword_268C914C0, MEMORY[0x263F45E58], MEMORY[0x263F8D8F0]);
  v2[8] = v4;
  v2[9] = swift_task_alloc();
  uint64_t v5 = sub_240952558();
  v2[10] = v5;
  v2[11] = *(void *)(v5 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2408C9F88, 0, 0);
}

uint64_t sub_2408C9F88()
{
  uint64_t v1 = (void *)v0;
  uint64_t v2 = (int8x16_t *)swift_task_alloc();
  *(void *)(v0 + 112) = v2;
  v2[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
  uint64_t v3 = (void *)swift_task_alloc();
  v1[15] = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_2408CA0A8;
  uint64_t v5 = v1[8];
  uint64_t v4 = v1[9];
  return MEMORY[0x270FA2360](v4, 0, 0, 0xD000000000000016, 0x800000024095DEA0, sub_2408CCA1C, v2, v5);
}

uint64_t sub_2408CA0A8()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2408CA47C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_2408CA1F8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2408CA1F8()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 72);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_240849984(v3, &qword_268C914C0, MEMORY[0x263F45E58]);
    id v4 = 0;
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 48);
    uint64_t v5 = *(void *)(v0 + 56);
    uint64_t v7 = *(void *)(v0 + 40);
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(*(void *)(v0 + 104), v3, v1);
    sub_240952528();
    int v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v5, v7);
    LODWORD(v5) = *MEMORY[0x263F45E38];
    uint64_t v9 = (void *)sub_240952548();
    uint64_t v10 = v9;
    if (v8 == v5)
    {
      *(void *)(v0 + 16) = 0;
      id v4 = objc_msgSend(v9, sel_hr_imageWithWhiteBackground_, v0 + 16);

      id v11 = *(id *)(v0 + 16);
      if (!v4)
      {
        uint64_t v12 = v11;
        uint64_t v13 = (void *)sub_2409518E8();

        swift_willThrow();
        id v4 = 0;
      }
      (*(void (**)(void, void, void))(*(void *)(v0 + 88) + 16))(*(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 80));
      if (!v4) {
        id v4 = (id)sub_240952548();
      }
      uint64_t v14 = *(void *)(v0 + 104);
      uint64_t v15 = *(void *)(v0 + 80);
      uint64_t v16 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 88) + 8);
      v16(*(void *)(v0 + 96), v15);
      v16(v14, v15);
    }
    else
    {
      uint64_t v18 = *(void *)(v0 + 48);
      uint64_t v17 = *(void *)(v0 + 56);
      uint64_t v19 = *(void *)(v0 + 40);
      (*(void (**)(void, void))(*(void *)(v0 + 88) + 8))(*(void *)(v0 + 104), *(void *)(v0 + 80));
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
      id v4 = v10;
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(id))(v0 + 8);
  return v20(v4);
}

uint64_t sub_2408CA47C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2408CA548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v15[1] = a3;
  sub_2408CCA24();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = sub_240952518();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F45E40], v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v12 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v13 + v12, (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  sub_240952BD8();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_2408CA758(uint64_t a1)
{
  sub_2408CCBC4();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (uint64_t *)((char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2408CAFA0(0, &qword_268C914C0, MEMORY[0x263F45E58], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v12 - v6;
  sub_2408CCC34(a1, (uint64_t)v4, (uint64_t (*)(void))sub_2408CCBC4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = *v4;
    uint64_t v13 = v8;
    sub_24083F3C0();
    swift_willThrowTypedImpl();
    uint64_t v13 = v8;
    sub_2408CCA24();
    return sub_240954A58();
  }
  else
  {
    uint64_t v10 = sub_240952558();
    uint64_t v11 = *(void *)(v10 - 8);
    (*(void (**)(char *, uint64_t *, uint64_t))(v11 + 32))(v7, v4, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    sub_2408CCA24();
    return sub_240954A68();
  }
}

uint64_t AccountSidebarContentConfigurationProvider.deinit()
{
  swift_release();
  swift_release();
  sub_240849984(v0 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_accountId, &qword_26AFCE2A0, MEMORY[0x263F07508]);
  sub_240849984(v0 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_fetchedAccountIcon, &qword_26AFCE130, type metadata accessor for FetchedAccountIcon);
  swift_unknownObjectRelease();
  return v0;
}

uint64_t AccountSidebarContentConfigurationProvider.__deallocating_deinit()
{
  swift_release();
  swift_release();
  sub_240849984(v0 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_accountId, &qword_26AFCE2A0, MEMORY[0x263F07508]);
  sub_240849984(v0 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_fetchedAccountIcon, &qword_26AFCE130, type metadata accessor for FetchedAccountIcon);
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_2408CAAC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return AccountSidebarContentConfigurationProvider.makeContentConfiguration(viewModelState:viewContext:cellState:actionHandlerContent:)(a1, a2, a3, a4, a5);
}

uint64_t sub_2408CAADC()
{
  return sub_240953AF8();
}

uint64_t sub_2408CAB00()
{
  return sub_240953B08();
}

uint64_t sub_2408CAB24(uint64_t a1)
{
  return *(void *)(a1 + *(int *)(type metadata accessor for AccountSidebarContentConfigurationModel(0) + 28));
}

uint64_t sub_2408CAB54()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_2408CABA4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_delegate);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_unknownObjectRelease();
}

uint64_t (*sub_2408CAC04())()
{
  return j__swift_endAccess;
}

uint64_t sub_2408CAC60(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024095DE60 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x49746E756F636361 && a2 == 0xE900000000000064 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024095DE80)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_240955618();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t _s13HealthRecords42AccountSidebarContentConfigurationProviderCACycfC_0()
{
  type metadata accessor for AccountSidebarContentConfigurationProvider(0);
  uint64_t v0 = swift_allocObject();
  sub_24083EDCC(0, (unint64_t *)&qword_268C90618);
  sub_240954DD8();
  sub_240952A08();
  sub_2409529F8();
  sub_240952C18();
  swift_allocObject();
  *(void *)(v0 + 16) = sub_240952BF8();
  sub_240953B28();
  swift_allocObject();
  *(void *)(v0 + 24) = sub_240953B18();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_accountId;
  uint64_t v2 = sub_240951A98();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_fetchedAccountIcon;
  uint64_t v4 = type metadata accessor for FetchedAccountIcon(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = (void *)(v0 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_delegate);
  *uint64_t v5 = 0;
  v5[1] = 0;
  return v0;
}

uint64_t type metadata accessor for FetchedAccountIcon(uint64_t a1)
{
  return sub_24082A2AC(a1, (uint64_t *)&unk_26AFCE120);
}

void sub_2408CAFA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2408CB004(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_2408CAFA0(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_2408CB084(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2408CB0EC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_2408CCE10(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_2408CB148(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2408CB1A8()
{
  return sub_2408C6B10(&qword_26AFCE940, (void (*)(uint64_t))type metadata accessor for AccountSidebarContentConfigurationModel);
}

uint64_t sub_2408CB1F0()
{
  return sub_2408C6B10(&qword_26AFCE958, (void (*)(uint64_t))type metadata accessor for AccountSidebarContentConfigurationModel);
}

uint64_t sub_2408CB238()
{
  return sub_2408C6B10(&qword_26AFCE950, (void (*)(uint64_t))type metadata accessor for AccountSidebarContentConfigurationModel);
}

uint64_t *initializeBufferWithCopyOfBuffer for AccountSidebarContentConfigurationModel(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_2409535F8();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_240951A98();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      sub_2408CAFA0(0, &qword_26AFCE2A0, MEMORY[0x263F07508], MEMORY[0x263F8D8F0]);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  }
  return v4;
}

uint64_t destroy for AccountSidebarContentConfigurationModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_2409535F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_240951A98();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

void *initializeWithCopy for AccountSidebarContentConfigurationModel(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_2409535F8();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_240951A98();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_2408CAFA0(0, &qword_26AFCE2A0, MEMORY[0x263F07508], MEMORY[0x263F8D8F0]);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  return a1;
}

void *assignWithCopy for AccountSidebarContentConfigurationModel(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2409535F8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_240951A98();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    sub_2408CAFA0(0, &qword_26AFCE2A0, MEMORY[0x263F07508], MEMORY[0x263F8D8F0]);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  return a1;
}

_OWORD *initializeWithTake for AccountSidebarContentConfigurationModel(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2409535F8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_240951A98();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    sub_2408CAFA0(0, &qword_26AFCE2A0, MEMORY[0x263F07508], MEMORY[0x263F8D8F0]);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  return a1;
}

void *assignWithTake for AccountSidebarContentConfigurationModel(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_2409535F8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_240951A98();
  uint64_t v15 = *(void *)(v14 - 8);
  int v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_2408CAFA0(0, &qword_26AFCE2A0, MEMORY[0x263F07508], MEMORY[0x263F8D8F0]);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountSidebarContentConfigurationModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2408CBD44);
}

uint64_t sub_2408CBD44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_2409535F8();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_2408CAFA0(0, &qword_26AFCE2A0, MEMORY[0x263F07508], MEMORY[0x263F8D8F0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for AccountSidebarContentConfigurationModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2408CBEB4);
}

uint64_t sub_2408CBEB4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_2409535F8();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_2408CAFA0(0, &qword_26AFCE2A0, MEMORY[0x263F07508], MEMORY[0x263F8D8F0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_2408CC010()
{
  sub_2409535F8();
  if (v0 <= 0x3F)
  {
    sub_2408CAFA0(319, &qword_26AFCE2A0, MEMORY[0x263F07508], MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_2408CC120()
{
  return type metadata accessor for AccountSidebarContentConfigurationProvider(0);
}

uint64_t type metadata accessor for AccountSidebarContentConfigurationProvider(uint64_t a1)
{
  return sub_24082A2AC(a1, (uint64_t *)&unk_26AFCE150);
}

void sub_2408CC148()
{
  sub_2408CAFA0(319, &qword_26AFCE2A0, MEMORY[0x263F07508], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    sub_2408CAFA0(319, &qword_26AFCE130, type metadata accessor for FetchedAccountIcon, MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t *sub_2408CC288(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_240951A98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    id v10 = v9;
  }
  return a1;
}

void sub_2408CC358(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240951A98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = *(void **)(a1 + *(int *)(a2 + 20));
}

uint64_t sub_2408CC3CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240951A98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v8;
  id v9 = v8;
  return a1;
}

uint64_t sub_2408CC44C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240951A98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a2 + v7);
  id v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  return a1;
}

uint64_t sub_2408CC4D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240951A98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_2408CC550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240951A98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  return a1;
}

uint64_t sub_2408CC5D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2408CC5E8);
}

uint64_t sub_2408CC5E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240951A98();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_2408CC6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2408CC6BC);
}

uint64_t sub_2408CC6BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_240951A98();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_2408CC778()
{
  uint64_t result = sub_240951A98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AccountSidebarContentConfigurationModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2408CC8DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountSidebarContentConfigurationModel.CodingKeys()
{
  return &type metadata for AccountSidebarContentConfigurationModel.CodingKeys;
}

unint64_t sub_2408CC918()
{
  unint64_t result = qword_268C914B8;
  if (!qword_268C914B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C914B8);
  }
  return result;
}

unint64_t sub_2408CC970()
{
  unint64_t result = qword_26AFCE938;
  if (!qword_26AFCE938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCE938);
  }
  return result;
}

unint64_t sub_2408CC9C8()
{
  unint64_t result = qword_26AFCE930;
  if (!qword_26AFCE930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCE930);
  }
  return result;
}

uint64_t sub_2408CCA1C(uint64_t a1)
{
  return sub_2408CA548(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_2408CCA24()
{
  if (!qword_268C914C8)
  {
    sub_2408CAFA0(255, &qword_268C914C0, MEMORY[0x263F45E58], MEMORY[0x263F8D8F0]);
    sub_24083F3C0();
    unint64_t v0 = sub_240954A78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C914C8);
    }
  }
}

uint64_t sub_2408CCAC4()
{
  sub_2408CCA24();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_2408CCB54(uint64_t a1)
{
  sub_2408CCA24();

  return sub_2408CA758(a1);
}

void sub_2408CCBC4()
{
  if (!qword_268C914D0)
  {
    sub_240952558();
    sub_24083F3C0();
    unint64_t v0 = sub_240955758();
    if (!v1) {
      atomic_store(v0, &qword_268C914D0);
    }
  }
}

uint64_t sub_2408CCC34(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2408CCC9C()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_2408CCCDC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_24081E750;
  return sub_2408C7778(a1, v4, v5, v6);
}

uint64_t sub_2408CCD90(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_2408CAFA0(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a2, a1, v6);
  return a2;
}

void sub_2408CCE10(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_2408CAFA0(255, a3, a4, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_2408CCE88()
{
  if (!qword_26AFCF418)
  {
    unint64_t v0 = sub_2409555E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF418);
    }
  }
}

uint64_t sub_2408CCEE8(uint64_t a1, void *a2)
{
  uint64_t v145 = a2;
  uint64_t v3 = type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t v140 = *(void *)(v3 - 8);
  uint64_t v139 = *(void *)(v140 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v136 = (uint64_t)v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = (uint64_t (*)(uint64_t))MEMORY[0x263F90210];
  sub_24082EC24(0, &qword_26AFCECB8, MEMORY[0x263F90210], MEMORY[0x263F8D8F0]);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v111 = (uint64_t)v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v109 = (char *)v100 - v8;
  uint64_t v9 = sub_240951C28();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408D440C();
  uint64_t v108 = v13;
  uint64_t v107 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v105 = (char *)v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v104 = (char *)v100 - v16;
  sub_2408D44A0();
  uint64_t v114 = v17;
  uint64_t v115 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v106 = (char *)v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408D4534();
  uint64_t v116 = v19;
  uint64_t v117 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v110 = (char *)v100 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408D460C();
  uint64_t v121 = v21;
  uint64_t v122 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v113 = (char *)v100 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408D47B4();
  uint64_t v123 = v23;
  uint64_t v124 = *(uint64_t (**)())(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v118 = (char *)v100 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408D49A8();
  uint64_t v127 = v25;
  uint64_t v128 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v119 = (char *)v100 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408D4A3C();
  uint64_t v129 = v27;
  uint64_t v130 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v125 = (char *)v100 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408D4C10();
  uint64_t v133 = v29;
  uint64_t v134 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v126 = (char *)v100 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408D4DAC();
  uint64_t v137 = v31;
  uint64_t v138 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  unint64_t v131 = (char *)v100 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408D4E7C();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v141 = v33;
  uint64_t v142 = v34;
  MEMORY[0x270FA5388](v33);
  unint64_t v132 = (char *)v100 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408D4F68();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v143 = v36;
  uint64_t v144 = v37;
  MEMORY[0x270FA5388](v36);
  uint64_t v135 = (char *)v100 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_240951FB8();
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v148 = v39;
  uint64_t v149 = v40;
  uint64_t v103 = *(void *)(v40 + 64);
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v102 = (char *)v100 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v41);
  uint64_t v153 = (char *)v100 - v43;
  uint64_t v45 = *(void (**)(void))(v44 + 16);
  v100[1] = v44 + 16;
  uint64_t v101 = v45;
  v45();
  sub_240952808();
  uint64_t v46 = (void *)sub_2409527D8();
  uint64_t v151 = a1;
  sub_240951F38();
  sub_2408304E8(&v155, v156);
  uint64_t v47 = (void *)sub_240951E98();
  id v48 = objc_msgSend(v47, sel_profileIdentifier);

  uint64_t v146 = sub_2409527B8();
  sub_2408371B8((uint64_t)&v155);
  sub_2409517C8();
  swift_allocObject();
  uint64_t v150 = sub_2409517B8();
  uint64_t v147 = swift_allocObject();
  *(void *)(v147 + 16) = MEMORY[0x263F8EE80];
  uint64_t v49 = (void *)sub_2409527D8();
  sub_240951F38();
  sub_2408304E8(&v155, v156);
  uint64_t v50 = (void *)sub_240951E98();
  id v51 = objc_msgSend(v50, sel_profileIdentifier);

  uint64_t v120 = sub_240952788();
  sub_2408371B8((uint64_t)&v155);
  uint64_t v155 = sub_240953F98();
  sub_240841DD4();
  uint64_t v154 = MEMORY[0x263EFDCF8];
  sub_2408397B4(&qword_26AFCF2A8, (void (*)(uint64_t))sub_240841DD4);
  uint64_t v52 = v104;
  sub_240954518();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F455A8], v9);
  sub_240951C18();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v53 = sub_240954038();
  uint64_t v54 = (uint64_t)v109;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v109, 1, 1, v53);
  uint64_t v55 = v107;
  uint64_t v56 = v108;
  (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v105, v52, v108);
  uint64_t v57 = v112;
  sub_24081B768(v54, v111, &qword_26AFCECB8, v112);
  sub_2408397B4(&qword_26AFCF030, (void (*)(uint64_t))sub_2408D440C);
  char v58 = v106;
  sub_240954198();
  sub_24081B574(v54, &qword_26AFCECB8, v57);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v52, v56);
  sub_24081C07C(0, &qword_26AFCDEB8, &qword_26AFCDF40, 0x263F0A4E8, MEMORY[0x263F8D488]);
  sub_2408397B4(&qword_26AFCEE90, (void (*)(uint64_t))sub_2408D44A0);
  uint64_t v59 = v147;
  swift_retain();
  uint64_t v60 = v110;
  uint64_t v61 = v114;
  uint64_t v62 = v58;
  sub_2409544F8();
  uint64_t v63 = v59;
  swift_release();
  (*(void (**)(char *, uint64_t))(v115 + 8))(v62, v61);
  sub_2409542E8();
  sub_2408422B8();
  sub_2408397B4(&qword_26AFCEF50, (void (*)(uint64_t))sub_2408D4534);
  sub_2408397B4(&qword_26AFCDBB8, (void (*)(uint64_t))sub_2408422B8);
  uint64_t v64 = v113;
  uint64_t v65 = v116;
  sub_2409545D8();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v60, v65);
  uint64_t v66 = v102;
  uint64_t v67 = v148;
  ((void (*)(char *, char *, uint64_t))v101)(v102, v153, v148);
  uint64_t v68 = v149;
  unint64_t v69 = (*(unsigned __int8 *)(v149 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80);
  uint64_t v70 = (char *)swift_allocObject();
  uint64_t v71 = v152;
  uint64_t v72 = v146;
  *((void *)v70 + 2) = v152;
  *((void *)v70 + 3) = v72;
  *((void *)v70 + 4) = v63;
  (*(void (**)(char *, char *, uint64_t))(v68 + 32))(&v70[v69], v66, v67);
  sub_2408D48D4(0);
  sub_2408D48A0(0);
  sub_2408397B4(&qword_26AFCF208, (void (*)(uint64_t))sub_2408D460C);
  sub_2408397B4(&qword_26AFCDC30, sub_2408D48A0);
  swift_retain();
  swift_retain();
  unsigned int v73 = v118;
  uint64_t v74 = v121;
  sub_240954578();
  swift_release();
  (*(void (**)(char *, uint64_t))(v122 + 8))(v64, v74);
  sub_2408397B4(&qword_26AFCF148, (void (*)(uint64_t))sub_2408D47B4);
  char v75 = v119;
  uint64_t v76 = v123;
  sub_240954558();
  (*((void (**)(char *, uint64_t))v124 + 1))(v73, v76);
  uint64_t v124 = type metadata accessor for HealthRecordsGeneratorContext;
  uint64_t v77 = v136;
  sub_24083D478(v151, v136, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  uint64_t v78 = *(unsigned __int8 *)(v140 + 80);
  uint64_t v79 = (v78 + 24) & ~v78;
  uint64_t v123 = v78 | 7;
  unint64_t v80 = (v139 + v79 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v81 = swift_allocObject();
  *(void *)(v81 + 16) = v71;
  sub_2408244C8(v77, v81 + v79, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  *(void *)(v81 + v80) = v150;
  sub_2408D4AE8();
  sub_2408397B4(&qword_26AFCF128, (void (*)(uint64_t))sub_2408D49A8);
  swift_retain();
  uint64_t v82 = v125;
  uint64_t v83 = v127;
  sub_240954548();
  swift_release();
  (*(void (**)(char *, uint64_t))(v128 + 8))(v75, v83);
  sub_2408D4CFC(0);
  uint64_t v140 = MEMORY[0x263EFDC08];
  sub_2408397B4(&qword_26AFCF0E0, (void (*)(uint64_t))sub_2408D4A3C);
  sub_2408397B4(&qword_26AFCDC70, sub_2408D4CFC);
  uint64_t v84 = v126;
  uint64_t v85 = v129;
  sub_240954508();
  (*(void (**)(char *, uint64_t))(v130 + 8))(v82, v85);
  sub_24083D478(v151, v77, (uint64_t (*)(void))v124);
  uint64_t v86 = (v78 + 32) & ~v78;
  uint64_t v87 = swift_allocObject();
  uint64_t v88 = v152;
  uint64_t v89 = v145;
  *(void *)(v87 + 16) = v152;
  *(void *)(v87 + 24) = v89;
  sub_2408244C8(v77, v87 + v86, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  sub_24083FEFC(0, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
  sub_2408397B4(&qword_26AFCEFE0, (void (*)(uint64_t))sub_2408D4C10);
  id v90 = v89;
  uint64_t v91 = v131;
  uint64_t v92 = v133;
  sub_240954548();
  swift_release();
  (*(void (**)(char *, uint64_t))(v134 + 8))(v84, v92);
  *(void *)(swift_allocObject() + 16) = v88;
  sub_2408418D4();
  sub_2408397B4(&qword_26AFCF0D0, (void (*)(uint64_t))sub_2408D4DAC);
  sub_2408397B4(&qword_26AFCDCC0, (void (*)(uint64_t))sub_2408418D4);
  unint64_t v93 = v132;
  uint64_t v94 = v137;
  sub_240954508();
  swift_release();
  (*(void (**)(char *, uint64_t))(v138 + 8))(v91, v94);
  uint64_t v155 = MEMORY[0x263F8EE78];
  sub_2408397B4(&qword_26AFCF020, (void (*)(uint64_t))sub_2408D4E7C);
  uint64_t v95 = v135;
  uint64_t v96 = v141;
  sub_2409544C8();
  (*(void (**)(char *, uint64_t))(v142 + 8))(v93, v96);
  sub_2408397B4(&qword_26AFCEE40, (void (*)(uint64_t))sub_2408D4F68);
  uint64_t v97 = v143;
  uint64_t v98 = sub_240954498();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v144 + 8))(v95, v97);
  (*(void (**)(char *, uint64_t))(v149 + 8))(v153, v148);
  swift_release();
  return v98;
}

uint64_t sub_2408CE404@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_2409540C8();
  uint64_t v60 = *(void *)(v7 - 8);
  uint64_t v61 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v63 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240951A98();
  uint64_t v66 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v11 = (unint64_t)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t isUniquelyReferenced_nonNull_native = sub_240953FD8();
  uint64_t v71 = a1;
  uint64_t v62 = sub_240953FB8();
  unint64_t v59 = isUniquelyReferenced_nonNull_native >> 62;
  if (isUniquelyReferenced_nonNull_native >> 62) {
    goto LABEL_31;
  }
  uint64_t v13 = *(void *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (unint64_t i = isUniquelyReferenced_nonNull_native; v13; unint64_t i = isUniquelyReferenced_nonNull_native)
  {
    uint64_t v58 = a3;
    a2 += 2;
    uint64_t v69 = v13;
    unint64_t v70 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
    a3 = 4;
    uint64_t v68 = (void (**)(uint64_t, uint64_t))(v66 + 8);
    uint64_t v64 = v66 + 16;
    uint64_t v65 = (v66 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v72 = v11;
    while (1)
    {
      id v16 = v70
          ? (id)MEMORY[0x2456015B0](a3 - 4, isUniquelyReferenced_nonNull_native)
          : *(id *)(isUniquelyReferenced_nonNull_native + 8 * a3);
      uint64_t v17 = v16;
      uint64_t v18 = a3 - 3;
      if (__OFADD__(a3 - 4, 1)) {
        break;
      }
      id v19 = objc_msgSend(v16, sel_UUID);
      sub_240951A78();

      uint64_t v20 = sub_240953FC8();
      swift_beginAccess();
      if (v20)
      {
        unint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unsigned int v73 = (void *)*a2;
        uint64_t v21 = (uint64_t)v73;
        *a2 = 0x8000000000000000;
        unint64_t v11 = sub_240931478(v11);
        uint64_t v23 = *(void *)(v21 + 16);
        BOOL v24 = (v22 & 1) == 0;
        uint64_t v25 = v23 + v24;
        if (__OFADD__(v23, v24)) {
          goto LABEL_29;
        }
        uint64_t v3 = v22;
        if (*(void *)(v21 + 24) >= v25)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_24093B7F0();
          }
        }
        else
        {
          sub_24093A934(v25, isUniquelyReferenced_nonNull_native);
          unint64_t v26 = sub_240931478(v72);
          if ((v3 & 1) != (v27 & 1)) {
            goto LABEL_67;
          }
          unint64_t v11 = v26;
        }
        unint64_t isUniquelyReferenced_nonNull_native = i;
        uint64_t v35 = v73;
        if (v3)
        {
          uint64_t v3 = v73[7];
          uint64_t v14 = 8 * v11;

          *(void *)(v3 + v14) = v20;
        }
        else
        {
          v73[(v11 >> 6) + 8] |= 1 << v11;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v66 + 16))(v35[6] + *(void *)(v66 + 72) * v11, v72, v9);
          *(void *)(v35[7] + 8 * v11) = v20;
          uint64_t v36 = v35[2];
          BOOL v37 = __OFADD__(v36, 1);
          uint64_t v38 = v36 + 1;
          if (v37) {
            goto LABEL_30;
          }
          v35[2] = v38;
        }
        *a2 = (uint64_t)v35;
        swift_bridgeObjectRelease();
        unint64_t v11 = v72;
        (*v68)(v72, v9);
      }
      else
      {
        swift_bridgeObjectRetain();
        unint64_t v28 = sub_240931478(v11);
        char v30 = v29;
        swift_bridgeObjectRelease();
        if (v30)
        {
          int v31 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v32 = *a2;
          unsigned int v73 = (void *)*a2;
          *a2 = 0x8000000000000000;
          if (!v31)
          {
            sub_24093B7F0();
            uint64_t v32 = (uint64_t)v73;
          }
          uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
          v33(*(void *)(v32 + 48) + *(void *)(v66 + 72) * v28, v9);
          uint64_t v34 = (uint64_t)v73;
          uint64_t v3 = *(void *)(v73[7] + 8 * v28);
          sub_2408D3AD0(v28, (uint64_t)v73);
          *a2 = v34;
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v3 = 0;
          uint64_t v33 = *v68;
        }
        unint64_t v11 = v72;
        v33(v72, v9);
      }
      uint64_t v15 = v69;
      swift_endAccess();

      ++a3;
      if (v18 == v15)
      {
        swift_bridgeObjectRelease();
        a3 = v58;
        goto LABEL_33;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain_n();
    uint64_t v13 = sub_2409553D8();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_33:
  uint64_t v39 = isUniquelyReferenced_nonNull_native;
  uint64_t v40 = v63;
  sub_240954058();
  swift_bridgeObjectRetain_n();
  unint64_t v41 = v62;
  swift_bridgeObjectRetain_n();
  uint64_t v42 = sub_2409540B8();
  os_log_type_t v43 = sub_240954C38();
  if (!os_log_type_enabled((os_log_t)v42, v43))
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_41;
  }
  uint64_t v44 = swift_slowAlloc();
  uint64_t v3 = swift_slowAlloc();
  v74[0] = v3;
  *(_DWORD *)uint64_t v44 = 136446466;
  unsigned int v73 = (void *)type metadata accessor for UDCSnippetGenerator(0);
  sub_2408D43EC(0);
  uint64_t v45 = sub_2409547E8();
  unsigned int v73 = (void *)sub_2408370E4(v45, v46, v74);
  sub_2409550B8();
  swift_bridgeObjectRelease();
  *(_WORD *)(v44 + 12) = 2082;
  if (v59)
  {
    swift_bridgeObjectRetain();
    uint64_t v47 = (uint64_t *)sub_2409553D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v47 = *(uint64_t **)((i & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v41 >> 62) {
    goto LABEL_64;
  }
  uint64_t v48 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v49 = (uint64_t)v47 + v48;
  if (__OFADD__(v47, v48))
  {
LABEL_66:
    __break(1u);
LABEL_67:
    uint64_t result = sub_240955678();
    __break(1u);
  }
  else
  {
    while (1)
    {
      unsigned int v73 = (void *)v49;
      uint64_t v50 = sub_2409555D8();
      unsigned int v73 = (void *)sub_2408370E4(v50, v51, v74);
      sub_2409550B8();
      swift_bridgeObjectRelease_n();
      uint64_t v39 = i;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240818000, (os_log_t)v42, v43, "[%{public}s] Generating FeedItems for %{public}s UDC concepts", (uint8_t *)v44, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v3, -1, -1);
      MEMORY[0x2456021C0](v44, -1, -1);

LABEL_41:
      (*(void (**)(char *, uint64_t))(v60 + 8))(v40, v61);
      v74[0] = v39;
      uint64_t v47 = v74;
      sub_2408FF3B4(v41);
      uint64_t v42 = v74[0];
      v74[0] = MEMORY[0x263F8EE78];
      if ((unint64_t)v42 >> 62)
      {
        if (v42 < 0) {
          uint64_t v47 = (uint64_t *)v42;
        }
        else {
          uint64_t v47 = (uint64_t *)(v42 & 0xFFFFFFFFFFFFFF8);
        }
        swift_bridgeObjectRetain();
        uint64_t v44 = sub_2409553D8();
        if (!v44) {
          goto LABEL_62;
        }
      }
      else
      {
        uint64_t v44 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v44) {
          goto LABEL_62;
        }
      }
      if (v44 >= 1) {
        break;
      }
      __break(1u);
LABEL_64:
      swift_bridgeObjectRetain();
      uint64_t v57 = sub_2409553D8();
      swift_bridgeObjectRelease();
      uint64_t v49 = (uint64_t)v47 + v57;
      if (__OFADD__(v47, v57)) {
        goto LABEL_66;
      }
    }
    if ((v42 & 0xC000000000000001) != 0)
    {
      for (uint64_t j = 0; j != v44; ++j)
      {
        MEMORY[0x2456015B0](j, v42);
        self;
        if (swift_dynamicCastObjCClass())
        {
          MEMORY[0x245600C60]();
          if (*(void *)((v74[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v74[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_240954A08();
          }
          sub_240954A28();
          sub_2409549B8();
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
    }
    else
    {
      for (uint64_t k = 0; k != v44; ++k)
      {
        uint64_t v54 = *(void **)(v42 + 8 * k + 32);
        self;
        if (swift_dynamicCastObjCClass())
        {
          MEMORY[0x245600C60](v54);
          if (*(void *)((v74[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v74[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_240954A08();
          }
          sub_240954A28();
          sub_2409549B8();
        }
      }
    }
LABEL_62:
    swift_bridgeObjectRelease();
    uint64_t v55 = v74[0];
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a3 = v55;
  }
  return result;
}

uint64_t sub_2408CECC0(void *a1)
{
  sub_24084221C();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[1] = *a1;
  sub_24081C07C(0, &qword_26AFCDEB8, &qword_26AFCDF40, 0x263F0A4E8, MEMORY[0x263F8D488]);
  sub_2408BA730();
  sub_240954958();
  sub_24083F3C0();
  sub_240954298();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2408CEE08@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v40 = a3;
  uint64_t v41 = a5;
  uint64_t v44 = a2;
  unint64_t v46 = a6;
  sub_2408D48D4(0);
  uint64_t v45 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v35 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24082EC24(0, &qword_268C91530, (uint64_t (*)(uint64_t))sub_2408D48D4, MEMORY[0x263EFDDF8]);
  uint64_t v36 = *(void *)(v10 - 8);
  uint64_t v37 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v35 - v11;
  sub_2408D5828(0);
  uint64_t v38 = *(v13 - 1);
  id v39 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_240951FB8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x270FA5388](v16);
  sub_2408D585C();
  uint64_t v42 = *(void *)(v19 - 8);
  uint64_t v43 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *a1;
  swift_beginAccess();
  uint64_t v23 = *(void *)(a4 + 16);
  self;
  uint64_t v24 = swift_dynamicCastObjCClass();
  if (v24)
  {
    uint64_t v25 = v24;
    swift_bridgeObjectRetain();
    id v39 = v22;
    uint64_t v47 = sub_2409531B8();
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v41, v16);
    unint64_t v26 = (*(unsigned __int8 *)(v17 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    char v27 = (char *)swift_allocObject();
    *((void *)v27 + 2) = v44;
    *((void *)v27 + 3) = v25;
    *((void *)v27 + 4) = v23;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v27[v26], (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
    sub_2408D5908();
    sub_2408397B4(&qword_26AFCDD20, (void (*)(uint64_t))sub_2408D5908);
    swift_bridgeObjectRetain();
    id v28 = v39;
    sub_2409544F8();
    swift_release();
    swift_release();
    sub_2408397B4(&qword_268C91550, (void (*)(uint64_t))sub_2408D585C);
    uint64_t v29 = v43;
    uint64_t v30 = sub_240954498();

    (*(void (**)(char *, uint64_t))(v42 + 8))(v21, v29);
  }
  else
  {
    sub_2408D4908();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v35, 1, 1, v31);
    swift_bridgeObjectRetain();
    sub_2409543A8();
    sub_24083F3C0();
    uint64_t v32 = v37;
    sub_240954368();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v32);
    sub_2408397B4(&qword_268C91548, sub_2408D5828);
    id v33 = v39;
    uint64_t v30 = sub_240954498();
    (*(void (**)(char *, id))(v38 + 8))(v15, v33);
  }
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v46 = v30;
  return result;
}

uint64_t sub_2408CF38C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v73 = sub_2409528B8();
  uint64_t v71 = *(void *)(v73 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v73);
  uint64_t v69 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v60 - v10;
  uint64_t v72 = sub_240952778();
  uint64_t v70 = *(void *)(v72 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v72);
  uint64_t v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v64 = (char *)&v60 - v15;
  uint64_t v16 = sub_240951E78();
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v63 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v68 = (char *)&v60 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  __int16 v76 = 0;
  unint64_t v25 = MEMORY[0x263F8EE78];
  unint64_t v74 = MEMORY[0x263F8EE78];
  unint64_t v75 = MEMORY[0x263F8EE78];
  uint64_t v26 = *(void *)(a1 + 16);
  uint64_t v65 = v22;
  uint64_t v66 = v14;
  uint64_t v67 = v27;
  if (!v26) {
    goto LABEL_9;
  }
  uint64_t v61 = v11;
  uint64_t v62 = (char *)&v60 - v23;
  uint64_t v60 = v24;
  sub_2408D48D4(0);
  uint64_t v29 = a1
      + ((*(unsigned __int8 *)(*(void *)(v28 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v28 - 8) + 80));
  uint64_t v30 = *(void *)(*(void *)(v28 - 8) + 72);
  uint64_t v31 = swift_bridgeObjectRetain();
  do
  {
    uint64_t v32 = (void *)MEMORY[0x245601B40](v31);
    sub_2408D247C(v29, (uint64_t)&v76 + 1, &v76, &v75, v3, a3, a2, &v74);
    if (v4)
    {
      goto LABEL_13;
    }
    v29 += v30;
    --v26;
  }
  while (v26);
  swift_bridgeObjectRelease();
  if ((v76 & 0x100) == 0)
  {
    unint64_t v25 = MEMORY[0x263F8EE78];
LABEL_9:
    uint64_t v39 = v73;
    uint64_t v33 = v70;
    uint64_t v40 = v71;
    goto LABEL_10;
  }
  uint64_t v33 = v70;
  uint64_t v34 = (uint64_t)v64;
  (*(void (**)(char *, void, uint64_t))(v70 + 104))(v64, *MEMORY[0x263F45F80], v72);
  uint64_t v35 = v71;
  uint64_t v36 = (uint64_t)v61;
  uint64_t v37 = v73;
  (*(void (**)(char *, void, uint64_t))(v71 + 104))(v61, *MEMORY[0x263F45FE8], v73);
  uint64_t v38 = (void *)sub_240951F68();
  sub_2408D34D8(v34, v36);

  uint64_t v53 = v36;
  uint64_t v54 = v37;
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v53, v37);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v72);
  uint64_t v55 = v65;
  (*(void (**)(uint64_t, char *, uint64_t))(v67 + 16))(v60, v62, v65);
  unint64_t v25 = sub_2408C3044(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v57 = *(void *)(v25 + 16);
  unint64_t v56 = *(void *)(v25 + 24);
  if (v57 >= v56 >> 1) {
    unint64_t v25 = sub_2408C3044(v56 > 1, v57 + 1, 1, v25);
  }
  *(void *)(v25 + 16) = v57 + 1;
  uint64_t v58 = v67;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v67 + 32))(v25+ ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80))+ *(void *)(v67 + 72) * v57, v60, v55);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v62, v55);
  uint64_t v40 = v71;
  uint64_t v39 = v54;
LABEL_10:
  uint64_t v41 = (uint64_t)v69;
  if (v76 != 1) {
    return v75;
  }
  uint64_t v42 = (uint64_t)v66;
  (*(void (**)(char *, void, uint64_t))(v33 + 104))(v66, *MEMORY[0x263F45F78], v72);
  (*(void (**)(uint64_t, void, uint64_t))(v40 + 104))(v41, *MEMORY[0x263F45FE8], v39);
  uint64_t v43 = v40;
  uint64_t v44 = (void *)sub_240951F68();
  sub_2408D34D8(v42, v41);
  if (!v4)
  {

    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v73);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v42, v72);
    unint64_t v46 = v68;
    uint64_t v47 = v63;
    uint64_t v48 = v65;
    (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v63, v68, v65);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v25 = sub_2408C3044(0, *(void *)(v25 + 16) + 1, 1, v25);
    }
    unint64_t v50 = *(void *)(v25 + 16);
    unint64_t v49 = *(void *)(v25 + 24);
    uint64_t v51 = v67;
    if (v50 >= v49 >> 1)
    {
      uint64_t v59 = sub_2408C3044(v49 > 1, v50 + 1, 1, v25);
      uint64_t v51 = v67;
      unint64_t v25 = v59;
    }
    *(void *)(v25 + 16) = v50 + 1;
    uint64_t v52 = v51;
    (*(void (**)(unint64_t, char *, uint64_t))(v51 + 32))(v25+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(void *)(v51 + 72) * v50, v47, v48);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v46, v48);
    return v75;
  }

  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v73);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v42, v72);
LABEL_13:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2408CFAE4@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24082EC24(0, &qword_268C914F8, (uint64_t (*)(uint64_t))sub_2408D4AE8, MEMORY[0x263EFDDF8]);
  uint64_t v5 = v4;
  uint64_t v39 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v31 - v6;
  sub_2408D5530(0);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v38 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_2409540C8();
  uint64_t v12 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  sub_240954058();
  id v16 = v15;
  id v17 = v15;
  uint64_t v18 = sub_2409540B8();
  os_log_type_t v19 = sub_240954C18();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v36 = a2;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v35 = v9;
    uint64_t v21 = (uint8_t *)v20;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v40 = v32;
    uint64_t v41 = (uint64_t)v15;
    uint64_t v33 = v10;
    *(_DWORD *)uint64_t v21 = 136446210;
    uint64_t v31 = v21 + 4;
    id v22 = v15;
    sub_24083F3C0();
    sub_240955658();
    uint64_t v34 = v5;
    id v23 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v24 = sub_240954808();
    uint64_t v41 = sub_2408370E4(v24, v25, &v40);
    uint64_t v10 = v33;
    sub_2409550B8();
    uint64_t v5 = v34;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240818000, v18, v19, "Error making feed item for record, hiding from UI: %{public}s", v21, 0xCu);
    uint64_t v26 = v32;
    a2 = v36;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v26, -1, -1);
    uint64_t v27 = v21;
    uint64_t v9 = v35;
    MEMORY[0x2456021C0](v27, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v37);
  uint64_t v41 = MEMORY[0x263F8EE78];
  uint64_t v42 = MEMORY[0x263F8EE78];
  uint64_t v43 = MEMORY[0x263F8EE78];
  uint64_t v44 = MEMORY[0x263F8EE78];
  sub_2408D4AE8();
  sub_2409543A8();
  sub_24083F3C0();
  uint64_t v28 = v38;
  sub_240954368();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v7, v5);
  sub_2408397B4(&qword_268C91508, sub_2408D5530);
  uint64_t v29 = sub_240954498();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v28, v9);
  *a2 = v29;
  return result;
}

void sub_2408CFF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v11 = (void *)MEMORY[0x245601B40]();
  sub_2408D149C(a6, a1, a3, a4, a5, &v12);
}

uint64_t sub_2408D0010@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_240864F38();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_2409540C8();
  uint64_t v9 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  sub_240954058();
  id v13 = v12;
  id v14 = v12;
  uint64_t v15 = sub_2409540B8();
  os_log_type_t v16 = sub_240954C18();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v35 = v5;
    uint64_t v18 = v17;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v39 = v33;
    *(_DWORD *)uint64_t v18 = 136446466;
    uint64_t v38 = sub_2408D43EC(0);
    sub_2408D54F0(0, &qword_268C914F0, (void (*)(uint64_t))sub_2408D43EC);
    uint64_t v34 = v6;
    uint64_t v19 = sub_2409547E8();
    uint64_t v36 = a2;
    uint64_t v38 = sub_2408370E4(v19, v20, &v39);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    v32[1] = v18 + 14;
    uint64_t v38 = (uint64_t)v12;
    id v21 = v12;
    id v22 = v12;
    sub_24083F3C0();
    sub_240955658();
    id v23 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v24 = sub_2409547E8();
    unint64_t v26 = v25;

    uint64_t v27 = v24;
    a2 = v36;
    uint64_t v38 = sub_2408370E4(v27, v26, &v39);
    sub_2409550B8();
    uint64_t v6 = v34;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240818000, v15, v16, "[%{public}s] Unable to compute desired difference for commit: %{public}s", (uint8_t *)v18, 0x16u);
    uint64_t v28 = v33;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v28, -1, -1);
    uint64_t v29 = v18;
    uint64_t v5 = v35;
    MEMORY[0x2456021C0](v29, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v37);
  uint64_t v38 = MEMORY[0x263F8EE78];
  sub_24083FEFC(0, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
  sub_2409543A8();
  sub_2408397B4((unint64_t *)&qword_26AFCDDD8, (void (*)(uint64_t))sub_240864F38);
  uint64_t v30 = sub_240954498();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v30;
  return result;
}

uint64_t sub_2408D0448(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 1;
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return 1;
  }
  if (v2 >= v3) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = a2;
  }
  if (v2 >= v3) {
    uint64_t v5 = a2;
  }
  else {
    uint64_t v5 = a1;
  }
  uint64_t v32 = v4;
  uint64_t v33 = v4 + 56;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v4 + 56);
  int64_t v31 = (unint64_t)(63 - v6) >> 6;
  uint64_t v9 = v5 + 56;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (1)
  {
    while (1)
    {
      int64_t v12 = v11;
      if (!v8) {
        break;
      }
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      if (*(void *)(v5 + 16)) {
        goto LABEL_31;
      }
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_50;
    }
    if (v15 >= v31) {
      goto LABEL_48;
    }
    unint64_t v16 = *(void *)(v33 + 8 * v15);
    ++v11;
    if (!v16)
    {
      int64_t v11 = v12 + 2;
      if (v12 + 2 >= v31) {
        goto LABEL_48;
      }
      unint64_t v16 = *(void *)(v33 + 8 * v11);
      if (!v16)
      {
        int64_t v11 = v12 + 3;
        if (v12 + 3 >= v31) {
          goto LABEL_48;
        }
        unint64_t v16 = *(void *)(v33 + 8 * v11);
        if (!v16) {
          break;
        }
      }
    }
LABEL_30:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    if (*(void *)(v5 + 16))
    {
LABEL_31:
      uint64_t v18 = (uint64_t *)(*(void *)(v32 + 48) + 16 * v14);
      uint64_t v20 = *v18;
      uint64_t v19 = v18[1];
      sub_2409556F8();
      swift_bridgeObjectRetain();
      sub_240954868();
      uint64_t v21 = sub_240955748();
      uint64_t v22 = -1 << *(unsigned char *)(v5 + 32);
      unint64_t v23 = v21 & ~v22;
      if ((*(void *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23))
      {
        uint64_t v24 = *(void *)(v5 + 48);
        unint64_t v25 = (void *)(v24 + 16 * v23);
        BOOL v26 = *v25 == v20 && v25[1] == v19;
        if (v26 || (sub_240955618() & 1) != 0)
        {
LABEL_44:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v30 = 0;
LABEL_45:
          sub_24084072C();
          return v30;
        }
        uint64_t v27 = ~v22;
        while (1)
        {
          unint64_t v23 = (v23 + 1) & v27;
          if (((*(void *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
            break;
          }
          uint64_t v28 = (void *)(v24 + 16 * v23);
          BOOL v29 = *v28 == v20 && v28[1] == v19;
          if (v29 || (sub_240955618() & 1) != 0) {
            goto LABEL_44;
          }
        }
      }
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v31)
  {
LABEL_48:
    swift_bridgeObjectRelease();
    uint64_t v30 = 1;
    goto LABEL_45;
  }
  unint64_t v16 = *(void *)(v33 + 8 * v17);
  if (v16)
  {
    int64_t v11 = v12 + 4;
    goto LABEL_30;
  }
  while (1)
  {
    int64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_48;
    }
    unint64_t v16 = *(void *)(v33 + 8 * v11);
    ++v17;
    if (v16) {
      goto LABEL_30;
    }
  }
LABEL_50:
  __break(1u);
  return result;
}

uint64_t sub_2408D072C()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HealthRecords19UDCSnippetGenerator_domain;
  uint64_t v2 = sub_240951F18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_24083B0B4(v0 + OBJC_IVAR____TtC13HealthRecords19UDCSnippetGenerator_context, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);

  return swift_deallocClassInstance();
}

uint64_t sub_2408D07F8()
{
  return type metadata accessor for UDCSnippetGenerator(0);
}

uint64_t type metadata accessor for UDCSnippetGenerator(uint64_t a1)
{
  return sub_24082A2AC(a1, (uint64_t *)&unk_26AFCCB90);
}

uint64_t sub_2408D0820@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC13HealthRecords19UDCSnippetGenerator_domain;
  uint64_t v4 = sub_240951F18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_2408D0898(unint64_t *a1@<X0>, void *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  unint64_t v9 = *a1;
  uint64_t v10 = (void *)MEMORY[0x245601B40]();
  sub_2408D0928(v9, a2, a3, a4, a5);
}

uint64_t sub_2408D0928@<X0>(unint64_t a1@<X0>, void *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  id v99 = a2;
  uint64_t v92 = a4;
  uint64_t v97 = a5;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24082EC24(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v94 = (char *)&v85 - v9;
  uint64_t v10 = type metadata accessor for UserDomainConceptFeedItemData();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v95 = (uint64_t)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_240952B98();
  uint64_t v90 = *(void *)(v12 - 8);
  uint64_t v91 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v89 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24082EC24(0, &qword_26AFCC6A8, MEMORY[0x263F07690], v7);
  MEMORY[0x270FA5388](v14 - 8);
  unint64_t v16 = (char *)&v85 - v15;
  sub_240851D44();
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v96 = (uint64_t)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v85 - v20;
  uint64_t v22 = sub_240951A98();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  unint64_t v25 = (char *)&v85 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_2409540C8();
  uint64_t v93 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v85 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_2409553D8();
    if (result) {
      goto LABEL_3;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    sub_240954058();
    id v74 = v99;
    unint64_t v75 = sub_2409540B8();
    os_log_type_t v76 = sub_240954C18();
    if (os_log_type_enabled(v75, v76))
    {
      uint64_t v77 = swift_slowAlloc();
      id v99 = (id)swift_slowAlloc();
      id v101 = v99;
      *(_DWORD *)uint64_t v77 = 136446466;
      uint64_t v100 = sub_2408D43EC(0);
      sub_2408D54F0(0, &qword_268C914F0, (void (*)(uint64_t))sub_2408D43EC);
      uint64_t v78 = sub_2409547E8();
      uint64_t v100 = sub_2408370E4(v78, v79, (uint64_t *)&v101);
      sub_2409550B8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v77 + 12) = 2082;
      uint64_t v80 = sub_240954EA8();
      uint64_t v100 = sub_2408370E4(v80, v81, (uint64_t *)&v101);
      sub_2409550B8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240818000, v75, v76, "[%{public}s] Unable to create a UDC Feed Item (No records associated) with concept: %{public}s", (uint8_t *)v77, 0x16u);
      id v82 = v99;
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v82, -1, -1);
      MEMORY[0x2456021C0](v77, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v93 + 8))(v28, v26);
    uint64_t v83 = v97;
    sub_2408D4908();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v83, 1, 1, v84);
  }
  uint64_t v29 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v29) {
    goto LABEL_22;
  }
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v31 = (id)MEMORY[0x2456015B0](0, a1);
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    id v31 = *(id *)(a1 + 32);
  }
  uint64_t v32 = v31;
  swift_bridgeObjectRelease();
  id v33 = objc_msgSend(v99, sel_UUID);
  sub_240951A78();

  if (*(void *)(a3 + 16) && (unint64_t v34 = sub_240931478((uint64_t)v25), (v35 & 1) != 0))
  {
    uint64_t v36 = *(void (**)(char *, uint64_t))(v23 + 8);
    id v37 = *(id *)(*(void *)(a3 + 56) + 8 * v34);
    v36(v25, v22);
    id v38 = objc_msgSend(v37, sel_listType);
    id v88 = v37;
    id v39 = objc_msgSend(v37, sel_linkCollection);
    uint64_t v87 = (uint64_t)v38;
    if (v39)
    {
      uint64_t v40 = v39;
      id v41 = objc_msgSend(v39, sel_links);

      sub_24083EDCC(0, &qword_268C91558);
      uint64_t v42 = (id *)sub_240954998();

      id v43 = v99;
      uint64_t v44 = v98;
      uint64_t v86 = sub_2408D5C38(v42, v43);
      char v46 = v45;
      uint64_t v98 = v44;
      swift_bridgeObjectRelease();

      LODWORD(v85) = 0;
      HIDWORD(v85) = v46 & 1;
    }
    else
    {
      uint64_t v86 = 0;
      uint64_t v85 = 0x100000000;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    uint64_t v86 = 0;
    uint64_t v87 = 0;
    id v88 = 0;
    uint64_t v85 = 0x100000001;
  }
  sub_24081C07C(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30, 0x263F0A460, MEMORY[0x263F08F88]);
  uint64_t v48 = v47;
  unint64_t v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56);
  v49(v21, 1, 1, v47);
  id v101 = v32;
  sub_24083EDCC(0, &qword_26AFCDF18);
  if (sub_240952E98())
  {
    sub_24083B0B4((uint64_t)v21, (uint64_t (*)(void))sub_240851D44);
    v49(v21, 1, 1, v48);
    uint64_t v50 = sub_240951AB8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v16, 1, 1, v50);
    uint64_t v51 = v89;
    sub_240952B88();
    uint64_t v93 = sub_240954828();
    uint64_t v53 = v52;
    (*(void (**)(char *, uint64_t))(v90 + 8))(v51, v91);
    sub_24081B574((uint64_t)v16, &qword_26AFCC6A8, MEMORY[0x263F07690]);
    uint64_t v54 = 0;
    uint64_t v55 = 0;
  }
  else
  {
    if (sub_240954E78())
    {
      sub_24083EDCC(0, (unint64_t *)&qword_26AFCDF30);
      uint64_t v56 = v96;
      sub_240954688();
      sub_24083B0B4((uint64_t)v21, (uint64_t (*)(void))sub_240851D44);
      v49((char *)v56, 0, 1, v48);
      sub_2408244C8(v56, (uint64_t)v21, (uint64_t (*)(void))sub_240851D44);
    }
    uint64_t v93 = sub_240954E68();
    uint64_t v53 = v57;
    id v58 = v32;
    uint64_t v54 = sub_2408D5B00((uint64_t)v32);
    uint64_t v55 = v59;
  }
  uint64_t v60 = (uint64_t)v21;
  id v61 = objc_msgSend(v32, sel_meaningfulDate, v85);
  if (v61)
  {
    uint64_t v62 = v61;
    uint64_t v63 = v32;
    uint64_t v64 = (uint64_t)v94;
    sub_240951A08();

    uint64_t v65 = sub_240951A28();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v64, 0, 1, v65);
  }
  else
  {
    uint64_t v63 = v32;
    uint64_t v66 = sub_240951A28();
    uint64_t v64 = (uint64_t)v94;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v94, 1, 1, v66);
  }
  uint64_t v67 = v96;
  sub_24083D478(v60, v96, (uint64_t (*)(void))sub_240851D44);
  id v68 = v99;
  uint64_t v69 = v95;
  sub_2408F2530(v68, v64, v67, v93, v53, v54, v55, v87, v95, v85, v86, BYTE4(v85));

  sub_24083B0B4(v60, (uint64_t (*)(void))sub_240851D44);
  sub_2408D4908();
  uint64_t v71 = v70;
  uint64_t v72 = *(int *)(v70 + 48);
  uint64_t v73 = v97;
  sub_2408244C8(v69, v97, (uint64_t (*)(void))type metadata accessor for UserDomainConceptFeedItemData);
  *(void *)(v73 + v72) = a1;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v73, 0, 1, v71);
  return swift_bridgeObjectRetain();
}

void sub_2408D149C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X6>, void *a6@<X8>)
{
  uint64_t v93 = a2;
  uint64_t v85 = a6;
  uint64_t v86 = a5;
  uint64_t v88 = a4;
  uint64_t v91 = a3;
  sub_24082EC24(0, &qword_26AFCD968, MEMORY[0x263F455C8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v87 = (uint64_t)&v81 - v8;
  uint64_t v9 = sub_240951C58();
  uint64_t v83 = *(void *)(v9 - 8);
  uint64_t v84 = v9;
  MEMORY[0x270FA5388](v9);
  id v82 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_240951A98();
  uint64_t v97 = *(void *)(v11 - 8);
  uint64_t v98 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_2409525A8();
  unint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v105 = (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  id v101 = (char *)&v81 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v81 - v20;
  sub_240951F38();
  uint64_t v22 = *MEMORY[0x263F45EA8];
  unint64_t v102 = v15;
  uint64_t v103 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 104);
  uint64_t v104 = (void *)(v15 + 104);
  v103(v21, v22, v14);
  uint64_t v111 = a1;
  uint64_t v23 = (void *)sub_240951F68();
  uint64_t v24 = (void *)sub_240951C68();
  unint64_t v25 = (void *)sub_240952588();
  unint64_t v26 = 0x800000024095C1A0;
  uint64_t v99 = v14;
  uint64_t v95 = v13;
  uint64_t v89 = (void *)0x800000024095C1A0;
  unint64_t v90 = (unint64_t)"testScrollAllRecordsTimeline";
  if (v24)
  {
    *(void *)&long long v109 = 0x656C69666F72505BLL;
    *((void *)&v109 + 1) = 0xE90000000000003ALL;
    uint64_t v100 = v25;
    uint64_t v96 = v24;
    id v27 = objc_msgSend(v96, sel_identifier);
    sub_240951A78();

    sub_240951A48();
    (*(void (**)(char *, uint64_t))(v97 + 8))(v13, v98);
    sub_2409548A8();
    swift_bridgeObjectRelease();
    sub_2409548A8();

    uint64_t v14 = v99;
    unint64_t v26 = *((void *)&v109 + 1);
    unint64_t v28 = v109;
  }
  else
  {
    unint64_t v28 = 0xD000000000000013;
  }
  *(void *)&long long v109 = v28;
  *((void *)&v109 + 1) = v26;
  sub_2409548A8();

  swift_bridgeObjectRelease();
  long long v29 = v109;
  unint64_t v102 = *(void *)(v102 + 8);
  ((void (*)(char *, uint64_t))v102)(v21, v14);
  uint64_t v100 = (void *)type metadata accessor for FeedItemContextChangeGenerator();
  uint64_t inited = swift_initStackObject();
  uint64_t v92 = (void *)(inited + 16);
  sub_24083AB20(v110, inited + 16);
  *(_OWORD *)(inited + 56) = v29;
  uint64_t v96 = (uint64_t *)inited;
  sub_240951F38();
  v103(v101, *MEMORY[0x263F45E80], v14);
  id v31 = (void *)sub_240951F68();
  uint64_t v32 = (void *)sub_240951C68();
  id v33 = (void *)sub_240952588();
  if (v32)
  {
    *(void *)&long long v108 = 0x656C69666F72505BLL;
    *((void *)&v108 + 1) = 0xE90000000000003ALL;
    uint64_t v89 = v33;
    id v34 = v32;
    id v35 = objc_msgSend(v34, sel_identifier);
    uint64_t v36 = v95;
    sub_240951A78();

    sub_240951A48();
    (*(void (**)(char *, uint64_t))(v97 + 8))(v36, v98);
    sub_2409548A8();
    swift_bridgeObjectRelease();
    sub_2409548A8();

    uint64_t v14 = v99;
    id v38 = (void *)*((void *)&v108 + 1);
    unint64_t v37 = v108;
  }
  else
  {
    unint64_t v37 = 0xD000000000000013;
    id v38 = v89;
  }
  *(void *)&long long v108 = v37;
  *((void *)&v108 + 1) = v38;
  sub_2409548A8();

  swift_bridgeObjectRelease();
  long long v39 = v108;
  ((void (*)(char *, uint64_t))v102)(v101, v14);
  uint64_t v40 = swift_initStackObject();
  uint64_t v89 = (void *)(v40 + 16);
  sub_24083AB20(&v109, v40 + 16);
  *(_OWORD *)(v40 + 56) = v39;
  id v101 = (char *)v40;
  sub_240951F38();
  v103(v105, *MEMORY[0x263F45EC0], v14);
  id v41 = (void *)sub_240951F68();
  uint64_t v42 = (void *)sub_240951C68();
  uint64_t v43 = sub_240952588();
  if (v42)
  {
    uint64_t v106 = 0x656C69666F72505BLL;
    unint64_t v107 = 0xE90000000000003ALL;
    uint64_t v104 = (void *)v43;
    id v44 = v42;
    id v45 = objc_msgSend(v44, sel_identifier);
    char v46 = v95;
    sub_240951A78();

    sub_240951A48();
    (*(void (**)(char *, uint64_t))(v97 + 8))(v46, v98);
    sub_2409548A8();
    swift_bridgeObjectRelease();
    sub_2409548A8();

    uint64_t v14 = v99;
    unint64_t v47 = v106;
    unint64_t v48 = v107;
  }
  else
  {
    unint64_t v48 = v90 | 0x8000000000000000;
    unint64_t v47 = 0xD000000000000013;
  }
  uint64_t v106 = v47;
  unint64_t v107 = v48;
  sub_2409548A8();

  swift_bridgeObjectRelease();
  unint64_t v49 = (void (*)(char *, uint64_t, uint64_t))v106;
  unint64_t v50 = v107;
  ((void (*)(char *, uint64_t))v102)(v105, v14);
  uint64_t v51 = (void *)swift_initStackObject();
  uint64_t v100 = v51 + 2;
  sub_24083AB20(&v108, (uint64_t)(v51 + 2));
  unint64_t v102 = v50;
  uint64_t v103 = v49;
  v51[7] = v49;
  v51[8] = v50;
  uint64_t v52 = v96;
  uint64_t v53 = v96[5];
  uint64_t v105 = (char *)v96[6];
  uint64_t v54 = v92;
  uint64_t v104 = sub_2408304E8(v92, v53);
  sub_2408304E8(v54, v52[5]);
  uint64_t v55 = (void *)sub_240951EE8();
  sub_240951ED8();

  uint64_t v56 = v94;
  uint64_t v57 = sub_2409549C8();
  if (v56)
  {
    swift_release();
    swift_release();
LABEL_15:
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v98 = v57;
  uint64_t v105 = (char *)v51;
  swift_bridgeObjectRelease();
  id v58 = v101;
  uint64_t v60 = *((void *)v101 + 5);
  uint64_t v59 = *((void *)v101 + 6);
  uint64_t v104 = 0;
  uint64_t v99 = v59;
  id v61 = v89;
  sub_2408304E8(v89, v60);
  sub_2408304E8(v61, *((void *)v58 + 5));
  uint64_t v62 = (void *)sub_240951EE8();
  sub_240951ED8();

  uint64_t v63 = v104;
  uint64_t v64 = sub_2409549C8();
  if (v63)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    goto LABEL_15;
  }
  uint64_t v65 = v64;
  swift_bridgeObjectRelease();
  uint64_t v106 = v98;
  sub_2408FF258(v65);
  uint64_t v104 = (void *)v106;
  uint64_t v66 = v105;
  uint64_t v67 = v100;
  sub_2408304E8(v100, *((void *)v105 + 5));
  sub_2408304E8(v67, *((void *)v66 + 5));
  id v68 = (void *)sub_240951EE8();
  sub_240951ED8();

  uint64_t v69 = sub_2409549C8();
  swift_bridgeObjectRelease();
  uint64_t v106 = (uint64_t)v104;
  sub_2408FF258(v69);
  uint64_t v70 = (void *)v106;
  uint64_t v71 = (void *)sub_240951F68();
  uint64_t v72 = v87;
  sub_2408D2034(v86, v71, v87);

  uint64_t v74 = v83;
  uint64_t v73 = v84;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48))(v72, 1, v84) == 1)
  {
    swift_release();
    swift_release();
    swift_release();
    sub_24081B574(v72, &qword_26AFCD968, MEMORY[0x263F455C8]);
  }
  else
  {
    unint64_t v75 = v82;
    (*(void (**)(char *, uint64_t, uint64_t))(v74 + 32))(v82, v72, v73);
    sub_24082EC24(0, &qword_26AFCDFA8, MEMORY[0x263F455C8], MEMORY[0x263F8E0F8]);
    unint64_t v76 = (*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
    uint64_t v77 = swift_allocObject();
    *(_OWORD *)(v77 + 16) = xmmword_240956800;
    (*(void (**)(unint64_t, char *, uint64_t))(v74 + 16))(v77 + v76, v75, v73);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v70 = sub_2408C3274(0, v70[2] + 1, 1, v70);
    }
    unint64_t v79 = v70[2];
    unint64_t v78 = v70[3];
    if (v79 >= v78 >> 1) {
      uint64_t v70 = sub_2408C3274((void *)(v78 > 1), v79 + 1, 1, v70);
    }
    v70[2] = v79 + 1;
    uint64_t v80 = &v70[5 * v79];
    v80[4] = v77;
    v80[5] = 0;
    v80[6] = 0;
    v80[7] = 0;
    *((unsigned char *)v80 + 64) = 64;
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v73);
  }
  *uint64_t v85 = v70;
}

void sub_2408D2034(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v31 = type metadata accessor for UDCSnippetGeneratorData(0);
  MEMORY[0x270FA5388](v31);
  uint64_t v32 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2409525A8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_240951A98();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    goto LABEL_6;
  }
  uint64_t v30 = a3;
  id v15 = a1;
  id v29 = a2;
  uint64_t v16 = (void *)sub_240951C68();
  if (!v16)
  {

    a3 = v30;
LABEL_6:
    uint64_t v25 = sub_240951C58();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(a3, 1, 1, v25);
    return;
  }
  uint64_t v17 = v16;
  id v18 = objc_msgSend(v16, sel_identifier);

  sub_240951A78();
  uint64_t v19 = sub_240951A48();
  uint64_t v21 = v20;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v33 = v19;
  uint64_t v34 = v21;
  sub_2409548A8();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F45EA8], v7);
  sub_240952598();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_2409548A8();
  swift_bridgeObjectRelease();
  sub_24083EDCC(0, (unint64_t *)&qword_26AFD0590);
  id v22 = v15;
  uint64_t v23 = (uint64_t)v32;
  sub_240954688();
  sub_240951A18();
  sub_2409517C8();
  swift_allocObject();
  sub_2409517B8();
  sub_2408397B4(&qword_26AFCCD98, (void (*)(uint64_t))type metadata accessor for UDCSnippetGeneratorData);
  uint64_t v24 = v35;
  sub_2409517A8();
  uint64_t v35 = v24;
  if (v24)
  {
    sub_24083B0B4(v23, type metadata accessor for UDCSnippetGeneratorData);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_release();
    id v26 = v29;
    uint64_t v27 = v30;
    sub_240951C38();

    sub_24083B0B4(v23, type metadata accessor for UDCSnippetGeneratorData);
    uint64_t v28 = sub_240951C58();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 0, 1, v28);
  }
}

uint64_t sub_2408D247C(uint64_t a1, uint64_t a2, unsigned char *a3, unint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t *a8)
{
  unint64_t v76 = a8;
  uint64_t v88 = a7;
  uint64_t v89 = a6;
  unint64_t v78 = a4;
  uint64_t v79 = a5;
  uint64_t v85 = a3;
  uint64_t v86 = a2;
  uint64_t v90 = a1;
  sub_24082EC24(0, &qword_26AFD03B8, MEMORY[0x263F45630], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v80 = (uint64_t)&v71 - v9;
  uint64_t v10 = sub_240951E78();
  uint64_t v83 = *(void *)(v10 - 8);
  uint64_t v84 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v81 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  id v82 = (char *)&v71 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v87 = (char *)&v71 - v15;
  sub_24081C07C(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40, 0x263F0A4E8, MEMORY[0x263F08F88]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v77 = (char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  id v22 = (char *)&v71 - v21;
  sub_2408D48D4(0);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v25 = (char *)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408D4908();
  uint64_t v27 = v26;
  uint64_t v28 = *(void *)(v26 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  uint64_t v31 = (char *)&v71 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x270FA5388](v29);
  uint64_t v34 = (char *)&v71 - v33;
  MEMORY[0x270FA5388](v32);
  uint64_t v36 = (char *)&v71 - v35;
  sub_24083D478(v90, (uint64_t)v25, (uint64_t (*)(void))sub_2408D48D4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v25, 1, v27) == 1) {
    return sub_24083B0B4((uint64_t)v25, (uint64_t (*)(void))sub_2408D48D4);
  }
  uint64_t v38 = *(int *)(v27 + 48);
  sub_2408244C8((uint64_t)v25, (uint64_t)v36, (uint64_t (*)(void))type metadata accessor for UserDomainConceptFeedItemData);
  uint64_t v39 = *(void *)&v25[v38];
  uint64_t v90 = v38;
  *(void *)&v36[v38] = v39;
  uint64_t v40 = *(int *)(v27 + 48);
  sub_24083D478((uint64_t)v36, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for UserDomainConceptFeedItemData);
  *(void *)&v34[v40] = v39;
  uint64_t v41 = type metadata accessor for UserDomainConceptFeedItemData();
  uint64_t v42 = &v34[*(int *)(v41 + 20)];
  uint64_t v74 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  uint64_t v75 = v18 + 16;
  v74(v22, v42, v17);
  sub_24083B0B4((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for UserDomainConceptFeedItemData);
  uint64_t v43 = (void *)sub_240954658();
  uint64_t v73 = *(void (**)(char *, uint64_t))(v18 + 8);
  v73(v22, v17);
  unsigned __int8 v44 = objc_msgSend(v43, sel_isLowUtility);

  uint64_t v45 = v17;
  if (v44 & 1) != 0 || (sub_24083EDCC(0, &qword_26AFCDEF0), (sub_240954C58())) {
    *(unsigned char *)uint64_t v86 = 1;
  }
  uint64_t v46 = *(int *)(v27 + 48);
  sub_24083D478((uint64_t)v36, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for UserDomainConceptFeedItemData);
  *(void *)&v31[v46] = *(void *)&v36[v90];
  sub_2408397B4(&qword_268C91518, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  sub_2408397B4(&qword_268C91520, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  uint64_t v86 = v41;
  LOBYTE(v46) = sub_240953418();
  sub_24083B0B4((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for UserDomainConceptFeedItemData);
  uint64_t v47 = v89;
  uint64_t v48 = (uint64_t)v87;
  if (v46) {
    *uint64_t v85 = 1;
  }
  unint64_t v49 = (void *)sub_240951F68();
  uint64_t v50 = v91;
  sub_2408D2D4C((uint64_t)v36, v47, v49, v48);

  if (!v50)
  {
    uint64_t v51 = v78;
    unint64_t v52 = *v78;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v51 = v52;
    uint64_t v91 = 0;
    uint64_t v72 = v45;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v52 = sub_2408C3044(0, *(void *)(v52 + 16) + 1, 1, v52);
      *uint64_t v51 = v52;
    }
    unint64_t v55 = *(void *)(v52 + 16);
    unint64_t v54 = *(void *)(v52 + 24);
    if (v55 >= v54 >> 1)
    {
      unint64_t v52 = sub_2408C3044(v54 > 1, v55 + 1, 1, v52);
      *uint64_t v51 = v52;
    }
    *(void *)(v52 + 16) = v55 + 1;
    uint64_t v56 = v83;
    uint64_t v85 = (unsigned char *)((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80));
    unint64_t v78 = *(unint64_t **)(v83 + 72);
    uint64_t v57 = v48;
    uint64_t v58 = v84;
    uint64_t v87 = *(char **)(v83 + 32);
    ((void (*)(unsigned char *, uint64_t, uint64_t))v87)(&v85[v52 + (void)v78 * v55], v57, v84);
    uint64_t v59 = *(int *)(v27 + 48);
    sub_24083D478((uint64_t)v36, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for UserDomainConceptFeedItemData);
    uint64_t v60 = v90;
    *(void *)&v31[v59] = *(void *)&v36[v90];
    id v61 = v77;
    uint64_t v62 = v72;
    v74(v77, &v31[*(int *)(v86 + 20)], v72);
    sub_24083B0B4((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for UserDomainConceptFeedItemData);
    uint64_t v63 = (void *)sub_240954658();
    v73(v61, v62);
    uint64_t v64 = v80;
    sub_2408D7E14(v63, *(void *)&v36[v60], v88, v89, v80);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v64, 1, v58) == 1)
    {

      sub_24081B574(v64, &qword_26AFD03B8, MEMORY[0x263F45630]);
    }
    else
    {
      uint64_t v65 = v82;
      ((void (*)(char *, uint64_t, uint64_t))v87)(v82, v64, v58);
      (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v81, v65, v58);
      uint64_t v66 = v76;
      unint64_t v67 = *v76;
      char v68 = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v66 = v67;
      if ((v68 & 1) == 0)
      {
        unint64_t v67 = sub_2408C3044(0, *(void *)(v67 + 16) + 1, 1, v67);
        *uint64_t v66 = v67;
      }
      unint64_t v70 = *(void *)(v67 + 16);
      unint64_t v69 = *(void *)(v67 + 24);
      if (v70 >= v69 >> 1)
      {
        unint64_t v67 = sub_2408C3044(v69 > 1, v70 + 1, 1, v67);
        *uint64_t v66 = v67;
      }
      *(void *)(v67 + 16) = v70 + 1;
      ((void (*)(unsigned char *, char *, uint64_t))v87)(&v85[v67 + v70 * (void)v78], v81, v58);

      (*(void (**)(char *, uint64_t))(v56 + 8))(v82, v58);
    }
  }
  return sub_24083B0B4((uint64_t)v36, (uint64_t (*)(void))sub_2408D4908);
}

uint64_t sub_2408D2D4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v59 = a2;
  uint64_t v55 = a4;
  uint64_t v6 = sub_240951838();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v47 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_240951A28();
  uint64_t v56 = *(void *)(v8 - 8);
  uint64_t v57 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v46 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v45 = (char *)&v44 - v11;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24082EC24(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v54 = (uint64_t)&v44 - v14;
  sub_24082EC24(0, &qword_268C90A48, MEMORY[0x263F45770], v12);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v53 = (char *)&v44 - v16;
  uint64_t v51 = sub_240951C08();
  uint64_t v49 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v50 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_2409525A8();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = (uint64_t (*)(uint64_t))MEMORY[0x263F07508];
  sub_24082EC24(0, &qword_26AFCE2A0, MEMORY[0x263F07508], v12);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v24 = (char *)&v44 - v23;
  uint64_t v25 = type metadata accessor for UserDomainConceptFeedItemData();
  sub_24081C07C(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40, 0x263F0A4E8, MEMORY[0x263F08F88]);
  uint64_t v26 = (void *)sub_240954658();
  id v27 = objc_msgSend(v26, sel_UUID);

  sub_240951A78();
  uint64_t v28 = sub_240951A98();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v24, 0, 1, v28);
  (*(void (**)(char *, void, uint64_t))(v19 + 104))(v21, *MEMORY[0x263F45EA8], v18);
  uint64_t v29 = a1 + *(int *)(v25 + 48);
  id v52 = a3;
  uint64_t v48 = sub_2409534E8();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  sub_24081B574((uint64_t)v24, &qword_26AFCE2A0, v58);
  sub_2408397B4(&qword_268C91528, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  uint64_t v30 = v61;
  sub_2409517A8();
  if (v30) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v59 = v29;
  type metadata accessor for ConceptLatestValueFeedItemViewController();
  (*(void (**)(char *, void, uint64_t))(v49 + 104))(v50, *MEMORY[0x263F45520], v51);
  uint64_t v61 = v25;
  id v32 = v52;
  uint64_t v33 = v61;
  sub_240951CC8();
  uint64_t v34 = v54;
  sub_24081B768(a1 + *(int *)(v33 + 28), v54, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
  uint64_t v36 = v56;
  uint64_t v35 = v57;
  int v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v34, 1, v57);
  uint64_t v38 = v53;
  if (v37 == 1)
  {
    uint64_t v39 = sub_240952208();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 1, 1, v39);
  }
  else
  {
    uint64_t v40 = v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v45, v34, v35);
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v46, v40, v35);
    sub_240951828();
    sub_2409521E8();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v40, v35);
    uint64_t v41 = sub_240952208();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v38, 0, 1, v41);
  }
  sub_240951DD8();
  swift_bridgeObjectRetain();
  sub_240951D78();
  sub_240951DC8();
  uint64_t v42 = sub_2408D5564();
  uint64_t v43 = (uint64_t (*)(char *, void))sub_240951E38();
  sub_24089E058(v42);
  uint64_t result = v43(v60, 0);
  if ((*(unsigned char *)(v59 + 8) & 1) == 0) {
    return sub_240951E58();
  }
  return result;
}

uint64_t sub_2408D34D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240951C08();
  uint64_t v21 = *(void *)(v4 - 8);
  uint64_t v22 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for NavigationFeedItemData();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_240952778();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, a1, v10);
  uint64_t v11 = &v9[*(int *)(v7 + 20)];
  uint64_t v12 = sub_2409528B8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v11, a2, v12);
  uint64_t v13 = (void *)sub_240951F68();
  uint64_t v23 = a1;
  uint64_t v20 = sub_240953368();

  sub_2408397B4(&qword_268C91510, (void (*)(uint64_t))type metadata accessor for NavigationFeedItemData);
  uint64_t v14 = v25[3];
  sub_2409517A8();
  if (v14)
  {
    sub_24083B0B4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for NavigationFeedItemData);
    return swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for NavigationFeedItemViewController();
    (*(void (**)(char *, void, uint64_t))(v21 + 104))(v6, *MEMORY[0x263F454C8], v22);
    sub_240951F68();
    sub_240951CC8();
    sub_240951D78();
    sub_240952768();
    sub_240951E58();
    uint64_t v16 = sub_2409520C8();
    uint64_t v18 = v17;
    uint64_t v19 = (void (*)(unsigned char *, void))sub_240951E38();
    sub_240940118(v25, v16, v18);
    swift_bridgeObjectRelease();
    v19(v24, 0);
    return sub_24083B0B4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for NavigationFeedItemData);
  }
}

uint64_t sub_2408D3814(void *a1)
{
  sub_24083F564(0, &qword_26AFCDF98, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v9[-v6];
  sub_2408304E8(a1, a1[3]);
  sub_240849564();
  sub_240955778();
  v9[15] = 0;
  sub_24081C07C(0, &qword_26AFCE248, (unint64_t *)&qword_26AFD0590, 0x263F0A670, MEMORY[0x263F08F88]);
  sub_240840808(&qword_26AFCE238);
  sub_240955598();
  if (!v1)
  {
    type metadata accessor for UDCSnippetGeneratorData(0);
    v9[14] = 1;
    sub_240951A28();
    sub_2408397B4(&qword_26AFCC680, MEMORY[0x263F07490]);
    sub_240955598();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2408D3A40(uint64_t a1)
{
  unint64_t v2 = sub_240849564();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2408D3A7C(uint64_t a1)
{
  unint64_t v2 = sub_240849564();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2408D3AB8(void *a1)
{
  return sub_2408D3814(a1);
}

unint64_t sub_2408D3AD0(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240951A98();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = sub_240955158();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      id v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_2408397B4(&qword_26AFCC5F0, MEMORY[0x263F07508]);
        uint64_t v17 = sub_2409546F8();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            uint64_t v23 = (void *)(v22 + 8 * a1);
            uint64_t v24 = (void *)(v22 + 8 * v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              *uint64_t v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *uint64_t v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void *sub_2408D3DC8(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v47 = *v2;
  uint64_t v46 = sub_240951EF8();
  uint64_t v44 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v43 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_240951F18();
  uint64_t v42 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v41 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t v8 = MEMORY[0x270FA5388](v40);
  unint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v34 - v11;
  uint64_t v13 = sub_2409540C8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  int64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954058();
  sub_24083D478(a1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  uint64_t v17 = sub_2409540B8();
  os_log_type_t v18 = sub_240954C38();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v38 = a1;
    uint64_t v20 = v19;
    uint64_t v35 = swift_slowAlloc();
    uint64_t v49 = v35;
    *(_DWORD *)uint64_t v20 = 136446466;
    uint64_t v36 = v13;
    uint64_t v48 = type metadata accessor for UDCSnippetGenerator(0);
    sub_2408D43EC(0);
    int v37 = a2;
    uint64_t v21 = sub_2409547E8();
    uint64_t v39 = v3;
    uint64_t v48 = sub_2408370E4(v21, v22, &v49);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2082;
    sub_24083D478((uint64_t)v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
    uint64_t v23 = sub_2409547E8();
    uint64_t v48 = sub_2408370E4(v23, v24, &v49);
    a2 = v37;
    sub_2409550B8();
    uint64_t v3 = v39;
    swift_bridgeObjectRelease();
    sub_24083B0B4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
    _os_log_impl(&dword_240818000, v17, v18, "Init %{public}s for context %{public}s", (uint8_t *)v20, 0x16u);
    uint64_t v25 = v35;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v25, -1, -1);
    uint64_t v26 = v20;
    a1 = v38;
    MEMORY[0x2456021C0](v26, -1, -1);

    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v36);
  }
  else
  {
    sub_24083B0B4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);

    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  sub_24083D478(a1, (uint64_t)v3 + OBJC_IVAR____TtC13HealthRecords19UDCSnippetGenerator_context, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  sub_240951F68();
  sub_24082EC24(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v27 = sub_240951C08();
  uint64_t v28 = *(void *)(v27 - 8);
  unint64_t v29 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_240956800;
  (*(void (**)(unint64_t, void, uint64_t))(v28 + 104))(v30 + v29, *MEMORY[0x263F45520], v27);
  (*(void (**)(char *, void, uint64_t))(v44 + 104))(v43, *MEMORY[0x263F45688], v46);
  unint64_t v31 = v41;
  sub_240951F08();
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))((uint64_t)v3 + OBJC_IVAR____TtC13HealthRecords19UDCSnippetGenerator_domain, v31, v45);
  uint64_t v32 = sub_2408CCEE8(a1, a2);
  sub_24083B0B4(a1, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  v3[2] = v32;
  return v3;
}

uint64_t sub_2408D43EC(uint64_t a1)
{
  return sub_2408D54F0(a1, &qword_26AFCCC68, (void (*)(uint64_t))type metadata accessor for UDCSnippetGenerator);
}

void sub_2408D440C()
{
  if (!qword_26AFCF038)
  {
    sub_240841DD4();
    sub_2408397B4(&qword_26AFCF2A8, (void (*)(uint64_t))sub_240841DD4);
    unint64_t v0 = sub_240954208();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF038);
    }
  }
}

void sub_2408D44A0()
{
  if (!qword_26AFCEE98)
  {
    sub_2408D440C();
    sub_2408397B4(&qword_26AFCF030, (void (*)(uint64_t))sub_2408D440C);
    unint64_t v0 = sub_240954188();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCEE98);
    }
  }
}

void sub_2408D4534()
{
  if (!qword_26AFCEF58)
  {
    sub_2408D44A0();
    sub_24081C07C(255, &qword_26AFCDEB8, &qword_26AFCDF40, 0x263F0A4E8, MEMORY[0x263F8D488]);
    sub_2408397B4(&qword_26AFCEE90, (void (*)(uint64_t))sub_2408D44A0);
    unint64_t v0 = sub_2409541C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCEF58);
    }
  }
}

void sub_2408D460C()
{
  if (!qword_26AFCF210)
  {
    sub_2408422B8();
    sub_2408D46F8();
    sub_2408397B4(&qword_26AFCDBB8, (void (*)(uint64_t))sub_2408422B8);
    sub_2408397B4(&qword_26AFCEEC0, (void (*)(uint64_t))sub_2408D46F8);
    unint64_t v0 = sub_240954278();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF210);
    }
  }
}

void sub_2408D46F8()
{
  if (!qword_26AFCEEC8)
  {
    sub_2408D4534();
    sub_24083F3C0();
    sub_2408397B4(&qword_26AFCEF50, (void (*)(uint64_t))sub_2408D4534);
    unint64_t v0 = sub_2409541A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCEEC8);
    }
  }
}

void sub_2408D47B4()
{
  if (!qword_26AFCF150)
  {
    sub_2408D48A0(255);
    sub_2408D460C();
    sub_2408397B4(&qword_26AFCDC30, sub_2408D48A0);
    sub_2408397B4(&qword_26AFCF208, (void (*)(uint64_t))sub_2408D460C);
    unint64_t v0 = sub_240954278();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF150);
    }
  }
}

void sub_2408D48A0(uint64_t a1)
{
}

void sub_2408D48D4(uint64_t a1)
{
}

void sub_2408D4908()
{
  if (!qword_26AFCD538)
  {
    type metadata accessor for UserDomainConceptFeedItemData();
    sub_24081C07C(255, &qword_26AFCDEA8, &qword_26AFCDF18, 0x263F0A320, MEMORY[0x263F8D488]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AFCD538);
    }
  }
}

void sub_2408D49A8()
{
  if (!qword_26AFCF130)
  {
    sub_2408D47B4();
    sub_2408397B4(&qword_26AFCF148, (void (*)(uint64_t))sub_2408D47B4);
    unint64_t v0 = sub_240954268();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF130);
    }
  }
}

void sub_2408D4A3C()
{
  if (!qword_26AFCF0E8)
  {
    sub_2408D49A8();
    sub_2408D4AE8();
    sub_2408397B4(&qword_26AFCF128, (void (*)(uint64_t))sub_2408D49A8);
    unint64_t v0 = sub_240954258();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF0E8);
    }
  }
}

void sub_2408D4AE8()
{
  if (!qword_26AFCDE60)
  {
    MEMORY[0x270FA5388](0);
    sub_24082EC24(255, &qword_26AFCC600, MEMORY[0x263F45630], MEMORY[0x263F8D488]);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_26AFCDE60);
    }
  }
}

void sub_2408D4C10()
{
  if (!qword_26AFCEFE8)
  {
    sub_2408D4A3C();
    sub_2408D4CFC(255);
    sub_2408397B4(&qword_26AFCF0E0, (void (*)(uint64_t))sub_2408D4A3C);
    sub_2408397B4(&qword_26AFCDC70, sub_2408D4CFC);
    unint64_t v0 = sub_2409541F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCEFE8);
    }
  }
}

void sub_2408D4CFC(uint64_t a1)
{
}

void sub_2408D4D30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = sub_24083F3C0();
    unint64_t v9 = a4(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_2408D4DAC()
{
  if (!qword_26AFCF0D8)
  {
    sub_2408D4C10();
    sub_24083FEFC(255, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
    sub_2408397B4(&qword_26AFCEFE0, (void (*)(uint64_t))sub_2408D4C10);
    unint64_t v0 = sub_240954258();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF0D8);
    }
  }
}

void sub_2408D4E7C()
{
  if (!qword_26AFCF028)
  {
    sub_2408D4DAC();
    sub_2408418D4();
    sub_2408397B4(&qword_26AFCF0D0, (void (*)(uint64_t))sub_2408D4DAC);
    sub_2408397B4(&qword_26AFCDCC0, (void (*)(uint64_t))sub_2408418D4);
    unint64_t v0 = sub_2409541F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF028);
    }
  }
}

void sub_2408D4F68()
{
  if (!qword_26AFCEE48)
  {
    sub_2408D4E7C();
    sub_2408397B4(&qword_26AFCF020, (void (*)(uint64_t))sub_2408D4E7C);
    unint64_t v0 = sub_240954178();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCEE48);
    }
  }
}

uint64_t sub_2408D4FFC()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2408D5034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2408CE404(a1, v2, a2);
}

uint64_t sub_2408D503C()
{
  uint64_t v1 = sub_240951FB8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_2408D5110@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_240951FB8() - 8);
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = (uint64_t)v2 + ((*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_2408CEE08(a1, v6, v7, v8, v9, a2);
}

uint64_t sub_2408D5198()
{
  uint64_t v1 = (int *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_release();

  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_2408D529C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v6 = *(void *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t result = sub_2408CF38C(*a1, v2 + v7, *(void *)(v2 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8)));
  if (!v3)
  {
    *a2 = result;
    a2[1] = v9;
    a2[2] = v10;
    a2[3] = v11;
  }
  return result;
}

uint64_t sub_2408D5354()
{
  uint64_t v1 = (int *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;

  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x270FA0238](v0, v4, v5);
}

void sub_2408D544C(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v6 = *(void *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  sub_2408CFF60(*a1, a1[1], a1[2], a1[3], *(void **)(v2 + 24), v2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)));
  if (!v3) {
    *a2 = v7;
  }
}

uint64_t sub_2408D54D8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2408D54E8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2408D0010(a1, a2);
}

uint64_t sub_2408D54F0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a2;
  if (!*a2)
  {
    a3(255);
    uint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_2408D5530(uint64_t a1)
{
}

uint64_t sub_2408D5564()
{
  uint64_t v20 = MEMORY[0x263F8EE88];
  uint64_t v0 = sub_2409520B8();
  sub_240940118(&v19, v0, v1);
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_240952048();
  sub_240940118(&v19, v2, v3);
  swift_bridgeObjectRelease();
  type metadata accessor for UserDomainConceptFeedItemData();
  sub_24081C07C(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40, 0x263F0A4E8, MEMORY[0x263F08F88]);
  uint64_t v4 = (void *)sub_240954658();
  unsigned __int8 v5 = objc_msgSend(v4, sel_isLowUtility);

  if (v5 & 1) != 0 || (sub_24083EDCC(0, &qword_26AFCDEF0), (sub_240954C58()))
  {
    uint64_t v6 = sub_240952108();
    sub_240940118(&v19, v6, v7);
    swift_bridgeObjectRelease();
  }
  sub_2408397B4(&qword_268C91518, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  sub_2408397B4(&qword_268C91520, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  if (sub_240953418())
  {
    uint64_t v8 = sub_2409520F8();
    sub_240940118(&v19, v8, v9);
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = v20;
  sub_24083FEFC(0, (unint64_t *)&qword_26AFD0670, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2409562B0;
  swift_bridgeObjectRetain();
  *(void *)(inited + 32) = sub_240952108();
  *(void *)(inited + 40) = v12;
  *(void *)(inited + 48) = sub_2409520F8();
  *(void *)(inited + 56) = v13;
  uint64_t v14 = sub_24093D478(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  char v15 = sub_2408D0448(v14, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15)
  {
    uint64_t v16 = sub_240952118();
    sub_240940118(&v19, v16, v17);
    swift_bridgeObjectRelease();
  }
  return v20;
}

void sub_2408D5828(uint64_t a1)
{
}

void sub_2408D585C()
{
  if (!qword_268C91540)
  {
    sub_2408D5908();
    sub_2408D48D4(255);
    sub_2408397B4(&qword_26AFCDD20, (void (*)(uint64_t))sub_2408D5908);
    unint64_t v0 = sub_2409541C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C91540);
    }
  }
}

void sub_2408D5908()
{
  if (!qword_26AFCDD28)
  {
    sub_24081C07C(255, &qword_26AFCDEA8, &qword_26AFCDF18, 0x263F0A320, MEMORY[0x263F8D488]);
    sub_24083F3C0();
    unint64_t v0 = sub_240954308();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDD28);
    }
  }
}

uint64_t sub_2408D59A4()
{
  uint64_t v1 = sub_240951FB8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

void sub_2408D5A78(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_240951FB8() - 8);
  uint64_t v6 = *(void **)(v2 + 24);
  uint64_t v7 = *(void *)(v2 + 32);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_2408D0898(a1, v6, v7, v8, a2);
}

uint64_t sub_2408D5B00(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  sub_240954E58();
  uint64_t v2 = v1;
  if (v1)
  {
    sub_240952808();
    uint64_t v3 = (void *)sub_2409527D8();
    sub_240951F38();
    sub_2408304E8(v10, v10[3]);
    uint64_t v4 = (void *)sub_240951E98();
    uint64_t v5 = (void *)sub_2409527E8();

    sub_2408371B8((uint64_t)v10);
    id v6 = objc_msgSend(v5, sel_ucumDisplayConverter);
    uint64_t v7 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
    id v8 = objc_msgSend(v6, sel_synonymForUCUMUnitString_, v7);

    uint64_t v2 = sub_2409547C8();
  }
  return v2;
}

uint64_t sub_2408D5C38(id *a1, void *a2)
{
  uint64_t v3 = v2;
  id v23 = a2;
  uint64_t v5 = sub_240951A98();
  id v6 = *(void (***)(char *, uint64_t))(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v20 - v10;
  if (!((unint64_t)a1 >> 62))
  {
    uint64_t v12 = *(void *)(((unint64_t)a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v12) {
      goto LABEL_3;
    }
    return 0;
  }
LABEL_13:
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_2409553D8();
  swift_bridgeObjectRelease();
  if (!v12) {
    return 0;
  }
LABEL_3:
  v20[1] = v3;
  uint64_t v21 = a1;
  uint64_t v13 = 0;
  unint64_t v22 = (unint64_t)a1 & 0xC000000000000001;
  uint64_t v14 = v6 + 1;
  while (1)
  {
    char v15 = v22
        ? (void (**)(char *, uint64_t))MEMORY[0x2456015B0](v13, a1)
        : (void (**)(char *, uint64_t))a1[v13 + 4];
    id v6 = v15;
    id v16 = objc_msgSend(v15, sel_targetUUID);
    sub_240951A78();

    id v17 = objc_msgSend(v23, sel_UUID);
    sub_240951A78();

    uint64_t v3 = sub_240951A68();
    a1 = (id *)*v14;
    (*v14)(v9, v5);
    ((void (*)(char *, uint64_t))a1)(v11, v5);

    if (v3) {
      return v13;
    }
    uint64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v13;
    a1 = v21;
    if (v18 == v12) {
      return 0;
    }
  }
}

uint64_t *sub_2408D5E6C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_24081C07C(0, &qword_26AFCE248, (unint64_t *)&qword_26AFD0590, 0x263F0A670, MEMORY[0x263F08F88]);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_240951A28();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_2408D5FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24081C07C(0, &qword_26AFCE248, (unint64_t *)&qword_26AFD0590, 0x263F0A670, MEMORY[0x263F08F88]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_240951A28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_2408D6084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24081C07C(0, &qword_26AFCE248, (unint64_t *)&qword_26AFD0590, 0x263F0A670, MEMORY[0x263F08F88]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_240951A28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_2408D6168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24081C07C(0, &qword_26AFCE248, (unint64_t *)&qword_26AFD0590, 0x263F0A670, MEMORY[0x263F08F88]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_240951A28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_2408D624C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24081C07C(0, &qword_26AFCE248, (unint64_t *)&qword_26AFD0590, 0x263F0A670, MEMORY[0x263F08F88]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_240951A28();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_2408D6370(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_24081C07C(0, &qword_26AFCE248, (unint64_t *)&qword_26AFD0590, 0x263F0A670, MEMORY[0x263F08F88]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_240951A28();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_2408D64A0()
{
  sub_24081C07C(319, &qword_26AFCE248, (unint64_t *)&qword_26AFD0590, 0x263F0A670, MEMORY[0x263F08F88]);
  if (v0 <= 0x3F)
  {
    sub_240951A28();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

ValueMetadata *type metadata accessor for UDCSnippetGeneratorData.CodingKeys()
{
  return &type metadata for UDCSnippetGeneratorData.CodingKeys;
}

unint64_t sub_2408D65D0()
{
  unint64_t result = qword_268C91560;
  if (!qword_268C91560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_268C91560);
  }
  return result;
}

unint64_t sub_2408D6628()
{
  unint64_t result = qword_26AFCCD90;
  if (!qword_26AFCCD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCCD90);
  }
  return result;
}

unint64_t sub_2408D6680()
{
  unint64_t result = qword_26AFCCD88;
  if (!qword_26AFCCD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCCD88);
  }
  return result;
}

uint64_t sub_2408D66D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_24083F1F4;
  return sub_24082122C(a5);
}

uint64_t sub_2408D6770()
{
  uint64_t v34 = v0;
  uint64_t v2 = *(void **)(v0 + 344);
  unint64_t v1 = *(void **)(v0 + 352);
  uint64_t v3 = *(void *)(v0 + 264);
  uint64_t v4 = *(void *)(v0 + 248);
  swift_willThrow();

  sub_240954078();
  sub_24083B4E8(v4, v3);
  id v5 = v1;
  id v6 = v1;
  uint64_t v7 = sub_2409540B8();
  os_log_type_t v8 = sub_240954C18();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = *(void **)(v0 + 352);
    uint64_t v31 = *(void *)(v0 + 304);
    uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v0 + 336);
    unint64_t v29 = *(void **)(v0 + 328);
    uint64_t v30 = *(void *)(v0 + 288);
    uint64_t v27 = *(void *)(v0 + 264);
    os_log_type_t type = v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    v33[0] = v28;
    *(_DWORD *)uint64_t v10 = 136315650;
    uint64_t v11 = sub_2409557A8();
    *(void *)(v0 + 192) = sub_2408370E4(v11, v12, v33);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v13 = sub_240955688();
    *(void *)(v0 + 200) = sub_2408370E4(v13, v14, v33);
    sub_2409550B8();
    swift_bridgeObjectRelease();

    *(_WORD *)(v10 + 22) = 2080;
    uint64_t v15 = (void *)sub_240951F68();
    uint64_t v16 = sub_240951C78();
    unint64_t v18 = v17;

    *(void *)(v0 + 208) = sub_2408370E4(v16, v18, v33);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    sub_24083B3B4(v27);
    _os_log_impl(&dword_240818000, v7, type, "[%s] Marking universal shard as required failed with error: %s on profile: %s", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v28, -1, -1);
    MEMORY[0x2456021C0](v10, -1, -1);

    v32(v31, v30);
  }
  else
  {
    uint64_t v19 = *(void **)(v0 + 352);
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v0 + 336);
    uint64_t v21 = *(void *)(v0 + 304);
    uint64_t v22 = *(void *)(v0 + 288);
    uint64_t v23 = *(void *)(v0 + 264);

    sub_24083B3B4(v23);
    v20(v21, v22);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_2408D6AF0()
{
  return swift_deallocClassInstance();
}

uint64_t *sub_2408D6B00(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_240951FB8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    id v10 = v9;
  }
  return a1;
}

uint64_t sub_2408D6BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  return a1;
}

uint64_t sub_2408D6C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_2408D6CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  return a1;
}

uint64_t sub_2408D6D58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2408D6D6C);
}

uint64_t sub_2408D6D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240951FB8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_2408D6E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2408D6E40);
}

uint64_t sub_2408D6E40(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_240951FB8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_2408D6EFC()
{
  uint64_t result = sub_240951FB8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_2408D6F94(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HealthRecordsGeneratorContext();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(self, sel_sharedBehavior);
  if (!v5)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v6 = v5;
  id v7 = objc_msgSend(v5, sel_features);

  if (!v7)
  {
LABEL_8:
    __break(1u);
    return;
  }
  unsigned int v8 = objc_msgSend(v7, sel_stanley);

  if (v8)
  {
    uint64_t v9 = (void *)sub_240951F68();
    unint64_t v10 = (void *)sub_240951C98();
    char v11 = sub_240951C88();

    if (v11)
    {
      sub_24083AC38(0, &qword_26AFD05E8, MEMORY[0x263F8E0F8]);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_240956800;
      sub_24083B4E8(a1, (uint64_t)v4);
      uint64_t v13 = type metadata accessor for CategoryGeneratorPipeline(0);
      swift_allocObject();
      uint64_t v14 = sub_24083CA48((uint64_t)v4);
      *(void *)(v12 + 56) = v13;
      *(void *)(v12 + 64) = sub_24083ACA8(&qword_26AFD0008, (void (*)(uint64_t))type metadata accessor for CategoryGeneratorPipeline);
      *(void *)(v12 + 32) = v14;
    }
  }
}

void *sub_2408D7168(uint64_t a1)
{
  v34[53] = *MEMORY[0x263EF8340];
  uint64_t v2 = type metadata accessor for HealthRecordsGeneratorContext();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24083F4E0();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240959DA0;
  sub_24083B4E8(a1, (uint64_t)v4);
  uint64_t v6 = type metadata accessor for AccountStatusSummaryTileGeneratorPipeline();
  swift_allocObject();
  id v7 = sub_2408333E8((uint64_t)v4);
  *(void *)(inited + 56) = v6;
  *(void *)(inited + 64) = sub_24083ACA8(&qword_26AFCEA00, (void (*)(uint64_t))type metadata accessor for AccountStatusSummaryTileGeneratorPipeline);
  *(void *)(inited + 32) = v7;
  sub_24083B4E8(a1, (uint64_t)v4);
  uint64_t v8 = type metadata accessor for CategoryGeneratorPipeline(0);
  swift_allocObject();
  uint64_t v9 = sub_24083CA48((uint64_t)v4);
  *(void *)(inited + 96) = v8;
  *(void *)(inited + 104) = sub_24083ACA8(&qword_26AFD0008, (void (*)(uint64_t))type metadata accessor for CategoryGeneratorPipeline);
  *(void *)(inited + 72) = v9;
  sub_24083B4E8(a1, (uint64_t)v4);
  uint64_t v10 = type metadata accessor for RecordKindGeneratorPipeline();
  swift_allocObject();
  char v11 = sub_240835C50((uint64_t)v4);
  *(void *)(inited + 136) = v10;
  *(void *)(inited + 144) = sub_24083ACA8(&qword_26AFD0220, (void (*)(uint64_t))type metadata accessor for RecordKindGeneratorPipeline);
  *(void *)(inited + 112) = v11;
  sub_24083B4E8(a1, (uint64_t)v4);
  uint64_t v12 = type metadata accessor for UserDomainConceptPipeline();
  swift_allocObject();
  uint64_t v13 = sub_240837874((uint64_t)v4);
  *(void *)(inited + 176) = v12;
  *(void *)(inited + 184) = sub_24083ACA8(&qword_26AFCCFE0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptPipeline);
  *(void *)(inited + 152) = v13;
  sub_24083B4E8(a1, (uint64_t)v4);
  uint64_t v14 = type metadata accessor for OnboardingGeneratorPipeline();
  swift_allocObject();
  uint64_t v15 = sub_24082F890((uint64_t)v4);
  *(void *)(inited + 216) = v14;
  *(void *)(inited + 224) = sub_24083ACA8(&qword_26AFCD1B8, (void (*)(uint64_t))type metadata accessor for OnboardingGeneratorPipeline);
  *(void *)(inited + 192) = v15;
  sub_24083B4E8(a1, (uint64_t)v4);
  uint64_t v16 = type metadata accessor for LabTipsGeneratorPipeline();
  swift_allocObject();
  unint64_t v17 = sub_2408305BC((uint64_t)v4);
  *(void *)(inited + 256) = v16;
  *(void *)(inited + 264) = sub_24083ACA8(&qword_26AFCCE40, (void (*)(uint64_t))type metadata accessor for LabTipsGeneratorPipeline);
  *(void *)(inited + 232) = v17;
  sub_24083B4E8(a1, (uint64_t)v4);
  uint64_t v18 = type metadata accessor for RemovedCategoriesGeneratorPipeline();
  swift_allocObject();
  uint64_t v19 = sub_24082F0DC((uint64_t)v4);
  *(void *)(inited + 296) = v18;
  *(void *)(inited + 304) = sub_24083ACA8(&qword_26AFCD6F8, (void (*)(uint64_t))type metadata accessor for RemovedCategoriesGeneratorPipeline);
  *(void *)(inited + 272) = v19;
  uint64_t v30 = inited;
  uint64_t v20 = swift_initStackObject();
  *(_OWORD *)(v20 + 16) = xmmword_240956800;
  sub_24083B4E8(a1, (uint64_t)v4);
  uint64_t v21 = type metadata accessor for SharedConceptFeedItemPipeline();
  swift_allocObject();
  uint64_t v22 = sub_240832130((uint64_t)v4);
  *(void *)(v20 + 56) = v21;
  *(void *)(v20 + 64) = sub_24083ACA8(&qword_26AFCD458, (void (*)(uint64_t))type metadata accessor for SharedConceptFeedItemPipeline);
  *(void *)(v20 + 32) = v22;
  sub_24083B5CC(v20);
  uint64_t v23 = *(void *)(v30 + 16);
  if (v23)
  {
    uint64_t v24 = v30 + 32;
    swift_bridgeObjectRetain();
    uint64_t v25 = (void *)MEMORY[0x263F8EE78];
    do
    {
      sub_24083AB38(v24, (uint64_t)v34);
      sub_24083ABB8((uint64_t)v34, (uint64_t)&v31);
      if (v32)
      {
        sub_24083AB20(&v31, (uint64_t)v33);
        sub_24083AB20(v33, (uint64_t)&v31);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v25 = sub_24083AEB8(0, v25[2] + 1, 1, v25);
        }
        unint64_t v27 = v25[2];
        unint64_t v26 = v25[3];
        if (v27 >= v26 >> 1) {
          uint64_t v25 = sub_24083AEB8((void *)(v26 > 1), v27 + 1, 1, v25);
        }
        void v25[2] = v27 + 1;
        sub_24083AB20(&v31, (uint64_t)&v25[5 * v27 + 4]);
      }
      else
      {
        sub_2408D7D9C((uint64_t)&v31);
      }
      v24 += 40;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v25 = (void *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  return v25;
}

void *sub_2408D7730(uint64_t a1)
{
  v34[5] = *MEMORY[0x263EF8340];
  uint64_t v2 = type metadata accessor for HealthRecordsGeneratorContext();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = (void *)sub_240951F68();
  if (!v5) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v6 = v5;
  id v7 = objc_msgSend(v5, sel_type);
  if (v7 != (id)2)
  {
    if (v7 == (id)1)
    {
      sub_24083F4E0();
      uint64_t inited = swift_initStackObject();
      long long v27 = xmmword_240956800;
      *(_OWORD *)(inited + 16) = xmmword_240956800;
      sub_24083B4E8(a1, (uint64_t)v4);
      uint64_t v9 = type metadata accessor for CategoryGeneratorPipeline(0);
      swift_allocObject();
      uint64_t v10 = sub_24083CA48((uint64_t)v4);
      *(void *)(inited + 56) = v9;
      *(void *)(inited + 64) = sub_24083ACA8(&qword_26AFD0008, (void (*)(uint64_t))type metadata accessor for CategoryGeneratorPipeline);
      *(void *)(inited + 32) = v10;
      uint64_t v28 = inited;
      uint64_t v11 = swift_initStackObject();
      *(_OWORD *)(v11 + 16) = v27;
      sub_24083B4E8(a1, (uint64_t)v4);
      uint64_t v12 = type metadata accessor for SharedConceptFeedItemPipeline();
      swift_allocObject();
      uint64_t v13 = sub_240832130((uint64_t)v4);
      *(void *)(v11 + 56) = v12;
      *(void *)(v11 + 64) = sub_24083ACA8(&qword_26AFCD458, (void (*)(uint64_t))type metadata accessor for SharedConceptFeedItemPipeline);
      *(void *)(v11 + 32) = v13;
      sub_24083B5CC(v11);
      uint64_t v14 = swift_initStackObject();
      *(_OWORD *)(v14 + 16) = v27;
      sub_24083B4E8(a1, (uint64_t)v4);
      uint64_t v15 = type metadata accessor for ClinicalSharingGeneratorPipeline();
      swift_allocObject();
      uint64_t v16 = sub_240834AEC((uint64_t)v4);
      *(void *)(v14 + 56) = v15;
      *(void *)(v14 + 64) = sub_24083ACA8(&qword_26AFCE5B8, (void (*)(uint64_t))type metadata accessor for ClinicalSharingGeneratorPipeline);
      *(void *)(v14 + 32) = v16;
      sub_24083B5CC(v14);
      uint64_t v17 = *(void *)(v28 + 16);
      if (v17)
      {
        uint64_t v18 = v28 + 32;
        swift_bridgeObjectRetain();
        uint64_t v19 = (void *)MEMORY[0x263F8EE78];
        do
        {
          sub_24083AB38(v18, (uint64_t)v32);
          sub_24083ABB8((uint64_t)v32, (uint64_t)&v29);
          if (v30)
          {
            sub_24083AB20(&v29, (uint64_t)v31);
            sub_24083AB20(v31, (uint64_t)&v29);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v19 = sub_24083AEB8(0, v19[2] + 1, 1, v19);
            }
            unint64_t v21 = v19[2];
            unint64_t v20 = v19[3];
            if (v21 >= v20 >> 1) {
              uint64_t v19 = sub_24083AEB8((void *)(v20 > 1), v21 + 1, 1, v19);
            }
            void v19[2] = v21 + 1;
            sub_24083AB20(&v29, (uint64_t)&v19[5 * v21 + 4]);
          }
          else
          {
            sub_2408D7D9C((uint64_t)&v29);
          }
          v18 += 40;
          --v17;
        }
        while (v17);
        swift_bridgeObjectRelease();
      }
      else
      {

        uint64_t v19 = (void *)MEMORY[0x263F8EE78];
      }
      swift_bridgeObjectRelease();
      return v19;
    }

    return (void *)MEMORY[0x263F8EE78];
  }
  long long v33 = xmmword_240956800;
  sub_24083B4E8(a1, (uint64_t)v4);
  uint64_t v22 = type metadata accessor for SharedConceptFeedItemPipeline();
  swift_allocObject();
  uint64_t v23 = sub_240832130((uint64_t)v4);
  v34[3] = v22;
  void v34[4] = sub_24083ACA8(&qword_26AFCD458, (void (*)(uint64_t))type metadata accessor for SharedConceptFeedItemPipeline);
  v34[0] = v23;
  sub_24083AB38((uint64_t)v34, (uint64_t)v32);
  sub_24083ABB8((uint64_t)v32, (uint64_t)&v29);
  if (v30)
  {
    sub_24083AB20(&v29, (uint64_t)v31);
    sub_24083AB20(v31, (uint64_t)&v29);
    uint64_t v19 = (void *)MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v19 = sub_24083AEB8(0, v19[2] + 1, 1, v19);
    }
    unint64_t v25 = v19[2];
    unint64_t v24 = v19[3];
    if (v25 >= v24 >> 1) {
      uint64_t v19 = sub_24083AEB8((void *)(v24 > 1), v25 + 1, 1, v19);
    }
    void v19[2] = v25 + 1;
    sub_24083AB20(&v29, (uint64_t)&v19[5 * v25 + 4]);
  }
  else
  {
    sub_2408D7D9C((uint64_t)&v29);
    uint64_t v19 = (void *)MEMORY[0x263F8EE78];
  }

  sub_24083AC38(0, (unint64_t *)&qword_26AFD0638, MEMORY[0x263F8D8F0]);
  swift_arrayDestroy();
  return v19;
}

uint64_t sub_2408D7C9C()
{
  unint64_t v1 = (int *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_2408D7D9C(uint64_t a1)
{
  sub_24083AC38(0, (unint64_t *)&qword_26AFD0638, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2408D7E14@<X0>(void *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v104 = a4;
  uint64_t v106 = a3;
  sub_2408D96A0(0, &qword_26AFD03B8, MEMORY[0x263F45630]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v105 = &v96[-v9];
  uint64_t v10 = type metadata accessor for ConceptDeltaHighlightFeedItemData();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v103 = &v96[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_240951A98();
  uint64_t v108 = *(void *)(v12 - 8);
  uint64_t v109 = v12;
  MEMORY[0x270FA5388](v12);
  unint64_t v107 = &v96[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_2409540C8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v110 = v14;
  uint64_t v111 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = &v96[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  unint64_t v21 = &v96[-v20];
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  unint64_t v24 = &v96[-v23];
  MEMORY[0x270FA5388](v22);
  sub_2408D96A0(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
  uint64_t v26 = MEMORY[0x270FA5388](v25 - 8);
  uint64_t v28 = &v96[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = MEMORY[0x270FA5388](v26);
  long long v31 = &v96[-v30];
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_2409553D8();
    uint64_t result = swift_bridgeObjectRelease();
    if (v43 < 2) {
      goto LABEL_3;
    }
  }
  else if (*(uint64_t *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2)
  {
LABEL_3:
    sub_240954078();
    id v32 = a1;
    long long v33 = sub_2409540B8();
    os_log_type_t v34 = sub_240954C08();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v106 = swift_slowAlloc();
      v112[0] = v106;
      *(_DWORD *)uint64_t v35 = 136446210;
      uint64_t v105 = v35 + 4;
      id v36 = objc_msgSend(v32, sel_UUID);
      int v37 = v107;
      sub_240951A78();

      uint64_t v38 = sub_240951A48();
      uint64_t v39 = a5;
      unint64_t v41 = v40;
      (*(void (**)(unsigned char *, uint64_t))(v108 + 8))(v37, v109);
      uint64_t v113 = sub_2408370E4(v38, v41, v112);
      sub_2409550B8();

      a5 = v39;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240818000, v33, v34, "Too few records to generate delta highlight for concept: %{public}s", v35, 0xCu);
      uint64_t v42 = v106;
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v42, -1, -1);
      MEMORY[0x2456021C0](v35, -1, -1);
    }
    else
    {
    }
    (*(void (**)(unsigned char *, uint64_t))(v111 + 8))(v18, v110);
LABEL_30:
    uint64_t v86 = sub_240951E78();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(a5, 1, 1, v86);
  }
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v45 = (id)MEMORY[0x2456015B0](1, a2);
    id v46 = (id)MEMORY[0x2456015B0](0, a2);
  }
  else
  {
    if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
      __break(1u);
      return result;
    }
    uint64_t v44 = *(void **)(a2 + 32);
    id v45 = *(id *)(a2 + 40);
    id v46 = v44;
  }
  uint64_t v47 = v46;
  sub_2408D96F4(v45, v46);
  uint64_t v100 = v48;
  id v102 = v47;
  id v49 = objc_msgSend(v45, sel_meaningfulDate);
  if (v49)
  {
    uint64_t v50 = v49;
    sub_240951A08();

    uint64_t v51 = sub_240951A28();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v31, 0, 1, v51);
  }
  else
  {
    uint64_t v52 = sub_240951A28();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v31, 1, 1, v52);
  }
  id v53 = objc_msgSend(v102, sel_meaningfulDate);
  id v101 = v45;
  if (v53)
  {
    uint64_t v54 = v53;
    sub_240951A08();

    uint64_t v55 = sub_240951A28();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v28, 0, 1, v55);
  }
  else
  {
    uint64_t v56 = sub_240951A28();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v28, 1, 1, v56);
  }
  char v57 = sub_2408D9C30((uint64_t)v31, (uint64_t)v28, v100);
  uint64_t v58 = (void (*)(uint64_t))MEMORY[0x263F07490];
  sub_240849A64((uint64_t)v28, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
  sub_240849A64((uint64_t)v31, (unint64_t *)&qword_26AFCF7F8, v58);
  if (v57)
  {
    sub_240954078();
    id v59 = a1;
    uint64_t v60 = sub_2409540B8();
    os_log_type_t v61 = sub_240954C08();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v62 = (uint8_t *)swift_slowAlloc();
      uint64_t v106 = swift_slowAlloc();
      v112[0] = v106;
      *(_DWORD *)uint64_t v62 = 136446210;
      uint64_t v105 = v62 + 4;
      id v63 = objc_msgSend(v59, sel_UUID);
      uint64_t v64 = v107;
      sub_240951A78();

      uint64_t v65 = sub_240951A48();
      unint64_t v67 = v66;
      (*(void (**)(unsigned char *, uint64_t))(v108 + 8))(v64, v109);
      uint64_t v113 = sub_2408370E4(v65, v67, v112);
      sub_2409550B8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240818000, v60, v61, "Suppressing generation of delta highlight for concept: %{public}s", v62, 0xCu);
      uint64_t v68 = v106;
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v68, -1, -1);
      MEMORY[0x2456021C0](v62, -1, -1);
    }
    else
    {
    }
    (*(void (**)(unsigned char *, uint64_t))(v111 + 8))(v24, v110);
    goto LABEL_30;
  }
  sub_240952808();
  unint64_t v69 = (void *)sub_2409527D8();
  sub_240951F38();
  sub_2408304E8(v112, v112[3]);
  unint64_t v70 = (void *)sub_240951E98();
  id v71 = objc_msgSend(v70, sel_profileIdentifier);

  sub_240952788();
  sub_2408371B8((uint64_t)v112);
  int v72 = sub_240953F88();
  swift_release();
  int v99 = v72 ^ 1;
  sub_240954078();
  id v73 = a1;
  uint64_t v74 = sub_2409540B8();
  os_log_type_t v75 = sub_240954C08();
  int v76 = v75;
  if (os_log_type_enabled(v74, v75))
  {
    uint64_t v77 = swift_slowAlloc();
    uint64_t v98 = swift_slowAlloc();
    v112[0] = v98;
    *(_DWORD *)uint64_t v77 = 136446466;
    id v78 = objc_msgSend(v73, sel_UUID, v77 + 4);
    int v97 = v76;
    uint64_t v79 = v107;
    sub_240951A78();

    uint64_t v80 = sub_240951A48();
    unint64_t v82 = v81;
    (*(void (**)(unsigned char *, uint64_t))(v108 + 8))(v79, v109);
    uint64_t v113 = sub_2408370E4(v80, v82, v112);
    sub_2409550B8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v77 + 12) = 2082;
    if (v72) {
      uint64_t v83 = 0x65736C6166;
    }
    else {
      uint64_t v83 = 1702195828;
    }
    if (v72) {
      unint64_t v84 = 0xE500000000000000;
    }
    else {
      unint64_t v84 = 0xE400000000000000;
    }
    uint64_t v113 = sub_2408370E4(v83, v84, v112);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v74, (os_log_type_t)v97, "Generating delta highlight for concept: %{public}s, Hide in Discover: %{public}s", (uint8_t *)v77, 0x16u);
    uint64_t v85 = v98;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v85, -1, -1);
    MEMORY[0x2456021C0](v77, -1, -1);
  }
  else
  {
  }
  (*(void (**)(unsigned char *, uint64_t))(v111 + 8))(v21, v110);
  id v87 = v101;
  uint64_t v89 = v104;
  uint64_t v88 = (uint64_t)v105;
  uint64_t v90 = (uint64_t)v103;
  id v91 = v73;
  id v92 = v87;
  id v93 = v102;
  sub_24090248C(v91, v92, v93, v100, v99 & 1, v90);
  uint64_t v94 = (void *)sub_240951F68();
  sub_2408D8CC4(v90, v89, v94, v88);
  sub_2408DA060(v90);

  uint64_t v95 = sub_240951E78();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v95 - 8) + 56))(v88, 0, 1, v95);
  return sub_2408A6044(v88, a5);
}

uint64_t sub_2408D8CC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v94 = a2;
  id v93 = a3;
  uint64_t v89 = a4;
  uint64_t v5 = sub_240951838();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v88 = (char *)v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408D96A0(0, &qword_268C90A48, MEMORY[0x263F45770]);
  MEMORY[0x270FA5388](v7 - 8);
  id v78 = (char *)v76 - v8;
  uint64_t v9 = sub_240951A28();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v91 = v9;
  uint64_t v92 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v77 = (char *)v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v86 = (char *)v76 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v83 = (char *)v76 - v15;
  sub_2408D96A0(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v85 = (uint64_t)v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  id v87 = (char *)v76 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  unint64_t v84 = (char *)v76 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v90 = (uint64_t)v76 - v23;
  uint64_t v82 = sub_240951C08();
  uint64_t v80 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  unint64_t v81 = (char *)v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_2409525A8();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)v76 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v29 = (void (*)(uint64_t))MEMORY[0x263F07508];
  sub_2408D96A0(0, &qword_26AFCE2A0, MEMORY[0x263F07508]);
  MEMORY[0x270FA5388](v30 - 8);
  id v32 = (char *)v76 - v31;
  uint64_t v33 = type metadata accessor for ConceptDeltaHighlightFeedItemData();
  sub_24082EF28(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
  os_log_type_t v34 = (void *)sub_240954658();
  id v35 = objc_msgSend(v34, sel_UUID);

  sub_240951A78();
  uint64_t v36 = sub_240951A98();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v32, 0, 1, v36);
  (*(void (**)(char *, void, uint64_t))(v26 + 104))(v28, *MEMORY[0x263F45EC0], v25);
  uint64_t v37 = a1;
  uint64_t v38 = v93;
  uint64_t v79 = sub_2409534E8();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  uint64_t v39 = v37;
  uint64_t v40 = (uint64_t)v32;
  uint64_t v41 = v33;
  sub_240849A64(v40, &qword_26AFCE2A0, v29);
  sub_2408DA0BC();
  uint64_t v42 = v95;
  sub_2409517A8();
  if (v42) {
    return swift_bridgeObjectRelease();
  }
  v76[0] = 0;
  type metadata accessor for ConceptDeltaHighlightFeedItemViewController();
  (*(void (**)(char *, void, uint64_t))(v80 + 104))(v81, *MEMORY[0x263F45578], v82);
  id v44 = v38;
  sub_240951CC8();
  LODWORD(v94) = *(unsigned __int8 *)(v37 + *(int *)(v33 + 44));
  id v45 = v83;
  sub_240951A18();
  uint64_t v46 = v90;
  sub_240951988();
  uint64_t v47 = v91;
  uint64_t v48 = v92;
  id v49 = *(char **)(v92 + 8);
  id v93 = (void *)(v92 + 8);
  uint64_t v83 = v49;
  ((void (*)(char *, uint64_t))v49)(v45, v91);
  uint64_t v50 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56);
  uint64_t v51 = 1;
  v50(v46, 0, 1, v47);
  uint64_t v95 = v39;
  sub_24082EF28(0, (unint64_t *)&qword_268C91588, &qword_268C91590);
  uint64_t v52 = (void *)sub_240954658();
  id v53 = objc_msgSend(v52, sel_meaningfulDate);

  uint64_t v54 = v47;
  v76[1] = v41;
  uint64_t v55 = (uint64_t)v84;
  if (v53)
  {
    sub_240951A08();

    uint64_t v51 = 0;
  }
  uint64_t v56 = 1;
  v50(v55, v51, 1, v54);
  uint64_t v57 = v90;
  sub_240935404(v90, v55);
  uint64_t v58 = v55;
  id v59 = (void (*)(uint64_t))MEMORY[0x263F07490];
  sub_240849A64(v58, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
  sub_240849A64(v57, (unint64_t *)&qword_26AFCF7F8, v59);
  uint64_t v60 = (void *)sub_240954658();
  id v61 = objc_msgSend(v60, sel_meaningfulDate);

  uint64_t v62 = (uint64_t)v87;
  if (v61)
  {
    sub_240951A08();

    uint64_t v56 = 0;
  }
  id v63 = v86;
  uint64_t v64 = v56;
  uint64_t v65 = v91;
  v50(v62, v64, 1, v91);
  uint64_t v66 = v85;
  sub_240882BF4(v62, v85);
  uint64_t v67 = v92;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v66, 1, v65) == 1)
  {
    uint64_t v68 = sub_240952208();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v78, 1, 1, v68);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v67 + 32))(v63, v66, v65);
    (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v77, v63, v65);
    sub_240951828();
    unint64_t v69 = v63;
    unint64_t v70 = v78;
    sub_2409521E8();
    ((void (*)(char *, uint64_t))v83)(v69, v65);
    uint64_t v71 = sub_240952208();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v70, 0, 1, v71);
  }
  sub_240849A64(v62, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
  sub_240951DD8();
  swift_bridgeObjectRetain();
  sub_240951D78();
  sub_240951DC8();
  sub_240951D58();
  uint64_t v97 = MEMORY[0x263F8EE88];
  uint64_t v72 = sub_2409520B8();
  sub_240940118(&v96, v72, v73);
  swift_bridgeObjectRelease();
  uint64_t v74 = v97;
  os_log_type_t v75 = (uint64_t (*)(uint64_t *, void))sub_240951E38();
  sub_24089E058(v74);
  return v75(&v96, 0);
}