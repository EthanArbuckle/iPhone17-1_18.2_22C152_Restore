void sub_2408D96A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_240955098();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2408D96F4(void *a1, void *a2)
{
  id v3 = objc_msgSend(a1, sel_chartableCodedQuantitySet);
  if (!v3) {
    goto LABEL_13;
  }
  v4 = v3;
  id v5 = objc_msgSend(a2, sel_chartableCodedQuantitySet);
  if (!v5)
  {

LABEL_13:
    sub_2408DA114();
    swift_allocError();
    unsigned char *v24 = 0;
    swift_willThrow();
    return;
  }
  v6 = v5;
  id v7 = objc_msgSend(v4, sel_quantities);
  unint64_t v8 = sub_24083EDCC(0, &qword_268C910D0);
  unint64_t v9 = sub_240954998();

  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_2409553D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v10 != 1)
  {
    id v11 = objc_msgSend(v6, sel_quantities);
    unint64_t v12 = sub_240954998();

    if (v12 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_2409553D8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v13 != 1)
    {
      sub_2408DA114();
      swift_allocError();
      char v35 = 1;
LABEL_41:
      char *v34 = v35;
      swift_willThrow();

      return;
    }
  }
  id v14 = objc_msgSend(v4, sel_compatibleUnit);
  id v15 = objc_msgSend(v14, sel_unitString);

  sub_2409547C8();
  uint64_t v16 = sub_2409547F8();
  v18 = v17;
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v6, sel_compatibleUnit);
  id v20 = objc_msgSend(v19, sel_unitString);

  sub_2409547C8();
  uint64_t v21 = sub_2409547F8();
  v23 = v22;
  swift_bridgeObjectRelease();
  if (v16 == v21 && v18 == v23)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  char v25 = sub_240955618();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v25 & 1) == 0)
  {
    sub_2408DA114();
    swift_allocError();
    char v35 = 2;
    goto LABEL_41;
  }
LABEL_15:
  id v26 = objc_msgSend(v4, sel_quantities);
  unint64_t v27 = sub_240954998();

  if (v27 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_2409553D8();
    swift_bridgeObjectRelease();
    if (!v36) {
      goto LABEL_39;
    }
  }
  else if (!*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_39;
  }
  if ((v27 & 0xC000000000000001) != 0)
  {
    id v28 = (id)MEMORY[0x2456015B0](0, v27);
  }
  else
  {
    if (!*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_37;
    }
    id v28 = *(id *)(v27 + 32);
  }
  v29 = v28;
  swift_bridgeObjectRelease();
  v23 = &off_2650D8000;
  unint64_t v27 = (unint64_t)objc_msgSend(v29, sel_quantity);

  if (!v27)
  {
LABEL_40:
    sub_2408DA114();
    swift_allocError();
    char v35 = 3;
    goto LABEL_41;
  }
  id v30 = objc_msgSend(v6, sel_quantities);
  unint64_t v8 = sub_240954998();

  if (!(v8 >> 62))
  {
    if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_23;
    }
    goto LABEL_38;
  }
LABEL_37:
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_2409553D8();
  swift_bridgeObjectRelease();
  if (!v37)
  {
LABEL_38:

LABEL_39:
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
LABEL_23:
  if ((v8 & 0xC000000000000001) != 0)
  {
    id v31 = (id)MEMORY[0x2456015B0](0, v8);
    goto LABEL_26;
  }
  if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v31 = *(id *)(v8 + 32);
LABEL_26:
    v32 = v31;
    swift_bridgeObjectRelease();
    id v33 = [v32 (SEL)v23[504]];

    if (v33)
    {
      objc_msgSend((id)v27, sel_compare_, v33);

      return;
    }

    goto LABEL_40;
  }
  __break(1u);
}

uint64_t sub_2408D9C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v40 = a1;
  uint64_t v41 = a3;
  uint64_t v39 = a2;
  uint64_t v3 = sub_240951AC8();
  uint64_t v38 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240951B48();
  uint64_t v37 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408D96A0(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  unint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  id v14 = (char *)&v34 - v13;
  uint64_t v15 = sub_240951A28();
  uint64_t v16 = *(void **)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  id v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v34 - v20;
  if (v41)
  {
    char v22 = 0;
  }
  else
  {
    char v35 = v8;
    uint64_t v36 = v6;
    uint64_t v41 = v3;
    sub_240882BF4(v40, (uint64_t)v14);
    v23 = (unsigned int (*)(char *, uint64_t, uint64_t))v16[6];
    if (v23(v14, 1, v15) == 1)
    {
      v24 = (void (*)(uint64_t))MEMORY[0x263F07490];
      uint64_t v25 = (uint64_t)v14;
    }
    else
    {
      id v26 = v14;
      unint64_t v27 = (void (*)(char *, char *, uint64_t))v16[4];
      v27(v21, v26, v15);
      sub_240882BF4(v39, (uint64_t)v12);
      if (v23(v12, 1, v15) != 1)
      {
        v27(v19, v12, v15);
        uint64_t v28 = v38;
        v29 = v5;
        uint64_t v30 = v41;
        (*(void (**)(char *, void, uint64_t))(v38 + 104))(v5, *MEMORY[0x263F07740], v41);
        id v31 = v35;
        sub_240951AD8();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);
        char v22 = sub_240951B28();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v31, v36);
        v32 = (void (*)(char *, uint64_t))v16[1];
        v32(v19, v15);
        v32(v21, v15);
        return v22 & 1;
      }
      ((void (*)(char *, uint64_t))v16[1])(v21, v15);
      v24 = (void (*)(uint64_t))MEMORY[0x263F07490];
      uint64_t v25 = (uint64_t)v12;
    }
    sub_240849A64(v25, (unint64_t *)&qword_26AFCF7F8, v24);
    char v22 = 0;
  }
  return v22 & 1;
}

uint64_t sub_2408DA060(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ConceptDeltaHighlightFeedItemData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2408DA0BC()
{
  unint64_t result = qword_268C91580;
  if (!qword_268C91580)
  {
    type metadata accessor for ConceptDeltaHighlightFeedItemData();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91580);
  }
  return result;
}

unint64_t sub_2408DA114()
{
  unint64_t result = qword_268C91598;
  if (!qword_268C91598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91598);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DiagnosticTestResultComparisonError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2408DA234);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiagnosticTestResultComparisonError()
{
  return &type metadata for DiagnosticTestResultComparisonError;
}

unint64_t sub_2408DA270()
{
  unint64_t result = qword_268C915A0;
  if (!qword_268C915A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C915A0);
  }
  return result;
}

void sub_2408DA2C4()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_2408DAF00(319, &qword_26AFCF740, MEMORY[0x263F45E28]);
    if (v1 <= 0x3F) {
      swift_initClassMetadata2();
    }
  }
}

uint64_t sub_2408DA3C4@<X0>(uint64_t a1@<X8>)
{
  sub_2408DAF00(0, &qword_26AFCF740, MEMORY[0x263F45E28]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = v1 + *(void *)(*(void *)v1 + 112);
  swift_beginAccess();
  sub_2408DB038(v6, (uint64_t)v5);
  uint64_t v7 = sub_2409524D8();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) == 1)
  {
    sub_2408DB038(v1 + *(void *)(*(void *)v1 + 120), a1);
    return sub_2408DAF54((uint64_t)v5, &qword_26AFCF740, MEMORY[0x263F45E28]);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v5, v7);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
}

uint64_t sub_2408DA578@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  v72 = a1;
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = sub_240952558();
  uint64_t v65 = *(void *)(v4 - 8);
  uint64_t v66 = v4;
  MEMORY[0x270FA5388](v4);
  v64 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408DAF00(0, &qword_26AFCF740, MEMORY[0x263F45E28]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v68 = (uint64_t)&v63 - v7;
  uint64_t v8 = sub_2409524D8();
  uint64_t v70 = *(void *)(v8 - 8);
  uint64_t v71 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  v69 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  v67 = (char *)&v63 - v11;
  sub_2408DAF00(0, (unint64_t *)&unk_26AFD0660, MEMORY[0x263F45F38]);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v63 - v14;
  uint64_t v16 = *(void *)(v3 + 80);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v13);
  id v19 = (char *)&v63 - v18;
  uint64_t v20 = sub_2409526C8();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  v24 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  id v26 = (char *)&v63 - v25;
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v19, &v2[*(void *)(v3 + 88)], v16);
  char v27 = swift_dynamicCast();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  if (v27)
  {
    v28(v15, 0, 1, v20);
    v29 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v29(v26, v15, v20);
    v29(v24, v26, v20);
    int v30 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v24, v20);
    if (v30 == *MEMORY[0x263F45F28]
      || v30 == *MEMORY[0x263F45F20]
      || v30 == *MEMORY[0x263F45EF8]
      || v30 == *MEMORY[0x263F45F10])
    {
      v45 = &v2[*(void *)(*(void *)v2 + 96)];
      uint64_t v46 = *((void *)v45 + 1);
      v43 = v72;
      void *v72 = *(void *)v45;
      v43[1] = v46;
      v44 = (unsigned int *)MEMORY[0x263F44170];
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
  }
  else
  {
    v28(v15, 1, 1, v20);
    sub_2408DAF54((uint64_t)v15, (unint64_t *)&unk_26AFD0660, MEMORY[0x263F45F38]);
  }
  uint64_t v31 = v68;
  sub_2408DA3C4(v68);
  uint64_t v33 = v70;
  uint64_t v32 = v71;
  int v34 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v31, 1, v71);
  char v35 = v69;
  if (v34 == 1)
  {
    sub_2408DAF54(v31, &qword_26AFCF740, MEMORY[0x263F45E28]);
    uint64_t v36 = v72;
    goto LABEL_17;
  }
  uint64_t v37 = v67;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v67, v31, v32);
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v35, v37, v32);
  int v38 = (*(uint64_t (**)(char *, uint64_t))(v33 + 88))(v35, v32);
  if (v38 != *MEMORY[0x263F45E20])
  {
    uint64_t v36 = v72;
    if (v38 == *MEMORY[0x263F45E18])
    {
      (*(void (**)(char *, uint64_t))(v33 + 96))(v35, v32);
      v49 = v64;
      uint64_t v50 = v65;
      uint64_t v51 = v66;
      (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v64, v35, v66);
      sub_2408DAFB0();
      v53 = (uint64_t *)((char *)v36 + *(int *)(v52 + 64));
      *uint64_t v36 = sub_240952548();
      sub_2409524E8();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v49, v51);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v37, v32);
      v54 = &v2[*(void *)(*(void *)v2 + 96)];
      uint64_t v55 = *((void *)v54 + 1);
      void *v53 = *(void *)v54;
      v53[1] = v55;
      v56 = (unsigned int *)MEMORY[0x263F44188];
LABEL_18:
      uint64_t v60 = *v56;
      uint64_t v61 = sub_240953A38();
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v61 - 8) + 104))(v36, v60, v61);
      return swift_bridgeObjectRetain();
    }
    v57 = *(void (**)(char *, uint64_t))(v33 + 8);
    v57(v37, v32);
    v57(v35, v32);
LABEL_17:
    v58 = (uint64_t *)&v2[*(void *)(*(void *)v2 + 96)];
    uint64_t v59 = v58[1];
    *uint64_t v36 = *v58;
    v36[1] = v59;
    v56 = (unsigned int *)MEMORY[0x263F44178];
    goto LABEL_18;
  }
  (*(void (**)(char *, uint64_t))(v33 + 8))(v37, v32);
  (*(void (**)(char *, uint64_t))(v33 + 96))(v35, v32);
  uint64_t v39 = *(void *)v35;

  uint64_t v40 = (uint64_t *)&v2[*(void *)(*(void *)v2 + 96)];
  uint64_t v41 = *v40;
  uint64_t v42 = v40[1];
  v43 = v72;
  void *v72 = v39;
  v43[1] = v41;
  v43[2] = v42;
  v44 = (unsigned int *)MEMORY[0x263F44180];
LABEL_13:
  uint64_t v47 = *v44;
  uint64_t v48 = sub_240953A38();
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 104))(v43, v47, v48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2408DAD48()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 88));
  swift_bridgeObjectRelease();
  sub_24089D810(*(void *)(v0 + *(void *)(*(void *)v0 + 104)));
  uint64_t v1 = (void (*)(uint64_t))MEMORY[0x263F45E28];
  sub_2408DAF54(v0 + *(void *)(*(void *)v0 + 112), &qword_26AFCF740, MEMORY[0x263F45E28]);
  sub_2408DAF54(v0 + *(void *)(*(void *)v0 + 120), &qword_26AFCF740, v1);
  return v0;
}

uint64_t sub_2408DAE6C()
{
  sub_2408DAD48();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BrowseItem()
{
  return sub_240852868();
}

uint64_t sub_2408DAEDC@<X0>(void *a1@<X8>)
{
  return sub_2408DA578(a1);
}

void sub_2408DAF00(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240955098();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2408DAF54(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_2408DAF00(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_2408DAFB0()
{
  if (!qword_268C915A8)
  {
    sub_24083EDCC(255, &qword_26AFCF698);
    sub_240953718();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268C915A8);
    }
  }
}

uint64_t sub_2408DB038(uint64_t a1, uint64_t a2)
{
  sub_2408DAF00(0, &qword_26AFCF740, MEMORY[0x263F45E28]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2408DB0B8()
{
  sub_24083EDCC(0, (unint64_t *)&qword_26AFD07B0);
  id v0 = (id)sub_240954D78();
  sub_240952A68();
}

uint64_t type metadata accessor for NewRecordsFeedItemView()
{
  uint64_t result = qword_268C915D0;
  if (!qword_268C915D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2408DB1A0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2408DB1E0()
{
  uint64_t result = sub_240954EF8();
  qword_268C915B0 = v1;
  *(void *)algn_268C915B8 = v2;
  return result;
}

void sub_2408DB208()
{
  qword_268C915C0 = 0x4020000000000000;
}

void sub_2408DB218()
{
  qword_268C915C8 = 0x4010000000000000;
}

uint64_t sub_2408DB228()
{
  uint64_t v0 = qword_268C905B0;
  id v1 = (id)*MEMORY[0x263F835F0];
  if (v0 != -1) {
    swift_once();
  }
  if (qword_268C905B8 != -1) {
    swift_once();
  }
  if (qword_268C905C0 != -1) {
    swift_once();
  }
  id v2 = objc_allocWithZone((Class)sub_2409529E8());
  return sub_2409529D8();
}

id sub_2408DB340(void (**a1)(char *, uint64_t))
{
  v67 = a1;
  uint64_t v60 = sub_240952B98();
  uint64_t v62 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v59 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408DBF60(0, &qword_26AFCC6A8, MEMORY[0x263F07690]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v54 - v4;
  uint64_t v69 = sub_2409528E8();
  uint64_t v56 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  v64 = (void (**)(char *, uint64_t))((char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v71 = sub_2409526C8();
  uint64_t v55 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  uint64_t v70 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_2409528B8();
  uint64_t v54 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v63 = (void (**)(char *, uint64_t))((char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v57 = sub_240951A98();
  uint64_t v9 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  v58 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for NewRecordsFeedItemViewData();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408DBF60(0, &qword_268C91110, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemViewData);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v54 - v19;
  sub_2408DBF60(0, &qword_268C915E0, MEMORY[0x263F45FB0]);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (char *)&v54 - v22;
  v72 = v1;
  v24 = (void *)sub_240952E48();
  sub_2408DBFB4((uint64_t)v67, (uint64_t)v20);
  uint64_t v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  uint64_t v66 = (void (**)(char *, uint64_t))(v12 + 48);
  unsigned int v26 = v25(v20, 1, v11);
  uint64_t v61 = v5;
  uint64_t v65 = (void (**)(char *, char *, uint64_t))v25;
  if (v26 == 1)
  {
    uint64_t v27 = sub_240952828();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v23, 1, 1, v27);
    v29 = (char *)v63;
    uint64_t v28 = (char *)v64;
    uint64_t v30 = v71;
    uint64_t v31 = v67;
    uint64_t v32 = v62;
  }
  else
  {
    sub_2408DC0EC((uint64_t)v20, (uint64_t)v14);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v58, &v14[*(int *)(v11 + 24)], v57);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v32 = v62;
    sub_240952818();
    uint64_t v33 = sub_240952828();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v23, 0, 1, v33);
    sub_2408DC090((uint64_t)v14);
    v29 = (char *)v63;
    uint64_t v28 = (char *)v64;
    uint64_t v30 = v71;
    uint64_t v31 = v67;
  }
  sub_240952568();

  sub_2408DC034((uint64_t)v23, &qword_268C915E0, MEMORY[0x263F45FB0]);
  int v34 = (void *)sub_240952E58();
  sub_2409529C8();

  sub_2408DBFB4((uint64_t)v31, (uint64_t)v18);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v65)(v18, 1, v11) == 1)
  {
    sub_2408DC034((uint64_t)v18, &qword_268C91110, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemViewData);
LABEL_17:
    uint64_t v46 = v60;
    goto LABEL_18;
  }
  char v35 = *(char **)&v18[*(int *)(v11 + 28)];
  swift_bridgeObjectRetain();
  sub_2408DC090((uint64_t)v18);
  uint64_t v36 = *((void *)v35 + 2);
  if (!v36)
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  uint64_t v37 = *(void *)(sub_2409525E8() - 8);
  int v38 = &v35[(*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80)];
  uint64_t v39 = *(void *)(v37 + 72);
  uint64_t v40 = (unsigned int (**)(char *, uint64_t))(v55 + 88);
  int v41 = *MEMORY[0x263F45F00];
  uint64_t v66 = (void (**)(char *, uint64_t))(v55 + 96);
  v67 = (void (**)(char *, uint64_t))(v55 + 8);
  v64 = (void (**)(char *, uint64_t))(v56 + 8);
  uint64_t v65 = (void (**)(char *, char *, uint64_t))(v54 + 32);
  uint64_t v63 = (void (**)(char *, uint64_t))(v54 + 8);
  v58 = v35;
  swift_bridgeObjectRetain();
  uint64_t v42 = v70;
  do
  {
    if ((sub_2409525C8() & 1) == 0)
    {
      sub_2409525D8();
      if ((*v40)(v42, v30) == v41)
      {
        (*v66)(v42, v30);
        v43 = v42;
        uint64_t v44 = v68;
        (*v65)(v29, v43, v68);
        v45 = (void *)sub_240952E58();
        sub_240952C38();
        sub_240952C28();
        if (qword_268C905B0 != -1) {
          swift_once();
        }
        sub_2409529B8();

        (*v64)(v28, v69);
        (*v63)(v29, v44);
        uint64_t v42 = v70;
        uint64_t v30 = v71;
      }
      else
      {
        (*v67)(v42, v30);
      }
    }
    v38 += v39;
    --v36;
  }
  while (v36);
  swift_bridgeObjectRelease_n();
  uint64_t v46 = v60;
  uint64_t v32 = v62;
LABEL_18:
  uint64_t v47 = v59;
  uint64_t v48 = v72;
  v49 = (void *)sub_240952E68();
  uint64_t v50 = sub_240951AB8();
  uint64_t v51 = (uint64_t)v61;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v61, 1, 1, v50);
  sub_240952B88();
  sub_2409535A8();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v47, v46);
  sub_2408DC034(v51, &qword_26AFCC6A8, MEMORY[0x263F07690]);
  uint64_t v52 = (void *)sub_240954788();
  swift_bridgeObjectRelease();
  objc_msgSend(v49, sel_setText_, v52);

  return objc_msgSend(v48, sel_setNeedsLayout);
}

id sub_2408DBD00(void *a1, double a2, double a3, double a4, double a5)
{
  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for NewRecordsFeedItemView();
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a2, a3, a4, a5);
}

id sub_2408DBD74(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for NewRecordsFeedItemView();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_2408DBDC0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NewRecordsFeedItemView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2408DBDF8(uint64_t a1)
{
  sub_2408DBF60(0, &qword_268C91110, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemViewData);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (void (**)(char *, uint64_t))((char *)&v7 - v3);
  sub_2408DBEFC(a1, (uint64_t)&v7 - v3);
  uint64_t v5 = type metadata accessor for NewRecordsFeedItemViewData();
  (*(void (**)(void (**)(char *, uint64_t), void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  sub_2408DB340(v4);
  return sub_2408DC034((uint64_t)v4, &qword_268C91110, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemViewData);
}

uint64_t sub_2408DBEF4()
{
  return type metadata accessor for NewRecordsFeedItemView();
}

uint64_t sub_2408DBEFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewRecordsFeedItemViewData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2408DBF60(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240955098();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2408DBFB4(uint64_t a1, uint64_t a2)
{
  sub_2408DBF60(0, &qword_268C91110, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemViewData);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2408DC034(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_2408DBF60(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2408DC090(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NewRecordsFeedItemViewData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2408DC0EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewRecordsFeedItemViewData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_2408DC214()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NullView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for NullView()
{
  return self;
}

uint64_t sub_2408DC26C(void (*a1)(void, void, void), uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v79 = a3;
  uint64_t v74 = a2;
  uint64_t v65 = a1;
  uint64_t v67 = sub_240951FB8();
  uint64_t v85 = *(void *)(v67 - 8);
  uint64_t v66 = *(void *)(v85 + 64);
  MEMORY[0x270FA5388](v67);
  v82 = (char *)v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408E3FC4(0, &qword_26AFCEEE8, sub_2408E26FC, sub_2408E2730, (void (*)(void))sub_2408E2764);
  uint64_t v68 = v6;
  uint64_t v69 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  v83 = (char *)v61 - v7;
  sub_2408E2798();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v71 = v8;
  uint64_t v72 = v9;
  MEMORY[0x270FA5388](v8);
  v84 = (char *)v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408E2BD4();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v75 = v11;
  uint64_t v76 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v70 = (char *)v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408E2C80();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v77 = v14;
  uint64_t v78 = v15;
  MEMORY[0x270FA5388](v14);
  v73 = (char *)v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_240951EF8();
  uint64_t v17 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v19 = (char *)v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = (void (*)(uint64_t, char *, uint64_t))sub_240951F18();
  uint64_t v20 = *((void *)v63 - 1);
  MEMORY[0x270FA5388](v63);
  uint64_t v22 = (char *)v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_240952468();
  uint64_t v64 = v23;
  v61[2] = a4;
  v61[1] = sub_240951F68();
  sub_2408E2A24(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v24 = sub_240951C08();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(void *)(v25 + 72);
  unint64_t v27 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_2409562B0;
  unint64_t v29 = v28 + v27;
  uint64_t v30 = *(void (**)(unint64_t, void, uint64_t))(v25 + 104);
  v30(v29, *MEMORY[0x263F45520], v24);
  v30(v29 + v26, *MEMORY[0x263F454D0], v24);
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x263F45698], v62);
  sub_240951F08();
  uint64_t v31 = v79;
  sub_240951F98();
  (*(void (**)(char *, void (*)(uint64_t, char *, uint64_t)))(v20 + 8))(v22, v63);
  sub_240951BF8();
  swift_allocObject();
  uint64_t v80 = sub_240951BE8();
  sub_240951F38();
  sub_2408304E8(v87, v87[3]);
  uint64_t v86 = sub_240951EC8();
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = v81;
  int v34 = v65;
  *(void *)(v32 + 16) = v81;
  *(void *)(v32 + 24) = v34;
  sub_2408E26FC(0);
  sub_2408E2730(0);
  sub_2408E2764();
  swift_bridgeObjectRetain();
  sub_2409544F8();
  swift_release();
  swift_release();
  sub_2408371B8((uint64_t)v87);
  uint64_t v35 = v85;
  uint64_t v65 = *(void (**)(void, void, void))(v85 + 16);
  uint64_t v36 = v82;
  uint64_t v37 = v31;
  uint64_t v38 = v67;
  v65(v82, v37, v67);
  uint64_t v39 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v40 = (v39 + 24) & ~v39;
  uint64_t v64 = v39 | 7;
  v66 += 7;
  unint64_t v41 = (v66 + v40) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = v33;
  v43 = *(void (**)(uint64_t, char *, uint64_t))(v35 + 32);
  uint64_t v85 = v35 + 32;
  uint64_t v63 = v43;
  v43(v42 + v40, v36, v38);
  *(void *)(v42 + v41) = v80;
  *(void *)(v42 + ((v41 + 15) & 0xFFFFFFFFFFFFFFF8)) = v33;
  swift_retain();
  sub_2409542E8();
  sub_2408E2A88();
  sub_2408E2898();
  sub_2408E2B38();
  sub_2408E2AF0(&qword_26AFCEEF0, (void (*)(uint64_t))sub_2408E2898);
  uint64_t v44 = v68;
  v45 = v83;
  sub_240954578();
  swift_release();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v45, v44);
  uint64_t v46 = v82;
  v65(v82, v79, v38);
  uint64_t v47 = (v39 + 32) & ~v39;
  unint64_t v48 = (v66 + v47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v49 = swift_allocObject();
  uint64_t v50 = v81;
  uint64_t v51 = v74;
  *(void *)(v49 + 16) = v81;
  *(void *)(v49 + 24) = v51;
  v63(v49 + v47, v46, v38);
  *(void *)(v49 + v48) = v80;
  *(void *)(v49 + ((v48 + 15) & 0xFFFFFFFFFFFFFFF8)) = v50;
  uint64_t v52 = swift_allocObject();
  *(void *)(v52 + 16) = sub_2408E3024;
  *(void *)(v52 + 24) = v49;
  sub_240840084(0);
  sub_2408E2AF0(&qword_26AFCF1B8, (void (*)(uint64_t))sub_2408E2798);
  swift_retain();
  swift_retain();
  v53 = v70;
  uint64_t v54 = v71;
  uint64_t v55 = v84;
  sub_240954548();
  swift_release();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v55, v54);
  *(void *)(swift_allocObject() + 16) = v50;
  sub_2408E2964(0, &qword_26AFCDC88, (uint64_t (*)(uint64_t))sub_240840084, MEMORY[0x263EFDCF0]);
  sub_2408E2AF0(&qword_26AFCF090, (void (*)(uint64_t))sub_2408E2BD4);
  sub_2408E37FC((unint64_t *)&qword_26AFCDC80, &qword_26AFCDC88, (uint64_t (*)(uint64_t))sub_240840084);
  uint64_t v56 = v73;
  uint64_t v57 = v75;
  sub_240954508();
  swift_release();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v53, v57);
  sub_2408E2AF0(&qword_26AFCEFB0, (void (*)(uint64_t))sub_2408E2C80);
  uint64_t v58 = v77;
  uint64_t v59 = sub_240954498();
  swift_release();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v56, v58);
  return v59;
}

void sub_2408DCDA8(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = (void *)MEMORY[0x245601B40]();
  sub_2408DCE20(a2, a1, a3);
}

uint64_t sub_2408DCE20@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v29 = a3;
  uint64_t v4 = sub_240952158();
  uint64_t v23 = *(void *)(v4 - 8);
  uint64_t v24 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240951A28();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v22 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v22 - v15;
  sub_240951A18();
  sub_240951978();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  v17(v14, v7);
  sub_240951958();
  unint64_t v27 = v11;
  uint64_t v28 = v16;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_2408F88DC((uint64_t (*)(char *))sub_2408E46A0, (uint64_t)v26, a1);
  if (*(void *)(v18 + 16))
  {
    uint64_t v19 = *(void *)(a1 + 16);
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v6, v25, v24);
    sub_2408DD374(v18, v19, (uint64_t)v6, v29);
    v17(v16, v7);
  }
  else
  {
    swift_bridgeObjectRelease();
    v17(v16, v7);
    uint64_t v20 = type metadata accessor for SharedNewRecordsAlertData(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  }
  return ((uint64_t (*)(char *, uint64_t))v17)(v11, v7);
}

uint64_t sub_2408DD0E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v18[1] = a3;
  sub_240849BDC();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240951A28();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v18 - v12;
  sub_240953548();
  if (sub_240953538())
  {
    char v14 = 1;
  }
  else
  {
    type metadata accessor for SharedConceptFeedItemData(0);
    sub_2409519D8();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_2408E318C((uint64_t)v6, (uint64_t (*)(void))sub_240849BDC);
      char v14 = 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a2, v7);
      char v15 = sub_2409519B8();
      uint64_t v16 = *(void (**)(char *, uint64_t))(v8 + 8);
      v16(v11, v7);
      if (v15) {
        (*(void (**)(uint64_t, char *, uint64_t))(v8 + 24))(a2, v13, v7);
      }
      char v14 = sub_2409519C8();
      v16(v13, v7);
    }
  }
  return v14 & 1;
}

uint64_t sub_2408DD374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v75 = a2;
  uint64_t v7 = type metadata accessor for SharedConceptFeedItemData(0);
  uint64_t v86 = *(void *)(v7 - 8);
  uint64_t v87 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v74 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v67 - v10;
  uint64_t v12 = sub_240951A28();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  v83 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  v82 = (char *)&v67 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v67 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (char *)&v67 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v78 = (char *)&v67 - v24;
  uint64_t v25 = type metadata accessor for SharedNewRecordsAlertData(0);
  uint64_t v26 = MEMORY[0x270FA5388](*(void *)(v25 - 8));
  uint64_t v28 = (char *)&v67 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = *(void *)(a1 + 16);
  uint64_t v77 = v26;
  if (v29)
  {
    uint64_t v70 = v28;
    uint64_t v71 = (int *)v25;
    uint64_t v72 = a3;
    uint64_t v73 = a4;
    sub_240951958();
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    uint64_t v30 = v13 + 16;
    uint64_t v69 = v23;
    uint64_t v85 = v12;
    uint64_t v79 = v31;
    v31(v20, v23, v12);
    uint64_t v32 = a1 + ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80));
    uint64_t v86 = *(void *)(v86 + 72);
    uint64_t v80 = v11 + 64;
    uint64_t v33 = (void (**)(char *, uint64_t))(v30 - 8);
    v84 = (void (**)(char *, char *, uint64_t))(v30 + 16);
    uint64_t v76 = a1;
    swift_bridgeObjectRetain();
    uint64_t v34 = v32;
    uint64_t v68 = v29;
    uint64_t v35 = v29;
    uint64_t v81 = v30;
    do
    {
      sub_2408E46C0(v34, (uint64_t)v11, type metadata accessor for SharedConceptFeedItemData);
      uint64_t v42 = v83;
      sub_2409519D8();
      if (sub_2409519B8())
      {
        uint64_t v38 = v84;
        uint64_t v36 = v85;
        uint64_t v37 = v82;
        (*v84)(v82, v42, v85);
      }
      else
      {
        uint64_t v36 = v85;
        (*v33)(v42, v85);
        uint64_t v37 = v82;
        v79(v82, v20, v36);
        uint64_t v38 = v84;
      }
      sub_2408E318C((uint64_t)v11, type metadata accessor for SharedConceptFeedItemData);
      uint64_t v39 = *v33;
      (*v33)(v20, v36);
      uint64_t v40 = v36;
      unint64_t v41 = *v38;
      (*v38)(v20, v37, v40);
      v34 += v86;
      --v35;
    }
    while (v35);
    swift_bridgeObjectRelease();
    uint64_t v43 = v85;
    v41(v78, v20, v85);
    v39(v69, v43);
    swift_bridgeObjectRetain();
    uint64_t v44 = (void *)MEMORY[0x263F8EE78];
    uint64_t v45 = (uint64_t)v74;
    uint64_t v46 = v68;
    do
    {
      sub_2408E46C0(v32, v45, type metadata accessor for SharedConceptFeedItemData);
      uint64_t v47 = (uint64_t *)(v45 + *(int *)(v87 + 28));
      uint64_t v49 = *v47;
      uint64_t v48 = v47[1];
      swift_bridgeObjectRetain();
      sub_2408E318C(v45, type metadata accessor for SharedConceptFeedItemData);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v44 = sub_2408C296C(0, v44[2] + 1, 1, v44);
      }
      unint64_t v51 = v44[2];
      unint64_t v50 = v44[3];
      if (v51 >= v50 >> 1) {
        uint64_t v44 = sub_2408C296C((void *)(v50 > 1), v51 + 1, 1, v44);
      }
      v44[2] = v51 + 1;
      uint64_t v52 = &v44[2 * v51];
      v52[4] = v49;
      v52[5] = v48;
      v32 += v86;
      --v46;
    }
    while (v46);
    swift_bridgeObjectRelease_n();
    uint64_t v53 = *MEMORY[0x263F45FE8];
    uint64_t v54 = sub_2409528B8();
    uint64_t v55 = (uint64_t)v70;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 104))(v70, v53, v54);
    uint64_t v57 = v71;
    uint64_t v56 = v72;
    *(void *)(v55 + v71[5]) = v75;
    *(void *)(v55 + v57[6]) = v44;
    uint64_t v58 = sub_240952148();
    uint64_t v60 = v59;
    uint64_t v61 = sub_240952158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 - 8) + 8))(v56, v61);
    uint64_t v62 = (uint64_t *)(v55 + v57[7]);
    *uint64_t v62 = v58;
    v62[1] = v60;
    v41((char *)(v55 + v57[8]), v78, v85);
    uint64_t v63 = v73;
    sub_2408E44CC(v55, v73, type metadata accessor for SharedNewRecordsAlertData);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(v77 + 56))(v63, 0, 1, v57);
  }
  else
  {
    uint64_t v65 = sub_240952158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v65 - 8) + 8))(a3, v65);
    swift_bridgeObjectRelease();
    uint64_t v66 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 56);
    return v66(a4, 1, 1, v25);
  }
}

uint64_t sub_2408DDA64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v38 = a4;
  uint64_t v39 = a5;
  uint64_t v33 = a3;
  uint64_t v36 = a1;
  uint64_t v37 = sub_240951FB8();
  uint64_t v6 = *(void *)(v37 - 8);
  uint64_t v31 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v37);
  uint64_t v35 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408E2730(0);
  uint64_t v34 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v34 + 64);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v32 = (uint64_t)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void *)sub_240951F68();
  sub_240951C78();

  uint64_t v40 = 0;
  unint64_t v41 = 0xE000000000000000;
  sub_2409552A8();
  swift_bridgeObjectRelease();
  uint64_t v40 = 0xD000000000000022;
  unint64_t v41 = 0x800000024095E110;
  sub_2409548A8();
  swift_bridgeObjectRelease();
  unint64_t v11 = v41;
  uint64_t v29 = v40;
  uint64_t v12 = (void *)sub_240951F68();
  sub_240951C78();

  sub_240952458();
  swift_bridgeObjectRelease();
  uint64_t v13 = (void *)sub_240951F58();
  id v14 = objc_allocWithZone(MEMORY[0x263F0A470]);
  uint64_t v15 = (void *)sub_240954788();
  swift_bridgeObjectRelease();
  id v30 = objc_msgSend(v14, sel_initWithCategory_domainName_healthStore_, 1, v15, v13);

  uint64_t v40 = v33;
  sub_240951BF8();
  sub_2408E2AF0(&qword_26AFCE160, MEMORY[0x263F454B0]);
  uint64_t v40 = sub_2409522F8();
  uint64_t v16 = v32;
  sub_2408E46C0(v36, v32, (uint64_t (*)(void))sub_2408E2730);
  uint64_t v17 = v6;
  uint64_t v18 = v35;
  uint64_t v19 = a2;
  uint64_t v20 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v35, v19, v37);
  unint64_t v21 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  unint64_t v22 = (v9 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (*(unsigned __int8 *)(v6 + 80) + v22 + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v24 = (v31 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = swift_allocObject();
  sub_2408E44CC(v16, v25 + v21, (uint64_t (*)(void))sub_2408E2730);
  uint64_t v26 = (uint64_t *)(v25 + v22);
  *uint64_t v26 = v29;
  v26[1] = v11;
  (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v25 + v23, v18, v20);
  *(void *)(v25 + v24) = v38;
  sub_2408E2964(0, &qword_26AFCF2A0, (uint64_t (*)(uint64_t))sub_2408E29F0, MEMORY[0x263EFDCF0]);
  sub_2408E2A88();
  sub_2408E37FC(&qword_26AFCF298, &qword_26AFCF2A0, (uint64_t (*)(uint64_t))sub_2408E29F0);
  sub_2409544F8();

  swift_release();
  return swift_release();
}

uint64_t sub_2408DDEDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v37 = a6;
  uint64_t v40 = a3;
  uint64_t v41 = a1;
  uint64_t v11 = sub_2409540C8();
  uint64_t v38 = *(void *)(v11 - 8);
  uint64_t v39 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408E2730(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for SharedNewRecordsAlertData(0);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408E46C0(a2, (uint64_t)v16, (uint64_t (*)(void))sub_2408E2730);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_2408E318C((uint64_t)v16, (uint64_t (*)(void))sub_2408E2730);
    uint64_t v21 = 0;
  }
  else
  {
    sub_2408E44CC((uint64_t)v16, (uint64_t)v20, type metadata accessor for SharedNewRecordsAlertData);
    sub_240951948();
    uint64_t v21 = sub_240954AC8();
    sub_2408E318C((uint64_t)v20, type metadata accessor for SharedNewRecordsAlertData);
  }
  if (sub_240955078())
  {
    v36[1] = a5;
    v36[2] = v21;
    sub_2409540A8();
    swift_bridgeObjectRetain_n();
    unint64_t v22 = sub_2409540B8();
    os_log_type_t v23 = sub_240954C38();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      v36[0] = a2;
      uint64_t v25 = v24;
      uint64_t v26 = swift_slowAlloc();
      v43[0] = v26;
      *(_DWORD *)uint64_t v25 = 136446466;
      uint64_t v27 = sub_2409557A8();
      uint64_t v42 = sub_2408370E4(v27, v28, v43);
      uint64_t v37 = a7;
      sub_2409550B8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v29 = v40;
      uint64_t v42 = sub_2408370E4(v40, a4, v43);
      a7 = v37;
      sub_2409550B8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_240818000, v22, v23, "%{public}s Removing any notifications that may have been delivered: %s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v26, -1, -1);
      uint64_t v30 = v25;
      a2 = v36[0];
      MEMORY[0x2456021C0](v30, -1, -1);

      (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v39);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v39);
      uint64_t v29 = v40;
    }
    sub_240951F38();
    sub_2408304E8(v43, v43[3]);
    sub_240951EB8();
    swift_getObjectType();
    sub_2408E4658(0, (unint64_t *)&qword_26AFD0670);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_240956800;
    *(void *)(v31 + 32) = v29;
    *(void *)(v31 + 40) = a4;
    swift_bridgeObjectRetain();
    sub_240952288();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    sub_2408371B8((uint64_t)v43);
  }
  char v32 = sub_240955088();
  swift_bridgeObjectRelease();
  sub_2408E2A88();
  uint64_t v34 = *(int *)(v33 + 48);
  uint64_t result = sub_2408E46C0(a2, a7, (uint64_t (*)(void))sub_2408E2730);
  *(unsigned char *)(a7 + v34) = v32 & 1;
  return result;
}

uint64_t sub_2408DE3EC(uint64_t a1, int a2, uint64_t a3, void (*a4)(char *, char *, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v59 = a7;
  uint64_t v71 = a4;
  uint64_t v72 = a3;
  LODWORD(v70) = a2;
  uint64_t v11 = sub_240951FB8();
  uint64_t v62 = *(void *)(v11 - 8);
  uint64_t v63 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v67 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2409540C8();
  uint64_t v60 = *(void *)(v13 - 8);
  uint64_t v61 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v65 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408E3158(0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_240951E78();
  uint64_t v68 = *(void *)(v18 - 8);
  uint64_t v69 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v66 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v64 = (char *)&v57 - v21;
  sub_2408E2730(0);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v24 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for SharedNewRecordsAlertData(0);
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  unint64_t v28 = (char *)&v57 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408E46C0(a1, (uint64_t)v24, (uint64_t (*)(void))sub_2408E2730);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
  {
    sub_2408E318C((uint64_t)v24, (uint64_t (*)(void))sub_2408E2730);
    return MEMORY[0x263F8EE78];
  }
  else
  {
    sub_2408E44CC((uint64_t)v24, (uint64_t)v28, type metadata accessor for SharedNewRecordsAlertData);
    v73[3] = sub_240951BF8();
    v73[4] = sub_2408E2AF0(&qword_26AFCE160, MEMORY[0x263F454B0]);
    v73[0] = a6;
    swift_retain();
    sub_2408DEC38((uint64_t)v28, (uint64_t)v71, a5, (uint64_t)v73, v70 & 1, (uint64_t)v17);
    if (v7)
    {
      sub_2408E318C((uint64_t)v28, type metadata accessor for SharedNewRecordsAlertData);
      sub_2408371B8((uint64_t)v73);
    }
    else
    {
      uint64_t v29 = a5;
      sub_2408371B8((uint64_t)v73);
      uint64_t v31 = v68;
      uint64_t v30 = v69;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v17, 1, v69) == 1)
      {
        sub_2408E318C((uint64_t)v28, type metadata accessor for SharedNewRecordsAlertData);
        sub_2408E318C((uint64_t)v17, (uint64_t (*)(void))sub_2408E3158);
        return MEMORY[0x263F8EE78];
      }
      else
      {
        char v32 = v64;
        uint64_t v71 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
        uint64_t v72 = v31 + 32;
        v71(v64, v17, v30);
        uint64_t v33 = v65;
        sub_240954078();
        uint64_t v34 = v62;
        uint64_t v35 = v29;
        uint64_t v36 = v63;
        (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v67, v35, v63);
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v66, v32, v30);
        uint64_t v37 = sub_2409540B8();
        os_log_type_t v38 = sub_240954C08();
        uint64_t v70 = v37;
        int v58 = v38;
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = swift_slowAlloc();
          uint64_t v57 = swift_slowAlloc();
          v73[0] = v57;
          *(_DWORD *)uint64_t v39 = 136446722;
          uint64_t v40 = sub_2409557A8();
          uint64_t v59 = 0;
          uint64_t v74 = sub_2408370E4(v40, v41, v73);
          sub_2409550B8();
          swift_bridgeObjectRelease();
          *(_WORD *)(v39 + 12) = 2080;
          uint64_t v42 = v67;
          uint64_t v43 = (void *)sub_240951F68();
          uint64_t v44 = sub_240951C78();
          unint64_t v46 = v45;

          uint64_t v47 = v64;
          uint64_t v74 = sub_2408370E4(v44, v46, v73);
          sub_2409550B8();
          uint64_t v30 = v69;
          swift_bridgeObjectRelease();
          uint64_t v48 = v42;
          char v32 = v47;
          (*(void (**)(char *, uint64_t))(v34 + 8))(v48, v63);
          *(_WORD *)(v39 + 22) = 2080;
          sub_2408E2AF0(&qword_268C915E8, MEMORY[0x263F45630]);
          uint64_t v49 = v66;
          uint64_t v50 = sub_2409555D8();
          uint64_t v74 = sub_2408370E4(v50, v51, v73);
          uint64_t v31 = v68;
          sub_2409550B8();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v31 + 8))(v49, v30);
          uint64_t v52 = v70;
          _os_log_impl(&dword_240818000, v70, (os_log_type_t)v58, "[%{public}s] Generated notification feed item for profile %s: %s", (uint8_t *)v39, 0x20u);
          uint64_t v53 = v57;
          swift_arrayDestroy();
          MEMORY[0x2456021C0](v53, -1, -1);
          MEMORY[0x2456021C0](v39, -1, -1);

          (*(void (**)(char *, uint64_t))(v60 + 8))(v65, v61);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v34 + 8))(v67, v36);
          (*(void (**)(char *, uint64_t))(v31 + 8))(v66, v30);

          (*(void (**)(char *, uint64_t))(v60 + 8))(v33, v61);
        }
        uint64_t v54 = (void (*)(unint64_t, char *, uint64_t))v71;
        sub_2408E2A24(0, &qword_26AFD05E0, MEMORY[0x263F45630], MEMORY[0x263F8E0F8]);
        unint64_t v55 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
        a6 = swift_allocObject();
        *(_OWORD *)(a6 + 16) = xmmword_240956800;
        v54(a6 + v55, v32, v30);
        sub_2408E318C((uint64_t)v28, type metadata accessor for SharedNewRecordsAlertData);
      }
    }
  }
  return a6;
}

void sub_2408DEC38(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v13 = (void *)MEMORY[0x245601B40]();
  sub_2408DF154(a3, a2, a1, a5, v6, a4, v6, a6);
}

uint64_t sub_2408DECD0@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v33 = a2;
  sub_2408E2A24(0, &qword_26AFCDDD0, (uint64_t (*)(uint64_t))sub_240840084, MEMORY[0x263EFDDF8]);
  uint64_t v6 = v5;
  uint64_t v37 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v30 - v7;
  sub_2408E2964(0, &qword_26AFCDFE0, (uint64_t (*)(uint64_t))sub_240840084, MEMORY[0x263EFDEA0]);
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v30 - v10;
  uint64_t v34 = sub_2409540C8();
  uint64_t v12 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  sub_240954078();
  id v16 = v15;
  id v17 = v15;
  uint64_t v18 = sub_2409540B8();
  os_log_type_t v19 = sub_240954C18();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    uint64_t v39 = v31;
    *(_DWORD *)uint64_t v20 = 136446466;
    char v32 = a3;
    uint64_t v21 = sub_2409557A8();
    uint64_t v33 = v6;
    uint64_t v38 = sub_2408370E4(v21, v22, &v39);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2082;
    uint64_t v38 = (uint64_t)v15;
    id v23 = v15;
    sub_2408484BC(0, qword_26AFD07C0);
    uint64_t v24 = sub_240954808();
    uint64_t v38 = sub_2408370E4(v24, v25, &v39);
    a3 = v32;
    sub_2409550B8();
    uint64_t v6 = v33;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240818000, v18, v19, "[%{public}s] Unable to generate notification feed item: %{public}s", (uint8_t *)v20, 0x16u);
    uint64_t v26 = v31;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v26, -1, -1);
    MEMORY[0x2456021C0](v20, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v34);
  uint64_t v39 = MEMORY[0x263F8EE78];
  sub_240840084(0);
  sub_2409543A8();
  sub_2408484BC(0, qword_26AFD07C0);
  sub_240954368();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v8, v6);
  sub_24086FCD8();
  uint64_t v27 = v36;
  uint64_t v28 = sub_240954498();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v11, v27);
  *a3 = v28;
  return result;
}

uint64_t sub_2408DF154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v70 = a7;
  uint64_t v66 = a6;
  uint64_t v69 = a5;
  int v68 = a4;
  uint64_t v93 = a3;
  uint64_t v90 = a2;
  uint64_t v78 = a8;
  uint64_t v89 = type metadata accessor for SharedNewRecordsAlertData(0);
  uint64_t v63 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v64 = v9;
  uint64_t v67 = (uint64_t)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_240951FB8();
  uint64_t v62 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v61 = v10;
  uint64_t v80 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408E2A24(0, &qword_268C90A48, MEMORY[0x263F45770], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v77 = (char *)&v60 - v12;
  uint64_t v13 = sub_240951838();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v76 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_240952208();
  uint64_t v87 = *(void *)(v15 - 8);
  uint64_t v88 = v15;
  MEMORY[0x270FA5388](v15);
  v84 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_240951A28();
  uint64_t v85 = *(void *)(v17 - 8);
  uint64_t v86 = v17;
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v75 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  v83 = (char *)&v60 - v20;
  uint64_t v73 = sub_240951C08();
  uint64_t v72 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  uint64_t v74 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_240951E78();
  uint64_t v79 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  v82 = (char *)&v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_2409525A8();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v60 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_2409528B8();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)&v60 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v29 + 104))(v31, *MEMORY[0x263F45FE8], v28);
  (*(void (**)(char *, void, uint64_t))(v25 + 104))(v27, *MEMORY[0x263F45E90], v24);
  uint64_t v81 = a1;
  char v32 = (void *)sub_240951F68();
  uint64_t v71 = sub_240953278();

  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  sub_2408E2AF0(&qword_268C915F0, (void (*)(uint64_t))type metadata accessor for SharedNewRecordsAlertData);
  uint64_t v33 = v89;
  uint64_t v34 = v91;
  sub_2409517A8();
  if (v34) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v90 = 0;
  uint64_t v91 = v22;
  type metadata accessor for CategoryUpdateViewController();
  (*(void (**)(char *, void, uint64_t))(v72 + 104))(v74, *MEMORY[0x263F45548], v73);
  sub_240951F68();
  sub_240951CC8();
  sub_240951F38();
  sub_240951D18();
  sub_2408371B8((uint64_t)&v92);
  uint64_t v36 = v93;
  uint64_t v37 = v93 + *(int *)(v33 + 32);
  uint64_t v38 = v86;
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v85 + 16);
  uint64_t v40 = v83;
  v39(v83, v37, v86);
  v39(v75, (uint64_t)v40, v38);
  sub_240951828();
  unint64_t v41 = v84;
  sub_2409521E8();
  uint64_t v42 = v87;
  uint64_t v43 = v77;
  uint64_t v44 = v41;
  uint64_t v45 = v88;
  (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v77, v44, v88);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v43, 0, 1, v45);
  sub_240951DD8();
  unint64_t v46 = (void *)sub_240951F68();
  uint64_t v47 = (void *)sub_240951C98();
  LOBYTE(v43) = sub_240951C88();

  uint64_t v48 = v78;
  if (v43)
  {
    (*(void (**)(char *, uint64_t))(v87 + 8))(v84, v88);
    (*(void (**)(char *, uint64_t))(v85 + 8))(v83, v86);
    uint64_t v49 = v91;
    uint64_t v50 = v79;
    unint64_t v51 = v82;
  }
  else
  {
    uint64_t v52 = v62;
    uint64_t v53 = v65;
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v80, v81, v65);
    uint64_t v54 = v67;
    sub_2408E46C0(v36, v67, type metadata accessor for SharedNewRecordsAlertData);
    sub_2408690E0(v66, (uint64_t)&v92);
    unint64_t v55 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
    unint64_t v56 = (v61 + *(unsigned __int8 *)(v63 + 80) + v55) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
    unint64_t v57 = (v64 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v58 = swift_allocObject();
    *(unsigned char *)(v58 + 16) = v68 & 1;
    *(void *)(v58 + 24) = v69;
    (*(void (**)(unint64_t, char *, uint64_t))(v52 + 32))(v58 + v55, v80, v53);
    sub_2408E44CC(v54, v58 + v56, type metadata accessor for SharedNewRecordsAlertData);
    sub_24083AB20(&v92, v58 + v57);
    *(void *)(v58 + ((v57 + 47) & 0xFFFFFFFFFFFFFFF8)) = v70;
    uint64_t v59 = v82;
    sub_240951D28();
    (*(void (**)(char *, uint64_t))(v87 + 8))(v84, v88);
    (*(void (**)(char *, uint64_t))(v85 + 8))(v83, v86);
    uint64_t v49 = v91;
    uint64_t v50 = v79;
    unint64_t v51 = v59;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v50 + 32))(v48, v51, v49);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v48, 0, 1, v49);
}

uint64_t sub_2408DFB80(uint64_t a1, char a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = sub_2409540C8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    sub_2408DFE10(a4, a5, a6);
    sub_24083EDCC(0, &qword_268C915F8);
    sub_2408484BC(0, qword_26AFD07C0);
    sub_2409542F8();
    return swift_release();
  }
  else
  {
    sub_2409540A8();
    uint64_t v15 = sub_2409540B8();
    os_log_type_t v16 = sub_240954C38();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v22 = v18;
      *(_DWORD *)uint64_t v17 = 136315138;
      uint64_t v19 = sub_2409557A8();
      uint64_t v21 = sub_2408370E4(v19, v20, &v22);
      sub_2409550B8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240818000, v15, v16, "%s Not generating notification for shared lab updates", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v18, -1, -1);
      MEMORY[0x2456021C0](v17, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_2408DFE10(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v99 = a3;
  uint64_t v103 = a2;
  id v105 = a1;
  uint64_t v5 = type metadata accessor for SharedNewRecordsAlertData(0);
  uint64_t v89 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v90 = v6;
  uint64_t v91 = (uint64_t)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_240951FB8();
  uint64_t v87 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  uint64_t v85 = v7;
  uint64_t v86 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_240953BE8();
  uint64_t v83 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  v82 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408E34E8();
  uint64_t v93 = *(void *)(v9 - 8);
  uint64_t v94 = v9;
  MEMORY[0x270FA5388](v9);
  long long v92 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408E3670();
  uint64_t v98 = v11;
  uint64_t v96 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  v95 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408E3860();
  uint64_t v100 = *(void *)(v13 - 8);
  uint64_t v101 = v13;
  MEMORY[0x270FA5388](v13);
  v97 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_2409540C8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v80 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  unint64_t v20 = (char *)&v73 - v19;
  sub_2409540A8();
  uint64_t v21 = sub_2409540B8();
  os_log_type_t v22 = sub_240954C38();
  BOOL v23 = os_log_type_enabled(v21, v22);
  uint64_t v107 = v4;
  if (v23)
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v106 = v5;
    uint64_t v25 = v24;
    uint64_t v26 = swift_slowAlloc();
    *(void *)&long long v109 = v26;
    *(_DWORD *)uint64_t v25 = 136446466;
    uint64_t v27 = sub_2409557A8();
    uint64_t v108 = sub_2408370E4(v27, v28, (uint64_t *)&v109);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    uint64_t v108 = sub_2408370E4(0xD000000000000051, 0x800000024095E140, (uint64_t *)&v109);
    sub_2409550B8();
    _os_log_impl(&dword_240818000, v21, v22, "[%{public}s] %s running", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v26, -1, -1);
    MEMORY[0x2456021C0](v25, -1, -1);
  }

  uint64_t v29 = *(void (**)(char *, uint64_t))(v16 + 8);
  v29(v20, v15);
  uint64_t v81 = sub_240951F58();
  uint64_t v79 = sub_240951F68();
  sub_240951C78();
  *(void *)&long long v109 = 0;
  *((void *)&v109 + 1) = 0xE000000000000000;
  sub_2409552A8();
  swift_bridgeObjectRelease();
  *(void *)&long long v109 = 0xD000000000000022;
  *((void *)&v109 + 1) = 0x800000024095E110;
  sub_2409548A8();
  swift_bridgeObjectRelease();
  uint64_t v30 = (void *)*((void *)&v109 + 1);
  uint64_t v102 = v109;
  sub_240951F38();
  sub_2408304E8(&v109, v110);
  uint64_t v106 = sub_240951EB8();
  uint64_t v78 = v31;
  sub_2408371B8((uint64_t)&v109);
  sub_240951948();
  uint64_t v77 = sub_240954AC8();
  uint64_t v76 = v32;
  uint64_t v33 = v80;
  sub_2409540A8();
  id v104 = v30;
  swift_bridgeObjectRetain_n();
  uint64_t v34 = sub_2409540B8();
  os_log_type_t v35 = sub_240954C38();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(void *)&long long v109 = v37;
    *(_DWORD *)uint64_t v36 = 136446466;
    uint64_t v75 = v16;
    uint64_t v38 = v107;
    uint64_t v39 = sub_2409557A8();
    uint64_t v74 = v15;
    uint64_t v108 = sub_2408370E4(v39, v40, (uint64_t *)&v109);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 12) = 2080;
    unint64_t v41 = (unint64_t)v104;
    swift_bridgeObjectRetain();
    uint64_t v108 = sub_2408370E4(v102, v41, (uint64_t *)&v109);
    sub_2409550B8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_240818000, v34, v35, "[%{public}s] Proceeding with notification generation for %s", (uint8_t *)v36, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v37, -1, -1);
    MEMORY[0x2456021C0](v36, -1, -1);

    v29(v33, v74);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v29(v33, v15);
    uint64_t v38 = v107;
  }
  uint64_t v42 = v83;
  uint64_t v43 = v82;
  uint64_t v44 = v84;
  (*(void (**)(char *, void, uint64_t))(v83 + 104))(v82, *MEMORY[0x263F444C0], v84);
  type metadata accessor for SharedConceptFeedItemGenerator(0);
  sub_2408E2AF0(&qword_26AFCD600, (void (*)(uint64_t))type metadata accessor for SharedConceptFeedItemGenerator);
  uint64_t v45 = (void *)v81;
  uint64_t v46 = sub_2409539E8();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
  *(void *)&long long v109 = v46;
  uint64_t v47 = v87;
  uint64_t v48 = v86;
  uint64_t v49 = v88;
  (*(void (**)(char *, id, uint64_t))(v87 + 16))(v86, v105, v88);
  unint64_t v50 = (*(unsigned __int8 *)(v47 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  unint64_t v51 = (v85 + v50 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v52 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v47 + 32))(v52 + v50, v48, v49);
  *(void *)(v52 + v51) = v38;
  sub_2409542E8();
  sub_240841250();
  sub_2408E26FC(0);
  sub_2408E2AF0((unint64_t *)&qword_26AFD0468, (void (*)(uint64_t))sub_240841250);
  sub_2408E2764();
  uint64_t v53 = v92;
  sub_2409545D8();
  swift_release();
  swift_release();
  uint64_t v54 = v91;
  sub_2408E46C0(v103, v91, type metadata accessor for SharedNewRecordsAlertData);
  unint64_t v55 = (*(unsigned __int8 *)(v89 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
  unint64_t v56 = (v90 + v55 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v57 = (void *)swift_allocObject();
  id v58 = v104;
  v57[2] = v102;
  v57[3] = v58;
  uint64_t v59 = v76;
  v57[4] = v77;
  v57[5] = v59;
  uint64_t v60 = (uint64_t)v57 + v55;
  uint64_t v61 = (void *)v79;
  v57[6] = v45;
  v57[7] = v61;
  sub_2408E44CC(v54, v60, type metadata accessor for SharedNewRecordsAlertData);
  uint64_t v62 = (void *)((char *)v57 + v56);
  uint64_t v63 = v78;
  *uint64_t v62 = v106;
  v62[1] = v63;
  *(void *)((char *)v57 + ((v56 + 23) & 0xFFFFFFFFFFFFFFF8)) = v38;
  id v105 = v61;
  swift_unknownObjectRetain();
  id v104 = v45;
  sub_2409542E8();
  sub_2408E377C();
  sub_2408E2964(0, &qword_268C91620, (uint64_t (*)(uint64_t))sub_2408E377C, MEMORY[0x263EFDCF0]);
  sub_2408E2AF0(&qword_268C91638, (void (*)(uint64_t))sub_2408E34E8);
  sub_2408E37FC(&qword_268C91630, &qword_268C91620, (uint64_t (*)(uint64_t))sub_2408E377C);
  uint64_t v65 = v94;
  uint64_t v64 = v95;
  sub_240954578();
  swift_release();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v53, v65);
  sub_2408690E0(v99, (uint64_t)&v109);
  uint64_t v66 = swift_allocObject();
  sub_24083AB20(&v109, v66 + 16);
  *(void *)(v66 + 56) = v107;
  uint64_t v67 = swift_allocObject();
  *(void *)(v67 + 16) = sub_2408E3DA8;
  *(void *)(v67 + 24) = v66;
  sub_2409542E8();
  sub_24083EDCC(0, &qword_268C915F8);
  sub_2408E391C();
  sub_2408E2AF0(&qword_268C91658, (void (*)(uint64_t))sub_2408E3670);
  sub_2408E39AC();
  uint64_t v69 = v97;
  uint64_t v68 = v98;
  sub_240954578();
  swift_release();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v64, v68);
  sub_2408E2AF0(&qword_268C91660, (void (*)(uint64_t))sub_2408E3860);
  uint64_t v70 = v101;
  uint64_t v71 = sub_240954498();

  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v69, v70);
  return v71;
}

uint64_t sub_2408E0BF0@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_2409540C8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409540A8();
  uint64_t v8 = sub_2409540B8();
  os_log_type_t v9 = sub_240954C38();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v17 = a1;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v18 = a2;
    uint64_t v11 = (uint8_t *)v10;
    uint64_t v12 = swift_slowAlloc();
    v20[0] = v12;
    *(_DWORD *)uint64_t v11 = 136446210;
    uint64_t v13 = sub_2409557A8();
    uint64_t v19 = sub_2408370E4(v13, v14, v20);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v8, v9, "[%{public}s] Update notifications are enabled", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v12, -1, -1);
    uint64_t v15 = v11;
    a2 = v18;
    MEMORY[0x2456021C0](v15, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_240951F38();
  sub_2408304E8(v20, v20[3]);
  *a2 = sub_240951EC8();
  return sub_2408371B8((uint64_t)v20);
}

uint64_t sub_2408E0E18@<X0>(uint64_t a1@<X0>, void *a2@<X5>, void *a3@<X6>, char *a4@<X7>, uint64_t *a5@<X8>, uint64_t a6, uint64_t a7)
{
  uint64_t v45 = a2;
  uint64_t v46 = a3;
  uint64_t v44 = a1;
  unint64_t v57 = a5;
  unint64_t v50 = a4;
  uint64_t v51 = a7;
  uint64_t v52 = a6;
  sub_2408E3FC4(0, &qword_268C91688, (void (*)(uint64_t))sub_2408E391C, (void (*)(uint64_t))sub_2408E377C, (void (*)(void))sub_2408E39AC);
  uint64_t v55 = *(void *)(v7 - 8);
  uint64_t v56 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v54 = (char *)&v44 - v8;
  uint64_t v9 = sub_2409540C8();
  uint64_t v48 = *(void *)(v9 - 8);
  uint64_t v49 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_240951A98();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v53 = sub_2409522C8();
  uint64_t v13 = *(void *)(v53 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = MEMORY[0x270FA5388](v53);
  uint64_t v47 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v44 - v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_240951A88();
  sub_240952298();
  uint64_t v18 = (uint64_t)v50;
  unint64_t v50 = v17;
  uint64_t v19 = (void *)sub_2408E141C(v45, v46, v44, v18, (uint64_t)v17);
  sub_2409540A8();
  id v20 = v19;
  uint64_t v21 = sub_2409540B8();
  os_log_type_t v22 = sub_240954C38();
  int v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    LODWORD(v46) = v23;
    uint64_t v25 = v24;
    uint64_t v45 = (void *)swift_slowAlloc();
    v59[0] = (uint64_t)v45;
    *(_DWORD *)uint64_t v25 = 136446466;
    uint64_t v26 = sub_2409557A8();
    uint64_t v58 = sub_2408370E4(v26, v27, v59);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    uint64_t v44 = v25 + 14;
    id v28 = v20;
    id v29 = (id)HKSensitiveLogItem();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v30 = sub_2409547E8();
    id v31 = v20;
    unint64_t v33 = v32;

    uint64_t v58 = sub_2408370E4(v30, v33, v59);
    sub_2409550B8();

    id v20 = v31;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v21, (os_log_type_t)v46, "[%{public}s] Generating notification: %s", (uint8_t *)v25, 0x16u);
    uint64_t v34 = v45;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v34, -1, -1);
    MEMORY[0x2456021C0](v25, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v49);
  swift_getObjectType();
  uint64_t v58 = sub_240952278();
  os_log_type_t v35 = v47;
  uint64_t v36 = v50;
  uint64_t v37 = v53;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v47, v50, v53);
  unint64_t v38 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v39 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v39 + v38, v35, v37);
  sub_2408E391C();
  sub_2408E377C();
  sub_2408E39AC();
  unint64_t v40 = v54;
  sub_2409544F8();
  swift_release();
  swift_release();
  sub_2408E4164();
  uint64_t v41 = v56;
  uint64_t v42 = sub_240954498();

  (*(void (**)(char *, uint64_t))(v55 + 8))(v40, v41);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v36, v37);
  *unint64_t v57 = v42;
  return result;
}

uint64_t sub_2408E141C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)MEMORY[0x245601B40]();
  sub_2408E1A3C(a1, a3, a4, v5, a5, a2, v5, &v13);
  return v13;
}

id sub_2408E14A8@<X0>(id *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id v9 = *a1;
  sub_2408E377C();
  uint64_t v6 = (char *)a3 + *(int *)(v5 + 48);
  *a3 = v9;
  uint64_t v7 = sub_2409522C8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v6, a2, v7);

  return v9;
}

uint64_t sub_2408E154C(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v34 = a4;
  uint64_t v36 = a3;
  uint64_t v37 = a1;
  sub_2408E3E48();
  uint64_t v6 = v5;
  uint64_t v39 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v38 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2409522C8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2409540C8();
  uint64_t v35 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409540A8();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  uint64_t v15 = sub_2409540B8();
  os_log_type_t v16 = sub_240954C38();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v33 = a2;
    uint64_t v18 = v17;
    uint64_t v31 = swift_slowAlloc();
    uint64_t v41 = v31;
    *(_DWORD *)uint64_t v18 = 136446466;
    uint64_t v19 = sub_2409557A8();
    uint64_t v32 = v12;
    uint64_t v40 = sub_2408370E4(v19, v20, &v41);
    uint64_t v34 = v6;
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    uint64_t v21 = sub_2409522A8();
    uint64_t v40 = sub_2408370E4(v21, v22, &v41);
    uint64_t v6 = v34;
    sub_2409550B8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    _os_log_impl(&dword_240818000, v15, v16, "[%{public}s] Saving content state: %s", (uint8_t *)v18, 0x16u);
    uint64_t v23 = v31;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v23, -1, -1);
    MEMORY[0x2456021C0](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v32);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v12);
  }
  sub_2408304E8(v36, v36[3]);
  uint64_t v41 = sub_240952168();
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v37;
  *(void *)(v24 + 16) = v37;
  sub_2408E3F04();
  sub_24083EDCC(0, &qword_268C915F8);
  sub_2408E2AF0(&qword_268C91678, (void (*)(uint64_t))sub_2408E3F04);
  id v26 = v25;
  unint64_t v27 = v38;
  sub_2409544F8();
  swift_release();
  swift_release();
  sub_2408E2AF0(&qword_268C91680, (void (*)(uint64_t))sub_2408E3E48);
  uint64_t v28 = sub_240954498();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v27, v6);
  return v28;
}

uint64_t sub_2408E1A3C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v77 = a7;
  uint64_t v94 = a6;
  uint64_t v90 = a5;
  uint64_t v92 = a4;
  uint64_t v85 = a2;
  uint64_t v86 = a3;
  id v84 = a1;
  uint64_t v96 = a8;
  uint64_t v79 = sub_2409540C8();
  uint64_t v78 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v80 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240873DF8(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v91 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408E4200(0);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v89 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v98 = (uint64_t)&v77 - v15;
  uint64_t v100 = sub_240952B98();
  uint64_t v16 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  uint64_t v18 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240878630(0);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_240951A98();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v77 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v95 = objc_msgSend(a1, sel_profileIdentifier, v77);
  id v26 = objc_msgSend(v95, sel_identifier);
  sub_240951A78();

  uint64_t v101 = sub_240951A48();
  uint64_t v97 = v27;
  uint64_t v87 = v23;
  uint64_t v88 = v22;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  id v99 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F1DEF0]), sel_init);
  uint64_t v28 = sub_240951AB8();
  uint64_t v83 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
  v83(v21, 1, 1, v28);
  sub_240952B88();
  sub_2409535A8();
  id v29 = *(void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v81 = v16 + 8;
  v82 = v29;
  v29(v18, v100);
  sub_2408E318C((uint64_t)v21, (uint64_t (*)(void))sub_240878630);
  sub_240954798();
  swift_bridgeObjectRelease();
  uint64_t v30 = (void *)sub_240954788();
  swift_bridgeObjectRelease();
  id v31 = v99;
  objc_msgSend(v99, sel_setTitle_, v30);

  v83(v21, 1, 1, v28);
  sub_240952B78();
  sub_2409535A8();
  v82(v18, v100);
  sub_2408E318C((uint64_t)v21, (uint64_t (*)(void))sub_240878630);
  sub_2408E4234();
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_2409562B0;
  uint64_t v33 = sub_240952148();
  uint64_t v35 = v34;
  *(void *)(v32 + 56) = MEMORY[0x263F8D310];
  *(void *)(v32 + 64) = sub_240853EA8();
  *(void *)(v32 + 32) = v33;
  *(void *)(v32 + 40) = v35;
  uint64_t v36 = *(void *)(v86 + *(int *)(type metadata accessor for SharedNewRecordsAlertData(0) + 20));
  uint64_t v37 = MEMORY[0x263F8D750];
  *(void *)(v32 + 96) = MEMORY[0x263F8D6C8];
  *(void *)(v32 + 104) = v37;
  *(void *)(v32 + 72) = v36;
  sub_240954798();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v38 = (void *)sub_240954788();
  swift_bridgeObjectRelease();
  objc_msgSend(v31, sel_setBody_, v38);

  uint64_t v39 = (void *)sub_240954788();
  objc_msgSend(v31, sel_setCategoryIdentifier_, v39);

  uint64_t v40 = (void *)sub_240954788();
  objc_msgSend(v31, sel_setThreadIdentifier_, v40);

  id v41 = objc_msgSend(v84, sel_profileIdentifier);
  id v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F42A28]), sel_initWithProfileIdentifier_, v41);

  id v43 = objc_msgSend(v42, sel_URLForSharingOverview);
  if (v43)
  {
    uint64_t v44 = v43;
    uint64_t v45 = (uint64_t)v89;
    sub_240951908();

    uint64_t v46 = sub_240951918();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 0, 1, v46);
  }
  else
  {
    uint64_t v47 = sub_240951918();
    uint64_t v45 = (uint64_t)v89;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v89, 1, 1, v47);
  }
  uint64_t v48 = v98;
  sub_2408E44CC(v45, v98, (uint64_t (*)(void))sub_2408E4200);
  uint64_t v49 = (uint64_t)v91;
  sub_2409522B8();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v87 + 56))(v49, 0, 1, v88);
  type metadata accessor for SharedConceptFeedItemGenerator(0);
  sub_2408E2AF0(&qword_26AFCD600, (void (*)(uint64_t))type metadata accessor for SharedConceptFeedItemGenerator);
  sub_2409539F8();
  sub_2408E318C(v49, (uint64_t (*)(void))sub_240873DF8);
  unint64_t v50 = (void *)sub_240954698();
  swift_bridgeObjectRelease();
  objc_msgSend(v31, sel_setUserInfo_, v50);

  uint64_t v51 = (void *)sub_240953A08();
  objc_msgSend(v31, sel_setSound_, v51);

  sub_2408E4658(0, (unint64_t *)&qword_26AFCF418);
  uint64_t v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = xmmword_2409568A0;
  uint64_t v53 = (void *)v93;
  uint64_t v54 = v94;
  uint64_t v55 = sub_2409539D8();
  if (v53)
  {
    *(void *)(v52 + 16) = 0;
    swift_release();
    uint64_t v56 = v80;
    sub_2409540A8();
    id v57 = v53;
    id v58 = v54;
    id v59 = v53;
    id v60 = v58;
    uint64_t v61 = sub_2409540B8();
    os_log_type_t v62 = sub_240954C18();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = swift_slowAlloc();
      uint64_t v93 = swift_slowAlloc();
      uint64_t v102 = v93;
      *(_DWORD *)uint64_t v63 = 136315650;
      uint64_t v64 = sub_2409557A8();
      uint64_t v100 = (uint64_t)v42;
      uint64_t v104 = sub_2408370E4(v64, v65, &v102);
      sub_2409550B8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v63 + 12) = 2080;
      uint64_t v66 = sub_240951C78();
      uint64_t v104 = sub_2408370E4(v66, v67, &v102);
      sub_2409550B8();

      id v42 = (id)v100;
      swift_bridgeObjectRelease();
      *(_WORD *)(v63 + 22) = 2080;
      uint64_t v104 = (uint64_t)v53;
      id v68 = v53;
      sub_2408484BC(0, qword_26AFD07C0);
      uint64_t v69 = sub_240954808();
      uint64_t v104 = sub_2408370E4(v69, v70, &v102);
      uint64_t v48 = v98;
      sub_2409550B8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_240818000, v61, v62, "[%s] [Contact Photo] Could not create notification attachment for %s. %s", (uint8_t *)v63, 0x20u);
      uint64_t v71 = v93;
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v71, -1, -1);
      MEMORY[0x2456021C0](v63, -1, -1);

      (*(void (**)(char *, uint64_t))(v78 + 8))(v80, v79);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v78 + 8))(v56, v79);
    }
    id v31 = v99;
  }
  else
  {
    *(void *)(v52 + 32) = v55;
    uint64_t v102 = v52;
    sub_2409549B8();
    sub_24083EDCC(0, &qword_268C91698);
    uint64_t v72 = (void *)sub_240954988();
    swift_bridgeObjectRelease();
    objc_msgSend(v31, sel_setAttachments_, v72);
  }
  uint64_t v102 = 0;
  unint64_t v103 = 0xE000000000000000;
  sub_2409552A8();
  swift_bridgeObjectRelease();
  uint64_t v102 = 0xD000000000000022;
  unint64_t v103 = 0x800000024095E110;
  sub_2409548A8();
  swift_bridgeObjectRelease();
  id v73 = v31;
  uint64_t v74 = (void *)sub_240954788();
  swift_bridgeObjectRelease();
  id v75 = objc_msgSend(self, sel_requestWithIdentifier_content_trigger_, v74, v73, 0);

  uint64_t result = sub_2408E318C(v48, (uint64_t (*)(void))sub_2408E4200);
  *uint64_t v96 = v75;
  return result;
}

void sub_2408E26FC(uint64_t a1)
{
}

void sub_2408E2730(uint64_t a1)
{
}

uint64_t sub_2408E2764()
{
  return sub_2408E2AF0(&qword_26AFCF288, sub_2408E26FC);
}

void sub_2408E2798()
{
  if (!qword_26AFCF1C0)
  {
    sub_2408E2898();
    sub_2408E3FC4(255, &qword_26AFCEEE8, sub_2408E26FC, sub_2408E2730, (void (*)(void))sub_2408E2764);
    sub_2408E2AF0(&qword_26AFCEEF0, (void (*)(uint64_t))sub_2408E2898);
    sub_2408E2B38();
    unint64_t v0 = sub_240954278();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF1C0);
    }
  }
}

void sub_2408E2898()
{
  if (!qword_26AFCEEF8)
  {
    sub_2408E2964(255, &qword_26AFCF2A0, (uint64_t (*)(uint64_t))sub_2408E29F0, MEMORY[0x263EFDCF0]);
    sub_2408E2A88();
    sub_2408E37FC(&qword_26AFCF298, &qword_26AFCF2A0, (uint64_t (*)(uint64_t))sub_2408E29F0);
    unint64_t v0 = sub_2409541C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCEEF8);
    }
  }
}

void sub_2408E2964(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    uint64_t v8 = sub_2408484BC(255, qword_26AFD07C0);
    unint64_t v9 = a4(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_2408E29F0(uint64_t a1)
{
}

void sub_2408E2A24(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2408E2A88()
{
  if (!qword_26AFCE2A8)
  {
    sub_2408E2730(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AFCE2A8);
    }
  }
}

uint64_t sub_2408E2AF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2408E2B38()
{
  unint64_t result = qword_26AFCEEE0;
  if (!qword_26AFCEEE0)
  {
    sub_2408E3FC4(255, &qword_26AFCEEE8, sub_2408E26FC, sub_2408E2730, (void (*)(void))sub_2408E2764);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCEEE0);
  }
  return result;
}

void sub_2408E2BD4()
{
  if (!qword_26AFCF098)
  {
    sub_2408E2798();
    sub_240840084(255);
    sub_2408E2AF0(&qword_26AFCF1B8, (void (*)(uint64_t))sub_2408E2798);
    unint64_t v0 = sub_240954258();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF098);
    }
  }
}

void sub_2408E2C80()
{
  if (!qword_26AFCEFB8)
  {
    sub_2408E2BD4();
    sub_2408E2964(255, &qword_26AFCDC88, (uint64_t (*)(uint64_t))sub_240840084, MEMORY[0x263EFDCF0]);
    sub_2408E2AF0(&qword_26AFCF090, (void (*)(uint64_t))sub_2408E2BD4);
    sub_2408E37FC((unint64_t *)&qword_26AFCDC80, &qword_26AFCDC88, (uint64_t (*)(uint64_t))sub_240840084);
    unint64_t v0 = sub_2409541F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCEFB8);
    }
  }
}

uint64_t sub_2408E2D8C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_2408E2DC4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2408DCDA8(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_2408E2DCC()
{
  uint64_t v1 = sub_240951FB8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_2408E2E78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_240951FB8() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v2 + v7);
  uint64_t v9 = *(void *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_2408DDA64(a1, v2 + v6, v8, v9, a2);
}

uint64_t sub_2408E2F34()
{
  uint64_t v1 = sub_240951FB8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_2408E3024(uint64_t a1, int a2)
{
  uint64_t v5 = *(void *)(sub_240951FB8() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2408DE3EC(a1, a2, *(void *)(v2 + 16), *(void (**)(char *, char *, uint64_t))(v2 + 24), v2 + v6, *(void *)(v2 + v7), *(void *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_2408E30DC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v6 = *(uint64_t (**)(uint64_t, void))(v2 + 16);
  sub_2408E2A88();
  uint64_t result = v6(a1, *(unsigned __int8 *)(a1 + *(int *)(v7 + 48)));
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_2408E3140()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2408E3150@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2408DECD0(a1, *(void *)(v2 + 16), a2);
}

void sub_2408E3158(uint64_t a1)
{
}

uint64_t sub_2408E318C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2408E31EC()
{
  uint64_t v1 = sub_240951FB8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  unint64_t v6 = (int *)(type metadata accessor for SharedNewRecordsAlertData(0) - 8);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)v6 + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = v3 | v7 | 7;
  unint64_t v10 = (*(void *)(*(void *)v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v11 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v0 + v8, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = v0 + v8 + v6[10];
  uint64_t v13 = sub_240951A28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  sub_2408371B8(v0 + v10);

  return MEMORY[0x270FA0238](v0, ((v10 + 47) & 0xFFFFFFFFFFFFFFF8) + 8, v9);
}

uint64_t sub_2408E33D4(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_240951FB8() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for SharedNewRecordsAlertData(0) - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  char v8 = *(unsigned char *)(v1 + 16);
  uint64_t v9 = *(void *)(v1 + 24);
  uint64_t v10 = v1 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8);

  return sub_2408DFB80(a1, v8, v9, (void *)(v1 + v4), v1 + v7, v10);
}

void sub_2408E34E8()
{
  if (!qword_268C91600)
  {
    sub_2408E26FC(255);
    sub_2408E35A4();
    sub_2408E2764();
    sub_2408E2AF0(&qword_268C91610, (void (*)(uint64_t))sub_2408E35A4);
    unint64_t v0 = sub_240954278();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C91600);
    }
  }
}

void sub_2408E35A4()
{
  if (!qword_268C91608)
  {
    sub_240841250();
    sub_2408484BC(255, qword_26AFD07C0);
    sub_2408E2AF0((unint64_t *)&qword_26AFD0468, (void (*)(uint64_t))sub_240841250);
    unint64_t v0 = sub_2409541A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C91608);
    }
  }
}

void sub_2408E3670()
{
  if (!qword_268C91618)
  {
    sub_2408E2964(255, &qword_268C91620, (uint64_t (*)(uint64_t))sub_2408E377C, MEMORY[0x263EFDCF0]);
    sub_2408E34E8();
    sub_2408E37FC(&qword_268C91630, &qword_268C91620, (uint64_t (*)(uint64_t))sub_2408E377C);
    sub_2408E2AF0(&qword_268C91638, (void (*)(uint64_t))sub_2408E34E8);
    unint64_t v0 = sub_240954278();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C91618);
    }
  }
}

void sub_2408E377C()
{
  if (!qword_268C91628)
  {
    sub_24083EDCC(255, &qword_268C915F8);
    sub_2409522C8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C91628);
    }
  }
}

uint64_t sub_2408E37FC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2408E2964(255, a2, a3, MEMORY[0x263EFDCF0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2408E3860()
{
  if (!qword_268C91640)
  {
    sub_2408E391C();
    sub_2408E3670();
    sub_2408E39AC();
    sub_2408E2AF0(&qword_268C91658, (void (*)(uint64_t))sub_2408E3670);
    unint64_t v0 = sub_240954278();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C91640);
    }
  }
}

void sub_2408E391C()
{
  if (!qword_268C91648)
  {
    sub_24083EDCC(255, &qword_268C915F8);
    sub_2408484BC(255, qword_26AFD07C0);
    unint64_t v0 = sub_240954308();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C91648);
    }
  }
}

uint64_t sub_2408E39AC()
{
  return sub_2408E2AF0(&qword_268C91650, (void (*)(uint64_t))sub_2408E391C);
}

uint64_t sub_2408E39E0()
{
  uint64_t v1 = sub_240951FB8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_2408E3A7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_240951FB8() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_2408E0BF0(v4, a1);
}

uint64_t sub_2408E3B28()
{
  uint64_t v1 = (int *)(type metadata accessor for SharedNewRecordsAlertData(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 64) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v6 + v1[10];
  uint64_t v9 = sub_240951A28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_2408E3CA4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for SharedNewRecordsAlertData(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2408E0E18(a1, *(void **)(v2 + 48), *(void **)(v2 + 56), (char *)(v2 + v6), a2, *(void *)(v2 + v7), *(void *)(v2 + v7 + 8));
}

uint64_t sub_2408E3D70()
{
  sub_2408371B8(v0 + 16);

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_2408E3DA8(void *a1, uint64_t a2)
{
  return sub_2408E154C(a1, a2, (void *)(v2 + 16), *(void *)(v2 + 56));
}

uint64_t sub_2408E3DB4()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2408E3DEC@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, char *))(v2 + 16);
  uint64_t v6 = *(void *)a1;
  sub_2408E377C();
  uint64_t result = v5(v6, &a1[*(int *)(v7 + 48)]);
  *a2 = result;
  return result;
}

void sub_2408E3E48()
{
  if (!qword_268C91668)
  {
    sub_2408E3F04();
    sub_24083EDCC(255, &qword_268C915F8);
    sub_2408E2AF0(&qword_268C91678, (void (*)(uint64_t))sub_2408E3F04);
    unint64_t v0 = sub_2409541C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C91668);
    }
  }
}

void sub_2408E3F04()
{
  if (!qword_268C91670)
  {
    sub_2408484BC(255, qword_26AFD07C0);
    unint64_t v0 = sub_240954308();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C91670);
    }
  }
}

uint64_t sub_2408E3F80()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_2408E3FB8@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 16);
  *a1 = v2;
  return v2;
}

void sub_2408E3FC4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    unint64_t v8 = sub_2409541C8();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2408E4054()
{
  uint64_t v1 = sub_2409522C8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

id sub_2408E40E4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_2409522C8() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_2408E14A8(a1, v6, a2);
}

unint64_t sub_2408E4164()
{
  unint64_t result = qword_268C91690;
  if (!qword_268C91690)
  {
    sub_2408E3FC4(255, &qword_268C91688, (void (*)(uint64_t))sub_2408E391C, (void (*)(uint64_t))sub_2408E377C, (void (*)(void))sub_2408E39AC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91690);
  }
  return result;
}

void sub_2408E4200(uint64_t a1)
{
}

void sub_2408E4234()
{
  if (!qword_26AFD0610)
  {
    sub_2408484BC(255, (unint64_t *)&qword_26AFD0630);
    unint64_t v0 = sub_2409555E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD0610);
    }
  }
}

uint64_t sub_2408E429C()
{
  sub_2408E2730(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = sub_240951FB8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = type metadata accessor for SharedNewRecordsAlertData(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v0 + v3, 1, v9))
  {
    uint64_t v10 = sub_2409528B8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v0 + v3, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = v0 + v3 + *(int *)(v9 + 32);
    uint64_t v12 = sub_240951A28();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  unint64_t v13 = (((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + v7 + 16) & ~v7;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v13, v5);

  return MEMORY[0x270FA0238](v0, ((v8 + v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | v7 | 7);
}

uint64_t sub_2408E44CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2408E4534@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2408E2730(0);
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  unint64_t v7 = (*(void *)(*(void *)(v5 - 8) + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(sub_240951FB8() - 8);
  unint64_t v9 = (v7 + *(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v2 + v7);
  unint64_t v11 = *(void *)(v2 + v7 + 8);
  uint64_t v12 = *(void *)(v2 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_2408DDEDC(a1, v2 + v6, v10, v11, v2 + v9, v12, a2);
}

void sub_2408E4658(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_2409555E8();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_2408E46A0(uint64_t a1)
{
  return sub_2408DD0E8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

uint64_t sub_2408E46C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2408E472C()
{
  uint64_t v0 = sub_2409525A8();
  sub_2408BB348(v0, qword_26AFD08F0);
  uint64_t v1 = sub_24083F214(v0, (uint64_t)qword_26AFD08F0);
  uint64_t v2 = *MEMORY[0x263F45E98];
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t sub_2408E47B4@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X3>, unint64_t *a3@<X8>)
{
  v22[1] = a2;
  uint64_t v23 = a3;
  uint64_t v5 = sub_2409528B8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240951E78();
  v22[0] = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)v22 - v14;
  if (*a1)
  {
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F45FE8], v5);
    uint64_t v18 = (void *)sub_240951F68();
    sub_2408E4A8C((uint64_t)v8);
    if (v3)
    {

      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

    uint64_t v19 = v22[0];
    (*(void (**)(char *, char *, uint64_t))(v22[0] + 16))(v12, v15, v9);
    unint64_t v16 = sub_2408C3044(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v21 = *(void *)(v16 + 16);
    unint64_t v20 = *(void *)(v16 + 24);
    if (v21 >= v20 >> 1) {
      unint64_t v16 = sub_2408C3044(v20 > 1, v21 + 1, 1, v16);
    }
    uint64_t v17 = v23;
    *(void *)(v16 + 16) = v21 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v19 + 32))(v16+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v21, v12, v9);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v15, v9);
  }
  else
  {
    unint64_t v16 = MEMORY[0x263F8EE78];
    uint64_t v17 = v23;
  }
  *uint64_t v17 = v16;
  return result;
}

uint64_t sub_2408E4A8C(uint64_t a1)
{
  uint64_t v22 = sub_240951C08();
  uint64_t v19 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for RemovedCategoryFeedItemData();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *MEMORY[0x263F45F90];
  uint64_t v9 = sub_240952778();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = &v7[*(int *)(v5 + 20)];
  uint64_t v11 = sub_2409528B8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v10, a1, v11);
  uint64_t v12 = (void *)sub_240951F68();
  uint64_t v18 = sub_240953528();

  sub_240827554(&qword_268C916A8, (void (*)(uint64_t))type metadata accessor for RemovedCategoryFeedItemData);
  sub_2409517A8();
  if (v1)
  {
    sub_24083B114((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for RemovedCategoryFeedItemData);
    return swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for NavigationFeedItemViewController();
    (*(void (**)(char *, void, uint64_t))(v19 + 104))(v4, *MEMORY[0x263F454C8], v22);
    sub_240951F68();
    sub_240951CC8();
    sub_240951D78();
    uint64_t v14 = sub_2409520C8();
    uint64_t v16 = v15;
    uint64_t v17 = (void (*)(unsigned char *, void))sub_240951E38();
    sub_240940118(&v21, v14, v16);
    swift_bridgeObjectRelease();
    v17(v20, 0);
    return sub_24083B114((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for RemovedCategoryFeedItemData);
  }
}

uint64_t sub_2408E4DC0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24082EC88(0, &qword_26AFCDDD0, (uint64_t (*)(uint64_t))sub_240840084, MEMORY[0x263EFDDF8]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v38 = (char *)&v31 - v7;
  sub_24083F348(0, &qword_26AFCDFE0, MEMORY[0x263EFDEA0]);
  uint64_t v9 = v8;
  uint64_t v39 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v37 = sub_2409540C8();
  uint64_t v12 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  sub_240954058();
  id v16 = v15;
  id v17 = v15;
  uint64_t v18 = sub_2409540B8();
  os_log_type_t v19 = sub_240954C18();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v36 = a2;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v35 = v5;
    uint64_t v21 = (uint8_t *)v20;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v41 = v32;
    uint64_t v33 = v6;
    *(_DWORD *)uint64_t v21 = 136446210;
    id v31 = v21 + 4;
    uint64_t v40 = (uint64_t)v15;
    id v22 = v15;
    sub_24083F3C0();
    sub_240955658();
    uint64_t v34 = v9;
    id v23 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v24 = sub_240954808();
    uint64_t v40 = sub_2408370E4(v24, v25, &v41);
    uint64_t v6 = v33;
    sub_2409550B8();
    uint64_t v9 = v34;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240818000, v18, v19, "Error making feed item for record, hiding from UI: %{public}s", v21, 0xCu);
    uint64_t v26 = v32;
    a2 = v36;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v26, -1, -1);
    uint64_t v27 = v21;
    uint64_t v5 = v35;
    MEMORY[0x2456021C0](v27, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v37);
  uint64_t v40 = MEMORY[0x263F8EE78];
  sub_240840084(0);
  uint64_t v28 = v38;
  sub_2409543A8();
  sub_24083F3C0();
  sub_240954368();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v28, v5);
  sub_240841CB0((unint64_t *)&qword_26AFCDFD8, &qword_26AFCDFE0, MEMORY[0x263EFDEA0]);
  uint64_t v29 = sub_240954498();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v11, v9);
  *a2 = v29;
  return result;
}

uint64_t sub_2408E5258@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_240864F38();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_2409540C8();
  uint64_t v9 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  sub_240954058();
  id v13 = v12;
  id v14 = v12;
  uint64_t v15 = sub_2409540B8();
  os_log_type_t v16 = sub_240954C18();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v35 = v5;
    uint64_t v18 = v17;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v39 = v33;
    *(_DWORD *)uint64_t v18 = 136446466;
    unint64_t v38 = sub_240854CC4();
    sub_2408E59A4(0, &qword_268C916A0, (void (*)(uint64_t))sub_240854CC4);
    uint64_t v34 = v6;
    uint64_t v19 = sub_2409547E8();
    uint64_t v36 = a2;
    unint64_t v38 = sub_2408370E4(v19, v20, &v39);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    v32[1] = v18 + 14;
    unint64_t v38 = (unint64_t)v12;
    id v21 = v12;
    id v22 = v12;
    sub_24083F3C0();
    sub_240955658();
    id v23 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v24 = sub_2409547E8();
    unint64_t v26 = v25;

    uint64_t v27 = v24;
    a2 = v36;
    unint64_t v38 = sub_2408370E4(v27, v26, &v39);
    sub_2409550B8();
    uint64_t v6 = v34;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240818000, v15, v16, "[%{public}s] Unable to compute desired difference for commit: %{public}s", (uint8_t *)v18, 0x16u);
    uint64_t v28 = v33;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v28, -1, -1);
    uint64_t v29 = v18;
    uint64_t v5 = v35;
    MEMORY[0x2456021C0](v29, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v37);
  unint64_t v38 = MEMORY[0x263F8EE78];
  sub_24083FB78(0, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
  sub_2409543A8();
  sub_240827554((unint64_t *)&qword_26AFCDDD8, (void (*)(uint64_t))sub_240864F38);
  uint64_t v30 = sub_240954498();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v30;
  return result;
}

uint64_t sub_2408E5690()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HealthRecords26RemovedCategoriesGenerator_domain;
  uint64_t v2 = sub_240951F18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_24083B114(v0 + OBJC_IVAR____TtC13HealthRecords26RemovedCategoriesGenerator_context, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);

  return swift_deallocClassInstance();
}

uint64_t sub_2408E575C()
{
  return type metadata accessor for RemovedCategoriesGenerator();
}

uint64_t sub_2408E5764@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC13HealthRecords26RemovedCategoriesGenerator_domain;
  uint64_t v4 = sub_240951F18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_2408E57DC()
{
  uint64_t v1 = (int *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_release();

  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_2408E58E0@<X0>(unsigned char *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  return sub_2408E47B4(a1, *(void *)(v2+ ((*(void *)(v5 + 64)+ ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ 7) & 0xFFFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_2408E598C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2408E599C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2408E5258(a1, a2);
}

uint64_t sub_2408E59A4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a2;
  if (!*a2)
  {
    a3(255);
    uint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_2408E59E4(void *a1)
{
  sub_2408E8630(0, &qword_268C916C8, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v9[-v6];
  sub_2408304E8(a1, a1[3]);
  sub_2408E852C();
  sub_240955778();
  v9[15] = 0;
  sub_240955558();
  if (!v1)
  {
    type metadata accessor for LabNameWithDate(0);
    v9[14] = 1;
    sub_240951A28();
    sub_2408E8580(&qword_26AFCC680, MEMORY[0x263F07490]);
    sub_240955598();
    v9[13] = 2;
    sub_240951A98();
    sub_2408E8580(&qword_26AFCE298, MEMORY[0x263F07508]);
    sub_240955598();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2408E5C2C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v25 = sub_240951A98();
  uint64_t v22 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v24 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_240951A28();
  uint64_t v27 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408E8630(0, &qword_268C916B8, MEMORY[0x263F8E040]);
  uint64_t v29 = v7;
  uint64_t v26 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v10 = type metadata accessor for LabNameWithDate(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (uint64_t *)((char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2408304E8(a1, a1[3]);
  sub_2408E852C();
  uint64_t v28 = v9;
  uint64_t v13 = v30;
  sub_240955768();
  if (v13) {
    return sub_2408371B8((uint64_t)a1);
  }
  uint64_t v15 = v26;
  uint64_t v14 = v27;
  id v21 = v12;
  char v33 = 0;
  uint64_t v16 = sub_2409554B8();
  uint64_t v17 = v21;
  *id v21 = v16;
  v17[1] = v18;
  char v32 = 1;
  sub_2408E8580(&qword_26AFCC688, MEMORY[0x263F07490]);
  sub_2409554F8();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))((char *)v21 + *(int *)(v10 + 20), v6, v4);
  char v31 = 2;
  sub_2408E8580(&qword_268C90CD0, MEMORY[0x263F07508]);
  sub_2409554F8();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v28, v29);
  uint64_t v19 = (uint64_t)v21;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))((char *)v21 + *(int *)(v10 + 24), v24, v25);
  sub_2408E85C8(v19, v23, type metadata accessor for LabNameWithDate);
  sub_2408371B8((uint64_t)a1);
  return sub_240849AC0(v19, type metadata accessor for LabNameWithDate);
}

uint64_t sub_2408E60B8()
{
  return *(void *)&aLabname_0[8 * *v0];
}

uint64_t sub_2408E60D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2408E88A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2408E60F8(uint64_t a1)
{
  unint64_t v2 = sub_2408E852C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2408E6134(uint64_t a1)
{
  unint64_t v2 = sub_2408E852C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2408E6170@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2408E5C2C(a1, a2);
}

uint64_t sub_2408E6188(void *a1)
{
  return sub_2408E59E4(a1);
}

uint64_t sub_2408E61A0()
{
  return sub_240955748();
}

uint64_t sub_2408E62C0()
{
  return sub_240954708();
}

uint64_t sub_2408E63D0()
{
  return sub_240955748();
}

uint64_t sub_2408E64EC(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (!v2 && (sub_240955618() & 1) == 0 || (sub_2409519F8() & 1) == 0) {
    return 0;
  }

  return sub_240951A68();
}

uint64_t sub_2408E6584@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = type metadata accessor for AccountNewRecordsData(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (uint64_t *)((char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = (uint64_t)v14 + *(int *)(v12 + 24);
  uint64_t v16 = sub_240951A28();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  if (sub_2409546C8())
  {
    *uint64_t v14 = a1;
    v14[1] = a2;
    sub_2408E677C(a3, v15);
    *(void *)((char *)v14 + *(int *)(v10 + 28)) = a4;
    sub_2408E85C8((uint64_t)v14, a5, type metadata accessor for AccountNewRecordsData);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(a5, 0, 1, v10);
    return sub_240849AC0((uint64_t)v14, type metadata accessor for AccountNewRecordsData);
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_240849AC0(a3, (uint64_t (*)(void))sub_240849BDC);
    sub_240849AC0(v15, (uint64_t (*)(void))sub_240849BDC);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a5, 1, 1, v10);
  }
}

uint64_t sub_2408E677C(uint64_t a1, uint64_t a2)
{
  sub_240849BDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t *sub_2408E67E0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_240951A28();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      sub_240849BDC();
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return v4;
}

void *sub_2408E6960(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_240951A28();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_240849BDC();
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_2408E6A90(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_240951A28();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_240849BDC();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_2408E6C30(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_240951A28();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_240849BDC();
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_2408E6D5C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_240951A28();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_240849BDC();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2408E6EF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2408E6F08);
}

uint64_t sub_2408E6F08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240849BDC();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_2408E6FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2408E6FE0);
}

void sub_2408E6FE0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_240849BDC();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
}

void sub_2408E70A0()
{
  sub_240849BDC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_2408E7148(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_240951A28();
    unint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_240951A98();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v4;
}

uint64_t sub_2408E7288(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_240951A28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_240951A98();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

void *sub_2408E7348(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_240951A28();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_240951A98();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

void *sub_2408E7438(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_240951A28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_240951A98();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *sub_2408E7524(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_240951A28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_240951A98();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

void *sub_2408E75F8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_240951A28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_240951A98();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_2408E76D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2408E76E8);
}

uint64_t sub_2408E76E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_240951A28();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_240951A98();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_2408E7814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2408E7828);
}

uint64_t sub_2408E7828(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_240951A28();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_240951A98();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for LabNameWithDate(uint64_t a1)
{
  return sub_24082A2AC(a1, qword_26AFCC960);
}

uint64_t sub_2408E7974()
{
  uint64_t result = sub_240951A28();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_240951A98();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

char *sub_2408E7A48(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  unint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *((void *)a1 + 1) = a2[1];
    uint64_t v8 = *(int *)(a3 + 24);
    __dst = &a1[v8];
    uint64_t v9 = (char *)a2 + v8;
    uint64_t v10 = sub_240951A28();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    uint64_t v13 = v4;
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      sub_240849BDC();
      memcpy(__dst, v9, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
    }
    *(void *)&v7[*(int *)(a3 + 28)] = *(char **)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_2408E7BF0(id *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  unint64_t v4 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_240951A28();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }

  return swift_bridgeObjectRelease();
}

void *sub_2408E7CC8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v8 = *(int *)(a3 + 24);
  __dst = (char *)a1 + v8;
  uint64_t v9 = (const void *)(a2 + v8);
  uint64_t v10 = sub_240951A28();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  id v13 = v7;
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_240849BDC();
    memcpy(__dst, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2408E7E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_240951A28();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_240849BDC();
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_2408E7FE0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_240951A28();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_240849BDC();
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_2408E810C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  id v8 = (void *)(a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_240951A28();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_240849BDC();
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2408E82BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2408E82D0);
}

uint64_t sub_2408E82D0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_240849BDC();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_2408E8380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2408E8394);
}

void *sub_2408E8394(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    sub_240849BDC();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_2408E843C()
{
  sub_240849BDC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_2408E84E4()
{
  return sub_2408E8580(&qword_268C916B0, (void (*)(uint64_t))type metadata accessor for LabNameWithDate);
}

unint64_t sub_2408E852C()
{
  unint64_t result = qword_268C916C0;
  if (!qword_268C916C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C916C0);
  }
  return result;
}

uint64_t sub_2408E8580(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2408E85C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_2408E8630(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_2408E852C();
    unint64_t v7 = a3(a1, &type metadata for LabNameWithDate.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for LabNameWithDate.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2408E8760);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LabNameWithDate.CodingKeys()
{
  return &type metadata for LabNameWithDate.CodingKeys;
}

unint64_t sub_2408E879C()
{
  unint64_t result = qword_268C916D0;
  if (!qword_268C916D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C916D0);
  }
  return result;
}

unint64_t sub_2408E87F4()
{
  unint64_t result = qword_268C916D8;
  if (!qword_268C916D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C916D8);
  }
  return result;
}

unint64_t sub_2408E884C()
{
  unint64_t result = qword_268C916E0;
  if (!qword_268C916E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C916E0);
  }
  return result;
}

uint64_t sub_2408E88A0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D614E62616CLL && a2 == 0xE700000000000000;
  if (v2 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574614462616CLL && a2 == 0xE700000000000000 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4449555562616CLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_240955618();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2408E89F8(uint64_t a1)
{
  uint64_t v28 = a1;
  uint64_t v27 = sub_240951C08();
  uint64_t v2 = *(void *)(v27 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x270FA5388](v27);
  uint64_t v26 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408ECCB8(0, (unint64_t *)&qword_26AFCF348, (uint64_t (*)(uint64_t))sub_240841404, sub_2408ECD38, MEMORY[0x263EFDE30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v25 - v7;
  sub_2408ECFE4(0, &qword_26AFCF190, sub_240841404, (void (*)(void))sub_2408ECD38);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v29 = v9;
  uint64_t v30 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v25 - v11;
  uint64_t v13 = v1 + OBJC_IVAR____TtC13HealthRecords20CategoryDataProvider_context;
  int v14 = *(void **)(v13 + *(int *)(type metadata accessor for HealthRecordsGeneratorContext() + 20));
  *(void *)(swift_allocObject() + 16) = v14;
  sub_240841404(0);
  v25[1] = sub_2408ECD38();
  id v15 = v14;
  sub_240954418();
  sub_2408ECDA4();
  uint64_t v16 = sub_240954498();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v31 = v16;
  uint64_t v18 = v26;
  uint64_t v17 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v26, v28, v27);
  unint64_t v19 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v25[0];
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v20 + v19, v18, v17);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_2408ECE44;
  *(void *)(v21 + 24) = v20;
  swift_retain();
  sub_2409542E8();
  sub_2408413A0(0, (unint64_t *)&qword_26AFCDCF8, sub_2408EB6FC);
  sub_2408A5C68();
  sub_2409545E8();
  swift_release();
  swift_release();
  sub_2408ECF04();
  uint64_t v22 = v29;
  uint64_t v23 = sub_240954498();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v22);
  return v23;
}

uint64_t sub_2408E8E24(char a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v46 = a3;
  uint64_t v47 = a4;
  int v54 = a2;
  sub_2408EB4DC(0, &qword_26AFCDDE8, (uint64_t (*)(uint64_t))sub_2408EB6FC, MEMORY[0x263EFDDF8]);
  uint64_t v52 = v5;
  uint64_t v50 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v43 - v6;
  uint64_t v45 = sub_240951C08();
  uint64_t v8 = *(void *)(v45 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v45);
  uint64_t v44 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408ECF8C();
  uint64_t v53 = v10;
  uint64_t v51 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408ECFE4(0, &qword_26AFCF180, (void (*)(uint64_t))sub_2408ECF8C, (void (*)(void))sub_2408ED09C);
  uint64_t v48 = *(void *)(v13 - 8);
  uint64_t v49 = v13;
  MEMORY[0x270FA5388](v13);
  id v15 = (char *)&v43 - v14;
  uint64_t v16 = sub_2409540C8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v43 - v21;
  if (a1)
  {
    sub_240954078();
    uint64_t v23 = sub_2409540B8();
    os_log_type_t v24 = sub_240954BF8();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 67109120;
      int v55 = v54 & 1;
      sub_2409550B8();
      _os_log_impl(&dword_240818000, v23, v24, "CategoryDataProvider chrCategoriesPublisher() should show CHR section, supports CHR: %{BOOL}d", v25, 8u);
      MEMORY[0x2456021C0](v25, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
    char v56 = v54 & 1;
    sub_2409543A8();
    uint64_t v26 = swift_allocObject();
    swift_weakInit();
    uint64_t v28 = v44;
    uint64_t v27 = v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v44, v47, v45);
    unint64_t v29 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = v26;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v30 + v29, v28, v27);
    sub_2409542E8();
    sub_2408413A0(0, (unint64_t *)&qword_26AFCDCF8, sub_2408EB6FC);
    sub_2408ED09C();
    sub_2408A5C68();
    uint64_t v31 = v53;
    sub_2409545E8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v12, v31);
    sub_2408ED2AC();
    uint64_t v32 = v49;
    uint64_t v33 = sub_240954498();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v15, v32);
  }
  else
  {
    sub_240954078();
    uint64_t v34 = sub_2409540B8();
    os_log_type_t v35 = sub_240954BF8();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl(&dword_240818000, v34, v35, "CategoryDataProvider chrCategoriesPublisher() should not show CHR section, returning just CDA category", v36, 2u);
      MEMORY[0x2456021C0](v36, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    sub_2408EB4DC(0, &qword_26AFD05F8, MEMORY[0x263F45F38], MEMORY[0x263F8E0F8]);
    uint64_t v37 = sub_2409526C8();
    uint64_t v38 = *(void *)(v37 - 8);
    unint64_t v39 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_240956800;
    (*(void (**)(unint64_t, void, uint64_t))(v38 + 104))(v40 + v39, *MEMORY[0x263F45F18], v37);
    uint64_t v57 = v40;
    sub_2408EB6FC(0);
    sub_2409543A8();
    sub_2408ED0D0();
    uint64_t v41 = v52;
    uint64_t v33 = sub_240954498();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v7, v41);
  }
  return v33;
}

uint64_t sub_2408E953C@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_240951C08();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408EB4DC(0, &qword_26AFCDDE8, (uint64_t (*)(uint64_t))sub_2408EB6FC, MEMORY[0x263EFDDF8]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v18 - v11;
  int v13 = *a1;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F45560], v4);
    sub_240829E08(&qword_26AFCEC80, MEMORY[0x263F45588]);
    sub_240954968();
    sub_240954968();
    if (v19 == v18[1] && v20 == v18[2])
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    else
    {
      char v16 = sub_240955618();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      if ((v16 & 1) == 0)
      {
        uint64_t v17 = sub_2408EA4E0(v13);
        goto LABEL_9;
      }
    }
    uint64_t v17 = sub_2408E985C(v13);
LABEL_9:
    uint64_t v14 = v17;
    uint64_t result = swift_release();
    goto LABEL_10;
  }
  uint64_t v19 = MEMORY[0x263F8EE78];
  sub_2408EB6FC(0);
  sub_2409543A8();
  sub_2408ED0D0();
  uint64_t v14 = sub_240954498();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
LABEL_10:
  *a2 = v14;
  return result;
}

uint64_t sub_2408E985C(int a1)
{
  int v25 = a1;
  sub_2408EB208();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v27 = v1;
  uint64_t v28 = v2;
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408EB650();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v29 = v5;
  uint64_t v30 = v6;
  MEMORY[0x270FA5388](v5);
  os_log_type_t v24 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408ECCB8(0, &qword_26AFCEE08, (uint64_t (*)(uint64_t))sub_2408EB43C, sub_2408EB580, MEMORY[0x263EFDAA0]);
  uint64_t v9 = v8;
  uint64_t v26 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v23 - v10;
  type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t v32 = sub_2408AE754();
  uint64_t v31 = MEMORY[0x263F8EE78];
  sub_2408EB43C();
  sub_2408EB580();
  sub_2409544C8();
  swift_release();
  uint64_t v12 = sub_240952628();
  sub_240952668();
  uint64_t v13 = sub_240952658();
  uint64_t v14 = sub_240952FC8();
  swift_bridgeObjectRelease();
  uint64_t v32 = v14;
  sub_2408EB308();
  sub_240829E08((unint64_t *)&qword_26AFCDC60, (void (*)(uint64_t))sub_2408EB308);
  sub_2408EB5B4();
  sub_2409544E8();
  swift_release();
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(unsigned char *)(v16 + 24) = v25;
  *(void *)(v16 + 32) = v13;
  *(void *)(v16 + 40) = v12;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_2408ECC70;
  *(void *)(v17 + 24) = v16;
  sub_2408EB6FC(0);
  sub_240829E08(&qword_26AFCECD0, (void (*)(uint64_t))sub_2408EB208);
  uint64_t v18 = v24;
  uint64_t v19 = v27;
  sub_2409544F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v4, v19);
  sub_240829E08(&qword_26AFCEF28, (void (*)(uint64_t))sub_2408EB650);
  uint64_t v20 = v29;
  uint64_t v21 = sub_240954498();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v18, v20);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
  return v21;
}

uint64_t sub_2408E9CFC(uint64_t a1, unint64_t a2, uint64_t a3, int a4, uint64_t a5, unint64_t a6)
{
  LODWORD(v64) = a4;
  uint64_t v66 = *MEMORY[0x263EF8340];
  uint64_t v10 = sub_2409526C8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v51 - v15;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return MEMORY[0x263F8EE78];
  }
  if (a1)
  {
    uint64_t v61 = Strong;
    unint64_t v62 = a2;
    uint64_t v18 = *(void *)(a5 + 16);
    uint64_t v60 = v11;
    if (v18)
    {
      unint64_t v19 = a5 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
      uint64_t v20 = *(void *)(v11 + 72);
      swift_bridgeObjectRetain();
      uint64_t v21 = 0;
      do
      {
        char v22 = sub_2409546B8();
        BOOL v23 = __OFADD__(v21, v22 & 1);
        v21 += v22 & 1;
        if (v23)
        {
          __break(1u);
          goto LABEL_31;
        }
        v19 += v20;
        --v18;
      }
      while (v18);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v21 = 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v28 = swift_bridgeObjectRetain();
    sub_2408EB7B8(v28, a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_240952668();
    uint64_t v63 = sub_240829E08(&qword_26AFD03E8, MEMORY[0x263F45F38]);
    unint64_t v29 = sub_2409549D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LOBYTE(a5) = (_BYTE)v64;
    a6 = sub_2408EB9F8(v29, v64 & 1, v21, 0, 0);
    swift_bridgeObjectRelease();
    if (v62 >> 62) {
      goto LABEL_32;
    }
    uint64_t v30 = v60;
    if (!*(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      while (1)
      {
        if ((a5 & 1) == 0) {
          goto LABEL_33;
        }
        unsigned int v31 = *MEMORY[0x263F45F18];
        uint64_t v32 = *(void (**)(char *, void, uint64_t))(v30 + 104);
        v32(v16, *MEMORY[0x263F45F18], v10);
        unint64_t v62 = *(void *)(a6 + 16);
        if (!v62)
        {
          (*(void (**)(char *, uint64_t))(v30 + 8))(v16, v10);
          goto LABEL_26;
        }
        unsigned int v55 = v31;
        uint64_t v54 = *(unsigned __int8 *)(v30 + 80);
        uint64_t v56 = (v54 + 32) & ~v54;
        uint64_t v57 = v32;
        id v59 = *(void (**)(char *, unint64_t, uint64_t))(v30 + 16);
        v59(v14, a6 + v56, v10);
        swift_bridgeObjectRetain();
        char v33 = sub_240954778();
        unint64_t v34 = a6;
        a6 = v30 + 8;
        uint64_t v64 = *(void (**)(char *, uint64_t))(v30 + 8);
        v64(v14, v10);
        if (v33) {
          break;
        }
        unint64_t v52 = v34;
        if (v62 == 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v32 = v57;
          v64(v16, v10);
LABEL_26:
          swift_bridgeObjectRelease();
          sub_2408EB4DC(0, &qword_26AFD05F8, MEMORY[0x263F45F38], MEMORY[0x263F8E0F8]);
          unint64_t v38 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
          uint64_t v39 = swift_allocObject();
          *(_OWORD *)(v39 + 16) = xmmword_240956800;
          v32((char *)(v39 + v38), *MEMORY[0x263F45F28], v10);
LABEL_29:
          swift_release();
          return v39;
        }
        v51[1] = a6 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        uint64_t v53 = v30 + 104;
        uint64_t v58 = *(void *)(v30 + 72);
        uint64_t v35 = v52 + v58 + v56;
        a5 = 1;
        while (1)
        {
          v59(v14, v35, v10);
          uint64_t v36 = a5 + 1;
          if (__OFADD__(a5, 1)) {
            break;
          }
          char v37 = sub_240954778();
          v64(v14, v10);
          if (v37)
          {
            swift_bridgeObjectRelease();
            uint64_t v30 = v60;
            goto LABEL_28;
          }
          ++a5;
          v35 += v58;
          if (v36 == v62)
          {
            swift_bridgeObjectRelease();
            uint64_t v30 = v60;
            uint64_t v32 = v57;
            v64(v16, v10);
            goto LABEL_26;
          }
        }
LABEL_31:
        __break(1u);
LABEL_32:
        swift_bridgeObjectRetain();
        uint64_t v44 = sub_2409553D8();
        swift_bridgeObjectRelease();
        uint64_t v30 = v60;
        if (v44) {
          goto LABEL_33;
        }
      }
      uint64_t v53 = v30 + 104;
      swift_bridgeObjectRelease();
LABEL_28:
      v64(v16, v10);
      swift_bridgeObjectRelease();
      sub_2408EB4DC(0, &qword_26AFD05F8, MEMORY[0x263F45F38], MEMORY[0x263F8E0F8]);
      uint64_t v40 = *(void *)(v30 + 72);
      uint64_t v41 = v56;
      uint64_t v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = xmmword_2409562B0;
      uint64_t v42 = v39 + v41;
      uint64_t v43 = (void (*)(uint64_t, void, uint64_t))v57;
      v57((char *)v42, *MEMORY[0x263F45F28], v10);
      v43(v42 + v40, v55, v10);
      goto LABEL_29;
    }
LABEL_33:
    uint64_t v45 = sub_2408EC7D8(v62, a5 & 1);
    unint64_t v65 = a6;
    sub_2408FF3CC((uint64_t)v45);
    unint64_t v46 = v65;
    sub_2408EB4DC(0, &qword_26AFD05F8, MEMORY[0x263F45F38], MEMORY[0x263F8E0F8]);
    unint64_t v47 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_240956800;
    (*(void (**)(unint64_t, void, uint64_t))(v30 + 104))(v48 + v47, *MEMORY[0x263F45F08], v10);
    unint64_t v65 = v46;
    sub_2408FF3CC(v48);
    goto LABEL_34;
  }
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v49 = sub_2409553D8();
    swift_bridgeObjectRelease();
    if (v49) {
      goto LABEL_10;
    }
    goto LABEL_36;
  }
  if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_36:
    swift_release();
    return MEMORY[0x263F8EE78];
  }
LABEL_10:
  sub_240952668();
  sub_240952628();
  sub_240829E08(&qword_26AFD03E8, MEMORY[0x263F45F38]);
  unint64_t v24 = sub_2409549D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v25 = v64 & 1;
  unint64_t v26 = sub_2408EB9F8(v24, v64 & 1, 0, 0, 0);
  swift_bridgeObjectRelease();
  uint64_t v27 = sub_2408EC7D8(a2, v25);
  unint64_t v65 = v26;
  sub_2408FF3CC((uint64_t)v27);
LABEL_34:
  swift_release();
  return v65;
}

uint64_t sub_2408EA4E0(int a1)
{
  int v25 = a1;
  sub_2408EB208();
  uint64_t v29 = v2;
  uint64_t v27 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408EB650();
  uint64_t v30 = v5;
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408ECCB8(0, &qword_26AFCEE08, (uint64_t (*)(uint64_t))sub_2408EB43C, sub_2408EB580, MEMORY[0x263EFDAA0]);
  uint64_t v9 = v8;
  uint64_t v26 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v23 - v10;
  type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t v32 = sub_2408AE754();
  uint64_t v31 = MEMORY[0x263F8EE78];
  sub_2408EB43C();
  sub_2408EB580();
  sub_2409544C8();
  swift_release();
  sub_240952668();
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC13HealthRecords20CategoryDataProvider_collapseCategories) == 1) {
    uint64_t v12 = sub_240952668();
  }
  else {
    uint64_t v12 = sub_240952628();
  }
  uint64_t v24 = v12;
  uint64_t v13 = sub_240952658();
  uint64_t v14 = sub_240952FC8();
  swift_bridgeObjectRelease();
  uint64_t v32 = v14;
  sub_2408EB308();
  sub_240829E08((unint64_t *)&qword_26AFCDC60, (void (*)(uint64_t))sub_2408EB308);
  sub_2408EB5B4();
  sub_2409544E8();
  swift_release();
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(unsigned char *)(v16 + 24) = v25 & 1;
  uint64_t v17 = v24;
  *(void *)(v16 + 32) = v13;
  *(void *)(v16 + 40) = v17;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_2408EB76C;
  *(void *)(v18 + 24) = v16;
  sub_2408EB6FC(0);
  sub_240829E08(&qword_26AFCECD0, (void (*)(uint64_t))sub_2408EB208);
  uint64_t v19 = v29;
  sub_2409544F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v19);
  sub_240829E08(&qword_26AFCEF28, (void (*)(uint64_t))sub_2408EB650);
  uint64_t v20 = v30;
  uint64_t v21 = sub_240954498();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v20);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
  return v21;
}

uint64_t sub_2408EA9A4(uint64_t a1, unint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  LODWORD(v59) = a4;
  uint64_t v8 = sub_2409526C8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v47 - v13;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v16 = Strong;
  if (a1)
  {
    unint64_t v55 = a2;
    uint64_t v58 = v9;
    uint64_t v17 = *(void *)(a5 + 16);
    if (v17)
    {
      uint64_t v53 = Strong;
      unint64_t v18 = a5 + ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80));
      uint64_t v16 = *(void *)(v58 + 72);
      swift_bridgeObjectRetain();
      uint64_t v19 = 0;
      do
      {
        char v20 = sub_2409546B8();
        BOOL v21 = __OFADD__(v19, v20 & 1);
        v19 += v20 & 1;
        if (v21)
        {
          __break(1u);
          goto LABEL_31;
        }
        v18 += v16;
        --v17;
      }
      while (v17);
      swift_bridgeObjectRelease();
      uint64_t v16 = v53;
    }
    else
    {
      uint64_t v19 = 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v26 = swift_bridgeObjectRetain();
    sub_2408EB7B8(v26, a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_240952668();
    uint64_t v57 = sub_240829E08(&qword_26AFD03E8, MEMORY[0x263F45F38]);
    unint64_t v27 = sub_2409549D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LOBYTE(v17) = (_BYTE)v59;
    unint64_t v56 = sub_2408EB9F8(v27, v59 & 1, v19, 0, 1u);
    swift_bridgeObjectRelease();
    unint64_t v18 = v55;
    a5 = v58;
    if (v55 >> 62) {
      goto LABEL_32;
    }
    if (!*(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      while (1)
      {
        if ((v17 & 1) == 0) {
          goto LABEL_33;
        }
        unsigned int v28 = *MEMORY[0x263F45F18];
        uint64_t v29 = a5 + 104;
        uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(a5 + 104);
        v30(v14, *MEMORY[0x263F45F18], v8);
        unint64_t v31 = v56;
        unint64_t v55 = *(void *)(v56 + 16);
        if (!v55)
        {
          (*(void (**)(char *, uint64_t))(a5 + 8))(v14, v8);
          goto LABEL_26;
        }
        unsigned int v51 = v28;
        uint64_t v50 = *(unsigned __int8 *)(a5 + 80);
        uint64_t v52 = (v50 + 32) & ~v50;
        LOBYTE(v17) = a5 + 16;
        uint64_t v54 = *(void (**)(char *, unint64_t, uint64_t))(a5 + 16);
        v54(v12, v56 + v52, v8);
        swift_bridgeObjectRetain();
        unint64_t v18 = v31;
        char v32 = sub_240954778();
        char v33 = *(void (**)(char *, uint64_t))(a5 + 8);
        a5 += 8;
        id v59 = v33;
        v33(v12, v8);
        if (v32) {
          break;
        }
        if (v55 == 1)
        {
          swift_bridgeObjectRelease();
          a5 = v58;
          v59(v14, v8);
LABEL_26:
          swift_bridgeObjectRelease();
          sub_2408EB4DC(0, &qword_26AFD05F8, MEMORY[0x263F45F38], MEMORY[0x263F8E0F8]);
          unint64_t v37 = (*(unsigned __int8 *)(a5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(a5 + 80);
          uint64_t v38 = swift_allocObject();
          *(_OWORD *)(v38 + 16) = xmmword_240956800;
          unint64_t v39 = v38 + v37;
          uint64_t v40 = *MEMORY[0x263F45F28];
LABEL_29:
          v30((char *)v39, v40, v8);
          swift_release();
          return v38;
        }
        uint64_t v47 = a5 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        uint64_t v48 = v30;
        uint64_t v49 = v29;
        uint64_t v53 = v16;
        uint64_t v34 = *(void *)(v58 + 72);
        unint64_t v35 = v56 + v34 + v52;
        uint64_t v16 = 1;
        while (1)
        {
          v54(v12, v35, v8);
          uint64_t v36 = v16 + 1;
          if (__OFADD__(v16, 1)) {
            break;
          }
          unint64_t v18 = sub_240954778();
          v59(v12, v8);
          if (v18)
          {
            swift_bridgeObjectRelease();
            uint64_t v30 = v48;
            goto LABEL_28;
          }
          ++v16;
          v35 += v34;
          if (v36 == v55)
          {
            swift_bridgeObjectRelease();
            a5 = v58;
            uint64_t v30 = v48;
            v59(v14, v8);
            goto LABEL_26;
          }
        }
LABEL_31:
        __break(1u);
LABEL_32:
        swift_bridgeObjectRetain();
        uint64_t v44 = sub_2409553D8();
        swift_bridgeObjectRelease();
        if (v44) {
          goto LABEL_33;
        }
      }
      swift_bridgeObjectRelease();
LABEL_28:
      v59(v14, v8);
      swift_bridgeObjectRelease();
      sub_2408EB4DC(0, &qword_26AFD05F8, MEMORY[0x263F45F38], MEMORY[0x263F8E0F8]);
      uint64_t v41 = *(void *)(v58 + 72);
      uint64_t v42 = v52;
      uint64_t v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = xmmword_2409562B0;
      uint64_t v43 = v38 + v42;
      v30((char *)v43, *MEMORY[0x263F45F28], v8);
      unint64_t v39 = v43 + v41;
      uint64_t v40 = v51;
      goto LABEL_29;
    }
LABEL_33:
    int v25 = sub_2408EC7D8(v18, v17 & 1);
    unint64_t v60 = v56;
    goto LABEL_34;
  }
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_2409553D8();
    swift_bridgeObjectRelease();
    if (v45) {
      goto LABEL_10;
    }
    goto LABEL_36;
  }
  if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_36:
    swift_release();
    return MEMORY[0x263F8EE78];
  }
LABEL_10:
  sub_240952668();
  sub_240952628();
  sub_240829E08(&qword_26AFD03E8, MEMORY[0x263F45F38]);
  unint64_t v22 = sub_2409549D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = v59 & 1;
  unint64_t v24 = sub_2408EB9F8(v22, v59 & 1, 0, 0, 1u);
  swift_bridgeObjectRelease();
  int v25 = sub_2408EC7D8(a2, v23);
  unint64_t v60 = v24;
LABEL_34:
  sub_2408FF3CC((uint64_t)v25);
  swift_release();
  return v60;
}

uint64_t sub_2408EB098()
{
  sub_24083B3B4(v0 + OBJC_IVAR____TtC13HealthRecords20CategoryDataProvider_context);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_2408EB10C()
{
  return type metadata accessor for CategoryDataProvider();
}

uint64_t type metadata accessor for CategoryDataProvider()
{
  uint64_t result = qword_26AFCCC88;
  if (!qword_26AFCCC88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2408EB160()
{
  uint64_t result = type metadata accessor for HealthRecordsGeneratorContext();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_2408EB208()
{
  if (!qword_26AFCECD8)
  {
    sub_2408EB308();
    sub_2408ECCB8(255, &qword_26AFCEE08, (uint64_t (*)(uint64_t))sub_2408EB43C, sub_2408EB580, MEMORY[0x263EFDAA0]);
    sub_240829E08((unint64_t *)&qword_26AFCDC60, (void (*)(uint64_t))sub_2408EB308);
    sub_2408EB5B4();
    unint64_t v0 = sub_240954118();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCECD8);
    }
  }
}

void sub_2408EB308()
{
  if (!qword_26AFCDC68)
  {
    sub_2408EB4DC(255, &qword_26AFCDE48, (uint64_t (*)(uint64_t))sub_2408EB3A0, MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_240954308();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDC68);
    }
  }
}

void sub_2408EB3A0()
{
  if (!qword_26AFCC5E8)
  {
    sub_2409526C8();
    sub_240829E08(&qword_26AFD03E0, MEMORY[0x263F45F38]);
    unint64_t v0 = sub_2409546E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCC5E8);
    }
  }
}

void sub_2408EB43C()
{
  if (!qword_26AFCDD18)
  {
    sub_2408EB4DC(255, (unint64_t *)&qword_26AFCC610, (uint64_t (*)(uint64_t))sub_2408EB540, MEMORY[0x263F8D488]);
    sub_24083F3C0();
    unint64_t v0 = sub_240954308();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDD18);
    }
  }
}

void sub_2408EB4DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_2408EB540()
{
  unint64_t result = qword_26AFD05A0;
  if (!qword_26AFD05A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFD05A0);
  }
  return result;
}

uint64_t sub_2408EB580()
{
  return sub_240829E08(&qword_26AFCDD10, (void (*)(uint64_t))sub_2408EB43C);
}

unint64_t sub_2408EB5B4()
{
  unint64_t result = qword_26AFCEE00;
  if (!qword_26AFCEE00)
  {
    sub_2408ECCB8(255, &qword_26AFCEE08, (uint64_t (*)(uint64_t))sub_2408EB43C, sub_2408EB580, MEMORY[0x263EFDAA0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCEE00);
  }
  return result;
}

void sub_2408EB650()
{
  if (!qword_26AFCEF30)
  {
    sub_2408EB208();
    sub_2408EB6FC(255);
    sub_240829E08(&qword_26AFCECD0, (void (*)(uint64_t))sub_2408EB208);
    unint64_t v0 = sub_2409541C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCEF30);
    }
  }
}

void sub_2408EB6FC(uint64_t a1)
{
}

uint64_t sub_2408EB730()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2408EB76C(uint64_t a1, unint64_t a2)
{
  return sub_2408EA9A4(a1, a2, *(void *)(v2 + 16), *(unsigned __int8 *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_2408EB77C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2408EB7B8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_2409526C8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v29 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v30 = MEMORY[0x263F8EE78];
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    uint64_t v22 = v2;
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v14 = v6 + 16;
    uint64_t v13 = v15;
    uint64_t v16 = *(void *)(v14 + 56);
    unint64_t v24 = (*(unsigned __int8 *)(v14 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 64);
    int v25 = v15;
    uint64_t v17 = a1 + v24;
    uint64_t v27 = a2;
    unsigned int v28 = (void (**)(char *, char *, uint64_t))(v14 + 16);
    uint64_t v23 = (void (**)(char *, uint64_t))(v14 - 8);
    uint64_t v26 = v14;
    v15(v10, a1 + v24, v5);
    while (1)
    {
      if (sub_2409546B8())
      {
        (*v23)(v10, v5);
      }
      else
      {
        unint64_t v18 = *v28;
        (*v28)(v29, v10, v5);
        uint64_t v19 = v30;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_240875EA8(0, *(void *)(v19 + 16) + 1, 1);
          uint64_t v19 = v30;
        }
        unint64_t v21 = *(void *)(v19 + 16);
        unint64_t v20 = *(void *)(v19 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_240875EA8(v20 > 1, v21 + 1, 1);
          uint64_t v19 = v30;
        }
        *(void *)(v19 + 16) = v21 + 1;
        v18((char *)(v19 + v24 + v21 * v16), v29, v5);
        uint64_t v30 = v19;
        uint64_t v13 = v25;
      }
      v17 += v16;
      if (!--v12) {
        break;
      }
      v13(v10, v17, v5);
    }
    return v30;
  }
  return result;
}

unint64_t sub_2408EB9F8(unint64_t a1, int a2, uint64_t a3, int a4, unsigned int a5)
{
  unsigned int v102 = a5;
  int v105 = a4;
  LODWORD(v106) = a2;
  uint64_t v103 = a3;
  uint64_t v6 = sub_2409526C8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v101 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v95 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v100 = (char *)&v95 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v97 = (char *)&v95 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v108 = (char *)&v95 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  long long v109 = (char *)&v95 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v96 = (char *)&v95 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  v121 = (char *)&v95 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v95 - v26;
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  uint64_t v30 = (char *)&v95 - v29;
  MEMORY[0x270FA5388](v28);
  char v32 = (char *)&v95 - v31;
  char v33 = *(char **)(v7 + 104);
  unsigned int v113 = *MEMORY[0x263F45F18];
  ((void (*)(char *))v33)((char *)&v95 - v31);
  uint64_t v34 = *(char **)(a1 + 16);
  uint64_t v111 = v7;
  v112 = v33;
  v123 = v34;
  uint64_t v124 = v6;
  uint64_t v104 = v12;
  uint64_t v110 = v7 + 104;
  v122 = v27;
  unint64_t v120 = (unint64_t)v32;
  if (v34)
  {
    unint64_t v35 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    char v33 = (char *)(v7 + 16);
    v119 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    v119(v30, a1 + v35, v6);
    uint64_t v36 = sub_240829E08(&qword_26AFD03E8, MEMORY[0x263F45F38]);
    swift_bridgeObjectRetain();
    uint64_t v117 = v36;
    char v37 = sub_240954778();
    uint64_t v6 = v124;
    uint64_t v38 = v7;
    char v39 = v37;
    uint64_t v42 = *(void (**)(char *, uint64_t))(v38 + 8);
    uint64_t v41 = v38 + 8;
    uint64_t v40 = v42;
    uint64_t v43 = v41 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v42(v30, v124);
    if (v39)
    {
      swift_bridgeObjectRelease();
      int v99 = 1;
    }
    else
    {
      if (v123 != (char *)1)
      {
        v116 = (void (*)(void))(v41 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
        v118 = v40;
        unint64_t v44 = *(void *)(v111 + 72);
        uint64_t v7 = a1 + v44 + v35;
        uint64_t v45 = 1;
        while (1)
        {
          v119(v30, v7, v6);
          uint64_t v46 = v45 + 1;
          if (__OFADD__(v45, 1)) {
            goto LABEL_73;
          }
          char v47 = sub_240954778();
          uint64_t v6 = v124;
          char v48 = v47;
          v118(v30, v124);
          if (v48) {
            break;
          }
          ++v45;
          v7 += v44;
          if ((char *)v46 == v123)
          {
            swift_bridgeObjectRelease();
            int v99 = 0;
LABEL_14:
            uint64_t v7 = v111;
            char v33 = v112;
            uint64_t v40 = v118;
            uint64_t v43 = (uint64_t)v116;
            goto LABEL_15;
          }
        }
        swift_bridgeObjectRelease();
        int v99 = 1;
        goto LABEL_14;
      }
      swift_bridgeObjectRelease();
      int v99 = 0;
    }
    uint64_t v7 = v111;
    char v33 = v112;
LABEL_15:
    uint64_t v27 = v122;
    v40((char *)v120, v6);
  }
  else
  {
    int v99 = 0;
    uint64_t v40 = *(void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v43 = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v40((char *)v120, v6);
  }
  uint64_t v49 = *MEMORY[0x263F46000];
  uint64_t v50 = sub_2409528B8();
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v52 = *(void (**)(void))(v51 + 104);
  unsigned int v107 = v49;
  v116 = v52;
  uint64_t v117 = v50;
  uint64_t v115 = v51 + 104;
  ((void (*)(char *, uint64_t))v52)(v27, v49);
  unsigned int v114 = *MEMORY[0x263F45F00];
  ((void (*)(char *))v33)(v27);
  if (v123)
  {
    uint64_t v53 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    v7 += 16;
    unint64_t v54 = (*(unsigned __int8 *)(v7 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 64);
    v119 = v53;
    unint64_t v120 = v54;
    unint64_t v55 = (unint64_t)v121;
    v53(v121, a1 + v54, v6);
    sub_240829E08(&qword_26AFD03E8, MEMORY[0x263F45F38]);
    unint64_t v98 = a1;
    a1 = v55;
    swift_bridgeObjectRetain();
    char v56 = sub_240954778();
    uint64_t v6 = v124;
    LOBYTE(v55) = v56;
    uint64_t v57 = v43;
    uint64_t v58 = (void (*)(unint64_t, uint64_t))v40;
    uint64_t v41 = v57;
    v40((char *)a1, v124);
    if (v55)
    {
      LODWORD(v120) = 1;
    }
    else
    {
      if (v123 != (char *)1)
      {
        unint64_t v44 = *(void *)(v111 + 72);
        unint64_t v59 = v98 + v44 + v120;
        uint64_t v60 = 1;
        while (1)
        {
          v119((char *)a1, v59, v6);
          char v33 = (char *)(v60 + 1);
          if (__OFADD__(v60, 1)) {
            break;
          }
          int v61 = sub_240954778();
          unint64_t v62 = a1;
          int v63 = v61;
          v58(v62, v6);
          LODWORD(v120) = v63;
          if (v63)
          {
            uint64_t v6 = v124;
            goto LABEL_28;
          }
          ++v60;
          v59 += v44;
          uint64_t v6 = v124;
          a1 = (unint64_t)v121;
          if (v33 == v123) {
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_73:
        __break(1u);
        goto LABEL_74;
      }
      LODWORD(v120) = 0;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    uint64_t v7 = v111;
    char v33 = v112;
    uint64_t v40 = (void (*)(char *, uint64_t))v58;
    uint64_t v27 = v122;
  }
  else
  {
    LODWORD(v120) = 0;
  }
  v40(v27, v6);
  uint64_t v64 = swift_bridgeObjectRetain();
  uint64_t v65 = sub_24093D7B4(v64);
  swift_bridgeObjectRelease();
  sub_2408EB4DC(0, &qword_26AFD05F8, MEMORY[0x263F45F38], MEMORY[0x263F8E0F8]);
  uint64_t v66 = *(char **)(v7 + 72);
  unint64_t v67 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v68 = swift_allocObject();
  *(_OWORD *)(v68 + 16) = xmmword_2409562B0;
  v122 = (char *)v67;
  unint64_t v69 = v68 + v67;
  ((void (*)(unint64_t, void, uint64_t))v33)(v69, v113, v6);
  v123 = v66;
  unint64_t v70 = &v66[v69];
  ((void (*)(char *, void, uint64_t))v116)(v70, v107, v117);
  ((void (*)(char *, void, uint64_t))v33)(v70, v114, v6);
  uint64_t v71 = sub_240916308(v68, v65);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  a1 = sub_2408744A4(v71);
  swift_release();
  if ((v106 & 1) == 0)
  {
    uint64_t v41 = (uint64_t)v122;
    goto LABEL_60;
  }
  swift_retain();
  uint64_t v72 = sub_240952658();
  unint64_t v44 = v72;
  v118 = v40;
  if ((v102 & 1) == 0)
  {
    swift_release();
    uint64_t v74 = v108;
    uint64_t v41 = (uint64_t)v109;
    goto LABEL_40;
  }
  uint64_t v73 = *(void *)(v72 + 16) - *(void *)(a1 + 16);
  swift_release();
  uint64_t v74 = v108;
  uint64_t v41 = (uint64_t)v109;
  if (v73 < 3)
  {
LABEL_40:
    unsigned int v102 = *MEMORY[0x263F46010];
    v116(v41);
    ((void (*)(uint64_t, void, uint64_t))v33)(v41, v114, v6);
    v121 = *(char **)(a1 + 16);
    if (!v121)
    {
LABEL_50:
      uint64_t v83 = v118;
      v118((char *)v41, v6);
      swift_release();
      id v84 = v97;
      ((void (*)(char *, void, uint64_t))v116)(v97, v102, v117);
      char v33 = v112;
      ((void (*)(char *, void, uint64_t))v112)(v84, v114, v6);
      sub_240829E08(&qword_26AFD03E8, MEMORY[0x263F45F38]);
      uint64_t v85 = sub_2409549E8();
      swift_bridgeObjectRelease();
      v83(v84, v6);
      unint64_t v44 = v85;
      goto LABEL_53;
    }
    v119 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    v119(v74, (unint64_t)&v122[a1], v6);
    uint64_t v78 = sub_240829E08(&qword_26AFD03E8, MEMORY[0x263F45F38]);
    swift_bridgeObjectRetain();
    uint64_t v106 = v78;
    char v79 = sub_240954778();
    uint64_t v6 = v124;
    LOBYTE(v78) = v79;
    v118(v74, v124);
    if (v78)
    {
      swift_release();
LABEL_52:
      v118((char *)v41, v6);
      swift_release();
      char v33 = v112;
LABEL_53:
      uint64_t v41 = (uint64_t)v122;
      if ((v120 & 1) == 0) {
        goto LABEL_59;
      }
      goto LABEL_54;
    }
    if (v121 == (char *)1)
    {
      swift_release();
      goto LABEL_50;
    }
    unint64_t v80 = (unint64_t)&v122[(void)v123 + a1];
    uint64_t v7 = 1;
    while (1)
    {
      v119(v74, v80, v6);
      char v33 = (char *)(v7 + 1);
      if (__OFADD__(v7, 1)) {
        break;
      }
      char v81 = sub_240954778();
      uint64_t v6 = v124;
      char v82 = v81;
      v118(v74, v124);
      if (v82)
      {
        swift_release();
        uint64_t v7 = v111;
        uint64_t v41 = (uint64_t)v109;
        goto LABEL_52;
      }
      ++v7;
      v80 += (unint64_t)v123;
      uint64_t v74 = v108;
      uint64_t v41 = (uint64_t)v109;
      if (v33 == v121)
      {
        swift_release();
        uint64_t v7 = v111;
        goto LABEL_50;
      }
    }
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  swift_bridgeObjectRelease();
  id v75 = v96;
  ((void (*)(char *, void, uint64_t))v33)(v96, *MEMORY[0x263F45F20], v6);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    a1 = sub_2408C3598(0, *(void *)(a1 + 16) + 1, 1, a1);
  }
  uint64_t v41 = (uint64_t)v122;
  unint64_t v77 = *(void *)(a1 + 16);
  unint64_t v76 = *(void *)(a1 + 24);
  if (v77 >= v76 >> 1) {
    a1 = sub_2408C3598(v76 > 1, v77 + 1, 1, a1);
  }
  *(void *)(a1 + 16) = v77 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(a1 + v41 + v77 * (void)v123, v75, v6);
  unint64_t v44 = a1;
  if (v120)
  {
LABEL_54:
    uint64_t v86 = v100;
    ((void (*)(char *, void, uint64_t))v116)(v100, v107, v117);
    ((void (*)(char *, void, uint64_t))v33)(v86, v114, v6);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v44 = sub_2408C3598(0, *(void *)(v44 + 16) + 1, 1, v44);
    }
    unint64_t v88 = *(void *)(v44 + 16);
    unint64_t v87 = *(void *)(v44 + 24);
    if (v88 >= v87 >> 1) {
      unint64_t v44 = sub_2408C3598(v87 > 1, v88 + 1, 1, v44);
    }
    *(void *)(v44 + 16) = v88 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v44 + v41 + v88 * (void)v123, v100, v6);
  }
LABEL_59:
  a1 = v44;
  if (!v99) {
    goto LABEL_64;
  }
LABEL_60:
  unint64_t v44 = (unint64_t)v104;
  ((void (*)(char *, void, uint64_t))v33)(v104, v113, v6);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_75:
  }
    a1 = sub_2408C3598(0, *(void *)(a1 + 16) + 1, 1, a1);
  unint64_t v90 = *(void *)(a1 + 16);
  unint64_t v89 = *(void *)(a1 + 24);
  if (v90 >= v89 >> 1) {
    a1 = sub_2408C3598(v89 > 1, v90 + 1, 1, a1);
  }
  *(void *)(a1 + 16) = v90 + 1;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32))(a1 + v41 + v90 * (void)v123, v44, v6);
  unint64_t v44 = a1;
LABEL_64:
  if ((v105 & 1) == 0 && v103 >= 2)
  {
    uint64_t v91 = v101;
    ((void (*)(char *, void, uint64_t))v33)(v101, *MEMORY[0x263F45EF0], v6);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v44 = sub_2408C3598(0, *(void *)(v44 + 16) + 1, 1, v44);
    }
    unint64_t v93 = *(void *)(v44 + 16);
    unint64_t v92 = *(void *)(v44 + 24);
    if (v93 >= v92 >> 1) {
      unint64_t v44 = sub_2408C3598(v92 > 1, v93 + 1, 1, v44);
    }
    *(void *)(v44 + 16) = v93 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v44 + v41 + v93 * (void)v123, v91, v6);
  }
  return v44;
}

void *sub_2408EC7D8(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2409526C8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v32 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  char v32 = (char *)&v32 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v32 - v14;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_2409553D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v17 = (void *)MEMORY[0x263F8EE78];
  if (v16)
  {
    unint64_t v35 = (void *)MEMORY[0x263F8EE78];
    uint64_t v17 = &v35;
    sub_240875EA8(0, v16 & ~(v16 >> 63), 0);
    if (v16 < 0)
    {
      __break(1u);
      goto LABEL_30;
    }
    int v33 = a2;
    uint64_t v34 = v11;
    uint64_t v17 = v35;
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v16; ++i)
      {
        MEMORY[0x2456015B0](i, a1);
        sub_2409526A8();
        swift_unknownObjectRelease();
        unint64_t v35 = v17;
        unint64_t v20 = v17[2];
        unint64_t v19 = v17[3];
        if (v20 >= v19 >> 1)
        {
          sub_240875EA8(v19 > 1, v20 + 1, 1);
          uint64_t v17 = v35;
        }
        v17[2] = v20 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v17+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v20, v15, v4);
      }
    }
    else
    {
      uint64_t v21 = (id *)(a1 + 32);
      do
      {
        id v22 = *v21;
        sub_2409526A8();

        unint64_t v35 = v17;
        unint64_t v24 = v17[2];
        unint64_t v23 = v17[3];
        if (v24 >= v23 >> 1)
        {
          sub_240875EA8(v23 > 1, v24 + 1, 1);
          uint64_t v17 = v35;
        }
        v17[2] = v24 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v17+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v24, v8, v4);
        ++v21;
        --v16;
      }
      while (v16);
    }
    uint64_t v11 = v34;
    LOBYTE(a2) = v33;
  }
  if ((a2 & 1) == 0) {
    return v17;
  }
  a2 = v17[2];
  uint64_t v25 = *(void (**)(char *, void, uint64_t))(v5 + 104);
  if (a2)
  {
    v25(v11, *MEMORY[0x263F45F10], v4);
    if (swift_isUniquelyReferenced_nonNull_native())
    {
LABEL_19:
      unint64_t v27 = v17[2];
      unint64_t v26 = v17[3];
      if (v27 >= v26 >> 1) {
        uint64_t v17 = (void *)sub_2408C3598(v26 > 1, v27 + 1, 1, (unint64_t)v17);
      }
      v17[2] = v27 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v17+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v27, v11, v4);
      return v17;
    }
LABEL_30:
    uint64_t v17 = (void *)sub_2408C3598(0, a2 + 1, 1, (unint64_t)v17);
    goto LABEL_19;
  }
  uint64_t v28 = v32;
  v25(v32, *MEMORY[0x263F45EF8], v4);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v17 = (void *)sub_2408C3598(0, 1, 1, (unint64_t)v17);
  }
  unint64_t v30 = v17[2];
  unint64_t v29 = v17[3];
  if (v30 >= v29 >> 1) {
    uint64_t v17 = (void *)sub_2408C3598(v29 > 1, v30 + 1, 1, (unint64_t)v17);
  }
  v17[2] = v30 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v17+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v30, v28, v4);
  return v17;
}

uint64_t sub_2408ECC28()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_2408ECC70(uint64_t a1, unint64_t a2)
{
  return sub_2408E9CFC(a1, a2, *(void *)(v2 + 16), *(unsigned __int8 *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_2408ECC80@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  return result;
}

void sub_2408ECCB8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_2408ECD38()
{
  return sub_240829E08(&qword_26AFCF2B8, sub_240841404);
}

uint64_t sub_2408ECD6C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

unint64_t sub_2408ECDA4()
{
  unint64_t result = qword_26AFCF340;
  if (!qword_26AFCF340)
  {
    sub_2408ECCB8(255, (unint64_t *)&qword_26AFCF348, (uint64_t (*)(uint64_t))sub_240841404, sub_2408ECD38, MEMORY[0x263EFDE30]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCF340);
  }
  return result;
}

uint64_t sub_2408ECE44(char a1, int a2)
{
  uint64_t v5 = *(void *)(sub_240951C08() - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_2408E8E24(a1, a2, v6, v7);
}

uint64_t sub_2408ECEC8@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  return result;
}

unint64_t sub_2408ECF04()
{
  unint64_t result = qword_26AFCF188;
  if (!qword_26AFCF188)
  {
    sub_2408ECFE4(255, &qword_26AFCF190, sub_240841404, (void (*)(void))sub_2408ECD38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCF188);
  }
  return result;
}

void sub_2408ECF8C()
{
  if (!qword_26AFCF308)
  {
    unint64_t v0 = sub_240954398();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF308);
    }
  }
}

void sub_2408ECFE4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    sub_2408413A0(255, (unint64_t *)&qword_26AFCDCF8, sub_2408EB6FC);
    a3(255);
    sub_2408A5C68();
    a4();
    unint64_t v7 = sub_240954278();
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_2408ED09C()
{
  return sub_240829E08(&qword_26AFCF300, (void (*)(uint64_t))sub_2408ECF8C);
}

unint64_t sub_2408ED0D0()
{
  unint64_t result = qword_268C916E8;
  if (!qword_268C916E8)
  {
    sub_2408EB4DC(255, &qword_26AFCDDE8, (uint64_t (*)(uint64_t))sub_2408EB6FC, MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C916E8);
  }
  return result;
}

uint64_t sub_2408ED15C()
{
  uint64_t v1 = sub_240951C08();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_2408ED228@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_240951C08();

  return sub_2408E953C(a1, a2);
}

unint64_t sub_2408ED2AC()
{
  unint64_t result = qword_26AFCF178;
  if (!qword_26AFCF178)
  {
    sub_2408ECFE4(255, &qword_26AFCF180, (void (*)(uint64_t))sub_2408ECF8C, (void (*)(void))sub_2408ED09C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCF178);
  }
  return result;
}

void sub_2408ED33C(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  uint64_t v84 = a4;
  uint64_t v86 = a3;
  sub_24082ECEC(0, &qword_26AFD03B8, MEMORY[0x263F45630], MEMORY[0x263F8D8F0]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  unint64_t v11 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v78 - v12;
  uint64_t v14 = sub_240951E78();
  uint64_t v82 = *(void *)(v14 - 8);
  uint64_t v83 = v14;
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  char v81 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  unint64_t v80 = (char *)&v78 - v18;
  MEMORY[0x270FA5388](v17);
  unint64_t v20 = (char *)&v78 - v19;
  uint64_t v85 = sub_2409540C8();
  uint64_t v21 = *(void *)(v85 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v85);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v78 - v24;
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v28 = (char *)&v78 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v31 = (char *)&v78 - v30;
  unint64_t v32 = *a1;
  if (!v32)
  {
    sub_240954078();
    char v47 = sub_2409540B8();
    os_log_type_t v48 = sub_240954C38();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      uint64_t v88 = v50;
      *(_DWORD *)uint64_t v49 = 136315138;
      uint64_t v51 = sub_2409557A8();
      uint64_t v87 = sub_2408370E4(v51, v52, &v88);
      sub_2409550B8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240818000, v47, v48, "[%s] accounts publisher returned nil", v49, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v50, -1, -1);
      MEMORY[0x2456021C0](v49, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v21 + 8))(v31, v85);
    goto LABEL_26;
  }
  uint64_t v78 = v29;
  uint64_t v79 = v21;
  int v33 = a5;
  id v34 = objc_msgSend(*(id *)(a2 + *(int *)(type metadata accessor for HealthRecordsGeneratorContext() + 20)), sel_supportsClinicalSharing);
  int v35 = (int)v34;
  if (v32 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_2409553D8();
    id v34 = (id)swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v36 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v36) {
    int v37 = 0;
  }
  else {
    int v37 = v35;
  }
  if (v37 == 1)
  {
    uint64_t v38 = (void *)sub_240951F68();
    sub_2408EDDC0(1, (uint64_t)v38, (uint64_t)v13);

    uint64_t v40 = v82;
    uint64_t v39 = v83;
    a5 = v33;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v13, 1, v83) == 1)
    {
      sub_240848FE8((uint64_t)v13, &qword_26AFD03B8, MEMORY[0x263F45630]);
      sub_240954078();
      uint64_t v41 = sub_2409540B8();
      os_log_type_t v42 = sub_240954C38();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = (uint8_t *)swift_slowAlloc();
        uint64_t v44 = swift_slowAlloc();
        uint64_t v88 = v44;
        *(_DWORD *)uint64_t v43 = 136315138;
        uint64_t v45 = sub_2409557A8();
        uint64_t v87 = sub_2408370E4(v45, v46, &v88);
        sub_2409550B8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240818000, v41, v42, "[%s] Could not make onboarding tile feed item", v43, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2456021C0](v44, -1, -1);
        MEMORY[0x2456021C0](v43, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v79 + 8))(v28, v85);
LABEL_26:
      unint64_t v54 = MEMORY[0x263F8EE78];
      goto LABEL_27;
    }
    uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
    v65(v20, v13, v39);
    sub_24082ECEC(0, &qword_26AFD05E0, MEMORY[0x263F45630], MEMORY[0x263F8E0F8]);
    unint64_t v66 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    unint64_t v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = xmmword_240956800;
    v65((char *)(v54 + v66), v20, v39);
  }
  else
  {
    MEMORY[0x270FA5388](v34);
    *(&v78 - 4) = v86;
    *(&v78 - 3) = a2;
    *(&v78 - 2) = v84;
    sub_240934B70((void (*)(id *))sub_2408F0A30, (uint64_t)(&v78 - 6), v32);
    unint64_t v54 = v53;
    a5 = v33;
    if (!*(void *)(v53 + 16))
    {
      swift_bridgeObjectRelease();
      sub_240954078();
      unint64_t v67 = sub_2409540B8();
      os_log_type_t v68 = sub_240954C38();
      if (os_log_type_enabled(v67, v68))
      {
        unint64_t v69 = (uint8_t *)swift_slowAlloc();
        uint64_t v70 = swift_slowAlloc();
        uint64_t v88 = v70;
        *(_DWORD *)unint64_t v69 = 136315138;
        uint64_t v71 = sub_2409557A8();
        uint64_t v87 = sub_2408370E4(v71, v72, &v88);
        sub_2409550B8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240818000, v67, v68, "[%s] failed to make any sharing account feed items", v69, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2456021C0](v70, -1, -1);
        MEMORY[0x2456021C0](v69, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v79 + 8))(v25, v85);
      goto LABEL_26;
    }
    if (v35)
    {
      unint64_t v55 = (void *)sub_240951F68();
      sub_2408EDDC0(0, (uint64_t)v55, (uint64_t)v11);

      uint64_t v57 = v82;
      uint64_t v56 = v83;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v11, 1, v83) == 1)
      {
        swift_bridgeObjectRelease();
        sub_240848FE8((uint64_t)v11, &qword_26AFD03B8, MEMORY[0x263F45630]);
        uint64_t v58 = v78;
        sub_240954078();
        unint64_t v59 = sub_2409540B8();
        os_log_type_t v60 = sub_240954C38();
        if (os_log_type_enabled(v59, v60))
        {
          int v61 = (uint8_t *)swift_slowAlloc();
          uint64_t v62 = swift_slowAlloc();
          uint64_t v88 = v62;
          *(_DWORD *)int v61 = 136315138;
          uint64_t v63 = sub_2409557A8();
          uint64_t v87 = sub_2408370E4(v63, v64, &v88);
          sub_2409550B8();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_240818000, v59, v60, "[%s] Could not make onboarding tile feed item", v61, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2456021C0](v62, -1, -1);
          MEMORY[0x2456021C0](v61, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v58, v85);
        goto LABEL_26;
      }
      uint64_t v73 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
      uint64_t v74 = v80;
      v73(v80, v11, v56);
      id v75 = v81;
      (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v81, v74, v56);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v54 = sub_2408C3044(0, *(void *)(v54 + 16) + 1, 1, v54);
      }
      unint64_t v77 = *(void *)(v54 + 16);
      unint64_t v76 = *(void *)(v54 + 24);
      if (v77 >= v76 >> 1) {
        unint64_t v54 = sub_2408C3044(v76 > 1, v77 + 1, 1, v54);
      }
      *(void *)(v54 + 16) = v77 + 1;
      v73((char *)(v54+ ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80))+ *(void *)(v57 + 72) * v77), v75, v56);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v74, v56);
    }
  }
LABEL_27:
  *a5 = v54;
}

uint64_t sub_2408EDDC0@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  v39[3] = a2;
  LODWORD(v48) = a1;
  uint64_t v49 = a3;
  uint64_t v5 = sub_240951C08();
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  MEMORY[0x270FA5388](v5);
  os_log_type_t v42 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240951E78();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v43 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2409540C8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v39 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v39 - v16;
  sub_240954078();
  uint64_t v18 = sub_2409540B8();
  os_log_type_t v19 = sub_240954C38();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v46 = v11;
  uint64_t v47 = v10;
  v39[1] = v4;
  v39[2] = v15;
  if (v20)
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v51 = v22;
    *(_DWORD *)uint64_t v21 = 136315138;
    uint64_t v45 = (uint64_t)(v21 + 4);
    uint64_t v23 = sub_2409557A8();
    uint64_t v50 = sub_2408370E4(v23, v24, &v51);
    sub_2409550B8();
    uint64_t v10 = v47;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v18, v19, "%s Making account sharing onboarding tile feed item", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v22, -1, -1);
    MEMORY[0x2456021C0](v21, -1, -1);

    uint64_t v44 = *(void (**)(char *, uint64_t))(v46 + 8);
  }
  else
  {

    uint64_t v44 = *(void (**)(char *, uint64_t))(v11 + 8);
  }
  v44(v17, v10);
  sub_2409517C8();
  swift_allocObject();
  uint64_t v45 = sub_2409517B8();
  if (v48)
  {
    if (qword_26AFCEC70 != -1) {
      swift_once();
    }
    uint64_t v51 = qword_26AFD0A50;
    uint64_t v52 = *(void *)algn_26AFD0A58;
    sub_2408F0A50();
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_2409517A8();
  }
  else
  {
    if (qword_268C905A8 != -1) {
      swift_once();
    }
    uint64_t v51 = qword_268C99178;
    uint64_t v52 = qword_268C99180;
    sub_2408F0A50();
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_2409517A8();
  }
  uint64_t v27 = v25;
  unint64_t v28 = v26;
  swift_bridgeObjectRelease();
  sub_2409534B8();
  sub_2409534D8();
  uint64_t v29 = (void *)sub_240951C68();
  uint64_t v30 = sub_240952FE8();
  uint64_t v32 = v31;
  swift_bridgeObjectRelease();

  uint64_t v51 = v30;
  uint64_t v52 = v32;
  swift_bridgeObjectRetain();
  sub_2409548A8();
  swift_bridgeObjectRelease();
  type metadata accessor for ClinicalSharingOnboardingTileViewController();
  (*(void (**)(char *, void, uint64_t))(v40 + 104))(v42, *MEMORY[0x263F45580], v41);
  sub_2408A6118(v27, v28);
  sub_240951C98();
  int v33 = v43;
  sub_240951CC8();
  sub_240951E58();
  sub_240951D58();
  sub_240951D68();
  uint64_t v34 = sub_240951FE8();
  uint64_t v36 = v35;
  int v37 = (void (*)(uint64_t *, void))sub_240951E38();
  sub_240940118(&v50, v34, v36);
  swift_bridgeObjectRelease();
  v37(&v51, 0);
  sub_240849C48(v27, v28);
  swift_release();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v49, v33, v7);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v49, 0, 1, v7);
}

uint64_t sub_2408EE8D8@<X0>(void **a1@<X0>, uint64_t a2@<X3>, unsigned char *a3@<X8>)
{
  unint64_t v55 = a3;
  uint64_t v51 = a2;
  uint64_t v4 = sub_2409540C8();
  uint64_t v53 = *(void *)(v4 - 8);
  uint64_t v54 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v52 = &v46[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v50 = &v46[-v7];
  sub_24082ECEC(0, &qword_26AFD03B8, MEMORY[0x263F45630], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = &v46[-v9];
  uint64_t v11 = sub_240951E78();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = &v46[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = &v46[-v16];
  uint64_t v18 = *a1;
  os_log_type_t v19 = (void *)sub_240951F68();
  BOOL v20 = v18;
  uint64_t v21 = (unsigned char *)v11;
  sub_2408EEED0(v20, v19, (uint64_t)v10);

  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_240848FE8((uint64_t)v10, &qword_26AFD03B8, MEMORY[0x263F45630]);
    uint64_t v22 = v50;
    sub_240954078();
    uint64_t v23 = sub_2409540B8();
    os_log_type_t v24 = sub_240954C38();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v52 = (unsigned char *)v11;
      uint64_t v27 = v26;
      uint64_t v57 = v26;
      *(_DWORD *)uint64_t v25 = 136315138;
      uint64_t v28 = sub_2409557A8();
      uint64_t v56 = sub_2408370E4(v28, v29, &v57);
      sub_2409550B8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240818000, v23, v24, "%s Failed to make feed item", v25, 0xCu);
      uint64_t v30 = 1;
      swift_arrayDestroy();
      uint64_t v31 = v27;
      uint64_t v21 = v52;
      MEMORY[0x2456021C0](v31, -1, -1);
      MEMORY[0x2456021C0](v25, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v53 + 8))(v22, v54);
    }
    else
    {

      (*(void (**)(unsigned char *, uint64_t))(v53 + 8))(v22, v54);
      uint64_t v30 = 1;
    }
    uint64_t v44 = v55;
  }
  else
  {
    uint64_t v32 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 32);
    v32(v17, v10, v11);
    sub_240954078();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 16))(v15, v17, v11);
    int v33 = sub_2409540B8();
    os_log_type_t v34 = sub_240954C38();
    int v35 = v34;
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v49 = v32;
      uint64_t v50 = v17;
      uint64_t v37 = v36;
      uint64_t v48 = swift_slowAlloc();
      uint64_t v57 = v48;
      *(_DWORD *)uint64_t v37 = 136315394;
      int v47 = v35;
      uint64_t v38 = sub_2409557A8();
      uint64_t v56 = sub_2408370E4(v38, v39, &v57);
      sub_2409550B8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2080;
      uint64_t v40 = sub_240951D98();
      uint64_t v56 = sub_2408370E4(v40, v41, &v57);
      sub_2409550B8();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v15, v11);
      _os_log_impl(&dword_240818000, v33, (os_log_type_t)v47, "%s Successfully made feed item: %s", (uint8_t *)v37, 0x16u);
      uint64_t v42 = v48;
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v42, -1, -1);
      uint64_t v43 = v37;
      uint64_t v32 = v49;
      uint64_t v17 = v50;
      MEMORY[0x2456021C0](v43, -1, -1);
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v15, v11);
    }

    (*(void (**)(unsigned char *, uint64_t))(v53 + 8))(v52, v54);
    uint64_t v44 = v55;
    v32(v55, v17, v11);
    uint64_t v30 = 0;
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, unsigned char *))(v12 + 56))(v44, v30, 1, v21);
}

uint64_t sub_2408EEED0@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v76 = a2;
  uint64_t v89 = a3;
  uint64_t v75 = sub_240951C08();
  uint64_t v73 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v74 = (char *)v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_240951E78();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v77 = (char *)v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24082ECEC(0, &qword_268C916F0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingFeedItemData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v86 = (char *)v71 - v9;
  uint64_t v87 = type metadata accessor for ClinicalSharingFeedItemData();
  uint64_t v85 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v80 = (uint64_t)v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_240951A98();
  uint64_t v82 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_2409540C8();
  uint64_t v90 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v79 = (char *)v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  char v81 = (char *)v71 - v18;
  MEMORY[0x270FA5388](v17);
  BOOL v20 = (char *)v71 - v19;
  sub_240954078();
  id v21 = a1;
  uint64_t v22 = sub_2409540B8();
  os_log_type_t v23 = sub_240954C38();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v83 = v6;
  uint64_t v84 = v5;
  uint64_t v88 = v14;
  uint64_t v78 = v11;
  if (v24)
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v72 = swift_slowAlloc();
    v93[0] = v72;
    *(_DWORD *)uint64_t v25 = 136315394;
    uint64_t v26 = sub_2409557A8();
    uint64_t v92 = sub_2408370E4(v26, v27, v93);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    v71[1] = v25 + 14;
    id v28 = objc_msgSend(v21, sel_identifier);
    sub_240951A78();

    sub_2408242C4(&qword_268C90688, MEMORY[0x263F07508]);
    uint64_t v29 = sub_2409555D8();
    unint64_t v31 = v30;
    (*(void (**)(char *, uint64_t))(v82 + 8))(v13, v11);
    uint64_t v92 = sub_2408370E4(v29, v31, v93);
    sub_2409550B8();

    uint64_t v14 = v88;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v22, v23, "%s Making feed item for account: %s", (uint8_t *)v25, 0x16u);
    uint64_t v32 = v72;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v32, -1, -1);
    MEMORY[0x2456021C0](v25, -1, -1);
  }
  else
  {
  }
  int v33 = *(void (**)(char *, uint64_t))(v90 + 8);
  v33(v20, v14);
  os_log_type_t v34 = v13;
  uint64_t v35 = (uint64_t)v86;
  uint64_t v36 = v87;
  uint64_t v37 = v85;
  id v38 = v21;
  ClinicalSharingFeedItemData.init(_:)(v38, v35);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36) == 1)
  {
    sub_240848FE8(v35, &qword_268C916F0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingFeedItemData);
    unint64_t v39 = v81;
    sub_240954078();
    id v40 = v38;
    unint64_t v41 = sub_2409540B8();
    os_log_type_t v42 = sub_240954C18();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = swift_slowAlloc();
      uint64_t v91 = swift_slowAlloc();
      v93[0] = v91;
      *(_DWORD *)uint64_t v43 = 136315394;
      uint64_t v44 = sub_2409557A8();
      uint64_t v92 = sub_2408370E4(v44, v45, v93);
      sub_2409550B8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2080;
      uint64_t v87 = v43 + 14;
      id v46 = objc_msgSend(v40, sel_identifier);
      sub_240951A78();

      sub_2408242C4(&qword_268C90688, MEMORY[0x263F07508]);
      int v47 = v34;
      uint64_t v48 = v78;
      uint64_t v49 = sub_2409555D8();
      unint64_t v51 = v50;
      (*(void (**)(char *, uint64_t))(v82 + 8))(v47, v48);
      uint64_t v92 = sub_2408370E4(v49, v51, v93);
      sub_2409550B8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240818000, v41, v42, "%s Failed to create feed item data for account: %s", (uint8_t *)v43, 0x16u);
      uint64_t v52 = v91;
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v52, -1, -1);
      MEMORY[0x2456021C0](v43, -1, -1);

      uint64_t v53 = v81;
      uint64_t v54 = v88;
    }
    else
    {

      uint64_t v53 = v39;
      uint64_t v54 = v14;
    }
    v33(v53, v54);
    uint64_t v69 = 1;
    uint64_t v68 = v83;
    uint64_t v67 = v84;
  }
  else
  {
    uint64_t v87 = (uint64_t)v33;
    uint64_t v91 = (uint64_t)v34;
    uint64_t v55 = v80;
    sub_240824530(v35, v80, (uint64_t (*)(void))type metadata accessor for ClinicalSharingFeedItemData);
    sub_2409517C8();
    swift_allocObject();
    sub_2409517B8();
    sub_2408242C4(&qword_268C916F8, (void (*)(uint64_t))type metadata accessor for ClinicalSharingFeedItemData);
    uint64_t v56 = sub_2409517A8();
    unint64_t v58 = v57;
    sub_2408A6118(v56, v57);
    unint64_t v59 = v76;
    sub_2409534C8();
    type metadata accessor for ClinicalSharingFeedItemViewController();
    (*(void (**)(char *, void, uint64_t))(v73 + 104))(v74, *MEMORY[0x263F454D8], v75);
    id v60 = v59;
    int v61 = v77;
    sub_240951CC8();
    uint64_t v62 = sub_240951FE8();
    uint64_t v64 = v63;
    uint64_t v65 = v55;
    unint64_t v66 = (void (*)(uint64_t *, void))sub_240951E38();
    sub_240940118(&v92, v62, v64);
    swift_bridgeObjectRelease();
    v66(v93, 0);
    swift_release();
    sub_240849C48(v56, v58);
    sub_24083B174(v65, (uint64_t (*)(void))type metadata accessor for ClinicalSharingFeedItemData);
    uint64_t v68 = v83;
    uint64_t v67 = v84;
    (*(void (**)(uint64_t, char *, uint64_t))(v83 + 32))(v89, v61, v84);
    uint64_t v69 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 56))(v89, v69, 1, v67);
}

uint64_t sub_2408EFCB0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = sub_2409540C8();
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v35 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  sub_240954078();
  swift_bridgeObjectRetain_n();
  uint64_t v11 = sub_2409540B8();
  os_log_type_t v12 = sub_240954C08();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v31 = a2;
    uint64_t v14 = v13;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v37 = v30;
    *(_DWORD *)uint64_t v14 = 136315394;
    uint64_t v33 = v3;
    uint64_t v15 = sub_2409557A8();
    uint64_t v36 = sub_2408370E4(v15, v16, &v37);
    uint64_t v32 = a3;
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    uint64_t v17 = sub_240951E78();
    uint64_t v18 = swift_bridgeObjectRetain();
    uint64_t v19 = MEMORY[0x245600C90](v18, v17);
    unint64_t v21 = v20;
    swift_bridgeObjectRelease();
    uint64_t v36 = sub_2408370E4(v19, v21, &v37);
    a3 = v32;
    sub_2409550B8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v11, v12, "[%s] computing changes for: %s", (uint8_t *)v14, 0x16u);
    uint64_t v22 = v30;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v22, -1, -1);
    MEMORY[0x2456021C0](v14, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v35);
  uint64_t v23 = sub_2409534B8();
  uint64_t v25 = v24;
  uint64_t v26 = sub_240951F68();
  sub_24083FEAC(0, &qword_26AFCDFB0, MEMORY[0x263F8E0F8]);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_240956800;
  *(void *)(v27 + 32) = v10;
  *(void *)(v27 + 40) = v23;
  *(void *)(v27 + 48) = v25;
  *(void *)(v27 + 56) = v26;
  *(unsigned char *)(v27 + 64) = -127;
  *a3 = v27;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2408EFFB8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_240864F38();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2409540C8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  os_log_type_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  sub_240954088();
  id v14 = v13;
  id v15 = v13;
  unint64_t v16 = sub_2409540B8();
  os_log_type_t v17 = sub_240954C18();
  int v40 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v38 = v6;
    uint64_t v19 = v18;
    uint64_t v37 = swift_slowAlloc();
    uint64_t v42 = v37;
    *(_DWORD *)uint64_t v19 = 136315394;
    uint64_t v39 = v5;
    uint64_t v20 = sub_2409557A8();
    uint64_t v41 = sub_2408370E4(v20, v21, &v42);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    uint64_t v36 = v19 + 14;
    uint64_t v41 = (uint64_t)v13;
    id v22 = v13;
    id v23 = v13;
    sub_24083F3C0();
    sub_240955658();
    id v24 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v25 = sub_2409547E8();
    uint64_t v35 = v9;
    uint64_t v26 = a2;
    unint64_t v28 = v27;

    uint64_t v29 = v25;
    uint64_t v5 = v39;
    uint64_t v41 = sub_2408370E4(v29, v28, &v42);
    sub_2409550B8();
    a2 = v26;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240818000, v16, (os_log_type_t)v40, "%s: Unable to compute desired difference for commit: %s", (uint8_t *)v19, 0x16u);
    uint64_t v30 = v37;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v30, -1, -1);
    uint64_t v31 = v19;
    uint64_t v6 = v38;
    MEMORY[0x2456021C0](v31, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v35);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v41 = MEMORY[0x263F8EE78];
  sub_24083FEAC(0, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F8D488]);
  sub_2409543A8();
  sub_2408242C4((unint64_t *)&qword_26AFCDDD8, (void (*)(uint64_t))sub_240864F38);
  uint64_t v32 = sub_240954498();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v32;
  return result;
}

uint64_t sub_2408F03D0()
{
  sub_24083B174(v0 + OBJC_IVAR____TtC13HealthRecords24ClinicalSharingGenerator_context, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HealthRecords24ClinicalSharingGenerator_domain;
  uint64_t v2 = sub_240951F18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_2408F04A4()
{
  return type metadata accessor for ClinicalSharingGenerator();
}

uint64_t sub_2408F04AC()
{
  uint64_t result = type metadata accessor for HealthRecordsGeneratorContext();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_240951F18();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_2408F0584()
{
  return swift_retain();
}

uint64_t sub_2408F0598@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC13HealthRecords24ClinicalSharingGenerator_domain;
  uint64_t v4 = sub_240951F18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_2408F0610()
{
  if (!qword_26AFCC610)
  {
    sub_24083EDCC(255, (unint64_t *)&qword_26AFD05A0);
    unint64_t v0 = sub_240954A38();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCC610);
    }
  }
}

uint64_t sub_2408F0678()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2408F06B0@<X0>(uint64_t *a1@<X8>)
{
  return sub_2408AE3B4(*(void **)(v1 + 16), a1);
}

uint64_t sub_2408F06B8()
{
  uint64_t v1 = (int *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x270FA0238](v0, v5, v4);
}

void sub_2408F07BC(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v2 + v7);
  uint64_t v9 = *(void *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_2408ED33C(a1, v2 + v6, v8, v9, a2);
}

uint64_t sub_2408F0874()
{
  uint64_t v1 = (int *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_2408F0970@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  return sub_2408EFCB0(a1, v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2);
}

uint64_t sub_2408F0A18()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2408F0A28@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2408EFFB8(a1, a2);
}

uint64_t sub_2408F0A30@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_2408EE8D8(a1, *(void *)(v2 + 32), a2);
}

unint64_t sub_2408F0A50()
{
  unint64_t result = qword_26AFCEC78;
  if (!qword_26AFCEC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCEC78);
  }
  return result;
}

uint64_t *sub_2408F0AA4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2409528B8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_24082EF28(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    id v14 = (uint64_t *)((char *)a1 + v12);
    id v15 = (uint64_t *)((char *)a2 + v12);
    uint64_t v16 = v15[1];
    *id v14 = *v15;
    v14[1] = v16;
    os_log_type_t v17 = (char *)a1 + v13;
    uint64_t v18 = (char *)a2 + v13;
    uint64_t v19 = sub_240951A28();
    uint64_t v20 = *(void *)(v19 - 8);
    unint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    swift_bridgeObjectRetain();
    if (v21(v18, 1, v19))
    {
      sub_2408F0E34(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
      memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    uint64_t v24 = a3[8];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_24082EF28(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
    uint64_t v28 = v27;
    uint64_t v29 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v26, 1, v27))
    {
      sub_240851D44();
      memcpy(v25, v26, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v25, v26, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v25, 0, 1, v28);
    }
    uint64_t v31 = a3[9];
    uint64_t v32 = a3[10];
    uint64_t v33 = (uint64_t *)((char *)a1 + v31);
    uint64_t v34 = (uint64_t *)((char *)a2 + v31);
    uint64_t v35 = v34[1];
    *uint64_t v33 = *v34;
    v33[1] = v35;
    uint64_t v36 = (uint64_t *)((char *)a1 + v32);
    uint64_t v37 = (uint64_t *)((char *)a2 + v32);
    uint64_t v38 = v37[1];
    *uint64_t v36 = *v37;
    v36[1] = v38;
    uint64_t v39 = a3[11];
    uint64_t v40 = a3[12];
    uint64_t v41 = (char *)a1 + v39;
    uint64_t v42 = (char *)a2 + v39;
    *(void *)uint64_t v41 = *(void *)v42;
    v41[8] = v42[8];
    uint64_t v43 = (char *)a1 + v40;
    uint64_t v44 = (char *)a2 + v40;
    v43[8] = v44[8];
    *(void *)uint64_t v43 = *(void *)v44;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

void sub_2408F0E34(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240955098();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2408F0E88(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_24082EF28(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[7];
  uint64_t v8 = sub_240951A28();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  uint64_t v10 = a1 + a2[8];
  sub_24082EF28(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v10, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v10, v12);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2408F1098(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_24082EF28(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v11);
  id v14 = (void *)(a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = (void *)(a1 + v12);
  os_log_type_t v17 = (const void *)(a2 + v12);
  uint64_t v18 = sub_240951A28();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48);
  swift_bridgeObjectRetain();
  if (v20(v17, 1, v18))
  {
    sub_2408F0E34(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
    memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (const void *)(a2 + v22);
  sub_24082EF28(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
  uint64_t v26 = v25;
  uint64_t v27 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v24, 1, v25))
  {
    sub_240851D44();
    memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v27 + 16))(v23, v24, v26);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v23, 0, 1, v26);
  }
  uint64_t v29 = a3[9];
  uint64_t v30 = a3[10];
  uint64_t v31 = (void *)(a1 + v29);
  uint64_t v32 = (void *)(a2 + v29);
  uint64_t v33 = v32[1];
  *uint64_t v31 = *v32;
  v31[1] = v33;
  uint64_t v34 = (void *)(a1 + v30);
  uint64_t v35 = (void *)(a2 + v30);
  uint64_t v36 = v35[1];
  void *v34 = *v35;
  v34[1] = v36;
  uint64_t v37 = a3[11];
  uint64_t v38 = a3[12];
  uint64_t v39 = a1 + v37;
  uint64_t v40 = a2 + v37;
  *(void *)uint64_t v39 = *(void *)v40;
  *(unsigned char *)(v39 + 8) = *(unsigned char *)(v40 + 8);
  uint64_t v41 = a1 + v38;
  uint64_t v42 = a2 + v38;
  *(unsigned char *)(v41 + 8) = *(unsigned char *)(v42 + 8);
  *(void *)uint64_t v41 = *(void *)v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2408F13D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_24082EF28(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = sub_240951A28();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
LABEL_6:
    sub_2408F0E34(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
    memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 24))(v15, v16, v17);
LABEL_7:
  uint64_t v23 = a3[8];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  sub_24082EF28(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
  uint64_t v27 = v26;
  uint64_t v28 = *(void *)(v26 - 8);
  uint64_t v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 48);
  int v30 = v29(v24, 1, v26);
  int v31 = v29(v25, 1, v27);
  if (!v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v28 + 24))(v24, v25, v27);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v28 + 8))(v24, v27);
    goto LABEL_12;
  }
  if (v31)
  {
LABEL_12:
    sub_240851D44();
    memcpy(v24, v25, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v28 + 16))(v24, v25, v27);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v24, 0, 1, v27);
LABEL_13:
  uint64_t v33 = a3[9];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  void *v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[10];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (void *)(a2 + v36);
  *uint64_t v37 = *v38;
  v37[1] = v38[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v39 = a3[11];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = (uint64_t *)(a2 + v39);
  uint64_t v42 = *v41;
  *(unsigned char *)(v40 + 8) = *((unsigned char *)v41 + 8);
  *(void *)uint64_t v40 = v42;
  uint64_t v43 = a3[12];
  uint64_t v44 = a1 + v43;
  unint64_t v45 = (uint64_t *)(a2 + v43);
  uint64_t v46 = *v45;
  *(unsigned char *)(v44 + 8) = *((unsigned char *)v45 + 8);
  *(void *)uint64_t v44 = v46;
  return a1;
}

uint64_t sub_2408F1810(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_24082EF28(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_240951A28();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    sub_2408F0E34(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  sub_24082EF28(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
  uint64_t v21 = v20;
  uint64_t v22 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v20))
  {
    sub_240851D44();
    memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v18, v19, v21);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v21);
  }
  uint64_t v24 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v24) = *(_OWORD *)(a2 + v24);
  uint64_t v25 = a3[11];
  uint64_t v26 = a3[12];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  uint64_t v29 = a1 + v26;
  uint64_t v30 = a2 + v26;
  *(void *)uint64_t v29 = *(void *)v30;
  *(unsigned char *)(v29 + 8) = *(unsigned char *)(v30 + 8);
  return a1;
}

uint64_t sub_2408F1B1C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_24082EF28(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = sub_240951A28();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v23)
  {
    (*(void (**)(void *, uint64_t))(v20 + 8))(v17, v19);
LABEL_6:
    sub_2408F0E34(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v20 + 40))(v17, v18, v19);
LABEL_7:
  uint64_t v25 = a3[8];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  sub_24082EF28(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
  uint64_t v29 = v28;
  uint64_t v30 = *(void *)(v28 - 8);
  int v31 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v30 + 48);
  int v32 = v31(v26, 1, v28);
  int v33 = v31(v27, 1, v29);
  if (!v32)
  {
    if (!v33)
    {
      (*(void (**)(void *, void *, uint64_t))(v30 + 40))(v26, v27, v29);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v30 + 8))(v26, v29);
    goto LABEL_12;
  }
  if (v33)
  {
LABEL_12:
    sub_240851D44();
    memcpy(v26, v27, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v30 + 32))(v26, v27, v29);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v26, 0, 1, v29);
LABEL_13:
  uint64_t v35 = a3[9];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (uint64_t *)(a2 + v35);
  uint64_t v39 = *v37;
  uint64_t v38 = v37[1];
  *uint64_t v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[10];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (uint64_t *)(a2 + v40);
  uint64_t v44 = *v42;
  uint64_t v43 = v42[1];
  *uint64_t v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  uint64_t v45 = a3[11];
  uint64_t v46 = a3[12];
  uint64_t v47 = a1 + v45;
  uint64_t v48 = a2 + v45;
  *(void *)uint64_t v47 = *(void *)v48;
  *(unsigned char *)(v47 + 8) = *(unsigned char *)(v48 + 8);
  uint64_t v49 = a1 + v46;
  uint64_t v50 = a2 + v46;
  *(void *)uint64_t v49 = *(void *)v50;
  *(unsigned char *)(v49 + 8) = *(unsigned char *)(v50 + 8);
  return a1;
}

uint64_t sub_2408F1F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2408F1F34);
}

uint64_t sub_2408F1F34(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2409528B8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  sub_24082EF28(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_11:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[6] + 8);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    sub_2408F0E34(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
    if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
    {
      uint64_t v8 = v16;
      uint64_t v12 = *(void *)(v16 - 8);
      uint64_t v13 = a3[7];
      goto LABEL_11;
    }
    sub_240851D44();
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
    uint64_t v19 = v17;
    uint64_t v20 = a1 + a3[8];
    return v18(v20, a2, v19);
  }
}

uint64_t sub_2408F2138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2408F214C);
}

void sub_2408F214C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_2409528B8();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    v11(v12, a2, a2, v10);
    return;
  }
  sub_24082EF28(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6] + 8) = (a2 - 1);
    return;
  }
  sub_2408F0E34(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  sub_240851D44();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a4[8];

  v18(v20, a2, a2, v19);
}

uint64_t type metadata accessor for UserDomainConceptFeedItemData()
{
  uint64_t result = qword_26AFCD548;
  if (!qword_26AFCD548) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2408F239C()
{
  sub_2409528B8();
  if (v0 <= 0x3F)
  {
    sub_24082EF28(319, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
    if (v1 <= 0x3F)
    {
      sub_2408F0E34(319, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
      if (v2 <= 0x3F)
      {
        sub_240851D44();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_2408F2530(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, unsigned __int8 a10, uint64_t a11, unsigned __int8 a12)
{
  uint64_t v63 = a5;
  uint64_t v65 = a3;
  uint64_t v66 = a4;
  sub_2408F0E34(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v62 = (uint64_t)&v54 - v19;
  sub_24082EF28(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
  uint64_t v61 = v20;
  uint64_t v64 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v69 = (char *)&v54 - v21;
  sub_2408F0E34(0, &qword_26AFCC5E0, MEMORY[0x263F46018]);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v24 = (char *)&v54 - v23;
  uint64_t v68 = sub_2409528B8();
  uint64_t v25 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v67 = (char *)&v54 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v27 = objc_msgSend(a1, sel_categoryTypes);
  sub_24083EDCC(0, &qword_268C90948);
  unint64_t v28 = sub_240954998();

  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_2409553D8();
    swift_bridgeObjectRelease();
    if (v31) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  if (!*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v28 & 0xC000000000000001) != 0)
  {
    id v29 = (id)MEMORY[0x2456015B0](0, v28);
  }
  else
  {
    if (!*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v29 = *(id *)(v28 + 32);
  }
  uint64_t v30 = v29;
  swift_bridgeObjectRelease();
  objc_msgSend(v30, sel_integerValue);

LABEL_9:
  sub_240952898();
  uint64_t v32 = v68;
  int v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v24, 1, v68);
  uint64_t v60 = a6;
  if (v33 == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v25 + 104))(v67, *MEMORY[0x263F45FF8], v32);
    sub_240849B20((uint64_t)v24, &qword_26AFCC5E0, MEMORY[0x263F46018]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v67, v24, v32);
  }
  int v59 = a12;
  uint64_t v58 = a11;
  int v57 = a10;
  sub_24083EDCC(0, &qword_26AFCDF40);
  id v34 = a1;
  sub_240954688();
  uint64_t v35 = sub_240954EB8();
  uint64_t v55 = v36;
  uint64_t v56 = v35;
  uint64_t v37 = sub_240951A28();
  uint64_t v38 = *(void *)(v37 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(a2, 1, v37) == 1)
  {
    uint64_t v39 = a7;
    uint64_t v40 = a8;
    uint64_t v41 = a2;
    id v42 = objc_msgSend(v34, sel_modificationDate);
    uint64_t v43 = v62;
    sub_240951A08();

    a2 = v41;
    a8 = v40;
    a7 = v39;

    uint64_t v44 = v43;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v43, 0, 1, v37);
  }
  else
  {

    uint64_t v44 = v62;
    sub_240882BF4(a2, v62);
  }
  uint64_t v45 = v63;
  uint64_t v46 = v61;
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(a9, v67, v68);
  uint64_t v47 = (int *)type metadata accessor for UserDomainConceptFeedItemData();
  (*(void (**)(uint64_t, char *, uint64_t))(v64 + 32))(a9 + v47[5], v69, v46);
  uint64_t v48 = (uint64_t *)(a9 + v47[6]);
  uint64_t v49 = v55;
  *uint64_t v48 = v56;
  v48[1] = v49;
  sub_240882AA0(v44, a9 + v47[7]);
  sub_2408F4224(v65, a9 + v47[8]);
  uint64_t v50 = (void *)(a9 + v47[9]);
  *uint64_t v50 = v66;
  v50[1] = v45;
  unint64_t v51 = (void *)(a9 + v47[10]);
  *unint64_t v51 = v60;
  v51[1] = a7;
  uint64_t v52 = a9 + v47[11];
  *(void *)uint64_t v52 = a8;
  *(unsigned char *)(v52 + 8) = v57 & 1;
  uint64_t v53 = a9 + v47[12];
  *(void *)uint64_t v53 = v58;
  *(unsigned char *)(v53 + 8) = v59 & 1;
  sub_240849B20(a2, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
}

uint64_t sub_2408F2B28()
{
  sub_24082EF28(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
  uint64_t v20 = *(void *)(v1 - 8);
  uint64_t v21 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v19 = (char *)&v18 - v2;
  sub_240851D44();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240951A28();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408F0E34(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v18 - v11;
  sub_2409528B8();
  sub_2408F4F98(&qword_268C90DD0, MEMORY[0x263F46018]);
  sub_240954708();
  uint64_t v13 = (int *)type metadata accessor for UserDomainConceptFeedItemData();
  sub_24082EF28(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
  sub_2408F43A8();
  sub_240954708();
  swift_bridgeObjectRetain();
  sub_240954868();
  swift_bridgeObjectRelease();
  sub_240882BF4(v0 + v13[7], (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    sub_240955718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    sub_240955718();
    sub_2408F4F98(&qword_268C90D10, MEMORY[0x263F07490]);
    sub_240954708();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  uint64_t v15 = v20;
  uint64_t v14 = v21;
  sub_2408F4464(v0 + v13[8], (uint64_t)v5, (uint64_t (*)(void))sub_240851D44);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v5, 1, v14) == 1)
  {
    sub_240955718();
  }
  else
  {
    uint64_t v16 = v19;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v19, v5, v14);
    sub_240955718();
    sub_2408920A0(&qword_268C90E80, &qword_268C90E88);
    sub_240954708();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v16, v14);
  }
  if (*(void *)(v0 + v13[9] + 8))
  {
    sub_240955718();
    swift_bridgeObjectRetain();
    sub_240954868();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_240955718();
  }
  if (*(void *)(v0 + v13[10] + 8))
  {
    sub_240955718();
    swift_bridgeObjectRetain();
    sub_240954868();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_240955718();
  }
  if (*(unsigned char *)(v0 + v13[11] + 8) == 1)
  {
    sub_240955718();
  }
  else
  {
    sub_240955718();
    sub_240955708();
  }
  if (*(unsigned char *)(v0 + v13[12] + 8) == 1) {
    return sub_240955718();
  }
  sub_240955718();
  return sub_240955708();
}

unint64_t sub_2408F30C4(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x747065636E6F63;
      break;
    case 2:
      unint64_t result = 0x656C746974;
      break;
    case 3:
      unint64_t result = 0x66676E696E61656DLL;
      break;
    case 4:
      unint64_t result = 0x526E4965756C6176;
      break;
    case 5:
      unint64_t result = 0x73694465756C6176;
      break;
    case 6:
      unint64_t result = 0x7073694474696E75;
      break;
    case 7:
      unint64_t result = 0x657079547473696CLL;
      break;
    case 8:
      unint64_t result = 0x6564724F7473696CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2408F320C(void *a1)
{
  sub_2408F42E8(0, &qword_268C91720, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v9[-v6];
  sub_2408304E8(a1, a1[3]);
  sub_2408F41D0();
  sub_240955778();
  v9[15] = 0;
  sub_2409528B8();
  sub_2408F4F98(&qword_268C90DC8, MEMORY[0x263F46018]);
  sub_240955598();
  if (!v1)
  {
    type metadata accessor for UserDomainConceptFeedItemData();
    v9[14] = 1;
    sub_24082EF28(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
    sub_2408F434C(&qword_268C91728);
    sub_240955598();
    v9[13] = 2;
    sub_240955558();
    v9[12] = 3;
    sub_240951A28();
    sub_2408F4F98(&qword_26AFCC680, MEMORY[0x263F07490]);
    sub_240955548();
    v9[11] = 4;
    sub_24082EF28(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
    sub_2408941F4(&qword_268C90FF0);
    sub_240955548();
    v9[10] = 5;
    sub_240955518();
    v9[9] = 6;
    sub_240955518();
    v9[8] = 7;
    sub_240955538();
    v9[7] = 8;
    sub_240955528();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2408F3614@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a2;
  sub_240851D44();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v48 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408F0E34(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v49 = (char *)&v46 - v6;
  sub_24082EF28(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
  uint64_t v54 = v7;
  uint64_t v52 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v46 - v8;
  uint64_t v10 = sub_2409528B8();
  uint64_t v55 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408F42E8(0, &qword_268C91708, MEMORY[0x263F8E040]);
  uint64_t v50 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v46 - v15;
  uint64_t v57 = type metadata accessor for UserDomainConceptFeedItemData();
  MEMORY[0x270FA5388](v57);
  uint64_t v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a1[3];
  uint64_t v56 = a1;
  sub_2408304E8(a1, v19);
  sub_2408F41D0();
  uint64_t v53 = v16;
  uint64_t v20 = v58;
  sub_240955768();
  uint64_t v51 = v10;
  if (v20) {
    return sub_2408371B8((uint64_t)v56);
  }
  uint64_t v58 = v14;
  char v67 = 0;
  sub_2408F4F98(&qword_268C90DB8, MEMORY[0x263F46018]);
  sub_2409554F8();
  (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v18, v12, v10);
  char v66 = 1;
  sub_2408F434C(&qword_268C91718);
  uint64_t v21 = v54;
  sub_2409554F8();
  uint64_t v22 = (int *)v57;
  (*(void (**)(char *, char *, uint64_t))(v52 + 32))(&v18[*(int *)(v57 + 20)], v9, v21);
  char v65 = 2;
  uint64_t v23 = sub_2409554B8();
  uint64_t v24 = v18;
  uint64_t v25 = (uint64_t *)&v18[v22[6]];
  *uint64_t v25 = v23;
  v25[1] = v26;
  sub_240951A28();
  char v64 = 3;
  sub_2408F4F98(&qword_26AFCC688, MEMORY[0x263F07490]);
  uint64_t v27 = (uint64_t)v49;
  sub_2409554A8();
  uint64_t v28 = (uint64_t)v56;
  uint64_t v29 = v58;
  uint64_t v30 = (uint64_t)v24;
  sub_240882AA0(v27, (uint64_t)&v24[v22[7]]);
  sub_24082EF28(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
  char v63 = 4;
  sub_2408941F4(&qword_268C90FE0);
  uint64_t v31 = (uint64_t)v48;
  sub_2409554A8();
  uint64_t v32 = v30;
  sub_2408F4224(v31, v30 + v22[8]);
  char v62 = 5;
  uint64_t v33 = sub_240955478();
  id v34 = (uint64_t *)(v30 + v22[9]);
  uint64_t *v34 = v33;
  v34[1] = v35;
  char v61 = 6;
  uint64_t v36 = sub_240955478();
  uint64_t v37 = (uint64_t *)(v30 + v22[10]);
  *uint64_t v37 = v36;
  v37[1] = v38;
  char v60 = 7;
  uint64_t v39 = sub_240955498();
  uint64_t v40 = v30 + v22[11];
  *(void *)uint64_t v40 = v39;
  *(unsigned char *)(v40 + 8) = v41 & 1;
  char v59 = 8;
  uint64_t v42 = sub_240955488();
  LOBYTE(v30) = v43;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v53, v50);
  uint64_t v44 = v32 + v22[12];
  *(void *)uint64_t v44 = v42;
  *(unsigned char *)(v44 + 8) = v30 & 1;
  sub_2408F4464(v32, v47, (uint64_t (*)(void))type metadata accessor for UserDomainConceptFeedItemData);
  sub_2408371B8(v28);
  return sub_2408F4288(v32, (uint64_t (*)(void))type metadata accessor for UserDomainConceptFeedItemData);
}

unint64_t sub_2408F3F18()
{
  return sub_2408F30C4(*v0);
}

uint64_t sub_2408F3F20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2408F527C(a1, a2);
  *a3 = result;
  return result;
}

void sub_2408F3F48(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_2408F3F54(uint64_t a1)
{
  unint64_t v2 = sub_2408F41D0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2408F3F90(uint64_t a1)
{
  unint64_t v2 = sub_2408F41D0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2408F3FCC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2408F3614(a1, a2);
}

uint64_t sub_2408F3FE4(void *a1)
{
  return sub_2408F320C(a1);
}

uint64_t sub_2408F3FFC()
{
  return sub_240955748();
}

uint64_t sub_2408F4040()
{
  return sub_240955748();
}

uint64_t sub_2408F407C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240882BF4(v2 + *(int *)(a1 + 28), a2);
}

uint64_t sub_2408F408C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2408F4F98(&qword_268C91518, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);

  return MEMORY[0x270F37AC0](a1, v4, a2);
}

uint64_t sub_2408F4108()
{
  sub_2408F4F98(&qword_268C91518, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);

  return sub_240953418();
}

uint64_t sub_2408F4188()
{
  return sub_2408F4F98(&qword_268C91700, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
}

unint64_t sub_2408F41D0()
{
  unint64_t result = qword_268C91710;
  if (!qword_268C91710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91710);
  }
  return result;
}

uint64_t sub_2408F4224(uint64_t a1, uint64_t a2)
{
  sub_240851D44();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2408F4288(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_2408F42E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_2408F41D0();
    unint64_t v7 = a3(a1, &type metadata for UserDomainConceptFeedItemData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_2408F434C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24082EF28(255, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2408F43A8()
{
  unint64_t result = qword_268C91730;
  if (!qword_268C91730)
  {
    sub_24082EF28(255, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
    sub_24083F780(&qword_268C91738, &qword_26AFCDF40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91730);
  }
  return result;
}

uint64_t sub_2408F4464(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2408F44CC(uint64_t a1, uint64_t a2)
{
  sub_24082EF28(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
  uint64_t v5 = v4;
  uint64_t v101 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v97 = (char *)&v91 - v6;
  sub_24089214C();
  uint64_t v100 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240851D44();
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v98 = (uint64_t)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v103 = (uint64_t)&v91 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v91 - v15;
  uint64_t v104 = sub_240951A28();
  uint64_t v106 = *(void *)(v104 - 8);
  MEMORY[0x270FA5388](v104);
  int v99 = (char *)&v91 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408834C8();
  uint64_t v19 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v107 = (uint64_t)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408F0E34(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  uint64_t v102 = (uint64_t)&v91 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v91 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v105 = (uint64_t)&v91 - v27;
  sub_2409528B8();
  sub_2408F4F98(&qword_268C90DD8, MEMORY[0x263F46018]);
  sub_240954968();
  sub_240954968();
  if (v109 != v108) {
    return 0;
  }
  uint64_t v94 = v16;
  uint64_t v95 = v9;
  uint64_t v96 = v5;
  uint64_t v28 = type metadata accessor for UserDomainConceptFeedItemData();
  sub_24083EDCC(0, &qword_26AFCDF40);
  sub_24083F780(&qword_268C91740, &qword_26AFCDF40);
  if ((sub_240954668() & 1) == 0) {
    return 0;
  }
  uint64_t v29 = *(int *)(v28 + 24);
  uint64_t v30 = *(void *)(a1 + v29);
  uint64_t v31 = *(void *)(a1 + v29 + 8);
  uint64_t v32 = (void *)(a2 + v29);
  if (v30 != *v32 || v31 != v32[1])
  {
    char v33 = sub_240955618();
    uint64_t result = 0;
    if ((v33 & 1) == 0) {
      return result;
    }
  }
  uint64_t v35 = v105;
  sub_240882BF4(a1 + *(int *)(v28 + 28), v105);
  uint64_t v92 = a2;
  unint64_t v93 = (int *)v28;
  sub_240882BF4(a2 + *(int *)(v28 + 28), (uint64_t)v26);
  uint64_t v36 = v107;
  uint64_t v37 = v107 + *(int *)(v19 + 48);
  sub_240882BF4(v35, v107);
  sub_240882BF4((uint64_t)v26, v37);
  uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v106 + 48);
  uint64_t v39 = v104;
  if (v38(v36, 1, v104) == 1)
  {
    uint64_t v91 = a1;
    uint64_t v40 = (void (*)(uint64_t))MEMORY[0x263F07490];
    sub_240849B20((uint64_t)v26, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
    char v41 = v40;
    uint64_t v36 = v107;
    sub_240849B20(v35, (unint64_t *)&qword_26AFCF7F8, v41);
    int v42 = v38(v37, 1, v39);
    uint64_t v43 = v96;
    if (v42 == 1)
    {
      sub_240849B20(v36, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
      goto LABEL_13;
    }
LABEL_11:
    uint64_t v47 = sub_2408834C8;
    uint64_t v48 = v36;
LABEL_19:
    sub_2408F4288(v48, (uint64_t (*)(void))v47);
    return 0;
  }
  uint64_t v44 = v102;
  sub_240882BF4(v36, v102);
  int v45 = v38(v37, 1, v39);
  uint64_t v43 = v96;
  if (v45 == 1)
  {
    uint64_t v46 = (void (*)(uint64_t))MEMORY[0x263F07490];
    sub_240849B20((uint64_t)v26, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
    sub_240849B20(v35, (unint64_t *)&qword_26AFCF7F8, v46);
    (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v44, v39);
    goto LABEL_11;
  }
  uint64_t v91 = a1;
  uint64_t v49 = v44;
  uint64_t v50 = v106;
  uint64_t v51 = v99;
  (*(void (**)(char *, uint64_t, uint64_t))(v106 + 32))(v99, v37, v39);
  sub_2408F4F98(&qword_268C90D18, MEMORY[0x263F07490]);
  char v52 = sub_240954778();
  uint64_t v53 = *(void (**)(char *, uint64_t))(v50 + 8);
  v53(v51, v39);
  uint64_t v54 = (void (*)(uint64_t))MEMORY[0x263F07490];
  sub_240849B20((uint64_t)v26, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
  sub_240849B20(v105, (unint64_t *)&qword_26AFCF7F8, v54);
  v53((char *)v49, v39);
  sub_240849B20(v36, (unint64_t *)&qword_26AFCF7F8, v54);
  if ((v52 & 1) == 0) {
    return 0;
  }
LABEL_13:
  uint64_t v55 = v93;
  uint64_t v56 = (uint64_t)v94;
  sub_2408F4464(v91 + v93[8], (uint64_t)v94, (uint64_t (*)(void))sub_240851D44);
  uint64_t v57 = v103;
  sub_2408F4464(v92 + v55[8], v103, (uint64_t (*)(void))sub_240851D44);
  uint64_t v58 = (uint64_t)v95;
  uint64_t v59 = (uint64_t)&v95[*(int *)(v100 + 48)];
  sub_2408F4464(v56, (uint64_t)v95, (uint64_t (*)(void))sub_240851D44);
  sub_2408F4464(v57, v59, (uint64_t (*)(void))sub_240851D44);
  uint64_t v60 = v101;
  char v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48);
  if (v61(v58, 1, v43) == 1)
  {
    sub_2408F4288(v57, (uint64_t (*)(void))sub_240851D44);
    sub_2408F4288(v56, (uint64_t (*)(void))sub_240851D44);
    if (v61(v59, 1, v43) == 1)
    {
      sub_2408F4288((uint64_t)v95, (uint64_t (*)(void))sub_240851D44);
      goto LABEL_23;
    }
    goto LABEL_18;
  }
  uint64_t v62 = v98;
  sub_2408F4464(v58, v98, (uint64_t (*)(void))sub_240851D44);
  if (v61(v59, 1, v43) == 1)
  {
    sub_2408F4288(v103, (uint64_t (*)(void))sub_240851D44);
    sub_2408F4288((uint64_t)v94, (uint64_t (*)(void))sub_240851D44);
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v62, v43);
LABEL_18:
    uint64_t v47 = sub_24089214C;
    uint64_t v48 = (uint64_t)v95;
    goto LABEL_19;
  }
  char v63 = v97;
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v97, v59, v43);
  sub_2408920A0((unint64_t *)&qword_268C90EA8, &qword_268C90EB0);
  char v64 = sub_240954778();
  char v65 = *(void (**)(char *, uint64_t))(v60 + 8);
  v65(v63, v43);
  sub_2408F4288(v103, (uint64_t (*)(void))sub_240851D44);
  sub_2408F4288((uint64_t)v94, (uint64_t (*)(void))sub_240851D44);
  v65((char *)v62, v43);
  sub_2408F4288(v58, (uint64_t (*)(void))sub_240851D44);
  if ((v64 & 1) == 0) {
    return 0;
  }
LABEL_23:
  uint64_t v67 = v92;
  char v66 = v93;
  uint64_t v68 = v93[9];
  uint64_t v69 = v91;
  uint64_t v70 = (void *)(v91 + v68);
  uint64_t v71 = *(void *)(v91 + v68 + 8);
  uint64_t v72 = (void *)(v92 + v68);
  uint64_t v73 = v72[1];
  if (v71)
  {
    if (!v73) {
      return 0;
    }
    if (*v70 != *v72 || v71 != v73)
    {
      char v74 = sub_240955618();
      uint64_t result = 0;
      if ((v74 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v73)
  {
    return 0;
  }
  uint64_t v75 = v66[10];
  unint64_t v76 = (void *)(v69 + v75);
  uint64_t v77 = *(void *)(v69 + v75 + 8);
  uint64_t v78 = (void *)(v67 + v75);
  uint64_t v79 = v78[1];
  if (!v77)
  {
    if (v79) {
      return 0;
    }
LABEL_37:
    uint64_t v81 = v66[11];
    uint64_t v82 = (void *)(v69 + v81);
    char v83 = *(unsigned char *)(v69 + v81 + 8);
    uint64_t v84 = (void *)(v67 + v81);
    int v85 = *(unsigned __int8 *)(v67 + v81 + 8);
    if (v83)
    {
      if (v85) {
        goto LABEL_43;
      }
    }
    else
    {
      if (*v82 != *v84) {
        LOBYTE(v85) = 1;
      }
      if ((v85 & 1) == 0)
      {
LABEL_43:
        uint64_t v86 = v66[12];
        uint64_t v87 = (void *)(v69 + v86);
        char v88 = *(unsigned char *)(v69 + v86 + 8);
        uint64_t v89 = (void *)(v67 + v86);
        char v90 = *(unsigned char *)(v67 + v86 + 8);
        if (v88)
        {
          if (v90) {
            return 1;
          }
        }
        else
        {
          if (*v87 != *v89) {
            char v90 = 1;
          }
          if ((v90 & 1) == 0) {
            return 1;
          }
        }
      }
    }
    return 0;
  }
  if (!v79) {
    return 0;
  }
  if (*v76 == *v78 && v77 == v79) {
    goto LABEL_37;
  }
  char v80 = sub_240955618();
  uint64_t result = 0;
  if (v80) {
    goto LABEL_37;
  }
  return result;
}

uint64_t sub_2408F4F98(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for UserDomainConceptFeedItemData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for UserDomainConceptFeedItemData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2408F513CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserDomainConceptFeedItemData.CodingKeys()
{
  return &type metadata for UserDomainConceptFeedItemData.CodingKeys;
}

unint64_t sub_2408F5178()
{
  unint64_t result = qword_268C91748;
  if (!qword_268C91748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91748);
  }
  return result;
}

unint64_t sub_2408F51D0()
{
  unint64_t result = qword_268C91750;
  if (!qword_268C91750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91750);
  }
  return result;
}

unint64_t sub_2408F5228()
{
  unint64_t result = qword_268C91758;
  if (!qword_268C91758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91758);
  }
  return result;
}

uint64_t sub_2408F527C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x800000024095D0C0 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x747065636E6F63 && a2 == 0xE700000000000000 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x66676E696E61656DLL && a2 == 0xEE00657461446C75 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x526E4965756C6176 && a2 == 0xEC00000065676E61 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73694465756C6176 && a2 == 0xEC00000079616C70 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7073694474696E75 && a2 == 0xEB0000000079616CLL || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x657079547473696CLL && a2 == 0xE800000000000000 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6564724F7473696CLL && a2 == 0xE900000000000072)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v5 = sub_240955618();
    swift_bridgeObjectRelease();
    if (v5) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

ValueMetadata *type metadata accessor for NewLabRecordsFeedItemViewData()
{
  return &type metadata for NewLabRecordsFeedItemViewData;
}

uint64_t sub_2408F56A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240953A38();
  char v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_2408F5714(uint64_t a1)
{
  uint64_t v2 = sub_240953A38();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_2408F5778(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240953A38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_2408F57DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240953A38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_2408F5840(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240953A38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_2408F58A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240953A38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_2408F5908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2408F591C);
}

uint64_t sub_2408F591C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240953A38();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_2408F5988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2408F599C);
}

uint64_t sub_2408F599C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240953A38();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RecordKindFeedItemViewData()
{
  uint64_t result = qword_268C91760;
  if (!qword_268C91760) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2408F5A58()
{
  uint64_t result = sub_240953A38();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2408F5AE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_240953A38();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

unint64_t sub_2408F5B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240951808();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  int v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v37 - v9;
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  sub_2409517D8();
  sub_2409517F8();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v10, v4);
  sub_240864EE4();
  uint64_t v12 = sub_2409550D8();
  v11(v8, v4);
  uint64_t v37 = v12;
  sub_24088369C();
  sub_24084A9B0();
  uint64_t v13 = sub_240954728();
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  id v16 = objc_allocWithZone(MEMORY[0x263F089D8]);
  swift_bridgeObjectRetain();
  uint64_t v17 = (void *)sub_240954788();
  swift_bridgeObjectRelease();
  uint64_t v18 = (__CFString *)objc_msgSend(v16, sel_initWithString_, v17);

  CFStringTransform(v18, 0, (CFStringRef)*MEMORY[0x263EFFF58], 0);
  CFStringTransform(v18, 0, (CFStringRef)*MEMORY[0x263EFFF50], 0);
  uint64_t v37 = v13;
  uint64_t v38 = v15;
  sub_240954938();
  uint64_t v19 = sub_2409547F8();
  unint64_t v21 = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = HIBYTE(v21) & 0xF;
  if ((v21 & 0x2000000000000000) == 0) {
    uint64_t v22 = v19 & 0xFFFFFFFFFFFFLL;
  }
  if (!v22)
  {

LABEL_7:
    swift_bridgeObjectRelease();
    return 0xD000000000000012;
  }
  uint64_t v23 = sub_2408F5E98(1);
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  uint64_t v30 = MEMORY[0x245600B00](v23, v25, v27, v29);
  uint64_t v32 = v31;
  swift_bridgeObjectRelease();
  uint64_t v37 = v30;
  uint64_t v38 = v32;
  sub_2409548A8();
  uint64_t v33 = v37;
  swift_bridgeObjectRetain();
  id v34 = (void *)sub_240954788();
  swift_bridgeObjectRelease();
  id v35 = objc_msgSend(self, sel_systemImageNamed_, v34);

  if (!v35) {
    goto LABEL_7;
  }
  return v33;
}

uint64_t sub_2408F5E98(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_240954888();
    return sub_240954948();
  }
  return result;
}

uint64_t sub_2408F5F34()
{
  if (*(void *)(v0 + 40))
  {
    swift_retain();
    sub_240952A48();
    swift_release();
  }

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_2408F5FAC()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void *sub_2408F5FE4()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

void *sub_2408F600C()
{
  uint64_t v1 = *(void **)(v0 + 40);
  id v2 = v1;
  return v1;
}

uint64_t sub_2408F6034()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t sub_2408F603C()
{
  return *(unsigned __int8 *)(v0 + 49);
}

double sub_2408F6044()
{
  double result = 0.0;
  xmmword_268C991F0 = xmmword_24095A6C0;
  *(_OWORD *)&qword_268C99200 = xmmword_24095A6D0;
  return result;
}

void sub_2408F6064()
{
  qword_268C99210 = 0x4032000000000000;
}

void sub_2408F6074()
{
  qword_268C99218 = 0x4010000000000000;
}

id sub_2408F6084()
{
  uint64_t v1 = qword_268C91770;
  id v2 = *(void **)(v0 + qword_268C91770);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_268C91770);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BF8]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_setAxis_, 1);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_2408F6120()
{
  uint64_t v1 = qword_268C91778;
  id v2 = *(void **)(v0 + qword_268C91778);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_268C91778);
  }
  else
  {
    id v4 = sub_2408F6180();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_2408F6180()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_24083EDCC(0, &qword_26AFCF780);
  uint64_t v1 = (void *)sub_240954F08();
  objc_msgSend(v0, sel_setFont_, v1);

  id v2 = (void *)sub_240954788();
  objc_msgSend(v0, sel_setText_, v2);

  id v3 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v3);

  return v0;
}

uint64_t sub_2408F6298(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2409526D8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = qword_268C99228;
  uint64_t result = sub_24088CC6C(a1, *(void **)(v2 + qword_268C99228));
  if (result) {
    return result;
  }
  id v10 = sub_2408F6084();
  id v11 = objc_msgSend(v10, sel_arrangedSubviews);

  sub_24083EDCC(0, (unint64_t *)&qword_268C90A88);
  unint64_t v12 = sub_240954998();

  uint64_t v46 = v8;
  uint64_t v47 = v4;
  uint64_t v48 = v5;
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_2409553D8();
    uint64_t v13 = result;
    if (result) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v13)
    {
LABEL_4:
      if (v13 < 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v14 = 0;
      do
      {
        if ((v12 & 0xC000000000000001) != 0) {
          id v15 = (id)MEMORY[0x2456015B0](v14, v12);
        }
        else {
          id v15 = *(id *)(v12 + 8 * v14 + 32);
        }
        id v16 = v15;
        ++v14;
        id v17 = sub_2408F6084();
        objc_msgSend(v17, sel_removeArrangedSubview_, v16);

        objc_msgSend(v16, sel_removeFromSuperview);
      }
      while (v13 != v14);
    }
  }
  swift_bridgeObjectRelease_n();
  id v18 = sub_2408F6120();
  uint64_t v19 = *MEMORY[0x263F45F70];
  uint64_t v20 = v47;
  uint64_t v21 = v48 + 104;
  uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 104);
  v44(v7, v19, v47);
  uint64_t v43 = sub_240952708();
  swift_allocObject();
  sub_2409526E8();
  uint64_t v22 = v46;
  sub_2409526F8();
  swift_release();
  uint64_t v23 = (void *)sub_240954788();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_setText_, v23);

  uint64_t v24 = *(void *)(v2 + v22);
  unint64_t v25 = *(void *)(v24 + 16);
  if (v25 >= 0xA) {
    uint64_t v26 = 10;
  }
  else {
    uint64_t v26 = *(void *)(v24 + 16);
  }
  uint64_t v45 = v26;
  if (v26)
  {
    uint64_t v48 = v21;
    int v42 = v7;
    uint64_t v50 = sub_24083EDCC(0, &qword_26AFCF780);
    id v49 = self;
    swift_bridgeObjectRetain_n();
    uint64_t v27 = 0;
    do
    {
      uint64_t v28 = v24;
      id v29 = objc_allocWithZone(MEMORY[0x263F828E0]);
      swift_bridgeObjectRetain();
      id v30 = objc_msgSend(v29, sel_init);
      objc_msgSend(v30, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
      uint64_t v31 = (void *)sub_240954F08();
      objc_msgSend(v30, sel_setFont_, v31);

      uint64_t v32 = (void *)sub_240954788();
      objc_msgSend(v30, sel_setText_, v32);

      id v33 = objc_msgSend(v49, sel_secondaryLabelColor);
      objc_msgSend(v30, sel_setTextColor_, v33);

      id v34 = sub_2408F6084();
      objc_msgSend(v34, sel_addArrangedSubview_, v30);
      swift_bridgeObjectRelease();

      uint64_t v24 = v28;
      v27 += 16;
    }
    while (16 * v26 != v27);
    swift_bridgeObjectRelease();
    uint64_t v35 = v47;
    unint64_t v25 = *(void *)(*(void *)(v2 + v46) + 16);
    uint64_t v7 = v42;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = v20;
  }
  if ((uint64_t)v25 > v45)
  {
    id v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
    objc_msgSend(v36, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    sub_24083EDCC(0, &qword_26AFCF780);
    uint64_t v37 = (void *)sub_240954F08();
    objc_msgSend(v36, sel_setFont_, v37);

    v44(v7, *MEMORY[0x263F45F68], v35);
    swift_allocObject();
    sub_2409526E8();
    sub_2409526F8();
    swift_release();
    uint64_t v38 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
    objc_msgSend(v36, sel_setText_, v38);

    id v39 = objc_msgSend(self, sel_secondaryLabelColor);
    objc_msgSend(v36, sel_setTextColor_, v39);

    id v40 = sub_2408F6084();
    objc_msgSend(v40, sel_addArrangedSubview_, v36);
  }
  return swift_bridgeObjectRelease();
}

void sub_2408F68B4(void *a1)
{
  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for SharedConceptComboTileViewController();
  id v1 = v2.receiver;
  objc_msgSendSuper2(&v2, sel_viewDidLoad);
  sub_2408F691C();
  sub_2408F6A20();
  sub_2408F70D8();
}

void sub_2408F691C()
{
  id v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_8;
  }
  objc_super v2 = v1;
  objc_msgSend(v1, sel_addSubview_, *(void *)&v0[qword_268C99220]);

  id v3 = objc_msgSend(v0, sel_view);
  if (!v3)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v4 = v3;
  id v5 = sub_2408F6120();
  objc_msgSend(v4, sel_addSubview_, v5);

  id v6 = objc_msgSend(v0, sel_view);
  if (!v6)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v7 = v6;
  id v8 = sub_2408F6084();
  objc_msgSend(v7, sel_addSubview_, v8);
}

void sub_2408F6A20()
{
  sub_2408B2F90(0, (unint64_t *)&qword_26AFCF418, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_240959320;
  objc_super v2 = *(void **)&v0[qword_268C99220];
  id v3 = objc_msgSend(v2, sel_leadingAnchor);
  id v4 = objc_msgSend(v0, sel_view);
  if (!v4)
  {
    __break(1u);
    goto LABEL_19;
  }
  id v5 = v4;
  id v6 = objc_msgSend(v4, sel_leadingAnchor);

  id v7 = objc_msgSend(v3, sel_constraintEqualToAnchor_, v6);
  *(void *)(v1 + 32) = v7;
  id v8 = objc_msgSend(v2, sel_trailingAnchor);
  id v9 = objc_msgSend(v0, sel_view);
  if (!v9)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  id v10 = v9;
  id v11 = objc_msgSend(v9, sel_trailingAnchor);

  id v12 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v11);
  *(void *)(v1 + 40) = v12;
  id v13 = objc_msgSend(v2, sel_topAnchor);
  id v14 = objc_msgSend(v0, sel_view);
  if (!v14)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  id v15 = v14;
  id v16 = objc_msgSend(v14, sel_topAnchor);

  id v17 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v16);
  *(void *)(v1 + 48) = v17;
  id v18 = sub_2408F6120();
  id v19 = objc_msgSend(v18, sel_leadingAnchor);

  id v20 = objc_msgSend(v0, sel_view);
  if (!v20)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v21 = v20;
  id v22 = objc_msgSend(v20, sel_leadingAnchor);

  if (qword_268C905D0 != -1) {
    swift_once();
  }
  id v23 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v22, *((double *)&xmmword_268C991F0 + 1));

  *(void *)(v1 + 56) = v23;
  id v24 = sub_2408F6120();
  id v25 = objc_msgSend(v24, sel_trailingAnchor);

  id v26 = objc_msgSend(v0, sel_view);
  if (!v26) {
    goto LABEL_22;
  }
  uint64_t v27 = v26;
  id v28 = objc_msgSend(v26, sel_trailingAnchor);

  id v29 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v28, *(double *)&qword_268C99208);
  *(void *)(v1 + 64) = v29;
  id v30 = sub_2408F6120();
  id v31 = objc_msgSend(v30, sel_topAnchor);

  id v32 = objc_msgSend(v2, sel_bottomAnchor);
  if (qword_268C905D8 != -1) {
    swift_once();
  }
  id v33 = objc_msgSend(v31, sel_constraintEqualToAnchor_constant_, v32, *(double *)&qword_268C99210);

  *(void *)(v1 + 72) = v33;
  id v34 = sub_2408F6084();
  id v35 = objc_msgSend(v34, sel_leadingAnchor);

  id v36 = objc_msgSend(v0, sel_view);
  if (!v36) {
    goto LABEL_23;
  }
  uint64_t v37 = v36;
  id v38 = objc_msgSend(v36, sel_leadingAnchor);

  id v39 = objc_msgSend(v35, sel_constraintEqualToAnchor_constant_, v38, *((double *)&xmmword_268C991F0 + 1));
  *(void *)(v1 + 80) = v39;
  id v40 = sub_2408F6084();
  id v41 = objc_msgSend(v40, sel_trailingAnchor);

  id v42 = objc_msgSend(v0, sel_view);
  if (!v42)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return;
  }
  uint64_t v43 = v42;
  id v44 = objc_msgSend(v42, sel_trailingAnchor);

  id v45 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v44, *(double *)&qword_268C99208);
  *(void *)(v1 + 88) = v45;
  id v46 = sub_2408F6084();
  id v47 = objc_msgSend(v46, sel_topAnchor);

  id v48 = sub_2408F6120();
  id v49 = objc_msgSend(v48, sel_bottomAnchor);

  if (qword_268C905E0 != -1) {
    swift_once();
  }
  id v50 = objc_msgSend(v47, sel_constraintEqualToAnchor_constant_, v49, *(double *)&qword_268C99218);

  *(void *)(v1 + 96) = v50;
  id v51 = sub_2408F6084();
  id v52 = objc_msgSend(v51, sel_bottomAnchor);

  id v53 = objc_msgSend(v0, sel_view);
  if (!v53) {
    goto LABEL_25;
  }
  uint64_t v54 = v53;
  uint64_t v55 = self;
  id v56 = objc_msgSend(v54, sel_bottomAnchor);

  id v57 = objc_msgSend(v52, sel_constraintEqualToAnchor_constant_, v56, -*(double *)&qword_268C99200);
  *(void *)(v1 + 104) = v57;
  sub_2409549B8();
  sub_24083EDCC(0, &qword_268C91A80);
  id v58 = (id)sub_240954988();
  swift_bridgeObjectRelease();
  objc_msgSend(v55, sel_activateConstraints_, v58);
}

uint64_t sub_2408F70D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_240952B98();
  uint64_t v55 = *(void *)(v2 - 8);
  uint64_t v56 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v54 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408F7F68(0, &qword_26AFCC6A8, MEMORY[0x263F07690]);
  MEMORY[0x270FA5388](v4 - 8);
  id v6 = (char *)&v50 - v5;
  uint64_t v59 = sub_2409526C8();
  uint64_t v57 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  id v58 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408F7F68(0, &qword_268C91790, (void (*)(uint64_t))type metadata accessor for SharedConceptComboFeedItemData);
  MEMORY[0x270FA5388](v8 - 8);
  id v10 = (char *)&v50 - v9;
  uint64_t v11 = type metadata accessor for SharedConceptComboFeedItemData(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = (void *)MEMORY[0x263F8EED0];
  uint64_t v16 = (uint64_t)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x60);
  swift_beginAccess();
  sub_2408F7FBC(v16, (uint64_t)v10, &qword_268C91790, (void (*)(uint64_t))type metadata accessor for SharedConceptComboFeedItemData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_2408F808C((uint64_t)v10, &qword_268C91790, (void (*)(uint64_t))type metadata accessor for SharedConceptComboFeedItemData);
  }
  sub_2408F8028((uint64_t)v10, (uint64_t)v14);
  sub_240952808();
  id v18 = (void *)sub_2409527D8();
  uint64_t v19 = (uint64_t)v1 + *(void *)((*v15 & *v1) + 0x70);
  swift_beginAccess();
  uint64_t result = sub_2408F7FBC(v19, (uint64_t)v60, (unint64_t *)&qword_26AFCF770, (void (*)(uint64_t))sub_240857468);
  id v20 = v61;
  if (v61)
  {
    uint64_t v21 = sub_2408304E8(v60, (uint64_t)v61);
    Description = (void (**)(char *))v20[-1].Description;
    MEMORY[0x270FA5388](v21);
    id v24 = (char *)&v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    Description[2](v24);
    id v25 = (void *)sub_240953B98();
    ((void (*)(char *, ValueMetadata *))Description[1])(v24, v20);
    id v26 = (void *)sub_2409527E8();

    sub_2408371B8((uint64_t)v60);
    id v27 = objc_msgSend(v26, sel_dateCache);

    uint64_t v28 = *MEMORY[0x263F45FE8];
    uint64_t v29 = sub_2409528B8();
    id v30 = v58;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(v58, v28, v29);
    uint64_t v31 = v57;
    (*(void (**)(char *, void, uint64_t))(v57 + 104))(v30, *MEMORY[0x263F45F00], v59);
    uint64_t v32 = sub_240951AB8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v6, 1, 1, v32);
    id v33 = v54;
    sub_240952B88();
    uint64_t v51 = sub_240954828();
    uint64_t v35 = v34;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v33, v56);
    sub_2408F808C((uint64_t)v6, &qword_26AFCC6A8, MEMORY[0x263F07690]);
    id v36 = (void *)sub_2409519A8();
    id v37 = (id)HKMostRecentSampleEndDateText();

    id v52 = v27;
    id v53 = v14;
    if (v37)
    {
      uint64_t v38 = sub_2409547C8();
      uint64_t v40 = v39;
    }
    else
    {
      uint64_t v38 = 0;
      uint64_t v40 = 0;
    }
    id v41 = v58;
    id v42 = (void *)sub_2409525F8();
    uint64_t v43 = (void *)sub_240952688();
    char v61 = &type metadata for TitleViewData;
    unint64_t v62 = sub_2408F80E8();
    uint64_t v44 = swift_allocObject();
    v60[0] = v44;
    *(void *)(v44 + 16) = v51;
    *(void *)(v44 + 24) = v35;
    *(void *)(v44 + 32) = v38;
    *(void *)(v44 + 40) = v40;
    *(void *)(v44 + 48) = v42;
    *(void *)(v44 + 56) = v43;
    *(_WORD *)(v44 + 64) = 0;
    id v45 = v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v46 = v42;
    sub_240952F18();
    uint64_t v47 = (uint64_t)v53;
    uint64_t v48 = *(void *)&v53[*(int *)(v11 + 20)];
    id v49 = *(void **)((char *)v1 + qword_268C99228);
    *(void *)((char *)v1 + qword_268C99228) = v48;
    swift_bridgeObjectRetain();
    sub_2408F6298(v49);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v59);
    return sub_2408F818C(v47);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2408F7820(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x70);
  swift_beginAccess();
  uint64_t result = sub_2408F7FBC(v4, (uint64_t)v26, (unint64_t *)&qword_26AFCF770, (void (*)(uint64_t))sub_240857468);
  uint64_t v6 = v27;
  if (v27)
  {
    uint64_t v7 = sub_2408304E8(v26, v27);
    uint64_t v8 = *(void *)(v6 - 8);
    MEMORY[0x270FA5388](v7);
    id v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v8 + 16))(v10);
    uint64_t v11 = (void *)sub_240953B98();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
    uint64_t v12 = (void *)sub_240954BD8();

    uint64_t v13 = (objc_class *)type metadata accessor for LabListViewController();
    id v14 = (char *)objc_allocWithZone(v13);
    *(void *)&v14[qword_268C91D80] = v12;
    id v15 = objc_allocWithZone(MEMORY[0x263F82570]);
    id v16 = v12;
    id v17 = objc_msgSend(v15, sel_init);
    v25.receiver = v14;
    v25.super_class = v13;
    id v18 = objc_msgSendSuper2(&v25, sel_initWithCollectionViewLayout_, v17);

    sub_2408371B8((uint64_t)v26);
    sub_2408BE3C8(a1, (uint64_t)v26);
    uint64_t v19 = v27;
    if (v27)
    {
      id v20 = sub_2408304E8(v26, v27);
      uint64_t v21 = *(void *)(v19 - 8);
      MEMORY[0x270FA5388](v20);
      uint64_t v23 = (char *)&v25 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v21 + 16))(v23);
      uint64_t v24 = sub_2409555F8();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v19);
      sub_2408371B8((uint64_t)v26);
    }
    else
    {
      uint64_t v24 = 0;
    }
    objc_msgSend(v2, sel_showViewController_sender_, v18, v24);

    return swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_2408F7B3C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = qword_268C99220;
  id v7 = objc_allocWithZone((Class)sub_240952F28());
  uint64_t v8 = v3;
  *(void *)&v3[v6] = objc_msgSend(v7, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v8[qword_268C91770] = 0;
  *(void *)&v8[qword_268C91778] = 0;
  *(void *)&v8[qword_268C99228] = MEMORY[0x263F8EE78];

  if (a2)
  {
    uint64_t v9 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = 0;
  }
  v12.receiver = v8;
  v12.super_class = (Class)type metadata accessor for SharedConceptComboTileViewController();
  id v10 = objc_msgSendSuper2(&v12, sel_initWithNibName_bundle_, v9, a3);

  return v10;
}

id sub_2408F7C50(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    uint64_t v5 = sub_2409547C8();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  id v8 = a4;
  return sub_2408F7B3C(v5, v7, a4);
}

id sub_2408F7CB0(void *a1)
{
  uint64_t v3 = qword_268C99220;
  id v4 = objc_allocWithZone((Class)sub_240952F28());
  uint64_t v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v5[qword_268C91770] = 0;
  *(void *)&v5[qword_268C91778] = 0;
  *(void *)&v5[qword_268C99228] = MEMORY[0x263F8EE78];

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for SharedConceptComboTileViewController();
  id v6 = objc_msgSendSuper2(&v8, sel_initWithCoder_, a1);

  return v6;
}

id sub_2408F7D88(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_2408F7CB0(a3);
}

uint64_t sub_2408F7DB0()
{
  return swift_bridgeObjectRelease();
}

id sub_2408F7E10()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharedConceptComboTileViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2408F7E48(uint64_t a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for SharedConceptComboTileViewController()
{
  uint64_t result = qword_268C91780;
  if (!qword_268C91780) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2408F7F00()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2408F7F60()
{
  return type metadata accessor for SharedConceptComboTileViewController();
}

void sub_2408F7F68(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240955098();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2408F7FBC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_2408F7F68(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_2408F8028(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SharedConceptComboFeedItemData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2408F808C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_2408F7F68(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_2408F80E8()
{
  unint64_t result = qword_268C91798;
  if (!qword_268C91798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91798);
  }
  return result;
}

uint64_t sub_2408F813C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 66, 7);
}

uint64_t sub_2408F818C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SharedConceptComboFeedItemData(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void destroy for TitleViewData(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v2 = *(void **)(a1 + 40);
}

uint64_t initializeWithCopy for TitleViewData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void **)(a2 + 32);
  uint64_t v6 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v7 = v5;
  id v8 = v6;
  return a1;
}

uint64_t assignWithCopy for TitleViewData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v5;
  id v6 = v5;

  id v7 = *(void **)(a1 + 40);
  id v8 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v8;
  id v9 = v8;

  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  return a1;
}

__n128 initializeWithTake for TitleViewData(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TitleViewData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  id v6 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  return a1;
}

uint64_t getEnumTagSinglePayload for TitleViewData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 50)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TitleViewData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 50) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 50) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TitleViewData()
{
  return &type metadata for TitleViewData;
}

uint64_t sub_2408F8478(unint64_t a1)
{
  unint64_t v1 = a1;
  uint64_t v21 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_2409553D8())
  {
    unint64_t v3 = v1 & 0xC000000000000001;
    uint64_t v4 = 4;
    unint64_t v5 = 0x263F46000;
    while (1)
    {
      id v6 = v3 ? (id)MEMORY[0x2456015B0](v4 - 4, v1) : *(id *)(v1 + 8 * v4);
      id v7 = v6;
      uint64_t v8 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      id v9 = (void *)MEMORY[0x245601B40]();
      id v10 = objc_msgSend(objc_allocWithZone(*(Class *)(v5 + 1232)), sel_init);
      if (v10)
      {
        id v11 = objc_msgSend(v7, sel_code);
        objc_msgSend(v10, sel_setCode_, v11);

        id v12 = objc_msgSend(v7, sel_codingSystem);
        uint64_t v13 = v12;
        if (v12)
        {
          id v20 = v9;
          unint64_t v14 = v1;
          uint64_t v15 = v2;
          id v16 = objc_msgSend(v12, sel_identifier);

          sub_2409547C8();
          uint64_t v2 = v15;
          unint64_t v1 = v14;
          id v9 = v20;
          uint64_t v13 = (void *)sub_240954788();
          unint64_t v5 = 0x263F46000uLL;
          swift_bridgeObjectRelease();
        }
        objc_msgSend(v10, sel_setSystem_, v13);

        id v17 = objc_msgSend(v7, sel_codingVersion);
        objc_msgSend(v10, sel_setVersion_, v17);

        id v18 = objc_msgSend(v7, sel_displayString);
        objc_msgSend(v10, sel_setDisplayName_, v18);

        uint64_t v8 = v4 - 3;
      }

      if (v10)
      {
        MEMORY[0x245600C60]();
        if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_240954A08();
        }
        sub_240954A28();
        sub_2409549B8();
      }
      ++v4;
      if (v8 == v2)
      {
        swift_bridgeObjectRelease();
        return v21;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t sub_2408F8758(unint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v12 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_2409553D8())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2456015B0](i - 4, a1) : *(id *)(a1 + 8 * i);
      id v7 = v6;
      uint64_t v8 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v9 = (void *)MEMORY[0x245601B40]();
      uint64_t v10 = a2();

      if (v10)
      {
        MEMORY[0x245600C60]();
        if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_240954A08();
        }
        sub_240954A28();
        sub_2409549B8();
      }
      if (v8 == v4)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t sub_2408F88DC(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for SharedConceptFeedItemData(0);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v20 - v11;
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t v25 = MEMORY[0x263F8EE78];
  uint64_t v22 = *(void *)(a3 + 16);
  if (v22)
  {
    unint64_t v14 = 0;
    uint64_t v15 = MEMORY[0x263F8EE78];
    v20[1] = a2;
    uint64_t v21 = a3;
    v20[0] = a1;
    while (v14 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      uint64_t v13 = *(void *)(v24 + 72);
      sub_24083D4E0(a3 + v16 + v13 * v14, (uint64_t)v12, type metadata accessor for SharedConceptFeedItemData);
      char v17 = a1(v12);
      if (v3)
      {
        sub_24083B1D4((uint64_t)v12, type metadata accessor for SharedConceptFeedItemData);
        swift_release();
        swift_bridgeObjectRelease();
        return v13;
      }
      if (v17)
      {
        sub_24082CF54((uint64_t)v12, v23, type metadata accessor for SharedConceptFeedItemData);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_240875C38(0, *(void *)(v15 + 16) + 1, 1);
        }
        uint64_t v15 = v25;
        unint64_t v19 = *(void *)(v25 + 16);
        unint64_t v18 = *(void *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_240875C38(v18 > 1, v19 + 1, 1);
          uint64_t v15 = v25;
        }
        *(void *)(v15 + 16) = v19 + 1;
        uint64_t result = sub_24082CF54(v23, v15 + v16 + v19 * v13, type metadata accessor for SharedConceptFeedItemData);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        uint64_t result = sub_24083B1D4((uint64_t)v12, type metadata accessor for SharedConceptFeedItemData);
      }
      if (v22 == ++v14)
      {
        uint64_t v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_2408F8B74(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  unint64_t v4 = a3;
  uint64_t v19 = MEMORY[0x263F8EE78];
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      unint64_t v8 = 0;
      uint64_t v16 = v4 & 0xFFFFFFFFFFFFFF8;
      unint64_t v17 = v4 & 0xC000000000000001;
      unint64_t v15 = v4;
      while (v17)
      {
        id v9 = (id)MEMORY[0x2456015B0](v8, v4);
LABEL_9:
        uint64_t v10 = v9;
        unint64_t v11 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_17;
        }
        id v18 = v9;
        uint64_t v12 = a2;
        char v13 = a1(&v18);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if (v13)
        {
          sub_2409552F8();
          sub_240955328();
          unint64_t v4 = v15;
          sub_240955338();
          sub_240955308();
        }
        else
        {
        }
        ++v8;
        if (v11 == v7)
        {
          uint64_t v12 = v19;
          goto LABEL_20;
        }
      }
      if (v8 < *(void *)(v16 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v7 = sub_2409553D8();
      if (!v7) {
        goto LABEL_19;
      }
    }
    id v9 = *(id *)(v4 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  uint64_t v12 = MEMORY[0x263F8EE78];
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_2408F8D20@<X0>(void **a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t *a5@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v34 = a4;
  uint64_t v37 = a3;
  uint64_t v38 = a5;
  sub_2408FFAA0();
  uint64_t v7 = v6;
  uint64_t v30 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24084105C(0, &qword_268C917C8, MEMORY[0x263EFDEA0]);
  uint64_t v31 = *(void *)(v10 - 8);
  uint64_t v32 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v30 - v11;
  uint64_t v13 = sub_240951A28();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v13);
  sub_2408FFB24();
  uint64_t v35 = *(void *)(v16 - 8);
  uint64_t v36 = v16;
  MEMORY[0x270FA5388](v16);
  id v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *a1;
  self;
  uint64_t v20 = swift_dynamicCastObjCClass();
  if (v20)
  {
    uint64_t v21 = v20;
    id v22 = v19;
    uint64_t v39 = sub_2409531B8();
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v34, v13);
    unint64_t v23 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v37;
    *(void *)(v24 + 24) = v21;
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v24 + v23, (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
    sub_2408D5908();
    sub_24082EF80(0, &qword_26AFCDF78, &qword_26AFCDF70, 0x263F464E0, MEMORY[0x263F8D8F0]);
    sub_24082EEE0(&qword_26AFCDD20, (void (*)(uint64_t))sub_2408D5908);
    id v25 = v22;
    swift_retain();
    sub_2409544F8();
    swift_release();
    swift_release();
    sub_24082EEE0(&qword_268C917E0, (void (*)(uint64_t))sub_2408FFB24);
    uint64_t v26 = v36;
    uint64_t v27 = sub_240954498();

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v18, v26);
  }
  else
  {
    uint64_t v39 = 0;
    sub_24082EF80(0, &qword_26AFCDF78, &qword_26AFCDF70, 0x263F464E0, MEMORY[0x263F8D8F0]);
    sub_2409543A8();
    sub_2408484BC(0, qword_26AFD07C0);
    sub_240954368();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v7);
    sub_24083F304(&qword_268C917D8, &qword_268C917C8, MEMORY[0x263EFDEA0]);
    uint64_t v29 = v32;
    uint64_t v27 = sub_240954498();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v12, v29);
  }
  *uint64_t v38 = v27;
  return result;
}

void sub_2408F9244(id *a1@<X0>, uint64_t a2@<X8>)
{
  if (*a1)
  {
    id v4 = *a1;
    unint64_t v5 = (void *)sub_240951F68();
    sub_2408F9340(v4, a2);

    if (!v2)
    {
      uint64_t v6 = sub_2409521B8();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a2, 0, 1, v6);
    }
  }
  else
  {
    uint64_t v7 = sub_2409521B8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a2, 1, 1, v7);
  }
}

void sub_2408F9340(void *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24082ED50(0, &qword_26AFCC6A8, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v49 - v7;
  sub_24082ED50(0, &qword_26AFCC6C0, MEMORY[0x263F079C8], v5);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v49 - v10;
  uint64_t v12 = sub_240952258();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24083EDCC(0, (unint64_t *)&qword_26AFCDF38);
  id v15 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_diagnosticTestResultTypeForIdentifier_, *MEMORY[0x263F09518]);
  if (!v15)
  {
    sub_2408FFA4C();
    swift_allocError();
    unsigned char *v34 = 0;
    swift_willThrow();
    return;
  }
  uint64_t v16 = v15;
  if (!objc_msgSend(a1, sel_hasConceptIdentifier))
  {
    sub_2408FFA4C();
    swift_allocError();
    *uint64_t v35 = 1;
    swift_willThrow();

    return;
  }
  id v52 = v14;
  id v53 = v11;
  uint64_t v54 = v8;
  sub_24082ED50(0, &qword_26AFCF400, MEMORY[0x263F46018], MEMORY[0x263F8E0F8]);
  uint64_t v17 = sub_2409528B8();
  uint64_t v18 = *(void *)(v17 - 8);
  unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v20 = swift_allocObject();
  long long v55 = xmmword_240956800;
  *(_OWORD *)(v20 + 16) = xmmword_240956800;
  (*(void (**)(unint64_t, void, uint64_t))(v18 + 104))(v20 + v19, *MEMORY[0x263F45FE8], v17);
  id v21 = objc_msgSend(a1, sel_conceptIdentifier);
  if (v21)
  {
    id v22 = v21;
    uint64_t v23 = sub_2409547C8();
    uint64_t v25 = v24;

    uint64_t v26 = sub_2408C1EBC(v20, v23, v25);
    uint64_t v50 = v27;
    uint64_t v51 = v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unsigned int v28 = objc_msgSend(a1, sel_hasPreferredName);
    v49[1] = a2;
    v49[2] = v2;
    if (v28 && (id v29 = objc_msgSend(a1, sel_preferredName)) != 0)
    {
      uint64_t v30 = v29;
      uint64_t v31 = sub_2409547C8();
      uint64_t v33 = v32;
    }
    else
    {
      uint64_t v31 = 0;
      uint64_t v33 = 0;
    }
    sub_24082ED50(0, (unint64_t *)&unk_268C90B08, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
    uint64_t v36 = *(void *)(sub_240953ED8() - 8);
    unint64_t v37 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = v55;
    uint64_t v39 = (uint64_t *)(v38 + v37);
    uint64_t v40 = v50;
    *uint64_t v39 = v51;
    v39[1] = v40;
    v39[2] = v31;
    v39[3] = v33;
    void v39[4] = 0;
    v39[5] = 0;
    (*(void (**)(void))(v36 + 104))();
    sub_2408CCE88();
    uint64_t v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_2409568A0;
    *(void *)(v41 + 32) = v16;
    uint64_t v56 = v41;
    sub_2409549B8();
    *(void *)&long long v55 = v56;
    swift_bridgeObjectRetain();
    id v42 = v16;
    id v43 = objc_msgSend(a1, sel_data);
    if (v43)
    {
      uint64_t v44 = v43;
      sub_240951938();

      sub_240952198();
      id v45 = v53;
      sub_240951B58();
      uint64_t v46 = sub_240951B68();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 0, 1, v46);
      uint64_t v47 = v54;
      sub_240951AA8();
      uint64_t v48 = sub_240951AB8();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 0, 1, v48);
      sub_240952178();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_2408F9940@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_24082ED50(0, &qword_268C917A0, (uint64_t (*)(uint64_t))sub_240840050, MEMORY[0x263EFDDF8]);
  uint64_t v7 = v6;
  uint64_t v41 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v34 - v8;
  sub_24082F050(0, &qword_268C917A8, (uint64_t (*)(uint64_t))sub_240840050, MEMORY[0x263EFDEA0]);
  uint64_t v39 = *(void *)(v10 - 8);
  uint64_t v40 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v34 - v11;
  uint64_t v38 = sub_2409540C8();
  uint64_t v13 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  id v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *a1;
  sub_240954058();
  id v17 = v16;
  id v18 = v16;
  unint64_t v19 = sub_2409540B8();
  os_log_type_t v20 = sub_240954C18();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v36 = v7;
    uint64_t v22 = v21;
    uint64_t v35 = swift_slowAlloc();
    uint64_t v43 = v35;
    *(_DWORD *)uint64_t v22 = 136446466;
    unint64_t v37 = a3;
    uint64_t v42 = a2;
    swift_getMetatypeMetadata();
    uint64_t v23 = sub_2409547E8();
    uint64_t v42 = sub_2408370E4(v23, v24, &v43);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2082;
    v34[1] = v22 + 14;
    uint64_t v42 = (uint64_t)v16;
    id v25 = v16;
    sub_2408484BC(0, qword_26AFD07C0);
    sub_240955658();
    id v26 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v27 = sub_240954808();
    uint64_t v42 = sub_2408370E4(v27, v28, &v43);
    sub_2409550B8();
    a3 = v37;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240818000, v19, v20, "[%{public}s]: Error making sharable models for record: %{public}s", (uint8_t *)v22, 0x16u);
    uint64_t v29 = v35;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v29, -1, -1);
    uint64_t v30 = v22;
    uint64_t v7 = v36;
    MEMORY[0x2456021C0](v30, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v38);
  uint64_t v42 = MEMORY[0x263F8EE78];
  sub_240840050(0);
  sub_2409543A8();
  sub_2408484BC(0, qword_26AFD07C0);
  sub_240954368();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v9, v7);
  sub_2408FF9A4();
  uint64_t v31 = v40;
  uint64_t v32 = sub_240954498();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v12, v31);
  *a3 = v32;
  return result;
}

void sub_2408F9E14(unint64_t *a1@<X0>, void *a2@<X2>, uint64_t a3@<X3>, void *a4@<X8>)
{
  unint64_t v7 = *a1;
  uint64_t v8 = (void *)MEMORY[0x245601B40]();
  sub_2408F9E90(a2, v7, a3, &v9);
  *a4 = v9;
}

id sub_2408F9E90@<X0>(void *a1@<X1>, unint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X8>)
{
  if ((sub_240953F78() & 1) == 0) {
    goto LABEL_11;
  }
  id result = objc_msgSend(a1, sel_ontologyPreferredName);
  if (!result)
  {
LABEL_12:
    *a4 = result;
    return result;
  }

  MEMORY[0x270FA5388](v9);
  v17[2] = a3;
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_2408F8B74((uint64_t (*)(id *))sub_2408FFD54, (uint64_t)v17, a2);
  unint64_t v11 = v10;
  if (!(v10 >> 62))
  {
    uint64_t v12 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain();
    if (v12) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  id result = (id)sub_2409553D8();
  if (!result)
  {
LABEL_10:
    swift_bridgeObjectRelease_n();
LABEL_11:
    id result = 0;
    goto LABEL_12;
  }
LABEL_5:
  if ((v11 & 0xC000000000000001) != 0)
  {
    id v13 = (id)MEMORY[0x2456015B0](0, v11);
    goto LABEL_8;
  }
  if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v13 = *(id *)(v11 + 32);
LABEL_8:
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    sub_24083EDCC(0, &qword_26AFCDF70);
    id v15 = a1;
    char v16 = sub_240953F88();
    id result = sub_2408FA1B4(v15, v16 & 1, v14, v11);
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

BOOL sub_2408FA040(id *a1)
{
  uint64_t v2 = sub_240951A28();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(*a1, sel_sortDate);
  id v7 = objc_msgSend(v6, sel_date);

  sub_240951A08();
  sub_24082EEE0(&qword_268C90AB8, MEMORY[0x263F07490]);
  char v8 = sub_240954738();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (v8 & 1) == 0;
}

id sub_2408FA1B4(void *a1, char a2, void *a3, unint64_t a4)
{
  uint64_t v32 = a3;
  sub_24082ED50(0, &qword_26AFCD978, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t v11 = sub_2409528B8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = v4;
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v16 = result;
    id v17 = objc_msgSend(a1, sel_semanticIdentifier);
    id v18 = objc_msgSend(v17, sel_stringValue);

    if (!v18)
    {
      sub_2409547C8();
      id v18 = (id)sub_240954788();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v16, sel_setConceptIdentifier_, v18);

    sub_240954EB8();
    unint64_t v19 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
    objc_msgSend(v16, sel_setPreferredName_, v19);

    id v20 = objc_msgSend(a1, sel_educationContent);
    if (v20)
    {
      uint64_t v21 = v20;
      id v33 = v20;
      sub_24083EDCC(0, &qword_268C917E8);
      uint64_t v22 = (void *)sub_2409532A8();

      if (v22)
      {
        objc_msgSend(v16, sel_setLocalizedEducationContent_, v22);
      }
    }
    objc_msgSend(v16, sel_setIsPinned_, a2 & 1);
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F45FE8], v11);
    uint64_t v23 = sub_2409528A8();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    objc_msgSend(v16, sel_setCategory_, v23);
    unint64_t v24 = sub_2408F8758(a4, sub_2408FDABC);
    swift_bridgeObjectRelease();
    id v25 = v32;
    id v26 = (void *)sub_2408FDABC();
    objc_msgSend(v16, sel_setLatestRecord_, v26);

    sub_240873738(v24);
    swift_bridgeObjectRelease();
    id v27 = objc_allocWithZone(MEMORY[0x263EFF980]);
    unint64_t v28 = (void *)sub_240954988();
    swift_bridgeObjectRelease();
    id v29 = objc_msgSend(v27, sel_initWithArray_, v28);

    objc_msgSend(v16, sel_setAllRecords_, v29);
    sub_240952248();
    uint64_t v30 = sub_240952258();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v10, 0, 1, v30);
    sub_2408FFD74();
    sub_240953AB8();

    return v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2408FA5E8(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = sub_240900B34;
  v9[3] = v8;
  v9[4] = a4;
  v12[4] = sub_240900B78;
  v12[5] = v9;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 1107296256;
  v12[2] = sub_2408FA970;
  v12[3] = &unk_26F4F2410;
  uint64_t v10 = _Block_copy(v12);
  swift_retain();
  id v11 = a4;
  swift_release();
  objc_msgSend(a3, sel_fetchSharingAuthorizationsWithCompletion_, v10);
  _Block_release(v10);
}

void sub_2408FA70C(unint64_t a1, id a2, void (*a3)(id, uint64_t, uint64_t), uint64_t a4, void *a5)
{
  if (a2)
  {
    id v7 = a2;
    a3(a2, 0, 1);
    id v8 = a2;
LABEL_4:

    return;
  }
  if (!a1)
  {
    id v15 = a5;
    a3(a5, MEMORY[0x263F8EE78], 0);
    goto LABEL_23;
  }
  uint64_t v16 = MEMORY[0x263F8EE78];
  if (!(a1 >> 62))
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11) {
      goto LABEL_8;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    id v15 = a5;
    a3(a5, v16, 0);
    swift_bridgeObjectRelease();
LABEL_23:
    id v8 = v15;
    goto LABEL_4;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_2409553D8();
  if (!v11) {
    goto LABEL_22;
  }
LABEL_8:
  if (v11 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        MEMORY[0x2456015B0](i, a1);
        MEMORY[0x245600C60]();
        if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_240954A08();
        }
        sub_240954A28();
        sub_2409549B8();
      }
    }
    else
    {
      uint64_t v13 = (id *)(a1 + 32);
      do
      {
        id v14 = *v13;
        MEMORY[0x245600C60]();
        if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_240954A08();
        }
        sub_240954A28();
        sub_2409549B8();
        ++v13;
        --v11;
      }
      while (v11);
    }
    goto LABEL_22;
  }
  __break(1u);
}

uint64_t sub_2408FA970(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  unint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_24083EDCC(0, &qword_26AFCDF20);
    uint64_t v4 = sub_240954998();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2408FAA14(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  sub_2409000C4();
  uint64_t v32 = v8;
  uint64_t v34 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409001A0();
  uint64_t v35 = v11;
  uint64_t v37 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240900410();
  uint64_t v36 = v14;
  uint64_t v38 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v30 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24084585C(0, &qword_268C91840, (void (*)(uint64_t))sub_240900410, (void (*)(void))sub_2409004A4);
  uint64_t v33 = v16;
  uint64_t v31 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  id v18 = (char *)&v30 - v17;
  uint64_t v39 = a1;
  sub_24082EF80(0, &qword_26AFCDEB0, &qword_26AFCDF20, 0x263F0A730, MEMORY[0x263F8D488]);
  sub_24083FCA0(&qword_268C91808, &qword_26AFCDEB0, &qword_26AFCDF20, 0x263F0A730);
  sub_240954958();
  unint64_t v19 = (void *)swift_allocObject();
  v19[2] = v4;
  v19[3] = a2;
  v19[4] = a3;
  id v20 = (uint64_t (*)(uint64_t, void, uint64_t, void))MEMORY[0x263EFDCF0];
  sub_2408412B8(0, (unint64_t *)&qword_26AFCDD78, MEMORY[0x263EFDCF0]);
  sub_240900354();
  sub_240840D34(&qword_26AFCDD70, (unint64_t *)&qword_26AFCDD78, v20);
  id v21 = a2;
  id v22 = a3;
  uint64_t v23 = v32;
  sub_2409545D8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v23);
  sub_24082EEE0(&qword_268C91838, (void (*)(uint64_t))sub_2409001A0);
  unint64_t v24 = v30;
  uint64_t v25 = v35;
  sub_240954558();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v25);
  sub_2409004A4();
  uint64_t v26 = v36;
  sub_2409544F8();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v24, v26);
  sub_240900550();
  uint64_t v27 = v33;
  uint64_t v28 = sub_240954498();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v18, v27);
  return v28;
}

uint64_t sub_2408FAED8(void *a1, void *a2, void *a3)
{
  id v7 = (void *)swift_allocObject();
  v7[2] = a3;
  v7[3] = a1;
  v7[4] = v3;
  v7[5] = a2;
  v7[6] = v3;
  uint64_t v8 = (uint64_t (*)(uint64_t, void, uint64_t, void))MEMORY[0x263EFDE20];
  sub_2408412B8(0, &qword_268C91858, MEMORY[0x263EFDE20]);
  swift_allocObject();
  id v9 = a3;
  id v10 = a1;
  id v11 = a2;
  sub_2409543E8();
  sub_240840D34(&qword_268C91860, &qword_268C91858, v8);
  uint64_t v12 = sub_240954498();
  swift_release();
  return v12;
}

id sub_2408FAFFC(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  v52[1] = *MEMORY[0x263EF8340];
  uint64_t v6 = sub_2409540C8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(a1 + 16);
  if (v10 < 3)
  {
    __break(1u);
LABEL_14:
    __break(1u);
  }
  if (v10 < 5) {
    goto LABEL_14;
  }
  id v11 = self;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)sub_240954788();
  swift_bridgeObjectRelease();
  v51[0] = 0;
  id v13 = objc_msgSend(v11, sel_codingCollectionFromAdHocCode_error_, v12, v51);

  id v14 = v51[0];
  if (v13)
  {
    if (a2[2] == 1)
    {
      sub_2409528B8();
      id v15 = v14;
      id v16 = v13;
      uint64_t v17 = sub_240952858();
      id v18 = objc_allocWithZone(MEMORY[0x263F0A210]);
      unint64_t v19 = (void *)sub_240954788();
      swift_bridgeObjectRelease();
      id v20 = objc_msgSend(v18, sel_initWithCodingCollection_countryCode_recordCategoryType_, v16, v19, v17);

      return v20;
    }
    uint64_t v50 = v7;
    id v24 = v51[0];
    uint64_t v23 = v13;
  }
  else
  {
    uint64_t v50 = v7;
    id v21 = v51[0];
    id v22 = (void *)sub_2409518E8();

    swift_willThrow();
    uint64_t v23 = 0;
  }
  swift_bridgeObjectRelease();
  sub_240954058();
  id v25 = v13;
  swift_bridgeObjectRetain_n();
  id v26 = v25;
  uint64_t v27 = sub_2409540B8();
  os_log_type_t v28 = sub_240954C18();
  int v29 = v28;
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v30 = swift_slowAlloc();
    int v48 = v29;
    uint64_t v31 = v30;
    uint64_t v47 = swift_slowAlloc();
    v52[0] = v47;
    *(_DWORD *)uint64_t v31 = 136446722;
    uint64_t v49 = v6;
    v51[0] = v3;
    swift_getMetatypeMetadata();
    uint64_t v32 = sub_2409547E8();
    v51[0] = (id)sub_2408370E4(v32, v33, v52);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2082;
    v51[0] = v23;
    sub_24082EF80(0, &qword_268C91878, &qword_268C91880, 0x263F0A4A8, MEMORY[0x263F8D8F0]);
    id v34 = v26;
    id v35 = v23;
    sub_240955658();
    id v36 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v37 = sub_240954808();
    unint64_t v39 = v38;

    v51[0] = (id)sub_2408370E4(v37, v39, v52);
    sub_2409550B8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 22) = 2082;
    v51[0] = a2;
    sub_24082ED50(0, &qword_268C91888, MEMORY[0x263F46018], MEMORY[0x263F8D488]);
    swift_bridgeObjectRetain_n();
    sub_240955658();
    id v40 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v41 = sub_240954808();
    unint64_t v43 = v42;
    swift_bridgeObjectRelease();
    v51[0] = (id)sub_2408370E4(v41, v43, v52);
    sub_2409550B8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v27, (os_log_type_t)v48, "[%{public}s]: Coding collection (%{public}s) was nil, or had multiple category kinds when trying to synthesize concept resolution definition %{public}s.", (uint8_t *)v31, 0x20u);
    uint64_t v44 = v47;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v44, -1, -1);
    MEMORY[0x2456021C0](v31, -1, -1);

    (*(void (**)(char *, uint64_t))(v50 + 8))(v9, v49);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v9, v6);
  }
  return 0;
}

void sub_2408FB5D0(void (*a1)(uint64_t *), uint64_t a2, void *a3, void *a4, uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v133 = a7;
  v125 = a6;
  uint64_t v127 = a5;
  id v136 = a4;
  uint64_t v10 = sub_2409540C8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v134 = v10;
  uint64_t v135 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  v132 = (char *)&v120 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v124 = (char *)&v120 - v15;
  MEMORY[0x270FA5388](v14);
  v130 = (char *)&v120 - v16;
  sub_240900630(0);
  MEMORY[0x270FA5388](v17 - 8);
  unint64_t v19 = (char *)&v120 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_240953ED8();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  v128 = (char *)&v120 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  v129 = (char *)&v120 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  v131 = (char *)&v120 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v30 = (uint64_t *)((char *)&v120 - v29);
  MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v120 - v31;
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = a1;
  *(void *)(v33 + 24) = a2;
  id v34 = objc_allocWithZone(MEMORY[0x263F0A7F8]);
  swift_retain();
  id v126 = a3;
  id v35 = objc_msgSend(v34, sel_initWithHealthStore_, a3);
  id v36 = v136;
  sub_240953EE8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) != 1)
  {
    id v121 = v36;
    uint64_t v123 = a2;
    v122 = a1;
    id v136 = v35;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v32, v19, v20);
    id v53 = *(void (**)(uint64_t *))(v21 + 16);
    v130 = v32;
    v53(v30);
    uint64_t v54 = v20;
    if ((*(unsigned int (**)(uint64_t *, uint64_t))(v21 + 88))(v30, v20) == *MEMORY[0x263F44A60])
    {
      long long v55 = *(void (**)(uint64_t *, uint64_t))(v21 + 96);
      uint64_t v120 = v20;
      v55(v30, v20);
      uint64_t v56 = *v30;
      unint64_t v57 = v30[1];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v58 = sub_2408C416C(v56, v57);
      if (v58)
      {
        char v61 = (void *)v58;
        uint64_t v62 = v59;
        uint64_t v63 = v60;
        uint64_t v64 = v21;
        uint64_t aBlock = v59;
        uint64_t v138 = v60;
        v143[0] = sub_2409547C8();
        v143[1] = v65;
        sub_240864EE4();
        swift_bridgeObjectRetain();
        char v66 = (void *)sub_2409550E8();
        swift_bridgeObjectRelease();
        if (v66[2] < 4uLL)
        {
          __break(1u);
          return;
        }
        uint64_t v68 = v66[10];
        uint64_t v67 = v66[11];
        uint64_t v69 = sub_2409547C8();
        uint64_t v71 = v130;
        if (v68 == v69 && v67 == v70)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v91 = sub_240955618();
          swift_bridgeObjectRelease();
          if ((v91 & 1) == 0)
          {
            swift_release();
            sub_240864E44((uint64_t)v61);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t aBlock = 1;
            LOBYTE(v138) = 0;
            v122(&aBlock);

            goto LABEL_25;
          }
        }
        uint64_t v92 = swift_bridgeObjectRetain();
        sub_240864E44(v92);
        id v93 = sub_2408FAFFC((uint64_t)v66, v61);
        swift_bridgeObjectRelease();
        id v94 = v136;
        if (v93)
        {
          id v95 = objc_msgSend(self, sel_predicateForMedicalUserDomainConceptsByResolvingConceptResolutionDefinition_, v93);
          uint64_t v96 = (void *)swift_allocObject();
          v96[2] = v62;
          v96[3] = v63;
          v96[4] = sub_24083F2C0;
          v96[5] = v33;
          uint64_t v97 = v125;
          v96[6] = v61;
          v96[7] = v97;
          uint64_t v98 = v121;
          v96[8] = v94;
          v96[9] = v98;
          v96[10] = v133;
          id v99 = objc_allocWithZone(MEMORY[0x263F0A858]);
          v141 = sub_240900718;
          v142 = v96;
          uint64_t aBlock = MEMORY[0x263EF8330];
          uint64_t v138 = 1107296256;
          v139 = sub_2408FEC40;
          v140 = &unk_26F4F2320;
          uint64_t v100 = _Block_copy(&aBlock);
          id v101 = v98;
          id v102 = v97;
          id v103 = v94;
          id v104 = objc_msgSend(v99, sel_initWithPredicate_anchor_limit_sortDescriptors_resultsHandler_, v95, 0, 1, 0, v100);
          _Block_release(v100);
          swift_release();
          objc_msgSend(v126, sel_executeQuery_, v104);

LABEL_25:
          (*(void (**)(char *, uint64_t))(v64 + 8))(v71, v120);
          return;
        }
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v105 = v124;
        sub_240954058();
        swift_bridgeObjectRetain();
        uint64_t v106 = sub_2409540B8();
        os_log_type_t v107 = sub_240954C18();
        if (os_log_type_enabled(v106, v107))
        {
          uint64_t v108 = swift_slowAlloc();
          uint64_t v109 = swift_slowAlloc();
          v143[0] = v109;
          *(_DWORD *)uint64_t v108 = 136446466;
          uint64_t aBlock = v133;
          swift_getMetatypeMetadata();
          uint64_t v110 = sub_2409547E8();
          uint64_t aBlock = sub_2408370E4(v110, v111, v143);
          sub_2409550B8();
          swift_bridgeObjectRelease();
          *(_WORD *)(v108 + 12) = 2082;
          uint64_t v133 = v108 + 14;
          uint64_t aBlock = v62;
          uint64_t v138 = v63;
          swift_bridgeObjectRetain_n();
          sub_240955658();
          id v112 = (id)HKSensitiveLogItem();
          swift_unknownObjectRelease();
          sub_240955138();
          swift_unknownObjectRelease();
          uint64_t v113 = sub_240954808();
          unint64_t v115 = v114;
          swift_bridgeObjectRelease();
          uint64_t v116 = v113;
          id v94 = v136;
          uint64_t aBlock = sub_2408370E4(v116, v115, v143);
          uint64_t v71 = v130;
          sub_2409550B8();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_240818000, v106, v107, "[%{public}s]: Could not parse concept resolution definition from semantic identifier: %{public}s.", (uint8_t *)v108, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2456021C0](v109, -1, -1);
          MEMORY[0x2456021C0](v108, -1, -1);

          (*(void (**)(char *, uint64_t))(v135 + 8))(v124, v134);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          (*(void (**)(char *, uint64_t))(v135 + 8))(v105, v134);
        }
        uint64_t v117 = v120;
        v118 = v122;
        sub_240900664();
        uint64_t v89 = (void *)swift_allocError();
        unsigned char *v119 = 2;
        uint64_t aBlock = (uint64_t)v89;
        LOBYTE(v138) = 1;
        v118(&aBlock);

        (*(void (**)(char *, uint64_t))(v64 + 8))(v71, v117);
LABEL_18:

        return;
      }
      swift_release();
      uint64_t v54 = v120;
    }
    else
    {
      swift_release();
      (*(void (**)(uint64_t *, uint64_t))(v21 + 8))(v30, v20);
    }
    uint64_t v72 = v132;
    sub_240954058();
    uint64_t v73 = v131;
    ((void (*)(char *, char *, uint64_t))v53)(v131, v130, v54);
    char v74 = sub_2409540B8();
    os_log_type_t v75 = sub_240954C18();
    int v76 = v75;
    if (os_log_type_enabled(v74, v75))
    {
      uint64_t v77 = swift_slowAlloc();
      uint64_t v127 = swift_slowAlloc();
      v143[0] = v127;
      *(_DWORD *)uint64_t v77 = 136446466;
      uint64_t aBlock = v133;
      swift_getMetatypeMetadata();
      uint64_t v78 = sub_2409547E8();
      uint64_t v79 = v54;
      uint64_t aBlock = sub_2408370E4(v78, v80, v143);
      sub_2409550B8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v77 + 12) = 2082;
      id v126 = (id)(v77 + 14);
      LODWORD(v133) = v76;
      uint64_t v81 = v129;
      ((void (*)(char *, char *, uint64_t))v53)(v129, v73, v54);
      ((void (*)(char *, char *, uint64_t))v53)(v128, v81, v54);
      sub_240955658();
      id v82 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_240955138();
      swift_unknownObjectRelease();
      uint64_t v83 = sub_240954808();
      unint64_t v85 = v84;
      uint64_t v86 = *(void (**)(char *, uint64_t))(v21 + 8);
      v86(v81, v79);
      uint64_t aBlock = sub_2408370E4(v83, v85, v143);
      sub_2409550B8();
      uint64_t v54 = v79;
      swift_bridgeObjectRelease();
      v86(v131, v79);
      _os_log_impl(&dword_240818000, v74, (os_log_type_t)v133, "[%{public}s]: Could not unwrap shared concept identifier from authorizationIdentifier %{public}s.", (uint8_t *)v77, 0x16u);
      uint64_t v87 = v127;
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v87, -1, -1);
      MEMORY[0x2456021C0](v77, -1, -1);

      (*(void (**)(char *, uint64_t))(v135 + 8))(v132, v134);
    }
    else
    {
      uint64_t v86 = *(void (**)(char *, uint64_t))(v21 + 8);
      v86(v73, v54);

      (*(void (**)(char *, uint64_t))(v135 + 8))(v72, v134);
    }
    char v88 = v122;
    sub_240900664();
    uint64_t v89 = (void *)swift_allocError();
    *char v90 = 0;
    uint64_t aBlock = (uint64_t)v89;
    LOBYTE(v138) = 1;
    v88(&aBlock);

    v86(v130, v54);
    goto LABEL_18;
  }
  uint64_t v37 = v35;
  swift_release();
  sub_24083B1D4((uint64_t)v19, (uint64_t (*)(void))sub_240900630);
  sub_240900664();
  unint64_t v38 = (void *)swift_allocError();
  *unint64_t v39 = 0;
  uint64_t aBlock = (uint64_t)v38;
  LOBYTE(v138) = 1;
  a1(&aBlock);

  id v40 = v130;
  sub_240954058();
  id v41 = v36;
  unint64_t v42 = sub_2409540B8();
  os_log_type_t v43 = sub_240954C18();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = swift_slowAlloc();
    uint64_t v45 = swift_slowAlloc();
    v143[0] = v45;
    *(_DWORD *)uint64_t v44 = 136446466;
    uint64_t aBlock = v133;
    swift_getMetatypeMetadata();
    uint64_t v46 = sub_2409547E8();
    id v136 = v37;
    uint64_t aBlock = sub_2408370E4(v46, v47, v143);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v44 + 12) = 2082;
    id v48 = v41;
    id v49 = (id)HKSensitiveLogItem();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v50 = sub_240954808();
    unint64_t v52 = v51;

    uint64_t aBlock = sub_2408370E4(v50, v52, v143);
    sub_2409550B8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v42, v43, "[%{public}s]: Could not unwrap authorizationIdentifier from sharing authorization %{public}s.", (uint8_t *)v44, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v45, -1, -1);
    MEMORY[0x2456021C0](v44, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v135 + 8))(v40, v134);
}

void sub_2408FC498(uint64_t a1, void *a2, uint64_t a3, int a4, void *a5, void *a6, uint64_t a7, void (*a8)(void *, uint64_t), void (*a9)(void *, uint64_t), uint64_t a10, void *a11, void (**a12)(void, void), void *a13, uint64_t a14)
{
  v147 = a2;
  id v148 = a6;
  LODWORD(v146) = a4;
  uint64_t v149 = a14;
  v152 = a8;
  v153 = a9;
  sub_240873DF8(0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v138 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_240951A98();
  uint64_t v144 = *(void *)(v19 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v138 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v138 - v23;
  uint64_t v25 = sub_240953ED8();
  uint64_t v145 = *(void *)(v25 - 8);
  uint64_t v26 = *(void *)(v145 + 64);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (uint64_t *)((char *)&v138 - v28);
  uint64_t v30 = sub_2409540C8();
  uint64_t v31 = *(void (***)(void, void))(v30 - 8);
  uint64_t v150 = v30;
  v151 = v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v33 = MEMORY[0x270FA5388](v32);
  MEMORY[0x270FA5388](v33);
  v154 = (char *)&v138 - v36;
  if (a5)
  {
    id v37 = a5;
    sub_240954058();
    id v38 = a5;
    swift_bridgeObjectRetain();
    id v39 = a5;
    swift_bridgeObjectRetain();
    id v40 = sub_2409540B8();
    os_log_type_t v41 = sub_240954C18();
    uint64_t v42 = a7;
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v43 = swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      v161[0] = v44;
      *(_DWORD *)uint64_t v43 = 136446722;
      uint64_t aBlock = v149;
      swift_getMetatypeMetadata();
      uint64_t v45 = sub_2409547E8();
      uint64_t aBlock = sub_2408370E4(v45, v46, v161);
      sub_2409550B8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2082;
      uint64_t aBlock = (uint64_t)a5;
      id v47 = a5;
      sub_2408484BC(0, qword_26AFD07C0);
      sub_240955658();
      id v48 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_240955138();
      swift_unknownObjectRelease();
      uint64_t v49 = sub_240954808();
      uint64_t aBlock = sub_2408370E4(v49, v50, v161);
      sub_2409550B8();
      swift_bridgeObjectRelease();

      *(_WORD *)(v43 + 22) = 2082;
      uint64_t aBlock = (uint64_t)v148;
      uint64_t v156 = v42;
      swift_bridgeObjectRetain_n();
      sub_240955658();
      id v51 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_240955138();
      swift_unknownObjectRelease();
      uint64_t v52 = sub_240954808();
      unint64_t v54 = v53;
      swift_bridgeObjectRelease();
      uint64_t aBlock = sub_2408370E4(v52, v54, v161);
      sub_2409550B8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240818000, v40, v41, "[%{public}s]: Found an error (%{public}s) while querying for UDC with resolvable adhoc code embedded in semantic identifier: %{public}s.", (uint8_t *)v43, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v44, -1, -1);
      MEMORY[0x2456021C0](v43, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    ((void (**)(char *, uint64_t))v151)[1](v154, v150);
    unint64_t v80 = v152;
    id v81 = a5;
    v80(a5, 1);

    id v82 = a5;
LABEL_16:

    return;
  }
  char v55 = v146;
  v140 = v22;
  v154 = v18;
  uint64_t v138 = v26;
  v139 = (char *)&v138 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = v24;
  uint64_t v142 = v19;
  v143 = v29;
  uint64_t v56 = v147;
  if (!v147
    || (v57 = v35, v58 = v34, self, v59 = swift_dynamicCastObjCClass(), uint64_t v34 = v58, !v59)
    || (v55 & 1) == 0)
  {
    uint64_t v83 = v34;
    sub_240954058();
    uint64_t v84 = a7;
    swift_bridgeObjectRetain_n();
    unint64_t v85 = sub_2409540B8();
    os_log_type_t v86 = sub_240954C18();
    if (os_log_type_enabled(v85, v86))
    {
      uint64_t v87 = swift_slowAlloc();
      uint64_t v88 = swift_slowAlloc();
      v161[0] = v88;
      *(_DWORD *)uint64_t v87 = 136446466;
      uint64_t aBlock = v149;
      swift_getMetatypeMetadata();
      uint64_t v89 = sub_2409547E8();
      uint64_t aBlock = sub_2408370E4(v89, v90, v161);
      sub_2409550B8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v87 + 12) = 2082;
      uint64_t aBlock = (uint64_t)v148;
      uint64_t v156 = v84;
      swift_bridgeObjectRetain_n();
      sub_240955658();
      id v91 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_240955138();
      swift_unknownObjectRelease();
      uint64_t v92 = sub_240954808();
      unint64_t v94 = v93;
      swift_bridgeObjectRelease();
      uint64_t aBlock = sub_2408370E4(v92, v94, v161);
      sub_2409550B8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240818000, v85, v86, "[%{public}s]: Somehow, we have a semantic identifier %{public}s with no resolvable user domain concept. Most likely, we have an ontology node, but no UDC for the resolved coding.", (uint8_t *)v87, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v88, -1, -1);
      MEMORY[0x2456021C0](v87, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v151[1](v83, v150);
    sub_240900664();
    uint64_t v95 = swift_allocError();
    *uint64_t v96 = 1;
    v152((void *)v95, 1);
    id v82 = (void *)v95;
    goto LABEL_16;
  }
  uint64_t v60 = (void *)v59;
  id v61 = v56;
  if (objc_msgSend(v60, sel_isAdHocUserDomainConcept))
  {
    uint64_t v62 = v57;
    sub_240954058();
    id v63 = a13;
    uint64_t v64 = sub_2409540B8();
    os_log_type_t v65 = sub_240954C38();
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = swift_slowAlloc();
      uint64_t v67 = swift_slowAlloc();
      id v148 = v61;
      uint64_t v68 = v67;
      v161[0] = v67;
      *(_DWORD *)uint64_t v66 = 136446466;
      uint64_t aBlock = v149;
      swift_getMetatypeMetadata();
      uint64_t v69 = sub_2409547E8();
      uint64_t aBlock = sub_2408370E4(v69, v70, v161);
      sub_2409550B8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v66 + 12) = 2082;
      v154 = (char *)(v66 + 14);
      id v71 = objc_msgSend(v63, sel_authorizationIdentifier);
      uint64_t v72 = sub_2409547C8();
      uint64_t v74 = v73;

      uint64_t aBlock = v72;
      uint64_t v156 = v74;
      swift_bridgeObjectRetain();
      sub_240955658();
      id v75 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_240955138();
      swift_unknownObjectRelease();
      uint64_t v76 = sub_240954808();
      unint64_t v78 = v77;
      swift_bridgeObjectRelease();
      uint64_t aBlock = sub_2408370E4(v76, v78, v161);
      sub_2409550B8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240818000, v64, v65, "[%{public}s]: Skipping migration of auth identifier %{public}s", (uint8_t *)v66, 0x16u);
      swift_arrayDestroy();
      uint64_t v79 = v68;
      id v61 = v148;
      MEMORY[0x2456021C0](v79, -1, -1);
      MEMORY[0x2456021C0](v66, -1, -1);
    }
    else
    {
    }
    v151[1](v62, v150);
    v152((void *)1, 0);
  }
  else
  {
    id v148 = v61;
    swift_bridgeObjectRetain();
    id v97 = objc_msgSend(v60, sel_semanticIdentifier);
    id v98 = objc_msgSend(v97, sel_stringValue);

    uint64_t v99 = sub_2409547C8();
    uint64_t v101 = v100;

    uint64_t v102 = sub_2408C1EBC(a10, v99, v101);
    uint64_t v104 = v103;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v105 = sub_240954EB8();
    uint64_t v106 = v143;
    uint64_t *v143 = v102;
    v106[1] = v104;
    v106[2] = v105;
    v106[3] = v107;
    v106[4] = 0;
    v106[5] = 0;
    uint64_t v108 = v145;
    uint64_t v109 = v25;
    (*(void (**)(uint64_t *, void, uint64_t))(v145 + 104))(v106, *MEMORY[0x263F44A60], v25);
    id v110 = objc_msgSend(a11, sel_invitationUUID);
    if (v110)
    {
      unint64_t v111 = v110;
      id v112 = v140;
      sub_240951A78();

      uint64_t v113 = v144;
      unint64_t v114 = *(void (**)(char *, char *, uint64_t))(v144 + 32);
      uint64_t v115 = (uint64_t)v154;
      uint64_t v116 = v112;
      uint64_t v117 = v142;
      v114(v154, v116, v142);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v113 + 56))(v115, 0, 1, v117);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v113 + 48))(v115, 1, v117) != 1)
      {
        v147 = (void *)v109;
        v151 = a12;
        v114(v141, (char *)v115, v117);
        v154 = (char *)sub_240951A58();
        sub_2408CCE88();
        uint64_t v118 = v113;
        uint64_t v119 = swift_allocObject();
        long long v146 = xmmword_2409568A0;
        *(_OWORD *)(v119 + 16) = xmmword_2409568A0;
        *(void *)(v119 + 32) = sub_240953EB8();
        uint64_t aBlock = v119;
        sub_2409549B8();
        sub_24083EDCC(0, &qword_26AFCDF20);
        uint64_t v120 = v108;
        uint64_t v150 = sub_240954988();
        swift_bridgeObjectRelease();
        uint64_t v121 = swift_allocObject();
        *(_OWORD *)(v121 + 16) = v146;
        *(void *)(v121 + 32) = a13;
        uint64_t aBlock = v121;
        sub_2409549B8();
        id v122 = a13;
        uint64_t v123 = (void *)sub_240954988();
        swift_bridgeObjectRelease();
        uint64_t v124 = v139;
        v125 = v106;
        id v126 = v147;
        (*(void (**)(char *, uint64_t *, void *))(v108 + 16))(v139, v125, v147);
        unint64_t v127 = (*(unsigned __int8 *)(v120 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80);
        unint64_t v128 = (v138 + v127 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v129 = swift_allocObject();
        *(void *)(v129 + 16) = v122;
        (*(void (**)(unint64_t, char *, void *))(v120 + 32))(v129 + v127, v124, v126);
        v130 = (void (**)(void *, uint64_t))(v129 + v128);
        v131 = v153;
        char *v130 = v152;
        v130[1] = v131;
        *(void *)(v129 + ((v128 + 23) & 0xFFFFFFFFFFFFFFF8)) = v149;
        v159 = sub_240900848;
        uint64_t v160 = v129;
        uint64_t aBlock = MEMORY[0x263EF8330];
        uint64_t v156 = 1107296256;
        v157 = sub_24081B29C;
        v158 = &unk_26F4F2370;
        v132 = _Block_copy(&aBlock);
        id v133 = v122;
        swift_retain();
        swift_release();
        uint64_t v134 = (void *)v150;
        uint64_t v135 = v154;
        objc_msgSend(v151, sel_updateSharingAuthorizationsForInvitationUUID_sharingAuthorizationsToAdd_sharingAuthorizationsToDelete_deleteOnCommit_completion_, v154, v150, v123, 1, v132);
        _Block_release(v132);

        (*(void (**)(char *, uint64_t))(v118 + 8))(v141, v142);
        (*(void (**)(uint64_t *, void *))(v120 + 8))(v143, v126);
        return;
      }
    }
    else
    {
      uint64_t v115 = (uint64_t)v154;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v144 + 56))(v154, 1, 1, v142);
    }
    sub_24083B1D4(v115, (uint64_t (*)(void))sub_240873DF8);
    sub_240900664();
    id v136 = (void *)swift_allocError();
    unsigned char *v137 = 3;
    v152(v136, 1);

    (*(void (**)(uint64_t *, uint64_t))(v108 + 8))(v106, v109);
  }
}

void sub_2408FD418(int a1, void *a2, void *a3, uint64_t a4, void (*a5)(void, void), uint64_t a6, uint64_t a7)
{
  id v59 = a2;
  int v56 = a1;
  uint64_t v12 = sub_240953ED8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_2409540C8();
  uint64_t v57 = *(void *)(v16 - 8);
  uint64_t v58 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954058();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a4, v12);
  id v19 = a3;
  uint64_t v20 = sub_2409540B8();
  os_log_type_t v21 = sub_240954C38();
  int v22 = v21;
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v54 = a6;
    uint64_t v24 = v23;
    uint64_t v53 = swift_slowAlloc();
    uint64_t v62 = v53;
    *(_DWORD *)uint64_t v24 = 136446722;
    int v52 = v22;
    uint64_t v60 = a7;
    swift_getMetatypeMetadata();
    os_log_t v51 = v20;
    uint64_t v25 = sub_2409547E8();
    uint64_t v60 = sub_2408370E4(v25, v26, &v62);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2082;
    uint64_t v50 = v24 + 14;
    id v27 = objc_msgSend(v19, sel_authorizationIdentifier);
    uint64_t v28 = sub_2409547C8();
    char v55 = a5;
    uint64_t v30 = v29;

    uint64_t v60 = v28;
    uint64_t v61 = v30;
    swift_bridgeObjectRetain();
    sub_240955658();
    id v31 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v32 = sub_240954808();
    unint64_t v34 = v33;
    swift_bridgeObjectRelease();
    uint64_t v60 = sub_2408370E4(v32, v34, &v62);
    sub_2409550B8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 22) = 2082;
    uint64_t v50 = v24 + 24;
    uint64_t v35 = (void *)sub_240953EB8();
    id v36 = objc_msgSend(v35, sel_authorizationIdentifier);

    uint64_t v37 = sub_2409547C8();
    uint64_t v39 = v38;

    uint64_t v60 = v37;
    uint64_t v61 = v39;
    swift_bridgeObjectRetain();
    sub_240955658();
    id v40 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v41 = sub_240954808();
    unint64_t v43 = v42;
    a5 = v55;
    swift_bridgeObjectRelease();
    uint64_t v60 = sub_2408370E4(v41, v43, &v62);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    uint64_t v20 = v51;
    _os_log_impl(&dword_240818000, v51, (os_log_type_t)v52, "[%{public}s]: Successfully migrated auth identifier %{public}s to %{public}s", (uint8_t *)v24, 0x20u);
    uint64_t v44 = v53;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v44, -1, -1);
    MEMORY[0x2456021C0](v24, -1, -1);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }

  (*(void (**)(char *, uint64_t))(v57 + 8))(v18, v58);
  id v45 = v59;
  if (v59)
  {
    id v46 = v59;
    uint64_t v47 = (uint64_t)v45;
  }
  else
  {
    if (v56)
    {
      a5(1, 0);
      return;
    }
    sub_240900664();
    uint64_t v47 = swift_allocError();
    id v45 = (id)v47;
    *id v48 = 3;
  }
  a5(v47, 1);
}

uint64_t sub_2408FD950(void *a1, uint64_t a2)
{
  sub_240951F38();
  sub_2408304E8(v7, v7[3]);
  uint64_t v4 = (void *)sub_240951E98();
  uint64_t v5 = sub_2408FAA14(a2, a1, v4);

  sub_2408371B8((uint64_t)v7);
  return v5;
}

uint64_t sub_2408FD9E8()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HealthRecords29ConceptSharableModelGenerator_domain;
  uint64_t v2 = sub_240951F18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_24083B1D4(v0 + OBJC_IVAR____TtC13HealthRecords29ConceptSharableModelGenerator_context, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);

  return swift_deallocClassInstance();
}

uint64_t sub_2408FDAB4()
{
  return type metadata accessor for ConceptSharableModelGenerator();
}

uint64_t sub_2408FDABC()
{
  uint64_t v1 = sub_240951A98();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = &off_2650D8000;
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F464D8]), sel_init);
  if (!v6) {
    return (uint64_t)v6;
  }
  id v45 = v4;
  id v7 = objc_msgSend(v0, sel_diagnosticTestCodingCollection);
  id v8 = objc_msgSend(v7, sel_codings);

  sub_24083EDCC(0, &qword_268C90E18);
  unint64_t v9 = sub_240954998();

  uint64_t v46 = v2;
  uint64_t v47 = v1;
  id v48 = v0;
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_2409553D8();
    uint64_t v10 = result;
    if (result) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v10)
    {
LABEL_4:
      uint64_t v12 = v10 - 1;
      if (v10 >= 1)
      {
        uint64_t v13 = 0;
        unint64_t v14 = v9 & 0xC000000000000001;
        if ((v9 & 0xC000000000000001) == 0) {
          goto LABEL_7;
        }
LABEL_6:
        for (id i = (id)MEMORY[0x2456015B0](v13, v9); ; id i = *(id *)(v9 + 8 * v13 + 32))
        {
          uint64_t v16 = i;
          id v17 = [objc_allocWithZone(MEMORY[0x263F464D0]) (SEL)v5[319]];
          if (v17)
          {
            uint64_t v18 = v17;
            id v19 = objc_msgSend(v16, sel_codingSystem);
            uint64_t v20 = v19;
            if (v19)
            {
              id v21 = objc_msgSend(v19, sel_identifier);
              uint64_t v49 = v13;
              unint64_t v22 = v9;
              unint64_t v23 = v14;
              uint64_t v24 = v12;
              id v25 = v6;
              unint64_t v26 = v5;
              id v27 = v21;

              sub_2409547C8();
              uint64_t v5 = v26;
              id v6 = v25;
              uint64_t v12 = v24;
              unint64_t v14 = v23;
              unint64_t v9 = v22;
              uint64_t v13 = v49;
              uint64_t v20 = (void *)sub_240954788();
              swift_bridgeObjectRelease();
            }
            objc_msgSend(v18, sel_setSystem_, v20);

            id v28 = objc_msgSend(v16, sel_codingVersion);
            objc_msgSend(v18, sel_setVersion_, v28);

            id v29 = objc_msgSend(v16, sel_code);
            objc_msgSend(v18, sel_setCode_, v29);

            objc_msgSend(v6, sel_addCode_, v18);
            if (v12 == v13) {
              goto LABEL_17;
            }
          }
          else
          {

            if (v12 == v13) {
              goto LABEL_17;
            }
          }
          ++v13;
          if (v14) {
            goto LABEL_6;
          }
LABEL_7:
          ;
        }
      }
      __break(1u);
      goto LABEL_34;
    }
  }
LABEL_17:
  swift_bridgeObjectRelease_n();
  uint64_t v30 = v48;
  sub_240954E58();
  if (v31)
  {
    uint64_t v32 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v32 = 0;
  }
  objc_msgSend(v6, sel_setUcumUnitString_, v32);

  unint64_t v33 = sub_2408FDF9C();
  unint64_t v34 = v33;
  if (!(v33 >> 62))
  {
    uint64_t v35 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v35) {
      goto LABEL_22;
    }
LABEL_29:
    swift_bridgeObjectRelease_n();
    uint64_t v39 = sub_2408FE670();
    if ((v40 & 1) == 0) {
      objc_msgSend(v6, sel_setDateData_, *(double *)&v39);
    }
    id v41 = objc_msgSend(v30, sel_UUID);
    unint64_t v42 = v45;
    sub_240951A78();

    sub_240951A48();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v42, v47);
    unint64_t v43 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setRecordUUID_, v43);

    return (uint64_t)v6;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_2409553D8();
  uint64_t v35 = result;
  if (!result) {
    goto LABEL_29;
  }
LABEL_22:
  if (v35 >= 1)
  {
    for (uint64_t j = 0; j != v35; ++j)
    {
      if ((v34 & 0xC000000000000001) != 0) {
        id v37 = (id)MEMORY[0x2456015B0](j, v34);
      }
      else {
        id v37 = *(id *)(v34 + 8 * j + 32);
      }
      uint64_t v38 = v37;
      objc_msgSend(v6, sel_addValueWithRange_, v37);
    }
    goto LABEL_29;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_2408FDF9C()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_value);
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v3 = v2;
  id v4 = objc_msgSend(v2, sel_inspectableValue);

  if (!v4) {
    return MEMORY[0x263F8EE78];
  }
  id v5 = objc_msgSend(v1, sel_referenceRanges);
  if (v5)
  {
    id v6 = v5;
    sub_24083EDCC(0, &qword_268C917F0);
    unint64_t v7 = sub_240954998();
  }
  else
  {
    unint64_t v7 = 0;
  }
  id v9 = objc_msgSend(v1, sel_diagnosticTestCodingCollection);
  id v10 = objc_msgSend(v9, sel_codings);

  sub_24083EDCC(0, &qword_268C90E18);
  int64_t v11 = sub_240954998();

  uint64_t v12 = sub_2408FE0F0(v7, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_2408FE0F0(unint64_t a1, int64_t a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46548]), sel_init);
  if (!v5) {
    return MEMORY[0x263F8EE78];
  }
  id v6 = v5;
  id v7 = objc_msgSend(v2, sel_value);
  self;
  if (swift_dynamicCastObjCClass())
  {
    id v8 = sub_2408FE874();
    objc_msgSend(v6, sel_setQuantityValue_, v8);

    if (!a1) {
      goto LABEL_29;
    }
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      id v2 = (void *)sub_2409553D8();
      if (v2) {
        goto LABEL_6;
      }
    }
    else
    {
      id v2 = *(void **)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v2)
      {
LABEL_6:
        if ((a1 & 0xC000000000000001) != 0) {
          goto LABEL_42;
        }
        if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          for (id i = *(id *)(a1 + 32); ; id i = (id)MEMORY[0x2456015B0](0, a1))
          {
            id v10 = i;
            swift_bridgeObjectRelease();
            id v11 = objc_msgSend(v10, sel_valueRange);
            id v12 = objc_msgSend(v11, sel_min);

            a1 = (unint64_t)objc_msgSend(v12, sel_codedQuantityValue);
            id v13 = objc_msgSend(v10, sel_valueRange);
            id v14 = objc_msgSend(v13, sel_max);

            id v15 = objc_msgSend(v14, sel_codedQuantityValue);
            if (a1)
            {
              uint64_t v16 = (id *)(id)a1;
              id v17 = sub_2408FE874();
            }
            else
            {
              id v17 = 0;
            }
            objc_msgSend(v6, sel_setReferenceRangeMin_, v17);

            if (v15)
            {
              id v29 = v15;
              id v30 = sub_2408FE874();
            }
            else
            {
              id v30 = 0;
            }
            objc_msgSend(v6, sel_setReferenceRangeMax_, v30);

LABEL_29:
            unint64_t v31 = sub_2408F8478(a2);
            unint64_t v32 = v31;
            if (v31 >> 62)
            {
              swift_bridgeObjectRetain();
              a2 = sub_2409553D8();
              if (!a2) {
                goto LABEL_38;
              }
            }
            else
            {
              a2 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (!a2) {
                goto LABEL_38;
              }
            }
            if (a2 >= 1) {
              break;
            }
            __break(1u);
LABEL_42:
            ;
          }
          uint64_t v33 = 0;
          do
          {
            if ((v32 & 0xC000000000000001) != 0) {
              id v34 = (id)MEMORY[0x2456015B0](v33, v32);
            }
            else {
              id v34 = *(id *)(v32 + 8 * v33 + 32);
            }
            uint64_t v35 = v34;
            ++v33;
            objc_msgSend(v6, sel_addCode_, v34);
          }
          while (a2 != v33);
LABEL_38:
          swift_bridgeObjectRelease_n();
          sub_2408CCE88();
          uint64_t v36 = swift_allocObject();
          *(_OWORD *)(v36 + 16) = xmmword_2409568A0;
          *(void *)(v36 + 32) = v6;
          uint64_t v39 = v36;
          sub_2409549B8();
          uint64_t v18 = v39;
          goto LABEL_39;
        }
        __break(1u);
        goto LABEL_44;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  swift_unknownObjectRelease();
  id v19 = objc_msgSend(v2, sel_value);
  self;
  uint64_t v20 = (void *)swift_dynamicCastObjCClass();
  if (v20)
  {
    id v21 = objc_msgSend(v20, sel_codedValues);
    sub_24083EDCC(0, &qword_268C917F8);
    unint64_t v22 = sub_240954998();

    uint64_t v18 = sub_2408F8758(v22, sub_2408FE96C);
    swift_bridgeObjectRelease();

LABEL_39:
    swift_unknownObjectRelease();
    return v18;
  }
  swift_unknownObjectRelease();
  unint64_t v23 = sub_2408F8478(a2);
  a2 = v23;
  if (v23 >> 62)
  {
LABEL_44:
    swift_bridgeObjectRetain();
    uint64_t result = sub_2409553D8();
    uint64_t v24 = result;
    if (!result) {
      goto LABEL_45;
    }
    goto LABEL_16;
  }
  uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v24)
  {
LABEL_45:
    swift_bridgeObjectRelease_n();
    id v37 = objc_msgSend(v2, sel_displayString);
    if (!v37)
    {
      sub_2409547C8();
      id v37 = (id)sub_240954788();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v6, sel_setTextualValue_, v37);

    sub_2408CCE88();
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_2409568A0;
    *(void *)(v38 + 32) = v6;
    uint64_t v40 = v38;
    sub_2409549B8();
    return v40;
  }
LABEL_16:
  if (v24 >= 1)
  {
    for (uint64_t j = 0; j != v24; ++j)
    {
      if ((a2 & 0xC000000000000001) != 0) {
        id v27 = (id)MEMORY[0x2456015B0](j, a2);
      }
      else {
        id v27 = *(id *)(a2 + 8 * j + 32);
      }
      id v28 = v27;
      objc_msgSend(v6, sel_addCode_, v27);
    }
    goto LABEL_45;
  }
  __break(1u);
  return result;
}

uint64_t sub_2408FE670()
{
  uint64_t v1 = v0;
  sub_240849BDC();
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  id v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  id v7 = (char *)&v15 - v6;
  id v8 = objc_msgSend(v1, sel_meaningfulDate);
  if (v8)
  {
    id v9 = v8;
    sub_240951A08();

    uint64_t v10 = sub_240951A28();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 0, 1, v10);
  }
  else
  {
    uint64_t v10 = sub_240951A28();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 1, 1, v10);
  }
  sub_24082CF54((uint64_t)v5, (uint64_t)v7, (uint64_t (*)(void))sub_240849BDC);
  sub_240951A28();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) == 1)
  {
    sub_24083B1D4((uint64_t)v7, (uint64_t (*)(void))sub_240849BDC);
    return 0;
  }
  else
  {
    sub_2409519E8();
    uint64_t v14 = v13;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
    return v14;
  }
}

id sub_2408FE874()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46538]), sel_init);
  if (v1)
  {
    objc_msgSend(v0, sel_doubleValue);
    objc_msgSend(v1, sel_setValue_);
    id v2 = objc_msgSend(v0, sel_unitCoding);
    uint64_t v3 = v2;
    if (v2)
    {
      id v4 = objc_msgSend(v2, sel_displayString);

      if (v4)
      {
        sub_2409547C8();

        uint64_t v3 = (void *)sub_240954788();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v3 = 0;
      }
    }
    objc_msgSend(v1, sel_setUnitString_, v3);
  }
  return v1;
}

uint64_t sub_2408FE96C()
{
  id v1 = v0;
  id v2 = objc_msgSend(v0, sel_value);
  id v3 = objc_msgSend(v2, sel_value);

  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  swift_unknownObjectRelease();
  if (!v4)
  {
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46548]), sel_init);
    if (!v9) {
      return (uint64_t)v9;
    }
    sub_240954BC8();
    if (v10)
    {
      uint64_t v11 = (void *)sub_240954788();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v11 = 0;
    }
    objc_msgSend(v9, sel_setTextualValue_, v11);

    id v17 = objc_msgSend(v1, sel_ontologyConcept);
    id v18 = objc_msgSend(v17, sel_localizedPreferredName);
LABEL_16:
    id v19 = v18;

    objc_msgSend(v9, sel_setValueTitle_, v19);
    return (uint64_t)v9;
  }
  id v5 = objc_msgSend(v1, sel_value);
  id v6 = objc_msgSend(v1, sel_referenceRanges);
  if (v6)
  {
    id v7 = v6;
    sub_24083EDCC(0, &qword_268C917F0);
    uint64_t v8 = sub_240954998();
  }
  else
  {
    uint64_t v8 = 0;
  }
  id v12 = objc_msgSend(v1, sel_codings);
  sub_24083EDCC(0, &qword_268C90E18);
  uint64_t v13 = sub_240954998();

  unint64_t v14 = sub_2408FE0F0(v8, v13);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!(v14 >> 62))
  {
    if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_10;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_2409553D8();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v20) {
    goto LABEL_18;
  }
LABEL_10:
  if ((v14 & 0xC000000000000001) != 0)
  {
    id v16 = (id)MEMORY[0x2456015B0](0, v14);
    goto LABEL_13;
  }
  if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v16 = *(id *)(v14 + 32);
LABEL_13:
    id v9 = v16;
    swift_bridgeObjectRelease();
    id v17 = objc_msgSend(v1, sel_ontologyConcept);
    id v18 = objc_msgSend(v17, sel_localizedPreferredName);
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

void sub_2408FEC40(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  uint64_t v11 = *(void (**)(id, void *, void *, uint64_t, void *))(a1 + 32);
  swift_retain();
  id v15 = a2;
  id v12 = a3;
  id v13 = a4;
  id v14 = a6;
  v11(v15, a3, a4, a5, a6);
  swift_release();
}

uint64_t sub_2408FED0C(unint64_t a1)
{
  return sub_240827D68(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_240876C88);
}

uint64_t sub_2408FED24(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v23 = v4 + v2;
  }
  else {
    int64_t v23 = v4;
  }
  unint64_t v3 = sub_2408C2E68(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  sub_24082EF80(0, (unint64_t *)&qword_268C90E10, &qword_268C90E18, 0x263F0A4A0, MEMORY[0x263F08F88]);
  uint64_t v12 = *(void *)(*(void *)(v10 - 8) + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  uint64_t v13 = (v11 + 32) & ~v11;
  unint64_t v14 = v3 + v13 + v12 * v8;
  unint64_t v15 = a1 + v13;
  uint64_t v16 = v12 * v2;
  unint64_t v17 = v14 + v16;
  unint64_t v18 = v15 + v16;
  if (v15 < v17 && v14 < v18) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *id v1 = v3;
    return result;
  }
  uint64_t v20 = *(void *)(v3 + 16);
  BOOL v21 = __OFADD__(v20, v2);
  uint64_t v22 = v20 + v2;
  if (!v21)
  {
    *(void *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_240955448();
  __break(1u);
  return result;
}

uint64_t sub_2408FEEF4(uint64_t a1)
{
  return sub_2408FF424(a1, (uint64_t (*)(void))sub_2408C2EB0, type metadata accessor for SharedConceptCodedValue);
}

uint64_t sub_2408FEF20(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  unint64_t v3 = sub_2408C2EF8(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[11 * v8 + 4];
  if (a1 + 32 < v9 + 88 * v2 && v9 < a1 + 32 + 88 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_240955448();
  __break(1u);
  return result;
}

uint64_t sub_2408FF07C(uint64_t a1)
{
  return sub_2408FF424(a1, (uint64_t (*)(void))sub_2408C3044, MEMORY[0x263F45630]);
}

uint64_t sub_2408FF0A8(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v23 = v4 + v2;
  }
  else {
    int64_t v23 = v4;
  }
  unint64_t v3 = sub_2408C33FC(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = (*(void *)(v3 + 24) >> 1) - v9;
  uint64_t v11 = *(void *)(sub_240951C08() - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = v3 + v13 + v12 * v9;
  unint64_t v15 = a1 + v13;
  uint64_t v16 = v12 * v8;
  unint64_t v17 = v14 + v16;
  unint64_t v18 = v15 + v16;
  if (v15 < v17 && v14 < v18) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v20 = *(void *)(v3 + 16);
  BOOL v21 = __OFADD__(v20, v8);
  uint64_t v22 = v20 + v8;
  if (!v21)
  {
    *(void *)(v3 + 16) = v22;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_240955448();
  __break(1u);
  return result;
}

uint64_t sub_2408FF258(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  unint64_t v3 = sub_2408C3274(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_240955448();
  __break(1u);
  return result;
}

uint64_t sub_2408FF3B4(unint64_t a1)
{
  return sub_240827D68(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_2408400B8);
}

uint64_t sub_2408FF3CC(uint64_t a1)
{
  return sub_2408FF424(a1, (uint64_t (*)(void))sub_2408C3598, MEMORY[0x263F45F38]);
}

uint64_t sub_2408FF3F8(uint64_t a1)
{
  return sub_2408FF424(a1, (uint64_t (*)(void))sub_2408C35E0, MEMORY[0x263F45738]);
}

uint64_t sub_2408FF424(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v5 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v5 + 16);
  uint64_t v11 = (*(void *)(v5 + 24) >> 1) - v10;
  uint64_t v12 = *(void *)(a3(0) - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v15 = v5 + v14 + v13 * v10;
  unint64_t v16 = a1 + v14;
  uint64_t v17 = v13 * v4;
  unint64_t v18 = v15 + v17;
  unint64_t v19 = v16 + v17;
  if (v16 < v18 && v15 < v19) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *unint64_t v3 = v5;
    return result;
  }
  uint64_t v21 = *(void *)(v5 + 16);
  BOOL v22 = __OFADD__(v21, v4);
  uint64_t v23 = v21 + v4;
  if (!v22)
  {
    *(void *)(v5 + 16) = v23;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_240955448();
  __break(1u);
  return result;
}

unint64_t sub_2408FF5E0()
{
  unint64_t result = qword_26AFCEED0;
  if (!qword_26AFCEED0)
  {
    sub_2409002AC(255, &qword_26AFCEED8, (void (*)(uint64_t))sub_240845A08, (void (*)(void))sub_240845AE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCEED0);
  }
  return result;
}

uint64_t sub_2408FF668()
{
  uint64_t v1 = sub_240951FB8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_240951A28();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return MEMORY[0x270FA0238](v0, v10, v11);
}

uint64_t sub_2408FF7C8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_240951FB8() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_240951A28() - 8);
  uint64_t v9 = *(void *)(v2 + 24);
  uint64_t v10 = *(void *)(v2 + 32);
  uint64_t v11 = v2 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  return sub_2408F8D20(a1, v9, v10, v11, a2);
}

uint64_t sub_2408FF8B4()
{
  uint64_t v1 = sub_240951FB8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_2408FF98C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2408FF99C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2408F9940(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_2408FF9A4()
{
  unint64_t result = qword_268C917B0;
  if (!qword_268C917B0)
  {
    sub_24082F050(255, &qword_268C917A8, (uint64_t (*)(uint64_t))sub_240840050, MEMORY[0x263EFDEA0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C917B0);
  }
  return result;
}

void sub_2408FFA2C(id *a1@<X0>, uint64_t a2@<X8>)
{
}

unint64_t sub_2408FFA4C()
{
  unint64_t result = qword_268C917B8;
  if (!qword_268C917B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C917B8);
  }
  return result;
}

void sub_2408FFAA0()
{
  if (!qword_268C917C0)
  {
    sub_24082EF80(255, &qword_26AFCDF78, &qword_26AFCDF70, 0x263F464E0, MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_240954398();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C917C0);
    }
  }
}

void sub_2408FFB24()
{
  if (!qword_268C917D0)
  {
    sub_2408D5908();
    sub_24082EF80(255, &qword_26AFCDF78, &qword_26AFCDF70, 0x263F464E0, MEMORY[0x263F8D8F0]);
    sub_24082EEE0(&qword_26AFCDD20, (void (*)(uint64_t))sub_2408D5908);
    unint64_t v0 = sub_2409541C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C917D0);
    }
  }
}

uint64_t sub_2408FFBFC()
{
  uint64_t v1 = sub_240951A28();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

void sub_2408FFCD0(unint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_240951A28() - 8);
  uint64_t v6 = *(void **)(v2 + 24);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_2408F9E14(a1, v6, v7, a2);
}

BOOL sub_2408FFD54(id *a1)
{
  return sub_2408FA040(a1);
}

unint64_t sub_2408FFD74()
{
  unint64_t result = qword_268C90F28;
  if (!qword_268C90F28)
  {
    sub_24083EDCC(255, &qword_26AFCDF70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90F28);
  }
  return result;
}

unint64_t sub_2408FFDDC()
{
  unint64_t result = qword_26AFCDA10;
  if (!qword_26AFCDA10)
  {
    sub_2409002AC(255, &qword_26AFCDA18, (void (*)(uint64_t))sub_24084210C, (void (*)(void))sub_2408421E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCDA10);
  }
  return result;
}

uint64_t sub_2408FFE68@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t result = sub_240900908(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_2408FFEE0()
{
  uint64_t v1 = (int *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_2408FFFD0(void *a1, uint64_t a2)
{
  type metadata accessor for HealthRecordsGeneratorContext();

  return sub_2408FD950(a1, a2);
}

uint64_t sub_240900054()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24090008C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  return result;
}

void sub_2409000C4()
{
  if (!qword_268C91800)
  {
    sub_24082EF80(255, &qword_26AFCDEB0, &qword_26AFCDF20, 0x263F0A730, MEMORY[0x263F8D488]);
    sub_24083FCA0(&qword_268C91808, &qword_26AFCDEB0, &qword_26AFCDF20, 0x263F0A730);
    unint64_t v0 = sub_2409542A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C91800);
    }
  }
}

void sub_2409001A0()
{
  if (!qword_268C91810)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, void, uint64_t, void))MEMORY[0x263EFDCF0];
    sub_2408412B8(255, (unint64_t *)&qword_26AFCDD78, MEMORY[0x263EFDCF0]);
    sub_2409002AC(255, &qword_268C91818, (void (*)(uint64_t))sub_2409000C4, (void (*)(void))sub_240900354);
    sub_240840D34(&qword_26AFCDD70, (unint64_t *)&qword_26AFCDD78, v0);
    sub_240900388();
    unint64_t v1 = sub_240954278();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268C91810);
    }
  }
}

void sub_2409002AC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_2408484BC(255, qword_26AFD07C0);
    a4();
    unint64_t v6 = sub_2409541A8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_240900354()
{
  return sub_24082EEE0(&qword_268C91820, (void (*)(uint64_t))sub_2409000C4);
}

unint64_t sub_240900388()
{
  unint64_t result = qword_268C91828;
  if (!qword_268C91828)
  {
    sub_2409002AC(255, &qword_268C91818, (void (*)(uint64_t))sub_2409000C4, (void (*)(void))sub_240900354);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91828);
  }
  return result;
}

void sub_240900410()
{
  if (!qword_268C91830)
  {
    sub_2409001A0();
    sub_24082EEE0(&qword_268C91838, (void (*)(uint64_t))sub_2409001A0);
    unint64_t v0 = sub_240954268();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C91830);
    }
  }
}

uint64_t sub_2409004A4()
{
  return sub_24082EEE0(&qword_268C91848, (void (*)(uint64_t))sub_240900410);
}

uint64_t sub_2409004D8()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_240900518@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_2408FAED8(*a1, *(void **)(v2 + 24), *(void **)(v2 + 32));
  *a2 = result;
  return result;
}

unint64_t sub_240900550()
{
  unint64_t result = qword_268C91850;
  if (!qword_268C91850)
  {
    sub_24084585C(255, &qword_268C91840, (void (*)(uint64_t))sub_240900410, (void (*)(void))sub_2409004A4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91850);
  }
  return result;
}

uint64_t sub_2409005D8()
{
  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_240900620(void (*a1)(uint64_t *), uint64_t a2)
{
  sub_2408FB5D0(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40), *(void *)(v2 + 48));
}

void sub_240900630(uint64_t a1)
{
}

unint64_t sub_240900664()
{
  unint64_t result = qword_268C91870;
  if (!qword_268C91870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91870);
  }
  return result;
}

uint64_t sub_2409006B8()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 88, 7);
}

void sub_240900718(uint64_t a1, void *a2, uint64_t a3, int a4, void *a5)
{
  sub_2408FC498(a1, a2, a3, a4, a5, *(void **)(v5 + 16), *(void *)(v5 + 24), *(void (**)(void *, uint64_t))(v5 + 32), *(void (**)(void *, uint64_t))(v5 + 40), *(void *)(v5 + 48), *(void **)(v5 + 56), *(void (***)(void, void))(v5 + 64), *(void **)(v5 + 72), *(void *)(v5 + 80));
}

uint64_t sub_240900754()
{
  uint64_t v1 = sub_240953ED8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x270FA0238](v0, ((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

void sub_240900848(int a1, void *a2)
{
  uint64_t v5 = *(void *)(sub_240953ED8() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void **)(v2 + 16);
  uint64_t v9 = *(void (**)(void, void))(v2 + v7);
  uint64_t v10 = *(void *)(v2 + v7 + 8);
  uint64_t v11 = *(void *)(v2 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8));

  sub_2408FD418(a1, a2, v8, v2 + v6, v9, v10, v11);
}

uint64_t sub_240900908(void *a1)
{
  sub_240951F38();
  sub_2408304E8(v9, v9[3]);
  uint64_t v2 = (void *)sub_240951E98();
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A738]), sel_initWithHealthStore_recipientIdentifier_, v2, a1);

  sub_2408371B8((uint64_t)v9);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = a1;
  sub_24082F050(0, &qword_268C91890, (uint64_t (*)(uint64_t))sub_24083F7C4, MEMORY[0x263EFDE20]);
  swift_allocObject();
  id v5 = v3;
  id v6 = a1;
  v9[0] = sub_2409543E8();
  sub_240900AAC();
  uint64_t v7 = sub_240954498();
  swift_release();

  return v7;
}

uint64_t sub_240900A64()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_240900AA4(uint64_t a1, uint64_t a2)
{
  sub_2408FA5E8(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

unint64_t sub_240900AAC()
{
  unint64_t result = qword_268C91898;
  if (!qword_268C91898)
  {
    sub_24082F050(255, &qword_268C91890, (uint64_t (*)(uint64_t))sub_24083F7C4, MEMORY[0x263EFDE20]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91898);
  }
  return result;
}

uint64_t sub_240900B34(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = *(uint64_t (**)(void *))(v3 + 16);
  v6[0] = a1;
  v6[1] = a2;
  char v7 = a3 & 1;
  return v4(v6);
}

void sub_240900B78(unint64_t a1, void *a2)
{
  sub_2408FA70C(a1, a2, *(void (**)(id, uint64_t, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_240900B84()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

unsigned char *storeEnumTagSinglePayload for ConceptSharableModelGenerator.AuthorizationPromotionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240900C8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConceptSharableModelGenerator.AuthorizationPromotionError()
{
  return &type metadata for ConceptSharableModelGenerator.AuthorizationPromotionError;
}

unsigned char *storeEnumTagSinglePayload for ConceptSharableModelGenerator.SharableModelGenerationError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240900D90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConceptSharableModelGenerator.SharableModelGenerationError()
{
  return &type metadata for ConceptSharableModelGenerator.SharableModelGenerationError;
}

unint64_t sub_240900DCC()
{
  unint64_t result = qword_268C918A0;
  if (!qword_268C918A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C918A0);
  }
  return result;
}

unint64_t sub_240900E24()
{
  unint64_t result = qword_268C918A8;
  if (!qword_268C918A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C918A8);
  }
  return result;
}

char *sub_240900E94(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2409528B8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_24082EF28(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = &a1[v12];
    unint64_t v14 = &a2[v12];
    sub_24082EF28(0, (unint64_t *)&qword_268C91588, &qword_268C91590);
    uint64_t v16 = v15;
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    v17(v13, v14, v15);
    v17(&a1[a3[7]], &a2[a3[7]], v16);
    uint64_t v18 = a3[9];
    *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
    unint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)unint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    uint64_t v22 = a3[10];
    uint64_t v23 = &a1[v22];
    uint64_t v24 = &a2[v22];
    uint64_t v25 = sub_240951A28();
    uint64_t v26 = *(void *)(v25 - 8);
    id v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    if (v27(v24, 1, v25))
    {
      sub_2408F0E34(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
      memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    a1[a3[11]] = a2[a3[11]];
  }
  return a1;
}

uint64_t sub_24090116C(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_24082EF28(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_24082EF28(0, (unint64_t *)&qword_268C91588, &qword_268C91590);
  uint64_t v9 = v8;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v10(v7, v8);
  v10(a1 + a2[7], v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = a1 + a2[10];
  uint64_t v12 = sub_240951A28();
  uint64_t v15 = *(void *)(v12 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v11, 1, v12);
  if (!result)
  {
    unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8);
    return v14(v11, v12);
  }
  return result;
}

uint64_t sub_240901360(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_24082EF28(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_24082EF28(0, (unint64_t *)&qword_268C91588, &qword_268C91590);
  uint64_t v15 = v14;
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  v16(v12, v13, v14);
  v16(a1 + a3[7], a2 + a3[7], v15);
  uint64_t v17 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v18 = (void *)(a1 + v17);
  unint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = a3[10];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (const void *)(a2 + v21);
  uint64_t v24 = sub_240951A28();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48);
  swift_bridgeObjectRetain();
  if (v26(v23, 1, v24))
  {
    sub_2408F0E34(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
    memcpy(v22, v23, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v25 + 16))(v22, v23, v24);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_2409015E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_24082EF28(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_24082EF28(0, (unint64_t *)&qword_268C91588, &qword_268C91590);
  uint64_t v15 = v14;
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24);
  v16(v12, v13, v14);
  v16(a1 + a3[7], a2 + a3[7], v15);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v17 = a3[9];
  uint64_t v18 = (void *)(a1 + v17);
  unint64_t v19 = (void *)(a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[10];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = sub_240951A28();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  LODWORD(v16) = v25(v21, 1, v23);
  int v26 = v25(v22, 1, v23);
  if (!v16)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 24))(v21, v22, v23);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v21, v23);
    goto LABEL_6;
  }
  if (v26)
  {
LABEL_6:
    sub_2408F0E34(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
    memcpy(v21, v22, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v24 + 16))(v21, v22, v23);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
LABEL_7:
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_2409018E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_24082EF28(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_24082EF28(0, (unint64_t *)&qword_268C91588, &qword_268C91590);
  uint64_t v15 = v14;
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32);
  v16(v12, v13, v14);
  v16(a1 + a3[7], a2 + a3[7], v15);
  uint64_t v17 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  uint64_t v18 = a3[10];
  unint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (const void *)(a2 + v18);
  uint64_t v21 = sub_240951A28();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    sub_2408F0E34(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_240901B50(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_24082EF28(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_24082EF28(0, (unint64_t *)&qword_268C91588, &qword_268C91590);
  uint64_t v15 = v14;
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40);
  v16(v12, v13, v14);
  v16(a1 + a3[7], a2 + a3[7], v15);
  uint64_t v17 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v18 = (void *)(a1 + v17);
  unint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[10];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  uint64_t v25 = sub_240951A28();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  LODWORD(v16) = v27(v23, 1, v25);
  int v28 = v27(v24, 1, v25);
  if (!v16)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 40))(v23, v24, v25);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_6;
  }
  if (v28)
  {
LABEL_6:
    sub_2408F0E34(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
    memcpy(v23, v24, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v26 + 32))(v23, v24, v25);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_7:
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_240901E34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240901E48);
}

uint64_t sub_240901E48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2409528B8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  sub_24082EF28(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  sub_24082EF28(0, (unint64_t *)&qword_268C91588, &qword_268C91590);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v16 = *(void *)(a1 + a3[9] + 8);
    if (v16 >= 0xFFFFFFFF) {
      LODWORD(v16) = -1;
    }
    return (v16 + 1);
  }
  else
  {
    sub_2408F0E34(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
    uint64_t v19 = v17;
    uint64_t v20 = a1 + a3[10];
    return v18(v20, a2, v19);
  }
}

uint64_t sub_240902064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240902078);
}

void sub_240902078(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_2409528B8();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    v11(v12, a2, a2, v10);
    return;
  }
  sub_24082EF28(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  sub_24082EF28(0, (unint64_t *)&qword_268C91588, &qword_268C91590);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[9] + 8) = (a2 - 1);
  }
  else
  {
    sub_2408F0E34(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    uint64_t v19 = v17;
    uint64_t v20 = a1 + a4[10];
    v18(v20, a2, a2, v19);
  }
}

uint64_t type metadata accessor for ConceptDeltaHighlightFeedItemData()
{
  uint64_t result = qword_268C918B0;
  if (!qword_268C918B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2409022E0()
{
  sub_2409528B8();
  if (v0 <= 0x3F)
  {
    sub_24082EF28(319, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
    if (v1 <= 0x3F)
    {
      sub_24082EF28(319, (unint64_t *)&qword_268C91588, &qword_268C91590);
      if (v2 <= 0x3F)
      {
        sub_2408F0E34(319, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_24090248C(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v39 = a3;
  id v40 = a2;
  sub_2408F0E34(0, &qword_26AFCC5E0, MEMORY[0x263F46018]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v35 - v11;
  uint64_t v13 = sub_2409528B8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = objc_msgSend(a1, sel_categoryTypes);
  sub_24083EDCC(0, &qword_268C90948);
  unint64_t v18 = sub_240954998();

  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_2409553D8();
    swift_bridgeObjectRelease();
    if (v21) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  if (!*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v18 & 0xC000000000000001) != 0)
  {
    id v19 = (id)MEMORY[0x2456015B0](0, v18);
  }
  else
  {
    if (!*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v19 = *(id *)(v18 + 32);
  }
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_integerValue);

LABEL_9:
  sub_240952898();
  int v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  int v38 = a5;
  uint64_t v36 = v16;
  uint64_t v37 = a4;
  uint64_t v35 = v13;
  if (v22 == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x263F45FF8], v13);
    sub_240849B20((uint64_t)v12, &qword_26AFCC5E0, MEMORY[0x263F46018]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  }
  uint64_t v23 = v39;
  uint64_t v24 = (int *)type metadata accessor for ConceptDeltaHighlightFeedItemData();
  sub_24083EDCC(0, &qword_26AFCDF40);
  id v25 = a1;
  sub_240954688();
  sub_24083EDCC(0, &qword_268C91590);
  id v26 = v40;
  sub_240954688();
  id v27 = v23;
  sub_240954688();
  uint64_t v28 = sub_240954EB8();
  uint64_t v30 = v29;
  uint64_t v31 = a6 + v24[10];
  id v32 = objc_msgSend(v25, sel_modificationDate);
  sub_240951A08();

  uint64_t v33 = sub_240951A28();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v31, 0, 1, v33);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a6, v36, v35);
  *(void *)(a6 + v24[8]) = v37;
  id v34 = (uint64_t *)(a6 + v24[9]);
  uint64_t *v34 = v28;
  v34[1] = v30;
  *(unsigned char *)(a6 + v24[11]) = v38 & 1;
}

uint64_t sub_2409028C4()
{
  uint64_t v1 = sub_240951A28();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408F0E34(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - v6;
  sub_2409528B8();
  sub_2409045A0(&qword_268C90DD0, MEMORY[0x263F46018]);
  sub_240954708();
  uint64_t v8 = type metadata accessor for ConceptDeltaHighlightFeedItemData();
  sub_24082EF28(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
  sub_2408F43A8();
  sub_240954708();
  sub_24082EF28(0, (unint64_t *)&qword_268C91588, &qword_268C91590);
  sub_240903E30();
  sub_240954708();
  sub_240954708();
  sub_240955708();
  swift_bridgeObjectRetain();
  sub_240954868();
  swift_bridgeObjectRelease();
  sub_240882BF4(v0 + *(int *)(v8 + 40), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_240955718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_240955718();
    sub_2409045A0(&qword_268C90D10, MEMORY[0x263F07490]);
    sub_240954708();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return sub_240955718();
}

uint64_t sub_240902BF8(char a1)
{
  uint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x747065636E6F63;
      break;
    case 2:
      unsigned int v3 = 1701080175;
      goto LABEL_5;
    case 3:
      unsigned int v3 = 1702323566;
LABEL_5:
      uint64_t result = v3 | 0x6365527200000000;
      break;
    case 4:
      uint64_t result = 0xD000000000000010;
      break;
    case 5:
      uint64_t result = 0x656C746974;
      break;
    case 6:
      uint64_t result = 0x66676E696E61656DLL;
      break;
    case 7:
      uint64_t result = 0x69446E4965646968;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_240902D18(void *a1)
{
  sub_240903DCC(0, &qword_268C918E0, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_2408304E8(a1, a1[3]);
  sub_240903CB8();
  sub_240955778();
  char v17 = 0;
  sub_2409528B8();
  sub_2409045A0(&qword_268C90DC8, MEMORY[0x263F46018]);
  sub_240955598();
  if (!v1)
  {
    type metadata accessor for ConceptDeltaHighlightFeedItemData();
    char v16 = 1;
    sub_24082EF28(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
    sub_2408F434C(&qword_268C91728);
    sub_240955598();
    char v15 = 2;
    sub_24082EF28(0, (unint64_t *)&qword_268C91588, &qword_268C91590);
    sub_240903D0C(&qword_268C918E8);
    sub_240955598();
    char v14 = 3;
    sub_240955598();
    char v13 = 4;
    sub_240955588();
    char v12 = 5;
    sub_240955558();
    char v11 = 6;
    sub_240951A28();
    sub_2409045A0(&qword_26AFCC680, MEMORY[0x263F07490]);
    sub_240955548();
    char v10 = 7;
    sub_240955568();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2409030EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a2;
  sub_2408F0E34(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v3 - 8);
  id v48 = (char *)&v43 - v4;
  sub_24082EF28(0, (unint64_t *)&qword_268C91588, &qword_268C91590);
  uint64_t v60 = v5;
  uint64_t v58 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v49 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v50 = (char *)&v43 - v8;
  sub_24082EF28(0, (unint64_t *)&qword_26AFCE260, &qword_26AFCDF40);
  uint64_t v53 = *(void *)(v9 - 8);
  uint64_t v54 = v9;
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v43 - v10;
  uint64_t v12 = sub_2409528B8();
  uint64_t v55 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  char v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240903DCC(0, &qword_268C918C8, MEMORY[0x263F8E040]);
  uint64_t v52 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  unint64_t v18 = (char *)&v43 - v17;
  id v59 = (int *)type metadata accessor for ConceptDeltaHighlightFeedItemData();
  MEMORY[0x270FA5388](v59);
  uint64_t v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1[3];
  int v56 = a1;
  sub_2408304E8(a1, v21);
  sub_240903CB8();
  os_log_t v51 = v18;
  uint64_t v22 = v57;
  sub_240955768();
  if (v22)
  {
    uint64_t v57 = v22;
    return sub_2408371B8((uint64_t)v56);
  }
  else
  {
    uint64_t v23 = v50;
    uint64_t v46 = v16;
    char v68 = 0;
    sub_2409045A0(&qword_268C90DB8, MEMORY[0x263F46018]);
    sub_2409554F8();
    id v25 = *(void (**)(char *, char *, uint64_t))(v55 + 32);
    uint64_t v45 = v12;
    v25(v20, v14, v12);
    char v67 = 1;
    sub_2408F434C(&qword_268C91718);
    uint64_t v26 = v54;
    sub_2409554F8();
    id v27 = v59;
    (*(void (**)(char *, char *, uint64_t))(v53 + 32))(&v20[v59[5]], v11, v26);
    char v66 = 2;
    sub_240903D0C(&qword_268C918D8);
    uint64_t v28 = v23;
    uint64_t v29 = v60;
    sub_2409554F8();
    uint64_t v30 = (uint64_t)v56;
    uint64_t v31 = &v20[v27[6]];
    uint64_t v44 = v20;
    id v32 = *(void (**)(char *, char *, uint64_t))(v58 + 32);
    v32(v31, v28, v29);
    char v65 = 3;
    uint64_t v33 = v49;
    sub_2409554F8();
    v32(&v44[v59[7]], v33, v29);
    char v64 = 4;
    uint64_t v34 = sub_2409554E8();
    uint64_t v35 = v59;
    *(void *)&v44[v59[8]] = v34;
    char v63 = 5;
    uint64_t v36 = sub_2409554B8();
    uint64_t v37 = (uint64_t)v44;
    int v38 = (uint64_t *)&v44[v35[9]];
    *int v38 = v36;
    v38[1] = v39;
    sub_240951A28();
    char v62 = 6;
    sub_2409045A0(&qword_26AFCC688, MEMORY[0x263F07490]);
    uint64_t v40 = (uint64_t)v48;
    sub_2409554A8();
    sub_240882AA0(v40, v37 + v35[10]);
    char v61 = 7;
    char v41 = sub_2409554C8();
    uint64_t v57 = 0;
    char v42 = v41;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v51, v52);
    *(unsigned char *)(v37 + v35[11]) = v42 & 1;
    sub_240903D68(v37, v47);
    sub_2408371B8(v30);
    return sub_240904540(v37, (uint64_t (*)(void))type metadata accessor for ConceptDeltaHighlightFeedItemData);
  }
}

uint64_t sub_240903A7C()
{
  return sub_240902BF8(*v0);
}

uint64_t sub_240903A84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_240904884(a1, a2);
  *a3 = result;
  return result;
}

void sub_240903AAC(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_240903AB8(uint64_t a1)
{
  unint64_t v2 = sub_240903CB8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240903AF4(uint64_t a1)
{
  unint64_t v2 = sub_240903CB8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240903B30@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2409030EC(a1, a2);
}

uint64_t sub_240903B48(void *a1)
{
  return sub_240902D18(a1);
}

uint64_t sub_240903B60()
{
  return sub_240955748();
}

uint64_t sub_240903BA4()
{
  return sub_240955748();
}

uint64_t sub_240903BE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240882BF4(v2 + *(int *)(a1 + 40), a2);
}

uint64_t sub_240903BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2409045A0(&qword_268C91900, (void (*)(uint64_t))type metadata accessor for ConceptDeltaHighlightFeedItemData);

  return MEMORY[0x270F37AC0](a1, v4, a2);
}

uint64_t sub_240903C70()
{
  return sub_2409045A0(&qword_268C918C0, (void (*)(uint64_t))type metadata accessor for ConceptDeltaHighlightFeedItemData);
}

unint64_t sub_240903CB8()
{
  unint64_t result = qword_268C918D0;
  if (!qword_268C918D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C918D0);
  }
  return result;
}

uint64_t sub_240903D0C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24082EF28(255, (unint64_t *)&qword_268C91588, &qword_268C91590);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240903D68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConceptDeltaHighlightFeedItemData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_240903DCC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_240903CB8();
    unint64_t v7 = a3(a1, &type metadata for ConceptDeltaHighlightFeedItemData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_240903E30()
{
  unint64_t result = qword_268C918F0;
  if (!qword_268C918F0)
  {
    sub_24082EF28(255, (unint64_t *)&qword_268C91588, &qword_268C91590);
    sub_24083F780(&qword_268C918F8, &qword_268C91590);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C918F0);
  }
  return result;
}

uint64_t sub_240903EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240951A28();
  uint64_t v48 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v46 = &v40[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2408834C8();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v40[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2408F0E34(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v47 = &v40[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = &v40[-v14];
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = &v40[-v16];
  sub_2409528B8();
  sub_2409045A0(&qword_268C90DD8, MEMORY[0x263F46018]);
  sub_240954968();
  sub_240954968();
  if (v50 != v49) {
    goto LABEL_15;
  }
  uint64_t v44 = v17;
  uint64_t v45 = v9;
  uint64_t v43 = v4;
  unint64_t v18 = (int *)type metadata accessor for ConceptDeltaHighlightFeedItemData();
  sub_24083EDCC(0, &qword_26AFCDF40);
  sub_24083F780(&qword_268C91740, &qword_26AFCDF40);
  if ((sub_240954668() & 1) == 0) {
    goto LABEL_15;
  }
  sub_24083EDCC(0, &qword_268C91590);
  sub_24083F780(&qword_268C91908, &qword_268C91590);
  if ((sub_240954668() & 1) == 0) {
    goto LABEL_15;
  }
  if ((sub_240954668() & 1) == 0) {
    goto LABEL_15;
  }
  uint64_t v19 = v18;
  if (*(void *)(a1 + v18[8]) != *(void *)(a2 + v18[8])) {
    goto LABEL_15;
  }
  uint64_t v20 = v18[9];
  uint64_t v21 = *(void *)(a1 + v20);
  uint64_t v22 = *(void *)(a1 + v20 + 8);
  uint64_t v23 = (void *)(a2 + v20);
  if (v21 == *v23 && v22 == v23[1] || (v24 = sub_240955618(), char v25 = 0, (v24 & 1) != 0))
  {
    uint64_t v26 = a1 + v18[10];
    uint64_t v27 = (uint64_t)v44;
    sub_240882BF4(v26, (uint64_t)v44);
    char v42 = v19;
    sub_240882BF4(a2 + v19[10], (uint64_t)v15);
    uint64_t v28 = (uint64_t)v45;
    uint64_t v29 = (uint64_t)&v45[*(int *)(v7 + 48)];
    sub_240882BF4(v27, (uint64_t)v45);
    sub_240882BF4((uint64_t)v15, v29);
    uint64_t v30 = v48;
    uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
    uint64_t v32 = v43;
    if (v31(v28, 1, v43) == 1)
    {
      uint64_t v33 = (void (*)(uint64_t))MEMORY[0x263F07490];
      sub_240849B20((uint64_t)v15, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
      sub_240849B20(v27, (unint64_t *)&qword_26AFCF7F8, v33);
      if (v31(v29, 1, v32) == 1)
      {
        sub_240849B20((uint64_t)v45, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
LABEL_18:
        char v25 = *(unsigned char *)(a1 + v42[11]) ^ *(unsigned char *)(a2 + v42[11]) ^ 1;
        return v25 & 1;
      }
    }
    else
    {
      uint64_t v34 = v47;
      sub_240882BF4(v28, (uint64_t)v47);
      if (v31(v29, 1, v32) != 1)
      {
        uint64_t v37 = v46;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v30 + 32))(v46, v29, v32);
        sub_2409045A0(&qword_268C90D18, MEMORY[0x263F07490]);
        int v41 = sub_240954778();
        int v38 = *(void (**)(unsigned char *, uint64_t))(v30 + 8);
        v38(v37, v32);
        uint64_t v39 = (void (*)(uint64_t))MEMORY[0x263F07490];
        sub_240849B20((uint64_t)v15, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
        sub_240849B20((uint64_t)v44, (unint64_t *)&qword_26AFCF7F8, v39);
        v38(v34, v32);
        sub_240849B20(v28, (unint64_t *)&qword_26AFCF7F8, v39);
        if (v41) {
          goto LABEL_18;
        }
        goto LABEL_15;
      }
      uint64_t v35 = (void (*)(uint64_t))MEMORY[0x263F07490];
      sub_240849B20((uint64_t)v15, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
      sub_240849B20((uint64_t)v44, (unint64_t *)&qword_26AFCF7F8, v35);
      (*(void (**)(unsigned char *, uint64_t))(v30 + 8))(v34, v32);
    }
    sub_240904540((uint64_t)v45, (uint64_t (*)(void))sub_2408834C8);
LABEL_15:
    char v25 = 0;
  }
  return v25 & 1;
}

uint64_t sub_240904540(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2409045A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ConceptDeltaHighlightFeedItemData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ConceptDeltaHighlightFeedItemData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240904744);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConceptDeltaHighlightFeedItemData.CodingKeys()
{
  return &type metadata for ConceptDeltaHighlightFeedItemData.CodingKeys;
}

unint64_t sub_240904780()
{
  unint64_t result = qword_268C91910;
  if (!qword_268C91910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91910);
  }
  return result;
}

unint64_t sub_2409047D8()
{
  unint64_t result = qword_268C91918;
  if (!qword_268C91918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91918);
  }
  return result;
}

unint64_t sub_240904830()
{
  unint64_t result = qword_268C91920;
  if (!qword_268C91920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91920);
  }
  return result;
}

uint64_t sub_240904884(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x800000024095D0C0 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x747065636E6F63 && a2 == 0xE700000000000000 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6365527265646C6FLL && a2 == 0xEB0000000064726FLL || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x636552726577656ELL && a2 == 0xEB0000000064726FLL || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024095E520 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x66676E696E61656DLL && a2 == 0xEE00657461446C75 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x69446E4965646968 && a2 == 0xEE007265766F6373)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v5 = sub_240955618();
    swift_bridgeObjectRelease();
    if (v5) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_240904C28()
{
  if (*v0) {
    return 0xD000000000000013;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_240904C60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_240905F08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_240904C88(uint64_t a1)
{
  unint64_t v2 = sub_240904F14();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240904CC4(uint64_t a1)
{
  unint64_t v2 = sub_240904F14();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RemovedCategoryFeedItemData.encode(to:)(void *a1)
{
  sub_2409053E4(0, &qword_268C91928, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  BOOL v7 = &v9[-v6];
  sub_2408304E8(a1, a1[3]);
  sub_240904F14();
  sub_240955778();
  v9[15] = 0;
  sub_240952778();
  sub_240905448(&qword_268C91938, MEMORY[0x263F45F98]);
  sub_240955598();
  if (!v1)
  {
    type metadata accessor for RemovedCategoryFeedItemData();
    v9[14] = 1;
    sub_2409528B8();
    sub_240905448(&qword_268C90DC8, MEMORY[0x263F46018]);
    sub_240955598();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_240904F14()
{
  unint64_t result = qword_268C91930;
  if (!qword_268C91930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91930);
  }
  return result;
}

uint64_t type metadata accessor for RemovedCategoryFeedItemData()
{
  uint64_t result = qword_268C91950;
  if (!qword_268C91950) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t RemovedCategoryFeedItemData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v25 = sub_2409528B8();
  uint64_t v22 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_240952778();
  uint64_t v24 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v26 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409053E4(0, &qword_268C91940, MEMORY[0x263F8E040]);
  uint64_t v29 = v7;
  uint64_t v27 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v10 = type metadata accessor for RemovedCategoryFeedItemData();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408304E8(a1, a1[3]);
  sub_240904F14();
  sub_240955768();
  if (v2) {
    return sub_2408371B8((uint64_t)a1);
  }
  uint64_t v21 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v24;
  uint64_t v14 = v25;
  char v31 = 0;
  sub_240905448(&qword_268C91948, MEMORY[0x263F45F98]);
  uint64_t v16 = v26;
  sub_2409554F8();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  uint64_t v20 = (uint64_t)v13;
  v17(v13, v16, v28);
  char v30 = 1;
  sub_240905448(&qword_268C90DB8, MEMORY[0x263F46018]);
  sub_2409554F8();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v29);
  uint64_t v18 = v20;
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v20 + *(int *)(v21 + 20), v5, v14);
  sub_240905490(v18, v23);
  sub_2408371B8((uint64_t)a1);
  return sub_2409054F4(v18);
}

void sub_2409053E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_240904F14();
    unint64_t v7 = a3(a1, &type metadata for RemovedCategoryFeedItemData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_240905448(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240905490(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RemovedCategoryFeedItemData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2409054F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RemovedCategoryFeedItemData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240905550@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RemovedCategoryFeedItemData.init(from:)(a1, a2);
}

uint64_t sub_240905568(void *a1)
{
  return RemovedCategoryFeedItemData.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for NavigationFeedItemData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_240952778();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_2409528B8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for NavigationFeedItemData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240952778();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_2409528B8();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for NavigationFeedItemData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240952778();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for NavigationFeedItemData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240952778();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for NavigationFeedItemData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240952778();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for NavigationFeedItemData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240952778();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemovedCategoryFeedItemData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_240905A24);
}

uint64_t sub_240905A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240952778();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_2409528B8();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for RemovedCategoryFeedItemData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_240905B30);
}

uint64_t sub_240905B30(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_240952778();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_2409528B8();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_240905C34()
{
  uint64_t result = sub_240952778();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_2409528B8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RemovedCategoryFeedItemData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240905DC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemovedCategoryFeedItemData.CodingKeys()
{
  return &type metadata for RemovedCategoryFeedItemData.CodingKeys;
}

unint64_t sub_240905E04()
{
  unint64_t result = qword_268C91960;
  if (!qword_268C91960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91960);
  }
  return result;
}

unint64_t sub_240905E5C()
{
  unint64_t result = qword_268C91968;
  if (!qword_268C91968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91968);
  }
  return result;
}

unint64_t sub_240905EB4()
{
  unint64_t result = qword_268C91970;
  if (!qword_268C91970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91970);
  }
  return result;
}

uint64_t sub_240905F08(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024095D0C0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_240955618();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_240905FE8()
{
  uint64_t v0 = sub_240952B98();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x263F07690];
  uint64_t v5 = MEMORY[0x263F8D8F0];
  sub_24090BDA4(0, &qword_26AFCC6A8, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v14 - v7;
  uint64_t v9 = sub_240951AB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_240952B48();
  uint64_t v10 = sub_2409535A8();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t result = sub_24090BFC8((uint64_t)v8, (uint64_t)&qword_26AFCC6A8, v4, v5, (uint64_t (*)(void))sub_24090BDA4);
  qword_268C91980 = v10;
  *(void *)algn_268C91988 = v12;
  return result;
}

uint64_t sub_2409061FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController____lazy_storage___factory;
  swift_beginAccess();
  sub_24090C2AC(v3, (uint64_t)&v8, &qword_268C90810, (unint64_t *)&unk_268C911C0, MEMORY[0x263F46180]);
  if (!v9)
  {
    sub_24090C330((uint64_t)&v8, &qword_268C90810, (unint64_t *)&unk_268C911C0, MEMORY[0x263F46180]);
    uint64_t v4 = sub_240952D78();
    uint64_t v5 = sub_240952D68();
    uint64_t v9 = v4;
    uint64_t v10 = MEMORY[0x263F460E0];
    *(void *)&long long v8 = v5;
    sub_2408690E0((uint64_t)&v8, (uint64_t)v7);
    swift_beginAccess();
    sub_240869144((uint64_t)v7, v3);
    swift_endAccess();
  }
  return sub_24083AB20(&v8, a1);
}

id sub_2409062F8()
{
  uint64_t v1 = OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController____lazy_storage___iconView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController____lazy_storage___iconView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController____lazy_storage___iconView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_240906380()
{
  return sub_2409065D8(&OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController____lazy_storage___titleView, (uint64_t (*)(void))sub_2409063A0);
}

id sub_2409063A0()
{
  sub_240953808();
  id v0 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  uint64_t v1 = self;
  id v2 = v0;
  id v3 = objc_msgSend(v1, sel_labelColor);
  objc_msgSend(v2, sel_setTextColor_, v3);

  id v4 = (id)*MEMORY[0x263F83570];
  sub_2409537F8();
  sub_2409537E8();
  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  objc_msgSend(v2, sel_setLineBreakMode_, 0);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v2;
}

id sub_240906490()
{
  uint64_t v1 = OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController____lazy_storage___subtitleView;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController____lazy_storage___subtitleView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController____lazy_storage___subtitleView);
  }
  else
  {
    uint64_t v4 = v0;
    sub_240953808();
    id v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    id v6 = self;
    id v7 = v5;
    id v8 = objc_msgSend(v6, sel_secondaryLabelColor);
    objc_msgSend(v7, sel_setTextColor_, v8);

    id v9 = (id)*MEMORY[0x263F835B8];
    sub_2409537F8();
    sub_2409537E8();
    objc_msgSend(v7, sel_setNumberOfLines_, 0);
    objc_msgSend(v7, sel_setLineBreakMode_, 0);
    objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v10 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v7;
    id v3 = v7;

    id v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id sub_2409065B8()
{
  return sub_2409065D8(&OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController____lazy_storage___disclosureIndicator, (uint64_t (*)(void))sub_240906638);
}

id sub_2409065D8(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2();
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_240906638()
{
  id result = objc_msgSend(self, sel__preferredFontForTextStyle_variant_, *MEMORY[0x263F83570], 1024);
  if (result)
  {
    uint64_t v1 = result;
    id v2 = objc_msgSend(self, sel_configurationWithFont_scale_, result, 1);
    uint64_t v3 = (void *)sub_240954788();
    id v4 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v3, v2);

    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_initWithImage_, v4);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setAdjustsImageSizeForAccessibilityContentSizeCategory_, 1);
    id v6 = objc_msgSend(self, sel_tertiaryLabelColor);
    objc_msgSend(v5, sel_setTintColor_, v6);

    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2409067BC()
{
  uint64_t v1 = v0;
  v92.receiver = v0;
  v92.super_class = (Class)type metadata accessor for ClinicalSharingFeedItemViewController();
  objc_msgSendSuper2(&v92, sel_viewDidLoad);
  id v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v3 = v2;
  id v4 = objc_msgSend(self, sel_secondarySystemGroupedBackgroundColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v4);

  id v5 = objc_msgSend(v1, sel_view);
  if (!v5)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v6 = v5;
  id v7 = sub_2409062F8();
  objc_msgSend(v6, sel_addSubview_, v7);

  id v8 = objc_msgSend(v1, sel_view);
  if (!v8)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  id v9 = v8;
  id v10 = sub_240906380();
  objc_msgSend(v9, sel_addSubview_, v10);

  id v11 = objc_msgSend(v1, sel_view);
  if (!v11)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v12 = v11;
  id v13 = sub_240906490();
  objc_msgSend(v12, sel_addSubview_, v13);

  id v14 = objc_msgSend(v1, sel_view);
  if (!v14)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v15 = v14;
  id v16 = sub_2409065B8();
  objc_msgSend(v15, sel_addSubview_, v16);

  sub_2408B2F90(0, (unint64_t *)&qword_26AFCF418, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_24095AD70;
  id v18 = sub_2409062F8();
  id v19 = objc_msgSend(v18, sel_widthAnchor);

  id v20 = objc_msgSend(v19, sel_constraintEqualToConstant_, 32.0);
  *(void *)(v17 + 32) = v20;
  id v21 = sub_2409062F8();
  id v22 = objc_msgSend(v21, sel_heightAnchor);

  id v23 = objc_msgSend(v22, sel_constraintEqualToConstant_, 32.0);
  *(void *)(v17 + 40) = v23;
  id v24 = sub_2409062F8();
  id v25 = objc_msgSend(v24, sel_leadingAnchor);

  id v26 = objc_msgSend(v1, sel_view);
  if (!v26)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v27 = v26;
  id v28 = objc_msgSend(v26, sel_leadingAnchor);

  id v29 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v28, 20.0);
  *(void *)(v17 + 48) = v29;
  id v30 = sub_2409062F8();
  id v31 = objc_msgSend(v30, sel_centerYAnchor);

  id v32 = objc_msgSend(v1, sel_view);
  if (!v32)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v33 = v32;
  id v34 = objc_msgSend(v32, sel_centerYAnchor);

  id v35 = objc_msgSend(v31, sel_constraintEqualToAnchor_, v34);
  *(void *)(v17 + 56) = v35;
  id v36 = sub_240906380();
  id v37 = objc_msgSend(v36, sel_leadingAnchor);

  id v38 = sub_2409062F8();
  id v39 = objc_msgSend(v38, sel_trailingAnchor);

  id v40 = objc_msgSend(v37, sel_constraintEqualToAnchor_constant_, v39, 16.0);
  *(void *)(v17 + 64) = v40;
  id v41 = sub_240906380();
  id v42 = objc_msgSend(v41, sel_trailingAnchor);

  id v43 = sub_2409065B8();
  id v44 = objc_msgSend(v43, sel_leadingAnchor);

  id v45 = objc_msgSend(v42, sel_constraintEqualToAnchor_constant_, v44, -16.0);
  *(void *)(v17 + 72) = v45;
  id v46 = sub_240906380();
  id v47 = objc_msgSend(v46, sel_topAnchor);

  id v48 = objc_msgSend(v1, sel_view);
  if (!v48)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v49 = v48;
  id v50 = objc_msgSend(v48, sel_topAnchor);

  id v51 = objc_msgSend(v47, sel_constraintEqualToAnchor_constant_, v50, 10.0);
  *(void *)(v17 + 80) = v51;
  id v52 = sub_240906490();
  id v53 = objc_msgSend(v52, sel_leadingAnchor);

  id v54 = sub_240906380();
  id v55 = objc_msgSend(v54, sel_leadingAnchor);

  id v56 = objc_msgSend(v53, sel_constraintEqualToAnchor_, v55);
  *(void *)(v17 + 88) = v56;
  id v57 = sub_240906490();
  id v58 = objc_msgSend(v57, sel_trailingAnchor);

  id v59 = sub_240906380();
  id v60 = objc_msgSend(v59, sel_trailingAnchor);

  id v61 = objc_msgSend(v58, sel_constraintEqualToAnchor_, v60);
  *(void *)(v17 + 96) = v61;
  id v62 = sub_240906490();
  id v63 = objc_msgSend(v62, sel_topAnchor);

  id v64 = sub_240906380();
  id v65 = objc_msgSend(v64, sel_bottomAnchor);

  id v66 = objc_msgSend(v63, sel_constraintEqualToAnchor_constant_, v65, 2.0);
  *(void *)(v17 + 104) = v66;
  id v67 = sub_240906490();
  id v68 = objc_msgSend(v67, sel_bottomAnchor);

  id v69 = objc_msgSend(v1, sel_view);
  if (!v69)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v70 = v69;
  id v71 = objc_msgSend(v69, sel_bottomAnchor);

  id v72 = objc_msgSend(v68, sel_constraintEqualToAnchor_constant_, v71, -10.0);
  *(void *)(v17 + 112) = v72;
  id v73 = sub_2409065B8();
  id v74 = objc_msgSend(v73, sel_centerYAnchor);

  id v75 = objc_msgSend(v1, sel_view);
  if (!v75)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v76 = v75;
  id v77 = objc_msgSend(v75, sel_centerYAnchor);

  id v78 = objc_msgSend(v74, sel_constraintEqualToAnchor_, v77);
  *(void *)(v17 + 120) = v78;
  id v79 = sub_2409065B8();
  id v80 = objc_msgSend(v79, sel_trailingAnchor);

  id v81 = objc_msgSend(v1, sel_view);
  if (!v81)
  {
LABEL_25:
    __break(1u);
    return;
  }
  id v82 = v81;
  uint64_t v83 = self;
  id v84 = objc_msgSend(v82, sel_trailingAnchor);

  id v85 = objc_msgSend(v80, (SEL)&off_2650D8300 + 7, v84, -22.0);
  *(void *)(v17 + 128) = v85;
  int v91 = v17;
  sub_2409549B8();
  sub_24083EDCC(0, &qword_268C91A80);
  os_log_type_t v86 = (void *)sub_240954988();
  swift_bridgeObjectRelease();
  objc_msgSend(v83, sel_activateConstraints_, v86);

  id v87 = sub_2409065B8();
  type metadata accessor for UILayoutPriority(0);
  sub_24090C3A0(&qword_268C91A88, type metadata accessor for UILayoutPriority);
  sub_2409540D8();
  LODWORD(v88) = v91;
  objc_msgSend(v87, sel_setContentHuggingPriority_forAxis_, 0, v88, 0x443B80003F800000);

  id v89 = sub_2409065B8();
  sub_2409540D8();
  LODWORD(v90) = v91;
  objc_msgSend(v89, sel_setContentHuggingPriority_forAxis_, 1, v90, 0x443B80003F800000);

  if (*((unsigned char *)v1
       + OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_shouldUpdateViewAtViewDidLoad) == 1)
    sub_240907E14();
}

uint64_t sub_2409071D0()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_2409540C8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v77 = v3;
  uint64_t v78 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v76 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  id v9 = (char *)&v70 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v70 - v11;
  MEMORY[0x270FA5388](v10);
  id v72 = (char *)&v70 - v13;
  uint64_t v14 = type metadata accessor for ClinicalSharingFeedItemData();
  uint64_t v74 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v71 = (uint64_t)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24090BDA4(0, &qword_268C916F0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingFeedItemData, MEMORY[0x263F8D8F0]);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v73 = (uint64_t)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  id v20 = (char *)&v70 - v19;
  uint64_t v75 = v1;
  uint64_t v21 = v1 + OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_context;
  swift_beginAccess();
  uint64_t v22 = MEMORY[0x263F444A0];
  sub_24090C2AC(v21, (uint64_t)v80, (unint64_t *)&qword_26AFCF770, (unint64_t *)&qword_26AFCF760, MEMORY[0x263F444A0]);
  uint64_t v23 = v81;
  sub_24090C330((uint64_t)v80, (unint64_t *)&qword_26AFCF770, (unint64_t *)&qword_26AFCF760, v22);
  if (v23)
  {
    uint64_t v70 = ObjectType;
    uint64_t result = sub_24090C2AC(v21, (uint64_t)v80, (unint64_t *)&qword_26AFCF770, (unint64_t *)&qword_26AFCF760, MEMORY[0x263F444A0]);
    uint64_t v25 = v81;
    if (v81)
    {
      id v26 = sub_2408304E8(v80, v81);
      uint64_t v27 = *(void *)(v25 - 8);
      MEMORY[0x270FA5388](v26);
      id v29 = (char *)&v70 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v27 + 16))(v29);
      uint64_t v30 = sub_240953BB8();
      unint64_t v32 = v31;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v25);
      sub_2408371B8((uint64_t)v80);
      if (v32 >> 60 == 15)
      {
        sub_240954088();
        uint64_t v33 = sub_2409540B8();
        os_log_type_t v34 = sub_240954C18();
        if (os_log_type_enabled(v33, v34))
        {
          id v35 = (uint8_t *)swift_slowAlloc();
          uint64_t v36 = swift_slowAlloc();
          v80[0] = v36;
          *(_DWORD *)id v35 = 136315138;
          uint64_t v37 = sub_2409557A8();
          uint64_t v79 = sub_2408370E4(v37, v38, v80);
          sub_2409550B8();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_240818000, v33, v34, "%s userData nil", v35, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2456021C0](v36, -1, -1);
          MEMORY[0x2456021C0](v35, -1, -1);
        }

        return (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v12, v77);
      }
      unint64_t v45 = v32;
      sub_240951798();
      swift_allocObject();
      sub_240951788();
      sub_24090C3A0((unint64_t *)&unk_268C91A70, (void (*)(uint64_t))type metadata accessor for ClinicalSharingFeedItemData);
      sub_240951778();
      swift_release();
      uint64_t v46 = v74;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v20, 0, 1, v14);
      uint64_t v47 = v75;
      uint64_t v48 = v75 + OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_clinicalSharingFeedItemData;
      swift_beginAccess();
      sub_24090C218((uint64_t)v20, v48);
      swift_endAccess();
      uint64_t v49 = v73;
      sub_24090BCAC(v48, v73);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v49, 1, v14) == 1)
      {
        sub_24090BFC8(v49, (uint64_t)&qword_268C916F0, (uint64_t)type metadata accessor for ClinicalSharingFeedItemData, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_24090BDA4);
        id v50 = v72;
        sub_240954088();
        id v51 = sub_2409540B8();
        os_log_type_t v52 = sub_240954C18();
        if (os_log_type_enabled(v51, v52))
        {
          id v53 = (uint8_t *)swift_slowAlloc();
          uint64_t v54 = swift_slowAlloc();
          v80[0] = v54;
          *(_DWORD *)id v53 = 136315138;
          uint64_t v55 = sub_2409557A8();
          uint64_t v79 = sub_2408370E4(v55, v56, v80);
          sub_2409550B8();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_240818000, v51, v52, "%s Feed item data nil", v53, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2456021C0](v54, -1, -1);
          MEMORY[0x2456021C0](v53, -1, -1);
        }
        sub_240849C34(v30, v45);

        return (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v50, v77);
      }
      uint64_t v57 = v71;
      sub_24090BD40(v49, v71);
      uint64_t result = sub_24090C2AC(v21, (uint64_t)v80, (unint64_t *)&qword_26AFCF770, (unint64_t *)&qword_26AFCF760, MEMORY[0x263F444A0]);
      uint64_t v58 = v81;
      if (v81)
      {
        id v59 = sub_2408304E8(v80, v81);
        uint64_t v60 = *(void *)(v58 - 8);
        MEMORY[0x270FA5388](v59);
        id v62 = (char *)&v70 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v60 + 16))(v62);
        id v63 = (void *)sub_240953B98();
        (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v58);
        sub_240951A48();
        id v64 = objc_allocWithZone(MEMORY[0x263F0A740]);
        id v65 = (void *)sub_240954788();
        swift_bridgeObjectRelease();
        id v66 = objc_msgSend(v64, sel_initForClinicalAccountIdentifier_, v65);

        id v67 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A738]), sel_initWithHealthStore_recipientIdentifier_, v63, v66);
        sub_2408371B8((uint64_t)v80);
        objc_msgSend(v67, sel_addObserver_, v47);
        id v68 = *(void **)(v47 + OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_authStore);
        *(void *)(v47 + OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_authStore) = v67;
        id v69 = v67;

        sub_240849C34(v30, v45);
        return sub_2408C1470(v57);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }
  sub_240954088();
  id v39 = sub_2409540B8();
  os_log_type_t v40 = sub_240954C18();
  if (os_log_type_enabled(v39, v40))
  {
    id v41 = (uint8_t *)swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    v80[0] = v42;
    *(_DWORD *)id v41 = 136315138;
    uint64_t v43 = sub_2409557A8();
    uint64_t v79 = sub_2408370E4(v43, v44, v80);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v39, v40, "%s context nil", v41, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v42, -1, -1);
    MEMORY[0x2456021C0](v41, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v9, v77);
}

uint64_t sub_240907E14()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_2409540C8();
  uint64_t v59 = *(void *)(v2 - 8);
  uint64_t v60 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v70 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_240952B98();
  uint64_t v67 = *(void *)(v4 - 8);
  uint64_t v68 = v4;
  MEMORY[0x270FA5388](v4);
  id v66 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24090BDA4(0, &qword_26AFCC6A8, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  id v62 = (char *)&v55 - v8;
  uint64_t v64 = sub_240951A98();
  uint64_t v61 = *(void *)(v64 - 8);
  uint64_t v9 = *(void *)(v61 + 64);
  uint64_t v10 = MEMORY[0x270FA5388](v64);
  uint64_t v11 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v55 - v13;
  MEMORY[0x270FA5388](v12);
  id v69 = (char *)&v55 - v15;
  uint64_t v65 = sub_240952558();
  uint64_t v63 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24090BDA4(0, &qword_268C916F0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingFeedItemData, v6);
  MEMORY[0x270FA5388](v18 - 8);
  id v20 = (char *)&v55 - v19;
  uint64_t v21 = type metadata accessor for ClinicalSharingFeedItemData();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  id v24 = (char *)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = v1 + OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_clinicalSharingFeedItemData;
  swift_beginAccess();
  sub_24090BCAC(v25, (uint64_t)v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    sub_24090BFC8((uint64_t)v20, (uint64_t)&qword_268C916F0, (uint64_t)type metadata accessor for ClinicalSharingFeedItemData, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_24090BDA4);
    sub_240954088();
    id v26 = sub_2409540B8();
    os_log_type_t v27 = sub_240954C18();
    BOOL v28 = os_log_type_enabled(v26, v27);
    uint64_t v30 = v59;
    uint64_t v29 = v60;
    if (v28)
    {
      unint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v72 = v32;
      *(_DWORD *)unint64_t v31 = 136315138;
      uint64_t v33 = sub_2409557A8();
      uint64_t v71 = sub_2408370E4(v33, v34, &v72);
      sub_2409550B8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240818000, v26, v27, "%s Feed item data nil", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v32, -1, -1);
      MEMORY[0x2456021C0](v31, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v70, v29);
  }
  else
  {
    sub_24090BD40((uint64_t)v20, (uint64_t)v24);
    uint64_t v36 = *(void *)(v1 + OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_accountIconProvider);
    uint64_t v70 = &v24[*(int *)(v21 + 20)];
    uint64_t v59 = v36;
    uint64_t v60 = v1 + OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_preferredIconSize;
    swift_bridgeObjectRetain();
    uint64_t v57 = v17;
    sub_240952BE8();
    swift_bridgeObjectRelease();
    id v37 = sub_2409062F8();
    unint64_t v38 = (void *)sub_240952548();
    objc_msgSend(v37, sel_setImage_, v38);

    uint64_t v39 = v61;
    os_log_type_t v40 = *(void (**)(void))(v61 + 16);
    id v41 = v69;
    uint64_t v42 = v24;
    unint64_t v56 = v24;
    uint64_t v43 = v64;
    v40();
    ((void (*)(char *, char *, uint64_t))v40)(v14, v42, v43);
    uint64_t v44 = swift_allocObject();
    swift_unknownObjectWeakInit();
    ((void (*)(char *, char *, uint64_t))v40)(v11, v41, v43);
    unint64_t v45 = (*(unsigned __int8 *)(v39 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = v44;
    (*(void (**)(unint64_t, char *, uint64_t))(v39 + 32))(v46 + v45, v11, v43);
    swift_retain();
    sub_240952BD8();
    swift_release();
    uint64_t v47 = *(void (**)(char *, uint64_t))(v39 + 8);
    v47(v14, v43);
    swift_release();
    id v48 = sub_240906380();
    swift_bridgeObjectRetain();
    uint64_t v49 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
    objc_msgSend(v48, sel_setText_, v49);

    id v50 = sub_240906490();
    uint64_t v51 = sub_240951AB8();
    uint64_t v52 = (uint64_t)v62;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v62, 1, 1, v51);
    id v53 = v66;
    sub_240952B68();
    sub_2409535A8();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v53, v68);
    sub_24090BFC8(v52, (uint64_t)&qword_26AFCC6A8, MEMORY[0x263F07690], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_24090BDA4);
    uint64_t v54 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
    objc_msgSend(v50, sel_setText_, v54);

    sub_240909230();
    sub_24090955C();
    v47(v69, v43);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v57, v65);
    return sub_2408C1470((uint64_t)v56);
  }
}

void sub_240908738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v77 = a3;
  uint64_t v75 = a1;
  uint64_t v4 = sub_2409540C8();
  uint64_t v71 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v72 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240954BA8();
  uint64_t v69 = *(void *)(v6 - 8);
  uint64_t v70 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v68 = (uint64_t *)((char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v66 = sub_240952508();
  uint64_t v65 = *(void *)(v66 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v66);
  uint64_t v64 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v63 = (char *)&v61 - v10;
  sub_2408CCBC4();
  uint64_t v74 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (uint64_t *)((char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v67 = sub_240952558();
  uint64_t v73 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v76 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ClinicalSharingFeedItemData();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24090BDA4(0, &qword_268C916F0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingFeedItemData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v61 - v21;
  sub_24090BDA4(0, &qword_26AFCE2A0, MEMORY[0x263F07508], v19);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v25 = (char *)&v61 - v24;
  uint64_t v26 = sub_240951A98();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v78 = (char *)&v61 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v29 = MEMORY[0x245602290](a2 + 16);
  if (v29)
  {
    uint64_t v30 = (void *)v29;
    uint64_t v62 = v4;
    uint64_t v31 = v29 + OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_clinicalSharingFeedItemData;
    swift_beginAccess();
    sub_24090BCAC(v31, (uint64_t)v22);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v22, 1, v15))
    {
      sub_24090BFC8((uint64_t)v22, (uint64_t)&qword_268C916F0, (uint64_t)type metadata accessor for ClinicalSharingFeedItemData, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_24090BDA4);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v25, 1, 1, v26);
LABEL_5:

      sub_24090BFC8((uint64_t)v25, (uint64_t)&qword_26AFCE2A0, MEMORY[0x263F07508], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_24090BDA4);
      return;
    }
    sub_24090C1B0((uint64_t)v22, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ClinicalSharingFeedItemData);
    sub_24090BFC8((uint64_t)v22, (uint64_t)&qword_268C916F0, (uint64_t)type metadata accessor for ClinicalSharingFeedItemData, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_24090BDA4);
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v25, v18, v26);
    sub_2408C1470((uint64_t)v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v25, 0, 1, v26);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1) {
      goto LABEL_5;
    }
    uint64_t v32 = v78;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v78, v25, v26);
    if (sub_240951A68())
    {
      sub_24090C1B0(v75, (uint64_t)v13, (uint64_t (*)(void))sub_2408CCBC4);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v79 = *v13;
        uint64_t v33 = (void *)v79;
        sub_2408484BC(0, qword_26AFD07C0);
        swift_willThrowTypedImpl();

        (*(void (**)(char *, uint64_t))(v27 + 8))(v32, v26);
        unint64_t v34 = v72;
        sub_240954088();
        id v35 = v33;
        id v36 = v33;
        id v37 = sub_2409540B8();
        os_log_type_t v38 = sub_240954C18();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = (uint8_t *)swift_slowAlloc();
          uint64_t v40 = swift_slowAlloc();
          uint64_t v80 = v40;
          *(_DWORD *)uint64_t v39 = 136315138;
          uint64_t v79 = (uint64_t)v33;
          id v41 = v33;
          sub_240955658();
          id v42 = (id)HKSensitiveLogItem();
          swift_unknownObjectRelease();
          sub_240955138();
          swift_unknownObjectRelease();
          uint64_t v43 = sub_240954808();
          uint64_t v79 = sub_2408370E4(v43, v44, &v80);
          sub_2409550B8();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_240818000, v37, v38, "Error retrieving logo for account: %s", v39, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2456021C0](v40, -1, -1);
          MEMORY[0x2456021C0](v39, -1, -1);

          (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v62);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v71 + 8))(v34, v62);
        }
      }
      else
      {
        uint64_t v45 = v67;
        (*(void (**)(char *, uint64_t *, uint64_t))(v73 + 32))(v76, v13, v67);
        id v46 = sub_2409062F8();
        uint64_t v47 = (void *)sub_240952548();
        objc_msgSend(v46, sel_setImage_, v47);

        id v48 = v63;
        sub_240952528();
        uint64_t v49 = v65;
        id v50 = v64;
        uint64_t v51 = v66;
        (*(void (**)(char *, void, uint64_t))(v65 + 104))(v64, *MEMORY[0x263F45E38], v66);
        LOBYTE(v46) = sub_2409524F8();
        uint64_t v52 = *(void (**)(char *, uint64_t))(v49 + 8);
        v52(v50, v51);
        id v53 = v48;
        uint64_t v54 = v45;
        uint64_t v55 = v73;
        v52(v53, v51);
        id v56 = sub_2409062F8();
        uint64_t v58 = v69;
        uint64_t v57 = v70;
        uint64_t v59 = v68;
        if (v46)
        {
          *uint64_t v68 = 0x4008000000000000;
          uint64_t v60 = (unsigned int *)MEMORY[0x263F461E0];
        }
        else
        {
          uint64_t v60 = (unsigned int *)MEMORY[0x263F461E8];
        }
        (*(void (**)(void *, void, uint64_t))(v58 + 104))(v59, *v60, v57);
        sub_240954B98();

        (*(void (**)(void *, uint64_t))(v58 + 8))(v59, v57);
        (*(void (**)(char *, uint64_t))(v55 + 8))(v76, v54);
        (*(void (**)(char *, uint64_t))(v27 + 8))(v78, v26);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v27 + 8))(v32, v26);
    }
  }
}

void sub_240909230()
{
  uint64_t v1 = v0;
  uint64_t v15 = sub_2409547C8();
  uint64_t v16 = v2;
  swift_bridgeObjectRetain();
  sub_2409548A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2409548A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2409548A8();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v0, sel_view);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = (void *)sub_240954788();
    objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5);

    uint64_t v6 = (uint64_t *)&v1[OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_baseIdentifier];
    swift_beginAccess();
    uint64_t *v6 = v15;
    v6[1] = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    id v7 = sub_2409062F8();
    swift_bridgeObjectRetain();
    sub_2409548A8();
    uint64_t v8 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setAccessibilityIdentifier_, v8);

    id v9 = sub_240906380();
    swift_bridgeObjectRetain();
    sub_2409548A8();
    uint64_t v10 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setAccessibilityIdentifier_, v10);

    id v11 = sub_240906490();
    swift_bridgeObjectRetain();
    sub_2409548A8();
    uint64_t v12 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_setAccessibilityIdentifier_, v12);

    id v13 = sub_2409065B8();
    swift_bridgeObjectRetain();
    sub_2409548A8();
    swift_bridgeObjectRelease();
    uint64_t v14 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setAccessibilityIdentifier_, v14);
  }
  else
  {
    __break(1u);
  }
}

id sub_24090955C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_240952B98();
  uint64_t v44 = *(void *)(v2 - 8);
  uint64_t v45 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24090BDA4(0, &qword_26AFCC6A8, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v42 - v7;
  uint64_t v9 = sub_240951A98();
  uint64_t v46 = *(void *)(v9 - 8);
  uint64_t v47 = v9;
  uint64_t v10 = *(void *)(v46 + 64);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v42 - v13;
  sub_24090BDA4(0, &qword_268C916F0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingFeedItemData, v5);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v42 - v16;
  uint64_t v18 = type metadata accessor for ClinicalSharingFeedItemData();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(v1, sel_isViewLoaded);
  if (result
    && *(void *)&v1[OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_authStore])
  {
    id v42 = *(id *)&v1[OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_authStore];
    uint64_t v43 = v21;
    uint64_t v23 = (uint64_t)&v1[OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_clinicalSharingFeedItemData];
    swift_beginAccess();
    sub_24090BCAC(v23, (uint64_t)v17);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
    {
      return (id)sub_24090BFC8((uint64_t)v17, (uint64_t)&qword_268C916F0, (uint64_t)type metadata accessor for ClinicalSharingFeedItemData, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_24090BDA4);
    }
    else
    {
      uint64_t v24 = (uint64_t)v43;
      sub_24090BD40((uint64_t)v17, (uint64_t)v43);
      if (*(void *)(v24 + *(int *)(v18 + 24)) == 4)
      {
        id v25 = v42;
        id v26 = sub_240906490();
        uint64_t v27 = sub_240951AB8();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v8, 1, 1, v27);
        sub_240952B68();
        uint64_t v28 = v24;
        uint64_t v29 = sub_2409535A8();
        uint64_t v31 = v30;
        (*(void (**)(char *, uint64_t))(v44 + 8))(v4, v45);
        sub_24090BFC8((uint64_t)v8, (uint64_t)&qword_26AFCC6A8, MEMORY[0x263F07690], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_24090BDA4);
        uint64_t v32 = (void *)MEMORY[0x245600B30](v29, v31);
        swift_bridgeObjectRelease();
        objc_msgSend(v26, sel_setAttributedText_, v32);

        uint64_t v33 = v28;
      }
      else
      {
        uint64_t v34 = v46;
        uint64_t v35 = v47;
        id v36 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 16);
        v36(v14, v24, v47);
        uint64_t v37 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v36(v12, (uint64_t)v14, v35);
        unint64_t v38 = (*(unsigned __int8 *)(v34 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
        uint64_t v39 = swift_allocObject();
        *(void *)(v39 + 16) = v37;
        (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v39 + v38, v12, v35);
        *(void *)(v39 + ((v10 + v38 + 7) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
        aBlock[4] = sub_24090BF18;
        aBlock[5] = v39;
        aBlock[0] = MEMORY[0x263EF8330];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_2408FA970;
        aBlock[3] = &unk_26F4F2768;
        uint64_t v40 = _Block_copy(aBlock);
        id v41 = v42;
        swift_release();
        objc_msgSend(v41, sel_fetchSharingAuthorizationsWithCompletion_, v40);

        _Block_release(v40);
        (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v35);
        uint64_t v33 = (uint64_t)v43;
      }
      return (id)sub_2408C1470(v33);
    }
  }
  return result;
}

void sub_240909BB8(uint64_t a1, void *a2, uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v56 = a5;
  uint64_t v67 = a4;
  uint64_t v57 = a1;
  uint64_t v7 = sub_2409545F8();
  uint64_t v62 = *(void *)(v7 - 8);
  uint64_t v63 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v60 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_240954618();
  uint64_t v59 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v58 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2409540C8();
  uint64_t v64 = *(void *)(v10 - 8);
  uint64_t v65 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v66 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ClinicalSharingFeedItemData();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24090BDA4(0, &qword_268C916F0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingFeedItemData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v54 - v18;
  sub_24090BDA4(0, &qword_26AFCE2A0, MEMORY[0x263F07508], v16);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v54 - v21;
  uint64_t v23 = sub_240951A98();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  id v26 = (char *)&v54 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v27 = MEMORY[0x245602290](a3 + 16);
  if (v27)
  {
    uint64_t v28 = (void *)v27;
    id v55 = a2;
    uint64_t v29 = v27 + OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_clinicalSharingFeedItemData;
    swift_beginAccess();
    sub_24090BCAC(v29, (uint64_t)v19);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v19, 1, v12))
    {
      sub_24090BFC8((uint64_t)v19, (uint64_t)&qword_268C916F0, (uint64_t)type metadata accessor for ClinicalSharingFeedItemData, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_24090BDA4);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v22, 1, 1, v23);
    }
    else
    {
      sub_24090C1B0((uint64_t)v19, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ClinicalSharingFeedItemData);
      sub_24090BFC8((uint64_t)v19, (uint64_t)&qword_268C916F0, (uint64_t)type metadata accessor for ClinicalSharingFeedItemData, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_24090BDA4);
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v22, v15, v23);
      sub_2408C1470((uint64_t)v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v22, 0, 1, v23);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) != 1)
      {
        uint64_t v30 = v26;
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v26, v22, v23);
        if ((sub_240951A68() & 1) == 0)
        {
          (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);

          return;
        }
        id v31 = v55;
        if (v55)
        {
          id v32 = v55;
          uint64_t v33 = v66;
          sub_240954078();
          id v34 = v31;
          id v35 = v31;
          id v36 = sub_2409540B8();
          os_log_type_t v37 = sub_240954C18();
          if (!os_log_type_enabled(v36, v37))
          {

            (*(void (**)(char *, uint64_t))(v64 + 8))(v33, v65);
            (*(void (**)(char *, uint64_t))(v24 + 8))(v30, v23);
            return;
          }
          uint64_t v38 = swift_slowAlloc();
          uint64_t v39 = swift_slowAlloc();
          aBlock[0] = v39;
          *(_DWORD *)uint64_t v38 = 136315394;
          uint64_t v67 = v30;
          uint64_t v40 = sub_2409557A8();
          uint64_t v68 = sub_2408370E4(v40, v41, aBlock);
          sub_2409550B8();
          swift_bridgeObjectRelease();
          *(_WORD *)(v38 + 12) = 2080;
          uint64_t v68 = (uint64_t)v31;
          id v42 = v31;
          sub_2408484BC(0, qword_26AFD07C0);
          uint64_t v43 = sub_2409547E8();
          uint64_t v68 = sub_2408370E4(v43, v44, aBlock);
          sub_2409550B8();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_240818000, v36, v37, "[%s] Failed to fetch autorization identifiers: %s", (uint8_t *)v38, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2456021C0](v39, -1, -1);
          MEMORY[0x2456021C0](v38, -1, -1);

          (*(void (**)(char *, uint64_t))(v64 + 8))(v66, v65);
        }
        else
        {
          uint64_t v67 = v30;
          uint64_t v45 = MEMORY[0x263F8EE78];
          if (v57) {
            uint64_t v46 = v57;
          }
          else {
            uint64_t v46 = MEMORY[0x263F8EE78];
          }
          sub_24083EDCC(0, (unint64_t *)&qword_26AFD07B0);
          swift_bridgeObjectRetain();
          uint64_t v47 = (void *)sub_240954D78();
          uint64_t v48 = swift_allocObject();
          *(void *)(v48 + 16) = v28;
          *(void *)(v48 + 24) = v46;
          aBlock[4] = (uint64_t)sub_24090C068;
          aBlock[5] = v48;
          aBlock[0] = MEMORY[0x263EF8330];
          aBlock[1] = 1107296256;
          aBlock[2] = (uint64_t)sub_24084C358;
          aBlock[3] = (uint64_t)&unk_26F4F27B8;
          uint64_t v49 = _Block_copy(aBlock);
          id v50 = v28;
          swift_release();
          uint64_t v51 = v58;
          sub_240954608();
          aBlock[0] = v45;
          sub_24090C3A0(&qword_26AFD04E0, MEMORY[0x263F8F030]);
          sub_24090BDA4(0, (unint64_t *)&qword_26AFD0530, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
          sub_24089DC9C();
          uint64_t v52 = v60;
          uint64_t v53 = v63;
          sub_240955148();
          MEMORY[0x245601070](0, v51, v52, v49);
          _Block_release(v49);

          (*(void (**)(char *, uint64_t))(v62 + 8))(v52, v53);
          (*(void (**)(char *, uint64_t))(v59 + 8))(v51, v61);
        }
        (*(void (**)(char *, uint64_t))(v24 + 8))(v67, v23);
        return;
      }
    }

    sub_24090BFC8((uint64_t)v22, (uint64_t)&qword_26AFCE2A0, MEMORY[0x263F07508], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_24090BDA4);
  }
}

void sub_24090A5D4(uint64_t a1, unint64_t a2)
{
  id v3 = sub_240906490();
  if (qword_268C905E8 != -1) {
    swift_once();
  }
  sub_24090B2CC(0, (unint64_t *)&qword_26AFD0610, (unint64_t *)&qword_26AFD0630, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_240956800;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_2409553D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v6 = MEMORY[0x263F8D750];
  *(void *)(v4 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v4 + 64) = v6;
  *(void *)(v4 + 32) = v5;
  sub_240954798();
  swift_bridgeObjectRelease();
  id v7 = (id)sub_240954788();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setText_, v7);
}

id sub_24090A75C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  id v7 = &v3[OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController____lazy_storage___factory];
  *(_OWORD *)id v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((void *)v7 + 4) = 0;
  uint64_t v8 = &v3[OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_baseIdentifier];
  *(void *)uint64_t v8 = 0;
  *((void *)v8 + 1) = 0;
  v3[OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_shouldUpdateViewAtViewDidLoad] = 0;
  uint64_t v9 = &v3[OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_context];
  *((void *)v9 + 4) = 0;
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  uint64_t v10 = &v3[OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_preferredIconSize];
  *(_OWORD *)uint64_t v10 = xmmword_24095AD80;
  *((void *)v10 + 2) = 0x4008000000000000;
  uint64_t v11 = *MEMORY[0x263F45E48];
  uint64_t v12 = sub_240952518();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  uint64_t v13 = OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_accountIconProvider;
  sub_240952C18();
  uint64_t v14 = v4;
  *(void *)&v4[v13] = sub_240952C08();
  uint64_t v15 = &v14[OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_clinicalSharingFeedItemData];
  uint64_t v16 = type metadata accessor for ClinicalSharingFeedItemData();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *(void *)&v14[OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_authStore] = 0;
  *(void *)&v14[OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController____lazy_storage___iconView] = 0;
  *(void *)&v14[OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController____lazy_storage___titleView] = 0;
  *(void *)&v14[OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController____lazy_storage___subtitleView] = 0;
  *(void *)&v14[OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController____lazy_storage___disclosureIndicator] = 0;

  if (a2)
  {
    uint64_t v17 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = 0;
  }
  v20.receiver = v14;
  v20.super_class = (Class)type metadata accessor for ClinicalSharingFeedItemViewController();
  id v18 = objc_msgSendSuper2(&v20, sel_initWithNibName_bundle_, v17, a3);

  return v18;
}

id sub_24090A9C0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = &v1[OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController____lazy_storage___factory];
  *(_OWORD *)uint64_t v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((void *)v4 + 4) = 0;
  uint64_t v5 = &v1[OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_baseIdentifier];
  *(void *)uint64_t v5 = 0;
  *((void *)v5 + 1) = 0;
  v1[OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_shouldUpdateViewAtViewDidLoad] = 0;
  uint64_t v6 = &v1[OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_context];
  *((void *)v6 + 4) = 0;
  *(_OWORD *)uint64_t v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  id v7 = &v1[OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_preferredIconSize];
  *(_OWORD *)id v7 = xmmword_24095AD80;
  *((void *)v7 + 2) = 0x4008000000000000;
  uint64_t v8 = *MEMORY[0x263F45E48];
  uint64_t v9 = sub_240952518();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_accountIconProvider;
  sub_240952C18();
  uint64_t v11 = v2;
  *(void *)&v2[v10] = sub_240952C08();
  uint64_t v12 = &v11[OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_clinicalSharingFeedItemData];
  uint64_t v13 = type metadata accessor for ClinicalSharingFeedItemData();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  *(void *)&v11[OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_authStore] = 0;
  *(void *)&v11[OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController____lazy_storage___iconView] = 0;
  *(void *)&v11[OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController____lazy_storage___titleView] = 0;
  *(void *)&v11[OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController____lazy_storage___subtitleView] = 0;
  *(void *)&v11[OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController____lazy_storage___disclosureIndicator] = 0;

  v16.receiver = v11;
  v16.super_class = (Class)type metadata accessor for ClinicalSharingFeedItemViewController();
  id v14 = objc_msgSendSuper2(&v16, sel_initWithCoder_, a1);

  return v14;
}

id sub_24090ABB0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClinicalSharingFeedItemViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24090AD70()
{
  return type metadata accessor for ClinicalSharingFeedItemViewController();
}

uint64_t type metadata accessor for ClinicalSharingFeedItemViewController()
{
  uint64_t result = qword_268C919D8;
  if (!qword_268C919D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_24090ADC4()
{
  sub_240952518();
  if (v0 <= 0x3F)
  {
    sub_24090BDA4(319, &qword_268C916F0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingFeedItemData, MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_24090AEF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_context;
  swift_beginAccess();
  return sub_24090C2AC(v3, a1, (unint64_t *)&qword_26AFCF770, (unint64_t *)&qword_26AFCF760, MEMORY[0x263F444A0]);
}

uint64_t sub_24090AF64(uint64_t a1)
{
  uint64_t v3 = (uint64_t)&v1[OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_context];
  swift_beginAccess();
  sub_24085A89C(a1, v3);
  swift_endAccess();
  sub_2409071D0();
  if (objc_msgSend(v1, sel_isViewLoaded)) {
    sub_240907E14();
  }
  else {
    v1[OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_shouldUpdateViewAtViewDidLoad] = 1;
  }
  return sub_24090C330(a1, (unint64_t *)&qword_26AFCF770, (unint64_t *)&qword_26AFCF760, MEMORY[0x263F444A0]);
}

uint64_t (*sub_24090B018(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_24090B078;
}

uint64_t sub_24090B078(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v5 = *(void **)(a1 + 24);
    sub_2409071D0();
    uint64_t result = (uint64_t)objc_msgSend(v5, sel_isViewLoaded);
    if (result) {
      return sub_240907E14();
    }
    else {
      *(unsigned char *)(*(void *)(a1 + 24)
    }
               + OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_shouldUpdateViewAtViewDidLoad) = 1;
  }
  return result;
}

uint64_t sub_24090B0DC(void *a1)
{
  return sub_24090B8AC(a1);
}

uint64_t sub_24090B100()
{
  uint64_t v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_baseIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_24090B15C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(*v2 + OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_baseIdentifier);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_24090B1C0())()
{
  return j__swift_endAccess;
}

uint64_t sub_24090B284()
{
  return sub_24090C3A0((unint64_t *)&unk_268C91A50, (void (*)(uint64_t))type metadata accessor for ClinicalSharingFeedItemViewController);
}

void sub_24090B2CC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_2408484BC(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_24090B334(void *a1)
{
  v19[6] = a1;
  uint64_t v2 = (id *)sub_2409540C8();
  v19[1] = *(v2 - 1);
  v19[2] = v2;
  MEMORY[0x270FA5388](v2);
  v19[3] = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_240952C68();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409061FC((uint64_t)v22);
  v19[4] = (id)v22[4];
  v19[5] = sub_2408304E8(v22, v22[3]);
  sub_240952808();
  uint64_t v8 = (void *)sub_2409527D8();
  v19[0] = v1;
  uint64_t v9 = (uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_context;
  swift_beginAccess();
  sub_24090C2AC(v9, (uint64_t)v20, (unint64_t *)&qword_26AFCF770, (unint64_t *)&qword_26AFCF760, MEMORY[0x263F444A0]);
  uint64_t v10 = v21;
  if (v21)
  {
    uint64_t v11 = sub_2408304E8(v20, v21);
    uint64_t v12 = *(void *)(v10 - 8);
    MEMORY[0x270FA5388](v11);
    id v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v12 + 16))(v14);
    uint64_t v15 = (void *)sub_240953B98();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v10);
    objc_super v16 = (void *)sub_2409527E8();

    sub_2408371B8((uint64_t)v20);
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F460B0], v4);
    uint64_t v17 = (void *)sub_240953068();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

    sub_2408371B8((uint64_t)v22);
    id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v17);
    objc_msgSend(v19[0], sel_presentViewController_animated_completion_, v18, 1, 0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24090B8AC(void *a1)
{
  swift_getObjectType();
  uint64_t v3 = sub_2409540C8();
  uint64_t v25 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24090BDA4(0, &qword_268C916F0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingFeedItemData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v24 - v7;
  uint64_t v9 = type metadata accessor for ClinicalSharingFeedItemData();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v1 + OBJC_IVAR____TtC13HealthRecords37ClinicalSharingFeedItemViewController_clinicalSharingFeedItemData;
  swift_beginAccess();
  sub_24090BCAC(v13, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    uint64_t v24 = v3;
    sub_24090BFC8((uint64_t)v8, (uint64_t)&qword_268C916F0, (uint64_t)type metadata accessor for ClinicalSharingFeedItemData, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_24090BDA4);
    sub_240954088();
    id v14 = sub_2409540B8();
    os_log_type_t v15 = sub_240954C18();
    BOOL v16 = os_log_type_enabled(v14, v15);
    uint64_t v17 = v25;
    if (v16)
    {
      id v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      v26[0] = v19;
      *(_DWORD *)id v18 = 136315138;
      uint64_t v20 = sub_2409557A8();
      v26[4] = sub_2408370E4(v20, v21, v26);
      sub_2409550B8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240818000, v14, v15, "%s Feed item data nil", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v19, -1, -1);
      MEMORY[0x2456021C0](v18, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v5, v24);
  }
  else
  {
    sub_24090BD40((uint64_t)v8, (uint64_t)v12);
    void v26[3] = sub_24083EDCC(0, (unint64_t *)&qword_268C90A88);
    v26[0] = (uint64_t)a1;
    id v23 = a1;
    sub_24090B334(v12);
    sub_2408C1470((uint64_t)v12);
    return sub_24090BFC8((uint64_t)v26, (uint64_t)&qword_268C91A60, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_2408B2F90);
  }
}

uint64_t sub_24090BCAC(uint64_t a1, uint64_t a2)
{
  sub_24090BDA4(0, &qword_268C916F0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingFeedItemData, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24090BD40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClinicalSharingFeedItemData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_24090BDA4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_24090BE08()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24090BE40()
{
  uint64_t v1 = sub_240951A98();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

void sub_24090BF18(uint64_t a1, void *a2)
{
  uint64_t v5 = *(void *)(sub_240951A98() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_240909BB8(a1, a2, v7, (char *)(v2 + v6), v8);
}

uint64_t sub_24090BFC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_24090C028()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_24090C068()
{
  sub_24090A5D4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24090C070()
{
  uint64_t v1 = sub_240951A98();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

void sub_24090C13C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_240951A98() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_240908738(a1, v4, v5);
}

uint64_t sub_24090C1B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24090C218(uint64_t a1, uint64_t a2)
{
  sub_24090BDA4(0, &qword_268C916F0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingFeedItemData, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24090C2AC(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  sub_24090B2CC(0, a3, a4, a5, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_24090C330(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  sub_24090B2CC(0, a2, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_24090C3A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24090C3F4@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v35 = sub_2409540C8();
  uint64_t v12 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  id v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954058();
  sub_24083B4E8(a1, (uint64_t)v11);
  os_log_type_t v15 = sub_2409540B8();
  os_log_type_t v16 = sub_240954C08();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v33 = a1;
    uint64_t v18 = v17;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v37 = v32;
    *(_DWORD *)uint64_t v18 = 136446722;
    uint64_t v36 = a2;
    swift_getMetatypeMetadata();
    id v34 = a3;
    uint64_t v19 = sub_2409547E8();
    uint64_t v36 = sub_2408370E4(v19, v20, &v37);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    uint64_t v36 = type metadata accessor for ConceptSharableModelGenerator();
    sub_24090CC20();
    uint64_t v21 = sub_2409547E8();
    uint64_t v36 = sub_2408370E4(v21, v22, &v37);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 22) = 2082;
    uint64_t v36 = sub_240951F68();
    sub_240955658();
    id v23 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v24 = sub_2409547E8();
    uint64_t v36 = sub_2408370E4(v24, v25, &v37);
    sub_2409550B8();
    a3 = v34;
    swift_bridgeObjectRelease();
    sub_24083B3B4((uint64_t)v11);
    _os_log_impl(&dword_240818000, v15, v16, "[%{public}s]: Emitting %{public}s, for profile: %{public}s", (uint8_t *)v18, 0x20u);
    uint64_t v26 = v32;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v26, -1, -1);
    uint64_t v27 = v18;
    a1 = v33;
    MEMORY[0x2456021C0](v27, -1, -1);
  }
  else
  {
    sub_24083B3B4((uint64_t)v11);
  }

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v35);
  sub_24083B4E8(a1, (uint64_t)v9);
  uint64_t v28 = type metadata accessor for ConceptSharableModelGenerator();
  swift_allocObject();
  uint64_t v29 = sub_24081DE40((uint64_t)v9);
  a3[3] = v28;
  uint64_t result = sub_240832098(&qword_26AFCD378, (void (*)(uint64_t))type metadata accessor for ConceptSharableModelGenerator);
  a3[4] = result;
  *a3 = v29;
  return result;
}

uint64_t sub_24090C7D8()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HealthRecords28ConceptSharableModelPipeline_domain;
  uint64_t v2 = sub_240951F18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_24083B3B4(v0 + OBJC_IVAR____TtC13HealthRecords28ConceptSharableModelPipeline_context);

  return swift_deallocClassInstance();
}

uint64_t sub_24090C890()
{
  return type metadata accessor for ConceptSharableModelPipeline();
}

void sub_24090C898()
{
  if (!qword_26AFD0598)
  {
    sub_24083EDCC(255, (unint64_t *)&qword_26AFD0590);
    unint64_t v0 = sub_240955098();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD0598);
    }
  }
}

void sub_24090C900()
{
  if (!qword_26AFCDBA0)
  {
    sub_240834828(255, &qword_26AFCDE70, (uint64_t (*)(uint64_t))sub_2408485B4, MEMORY[0x263F8D488]);
    sub_24090C9B0();
    unint64_t v0 = sub_2409542A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDBA0);
    }
  }
}

unint64_t sub_24090C9B0()
{
  unint64_t result = qword_26AFCDE78;
  if (!qword_26AFCDE78)
  {
    sub_240834828(255, &qword_26AFCDE70, (uint64_t (*)(uint64_t))sub_2408485B4, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCDE78);
  }
  return result;
}

uint64_t sub_24090CA38()
{
  uint64_t v1 = (int *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_24090CB34@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24090C3F4(v1 + v4, v5, a1);
}

uint64_t sub_24090CBE8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

unint64_t sub_24090CC20()
{
  unint64_t result = qword_26AFCC668;
  if (!qword_26AFCC668)
  {
    type metadata accessor for ConceptSharableModelGenerator();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AFCC668);
  }
  return result;
}

uint64_t sub_24090CC5C@<X0>(char a1@<W0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v36 = a5;
  sub_24090DE58(0);
  uint64_t v38 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v37 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_240951EF8();
  uint64_t v9 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_240951F18();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v35 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_240951FB8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408E3158(0);
  uint64_t v33 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  id v23 = (char *)&v33 - v22;
  if (a1)
  {
    sub_24090D108(a2, (uint64_t)&v33 - v22);
  }
  else
  {
    uint64_t v24 = sub_240951E78();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a2, v14);
  sub_240951F68();
  sub_24082EDB4(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v25 = sub_240951C08();
  uint64_t v26 = *(void *)(v25 - 8);
  unint64_t v27 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_240956800;
  (*(void (**)(unint64_t, void, uint64_t))(v26 + 104))(v28 + v27, *MEMORY[0x263F45570], v25);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F45688], v34);
  sub_240951F08();
  sub_2408A5FB0((uint64_t)v23, (uint64_t)v21);
  swift_bridgeObjectRetain();
  sub_2409543A8();
  uint64_t v29 = sub_240951FD8();
  uint64_t v30 = MEMORY[0x263F456B8];
  uint64_t v31 = v36;
  void v36[3] = v29;
  v31[4] = v30;
  sub_240851B6C(v31);
  sub_2408211E4(&qword_26AFCF2F0, sub_24090DE58);
  sub_240951FC8();
  return sub_24083B234((uint64_t)v23, (uint64_t (*)(void))sub_2408E3158);
}

uint64_t sub_24090D108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a1;
  uint64_t v53 = a2;
  uint64_t v2 = sub_2409540C8();
  uint64_t v46 = *(void *)(v2 - 8);
  uint64_t v47 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v54 = &v36[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_240953618();
  uint64_t v44 = *(void *)(v4 - 8);
  uint64_t v45 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v43 = &v36[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v38 = sub_240951C08();
  uint64_t v37 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v39 = &v36[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v41 = sub_240953778();
  uint64_t v40 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v8 = &v36[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_2409538C8();
  uint64_t v51 = *(void *)(v9 - 8);
  uint64_t v52 = v9;
  MEMORY[0x270FA5388](v9);
  id v50 = &v36[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_240952B98();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = &v36[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_240878630(0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = sub_240951AB8();
  uint64_t v19 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v17, 1, 1, v18);
  sub_240952B88();
  uint64_t v20 = sub_2409535A8();
  unint64_t v48 = v21;
  uint64_t v49 = v20;
  uint64_t v22 = *(void (**)(unsigned char *, uint64_t))(v12 + 8);
  v22(v14, v11);
  sub_24083B234((uint64_t)v17, (uint64_t (*)(void))sub_240878630);
  v19(v17, 1, 1, v18);
  sub_240952B88();
  sub_2409535A8();
  v22(v14, v11);
  id v23 = v50;
  sub_24083B234((uint64_t)v17, (uint64_t (*)(void))sub_240878630);
  sub_240953758();
  sub_240953898();
  uint64_t v24 = sub_2409538B8();
  unint64_t v48 = v25;
  uint64_t v49 = v24;
  sub_2408A6118(v24, v25);
  sub_240820B20();
  type metadata accessor for ClinicalNotificationSettingsSwitchCellViewController();
  sub_240951CA8();
  (*(void (**)(unsigned char *, void, uint64_t))(v37 + 104))(v39, *MEMORY[0x263F45570], v38);
  sub_240951F68();
  uint64_t v26 = v53;
  unint64_t v28 = v48;
  uint64_t v27 = v49;
  sub_240951D88();
  sub_2409538A8();
  sub_240953768();
  (*(void (**)(unsigned char *, uint64_t))(v40 + 8))(v8, v41);
  sub_240951D78();
  sub_2408AD820();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240956800;
  *(void *)(inited + 32) = sub_2409520E8();
  *(void *)(inited + 40) = v30;
  sub_2408BB3AC(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_240951E48();
  uint64_t v31 = v43;
  uint64_t v32 = v44;
  uint64_t v33 = v45;
  (*(void (**)(unsigned char *, void, uint64_t))(v44 + 104))(v43, *MEMORY[0x263F43808], v45);
  sub_240953608();
  (*(void (**)(unsigned char *, uint64_t))(v32 + 8))(v31, v33);
  sub_240951E58();
  sub_240951D68();
  sub_240849C48(v27, v28);
  (*(void (**)(unsigned char *, uint64_t))(v51 + 8))(v23, v52);
  uint64_t v34 = sub_240951E78();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v26, 0, 1, v34);
}

uint64_t sub_24090DA6C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HealthRecords45ClinicalNotificationSettingsGeneratorPipeline_domain;
  uint64_t v2 = sub_240951F18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC13HealthRecords45ClinicalNotificationSettingsGeneratorPipeline_context;
  uint64_t v4 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_24090DB60()
{
  return type metadata accessor for ClinicalNotificationSettingsGeneratorPipeline();
}

uint64_t sub_24090DB68()
{
  uint64_t result = sub_240951F18();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_240951FB8();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_24090DC40()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24090DC78()
{
  uint64_t v1 = sub_240951FB8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_24090DD28@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_240951FB8() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v2 + v7);
  uint64_t v9 = *(void *)(v2 + v7 + 8);

  return sub_24090CC5C(a1, v2 + v6, v8, v9, a2);
}

uint64_t sub_24090DDEC()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24090DE24(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

void sub_24090DE58(uint64_t a1)
{
}

uint64_t sub_24090DE8C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for HealthRecordsGeneratorContext();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2409540C8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954058();
  uint64_t v13 = sub_2409540B8();
  os_log_type_t v14 = sub_240954C08();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v27 = a3;
    uint64_t v16 = v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v28 = v17;
    uint64_t v29 = a2;
    *(_DWORD *)uint64_t v16 = 136446466;
    uint64_t v26 = a1;
    swift_getMetatypeMetadata();
    uint64_t v18 = sub_2409547E8();
    uint64_t v29 = sub_2408370E4(v18, v19, &v28);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    uint64_t v29 = type metadata accessor for AddAccountGenerator();
    sub_24086FC78(0);
    uint64_t v20 = sub_2409547E8();
    uint64_t v29 = sub_2408370E4(v20, v21, &v28);
    a1 = v26;
    sub_2409550B8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v13, v14, "[%{public}s]: Emitting %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v17, -1, -1);
    uint64_t v22 = v16;
    a3 = v27;
    MEMORY[0x2456021C0](v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_24083B4E8(a1, (uint64_t)v8);
  uint64_t v23 = type metadata accessor for AddAccountGenerator();
  swift_allocObject();
  uint64_t v24 = sub_24086A52C((uint64_t)v8);
  a3[3] = v23;
  uint64_t result = sub_2408369FC(&qword_26AFCFC28, (void (*)(uint64_t))type metadata accessor for AddAccountGenerator);
  a3[4] = result;
  *a3 = v24;
  return result;
}

uint64_t sub_24090E190()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    objc_msgSend(*(id *)(result+ OBJC_IVAR____TtC13HealthRecords27AddAccountGeneratorPipeline_context+ *(int *)(type metadata accessor for HealthRecordsGeneratorContext() + 20)), sel_removeAccountStateChangeListener_, *(void *)(result + OBJC_IVAR____TtC13HealthRecords27AddAccountGeneratorPipeline_accountStateChangeListener));
    sub_240951F38();
    uint64_t v2 = v6;
    uint64_t v3 = v7;
    sub_2408304E8(v5, v6);
    id v4 = sub_24083CA3C(v2, v3);
    objc_msgSend(v4, sel_removeHealthRecordsSupportedChangeListener_, *(void *)(v1 + OBJC_IVAR____TtC13HealthRecords27AddAccountGeneratorPipeline_healthRecordsSupportedListener));

    swift_release();
    return sub_2408371B8((uint64_t)v5);
  }
  return result;
}

uint64_t sub_24090E278()
{
  uint64_t v1 = v0;
  if (*(void *)(v0 + OBJC_IVAR____TtC13HealthRecords27AddAccountGeneratorPipeline_observerToken))
  {
    swift_retain();
    sub_240952A48();
    swift_release();
  }
  swift_release();
  uint64_t v2 = v0 + OBJC_IVAR____TtC13HealthRecords27AddAccountGeneratorPipeline_domain;
  uint64_t v3 = sub_240951F18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  sub_24083AF34(v1 + OBJC_IVAR____TtC13HealthRecords27AddAccountGeneratorPipeline_context, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_24090E3A0()
{
  sub_24090E278();

  return swift_deallocClassInstance();
}

uint64_t sub_24090E3F8()
{
  return type metadata accessor for AddAccountGeneratorPipeline();
}

uint64_t sub_24090E400()
{
  uint64_t result = sub_240951F18();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for HealthRecordsGeneratorContext();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_24090E4FC()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24090E534()
{
  return sub_24090E190();
}

uint64_t sub_24090E53C()
{
  unint64_t v1 = (int *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_24090E638@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24090DE8C(v1 + v4, v5, a1);
}

uint64_t type metadata accessor for AddAccountFeedItemViewController()
{
  uint64_t result = qword_26AFD0798;
  if (!qword_26AFD0798) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24090E730()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24090E770()
{
  uint64_t v1 = sub_2409540C8();
  uint64_t v44 = *(void *)(v1 - 8);
  uint64_t v45 = v1;
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  uint64_t v43 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v39 = (char *)v36 - v4;
  uint64_t v5 = sub_240952F68();
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v42 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240953BD8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v37 = v7;
  uint64_t v38 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_240952DA8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  os_log_type_t v14 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24090EF90(0, &qword_268C91A90, MEMORY[0x263F460E8]);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)v36 - v16;
  sub_24090EF90(0, &qword_26AFCD990, MEMORY[0x263F46178]);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)v36 - v19;
  uint64_t v21 = sub_240953178();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)v36 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240953408();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11))
  {
    sub_24090EFE4((uint64_t)v17, &qword_268C91A90, MEMORY[0x263F460E8]);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, 1, 1, v21);
LABEL_4:
    sub_24090EFE4((uint64_t)v20, &qword_26AFCD990, MEMORY[0x263F46178]);
    uint64_t v26 = v43;
    sub_240954088();
    uint64_t v27 = sub_2409540B8();
    os_log_type_t v28 = sub_240954C18();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl(&dword_240818000, v27, v28, "didTapDismiss invoked for tile without a dismiss button!", v29, 2u);
      MEMORY[0x2456021C0](v29, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v26, v45);
  }
  v36[0] = v24;
  v36[1] = v0;
  unint64_t v25 = v42;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
  sub_24090EFE4((uint64_t)v17, &qword_268C91A90, MEMORY[0x263F460E8]);
  sub_240952D98();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1) {
    goto LABEL_4;
  }
  uint64_t v31 = v36[0];
  (*(void (**)(void, char *, uint64_t))(v22 + 32))(v36[0], v20, v21);
  sub_240953D38();
  sub_240953BC8();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v37);
  sub_2408304E8(v46, v46[3]);
  sub_240953B98();
  sub_240953248();
  swift_allocObject();
  sub_240953238();
  sub_2408371B8((uint64_t)v46);
  sub_240953138();
  sub_240953208();
  swift_release();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v25, v41);
  uint64_t v32 = v39;
  sub_240954088();
  uint64_t v33 = sub_2409540B8();
  os_log_type_t v34 = sub_240954C38();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v35 = 0;
    _os_log_impl(&dword_240818000, v33, v34, "User dismissed Onboarding tile", v35, 2u);
    MEMORY[0x2456021C0](v35, -1, -1);
  }

  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v45);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v31, v21);
}

uint64_t sub_24090EE44()
{
  return MEMORY[0x270F37B48](0);
}

uint64_t sub_24090EE4C(uint64_t a1)
{
  uint64_t v3 = sub_240953BD8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_allocWithZone(v1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t v8 = sub_2409533F8();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v8;
}

id sub_24090EF4C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AddAccountFeedItemViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24090EF84()
{
  return type metadata accessor for AddAccountFeedItemViewController();
}

void sub_24090EF90(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240955098();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_24090EFE4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_24090EF90(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_24090F040()
{
  uint64_t v0 = sub_24090F194();
  uint64_t v2 = v1;
  uint64_t v3 = sub_240952048();
  uint64_t v5 = v4;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_2408C296C(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v8 = v6[2];
    unint64_t v7 = v6[3];
    if (v8 >= v7 >> 1) {
      uint64_t v6 = sub_2408C296C((void *)(v7 > 1), v8 + 1, 1, v6);
    }
    void v6[2] = v8 + 1;
    uint64_t v9 = &v6[2 * v8];
    void v9[4] = v0;
    v9[5] = v2;
  }
  else
  {
    uint64_t v6 = (void *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = sub_2408C296C(0, v6[2] + 1, 1, v6);
  }
  unint64_t v11 = v6[2];
  unint64_t v10 = v6[3];
  if (v11 >= v10 >> 1) {
    uint64_t v6 = sub_2408C296C((void *)(v10 > 1), v11 + 1, 1, v6);
  }
  void v6[2] = v11 + 1;
  uint64_t v12 = &v6[2 * v11];
  v12[4] = v3;
  v12[5] = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_24093D478((uint64_t)v6);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_24090F194()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2409528B8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  uint64_t result = 0;
  if (v6 != *MEMORY[0x263F45FF8])
  {
    if (v6 == *MEMORY[0x263F45FD0]) {
      return sub_240952028();
    }
    if (v6 == *MEMORY[0x263F45FE8]) {
      return sub_240952008();
    }
    if (v6 == *MEMORY[0x263F45FF0]) {
      return sub_240952068();
    }
    if (v6 == *MEMORY[0x263F45FC0]) {
      return sub_240951FF8();
    }
    if (v6 == *MEMORY[0x263F45FC8]) {
      return sub_240952018();
    }
    if (v6 == *MEMORY[0x263F45FE0]) {
      return sub_240952058();
    }
    if (v6 == *MEMORY[0x263F46008]) {
      return sub_240952098();
    }
    if (v6 != *MEMORY[0x263F46000])
    {
      if (v6 == *MEMORY[0x263F46010]) {
        return sub_2409520A8();
      }
      if (v6 == *MEMORY[0x263F45FD8]) {
        return sub_240952038();
      }
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    return 0;
  }
  return result;
}

uint64_t sub_24090F3C4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for HealthRecordsGeneratorContext();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2409540C8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954058();
  uint64_t v13 = sub_2409540B8();
  os_log_type_t v14 = sub_240954C08();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v27 = a3;
    uint64_t v16 = v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v28 = v17;
    uint64_t v29 = a2;
    *(_DWORD *)uint64_t v16 = 136446466;
    uint64_t v26 = a1;
    swift_getMetatypeMetadata();
    uint64_t v18 = sub_2409547E8();
    uint64_t v29 = sub_2408370E4(v18, v19, &v28);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    uint64_t v29 = type metadata accessor for LabTipsGenerator();
    sub_2408BB2C4(0);
    uint64_t v20 = sub_2409547E8();
    uint64_t v29 = sub_2408370E4(v20, v21, &v28);
    a1 = v26;
    sub_2409550B8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v13, v14, "[%{public}s]: Emitting %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v17, -1, -1);
    uint64_t v22 = v16;
    a3 = v27;
    MEMORY[0x2456021C0](v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_24083B4E8(a1, (uint64_t)v8);
  uint64_t v23 = type metadata accessor for LabTipsGenerator();
  swift_allocObject();
  uint64_t v24 = sub_24081EFDC((uint64_t)v8);
  a3[3] = v23;
  uint64_t result = sub_2408310C4(&qword_26AFCCA00, (void (*)(uint64_t))type metadata accessor for LabTipsGenerator);
  a3[4] = result;
  *a3 = v24;
  return result;
}

uint64_t sub_24090F6C8()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HealthRecords24LabTipsGeneratorPipeline_domain;
  uint64_t v2 = sub_240951F18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_24083B3B4(v0 + OBJC_IVAR____TtC13HealthRecords24LabTipsGeneratorPipeline_context);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_24090F790()
{
  return type metadata accessor for LabTipsGeneratorPipeline();
}

uint64_t sub_24090F798()
{
  uint64_t v1 = (int *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_24090F894@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24090F3C4(v1 + v4, v5, a1);
}

uint64_t sub_24090F940(uint64_t a1)
{
  uint64_t v2 = sub_2409540F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2409540C8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954058();
  sub_2408690E0(a1, (uint64_t)v30);
  uint64_t v10 = sub_2409540B8();
  os_log_type_t v11 = sub_240954C38();
  int v12 = v11;
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v24 = v2;
    uint64_t v14 = v13;
    uint64_t v27 = swift_slowAlloc();
    uint64_t v29 = v27;
    *(_DWORD *)uint64_t v14 = 136446466;
    int v25 = v12;
    uint64_t v28 = type metadata accessor for OnboardingGeneratorPipeline();
    sub_2409107E0(0, &qword_26AFCD2A0, (void (*)(uint64_t))type metadata accessor for OnboardingGeneratorPipeline);
    uint64_t v15 = sub_2409547E8();
    uint64_t v26 = v6;
    uint64_t v28 = sub_2408370E4(v15, v16, &v29);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2082;
    uint64_t v23 = v14 + 14;
    sub_2408304E8(v30, v30[3]);
    sub_2409540E8();
    sub_240830574(&qword_26AFCD998, MEMORY[0x263EFD9F0]);
    uint64_t v17 = v24;
    uint64_t v18 = sub_2409555D8();
    unint64_t v20 = v19;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v17);
    uint64_t v28 = sub_2408370E4(v18, v20, &v29);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    sub_2408371B8((uint64_t)v30);
    _os_log_impl(&dword_240818000, v10, (os_log_type_t)v25, "[%{public}s] receivedSubscription %{public}s", (uint8_t *)v14, 0x16u);
    uint64_t v21 = v27;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v21, -1, -1);
    MEMORY[0x2456021C0](v14, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v26);
  }
  else
  {
    sub_2408371B8((uint64_t)v30);

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_24090FCCC(uint64_t a1)
{
  sub_240910770();
  uint64_t v3 = v2;
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v49 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  unint64_t v48 = (char *)v39 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v39 - v9;
  MEMORY[0x270FA5388](v8);
  int v12 = (char *)v39 - v11;
  uint64_t v13 = sub_2409540C8();
  uint64_t v52 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954058();
  uint64_t v50 = v3;
  uint64_t v16 = *(int *)(v3 + 48);
  uint64_t v17 = &v12[v16];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = sub_240953FF8();
  uint64_t v47 = *(void *)(v19 - 8);
  uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
  v45(v12, a1, v19);
  uint64_t v20 = sub_240951858();
  uint64_t v46 = *(void *)(v20 - 8);
  uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 16);
  v44(v17, v18, v20);
  uint64_t v53 = v10;
  sub_240824598((uint64_t)v12, (uint64_t)v10, (uint64_t (*)(void))sub_240910770);
  uint64_t v51 = v15;
  uint64_t v21 = sub_2409540B8();
  os_log_type_t v22 = sub_240954BF8();
  int v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    uint64_t v55 = v42;
    *(_DWORD *)uint64_t v24 = 136446466;
    uint64_t v43 = v13;
    uint64_t v54 = type metadata accessor for OnboardingGeneratorPipeline();
    sub_2409107E0(0, &qword_26AFCD2A0, (void (*)(uint64_t))type metadata accessor for OnboardingGeneratorPipeline);
    uint64_t v25 = sub_2409547E8();
    int v41 = v23;
    uint64_t v54 = sub_2408370E4(v25, v26, &v55);
    v39[1] = &v55;
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2082;
    v39[0] = v24 + 14;
    os_log_t v40 = v21;
    uint64_t v27 = v50;
    uint64_t v28 = *(int *)(v50 + 48);
    uint64_t v29 = v48;
    uint64_t v30 = &v48[v28];
    uint64_t v31 = (uint64_t)v53;
    uint64_t v32 = &v53[v28];
    v45(v48, (uint64_t)v53, v19);
    v44(v30, (uint64_t)v32, v20);
    uint64_t v33 = &v49[*(int *)(v27 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v49, v29, v19);
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v33, v30, v20);
    uint64_t v34 = sub_2409547E8();
    uint64_t v54 = sub_2408370E4(v34, v35, &v55);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    sub_24083B294(v31, (uint64_t (*)(void))sub_240910770);
    os_log_t v36 = v40;
    _os_log_impl(&dword_240818000, v40, (os_log_type_t)v41, "[%{public}s] receiveOutput: %{public}s", (uint8_t *)v24, 0x16u);
    uint64_t v37 = v42;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v37, -1, -1);
    MEMORY[0x2456021C0](v24, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v51, v43);
  }
  else
  {
    sub_24083B294((uint64_t)v53, (uint64_t (*)(void))sub_240910770);

    return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v51, v13);
  }
}

uint64_t sub_2409101B4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for HealthRecordsGeneratorContext();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2409540C8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  int v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954058();
  uint64_t v13 = sub_2409540B8();
  os_log_type_t v14 = sub_240954C08();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v25 = v9;
    uint64_t v16 = v15;
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136446466;
    uint64_t v26 = a1;
    uint64_t v27 = v17;
    uint64_t v28 = a2;
    swift_getMetatypeMetadata();
    uint64_t v18 = sub_2409547E8();
    uint64_t v28 = sub_2408370E4(v18, v19, &v27);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    uint64_t v28 = type metadata accessor for OnboardingTileGenerator();
    sub_2409107E0(0, &qword_268C91A98, (void (*)(uint64_t))type metadata accessor for OnboardingTileGenerator);
    uint64_t v20 = sub_2409547E8();
    uint64_t v28 = sub_2408370E4(v20, v21, &v27);
    a1 = v26;
    sub_2409550B8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v13, v14, "[%{public}s]: Emitting %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v17, -1, -1);
    MEMORY[0x2456021C0](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v25);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  sub_24083B4E8(a1, (uint64_t)v8);
  uint64_t v22 = type metadata accessor for OnboardingTileGenerator();
  swift_allocObject();
  int v23 = sub_24081EC4C((uint64_t)v8);
  a3[3] = v22;
  uint64_t result = sub_240830574(&qword_26AFCCCA0, (void (*)(uint64_t))type metadata accessor for OnboardingTileGenerator);
  a3[4] = result;
  *a3 = v23;
  return result;
}

uint64_t sub_2409104E4()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HealthRecords27OnboardingGeneratorPipeline_domain;
  uint64_t v2 = sub_240951F18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_24083B294(v0 + OBJC_IVAR____TtC13HealthRecords27OnboardingGeneratorPipeline_context, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_2409105C0()
{
  return type metadata accessor for OnboardingGeneratorPipeline();
}

uint64_t sub_2409105C8()
{
  uint64_t v1 = (int *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_2409106C4@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_2409101B4(v1 + v4, v5, a1);
}

void sub_240910770()
{
  if (!qword_268C91AA0)
  {
    sub_240953FF8();
    sub_240951858();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C91AA0);
    }
  }
}

uint64_t sub_2409107E0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a2;
  if (!*a2)
  {
    a3(255);
    uint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

double sub_240910820()
{
  double result = 14.0;
  __asm { FMOV            V1.2D, #16.0 }
  xmmword_268C99250 = xmmword_24095B1D0;
  *(_OWORD *)&qword_268C99260 = _Q1;
  return result;
}

id sub_24091083C()
{
  uint64_t v1 = qword_268C91AA8;
  uint64_t v2 = *(void **)(v0 + qword_268C91AA8);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_268C91AA8);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone((Class)sub_240952F28()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    sub_240952F08();
    uint64_t v6 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

uint64_t sub_2409108E0()
{
  uint64_t v1 = v0;
  sub_240912C08(0, &qword_268C91AF8, (void (*)(uint64_t))type metadata accessor for ConceptDeltaHighlightFeedItemData);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v24 - v3 + 16;
  uint64_t v5 = qword_268C91AC0;
  uint64_t v6 = *(void **)((char *)v0 + qword_268C91AC0);
  if (v6)
  {
    id v7 = *(char **)((char *)v0 + qword_268C91AC0);
LABEL_6:
    id v22 = v6;
    return (uint64_t)v7;
  }
  uint64_t v8 = (void *)MEMORY[0x263F8EED0];
  uint64_t v9 = (uint64_t)v0 + *(void *)((*MEMORY[0x263F8EED0] & *v0) + 0x60);
  swift_beginAccess();
  sub_240912C5C(v9, (uint64_t)v4);
  uint64_t v10 = type metadata accessor for ConceptDeltaHighlightFeedItemData();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v4, 1, v10);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = (uint64_t)v1 + *(void *)((*v8 & *v1) + 0x70);
    swift_beginAccess();
    uint64_t result = sub_240912B3C(v12, (uint64_t)v24, (uint64_t)&qword_26AFCF770, (uint64_t)&qword_26AFCF760, MEMORY[0x263F444A0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_240851A5C);
    uint64_t v13 = v25;
    if (v25)
    {
      os_log_type_t v14 = sub_2408304E8(v24, v25);
      uint64_t v15 = *(void *)(v13 - 8);
      MEMORY[0x270FA5388](v14);
      uint64_t v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
      (*(void (**)(char *))(v15 + 16))(v17);
      uint64_t v18 = (void *)sub_240953B98();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v13);
      id v19 = objc_allocWithZone((Class)type metadata accessor for ConceptDeltaHighlightFeedItemView());
      uint64_t v20 = sub_240926A14((uint64_t)v4);

      sub_2408371B8((uint64_t)v24);
      objc_msgSend(v20, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
      unint64_t v21 = *(void **)((char *)v1 + v5);
      *(void *)((char *)v1 + v5) = v20;
      id v7 = v20;

      uint64_t v6 = 0;
      goto LABEL_6;
    }
  }
  __break(1u);
  return result;
}

void sub_240910BC8(void *a1)
{
  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for ConceptDeltaHighlightFeedItemViewController();
  id v1 = v2.receiver;
  objc_msgSendSuper2(&v2, sel_viewDidLoad);
  sub_240910C30();
  sub_240910E50();
  sub_2409115A4();
}

void sub_240910C30()
{
  id v1 = *(void **)&v0[qword_268C91AB0];
  objc_msgSend(v1, sel_setNumberOfLines_, 0);
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v1, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_super v2 = *(void **)&v0[qword_268C91AB8];
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v3 = objc_msgSend(self, sel_separatorColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v3);

  id v4 = objc_msgSend(self, sel__preferredFontForTextStyle_variant_, *MEMORY[0x263F835F0], 1024);
  objc_msgSend(v1, sel_setFont_, v4);

  id v5 = objc_msgSend(v0, sel_view);
  if (!v5)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v6 = v5;
  id v7 = sub_24091083C();
  objc_msgSend(v6, sel_addSubview_, v7);

  id v8 = objc_msgSend(v0, sel_view);
  if (!v8)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v9 = v8;
  objc_msgSend(v8, sel_addSubview_, v1);

  id v10 = objc_msgSend(v0, sel_view);
  if (!v10)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v11 = v10;
  objc_msgSend(v10, sel_addSubview_, v2);

  id v12 = objc_msgSend(v0, sel_view);
  if (!v12)
  {
LABEL_11:
    __break(1u);
    return;
  }
  uint64_t v13 = v12;
  id v14 = (id)sub_2409108E0();
  objc_msgSend(v13, sel_addSubview_, v14);
}

void sub_240910E50()
{
  sub_2408B2F90(0, (unint64_t *)&qword_26AFCF418, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_24095B1E0;
  id v2 = sub_24091083C();
  id v3 = objc_msgSend(v2, sel_leadingAnchor);

  id v4 = objc_msgSend(v0, sel_view);
  if (!v4)
  {
    __break(1u);
    goto LABEL_11;
  }
  id v5 = v4;
  id v6 = objc_msgSend(v4, sel_leadingAnchor);

  id v7 = objc_msgSend(v3, sel_constraintEqualToAnchor_, v6);
  *(void *)(v1 + 32) = v7;
  id v8 = sub_24091083C();
  id v9 = objc_msgSend(v8, sel_trailingAnchor);

  id v10 = objc_msgSend(v0, sel_view);
  if (!v10)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v11 = v10;
  id v12 = objc_msgSend(v10, sel_trailingAnchor);

  id v13 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v12);
  *(void *)(v1 + 40) = v13;
  id v14 = sub_24091083C();
  id v15 = objc_msgSend(v14, sel_topAnchor);

  id v16 = objc_msgSend(v0, sel_view);
  if (!v16)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    return;
  }
  uint64_t v17 = v16;
  id v18 = objc_msgSend(v16, sel_topAnchor);

  id v19 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v18);
  *(void *)(v1 + 48) = v19;
  uint64_t v20 = *(void **)&v0[qword_268C91AB0];
  id v21 = objc_msgSend(v20, sel_leadingAnchor);
  id v22 = sub_24091083C();
  id v23 = objc_msgSend(v22, sel_leadingAnchor);

  if (qword_268C905F0 != -1) {
    swift_once();
  }
  id v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_constant_, v23, *((double *)&xmmword_268C99250 + 1));

  *(void *)(v1 + 56) = v24;
  id v25 = objc_msgSend(v20, sel_trailingAnchor);
  id v26 = sub_24091083C();
  id v27 = objc_msgSend(v26, sel_trailingAnchor);

  id v28 = objc_msgSend(v25, (SEL)&off_2650D8300 + 7, v27, -*(double *)&qword_268C99268);
  *(void *)(v1 + 64) = v28;
  id v29 = objc_msgSend(v20, sel_topAnchor);
  id v30 = sub_24091083C();
  id v31 = objc_msgSend(v30, sel_bottomAnchor);

  id v32 = objc_msgSend(v29, (SEL)&off_2650D8300 + 7, v31, 8.0);
  *(void *)(v1 + 72) = v32;
  uint64_t v33 = *(void **)&v0[qword_268C91AB8];
  id v34 = objc_msgSend(v33, sel_leadingAnchor);
  id v35 = objc_msgSend(v20, sel_leadingAnchor);
  id v36 = objc_msgSend(v34, sel_constraintEqualToAnchor_, v35);

  *(void *)(v1 + 80) = v36;
  id v37 = objc_msgSend(v33, (SEL)&off_2650D8490 + 4);
  id v38 = objc_msgSend(v20, (SEL)&off_2650D8490 + 4);
  id v39 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v38);

  *(void *)(v1 + 88) = v39;
  id v40 = objc_msgSend(v33, sel_topAnchor);
  id v41 = objc_msgSend(v20, sel_bottomAnchor);
  id v42 = objc_msgSend(v40, sel_constraintEqualToAnchor_constant_, v41, 12.0);

  *(void *)(v1 + 96) = v42;
  id v43 = objc_msgSend(v33, sel_heightAnchor);
  id v44 = objc_msgSend(v43, sel_constraintEqualToConstant_, 1.0);

  *(void *)(v1 + 104) = v44;
  uint64_t v45 = (void *)sub_2409108E0();
  id v46 = objc_msgSend(v45, sel_leadingAnchor);

  id v47 = objc_msgSend(v20, sel_leadingAnchor);
  id v48 = objc_msgSend(v46, sel_constraintEqualToAnchor_, v47);

  *(void *)(v1 + 112) = v48;
  uint64_t v49 = (void *)sub_2409108E0();
  id v50 = objc_msgSend(v49, sel_trailingAnchor);

  id v51 = objc_msgSend(v20, sel_trailingAnchor);
  id v52 = objc_msgSend(v50, sel_constraintEqualToAnchor_, v51);

  *(void *)(v1 + 120) = v52;
  uint64_t v53 = (void *)sub_2409108E0();
  id v54 = objc_msgSend(v53, sel_topAnchor);

  id v55 = objc_msgSend(v33, sel_bottomAnchor);
  id v56 = objc_msgSend(v54, (SEL)&off_2650D8300 + 7, v55, 16.0);

  *(void *)(v1 + 128) = v56;
  uint64_t v57 = (void *)sub_2409108E0();
  id v58 = objc_msgSend(v57, sel_bottomAnchor);

  id v59 = objc_msgSend(v0, sel_view);
  if (!v59) {
    goto LABEL_13;
  }
  uint64_t v60 = v59;
  uint64_t v61 = self;
  id v62 = objc_msgSend(v60, sel_bottomAnchor);

  id v63 = objc_msgSend(v58, (SEL)&off_2650D8300 + 7, v62, -*(double *)&qword_268C99260);
  *(void *)(v1 + 136) = v63;
  sub_2409549B8();
  sub_24083EDCC(0, &qword_268C91A80);
  id v64 = (id)sub_240954988();
  swift_bridgeObjectRelease();
  objc_msgSend(v61, sel_activateConstraints_, v64);
}

uint64_t sub_2409115A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_240953738();
  uint64_t v50 = *(void *)(v2 - 8);
  uint64_t v51 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v49 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  id v48 = (char *)&v45 - v5;
  uint64_t v6 = sub_2409526C8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240912C08(0, &qword_268C91AF8, (void (*)(uint64_t))type metadata accessor for ConceptDeltaHighlightFeedItemData);
  MEMORY[0x270FA5388](v10 - 8);
  id v12 = (char *)&v45 - v11;
  uint64_t v13 = type metadata accessor for ConceptDeltaHighlightFeedItemData();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v52 = (uint64_t)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  id v19 = (char *)&v45 - v18;
  MEMORY[0x270FA5388](v17);
  id v21 = (char *)&v45 - v20;
  uint64_t v22 = (uint64_t)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x60);
  swift_beginAccess();
  sub_240912C5C(v22, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1) {
    return sub_240912FEC((uint64_t)v12, &qword_268C91AF8, (void (*)(uint64_t))type metadata accessor for ConceptDeltaHighlightFeedItemData);
  }
  sub_240912CDC((uint64_t)v12, (uint64_t)v21);
  id v47 = sub_24091083C();
  uint64_t v54 = sub_240953318();
  uint64_t v55 = MEMORY[0x263F46190];
  uint64_t v45 = sub_240851B6C(v53);
  uint64_t v24 = sub_2409528B8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v9, v21, v24);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F45F00], v6);
  swift_bridgeObjectRetain();
  sub_2409525F8();
  id v46 = v19;
  sub_240952688();
  sub_2409532F8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  id v25 = v47;
  sub_240952F18();

  id v26 = *(void **)((char *)v1 + qword_268C91AB0);
  sub_240912D40((uint64_t)v21);
  id v27 = (void *)sub_240954788();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_setText_, v27);

  id v28 = (void *)sub_2409108E0();
  uint64_t v29 = (uint64_t)v46;
  sub_240903D68((uint64_t)v21, (uint64_t)v46);
  uint64_t v30 = (uint64_t)v28 + OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView_viewModel;
  swift_beginAccess();
  sub_240912F88(v29, v30);
  swift_endAccess();
  uint64_t v31 = v30;
  uint64_t v32 = v52;
  sub_240903D68(v31, v52);
  sub_240923E1C(v32);
  sub_2408DA060(v32);
  sub_2408DA060(v29);

  uint64_t v33 = (uint64_t)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x70);
  swift_beginAccess();
  uint64_t result = sub_240912B3C(v33, (uint64_t)v53, (uint64_t)&qword_26AFCF770, (uint64_t)&qword_26AFCF760, MEMORY[0x263F444A0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_240851A5C);
  uint64_t v34 = v54;
  if (v54)
  {
    id v35 = sub_2408304E8(v53, v54);
    uint64_t v36 = *(void *)(v34 - 8);
    MEMORY[0x270FA5388](v35);
    id v38 = (char *)&v45 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v36 + 16))(v38);
    id v39 = v48;
    sub_240953BA8();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v34);
    id v41 = v49;
    uint64_t v40 = v50;
    uint64_t v42 = v51;
    (*(void (**)(char *, void, uint64_t))(v50 + 104))(v49, *MEMORY[0x263F43BF8], v51);
    LOBYTE(v38) = sub_240953728();
    id v43 = *(void (**)(char *, uint64_t))(v40 + 8);
    v43(v41, v42);
    v43(v39, v42);
    sub_2408371B8((uint64_t)v53);
    if (v38)
    {
      id v44 = sub_24091083C();
      sub_240952EE8();
    }
    return sub_2408DA060((uint64_t)v21);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240911C88(uint64_t a1)
{
  id v27 = (uint64_t *)a1;
  uint64_t v31 = sub_2409536E8();
  uint64_t v29 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  id v28 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_240953738();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  id v9 = (char *)&v26 - v8;
  uint64_t v10 = *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x70);
  uint64_t v30 = v1;
  uint64_t v11 = (uint64_t)v1 + v10;
  swift_beginAccess();
  uint64_t result = sub_240912B3C(v11, (uint64_t)v34, (uint64_t)&qword_26AFCF770, (uint64_t)&qword_26AFCF760, MEMORY[0x263F444A0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_240851A5C);
  uint64_t v13 = v35;
  if (!v35)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v14 = sub_2408304E8(v34, v35);
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v15 + 16))(v17);
  sub_240953BA8();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v13);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v7, *MEMORY[0x263F43BF8], v3);
  sub_240912BB0();
  LOBYTE(v17) = sub_240954778();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v4 + 8);
  v18(v7, v3);
  v18(v9, v3);
  uint64_t result = sub_2408371B8((uint64_t)v34);
  if (v17) {
    return result;
  }
  sub_240912188((uint64_t)v27);
  uint64_t v20 = v28;
  uint64_t v19 = v29;
  (*(void (**)(char *, void, uint64_t))(v29 + 104))(v28, *MEMORY[0x263F43A30], v31);
  uint64_t result = sub_240912B3C(v11, (uint64_t)v34, (uint64_t)&qword_26AFCF770, (uint64_t)&qword_26AFCF760, MEMORY[0x263F444A0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_240851A5C);
  uint64_t v21 = v35;
  if (!v35)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v26 = sub_240953708();
  uint64_t v22 = sub_2408304E8(v34, v21);
  id v27 = &v26;
  uint64_t v23 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v22);
  id v25 = (char *)&v26 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v23 + 16))(v25);
  sub_240953BA8();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v21);
  uint64_t v33 = 0;
  memset(v32, 0, sizeof(v32));
  sub_2409536F8();
  sub_240851CE8((uint64_t)v32, &qword_268C91AE8, &qword_268C91AF0);
  v18(v9, v3);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v31);
  return sub_2408371B8((uint64_t)v34);
}

uint64_t sub_240912188(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v33 = a1;
  sub_240913048();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ConceptDeltaHighlightFeedItemData();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240912C08(0, &qword_268C91AF8, (void (*)(uint64_t))type metadata accessor for ConceptDeltaHighlightFeedItemData);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v15 = (void *)MEMORY[0x263F8EED0];
  uint64_t v16 = (uint64_t)v2 + *(void *)((*MEMORY[0x263F8EED0] & *v2) + 0x60);
  swift_beginAccess();
  sub_240912C5C(v16, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8)) {
    return sub_240912FEC((uint64_t)v14, &qword_268C91AF8, (void (*)(uint64_t))type metadata accessor for ConceptDeltaHighlightFeedItemData);
  }
  uint64_t v18 = v33;
  sub_240903D68((uint64_t)v14, (uint64_t)v11);
  sub_240912FEC((uint64_t)v14, &qword_268C91AF8, (void (*)(uint64_t))type metadata accessor for ConceptDeltaHighlightFeedItemData);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, &v11[*(int *)(v8 + 20)], v4);
  sub_2408DA060((uint64_t)v11);
  uint64_t v19 = (void *)sub_240954658();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v20 = (uint64_t)v2 + *(void *)((*v15 & *v2) + 0x70);
  swift_beginAccess();
  sub_240912B3C(v20, (uint64_t)&v34, (uint64_t)&qword_26AFCF770, (uint64_t)&qword_26AFCF760, MEMORY[0x263F444A0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_240851A5C);
  if (v35)
  {
    sub_24083AB20(&v34, (uint64_t)v36);
    sub_240952808();
    uint64_t v21 = (void *)sub_2409527D8();
    sub_2408304E8(v36, v36[3]);
    uint64_t v22 = (void *)sub_240953B98();
    uint64_t v23 = (void *)sub_2409527E8();

    sub_240952D78();
    uint64_t v24 = (void *)sub_240952D68();
    id v25 = (void *)sub_240952D28();

    sub_240912B3C(v18, (uint64_t)&v34, (uint64_t)&qword_268C91A60, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8D8F0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_2408B2F90);
    uint64_t v26 = v35;
    if (v35)
    {
      id v27 = sub_2408304E8(&v34, v35);
      uint64_t v28 = *(void *)(v26 - 8);
      MEMORY[0x270FA5388](v27);
      uint64_t v30 = (char *)&v32 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v28 + 16))(v30);
      uint64_t v31 = sub_2409555F8();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v26);
      sub_2408371B8((uint64_t)&v34);
    }
    else
    {
      uint64_t v31 = 0;
    }
    objc_msgSend(v2, sel_showViewController_sender_, v25, v31);

    swift_unknownObjectRelease();
    return sub_2408371B8((uint64_t)v36);
  }
  else
  {

    return sub_240851CE8((uint64_t)&v34, (unint64_t *)&qword_26AFCF770, (unint64_t *)&qword_26AFCF760);
  }
}

id sub_2409126B0(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&v3[qword_268C91AA8] = 0;
  uint64_t v6 = qword_268C91AB0;
  id v7 = objc_allocWithZone(MEMORY[0x263F828E0]);
  uint64_t v8 = v3;
  *(void *)&v3[v6] = objc_msgSend(v7, sel_init);
  uint64_t v9 = qword_268C91AB8;
  *(void *)&v8[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_init);
  *(void *)&v8[qword_268C91AC0] = 0;
  uint64_t v10 = &v8[qword_268C91AC8];
  *(_OWORD *)uint64_t v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((void *)v10 + 4) = 0;

  if (a2)
  {
    uint64_t v11 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = 0;
  }
  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for ConceptDeltaHighlightFeedItemViewController();
  id v12 = objc_msgSendSuper2(&v14, sel_initWithNibName_bundle_, v11, a3);

  return v12;
}

id sub_2409127D8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    uint64_t v5 = sub_2409547C8();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  id v8 = a4;
  return sub_2409126B0(v5, v7, a4);
}

id sub_240912838(void *a1)
{
  *(void *)&v1[qword_268C91AA8] = 0;
  uint64_t v3 = qword_268C91AB0;
  id v4 = objc_allocWithZone(MEMORY[0x263F828E0]);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_init);
  uint64_t v6 = qword_268C91AB8;
  *(void *)&v5[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_init);
  *(void *)&v5[qword_268C91AC0] = 0;
  uint64_t v7 = &v5[qword_268C91AC8];
  *(_OWORD *)uint64_t v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((void *)v7 + 4) = 0;

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for ConceptDeltaHighlightFeedItemViewController();
  id v8 = objc_msgSendSuper2(&v10, sel_initWithCoder_, a1);

  return v8;
}

id sub_240912924(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_240912838(a3);
}

uint64_t sub_24091294C()
{
  return sub_240851CE8(v0 + qword_268C91AC8, &qword_268C90810, (unint64_t *)&unk_268C911C0);
}

id sub_2409129C8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConceptDeltaHighlightFeedItemViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240912A00(uint64_t a1)
{
  return sub_240851CE8(a1 + qword_268C91AC8, &qword_268C90810, (unint64_t *)&unk_268C911C0);
}

uint64_t type metadata accessor for ConceptDeltaHighlightFeedItemViewController()
{
  uint64_t result = qword_268C91AD0;
  if (!qword_268C91AD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_240912AD4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_240912B34()
{
  return type metadata accessor for ConceptDeltaHighlightFeedItemViewController();
}

uint64_t sub_240912B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

unint64_t sub_240912BB0()
{
  unint64_t result = qword_268C91AE0;
  if (!qword_268C91AE0)
  {
    sub_240953738();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91AE0);
  }
  return result;
}

void sub_240912C08(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240955098();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_240912C5C(uint64_t a1, uint64_t a2)
{
  sub_240912C08(0, &qword_268C91AF8, (void (*)(uint64_t))type metadata accessor for ConceptDeltaHighlightFeedItemData);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240912CDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConceptDeltaHighlightFeedItemData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_240912D40(uint64_t a1)
{
  uint64_t v2 = sub_240952B98();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240912C08(0, &qword_26AFCC6A8, MEMORY[0x263F07690]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v13 - v7;
  uint64_t v9 = *(void *)(a1 + *(int *)(type metadata accessor for ConceptDeltaHighlightFeedItemData() + 32));
  if (v9 == -1 || !v9 || v9 == 1)
  {
    uint64_t v10 = sub_240951AB8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
    sub_240952B88();
    uint64_t v11 = sub_2409535A8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_240912FEC((uint64_t)v8, &qword_26AFCC6A8, MEMORY[0x263F07690]);
    return v11;
  }
  else
  {
    type metadata accessor for ComparisonResult(0);
    v13[1] = v9;
    uint64_t result = sub_240955648();
    __break(1u);
  }
  return result;
}

uint64_t sub_240912F88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConceptDeltaHighlightFeedItemData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_240912FEC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_240912C08(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_240913048()
{
  if (!qword_26AFCE260)
  {
    sub_24083EDCC(255, &qword_26AFCDF40);
    unint64_t v0 = sub_240954678();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCE260);
    }
  }
}

uint64_t sub_2409130B0()
{
  sub_2408371B8(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t sub_2409130E8()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240913120(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v16 >= v7) {
      return swift_release();
    }
    unint64_t v17 = *(void *)(v3 + 8 * v16);
    ++v8;
    if (!v17)
    {
      int64_t v8 = v16 + 1;
      if (v16 + 1 >= v7) {
        return swift_release();
      }
      unint64_t v17 = *(void *)(v3 + 8 * v8);
      if (!v17)
      {
        int64_t v8 = v16 + 2;
        if (v16 + 2 >= v7) {
          return swift_release();
        }
        unint64_t v17 = *(void *)(v3 + 8 * v8);
        if (!v17)
        {
          int64_t v8 = v16 + 3;
          if (v16 + 3 >= v7) {
            return swift_release();
          }
          unint64_t v17 = *(void *)(v3 + 8 * v8);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v17 - 1) & v17;
    unint64_t v10 = __clz(__rbit64(v17)) + (v8 << 6);
LABEL_6:
    uint64_t v11 = *(void *)(v2 + 48) + 88 * v10;
    long long v12 = *(_OWORD *)(v11 + 16);
    v20[0] = *(_OWORD *)v11;
    v20[1] = v12;
    long long v14 = *(_OWORD *)(v11 + 48);
    long long v13 = *(_OWORD *)(v11 + 64);
    uint64_t v15 = *(void *)(v11 + 80);
    void v20[2] = *(_OWORD *)(v11 + 32);
    uint64_t v21 = v15;
    void v20[3] = v14;
    uint64_t v20[4] = v13;
    sub_240865710((uint64_t)v20);
    sub_240913620(v20, (uint64_t)&v19);
    sub_24091A140(v19);
    uint64_t result = sub_240892468((uint64_t)v20);
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v7) {
    return swift_release();
  }
  unint64_t v17 = *(void *)(v3 + 8 * v18);
  if (v17)
  {
    int64_t v8 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v8 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v8 >= v7) {
      return swift_release();
    }
    unint64_t v17 = *(void *)(v3 + 8 * v8);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_2409132E8(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v14 >= v7) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    uint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_240913490(v12, v13);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 < v7)
  {
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v8 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        ++v16;
        if (v15) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v16;
    goto LABEL_23;
  }
LABEL_24:

  return swift_release();
}

uint64_t sub_240913490(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_2409556F8();
  swift_bridgeObjectRetain();
  sub_240954868();
  uint64_t v6 = sub_240955748();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  unint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_240955618() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      int64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_240955618() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_24094194C();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_240914494(v8);
  *uint64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_240913620@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_24082EF28(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
  uint64_t v114 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v109 = (char *)&v103 - v7;
  sub_240851D44();
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (char *)&v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24089214C();
  uint64_t v113 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v112 = (uint64_t)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = (int *)type metadata accessor for SharedConceptCodedValue(0);
  uint64_t v108 = *((void *)v119 - 1);
  uint64_t v13 = MEMORY[0x270FA5388](v119);
  unint64_t v128 = (uint64_t *)((char *)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  unint64_t v127 = (uint64_t *)((char *)&v103 - v15);
  sub_24082EF28(0, (unint64_t *)&qword_268C90E10, &qword_268C90E18);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v103 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v103 - v22;
  uint64_t v103 = v2;
  uint64_t v24 = *v2;
  sub_2409556F8();
  swift_bridgeObjectRetain();
  sub_240886A38((uint64_t)&v143);
  uint64_t v25 = sub_240955748();
  uint64_t v26 = -1 << *(unsigned char *)(v24 + 32);
  unint64_t v27 = v25 & ~v26;
  uint64_t v28 = v24 + 56;
  if (((*(void *)(v24 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_72;
  }
  uint64_t v104 = a2;
  uint64_t v29 = ~v26;
  uint64_t v120 = a1;
  uint64_t v140 = *a1;
  uint64_t v141 = v18 + 16;
  uint64_t v30 = (void (**)(uint64_t *, uint64_t))(v18 + 8);
  uint64_t v31 = *(void *)(v140 + 16);
  unint64_t v111 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  uint64_t v105 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
  uint64_t v106 = (void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v126 = v18;
  id v133 = v21;
  uint64_t v107 = v10;
  uint64_t v123 = v24;
  uint64_t v122 = v24 + 56;
  uint64_t v121 = ~v26;
  uint64_t v129 = v31;
  while (1)
  {
    uint64_t v32 = *(void *)(v24 + 48) + 88 * v27;
    uint64_t v33 = *(void *)v32;
    if (*(void *)(*(void *)v32 + 16) != v31) {
      goto LABEL_4;
    }
    unint64_t v132 = v27;
    uint64_t v34 = *(void *)(v32 + 16);
    uint64_t v134 = *(void *)(v32 + 8);
    uint64_t v35 = *(void *)(v32 + 32);
    uint64_t v131 = *(void *)(v32 + 24);
    uint64_t v36 = *(uint64_t **)(v32 + 40);
    uint64_t v125 = *(void *)(v32 + 48);
    uint64_t v37 = *(void *)(v32 + 56);
    double v38 = *(double *)(v32 + 64);
    uint64_t v39 = *(void *)(v32 + 80);
    uint64_t v124 = *(void *)(v32 + 72);
    uint64_t v142 = v33;
    uint64_t v136 = v35;
    uint64_t v137 = v34;
    uint64_t v135 = v36;
    uint64_t v138 = v39;
    uint64_t v139 = v37;
    if (!v31 || v33 == v140) {
      break;
    }
    unint64_t v40 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    uint64_t v41 = *(void *)(v18 + 72);
    uint64_t v42 = *(void (**)(char *, unint64_t, uint64_t))(v18 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v43 = (char *)v133;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v44 = v129;
    while (1)
    {
      v42(v23, v142 + v40, v17);
      v42(v43, v140 + v40, v17);
      sub_2408921B0(&qword_268C90E98, &qword_268C90EA0);
      char v45 = sub_240954778();
      id v46 = *v30;
      (*v30)((uint64_t *)v43, v17);
      v46((uint64_t *)v23, v17);
      if ((v45 & 1) == 0) {
        break;
      }
      v40 += v41;
      if (!--v44) {
        goto LABEL_13;
      }
    }
LABEL_3:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v27 = v132;
    uint64_t v18 = v126;
    uint64_t v24 = v123;
    uint64_t v28 = v122;
    uint64_t v29 = v121;
    uint64_t v31 = v129;
LABEL_4:
    unint64_t v27 = (v27 + 1) & v29;
    if (((*(void *)(v28 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
      a2 = v104;
LABEL_72:
      *(void *)(a2 + 80) = 0;
      *(_OWORD *)(a2 + 48) = 0u;
      *(_OWORD *)(a2 + 64) = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      *(_OWORD *)(a2 + 32) = 0u;
      *(_OWORD *)a2 = 0u;
      return result;
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_13:
  id v47 = v120;
  BOOL v48 = v134 == v120[1] && v137 == v120[2];
  if (!v48 && (sub_240955618() & 1) == 0) {
    goto LABEL_3;
  }
  uint64_t v49 = v135;
  BOOL v50 = v131 == v47[3] && v136 == v47[4];
  if (!v50 && (sub_240955618() & 1) == 0) {
    goto LABEL_3;
  }
  uint64_t v51 = (uint64_t *)v47[5];
  uint64_t v52 = v49[2];
  if (v52 != v51[2]) {
    goto LABEL_3;
  }
  if (!v52 || v49 == v51)
  {
LABEL_54:
    double v88 = (double *)v120;
    BOOL v89 = v125 == v120[6] && v139 == v120[7];
    if (v89 || (sub_240955618()) && v38 == v88[8])
    {
      if (v124 == *((void *)v88 + 9) && v138 == *((void *)v88 + 10))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_74:
        swift_bridgeObjectRelease();
        uint64_t v49 = v103;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v93 = *v49;
        uint64_t v143 = *v49;
        uint64_t *v49 = 0x8000000000000000;
        uint64_t v64 = v104;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          goto LABEL_77;
        }
        goto LABEL_75;
      }
      char v90 = sub_240955618();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v27 = v132;
      uint64_t v18 = v126;
      uint64_t v24 = v123;
      uint64_t v28 = v122;
      uint64_t v29 = v121;
      uint64_t v31 = v129;
      if (v90) {
        goto LABEL_74;
      }
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v53 = 0;
  unint64_t v54 = (*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80);
  uint64_t v117 = (char *)v49 + v54;
  uint64_t v116 = (char *)v51 + v54;
  uint64_t v115 = *(void *)(v108 + 72);
  uint64_t v110 = v52;
  while (2)
  {
    uint64_t v118 = v53;
    uint64_t v55 = v115 * v53;
    id v56 = v127;
    sub_2408A809C((uint64_t)&v117[v115 * v53], (uint64_t)v127, type metadata accessor for SharedConceptCodedValue);
    uint64_t v57 = (uint64_t)&v116[v55];
    id v58 = v128;
    sub_2408A809C(v57, (uint64_t)v128, type metadata accessor for SharedConceptCodedValue);
    uint64_t v59 = *v58;
    uint64_t v131 = *v56;
    uint64_t v60 = *(void *)(v59 + 16);
    uint64_t v134 = *(void *)(v131 + 16);
    if (v134 != v60) {
      goto LABEL_68;
    }
    if (!v134 || v131 == v59)
    {
LABEL_34:
      uint64_t v67 = v119[5];
      uint64_t v68 = (uint64_t)v128 + v67;
      uint64_t v69 = v112;
      uint64_t v70 = v112 + *(int *)(v113 + 48);
      sub_2408A809C((uint64_t)v127 + v67, v112, (uint64_t (*)(void))sub_240851D44);
      sub_2408A809C(v68, v70, (uint64_t (*)(void))sub_240851D44);
      uint64_t v71 = *v111;
      uint64_t v72 = v114;
      if ((*v111)(v69, 1, v114) == 1)
      {
        if (v71(v70, 1, v72) != 1) {
          goto LABEL_67;
        }
        sub_240919FC8(v69, (uint64_t (*)(void))sub_240851D44);
      }
      else
      {
        uint64_t v73 = (uint64_t)v107;
        sub_2408A809C(v69, (uint64_t)v107, (uint64_t (*)(void))sub_240851D44);
        if (v71(v70, 1, v72) == 1)
        {
          (*v106)(v73, v72);
LABEL_67:
          sub_240919FC8(v69, (uint64_t (*)(void))sub_24089214C);
LABEL_68:
          sub_240919FC8((uint64_t)v128, type metadata accessor for SharedConceptCodedValue);
          sub_240919FC8((uint64_t)v127, type metadata accessor for SharedConceptCodedValue);
          goto LABEL_3;
        }
        uint64_t v74 = v109;
        (*v105)(v109, v70, v72);
        sub_24091A028();
        char v75 = sub_240954778();
        uint64_t v76 = *v106;
        (*v106)((uint64_t)v74, v72);
        v76(v73, v72);
        sub_240919FC8(v69, (uint64_t (*)(void))sub_240851D44);
        if ((v75 & 1) == 0) {
          goto LABEL_68;
        }
      }
      uint64_t v77 = v119[6];
      uint64_t v78 = (uint64_t *)((char *)v127 + v77);
      uint64_t v79 = *(uint64_t *)((char *)v127 + v77 + 8);
      uint64_t v80 = (uint64_t *)((char *)v128 + v77);
      uint64_t v81 = v80[1];
      if (v79)
      {
        if (!v81 || (*v78 != *v80 || v79 != v81) && (sub_240955618() & 1) == 0) {
          goto LABEL_68;
        }
      }
      else if (v81)
      {
        goto LABEL_68;
      }
      uint64_t v82 = v119[7];
      uint64_t v83 = (uint64_t *)((char *)v127 + v82);
      uint64_t v84 = *(uint64_t *)((char *)v127 + v82 + 8);
      id v85 = (uint64_t *)((char *)v128 + v82);
      uint64_t v86 = v85[1];
      char v87 = v86 == 0;
      if (v84)
      {
        if (!v86) {
          goto LABEL_68;
        }
        if (*v83 == *v85 && v84 == v86)
        {
          sub_240919FC8((uint64_t)v128, type metadata accessor for SharedConceptCodedValue);
          sub_240919FC8((uint64_t)v127, type metadata accessor for SharedConceptCodedValue);
          uint64_t v49 = v135;
          goto LABEL_53;
        }
        char v87 = sub_240955618();
      }
      uint64_t v49 = v135;
      sub_240919FC8((uint64_t)v128, type metadata accessor for SharedConceptCodedValue);
      sub_240919FC8((uint64_t)v127, type metadata accessor for SharedConceptCodedValue);
      if ((v87 & 1) == 0) {
        goto LABEL_3;
      }
LABEL_53:
      uint64_t v53 = v118 + 1;
      if (v118 + 1 == v110) {
        goto LABEL_54;
      }
      continue;
    }
    break;
  }
  unint64_t v61 = 0;
  unint64_t v62 = (*(unsigned __int8 *)(v126 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80);
  uint64_t v130 = *(void *)(v126 + 72);
  id v63 = *(void (**)(char *, unint64_t, uint64_t))(v126 + 16);
  while (1)
  {
    uint64_t v64 = v141;
    v63(v23, v131 + v62, v17);
    if (v61 >= *(void *)(v59 + 16)) {
      break;
    }
    uint64_t v49 = v133;
    v63((char *)v133, v59 + v62, v17);
    sub_2408921B0(&qword_268C90E98, &qword_268C90EA0);
    char v65 = sub_240954778();
    uint64_t v66 = (void (*)(char *, uint64_t))*v30;
    (*v30)(v49, v17);
    v66(v23, v17);
    if ((v65 & 1) == 0) {
      goto LABEL_68;
    }
    ++v61;
    v62 += v130;
    if (v134 == v61) {
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_77:
  sub_240941AFC();
  uint64_t v93 = v143;
LABEL_75:
  int64_t v94 = v132;
  uint64_t v95 = *(void *)(v93 + 48) + 88 * v132;
  uint64_t v96 = *(void *)(v95 + 16);
  uint64_t v97 = *(void *)(v95 + 24);
  uint64_t v98 = *(void *)(v95 + 48);
  uint64_t v99 = *(void *)(v95 + 56);
  uint64_t v100 = *(void *)(v95 + 64);
  uint64_t v101 = *(void *)(v95 + 72);
  uint64_t v102 = *(void *)(v95 + 80);
  *(_OWORD *)uint64_t v64 = *(_OWORD *)v95;
  *(void *)(v64 + 16) = v96;
  *(void *)(v64 + 24) = v97;
  *(_OWORD *)(v64 + 32) = *(_OWORD *)(v95 + 32);
  *(void *)(v64 + 48) = v98;
  *(void *)(v64 + 56) = v99;
  *(void *)(v64 + 64) = v100;
  *(void *)(v64 + 72) = v101;
  *(void *)(v64 + 80) = v102;
  sub_24091465C(v94);
  uint64_t *v49 = v143;
  return swift_bridgeObjectRelease();
}

unint64_t sub_240914494(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_240955158();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_2409556F8();
        swift_bridgeObjectRetain();
        sub_240954868();
        uint64_t v10 = sub_240955748();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_24091465C(int64_t a1)
{
  sub_24082EF28(0, (unint64_t *)&qword_268C90E10, &qword_268C90E18);
  uint64_t v4 = v3;
  uint64_t v55 = *(void *)(v3 - 8);
  uint64_t result = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v47 - v6;
  uint64_t v8 = *v1;
  uint64_t v9 = *v1 + 56;
  uint64_t v10 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  unint64_t v12 = v11 >> 6;
  uint64_t v13 = *(void *)(v9 + 8 * (v11 >> 6));
  unint64_t v69 = v11;
  uint64_t v14 = 1 << v11;
  if (((1 << v11) & v13) != 0)
  {
    BOOL v48 = v1;
    uint64_t v15 = ~v10;
    swift_retain();
    uint64_t v16 = sub_240955158();
    if ((*(void *)(v9 + 8 * v12) & v14) != 0)
    {
      uint64_t v51 = v7;
      uint64_t v52 = v4;
      unint64_t v56 = (v16 + 1) & v15;
      uint64_t v50 = v55 + 16;
      uint64_t v49 = (void (**)(char *, uint64_t))(v55 + 8);
      unint64_t v17 = v69;
      uint64_t v54 = v9;
      uint64_t v53 = v8;
      uint64_t v57 = v15;
      do
      {
        uint64_t v18 = *(void *)(v8 + 48);
        unint64_t v69 = v17;
        uint64_t v19 = (uint64_t *)(v18 + 88 * v17);
        uint64_t v20 = *v19;
        uint64_t v22 = v19[2];
        uint64_t v21 = v19[3];
        uint64_t v64 = v19[1];
        uint64_t v65 = v21;
        uint64_t v23 = v19[4];
        uint64_t v24 = v19[5];
        uint64_t v25 = v19[6];
        uint64_t v70 = v19[7];
        uint64_t v26 = v19[8];
        uint64_t v66 = v25;
        uint64_t v67 = v26;
        uint64_t v27 = v19[10];
        uint64_t v68 = v19[9];
        sub_2409556F8();
        sub_240955708();
        uint64_t v28 = *(void *)(v20 + 16);
        if (v28)
        {
          int64_t v63 = a1;
          uint64_t v29 = v20 + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80));
          uint64_t v30 = *(void *)(v55 + 72);
          uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 16);
          uint64_t v62 = v20;
          swift_bridgeObjectRetain_n();
          uint64_t v61 = v22;
          swift_bridgeObjectRetain();
          uint64_t v60 = v23;
          swift_bridgeObjectRetain();
          uint64_t v59 = v24;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v58 = v27;
          swift_bridgeObjectRetain();
          uint64_t v32 = v49;
          uint64_t v33 = v52;
          uint64_t v34 = v51;
          do
          {
            v31(v34, v29, v33);
            sub_2408921B0(&qword_268C90E70, &qword_268C90E78);
            sub_240954708();
            (*v32)(v34, v33);
            v29 += v30;
            --v28;
          }
          while (v28);
          swift_bridgeObjectRelease();
          a1 = v63;
          uint64_t v9 = v54;
          uint64_t v8 = v53;
          uint64_t v35 = v59;
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v35 = v24;
        }
        swift_bridgeObjectRetain();
        sub_240954868();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_240954868();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_24088E9F4((uint64_t)v71, v35);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_240954868();
        swift_bridgeObjectRelease();
        sub_240955738();
        swift_bridgeObjectRetain();
        sub_240954868();
        swift_bridgeObjectRelease();
        uint64_t v36 = sub_240955748();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v37 = v57;
        unint64_t v38 = v36 & v57;
        if (a1 >= (uint64_t)v56)
        {
          unint64_t v39 = v69;
          if (v38 < v56) {
            goto LABEL_5;
          }
        }
        else
        {
          unint64_t v39 = v69;
          if (v38 >= v56) {
            goto LABEL_16;
          }
        }
        if (a1 >= (uint64_t)v38)
        {
LABEL_16:
          uint64_t v40 = *(void *)(v8 + 48);
          uint64_t v41 = (char *)(v40 + 88 * a1);
          uint64_t v42 = (char *)(v40 + 88 * v39);
          if (a1 != v39 || (a1 = v39, v41 >= v42 + 88))
          {
            memmove(v41, v42, 0x58uLL);
            a1 = v39;
          }
        }
LABEL_5:
        unint64_t v17 = (v39 + 1) & v37;
      }
      while (((*(void *)(v9 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) != 0);
    }
    *(void *)(v9 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v48;
  }
  else
  {
    *(void *)(v9 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v43 = *v1;
  uint64_t v44 = *(void *)(*v1 + 16);
  BOOL v45 = __OFSUB__(v44, 1);
  uint64_t v46 = v44 - 1;
  if (v45)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v43 + 16) = v46;
    ++*(_DWORD *)(v43 + 36);
  }
  return result;
}

uint64_t sub_240914BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v182 = *MEMORY[0x263EF8340];
  sub_24082EF28(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
  uint64_t v136 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v133 = (char *)&v127 - v6;
  sub_240851D44();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v127 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24089214C();
  uint64_t v135 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v138 = (uint64_t)&v127 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v148 = (int *)type metadata accessor for SharedConceptCodedValue(0);
  uint64_t v129 = *((void *)v148 - 1);
  uint64_t v12 = MEMORY[0x270FA5388](v148);
  v153 = (uint64_t *)((char *)&v127 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v12);
  uint64_t v149 = (uint64_t *)((char *)&v127 - v14);
  sub_24082EF28(0, (unint64_t *)&qword_268C90E10, &qword_268C90E18);
  uint64_t v16 = v15;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  v171 = (char *)&v127 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  v174 = (char *)&v127 - v20;
  MEMORY[0x270FA5388](v19);
  unint64_t v128 = (char *)&v127 - v22;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  unint64_t v132 = v9;
  uint64_t v23 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v24 = ~v23;
  uint64_t v25 = a1 + 56;
  uint64_t v26 = -v23;
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  else {
    uint64_t v27 = -1;
  }
  unint64_t v28 = v27 & *(void *)(a1 + 56);
  uint64_t v177 = a1;
  uint64_t v178 = a1 + 56;
  uint64_t v179 = v24;
  uint64_t v172 = v21 + 16;
  uint64_t v147 = v21;
  v175 = (void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v134 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  uint64_t v130 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v131 = (void (**)(uint64_t, uint64_t))(v5 + 8);
  swift_bridgeObjectRetain();
  int64_t v29 = 0;
  unint64_t v127 = 0;
  uint64_t v157 = a2;
  v164 = (char *)(a2 + 56);
  while (1)
  {
    if (v28)
    {
      uint64_t v30 = (v28 - 1) & v28;
      unint64_t v31 = __clz(__rbit64(v28)) | (v29 << 6);
    }
    else
    {
      int64_t v32 = v29 + 1;
      if (__OFADD__(v29, 1)) {
        goto LABEL_123;
      }
      int64_t v33 = (unint64_t)(v24 + 64) >> 6;
      if (v32 >= v33) {
        goto LABEL_111;
      }
      unint64_t v34 = *(void *)(v25 + 8 * v32);
      if (!v34)
      {
        int64_t v35 = v29 + 2;
        if (v29 + 2 >= v33) {
          goto LABEL_111;
        }
        unint64_t v34 = *(void *)(v25 + 8 * v35);
        if (v34) {
          goto LABEL_18;
        }
        int64_t v35 = v29 + 3;
        if (v29 + 3 >= v33) {
          goto LABEL_111;
        }
        unint64_t v34 = *(void *)(v25 + 8 * v35);
        if (v34) {
          goto LABEL_18;
        }
        int64_t v35 = v29 + 4;
        if (v29 + 4 >= v33) {
          goto LABEL_111;
        }
        unint64_t v34 = *(void *)(v25 + 8 * v35);
        if (v34)
        {
LABEL_18:
          int64_t v32 = v35;
        }
        else
        {
          int64_t v32 = v29 + 5;
          if (v29 + 5 >= v33) {
            goto LABEL_111;
          }
          unint64_t v34 = *(void *)(v25 + 8 * v32);
          if (!v34)
          {
            int64_t v118 = v29 + 6;
            do
            {
              if (v33 == v118) {
                goto LABEL_111;
              }
              unint64_t v34 = *(void *)(v25 + 8 * v118++);
            }
            while (!v34);
            int64_t v32 = v118 - 1;
          }
        }
      }
      uint64_t v30 = (v34 - 1) & v34;
      unint64_t v31 = __clz(__rbit64(v34)) + (v32 << 6);
      int64_t v29 = v32;
    }
    uint64_t v36 = *(void *)(a1 + 48) + 88 * v31;
    uint64_t v37 = *(void *)v36;
    uint64_t v158 = *(void *)(v36 + 8);
    uint64_t v38 = *(void *)(v36 + 16);
    uint64_t v154 = *(void *)(v36 + 24);
    uint64_t v39 = *(void *)(v36 + 40);
    uint64_t v156 = *(void *)(v36 + 32);
    uint64_t v40 = *(void *)(v36 + 56);
    uint64_t v146 = *(void *)(v36 + 48);
    double v41 = *(double *)(v36 + 64);
    uint64_t v42 = *(void *)(v36 + 80);
    uint64_t v142 = *(void *)(v36 + 72);
    int64_t v180 = v29;
    unint64_t v181 = v30;
    sub_2409556F8();
    uint64_t v170 = *(void *)(v37 + 16);
    sub_240955708();
    uint64_t v43 = *(void *)(v37 + 16);
    uint64_t v169 = v37;
    uint64_t v159 = v38;
    uint64_t v143 = v42;
    uint64_t v150 = v39;
    uint64_t v145 = v40;
    if (v43)
    {
      uint64_t v44 = v37 + ((*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80));
      uint64_t v45 = *(void *)(v147 + 72);
      uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t))(v147 + 16);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v47 = v175;
      BOOL v48 = v128;
      do
      {
        v46(v48, v44, v16);
        sub_2408921B0(&qword_268C90E70, &qword_268C90E78);
        sub_240954708();
        (*v47)(v48, v16);
        v44 += v45;
        --v43;
      }
      while (v43);
      uint64_t v37 = v169;
      swift_bridgeObjectRelease();
      a2 = v157;
      uint64_t v39 = v150;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    sub_240954868();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_240954868();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24088E9F4((uint64_t)v176, v39);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_240954868();
    swift_bridgeObjectRelease();
    sub_240955738();
    swift_bridgeObjectRetain();
    sub_240954868();
    swift_bridgeObjectRelease();
    uint64_t v49 = sub_240955748();
    uint64_t v50 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v51 = v49 & ~v50;
    uint64_t v52 = v164;
    if ((*(void *)&v164[(v51 >> 3) & 0xFFFFFFFFFFFFFF8] >> v51)) {
      break;
    }
LABEL_6:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v29 = v180;
    unint64_t v28 = v181;
    a1 = v177;
    uint64_t v25 = v178;
    uint64_t v24 = v179;
  }
  uint64_t v53 = ~v50;
  uint64_t v54 = v174;
  uint64_t v55 = v170;
  uint64_t v151 = ~v50;
LABEL_30:
  uint64_t v56 = *(void *)(a2 + 48) + 88 * v51;
  uint64_t v57 = *(void *)v56;
  if (*(void *)(*(void *)v56 + 16) != v55) {
    goto LABEL_29;
  }
  unint64_t v163 = v51;
  uint64_t v58 = *(void *)(v56 + 16);
  uint64_t v161 = *(void *)(v56 + 8);
  uint64_t v59 = *(void *)(v56 + 32);
  uint64_t v160 = *(void *)(v56 + 24);
  a2 = *(void *)(v56 + 40);
  uint64_t v155 = *(void *)(v56 + 48);
  uint64_t v60 = *(void *)(v56 + 56);
  double v61 = *(double *)(v56 + 64);
  uint64_t v62 = *(void *)(v56 + 80);
  uint64_t v152 = *(void *)(v56 + 72);
  uint64_t v168 = v59;
  uint64_t v173 = v57;
  uint64_t v165 = v58;
  uint64_t v166 = a2;
  uint64_t v162 = v60;
  uint64_t v167 = v62;
  if (v55 && v57 != v37)
  {
    unint64_t v63 = (*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80);
    uint64_t v64 = *(void *)(v147 + 72);
    uint64_t v65 = *(void (**)(char *, unint64_t, uint64_t))(v147 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v66 = 0;
    while (1)
    {
      v65(v54, v173 + v63, v16);
      if (v66 >= *(void *)(v37 + 16)) {
        break;
      }
      unint64_t v67 = v37 + v63;
      uint64_t v68 = v171;
      v65(v171, v67, v16);
      sub_2408921B0(&qword_268C90E98, &qword_268C90EA0);
      a2 = (uint64_t)v54;
      char v69 = sub_240954778();
      uint64_t v70 = *v175;
      (*v175)(v68, v16);
      v70((char *)a2, v16);
      if ((v69 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v54 = v174;
        a2 = v157;
        uint64_t v52 = v164;
        uint64_t v37 = v169;
        goto LABEL_28;
      }
      ++v66;
      v63 += v64;
      uint64_t v54 = v174;
      uint64_t v37 = v169;
      if (v170 == v66) {
        goto LABEL_39;
      }
    }
    __break(1u);
LABEL_111:
    sub_24084072C();
    return a2;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_39:
  BOOL v71 = v161 == v158 && v165 == v159;
  uint64_t v52 = v164;
  if (!v71 && (sub_240955618() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a2 = v157;
    goto LABEL_28;
  }
  BOOL v72 = v160 == v154 && v168 == v156;
  a2 = v157;
  if (!v72 && (sub_240955618() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  uint64_t v73 = *(void *)(v166 + 16);
  if (v73 != *(void *)(v150 + 16)) {
    goto LABEL_82;
  }
  if (v73 && v166 != v150)
  {
    unint64_t v74 = 0;
    unint64_t v75 = (*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80);
    unint64_t v141 = v166 + v75;
    unint64_t v139 = v150 + v75;
    uint64_t v140 = *(void *)(v129 + 72);
    uint64_t v137 = v73;
    while (1)
    {
      uint64_t v76 = v140 * v74;
      uint64_t v77 = v149;
      sub_2408A809C(v141 + v140 * v74, (uint64_t)v149, type metadata accessor for SharedConceptCodedValue);
      uint64_t v52 = v164;
      if (v74 >= *(void *)(v150 + 16)) {
        goto LABEL_122;
      }
      unint64_t v144 = v74;
      uint64_t v78 = v139 + v76;
      uint64_t v79 = v153;
      sub_2408A809C(v78, (uint64_t)v153, type metadata accessor for SharedConceptCodedValue);
      uint64_t v80 = *v79;
      uint64_t v161 = *v77;
      uint64_t v81 = *(void *)(v161 + 16);
      if (v81 != *(void *)(v80 + 16)) {
        goto LABEL_97;
      }
      uint64_t v82 = v174;
      if (v81 && v161 != v80)
      {
        unint64_t v83 = 0;
        unint64_t v84 = (*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80);
        uint64_t v160 = *(void *)(v147 + 72);
        id v85 = *(void (**)(char *, unint64_t, uint64_t))(v147 + 16);
        while (1)
        {
          v85(v82, v161 + v84, v16);
          if (v83 >= *(void *)(v80 + 16)) {
            break;
          }
          uint64_t v86 = v171;
          v85(v171, v80 + v84, v16);
          sub_2408921B0(&qword_268C90E98, &qword_268C90EA0);
          char v87 = v82;
          char v88 = sub_240954778();
          BOOL v89 = *v175;
          (*v175)(v86, v16);
          v89(v87, v16);
          if ((v88 & 1) == 0)
          {
            a2 = v157;
            uint64_t v52 = v164;
            uint64_t v37 = v169;
            goto LABEL_97;
          }
          ++v83;
          v84 += v160;
          uint64_t v82 = v174;
          if (v81 == v83) {
            goto LABEL_61;
          }
        }
        __break(1u);
LABEL_122:
        __break(1u);
LABEL_123:
        __break(1u);
      }
LABEL_61:
      uint64_t v90 = v148[5];
      uint64_t v91 = (uint64_t)v153 + v90;
      uint64_t v92 = v138;
      uint64_t v93 = v138 + *(int *)(v135 + 48);
      sub_2408A809C((uint64_t)v149 + v90, v138, (uint64_t (*)(void))sub_240851D44);
      sub_2408A809C(v91, v93, (uint64_t (*)(void))sub_240851D44);
      int64_t v94 = *v134;
      uint64_t v95 = v136;
      int v96 = (*v134)(v92, 1, v136);
      uint64_t v52 = v164;
      if (v96 == 1)
      {
        int v97 = v94(v93, 1, v95);
        a2 = v157;
        uint64_t v37 = v169;
        if (v97 != 1) {
          goto LABEL_102;
        }
        sub_240919FC8(v138, (uint64_t (*)(void))sub_240851D44);
      }
      else
      {
        uint64_t v98 = (uint64_t)v132;
        sub_2408A809C(v92, (uint64_t)v132, (uint64_t (*)(void))sub_240851D44);
        int v99 = v94(v93, 1, v95);
        a2 = v157;
        uint64_t v37 = v169;
        if (v99 == 1)
        {
          (*v131)(v98, v95);
LABEL_102:
          sub_240919FC8(v138, (uint64_t (*)(void))sub_24089214C);
LABEL_97:
          sub_240919FC8((uint64_t)v153, type metadata accessor for SharedConceptCodedValue);
          sub_240919FC8((uint64_t)v149, type metadata accessor for SharedConceptCodedValue);
LABEL_98:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v54 = v174;
LABEL_28:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v55 = v170;
          unint64_t v51 = v163;
          uint64_t v53 = v151;
LABEL_29:
          unint64_t v51 = (v51 + 1) & v53;
          if (((*(void *)&v52[(v51 >> 3) & 0xFFFFFFFFFFFFFF8] >> v51) & 1) == 0) {
            goto LABEL_6;
          }
          goto LABEL_30;
        }
        uint64_t v100 = v133;
        (*v130)(v133, v93, v95);
        sub_24091A028();
        LODWORD(v161) = sub_240954778();
        uint64_t v101 = *v131;
        uint64_t v102 = v100;
        uint64_t v52 = v164;
        (*v131)((uint64_t)v102, v95);
        v101(v98, v95);
        sub_240919FC8(v92, (uint64_t (*)(void))sub_240851D44);
        if ((v161 & 1) == 0) {
          goto LABEL_97;
        }
      }
      uint64_t v103 = v148[6];
      uint64_t v104 = (uint64_t)v149;
      uint64_t v105 = (uint64_t *)((char *)v149 + v103);
      uint64_t v106 = *(uint64_t *)((char *)v149 + v103 + 8);
      uint64_t v107 = (uint64_t *)((char *)v153 + v103);
      uint64_t v108 = v107[1];
      if (v106)
      {
        if (!v108) {
          goto LABEL_97;
        }
        if (*v105 != *v107 || v106 != v108)
        {
          char v109 = sub_240955618();
          uint64_t v104 = (uint64_t)v149;
          if ((v109 & 1) == 0) {
            goto LABEL_97;
          }
        }
      }
      else if (v108)
      {
        goto LABEL_97;
      }
      uint64_t v110 = v148[7];
      unint64_t v111 = (void *)(v104 + v110);
      uint64_t v112 = *(void *)(v104 + v110 + 8);
      uint64_t v113 = (uint64_t *)((char *)v153 + v110);
      uint64_t v114 = v113[1];
      char v115 = v114 == 0;
      if (!v112) {
        goto LABEL_79;
      }
      if (!v114) {
        goto LABEL_97;
      }
      if (*v111 != *v113 || v112 != v114) {
        break;
      }
      sub_240919FC8((uint64_t)v153, type metadata accessor for SharedConceptCodedValue);
      sub_240919FC8((uint64_t)v149, type metadata accessor for SharedConceptCodedValue);
LABEL_80:
      unint64_t v74 = v144 + 1;
      if (v144 + 1 == v137) {
        goto LABEL_86;
      }
    }
    char v115 = sub_240955618();
LABEL_79:
    sub_240919FC8((uint64_t)v153, type metadata accessor for SharedConceptCodedValue);
    sub_240919FC8((uint64_t)v149, type metadata accessor for SharedConceptCodedValue);
    if ((v115 & 1) == 0) {
      goto LABEL_98;
    }
    goto LABEL_80;
  }
LABEL_86:
  BOOL v116 = v155 == v146 && v162 == v145;
  if (!v116 && (sub_240955618() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v54 = v174;
    goto LABEL_83;
  }
  uint64_t v54 = v174;
  if (v61 != v41)
  {
LABEL_82:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_83:
    uint64_t v52 = v164;
    goto LABEL_28;
  }
  if (v152 == v142 && v167 == v143)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v117 = sub_240955618();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v117 & 1) == 0)
    {
      uint64_t v54 = v174;
      uint64_t v55 = v170;
      unint64_t v51 = v163;
      uint64_t v53 = v151;
      uint64_t v52 = v164;
      goto LABEL_29;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
  char v120 = *(unsigned char *)(a2 + 32);
  unint64_t v121 = (unint64_t)((1 << v120) + 63) >> 6;
  uint64_t v122 = v164;
  if ((v120 & 0x3Fu) > 0xD)
  {
    uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if (!isStackAllocationSafe)
    {
      uint64_t v123 = (char *)swift_slowAlloc();
      memcpy(v123, v122, 8 * v121);
      uint64_t v124 = v127;
      unint64_t v125 = sub_240916BEC((unint64_t *)v123, v121, a2, v163, &v177);
      swift_release();
      if (v124) {
        goto LABEL_125;
      }
      sub_24084072C();
      MEMORY[0x2456021C0](v123, -1, -1);
      return v125;
    }
  }
  MEMORY[0x270FA5388](isStackAllocationSafe);
  uint64_t v123 = (char *)&v127 - ((8 * v121 + 15) & 0x3FFFFFFFFFFFFFF0);
  memcpy(v123, v122, 8 * v121);
  uint64_t v124 = v127;
  unint64_t v125 = sub_240916BEC((unint64_t *)v123, v121, a2, v163, &v177);
  swift_release();
  if (!v124)
  {
    sub_24084072C();
    return v125;
  }
  swift_willThrow();

  __break(1u);
LABEL_125:

  uint64_t result = MEMORY[0x2456021C0](v123, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_240916308(uint64_t a1, uint64_t a2)
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_2409526C8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  int64_t v35 = (char *)&v30 - v9;
  if (*(void *)(a2 + 16))
  {
    uint64_t v36 = a1;
    unint64_t v10 = *(void *)(a1 + 16);
    swift_bridgeObjectRetain();
    if (v10)
    {
      unint64_t v11 = 0;
      uint64_t v33 = v5 + 16;
      unint64_t v34 = (char *)(a2 + 56);
      uint64_t v12 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v31 = v5;
      uint64_t v32 = (v5 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      while (1)
      {
        if (v11 >= v10) {
          __break(1u);
        }
        uint64_t v13 = *(void *)(v5 + 72);
        unint64_t v14 = a1
            + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
            + v13 * v11;
        unint64_t v37 = v11 + 1;
        uint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
        v15(v35, v14, v4);
        sub_2408204C0(&qword_26AFD03E0, MEMORY[0x263F45F38]);
        uint64_t v16 = sub_2409546F8();
        uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v18 = v16 & ~v17;
        if ((*(void *)&v34[(v18 >> 3) & 0xFFFFFFFFFFFFFF8] >> v18)) {
          break;
        }
        uint64_t v22 = *v12;
LABEL_11:
        v22(v35, v4);
        a1 = v36;
        unint64_t v11 = v37;
        unint64_t v10 = *(void *)(v36 + 16);
        if (v37 == v10) {
          goto LABEL_12;
        }
      }
      uint64_t v19 = a2;
      uint64_t v20 = ~v17;
      while (1)
      {
        v15(v8, *(void *)(v19 + 48) + v18 * v13, v4);
        sub_2408204C0(&qword_26AFD03E8, MEMORY[0x263F45F38]);
        char v21 = sub_240954778();
        uint64_t v22 = *v12;
        (*v12)(v8, v4);
        if (v21) {
          break;
        }
        unint64_t v18 = (v18 + 1) & v20;
        if (((*(void *)&v34[(v18 >> 3) & 0xFFFFFFFFFFFFFF8] >> v18) & 1) == 0)
        {
          a2 = v19;
          uint64_t v5 = v31;
          goto LABEL_11;
        }
      }
      uint64_t isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v22)(v35, v4);
      char v24 = *(unsigned char *)(v19 + 32);
      unint64_t v25 = (unint64_t)((1 << v24) + 63) >> 6;
      size_t v26 = 8 * v25;
      if ((v24 & 0x3Fu) <= 0xD
        || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
      {
        MEMORY[0x270FA5388](isStackAllocationSafe);
        memcpy((char *)&v30 - ((v26 + 15) & 0x3FFFFFFFFFFFFFF0), v34, v26);
        uint64_t v27 = sub_240918038((unint64_t *)((char *)&v30 - ((v26 + 15) & 0x3FFFFFFFFFFFFFF0)), v25, v19, v18, &v36);
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v28 = (void *)swift_slowAlloc();
        memcpy(v28, v34, v26);
        uint64_t v27 = sub_240918038((unint64_t *)v28, v25, v19, v18, &v36);
        swift_release();
        swift_bridgeObjectRelease();
        MEMORY[0x2456021C0](v28, -1, -1);
      }
      return v27;
    }
    else
    {
LABEL_12:
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  return a2;
}

uint64_t sub_24091677C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v43 = *MEMORY[0x263EF8340];
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v37 = a1 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v35 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v36 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36) {
          goto LABEL_47;
        }
        unint64_t v13 = *(void *)(v37 + 8 * v12);
        int64_t v14 = v9 + 1;
        if (!v13)
        {
          int64_t v14 = v9 + 2;
          if (v9 + 2 >= v36) {
            goto LABEL_47;
          }
          unint64_t v13 = *(void *)(v37 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 3;
            if (v9 + 3 >= v36) {
              goto LABEL_47;
            }
            unint64_t v13 = *(void *)(v37 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v9 + 4;
              if (v9 + 4 >= v36) {
                goto LABEL_47;
              }
              unint64_t v13 = *(void *)(v37 + 8 * v14);
              if (!v13)
              {
                int64_t v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_24084072C();
                  return v2;
                }
                unint64_t v13 = *(void *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      break;
                    }
                    if (v14 >= v36) {
                      goto LABEL_47;
                    }
                    unint64_t v13 = *(void *)(v37 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_24;
                    }
                  }
LABEL_49:
                  __break(1u);
                }
                int64_t v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        unint64_t v7 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
        int64_t v9 = v14;
      }
      uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      sub_2409556F8();
      swift_bridgeObjectRetain();
      sub_240954868();
      uint64_t v19 = sub_240955748();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_6:
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = *(void *)(v2 + 48);
    uint64_t v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_240955618() & 1) != 0)
    {
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_6;
        }
        size_t v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_240955618() & 1) == 0);
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    char v29 = *(unsigned char *)(v2 + 32);
    unint64_t v30 = (unint64_t)((1 << v29) + 63) >> 6;
    size_t v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      MEMORY[0x270FA5388](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_240918430((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_24084072C();
    }
    else
    {
      uint64_t v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_240918430((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_24084072C();
      MEMORY[0x2456021C0](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
}

unint64_t sub_240916BEC(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  unint64_t v141 = a5;
  v132[0] = a2;
  sub_24082EF28(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
  uint64_t v144 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v138 = (char *)v132 - v10;
  sub_240851D44();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v140 = (uint64_t)v132 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24089214C();
  uint64_t v143 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v146 = (uint64_t)v132 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = (int *)type metadata accessor for SharedConceptCodedValue(0);
  uint64_t v136 = *((void *)v156 - 1);
  uint64_t v15 = MEMORY[0x270FA5388](v156);
  uint64_t v162 = (uint64_t *)((char *)v132 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v15);
  uint64_t v158 = (uint64_t *)((char *)v132 - v17);
  sub_24082EF28(0, (unint64_t *)&qword_268C90E10, &qword_268C90E18);
  uint64_t v186 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  unint64_t v181 = (char *)v132 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  v184 = (char *)v132 - v22;
  unint64_t result = MEMORY[0x270FA5388](v21);
  uint64_t v24 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v25 = *(void *)(a3 + 16);
  uint64_t v26 = *(unint64_t *)((char *)a1 + v24) & ((-1 << a4) - 1);
  uint64_t v134 = a1;
  *(unint64_t *)((char *)a1 + v24) = v26;
  uint64_t v27 = v25 - 1;
  uint64_t v29 = v28 + 16;
  uint64_t v154 = v28;
  uint64_t v182 = (void (**)(char *, uint64_t))(v28 + 8);
  uint64_t v171 = a3 + 56;
  uint64_t v142 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  uint64_t v137 = (void (**)(char *, uint64_t, uint64_t))(v9 + 32);
  unint64_t v139 = (void (**)(uint64_t, uint64_t))(v9 + 8);
  uint64_t v172 = a3;
  uint64_t v183 = v28 + 16;
  uint64_t v135 = (char *)v132 - v30;
LABEL_2:
  uint64_t v133 = v27;
  while (1)
  {
LABEL_4:
    size_t v31 = v141;
    int64_t v33 = v141[3];
    unint64_t v32 = v141[4];
    if (v32)
    {
      uint64_t v34 = (v32 - 1) & v32;
      unint64_t v35 = __clz(__rbit64(v32)) | (v33 << 6);
      goto LABEL_16;
    }
    int64_t v36 = v33 + 1;
    if (__OFADD__(v33, 1))
    {
      __break(1u);
LABEL_119:
      __break(1u);
      return result;
    }
    int64_t v37 = (unint64_t)(v141[2] + 64) >> 6;
    if (v36 >= v37) {
      goto LABEL_112;
    }
    uint64_t v38 = v141[1];
    unint64_t v39 = *(void *)(v38 + 8 * v36);
    if (!v39)
    {
      int64_t v40 = v33 + 2;
      if (v33 + 2 >= v37) {
        goto LABEL_113;
      }
      unint64_t v39 = *(void *)(v38 + 8 * v40);
      if (!v39)
      {
        int64_t v41 = v33 + 3;
        if (v33 + 3 >= v37) {
          goto LABEL_115;
        }
        unint64_t v39 = *(void *)(v38 + 8 * v41);
        if (v39)
        {
          int64_t v36 = v33 + 3;
          goto LABEL_15;
        }
        int64_t v40 = v33 + 4;
        if (v33 + 4 >= v37)
        {
LABEL_117:
          int64_t v36 = v41;
          goto LABEL_113;
        }
        unint64_t v39 = *(void *)(v38 + 8 * v40);
        if (!v39)
        {
          int64_t v36 = v33 + 5;
          if (v33 + 5 >= v37) {
            goto LABEL_115;
          }
          unint64_t v39 = *(void *)(v38 + 8 * v36);
          if (!v39)
          {
            int64_t v36 = v37 - 1;
            int64_t v127 = v33 + 6;
            do
            {
              if (v37 == v127) {
                goto LABEL_113;
              }
              unint64_t v39 = *(void *)(v38 + 8 * v127++);
            }
            while (!v39);
            int64_t v36 = v127 - 1;
          }
          goto LABEL_15;
        }
      }
      int64_t v36 = v40;
    }
LABEL_15:
    uint64_t v34 = (v39 - 1) & v39;
    unint64_t v35 = __clz(__rbit64(v39)) + (v36 << 6);
    int64_t v33 = v36;
LABEL_16:
    uint64_t v42 = *(void *)(*v141 + 48) + 88 * v35;
    uint64_t v43 = *(void *)v42;
    uint64_t v166 = *(void *)(v42 + 8);
    uint64_t v44 = *(void *)(v42 + 16);
    uint64_t v164 = *(void *)(v42 + 24);
    uint64_t v45 = *(void *)(v42 + 32);
    uint64_t v163 = *(void *)(v42 + 40);
    uint64_t v46 = *(void *)(v42 + 56);
    uint64_t v152 = *(void *)(v42 + 48);
    double v47 = *(double *)(v42 + 64);
    uint64_t v48 = *(void *)(v42 + 80);
    uint64_t v151 = *(void *)(v42 + 72);
    v141[3] = v33;
    v31[4] = v34;
    sub_2409556F8();
    uint64_t v180 = *(void *)(v43 + 16);
    sub_240955708();
    uint64_t v49 = *(void *)(v43 + 16);
    uint64_t v179 = v43;
    uint64_t v161 = v44;
    uint64_t v150 = v48;
    uint64_t v157 = v45;
    uint64_t v155 = v46;
    if (v49)
    {
      uint64_t v50 = v43 + ((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80));
      uint64_t v51 = *(void *)(v154 + 72);
      uint64_t v52 = v29;
      uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v154 + 16);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v54 = v182;
      uint64_t v55 = v135;
      do
      {
        uint64_t v56 = v186;
        v53(v55, v50, v186);
        sub_2408921B0(&qword_268C90E70, &qword_268C90E78);
        sub_240954708();
        (*v54)(v55, v56);
        v50 += v51;
        --v49;
      }
      while (v49);
      uint64_t v43 = v179;
      swift_bridgeObjectRelease();
      uint64_t v29 = v52;
      uint64_t v57 = v163;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v57 = v163;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    sub_240954868();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_240954868();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24088E9F4((uint64_t)v185, v57);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_240954868();
    swift_bridgeObjectRelease();
    sub_240955738();
    swift_bridgeObjectRetain();
    sub_240954868();
    swift_bridgeObjectRelease();
    uint64_t v58 = sub_240955748();
    uint64_t v59 = -1 << *(unsigned char *)(v172 + 32);
    unint64_t v60 = v58 & ~v59;
    if ((*(void *)(v171 + ((v60 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v60)) {
      break;
    }
LABEL_3:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t result = swift_bridgeObjectRelease();
  }
  uint64_t v61 = ~v59;
  uint64_t v62 = v184;
  uint64_t v63 = v180;
  uint64_t v159 = ~v59;
  while (1)
  {
    uint64_t v64 = *(void *)(v172 + 48) + 88 * v60;
    uint64_t v65 = *(void *)v64;
    if (*(void *)(*(void *)v64 + 16) != v63) {
      goto LABEL_26;
    }
    unint64_t v170 = v60;
    uint64_t v66 = *(void *)(v64 + 16);
    uint64_t v168 = *(void *)(v64 + 8);
    uint64_t v67 = *(void *)(v64 + 32);
    unint64_t v167 = *(void *)(v64 + 24);
    uint64_t v68 = *(void *)(v64 + 40);
    uint64_t v165 = *(void *)(v64 + 48);
    uint64_t v69 = *(void *)(v64 + 56);
    double v70 = *(double *)(v64 + 64);
    uint64_t v72 = *(void *)(v64 + 72);
    uint64_t v71 = *(void *)(v64 + 80);
    uint64_t v160 = v72;
    uint64_t v176 = v71;
    uint64_t v174 = v66;
    uint64_t v175 = v67;
    uint64_t v173 = v68;
    uint64_t v169 = v69;
    if (v63 && v65 != v43)
    {
      unint64_t v73 = (*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80);
      uint64_t v74 = *(void *)(v154 + 16);
      uint64_t v177 = *(void *)(v154 + 72);
      uint64_t v178 = v74;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v75 = 0;
      while (1)
      {
        uint64_t v76 = (void (*)(char *, unint64_t, uint64_t))v178;
        ((void (*)(char *, unint64_t, uint64_t))v178)(v62, v65 + v73, v186);
        if (v75 >= *(void *)(v43 + 16)) {
          break;
        }
        uint64_t v77 = v65;
        uint64_t v78 = v76;
        uint64_t v79 = v186;
        uint64_t v80 = v181;
        v78(v181, v43 + v73, v186);
        sub_2408921B0(&qword_268C90E98, &qword_268C90EA0);
        char v81 = sub_240954778();
        uint64_t v82 = *v182;
        (*v182)(v80, v79);
        v82(v62, v79);
        if ((v81 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v29 = v183;
          uint64_t v62 = v184;
          uint64_t v43 = v179;
          uint64_t v63 = v180;
          goto LABEL_24;
        }
        ++v75;
        v73 += v177;
        uint64_t v43 = v179;
        uint64_t v63 = v180;
        uint64_t v29 = v183;
        uint64_t v62 = v184;
        uint64_t v65 = v77;
        if (v180 == v75) {
          goto LABEL_36;
        }
      }
      __break(1u);
LABEL_112:
      int64_t v36 = v33;
      goto LABEL_113;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_36:
    BOOL v83 = v168 == v166 && v174 == v161;
    if (!v83 && (sub_240955618() & 1) == 0
      || (v167 == v164 ? (BOOL v84 = v175 == v157) : (BOOL v84 = 0),
          !v84 && (sub_240955618() & 1) == 0 || (uint64_t v85 = *(void *)(v173 + 16), v85 != *(void *)(v163 + 16))))
    {
LABEL_23:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
    if (v85 && v173 != v163) {
      break;
    }
LABEL_78:
    BOOL v125 = v165 == v152 && v169 == v155;
    if (v125 || (sub_240955618() & 1) != 0)
    {
      uint64_t v62 = v184;
      uint64_t v63 = v180;
      if (v70 != v47) {
        goto LABEL_23;
      }
      uint64_t v153 = v65;
      if (v160 == v151 && v176 == v150)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_107:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t result = swift_bridgeObjectRelease();
        uint64_t v128 = (v170 >> 3) & 0x1FFFFFFFFFFFFFF8;
        uint64_t v129 = 1 << v170;
        uint64_t v130 = *(unint64_t *)((char *)v134 + v128);
        *(unint64_t *)((char *)v134 + v128) = v130 & ~(1 << v170);
        if ((v130 & v129) == 0) {
          goto LABEL_4;
        }
        uint64_t v27 = v133 - 1;
        if (__OFSUB__(v133, 1)) {
          goto LABEL_119;
        }
        if (v133 == 1) {
          return MEMORY[0x263F8EE88];
        }
        goto LABEL_2;
      }
      char v126 = sub_240955618();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v126) {
        goto LABEL_107;
      }
      uint64_t v62 = v184;
      uint64_t v63 = v180;
    }
    else
    {
LABEL_97:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v62 = v184;
      uint64_t v63 = v180;
LABEL_24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    unint64_t v60 = v170;
    uint64_t v61 = v159;
LABEL_26:
    unint64_t v60 = (v60 + 1) & v61;
    if (((*(void *)(v171 + ((v60 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v60) & 1) == 0) {
      goto LABEL_3;
    }
  }
  unint64_t v86 = 0;
  unint64_t v87 = (*(unsigned __int8 *)(v136 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v136 + 80);
  uint64_t v149 = v173 + v87;
  unint64_t v147 = v163 + v87;
  uint64_t v148 = *(void *)(v136 + 72);
  uint64_t v153 = v65;
  uint64_t v145 = v85;
  while (1)
  {
    uint64_t v88 = v148 * v86;
    BOOL v89 = v158;
    sub_2408A809C(v149 + v148 * v86, (uint64_t)v158, type metadata accessor for SharedConceptCodedValue);
    if (v86 >= *(void *)(v163 + 16))
    {
      __break(1u);
      goto LABEL_117;
    }
    unint64_t v167 = v86;
    uint64_t v90 = v162;
    sub_2408A809C(v147 + v88, (uint64_t)v162, type metadata accessor for SharedConceptCodedValue);
    uint64_t v91 = *v90;
    uint64_t v178 = *v89;
    uint64_t v92 = *(void *)(v178 + 16);
    if (v92 != *(void *)(v91 + 16)) {
      goto LABEL_95;
    }
    uint64_t v93 = v184;
    if (v92)
    {
      if (v178 != v91) {
        break;
      }
    }
LABEL_58:
    uint64_t v101 = v156[5];
    uint64_t v102 = (uint64_t)v162 + v101;
    uint64_t v103 = v146;
    uint64_t v104 = v146 + *(int *)(v143 + 48);
    sub_2408A809C((uint64_t)v158 + v101, v146, (uint64_t (*)(void))sub_240851D44);
    sub_2408A809C(v102, v104, (uint64_t (*)(void))sub_240851D44);
    uint64_t v105 = *v142;
    uint64_t v106 = v144;
    if ((*v142)(v103, 1, v144) == 1)
    {
      if (v105(v104, 1, v106) != 1) {
        goto LABEL_93;
      }
      sub_240919FC8(v146, (uint64_t (*)(void))sub_240851D44);
      uint64_t v29 = v183;
      uint64_t v43 = v179;
    }
    else
    {
      uint64_t v107 = v140;
      sub_2408A809C(v103, v140, (uint64_t (*)(void))sub_240851D44);
      if (v105(v104, 1, v106) == 1)
      {
        (*v139)(v107, v106);
LABEL_93:
        sub_240919FC8(v146, (uint64_t (*)(void))sub_24089214C);
LABEL_94:
        uint64_t v29 = v183;
LABEL_95:
        uint64_t v43 = v179;
LABEL_96:
        sub_240919FC8((uint64_t)v162, type metadata accessor for SharedConceptCodedValue);
        sub_240919FC8((uint64_t)v158, type metadata accessor for SharedConceptCodedValue);
        goto LABEL_97;
      }
      uint64_t v108 = v138;
      (*v137)(v138, v104, v106);
      sub_24091A028();
      char v109 = sub_240954778();
      uint64_t v110 = *v139;
      (*v139)((uint64_t)v108, v106);
      v110(v107, v106);
      sub_240919FC8(v103, (uint64_t (*)(void))sub_240851D44);
      uint64_t v29 = v183;
      uint64_t v43 = v179;
      if ((v109 & 1) == 0) {
        goto LABEL_96;
      }
    }
    uint64_t v111 = v156[6];
    uint64_t v112 = (uint64_t)v158;
    uint64_t v113 = (uint64_t *)((char *)v158 + v111);
    uint64_t v114 = *(uint64_t *)((char *)v158 + v111 + 8);
    char v115 = (uint64_t *)((char *)v162 + v111);
    uint64_t v116 = v115[1];
    if (v114)
    {
      uint64_t v65 = v153;
      unint64_t v117 = v167;
      if (!v116) {
        goto LABEL_96;
      }
      if (*v113 != *v115 || v114 != v116)
      {
        char v118 = sub_240955618();
        uint64_t v112 = (uint64_t)v158;
        if ((v118 & 1) == 0) {
          goto LABEL_96;
        }
      }
    }
    else
    {
      uint64_t v65 = v153;
      unint64_t v117 = v167;
      if (v116) {
        goto LABEL_96;
      }
    }
    uint64_t v119 = v156[7];
    char v120 = (void *)(v112 + v119);
    uint64_t v121 = *(void *)(v112 + v119 + 8);
    uint64_t v122 = (uint64_t *)((char *)v162 + v119);
    uint64_t v123 = v122[1];
    char v124 = v123 == 0;
    if (!v121) {
      goto LABEL_76;
    }
    if (!v123) {
      goto LABEL_96;
    }
    if (*v120 != *v122 || v121 != v123)
    {
      char v124 = sub_240955618();
LABEL_76:
      sub_240919FC8((uint64_t)v162, type metadata accessor for SharedConceptCodedValue);
      sub_240919FC8((uint64_t)v158, type metadata accessor for SharedConceptCodedValue);
      if ((v124 & 1) == 0) {
        goto LABEL_97;
      }
      goto LABEL_77;
    }
    sub_240919FC8((uint64_t)v162, type metadata accessor for SharedConceptCodedValue);
    sub_240919FC8((uint64_t)v158, type metadata accessor for SharedConceptCodedValue);
LABEL_77:
    unint64_t v86 = v117 + 1;
    if (v86 == v145) {
      goto LABEL_78;
    }
  }
  unint64_t v94 = 0;
  unint64_t v95 = (*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80);
  uint64_t v177 = *(void *)(v154 + 72);
  int v96 = *(void (**)(char *, unint64_t, uint64_t))(v154 + 16);
  uint64_t v168 = v91;
  while (1)
  {
    v96(v93, v178 + v95, v186);
    if (v94 >= *(void *)(v91 + 16)) {
      break;
    }
    int v97 = v181;
    uint64_t v98 = v186;
    v96(v181, v91 + v95, v186);
    sub_2408921B0(&qword_268C90E98, &qword_268C90EA0);
    char v99 = sub_240954778();
    uint64_t v100 = *v182;
    (*v182)(v97, v98);
    v100(v184, v98);
    if ((v99 & 1) == 0) {
      goto LABEL_94;
    }
    ++v94;
    v95 += v177;
    uint64_t v93 = v184;
    uint64_t v91 = v168;
    if (v92 == v94) {
      goto LABEL_58;
    }
  }
  __break(1u);
LABEL_115:
  int64_t v36 = v40;
LABEL_113:
  v31[3] = v36;
  v31[4] = 0;
  uint64_t v131 = v172;
  swift_retain();
  return sub_240918728(v134, v132[0], v133, v131);
}

uint64_t sub_240918038(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v10 = sub_2409526C8();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t result = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v44 - v18;
  uint64_t v20 = *(void *)(a3 + 16);
  uint64_t v21 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v22 = *(unint64_t *)((char *)a1 + v21);
  uint64_t v45 = a1;
  *(unint64_t *)((char *)a1 + v21) = v22 & ((-1 << a4) - 1);
  uint64_t v23 = v20 - 1;
  uint64_t v24 = *a5;
  unint64_t v25 = a5[1];
  unint64_t v26 = *(void *)(*a5 + 16);
  uint64_t v44 = a2;
  uint64_t v46 = v23;
  if (v25 == v26)
  {
    uint64_t v27 = a3;
LABEL_3:
    swift_retain();
    return sub_240918D28(v45, v44, v46, v27);
  }
  else
  {
    uint64_t v55 = v19;
    uint64_t v54 = v16 + 16;
    uint64_t v49 = v16 + 32;
    uint64_t v50 = v17;
    uint64_t v51 = v16;
    uint64_t v52 = a3 + 56;
    uint64_t v28 = (void (**)(char *, uint64_t))(v16 + 8);
    uint64_t v27 = a3;
    uint64_t v29 = a5;
    double v47 = a5;
    while (v25 < v26)
    {
      uint64_t v32 = v50;
      uint64_t v31 = v51;
      uint64_t v33 = *(unsigned __int8 *)(v51 + 80);
      uint64_t v53 = *(void *)(v51 + 72);
      uint64_t v34 = *(void (**)(uint64_t, unint64_t, uint64_t))(v51 + 16);
      v34(v50, v24 + ((v33 + 32) & ~v33) + v53 * v25, v10);
      v29[1] = v25 + 1;
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v55, v32, v10);
      sub_2408204C0(&qword_26AFD03E0, MEMORY[0x263F45F38]);
      uint64_t v35 = sub_2409546F8();
      uint64_t v36 = -1 << *(unsigned char *)(v27 + 32);
      unint64_t v37 = v35 & ~v36;
      if ((*(void *)(v52 + ((v37 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v37))
      {
        uint64_t v48 = (unint64_t)v28 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        uint64_t v38 = v27;
        uint64_t v39 = ~v36;
        while (1)
        {
          v34((uint64_t)v13, *(void *)(v38 + 48) + v37 * v53, v10);
          sub_2408204C0(&qword_26AFD03E8, MEMORY[0x263F45F38]);
          char v40 = sub_240954778();
          uint64_t v30 = *v28;
          (*v28)(v13, v10);
          if (v40) {
            break;
          }
          unint64_t v37 = (v37 + 1) & v39;
          if (((*(void *)(v52 + ((v37 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v37) & 1) == 0)
          {
            uint64_t v27 = v38;
            uint64_t v29 = v47;
            goto LABEL_7;
          }
        }
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v30)(v55, v10);
        uint64_t v41 = (v37 >> 3) & 0x1FFFFFFFFFFFFFF8;
        uint64_t v42 = *(unint64_t *)((char *)v45 + v41);
        *(unint64_t *)((char *)v45 + v41) = v42 & ~(1 << v37);
        if ((v42 & (1 << v37)) != 0)
        {
          uint64_t v43 = v46 - 1;
          if (__OFSUB__(v46, 1)) {
            goto LABEL_21;
          }
          uint64_t v27 = v38;
          uint64_t v29 = v47;
          --v46;
          if (!v43) {
            return MEMORY[0x263F8EE88];
          }
        }
        else
        {
          uint64_t v27 = v38;
          uint64_t v29 = v47;
        }
      }
      else
      {
        uint64_t v30 = *v28;
LABEL_7:
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v30)(v55, v10);
      }
      uint64_t v24 = *v29;
      unint64_t v25 = v29[1];
      unint64_t v26 = *(void *)(*v29 + 16);
      if (v25 == v26) {
        goto LABEL_3;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
  }
  return result;
}

uint64_t sub_240918430(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v39 = (unint64_t *)result;
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v40 = a3 + 56;
  while (2)
  {
    uint64_t v38 = v8;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v10 = a5[4];
        if (v10)
        {
          uint64_t v11 = (v10 - 1) & v10;
          unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_16;
        }
        int64_t v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
        int64_t v15 = a5[3];
        if (v13 >= v14) {
          goto LABEL_45;
        }
        uint64_t v16 = a5[1];
        unint64_t v17 = *(void *)(v16 + 8 * v13);
        if (!v17)
        {
          int64_t v18 = v9 + 2;
          int64_t v15 = v9 + 1;
          if (v9 + 2 >= v14) {
            goto LABEL_45;
          }
          unint64_t v17 = *(void *)(v16 + 8 * v18);
          if (!v17)
          {
            int64_t v15 = v9 + 2;
            if (v9 + 3 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              int64_t v13 = v9 + 3;
              goto LABEL_15;
            }
            int64_t v18 = v9 + 4;
            int64_t v15 = v9 + 3;
            if (v9 + 4 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * v18);
            if (!v17)
            {
              int64_t v13 = v9 + 5;
              int64_t v15 = v9 + 4;
              if (v9 + 5 >= v14) {
                goto LABEL_45;
              }
              unint64_t v17 = *(void *)(v16 + 8 * v13);
              if (!v17)
              {
                int64_t v15 = v14 - 1;
                int64_t v36 = v9 + 6;
                while (v14 != v36)
                {
                  unint64_t v17 = *(void *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    int64_t v13 = v36 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_45:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return sub_2409190B0(v39, a2, v38, a3);
              }
              goto LABEL_15;
            }
          }
          int64_t v13 = v18;
        }
LABEL_15:
        uint64_t v11 = (v17 - 1) & v17;
        unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
        int64_t v9 = v13;
LABEL_16:
        uint64_t v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_2409556F8();
        swift_bridgeObjectRetain();
        sub_240954868();
        uint64_t v22 = sub_240955748();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = 1 << v24;
        if (((1 << v24) & *(void *)(v40 + 8 * (v24 >> 6))) == 0) {
          goto LABEL_3;
        }
        uint64_t v27 = *(void *)(a3 + 48);
        uint64_t v28 = (void *)(v27 + 16 * v24);
        BOOL v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (sub_240955618() & 1) != 0) {
          break;
        }
        uint64_t v31 = ~v23;
        for (unint64_t i = v24 + 1; ; unint64_t i = v33 + 1)
        {
          unint64_t v33 = i & v31;
          if (((*(void *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
            break;
          }
          uint64_t v34 = (void *)(v27 + 16 * v33);
          BOOL v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_240955618() & 1) != 0)
          {
            uint64_t result = swift_bridgeObjectRelease();
            unint64_t v25 = v33 >> 6;
            uint64_t v26 = 1 << v33;
            goto LABEL_23;
          }
        }
LABEL_3:
        uint64_t result = swift_bridgeObjectRelease();
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_23:
      unint64_t v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    uint64_t v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_47:
      __break(1u);
      return result;
    }
    if (v38 != 1) {
      continue;
    }
    return MEMORY[0x263F8EE88];
  }
}

unint64_t sub_240918728(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v57 = a2;
  uint64_t v56 = a1;
  sub_24082EF28(0, (unint64_t *)&qword_268C90E10, &qword_268C90E18);
  uint64_t v53 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  int64_t v9 = (char *)v49 - v8;
  if (!a3)
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  uint64_t v51 = v7;
  sub_24091A0E4();
  unint64_t result = sub_240955278();
  unint64_t v10 = result;
  uint64_t v50 = v9;
  if (v57 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v56;
  }
  uint64_t v13 = 0;
  v49[1] = v53 + 16;
  v49[0] = v53 + 8;
  unint64_t v55 = result + 56;
  uint64_t v54 = a4;
  unint64_t v52 = result;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      uint64_t v15 = (v12 - 1) & v12;
      unint64_t v16 = v14 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_33;
      }
      if (v17 >= v57)
      {
LABEL_30:
        swift_release();
        return v10;
      }
      unint64_t v18 = v56[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v57) {
          goto LABEL_30;
        }
        unint64_t v18 = v56[v13];
        if (!v18)
        {
          uint64_t v19 = v17 + 2;
          if (v19 >= v57) {
            goto LABEL_30;
          }
          unint64_t v18 = v56[v19];
          if (!v18)
          {
            while (1)
            {
              uint64_t v13 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_34;
              }
              if (v13 >= v57) {
                goto LABEL_30;
              }
              unint64_t v18 = v56[v13];
              ++v19;
              if (v18) {
                goto LABEL_22;
              }
            }
          }
          uint64_t v13 = v19;
        }
      }
LABEL_22:
      uint64_t v15 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = *(void *)(a4 + 48) + 88 * v16;
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *(void *)(v20 + 8);
    uint64_t v24 = *(void *)(v20 + 16);
    uint64_t v23 = *(void *)(v20 + 24);
    long long v70 = *(_OWORD *)(v20 + 32);
    uint64_t v25 = *(void *)(v20 + 56);
    uint64_t v66 = *(void *)(v20 + 48);
    uint64_t v26 = *(void *)(v20 + 64);
    uint64_t v28 = *(void *)(v20 + 72);
    uint64_t v27 = *(void *)(v20 + 80);
    uint64_t v64 = v23;
    uint64_t v65 = v28;
    uint64_t v68 = v27;
    sub_2409556F8();
    sub_240955708();
    uint64_t v29 = v21;
    uint64_t v30 = *(void *)(v21 + 16);
    uint64_t v31 = *((void *)&v70 + 1);
    unint64_t v62 = v15;
    uint64_t v63 = v13;
    uint64_t v69 = v29;
    uint64_t v67 = v22;
    if (v30)
    {
      uint64_t v61 = a3;
      uint64_t v32 = v29 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80));
      uint64_t v33 = *(void *)(v53 + 72);
      uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
      swift_bridgeObjectRetain_n();
      uint64_t v60 = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v58 = v31;
      swift_bridgeObjectRetain();
      uint64_t v59 = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      BOOL v35 = (void (**)(char *, uint64_t))v49[0];
      uint64_t v36 = v51;
      unint64_t v37 = v50;
      do
      {
        v34(v37, v32, v36);
        sub_2408921B0(&qword_268C90E70, &qword_268C90E78);
        sub_240954708();
        (*v35)(v37, v36);
        v32 += v33;
        --v30;
      }
      while (v30);
      swift_bridgeObjectRelease();
      a3 = v61;
      unint64_t v10 = v52;
      uint64_t v38 = v60;
      uint64_t v39 = v64;
      uint64_t v25 = v59;
      uint64_t v40 = v68;
      uint64_t v41 = v58;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v40 = v68;
      swift_bridgeObjectRetain();
      uint64_t v38 = v24;
      uint64_t v39 = v64;
      uint64_t v41 = v31;
    }
    swift_bridgeObjectRetain();
    uint64_t v42 = v67;
    sub_240954868();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_240954868();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24088E9F4((uint64_t)v71, v41);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v43 = v66;
    sub_240954868();
    swift_bridgeObjectRelease();
    sub_240955738();
    swift_bridgeObjectRetain();
    uint64_t v44 = v65;
    sub_240954868();
    swift_bridgeObjectRelease();
    sub_240955748();
    uint64_t v45 = v38;
    unint64_t v46 = v55;
    unint64_t result = sub_240955168();
    *(void *)(v46 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v47 = *(void *)(v10 + 48) + 88 * result;
    *(void *)uint64_t v47 = v69;
    *(void *)(v47 + 8) = v42;
    *(void *)(v47 + 16) = v45;
    *(void *)(v47 + 24) = v39;
    *(_OWORD *)(v47 + 32) = v70;
    *(void *)(v47 + 48) = v43;
    *(void *)(v47 + 56) = v25;
    *(void *)(v47 + 64) = v26;
    *(void *)(v47 + 72) = v44;
    *(void *)(v47 + 80) = v40;
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v54;
    unint64_t v12 = v62;
    uint64_t v13 = v63;
    if (!a3) {
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_240918D28(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a1;
  uint64_t v7 = sub_2409526C8();
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  int64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  sub_240919F34();
  uint64_t result = sub_240955278();
  uint64_t v10 = result;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v34;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  BOOL v35 = (uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32);
  uint64_t v36 = v37 + 16;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v33)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v34[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v33) {
          goto LABEL_37;
        }
        unint64_t v18 = v34[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v33) {
            goto LABEL_37;
          }
          unint64_t v18 = v34[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v33) {
              goto LABEL_37;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v18 = v34[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = a4;
    uint64_t v21 = *(void *)(a4 + 48);
    uint64_t v22 = *(void *)(v37 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v9, v21 + v22 * v16, v7);
    sub_2408204C0(&qword_26AFD03E0, MEMORY[0x263F45F38]);
    uint64_t result = sub_2409546F8();
    uint64_t v23 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v14 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v14 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = (*v35)(*(void *)(v10 + 48) + v26 * v22, v9, v7);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v20;
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2409190B0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x263F8EE88];
LABEL_36:
    swift_release();
    return v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_2408BB54C();
  uint64_t result = sub_240955278();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_2409556F8();
    swift_bridgeObjectRetain();
    sub_240954868();
    uint64_t result = sub_240955748();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    unint64_t v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    *unint64_t v28 = v18;
    v28[1] = v19;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_240919344(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x263EF8340];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_2409194CC((uint64_t)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v5, a2, v3);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_2409194CC((uint64_t)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x2456021C0](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_2409194CC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  uint64_t v57 = (unint64_t *)result;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    int64_t v6 = 0;
    uint64_t v58 = a4 + 56;
    uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(a4 + 56);
    int64_t v59 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v61 = 0;
    uint64_t v10 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          unint64_t v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          int64_t v62 = v6;
          unint64_t v12 = v11 | (v6 << 6);
        }
        else
        {
          int64_t v13 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_81;
          }
          if (v13 >= v59) {
            goto LABEL_79;
          }
          unint64_t v14 = *(void *)(v58 + 8 * v13);
          int64_t v15 = v6 + 1;
          if (!v14)
          {
            int64_t v15 = v6 + 2;
            if (v6 + 2 >= v59) {
              goto LABEL_79;
            }
            unint64_t v14 = *(void *)(v58 + 8 * v15);
            if (!v14)
            {
              int64_t v15 = v6 + 3;
              if (v6 + 3 >= v59) {
                goto LABEL_79;
              }
              unint64_t v14 = *(void *)(v58 + 8 * v15);
              if (!v14)
              {
                uint64_t v16 = v6 + 4;
                if (v6 + 4 >= v59) {
                  goto LABEL_79;
                }
                unint64_t v14 = *(void *)(v58 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    int64_t v15 = v16 + 1;
                    if (__OFADD__(v16, 1)) {
                      goto LABEL_83;
                    }
                    if (v15 >= v59) {
                      goto LABEL_79;
                    }
                    unint64_t v14 = *(void *)(v58 + 8 * v15);
                    ++v16;
                    if (v14) {
                      goto LABEL_22;
                    }
                  }
                }
                int64_t v15 = v6 + 4;
              }
            }
          }
LABEL_22:
          unint64_t v9 = (v14 - 1) & v14;
          int64_t v62 = v15;
          unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
        }
        uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
        uint64_t v19 = *v17;
        uint64_t v18 = v17[1];
        sub_2409556F8();
        swift_bridgeObjectRetain();
        sub_240954868();
        uint64_t v20 = sub_240955748();
        uint64_t v21 = -1 << *(unsigned char *)(v5 + 32);
        unint64_t v22 = v20 & ~v21;
        unint64_t v23 = v22 >> 6;
        uint64_t v24 = 1 << v22;
        if (((1 << v22) & *(void *)(v10 + 8 * (v22 >> 6))) != 0) {
          break;
        }
LABEL_6:
        uint64_t result = swift_bridgeObjectRelease();
        int64_t v6 = v62;
        uint64_t v5 = a3;
        uint64_t v4 = a4;
      }
      uint64_t v25 = *(void *)(a3 + 48);
      BOOL v26 = (void *)(v25 + 16 * v22);
      BOOL v27 = *v26 == v19 && v26[1] == v18;
      if (!v27 && (sub_240955618() & 1) == 0)
      {
        uint64_t v28 = ~v21;
        for (unint64_t i = v22 + 1; ; unint64_t i = v30 + 1)
        {
          unint64_t v30 = i & v28;
          if (((*(void *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0) {
            break;
          }
          uint64_t v31 = (void *)(v25 + 16 * v30);
          BOOL v32 = *v31 == v19 && v31[1] == v18;
          if (v32 || (sub_240955618() & 1) != 0)
          {
            uint64_t result = swift_bridgeObjectRelease();
            unint64_t v23 = v30 >> 6;
            uint64_t v24 = 1 << v30;
            goto LABEL_38;
          }
        }
        goto LABEL_6;
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_38:
      int64_t v6 = v62;
      uint64_t v5 = a3;
      v57[v23] |= v24;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v4 = a4;
      if (v33) {
        goto LABEL_82;
      }
    }
  }
  int64_t v34 = 0;
  uint64_t v60 = a3 + 56;
  uint64_t v61 = 0;
  uint64_t v35 = 1 << *(unsigned char *)(a3 + 32);
  if (v35 < 64) {
    uint64_t v36 = ~(-1 << v35);
  }
  else {
    uint64_t v36 = -1;
  }
  unint64_t v37 = v36 & *(void *)(a3 + 56);
  int64_t v63 = (unint64_t)(v35 + 63) >> 6;
  uint64_t v38 = a4 + 56;
  while (1)
  {
    if (v37)
    {
      unint64_t v39 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      unint64_t v40 = v39 | (v34 << 6);
      goto LABEL_63;
    }
    int64_t v41 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    if (v41 >= v63) {
      goto LABEL_79;
    }
    unint64_t v42 = *(void *)(v60 + 8 * v41);
    ++v34;
    if (!v42)
    {
      int64_t v34 = v41 + 1;
      if (v41 + 1 >= v63) {
        goto LABEL_79;
      }
      unint64_t v42 = *(void *)(v60 + 8 * v34);
      if (!v42)
      {
        int64_t v34 = v41 + 2;
        if (v41 + 2 >= v63) {
          goto LABEL_79;
        }
        unint64_t v42 = *(void *)(v60 + 8 * v34);
        if (!v42) {
          break;
        }
      }
    }
LABEL_62:
    unint64_t v37 = (v42 - 1) & v42;
    unint64_t v40 = __clz(__rbit64(v42)) + (v34 << 6);
LABEL_63:
    uint64_t v44 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v40);
    uint64_t v46 = *v44;
    uint64_t v45 = v44[1];
    sub_2409556F8();
    swift_bridgeObjectRetain();
    sub_240954868();
    uint64_t v47 = sub_240955748();
    uint64_t v48 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v49 = v47 & ~v48;
    if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
      goto LABEL_46;
    }
    uint64_t v50 = *(void *)(a4 + 48);
    uint64_t v51 = (void *)(v50 + 16 * v49);
    BOOL v52 = *v51 == v46 && v51[1] == v45;
    if (v52 || (sub_240955618() & 1) != 0)
    {
LABEL_76:
      uint64_t result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v57 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v5 = a3;
      uint64_t v4 = a4;
      if (v33)
      {
        __break(1u);
LABEL_79:
        swift_retain();
        return sub_2409190B0(v57, a2, v61, v5);
      }
    }
    else
    {
      uint64_t v53 = ~v48;
      while (1)
      {
        unint64_t v49 = (v49 + 1) & v53;
        if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
          break;
        }
        uint64_t v54 = (void *)(v50 + 16 * v49);
        BOOL v55 = *v54 == v46 && v54[1] == v45;
        if (v55 || (sub_240955618() & 1) != 0) {
          goto LABEL_76;
        }
      }
LABEL_46:
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v5 = a3;
      uint64_t v4 = a4;
    }
  }
  int64_t v43 = v41 + 3;
  if (v43 >= v63) {
    goto LABEL_79;
  }
  unint64_t v42 = *(void *)(v60 + 8 * v43);
  if (v42)
  {
    int64_t v34 = v43;
    goto LABEL_62;
  }
  while (1)
  {
    int64_t v34 = v43 + 1;
    if (__OFADD__(v43, 1)) {
      break;
    }
    if (v34 >= v63) {
      goto LABEL_79;
    }
    unint64_t v42 = *(void *)(v60 + 8 * v34);
    ++v43;
    if (v42) {
      goto LABEL_62;
    }
  }
LABEL_84:
  __break(1u);
  return result;
}

uint64_t sub_240919A0C(uint64_t a1, uint64_t a2)
{
  sub_24083FFEC(0, &qword_26AFCD970, MEMORY[0x263F45738], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  int64_t v6 = (char *)&v38 - v5;
  uint64_t v7 = sub_2409521B8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v44 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  int64_t v43 = (char *)&v38 - v11;
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v47 = a1 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v48 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v16 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  uint64_t v46 = v8 + 16;
  uint64_t v17 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  unint64_t v42 = (void (**)(char *, char *, uint64_t))(v8 + 32);
  uint64_t v49 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v19 = 0;
  unint64_t v45 = MEMORY[0x263F8EE78];
  if (!v15) {
    goto LABEL_9;
  }
LABEL_7:
  unint64_t v20 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  unint64_t v21 = v20 | (v19 << 6);
  if (!*(void *)(a2 + 16))
  {
LABEL_5:
    (*v16)(v6, 1, 1, v7);
    goto LABEL_6;
  }
  while (1)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(v49 + 48) + 16 * v21);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    swift_bridgeObjectRetain();
    unint64_t v28 = sub_240931400(v27, v26);
    if (v29)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, *(void *)(a2 + 56) + *(void *)(v8 + 72) * v28, v7);
      uint64_t v30 = 0;
    }
    else
    {
      uint64_t v30 = 1;
    }
    (*v16)(v6, v30, 1, v7);
    swift_bridgeObjectRelease();
    if ((*v17)(v6, 1, v7) == 1)
    {
LABEL_6:
      uint64_t result = sub_240919EA8((uint64_t)v6);
      if (v15) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v40 = v8;
      uint64_t v31 = *v42;
      (*v42)(v43, v6, v7);
      int64_t v41 = v31;
      v31(v44, v43, v7);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v45 = sub_2408C35E0(0, *(void *)(v45 + 16) + 1, 1, v45);
      }
      unint64_t v33 = *(void *)(v45 + 16);
      unint64_t v32 = *(void *)(v45 + 24);
      unint64_t v34 = v33 + 1;
      uint64_t v8 = v40;
      if (v33 >= v32 >> 1)
      {
        unint64_t v39 = v33 + 1;
        uint64_t v37 = sub_2408C35E0(v32 > 1, v33 + 1, 1, v45);
        unint64_t v34 = v39;
        unint64_t v45 = v37;
      }
      uint64_t v35 = v44;
      unint64_t v36 = v45;
      *(void *)(v45 + 16) = v34;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v41)(v36+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v33, v35, v7);
      if (v15) {
        goto LABEL_7;
      }
    }
LABEL_9:
    int64_t v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v22 >= v48) {
      goto LABEL_35;
    }
    unint64_t v23 = *(void *)(v47 + 8 * v22);
    ++v19;
    if (!v23)
    {
      int64_t v19 = v22 + 1;
      if (v22 + 1 >= v48) {
        goto LABEL_35;
      }
      unint64_t v23 = *(void *)(v47 + 8 * v19);
      if (!v23)
      {
        int64_t v19 = v22 + 2;
        if (v22 + 2 >= v48) {
          goto LABEL_35;
        }
        unint64_t v23 = *(void *)(v47 + 8 * v19);
        if (!v23)
        {
          int64_t v19 = v22 + 3;
          if (v22 + 3 >= v48) {
            goto LABEL_35;
          }
          unint64_t v23 = *(void *)(v47 + 8 * v19);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v19 << 6);
    if (!*(void *)(a2 + 16)) {
      goto LABEL_5;
    }
  }
  int64_t v24 = v22 + 4;
  if (v24 >= v48)
  {
LABEL_35:
    swift_release();
    return v45;
  }
  unint64_t v23 = *(void *)(v47 + 8 * v24);
  if (v23)
  {
    int64_t v19 = v24;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v19 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v19 >= v48) {
      goto LABEL_35;
    }
    unint64_t v23 = *(void *)(v47 + 8 * v19);
    ++v24;
    if (v23) {
      goto LABEL_24;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_240919EA8(uint64_t a1)
{
  sub_24083FFEC(0, &qword_26AFCD970, MEMORY[0x263F45738], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_240919F34()
{
  if (!qword_268C91B00)
  {
    sub_2409526C8();
    sub_2408204C0(&qword_26AFD03E0, MEMORY[0x263F45F38]);
    unint64_t v0 = sub_240955288();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C91B00);
    }
  }
}

uint64_t sub_240919FC8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_24091A028()
{
  unint64_t result = qword_268C90EA8;
  if (!qword_268C90EA8)
  {
    sub_24082EF28(255, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30);
    sub_24083F780(&qword_268C90EB0, (unint64_t *)&qword_26AFCDF30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C90EA8);
  }
  return result;
}

void sub_24091A0E4()
{
  if (!qword_268C91B08)
  {
    sub_2408656BC();
    unint64_t v0 = sub_240955288();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C91B08);
    }
  }
}

uint64_t sub_24091A140(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24091A1C0()
{
  uint64_t v0 = sub_2409525A8();
  sub_2408BB348(v0, qword_26AFD0818);
  uint64_t v1 = sub_24083F214(v0, (uint64_t)qword_26AFD0818);
  uint64_t v2 = *MEMORY[0x263F45E88];
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t sub_24091A248(unint64_t a1, char a2)
{
  if ((sub_24091B0EC(a1) & 1) == 0) {
    return MEMORY[0x263F8EE78];
  }
  sub_24082EE18(0, &qword_26AFD05E0, MEMORY[0x263F45630], MEMORY[0x263F8E0F8]);
  sub_240951E78();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_240956800;
  uint64_t v4 = (void *)sub_240951F68();
  sub_24091A35C(v4, a2 & 1);

  return v3;
}

uint64_t sub_24091A35C(void *a1, int a2)
{
  int v35 = a2;
  uint64_t v3 = sub_240951A28();
  MEMORY[0x270FA5388](v3 - 8);
  unint64_t v34 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24082EE18(0, &qword_26AFCF7F0, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v33 = (char *)v32 - v7;
  sub_24082EE18(0, &qword_268C90A48, MEMORY[0x263F45770], v5);
  MEMORY[0x270FA5388](v8 - 8);
  v32[1] = (char *)v32 - v9;
  v32[0] = sub_240951C08();
  uint64_t v10 = *(void *)(v32[0] - 8);
  MEMORY[0x270FA5388](v32[0]);
  uint64_t v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2409528B8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24082EE18(0, &qword_26AFCE2A0, MEMORY[0x263F07508], v5);
  MEMORY[0x270FA5388](v17 - 8);
  int64_t v19 = (char *)v32 - v18;
  uint64_t v20 = sub_240951A98();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  if (qword_26AFCCC98 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_2409525A8();
  sub_24083F214(v21, (uint64_t)qword_26AFD0818);
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x263F45FE8], v13);
  sub_2409534E8();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_2408499F4((uint64_t)v19, &qword_26AFCE2A0, MEMORY[0x263F07508]);
  type metadata accessor for LabsOnboardingAppPluginViewController();
  (*(void (**)(char *, void, void))(v10 + 104))(v12, *MEMORY[0x263F45580], v32[0]);
  id v22 = a1;
  sub_240951CC8();
  sub_240951A18();
  unint64_t v23 = v33;
  sub_240951828();
  uint64_t v24 = sub_240951838();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 0, 1, v24);
  sub_2409521F8();
  sub_240951DD8();
  sub_240951D78();
  sub_240951E58();
  sub_240951D68();
  sub_240951D58();
  uint64_t v37 = MEMORY[0x263F8EE88];
  uint64_t v25 = sub_2409520B8();
  sub_240940118(&v36, v25, v26);
  swift_bridgeObjectRelease();
  uint64_t v27 = v37;
  unint64_t v28 = (void (*)(uint64_t *, void))sub_240951E38();
  sub_24089E058(v27);
  v28(&v36, 0);
  char v29 = (void *)sub_240954988();
  id v30 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v30)
  {
    sub_2409547C8();
  }
  return sub_240951E18();
}

uint64_t sub_24091A904@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24082EE18(0, (unint64_t *)&qword_26AFCDDE0, (uint64_t (*)(uint64_t))sub_24083FF94, MEMORY[0x263EFDDF8]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v32 - v7;
  uint64_t v37 = sub_2409540C8();
  uint64_t v9 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  sub_240954058();
  id v13 = v12;
  id v14 = v12;
  uint64_t v15 = sub_2409540B8();
  os_log_type_t v16 = sub_240954C18();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v35 = v5;
    uint64_t v18 = v17;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v39 = v33;
    *(_DWORD *)uint64_t v18 = 136446466;
    uint64_t v38 = sub_24091B08C(0);
    sub_24091B0AC(0, (unint64_t *)&unk_268C91B10, (void (*)(uint64_t))sub_24091B08C);
    uint64_t v34 = v6;
    uint64_t v19 = sub_2409547E8();
    uint64_t v36 = a2;
    uint64_t v38 = sub_2408370E4(v19, v20, &v39);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    v32[1] = v18 + 14;
    uint64_t v38 = (uint64_t)v12;
    id v21 = v12;
    id v22 = v12;
    sub_24083F3C0();
    sub_240955658();
    id v23 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v24 = sub_2409547E8();
    unint64_t v26 = v25;

    uint64_t v27 = v24;
    a2 = v36;
    uint64_t v38 = sub_2408370E4(v27, v26, &v39);
    sub_2409550B8();
    uint64_t v6 = v34;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240818000, v15, v16, "[%{public}s] Unable to compute desired difference for commit: %{public}s", (uint8_t *)v18, 0x16u);
    uint64_t v28 = v33;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v28, -1, -1);
    uint64_t v29 = v18;
    uint64_t v5 = v35;
    MEMORY[0x2456021C0](v29, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v37);
  uint64_t v38 = MEMORY[0x263F8EE78];
  sub_24083FF94();
  sub_2409543A8();
  sub_2408BB23C();
  uint64_t v30 = sub_240954498();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v30;
  return result;
}

uint64_t sub_24091AD14()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HealthRecords23OnboardingTileGenerator_domain;
  uint64_t v2 = sub_240951F18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_24083B3B4(v0 + OBJC_IVAR____TtC13HealthRecords23OnboardingTileGenerator_context);

  return swift_deallocClassInstance();
}

uint64_t sub_24091ADCC()
{
  return type metadata accessor for OnboardingTileGenerator();
}

uint64_t sub_24091ADD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC13HealthRecords23OnboardingTileGenerator_domain;
  uint64_t v4 = sub_240951F18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_24091AE4C()
{
  uint64_t v1 = (int *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_24091AF50(unint64_t a1, char a2)
{
  type metadata accessor for HealthRecordsGeneratorContext();

  return sub_24091A248(a1, a2);
}

uint64_t sub_24091B000()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24091B038@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_24091B074()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24091B084@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24091A904(a1, a2);
}

uint64_t sub_24091B08C(uint64_t a1)
{
  return sub_24091B0AC(a1, &qword_268C91A98, (void (*)(uint64_t))type metadata accessor for OnboardingTileGenerator);
}

uint64_t sub_24091B0AC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a2;
  if (!*a2)
  {
    a3(255);
    uint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_24091B0EC(unint64_t a1)
{
  uint64_t v28 = sub_240951A28();
  uint64_t v2 = *(void (***)(char *, uint64_t))(v28 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v28);
  uint64_t v27 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  unint64_t v26 = (char *)v23 - v6;
  MEMORY[0x270FA5388](v5);
  unint64_t v25 = (char *)v23 - v7;
  uint64_t v8 = a1 >> 62;
  if (a1 >> 62)
  {
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_2409553D8();
    swift_bridgeObjectRelease();
    if (v22 < 6) {
      return 0;
    }
LABEL_3:
    unint64_t v9 = sub_240953F68();
    if (v9 >> 62) {
      uint64_t v10 = sub_2409553D8();
    }
    else {
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v10) {
      return 0;
    }
    if (v8)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_2409553D8();
      if (!v11)
      {
LABEL_18:
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    else
    {
      uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v11) {
        goto LABEL_18;
      }
    }
    v23[1] = v2 + 1;
    unint64_t v24 = a1 & 0xC000000000000001;
    uint64_t v12 = 4;
    id v13 = v25;
    uint64_t v15 = v27;
    uint64_t v14 = v28;
    ++v2;
    while (1)
    {
      uint64_t v16 = v12 - 4;
      if (v24)
      {
        id v17 = (id)MEMORY[0x2456015B0](v12 - 4, a1);
        uint64_t v8 = v12 - 3;
        if (__OFADD__(v16, 1)) {
          goto LABEL_21;
        }
      }
      else
      {
        id v17 = *(id *)(a1 + 8 * v12);
        uint64_t v8 = v12 - 3;
        if (__OFADD__(v16, 1))
        {
LABEL_21:
          __break(1u);
          goto LABEL_22;
        }
      }
      id v29 = v17;
      id v18 = objc_msgSend(v17, sel_modificationDate);
      sub_240951A08();

      uint64_t v19 = v26;
      sub_240951A18();
      sub_240951988();
      unint64_t v20 = *v2;
      (*v2)(v19, v14);
      LOBYTE(v19) = sub_2409519B8();
      v20(v15, v14);
      v20(v13, v14);

      if (v19)
      {
        swift_bridgeObjectRelease();
        return 1;
      }
      ++v12;
      if (v8 == v11) {
        goto LABEL_18;
      }
    }
  }
  if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 6) {
    goto LABEL_3;
  }
  return 0;
}

void sub_24091B49C(uint64_t a1, uint64_t a2, unint64_t a3, int a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_2409526C8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24091B7B0();
  if (v14)
  {
    uint64_t v15 = (void *)v14;
    unint64_t v28 = a3;
    LODWORD(v29) = a4;
    sub_240952D78();
    uint64_t v16 = (void *)sub_240952D68();
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x263F45EF0], v10);
    sub_240952808();
    id v17 = (void *)sub_2409527D8();
    id v18 = (void *)sub_240952798();

    uint64_t v19 = (void *)sub_240952D48();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    if (v19)
    {
      int v20 = v28;
      unint64_t v21 = HIDWORD(v28);
      uint64_t v22 = (void *)sub_240954788();
      objc_msgSend(v5, sel_startedTest_, v22);

      objc_msgSend(v15, sel_pushViewController_animated_, v19, 0);
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = v5;
      *(void *)(v23 + 24) = a1;
      *(void *)(v23 + 32) = a2;
      *(_DWORD *)(v23 + 40) = v20;
      *(_DWORD *)(v23 + 44) = v21;
      *(_DWORD *)(v23 + 48) = v29;
      aBlock[4] = sub_24091C484;
      aBlock[5] = v23;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24084C358;
      aBlock[3] = &unk_26F4F2A60;
      unint64_t v24 = _Block_copy(aBlock);
      id v25 = v5;
      swift_bridgeObjectRetain();
      swift_release();
      objc_msgSend(v25, sel_installCACommitCompletionBlock_, v24);

      _Block_release(v24);
    }
    else
    {
    }
  }
  else
  {
    unint64_t v26 = (void *)sub_240954788();
    uint64_t v29 = sub_240954788();
    objc_msgSend(v5, sel_failedTest_withFailure_, v26, v29);

    uint64_t v27 = (void *)v29;
  }
}

uint64_t sub_24091B7B0()
{
  id v1 = objc_msgSend(v0, sel_delegate);
  if (v1)
  {
    uint64_t v2 = v1;
    if (objc_msgSend(v1, sel_respondsToSelector_, sel_window))
    {
      id v3 = objc_msgSend(v2, sel_window);
      swift_unknownObjectRelease();
      if (v3)
      {
        id v4 = objc_msgSend(v3, sel_rootViewController);

        if (v4)
        {
          self;
          uint64_t v5 = (void *)swift_dynamicCastObjCClass();
          if (v5)
          {
            id v6 = objc_msgSend(v5, sel_viewControllers);
            if (v6)
            {
              uint64_t v7 = v6;
              sub_24083EDCC(0, &qword_268C90C90);
              unint64_t v8 = sub_240954998();
            }
            else
            {
              unint64_t v8 = MEMORY[0x263F8EE78];
            }
            if (v8 >> 62) {
              goto LABEL_31;
            }
            uint64_t v11 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
            while (v11)
            {
              if ((v8 & 0xC000000000000001) != 0)
              {
                uint64_t v12 = 0;
                while (1)
                {
                  MEMORY[0x2456015B0](v12, v8);
                  uint64_t v13 = v12 + 1;
                  if (__OFADD__(v12, 1)) {
                    break;
                  }
                  self;
                  uint64_t v14 = swift_dynamicCastObjCClass();
                  if (v14)
                  {
                    uint64_t v9 = v14;
                    goto LABEL_28;
                  }
                  swift_unknownObjectRelease();
                  ++v12;
                  if (v13 == v11) {
                    goto LABEL_25;
                  }
                }
                __break(1u);
              }
              else
              {
                uint64_t v15 = 0;
                while (1)
                {
                  uint64_t v16 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    break;
                  }
                  id v17 = *(void **)(v8 + 8 * v15 + 32);
                  self;
                  uint64_t v18 = swift_dynamicCastObjCClass();
                  if (v18)
                  {
                    uint64_t v9 = v18;
                    id v19 = v17;
LABEL_28:

                    swift_bridgeObjectRelease();
                    return v9;
                  }
                  ++v15;
                  if (v16 == v11) {
                    goto LABEL_25;
                  }
                }
              }
              __break(1u);
LABEL_31:
              swift_bridgeObjectRetain();
              uint64_t v11 = sub_2409553D8();
              swift_bridgeObjectRelease();
            }
LABEL_25:

            swift_bridgeObjectRelease();
          }
          else
          {
          }
        }
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  return 0;
}

uint64_t sub_24091B9FC(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, int a5)
{
  int v35 = a5;
  int v5 = a4;
  uint64_t v31 = a2;
  uint64_t v32 = a3;
  unint64_t v33 = HIDWORD(a4);
  uint64_t v7 = sub_2409545F8();
  uint64_t v38 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_240954618();
  uint64_t v36 = *(void *)(v10 - 8);
  uint64_t v37 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_240954638();
  uint64_t v34 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  id v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  id v19 = (char *)&v29 - v18;
  id v20 = objc_msgSend(a1, sel_tableView);
  sub_24083EDCC(0, (unint64_t *)&qword_26AFD07B0);
  uint64_t v30 = sub_240954D78();
  sub_240954628();
  MEMORY[0x245600930](v17, 20.0);
  unint64_t v21 = *(void (**)(char *, uint64_t))(v14 + 8);
  v21(v17, v13);
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v31;
  uint64_t v24 = v32;
  *(void *)(v22 + 16) = v20;
  *(void *)(v22 + 24) = v23;
  *(void *)(v22 + 32) = v24;
  LODWORD(v23) = v33;
  *(_DWORD *)(v22 + 40) = v5;
  *(_DWORD *)(v22 + 44) = v23;
  *(_DWORD *)(v22 + 48) = v35;
  aBlock[4] = sub_24091C524;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24084C358;
  aBlock[3] = &unk_26F4F2AB0;
  id v25 = _Block_copy(aBlock);
  id v26 = v20;
  swift_bridgeObjectRetain();
  swift_release();
  sub_240954608();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_24091C58C(&qword_26AFD04E0, MEMORY[0x263F8F030]);
  sub_24091C534();
  sub_24091C58C((unint64_t *)&qword_26AFD0540, (void (*)(uint64_t))sub_24091C534);
  sub_240955148();
  uint64_t v27 = (void *)v30;
  MEMORY[0x245601010](v19, v12, v9, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v37);
  return ((uint64_t (*)(char *, uint64_t))v21)(v19, v34);
}

void sub_24091BE20(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  if (a1)
  {
    unint64_t v8 = HIDWORD(a4);
    id v9 = (id)sub_240954788();
    objc_msgSend(a1, sel__performScrollTest_iterations_delta_length_, v9, a4, v8, a5);
  }
}

void sub_24091BEA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v7 = sub_2409526C8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24091B7B0();
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    sub_240952D78();
    uint64_t v13 = (void *)sub_240952D68();
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F45EF0], v7);
    sub_240952808();
    uint64_t v14 = (void *)sub_2409527D8();
    uint64_t v15 = (void *)sub_240952798();

    uint64_t v16 = (void *)sub_240952D48();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    if (v16)
    {
      self;
      uint64_t v17 = swift_dynamicCastObjCClass();
      if (v17)
      {
        uint64_t v18 = v17;
        objc_msgSend(v12, sel_pushViewController_animated_, v17, 0);
        if (a5)
        {
          id v19 = v16;
          a5(v18);
        }
        else
        {
        }
        return;
      }
    }
    if (a5) {
      a5(0);
    }
  }
  else
  {
    id v20 = (void *)sub_240954788();
    uint64_t v23 = sub_240954788();
    objc_msgSend(v5, sel_failedTest_withFailure_, v20, v23);

    unint64_t v21 = (void *)v23;
  }
}

uint64_t sub_24091C120(uint64_t a1)
{
  sub_240955238();
  if (*(void *)(a1 + 16) && (unint64_t v2 = sub_2409313BC((uint64_t)v5), (v3 & 1) != 0))
  {
    sub_2408373C4(*(void *)(a1 + 56) + 32 * v2, (uint64_t)&v6);
  }
  else
  {
    long long v6 = 0u;
    long long v7 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_240858AA8((uint64_t)v5);
  if (*((void *)&v7 + 1))
  {
    if (swift_dynamicCast()) {
      return 0x656D614E74736574;
    }
  }
  else
  {
    sub_240858A4C((uint64_t)&v6);
  }
  return 0;
}

uint64_t sub_24091C210(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a4)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v5 = result;
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t result = sub_24091C120(v6);
  if (!a3)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v10 = result;
  uint64_t v11 = v7;
  unint64_t v12 = v8;
  uint64_t v13 = v9;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_240955468();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v14)
  {
    if (v5)
    {
      sub_24091B49C(v10, v11, v12, v13);
      swift_bridgeObjectRelease();
      return 1;
    }
    goto LABEL_13;
  }
  if (v14 == 1)
  {
    if (v5)
    {
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = v10;
      *(void *)(v15 + 24) = v11;
      *(void *)(v15 + 32) = v12;
      *(_DWORD *)(v15 + 40) = v13;
      swift_bridgeObjectRetain();
      sub_24091BEA8(v10, v11, v12, v13, (void (*)(uint64_t))sub_24091C470);
      swift_bridgeObjectRelease();
      swift_release();
      return 1;
    }
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
  sub_24091C5D4(0, &qword_268C90BD0, MEMORY[0x263F8E0F8]);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_240956800;
  sub_2409552A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2409548A8();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 56) = MEMORY[0x263F8D310];
  *(void *)(v16 + 32) = 0xD000000000000014;
  *(void *)(v16 + 40) = 0x800000024095EB60;
  sub_2409556D8();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24091C438()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 44, 7);
}

uint64_t sub_24091C470(void *a1)
{
  return sub_24091B9FC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(_DWORD *)(v1 + 40));
}

void sub_24091C484()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = (id)sub_240954788();
  objc_msgSend(v1, sel_finishedTest_, v2);
}

uint64_t sub_24091C4E4()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 52, 7);
}

void sub_24091C524()
{
  sub_24091BE20(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned int *)(v0 + 48));
}

void sub_24091C534()
{
  if (!qword_26AFD0530)
  {
    sub_2409545F8();
    unint64_t v0 = sub_240954A38();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD0530);
    }
  }
}

uint64_t sub_24091C58C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24091C5D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x263F8EE58] + 8);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_24091C630(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v247 = a3;
  v243 = a2;
  uint64_t v251 = a4;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v224 = sub_240951918();
  uint64_t v223 = *(void *)(v224 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v224);
  v221 = (char *)&v220 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  v222 = (char *)&v220 - v7;
  *(void *)&long long v250 = sub_2409528B8();
  *(void *)&long long v249 = *(void *)(v250 - 8);
  uint64_t v8 = *(void *)(v249 + 64);
  uint64_t v9 = MEMORY[0x270FA5388](v250);
  v242 = (char *)&v220 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  *(void *)&long long v248 = (char *)&v220 - v10;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24091E694(0, &qword_268C91BE0, MEMORY[0x263F43DC0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  v241 = (uint64_t *)((char *)&v220 - v13);
  uint64_t v239 = sub_2409526C8();
  uint64_t v238 = *(void *)(v239 - 8);
  MEMORY[0x270FA5388](v239);
  v237 = (char *)&v220 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24091E694(0, (unint64_t *)&unk_26AFCE028, MEMORY[0x263F8F520], v11);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v252 = (uint64_t)&v220 - v16;
  uint64_t v231 = sub_2409540C8();
  uint64_t v232 = *(void *)(v231 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v231);
  id v19 = (char *)&v220 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  v235 = (char *)&v220 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  v226 = (char *)&v220 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  v225 = (char *)&v220 - v25;
  MEMORY[0x270FA5388](v24);
  v229 = (char *)&v220 - v26;
  v236 = (void (*)(char *, uint64_t, uint64_t))sub_240951A98();
  uint64_t v240 = *((void *)v236 - 1);
  uint64_t v27 = *(void *)(v240 + 64);
  uint64_t v28 = MEMORY[0x270FA5388](v236);
  v233 = (char *)&v220 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  v234 = (char *)&v220 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  unint64_t v33 = (char *)&v220 - v32;
  uint64_t v34 = MEMORY[0x270FA5388](v31);
  v227 = (char *)&v220 - v35;
  MEMORY[0x270FA5388](v34);
  v228 = (char *)&v220 - v36;
  uint64_t v37 = sub_240952478();
  uint64_t v38 = *(char **)(v37 - 8);
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  int64_t v41 = (char *)&v220 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39);
  int64_t v43 = (char *)&v220 - v42;
  sub_2409523D8();
  swift_allocObject();
  uint64_t v44 = sub_2409523C8();
  uint64_t v220 = a1;
  uint64_t v245 = v44;
  sub_2409523B8();
  unint64_t v45 = (void (*)(char *, char *, uint64_t))*((void *)v38 + 2);
  v246 = v43;
  v45(v41, v43, v37);
  int v46 = (*((uint64_t (**)(char *, uint64_t))v38 + 11))(v41, v37);
  if (v46 == *MEMORY[0x263F45DC8])
  {
    (*((void (**)(char *, uint64_t))v38 + 12))(v41, v37);
    uint64_t v47 = v249;
    uint64_t v240 = *(void *)(v249 + 32);
    uint64_t v48 = v248;
    uint64_t v49 = v250;
    ((void (*)(void, char *, void))v240)(v248, v41, v250);
    uint64_t v50 = sub_240954AB8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v252, 1, 1, v50);
    uint64_t v51 = v242;
    v236 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
    v236(v242, v48, v49);
    sub_2408690E0(v247, (uint64_t)&v253);
    unint64_t v52 = (*(unsigned __int8 *)(v47 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
    unint64_t v53 = (v8 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v247 = v37;
    v235 = v38;
    uint64_t v54 = (void *)swift_allocObject();
    v54[2] = 0;
    v54[3] = 0;
    BOOL v55 = v244;
    v54[4] = v244;
    ((void (*)(char *, char *, uint64_t))v240)((char *)v54 + v52, v51, v49);
    uint64_t v56 = v243;
    *(void *)((char *)v54 + v53) = v243;
    sub_24083AB20(&v253, (uint64_t)v54 + ((v53 + 15) & 0xFFFFFFFFFFFFFFF8));
    id v57 = v55;
    id v58 = v56;
    sub_240839E0C(v252, (uint64_t)&unk_268C91C18, (uint64_t)v54);
    swift_release();
    uint64_t v59 = sub_240952868();
    if (v59)
    {
      uint64_t v60 = (void *)v59;
      sub_240953828();
      uint64_t v61 = v251;
      sub_240953C58();
      swift_release();

      (*(void (**)(void, void))(v249 + 8))(v248, v250);
      (*((void (**)(char *, uint64_t))v235 + 1))(v246, v247);
      uint64_t v62 = sub_240953C68();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v61, 0, 1, v62);
      return;
    }
    uint64_t v85 = v248;
    uint64_t v86 = v250;
    v236(v242, v248, v250);
    unint64_t v87 = v237;
    sub_240952698();
    uint64_t v88 = sub_240952678();
    BOOL v89 = v241;
    uint64_t *v241 = v88;
    v89[1] = v90;
    uint64_t v91 = *MEMORY[0x263F43DB8];
    uint64_t v92 = sub_240953838();
    uint64_t v93 = *(void *)(v92 - 8);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v93 + 104))(v89, v91, v92);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v93 + 56))(v89, 0, 1, v92);
    uint64_t v94 = v251;
    sub_240953C58();
    swift_release();
    (*(void (**)(char *, uint64_t))(v238 + 8))(v87, v239);
    (*(void (**)(uint64_t, uint64_t))(v249 + 8))(v85, v86);
    goto LABEL_16;
  }
  int64_t v63 = v19;
  uint64_t v65 = v251;
  uint64_t v64 = v252;
  uint64_t v66 = (void (**)(char *, uint64_t))v38;
  if (v46 == *MEMORY[0x263F45DA8])
  {
    uint64_t v67 = v37;
    (*((void (**)(char *, uint64_t))v38 + 12))(v41, v37);
    uint64_t v68 = v240;
    uint64_t v69 = v236;
    (*(void (**)(char *, char *, void *))(v240 + 32))(v33, v41, v236);
    id v70 = objc_msgSend(self, sel_medicalRecordTypes);
    sub_24083EDCC(0, (unint64_t *)&qword_26AFD0580);
    unint64_t v71 = sub_240954998();

    if (v71 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v218 = sub_2409553D8();
      swift_bridgeObjectRelease();
      if (v218) {
        goto LABEL_7;
      }
    }
    else if (*(void *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_7:
      if ((v71 & 0xC000000000000001) != 0)
      {
        id v73 = (id)MEMORY[0x2456015B0](0, v71);
        uint64_t v72 = v243;
      }
      else
      {
        uint64_t v72 = v243;
        if (!*(void *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v73 = *(id *)(v71 + 32);
      }
      swift_bridgeObjectRelease();
      sub_24092018C((uint64_t)v33, (uint64_t)v73, v72);
      swift_release();

      goto LABEL_54;
    }
    swift_release();
    swift_bridgeObjectRelease();
LABEL_54:
    (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v68 + 8))(v33, v69);
    v66[1](v246, v67);
    goto LABEL_55;
  }
  uint64_t v74 = v37;
  if (v46 == *MEMORY[0x263F45DB0])
  {
    v66[12](v41, v37);
    swift_bridgeObjectRelease();
    sub_240952448();
    sub_240952428();
    uint64_t v75 = v238;
    uint64_t v76 = v237;
    uint64_t v77 = v239;
    (*(void (**)(char *, void, uint64_t))(v238 + 104))(v237, *MEMORY[0x263F45EF0], v239);
    uint64_t v78 = sub_240952678();
    uint64_t v79 = v241;
    uint64_t *v241 = v78;
    v79[1] = v80;
    uint64_t v81 = *MEMORY[0x263F43DB8];
    uint64_t v82 = sub_240953838();
    uint64_t v83 = *(void *)(v82 - 8);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v83 + 104))(v79, v81, v82);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v83 + 56))(v79, 0, 1, v82);
    sub_240953C58();
    swift_release();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v76, v77);
    v66[1](v246, v74);
    uint64_t v84 = sub_240953C68();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v65, 0, 1, v84);
    return;
  }
  if (v46 == *MEMORY[0x263F45DD8])
  {
    v66[12](v41, v37);
    sub_240873CDC();
    int v96 = &v41[*(int *)(v95 + 48)];
    uint64_t v98 = *(void *)v96;
    uint64_t v97 = *((void *)v96 + 1);
    *(void *)&long long v250 = v98;
    v235 = (char *)v66;
    *(void *)&long long v249 = v97;
    uint64_t v99 = v240;
    uint64_t v247 = v37;
    v242 = *(char **)(v240 + 32);
    uint64_t v100 = v234;
    uint64_t v101 = v236;
    ((void (*)(char *, char *, void))v242)(v234, v41, v236);
    uint64_t v102 = sub_240954AB8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 56))(v64, 1, 1, v102);
    *(void *)&long long v248 = *(void *)(v99 + 16);
    uint64_t v103 = v233;
    ((void (*)(char *, char *, void))v248)(v233, v100, v101);
    unint64_t v104 = (*(unsigned __int8 *)(v99 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80);
    unint64_t v105 = (v27 + v104 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v106 = (void *)swift_allocObject();
    v106[2] = 0;
    v106[3] = 0;
    uint64_t v107 = v244;
    v106[4] = v244;
    ((void (*)(char *, char *, void))v242)((char *)v106 + v104, v103, v101);
    uint64_t v108 = v243;
    *(void *)((char *)v106 + v105) = v243;
    char v109 = (void *)((char *)v106 + ((v105 + 15) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v110 = v249;
    *char v109 = v250;
    v109[1] = v110;
    id v111 = v107;
    id v112 = v108;
    sub_240839E0C(v64, (uint64_t)&unk_268C91C08, (uint64_t)v106);
    swift_release();
    sub_240894CA4();
    uint64_t v114 = v237;
    char v115 = &v237[*(int *)(v113 + 48)];
    uint64_t v116 = v234;
    ((void (*)(char *, char *, void))v248)(v237, v234, v101);
    *(void *)char v115 = 0;
    *((void *)v115 + 1) = 0xE000000000000000;
    uint64_t v117 = v238;
    uint64_t v118 = v239;
    (*(void (**)(char *, void, uint64_t))(v238 + 104))(v114, *MEMORY[0x263F45F30], v239);
    uint64_t v119 = sub_240952678();
    char v120 = v241;
    uint64_t *v241 = v119;
    v120[1] = v121;
    uint64_t v122 = *MEMORY[0x263F43DB8];
    uint64_t v123 = sub_240953838();
    uint64_t v124 = *(void *)(v123 - 8);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v124 + 104))(v120, v122, v123);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v124 + 56))(v120, 0, 1, v123);
    uint64_t v94 = v251;
    sub_240953C58();
    swift_release();
    (*(void (**)(char *, uint64_t))(v117 + 8))(v114, v118);
    (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v240 + 8))(v116, v101);
LABEL_16:
    (*((void (**)(char *, uint64_t))v235 + 1))(v246, v247);
    uint64_t v125 = sub_240953C68();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v125 - 8) + 56))(v94, 0, 1, v125);
    return;
  }
  if (v46 == *MEMORY[0x263F45DE0])
  {
    v66[12](v41, v37);
    char v126 = *(void **)v41;
    uint64_t v127 = *((void *)v41 + 1);
    uint64_t v128 = sub_240954AB8();
    uint64_t v129 = v64;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v128 - 8) + 56))(v64, 1, 1, v128);
    uint64_t v130 = swift_allocObject();
    *(void *)(v130 + 16) = 0;
    *(void *)(v130 + 24) = 0;
    unint64_t v132 = v243;
    uint64_t v131 = v244;
    *(void *)(v130 + 32) = v244;
    *(void *)(v130 + 40) = v132;
    *(void *)(v130 + 48) = v126;
    *(void *)(v130 + 56) = v127;
    id v133 = v131;
    id v134 = v132;
    uint64_t v135 = &unk_268C91BF8;
    uint64_t v136 = v129;
LABEL_21:
    sub_240839E0C(v136, (uint64_t)v135, v130);
    swift_release();
    swift_release();
LABEL_22:
    v66[1](v246, v74);
LABEL_55:
    uint64_t v155 = v65;
    goto LABEL_56;
  }
  uint64_t v137 = v244;
  if (v46 == *MEMORY[0x263F45DB8])
  {
    v66[12](v41, v37);
    long long v138 = *(_OWORD *)v41;
    long long v249 = *((_OWORD *)v41 + 1);
    long long v250 = v138;
    long long v248 = *((_OWORD *)v41 + 2);
    uint64_t v139 = *((void *)v41 + 6);
    uint64_t v140 = sub_240954AB8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v140 - 8) + 56))(v64, 1, 1, v140);
    uint64_t v130 = swift_allocObject();
    *(void *)(v130 + 16) = 0;
    *(void *)(v130 + 24) = 0;
    *(void *)(v130 + 32) = v137;
    *(_OWORD *)(v130 + 40) = v250;
    *(_OWORD *)(v130 + 56) = v249;
    *(_OWORD *)(v130 + 72) = v248;
    *(void *)(v130 + 88) = v139;
    unint64_t v141 = v243;
    *(void *)(v130 + 96) = v243;
    id v142 = v137;
    id v143 = v141;
    uint64_t v135 = &unk_268C91C28;
    uint64_t v136 = v64;
    goto LABEL_21;
  }
  if (v46 != *MEMORY[0x263F45DF0])
  {
    if (v46 == *MEMORY[0x263F45DE8])
    {
      v66[12](v41, v37);
      swift_bridgeObjectRelease();
      sub_240873E2C();
      uint64_t v159 = v240;
      uint64_t v160 = v228;
      uint64_t v161 = v236;
      (*(void (**)(char *, char *, void *))(v240 + 32))(v228, &v41[*(int *)(v158 + 48)], v236);
      uint64_t v162 = v229;
      sub_240954078();
      uint64_t v163 = v227;
      (*(void (**)(char *, char *, void *))(v159 + 16))(v227, v160, v161);
      uint64_t v164 = sub_2409540B8();
      os_log_type_t v165 = sub_240954C18();
      if (!os_log_type_enabled(v164, v165))
      {

        swift_release();
        v188 = *(void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v159 + 8);
        v188(v163, v161);
        (*(void (**)(char *, uint64_t))(v232 + 8))(v162, v231);
        v188(v160, v161);
        goto LABEL_22;
      }
      uint64_t v166 = swift_slowAlloc();
      uint64_t v252 = swift_slowAlloc();
      *(void *)&long long v253 = v252;
      *(_DWORD *)uint64_t v166 = 136446466;
      uint64_t v167 = sub_24092015C();
      uint64_t v254 = sub_2408370E4(v167, v168, (uint64_t *)&v253);
      v235 = (char *)v66;
      uint64_t v247 = v74;
      sub_2409550B8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v166 + 12) = 2082;
      uint64_t v169 = v227;
      uint64_t v170 = sub_240951A48();
      uint64_t v254 = sub_2408370E4(v170, v171, (uint64_t *)&v253);
      sub_2409550B8();
      swift_bridgeObjectRelease();
      uint64_t v172 = *(void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v159 + 8);
      v172(v169, v161);
      _os_log_impl(&dword_240818000, v164, v165, "[%{public}s]: received successful login redirect for login session with state %{public}s", (uint8_t *)v166, 0x16u);
      uint64_t v173 = v252;
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v173, -1, -1);
      MEMORY[0x2456021C0](v166, -1, -1);

      swift_release();
      (*(void (**)(char *, uint64_t))(v232 + 8))(v229, v231);
      v172(v228, v161);
    }
    else
    {
      uint64_t v174 = v240;
      if (v46 == *MEMORY[0x263F45DD0])
      {
        v66[12](v41, v74);
        uint64_t v175 = *(void **)v41;
        uint64_t v176 = v226;
        sub_240954078();
        id v177 = v175;
        id v178 = v175;
        uint64_t v179 = sub_2409540B8();
        os_log_type_t v180 = sub_240954C18();
        if (os_log_type_enabled(v179, v180))
        {
          uint64_t v181 = swift_slowAlloc();
          uint64_t v182 = swift_slowAlloc();
          *(void *)&long long v253 = v182;
          *(_DWORD *)uint64_t v181 = 136446466;
          uint64_t v183 = sub_24092015C();
          uint64_t v254 = sub_2408370E4(v183, v184, (uint64_t *)&v253);
          sub_2409550B8();
          swift_bridgeObjectRelease();
          *(_WORD *)(v181 + 12) = 2082;
          uint64_t v254 = (uint64_t)v175;
          id v185 = v175;
          sub_24083F3C0();
          uint64_t v247 = v74;
          uint64_t v186 = sub_240954808();
          uint64_t v254 = sub_2408370E4(v186, v187, (uint64_t *)&v253);
          sub_2409550B8();
          uint64_t v155 = v251;
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_240818000, v179, v180, "[%{public}s]: received login redirect error: %{public}s", (uint8_t *)v181, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2456021C0](v182, -1, -1);
          MEMORY[0x2456021C0](v181, -1, -1);

          swift_release();
          (*(void (**)(char *, uint64_t))(v232 + 8))(v226, v231);
          v66[1](v246, v247);
        }
        else
        {

          swift_release();
          (*(void (**)(char *, uint64_t))(v232 + 8))(v176, v231);
          v66[1](v246, v74);
          uint64_t v155 = v65;
        }
        sub_240873D74();
        sub_2409225B8((uint64_t)&v41[*(int *)(v196 + 48)]);
        goto LABEL_56;
      }
      if (v46 == *MEMORY[0x263F45E00])
      {
        v66[12](v41, v74);
        v189 = v225;
        sub_240954078();
        v190 = sub_2409540B8();
        os_log_type_t v191 = sub_240954C18();
        if (os_log_type_enabled(v190, v191))
        {
          v192 = (uint8_t *)swift_slowAlloc();
          uint64_t v193 = swift_slowAlloc();
          *(void *)&long long v253 = v193;
          *(_DWORD *)v192 = 136446210;
          uint64_t v194 = sub_24092015C();
          uint64_t v247 = v74;
          uint64_t v155 = v65;
          uint64_t v254 = sub_2408370E4(v194, v195, (uint64_t *)&v253);
          uint64_t v174 = v240;
          sub_2409550B8();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_240818000, v190, v191, "[%{public}s]: received access-not-granted login redirect", v192, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2456021C0](v193, -1, -1);
          MEMORY[0x2456021C0](v192, -1, -1);

          swift_release();
          (*(void (**)(char *, uint64_t))(v232 + 8))(v225, v231);
          v66[1](v246, v247);
        }
        else
        {

          swift_release();
          (*(void (**)(char *, uint64_t))(v232 + 8))(v189, v231);
          v66[1](v246, v74);
          uint64_t v155 = v65;
        }
        (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v174 + 8))(v41, v236);
        goto LABEL_56;
      }
      if (v46 == *MEMORY[0x263F45DF8])
      {
        v66[12](v41, v74);
        uint64_t v197 = v223;
        uint64_t v198 = (uint64_t)v222;
        v199 = v41;
        uint64_t v200 = v224;
        (*(void (**)(char *, char *, uint64_t))(v223 + 32))(v222, v199, v224);
        sub_240921C34(v198, v243, MEMORY[0x263F46148]);
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v197 + 8))(v198, v200);
        goto LABEL_22;
      }
      v201 = v243;
      uint64_t v202 = v224;
      uint64_t v203 = v223;
      if (v46 == *MEMORY[0x263F45E08])
      {
        v66[12](v41, v74);
        uint64_t v204 = (uint64_t)v222;
        (*(void (**)(char *, char *, uint64_t))(v203 + 32))(v222, v41, v202);
        sub_240921C34(v204, v201, MEMORY[0x263F46150]);
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v203 + 8))(v204, v202);
        goto LABEL_22;
      }
      if (v46 != *MEMORY[0x263F45DC0] && v46 != *MEMORY[0x263F45E10]) {
        v66[1](v41, v74);
      }
      v205 = v63;
      sub_240954078();
      v206 = v221;
      (*(void (**)(char *, uint64_t, uint64_t))(v203 + 16))(v221, v220, v202);
      v207 = sub_2409540B8();
      os_log_type_t v208 = sub_240954C28();
      int v209 = v208;
      if (!os_log_type_enabled(v207, v208))
      {

        swift_release();
        (*(void (**)(char *, uint64_t))(v203 + 8))(v206, v202);
        (*(void (**)(char *, uint64_t))(v232 + 8))(v205, v231);
        goto LABEL_22;
      }
      uint64_t v210 = swift_slowAlloc();
      uint64_t v252 = swift_slowAlloc();
      *(void *)&long long v253 = v252;
      *(_DWORD *)uint64_t v210 = 136446466;
      LODWORD(v250) = v209;
      uint64_t v211 = sub_24092015C();
      uint64_t v254 = sub_2408370E4(v211, v212, (uint64_t *)&v253);
      v235 = (char *)v66;
      uint64_t v247 = v74;
      sub_2409550B8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v210 + 12) = 2082;
      sub_240923308(&qword_268C91BE8, MEMORY[0x263F06EA8]);
      v213 = v221;
      uint64_t v214 = v224;
      uint64_t v215 = sub_2409555D8();
      uint64_t v254 = sub_2408370E4(v215, v216, (uint64_t *)&v253);
      sub_2409550B8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v203 + 8))(v213, v214);
      _os_log_impl(&dword_240818000, v207, (os_log_type_t)v250, "[%{public}s]: unsupported URL passed into HealthRecordsPluginAppDelegate: %{public}s", (uint8_t *)v210, 0x16u);
      uint64_t v217 = v252;
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v217, -1, -1);
      MEMORY[0x2456021C0](v210, -1, -1);

      swift_release();
      (*(void (**)(char *, uint64_t))(v232 + 8))(v205, v231);
    }
    (*((void (**)(char *, uint64_t))v235 + 1))(v246, v247);
    goto LABEL_55;
  }
  v66[12](v41, v37);
  uint64_t v144 = *(void **)v41;
  uint64_t v145 = v235;
  sub_240954078();
  id v146 = v144;
  id v147 = v144;
  uint64_t v148 = sub_2409540B8();
  os_log_type_t v149 = sub_240954C18();
  if (!os_log_type_enabled(v148, v149))
  {

    swift_release();
    (*(void (**)(char *, uint64_t))(v232 + 8))(v145, v231);
    goto LABEL_22;
  }
  uint64_t v150 = swift_slowAlloc();
  uint64_t v151 = swift_slowAlloc();
  *(void *)&long long v253 = v151;
  *(_DWORD *)uint64_t v150 = 136446466;
  uint64_t v152 = sub_24092015C();
  uint64_t v254 = sub_2408370E4(v152, v153, (uint64_t *)&v253);
  sub_2409550B8();
  swift_bridgeObjectRelease();
  *(_WORD *)(v150 + 12) = 2082;
  uint64_t v254 = (uint64_t)v144;
  id v154 = v144;
  sub_24083F3C0();
  uint64_t v247 = v37;
  uint64_t v155 = v65;
  uint64_t v156 = sub_240954808();
  uint64_t v254 = sub_2408370E4(v156, v157, (uint64_t *)&v253);
  sub_2409550B8();
  swift_bridgeObjectRelease();

  _os_log_impl(&dword_240818000, v148, v149, "[%{public}s]: unable to complete onboarding: %{public}s", (uint8_t *)v150, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x2456021C0](v151, -1, -1);
  MEMORY[0x2456021C0](v150, -1, -1);

  swift_release();
  (*(void (**)(char *, uint64_t))(v232 + 8))(v235, v231);
  v66[1](v246, v247);
LABEL_56:
  uint64_t v219 = sub_240953C68();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v219 - 8) + 56))(v155, 1, 1, v219);
}

void sub_24091E694(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_24091E6F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v4 = *(void *)(sub_2409526C8() - 8);
  uint64_t v5 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = *(void *)(v4 + 72);
  sub_240923308(&qword_26AFD03E8, MEMORY[0x263F45F38]);
  uint64_t v7 = 0;
  while ((sub_240954778() & 1) == 0)
  {
    ++v7;
    v5 += v6;
    if (v2 == v7) {
      return 0;
    }
  }
  return v7;
}

void sub_24091E81C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        id v4 = (id)MEMORY[0x2456015B0](0, a2);
      }
      else
      {
        if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v4 = *(id *)(a2 + 32);
      }
      uint64_t v5 = v4;
      sub_24083EDCC(0, (unint64_t *)&qword_26AFD0580);
      char v6 = sub_240954FC8();

      if ((v6 & 1) == 0)
      {
        for (uint64_t i = 0; ; ++i)
        {
          unint64_t v11 = i + 1;
          if (__OFADD__(i, 1)) {
            break;
          }
          if (v11 == v3) {
            return;
          }
          if ((a2 & 0xC000000000000001) != 0)
          {
            id v8 = (id)MEMORY[0x2456015B0](i + 1, a2);
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0) {
              goto LABEL_18;
            }
            if (v11 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_19;
            }
            id v8 = *(id *)(a2 + 32 + 8 * v11);
          }
          uint64_t v9 = v8;
          char v10 = sub_240954FC8();

          if (v10) {
            return;
          }
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        uint64_t v3 = sub_2409553D8();
        swift_bridgeObjectRelease();
        if (v3) {
          continue;
        }
      }
      return;
    }
  }
}

uint64_t sub_24091E9B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v13;
  *uint64_t v13 = v8;
  v13[1] = sub_24083F1F4;
  return sub_24091EAA8(a5, a6, a7, a8, v16, v17, v18, v19);
}

uint64_t sub_24091EAA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t ObjectType = swift_getObjectType();
  v8[52] = a8;
  v8[53] = ObjectType;
  v8[50] = a6;
  v8[51] = a7;
  v8[48] = a4;
  v8[49] = a5;
  v8[46] = a2;
  v8[47] = a3;
  v8[45] = a1;
  uint64_t v18 = sub_2409540C8();
  v8[54] = v18;
  v8[55] = *(void *)(v18 - 8);
  v8[56] = swift_task_alloc();
  v8[57] = sub_240954A98();
  v8[58] = sub_240954A88();
  v8[59] = sub_240954A88();
  uint64_t v20 = sub_240954A48();
  v8[60] = v20;
  v8[61] = v19;
  return MEMORY[0x270FA2498](sub_24091EC04, v20, v19);
}

uint64_t sub_24091EC04()
{
  uint64_t v1 = v0[52];
  v0[62] = sub_240952808();
  uint64_t v2 = (void *)sub_2409527D8();
  uint64_t v3 = (void *)sub_240952798();

  v0[63] = objc_msgSend(v3, sel_clinicalAccountStore);
  id v4 = (void *)swift_task_alloc();
  v0[64] = v4;
  void *v4 = v0;
  v4[1] = sub_24091ECE8;
  return sub_2408AF110(v1);
}

uint64_t sub_24091ECE8(char a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void **)(*v1 + 504);
  *(unsigned char *)(*v1 + 520) = a1;
  swift_task_dealloc();

  uint64_t v4 = *(void *)(v2 + 488);
  uint64_t v5 = *(void *)(v2 + 480);
  return MEMORY[0x270FA2498](sub_24091EE30, v5, v4);
}

uint64_t sub_24091EE30()
{
  char v1 = *(unsigned char *)(v0 + 520);
  swift_release();
  if (v1)
  {
    uint64_t v2 = sub_240954A48();
    uint64_t v4 = v3;
    uint64_t v5 = sub_24091EF28;
  }
  else
  {
    uint64_t v6 = *(void **)(v0 + 416);
    sub_240952498();
    id v7 = v6;
    uint64_t v8 = sub_240952488();
    uint64_t v9 = *(void **)(v0 + 416);
    if (v8)
    {
      char v10 = (void *)v8;
      objc_msgSend(*(id *)(v0 + 416), sel_presentViewController_animated_completion_, v8, 1, 0);
    }
    uint64_t v2 = sub_240954A48();
    uint64_t v4 = v11;
    uint64_t v5 = sub_24091F190;
  }
  return MEMORY[0x270FA2498](v5, v2, v4);
}

uint64_t sub_24091EF28()
{
  unint64_t v1 = v0[50];
  uint64_t v23 = v0[51];
  uint64_t v3 = v0[48];
  uint64_t v2 = v0[49];
  uint64_t v5 = v0[46];
  uint64_t v4 = v0[47];
  uint64_t v6 = v0[45];
  swift_release();
  id v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_24091E694(0, &qword_268C91C38, (uint64_t (*)(uint64_t))sub_240922644, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240958650;
  *(void *)(inited + 32) = sub_2409547C8();
  *(void *)(inited + 40) = v9;
  uint64_t v10 = MEMORY[0x263F8D310];
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v6;
  *(void *)(inited + 56) = v5;
  *(void *)(inited + 80) = sub_2409547C8();
  *(void *)(inited + 88) = v11;
  *(void *)(inited + 120) = v10;
  *(void *)(inited + 96) = v4;
  *(void *)(inited + 104) = v3;
  *(void *)(inited + 128) = sub_2409547C8();
  *(void *)(inited + 136) = v12;
  *(void *)(inited + 168) = v10;
  if (v1) {
    uint64_t v13 = v2;
  }
  else {
    uint64_t v13 = 0;
  }
  unint64_t v14 = 0xE000000000000000;
  if (v1) {
    unint64_t v14 = v1;
  }
  *(void *)(inited + 144) = v13;
  *(void *)(inited + 152) = v14;
  *(void *)(inited + 176) = sub_2409547C8();
  *(void *)(inited + 184) = v15;
  *(void *)(inited + 216) = MEMORY[0x263F8D9D0];
  *(void *)(inited + 192) = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_24092D094(inited);
  sub_24091E694(0, &qword_268C91C48, (uint64_t (*)(uint64_t))sub_2409226B0, v7);
  uint64_t v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_240956800;
  *(void *)(v17 + 32) = sub_2409547C8();
  *(void *)(v17 + 40) = v18;
  *(void *)(v17 + 48) = v16;
  sub_24092D214(v17);
  sub_240952448();
  uint64_t v19 = (void *)sub_2409527D8();
  uint64_t v20 = (void *)sub_240952798();

  sub_240952438();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_24091F190()
{
  uint64_t v22 = v0;
  swift_release();
  sub_240954078();
  swift_bridgeObjectRetain_n();
  unint64_t v1 = sub_2409540B8();
  os_log_type_t v2 = sub_240954C18();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v18 = v0[55];
    uint64_t v19 = v0[54];
    uint64_t v20 = v0[56];
    uint64_t v3 = v0[46];
    uint64_t v17 = v0[45];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v21 = v5;
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v6 = sub_2409557A8();
    v0[43] = sub_2408370E4(v6, v7, &v21);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2080;
    v0[41] = v17;
    v0[42] = v3;
    swift_bridgeObjectRetain_n();
    sub_240955658();
    id v8 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v9 = sub_2409547E8();
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
    v0[44] = sub_2408370E4(v9, v11, &v21);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_240818000, v1, v2, "[%s]: called to handle onboarding to gateway %s but CHR isn't supported on this device", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v5, -1, -1);
    MEMORY[0x2456021C0](v4, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
  }
  else
  {
    uint64_t v13 = v0[55];
    uint64_t v12 = v0[56];
    uint64_t v14 = v0[54];
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_24091F464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v11;
  *unint64_t v11 = v7;
  v11[1] = sub_24083F1F4;
  return sub_240922784(a5, a6, a7);
}

uint64_t sub_24091F510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[4] = a7;
  v8[5] = a8;
  v8[2] = a5;
  v8[3] = a6;
  return MEMORY[0x270FA2498](sub_24091F534, 0, 0);
}

uint64_t sub_24091F534()
{
  sub_240952448();
  sub_240952808();
  unint64_t v1 = (void *)sub_2409527D8();
  uint64_t v2 = sub_240952798();
  v0[6] = v2;

  uint64_t v3 = (void *)swift_task_alloc();
  v0[7] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_24091F610;
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v7 = v0[2];
  uint64_t v6 = v0[3];
  return MEMORY[0x270F372E8](v7, v6, v2, v4, v5);
}

uint64_t sub_24091F610()
{
  unint64_t v1 = *(void **)(*v0 + 48);
  uint64_t v4 = *v0;
  swift_task_dealloc();

  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_24091F71C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v11;
  *unint64_t v11 = v7;
  v11[1] = sub_24083F1F4;
  return sub_24091F7D0(a5, a6, a7);
}

uint64_t sub_24091F7D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  v3[18] = a3;
  v3[19] = ObjectType;
  v3[16] = a1;
  v3[17] = a2;
  uint64_t v8 = sub_2409540C8();
  v3[20] = v8;
  v3[21] = *(void *)(v8 - 8);
  v3[22] = swift_task_alloc();
  v3[23] = sub_240954A98();
  v3[24] = sub_240954A88();
  v3[25] = sub_240954A88();
  uint64_t v10 = sub_240954A48();
  v3[26] = v10;
  v3[27] = v9;
  return MEMORY[0x270FA2498](sub_24091F8F4, v10, v9);
}

uint64_t sub_24091F8F4()
{
  uint64_t v1 = v0[16];
  v0[28] = sub_240952808();
  uint64_t v2 = (void *)sub_2409527D8();
  uint64_t v3 = (void *)sub_240952798();

  v0[29] = objc_msgSend(v3, sel_clinicalAccountStore);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[30] = v4;
  void *v4 = v0;
  v4[1] = sub_24091F9D8;
  return sub_2408AF110(v1);
}

uint64_t sub_24091F9D8(char a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void **)(*v1 + 232);
  *(unsigned char *)(*v1 + 273) = a1;
  swift_task_dealloc();

  uint64_t v4 = *(void *)(v2 + 216);
  uint64_t v5 = *(void *)(v2 + 208);
  return MEMORY[0x270FA2498](sub_24091FB20, v5, v4);
}

uint64_t sub_24091FB20()
{
  char v1 = *(unsigned char *)(v0 + 273);
  swift_release();
  if (v1)
  {
    uint64_t v2 = sub_240954A48();
    uint64_t v4 = v3;
    *(void *)(v0 + 248) = v2;
    *(void *)(v0 + 256) = v3;
    uint64_t v5 = sub_24091FC24;
    uint64_t v6 = v2;
  }
  else
  {
    uint64_t v7 = *(void **)(v0 + 128);
    sub_240952498();
    id v8 = v7;
    uint64_t v9 = sub_240952488();
    uint64_t v10 = *(void **)(v0 + 128);
    if (v9)
    {
      unint64_t v11 = (void *)v9;
      objc_msgSend(*(id *)(v0 + 128), sel_presentViewController_animated_completion_, v9, 1, 0);
    }
    uint64_t v12 = sub_240954A48();
    uint64_t v14 = v13;
    uint64_t v5 = sub_24091FF84;
    uint64_t v6 = v12;
    uint64_t v4 = v14;
  }
  return MEMORY[0x270FA2498](v5, v6, v4);
}

uint64_t sub_24091FC24()
{
  char v1 = (void *)sub_2409527D8();
  uint64_t v2 = (void *)sub_240952798();

  id v3 = objc_msgSend(v2, sel_clinicalAccountStore);
  v0[33] = v3;

  v0[2] = v0;
  v0[7] = v0 + 34;
  v0[3] = sub_24091FD64;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_240921B58;
  v0[13] = &unk_2650D8648;
  v0[14] = v4;
  objc_msgSend(v3, sel_hasGatewayBackedHealthRecordsAccountWithCompletion_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24091FD64()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 256);
  uint64_t v2 = *(void *)(*(void *)v0 + 248);
  return MEMORY[0x270FA2498](sub_24091FE6C, v2, v1);
}

uint64_t sub_24091FE6C()
{
  uint64_t v1 = *(void **)(v0 + 264);
  swift_release();
  int v2 = *(unsigned __int8 *)(v0 + 272);

  id v3 = (void *)sub_240954CD8();
  sub_240952D78();
  uint64_t v4 = (void *)sub_240952D68();
  uint64_t v5 = (void *)sub_2409527D8();
  uint64_t v6 = (void *)sub_240952798();

  if (v2 == 1) {
    sub_240952D08();
  }
  else {
    sub_240952D38();
  }

  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_24091FF84()
{
  uint64_t v16 = v0;
  swift_release();
  sub_240954078();
  uint64_t v1 = sub_2409540B8();
  os_log_type_t v2 = sub_240954C18();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[21];
    uint64_t v14 = v0[22];
    uint64_t v4 = v0[20];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v15 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v7 = sub_2409557A8();
    v0[15] = sub_2408370E4(v7, v8, &v15);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v1, v2, "[%s]: called to handle onboarding to provider search but CHR isn't supported on this device", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v6, -1, -1);
    MEMORY[0x2456021C0](v5, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v14, v4);
  }
  else
  {
    uint64_t v10 = v0[21];
    uint64_t v9 = v0[22];
    uint64_t v11 = v0[20];

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_24092015C()
{
  return sub_2409547E8();
}

void sub_24092018C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v53 = a2;
  id v54 = a3;
  uint64_t v4 = sub_2409540C8();
  uint64_t v58 = *(void *)(v4 - 8);
  uint64_t v59 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v60 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_240951A98();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  BOOL v55 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v49 - v10;
  uint64_t v12 = self;
  uint64_t v52 = a1;
  uint64_t v13 = (void *)sub_240951A58();
  id v49 = objc_msgSend(v12, sel_predicateForObjectWithUUID_, v13);

  uint64_t v14 = *(void (**)(char *, uint64_t))(v7 + 16);
  uint64_t v50 = v6;
  uint64_t v51 = v14;
  ((void (*)(char *, uint64_t, uint64_t))v14)(v11, a1, v6);
  unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v16 = (v8 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  uint64_t v56 = v7;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v15, v11, v6);
  uint64_t v21 = (void *)v53;
  uint64_t v22 = v54;
  *(void *)(v20 + v16) = v54;
  *(void *)(v20 + v17) = v21;
  id v23 = v57;
  *(void *)(v20 + v18) = v57;
  uint64_t v24 = v49;
  *(void *)(v20 + v19) = v49;
  id v25 = objc_allocWithZone(MEMORY[0x263F0A6E0]);
  aBlock[4] = (uint64_t)sub_240922FF0;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_240921B7C;
  aBlock[3] = (uint64_t)&unk_26F4F2BA0;
  uint64_t v26 = _Block_copy(aBlock);
  id v27 = v21;
  id v28 = v24;
  id v29 = v22;
  id v30 = v23;
  id v57 = v28;
  id v31 = v28;
  uint64_t v32 = v55;
  id v33 = objc_msgSend(v25, sel_initWithSampleType_predicate_limit_sortDescriptors_resultsHandler_, v27, v31, 1, 0, v26);
  _Block_release(v26);
  swift_release();
  sub_240954078();
  uint64_t v34 = v50;
  v51(v32, v52);
  id v35 = v27;
  uint64_t v36 = sub_2409540B8();
  os_log_type_t v37 = sub_240954C08();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = swift_slowAlloc();
    id v54 = v33;
    uint64_t v39 = v38;
    uint64_t v40 = (void *)swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    aBlock[0] = v53;
    *(_DWORD *)uint64_t v39 = 136315394;
    uint64_t v41 = sub_240951A48();
    uint64_t v61 = sub_2408370E4(v41, v42, aBlock);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v32, v34);
    *(_WORD *)(v39 + 12) = 2112;
    uint64_t v61 = (uint64_t)v35;
    id v43 = v35;
    sub_2409550B8();
    *uint64_t v40 = v35;

    _os_log_impl(&dword_240818000, v36, v37, "_showMedicalRecord querying for %s as sampleType %@", (uint8_t *)v39, 0x16u);
    sub_2409230C8();
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v40, -1, -1);
    uint64_t v44 = v53;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v44, -1, -1);
    uint64_t v45 = v39;
    id v33 = v54;
    MEMORY[0x2456021C0](v45, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v56 + 8))(v32, v34);
  }
  (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v59);
  sub_240952808();
  int v46 = (void *)sub_2409527D8();
  uint64_t v47 = (void *)sub_240952798();

  id v48 = objc_msgSend(v47, sel_healthStore);
  objc_msgSend(v48, sel_executeQuery_, v33);
}

void sub_240920710(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, void *a5, void *a6, uint64_t a7, char *a8)
{
  uint64_t v92 = a6;
  uint64_t v93 = a8;
  uint64_t v90 = a7;
  uint64_t v91 = a5;
  uint64_t v97 = a4;
  unint64_t v94 = a2;
  uint64_t v87 = sub_2409545F8();
  uint64_t v89 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v10 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_240954618();
  uint64_t v88 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_240951A98();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  MEMORY[0x270FA5388](v17);
  unint64_t v19 = (char *)&v84 - v18;
  uint64_t v20 = sub_2409540C8();
  uint64_t v95 = *(void *)(v20 - 8);
  id v96 = (id)v20;
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  MEMORY[0x270FA5388](v21);
  if (a3)
  {
    uint64_t v24 = (char *)&v84 - v22;
    id v25 = a3;
    sub_240954078();
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v19, v97, v14);
    id v26 = a3;
    id v27 = a3;
    id v28 = sub_2409540B8();
    os_log_type_t v29 = sub_240954C18();
    uint64_t v30 = v15;
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v97 = swift_slowAlloc();
      aBlock[0] = v97;
      *(_DWORD *)uint64_t v31 = 136315394;
      sub_240923308(&qword_268C90688, MEMORY[0x263F07508]);
      uint64_t v32 = sub_2409555D8();
      uint64_t v99 = sub_2408370E4(v32, v33, aBlock);
      sub_2409550B8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v19, v14);
      *(_WORD *)(v31 + 12) = 2080;
      uint64_t v99 = (uint64_t)a3;
      id v34 = a3;
      sub_24083F3C0();
      uint64_t v35 = sub_2409547E8();
      uint64_t v99 = sub_2408370E4(v35, v36, aBlock);
      sub_2409550B8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_240818000, v28, v29, "_showMedicalRecord was unable to fetch records, will not show medical record %s, error: %s", (uint8_t *)v31, 0x16u);
      uint64_t v37 = v97;
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v37, -1, -1);
      MEMORY[0x2456021C0](v31, -1, -1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v14);
    }
    uint64_t v59 = *(void (**)(char *, id))(v95 + 8);
    uint64_t v60 = v24;
LABEL_14:
    v59(v60, v96);
    return;
  }
  uint64_t v84 = v14;
  uint64_t v85 = v10;
  uint64_t v38 = v93;
  uint64_t v86 = v11;
  uint64_t v39 = v23;
  if (v94)
  {
    uint64_t v40 = (char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v19 = v13;
    unint64_t v41 = sub_24092121C(v94);
    if (v41)
    {
      unint64_t v42 = v41;
      uint64_t v43 = v41 & 0xFFFFFFFFFFFFFF8;
      if (v41 >> 62)
      {
        unint64_t v44 = sub_2409553D8();
        if (v44)
        {
LABEL_8:
          if ((v42 & 0xC000000000000001) == 0)
          {
            if (*(void *)(v43 + 16))
            {
              uint64_t v45 = v15;
              id v46 = *(id *)(v42 + 32);
LABEL_11:
              uint64_t v47 = v19;
              swift_bridgeObjectRelease();
              sub_24083EDCC(0, (unint64_t *)&qword_26AFD07B0);
              id v48 = (void *)sub_240954D78();
              uint64_t v49 = v84;
              (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v40, v97, v84);
              uint64_t v50 = v40;
              unint64_t v51 = (*(unsigned __int8 *)(v45 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
              uint64_t v52 = swift_allocObject();
              *(void *)(v52 + 16) = v46;
              (*(void (**)(unint64_t, char *, uint64_t))(v45 + 32))(v52 + v51, v50, v49);
              uint64_t v53 = v91;
              *(void *)(v52 + ((v16 + v51 + 7) & 0xFFFFFFFFFFFFFFF8)) = v91;
              aBlock[4] = (uint64_t)sub_240923218;
              aBlock[5] = v52;
              aBlock[0] = MEMORY[0x263EF8330];
              aBlock[1] = 1107296256;
              aBlock[2] = (uint64_t)sub_24084C358;
              aBlock[3] = (uint64_t)&unk_26F4F2BF0;
              id v54 = _Block_copy(aBlock);
              id v55 = v46;
              id v56 = v53;
              swift_release();
              sub_240954608();
              aBlock[0] = MEMORY[0x263F8EE78];
              sub_240923308(&qword_26AFD04E0, MEMORY[0x263F8F030]);
              sub_24091E694(0, (unint64_t *)&qword_26AFD0530, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
              sub_24089DC9C();
              id v57 = v85;
              uint64_t v58 = v87;
              sub_240955148();
              MEMORY[0x245601070](0, v47, v57, v54);
              _Block_release(v54);

              (*(void (**)(char *, uint64_t))(v89 + 8))(v57, v58);
              (*(void (**)(char *, uint64_t))(v88 + 8))(v47, v86);
              return;
            }
            __break(1u);
            goto LABEL_51;
          }
LABEL_49:
          id v46 = (id)MEMORY[0x2456015B0](0, v42);
          uint64_t v45 = v15;
          goto LABEL_11;
        }
      }
      else
      {
        unint64_t v44 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v44) {
          goto LABEL_8;
        }
      }
      swift_bridgeObjectRelease();
    }
  }
  id v61 = objc_msgSend(self, sel_medicalRecordTypes);
  sub_24083EDCC(0, (unint64_t *)&qword_26AFD0580);
  unint64_t v42 = sub_240954998();

  if (v42 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_2409553D8();
  }
  else
  {
    uint64_t v62 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v40 = v38;
  int64_t v63 = v92;
  if (!v62)
  {
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  unint64_t v64 = v62 - 1;
  if (__OFSUB__(v62, 1))
  {
    __break(1u);
  }
  else if ((v42 & 0xC000000000000001) == 0)
  {
    if ((v64 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v64 < *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v65 = *(id *)(v42 + 8 * v64 + 32);
      goto LABEL_26;
    }
    __break(1u);
    goto LABEL_49;
  }
  id v65 = (id)MEMORY[0x2456015B0](v64, v42);
LABEL_26:
  uint64_t v66 = v65;
  swift_bridgeObjectRelease();
  id v67 = v63;
  char v68 = sub_240954FC8();

  if (v68)
  {
    swift_bridgeObjectRelease();
    sub_240954078();
    uint64_t v69 = v40;
    id v70 = sub_2409540B8();
    os_log_type_t v71 = sub_240954C18();
    if (os_log_type_enabled(v70, v71))
    {
      uint64_t v72 = (uint8_t *)swift_slowAlloc();
      uint64_t v73 = swift_slowAlloc();
      *(_DWORD *)uint64_t v72 = 136315138;
      uint64_t v97 = (uint64_t)(v72 + 4);
      aBlock[0] = v73;
      uint64_t v74 = v69;
      id v75 = objc_msgSend(v74, sel_description);
      uint64_t v76 = sub_2409547C8();
      unint64_t v78 = v77;

      uint64_t v99 = sub_2408370E4(v76, v78, aBlock);
      sub_2409550B8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240818000, v70, v71, "_showMedicalRecord did not find a record for %s", v72, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v73, -1, -1);
      MEMORY[0x2456021C0](v72, -1, -1);
    }
    else
    {
    }
    uint64_t v59 = *(void (**)(char *, id))(v95 + 8);
    uint64_t v60 = v39;
    goto LABEL_14;
  }
LABEL_30:
  sub_24091E81C((uint64_t)v63, v42);
  if ((v80 & 1) == 0)
  {
    BOOL v81 = __OFADD__(v79, 1);
    unint64_t v44 = v79 + 1;
    if (!v81)
    {
      a3 = v91;
      uint64_t v40 = (char *)v97;
      if ((v42 & 0xC000000000000001) == 0)
      {
        if ((v44 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v44 < *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v82 = *(id *)(v42 + 8 * v44 + 32);
LABEL_36:
          id v96 = v82;
          swift_bridgeObjectRelease();
          sub_24092018C(v40, v96, a3);
          uint64_t v83 = v96;

          return;
        }
        __break(1u);
        return;
      }
LABEL_52:
      id v82 = (id)MEMORY[0x2456015B0](v44, v42);
      goto LABEL_36;
    }
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }

  swift_bridgeObjectRelease();
}

uint64_t sub_24092121C(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v12 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_240955318();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x2456015B0](i, v1);
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        self;
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_2409552F8();
        sub_240955328();
        sub_240955338();
        sub_240955308();
        if (v4 == v2) {
          return v12;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v1 + 32;
      while (1)
      {
        uint64_t v7 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        uint64_t v8 = *(void **)(v6 + 8 * v5);
        self;
        uint64_t v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v9;
        id v10 = v8;
        sub_2409552F8();
        sub_240955328();
        sub_240955338();
        sub_240955308();
        ++v5;
        if (v7 == v2) {
          return v12;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_2409553D8();
    swift_bridgeObjectRelease();
    sub_240955318();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_2409553D8();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_240921404(void *a1, void *a2, void *a3)
{
  id v75 = a3;
  uint64_t v5 = sub_240951A98();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v72 = (char *)v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)v66 - v9;
  uint64_t v11 = sub_2409540C8();
  uint64_t v12 = *(uint64_t (***)(void, void))(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v74 = (char *)v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v66 - v16;
  MEMORY[0x270FA5388](v15);
  unint64_t v19 = (char *)v66 - v18;
  objc_msgSend(a1, sel_recordCategoryType);
  uint64_t v20 = sub_240954EC8();
  uint64_t v76 = v11;
  if (v20)
  {
    uint64_t v21 = (void *)v20;
    id v69 = a2;
    uint64_t v70 = v6;
    uint64_t v71 = v5;
    sub_240952D78();
    uint64_t v22 = (void *)sub_240952D68();
    sub_240952808();
    id v23 = (void *)sub_2409527D8();
    uint64_t v24 = (void *)sub_2409527A8();

    id v25 = v22;
    id v73 = v24;
    id v26 = objc_msgSend(v22, sel_makeViewControllerForCategory_usingProfile_, v21, v24);
    id v27 = objc_msgSend(v75, sel_navigationController);
    id v28 = v21;
    if (v27)
    {
      os_log_type_t v29 = v27;
      id v67 = v26;
      id v68 = v21;
      id v75 = v12;
      objc_msgSend(v27, sel_pushViewController_animated_, v26, 0);
      id v30 = objc_msgSend(a1, sel_primaryConcept);
      id v31 = objc_msgSend(v30, sel_groupByConcept);

      unsigned __int8 v32 = objc_msgSend(v31, sel_isQualifiedForConceptRoom);
      unint64_t v33 = v25;
      id v34 = v73;
      if (v32)
      {
        uint64_t v35 = (void *)sub_240952D58();
        objc_msgSend(v29, sel_pushViewController_animated_, v35, 0);
      }
      id v36 = objc_msgSend(v29, sel_topViewController);
      uint64_t v37 = v76;
      id v38 = v69;
      if (!v36) {
        id v36 = v29;
      }
      sub_240952CF8();

      uint64_t v39 = v74;
      sub_240954078();
      uint64_t v41 = v70;
      uint64_t v40 = v71;
      unint64_t v42 = v72;
      id v43 = v38;
      unint64_t v44 = v33;
      (*(void (**)(char *, id, uint64_t))(v70 + 16))(v72, v43, v71);
      uint64_t v45 = v34;
      id v46 = sub_2409540B8();
      os_log_type_t v47 = sub_240954C38();
      if (os_log_type_enabled(v46, v47))
      {
        id v48 = (uint8_t *)swift_slowAlloc();
        uint64_t v49 = swift_slowAlloc();
        uint64_t v78 = v49;
        id v69 = v44;
        *(_DWORD *)id v48 = 136315138;
        v66[1] = v48 + 4;
        uint64_t v50 = sub_240951A48();
        uint64_t v77 = sub_2408370E4(v50, v51, &v78);
        sub_2409550B8();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v40);
        _os_log_impl(&dword_240818000, v46, v47, "_showMedicalRecord presenting detail room for %s", v48, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2456021C0](v49, -1, -1);
        MEMORY[0x2456021C0](v48, -1, -1);

        return (*((uint64_t (**)(char *, uint64_t))v75 + 1))(v74, v76);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v40);
        return (*((uint64_t (**)(char *, uint64_t))v75 + 1))(v39, v37);
      }
    }
    else
    {
      uint64_t v60 = v26;
      sub_240954078();
      id v61 = sub_2409540B8();
      os_log_type_t v62 = sub_240954C18();
      if (os_log_type_enabled(v61, v62))
      {
        int64_t v63 = v12;
        unint64_t v64 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v64 = 0;
        _os_log_impl(&dword_240818000, v61, v62, "_showMedicalRecord's presenting view controller has no navigation controller", v64, 2u);
        id v65 = v64;
        uint64_t v12 = v63;
        MEMORY[0x2456021C0](v65, -1, -1);
      }

      return ((uint64_t (**)(char *, uint64_t))v12)[1](v17, v76);
    }
  }
  else
  {
    sub_240954078();
    (*(void (**)(char *, void *, uint64_t))(v6 + 16))(v10, a2, v5);
    uint64_t v53 = sub_2409540B8();
    os_log_type_t v54 = sub_240954C18();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = swift_slowAlloc();
      uint64_t v71 = v5;
      id v56 = (uint8_t *)v55;
      uint64_t v57 = swift_slowAlloc();
      uint64_t v78 = v57;
      id v75 = v12;
      *(_DWORD *)id v56 = 136315138;
      uint64_t v58 = sub_240951A48();
      uint64_t v77 = sub_2408370E4(v58, v59, &v78);
      sub_2409550B8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v71);
      _os_log_impl(&dword_240818000, v53, v54, "_showMedicalRecord is unable to present the detail room for %s, unable to determine medical record category", v56, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456021C0](v57, -1, -1);
      MEMORY[0x2456021C0](v56, -1, -1);

      return (*((uint64_t (**)(char *, uint64_t))v75 + 1))(v19, v76);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);

      return ((uint64_t (**)(char *, uint64_t))v12)[1](v19, v76);
    }
  }
}

uint64_t sub_240921B58(uint64_t a1, char a2)
{
  **(unsigned char **)(*(void *)(*(void *)(a1 + 32) + 64) + 40) = a2;
  return MEMORY[0x270FA2400]();
}

uint64_t sub_240921B7C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  uint64_t v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_24083EDCC(0, &qword_26AFCDF80);
    uint64_t v5 = sub_240954998();
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_240921C34(uint64_t a1, void *a2, unsigned int *a3)
{
  uint64_t v6 = sub_240953038();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  id v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v19 - v11;
  uint64_t v13 = sub_240951918();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v12, a1, v13);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v12, *a3, v6);
  sub_240952808();
  uint64_t v14 = (void *)sub_2409527D8();
  uint64_t v15 = (void *)sub_240952798();

  id v16 = objc_msgSend(v15, sel_healthStore);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  sub_240953058();
  swift_allocObject();
  sub_240953048();
  *(void *)(swift_allocObject() + 16) = a2;
  id v17 = a2;
  sub_240953028();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
}

uint64_t sub_240921E58()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_240921EA8()
{
  uint64_t v2 = v0[5];
  uint64_t v4 = v0[6];
  uint64_t v3 = v0[7];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_24083F1F4;
  uint64_t v6 = (void *)swift_task_alloc();
  v5[2] = v6;
  void *v6 = v5;
  v6[1] = sub_24083F1F4;
  return sub_24091F7D0(v2, v4, v3);
}

uint64_t sub_240921FA0()
{
  uint64_t v1 = sub_240951A98();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v5);
}

uint64_t sub_2409220A4()
{
  uint64_t v2 = *(void *)(sub_240951A98() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(v0 + v4);
  uint64_t v6 = v0 + v3;
  uint64_t v7 = (uint64_t *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  id v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  *id v10 = v1;
  v10[4] = v8;
  v10[5] = v9;
  void v10[2] = v6;
  v10[3] = v5;
  v10[1] = sub_24083F1F4;
  return MEMORY[0x270FA2498](sub_24091F534, 0, 0);
}

uint64_t sub_2409221D0()
{
  uint64_t v1 = sub_2409528B8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  sub_2408371B8(v0 + v7);

  return MEMORY[0x270FA0238](v0, v7 + 40, v5);
}

uint64_t sub_2409222D0()
{
  uint64_t v2 = *(void *)(sub_2409528B8() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = v0 + v3;
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_24081E750;
  uint64_t v9 = (void *)swift_task_alloc();
  v8[2] = v9;
  *uint64_t v9 = v8;
  v9[1] = sub_24083F1F4;
  return sub_240922784(v5, v6, v7);
}

uint64_t sub_240922428()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 104, 7);
}

uint64_t sub_240922488()
{
  uint64_t v2 = v0;
  uint64_t v3 = v0[5];
  uint64_t v4 = v2[6];
  uint64_t v5 = v2[7];
  uint64_t v6 = v2[8];
  uint64_t v7 = v2[9];
  uint64_t v8 = v2[10];
  uint64_t v9 = v2[11];
  uint64_t v10 = v2[12];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v11;
  *uint64_t v11 = v1;
  v11[1] = sub_24083F1F4;
  uint64_t v12 = (void *)swift_task_alloc();
  v11[2] = v12;
  *uint64_t v12 = v11;
  v12[1] = sub_24083F1F4;
  return sub_24091EAA8(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_2409225B8(uint64_t a1)
{
  sub_24091E694(0, &qword_26AFCE2A0, MEMORY[0x263F07508], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_240922644()
{
  if (!qword_268C91C40)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C91C40);
    }
  }
}

void sub_2409226B0()
{
  if (!qword_268C91C50)
  {
    sub_240922718();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C91C50);
    }
  }
}

void sub_240922718()
{
  if (!qword_268C91C58)
  {
    unint64_t v0 = sub_2409546E8();
    if (!v1) {
      atomic_store(v0, &qword_268C91C58);
    }
  }
}

uint64_t sub_240922784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  uint64_t v4 = sub_2409530B8();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  uint64_t v5 = sub_2409526C8();
  v3[8] = v5;
  v3[9] = *(void *)(v5 - 8);
  v3[10] = swift_task_alloc();
  uint64_t v6 = sub_2409528B8();
  v3[11] = v6;
  v3[12] = *(void *)(v6 - 8);
  v3[13] = swift_task_alloc();
  v3[14] = sub_240954A98();
  v3[15] = sub_240954A88();
  v3[16] = sub_240954A88();
  uint64_t v8 = sub_240954A48();
  v3[17] = v8;
  v3[18] = v7;
  return MEMORY[0x270FA2498](sub_240922944, v8, v7);
}

uint64_t sub_240922944()
{
  uint64_t v1 = v0[3];
  sub_240952808();
  uint64_t v2 = (void *)sub_2409527D8();
  uint64_t v3 = (void *)sub_240952798();

  v0[19] = objc_msgSend(v3, sel_clinicalAccountStore);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[20] = v4;
  void *v4 = v0;
  v4[1] = sub_240922A24;
  return sub_2408AF110(v1);
}

uint64_t sub_240922A24(char a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void **)(*v1 + 152);
  *(unsigned char *)(*v1 + 168) = a1;
  swift_task_dealloc();

  uint64_t v4 = *(void *)(v2 + 144);
  uint64_t v5 = *(void *)(v2 + 136);
  return MEMORY[0x270FA2498](sub_240922B6C, v5, v4);
}

uint64_t sub_240922B6C()
{
  char v1 = *(unsigned char *)(v0 + 168);
  swift_release();
  if (v1)
  {
    uint64_t v2 = sub_240954A48();
    uint64_t v4 = v3;
    uint64_t v5 = sub_240922D1C;
  }
  else
  {
    uint64_t v6 = *(void **)(v0 + 24);
    sub_240952498();
    id v7 = v6;
    uint64_t v8 = sub_240952488();
    uint64_t v9 = *(void **)(v0 + 24);
    if (v8)
    {
      uint64_t v10 = (void *)v8;
      objc_msgSend(*(id *)(v0 + 24), sel_presentViewController_animated_completion_, v8, 1, 0);

      uint64_t v2 = sub_240954A48();
      uint64_t v4 = v11;
      uint64_t v5 = sub_240922C9C;
    }
    else
    {

      uint64_t v2 = sub_240954A48();
      uint64_t v4 = v12;
      uint64_t v5 = sub_240923354;
    }
  }
  return MEMORY[0x270FA2498](v5, v2, v4);
}

uint64_t sub_240922C9C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_240922D1C()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[2];
  swift_release();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v5(v1, v4, v3);
  LODWORD(v3) = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  LODWORD(v4) = *MEMORY[0x263F45FE8];
  sub_240952448();
  if (v3 == v4)
  {
    sub_2409523E8();
  }
  else
  {
    uint64_t v15 = v0[12];
    uint64_t v16 = v0[13];
    uint64_t v6 = v0[9];
    uint64_t v7 = v0[10];
    uint64_t v8 = v0[7];
    uint64_t v9 = v0[8];
    uint64_t v11 = v0[5];
    uint64_t v10 = v0[6];
    uint64_t v14 = v0[11];
    ((void (*)(uint64_t, void))v5)(v7, v0[2]);
    (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v7, *MEMORY[0x263F45F00], v9);
    (*(void (**)(uint64_t, void, uint64_t))(v10 + 104))(v8, *MEMORY[0x263F46160], v11);
    sub_2409523F8();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v11);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v9);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_240922F0C()
{
  uint64_t v1 = sub_240951A98();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v9 + 8, v5);
}

void sub_240922FF0(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v7 = *(void *)(sub_240951A98() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void **)(v3 + v9);
  uint64_t v13 = *(void **)(v3 + v10);
  uint64_t v14 = *(void *)(v3 + v11);
  uint64_t v15 = *(char **)(v3 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_240920710(a1, a2, a3, v3 + v8, v12, v13, v14, v15);
}

void sub_2409230C8()
{
  if (!qword_26AFCE288)
  {
    sub_24083EDCC(255, (unint64_t *)&qword_26AFCE280);
    unint64_t v0 = sub_240955098();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCE288);
    }
  }
}

uint64_t sub_240923130()
{
  uint64_t v1 = sub_240951A98();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6 + 8, v5);
}

uint64_t sub_240923218()
{
  uint64_t v1 = *(void *)(sub_240951A98() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void **)(v0 + 16);
  uint64_t v4 = *(void **)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_240921404(v3, (void *)(v0 + v2), v4);
}

uint64_t sub_2409232A8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2409232E0()
{
  return sub_240954CE8();
}

uint64_t sub_240923308(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_240923364()
{
  id result = objc_msgSend(self, sel_secondaryLabelColor);
  qword_268C99270 = (uint64_t)result;
  return result;
}

uint64_t sub_2409233A0(uint64_t a1)
{
  return sub_2409233D0(a1, MEMORY[0x263F83628], 1, &qword_268C99278);
}

uint64_t sub_2409233B8(uint64_t a1)
{
  return sub_2409233D0(a1, MEMORY[0x263F835F0], 0, &qword_268C99280);
}

uint64_t sub_2409233D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_24083EDCC(0, &qword_26AFCF780);
  uint64_t result = sub_240954F08();
  *a4 = result;
  return result;
}

id sub_24092344C()
{
  return sub_2409236AC(&OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___leftGuide);
}

id sub_240923458()
{
  return sub_2409234A0(&OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___leftValueLabel);
}

id sub_240923464()
{
  return sub_2409234A0(&OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___leftDateLabel);
}

id sub_240923470()
{
  return sub_24092356C(&OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___leftRangeView);
}

id sub_24092347C()
{
  return sub_2409236AC(&OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___rightGuide);
}

id sub_240923488()
{
  return sub_2409234A0(&OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___rightValueLabel);
}

id sub_240923494()
{
  return sub_2409234A0(&OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___rightDateLabel);
}

id sub_2409234A0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    id v4 = *(id *)(v1 + *a1);
  }
  else
  {
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setLineBreakMode_, 0);
    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    unint64_t v6 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    id v4 = v5;

    uint64_t v3 = 0;
  }
  id v7 = v3;
  return v4;
}

id sub_240923560()
{
  return sub_24092356C(&OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___rightRangeView);
}

id sub_24092356C(uint64_t *a1)
{
  uint64_t v3 = v1;
  uint64_t v4 = sub_240952908();
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  unint64_t v9 = *(void **)(v3 + v8);
  if (v9)
  {
    id v10 = *(id *)(v3 + v8);
  }
  else
  {
    *id v7 = 0;
    (*(void (**)(unsigned char *, void))(v5 + 104))(v7, *MEMORY[0x263F46048]);
    id v11 = objc_allocWithZone((Class)sub_240952938());
    uint64_t v12 = (void *)sub_240952918();
    objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v13 = *(void **)(v3 + v8);
    *(void *)(v3 + v8) = v12;
    id v10 = v12;

    unint64_t v9 = 0;
  }
  id v14 = v9;
  return v10;
}

id sub_2409236A0()
{
  return sub_2409236AC(&OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___containerLayoutGuide);
}

id sub_2409236AC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    id v4 = *(id *)(v1 + *a1);
  }
  else
  {
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82908]), sel_init);
    uint64_t v6 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    id v4 = v5;

    uint64_t v3 = 0;
  }
  id v7 = v3;
  return v4;
}

BOOL sub_24092371C()
{
  uint64_t v1 = OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___currentLayout;
  int v2 = v0[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___currentLayout];
  if (v2 != 2) {
    return v2 & 1;
  }
  id v3 = objc_msgSend(v0, sel_traitCollection);
  id v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);
  char v5 = sub_240954E38();

  BOOL result = (v5 & 1) == 0;
  v0[v1] = result;
  return result;
}

uint64_t sub_2409237C0()
{
  if (*(void *)(v0
                 + OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___currentLayoutConstraints))
  {
    uint64_t v1 = *(void *)(v0
                   + OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___currentLayoutConstraints);
  }
  else
  {
    uint64_t v1 = MEMORY[0x263F8EE78];
    *(void *)(v0
              + OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___currentLayoutConstraints) = MEMORY[0x263F8EE78];
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

id sub_240923810()
{
  uint64_t v1 = OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___deltaImageFont;
  int v2 = *(void **)(v0
                + OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___deltaImageFont);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___deltaImageFont);
  }
  else
  {
    id v4 = objc_msgSend(self, sel_hk_roundedSystemFontWithSize_weight_, 36.0, *MEMORY[0x263F81828]);
    char v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    int v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_2409238A0()
{
  uint64_t v1 = OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___deltaImageView;
  int v2 = *(void **)(v0
                + OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___deltaImageView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___deltaImageView);
  }
  else
  {
    id v4 = sub_240923904(v0);
    char v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    int v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_240923904(uint64_t a1)
{
  uint64_t v2 = sub_2409526C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ConceptDeltaHighlightFeedItemData();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1 + OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView_viewModel;
  swift_beginAccess();
  sub_240903D68(v9, (uint64_t)v8);
  id v10 = (void *)sub_24092624C((uint64_t)v8);
  sub_2408DA060((uint64_t)v8);
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_initWithImage_, v10);

  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v11, sel_setMaximumContentSizeCategory_, *MEMORY[0x263F83420]);
  sub_240903D68(v9, (uint64_t)v8);
  uint64_t v12 = sub_2409528B8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v5, v8, v12);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F45F00], v2);
  uint64_t v13 = (void *)sub_240952688();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_2408DA060((uint64_t)v8);
  objc_msgSend(v11, sel_setTintColor_, v13);

  return v11;
}

void sub_240923B74(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ConceptDeltaHighlightFeedItemData();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (objc_class *)type metadata accessor for ConceptDeltaHighlightFeedItemView();
  v18.receiver = v2;
  v18.super_class = v7;
  objc_msgSendSuper2(&v18, sel_traitCollectionDidChange_, a1);
  id v8 = objc_msgSend(v2, sel_traitCollection);
  if (v8)
  {
    uint64_t v9 = v8;
    if (a1)
    {
      sub_24083EDCC(0, &qword_268C91D08);
      id v10 = a1;
      id v11 = v9;
      char v12 = sub_240954FC8();

      if (v12) {
        return;
      }
    }
    else
    {
    }
LABEL_8:
    id v13 = objc_msgSend(self, sel__preferredFontForTextStyle_design_weight_, *MEMORY[0x263F835B8], *MEMORY[0x263F81778], *MEMORY[0x263F81828]);
    id v14 = sub_240923464();
    objc_msgSend(v14, sel_setFont_, v13);

    id v15 = sub_240923494();
    objc_msgSend(v15, sel_setFont_, v13);

    uint64_t v16 = (uint64_t)v2 + OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView_viewModel;
    swift_beginAccess();
    sub_240903D68(v16, (uint64_t)v6);
    sub_240923E1C((uint64_t)v6);
    sub_2408DA060((uint64_t)v6);
    sub_240924444();
    return;
  }
  if (a1) {
    goto LABEL_8;
  }
}

void sub_240923E1C(uint64_t a1)
{
  uint64_t v2 = v1;
  type metadata accessor for ConceptDeltaHighlightFeedItemData();
  sub_2409267E8();
  uint64_t v4 = (void *)sub_240954658();
  id v5 = objc_msgSend(v4, sel_chartableCodedQuantitySet);

  if (v5)
  {
    id v6 = objc_msgSend(v5, sel_compatibleUnit);

    id v7 = objc_msgSend(v6, sel_unitString);
    sub_2409547C8();

    id v8 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView_profile), sel_ucumDisplayConverter);
    uint64_t v9 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
    id v10 = objc_msgSend(v8, sel_synonymForUCUMUnitString_, v9);

    uint64_t v11 = sub_2409547C8();
    uint64_t v13 = v12;

    id v14 = (void *)sub_240954658();
    swift_bridgeObjectRetain();
    sub_2408540F8(v14, v11, v13, v31);
    sub_240926850((uint64_t)v31, (uint64_t)v38);
    if (v38[1])
    {
      long long v41 = v39;
      long long v42 = v40;
      id v15 = (void *)sub_240954658();
      sub_2408540F8(v15, v11, v13, v32);
      sub_240926850((uint64_t)v32, (uint64_t)v33);
      if (v33[1])
      {
        long long v36 = v34;
        long long v37 = v35;
        id v16 = sub_240923464();
        uint64_t v17 = (void *)sub_240954788();
        objc_msgSend(v16, sel_setText_, v17);

        id v18 = sub_240923458();
        if (qword_268C90608 != -1) {
          swift_once();
        }
        uint64_t v19 = qword_268C99278;
        if (qword_268C90610 != -1) {
          swift_once();
        }
        uint64_t v20 = qword_268C99280;
        unint64_t v21 = sub_2409269C0();
        uint64_t v22 = (void *)MEMORY[0x2455FF5A0](v19, v20, &type metadata for ConceptDeltaHighlightRecordViewData, v21);
        objc_msgSend(v18, sel_setAttributedText_, v22);

        id v23 = sub_240923494();
        uint64_t v24 = (void *)sub_240954788();
        objc_msgSend(v23, sel_setText_, v24);

        id v25 = sub_240923488();
        id v26 = (void *)MEMORY[0x2455FF5A0](qword_268C99278, qword_268C99280, &type metadata for ConceptDeltaHighlightRecordViewData, v21);
        objc_msgSend(v25, sel_setAttributedText_, v26);

        id v27 = sub_240923470();
        sub_240952928();

        id v28 = sub_240923560();
        sub_240952928();

        id v29 = sub_2409238A0();
        id v30 = (void *)sub_24092624C(a1);
        objc_msgSend(v29, sel_setImage_, v30);

        sub_240926924((uint64_t)v32);
      }
      sub_240926924((uint64_t)v31);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_240924240()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_traitCollection);
  id v3 = objc_msgSend(v2, sel_preferredContentSizeCategory);
  char v4 = sub_240954E38();

  objc_msgSend(v1, sel_bounds);
  double Width = CGRectGetWidth(v18);
  id v6 = sub_2409238A0();
  objc_msgSend(v6, sel_intrinsicContentSize);
  double v8 = v7;

  if ((Width - v8 + -24.0) * 0.5 < 0.0) {
    double v9 = 0.0;
  }
  else {
    double v9 = (Width - v8 + -24.0) * 0.5;
  }
  id v10 = sub_240923464();
  sub_240924370(v9);
  uint64_t v12 = v11;

  if (v12 > 2 || (id v13 = sub_240923494(), sub_240924370(v9), v15 = v14, v13, v15 >= 3)) {
    char v16 = 0;
  }
  else {
    char v16 = v4 ^ 1;
  }
  return v16 & 1;
}

void sub_240924370(double a1)
{
  objc_msgSend(v1, sel_sizeThatFits_, a1, 1.79769313e308);
  if (v2 > 0.0)
  {
    double v3 = v2;
    id v4 = objc_msgSend(v1, sel_font);
    if (!v4)
    {
LABEL_11:
      __break(1u);
      return;
    }
    id v5 = v4;
    objc_msgSend(v4, sel_lineHeight);
    double v7 = v6;

    double v8 = round(v3 / v7);
    if ((~*(void *)&v8 & 0x7FF0000000000000) != 0)
    {
      if (v8 > -9.22337204e18)
      {
        if (v8 < 9.22337204e18) {
          return;
        }
        goto LABEL_10;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
}

void sub_240924444()
{
  char v1 = sub_240924240();
  if (v1 != sub_24092371C())
  {
    sub_2409237C0();
    sub_24083EDCC(0, &qword_268C91A80);
    double v2 = (void *)sub_240954988();
    swift_bridgeObjectRelease();
    objc_msgSend(v0, sel_removeConstraints_, v2);

    *(void *)&v0[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___currentLayoutConstraints] = sub_2409253F4(v1);
    swift_bridgeObjectRelease();
    double v3 = self;
    sub_2409237C0();
    id v4 = (void *)sub_240954988();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_activateConstraints_, v4);

    v0[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___currentLayout] = v1;
  }
}

uint64_t sub_24092454C(char a1)
{
  double v2 = v1;
  char v163 = a1 & 1;
  id v162 = self;
  sub_2409268D8(0, (unint64_t *)&qword_26AFCF418, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_24095B330;
  id v4 = sub_240923464();
  id v5 = objc_msgSend(v4, sel_topAnchor);

  id v6 = sub_24092344C();
  id v7 = objc_msgSend(v6, byte_2650D8533);

  id v8 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v7);
  *(void *)(v3 + 32) = v8;
  id v9 = sub_240923464();
  id v10 = objc_msgSend(v9, sel_leftAnchor);

  id v11 = sub_24092344C();
  id v12 = objc_msgSend(v11, sel_leftAnchor);

  id v13 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v12);
  *(void *)(v3 + 40) = v13;
  id v14 = sub_240923464();
  id v15 = objc_msgSend(v14, sel_rightAnchor);

  id v16 = sub_24092344C();
  id v17 = objc_msgSend(v16, sel_rightAnchor);

  id v18 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v17);
  *(void *)(v3 + 48) = v18;
  id v19 = sub_240923458();
  id v20 = objc_msgSend(v19, byte_2650D8533);

  id v21 = sub_240923464();
  id v22 = objc_msgSend(v21, sel_bottomAnchor);

  id v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_constant_, v22, 0.0);
  *(void *)(v3 + 56) = v23;
  id v24 = sub_240923458();
  id v25 = objc_msgSend(v24, sel_leftAnchor);

  id v26 = sub_24092344C();
  id v27 = objc_msgSend(v26, sel_leftAnchor);

  id v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v27);
  *(void *)(v3 + 64) = v28;
  id v29 = sub_240923458();
  id v30 = objc_msgSend(v29, sel_rightAnchor);

  id v31 = sub_24092344C();
  id v32 = objc_msgSend(v31, sel_rightAnchor);

  id v33 = objc_msgSend(v30, sel_constraintEqualToAnchor_, v32);
  *(void *)(v3 + 72) = v33;
  id v34 = sub_240923458();
  id v35 = objc_msgSend(v34, byte_2650D8625);

  id v36 = sub_240923470();
  long long v37 = (void *)sub_2409528F8();

  id v38 = objc_msgSend(v35, sel_constraintEqualToAnchor_constant_, v37, -6.0);
  *(void *)(v3 + 80) = v38;
  id v39 = sub_240923470();
  id v40 = objc_msgSend(v39, sel_leftAnchor);

  id v41 = sub_24092344C();
  id v42 = objc_msgSend(v41, sel_leftAnchor);

  id v43 = objc_msgSend(v40, sel_constraintEqualToAnchor_, v42);
  *(void *)(v3 + 88) = v43;
  id v44 = sub_240923470();
  id v45 = objc_msgSend(v44, sel_rightAnchor);

  id v46 = sub_24092344C();
  id v47 = objc_msgSend(v46, sel_rightAnchor);

  id v48 = objc_msgSend(v45, sel_constraintEqualToAnchor_, v47);
  *(void *)(v3 + 96) = v48;
  id v49 = sub_240923470();
  id v50 = objc_msgSend(v49, byte_2650D8625);

  id v51 = sub_24092344C();
  id v52 = objc_msgSend(v51, byte_2650D8625);

  id v53 = objc_msgSend(v50, sel_constraintEqualToAnchor_, v52);
  *(void *)(v3 + 104) = v53;
  id v54 = sub_240923494();
  id v55 = objc_msgSend(v54, sel_topAnchor);

  id v56 = sub_24092347C();
  id v57 = objc_msgSend(v56, sel_topAnchor);

  id v58 = objc_msgSend(v55, sel_constraintEqualToAnchor_, v57);
  *(void *)(v3 + 112) = v58;
  id v59 = sub_240923494();
  id v60 = objc_msgSend(v59, sel_leftAnchor);

  id v61 = sub_24092347C();
  id v62 = objc_msgSend(v61, sel_leftAnchor);

  id v63 = objc_msgSend(v60, sel_constraintEqualToAnchor_, v62);
  *(void *)(v3 + 120) = v63;
  id v64 = sub_240923494();
  id v65 = objc_msgSend(v64, sel_rightAnchor);

  id v66 = sub_24092347C();
  id v67 = objc_msgSend(v66, sel_rightAnchor);

  id v68 = objc_msgSend(v65, sel_constraintEqualToAnchor_, v67);
  *(void *)(v3 + 128) = v68;
  id v69 = sub_240923488();
  id v70 = objc_msgSend(v69, sel_topAnchor);

  id v71 = sub_240923494();
  id v72 = objc_msgSend(v71, byte_2650D8625);

  id v73 = objc_msgSend(v70, sel_constraintEqualToAnchor_constant_, v72, 0.0);
  *(void *)(v3 + 136) = v73;
  id v74 = sub_240923488();
  id v75 = objc_msgSend(v74, sel_rightAnchor);

  id v76 = sub_24092347C();
  id v77 = objc_msgSend(v76, sel_rightAnchor);

  id v78 = objc_msgSend(v75, sel_constraintEqualToAnchor_, v77);
  *(void *)(v3 + 144) = v78;
  id v79 = sub_240923488();
  id v80 = objc_msgSend(v79, sel_leftAnchor);

  id v81 = sub_24092347C();
  id v82 = objc_msgSend(v81, sel_leftAnchor);

  id v83 = objc_msgSend(v80, sel_constraintEqualToAnchor_, v82);
  *(void *)(v3 + 152) = v83;
  id v84 = sub_240923488();
  id v85 = objc_msgSend(v84, byte_2650D8625);

  id v86 = sub_240923560();
  uint64_t v87 = (void *)sub_2409528F8();

  id v88 = objc_msgSend(v85, sel_constraintEqualToAnchor_constant_, v87, -6.0);
  *(void *)(v3 + 160) = v88;
  id v89 = sub_240923560();
  id v90 = objc_msgSend(v89, sel_leftAnchor);

  id v91 = sub_24092347C();
  id v92 = objc_msgSend(v91, sel_leftAnchor);

  id v93 = objc_msgSend(v90, sel_constraintEqualToAnchor_, v92);
  *(void *)(v3 + 168) = v93;
  id v94 = sub_240923560();
  id v95 = objc_msgSend(v94, sel_rightAnchor);

  id v96 = sub_24092347C();
  id v97 = objc_msgSend(v96, sel_rightAnchor);

  id v98 = objc_msgSend(v95, sel_constraintEqualToAnchor_, v97);
  *(void *)(v3 + 176) = v98;
  id v99 = sub_240923560();
  id v100 = objc_msgSend(v99, byte_2650D8625);

  id v101 = sub_24092347C();
  id v102 = objc_msgSend(v101, byte_2650D8625);

  id v103 = objc_msgSend(v100, sel_constraintEqualToAnchor_, v102);
  *(void *)(v3 + 184) = v103;
  id v104 = sub_2409236A0();
  id v105 = objc_msgSend(v104, sel_leftAnchor);

  id v106 = objc_msgSend(v2, sel_leftAnchor);
  id v107 = objc_msgSend(v105, sel_constraintEqualToAnchor_, v106);

  *(void *)(v3 + 192) = v107;
  id v108 = sub_2409236A0();
  id v109 = objc_msgSend(v108, sel_topAnchor);

  id v110 = objc_msgSend(v2, sel_topAnchor);
  id v111 = objc_msgSend(v109, sel_constraintEqualToAnchor_, v110);

  *(void *)(v3 + 200) = v111;
  id v112 = sub_2409236A0();
  id v113 = objc_msgSend(v112, sel_rightAnchor);

  id v114 = objc_msgSend(v2, sel_rightAnchor);
  id v115 = objc_msgSend(v113, sel_constraintEqualToAnchor_, v114);

  *(void *)(v3 + 208) = v115;
  id v116 = sub_2409236A0();
  id v117 = objc_msgSend(v116, byte_2650D8625);

  id v118 = objc_msgSend(v2, byte_2650D8625);
  id v119 = objc_msgSend(v117, sel_constraintEqualToAnchor_, v118);

  *(void *)(v3 + 216) = v119;
  id v120 = sub_24092344C();
  id v121 = objc_msgSend(v120, sel_topAnchor);

  id v122 = sub_2409236A0();
  id v123 = objc_msgSend(v122, sel_topAnchor);

  id v124 = objc_msgSend(v121, sel_constraintEqualToAnchor_, v123);
  LODWORD(v125) = 1148829696;
  objc_msgSend(v124, sel_setPriority_, v125);
  *(void *)(v3 + 224) = v124;
  id v126 = sub_24092344C();
  id v127 = objc_msgSend(v126, sel_leadingAnchor);

  id v128 = sub_2409236A0();
  id v129 = objc_msgSend(v128, sel_leadingAnchor);

  id v130 = objc_msgSend(v127, sel_constraintEqualToAnchor_, v129);
  *(void *)(v3 + 232) = v130;
  id v131 = sub_2409238A0();
  id v132 = objc_msgSend(v131, byte_2650D8625);

  id v133 = sub_2409236A0();
  id v134 = objc_msgSend(v133, byte_2650D8625);

  id v135 = objc_msgSend(v132, sel_constraintLessThanOrEqualToAnchor_, v134);
  *(void *)(v3 + 240) = v135;
  sub_2409549B8();
  sub_24083EDCC(0, &qword_268C91A80);
  uint64_t v136 = (void *)sub_240954988();
  swift_bridgeObjectRelease();
  objc_msgSend(v162, sel_activateConstraints_, v136);

  id v137 = sub_240923458();
  id v138 = sub_240923464();
  id v139 = sub_240923488();
  id v140 = sub_240923494();
  id v141 = v137;
  LODWORD(v142) = 1148846080;
  objc_msgSend(v141, sel_setContentCompressionResistancePriority_forAxis_, 1, v142);
  LODWORD(v143) = 1148846080;
  objc_msgSend(v141, sel_setContentHuggingPriority_forAxis_, 1, v143);

  id v144 = v138;
  LODWORD(v145) = 1148846080;
  objc_msgSend(v144, sel_setContentCompressionResistancePriority_forAxis_, 1, v145);
  LODWORD(v146) = 1148846080;
  objc_msgSend(v144, sel_setContentHuggingPriority_forAxis_, 1, v146);

  id v147 = v139;
  LODWORD(v148) = 1148846080;
  objc_msgSend(v147, sel_setContentCompressionResistancePriority_forAxis_, 1, v148);
  LODWORD(v149) = 1148846080;
  objc_msgSend(v147, sel_setContentHuggingPriority_forAxis_, 1, v149);

  id v150 = v140;
  LODWORD(v151) = 1148846080;
  objc_msgSend(v150, sel_setContentCompressionResistancePriority_forAxis_, 1, v151);
  LODWORD(v152) = 1148846080;
  objc_msgSend(v150, sel_setContentHuggingPriority_forAxis_, 1, v152);

  id v153 = sub_2409238A0();
  LODWORD(v154) = 1148846080;
  objc_msgSend(v153, sel_setContentCompressionResistancePriority_forAxis_, 1, v154);
  LODWORD(v155) = 1148846080;
  objc_msgSend(v153, sel_setContentHuggingPriority_forAxis_, 1, v155);

  id v156 = sub_2409238A0();
  LODWORD(v157) = 1148846080;
  objc_msgSend(v156, sel_setContentCompressionResistancePriority_forAxis_, 0, v157);
  LODWORD(v158) = 1148846080;
  objc_msgSend(v156, sel_setContentHuggingPriority_forAxis_, 0, v158);

  uint64_t v159 = sub_2409253F4(v163);
  uint64_t v160 = (void *)sub_240954988();
  objc_msgSend(v162, sel_activateConstraints_, v160);

  return v159;
}

uint64_t sub_2409253F4(char a1)
{
  sub_2409268D8(0, (unint64_t *)&qword_26AFCF418, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  if (a1)
  {
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_24095B1E0;
    id v49 = sub_24092344C();
    id v50 = objc_msgSend(v49, sel_bottomAnchor);

    id v51 = sub_2409236A0();
    id v52 = objc_msgSend(v51, byte_2650D8625);

    id v53 = objc_msgSend(v50, sel_constraintEqualToAnchor_, v52);
    LODWORD(v54) = 1148829696;
    objc_msgSend(v53, sel_setPriority_, v54);
    *(void *)(v2 + 32) = v53;
    id v55 = sub_24092344C();
    id v56 = objc_msgSend(v55, sel_trailingAnchor);

    id v57 = sub_2409238A0();
    id v58 = objc_msgSend(v57, sel_leadingAnchor);

    id v59 = objc_msgSend(v56, sel_constraintEqualToAnchor_constant_, v58, -12.0);
    *(void *)(v2 + 40) = v59;
    id v60 = sub_2409238A0();
    id v61 = objc_msgSend(v60, sel_topAnchor);

    id v62 = sub_2409236A0();
    id v63 = objc_msgSend(v62, sel_topAnchor);

    id v64 = objc_msgSend(v61, sel_constraintGreaterThanOrEqualToAnchor_, v63);
    *(void *)(v2 + 48) = v64;
    id v65 = sub_24092347C();
    id v66 = objc_msgSend(v65, sel_topAnchor);

    id v67 = sub_2409236A0();
    id v68 = objc_msgSend(v67, sel_topAnchor);

    id v69 = objc_msgSend(v66, sel_constraintEqualToAnchor_, v68);
    LODWORD(v70) = 1148829696;
    objc_msgSend(v69, sel_setPriority_, v70);
    *(void *)(v2 + 56) = v69;
    id v71 = sub_24092347C();
    id v72 = objc_msgSend(v71, sel_leadingAnchor);

    id v73 = sub_2409238A0();
    id v74 = objc_msgSend(v73, sel_trailingAnchor);

    id v75 = objc_msgSend(v72, sel_constraintEqualToAnchor_constant_, v74, 12.0);
    *(void *)(v2 + 64) = v75;
    id v76 = sub_24092347C();
    id v77 = objc_msgSend(v76, sel_trailingAnchor);

    id v78 = sub_2409236A0();
    id v79 = objc_msgSend(v78, sel_trailingAnchor);

    id v80 = objc_msgSend(v77, sel_constraintEqualToAnchor_, v79);
    *(void *)(v2 + 72) = v80;
    id v81 = sub_24092347C();
    id v82 = objc_msgSend(v81, sel_bottomAnchor);

    id v83 = sub_2409236A0();
    id v84 = objc_msgSend(v83, sel_bottomAnchor);

    id v85 = objc_msgSend(v82, sel_constraintEqualToAnchor_, v84);
    LODWORD(v86) = 1148829696;
    objc_msgSend(v85, sel_setPriority_, v86);
    *(void *)(v2 + 80) = v85;
    id v87 = sub_24092344C();
    id v88 = objc_msgSend(v87, sel_centerYAnchor);

    id v89 = sub_24092347C();
    id v90 = objc_msgSend(v89, sel_centerYAnchor);

    id v91 = objc_msgSend(v88, sel_constraintEqualToAnchor_, v90);
    *(void *)(v2 + 88) = v91;
    id v92 = sub_24092344C();
    id v93 = objc_msgSend(v92, sel_centerYAnchor);

    id v94 = sub_2409236A0();
    id v95 = objc_msgSend(v94, sel_centerYAnchor);

    id v96 = objc_msgSend(v93, sel_constraintEqualToAnchor_, v95);
    *(void *)(v2 + 96) = v96;
    id v97 = sub_2409238A0();
    id v98 = objc_msgSend(v97, sel_centerYAnchor);

    id v99 = sub_2409236A0();
    id v100 = objc_msgSend(v99, sel_centerYAnchor);

    id v101 = objc_msgSend(v98, sel_constraintEqualToAnchor_, v100);
    *(void *)(v2 + 104) = v101;
    id v102 = sub_24092344C();
    id v103 = objc_msgSend(v102, sel_widthAnchor);

    id v104 = sub_24092347C();
    id v105 = objc_msgSend(v104, sel_widthAnchor);

    id v106 = objc_msgSend(v103, sel_constraintEqualToAnchor_, v105);
    *(void *)(v2 + 112) = v106;
    id v107 = sub_24092344C();
    id v108 = objc_msgSend(v107, sel_heightAnchor);

    id v109 = sub_24092347C();
    id v110 = objc_msgSend(v109, sel_heightAnchor);

    id v111 = objc_msgSend(v108, sel_constraintEqualToAnchor_, v110);
    *(void *)(v2 + 120) = v111;
    id v112 = sub_240923464();
    id v113 = objc_msgSend(v112, sel_firstBaselineAnchor);

    id v114 = sub_240923494();
    id v115 = objc_msgSend(v114, sel_firstBaselineAnchor);

    id v116 = objc_msgSend(v113, sel_constraintEqualToAnchor_, v115);
    *(void *)(v2 + 128) = v116;
    id v117 = sub_240923458();
    id v118 = objc_msgSend(v117, sel_firstBaselineAnchor);

    id v119 = sub_240923488();
    id v120 = objc_msgSend(v119, sel_firstBaselineAnchor);

    id v121 = objc_msgSend(v118, sel_constraintEqualToAnchor_, v120);
    *(void *)(v2 + 136) = v121;
    sub_2409549B8();
    id v122 = sub_240923458();
    id v123 = sub_240923464();
    objc_msgSend(v122, sel_setTextAlignment_, 4);
    objc_msgSend(v123, sel_setTextAlignment_, 4);

    id v124 = sub_240923488();
    id v125 = sub_240923494();
    id v48 = v124;
    if (sub_240954F28()) {
      uint64_t v126 = 0;
    }
    else {
      uint64_t v126 = 2;
    }
    objc_msgSend(v48, sel_setTextAlignment_, v126);

    id v47 = v125;
    if (sub_240954F28()) {
      uint64_t v127 = 0;
    }
    else {
      uint64_t v127 = 2;
    }
    objc_msgSend(v47, sel_setTextAlignment_, v127);
    id v46 = v47;
  }
  else
  {
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_24095B340;
    id v3 = sub_24092344C();
    id v4 = objc_msgSend(v3, sel_trailingAnchor);

    id v5 = sub_2409238A0();
    id v6 = objc_msgSend(v5, sel_leadingAnchor);

    id v7 = objc_msgSend(v4, sel_constraintLessThanOrEqualToAnchor_constant_, v6, -12.0);
    *(void *)(v2 + 32) = v7;
    id v8 = sub_2409238A0();
    id v9 = objc_msgSend(v8, sel_centerYAnchor);

    id v10 = sub_24092344C();
    id v11 = objc_msgSend(v10, sel_centerYAnchor);

    id v12 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v11);
    *(void *)(v2 + 40) = v12;
    id v13 = sub_2409238A0();
    id v14 = objc_msgSend(v13, sel_trailingAnchor);

    id v15 = sub_2409236A0();
    id v16 = objc_msgSend(v15, sel_trailingAnchor);

    id v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v16);
    *(void *)(v2 + 48) = v17;
    id v18 = sub_240923488();
    id v19 = objc_msgSend(v18, sel_leftAnchor);

    id v20 = sub_24092344C();
    id v21 = objc_msgSend(v20, sel_leftAnchor);

    id v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v21);
    *(void *)(v2 + 56) = v22;
    id v23 = sub_24092347C();
    id v24 = objc_msgSend(v23, sel_topAnchor);

    id v25 = sub_24092344C();
    id v26 = objc_msgSend(v25, sel_bottomAnchor);

    id v27 = objc_msgSend(v24, sel_constraintEqualToAnchor_constant_, v26, 12.0);
    LODWORD(v28) = 1148829696;
    objc_msgSend(v27, sel_setPriority_, v28);
    *(void *)(v2 + 64) = v27;
    id v29 = sub_24092347C();
    id v30 = objc_msgSend(v29, sel_leadingAnchor);

    id v31 = sub_2409236A0();
    id v32 = objc_msgSend(v31, sel_leadingAnchor);

    id v33 = objc_msgSend(v30, sel_constraintEqualToAnchor_, v32);
    *(void *)(v2 + 72) = v33;
    id v34 = sub_24092347C();
    id v35 = objc_msgSend(v34, sel_trailingAnchor);

    id v36 = sub_24092344C();
    id v37 = objc_msgSend(v36, sel_trailingAnchor);

    id v38 = objc_msgSend(v35, sel_constraintEqualToAnchor_, v37);
    *(void *)(v2 + 80) = v38;
    id v39 = sub_24092347C();
    id v40 = objc_msgSend(v39, sel_bottomAnchor);

    id v41 = sub_2409236A0();
    id v42 = objc_msgSend(v41, sel_bottomAnchor);

    id v43 = objc_msgSend(v40, sel_constraintEqualToAnchor_, v42);
    LODWORD(v44) = 1148829696;
    objc_msgSend(v43, sel_setPriority_, v44);
    *(void *)(v2 + 88) = v43;
    sub_2409549B8();
    id v45 = sub_240923458();
    id v46 = sub_240923464();
    id v47 = sub_240923488();
    id v48 = sub_240923494();
    objc_msgSend(v45, sel_setTextAlignment_, 4);
    objc_msgSend(v46, sel_setTextAlignment_, 4);
    objc_msgSend(v47, sel_setTextAlignment_, 4);
    objc_msgSend(v48, sel_setTextAlignment_, 4);
  }
  return v2;
}

void sub_240926074()
{
  id v1 = sub_240923464();
  id v2 = sub_240923458();
  id v3 = sub_240923470();
  id v4 = sub_240923494();
  id v5 = sub_240923488();
  id v6 = sub_240923560();
  objc_msgSend(v0, sel_addSubview_, v1);
  objc_msgSend(v0, sel_addSubview_, v2);
  objc_msgSend(v0, sel_addSubview_, v3);
  objc_msgSend(v0, sel_addSubview_, v4);
  objc_msgSend(v0, sel_addSubview_, v5);
  objc_msgSend(v0, sel_addSubview_, v6);

  id v7 = sub_2409238A0();
  objc_msgSend(v0, sel_addSubview_, v7);

  id v8 = sub_2409236A0();
  objc_msgSend(v0, sel_addLayoutGuide_, v8);

  id v9 = sub_24092344C();
  objc_msgSend(v0, sel_addLayoutGuide_, v9);

  id v10 = sub_24092347C();
  objc_msgSend(v0, sel_addLayoutGuide_, v10);

  id v11 = sub_240923464();
  if (qword_268C90600 != -1) {
    swift_once();
  }
  objc_msgSend(v11, sel_setTextColor_, qword_268C99270);

  id v12 = sub_240923494();
  objc_msgSend(v12, sel_setTextColor_, qword_268C99270);
}

uint64_t sub_24092624C(uint64_t a1)
{
  id v3 = objc_msgSend(self, sel_defaultMetrics);
  id v4 = sub_240923810();
  id v5 = objc_msgSend(v1, sel_traitCollection);
  id v6 = objc_msgSend(v3, sel_scaledFontForFont_compatibleWithTraitCollection_, v4, v5);

  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for ConceptDeltaHighlightFeedItemData() + 32));
  if (v7 == -1 || !v7 || v7 == 1)
  {
    id v8 = objc_msgSend(self, sel_configurationWithFont_, v6);
    id v9 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
    id v10 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v9, v8);

    if (v10)
    {

      return (uint64_t)v10;
    }
    __break(1u);
  }
  type metadata accessor for ComparisonResult(0);
  uint64_t result = sub_240955648();
  __break(1u);
  return result;
}

id sub_240926430()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConceptDeltaHighlightFeedItemView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_240926574()
{
  return type metadata accessor for ConceptDeltaHighlightFeedItemView();
}

uint64_t type metadata accessor for ConceptDeltaHighlightFeedItemView()
{
  uint64_t result = qword_268C91CE0;
  if (!qword_268C91CE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2409265C8()
{
  uint64_t result = type metadata accessor for ConceptDeltaHighlightFeedItemData();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ConceptDeltaHighlightFeedItemView.Layout(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240926758);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConceptDeltaHighlightFeedItemView.Layout()
{
  return &type metadata for ConceptDeltaHighlightFeedItemView.Layout;
}

unint64_t sub_240926794()
{
  unint64_t result = qword_268C91CF0;
  if (!qword_268C91CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91CF0);
  }
  return result;
}

void sub_2409267E8()
{
  if (!qword_268C91588)
  {
    sub_24083EDCC(255, &qword_268C91590);
    unint64_t v0 = sub_240954678();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C91588);
    }
  }
}

uint64_t sub_240926850(uint64_t a1, uint64_t a2)
{
  sub_2409268D8(0, &qword_268C91CF8, (uint64_t)&type metadata for ConceptDeltaHighlightRecordViewData, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2409268D8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_240926924(uint64_t a1)
{
  return a1;
}

void sub_24092695C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_2409269C0()
{
  unint64_t result = qword_268C91D00;
  if (!qword_268C91D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91D00);
  }
  return result;
}

char *sub_240926A14(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___leftGuide] = 0;
  *(void *)&v1[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___leftValueLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___leftDateLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___leftRangeView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___rightGuide] = 0;
  *(void *)&v1[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___rightValueLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___rightDateLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___rightRangeView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___containerLayoutGuide] = 0;
  v1[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___currentLayout] = 2;
  *(void *)&v1[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___currentLayoutConstraints] = 0;
  *(void *)&v1[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___deltaImageFont] = 0;
  *(void *)&v1[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___deltaImageView] = 0;
  sub_240903D68(a1, (uint64_t)&v1[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView_viewModel]);
  sub_240952808();
  int v3 = v1;
  uint64_t v4 = (void *)sub_2409527D8();
  uint64_t v5 = sub_2409527E8();

  *(void *)&v3[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView_profile] = v5;
  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for ConceptDeltaHighlightFeedItemView();
  uint64_t v6 = (char *)objc_msgSendSuper2(&v12, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_240926074();
  id v7 = objc_msgSend(self, sel__preferredFontForTextStyle_design_weight_, *MEMORY[0x263F835B8], *MEMORY[0x263F81778], *MEMORY[0x263F81828]);
  id v8 = sub_240923464();
  objc_msgSend(v8, sel_setFont_, v7);

  id v9 = sub_240923494();
  objc_msgSend(v9, sel_setFont_, v7);

  char v10 = sub_24092371C();
  *(void *)&v6[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___currentLayoutConstraints] = sub_24092454C(v10);
  swift_bridgeObjectRelease();
  sub_240923E1C(a1);

  sub_2408DA060(a1);
  return v6;
}

void sub_240926C2C()
{
  *(void *)&v0[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___leftGuide] = 0;
  *(void *)&v0[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___leftValueLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___leftDateLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___leftRangeView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___rightGuide] = 0;
  *(void *)&v0[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___rightValueLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___rightDateLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___rightRangeView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___containerLayoutGuide] = 0;
  v0[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___currentLayout] = 2;
  *(void *)&v0[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___currentLayoutConstraints] = 0;
  *(void *)&v0[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___deltaImageFont] = 0;
  *(void *)&v0[OBJC_IVAR____TtC13HealthRecords33ConceptDeltaHighlightFeedItemView____lazy_storage___deltaImageView] = 0;

  sub_2409553A8();
  __break(1u);
}

uint64_t *sub_240926D2C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2409528B8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    id v9 = (uint64_t *)((char *)a1 + v8);
    char v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *id v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = a3[7];
    id v13 = (char *)a1 + v12;
    id v14 = (char *)a2 + v12;
    uint64_t v15 = sub_240951A28();
    uint64_t v16 = *(void *)(v15 - 8);
    id v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    if (v17(v14, 1, v15))
    {
      sub_240849BDC();
      memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
  }
  return a1;
}

uint64_t sub_240926EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 28);
  uint64_t v6 = sub_240951A28();
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v5, 1, v6);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v5, v6);
  }
  return result;
}

uint64_t sub_240927004(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  id v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_240951A28();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  if (v16(v13, 1, v14))
  {
    sub_240849BDC();
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_24092717C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = sub_240951A28();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    sub_240849BDC();
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t sub_240927364(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_240951A28();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_240849BDC();
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_2409274C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2409528B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_240951A28();
  uint64_t v16 = *(void *)(v15 - 8);
  int v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    sub_240849BDC();
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_240927698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2409276AC);
}

uint64_t sub_2409276AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2409528B8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    sub_240849BDC();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 28);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_2409277DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2409277F0);
}

uint64_t sub_2409277F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_2409528B8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  else
  {
    sub_240849BDC();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for RecordKindFeedItemData()
{
  uint64_t result = qword_26AFCFF70;
  if (!qword_26AFCFF70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_24092796C()
{
  sub_2409528B8();
  if (v0 <= 0x3F)
  {
    sub_240849BDC();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_240927A4C()
{
  uint64_t v1 = sub_240951A28();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240849BDC();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409528B8();
  sub_240928DA4(&qword_268C90DD0, MEMORY[0x263F46018]);
  sub_240954708();
  uint64_t v8 = type metadata accessor for RecordKindFeedItemData();
  sub_240955738();
  swift_bridgeObjectRetain();
  sub_240954868();
  swift_bridgeObjectRelease();
  sub_2409287C0(v0 + *(int *)(v8 + 28), (uint64_t)v7, (uint64_t (*)(void))sub_240849BDC);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1) {
    return sub_240955718();
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  sub_240955718();
  sub_240928DA4(&qword_268C90D10, MEMORY[0x263F07490]);
  sub_240954708();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_240927CD0(void *a1)
{
  sub_24092875C(0, &qword_268C91D30, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v9[-v6];
  sub_2408304E8(a1, a1[3]);
  sub_240928708();
  sub_240955778();
  v9[15] = 0;
  sub_2409528B8();
  sub_240928DA4(&qword_268C90DC8, MEMORY[0x263F46018]);
  sub_240955598();
  if (!v1)
  {
    type metadata accessor for RecordKindFeedItemData();
    v9[14] = 1;
    sub_2409555A8();
    v9[13] = 2;
    sub_240955558();
    v9[12] = 3;
    sub_240951A28();
    sub_240928DA4(&qword_26AFCC680, MEMORY[0x263F07490]);
    sub_240955548();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_240927F44@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  sub_240849BDC();
  MEMORY[0x270FA5388](v3 - 8);
  id v26 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2409528B8();
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v29 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24092875C(0, &qword_268C91D20, MEMORY[0x263F8E040]);
  uint64_t v30 = v7;
  uint64_t v27 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v24 - v8;
  uint64_t v10 = type metadata accessor for RecordKindFeedItemData();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408304E8(a1, a1[3]);
  sub_240928708();
  uint64_t v13 = (uint64_t)v31;
  sub_240955768();
  if (v13) {
    return sub_2408371B8((uint64_t)a1);
  }
  id v31 = a1;
  uint64_t v14 = (uint64_t)v12;
  uint64_t v15 = v28;
  char v35 = 0;
  sub_240928DA4(&qword_268C90DB8, MEMORY[0x263F46018]);
  uint64_t v16 = v29;
  uint64_t v17 = v30;
  sub_2409554F8();
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v14, v16, v5);
  char v34 = 1;
  uint64_t v18 = v10;
  *(void *)(v14 + *(int *)(v10 + 20)) = sub_240955508();
  char v33 = 2;
  uint64_t v19 = sub_2409554B8();
  uint64_t v20 = (uint64_t *)(v14 + *(int *)(v10 + 24));
  *uint64_t v20 = v19;
  v20[1] = v21;
  sub_240951A28();
  char v32 = 3;
  sub_240928DA4(&qword_26AFCC688, MEMORY[0x263F07490]);
  uint64_t v22 = (uint64_t)v26;
  sub_2409554A8();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v17);
  sub_240882AA0(v22, v14 + *(int *)(v18 + 28));
  sub_2409287C0(v14, v25, (uint64_t (*)(void))type metadata accessor for RecordKindFeedItemData);
  sub_2408371B8((uint64_t)v31);
  return sub_240928D44(v14, (uint64_t (*)(void))type metadata accessor for RecordKindFeedItemData);
}

uint64_t sub_24092841C()
{
  uint64_t result = 0x79726F6765746163;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x49747065636E6F63;
      break;
    case 2:
      uint64_t result = 0x656C746974;
      break;
    case 3:
      uint64_t result = 0x66676E696E61656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2409284C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_240928FF8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2409284E8(uint64_t a1)
{
  unint64_t v2 = sub_240928708();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_240928524(uint64_t a1)
{
  unint64_t v2 = sub_240928708();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_240928560@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240927F44(a1, a2);
}

uint64_t sub_240928578(void *a1)
{
  return sub_240927CD0(a1);
}

uint64_t sub_240928590()
{
  return sub_240955748();
}

uint64_t sub_2409285D4()
{
  return sub_240955748();
}

uint64_t sub_240928614()
{
  return sub_240928DA4(&qword_268C91D10, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
}

uint64_t sub_24092865C(void *a1)
{
  a1[1] = sub_240928DA4(&qword_268C91288, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
  a1[2] = sub_240928DA4(&qword_268C91030, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
  uint64_t result = sub_240928DA4(&qword_268C91D18, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
  a1[3] = result;
  return result;
}

unint64_t sub_240928708()
{
  unint64_t result = qword_268C91D28;
  if (!qword_268C91D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91D28);
  }
  return result;
}

void sub_24092875C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_240928708();
    unint64_t v7 = a3(a1, &type metadata for RecordKindFeedItemData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_2409287C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

BOOL sub_240928828(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240951A28();
  uint64_t v49 = *(void *)(v4 - 8);
  uint64_t v50 = v4;
  MEMORY[0x270FA5388](v4);
  id v47 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408834C8();
  uint64_t v48 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240849BDC();
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v45 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v45 - v16;
  sub_2409528B8();
  sub_240928DA4(&qword_268C90DD8, MEMORY[0x263F46018]);
  uint64_t v18 = a1;
  sub_240954968();
  uint64_t v19 = a2;
  sub_240954968();
  if (v52 != v51) {
    return 0;
  }
  id v45 = v12;
  id v46 = v15;
  uint64_t v20 = (uint64_t)v17;
  uint64_t v22 = v49;
  uint64_t v21 = v50;
  uint64_t v23 = type metadata accessor for RecordKindFeedItemData();
  if (*(void *)(a1 + *(int *)(v23 + 20)) != *(void *)(v19 + *(int *)(v23 + 20))) {
    return 0;
  }
  uint64_t v24 = v23;
  uint64_t v25 = v18;
  uint64_t v26 = v19;
  uint64_t v27 = v25;
  uint64_t v28 = *(int *)(v23 + 24);
  uint64_t v29 = *(void *)(v25 + v28);
  uint64_t v30 = *(void *)(v25 + v28 + 8);
  id v31 = (void *)(v26 + v28);
  if (v29 == *v31 && v30 == v31[1] || (v32 = sub_240955618(), BOOL result = 0, (v32 & 1) != 0))
  {
    sub_2409287C0(v27 + *(int *)(v24 + 28), v20, (uint64_t (*)(void))sub_240849BDC);
    uint64_t v34 = v26 + *(int *)(v24 + 28);
    uint64_t v35 = (uint64_t)v46;
    sub_2409287C0(v34, (uint64_t)v46, (uint64_t (*)(void))sub_240849BDC);
    uint64_t v36 = (uint64_t)v8;
    uint64_t v37 = v35;
    uint64_t v38 = v36 + *(int *)(v48 + 48);
    sub_2409287C0(v20, v36, (uint64_t (*)(void))sub_240849BDC);
    sub_2409287C0(v37, v38, (uint64_t (*)(void))sub_240849BDC);
    id v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
    uint64_t v40 = v21;
    if (v39(v36, 1, v21) == 1)
    {
      sub_240928D44(v37, (uint64_t (*)(void))sub_240849BDC);
      sub_240928D44(v20, (uint64_t (*)(void))sub_240849BDC);
      if (v39(v38, 1, v21) == 1)
      {
        sub_240928D44(v36, (uint64_t (*)(void))sub_240849BDC);
        return 1;
      }
    }
    else
    {
      uint64_t v41 = (uint64_t)v45;
      sub_2409287C0(v36, (uint64_t)v45, (uint64_t (*)(void))sub_240849BDC);
      if (v39(v38, 1, v21) != 1)
      {
        id v42 = v47;
        (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v47, v38, v40);
        sub_240928DA4(&qword_268C90D18, MEMORY[0x263F07490]);
        char v43 = sub_240954778();
        double v44 = *(void (**)(char *, uint64_t))(v22 + 8);
        v44(v42, v40);
        sub_240928D44((uint64_t)v46, (uint64_t (*)(void))sub_240849BDC);
        sub_240928D44(v20, (uint64_t (*)(void))sub_240849BDC);
        v44((char *)v41, v40);
        sub_240928D44(v36, (uint64_t (*)(void))sub_240849BDC);
        return (v43 & 1) != 0;
      }
      sub_240928D44((uint64_t)v46, (uint64_t (*)(void))sub_240849BDC);
      sub_240928D44(v20, (uint64_t (*)(void))sub_240849BDC);
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v41, v21);
    }
    sub_240928D44(v36, (uint64_t (*)(void))sub_2408834C8);
    return 0;
  }
  return result;
}

uint64_t sub_240928D44(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_240928DA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RecordKindFeedItemData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x240928EB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecordKindFeedItemData.CodingKeys()
{
  return &type metadata for RecordKindFeedItemData.CodingKeys;
}

unint64_t sub_240928EF4()
{
  unint64_t result = qword_268C91D38;
  if (!qword_268C91D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91D38);
  }
  return result;
}

unint64_t sub_240928F4C()
{
  unint64_t result = qword_268C91D40;
  if (!qword_268C91D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91D40);
  }
  return result;
}

unint64_t sub_240928FA4()
{
  unint64_t result = qword_268C91D48;
  if (!qword_268C91D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91D48);
  }
  return result;
}

uint64_t sub_240928FF8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x79726F6765746163 && a2 == 0xEC000000646E694BLL;
  if (v2 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x49747065636E6F63 && a2 == 0xE900000000000064 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_240955618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x66676E696E61656DLL && a2 == 0xEE00657461446C75)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_240955618();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_2409291F4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for HealthRecordsGeneratorContext();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2409540C8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954058();
  uint64_t v13 = sub_2409540B8();
  os_log_type_t v14 = sub_240954C38();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v27 = a3;
    uint64_t v16 = v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v28 = v17;
    uint64_t v29 = a2;
    *(_DWORD *)uint64_t v16 = 136446466;
    uint64_t v26 = a1;
    swift_getMetatypeMetadata();
    uint64_t v18 = sub_2409547E8();
    uint64_t v29 = sub_2408370E4(v18, v19, &v28);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    uint64_t v29 = type metadata accessor for NewRecordsGenerator();
    sub_2409298F4();
    uint64_t v20 = sub_2409547E8();
    uint64_t v29 = sub_2408370E4(v20, v21, &v28);
    a1 = v26;
    sub_2409550B8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v13, v14, "[%{public}s]: Emitting %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v17, -1, -1);
    uint64_t v22 = v16;
    a3 = v27;
    MEMORY[0x2456021C0](v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_24083B4E8(a1, (uint64_t)v8);
  uint64_t v23 = type metadata accessor for NewRecordsGenerator();
  swift_allocObject();
  uint64_t v24 = sub_24081E954((uint64_t)v8);
  a3[3] = v23;
  uint64_t result = sub_2408397FC(&qword_26AFCFA68, (void (*)(uint64_t))type metadata accessor for NewRecordsGenerator);
  a3[4] = result;
  *a3 = v24;
  return result;
}

uint64_t sub_2409294F8()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HealthRecords27NewRecordsGeneratorPipeline_domain;
  uint64_t v2 = sub_240951F18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_24083B3B4(v0 + OBJC_IVAR____TtC13HealthRecords27NewRecordsGeneratorPipeline_context);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_2409295E0()
{
  return type metadata accessor for NewRecordsGeneratorPipeline();
}

uint64_t sub_2409295E8()
{
  uint64_t result = sub_240951F18();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for HealthRecordsGeneratorContext();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

void sub_2409296CC()
{
  if (!qword_26AFD0618)
  {
    sub_24090C898();
    sub_2408484BC(255, qword_26AFD07C0);
    unint64_t v0 = sub_240955758();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFD0618);
    }
  }
}

uint64_t sub_24092974C()
{
  uint64_t v1 = (int *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_240929848@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_2409291F4(v1 + v4, v5, a1);
}

unint64_t sub_2409298F4()
{
  unint64_t result = qword_268C91D50;
  if (!qword_268C91D50)
  {
    type metadata accessor for NewRecordsGenerator();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C91D50);
  }
  return result;
}

id sub_240929930()
{
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for SharedConceptTileViewController();
  objc_msgSendSuper2(&v4, sel_viewDidLoad);
  id result = objc_msgSend(v0, sel_view);
  if (result)
  {
    uint64_t v2 = result;
    objc_msgSend(result, sel_addSubview_, *(void *)&v0[qword_268C91D58]);

    id result = objc_msgSend(v0, sel_view);
    if (result)
    {
      uint64_t v3 = result;
      objc_msgSend(result, sel_addSubview_, *(void *)&v0[qword_268C91D60]);

      sub_240929A40();
      return (id)sub_240929EB4();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_2409299F8(void *a1)
{
  id v1 = a1;
  sub_240929930();
}

void sub_240929A40()
{
  sub_2408B2F90(0, (unint64_t *)&qword_26AFCF418, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_24095B6C0;
  uint64_t v2 = *(void **)&v0[qword_268C91D58];
  id v3 = objc_msgSend(v2, sel_leadingAnchor);
  id v4 = objc_msgSend(v0, sel_view);
  if (!v4)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v5 = v4;
  id v6 = objc_msgSend(v4, sel_leadingAnchor);

  id v7 = objc_msgSend(v3, sel_constraintEqualToAnchor_, v6);
  *(void *)(v1 + 32) = v7;
  id v8 = objc_msgSend(v2, sel_trailingAnchor);
  id v9 = objc_msgSend(v0, sel_view);
  if (!v9)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v10 = v9;
  id v11 = objc_msgSend(v9, sel_trailingAnchor);

  id v12 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v11);
  *(void *)(v1 + 40) = v12;
  id v13 = objc_msgSend(v2, sel_topAnchor);
  id v14 = objc_msgSend(v0, sel_view);
  if (!v14)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v15 = v14;
  id v16 = objc_msgSend(v14, sel_topAnchor);

  id v17 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v16);
  *(void *)(v1 + 48) = v17;
  id v18 = objc_msgSend(v2, sel_bottomAnchor);
  unint64_t v19 = *(void **)&v0[qword_268C91D60];
  id v20 = objc_msgSend(v19, sel_topAnchor);
  id v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v20);

  *(void *)(v1 + 56) = v21;
  id v22 = objc_msgSend(v19, sel_leadingAnchor);
  id v23 = objc_msgSend(v0, sel_view);
  if (!v23)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v24 = v23;
  id v25 = objc_msgSend(v23, sel_leadingAnchor);

  id v26 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v25);
  *(void *)(v1 + 64) = v26;
  id v27 = objc_msgSend(v19, sel_trailingAnchor);
  id v28 = objc_msgSend(v0, sel_view);
  if (!v28)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v29 = v28;
  id v30 = objc_msgSend(v28, sel_trailingAnchor);

  id v31 = objc_msgSend(v27, sel_constraintEqualToAnchor_constant_, v30, -16.0);
  *(void *)(v1 + 72) = v31;
  id v32 = objc_msgSend(v19, sel_bottomAnchor);
  id v33 = objc_msgSend(v0, sel_view);
  if (!v33)
  {
LABEL_15:
    __break(1u);
    return;
  }
  uint64_t v34 = v33;
  uint64_t v35 = self;
  id v36 = objc_msgSend(v34, sel_bottomAnchor);

  id v37 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v36);
  *(void *)(v1 + 80) = v37;
  sub_2409549B8();
  sub_24083EDCC(0, &qword_268C91A80);
  id v38 = (id)sub_240954988();
  swift_bridgeObjectRelease();
  objc_msgSend(v35, sel_activateConstraints_, v38);
}

uint64_t sub_240929EB4()
{
  uint64_t v1 = v0;
  sub_24092BC60(0, &qword_268C90818, MEMORY[0x263F46198]);
  MEMORY[0x270FA5388](v2 - 8);
  id v21 = (char *)&v20 - v3;
  uint64_t v4 = sub_240953318();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24092BC60(0, qword_26AFCCF80, (void (*)(uint64_t))type metadata accessor for SharedConceptFeedItemData);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = type metadata accessor for SharedConceptFeedItemData(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x60);
  swift_beginAccess();
  sub_24092BD1C(v15, (uint64_t)v10, qword_26AFCCF80, (void (*)(uint64_t))type metadata accessor for SharedConceptFeedItemData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_24092BDE8((uint64_t)v10, qword_26AFCCF80, (void (*)(uint64_t))type metadata accessor for SharedConceptFeedItemData);
  }
  sub_240865A20((uint64_t)v10, (uint64_t)v14);
  sub_24092A238((uint64_t)v14, (uint64_t)v7);
  v22[3] = v4;
  v22[4] = MEMORY[0x263F46190];
  id v17 = sub_240851B6C(v22);
  id v18 = *(void (**)(uint64_t *, char *, uint64_t))(v5 + 16);
  v18(v17, v7, v4);
  sub_240952F18();
  unint64_t v19 = v21;
  v18((uint64_t *)v21, v7, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v19, 0, 1, v4);
  sub_240952F48();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_24092BD88((uint64_t)v14, type metadata accessor for SharedConceptFeedItemData);
}

uint64_t sub_24092A238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v116 = a2;
  uint64_t v115 = sub_240951A28();
  uint64_t v114 = *(void *)(v115 - 8);
  MEMORY[0x270FA5388](v115);
  id v113 = (char *)&v99 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24092BC60(0, &qword_268C90F38, (void (*)(uint64_t))type metadata accessor for SharedConceptCodedValue);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v103 = (uint64_t)&v99 - v5;
  uint64_t v6 = type metadata accessor for SharedConceptFeedItemData(0);
  MEMORY[0x270FA5388](v6);
  id v107 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_240951808();
  uint64_t v101 = *(void *)(v102 - 8);
  MEMORY[0x270FA5388](v102);
  id v100 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24092BC60(0, (unint64_t *)&qword_26AFCE258, sub_2408B7104);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  id v108 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v99 - v12;
  id v121 = (void *)type metadata accessor for SharedConceptCodedValue(0);
  id v109 = (char *)*(v121 - 1);
  uint64_t v14 = MEMORY[0x270FA5388](v121);
  id v106 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  id v17 = (char *)&v99 - v16;
  uint64_t v105 = sub_240952B98();
  uint64_t v104 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  unint64_t v19 = (char *)&v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24092BC60(0, &qword_26AFCC6A8, MEMORY[0x263F07690]);
  MEMORY[0x270FA5388](v20 - 8);
  id v22 = (char *)&v99 - v21;
  uint64_t v23 = sub_2409526C8();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  id v26 = (char *)&v99 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = a1 + *(int *)(v6 + 24);
  uint64_t v28 = sub_2409528B8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  uint64_t v29 = *MEMORY[0x263F45F00];
  uint64_t v111 = v24;
  id v30 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 104);
  id v110 = v26;
  uint64_t v112 = v23;
  v30(v26, v29, v23);
  uint64_t v118 = a1;
  uint64_t v119 = v6;
  id v31 = (long long *)(a1 + *(int *)(v6 + 44));
  long long v32 = *v31;
  long long v33 = v31[1];
  uint64_t v34 = *((void *)v31 + 4);
  uint64_t v35 = *((void *)v31 + 5);
  uint64_t v36 = *((void *)v31 + 6);
  uint64_t v37 = *((void *)v31 + 7);
  uint64_t v38 = *((void *)v31 + 8);
  id v120 = v31;
  uint64_t v39 = *((void *)v31 + 9);
  uint64_t v40 = *((void *)v31 + 10);
  long long v122 = v32;
  long long v123 = v33;
  uint64_t v124 = v34;
  uint64_t v125 = v35;
  uint64_t v126 = v36;
  uint64_t v127 = v37;
  uint64_t v128 = v38;
  uint64_t v129 = v39;
  uint64_t v130 = v40;
  sub_240878DAC();
  if (sub_240952E98())
  {
    uint64_t v41 = sub_240951AB8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v22, 1, 1, v41);
    sub_240952B88();
    id v108 = (char *)sub_240954828();
    id v109 = v42;
    (*(void (**)(char *, uint64_t))(v104 + 8))(v19, v105);
    sub_24092BDE8((uint64_t)v22, &qword_26AFCC6A8, MEMORY[0x263F07690]);
    id v121 = 0;
    goto LABEL_35;
  }
  *(void *)&long long v122 = MEMORY[0x263F8EE78];
  uint64_t v43 = *(void *)(v35 + 16);
  if (v43)
  {
    uint64_t v44 = v35 + ((v109[80] + 32) & ~(unint64_t)v109[80]);
    uint64_t v45 = *((void *)v109 + 9);
    uint64_t v105 = v35;
    swift_bridgeObjectRetain();
    id v46 = v121;
    do
    {
      sub_24092BCB4(v44, (uint64_t)v17, type metadata accessor for SharedConceptCodedValue);
      sub_24092BD1C((uint64_t)&v17[*((int *)v46 + 5)], (uint64_t)v13, (unint64_t *)&qword_26AFCE258, sub_2408B7104);
      sub_2408B7104(0);
      uint64_t v48 = v47;
      uint64_t v49 = *(void *)(v47 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v13, 1, v47) == 1)
      {
        sub_24092BDE8((uint64_t)v13, (unint64_t *)&qword_26AFCE258, sub_2408B7104);
        sub_24092BD88((uint64_t)v17, type metadata accessor for SharedConceptCodedValue);
      }
      else
      {
        sub_240954658();
        (*(void (**)(char *, uint64_t))(v49 + 8))(v13, v48);
        uint64_t v50 = sub_24092BD88((uint64_t)v17, type metadata accessor for SharedConceptCodedValue);
        MEMORY[0x245600C60](v50);
        if (*(void *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_240954A08();
        }
        sub_240954A28();
        sub_2409549B8();
        id v46 = v121;
      }
      v44 += v45;
      --v43;
    }
    while (v43);
    unint64_t v51 = v122;
  }
  else
  {
    swift_bridgeObjectRetain();
    unint64_t v51 = MEMORY[0x263F8EE78];
    id v46 = v121;
  }
  swift_bridgeObjectRelease();
  uint64_t v52 = v118;
  uint64_t v53 = (uint64_t)v107;
  double v54 = v109;
  uint64_t v55 = (uint64_t)v108;
  uint64_t v56 = (uint64_t)v106;
  if (v51 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v59 = sub_2409553D8();
    swift_bridgeObjectRelease();
    if (v59) {
      goto LABEL_15;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    id v121 = 0;
    goto LABEL_21;
  }
  if (!*(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_20;
  }
LABEL_15:
  if ((v51 & 0xC000000000000001) != 0)
  {
    id v57 = (id)MEMORY[0x2456015B0](0, v51);
  }
  else
  {
    if (!*(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_39;
    }
    id v57 = *(id *)(v51 + 32);
  }
  id v58 = v57;
  swift_bridgeObjectRelease();
  id v121 = objc_msgSend(self, sel_referenceRangeViewDataFromInspectableValueInRange_, v58);

LABEL_21:
  uint64_t v60 = *((void *)v120 + 5);
  if (!*(void *)(v60 + 16))
  {
LABEL_24:
    sub_24092BCB4(v52, v53, type metadata accessor for SharedConceptFeedItemData);
    goto LABEL_25;
  }
  sub_24092BCB4(v60 + ((v54[80] + 32) & ~(unint64_t)v54[80]), v56, type metadata accessor for SharedConceptCodedValue);
  sub_24092BD1C(v56 + *((int *)v46 + 5), v55, (unint64_t *)&qword_26AFCE258, sub_2408B7104);
  sub_2408B7104(0);
  uint64_t v62 = v61;
  uint64_t v63 = *(void *)(v61 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v55, 1, v61) == 1)
  {
    sub_24092BDE8(v55, (unint64_t *)&qword_26AFCE258, sub_2408B7104);
    sub_24092BD88(v56, type metadata accessor for SharedConceptCodedValue);
    goto LABEL_24;
  }
  id v67 = (void *)sub_240954658();
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v55, v62);
  sub_24092BD88(v56, type metadata accessor for SharedConceptCodedValue);
  id v68 = objc_msgSend(v67, sel_currentValue);

  id v69 = objc_msgSend(v68, sel_displayString);
  uint64_t v70 = sub_2409547C8();
  uint64_t v72 = v71;

  *(void *)&long long v122 = v70;
  *((void *)&v122 + 1) = v72;
  id v73 = v100;
  sub_2409517E8();
  sub_240864EE4();
  uint64_t v74 = sub_2409550F8();
  id v76 = v75;
  (*(void (**)(char *, uint64_t))(v101 + 8))(v73, v102);
  swift_bridgeObjectRelease();
  sub_24092BCB4(v52, v53, type metadata accessor for SharedConceptFeedItemData);
  if (v76)
  {
    id v109 = v76;
    id v108 = (char *)v74;
    id v77 = type metadata accessor for SharedConceptFeedItemData;
    uint64_t v78 = v53;
LABEL_33:
    sub_24092BD88(v78, v77);
    goto LABEL_34;
  }
LABEL_25:
  uint64_t v64 = *(void *)(v53 + *(int *)(v119 + 44) + 40);
  if (*(void *)(v64 + 16))
  {
    uint64_t v65 = v103;
    sub_24092BCB4(v64 + ((v54[80] + 32) & ~(unint64_t)v54[80]), v103, type metadata accessor for SharedConceptCodedValue);
    uint64_t v66 = 0;
  }
  else
  {
    uint64_t v66 = 1;
    uint64_t v65 = v103;
  }
  (*((void (**)(uint64_t, uint64_t, uint64_t, void *))v54 + 7))(v65, v66, 1, v46);
  sub_24092BD88(v53, type metadata accessor for SharedConceptFeedItemData);
  if ((*((unsigned int (**)(uint64_t, uint64_t, void *))v54 + 6))(v65, 1, v46) != 1)
  {
    id v79 = (char **)(v65 + *((int *)v46 + 7));
    id v80 = v79[1];
    id v108 = *v79;
    id v109 = v80;
    swift_bridgeObjectRetain();
    id v77 = type metadata accessor for SharedConceptCodedValue;
    uint64_t v78 = v65;
    goto LABEL_33;
  }
  sub_24092BDE8(v65, &qword_268C90F38, (void (*)(uint64_t))type metadata accessor for SharedConceptCodedValue);
  id v108 = 0;
  id v109 = 0;
LABEL_34:
  id v81 = objc_msgSend(self, sel_sharedConverter);
  id v82 = (void *)sub_240954788();
  id v83 = objc_msgSend(v81, sel_synonymForUCUMUnitString_, v82);

  sub_2409547C8();
LABEL_35:
  sub_240952808();
  id v84 = (void *)sub_2409527D8();
  uint64_t v85 = (uint64_t)v117 + *(void *)((*MEMORY[0x263F8EED0] & *v117) + 0x70);
  swift_beginAccess();
  sub_240912B3C(v85, (uint64_t)&v122, (uint64_t)&qword_26AFCF770, (uint64_t)&qword_26AFCF760, MEMORY[0x263F444A0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_240851A5C);
  uint64_t v86 = *((void *)&v123 + 1);
  if (*((void *)&v123 + 1))
  {
    id v87 = sub_2408304E8(&v122, *((uint64_t *)&v123 + 1));
    uint64_t v88 = *(void *)(v86 - 8);
    MEMORY[0x270FA5388](v87);
    id v90 = (char *)&v99 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v88 + 16))(v90);
    id v91 = (void *)sub_240953B98();
    (*(void (**)(char *, uint64_t))(v88 + 8))(v90, v86);
    id v92 = (void *)sub_2409527E8();

    sub_2408371B8((uint64_t)&v122);
    id v93 = objc_msgSend(v92, sel_utcDateFormatter);
    id v94 = v113;
    sub_2409519D8();
    id v95 = (void *)sub_2409519A8();
    (*(void (**)(char *, uint64_t))(v114 + 8))(v94, v115);
    id v96 = objc_msgSend(v93, sel_relativeStringFromDate_, v95);

    sub_2409547C8();
    swift_bridgeObjectRetain();
    id v97 = v110;
    sub_2409525F8();
    sub_240952688();
    sub_2409532F8();

    return (*(uint64_t (**)(char *, uint64_t))(v111 + 8))(v97, v112);
  }
LABEL_39:

  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_24092B268(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v37 = a1;
  sub_24092BC60(0, qword_26AFCCF80, (void (*)(uint64_t))type metadata accessor for SharedConceptFeedItemData);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v36 - v4;
  uint64_t v6 = type metadata accessor for SharedConceptFeedItemData(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v36 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v38 = (uint64_t)&v36 - v10;
  sub_240952808();
  uint64_t v11 = (void *)sub_2409527D8();
  uint64_t v12 = (uint64_t)v2 + *(void *)((*MEMORY[0x263F8EED0] & *v2) + 0x70);
  swift_beginAccess();
  uint64_t result = sub_240912B3C(v12, (uint64_t)v40, (uint64_t)&qword_26AFCF770, (uint64_t)&qword_26AFCF760, MEMORY[0x263F444A0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_240851A5C);
  uint64_t v14 = v41;
  if (v41)
  {
    uint64_t v15 = sub_2408304E8(v40, v41);
    uint64_t v16 = *(void *)(v14 - 8);
    MEMORY[0x270FA5388](v15);
    uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v16 + 16))(v18);
    unint64_t v19 = (void *)sub_240953B98();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v14);
    uint64_t v20 = (void *)sub_2409527E8();

    sub_2408371B8((uint64_t)v40);
    uint64_t v21 = (uint64_t)v2 + *(void *)((*MEMORY[0x263F8EED0] & *v2) + 0x60);
    swift_beginAccess();
    sub_24092BD1C(v21, (uint64_t)v5, qword_26AFCCF80, (void (*)(uint64_t))type metadata accessor for SharedConceptFeedItemData);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {

      return sub_24092BDE8((uint64_t)v5, qword_26AFCCF80, (void (*)(uint64_t))type metadata accessor for SharedConceptFeedItemData);
    }
    else
    {
      uint64_t v22 = v38;
      sub_240865A20((uint64_t)v5, v38);
      uint64_t v23 = v36;
      sub_24092BCB4(v22, v36, type metadata accessor for SharedConceptFeedItemData);
      uint64_t v24 = (objc_class *)type metadata accessor for SharedConceptDetailViewController();
      uint64_t v25 = (char *)objc_allocWithZone(v24);
      sub_24092BCB4(v23, (uint64_t)&v25[qword_268C991B0], type metadata accessor for SharedConceptFeedItemData);
      *(void *)&v25[qword_268C991B8] = v20;
      id v26 = objc_allocWithZone(MEMORY[0x263F82570]);
      id v27 = v20;
      id v28 = objc_msgSend(v26, sel_init);
      v39.receiver = v25;
      v39.super_class = v24;
      id v29 = objc_msgSendSuper2(&v39, sel_initWithCollectionViewLayout_, v28);

      sub_24092BD88(v23, type metadata accessor for SharedConceptFeedItemData);
      sub_240912B3C(v37, (uint64_t)v40, (uint64_t)&qword_268C91A60, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8D8F0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_2408B2F90);
      uint64_t v30 = v41;
      if (v41)
      {
        id v31 = sub_2408304E8(v40, v41);
        uint64_t v32 = *(void *)(v30 - 8);
        MEMORY[0x270FA5388](v31);
        uint64_t v34 = (char *)&v36 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v32 + 16))(v34);
        uint64_t v35 = sub_2409555F8();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v30);
        sub_2408371B8((uint64_t)v40);
      }
      else
      {
        uint64_t v35 = 0;
      }
      objc_msgSend(v2, sel_showViewController_sender_, v29, v35);

      swift_unknownObjectRelease();
      return sub_24092BD88(v22, type metadata accessor for SharedConceptFeedItemData);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_24092B828(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = qword_268C91D58;
  id v7 = objc_allocWithZone((Class)sub_240952F28());
  uint64_t v8 = v3;
  *(void *)&v3[v6] = objc_msgSend(v7, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v9 = qword_268C91D60;
  *(void *)&v8[v9] = objc_msgSend(objc_allocWithZone((Class)sub_240952F58()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v10 = &v8[qword_268C91D68];
  *((void *)v10 + 4) = 0;
  *(_OWORD *)uint64_t v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;

  if (a2)
  {
    uint64_t v11 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = 0;
  }
  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for SharedConceptTileViewController();
  id v12 = objc_msgSendSuper2(&v14, sel_initWithNibName_bundle_, v11, a3);

  return v12;
}

id sub_24092B958(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    uint64_t v5 = sub_2409547C8();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  id v8 = a4;
  return sub_24092B828(v5, v7, a4);
}

id sub_24092B9B8(void *a1)
{
  uint64_t v3 = qword_268C91D58;
  id v4 = objc_allocWithZone((Class)sub_240952F28());
  uint64_t v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v6 = qword_268C91D60;
  *(void *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)sub_240952F58()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v7 = &v5[qword_268C91D68];
  *((void *)v7 + 4) = 0;
  *(_OWORD *)uint64_t v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for SharedConceptTileViewController();
  id v8 = objc_msgSendSuper2(&v10, sel_initWithCoder_, a1);

  return v8;
}

id sub_24092BAAC(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_24092B9B8(a3);
}

uint64_t sub_24092BAD4()
{
  uint64_t v1 = v0 + qword_268C91D68;

  return sub_240868CBC(v1);
}

id sub_24092BB24()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharedConceptTileViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24092BB5C(uint64_t a1)
{
  uint64_t v2 = a1 + qword_268C91D68;

  return sub_240868CBC(v2);
}

uint64_t type metadata accessor for SharedConceptTileViewController()
{
  uint64_t result = qword_268C91D70;
  if (!qword_268C91D70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24092BC04()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24092BC58()
{
  return type metadata accessor for SharedConceptTileViewController();
}

void sub_24092BC60(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_240955098();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_24092BCB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24092BD1C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_24092BC60(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_24092BD88(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24092BDE8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_24092BC60(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t type metadata accessor for LabListViewController()
{
  uint64_t result = qword_268C91D88;
  if (!qword_268C91D88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24092BE90()
{
  return swift_initClassMetadata2();
}

void sub_24092BEDC()
{
}

void sub_24092BF38()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)&v0[qword_268C91D80];
  uint64_t v3 = sub_240951BC8();
  id v4 = v2;
  uint64_t v5 = sub_240951BB8();
  uint64_t v13 = v3;
  uint64_t v14 = MEMORY[0x263F45450];
  *(void *)&long long v12 = v5;
  uint64_t v6 = type metadata accessor for LabListDataSourceProvider();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v2;
  sub_24083AB20(&v12, v7 + 24);
  uint64_t v13 = v6;
  uint64_t v14 = sub_24092CDF8(&qword_268C91DB8, v8, (void (*)(uint64_t))type metadata accessor for LabListDataSourceProvider);
  *(void *)&long long v12 = v7;
  sub_240953E38();
  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for LabListViewController();
  objc_msgSendSuper2(&v11, sel_viewDidLoad);
  id v9 = objc_msgSend(v1, sel_collectionView);
  if (v9)
  {
    objc_super v10 = v9;
    sub_240953D28();
    sub_240954CC8();
  }
  else
  {
    __break(1u);
  }
}

void sub_24092C068(void *a1)
{
  id v1 = a1;
  sub_24092BF38();
}

void sub_24092C0B0()
{
}

void sub_24092C0E0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_24092C114()
{
}

id sub_24092C124()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LabListViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_24092C15C(uint64_t a1)
{
}

uint64_t sub_24092C16C()
{
  return type metadata accessor for LabListViewController();
}

uint64_t sub_24092C174@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_240951BC8();
  uint64_t result = sub_240951BB8();
  uint64_t v4 = MEMORY[0x263F45450];
  a1[3] = v2;
  a1[4] = v4;
  *a1 = result;
  return result;
}

uint64_t sub_24092C1B4(uint64_t a1)
{
  uint64_t v58 = a1;
  uint64_t v1 = sub_240953878();
  uint64_t v52 = *(void *)(v1 - 8);
  uint64_t v53 = v1;
  MEMORY[0x270FA5388](v1);
  unint64_t v51 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_240953F08();
  uint64_t v48 = *(void *)(v3 - 8);
  uint64_t v49 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v50 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_240951838();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v54 = v5;
  uint64_t v55 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v56 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24092CC70(0, &qword_26AFCF7F0, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  objc_super v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v46 - v12;
  sub_2409523A8();
  id v47 = (id)MEMORY[0x2455FE670]();
  sub_2408E4658(0, (unint64_t *)&qword_26AFCF418);
  uint64_t v46 = v14;
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_240959330;
  *(void *)(v15 + 32) = sub_240952338();
  *(void *)(v15 + 40) = sub_240952348();
  sub_24092CC70(0, &qword_26AFD05D8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v16 = sub_240951C08();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 72);
  unint64_t v19 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_2409562B0;
  unint64_t v21 = v20 + v19;
  uint64_t v22 = *(void (**)(unint64_t, void, uint64_t))(v17 + 104);
  v22(v21, *MEMORY[0x263F45520], v16);
  unint64_t v23 = v21 + v18;
  uint64_t v24 = v54;
  v22(v23, *MEMORY[0x263F454D0], v16);
  uint64_t v25 = v55;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56))(v13, 1, 1, v24);
  sub_2408E4658(0, &qword_268C91D98);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_240956800;
  id v27 = (void *)v57[2];
  *(void *)(v26 + 32) = v27;
  id v28 = v27;
  uint64_t v29 = MEMORY[0x2455FE640](v20, 0, v13, v26);
  swift_bridgeObjectRelease();
  uint64_t v30 = v56;
  swift_bridgeObjectRelease();
  sub_24092CCD4((uint64_t)v13);
  *(void *)(v15 + 48) = v29;
  sub_240951818();
  sub_240953F18();
  id v31 = *(void (**)(char *, uint64_t))(v25 + 8);
  v31(v30, v24);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v11, 1, v24);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v33 = MEMORY[0x2455FE650](v11);
    v31(v11, v24);
    *(void *)(v15 + 56) = v33;
    uint64_t v59 = v15;
    sub_2409549B8();
    sub_24083EDCC(0, &qword_268C90978);
    uint64_t v34 = (void *)sub_240954988();
    swift_bridgeObjectRelease();
    id v35 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v34);

    id v36 = v47;
    objc_msgSend(v47, sel_setPredicate_, v35);

    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_2409568A0;
    id v38 = objc_allocWithZone(MEMORY[0x263F08B30]);
    objc_super v39 = (void *)sub_240954788();
    id v40 = objc_msgSend(v38, sel_initWithKey_ascending_selector_, v39, 1, sel_localizedStandardCompare_);

    *(void *)(v37 + 32) = v40;
    uint64_t v59 = v37;
    sub_2409549B8();
    sub_24083EDCC(0, &qword_26AFCDEF8);
    uint64_t v41 = (void *)sub_240954988();
    swift_bridgeObjectRelease();
    objc_msgSend(v36, sel_setSortDescriptors_, v41);

    sub_2408304E8(v57 + 3, v57[6]);
    id v42 = v36;
    uint64_t v43 = (void *)sub_240951BD8();
    objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF270]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v42, v43, 0, 0);

    sub_24092CD60();
    sub_240951818();
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v50, v58, v49);
    uint64_t v44 = v51;
    sub_240953868();
    sub_240953858();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v44, v53);
    uint64_t v45 = sub_240953678();

    sub_24092CDF8(&qword_268C91DB0, 255, (void (*)(uint64_t))sub_24092CD60);
    return v45;
  }
  return result;
}

uint64_t sub_24092C910()
{
  sub_2408371B8(v0 + 24);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LabListDataSourceProvider()
{
  return self;
}

uint64_t sub_24092C974()
{
  return sub_24092C998();
}

uint64_t sub_24092C998()
{
  uint64_t v0 = sub_240953F08();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24092CC70(0, (unint64_t *)&qword_268C91450, (uint64_t (*)(uint64_t))sub_24092CC1C, MEMORY[0x263F8E0F8]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_24095B710;
  uint64_t v5 = *(void (**)(char *, void, uint64_t))(v1 + 104);
  v5(v3, *MEMORY[0x263F45A68], v0);
  uint64_t v6 = sub_24092C1B4((uint64_t)v3);
  uint64_t v8 = v7;
  uint64_t v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v3, v0);
  *(void *)(v4 + 32) = v6;
  *(void *)(v4 + 40) = v8;
  v5(v3, *MEMORY[0x263F45A70], v0);
  uint64_t v10 = sub_24092C1B4((uint64_t)v3);
  uint64_t v12 = v11;
  v9(v3, v0);
  *(void *)(v4 + 48) = v10;
  *(void *)(v4 + 56) = v12;
  v5(v3, *MEMORY[0x263F45A80], v0);
  uint64_t v13 = sub_24092C1B4((uint64_t)v3);
  uint64_t v15 = v14;
  v9(v3, v0);
  *(void *)(v4 + 64) = v13;
  *(void *)(v4 + 72) = v15;
  v5(v3, *MEMORY[0x263F45A78], v0);
  uint64_t v16 = sub_24092C1B4((uint64_t)v3);
  uint64_t v18 = v17;
  v9(v3, v0);
  *(void *)(v4 + 80) = v16;
  *(void *)(v4 + 88) = v18;
  v5(v3, *MEMORY[0x263F45A60], v0);
  uint64_t v19 = sub_24092C1B4((uint64_t)v3);
  uint64_t v21 = v20;
  v9(v3, v0);
  *(void *)(v4 + 96) = v19;
  *(void *)(v4 + 104) = v21;
  return v4;
}

unint64_t sub_24092CC1C()
{
  unint64_t result = qword_268C91300;
  if (!qword_268C91300)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C91300);
  }
  return result;
}

void sub_24092CC70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_24092CCD4(uint64_t a1)
{
  sub_24092CC70(0, &qword_26AFCF7F0, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_24092CD60()
{
  if (!qword_268C91DA0)
  {
    sub_2409523A8();
    sub_24092CDF8(&qword_268C91DA8, 255, MEMORY[0x263F459D8]);
    unint64_t v0 = sub_240953668();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C91DA0);
    }
  }
}

uint64_t sub_24092CDF8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24092CE40(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_2409332BC();
  uint64_t v2 = sub_240955428();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_24093335C(v6, (uint64_t)&v13, (uint64_t (*)(void))sub_240853FC0);
    uint64_t v7 = v13;
    unint64_t result = sub_240931288(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_240878F84(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24092CF6C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_240933208(0, (unint64_t *)&qword_268C90970, &qword_268C90960, 0x263F0A4E0, &qword_268C90980);
  uint64_t v2 = (void *)sub_240955428();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_24093131C((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24092D094(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v4 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  uint64_t v2 = MEMORY[0x263F8EE58] + 8;
  sub_240933430(0, &qword_268C91E18, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8DFB0]);
  uint64_t v3 = sub_240955428();
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v4;
  }
  uint64_t v6 = v3 + 64;
  uint64_t v7 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2409330C4(v7, (uint64_t)&v16, (uint64_t)&qword_268C91C40, v2, (uint64_t (*)(void, uint64_t, uint64_t))sub_240932E84);
    uint64_t v8 = v16;
    uint64_t v9 = v17;
    unint64_t result = sub_240931400(v16, v17);
    if (v11) {
      break;
    }
    *(void *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    BOOL v12 = (uint64_t *)(v4[6] + 16 * result);
    *BOOL v12 = v8;
    v12[1] = v9;
    unint64_t result = (unint64_t)sub_240878F84(&v18, (_OWORD *)(v4[7] + 32 * result));
    uint64_t v13 = v4[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24092D214(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_240932DF4();
  uint64_t v2 = (void *)sub_240955428();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_240931400(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24092D32C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_240933430(0, (unint64_t *)&qword_268C90AA8, MEMORY[0x263F8D310], MEMORY[0x263F8DFB0]);
  uint64_t v2 = (void *)sub_240955428();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_240931400(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    BOOL v12 = (void *)(v2[7] + 16 * result);
    *BOOL v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_24092D470(unint64_t a1)
{
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_2409551C8()) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v3 = MEMORY[0x263F8EE80];
    if (v2) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v5 = ~v8;
    unint64_t v34 = a1 + 64;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v6 = v10 & *(void *)(a1 + 64);
    unint64_t v7 = a1;
    goto LABEL_11;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_6;
  }
LABEL_3:
  sub_240933208(0, &qword_268C91E58, (unint64_t *)&qword_26AFD0580, 0x263F0A6E8, (unint64_t *)&qword_26AFD0588);
  uint64_t v3 = sub_240955428();
  if (!v2) {
    goto LABEL_7;
  }
LABEL_4:
  uint64_t v4 = sub_240955358();
  unint64_t v34 = 0;
  uint64_t v5 = 0;
  unint64_t v6 = 0;
  unint64_t v7 = v4 | 0x8000000000000000;
LABEL_11:
  int64_t v33 = (unint64_t)(v5 + 64) >> 6;
  uint64_t v11 = v3 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while ((v7 & 0x8000000000000000) != 0)
  {
    if (!sub_240955388()) {
      goto LABEL_45;
    }
    sub_24083EDCC(0, &qword_268C90960);
    swift_dynamicCast();
    sub_24083EDCC(0, &qword_268C90978);
    swift_dynamicCast();
    long long v18 = v35;
    uint64_t v19 = v36;
LABEL_36:
    uint64_t result = sub_240954FB8();
    uint64_t v26 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = 8 * v14;
    *(void *)(*(void *)(v3 + 48) + v15) = v18;
    *(void *)(*(void *)(v3 + 56) + v15) = v19;
    ++*(void *)(v3 + 16);
  }
  if (v6)
  {
    unint64_t v16 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v17 = v16 | (v13 << 6);
LABEL_35:
    long long v18 = *(void **)(*(void *)(v7 + 48) + 8 * v17);
    id v35 = v18;
    id v36 = *(void **)(*(void *)(v7 + 56) + 8 * v17);
    uint64_t v19 = v36;
    id v24 = v18;
    id v25 = v36;
    goto LABEL_36;
  }
  int64_t v20 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (v20 >= v33) {
    goto LABEL_45;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v20);
  int64_t v22 = v13 + 1;
  if (v21) {
    goto LABEL_34;
  }
  int64_t v22 = v13 + 2;
  if (v13 + 2 >= v33) {
    goto LABEL_45;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v22);
  if (v21) {
    goto LABEL_34;
  }
  int64_t v22 = v13 + 3;
  if (v13 + 3 >= v33) {
    goto LABEL_45;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v22);
  if (v21) {
    goto LABEL_34;
  }
  int64_t v22 = v13 + 4;
  if (v13 + 4 >= v33) {
    goto LABEL_45;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v22);
  if (v21)
  {
LABEL_34:
    unint64_t v6 = (v21 - 1) & v21;
    unint64_t v17 = __clz(__rbit64(v21)) + (v22 << 6);
    int64_t v13 = v22;
    goto LABEL_35;
  }
  int64_t v23 = v13 + 5;
  if (v13 + 5 >= v33)
  {
LABEL_45:
    swift_release();
    sub_24084072C();
    return v3;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v23);
  if (v21)
  {
    int64_t v22 = v13 + 5;
    goto LABEL_34;
  }
  while (1)
  {
    int64_t v22 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v22 >= v33) {
      goto LABEL_45;
    }
    unint64_t v21 = *(void *)(v34 + 8 * v22);
    ++v23;
    if (v21) {
      goto LABEL_34;
    }
  }
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_24092D868(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_2409333C4();
    uint64_t v2 = sub_240955428();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE80];
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v26) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v27 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v26) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v27 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v26) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v27 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    unint64_t v17 = (void *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v18 = v17[1];
    *(void *)&v36[0] = *v17;
    *((void *)&v36[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    swift_dynamicCast();
    long long v32 = v28;
    long long v33 = v29;
    uint64_t v34 = v30;
    sub_240878F84(&v31, v35);
    long long v28 = v32;
    long long v29 = v33;
    uint64_t v30 = v34;
    sub_240878F84(v35, v36);
    sub_240878F84(v36, &v32);
    uint64_t result = sub_240955218();
    uint64_t v19 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v6 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v20) & ~*(void *)(v6 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v6 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(void *)(v10 + 32) = v30;
    uint64_t result = (uint64_t)sub_240878F84(&v32, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_24084072C();
    return v2;
  }
  unint64_t v14 = *(void *)(v27 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

Swift::Void __swiftcall AccountStatusReloginSummaryTileFeedItemViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = MEMORY[0x263F45B10];
  sub_24083A098(0, &qword_26AFCE168, MEMORY[0x263F45B10]);
  MEMORY[0x270FA5388](v6 - 8);
  int64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = sub_240953F38();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18.receiver = v2;
  v18.super_class = ObjectType;
  objc_msgSendSuper2(&v18, sel_viewDidAppear_, a1);
  sub_2409529A8();
  int64_t v13 = (void *)sub_240952998();
  uint64_t v14 = (uint64_t)v2 + qword_268C91DC0;
  swift_beginAccess();
  sub_2409330C4(v14, (uint64_t)v8, (uint64_t)&qword_26AFCE168, v5, (uint64_t (*)(void, uint64_t, uint64_t))sub_24083A098);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    int v15 = *MEMORY[0x263F45AF8];
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F45AF8], v9);
    sub_24083A03C((uint64_t)v8, &qword_26AFCE168, MEMORY[0x263F45B10]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    int v15 = *MEMORY[0x263F45AF8];
  }
  int v16 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  if (v16 != v15 && v16 != *MEMORY[0x263F45B00] && v16 != *MEMORY[0x263F45B08]) {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  sub_240952978();
}

void sub_24092DF04(void *a1, uint64_t a2, Swift::Bool a3)
{
  id v4 = a1;
  AccountStatusReloginSummaryTileFeedItemViewController.viewDidAppear(_:)(a3);
}

uint64_t AccountStatusReloginSummaryTileFeedItemViewController.apply(data:to:)(uint64_t a1, uint64_t a2)
{
  v46[1] = a2;
  sub_24083A098(0, &qword_26AFCE168, MEMORY[0x263F45B10]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v53 = (char *)v46 - v4;
  uint64_t v5 = sub_240952B98();
  uint64_t v50 = *(void *)(v5 - 8);
  uint64_t v51 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v49 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24083A098(0, &qword_26AFCC6A8, MEMORY[0x263F07690]);
  MEMORY[0x270FA5388](v7 - 8);
  id v47 = (char *)v46 - v8;
  uint64_t v9 = sub_2409533C8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  int64_t v13 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  int v15 = (char *)v46 - v14;
  uint64_t v16 = MEMORY[0x263F461A8];
  sub_24083A098(0, &qword_268C90C88, MEMORY[0x263F461A8]);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  unint64_t v20 = (char *)v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  char v22 = (char *)v46 - v21;
  sub_24083A098(0, &qword_268C91DC8, MEMORY[0x263F461C8]);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v25 = (char *)v46 - v24;
  uint64_t v48 = a1;
  sub_2409330C4(a1, (uint64_t)v22, (uint64_t)&qword_268C90C88, v16, (uint64_t (*)(void, uint64_t, uint64_t))sub_24083A098);
  int64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v26(v22, 1, v9) == 1)
  {
    uint64_t v27 = sub_240953498();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v25, 1, 1, v27);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v22, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    sub_2409534A8();
    uint64_t v28 = sub_240953498();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v25, 0, 1, v28);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  sub_240952E78();
  sub_24083A03C((uint64_t)v25, &qword_268C91DC8, MEMORY[0x263F461C8]);
  sub_2409330C4(v48, (uint64_t)v20, (uint64_t)&qword_268C90C88, MEMORY[0x263F461A8], (uint64_t (*)(void, uint64_t, uint64_t))sub_24083A098);
  if (v26(v20, 1, v9) == 1)
  {
    sub_24083A03C((uint64_t)v20, &qword_268C90C88, MEMORY[0x263F461A8]);
LABEL_8:
    uint64_t v36 = sub_240951AB8();
    uint64_t v37 = (uint64_t)v47;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v47, 1, 1, v36);
    id v38 = v49;
    sub_240952B88();
    sub_2409535A8();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v38, v51);
    sub_24083A03C(v37, &qword_26AFCC6A8, MEMORY[0x263F07690]);
    objc_super v39 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
    id v34 = v52;
    objc_msgSend(v52, sel_setTitle_, v39);

    id v35 = (unsigned int *)MEMORY[0x263F45AF8];
    goto LABEL_9;
  }
  uint64_t v29 = sub_240953398();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v20, v9);
  if (v29 != 6) {
    goto LABEL_8;
  }
  uint64_t v30 = sub_240951AB8();
  uint64_t v31 = (uint64_t)v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v47, 1, 1, v30);
  long long v32 = v49;
  sub_240952B88();
  sub_2409535A8();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v32, v51);
  sub_24083A03C(v31, &qword_26AFCC6A8, MEMORY[0x263F07690]);
  long long v33 = (void *)sub_240954788();
  swift_bridgeObjectRelease();
  id v34 = v52;
  objc_msgSend(v52, sel_setTitle_, v33);

  id v35 = (unsigned int *)MEMORY[0x263F45B00];
LABEL_9:
  uint64_t v40 = *v35;
  uint64_t v41 = sub_240953F38();
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = (uint64_t)v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 104))(v53, v40, v41);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v42 + 56))(v43, 0, 1, v41);
  uint64_t v44 = (uint64_t)v34 + qword_268C91DC0;
  swift_beginAccess();
  sub_24092E760(v43, v44);
  return swift_endAccess();
}

uint64_t sub_24092E760(uint64_t a1, uint64_t a2)
{
  sub_24083A098(0, &qword_26AFCE168, MEMORY[0x263F45B10]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

Swift::Void __swiftcall AccountStatusReloginSummaryTileFeedItemViewController.didSelectCell(_:in:)(UIView *_, UIViewController *in)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_2409540C8();
  uint64_t v53 = *(void *)(v5 - 8);
  uint64_t v54 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v51 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24083A098(0, (unint64_t *)&unk_26AFCE028, MEMORY[0x263F8F520]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v49 = (char *)&v47 - v8;
  uint64_t v52 = sub_240951A98();
  uint64_t v50 = *(void *)(v52 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v52);
  uint64_t v47 = v10;
  uint64_t v48 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v58 = (char *)&v47 - v11;
  sub_24083A098(0, &qword_268C90C88, MEMORY[0x263F461A8]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v47 - v13;
  uint64_t v15 = sub_2409533C8();
  uint64_t v56 = *(void *)(v15 - 8);
  uint64_t v57 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v55 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x263F45B10];
  sub_24083A098(0, &qword_26AFCE168, MEMORY[0x263F45B10]);
  MEMORY[0x270FA5388](v18 - 8);
  unint64_t v20 = (char *)&v47 - v19;
  uint64_t v21 = sub_240953F38();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v47 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240932520(_);
  sub_2409529A8();
  uint64_t v25 = (void *)sub_240952998();
  uint64_t v26 = (uint64_t)v3 + qword_268C91DC0;
  swift_beginAccess();
  sub_2409330C4(v26, (uint64_t)v20, (uint64_t)&qword_26AFCE168, v17, (uint64_t (*)(void, uint64_t, uint64_t))sub_24083A098);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    int v27 = *MEMORY[0x263F45AF8];
    (*(void (**)(char *, void, uint64_t))(v22 + 104))(v24, *MEMORY[0x263F45AF8], v21);
    sub_24083A03C((uint64_t)v20, &qword_26AFCE168, MEMORY[0x263F45B10]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v20, v21);
    int v27 = *MEMORY[0x263F45AF8];
  }
  int v28 = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v24, v21);
  if (v28 != v27 && v28 != *MEMORY[0x263F45B00] && v28 != *MEMORY[0x263F45B08]) {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  }
  sub_240952978();

  uint64_t v29 = (uint64_t)v3 + *(void *)((*MEMORY[0x263F8EED0] & *v3) + 0x60);
  swift_beginAccess();
  sub_2409330C4(v29, (uint64_t)v14, (uint64_t)&qword_268C90C88, MEMORY[0x263F461A8], (uint64_t (*)(void, uint64_t, uint64_t))sub_24083A098);
  uint64_t v30 = v56;
  uint64_t v31 = v57;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v14, 1, v57) == 1)
  {
    sub_24083A03C((uint64_t)v14, &qword_268C90C88, MEMORY[0x263F461A8]);
    long long v32 = v51;
    sub_240954088();
    long long v33 = sub_2409540B8();
    os_log_type_t v34 = sub_240954C18();
    if (os_log_type_enabled(v33, v34))
    {
      id v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v35 = 0;
      _os_log_impl(&dword_240818000, v33, v34, "Tapped on tile while context.userData was unavailable", v35, 2u);
      MEMORY[0x2456021C0](v35, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v53 + 8))(v32, v54);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v55, v14, v31);
    uint64_t v36 = v58;
    sub_2409533A8();
    uint64_t v37 = sub_240954AB8();
    uint64_t v38 = (uint64_t)v49;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v49, 1, 1, v37);
    uint64_t v39 = v50;
    uint64_t v40 = v48;
    uint64_t v41 = v52;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v48, v36, v52);
    sub_240954A98();
    uint64_t v42 = v3;
    uint64_t v43 = sub_240954A88();
    unint64_t v44 = (*(unsigned __int8 *)(v39 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    uint64_t v45 = (char *)swift_allocObject();
    uint64_t v46 = MEMORY[0x263F8F500];
    *((void *)v45 + 2) = v43;
    *((void *)v45 + 3) = v46;
    *((void *)v45 + 4) = v42;
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(&v45[v44], v40, v41);
    sub_240839E0C(v38, (uint64_t)&unk_268C91DD8, (uint64_t)v45);
    swift_release();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v58, v41);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v55, v31);
  }
}

uint64_t sub_24092EFBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[13] = a4;
  v5[14] = a5;
  uint64_t v6 = sub_240951A98();
  v5[15] = v6;
  v5[16] = *(void *)(v6 - 8);
  v5[17] = swift_task_alloc();
  uint64_t v7 = sub_2409540C8();
  v5[18] = v7;
  v5[19] = *(void *)(v7 - 8);
  v5[20] = swift_task_alloc();
  sub_240954A98();
  v5[21] = sub_240954A88();
  uint64_t v9 = sub_240954A48();
  v5[22] = v9;
  v5[23] = v8;
  return MEMORY[0x270FA2498](sub_24092F10C, v9, v8);
}

uint64_t sub_24092F10C()
{
  uint64_t v1 = (void *)v0[13];
  sub_240952808();
  uint64_t v2 = (void *)sub_2409527D8();
  uint64_t v3 = (uint64_t)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x70);
  swift_beginAccess();
  uint64_t v4 = sub_24085AA1C(v3, (uint64_t)(v0 + 2));
  uint64_t v5 = v0[5];
  if (v5)
  {
    uint64_t v6 = sub_2408304E8(v0 + 2, v0[5]);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = swift_task_alloc();
    (*(void (**)(uint64_t, void *, uint64_t))(v7 + 16))(v8, v6, v5);
    uint64_t v9 = (void *)sub_240953B98();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v5);
    uint64_t v10 = (void *)sub_2409527E8();
    v0[24] = v10;

    swift_task_dealloc();
    sub_2408371B8((uint64_t)(v0 + 2));
    sub_240952E08();
    swift_allocObject();
    id v11 = v10;
    v0[25] = sub_240952DE8();
    uint64_t v12 = (void *)swift_task_alloc();
    v0[26] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_24092F338;
    uint64_t v4 = v0[14];
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270F37828](v4);
}

uint64_t sub_24092F338(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 216) = a1;
  *(void *)(v4 + 224) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 184);
  uint64_t v6 = *(void *)(v3 + 176);
  if (v1) {
    uint64_t v7 = sub_24092F880;
  }
  else {
    uint64_t v7 = sub_24092F47C;
  }
  return MEMORY[0x270FA2498](v7, v6, v5);
}

uint64_t sub_24092F47C()
{
  if (objc_msgSend(*(id *)(v0 + 216), sel_wantsGatewayUpgrade))
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_24092F5A8;
    uint64_t v2 = *(void *)(v0 + 216);
    uint64_t v3 = *(void *)(v0 + 104);
    return MEMORY[0x270F37848](v2, v3);
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v4;
    void *v4 = v0;
    v4[1] = sub_24092F760;
    uint64_t v5 = *(void *)(v0 + 216);
    uint64_t v6 = *(void *)(v0 + 104);
    return MEMORY[0x270F37830](v5, v6);
  }
}

uint64_t sub_24092F5A8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 184);
  uint64_t v3 = *(void *)(v1 + 176);
  return MEMORY[0x270FA2498](sub_24092F6C8, v3, v2);
}

uint64_t sub_24092F6C8()
{
  uint64_t v1 = *(void **)(v0 + 216);

  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24092F760()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 184);
  uint64_t v3 = *(void *)(v1 + 176);
  return MEMORY[0x270FA2498](sub_240933558, v3, v2);
}

uint64_t sub_24092F880()
{
  uint64_t v35 = v0;
  uint64_t v1 = *(void **)(v0 + 224);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 112);
  uint64_t v4 = *(void *)(v0 + 120);
  swift_release();
  sub_240954078();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  id v6 = v1;
  id v7 = v1;
  uint64_t v8 = sub_2409540B8();
  os_log_type_t v9 = sub_240954C18();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = *(void **)(v0 + 224);
    uint64_t v30 = *(void **)(v0 + 192);
    uint64_t v31 = *(void *)(v0 + 152);
    uint64_t v11 = *(void *)(v0 + 136);
    uint64_t v32 = *(void *)(v0 + 144);
    uint64_t v33 = *(void *)(v0 + 160);
    uint64_t v12 = *(void *)(v0 + 120);
    uint64_t v13 = *(void *)(v0 + 128);
    uint64_t v14 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v34 = v29;
    *(_DWORD *)uint64_t v14 = 136315394;
    sub_240932F84(&qword_268C90688, MEMORY[0x263F07508]);
    uint64_t v15 = sub_2409555D8();
    *(void *)(v0 + 80) = sub_2408370E4(v15, v16, &v34);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    *(_WORD *)(v14 + 12) = 2080;
    *(void *)(v0 + 88) = v10;
    id v17 = v10;
    sub_2408484BC(0, qword_26AFD07C0);
    uint64_t v18 = sub_2409547E8();
    *(void *)(v0 + 96) = sub_2408370E4(v18, v19, &v34);
    sub_2409550B8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240818000, v8, v9, "AccountStatusReloginSummaryTileFeedItemViewController failed to fetch account %s: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v29, -1, -1);
    MEMORY[0x2456021C0](v14, -1, -1);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v33, v32);
  }
  else
  {
    unint64_t v20 = *(void **)(v0 + 224);
    uint64_t v22 = *(void *)(v0 + 152);
    uint64_t v21 = *(void *)(v0 + 160);
    uint64_t v24 = *(void *)(v0 + 136);
    uint64_t v23 = *(void *)(v0 + 144);
    uint64_t v25 = *(void *)(v0 + 120);
    uint64_t v26 = *(void *)(v0 + 128);

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  int v27 = *(uint64_t (**)(void))(v0 + 8);
  return v27();
}

uint64_t AccountStatusReloginSummaryTileFeedItemViewController.deselectionBehavior.getter@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 0;
  uint64_t v2 = *MEMORY[0x263F440D8];
  uint64_t v3 = sub_240953A18();
  uint64_t v4 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t AccountStatusReloginSummaryTileFeedItemViewController.headerType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + direct field offset for AccountStatusReloginSummaryTileFeedItemViewController.headerType;
  uint64_t v4 = sub_240953798();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AccountStatusReloginSummaryTileFeedItemViewController.showsSeparator.getter()
{
  return 1;
}

Swift::Void __swiftcall AccountStatusReloginSummaryTileFeedItemViewController.didTapDismiss()()
{
  uint64_t v1 = v0;
  sub_24083A098(0, &qword_26AFCE168, MEMORY[0x263F45B10]);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v83 = (uint64_t)&v74 - v6;
  uint64_t v7 = sub_240953F38();
  uint64_t v84 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v78 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  id v77 = (char *)&v74 - v10;
  uint64_t v82 = sub_240951A98();
  uint64_t v81 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  id v80 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24083A098(0, &qword_268C90C88, MEMORY[0x263F461A8]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v86 = (uint64_t)&v74 - v13;
  uint64_t v88 = sub_2409533C8();
  uint64_t v87 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  uint64_t v85 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = (void *)sub_2409540C8();
  uint64_t v15 = *(v89 - 1);
  uint64_t v16 = MEMORY[0x270FA5388](v89);
  uint64_t v18 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  id v79 = (char *)&v74 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v74 - v21;
  uint64_t v23 = sub_240953738();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = (uint64_t)v0 + *(void *)((*MEMORY[0x263F8EED0] & *v0) + 0x70);
  swift_beginAccess();
  sub_24085AA1C(v27, (uint64_t)&v90);
  if (v91)
  {
    id v75 = v5;
    uint64_t v76 = v7;
    sub_24083AB20(&v90, (uint64_t)v92);
    sub_2408304E8(v92, v92[3]);
    sub_240953BA8();
    if ((*(unsigned int (**)(char *, uint64_t))(v24 + 88))(v26, v23) == *MEMORY[0x263F43BA0])
    {
      sub_2408371B8((uint64_t)v92);
      sub_240954088();
      int v28 = sub_2409540B8();
      os_log_type_t v29 = sub_240954C38();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v30 = 0;
        _os_log_impl(&dword_240818000, v28, v29, "User dismissed AccountStatus tile", v30, 2u);
        MEMORY[0x2456021C0](v30, -1, -1);
      }

      uint64_t v31 = *(void (**)(char *, void *))(v15 + 8);
      uint64_t v32 = v89;
      v31(v22, v89);
      uint64_t v33 = (uint64_t)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x60);
      swift_beginAccess();
      uint64_t v34 = v86;
      sub_2409330C4(v33, v86, (uint64_t)&qword_268C90C88, MEMORY[0x263F461A8], (uint64_t (*)(void, uint64_t, uint64_t))sub_24083A098);
      uint64_t v35 = v87;
      uint64_t v36 = v88;
      int v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v87 + 48))(v34, 1, v88);
      uint64_t v38 = v76;
      if (v37 == 1)
      {
        sub_24083A03C(v34, &qword_268C90C88, MEMORY[0x263F461A8]);
        uint64_t v39 = v79;
        sub_240954088();
        uint64_t v40 = sub_2409540B8();
        os_log_type_t v41 = sub_240954C18();
        if (os_log_type_enabled(v40, v41))
        {
          uint64_t v42 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v42 = 0;
          _os_log_impl(&dword_240818000, v40, v41, "Tapped on tile dismissal while context.userData was unavailable", v42, 2u);
          MEMORY[0x2456021C0](v42, -1, -1);
        }

        v31(v39, v32);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v85, v34, v36);
        sub_240932BFC();
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_2409562B0;
        *(void *)(inited + 32) = sub_240953468();
        *(void *)(inited + 40) = v48;
        uint64_t v49 = v80;
        sub_2409533A8();
        uint64_t v50 = sub_240951A48();
        uint64_t v52 = v51;
        (*(void (**)(char *, uint64_t))(v81 + 8))(v49, v82);
        *(void *)(inited + 48) = v50;
        *(void *)(inited + 56) = v52;
        *(void *)(inited + 64) = sub_240953458();
        *(void *)(inited + 72) = v53;
        uint64_t v54 = (uint64_t)v1 + qword_268C91DC0;
        swift_beginAccess();
        uint64_t v55 = v83;
        sub_2409330C4(v54, v83, (uint64_t)&qword_26AFCE168, MEMORY[0x263F45B10], (uint64_t (*)(void, uint64_t, uint64_t))sub_24083A098);
        uint64_t v56 = v84;
        uint64_t v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48);
        if (v57(v55, 1, v38) == 1)
        {
          uint64_t v58 = v77;
          (*(void (**)(char *, void, uint64_t))(v56 + 104))(v77, *MEMORY[0x263F45AF8], v38);
          sub_24083A03C(v55, &qword_26AFCE168, MEMORY[0x263F45B10]);
        }
        else
        {
          uint64_t v58 = v77;
          (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v77, v55, v38);
        }
        uint64_t v59 = sub_240953F28();
        uint64_t v61 = v60;
        uint64_t v89 = *(void **)(v56 + 8);
        ((void (*)(char *, uint64_t))v89)(v58, v38);
        *(void *)(inited + 80) = v59;
        *(void *)(inited + 88) = v61;
        unint64_t v62 = sub_24092D32C(inited);
        sub_24083EDCC(0, &qword_268C91088);
        uint64_t v63 = v56;
        uint64_t v64 = (void *)sub_240954CA8();
        sub_240954DB8();
        sub_24092D868(v62);
        swift_bridgeObjectRelease();
        id v65 = objc_allocWithZone((Class)sub_240953658());
        uint64_t v66 = (void *)sub_240953648();
        objc_msgSend(v64, sel_addOperation_, v66);

        sub_2409529A8();
        id v67 = (void *)sub_240952998();
        uint64_t v68 = (uint64_t)v75;
        sub_2409330C4(v54, (uint64_t)v75, (uint64_t)&qword_26AFCE168, MEMORY[0x263F45B10], (uint64_t (*)(void, uint64_t, uint64_t))sub_24083A098);
        if (v57(v68, 1, v38) == 1)
        {
          int v69 = *MEMORY[0x263F45AF8];
          uint64_t v70 = v78;
          (*(void (**)(char *, void, uint64_t))(v63 + 104))(v78, *MEMORY[0x263F45AF8], v38);
          sub_24083A03C(v68, &qword_26AFCE168, MEMORY[0x263F45B10]);
        }
        else
        {
          uint64_t v70 = v78;
          (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v78, v68, v38);
          int v69 = *MEMORY[0x263F45AF8];
        }
        int v71 = (*(uint64_t (**)(char *, uint64_t))(v63 + 88))(v70, v38);
        if (v71 == v69 || v71 == *MEMORY[0x263F45B00])
        {
          uint64_t v72 = v88;
          uint64_t v73 = v87;
        }
        else
        {
          uint64_t v72 = v88;
          uint64_t v73 = v87;
          if (v71 != *MEMORY[0x263F45B08]) {
            ((void (*)(char *, uint64_t))v89)(v70, v38);
          }
        }
        sub_240952978();

        (*(void (**)(char *, uint64_t))(v73 + 8))(v85, v72);
      }
      return;
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    sub_2408371B8((uint64_t)v92);
  }
  else
  {
    sub_240851CE8((uint64_t)&v90, (unint64_t *)&qword_26AFCF770, (unint64_t *)&qword_26AFCF760);
  }
  uint64_t v43 = v89;
  sub_240954088();
  unint64_t v44 = sub_2409540B8();
  os_log_type_t v45 = sub_240954C18();
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v46 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v46 = 0;
    _os_log_impl(&dword_240818000, v44, v45, "didTapDismiss invoked for tile without a dismiss button!", v46, 2u);
    MEMORY[0x2456021C0](v46, -1, -1);
  }

  (*(void (**)(char *, void *))(v15 + 8))(v18, v43);
}

Swift::Bool __swiftcall AccountStatusReloginSummaryTileFeedItemViewController.shouldDismiss()()
{
  uint64_t v1 = sub_240953738();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t)v0 + *(void *)((*MEMORY[0x263F8EED0] & *v0) + 0x70);
  swift_beginAccess();
  sub_24085AA1C(v5, (uint64_t)&v8);
  if (v9)
  {
    sub_24083AB20(&v8, (uint64_t)v10);
    sub_2408304E8(v10, v10[3]);
    sub_240953BA8();
    if ((*(unsigned int (**)(char *, uint64_t))(v2 + 88))(v4, v1) == *MEMORY[0x263F43BA0])
    {
      sub_2408371B8((uint64_t)v10);
      return 1;
    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    sub_2408371B8((uint64_t)v10);
  }
  else
  {
    sub_240851CE8((uint64_t)&v8, (unint64_t *)&qword_26AFCF770, (unint64_t *)&qword_26AFCF760);
  }
  return 0;
}

id AccountStatusReloginSummaryTileFeedItemViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

id AccountStatusReloginSummaryTileFeedItemViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v7 = &v3[qword_268C91DC0];
  uint64_t v8 = sub_240953F38();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = &v3[qword_268C91DF0];
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  uint64_t v10 = &v3[direct field offset for AccountStatusReloginSummaryTileFeedItemViewController.headerType];
  uint64_t v11 = *MEMORY[0x263F43CB0];
  uint64_t v12 = sub_240953798();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  v3[direct field offset for AccountStatusReloginSummaryTileFeedItemViewController.showsSeparator] = 1;
  if (a2)
  {
    uint64_t v13 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = 0;
  }
  v16.receiver = v3;
  v16.super_class = ObjectType;
  id v14 = objc_msgSendSuper2(&v16, sel_initWithNibName_bundle_, v13, a3);

  return v14;
}

id sub_240930CB4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    uint64_t v5 = sub_2409547C8();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  id v8 = a4;
  return AccountStatusReloginSummaryTileFeedItemViewController.init(nibName:bundle:)(v5, v7, a4);
}

id AccountStatusReloginSummaryTileFeedItemViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id AccountStatusReloginSummaryTileFeedItemViewController.init(coder:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = &v1[qword_268C91DC0];
  uint64_t v5 = sub_240953F38();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = &v1[qword_268C91DF0];
  *(_OWORD *)uint64_t v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((void *)v6 + 4) = 0;
  uint64_t v7 = &v1[direct field offset for AccountStatusReloginSummaryTileFeedItemViewController.headerType];
  uint64_t v8 = *MEMORY[0x263F43CB0];
  uint64_t v9 = sub_240953798();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  v1[direct field offset for AccountStatusReloginSummaryTileFeedItemViewController.showsSeparator] = 1;
  v12.receiver = v1;
  v12.super_class = ObjectType;
  id v10 = objc_msgSendSuper2(&v12, sel_initWithCoder_, a1);

  return v10;
}

id sub_240930E88(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = &a1[qword_268C91DC0];
  uint64_t v7 = sub_240953F38();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = &a1[qword_268C91DF0];
  *(_OWORD *)uint64_t v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((void *)v8 + 4) = 0;
  uint64_t v9 = &a1[direct field offset for AccountStatusReloginSummaryTileFeedItemViewController.headerType];
  uint64_t v10 = *MEMORY[0x263F43CB0];
  uint64_t v11 = sub_240953798();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  a1[direct field offset for AccountStatusReloginSummaryTileFeedItemViewController.showsSeparator] = 1;
  v13.receiver = a1;
  v13.super_class = ObjectType;
  return objc_msgSendSuper2(&v13, sel_initWithCoder_, a3);
}

uint64_t sub_240930FAC()
{
  sub_24083A03C(v0 + qword_268C91DC0, &qword_26AFCE168, MEMORY[0x263F45B10]);
  sub_240851CE8(v0 + qword_268C91DF0, &qword_268C90810, (unint64_t *)&unk_268C911C0);
  uint64_t v1 = v0 + direct field offset for AccountStatusReloginSummaryTileFeedItemViewController.headerType;
  uint64_t v2 = sub_240953798();
  id v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

id AccountStatusReloginSummaryTileFeedItemViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2409310A4(uint64_t a1)
{
  sub_24083A03C(a1 + qword_268C91DC0, &qword_26AFCE168, MEMORY[0x263F45B10]);
  sub_240851CE8(a1 + qword_268C91DF0, &qword_268C90810, (unint64_t *)&unk_268C911C0);
  uint64_t v2 = a1 + direct field offset for AccountStatusReloginSummaryTileFeedItemViewController.headerType;
  uint64_t v3 = sub_240953798();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

uint64_t sub_240931170@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + direct field offset for AccountStatusReloginSummaryTileFeedItemViewController.headerType;
  uint64_t v4 = sub_240953798();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_2409311E8()
{
  return sub_240953C08() & 1;
}

unint64_t sub_240931288(uint64_t a1)
{
  sub_2409547C8();
  sub_2409556F8();
  sub_240954868();
  uint64_t v2 = sub_240955748();
  swift_bridgeObjectRelease();

  return sub_240931510(a1, v2);
}

unint64_t sub_24093131C(uint64_t a1)
{
  uint64_t v2 = sub_240954FB8();
  return sub_240931688(a1, v2, &qword_268C90960);
}

unint64_t sub_24093136C(uint64_t a1)
{
  uint64_t v2 = sub_240954FB8();
  return sub_240931688(a1, v2, &qword_268C90948);
}

unint64_t sub_2409313BC(uint64_t a1)
{
  uint64_t v2 = sub_240955218();

  return sub_24093179C(a1, v2);
}

unint64_t sub_240931400(uint64_t a1, uint64_t a2)
{
  sub_2409556F8();
  sub_240954868();
  uint64_t v4 = sub_240955748();

  return sub_240931864(a1, a2, v4);
}

unint64_t sub_240931478(uint64_t a1)
{
  sub_240951A98();
  sub_240932F84(&qword_26AFCC5F0, MEMORY[0x263F07508]);
  uint64_t v2 = sub_2409546F8();

  return sub_240931948(a1, v2);
}

unint64_t sub_240931510(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_2409547C8();
    uint64_t v8 = v7;
    if (v6 == sub_2409547C8() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_240955618();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_2409547C8();
          uint64_t v15 = v14;
          if (v13 == sub_2409547C8() && v15 == v16) {
            break;
          }
          char v18 = sub_240955618();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_240931688(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_24083EDCC(0, a3);
    id v7 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    char v8 = sub_240954FC8();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v5;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * i);
        char v11 = sub_240954FC8();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_24093179C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_24086A0C8(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x245601510](v9, a1);
      sub_240858AA8((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_240931864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    id v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_240955618() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_240955618() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_240931948(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_240951A98();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    BOOL v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_240932F84(&qword_268C914A8, MEMORY[0x263F07508]);
      char v15 = sub_240954778();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

uint64_t sub_240931B08(void *a1)
{
  sub_24083A098(0, &qword_268C90A90, (void (*)(uint64_t))type metadata accessor for NewLabsFeedItemData);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v41 - v4;
  uint64_t v6 = sub_2409540C8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v43 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  BOOL v11 = (char *)&v41 - v10;
  sub_240954088();
  id v12 = v1;
  id v13 = a1;
  uint64_t v14 = v12;
  id v15 = v13;
  uint64_t v16 = sub_2409540B8();
  os_log_type_t v17 = sub_240954C08();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v42 = v6;
    uint64_t v19 = v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v41 = v7;
    uint64_t v21 = v20;
    v44[0] = v20;
    *(_DWORD *)uint64_t v19 = 136446466;
    uint64_t ObjectType = swift_getObjectType();
    sub_2409331C8(0, &qword_268C91E50, (void (*)(uint64_t))sub_240933134);
    uint64_t v22 = sub_2409547E8();
    uint64_t ObjectType = sub_2408370E4(v22, v23, v44);
    sub_2409550B8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2082;
    uint64_t ObjectType = (uint64_t)v15;
    sub_24083EDCC(0, (unint64_t *)&qword_268C90A88);
    id v24 = v15;
    uint64_t v25 = sub_240954808();
    uint64_t ObjectType = sub_2408370E4(v25, v26, v44);
    sub_2409550B8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v16, v17, "didSelectCell: %{public}s %{public}s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    uint64_t v27 = v21;
    uint64_t v7 = v41;
    MEMORY[0x2456021C0](v27, -1, -1);
    uint64_t v28 = v19;
    uint64_t v6 = v42;
    MEMORY[0x2456021C0](v28, -1, -1);
  }
  else
  {
  }
  os_log_type_t v29 = *(void (**)(char *, uint64_t))(v7 + 8);
  v29(v11, v6);
  uint64_t v30 = (void *)MEMORY[0x263F8EED0];
  uint64_t v31 = (uint64_t)v14 + *(void *)((*MEMORY[0x263F8EED0] & *v14) + 0x60);
  swift_beginAccess();
  sub_2409330C4(v31, (uint64_t)v5, (uint64_t)&qword_268C90A90, (uint64_t)type metadata accessor for NewLabsFeedItemData, (uint64_t (*)(void, uint64_t, uint64_t))sub_24083A098);
  uint64_t v32 = type metadata accessor for NewLabsFeedItemData(0);
  LODWORD(v31) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v5, 1, v32);
  sub_24083A03C((uint64_t)v5, &qword_268C90A90, (void (*)(uint64_t))type metadata accessor for NewLabsFeedItemData);
  if (v31 == 1)
  {
    uint64_t v33 = v43;
    sub_240954088();
    uint64_t v34 = sub_2409540B8();
    os_log_type_t v35 = sub_240954C18();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl(&dword_240818000, v34, v35, "User tapped tile before its data was available", v36, 2u);
      MEMORY[0x2456021C0](v36, -1, -1);
    }

    v29(v33, v6);
  }
  sub_240933134();
  v44[3] = v37;
  v44[0] = (uint64_t)v14;
  uint64_t v38 = *(void (**)(uint64_t *))((*v30 & *v14) + 0xD0);
  uint64_t v39 = v14;
  v38(v44);
  return sub_240858A4C((uint64_t)v44);
}

uint64_t sub_240932014(void *a1)
{
  sub_24083A098(0, &qword_268C91108, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v41 - v4;
  uint64_t v6 = sub_2409540C8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v43 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  BOOL v11 = (char *)&v41 - v10;
  sub_240954088();
  id v12 = v1;
  id v13 = a1;
  uint64_t v14 = v12;
  id v15 = v13;
  uint64_t v16 = sub_2409540B8();
  os_log_type_t v17 = sub_240954C08();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v42 = v6;
    uint64_t v19 = v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v41 = v7;
    uint64_t v21 = v20;
    v44[0] = v20;
    *(_DWORD *)uint64_t v19 = 136446466;
    uint64_t ObjectType = swift_getObjectType();
    sub_2409331C8(0, &qword_268C91E38, (void (*)(uint64_t))sub_240933030);
    uint64_t v22 = sub_2409547E8();
    uint64_t ObjectType = sub_2408370E4(v22, v23, v44);
    sub_2409550B8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2082;
    uint64_t ObjectType = (uint64_t)v15;
    sub_24083EDCC(0, (unint64_t *)&qword_268C90A88);
    id v24 = v15;
    uint64_t v25 = sub_240954808();
    uint64_t ObjectType = sub_2408370E4(v25, v26, v44);
    sub_2409550B8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v16, v17, "didSelectCell: %{public}s %{public}s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    uint64_t v27 = v21;
    uint64_t v7 = v41;
    MEMORY[0x2456021C0](v27, -1, -1);
    uint64_t v28 = v19;
    uint64_t v6 = v42;
    MEMORY[0x2456021C0](v28, -1, -1);
  }
  else
  {
  }
  os_log_type_t v29 = *(void (**)(char *, uint64_t))(v7 + 8);
  v29(v11, v6);
  uint64_t v30 = (void *)MEMORY[0x263F8EED0];
  uint64_t v31 = (uint64_t)v14 + *(void *)((*MEMORY[0x263F8EED0] & *v14) + 0x60);
  swift_beginAccess();
  sub_2409330C4(v31, (uint64_t)v5, (uint64_t)&qword_268C91108, (uint64_t)type metadata accessor for NewRecordsFeedItemData, (uint64_t (*)(void, uint64_t, uint64_t))sub_24083A098);
  uint64_t v32 = type metadata accessor for NewRecordsFeedItemData(0);
  LODWORD(v31) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v5, 1, v32);
  sub_24083A03C((uint64_t)v5, &qword_268C91108, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
  if (v31 == 1)
  {
    uint64_t v33 = v43;
    sub_240954088();
    uint64_t v34 = sub_2409540B8();
    os_log_type_t v35 = sub_240954C18();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl(&dword_240818000, v34, v35, "User tapped tile before its data was available", v36, 2u);
      MEMORY[0x2456021C0](v36, -1, -1);
    }

    v29(v33, v6);
  }
  sub_240933030();
  v44[3] = v37;
  v44[0] = (uint64_t)v14;
  uint64_t v38 = *(void (**)(uint64_t *))((*v30 & *v14) + 0xD0);
  uint64_t v39 = v14;
  v38(v44);
  return sub_240858A4C((uint64_t)v44);
}

uint64_t sub_240932520(void *a1)
{
  sub_24083A098(0, &qword_268C90C88, MEMORY[0x263F461A8]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v42 - v4;
  uint64_t v6 = sub_2409540C8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  unint64_t v44 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  BOOL v11 = (char *)&v42 - v10;
  sub_240954088();
  id v12 = v1;
  id v13 = a1;
  uint64_t v14 = v12;
  id v15 = v13;
  uint64_t v16 = sub_2409540B8();
  os_log_type_t v17 = sub_240954C08();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v43 = v6;
    uint64_t v19 = v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v42 = v7;
    uint64_t v21 = v20;
    v45[0] = v20;
    *(_DWORD *)uint64_t v19 = 136446466;
    uint64_t ObjectType = swift_getObjectType();
    sub_2409331C8(0, &qword_268C91E98, (void (*)(uint64_t))sub_2409334C4);
    uint64_t v22 = sub_2409547E8();
    uint64_t ObjectType = sub_2408370E4(v22, v23, v45);
    sub_2409550B8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2082;
    uint64_t ObjectType = (uint64_t)v15;
    sub_24083EDCC(0, (unint64_t *)&qword_268C90A88);
    id v24 = v15;
    uint64_t v25 = sub_240954808();
    uint64_t ObjectType = sub_2408370E4(v25, v26, v45);
    sub_2409550B8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v16, v17, "didSelectCell: %{public}s %{public}s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    uint64_t v27 = v21;
    uint64_t v7 = v42;
    MEMORY[0x2456021C0](v27, -1, -1);
    uint64_t v28 = v19;
    uint64_t v6 = v43;
    MEMORY[0x2456021C0](v28, -1, -1);
  }
  else
  {
  }
  os_log_type_t v29 = *(void (**)(char *, uint64_t))(v7 + 8);
  v29(v11, v6);
  uint64_t v30 = (void *)MEMORY[0x263F8EED0];
  uint64_t v31 = (uint64_t)v14 + *(void *)((*MEMORY[0x263F8EED0] & *v14) + 0x60);
  swift_beginAccess();
  uint64_t v32 = (void (*)(uint64_t))MEMORY[0x263F461A8];
  sub_2409330C4(v31, (uint64_t)v5, (uint64_t)&qword_268C90C88, MEMORY[0x263F461A8], (uint64_t (*)(void, uint64_t, uint64_t))sub_24083A098);
  uint64_t v33 = sub_2409533C8();
  LODWORD(v31) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v5, 1, v33);
  sub_24083A03C((uint64_t)v5, &qword_268C90C88, v32);
  if (v31 == 1)
  {
    uint64_t v34 = v44;
    sub_240954088();
    os_log_type_t v35 = sub_2409540B8();
    os_log_type_t v36 = sub_240954C18();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v37 = 0;
      _os_log_impl(&dword_240818000, v35, v36, "User tapped tile before its data was available", v37, 2u);
      MEMORY[0x2456021C0](v37, -1, -1);
    }

    v29(v34, v6);
  }
  sub_2409334C4();
  v45[3] = v38;
  v45[0] = (uint64_t)v14;
  uint64_t v39 = *(void (**)(uint64_t *))((*v30 & *v14) + 0xD0);
  uint64_t v40 = v14;
  v39(v45);
  return sub_240858A4C((uint64_t)v45);
}

uint64_t sub_240932A2C()
{
  uint64_t v1 = sub_240951A98();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_240932B00(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_240951A98() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_24081E750;
  return sub_24092EFBC(a1, v5, v6, v7, v8);
}

void sub_240932BFC()
{
  if (!qword_268C91DE0)
  {
    sub_240932E84(255, (unint64_t *)&qword_268C91DE8);
    unint64_t v0 = sub_2409555E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C91DE0);
    }
  }
}

uint64_t sub_240932C64()
{
  return sub_240932F84(&qword_268C91DF8, (void (*)(uint64_t))type metadata accessor for AccountStatusReloginSummaryTileFeedItemViewController);
}

uint64_t type metadata accessor for AccountStatusReloginSummaryTileFeedItemViewController()
{
  uint64_t result = qword_268C91E00;
  if (!qword_268C91E00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_240932CF8()
{
  sub_24083A098(319, &qword_26AFCE168, MEMORY[0x263F45B10]);
  if (v0 <= 0x3F)
  {
    sub_240953798();
    if (v1 <= 0x3F) {
      swift_initClassMetadata2();
    }
  }
}

uint64_t sub_240932DEC()
{
  return type metadata accessor for AccountStatusReloginSummaryTileFeedItemViewController();
}

void sub_240932DF4()
{
  if (!qword_268C91E10)
  {
    sub_240933430(255, &qword_268C91C58, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8D060]);
    unint64_t v0 = sub_240955438();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C91E10);
    }
  }
}

void sub_240932E84(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_240932ED8()
{
  if (!qword_268C91E20)
  {
    sub_240951A98();
    type metadata accessor for AccountNewRecordsData(255);
    sub_240932F84(&qword_26AFCC5F0, MEMORY[0x263F07508]);
    unint64_t v0 = sub_240955438();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C91E20);
    }
  }
}

uint64_t sub_240932F84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240932FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AccountNewRecordsData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_240933030()
{
  if (!qword_268C91E28)
  {
    type metadata accessor for NewRecordsFeedItemData(255);
    sub_240932F84(&qword_268C91E30, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
    unint64_t v0 = type metadata accessor for BaseFeedItemViewController();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C91E28);
    }
  }
}

uint64_t sub_2409330C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  uint64_t v7 = a5(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

void sub_240933134()
{
  if (!qword_268C91E40)
  {
    type metadata accessor for NewLabsFeedItemData(255);
    sub_240932F84(&qword_268C91E48, (void (*)(uint64_t))type metadata accessor for NewLabsFeedItemData);
    unint64_t v0 = type metadata accessor for BaseFeedItemViewController();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C91E40);
    }
  }
}

uint64_t sub_2409331C8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a2;
  if (!*a2)
  {
    a3(255);
    uint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_240933208(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  if (!*a2)
  {
    sub_24083EDCC(255, a3);
    sub_24083EDCC(255, &qword_268C90978);
    sub_240857DB8(a5, a3);
    unint64_t v8 = sub_240955438();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2409332BC()
{
  if (!qword_268C91E60)
  {
    type metadata accessor for Key(255);
    sub_240932F84((unint64_t *)&qword_268C90708, type metadata accessor for Key);
    unint64_t v0 = sub_240955438();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C91E60);
    }
  }
}

uint64_t sub_24093335C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_2409333C4()
{
  if (!qword_268C91E78)
  {
    unint64_t v0 = sub_240955438();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C91E78);
    }
  }
}

void sub_240933430(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, void, uint64_t, void))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, MEMORY[0x263F8D310], a3, MEMORY[0x263F8D320]);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_24093348C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_2409334C4()
{
  if (!qword_268C91E90)
  {
    sub_2409533C8();
    sub_240932F84(&qword_268C90C70, MEMORY[0x263F461A8]);
    unint64_t v0 = type metadata accessor for BaseFeedItemViewController();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C91E90);
    }
  }
}

uint64_t type metadata accessor for ClinicalNotificationSettingsSwitchCellViewController()
{
  uint64_t result = qword_26AFCD958;
  if (!qword_26AFCD958) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2409335A8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2409335F4()
{
  uint64_t v1 = sub_2409547C8();
  swift_bridgeObjectRetain();
  sub_2409548A8();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_240933664()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_24093366C(uint64_t *a1))()
{
  uint64_t v4 = sub_2409547C8();
  uint64_t v5 = v2;
  swift_bridgeObjectRetain();
  sub_2409548A8();
  swift_bridgeObjectRelease();
  *a1 = v4;
  a1[1] = v5;
  return destroy for ClinicalSharingOnboardingTileViewController.ViewModel;
}

id sub_240933708()
{
  uint64_t v1 = qword_26AFCD950;
  uint64_t v2 = *(void **)(v0 + qword_26AFCD950);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_26AFCD950);
  }
  else
  {
    uint64_t v4 = (void *)sub_24093376C();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_24093376C()
{
  sub_2409547C8();
  uint64_t result = sub_240953BF8();
  uint64_t v1 = v12;
  if (v12)
  {
    uint64_t v2 = sub_2408304E8(v11, v12);
    uint64_t v3 = *(void *)(v1 - 8);
    MEMORY[0x270FA5388](v2);
    uint64_t v5 = (char *)&v11[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v3 + 16))(v5);
    id v6 = (void *)sub_240953B98();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
    id v7 = objc_allocWithZone(MEMORY[0x263F0A470]);
    unint64_t v8 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
    id v9 = objc_msgSend(v7, sel_initWithCategory_domainName_healthStore_, 3, v8, v6);

    sub_2408371B8((uint64_t)v11);
    return (uint64_t)v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_240933900()
{
  sub_2409343B0();
  id v1 = v0;
  return v0;
}

void (*sub_240933934(void *a1))(id *a1)
{
  unint64_t v3 = sub_2409343B0();
  *a1 = v1;
  a1[1] = v3;
  id v4 = v1;
  return sub_240876C80;
}

uint64_t sub_240933988()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v1 = sub_2409540C8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v17 - v4;
  id v6 = sub_240933708();
  sub_2409547C8();
  char v7 = sub_240954C88();

  swift_bridgeObjectRelease();
  if (v7 != 2) {
    return v7 & 1;
  }
  sub_240954098();
  unint64_t v8 = sub_2409540B8();
  os_log_type_t v9 = sub_240954C18();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    v19[0] = v11;
    *(_DWORD *)uint64_t v10 = 136446466;
    uint64_t v20 = ObjectType;
    swift_getMetatypeMetadata();
    uint64_t v18 = v1;
    uint64_t v12 = sub_2409547E8();
    uint64_t v20 = sub_2408370E4(v12, v13, v19);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2082;
    uint64_t v14 = sub_2409547C8();
    uint64_t v20 = sub_2408370E4(v14, v15, v19);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v8, v9, "[%{public}s]: value for notification type %{public}s is nil", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v11, -1, -1);
    MEMORY[0x2456021C0](v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v18);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  return 1;
}

uint64_t sub_240933E00(char a1)
{
  swift_getObjectType();
  uint64_t v2 = sub_2409540C8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  MEMORY[0x270FA5388](v4);
  id v6 = (char *)&v15 - v5;
  id v7 = sub_240933708();
  sub_2409547C8();
  sub_240954C98();

  swift_bridgeObjectRelease();
  sub_240954098();
  unint64_t v8 = sub_2409540B8();
  os_log_type_t v9 = sub_240954C38();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v17 = v11;
    *(_DWORD *)uint64_t v10 = 136446466;
    uint64_t v12 = sub_2409557A8();
    uint64_t v16 = sub_2408370E4(v12, v13, &v17);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 1024;
    LODWORD(v16) = a1 & 1;
    sub_2409550B8();
    _os_log_impl(&dword_240818000, v8, v9, "%{public}s Set CHR Notifications changes preference to %{BOOL}d", (uint8_t *)v10, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v11, -1, -1);
    MEMORY[0x2456021C0](v10, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

id sub_240934234(char *a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    sub_2409547C8();
    *(void *)&a1[qword_26AFCD950] = 0;
    id v6 = a4;
    id v7 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)&a1[qword_26AFCD950] = 0;
    id v8 = a4;
    id v7 = 0;
  }
  v11.receiver = a1;
  v11.super_class = (Class)type metadata accessor for ClinicalNotificationSettingsSwitchCellViewController();
  id v9 = objc_msgSendSuper2(&v11, sel_initWithNibName_bundle_, v7, a4);

  return v9;
}

id sub_2409342F0(char *a1, uint64_t a2, uint64_t a3)
{
  *(void *)&a1[qword_26AFCD950] = 0;
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for ClinicalNotificationSettingsSwitchCellViewController();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

void sub_240934348()
{
}

id sub_240934358()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClinicalNotificationSettingsSwitchCellViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_240934390(uint64_t a1)
{
}

uint64_t sub_2409343A0()
{
  return type metadata accessor for ClinicalNotificationSettingsSwitchCellViewController();
}

unint64_t sub_2409343B0()
{
  unint64_t result = qword_268C91EA0;
  if (!qword_268C91EA0)
  {
    type metadata accessor for ClinicalNotificationSettingsSwitchCellViewController();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91EA0);
  }
  return result;
}

uint64_t sub_240934408(void (*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  void (*v40)(uint64_t *__return_ptr, char *);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  uint64_t v40 = a1;
  uint64_t v5 = sub_2409521B8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  id v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v39 = (char *)&v31 - v10;
  uint64_t v11 = *(void *)(a3 + 56);
  uint64_t v35 = a3 + 56;
  uint64_t v12 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  uint64_t v38 = v6 + 16;
  int64_t v36 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v37 = v6 + 32;
  uint64_t v15 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v43 = a3;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v17 = 0;
  uint64_t v34 = (void *)MEMORY[0x263F8EE78];
  while (1)
  {
    if (v14)
    {
      unint64_t v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v19 = v18 | (v17 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v17++, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v17 >= v36) {
      goto LABEL_31;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v17);
    if (!v21) {
      break;
    }
LABEL_18:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v17 << 6);
LABEL_19:
    unint64_t v23 = v39;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v39, *(void *)(v43 + 48) + *(void *)(v6 + 72) * v19, v5);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v23, v5);
    v40(&v41, v9);
    if (v3)
    {
      (*v15)(v9, v5);
      uint64_t v30 = v34;
      swift_bridgeObjectRelease();
LABEL_32:
      swift_release();
      return (uint64_t)v30;
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v15)(v9, v5);
    uint64_t v24 = v42;
    if (v42)
    {
      uint64_t v33 = v41;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_2408C296C(0, v34[2] + 1, 1, v34);
        uint64_t v34 = (void *)result;
      }
      unint64_t v26 = v34[2];
      unint64_t v25 = v34[3];
      unint64_t v27 = v26 + 1;
      if (v26 >= v25 >> 1)
      {
        unint64_t v31 = v34[2];
        unint64_t v32 = v26 + 1;
        uint64_t result = (uint64_t)sub_2408C296C((void *)(v25 > 1), v26 + 1, 1, v34);
        unint64_t v26 = v31;
        unint64_t v27 = v32;
        uint64_t v34 = (void *)result;
      }
      uint64_t v28 = v34;
      void v34[2] = v27;
      os_log_type_t v29 = &v28[2 * v26];
      v29[4] = v33;
      v29[5] = v24;
    }
  }
  int64_t v22 = v17 + 1;
  if (v17 + 1 >= v36) {
    goto LABEL_31;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21) {
    goto LABEL_17;
  }
  int64_t v22 = v17 + 2;
  if (v17 + 2 >= v36) {
    goto LABEL_31;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21) {
    goto LABEL_17;
  }
  int64_t v22 = v17 + 3;
  if (v17 + 3 >= v36) {
    goto LABEL_31;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21) {
    goto LABEL_17;
  }
  int64_t v22 = v17 + 4;
  if (v17 + 4 >= v36)
  {
LABEL_31:
    uint64_t v30 = v34;
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
LABEL_17:
    int64_t v17 = v22;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v17 >= v36) {
      goto LABEL_31;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v17);
    ++v22;
    if (v21) {
      goto LABEL_18;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

unint64_t sub_2409347A0(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  return sub_2409347F8(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for RecordKindFeedItemData);
}

unint64_t sub_2409347CC(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  return sub_2409347F8(a1, a2, a3, MEMORY[0x263F45F38]);
}

unint64_t sub_2409347F8(void (*a1)(void), uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  sub_2408E3158(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_240951E78();
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v39 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v35 = (char *)v31 - v16;
  uint64_t v17 = *(void *)(a3 + 16);
  if (!v17) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v36 = a2;
  uint64_t v18 = v15;
  uint64_t v19 = *(void *)(a4(0) - 8);
  uint64_t v20 = a3;
  uint64_t v21 = a3 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  uint64_t v34 = v18;
  uint64_t v37 = (void (**)(char *))(v18 + 32);
  uint64_t v38 = (unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  uint64_t v22 = *(void *)(v19 + 72);
  v31[1] = v20;
  swift_bridgeObjectRetain();
  unint64_t v40 = MEMORY[0x263F8EE78];
  uint64_t v32 = v12;
  uint64_t v33 = a1;
  do
  {
    a1(v21);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v40;
    }
    if ((*v38)(v11, 1, v12) == 1)
    {
      sub_240849B7C((uint64_t)v11, (uint64_t (*)(void))sub_2408E3158);
    }
    else
    {
      unint64_t v23 = *v37;
      uint64_t v24 = v35;
      (*v37)(v35);
      ((void (*)(char *, char *, uint64_t))v23)(v39, v24, v12);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v40 = sub_2408C3044(0, *(void *)(v40 + 16) + 1, 1, v40);
      }
      unint64_t v26 = *(void *)(v40 + 16);
      unint64_t v25 = *(void *)(v40 + 24);
      uint64_t v27 = v34;
      if (v26 >= v25 >> 1)
      {
        uint64_t v29 = sub_2408C3044(v25 > 1, v26 + 1, 1, v40);
        uint64_t v27 = v34;
        unint64_t v40 = v29;
      }
      unint64_t v28 = v40;
      *(void *)(v40 + 16) = v26 + 1;
      uint64_t v12 = v32;
      ((void (*)(unint64_t, char *, uint64_t))v23)(v28+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(void *)(v27 + 72) * v26, v39, v32);
      a1 = v33;
    }
    v21 += v22;
    --v17;
  }
  while (v17);
  swift_bridgeObjectRelease();
  return v40;
}

void sub_240934B70(void (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  sub_2408E3158(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = a3;
  uint64_t v10 = (void *)sub_240951E78();
  uint64_t v29 = *(v10 - 1);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v33 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  unint64_t v28 = (char *)&v26 - v13;
  if (a3 >> 62) {
    goto LABEL_21;
  }
  uint64_t v14 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v14; uint64_t v14 = sub_2409553D8())
  {
    unint64_t v31 = (unsigned int (**)(char *, uint64_t, void *))(v29 + 48);
    unint64_t v32 = v9 & 0xC000000000000001;
    uint64_t v30 = v29 + 32;
    uint64_t v36 = v10;
    unint64_t v37 = MEMORY[0x263F8EE78];
    uint64_t v15 = 4;
    unint64_t v27 = v9;
    uint64_t v16 = (void (**)(char *, char *, void *))(v29 + 32);
    while (1)
    {
      uint64_t v17 = v32 ? (void *)MEMORY[0x2456015B0](v15 - 4, v9) : *(id *)(v9 + 8 * v15);
      uint64_t v10 = v17;
      uint64_t v18 = v15 - 3;
      if (__OFADD__(v15 - 4, 1)) {
        break;
      }
      id v38 = v17;
      v34(&v38);
      if (v4)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return;
      }

      uint64_t v19 = v36;
      if ((*v31)(v8, 1, v36) == 1)
      {
        sub_240849B7C((uint64_t)v8, (uint64_t (*)(void))sub_2408E3158);
      }
      else
      {
        uint64_t v20 = *v16;
        uint64_t v21 = v28;
        (*v16)(v28, v8, v19);
        v20(v33, v21, v19);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          unint64_t v22 = v37;
        }
        else {
          unint64_t v22 = sub_2408C3044(0, *(void *)(v37 + 16) + 1, 1, v37);
        }
        unint64_t v24 = *(void *)(v22 + 16);
        unint64_t v23 = *(void *)(v22 + 24);
        if (v24 >= v23 >> 1) {
          unint64_t v22 = sub_2408C3044(v23 > 1, v24 + 1, 1, v22);
        }
        *(void *)(v22 + 16) = v24 + 1;
        unint64_t v25 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
        unint64_t v37 = v22;
        v20((char *)(v22 + v25 + *(void *)(v29 + 72) * v24), v33, v36);
        unint64_t v9 = v27;
      }
      ++v15;
      if (v18 == v14) {
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
  }
LABEL_22:
  swift_bridgeObjectRelease();
}

unint64_t sub_240934EFC(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a2;
  sub_240873DF8(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240951A98();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v33 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v30 = (char *)v25 - v13;
  uint64_t v14 = *(void *)(a3 + 16);
  if (!v14) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v15 = *(void *)(type metadata accessor for LabNameWithDate(0) - 8);
  uint64_t v16 = v10;
  uint64_t v17 = a3 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  uint64_t v18 = (unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v27 = v16;
  unint64_t v32 = (void (**)(char *, char *, uint64_t))(v16 + 32);
  uint64_t v31 = *(void *)(v15 + 72);
  v25[1] = a3;
  swift_bridgeObjectRetain();
  unint64_t v19 = MEMORY[0x263F8EE78];
  uint64_t v28 = v9;
  uint64_t v29 = a1;
  uint64_t v26 = v18;
  do
  {
    a1(v17);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v19;
    }
    if ((*v18)(v8, 1, v9) == 1)
    {
      sub_240849B7C((uint64_t)v8, (uint64_t (*)(void))sub_240873DF8);
    }
    else
    {
      uint64_t v20 = *v32;
      uint64_t v21 = v30;
      (*v32)(v30, v8, v9);
      v20(v33, v21, v9);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v19 = sub_2408C322C(0, *(void *)(v19 + 16) + 1, 1, v19);
      }
      unint64_t v23 = *(void *)(v19 + 16);
      unint64_t v22 = *(void *)(v19 + 24);
      if (v23 >= v22 >> 1) {
        unint64_t v19 = sub_2408C322C(v22 > 1, v23 + 1, 1, v19);
      }
      *(void *)(v19 + 16) = v23 + 1;
      uint64_t v9 = v28;
      v20((char *)(v19+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(void *)(v27 + 72) * v23), v33, v28);
      a1 = v29;
      uint64_t v18 = v26;
    }
    v17 += v31;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v19;
}

unint64_t sub_240935240(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  return sub_2409347F8(a1, a2, a3, type metadata accessor for AccountNewRecordsData);
}

uint64_t sub_24093526C(uint64_t a1)
{
  uint64_t result = sub_240954B68();
  int64_t v3 = 0;
  uint64_t v18 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_240940118(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_240935404(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240951A28();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  int64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v22 - v9;
  sub_2408834C8();
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  int64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_24093C078(a2, (uint64_t)v14, (uint64_t (*)(void))sub_240849BDC);
  sub_24093C078(a1, v15, (uint64_t (*)(void))sub_240849BDC);
  int64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  LODWORD(a1) = v16(v14, 1, v4);
  int v17 = v16((char *)v15, 1, v4);
  if (a1 == 1)
  {
    if (v17 == 1)
    {
      char v18 = 0;
    }
    else
    {
      sub_240849B7C(v15, (uint64_t (*)(void))sub_240849BDC);
      char v18 = 1;
    }
  }
  else if (v17 == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
    char v18 = 0;
  }
  else
  {
    unint64_t v19 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v19(v10, v14, v4);
    v19(v8, (char *)v15, v4);
    sub_240829E50(&qword_268C90AB8, MEMORY[0x263F07490]);
    char v18 = sub_240954738();
    uint64_t v20 = *(void (**)(char *, uint64_t))(v5 + 8);
    v20(v8, v4);
    v20(v10, v4);
  }
  return v18 & 1;
}

uint64_t sub_2409356B8(void (*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  void (*v52)(uint64_t *__return_ptr, char *);
  uint64_t v53;
  uint64_t v54;

  uint64_t v4 = v3;
  uint64_t v49 = a2;
  uint64_t v52 = a1;
  uint64_t v6 = type metadata accessor for AccountNewRecordsData(0);
  uint64_t v51 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v50 = (uint64_t)&v46 - v10;
  uint64_t v11 = *(void *)(a3 + 64);
  uint64_t v47 = a3 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v48 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v53 = a3;
  swift_bridgeObjectRetain();
  int64_t v15 = 0;
  unint64_t v16 = MEMORY[0x263F8EE78];
  while (1)
  {
    if (v14)
    {
      unint64_t v17 = __clz(__rbit64(v14));
      uint64_t v18 = (v14 - 1) & v14;
      unint64_t v19 = v17 | (v15 << 6);
    }
    else
    {
      BOOL v20 = __OFADD__(v15++, 1);
      if (v20) {
        goto LABEL_49;
      }
      if (v15 >= v48) {
        goto LABEL_45;
      }
      unint64_t v21 = *(void *)(v47 + 8 * v15);
      if (!v21)
      {
        int64_t v22 = v15 + 1;
        if (v15 + 1 >= v48) {
          goto LABEL_45;
        }
        unint64_t v21 = *(void *)(v47 + 8 * v22);
        if (!v21)
        {
          int64_t v22 = v15 + 2;
          if (v15 + 2 >= v48) {
            goto LABEL_45;
          }
          unint64_t v21 = *(void *)(v47 + 8 * v22);
          if (!v21)
          {
            int64_t v22 = v15 + 3;
            if (v15 + 3 >= v48) {
              goto LABEL_45;
            }
            unint64_t v21 = *(void *)(v47 + 8 * v22);
            if (!v21)
            {
              int64_t v22 = v15 + 4;
              if (v15 + 4 >= v48) {
                goto LABEL_45;
              }
              unint64_t v21 = *(void *)(v47 + 8 * v22);
              if (!v21)
              {
                while (1)
                {
                  int64_t v15 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_51;
                  }
                  if (v15 >= v48) {
                    goto LABEL_45;
                  }
                  unint64_t v21 = *(void *)(v47 + 8 * v15);
                  ++v22;
                  if (v21) {
                    goto LABEL_20;
                  }
                }
              }
            }
          }
        }
        int64_t v15 = v22;
      }
LABEL_20:
      uint64_t v18 = (v21 - 1) & v21;
      unint64_t v19 = __clz(__rbit64(v21)) + (v15 << 6);
    }
    uint64_t v23 = v50;
    sub_24093C078(*(void *)(v53 + 56) + *(void *)(v51 + 72) * v19, v50, type metadata accessor for AccountNewRecordsData);
    sub_240849700(v23, (uint64_t)v9, type metadata accessor for AccountNewRecordsData);
    v52(&v54, v9);
    if (v4)
    {
      sub_240849B7C((uint64_t)v9, type metadata accessor for AccountNewRecordsData);
      swift_bridgeObjectRelease();
LABEL_45:
      swift_release();
      return v16;
    }
    unint64_t v24 = v18;
    unint64_t v25 = v9;
    sub_240849B7C((uint64_t)v9, type metadata accessor for AccountNewRecordsData);
    uint64_t v26 = v54;
    uint64_t v27 = *(void *)(v54 + 16);
    int64_t v28 = *(void *)(v16 + 16);
    int64_t v29 = v28 + v27;
    if (__OFADD__(v28, v27)) {
      break;
    }
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v29 <= *(void *)(v16 + 24) >> 1)
    {
      if (!*(void *)(v26 + 16)) {
        goto LABEL_4;
      }
    }
    else
    {
      if (v28 <= v29) {
        int64_t v31 = v28 + v27;
      }
      else {
        int64_t v31 = v28;
      }
      unint64_t v16 = sub_2408C3670(isUniquelyReferenced_nonNull_native, v31, 1, v16);
      if (!*(void *)(v26 + 16))
      {
LABEL_4:
        if (v27) {
          goto LABEL_47;
        }
        goto LABEL_5;
      }
    }
    uint64_t v32 = *(void *)(v16 + 16);
    uint64_t v33 = (*(void *)(v16 + 24) >> 1) - v32;
    uint64_t v34 = *(void *)(type metadata accessor for LabNameWithDate(0) - 8);
    uint64_t v35 = *(void *)(v34 + 72);
    if (v33 < v27) {
      goto LABEL_48;
    }
    unint64_t v36 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    unint64_t v37 = v16 + v36 + v35 * v32;
    unint64_t v38 = v26 + v36;
    uint64_t v39 = v35 * v27;
    unint64_t v40 = v37 + v39;
    unint64_t v41 = v38 + v39;
    if (v38 < v40 && v37 < v41) {
      goto LABEL_52;
    }
    swift_arrayInitWithCopy();
    if (v27)
    {
      uint64_t v43 = *(void *)(v16 + 16);
      BOOL v20 = __OFADD__(v43, v27);
      uint64_t v44 = v43 + v27;
      if (v20) {
        goto LABEL_50;
      }
      *(void *)(v16 + 16) = v44;
    }
LABEL_5:
    swift_bridgeObjectRelease();
    uint64_t v9 = v25;
    uint64_t v4 = 0;
    unint64_t v14 = v24;
  }
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  uint64_t result = sub_240955448();
  __break(1u);
  return result;
}

uint64_t sub_240935B3C(void *a1)
{
  sub_24093E020();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[1] = *a1;
  sub_24093C214(0, (unint64_t *)&qword_26AFCC610, (unint64_t *)&qword_26AFD05A0);
  sub_24093C26C();
  sub_240954958();
  sub_24083F3C0();
  sub_240954298();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_240935C70@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_240951A98();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24093A4A4(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = &v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for AccountNewRecordsData(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  unint64_t v16 = (void **)&v28[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = *a1;
  sub_24093C078(a2, (uint64_t)v12, (uint64_t (*)(void))sub_24093A4A4);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_240849B7C((uint64_t)v12, (uint64_t (*)(void))sub_24093A4A4);
    uint64_t result = swift_bridgeObjectRetain();
  }
  else
  {
    sub_240849700((uint64_t)v12, (uint64_t)v16, type metadata accessor for AccountNewRecordsData);
    sub_24093E120(0, &qword_268C91F08, (uint64_t (*)(uint64_t))sub_24082A2E4, MEMORY[0x263F8E0F8]);
    sub_24082A2E4();
    uint64_t v20 = v19 - 8;
    unint64_t v21 = (*(unsigned __int8 *)(*(void *)(v19 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v19 - 8) + 80);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_240956800;
    unint64_t v23 = v22 + v21;
    uint64_t v24 = v23 + *(int *)(v20 + 56);
    unint64_t v25 = *v16;
    swift_bridgeObjectRetain();
    id v26 = objc_msgSend(v25, sel_identifier);
    sub_240951A78();

    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v7 + 32))(v23, v9, v6);
    sub_24093C078((uint64_t)v16, v24, type metadata accessor for AccountNewRecordsData);
    unint64_t v27 = sub_240829F20(v22);
    uint64_t v17 = sub_240935FEC(v27, v17);
    uint64_t result = sub_240849B7C((uint64_t)v16, type metadata accessor for AccountNewRecordsData);
  }
  *a3 = v17;
  return result;
}

uint64_t sub_240935FEC(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_24093CB44(a1, (uint64_t)sub_24093CA9C, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_240936078()
{
  return sub_240954958();
}

uint64_t sub_240936104@<X0>(id *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v28 = a2;
  id v26 = a1;
  uint64_t v35 = a3;
  uint64_t v33 = type metadata accessor for AccountNewRecordsData(0);
  MEMORY[0x270FA5388](v33);
  uint64_t v31 = (uint64_t)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24093E120(0, &qword_26AFCF538, type metadata accessor for AccountNewRecordsData, MEMORY[0x263EFDDF8]);
  uint64_t v32 = v5;
  uint64_t v34 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v25 - v6;
  uint64_t v8 = sub_240952F68();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408450C8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v29 = v12;
  uint64_t v30 = v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_240951A98();
  uint64_t v27 = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v20 = objc_msgSend(*a1, sel_identifier);
  sub_240951A78();

  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v11, v19, v16);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F46138], v8);
  uint64_t v21 = sub_240953228();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v36 = v21;
  sub_24082A230(0, &qword_26AFCDC08, (uint64_t (*)(uint64_t))sub_240849BDC, MEMORY[0x263EFDCF0]);
  sub_24082A1CC(0, (unint64_t *)&qword_26AFCDC18, (void (*)(uint64_t))sub_240849BDC);
  sub_240841F04();
  sub_240841E90();
  swift_retain();
  sub_240954508();
  swift_release();
  swift_release();
  sub_24093C078((uint64_t)v26, v31, type metadata accessor for AccountNewRecordsData);
  sub_2409543A8();
  sub_240829E50(&qword_26AFCDA68, (void (*)(uint64_t))sub_2408450C8);
  sub_24093C0E0();
  uint64_t v22 = v29;
  uint64_t v23 = v32;
  sub_2409544E8();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v23);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v27);
}

uint64_t sub_2409365FC@<X0>(uint64_t *a1@<X1>, const char *a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v34 = a2;
  sub_240849BDC();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24093E120(0, &qword_268C90AC0, (uint64_t (*)(uint64_t))sub_240849BDC, MEMORY[0x263EFDDF8]);
  uint64_t v10 = v9;
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v29 - v11;
  uint64_t v35 = sub_2409540C8();
  uint64_t v13 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954078();
  swift_retain_n();
  uint64_t v16 = sub_2409540B8();
  os_log_type_t v17 = sub_240954C18();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v30 = v8;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v31 = v10;
    uint64_t v19 = (uint8_t *)v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v33 = a3;
    uint64_t v21 = v20;
    uint64_t v32 = v6;
    *(_DWORD *)uint64_t v19 = 136446210;
    uint64_t v29 = v19 + 4;
    uint64_t v37 = *a1;
    uint64_t v38 = v20;
    sub_24093DE74();
    uint64_t v22 = sub_2409547E8();
    uint64_t v37 = sub_2408370E4(v22, v23, &v38);
    sub_2409550B8();
    swift_release_n();
    uint64_t v8 = v30;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v16, v17, v34, v19, 0xCu);
    swift_arrayDestroy();
    uint64_t v24 = v21;
    a3 = v33;
    MEMORY[0x2456021C0](v24, -1, -1);
    uint64_t v25 = v19;
    uint64_t v10 = v31;
    MEMORY[0x2456021C0](v25, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v35);
  sub_240951968();
  uint64_t v26 = sub_240951A28();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v8, 0, 1, v26);
  sub_2409543A8();
  sub_2408701D4();
  uint64_t v27 = sub_240954498();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v12, v10);
  *a3 = v27;
  return result;
}

uint64_t sub_2409369D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_240951A28();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v26 - v9;
  sub_2408834C8();
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240849BDC();
  MEMORY[0x270FA5388](v15 - 8);
  os_log_type_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for AccountNewRecordsData(0);
  sub_24093C078(a2 + *(int *)(v18 + 24), (uint64_t)v17, (uint64_t (*)(void))sub_240849BDC);
  uint64_t v19 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_24093C078(a1, (uint64_t)v14, (uint64_t (*)(void))sub_240849BDC);
  sub_24093C078((uint64_t)v17, v19, (uint64_t (*)(void))sub_240849BDC);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  LODWORD(a1) = v20(v14, 1, v4);
  int v21 = v20((char *)v19, 1, v4);
  if (a1 == 1)
  {
    if (v21 == 1)
    {
      char v22 = 0;
    }
    else
    {
      sub_240849B7C(v19, (uint64_t (*)(void))sub_240849BDC);
      char v22 = 1;
    }
  }
  else if (v21 == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
    char v22 = 0;
  }
  else
  {
    unint64_t v23 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v23(v10, v14, v4);
    v23(v8, (char *)v19, v4);
    sub_240829E50(&qword_268C90AB8, MEMORY[0x263F07490]);
    char v22 = sub_240954738();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v5 + 8);
    v24(v8, v4);
    v24(v10, v4);
  }
  sub_240849B7C((uint64_t)v17, (uint64_t (*)(void))sub_240849BDC);
  return v22 & 1;
}

uint64_t sub_240936D08(uint64_t a1)
{
  sub_24093DEAC(0, &qword_268C91EF8, (void (*)(uint64_t))sub_240849BDC, (void (*)(uint64_t))type metadata accessor for AccountNewRecordsData);
  uint64_t v3 = a1 + *(int *)(v2 + 48);

  return sub_2409369D4(a1, v3);
}

uint64_t sub_240936D7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_24093DEAC(0, &qword_268C91EF8, (void (*)(uint64_t))sub_240849BDC, (void (*)(uint64_t))type metadata accessor for AccountNewRecordsData);
  return sub_24093C078(a1 + *(int *)(v4 + 48), a2, type metadata accessor for AccountNewRecordsData);
}

uint64_t sub_240936DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = a3;
  sub_240849BDC();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5 - 8);
  sub_24093C674();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a2;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_2409356B8((void (*)(uint64_t *__return_ptr, char *))sub_24093C790, (uint64_t)v23, a1);
  swift_bridgeObjectRelease();
  uint64_t v22 = a2;
  unint64_t v14 = sub_240934EFC((void (*)(void))sub_24093C7AC, (uint64_t)v21, v13);
  swift_bridgeObjectRelease();
  sub_24093C078(a2, (uint64_t)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))sub_240849BDC);
  unint64_t v15 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v14;
  *(void *)(v16 + 24) = a1;
  sub_240849700((uint64_t)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, (uint64_t (*)(void))sub_240849BDC);
  *(void *)(v16 + ((v7 + v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v20;
  sub_24082A230(0, &qword_26AFCDE08, (uint64_t (*)(uint64_t))sub_24083FC00, MEMORY[0x263EFDE20]);
  sub_24093C708();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_240954408();
  swift_release();
  sub_240829E50(&qword_26AFCDE30, (void (*)(uint64_t))sub_24093C674);
  uint64_t v17 = sub_240954498();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v17;
}

uint64_t sub_240937104@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v144 = a3;
  sub_2408834C8();
  uint64_t v148 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v139 = (uint64_t)&v134 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v149 = (uint64_t)&v134 - v10;
  uint64_t v176 = sub_240951A28();
  uint64_t v164 = *(void *)(v176 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v176);
  uint64_t v13 = (char *)&v134 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  double v151 = (char *)&v134 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  id v138 = (char *)&v134 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  id v137 = (char *)&v134 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v160 = (char *)&v134 - v20;
  sub_24093C600();
  uint64_t v170 = v21;
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  id v153 = (char *)&v134 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v134 - v25;
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  uint64_t v29 = (uint64_t)&v134 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v161 = (char *)&v134 - v30;
  sub_240849BDC();
  uint64_t v32 = MEMORY[0x270FA5388](v31 - 8);
  uint64_t v141 = (uint64_t)&v134 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v140 = (uint64_t)&v134 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  unint64_t v38 = (unint64_t)&v134 - v37;
  uint64_t v39 = MEMORY[0x270FA5388](v36);
  uint64_t v159 = (uint64_t)&v134 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v43 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))((char *)&v134 - v42);
  MEMORY[0x270FA5388](v41);
  uint64_t v150 = (uint64_t)&v134 - v44;
  uint64_t v45 = a1 >> 62;
  unint64_t v143 = a1;
  if (a1 >> 62)
  {
LABEL_76:
    swift_bridgeObjectRetain();
    uint64_t result = sub_2409553D8();
    uint64_t v46 = result;
  }
  else
  {
    uint64_t v46 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  double v142 = v13;
  id v162 = v26;
  unint64_t v152 = v38;
  uint64_t v136 = (void *)a4;
  unint64_t v171 = (char *)v29;
  uint64_t v135 = v45;
  if (v46)
  {
    unint64_t v48 = v143;
    if (v46 < 1)
    {
      __break(1u);
      return result;
    }
    uint64_t v49 = (uint64_t)v43;
    if ((v143 & 0xC000000000000001) != 0)
    {
      uint64_t v50 = 0;
      uint64_t v51 = (void *)MEMORY[0x263F8EE78];
      do
      {
        MEMORY[0x2456015B0](v50, v48);
        uint64_t v52 = sub_240954EB8();
        uint64_t v43 = v53;
        swift_unknownObjectRelease();
        if (swift_isUniquelyReferenced_nonNull_native()) {
          uint64_t v54 = v51;
        }
        else {
          uint64_t v54 = sub_2408C296C(0, v51[2] + 1, 1, v51);
        }
        unint64_t v56 = v54[2];
        unint64_t v55 = v54[3];
        uint64_t v45 = v56 + 1;
        unint64_t v48 = v143;
        if (v56 >= v55 >> 1)
        {
          uint64_t v58 = sub_2408C296C((void *)(v55 > 1), v56 + 1, 1, v54);
          unint64_t v48 = v143;
          uint64_t v54 = v58;
        }
        ++v50;
        v54[2] = v45;
        uint64_t v57 = &v54[2 * v56];
        v57[4] = v52;
        v57[5] = v43;
        uint64_t v51 = v54;
      }
      while (v46 != v50);
      id v134 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v54;
    }
    else
    {
      uint64_t v59 = 0;
      uint64_t v43 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F8EE78];
      do
      {
        id v60 = *(id *)(v48 + 8 * v59 + 32);
        uint64_t v61 = sub_240954EB8();
        uint64_t v63 = v62;

        if (swift_isUniquelyReferenced_nonNull_native()) {
          uint64_t v64 = v43;
        }
        else {
          uint64_t v64 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))sub_2408C296C(0, *((void *)v43 + 2) + 1, 1, v43);
        }
        unint64_t v66 = *((void *)v64 + 2);
        unint64_t v65 = *((void *)v64 + 3);
        unint64_t v48 = v143;
        if (v66 >= v65 >> 1)
        {
          uint64_t v68 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))sub_2408C296C((void *)(v65 > 1), v66 + 1, 1, v64);
          unint64_t v48 = v143;
          uint64_t v64 = v68;
        }
        ++v59;
        *((void *)v64 + 2) = v66 + 1;
        id v67 = (void *)((char *)v64 + 16 * v66);
        v67[4] = v61;
        v67[5] = v63;
        uint64_t v43 = v64;
      }
      while (v46 != v59);
      id v134 = v64;
    }
    swift_bridgeObjectRelease();
    uint64_t v13 = (char *)a2;
    uint64_t v29 = (uint64_t)v171;
  }
  else
  {
    uint64_t v49 = (uint64_t)v43;
    swift_bridgeObjectRelease();
    id v134 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F8EE78];
    uint64_t v13 = (char *)a2;
  }
  uint64_t v158 = v49;
  a2 = v164 + 56;
  a4 = 1;
  char v163 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v164 + 56);
  v163(v150, 1, 1, v176);
  uint64_t v69 = *((void *)v13 + 8);
  double v146 = v13 + 64;
  uint64_t v70 = 1 << v13[32];
  uint64_t v71 = -1;
  if (v70 < 64) {
    uint64_t v71 = ~(-1 << v70);
  }
  unint64_t v38 = v71 & v69;
  int64_t v147 = (unint64_t)(v70 + 63) >> 6;
  uint64_t v169 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(a2 - 8);
  uint64_t v164 = a2;
  os_log_type_t v165 = (void (**)(char *, uint64_t, uint64_t))(a2 - 24);
  id v156 = (void (**)(uint64_t, char *, uint64_t))(a2 - 40);
  double v155 = (void (**)(uint64_t, uint64_t))(a2 - 48);
  swift_bridgeObjectRetain();
  int64_t v72 = 0;
  uint64_t v26 = (char *)v29;
  double v157 = v13;
  while (v38)
  {
    uint64_t v73 = v26;
    uint64_t v172 = (v38 - 1) & v38;
    int64_t v173 = v72;
    unint64_t v74 = __clz(__rbit64(v38)) | (v72 << 6);
LABEL_45:
    uint64_t v79 = *((void *)v13 + 6);
    uint64_t v80 = sub_240951A98();
    uint64_t v81 = *(void *)(v80 - 8);
    uint64_t v82 = v81;
    uint64_t v83 = v79 + *(void *)(v81 + 72) * v74;
    uint64_t v84 = *(void (**)(char *, uint64_t, uint64_t))(v81 + 16);
    uint64_t v166 = v81 + 16;
    uint64_t v85 = v161;
    v84(v161, v83, v80);
    uint64_t v86 = *((void *)v13 + 7);
    uint64_t v174 = (void *)type metadata accessor for AccountNewRecordsData(0);
    uint64_t v87 = v86 + *(void *)(*(v174 - 1) + 72) * v74;
    uint64_t v88 = v170;
    uint64_t v89 = (uint64_t)&v85[*(int *)(v170 + 48)];
    sub_24093C078(v87, v89, type metadata accessor for AccountNewRecordsData);
    uint64_t v90 = (uint64_t)&v73[*(int *)(v88 + 48)];
    uint64_t v175 = v82;
    uint64_t v91 = *(void (**)(char *, char *, uint64_t))(v82 + 32);
    a2 = v82 + 32;
    v91(v73, v85, v80);
    sub_240849700(v89, v90, type metadata accessor for AccountNewRecordsData);
    id v92 = v162;
    uint64_t v93 = (uint64_t)&v162[*(int *)(v88 + 48)];
    uint64_t v94 = v80;
    unint64_t v168 = (void (*)(char *, char *, uint64_t))v84;
    v84(v162, (uint64_t)v73, v80);
    id v95 = v174;
    uint64_t v167 = v90;
    sub_24093C078(v90, v93, type metadata accessor for AccountNewRecordsData);
    uint64_t v96 = v158;
    sub_24093C078(v93 + *((int *)v95 + 6), v158, (uint64_t (*)(void))sub_240849BDC);
    uint64_t v97 = v93;
    uint64_t v98 = v96;
    sub_240849B7C(v97, type metadata accessor for AccountNewRecordsData);
    uint64_t v43 = *v169;
    if ((*v169)(v96, 1, v176) == 1)
    {
      sub_240849B7C(v96, (uint64_t (*)(void))sub_240849BDC);
      uint64_t v99 = *(void (**)(char *, uint64_t))(v175 + 8);
      v99(v92, v80);
      uint64_t v26 = v171;
      uint64_t v45 = v94;
      goto LABEL_55;
    }
    id v100 = v160;
    uint64_t v101 = v98;
    uint64_t v102 = v176;
    double v145 = *v165;
    v145(v160, v101, v176);
    double v154 = *(void (**)(char *, uint64_t))(v175 + 8);
    v154(v92, v80);
    a2 = v159;
    (*v156)(v159, v100, v102);
    v163(a2, 0, 1, v102);
    uint64_t v103 = v102;
    uint64_t v104 = v149;
    uint64_t v29 = v149 + *(int *)(v148 + 48);
    sub_24093C078(a2, v149, (uint64_t (*)(void))sub_240849BDC);
    sub_24093C078(v144, v29, (uint64_t (*)(void))sub_240849BDC);
    LODWORD(v100) = v43(v104, 1, v103);
    unsigned int v105 = v43(v29, 1, v103);
    uint64_t v45 = v80;
    if (v100 == 1)
    {
      uint64_t v106 = (uint64_t)v171;
      id v107 = (void (**)(char *, uint64_t))v155;
      if (v105 == 1) {
        goto LABEL_52;
      }
      a4 = (uint64_t)sub_240849BDC;
      sub_240849B7C(v29, (uint64_t (*)(void))sub_240849BDC);
      sub_240849B7C(v159, (uint64_t (*)(void))sub_240849BDC);
      (*v107)(v160, v176);
      uint64_t v26 = (char *)v106;
LABEL_54:
      sub_240849B7C((uint64_t)v26, (uint64_t (*)(void))sub_24093C600);
      uint64_t v13 = v157;
LABEL_28:
      unint64_t v38 = v172;
      int64_t v72 = v173;
    }
    else
    {
      if (v105 == 1)
      {
        id v107 = (void (**)(char *, uint64_t))v155;
        (*v155)(v149, v176);
        uint64_t v106 = (uint64_t)v171;
LABEL_52:
        sub_240849B7C(v159, (uint64_t (*)(void))sub_240849BDC);
        (*v107)(v160, v176);
        uint64_t v26 = (char *)v106;
        uint64_t v99 = v154;
        goto LABEL_55;
      }
      a4 = (uint64_t)v137;
      uint64_t v108 = v176;
      id v109 = v145;
      v145(v137, v149, v176);
      id v110 = v138;
      v109(v138, v29, v108);
      sub_240829E50(&qword_268C90AB8, MEMORY[0x263F07490]);
      LOBYTE(v109) = sub_240954738();
      uint64_t v29 = (uint64_t)*v155;
      (*v155)((uint64_t)v110, v108);
      ((void (*)(uint64_t, uint64_t))v29)(a4, v108);
      sub_240849B7C(v159, (uint64_t (*)(void))sub_240849BDC);
      ((void (*)(char *, uint64_t))v29)(v160, v108);
      uint64_t v26 = v171;
      uint64_t v99 = v154;
      if (v109) {
        goto LABEL_54;
      }
LABEL_55:
      uint64_t v29 = (uint64_t)v153;
      uint64_t v111 = (uint64_t)&v153[*(int *)(v170 + 48)];
      v168(v153, v26, v45);
      sub_24093C078(v167, v111, type metadata accessor for AccountNewRecordsData);
      uint64_t v112 = v152;
      sub_24093C078(v111 + *((int *)v95 + 6), v152, (uint64_t (*)(void))sub_240849BDC);
      sub_240849B7C(v111, type metadata accessor for AccountNewRecordsData);
      a4 = (uint64_t)v26;
      if (v43(v112, 1, v176) == 1)
      {
        sub_240849B7C((uint64_t)v26, (uint64_t (*)(void))sub_24093C600);
        sub_240849B7C(v112, (uint64_t (*)(void))sub_240849BDC);
        v99((char *)v29, v45);
        uint64_t v13 = v157;
        goto LABEL_28;
      }
      id v113 = v151;
      uint64_t v114 = (void (*)(uint64_t, uint64_t))v99;
      uint64_t v115 = v176;
      uint64_t v174 = *v165;
      ((void (*)(char *, uint64_t, uint64_t))v174)(v151, v112, v176);
      v114(v29, v45);
      uint64_t v116 = v150;
      uint64_t v117 = v140;
      sub_24093C078(v150, v140, (uint64_t (*)(void))sub_240849BDC);
      LODWORD(v114) = v43(v117, 1, v115);
      sub_240849B7C(v117, (uint64_t (*)(void))sub_240849BDC);
      uint64_t v118 = *v156;
      a2 = (uint64_t)v142;
      (*v156)((uint64_t)v142, v113, v115);
      if (v114 == 1)
      {
        (*v155)(a2, v176);
        sub_240849B7C((uint64_t)v171, (uint64_t (*)(void))sub_24093C600);
        uint64_t v13 = v157;
        unint64_t v38 = v172;
        int64_t v72 = v173;
        goto LABEL_68;
      }
      uint64_t v45 = v141;
      uint64_t v119 = v176;
      v118(v141, (char *)a2, v176);
      v163(v45, 0, 1, v119);
      uint64_t v120 = v139;
      uint64_t v121 = v139 + *(int *)(v148 + 48);
      sub_24093C078(v116, v139, (uint64_t (*)(void))sub_240849BDC);
      sub_24093C078(v45, v121, (uint64_t (*)(void))sub_240849BDC);
      unsigned int v122 = v43(v120, 1, v119);
      unsigned int v123 = v43(v121, 1, v119);
      if (v122 == 1)
      {
        uint64_t v13 = v157;
        if (v123 == 1)
        {
          uint64_t v29 = 0;
        }
        else
        {
          sub_240849B7C(v121, (uint64_t (*)(void))sub_240849BDC);
          uint64_t v29 = 1;
        }
        uint64_t v124 = (uint64_t *)v155;
      }
      else
      {
        if (v123 == 1)
        {
          uint64_t v124 = (uint64_t *)v155;
          (*v155)(v139, v176);
          uint64_t v29 = 0;
        }
        else
        {
          uint64_t v125 = v137;
          uint64_t v126 = v176;
          uint64_t v127 = (void (*)(char *, uint64_t, uint64_t))v174;
          ((void (*)(char *, uint64_t, uint64_t))v174)(v137, v139, v176);
          uint64_t v128 = v138;
          v127(v138, v121, v126);
          sub_240829E50(&qword_268C90AB8, MEMORY[0x263F07490]);
          uint64_t v29 = sub_240954738();
          uint64_t v124 = (uint64_t *)v155;
          uint64_t v129 = *v155;
          (*v155)((uint64_t)v128, v126);
          v129((uint64_t)v125, v126);
        }
        uint64_t v13 = v157;
      }
      unint64_t v38 = v172;
      int64_t v72 = v173;
      sub_240849B7C(v141, (uint64_t (*)(void))sub_240849BDC);
      a4 = *v124;
      ((void (*)(uint64_t, uint64_t))*v124)(a2, v176);
      sub_240849B7C((uint64_t)v171, (uint64_t (*)(void))sub_24093C600);
      if (v29)
      {
LABEL_68:
        a4 = v150;
        sub_240849B7C(v150, (uint64_t (*)(void))sub_240849BDC);
        uint64_t v29 = v176;
        ((void (*)(uint64_t, char *, uint64_t))v174)(a4, v151, v176);
        v163(a4, 0, 1, v29);
        uint64_t v26 = v171;
      }
      else
      {
        ((void (*)(char *, uint64_t))a4)(v151, v176);
        uint64_t v26 = v171;
      }
    }
  }
  int64_t v75 = v72 + 1;
  if (__OFADD__(v72, 1))
  {
    __break(1u);
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  if (v75 >= v147) {
    goto LABEL_70;
  }
  unint64_t v76 = *(void *)&v146[8 * v75];
  int64_t v77 = v72 + 1;
  if (v76) {
    goto LABEL_44;
  }
  int64_t v77 = v72 + 2;
  if (v72 + 2 >= v147) {
    goto LABEL_70;
  }
  unint64_t v76 = *(void *)&v146[8 * v77];
  if (v76) {
    goto LABEL_44;
  }
  int64_t v77 = v72 + 3;
  if (v72 + 3 >= v147) {
    goto LABEL_70;
  }
  unint64_t v76 = *(void *)&v146[8 * v77];
  if (v76)
  {
LABEL_44:
    uint64_t v73 = v26;
    uint64_t v172 = (v76 - 1) & v76;
    int64_t v173 = v77;
    unint64_t v74 = __clz(__rbit64(v76)) + (v77 << 6);
    goto LABEL_45;
  }
  uint64_t v78 = v72 + 4;
  if (v72 + 4 < v147)
  {
    unint64_t v76 = *(void *)&v146[8 * v78];
    if (!v76)
    {
      while (1)
      {
        int64_t v77 = v78 + 1;
        if (__OFADD__(v78, 1)) {
          goto LABEL_75;
        }
        if (v77 >= v147) {
          goto LABEL_70;
        }
        unint64_t v76 = *(void *)&v146[8 * v77];
        ++v78;
        if (v76) {
          goto LABEL_44;
        }
      }
    }
    int64_t v77 = v72 + 4;
    goto LABEL_44;
  }
LABEL_70:
  swift_release();
  if (v135)
  {
    swift_bridgeObjectRetain();
    uint64_t v130 = sub_2409553D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v130 = *(void *)((v143 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v131 = v150;
  id v132 = v136;
  *uint64_t v136 = v130;
  uint64_t v133 = type metadata accessor for AllAccountsLabRecordsData(0);
  uint64_t result = sub_240849700(v131, (uint64_t)v132 + *(int *)(v133 + 20), (uint64_t (*)(void))sub_240849BDC);
  *(void *)((char *)v132 + *(int *)(v133 + 24)) = v134;
  return result;
}

uint64_t sub_240938438@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  sub_24083FC00();
  uint64_t v7 = (uint64_t)a1 + *(int *)(v6 + 64);

  return sub_240937104(v4, v5, v7, a2);
}

uint64_t sub_240938494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  sub_240849BDC();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10 - 8);
  sub_24093C078(a3, (uint64_t)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))sub_240849BDC);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  sub_240849700((uint64_t)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13, (uint64_t (*)(void))sub_240849BDC);
  *(void *)(v14 + ((v12 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = a4;
  sub_24082A230(0, &qword_26AFCDE08, (uint64_t (*)(uint64_t))sub_24083FC00, MEMORY[0x263EFDE20]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t result = sub_2409543E8();
  *a5 = result;
  return result;
}

void sub_24093864C(void (*a1)(void *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v33 = a1;
  sub_24093CA68(0);
  MEMORY[0x270FA5388](v11);
  unint64_t v13 = (uint64_t *)((char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_240849BDC();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v14 - 8);
  if (*(void *)(a3 + 16))
  {
    uint64_t v17 = self;
    uint64_t v18 = swift_bridgeObjectRetain();
    sub_24093D988(v18);
    swift_bridgeObjectRelease();
    sub_240951A98();
    sub_240829E50(&qword_26AFCC5F0, MEMORY[0x263F07508]);
    uint64_t v19 = (void *)sub_240954B48();
    swift_bridgeObjectRelease();
    id v20 = objc_msgSend(v17, sel_predicateForMedicalUserDomainConceptsMappingToSampleWithUUIDs_, v19);

    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = MEMORY[0x263F8EE78];
    sub_24093C078(a5, (uint64_t)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))sub_240849BDC);
    unint64_t v22 = (*(unsigned __int8 *)(v15 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v23 = (void *)swift_allocObject();
    void v23[2] = v33;
    v23[3] = a2;
    v23[4] = a6;
    v23[5] = v21;
    v23[6] = a4;
    sub_240849700((uint64_t)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v23 + v22, (uint64_t (*)(void))sub_240849BDC);
    id v24 = objc_allocWithZone(MEMORY[0x263F0A858]);
    aBlock[4] = sub_24093DDA0;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2408FEC40;
    aBlock[3] = &unk_26F4F3000;
    uint64_t v25 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    id v26 = objc_msgSend(v24, sel_initWithPredicate_anchor_limit_sortDescriptors_resultsHandler_, v20, 0, 0, 0, v25);
    _Block_release(v25);
    swift_release();
    id v27 = v26;
    uint64_t v28 = (void *)sub_240954788();
    objc_msgSend(v27, sel_setDebugIdentifier_, v28);

    id v29 = objc_msgSend(*(id *)(a6 + 16), sel_healthStore);
    objc_msgSend(v29, sel_executeQuery_, v27);

    swift_release();
  }
  else
  {
    sub_24083FC00();
    uint64_t v31 = (uint64_t)v13 + *(int *)(v30 + 64);
    *unint64_t v13 = MEMORY[0x263F8EE78];
    v13[1] = a4;
    sub_24093C078(a5, v31, (uint64_t (*)(void))sub_240849BDC);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    v33(v13);
    sub_240849B7C((uint64_t)v13, (uint64_t (*)(void))sub_24093CA68);
  }
}

void sub_240938A80(uint64_t a1, void *a2, uint64_t a3, char a4, void *a5, void (*a6)(void *), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  sub_24093CA68(0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (uint64_t *)((char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a5)
  {
    *uint64_t v17 = a5;
    swift_storeEnumTagMultiPayload();
    id v18 = a5;
LABEL_12:
    a6(v17);
    sub_240849B7C((uint64_t)v17, (uint64_t (*)(void))sub_24093CA68);
    return;
  }
  uint64_t v19 = (void *)(a9 + 16);
  if (a2)
  {
    self;
    if (swift_dynamicCastObjCClass())
    {
      id v20 = a2;
      if (sub_240953F88())
      {
        swift_beginAccess();
        id v20 = v20;
        MEMORY[0x245600C60]();
        if (*(void *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        {
          uint64_t v23 = *(void *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
          sub_240954A08();
        }
        sub_240954A28();
        sub_2409549B8();
        swift_endAccess();
      }
    }
  }
  if (a4)
  {
    sub_24083FC00();
    uint64_t v22 = (uint64_t)v17 + *(int *)(v21 + 64);
    swift_beginAccess();
    *uint64_t v17 = *v19;
    v17[1] = a10;
    sub_24093C078(a11, v22, (uint64_t (*)(void))sub_240849BDC);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_12;
  }
}

uint64_t sub_240938CAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v32 = a3;
  sub_240849BDC();
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v29 = (uint64_t)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v27 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v27 - v11;
  uint64_t v31 = type metadata accessor for AccountNewRecordsData(0);
  uint64_t v13 = MEMORY[0x270FA5388](v31);
  uint64_t v28 = (uint64_t)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v27 - v15;
  uint64_t v17 = sub_240951A28();
  id v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  int v19 = v18(a2, 1, v17);
  uint64_t v30 = a1;
  sub_24093C078(a1, (uint64_t)v16, type metadata accessor for AccountNewRecordsData);
  sub_24093C078(a2, (uint64_t)v12, (uint64_t (*)(void))sub_240849BDC);
  if (v19 == 1)
  {
    sub_240849B7C((uint64_t)v12, (uint64_t (*)(void))sub_240849BDC);
    sub_240849B7C((uint64_t)v16, type metadata accessor for AccountNewRecordsData);
    uint64_t v20 = v31;
LABEL_6:
    void *v32 = *(void *)(v30 + *(int *)(v20 + 28));
    return swift_bridgeObjectRetain();
  }
  uint64_t v21 = v31;
  sub_24093C078((uint64_t)&v16[*(int *)(v31 + 24)], (uint64_t)v10, (uint64_t (*)(void))sub_240849BDC);
  int v22 = v18((uint64_t)v10, 1, v17);
  sub_240849B7C((uint64_t)v10, (uint64_t (*)(void))sub_240849BDC);
  uint64_t v23 = v28;
  sub_24093C078((uint64_t)v16, v28, type metadata accessor for AccountNewRecordsData);
  uint64_t v24 = v29;
  sub_24093C078((uint64_t)v12, v29, (uint64_t (*)(void))sub_240849BDC);
  if (v22 == 1)
  {
    sub_240849B7C(v24, (uint64_t (*)(void))sub_240849BDC);
    sub_240849B7C(v23, type metadata accessor for AccountNewRecordsData);
    sub_240849B7C((uint64_t)v12, (uint64_t (*)(void))sub_240849BDC);
    uint64_t result = sub_240849B7C((uint64_t)v16, type metadata accessor for AccountNewRecordsData);
  }
  else
  {
    uint64_t v20 = v21;
    char v26 = sub_240935404(v23 + *(int *)(v21 + 24), v24);
    sub_240849B7C(v24, (uint64_t (*)(void))sub_240849BDC);
    sub_240849B7C(v23, type metadata accessor for AccountNewRecordsData);
    sub_240849B7C((uint64_t)v12, (uint64_t (*)(void))sub_240849BDC);
    uint64_t result = sub_240849B7C((uint64_t)v16, type metadata accessor for AccountNewRecordsData);
    if (v26) {
      goto LABEL_6;
    }
  }
  void *v32 = MEMORY[0x263F8EE78];
  return result;
}

uint64_t sub_24093906C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_240849BDC();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240951A28();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24093C078(a2, (uint64_t)v8, (uint64_t (*)(void))sub_240849BDC);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_240849B7C((uint64_t)v8, (uint64_t (*)(void))sub_240849BDC);
    uint64_t v13 = a1 + *(int *)(type metadata accessor for LabNameWithDate(0) + 24);
    uint64_t v14 = sub_240951A98();
    uint64_t v15 = *(void *)(v14 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(a3, v13, v14);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(a3, 0, 1, v14);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  uint64_t v16 = type metadata accessor for LabNameWithDate(0);
  char v17 = sub_2409519B8();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v17)
  {
    uint64_t v18 = a1 + *(int *)(v16 + 24);
    uint64_t v14 = sub_240951A98();
    uint64_t v15 = *(void *)(v14 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(a3, v18, v14);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(a3, 0, 1, v14);
  }
  uint64_t v20 = sub_240951A98();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a3, 1, 1, v20);
}

uint64_t sub_240939378(void *a1)
{
  uint64_t v2 = sub_240951A98();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24093A088();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v28 = v6;
  uint64_t v29 = v7;
  MEMORY[0x270FA5388](v6);
  char v26 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24093A3F8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v30 = v9;
  uint64_t v31 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v27 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240952658();
  sub_24083EDCC(0, &qword_268C91EE0);
  id v12 = objc_msgSend(a1, sel_identifier);
  sub_240951A78();

  uint64_t v13 = (void *)MEMORY[0x245601230](v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v14 = sub_240952FC8();
  swift_bridgeObjectRelease();

  uint64_t v34 = v14;
  uint64_t v25 = a1;
  uint64_t v33 = sub_240952EB8();
  uint64_t v32 = sub_240952EA8();
  sub_24093A1F4(0, (unint64_t *)&qword_26AFCDC68, &qword_26AFCDE48, (uint64_t (*)(uint64_t))sub_2408EB3A0, MEMORY[0x263F8D8F0]);
  sub_24082A1CC(0, (unint64_t *)&qword_26AFCDC18, (void (*)(uint64_t))sub_240849BDC);
  sub_24093A1F4(0, &qword_268C91EB0, &qword_268C91EB8, (uint64_t (*)(uint64_t))sub_24093A260, MEMORY[0x263F8D488]);
  sub_24093A2D8();
  sub_240841E90();
  sub_24093A368();
  uint64_t v15 = v26;
  sub_2409544D8();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v16 = swift_allocObject();
  char v17 = v25;
  *(void *)(v16 + 16) = v25;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_24093A510;
  *(void *)(v18 + 24) = v16;
  sub_24093A4A4(0);
  sub_240829E50(&qword_268C91ED8, (void (*)(uint64_t))sub_24093A088);
  id v19 = v17;
  uint64_t v21 = v27;
  uint64_t v20 = v28;
  sub_2409544F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v20);
  sub_240829E50(&qword_268C91EE8, (void (*)(uint64_t))sub_24093A3F8);
  uint64_t v22 = v30;
  uint64_t v23 = sub_240954498();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v21, v22);
  return v23;
}

uint64_t sub_240939850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  sub_24093A260();
  uint64_t v83 = v10;
  int64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v82 = (void **)((char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v81 = (void **)((char *)&v67 - v15);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v80 = (uint64_t *)((char *)&v67 - v17);
  MEMORY[0x270FA5388](v16);
  uint64_t v97 = (uint64_t *)((char *)&v67 - v18);
  uint64_t v79 = type metadata accessor for LabNameWithDate(0);
  uint64_t v78 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v20 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240849BDC();
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  uint64_t v72 = (uint64_t)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v67 - v24;
  uint64_t v26 = sub_240951A28();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v71 = (char *)&v67 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    goto LABEL_4;
  }
  sub_24093C078(a2, (uint64_t)v25, (uint64_t (*)(void))sub_240849BDC);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
    sub_240849B7C((uint64_t)v25, (uint64_t (*)(void))sub_240849BDC);
LABEL_4:
    uint64_t v29 = type metadata accessor for AccountNewRecordsData(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(a5, 1, 1, v29);
  }
  int64_t v94 = v11;
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
  uint64_t v32 = v71;
  uint64_t v77 = v27 + 32;
  unint64_t v76 = v31;
  v31(v71, v25, v26);
  uint64_t v33 = v72;
  id v95 = *(void (**)(void))(v27 + 16);
  uint64_t v96 = v27 + 16;
  ((void (*)(uint64_t, char *, uint64_t))v95)(v72, v32, v26);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v33, 0, 1, v26);
  int64_t v34 = *(void *)(a3 + 16);
  uint64_t v70 = v27;
  if (v34)
  {
    id v67 = a4;
    uint64_t v69 = a5;
    uint64_t v99 = MEMORY[0x263F8EE78];
    uint64_t v68 = a1;
    swift_bridgeObjectRetain();
    sub_240875EE8(0, v34, 0);
    uint64_t v35 = a3 + ((*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80));
    uint64_t v74 = *(void *)(v94 + 72);
    uint64_t v73 = (void (**)(char *, uint64_t))(v27 + 8);
    int64_t v75 = v20;
    uint64_t v98 = v26;
    do
    {
      uint64_t v93 = v35;
      int64_t v94 = v34;
      uint64_t v36 = v97;
      sub_24093C078(v35, (uint64_t)v97, (uint64_t (*)(void))sub_24093A260);
      uint64_t v37 = v83;
      uint64_t v38 = *(int *)(v83 + 48);
      uint64_t v39 = v80;
      uint64_t v40 = *(int *)(v83 + 64);
      uint64_t v41 = (char *)v80 + v40;
      uint64_t v91 = (char *)v80 + v40;
      id v92 = (char *)v80 + v38;
      uint64_t v42 = (char *)v36 + v40;
      uint64_t v44 = *v36;
      uint64_t v43 = v36[1];
      *uint64_t v80 = *v36;
      v39[1] = v43;
      uint64_t v45 = v44;
      uint64_t v84 = v43;
      uint64_t v85 = v44;
      uint64_t v46 = v43;
      v95();
      uint64_t v47 = sub_240951A98();
      uint64_t v48 = *(void *)(v47 - 8);
      uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
      uint64_t v87 = v42;
      v49(v41, v42, v47);
      uint64_t v86 = v49;
      uint64_t v50 = v81;
      uint64_t v88 = (char *)v81 + *(int *)(v37 + 48);
      uint64_t v90 = (char *)v81 + *(int *)(v37 + 64);
      uint64_t v51 = v90;
      *uint64_t v81 = v45;
      v50[1] = v46;
      uint64_t v52 = v95;
      v95();
      v49(v51, v42, v47);
      uint64_t v53 = v82;
      uint64_t v89 = (char *)v82 + *(int *)(v37 + 48);
      uint64_t v54 = (char *)v82 + *(int *)(v37 + 64);
      uint64_t v55 = v84;
      uint64_t v56 = v85;
      void *v82 = v85;
      v53[1] = v55;
      uint64_t v57 = v75;
      v52();
      v86(v54, v87, v47);
      *(void *)uint64_t v57 = v56;
      *((void *)v57 + 1) = v55;
      uint64_t v58 = v79;
      v76(&v57[*(int *)(v79 + 20)], v88, v98);
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(&v57[*(int *)(v58 + 24)], v54, v47);
      uint64_t v59 = *v73;
      swift_bridgeObjectRetain();
      v59(v89, v98);
      id v60 = *(void (**)(char *, uint64_t))(v48 + 8);
      v60(v90, v47);
      uint64_t v61 = v47;
      uint64_t v26 = v98;
      v60(v91, v61);
      v59(v92, v26);
      sub_240849B7C((uint64_t)v97, (uint64_t (*)(void))sub_24093A260);
      uint64_t v62 = v99;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_240875EE8(0, *(void *)(v62 + 16) + 1, 1);
        uint64_t v62 = v99;
      }
      unint64_t v64 = *(void *)(v62 + 16);
      unint64_t v63 = *(void *)(v62 + 24);
      int64_t v65 = v94;
      if (v64 >= v63 >> 1)
      {
        sub_240875EE8(v63 > 1, v64 + 1, 1);
        uint64_t v62 = v99;
      }
      *(void *)(v62 + 16) = v64 + 1;
      sub_240849700((uint64_t)v57, v62+ ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80))+ *(void *)(v78 + 72) * v64, type metadata accessor for LabNameWithDate);
      uint64_t v35 = v93 + v74;
      int64_t v34 = v65 - 1;
    }
    while (v34);
    a5 = v69;
    a1 = v68;
    a4 = v67;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v62 = MEMORY[0x263F8EE78];
  }
  id v66 = a4;
  sub_2408E6584(v66, a1, v72, v62, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v71, v26);
}

uint64_t sub_24093A040()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

void sub_24093A088()
{
  if (!qword_268C91EA8)
  {
    sub_24093A1F4(255, (unint64_t *)&qword_26AFCDC68, &qword_26AFCDE48, (uint64_t (*)(uint64_t))sub_2408EB3A0, MEMORY[0x263F8D8F0]);
    sub_24082A1CC(255, (unint64_t *)&qword_26AFCDC18, (void (*)(uint64_t))sub_240849BDC);
    sub_24093A1F4(255, &qword_268C91EB0, &qword_268C91EB8, (uint64_t (*)(uint64_t))sub_24093A260, MEMORY[0x263F8D488]);
    sub_24093A2D8();
    sub_240841E90();
    sub_24093A368();
    unint64_t v0 = sub_240954128();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C91EA8);
    }
  }
}

uint64_t sub_24093A1C0()
{
  return sub_240829E50(&qword_26AFD03E0, MEMORY[0x263F45F38]);
}

void sub_24093A1F4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_24093E120(255, a3, a4, a5);
    unint64_t v6 = sub_240954308();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_24093A260()
{
  if (!qword_268C91EC0)
  {
    sub_240951A28();
    sub_240951A98();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268C91EC0);
    }
  }
}

unint64_t sub_24093A2D8()
{
  unint64_t result = qword_26AFCDC60;
  if (!qword_26AFCDC60)
  {
    sub_24093A1F4(255, (unint64_t *)&qword_26AFCDC68, &qword_26AFCDE48, (uint64_t (*)(uint64_t))sub_2408EB3A0, MEMORY[0x263F8D8F0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCDC60);
  }
  return result;
}

unint64_t sub_24093A368()
{
  unint64_t result = qword_268C91EC8;
  if (!qword_268C91EC8)
  {
    sub_24093A1F4(255, &qword_268C91EB0, &qword_268C91EB8, (uint64_t (*)(uint64_t))sub_24093A260, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91EC8);
  }
  return result;
}

void sub_24093A3F8()
{
  if (!qword_268C91ED0)
  {
    sub_24093A088();
    sub_24093A4A4(255);
    sub_240829E50(&qword_268C91ED8, (void (*)(uint64_t))sub_24093A088);
    unint64_t v0 = sub_2409541C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C91ED0);
    }
  }
}

void sub_24093A4A4(uint64_t a1)
{
}

uint64_t sub_24093A4D8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24093A510@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_240939850(a1, a2, a3, *(void **)(v4 + 16), a4);
}

uint64_t sub_24093A518(char *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, char *, void))(v1 + 16);
  uint64_t v4 = *(void *)a1;
  sub_24093A57C();
  return v3(v4, &a1[*(int *)(v5 + 48)], *(void *)&a1[*(int *)(v5 + 64)]);
}

void sub_24093A57C()
{
  if (!qword_268C91EF0)
  {
    sub_24093E120(255, &qword_26AFCDE48, (uint64_t (*)(uint64_t))sub_2408EB3A0, MEMORY[0x263F8D8F0]);
    sub_240849BDC();
    sub_24093E120(255, &qword_268C91EB8, (uint64_t (*)(uint64_t))sub_24093A260, MEMORY[0x263F8D488]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268C91EF0);
    }
  }
}

uint64_t sub_24093A664(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_240857CFC();
  uint64_t v6 = sub_240955408();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    uint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      id v34 = v32;
    }
    uint64_t result = sub_240954FB8();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  uint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_24093A934(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_240951A98();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_24093E184();
  int v46 = a2;
  uint64_t v10 = sub_240955408();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  uint64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    int64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    sub_240829E50(&qword_26AFCC5F0, MEMORY[0x263F07508]);
    uint64_t result = sub_2409546F8();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  int64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_24093AD54(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v49 = sub_2409521B8();
  uint64_t v5 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  sub_24093E0B8();
  int v47 = a2;
  uint64_t v8 = sub_240955408();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_41;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  uint64_t v44 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  uint64_t v42 = v2;
  int64_t v43 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v45 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v46 = v5;
  uint64_t v14 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v43) {
      break;
    }
    unint64_t v23 = v44;
    unint64_t v24 = v44[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v24 = v44[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v42;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v44[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v43) {
              goto LABEL_34;
            }
            unint64_t v24 = v44[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    uint64_t v26 = *(void *)(v7 + 56);
    uint64_t v27 = v7;
    uint64_t v28 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v21);
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    uint64_t v31 = *(void *)(v46 + 72);
    uint64_t v32 = v26 + v31 * v21;
    if (v47)
    {
      (*v14)(v48, v32, v49);
    }
    else
    {
      (*v45)(v48, v32, v49);
      swift_bridgeObjectRetain();
    }
    sub_2409556F8();
    sub_240954868();
    uint64_t result = sub_240955748();
    uint64_t v33 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v15 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v18 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v9 + 48) + 16 * v18);
    *uint64_t v19 = v29;
    v19[1] = v30;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v14)(*(void *)(v9 + 56) + v31 * v18, v48, v49);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v27;
  }
  swift_release();
  uint64_t v3 = v42;
  unint64_t v23 = v44;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v7 + 32);
  if (v40 >= 64) {
    bzero(v23, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v40;
  }
  *(void *)(v7 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v9;
  return result;
}

uint64_t sub_24093B138(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for AccountNewRecordsData(0);
  uint64_t v49 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240951A98();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v51 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_240932ED8();
  int v50 = a2;
  uint64_t v11 = v10;
  uint64_t v12 = sub_240955408();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  uint64_t v46 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  uint64_t v44 = v2;
  int64_t v45 = (unint64_t)(v14 + 63) >> 6;
  int v47 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v52 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v53 = v7;
  uint64_t v18 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  uint64_t v48 = v11;
  unint64_t v21 = v51;
  while (1)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v45) {
      break;
    }
    uint64_t v26 = v46;
    unint64_t v27 = v46[v25];
    ++v20;
    if (!v27)
    {
      int64_t v20 = v25 + 1;
      if (v25 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v27 = v46[v20];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v45)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v44;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v46[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v20 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v45) {
              goto LABEL_34;
            }
            unint64_t v27 = v46[v20];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v20 << 6);
    unint64_t v21 = v51;
LABEL_22:
    uint64_t v29 = v8;
    uint64_t v30 = *(void *)(v8 + 72);
    unint64_t v31 = *(void *)(v11 + 48) + v30 * v24;
    if (v50)
    {
      (*v52)(v21, v31, v53);
      uint64_t v32 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_240849700(v32 + v33 * v24, v54, type metadata accessor for AccountNewRecordsData);
    }
    else
    {
      (*v47)(v21, v31, v53);
      uint64_t v34 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_24093C078(v34 + v33 * v24, v54, type metadata accessor for AccountNewRecordsData);
    }
    sub_240829E50(&qword_26AFCC5F0, MEMORY[0x263F07508]);
    uint64_t result = sub_2409546F8();
    uint64_t v35 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
      unint64_t v21 = v51;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      unint64_t v21 = v51;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v18 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v22 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v52)((char *)(*(void *)(v13 + 48) + v30 * v22), (unint64_t)v21, v53);
    uint64_t result = sub_240849700(v54, *(void *)(v13 + 56) + v33 * v22, type metadata accessor for AccountNewRecordsData);
    ++*(void *)(v13 + 16);
    uint64_t v11 = v48;
    uint64_t v8 = v29;
  }
  swift_release();
  uint64_t v3 = v44;
  uint64_t v26 = v46;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v42 = 1 << *(unsigned char *)(v11 + 32);
  if (v42 >= 64) {
    bzero(v26, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v26 = -1 << v42;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

id sub_24093B64C()
{
  uint64_t v1 = v0;
  sub_240857CFC();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2409553F8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_24093B7F0()
{
  uint64_t v1 = sub_240951A98();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24093E184();
  unint64_t v24 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_2409553F8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v24 = v7;
    return result;
  }
  id result = (id)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v25 = v5 + 64;
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  uint64_t v28 = v2 + 16;
  int64_t v26 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v27 = v2 + 32;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      int64_t v11 = v20 + 1;
      if (v20 + 1 >= v26) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v11);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    unint64_t v17 = *(void *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v17, v1);
    uint64_t v18 = 8 * v16;
    id v19 = *(void **)(*(void *)(v5 + 56) + v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v17, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v18) = v19;
    id result = v19;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v26) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v11 >= v26) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v11);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24093BA80()
{
  uint64_t v36 = sub_2409521B8();
  uint64_t v1 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24093E0B8();
  unint64_t v31 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = sub_2409553F8();
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v37 = v5;
  if (!v6)
  {
    id result = (void *)swift_release();
    uint64_t v29 = v37;
    uint64_t v28 = v31;
LABEL_28:
    *uint64_t v28 = v29;
    return result;
  }
  uint64_t v7 = v5;
  id result = (void *)(v5 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    id result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    uint64_t v7 = v37;
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v4 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v4 + 64);
  uint64_t v32 = v4 + 64;
  int64_t v33 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v34 = v1 + 32;
  uint64_t v35 = v1 + 16;
  uint64_t v15 = v36;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v33) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      int64_t v11 = v25 + 1;
      if (v25 + 1 >= v33) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v32 + 8 * v11);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v26 - 1) & v26;
    unint64_t v17 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_12:
    uint64_t v18 = 16 * v17;
    id v19 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v17);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    unint64_t v22 = *(void *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(void *)(v4 + 56) + v22, v15);
    uint64_t v23 = v37;
    unint64_t v24 = (void *)(*(void *)(v37 + 48) + v18);
    void *v24 = v20;
    v24[1] = v21;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v23 + 56) + v22, v3, v15);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v28 = v31;
    uint64_t v29 = v37;
    goto LABEL_28;
  }
  unint64_t v26 = *(void *)(v32 + 8 * v27);
  if (v26)
  {
    int64_t v11 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v11 >= v33) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v11);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_24093BD3C()
{
  uint64_t v1 = type metadata accessor for AccountNewRecordsData(0);
  uint64_t v29 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_240951A98();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240932ED8();
  unint64_t v24 = v0;
  uint64_t v8 = *v0;
  uint64_t v9 = sub_2409553F8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t *v24 = v10;
    return result;
  }
  id result = (void *)(v9 + 64);
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12) {
    id result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  }
  int64_t v13 = 0;
  *(void *)(v10 + 16) = *(void *)(v8 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v8 + 64);
  uint64_t v25 = v8 + 64;
  int64_t v26 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v27 = v5 + 32;
  uint64_t v28 = v5 + 16;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v26) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v25 + 8 * v13);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v18 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v5 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(void *)(v8 + 48) + v19, v4);
    unint64_t v20 = *(void *)(v29 + 72) * v18;
    sub_24093C078(*(void *)(v8 + 56) + v20, (uint64_t)v3, type metadata accessor for AccountNewRecordsData);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(void *)(v10 + 48) + v19, v7, v4);
    id result = (void *)sub_240849700((uint64_t)v3, *(void *)(v10 + 56) + v20, type metadata accessor for AccountNewRecordsData);
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v26) {
    goto LABEL_23;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_24093C078(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_24093C0E0()
{
  unint64_t result = qword_26AFCF530;
  if (!qword_26AFCF530)
  {
    sub_24093E120(255, &qword_26AFCF538, type metadata accessor for AccountNewRecordsData, MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCF530);
  }
  return result;
}

void sub_24093C168()
{
  if (!qword_26AFCF548)
  {
    sub_240951A98();
    type metadata accessor for AccountNewRecordsData(255);
    sub_240829E50(&qword_26AFCC5F0, MEMORY[0x263F07508]);
    unint64_t v0 = sub_2409546D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCF548);
    }
  }
}

void sub_24093C214(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_24083EDCC(255, a3);
    unint64_t v4 = sub_240954A38();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_24093C26C()
{
  unint64_t result = qword_26AFCDE98;
  if (!qword_26AFCDE98)
  {
    sub_24093C214(255, (unint64_t *)&qword_26AFCC610, (unint64_t *)&qword_26AFD05A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCDE98);
  }
  return result;
}

unint64_t sub_24093C2DC()
{
  unint64_t result = qword_26AFCD9F0;
  if (!qword_26AFCD9F0)
  {
    sub_24093C364(255, &qword_26AFCD9F8, sub_240841E3C, (void (*)(void))sub_240841E5C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCD9F0);
  }
  return result;
}

void sub_24093C364(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_24083F3C0();
    a4();
    unint64_t v6 = sub_2409541A8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_24093C3FC()
{
  unint64_t result = qword_26AFCEEB0;
  if (!qword_26AFCEEB0)
  {
    sub_24093C364(255, &qword_26AFCEEB8, (void (*)(uint64_t))sub_240847E2C, (void (*)(void))sub_240847F18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCEEB0);
  }
  return result;
}

uint64_t sub_24093C484@<X0>(uint64_t *a1@<X8>)
{
  return sub_2409365FC(v1, "[%{public}s] Unable to fetch CHR labs update tile dismissed date", a1);
}

uint64_t sub_24093C4A8@<X0>(uint64_t *a1@<X8>)
{
  return sub_2408AE0D4(*(void **)(v1 + 16), a1);
}

uint64_t sub_24093C4B4@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_240939378(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_24093C4EC()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24093C52C@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240936104(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_24093C534(uint64_t a1, uint64_t a2)
{
  return sub_240936DFC(a1, a2, v2);
}

uint64_t sub_24093C53C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24093C574@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, char *))(v2 + 16);
  uint64_t v6 = *a1;
  sub_24093DEAC(0, &qword_26AFCDE40, (void (*)(uint64_t))sub_240840680, (void (*)(uint64_t))sub_240849BDC);
  uint64_t result = v5(v6, (char *)a1 + *(int *)(v7 + 48));
  *a2 = result;
  return result;
}

void sub_24093C600()
{
  if (!qword_26AFCC698)
  {
    sub_240951A98();
    type metadata accessor for AccountNewRecordsData(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AFCC698);
    }
  }
}

void sub_24093C674()
{
  if (!qword_26AFCDE38)
  {
    sub_24082A230(255, &qword_26AFCDE08, (uint64_t (*)(uint64_t))sub_24083FC00, MEMORY[0x263EFDE20]);
    sub_24093C708();
    unint64_t v0 = sub_240954428();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCDE38);
    }
  }
}

unint64_t sub_24093C708()
{
  unint64_t result = qword_26AFCDE00;
  if (!qword_26AFCDE00)
  {
    sub_24082A230(255, &qword_26AFCDE08, (uint64_t (*)(uint64_t))sub_24083FC00, MEMORY[0x263EFDE20]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AFCDE00);
  }
  return result;
}

uint64_t sub_24093C790@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_240938CAC(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_24093C7AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24093906C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_24093C7CC@<X0>(uint64_t *a1@<X8>)
{
  sub_240849BDC();
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_240938494(v6, v7, v1 + v5, v8, a1);
}

uint64_t sub_24093C870()
{
  sub_240849BDC();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_240951A28();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  swift_release();

  return MEMORY[0x270FA0238](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

void sub_24093C9B8(void (*a1)(void *), uint64_t a2)
{
  sub_240849BDC();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v2 + 16);
  uint64_t v9 = *(void *)(v2 + 24);
  uint64_t v10 = *(void *)(v2 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_24093864C(a1, a2, v8, v9, v2 + v7, v10);
}

void sub_24093CA68(uint64_t a1)
{
}

uint64_t sub_24093CA9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_24093C600();
  uint64_t v5 = a1 + *(int *)(v4 + 48);
  sub_24082A2E4();
  uint64_t v7 = a2 + *(int *)(v6 + 48);
  uint64_t v8 = sub_240951A98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return sub_24093C078(v5, v7, type metadata accessor for AccountNewRecordsData);
}

uint64_t sub_24093CB44(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v10 = type metadata accessor for AccountNewRecordsData(0);
  uint64_t v53 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v49 = (uint64_t)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v63 = (uint64_t)v47 - v13;
  uint64_t v14 = sub_240951A98();
  uint64_t v50 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  unint64_t v16 = (char *)v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24093E120(0, &qword_268C91F10, (uint64_t (*)(uint64_t))sub_24082A2E4, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v17 - 8);
  unint64_t v19 = (char *)v47 - v18;
  uint64_t v20 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v21 = ~v20;
  uint64_t v22 = *(void *)(a1 + 64);
  uint64_t v23 = -v20;
  uint64_t v56 = a1;
  uint64_t v57 = a1 + 64;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  else {
    uint64_t v24 = -1;
  }
  uint64_t v58 = v21;
  uint64_t v59 = 0;
  uint64_t v60 = v24 & v22;
  uint64_t v61 = a2;
  uint64_t v62 = a3;
  v47[1] = a1;
  swift_bridgeObjectRetain();
  v47[0] = a3;
  swift_retain();
  sub_24093D02C((uint64_t)v19);
  sub_24082A2E4();
  uint64_t v26 = v25;
  uint64_t v27 = *(void *)(v25 - 8);
  uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  uint64_t v51 = v27 + 48;
  uint64_t v52 = v28;
  if (v28(v19, 1, v25) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_24084072C();
    return swift_release();
  }
  uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
  uint64_t v55 = v50 + 32;
  uint64_t v48 = (void (**)(char *, uint64_t))(v50 + 8);
  while (1)
  {
    uint64_t v32 = (uint64_t)&v19[*(int *)(v26 + 48)];
    uint64_t v33 = v14;
    v54(v16, v19, v14);
    sub_240849700(v32, v63, type metadata accessor for AccountNewRecordsData);
    uint64_t v34 = *a5;
    unint64_t v36 = sub_240931478((uint64_t)v16);
    uint64_t v37 = *(void *)(v34 + 16);
    BOOL v38 = (v35 & 1) == 0;
    uint64_t v39 = v37 + v38;
    if (__OFADD__(v37, v38)) {
      break;
    }
    char v40 = v35;
    if (*(void *)(v34 + 24) >= v39)
    {
      if (a4)
      {
        if (v35) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_24093BD3C();
        if (v40) {
          goto LABEL_7;
        }
      }
    }
    else
    {
      sub_24093B138(v39, a4 & 1);
      unint64_t v41 = sub_240931478((uint64_t)v16);
      if ((v40 & 1) != (v42 & 1)) {
        goto LABEL_22;
      }
      unint64_t v36 = v41;
      if (v40)
      {
LABEL_7:
        uint64_t v30 = v63;
        uint64_t v31 = v49;
        sub_24093C078(v63, v49, type metadata accessor for AccountNewRecordsData);
        sub_240849B7C(v30, type metadata accessor for AccountNewRecordsData);
        uint64_t v14 = v33;
        (*v48)(v16, v33);
        sub_24093DF28(v31, *(void *)(*a5 + 56) + *(void *)(v53 + 72) * v36);
        goto LABEL_8;
      }
    }
    uint64_t v43 = (void *)*a5;
    *(void *)(*a5 + 8 * (v36 >> 6) + 64) |= 1 << v36;
    uint64_t v14 = v33;
    v54((char *)(v43[6] + *(void *)(v50 + 72) * v36), v16, v33);
    sub_240849700(v63, v43[7] + *(void *)(v53 + 72) * v36, type metadata accessor for AccountNewRecordsData);
    uint64_t v44 = v43[2];
    BOOL v45 = __OFADD__(v44, 1);
    uint64_t v46 = v44 + 1;
    if (v45) {
      goto LABEL_21;
    }
    v43[2] = v46;
LABEL_8:
    sub_24093D02C((uint64_t)v19);
    a4 = 1;
    if (v52(v19, 1, v26) == 1) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_240955678();
  __break(1u);
  return result;
}

uint64_t sub_24093D02C@<X0>(uint64_t a1@<X8>)
{
  sub_24093C600();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24093E120(0, &qword_268C91F18, (uint64_t (*)(uint64_t))sub_24093C600, MEMORY[0x263F8D8F0]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v37 - v13;
  uint64_t v15 = *v1;
  uint64_t v16 = v1[1];
  uint64_t v18 = v1[2];
  int64_t v17 = v1[3];
  int64_t v19 = v17;
  unint64_t v20 = v1[4];
  uint64_t v37 = v7;
  uint64_t v40 = v18;
  if (v20)
  {
    uint64_t v38 = a1;
    uint64_t v39 = v16;
    uint64_t v21 = (v20 - 1) & v20;
    unint64_t v22 = __clz(__rbit64(v20)) | (v17 << 6);
LABEL_3:
    uint64_t v23 = *(void *)(v15 + 48);
    uint64_t v24 = v15;
    uint64_t v25 = sub_240951A98();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v14, v23 + *(void *)(*(void *)(v25 - 8) + 72) * v22, v25);
    uint64_t v26 = *(void *)(v24 + 56);
    uint64_t v27 = type metadata accessor for AccountNewRecordsData(0);
    sub_24093C078(v26 + *(void *)(*(void *)(v27 - 8) + 72) * v22, (uint64_t)&v14[*(int *)(v4 + 48)], type metadata accessor for AccountNewRecordsData);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, v4);
    a1 = v38;
    uint64_t v16 = v39;
    goto LABEL_23;
  }
  int64_t v28 = v17 + 1;
  if (__OFADD__(v17, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v29 = (unint64_t)(v18 + 64) >> 6;
  if (v28 < v29)
  {
    unint64_t v30 = *(void *)(v16 + 8 * v28);
    if (v30)
    {
LABEL_7:
      uint64_t v38 = a1;
      uint64_t v39 = v16;
      uint64_t v21 = (v30 - 1) & v30;
      unint64_t v22 = __clz(__rbit64(v30)) + (v28 << 6);
      int64_t v19 = v28;
      goto LABEL_3;
    }
    int64_t v31 = v17 + 2;
    int64_t v19 = v17 + 1;
    if (v17 + 2 < v29)
    {
      unint64_t v30 = *(void *)(v16 + 8 * v31);
      if (v30)
      {
LABEL_10:
        int64_t v28 = v31;
        goto LABEL_7;
      }
      int64_t v19 = v17 + 2;
      if (v17 + 3 < v29)
      {
        unint64_t v30 = *(void *)(v16 + 8 * (v17 + 3));
        if (v30)
        {
          int64_t v28 = v17 + 3;
          goto LABEL_7;
        }
        int64_t v31 = v17 + 4;
        int64_t v19 = v17 + 3;
        if (v17 + 4 < v29)
        {
          unint64_t v30 = *(void *)(v16 + 8 * v31);
          if (v30) {
            goto LABEL_10;
          }
          int64_t v28 = v17 + 5;
          int64_t v19 = v17 + 4;
          if (v17 + 5 < v29)
          {
            unint64_t v30 = *(void *)(v16 + 8 * v28);
            if (v30) {
              goto LABEL_7;
            }
            int64_t v19 = v29 - 1;
            int64_t v32 = v17 + 6;
            while (v29 != v32)
            {
              unint64_t v30 = *(void *)(v16 + 8 * v32++);
              if (v30)
              {
                int64_t v28 = v32 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v24 = v15;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v14, 1, 1, v4);
  uint64_t v21 = 0;
LABEL_23:
  *uint64_t v1 = v24;
  v1[1] = v16;
  v1[2] = v40;
  v1[3] = v19;
  v1[4] = v21;
  uint64_t v33 = (void (*)(uint64_t))v1[5];
  sub_24093DF8C((uint64_t)v14, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1)
  {
    sub_24082A2E4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(a1, 1, 1, v34);
  }
  else
  {
    uint64_t v35 = (uint64_t)v37;
    sub_240849700((uint64_t)v11, (uint64_t)v37, (uint64_t (*)(void))sub_24093C600);
    v33(v35);
    sub_240849B7C(v35, (uint64_t (*)(void))sub_24093C600);
    sub_24082A2E4();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(a1, 0, 1, v36);
  }
}

uint64_t sub_24093D478(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_240954B68();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_240940118(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_24093D510(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_2408656BC();
  uint64_t result = sub_240954B68();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = a1 + 32;
    do
    {
      long long v5 = *(_OWORD *)(v4 + 48);
      v9[2] = *(_OWORD *)(v4 + 32);
      v9[3] = v5;
      void v9[4] = *(_OWORD *)(v4 + 64);
      uint64_t v10 = *(void *)(v4 + 80);
      long long v6 = *(_OWORD *)(v4 + 16);
      v9[0] = *(_OWORD *)v4;
      v9[1] = v6;
      sub_240865710((uint64_t)v9);
      sub_24094031C(&v7, (uint64_t *)v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 += 88;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_24093D600(uint64_t a1)
{
  return sub_24093D7F4(a1, MEMORY[0x263F45618], (void (*)(uint64_t))sub_24093E240, (void (*)(char *, char *))sub_240941544);
}

uint64_t sub_24093D640(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_2409553D8();
    swift_bridgeObjectRelease();
  }
  sub_24083EDCC(0, &qword_26AFCF3A0);
  sub_240857DB8((unint64_t *)&unk_26AFCF3A8, &qword_26AFCF3A0);
  uint64_t result = sub_240954B68();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_2409553D8();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        long long v6 = (void *)MEMORY[0x2456015B0](i, a1);
        sub_240941598(&v9, v6);
      }
    }
    else
    {
      uint64_t v7 = (void **)(a1 + 32);
      do
      {
        uint64_t v8 = *v7++;
        sub_240941598(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24093D7B4(uint64_t a1)
{
  return sub_24093D7F4(a1, MEMORY[0x263F45F38], (void (*)(uint64_t))sub_24093A1C0, (void (*)(char *, char *))sub_2409415BC);
}

uint64_t sub_24093D7F4(uint64_t a1, uint64_t (*a2)(void), void (*a3)(uint64_t), void (*a4)(char *, char *))
{
  uint64_t v7 = a2(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v22 - v13;
  uint64_t v15 = *(void *)(a1 + 16);
  a3(v12);
  uint64_t result = sub_240954B68();
  uint64_t v23 = result;
  if (v15)
  {
    uint64_t v17 = v8 + 16;
    unint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v18 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v19 = *(void *)(v8 + 72);
    unint64_t v20 = a4;
    uint64_t v21 = (void (**)(char *, uint64_t))(v17 - 8);
    do
    {
      v22(v11, v18, v7);
      v20(v14, v11);
      (*v21)(v14, v7);
      v18 += v19;
      --v15;
    }
    while (v15);
    return v23;
  }
  return result;
}

uint64_t sub_24093D988(uint64_t a1)
{
  uint64_t v2 = sub_240951A98();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  int64_t v28 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v27 = (char *)v21 - v6;
  sub_240873DF8(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  sub_240829E50(&qword_26AFCC5F0, MEMORY[0x263F07508]);
  uint64_t v29 = sub_240954B68();
  if (v10)
  {
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    uint64_t v25 = v12;
    unint64_t v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    uint64_t v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    v21[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    uint64_t v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      if ((*v24)(v9, 1, v2) == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_240941610(v18, v17);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v19(v9, 1, 1, v2);
  }
  return v29;
}

uint64_t sub_24093DC2C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24093DC64()
{
  sub_240849BDC();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 56) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_240951A28();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

void sub_24093DDA0(uint64_t a1, void *a2, uint64_t a3, char a4, void *a5)
{
  sub_240849BDC();
  sub_240938A80(a1, a2, a3, a4, a5, *(void (**)(void *))(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48), v5+ ((*(unsigned __int8 *)(*(void *)(v11 - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80)));
}

uint64_t sub_24093DE50@<X0>(uint64_t *a1@<X8>)
{
  return sub_2409365FC(v1, "[%{public}s] Unable to fetch CHR records update tile dismissed date", a1);
}

unint64_t sub_24093DE74()
{
  unint64_t result = qword_268C91F00;
  if (!qword_268C91F00)
  {
    type metadata accessor for NewRecordsDataProvider();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268C91F00);
  }
  return result;
}

void sub_24093DEAC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_24093DF28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AccountNewRecordsData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24093DF8C(uint64_t a1, uint64_t a2)
{
  sub_24093E120(0, &qword_268C91F18, (uint64_t (*)(uint64_t))sub_24093C600, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_24093E020()
{
  if (!qword_26AFCC658)
  {
    sub_24093C214(255, (unint64_t *)&qword_26AFCC610, (unint64_t *)&qword_26AFD05A0);
    sub_24093C26C();
    unint64_t v0 = sub_2409542A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AFCC658);
    }
  }
}

void sub_24093E0B8()
{
  if (!qword_268C91F20)
  {
    sub_2409521B8();
    unint64_t v0 = sub_240955438();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C91F20);
    }
  }
}

void sub_24093E120(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24093E184()
{
  if (!qword_268C91F28)
  {
    sub_240951A98();
    sub_24083EDCC(255, &qword_26AFCDF28);
    sub_240829E50(&qword_26AFCC5F0, MEMORY[0x263F07508]);
    unint64_t v0 = sub_240955438();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C91F28);
    }
  }
}

uint64_t sub_24093E240()
{
  return sub_240829E50(&qword_268C91F30, MEMORY[0x263F45618]);
}

uint64_t static Optional<A>.< infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a4;
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](a1);
  uint64_t v29 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  int64_t v28 = (char *)&v27 - v10;
  uint64_t v11 = sub_240955098();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v13 = MEMORY[0x270FA5388](TupleTypeMetadata2 - 8);
  unint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = (char *)&v27 + *(int *)(v13 + 56) - v14;
  uint64_t v17 = *(void *)(v11 - 8);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v18((char *)&v27 - v14, a1, v11);
  v18(v16, a2, v11);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  LODWORD(a2) = v19(v15, 1, a3);
  int v20 = v19(v16, 1, a3);
  if (a2 == 1)
  {
    if (v20 == 1)
    {
      char v21 = 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v16, v11);
      char v21 = 1;
    }
  }
  else if (v20 == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, a3);
    char v21 = 0;
  }
  else
  {
    unint64_t v22 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v23 = v28;
    v22(v28, v15, a3);
    uint64_t v24 = v29;
    v22(v29, v16, a3);
    char v21 = sub_240954738();
    uint64_t v25 = *(void (**)(char *, uint64_t))(v7 + 8);
    v25(v24, a3);
    v25(v23, a3);
  }
  return v21 & 1;
}

uint64_t sub_24093E558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static Optional<A>.< infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8));
}

BOOL static HKSemanticDate.< infix(_:_:)(void *a1, uint64_t a2)
{
  return objc_msgSend(a1, sel_compare_, a2) == (id)-1;
}

BOOL sub_24093E59C(id *a1, void *a2)
{
  return objc_msgSend(*a1, sel_compare_, *a2) == (id)-1;
}

uint64_t sub_24093E5CC(uint64_t a1)
{
  uint64_t result = sub_24093E750(&qword_268C90AB8, MEMORY[0x263F07490]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_24093E624(uint64_t a1)
{
  uint64_t result = sub_24093E750(&qword_268C91F38, (void (*)(uint64_t))sub_24093E67C);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24093E67C()
{
  unint64_t result = qword_268C90B60;
  if (!qword_268C90B60)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268C90B60);
  }
  return result;
}

uint64_t sub_24093E6BC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24093E708()
{
  return sub_24093E750(&qword_268C91F40, (void (*)(uint64_t))sub_24093E67C);
}

uint64_t sub_24093E750(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24093E798(uint64_t a1)
{
  unint64_t v2 = sub_24093EA24();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24093E7D4(uint64_t a1)
{
  unint64_t v2 = sub_24093EA24();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t NavigationFeedItemData.encode(to:)(void *a1)
{
  sub_24093EEF4(0, &qword_268C91F48, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v9[-v6];
  sub_2408304E8(a1, a1[3]);
  sub_24093EA24();
  sub_240955778();
  v9[15] = 0;
  sub_240952778();
  sub_240905448(&qword_268C91938, MEMORY[0x263F45F98]);
  sub_240955598();
  if (!v1)
  {
    type metadata accessor for NavigationFeedItemData();
    v9[14] = 1;
    sub_2409528B8();
    sub_240905448(&qword_268C90DC8, MEMORY[0x263F46018]);
    sub_240955598();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24093EA24()
{
  unint64_t result = qword_268C91F50;
  if (!qword_268C91F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91F50);
  }
  return result;
}

uint64_t type metadata accessor for NavigationFeedItemData()
{
  uint64_t result = qword_268C91F60;
  if (!qword_268C91F60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t NavigationFeedItemData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v25 = sub_2409528B8();
  uint64_t v22 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_240952778();
  uint64_t v24 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v26 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24093EEF4(0, &qword_268C91F58, MEMORY[0x263F8E040]);
  uint64_t v29 = v7;
  uint64_t v27 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v10 = type metadata accessor for NavigationFeedItemData();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408304E8(a1, a1[3]);
  sub_24093EA24();
  sub_240955768();
  if (v2) {
    return sub_2408371B8((uint64_t)a1);
  }
  uint64_t v21 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v24;
  uint64_t v14 = v25;
  char v31 = 0;
  sub_240905448(&qword_268C91948, MEMORY[0x263F45F98]);
  uint64_t v16 = v26;
  sub_2409554F8();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  uint64_t v20 = (uint64_t)v13;
  v17(v13, v16, v28);
  char v30 = 1;
  sub_240905448(&qword_268C90DB8, MEMORY[0x263F46018]);
  sub_2409554F8();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v29);
  uint64_t v18 = v20;
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v20 + *(int *)(v21 + 20), v5, v14);
  sub_24093EF58(v18, v23);
  sub_2408371B8((uint64_t)a1);
  return sub_2408573A0(v18);
}

void sub_24093EEF4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_24093EA24();
    unint64_t v7 = a3(a1, &type metadata for NavigationFeedItemData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_24093EF58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NavigationFeedItemData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24093EFBC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return NavigationFeedItemData.init(from:)(a1, a2);
}

uint64_t sub_24093EFD4(void *a1)
{
  return NavigationFeedItemData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for NavigationFeedItemData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24093F000);
}

uint64_t sub_24093F000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_240952778();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_2409528B8();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for NavigationFeedItemData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24093F10C);
}

uint64_t sub_24093F10C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_240952778();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_2409528B8();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

unsigned char *storeEnumTagSinglePayload for NavigationFeedItemData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24093F2DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NavigationFeedItemData.CodingKeys()
{
  return &type metadata for NavigationFeedItemData.CodingKeys;
}

unint64_t sub_24093F318()
{
  unint64_t result = qword_268C91F70;
  if (!qword_268C91F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91F70);
  }
  return result;
}

unint64_t sub_24093F370()
{
  unint64_t result = qword_268C91F78;
  if (!qword_268C91F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91F78);
  }
  return result;
}

unint64_t sub_24093F3C8()
{
  unint64_t result = qword_268C91F80;
  if (!qword_268C91F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268C91F80);
  }
  return result;
}

uint64_t *NSNotificationName.showAllHealthRecordsCategories.unsafeMutableAddressor()
{
  if (qword_26AFD0648 != -1) {
    swift_once();
  }
  return &static NSNotificationName.showAllHealthRecordsCategories;
}

uint64_t sub_24093F468()
{
  uint64_t result = sub_240954788();
  static NSNotificationName.showAllHealthRecordsCategories = result;
  return result;
}

id static NSNotificationName.showAllHealthRecordsCategories.getter()
{
  return sub_24093F56C(&qword_26AFD0648, (void **)&static NSNotificationName.showAllHealthRecordsCategories);
}

uint64_t sub_24093F4C4()
{
  uint64_t result = sub_240954788();
  static NSNotificationName.collapseHealthRecordsCategories = result;
  return result;
}

uint64_t *NSNotificationName.collapseHealthRecordsCategories.unsafeMutableAddressor()
{
  if (qword_26AFD0650 != -1) {
    swift_once();
  }
  return &static NSNotificationName.collapseHealthRecordsCategories;
}

id static NSNotificationName.collapseHealthRecordsCategories.getter()
{
  return sub_24093F56C(&qword_26AFD0650, (void **)&static NSNotificationName.collapseHealthRecordsCategories);
}

id sub_24093F56C(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  int v3 = *a2;

  return v3;
}

uint64_t sub_24093F5B8()
{
  return sub_2409543A8();
}

uint64_t sub_24093F5EC@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t **a3@<X2>, uint64_t **a4@<X8>)
{
  int v47 = a3;
  uint64_t v7 = type metadata accessor for HealthRecordsGeneratorContext();
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v50 = (uint64_t)&v45 - v11;
  uint64_t v12 = sub_2409540C8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v45 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v45 - v20;
  int v49 = *a1;
  uint64_t v48 = v13;
  if (v49 == 1)
  {
    sub_240954058();
    uint64_t v22 = sub_2409540B8();
    os_log_type_t v23 = sub_240954C38();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_240818000, v22, v23, "CategoryGeneratorPipeline collapsing categories", v24, 2u);
      MEMORY[0x2456021C0](v24, -1, -1);
    }

    uint64_t v25 = *(void (**)(char *, uint64_t))(v13 + 8);
    v25(v21, v12);
  }
  else
  {
    sub_240954058();
    uint64_t v26 = sub_2409540B8();
    os_log_type_t v27 = sub_240954C38();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl(&dword_240818000, v26, v27, "CategoryGeneratorPipeline expanding categories", v28, 2u);
      MEMORY[0x2456021C0](v28, -1, -1);
    }

    uint64_t v25 = *(void (**)(char *, uint64_t))(v13 + 8);
    v25(v19, v12);
  }
  sub_240954058();
  uint64_t v29 = sub_2409540B8();
  os_log_type_t v30 = sub_240954C38();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v51 = v32;
    *(_DWORD *)uint64_t v31 = 136446466;
    uint64_t v45 = v12;
    v52[0] = v47;
    swift_getMetatypeMetadata();
    int v47 = a4;
    uint64_t v33 = sub_2409547E8();
    uint64_t v46 = a2;
    v52[0] = sub_2408370E4(v33, v34, &v51);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2082;
    v52[0] = type metadata accessor for CategoryGenerator(0);
    sub_2408A5EDC(0);
    uint64_t v35 = sub_2409547E8();
    v52[0] = sub_2408370E4(v35, v36, &v51);
    a4 = v47;
    sub_2409550B8();
    a2 = v46;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v29, v30, "[%{public}s]: Emitting %{public}s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v32, -1, -1);
    MEMORY[0x2456021C0](v31, -1, -1);

    uint64_t v37 = v16;
    uint64_t v38 = v45;
  }
  else
  {

    uint64_t v37 = v16;
    uint64_t v38 = v12;
  }
  v25(v37, v38);
  uint64_t v39 = v50;
  sub_24083D548(a2, v50, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  sub_24083D548(a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  type metadata accessor for CategoryDataProvider();
  uint64_t v40 = swift_allocObject();
  sub_24083D548((uint64_t)v10, v40 + OBJC_IVAR____TtC13HealthRecords20CategoryDataProvider_context, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  *(unsigned char *)(v40 + OBJC_IVAR____TtC13HealthRecords20CategoryDataProvider_collapseCategories) = v49;
  sub_240951F38();
  sub_2408304E8(v52, v52[3]);
  sub_240951E98();
  sub_240952FD8();
  swift_allocObject();
  uint64_t v41 = sub_240952FB8();
  sub_24083B2F4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);
  sub_2408371B8((uint64_t)v52);
  *(void *)(v40 + OBJC_IVAR____TtC13HealthRecords20CategoryDataProvider_countProvider) = v41;
  uint64_t v42 = type metadata accessor for CategoryGenerator(0);
  swift_allocObject();
  uint64_t v43 = sub_2408A556C(v39, v40);
  swift_release();
  a4[3] = (uint64_t *)v42;
  uint64_t result = sub_24083C8FC(&qword_26AFCFB48, (void (*)(uint64_t))type metadata accessor for CategoryGenerator);
  a4[4] = (uint64_t *)result;
  *a4 = v43;
  return result;
}

uint64_t sub_24093FBA4()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HealthRecords25CategoryGeneratorPipeline_domain;
  uint64_t v2 = sub_240951F18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_24093FC5C()
{
  return type metadata accessor for CategoryGeneratorPipeline(0);
}

uint64_t sub_24093FC64()
{
  uint64_t result = sub_240951F18();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unsigned char *sub_24093FD0C@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_24093FD18()
{
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24093FD68()
{
  sub_24093FD18();

  return swift_deallocClassInstance();
}

uint64_t sub_24093FD98()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_240954458();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_24093FE10()
{
  if (*(void *)(v0
                 + OBJC_IVAR____TtC13HealthRecordsP33_58E67717502C03A3033511F5D7C86B9726IngestNotificationObserver_observerToken))
  {
    swift_retain();
    sub_240952A48();
    swift_release();
  }

  uint64_t v1 = v0
     + OBJC_IVAR____TtC13HealthRecordsP33_58E67717502C03A3033511F5D7C86B9726IngestNotificationObserver__ingestUpdate;
  sub_24083C944(0, &qword_26AFD04D8, (uint64_t (*)(uint64_t))sub_24083F24C, MEMORY[0x263EFDE58]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_24093FF20()
{
  return type metadata accessor for IngestNotificationObserver(0);
}

void sub_24093FF28()
{
  sub_24083C944(319, &qword_26AFD04D8, (uint64_t (*)(uint64_t))sub_24083F24C, MEMORY[0x263EFDE58]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_240940000@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_240954458();
  swift_release();
  uint64_t result = swift_release();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_240940088(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  unsigned __int8 v2 = *(unsigned char *)(a1 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_240946470(v1, v2);
  swift_retain();
  return sub_240954468();
}

uint64_t sub_240940118(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_2409556F8();
  swift_bridgeObjectRetain();
  sub_240954868();
  uint64_t v8 = sub_240955748();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_240955618() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_240955618() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_2409445D8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_2409402C8(uint64_t a1, char *a2)
{
  return sub_240941664(a1, a2, MEMORY[0x263F45738], (void (*)(uint64_t))sub_240946844, (void (*)(void, void, void))sub_240944774, (void (*)(uint64_t))sub_240946878);
}

uint64_t sub_24094031C(void *a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  unsigned int v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F08F88];
  sub_24082EFE8(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30, 0x263F0A460, MEMORY[0x263F08F88]);
  uint64_t v132 = v7;
  uint64_t v161 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v126 = (char *)&v121 - v8;
  sub_240851D44();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v127 = (uint64_t)&v121 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24089214C();
  uint64_t v131 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v130 = (uint64_t)&v121 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = (int *)type metadata accessor for SharedConceptCodedValue(0);
  uint64_t v125 = *((void *)v139 - 1);
  uint64_t v13 = MEMORY[0x270FA5388](v139);
  int64_t v147 = (uint64_t *)((char *)&v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v121 - v15;
  sub_24082EFE8(0, (unint64_t *)&qword_268C90E10, &qword_268C90E18, 0x263F0A4A0, v6);
  uint64_t v18 = v17;
  uint64_t v19 = *(void *)(v17 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v22 = (char *)&v121 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v121 - v23;
  uint64_t v25 = *v3;
  sub_2409556F8();
  swift_bridgeObjectRetain();
  sub_240886A38((uint64_t)&v163);
  uint64_t v26 = sub_240955748();
  uint64_t v27 = v25;
  uint64_t v28 = -1 << *(unsigned char *)(v25 + 32);
  unint64_t v29 = v26 & ~v28;
  uint64_t v30 = v25 + 56;
  uint64_t v31 = *(void *)(v25 + 56 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29;
  double v146 = a2;
  if ((v31 & 1) == 0)
  {
    unint64_t v103 = v26 & ~v28;
    swift_bridgeObjectRelease();
    goto LABEL_75;
  }
  double v145 = (uint64_t *)v16;
  uint64_t v121 = v3;
  unsigned int v122 = a1;
  uint64_t v32 = ~v28;
  uint64_t v33 = *a2;
  uint64_t v34 = v19 + 16;
  uint64_t v138 = v19;
  uint64_t v35 = (void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v162 = *(void *)(v33 + 16);
  uint64_t v129 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v161 + 48);
  unsigned int v123 = (void (**)(char *, uint64_t, uint64_t))(v161 + 32);
  uint64_t v124 = (void (**)(uint64_t, uint64_t))(v161 + 8);
  uint64_t v142 = v25;
  uint64_t v141 = v25 + 56;
  uint64_t v140 = ~v28;
  uint64_t v159 = v33;
  uint64_t v161 = v34;
  unint64_t v152 = v22;
  id v153 = v24;
LABEL_6:
  uint64_t v36 = *(void *)(v27 + 48) + 88 * v29;
  uint64_t v37 = *(void *)v36;
  if (*(void *)(*(void *)v36 + 16) != v162) {
    goto LABEL_5;
  }
  uint64_t v38 = *(void *)(v36 + 8);
  uint64_t v39 = *(void *)(v36 + 16);
  uint64_t v40 = *(void *)(v36 + 24);
  uint64_t v41 = *(void *)(v36 + 32);
  uint64_t v43 = *(void *)(v36 + 40);
  uint64_t v42 = *(void *)(v36 + 48);
  uint64_t v44 = *(void *)(v36 + 56);
  double v45 = *(double *)(v36 + 64);
  uint64_t v46 = *(void *)(v36 + 72);
  uint64_t v47 = *(void *)(v36 + 80);
  unint64_t v150 = v29;
  uint64_t v160 = v37;
  uint64_t v155 = v41;
  uint64_t v156 = v39;
  uint64_t v154 = v43;
  uint64_t v157 = v47;
  uint64_t v158 = v44;
  uint64_t v143 = v46;
  uint64_t v144 = v42;
  uint64_t v149 = v40;
  uint64_t v151 = v38;
  if (v162 && v37 != v33)
  {
    uint64_t v48 = (double *)((*(unsigned __int8 *)(v138 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80));
    uint64_t v49 = *(void *)(v138 + 72);
    uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v138 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v51 = v152;
    swift_bridgeObjectRetain();
    uint64_t v52 = v153;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v53 = 0;
    while (1)
    {
      v50(v52, (char *)v48 + v160, v18);
      if (v53 >= *(void *)(v33 + 16)) {
        break;
      }
      v50(v51, (char *)v48 + v33, v18);
      sub_2409469DC(&qword_268C90E98, &qword_268C90EA0);
      char v54 = sub_240954778();
      uint64_t v55 = *v35;
      (*v35)(v51, v18);
      v55(v52, v18);
      if ((v54 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v33 = v159;
LABEL_4:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v29 = v150;
        uint64_t v27 = v142;
        uint64_t v30 = v141;
        uint64_t v32 = v140;
LABEL_5:
        unint64_t v29 = (v29 + 1) & v32;
        if (((*(void *)(v30 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
        {
          unint64_t v103 = v29;
          swift_bridgeObjectRelease();
          a1 = v122;
          uint64_t v3 = v121;
LABEL_75:
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v163 = *v3;
          *uint64_t v3 = 0x8000000000000000;
          unsigned int v105 = v146;
          sub_240865710((uint64_t)v146);
          sub_240944A54(v105, v103, isUniquelyReferenced_nonNull_native);
          *uint64_t v3 = v163;
          swift_bridgeObjectRelease();
          long long v106 = *((_OWORD *)v105 + 3);
          *((_OWORD *)a1 + 2) = *((_OWORD *)v105 + 2);
          *((_OWORD *)a1 + 3) = v106;
          *((_OWORD *)a1 + 4) = *((_OWORD *)v105 + 4);
          a1[10] = v105[10];
          long long v107 = *((_OWORD *)v105 + 1);
          uint64_t result = 1;
          *(_OWORD *)a1 = *(_OWORD *)v105;
          *((_OWORD *)a1 + 1) = v107;
          return result;
        }
        goto LABEL_6;
      }
      ++v53;
      uint64_t v48 = (double *)((char *)v48 + v49);
      uint64_t v33 = v159;
      if (v162 == v53) {
        goto LABEL_15;
      }
    }
    __break(1u);
    goto LABEL_77;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_15:
  uint64_t v56 = v146;
  BOOL v57 = v151 == v146[1] && v156 == v146[2];
  if (!v57 && (sub_240955618() & 1) == 0
    || ((v58 = v154, v149 == v56[3]) ? (BOOL v59 = v155 == v56[4]) : (BOOL v59 = 0),
        !v59 && (sub_240955618() & 1) == 0 || (uint64_t v60 = v56[5], v61 = *(void *)(v58 + 16), v61 != *(void *)(v60 + 16))))
  {
LABEL_3:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  if (!v61 || v58 == v60)
  {
LABEL_57:
    uint64_t v48 = (double *)v146;
    BOOL v101 = v144 == v146[6] && v158 == v146[7];
    if (v101 || (sub_240955618()) && v45 == v48[8])
    {
      if (v143 != *((void *)v48 + 9) || v157 != *((void *)v48 + 10))
      {
        char v102 = sub_240955618();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v29 = v150;
        uint64_t v27 = v142;
        uint64_t v30 = v141;
        uint64_t v32 = v140;
        if ((v102 & 1) == 0) {
          goto LABEL_5;
        }
        uint64_t v108 = v122;
        uint64_t v48 = (double *)v146;
        id v109 = v121;
LABEL_78:
        swift_bridgeObjectRelease();
        sub_240892468((uint64_t)v48);
        id v110 = (void *)(*(void *)(*v109 + 48) + 88 * v150);
        uint64_t v111 = v110[1];
        uint64_t v113 = v110[2];
        uint64_t v112 = v110[3];
        uint64_t v114 = v110[4];
        uint64_t v115 = v110[5];
        uint64_t v116 = v110[6];
        uint64_t v117 = v110[7];
        uint64_t v118 = v110[8];
        uint64_t v119 = v110[9];
        uint64_t v120 = v110[10];
        *uint64_t v108 = *v110;
        v108[1] = v111;
        v108[2] = v113;
        v108[3] = v112;
        v108[4] = v114;
        v108[5] = v115;
        v108[6] = v116;
        v108[7] = v117;
        v108[8] = v118;
        v108[9] = v119;
        v108[10] = v120;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        return 0;
      }
LABEL_77:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v108 = v122;
      id v109 = v121;
      goto LABEL_78;
    }
    goto LABEL_3;
  }
  unint64_t v62 = 0;
  unint64_t v63 = (*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80);
  uint64_t v135 = v58 + v63;
  uint64_t v133 = v60 + v63;
  uint64_t v134 = *(void *)(v125 + 72);
  uint64_t v136 = v60;
  uint64_t v128 = v61;
  while (1)
  {
    unint64_t v64 = v62;
    uint64_t v65 = v134 * v62;
    id v66 = v145;
    uint64_t result = sub_24083D548(v135 + v134 * v62, (uint64_t)v145, type metadata accessor for SharedConceptCodedValue);
    unint64_t v68 = *(void *)(v136 + 16);
    unint64_t v137 = v64;
    if (v64 >= v68) {
      break;
    }
    uint64_t v69 = v133 + v65;
    uint64_t v70 = v147;
    sub_24083D548(v69, (uint64_t)v147, type metadata accessor for SharedConceptCodedValue);
    uint64_t v71 = *v70;
    uint64_t v149 = *v66;
    uint64_t v72 = *(void *)(v71 + 16);
    uint64_t v151 = *(void *)(v149 + 16);
    if (v151 != v72) {
      goto LABEL_71;
    }
    if (v151 && v149 != v71)
    {
      unint64_t v73 = 0;
      unint64_t v74 = (*(unsigned __int8 *)(v138 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80);
      uint64_t v148 = *(void *)(v138 + 72);
      int64_t v75 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v138 + 16);
      while (1)
      {
        unint64_t v76 = v153;
        uint64_t result = v75(v153, v149 + v74, v18);
        if (v73 >= *(void *)(v71 + 16)) {
          break;
        }
        uint64_t v77 = v152;
        v75(v152, v71 + v74, v18);
        sub_2409469DC(&qword_268C90E98, &qword_268C90EA0);
        char v78 = sub_240954778();
        uint64_t v79 = *v35;
        (*v35)(v77, v18);
        v79(v76, v18);
        if ((v78 & 1) == 0) {
          goto LABEL_71;
        }
        ++v73;
        v74 += v148;
        if (v151 == v73) {
          goto LABEL_37;
        }
      }
      __break(1u);
      break;
    }
LABEL_37:
    uint64_t v80 = v139[5];
    uint64_t v81 = (uint64_t)v147 + v80;
    uint64_t v82 = v130;
    uint64_t v83 = v130 + *(int *)(v131 + 48);
    sub_24083D548((uint64_t)v145 + v80, v130, (uint64_t (*)(void))sub_240851D44);
    sub_24083D548(v81, v83, (uint64_t (*)(void))sub_240851D44);
    uint64_t v84 = *v129;
    uint64_t v85 = v132;
    if ((*v129)(v82, 1, v132) == 1)
    {
      if (v84(v83, 1, v85) != 1) {
        goto LABEL_70;
      }
      sub_24083B2F4(v82, (uint64_t (*)(void))sub_240851D44);
    }
    else
    {
      uint64_t v86 = v127;
      sub_24083D548(v82, v127, (uint64_t (*)(void))sub_240851D44);
      if (v84(v83, 1, v85) == 1)
      {
        (*v124)(v86, v85);
LABEL_70:
        sub_24083B2F4(v82, (uint64_t (*)(void))sub_24089214C);
LABEL_71:
        sub_24083B2F4((uint64_t)v147, type metadata accessor for SharedConceptCodedValue);
        sub_24083B2F4((uint64_t)v145, type metadata accessor for SharedConceptCodedValue);
        uint64_t v33 = v159;
        goto LABEL_3;
      }
      uint64_t v87 = v126;
      (*v123)(v126, v83, v85);
      sub_24091A028();
      char v88 = sub_240954778();
      uint64_t v89 = *v124;
      (*v124)((uint64_t)v87, v85);
      v89(v86, v85);
      sub_24083B2F4(v82, (uint64_t (*)(void))sub_240851D44);
      if ((v88 & 1) == 0) {
        goto LABEL_71;
      }
    }
    uint64_t v90 = v139[6];
    uint64_t v91 = (uint64_t *)((char *)v145 + v90);
    uint64_t v92 = *(uint64_t *)((char *)v145 + v90 + 8);
    uint64_t v93 = (uint64_t *)((char *)v147 + v90);
    uint64_t v94 = v93[1];
    if (v92)
    {
      if (!v94 || (*v91 != *v93 || v92 != v94) && (sub_240955618() & 1) == 0) {
        goto LABEL_71;
      }
    }
    else if (v94)
    {
      goto LABEL_71;
    }
    uint64_t v95 = v139[7];
    uint64_t v96 = (uint64_t *)((char *)v145 + v95);
    uint64_t v97 = *(uint64_t *)((char *)v145 + v95 + 8);
    uint64_t v98 = (uint64_t *)((char *)v147 + v95);
    uint64_t v99 = v98[1];
    char v100 = v99 == 0;
    if (!v97) {
      goto LABEL_55;
    }
    if (!v99) {
      goto LABEL_71;
    }
    if (*v96 != *v98 || v97 != v99)
    {
      char v100 = sub_240955618();
LABEL_55:
      uint64_t v33 = v159;
      sub_24083B2F4((uint64_t)v147, type metadata accessor for SharedConceptCodedValue);
      sub_24083B2F4((uint64_t)v145, type metadata accessor for SharedConceptCodedValue);
      if ((v100 & 1) == 0) {
        goto LABEL_3;
      }
      goto LABEL_56;
    }
    sub_24083B2F4((uint64_t)v147, type metadata accessor for SharedConceptCodedValue);
    sub_24083B2F4((uint64_t)v145, type metadata accessor for SharedConceptCodedValue);
    uint64_t v33 = v159;
LABEL_56:
    unint64_t v62 = v137 + 1;
    if (v137 + 1 == v128) {
      goto LABEL_57;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2409412C0(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for SharedConceptFeedItemData(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (void *)((char *)&v20[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *v2;
  sub_2409556F8();
  swift_bridgeObjectRetain();
  sub_2408857EC((uint64_t)v20);
  uint64_t v11 = sub_240955748();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v19 = a1;
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v7 + 72);
    while (1)
    {
      sub_24083D548(*(void *)(v10 + 48) + v15 * v13, (uint64_t)v9, type metadata accessor for SharedConceptFeedItemData);
      BOOL v16 = sub_24088F74C(v9, a2);
      sub_24083B2F4((uint64_t)v9, type metadata accessor for SharedConceptFeedItemData);
      if (v16) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a1 = v19;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_24083B2F4((uint64_t)a2, type metadata accessor for SharedConceptFeedItemData);
    sub_24083D548(*(void *)(*v3 + 48) + v15 * v13, v19, type metadata accessor for SharedConceptFeedItemData);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_24083D548((uint64_t)a2, (uint64_t)v9, type metadata accessor for SharedConceptFeedItemData);
    v20[0] = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_240945978(v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v20[0];
    swift_bridgeObjectRelease();
    sub_240824600((uint64_t)a2, a1, type metadata accessor for SharedConceptFeedItemData);
    return 1;
  }
}

uint64_t sub_240941544(uint64_t a1, char *a2)
{
  return sub_240941664(a1, a2, MEMORY[0x263F45618], (void (*)(uint64_t))sub_24093E240, (void (*)(void, void, void))sub_240945BC8, (void (*)(uint64_t))sub_2409468E0);
}

uint64_t sub_240941598(void *a1, void *a2)
{
  return sub_2408278C4(a1, a2, &qword_26AFCF3A0, 0x263F0A1A8, &qword_268C91F90, (unint64_t *)&unk_26AFCF3A8);
}

uint64_t sub_2409415BC(uint64_t a1, char *a2)
{
  return sub_240941664(a1, a2, MEMORY[0x263F45F38], (void (*)(uint64_t))sub_24093A1C0, (void (*)(void, void, void))sub_240945EA8, (void (*)(uint64_t))sub_240946594);
}

uint64_t sub_240941610(uint64_t a1, char *a2)
{
  return sub_240941664(a1, a2, MEMORY[0x263F07508], (void (*)(uint64_t))sub_240946488, (void (*)(void, void, void))sub_240946188, (void (*)(uint64_t))sub_2409464BC);
}

uint64_t sub_240941664(uint64_t a1, char *a2, uint64_t (*a3)(void), void (*a4)(uint64_t), void (*a5)(void, void, void), void (*a6)(uint64_t))
{
  double v45 = a6;
  uint64_t v9 = v6;
  uint64_t v12 = a3(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  BOOL v16 = (char *)v37 - v15;
  uint64_t v17 = *v6;
  a4(v14);
  swift_bridgeObjectRetain();
  uint64_t v46 = a2;
  uint64_t v18 = sub_2409546F8();
  uint64_t v19 = -1 << *(unsigned char *)(v17 + 32);
  unint64_t v20 = v18 & ~v19;
  uint64_t v44 = v17 + 56;
  uint64_t v21 = *(void *)(v17 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20;
  uint64_t v41 = a1;
  if (v21)
  {
    uint64_t v39 = a5;
    uint64_t v40 = v6;
    uint64_t v42 = ~v19;
    uint64_t v38 = v13;
    uint64_t v24 = *(void (**)(void, void, void))(v13 + 16);
    uint64_t v23 = v13 + 16;
    uint64_t v22 = v24;
    uint64_t v43 = *(void *)(v23 + 56);
    uint64_t v25 = (void (**)(char *, uint64_t))(v23 - 8);
    v37[1] = v23 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v26 = v17;
      unint64_t v27 = v43 * v20;
      unint64_t v28 = *(void *)(v17 + 48) + v43 * v20;
      unint64_t v29 = v22;
      uint64_t v30 = ((uint64_t (*)(char *, unint64_t, uint64_t))v22)(v16, v28, v12);
      v45(v30);
      char v31 = sub_240954778();
      uint64_t v32 = *v25;
      (*v25)(v16, v12);
      if (v31) {
        break;
      }
      unint64_t v20 = (v20 + 1) & v42;
      uint64_t v22 = v29;
      uint64_t v17 = v26;
      if (((*(void *)(v44 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a5 = v39;
        uint64_t v9 = v40;
        uint64_t v33 = v38;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v32(v46, v12);
    v29(v41, *(void *)(*v40 + 48) + v27, v12);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = *(void (**)(void, void, void))(v13 + 16);
    uint64_t v33 = v13;
LABEL_7:
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v35 = v46;
    v22(v16, v46, v12);
    uint64_t v47 = *v9;
    *uint64_t v9 = 0x8000000000000000;
    a5(v16, v20, isUniquelyReferenced_nonNull_native);
    *uint64_t v9 = v47;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v41, v35, v12);
    return 1;
  }
}

void *sub_24094194C()
{
  uint64_t v1 = v0;
  sub_2408BB54C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_240955248();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_240941AFC()
{
  sub_24091A0E4();
  uint64_t v30 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_240955248();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v30 = v3;
    return result;
  }
  uint64_t result = (void *)(v2 + 56);
  uint64_t v5 = v1 + 56;
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 56 + 8 * v6) {
    uint64_t result = memmove(result, (const void *)(v1 + 56), 8 * v6);
  }
  int64_t v8 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v27 >= v12) {
      goto LABEL_28;
    }
    unint64_t v28 = *(void *)(v5 + 8 * v27);
    ++v8;
    if (!v28)
    {
      int64_t v8 = v27 + 1;
      if (v27 + 1 >= v12) {
        goto LABEL_28;
      }
      unint64_t v28 = *(void *)(v5 + 8 * v8);
      if (!v28)
      {
        int64_t v8 = v27 + 2;
        if (v27 + 2 >= v12) {
          goto LABEL_28;
        }
        unint64_t v28 = *(void *)(v5 + 8 * v8);
        if (!v28) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v11 = (v28 - 1) & v28;
    unint64_t v14 = __clz(__rbit64(v28)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = 88 * v14;
    uint64_t v16 = *(void *)(v1 + 48) + v15;
    uint64_t v17 = *(void *)(v16 + 8);
    uint64_t v19 = *(void *)(v16 + 16);
    uint64_t v18 = *(void *)(v16 + 24);
    uint64_t v20 = *(void *)(v16 + 48);
    uint64_t v21 = *(void *)(v16 + 56);
    uint64_t v22 = *(void *)(v16 + 64);
    uint64_t v23 = *(void *)(v16 + 72);
    uint64_t v24 = *(void *)(v16 + 80);
    uint64_t v25 = *(void *)(v3 + 48) + v15;
    long long v26 = *(_OWORD *)(v16 + 32);
    *(void *)uint64_t v25 = *(void *)v16;
    *(void *)(v25 + 8) = v17;
    *(void *)(v25 + 16) = v19;
    *(void *)(v25 + 24) = v18;
    *(_OWORD *)(v25 + 32) = v26;
    *(void *)(v25 + 48) = v20;
    *(void *)(v25 + 56) = v21;
    *(void *)(v25 + 64) = v22;
    *(void *)(v25 + 72) = v23;
    *(void *)(v25 + 80) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v29 = v27 + 3;
  if (v29 >= v12) {
    goto LABEL_28;
  }
  unint64_t v28 = *(void *)(v5 + 8 * v29);
  if (v28)
  {
    int64_t v8 = v29;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v8 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_28;
    }
    unint64_t v28 = *(void *)(v5 + 8 * v8);
    ++v29;
    if (v28) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_240941D24()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SharedConceptFeedItemData(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240946948();
  uint64_t v6 = *v0;
  uint64_t v7 = sub_240955248();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t result = (void *)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v6 + 56);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v17) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v17) {
        goto LABEL_28;
      }
      unint64_t v22 = *(void *)(v10 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v17) {
          goto LABEL_28;
        }
        unint64_t v22 = *(void *)(v10 + 8 * v13);
        if (!v22) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    unint64_t v20 = *(void *)(v3 + 72) * v19;
    sub_24083D548(*(void *)(v6 + 48) + v20, (uint64_t)v5, type metadata accessor for SharedConceptFeedItemData);
    uint64_t result = (void *)sub_240824600((uint64_t)v5, *(void *)(v8 + 48) + v20, type metadata accessor for SharedConceptFeedItemData);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v17) {
    goto LABEL_28;
  }
  unint64_t v22 = *(void *)(v10 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v17) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v10 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_240941F80(unint64_t *a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v5 = v4;
  sub_24083F6E0(0, a1, a2, a3, a4);
  uint64_t v6 = *v4;
  uint64_t v7 = sub_240955248();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v5 = v8;
    return result;
  }
  id result = (id)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11) {
    id result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v6 + 56);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v17) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v22);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v17) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v10 + 8 * v13);
      if (!v23)
      {
        int64_t v13 = v22 + 2;
        if (v22 + 2 >= v17) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v10 + 8 * v13);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v16 = (v23 - 1) & v23;
    unint64_t v19 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    uint64_t v20 = 8 * v19;
    int64_t v21 = *(void **)(*(void *)(v6 + 48) + v20);
    *(void *)(*(void *)(v8 + 48) + v20) = v21;
    id result = v21;
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v17) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v10 + 8 * v24);
  if (v23)
  {
    int64_t v13 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v13 >= v17) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v13);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_240942138(uint64_t (*a1)(void), void (*a2)(void))
{
  uint64_t v4 = v2;
  uint64_t v5 = a1(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v25 - v7;
  a2(0);
  uint64_t v9 = *v2;
  uint64_t v10 = sub_240955248();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    id result = (void *)swift_release();
LABEL_30:
    uint64_t *v4 = v11;
    return result;
  }
  id result = (void *)(v10 + 56);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  long long v26 = v4;
  int64_t v27 = (const void *)(v9 + 56);
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v13) {
    id result = memmove(result, v27, 8 * v13);
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 56);
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v22);
    ++v15;
    if (!v23)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_28;
      }
      unint64_t v23 = *((void *)v27 + v15);
      if (!v23)
      {
        int64_t v15 = v22 + 2;
        if (v22 + 2 >= v28) {
          goto LABEL_28;
        }
        unint64_t v23 = *((void *)v27 + v15);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v15 << 6);
LABEL_12:
    unint64_t v21 = *(void *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(void *)(v9 + 48) + v21, v5);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v11 + 48) + v21, v8, v5);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v28)
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t v4 = v26;
    goto LABEL_30;
  }
  unint64_t v23 = *((void *)v27 + v24);
  if (v23)
  {
    int64_t v15 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v15);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_2409423EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_2408BB54C();
  uint64_t v3 = sub_240955258();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_2409556F8();
    swift_bridgeObjectRetain();
    sub_240954868();
    uint64_t result = sub_240955748();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_240942698()
{
  uint64_t v1 = v0;
  sub_24082EFE8(0, (unint64_t *)&qword_268C90E10, &qword_268C90E18, 0x263F0A4A0, MEMORY[0x263F08F88]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v48 - v5;
  uint64_t v7 = *v0;
  sub_24091A0E4();
  uint64_t v8 = sub_240955258();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    unint64_t result = swift_release();
LABEL_30:
    *uint64_t v1 = v9;
    return result;
  }
  uint64_t v51 = v6;
  uint64_t v52 = v3;
  uint64_t v48 = v0;
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 56);
  uint64_t v55 = v7 + 56;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  int64_t v56 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v50 = v4 + 16;
  uint64_t v53 = v4;
  uint64_t v49 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v57 = v8 + 56;
  unint64_t result = swift_retain();
  int64_t v15 = 0;
  uint64_t v54 = v9;
  uint64_t v58 = v7;
  while (1)
  {
    if (v13)
    {
      unint64_t v24 = __clz(__rbit64(v13));
      uint64_t v25 = (v13 - 1) & v13;
      unint64_t v26 = v24 | (v15 << 6);
      goto LABEL_24;
    }
    int64_t v27 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v27 >= v56) {
      goto LABEL_28;
    }
    unint64_t v28 = *(void *)(v55 + 8 * v27);
    ++v15;
    if (!v28)
    {
      int64_t v15 = v27 + 1;
      if (v27 + 1 >= v56) {
        goto LABEL_28;
      }
      unint64_t v28 = *(void *)(v55 + 8 * v15);
      if (!v28)
      {
        int64_t v15 = v27 + 2;
        if (v27 + 2 >= v56) {
          goto LABEL_28;
        }
        unint64_t v28 = *(void *)(v55 + 8 * v15);
        if (!v28) {
          break;
        }
      }
    }
LABEL_23:
    uint64_t v25 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v15 << 6);
LABEL_24:
    uint64_t v30 = *(void *)(v7 + 48) + 88 * v26;
    uint64_t v32 = *(void *)v30;
    uint64_t v31 = *(void *)(v30 + 8);
    uint64_t v33 = *(void *)(v30 + 16);
    uint64_t v65 = *(void *)(v30 + 24);
    uint64_t v66 = v31;
    long long v70 = *(_OWORD *)(v30 + 32);
    uint64_t v34 = *(void *)(v30 + 48);
    uint64_t v35 = *(void *)(v30 + 56);
    uint64_t v36 = *(void *)(v30 + 64);
    uint64_t v37 = *(void *)(v30 + 80);
    uint64_t v63 = *(void *)(v30 + 72);
    uint64_t v64 = v34;
    sub_2409556F8();
    sub_240955708();
    uint64_t v38 = v32;
    uint64_t v39 = *(void *)(v32 + 16);
    uint64_t v40 = *((void *)&v70 + 1);
    unint64_t v67 = v25;
    int64_t v68 = v15;
    uint64_t v69 = v38;
    if (v39)
    {
      uint64_t v41 = v38 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80));
      uint64_t v42 = *(void *)(v53 + 72);
      uint64_t v43 = v33;
      uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
      swift_bridgeObjectRetain_n();
      uint64_t v62 = v43;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v59 = v40;
      swift_bridgeObjectRetain();
      uint64_t v61 = v35;
      swift_bridgeObjectRetain();
      uint64_t v60 = v37;
      swift_bridgeObjectRetain();
      double v45 = v49;
      uint64_t v46 = v52;
      uint64_t v47 = v51;
      do
      {
        v44(v47, v41, v46);
        sub_2409469DC(&qword_268C90E70, &qword_268C90E78);
        sub_240954708();
        (*v45)(v47, v46);
        v41 += v42;
        --v39;
      }
      while (v39);
      swift_bridgeObjectRelease();
      uint64_t v16 = v54;
      uint64_t v33 = v62;
      uint64_t v35 = v61;
      uint64_t v37 = v60;
      uint64_t v40 = v59;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v16 = v9;
    }
    swift_bridgeObjectRetain();
    uint64_t v17 = v33;
    uint64_t v18 = v66;
    sub_240954868();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v19 = v65;
    sub_240954868();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24088E9F4((uint64_t)v71, v40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v20 = v64;
    sub_240954868();
    swift_bridgeObjectRelease();
    sub_240955738();
    swift_bridgeObjectRetain();
    uint64_t v21 = v63;
    sub_240954868();
    swift_bridgeObjectRelease();
    sub_240955748();
    uint64_t v22 = v57;
    unint64_t result = sub_240955168();
    *(void *)(v22 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v23 = *(void *)(v16 + 48) + 88 * result;
    *(void *)uint64_t v23 = v69;
    *(void *)(v23 + 8) = v18;
    *(void *)(v23 + 16) = v17;
    *(void *)(v23 + 24) = v19;
    *(_OWORD *)(v23 + 32) = v70;
    *(void *)(v23 + 48) = v20;
    *(void *)(v23 + 56) = v35;
    *(void *)(v23 + 64) = v36;
    *(void *)(v23 + 72) = v21;
    *(void *)(v23 + 80) = v37;
    ++*(void *)(v16 + 16);
    uint64_t v7 = v58;
    uint64_t v9 = v16;
    unint64_t v13 = v67;
    int64_t v15 = v68;
  }
  int64_t v29 = v27 + 3;
  if (v29 >= v56)
  {
LABEL_28:
    unint64_t result = swift_release_n();
    uint64_t v1 = v48;
    goto LABEL_30;
  }
  unint64_t v28 = *(void *)(v55 + 8 * v29);
  if (v28)
  {
    int64_t v15 = v29;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v15 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v15 >= v56) {
      goto LABEL_28;
    }
    unint64_t v28 = *(void *)(v55 + 8 * v15);
    ++v29;
    if (v28) {
      goto LABEL_23;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_240942CD8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SharedConceptFeedItemData(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_240946948();
  uint64_t v7 = sub_240955258();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v25 = v0;
  uint64_t v26 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v13 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v14 = v7 + 56;
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v16 << 6);
      goto LABEL_7;
    }
    int64_t v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v13) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v26 + 8 * v21);
    ++v16;
    if (!v22)
    {
      int64_t v16 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v26 + 8 * v16);
      if (!v22)
      {
        int64_t v16 = v21 + 2;
        if (v21 + 2 >= v13) {
          goto LABEL_23;
        }
        unint64_t v22 = *(void *)(v26 + 8 * v16);
        if (!v22) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v18 = __clz(__rbit64(v22)) + (v16 << 6);
LABEL_7:
    uint64_t v19 = *(void *)(v3 + 72);
    sub_24083D548(*(void *)(v6 + 48) + v19 * v18, (uint64_t)v5, type metadata accessor for SharedConceptFeedItemData);
    sub_2409556F8();
    sub_2408857EC((uint64_t)v27);
    sub_240955748();
    unint64_t v20 = sub_240955168();
    *(void *)(v14 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    uint64_t result = sub_240824600((uint64_t)v5, *(void *)(v8 + 48) + v20 * v19, type metadata accessor for SharedConceptFeedItemData);
    ++*(void *)(v8 + 16);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v13)
  {
LABEL_23:
    uint64_t result = swift_release_n();
    uint64_t v1 = v25;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v26 + 8 * v23);
  if (v22)
  {
    int64_t v16 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v16 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v16 >= v13) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v26 + 8 * v16);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_240942FB0(uint64_t a1, uint64_t (*a2)(void), void (*a3)(void), void (*a4)(uint64_t))
{
  uint64_t v44 = a4;
  uint64_t v6 = v4;
  uint64_t v7 = a2(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v39 - v9;
  uint64_t v11 = *v4;
  a3(0);
  uint64_t v12 = sub_240955258();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v6 = v13;
    return result;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 56);
  uint64_t v39 = v4;
  uint64_t v40 = v11 + 56;
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  int64_t v41 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v42 = v8 + 16;
  uint64_t v18 = v12 + 56;
  uint64_t v43 = v8;
  uint64_t v19 = (uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32);
  uint64_t result = swift_retain();
  int64_t v21 = 0;
  while (1)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v21 << 6);
      goto LABEL_24;
    }
    int64_t v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v25 >= v41) {
      goto LABEL_33;
    }
    unint64_t v26 = *(void *)(v40 + 8 * v25);
    ++v21;
    if (!v26)
    {
      int64_t v21 = v25 + 1;
      if (v25 + 1 >= v41) {
        goto LABEL_33;
      }
      unint64_t v26 = *(void *)(v40 + 8 * v21);
      if (!v26)
      {
        int64_t v21 = v25 + 2;
        if (v25 + 2 >= v41) {
          goto LABEL_33;
        }
        unint64_t v26 = *(void *)(v40 + 8 * v21);
        if (!v26) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v17 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v21 << 6);
LABEL_24:
    uint64_t v28 = v11;
    uint64_t v29 = *(void *)(v11 + 48);
    uint64_t v30 = *(void *)(v43 + 72);
    uint64_t v31 = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v43 + 16))(v10, v29 + v30 * v24, v7);
    v44(v31);
    uint64_t result = sub_2409546F8();
    uint64_t v32 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v33 = result & ~v32;
    unint64_t v34 = v33 >> 6;
    if (((-1 << v33) & ~*(void *)(v18 + 8 * (v33 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v33) & ~*(void *)(v18 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v35 = 0;
      unint64_t v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v37 = v34 == v36;
        if (v34 == v36) {
          unint64_t v34 = 0;
        }
        v35 |= v37;
        uint64_t v38 = *(void *)(v18 + 8 * v34);
      }
      while (v38 == -1);
      unint64_t v22 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(void *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    uint64_t result = (*v19)(*(void *)(v13 + 48) + v22 * v30, v10, v7);
    ++*(void *)(v13 + 16);
    uint64_t v11 = v28;
  }
  int64_t v27 = v25 + 3;
  if (v27 >= v41)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v6 = v39;
    goto LABEL_35;
  }
  unint64_t v26 = *(void *)(v40 + 8 * v27);
  if (v26)
  {
    int64_t v21 = v27;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v21 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v21 >= v41) {
      goto LABEL_33;
    }
    unint64_t v26 = *(void *)(v40 + 8 * v21);
    ++v27;
    if (v26) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_240943340()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_2408BB54C();
  uint64_t v3 = sub_240955258();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_2409556F8();
      sub_240954868();
      uint64_t result = sub_240955748();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *uint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_24094361C()
{
  uint64_t v1 = v0;
  sub_24082EFE8(0, (unint64_t *)&qword_268C90E10, &qword_268C90E18, 0x263F0A4A0, MEMORY[0x263F08F88]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v45 - v5;
  uint64_t v7 = *v0;
  sub_24091A0E4();
  uint64_t v8 = sub_240955258();
  uint64_t v9 = v8;
  if (*(void *)(v7 + 16))
  {
    uint64_t v49 = v6;
    uint64_t v50 = v3;
    uint64_t v46 = v0;
    uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
    uint64_t v11 = *(void *)(v7 + 56);
    uint64_t v53 = (void *)(v7 + 56);
    if (v10 < 64) {
      uint64_t v12 = ~(-1 << v10);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & v11;
    int64_t v54 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v48 = v4 + 16;
    uint64_t v51 = v4;
    uint64_t v47 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v55 = v8 + 56;
    unint64_t result = swift_retain();
    int64_t v15 = 0;
    uint64_t v56 = v7;
    uint64_t v52 = v9;
    while (1)
    {
      if (v13)
      {
        uint64_t v65 = (v13 - 1) & v13;
        unint64_t v27 = __clz(__rbit64(v13)) | (v15 << 6);
      }
      else
      {
        int64_t v28 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
          __break(1u);
LABEL_33:
          __break(1u);
          return result;
        }
        if (v28 >= v54) {
          goto LABEL_27;
        }
        unint64_t v29 = v53[v28];
        ++v15;
        if (!v29)
        {
          int64_t v15 = v28 + 1;
          if (v28 + 1 >= v54) {
            goto LABEL_27;
          }
          unint64_t v29 = v53[v15];
          if (!v29)
          {
            int64_t v15 = v28 + 2;
            if (v28 + 2 >= v54) {
              goto LABEL_27;
            }
            unint64_t v29 = v53[v15];
            if (!v29)
            {
              int64_t v30 = v28 + 3;
              if (v30 >= v54)
              {
LABEL_27:
                swift_release();
                uint64_t v1 = v46;
                uint64_t v44 = 1 << *(unsigned char *)(v7 + 32);
                if (v44 > 63) {
                  bzero(v53, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v53 = -1 << v44;
                }
                *(void *)(v7 + 16) = 0;
                break;
              }
              unint64_t v29 = v53[v30];
              if (!v29)
              {
                while (1)
                {
                  int64_t v15 = v30 + 1;
                  if (__OFADD__(v30, 1)) {
                    goto LABEL_33;
                  }
                  if (v15 >= v54) {
                    goto LABEL_27;
                  }
                  unint64_t v29 = v53[v15];
                  ++v30;
                  if (v29) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v15 = v30;
            }
          }
        }
LABEL_22:
        uint64_t v65 = (v29 - 1) & v29;
        unint64_t v27 = __clz(__rbit64(v29)) + (v15 << 6);
      }
      uint64_t v31 = *(void *)(v7 + 48) + 88 * v27;
      uint64_t v32 = *(void *)v31;
      uint64_t v66 = *(void *)(v31 + 8);
      uint64_t v33 = *(void *)(v31 + 16);
      uint64_t v63 = *(void *)(v31 + 24);
      uint64_t v64 = v33;
      long long v67 = *(_OWORD *)(v31 + 32);
      uint64_t v34 = *(void *)(v31 + 48);
      uint64_t v61 = *(void *)(v31 + 56);
      uint64_t v62 = v34;
      uint64_t v35 = *(void *)(v31 + 64);
      uint64_t v36 = *(void *)(v31 + 72);
      uint64_t v59 = *(void *)(v31 + 80);
      uint64_t v60 = v36;
      sub_2409556F8();
      sub_240955708();
      uint64_t v37 = *(void *)(v32 + 16);
      if (v37)
      {
        int64_t v58 = v15;
        uint64_t v38 = v32 + ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80));
        uint64_t v39 = *(void *)(v51 + 72);
        uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 16);
        uint64_t v57 = v32;
        swift_bridgeObjectRetain();
        int64_t v41 = v47;
        uint64_t v42 = v49;
        uint64_t v43 = v50;
        do
        {
          v40(v42, v38, v43);
          sub_2409469DC(&qword_268C90E70, &qword_268C90E78);
          sub_240954708();
          (*v41)(v42, v43);
          v38 += v39;
          --v37;
        }
        while (v37);
        uint64_t v32 = v57;
        swift_bridgeObjectRelease();
        uint64_t v9 = v52;
        int64_t v15 = v58;
      }
      uint64_t v16 = v64;
      swift_bridgeObjectRetain();
      sub_240954868();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v17 = v63;
      sub_240954868();
      swift_bridgeObjectRelease();
      uint64_t v18 = *((void *)&v67 + 1);
      swift_bridgeObjectRetain();
      sub_24088E9F4((uint64_t)v68, v18);
      swift_bridgeObjectRelease();
      uint64_t v19 = v61;
      swift_bridgeObjectRetain();
      uint64_t v20 = v62;
      sub_240954868();
      swift_bridgeObjectRelease();
      sub_240955738();
      uint64_t v21 = v59;
      swift_bridgeObjectRetain();
      int64_t v22 = v15;
      uint64_t v23 = v60;
      sub_240954868();
      swift_bridgeObjectRelease();
      sub_240955748();
      uint64_t v24 = v55;
      unint64_t result = sub_240955168();
      *(void *)(v24 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      uint64_t v25 = *(void *)(v9 + 48) + 88 * result;
      unint64_t v13 = v65;
      uint64_t v26 = v66;
      *(void *)uint64_t v25 = v32;
      *(void *)(v25 + 8) = v26;
      *(void *)(v25 + 16) = v16;
      *(void *)(v25 + 24) = v17;
      uint64_t v7 = v56;
      *(_OWORD *)(v25 + 32) = v67;
      *(void *)(v25 + 48) = v20;
      *(void *)(v25 + 56) = v19;
      *(void *)(v25 + 64) = v35;
      *(void *)(v25 + 72) = v23;
      *(void *)(v25 + 80) = v21;
      int64_t v15 = v22;
      ++*(void *)(v9 + 16);
    }
  }
  unint64_t result = swift_release();
  *uint64_t v1 = v9;
  return result;
}

uint64_t sub_240943C2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SharedConceptFeedItemData(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_240946948();
  uint64_t v7 = sub_240955258();
  uint64_t v8 = v7;
  if (*(void *)(v6 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v10 = *(void *)(v6 + 56);
    uint64_t v24 = v0;
    uint64_t v25 = (void *)(v6 + 56);
    if (v9 < 64) {
      uint64_t v11 = ~(-1 << v9);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & v10;
    int64_t v26 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = v7 + 56;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v15 << 6);
      }
      else
      {
        int64_t v20 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v20 >= v26) {
          goto LABEL_23;
        }
        unint64_t v21 = v25[v20];
        ++v15;
        if (!v21)
        {
          int64_t v15 = v20 + 1;
          if (v20 + 1 >= v26) {
            goto LABEL_23;
          }
          unint64_t v21 = v25[v15];
          if (!v21)
          {
            int64_t v15 = v20 + 2;
            if (v20 + 2 >= v26) {
              goto LABEL_23;
            }
            unint64_t v21 = v25[v15];
            if (!v21)
            {
              int64_t v22 = v20 + 3;
              if (v22 >= v26)
              {
LABEL_23:
                swift_release();
                uint64_t v23 = 1 << *(unsigned char *)(v6 + 32);
                if (v23 > 63) {
                  bzero(v25, ((unint64_t)(v23 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v25 = -1 << v23;
                }
                uint64_t v1 = v24;
                *(void *)(v6 + 16) = 0;
                break;
              }
              unint64_t v21 = v25[v22];
              if (!v21)
              {
                while (1)
                {
                  int64_t v15 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_29;
                  }
                  if (v15 >= v26) {
                    goto LABEL_23;
                  }
                  unint64_t v21 = v25[v15];
                  ++v22;
                  if (v21) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v15 = v22;
            }
          }
        }
LABEL_22:
        unint64_t v12 = (v21 - 1) & v21;
        unint64_t v17 = __clz(__rbit64(v21)) + (v15 << 6);
      }
      uint64_t v18 = *(void *)(v3 + 72);
      sub_240824600(*(void *)(v6 + 48) + v18 * v17, (uint64_t)v5, type metadata accessor for SharedConceptFeedItemData);
      sub_2409556F8();
      sub_2408857EC((uint64_t)v27);
      sub_240955748();
      unint64_t v19 = sub_240955168();
      *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = sub_240824600((uint64_t)v5, *(void *)(v8 + 48) + v19 * v18, type metadata accessor for SharedConceptFeedItemData);
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v8;
  return result;
}

uint64_t sub_240943F48(uint64_t a1, uint64_t (*a2)(void), void (*a3)(void), void (*a4)(uint64_t))
{
  uint64_t v47 = a4;
  uint64_t v6 = v4;
  uint64_t v50 = a2(0);
  uint64_t v7 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v49 = (char *)&v41 - v8;
  uint64_t v9 = *v4;
  a3(0);
  uint64_t v10 = sub_240955258();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 56);
    uint64_t v44 = (void *)(v9 + 56);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    uint64_t v42 = v6;
    int64_t v43 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v46 = v7;
    uint64_t v16 = v10 + 56;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    uint64_t v45 = v11;
    uint64_t v19 = v50;
    uint64_t v20 = v11;
    while (1)
    {
      if (v15)
      {
        unint64_t v22 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        int64_t v48 = v18;
        unint64_t v23 = v22 | (v18 << 6);
      }
      else
      {
        int64_t v24 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v24 >= v43) {
          goto LABEL_33;
        }
        unint64_t v25 = v44[v24];
        int64_t v26 = v18 + 1;
        if (!v25)
        {
          int64_t v26 = v18 + 2;
          if (v18 + 2 >= v43) {
            goto LABEL_33;
          }
          unint64_t v25 = v44[v26];
          if (!v25)
          {
            int64_t v26 = v18 + 3;
            if (v18 + 3 >= v43) {
              goto LABEL_33;
            }
            unint64_t v25 = v44[v26];
            if (!v25)
            {
              uint64_t v27 = v18 + 4;
              if (v18 + 4 >= v43)
              {
LABEL_33:
                swift_release();
                uint64_t v6 = v42;
                uint64_t v40 = 1 << *(unsigned char *)(v9 + 32);
                if (v40 > 63) {
                  bzero(v44, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v44 = -1 << v40;
                }
                *(void *)(v9 + 16) = 0;
                break;
              }
              unint64_t v25 = v44[v27];
              if (!v25)
              {
                while (1)
                {
                  int64_t v26 = v27 + 1;
                  if (__OFADD__(v27, 1)) {
                    goto LABEL_39;
                  }
                  if (v26 >= v43) {
                    goto LABEL_33;
                  }
                  unint64_t v25 = v44[v26];
                  ++v27;
                  if (v25) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v26 = v18 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v15 = (v25 - 1) & v25;
        int64_t v48 = v26;
        unint64_t v23 = __clz(__rbit64(v25)) + (v26 << 6);
      }
      uint64_t v28 = v9;
      uint64_t v29 = *(void *)(v9 + 48);
      uint64_t v30 = *(void *)(v46 + 72);
      uint64_t v31 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v46 + 32);
      uint64_t v32 = v31(v49, v29 + v30 * v23, v19);
      v47(v32);
      uint64_t result = sub_2409546F8();
      uint64_t v11 = v20;
      uint64_t v33 = -1 << *(unsigned char *)(v20 + 32);
      unint64_t v34 = result & ~v33;
      unint64_t v35 = v34 >> 6;
      if (((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6))) != 0)
      {
        unint64_t v21 = __clz(__rbit64((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v36 = 0;
        unint64_t v37 = (unint64_t)(63 - v33) >> 6;
        do
        {
          if (++v35 == v37 && (v36 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v38 = v35 == v37;
          if (v35 == v37) {
            unint64_t v35 = 0;
          }
          v36 |= v38;
          uint64_t v39 = *(void *)(v16 + 8 * v35);
        }
        while (v39 == -1);
        unint64_t v21 = __clz(__rbit64(~v39)) + (v35 << 6);
      }
      *(void *)(v16 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      uint64_t result = v31((char *)(*(void *)(v20 + 48) + v21 * v30), (unint64_t)v49, v50);
      ++*(void *)(v20 + 16);
      uint64_t v9 = v28;
      int64_t v18 = v48;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v6 = v11;
  return result;
}

uint64_t sub_24094432C(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  if (a2)
  {
    sub_24083F6E0(0, a3, a4, a5, a6);
    uint64_t v10 = sub_240955268();
    uint64_t v23 = v10;
    sub_240955188();
    if (sub_2409551F8())
    {
      sub_24083EDCC(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v10 = v23;
        unint64_t v17 = *(void *)(v23 + 16);
        if (*(void *)(v23 + 24) <= v17)
        {
          sub_24081D23C(v17 + 1, a3, a4, a5, a6);
          uint64_t v10 = v23;
        }
        uint64_t result = sub_240954FB8();
        uint64_t v12 = v10 + 56;
        uint64_t v13 = -1 << *(unsigned char *)(v10 + 32);
        unint64_t v14 = result & ~v13;
        unint64_t v15 = v14 >> 6;
        if (((-1 << v14) & ~*(void *)(v10 + 56 + 8 * (v14 >> 6))) != 0)
        {
          unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 56 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v18 = 0;
          unint64_t v19 = (unint64_t)(63 - v13) >> 6;
          do
          {
            if (++v15 == v19 && (v18 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v20 = v15 == v19;
            if (v15 == v19) {
              unint64_t v15 = 0;
            }
            v18 |= v20;
            uint64_t v21 = *(void *)(v12 + 8 * v15);
          }
          while (v21 == -1);
          unint64_t v16 = __clz(__rbit64(~v21)) + (v15 << 6);
        }
        *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        *(void *)(*(void *)(v10 + 48) + 8 * v16) = v22;
        ++*(void *)(v10 + 16);
      }
      while (sub_2409551F8());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE88];
  }
  return v10;
}

unint64_t sub_240944554(uint64_t a1, uint64_t a2)
{
  sub_240954FB8();
  unint64_t result = sub_240955168();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_2409445D8(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_240943340();
  }
  else
  {
    if (v10 > v9)
    {
      unint64_t result = (uint64_t)sub_24094194C();
      goto LABEL_22;
    }
    sub_2409423EC();
  }
  uint64_t v11 = *v4;
  sub_2409556F8();
  sub_240954868();
  unint64_t result = sub_240955748();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (unint64_t result = sub_240955618(), (result & 1) != 0))
    {
LABEL_21:
      unint64_t result = sub_240955668();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        char v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          unint64_t result = sub_240955618();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_240944774(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = sub_2409521B8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v29 = v3;
  uint64_t v30 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  uint64_t v12 = v10 + 1;
  if (a3)
  {
    sub_240943F48(v12, MEMORY[0x263F45738], sub_2409468AC, (void (*)(uint64_t))sub_240946844);
  }
  else
  {
    if (v11 > v10)
    {
      sub_240942138(MEMORY[0x263F45738], sub_2409468AC);
      goto LABEL_12;
    }
    sub_240942FB0(v12, MEMORY[0x263F45738], sub_2409468AC, (void (*)(uint64_t))sub_240946844);
  }
  uint64_t v13 = *v3;
  sub_240946844();
  uint64_t v14 = sub_2409546F8();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    char v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v9, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_240946878();
      char v22 = sub_240954778();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v9, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_240955668();
  __break(1u);
  return result;
}

uint64_t sub_240944A54(uint64_t *a1, unint64_t a2, char a3)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F08F88];
  sub_24082EFE8(0, &qword_26AFCE250, (unint64_t *)&qword_26AFCDF30, 0x263F0A460, MEMORY[0x263F08F88]);
  uint64_t v114 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)&v101 - v10;
  sub_240851D44();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v111 = (uint64_t)&v101 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24089214C();
  uint64_t v113 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v116 = (uint64_t)&v101 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = (int *)type metadata accessor for SharedConceptCodedValue(0);
  uint64_t v110 = *((void *)v119 - 1);
  uint64_t v16 = MEMORY[0x270FA5388](v119);
  uint64_t v128 = (uint64_t *)((char *)&v101 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v16);
  uint64_t v126 = (uint64_t *)((char *)&v101 - v18);
  sub_24082EFE8(0, (unint64_t *)&qword_268C90E10, &qword_268C90E18, 0x263F0A4A0, v7);
  uint64_t v20 = v19;
  uint64_t v118 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v101 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v21);
  uint64_t v26 = (char *)&v101 - v25;
  unint64_t v27 = *(void *)(*v3 + 16);
  unint64_t v28 = *(void *)(*v3 + 24);
  uint64_t v115 = v3;
  if (v28 > v27 && (a3 & 1) != 0) {
    goto LABEL_82;
  }
  if (a3)
  {
    sub_24094361C();
  }
  else
  {
    if (v28 > v27)
    {
      uint64_t result = (uint64_t)sub_240941AFC();
LABEL_82:
      uint64_t v93 = *v115;
      *(void *)(v93 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      uint64_t v94 = *(void *)(v93 + 48) + 88 * a2;
      long long v95 = *((_OWORD *)a1 + 1);
      *(_OWORD *)uint64_t v94 = *(_OWORD *)a1;
      *(_OWORD *)(v94 + 16) = v95;
      *(void *)(v94 + 80) = a1[10];
      long long v96 = *((_OWORD *)a1 + 4);
      long long v97 = *((_OWORD *)a1 + 2);
      *(_OWORD *)(v94 + 48) = *((_OWORD *)a1 + 3);
      *(_OWORD *)(v94 + 64) = v96;
      *(_OWORD *)(v94 + 32) = v97;
      uint64_t v98 = *(void *)(v93 + 16);
      BOOL v99 = __OFADD__(v98, 1);
      uint64_t v100 = v98 + 1;
      if (!v99)
      {
        *(void *)(v93 + 16) = v100;
        return result;
      }
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
      goto LABEL_88;
    }
    sub_240942698();
  }
  uint64_t v29 = *v3;
  sub_2409556F8();
  sub_240886A38((uint64_t)v143);
  uint64_t result = sub_240955748();
  uint64_t v30 = -1 << *(unsigned char *)(v29 + 32);
  a2 = result & ~v30;
  uint64_t v31 = v29 + 56;
  if (((*(void *)(v29 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_82;
  }
  uint64_t v32 = v29;
  unint64_t v103 = v11;
  uint64_t v33 = ~v30;
  uint64_t v34 = *a1;
  uint64_t v140 = v118 + 16;
  unint64_t v35 = (void (**)(char *, uint64_t))(v118 + 8);
  uint64_t v142 = *(void *)(v34 + 16);
  long long v106 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  char v102 = (void (**)(char *, uint64_t, uint64_t))(v9 + 32);
  uint64_t v104 = (void (**)(uint64_t, uint64_t))(v9 + 8);
  uint64_t v139 = v34;
  uint64_t v133 = v23;
  uint64_t v127 = a1;
  uint64_t v123 = v32;
  uint64_t v122 = v31;
  uint64_t v121 = ~v30;
  uint64_t v112 = v26;
  while (1)
  {
    uint64_t v36 = *(void *)(v32 + 48) + 88 * a2;
    uint64_t v37 = *(void *)v36;
    if (*(void *)(*(void *)v36 + 16) != v142) {
      goto LABEL_12;
    }
    unint64_t v132 = a2;
    uint64_t v38 = *(void *)(v36 + 16);
    uint64_t v134 = *(void *)(v36 + 8);
    uint64_t v39 = *(void *)(v36 + 32);
    uint64_t v130 = *(void *)(v36 + 24);
    uint64_t v40 = *(void *)(v36 + 40);
    uint64_t v125 = *(void *)(v36 + 48);
    uint64_t v41 = *(void *)(v36 + 56);
    double v42 = *(double *)(v36 + 64);
    uint64_t v44 = *(void *)(v36 + 72);
    uint64_t v43 = *(void *)(v36 + 80);
    uint64_t v124 = v44;
    uint64_t v137 = v38;
    uint64_t v138 = v43;
    uint64_t v141 = v37;
    uint64_t v135 = v40;
    uint64_t v136 = v39;
    uint64_t v131 = v41;
    if (!v142 || v37 == v34) {
      break;
    }
    unint64_t v45 = (*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80);
    uint64_t v46 = *(void *)(v118 + 72);
    uint64_t v47 = *(void (**)(char *, unint64_t, uint64_t))(v118 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int64_t v48 = v133;
    swift_bridgeObjectRetain();
    uint64_t v26 = v112;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v49 = 0;
    while (1)
    {
      v47(v26, v141 + v45, v20);
      if (v49 >= *(void *)(v34 + 16))
      {
        __break(1u);
LABEL_85:
        __break(1u);
        goto LABEL_86;
      }
      v47(v48, v34 + v45, v20);
      sub_2409469DC(&qword_268C90E98, &qword_268C90EA0);
      char v50 = sub_240954778();
      uint64_t v51 = *v35;
      (*v35)(v48, v20);
      v51(v26, v20);
      if ((v50 & 1) == 0) {
        break;
      }
      ++v49;
      v45 += v46;
      uint64_t v34 = v139;
      if (v142 == v49) {
        goto LABEL_22;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1 = v127;
    uint64_t v34 = v139;
LABEL_11:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    a2 = v132;
    uint64_t v32 = v123;
    uint64_t v31 = v122;
    uint64_t v33 = v121;
LABEL_12:
    a2 = (a2 + 1) & v33;
    if (((*(void *)(v31 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
      goto LABEL_82;
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_22:
  a1 = v127;
  BOOL v52 = v134 == v127[1] && v137 == v127[2];
  if (!v52 && (sub_240955618() & 1) == 0) {
    goto LABEL_10;
  }
  uint64_t v53 = v135;
  BOOL v54 = v130 == a1[3] && v136 == a1[4];
  if (!v54 && (sub_240955618() & 1) == 0) {
    goto LABEL_10;
  }
  uint64_t v55 = *(void *)(v53 + 16);
  uint64_t v120 = a1[5];
  if (v55 != *(void *)(v120 + 16)) {
    goto LABEL_10;
  }
  uint64_t v56 = v126;
  if (v55 && v53 != v120)
  {
    unint64_t v57 = 0;
    unint64_t v58 = (*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80);
    uint64_t v109 = v53 + v58;
    uint64_t v107 = v120 + v58;
    uint64_t v108 = *(void *)(v110 + 72);
    uint64_t v105 = v55;
    do
    {
      unint64_t v117 = v57;
      uint64_t v59 = v108 * v57;
      sub_24083D548(v109 + v108 * v57, (uint64_t)v56, type metadata accessor for SharedConceptCodedValue);
      if (v117 >= *(void *)(v120 + 16)) {
        goto LABEL_87;
      }
      uint64_t v60 = v107 + v59;
      uint64_t v61 = v128;
      sub_24083D548(v60, (uint64_t)v128, type metadata accessor for SharedConceptCodedValue);
      uint64_t v62 = *v61;
      uint64_t v130 = *v56;
      uint64_t v63 = *(void *)(v62 + 16);
      uint64_t v134 = *(void *)(v130 + 16);
      if (v134 != v63) {
        goto LABEL_80;
      }
      if (v134 && v130 != v62)
      {
        unint64_t v64 = 0;
        unint64_t v65 = (*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80);
        uint64_t v129 = *(void *)(v118 + 72);
        uint64_t v66 = *(void (**)(char *, unint64_t, uint64_t))(v118 + 16);
        do
        {
          v66(v26, v130 + v65, v20);
          if (v64 >= *(void *)(v62 + 16)) {
            goto LABEL_85;
          }
          long long v67 = v133;
          v66(v133, v62 + v65, v20);
          sub_2409469DC(&qword_268C90E98, &qword_268C90EA0);
          char v68 = sub_240954778();
          uint64_t v69 = *v35;
          (*v35)(v67, v20);
          v69(v26, v20);
          if ((v68 & 1) == 0) {
            goto LABEL_80;
          }
          ++v64;
          v65 += v129;
        }
        while (v134 != v64);
      }
      uint64_t v70 = v119[5];
      uint64_t v71 = (uint64_t)v128 + v70;
      uint64_t v72 = v116;
      uint64_t v73 = v116 + *(int *)(v113 + 48);
      sub_24083D548((uint64_t)v126 + v70, v116, (uint64_t (*)(void))sub_240851D44);
      sub_24083D548(v71, v73, (uint64_t (*)(void))sub_240851D44);
      unint64_t v74 = *v106;
      uint64_t v75 = v114;
      if ((*v106)(v72, 1, v114) == 1)
      {
        if (v74(v73, 1, v75) != 1) {
          goto LABEL_79;
        }
        sub_24083B2F4(v72, (uint64_t (*)(void))sub_240851D44);
      }
      else
      {
        uint64_t v76 = v111;
        sub_24083D548(v72, v111, (uint64_t (*)(void))sub_240851D44);
        if (v74(v73, 1, v75) == 1)
        {
          (*v104)(v76, v75);
LABEL_79:
          sub_24083B2F4(v72, (uint64_t (*)(void))sub_24089214C);
LABEL_80:
          sub_24083B2F4((uint64_t)v128, type metadata accessor for SharedConceptCodedValue);
          sub_24083B2F4((uint64_t)v126, type metadata accessor for SharedConceptCodedValue);
          a1 = v127;
LABEL_81:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v34 = v139;
          goto LABEL_11;
        }
        uint64_t v77 = v103;
        (*v102)(v103, v73, v75);
        sub_24091A028();
        char v78 = sub_240954778();
        uint64_t v79 = *v104;
        (*v104)((uint64_t)v77, v75);
        v79(v76, v75);
        sub_24083B2F4(v116, (uint64_t (*)(void))sub_240851D44);
        if ((v78 & 1) == 0) {
          goto LABEL_80;
        }
      }
      uint64_t v80 = v119[6];
      uint64_t v81 = (uint64_t *)((char *)v126 + v80);
      uint64_t v82 = *(uint64_t *)((char *)v126 + v80 + 8);
      uint64_t v83 = (uint64_t *)((char *)v128 + v80);
      uint64_t v84 = v83[1];
      if (v82)
      {
        if (!v84 || (*v81 != *v83 || v82 != v84) && (sub_240955618() & 1) == 0) {
          goto LABEL_80;
        }
      }
      else if (v84)
      {
        goto LABEL_80;
      }
      uint64_t v85 = v119[7];
      uint64_t v56 = v126;
      uint64_t v86 = (uint64_t *)((char *)v126 + v85);
      uint64_t v87 = *(uint64_t *)((char *)v126 + v85 + 8);
      char v88 = (uint64_t *)((char *)v128 + v85);
      uint64_t v89 = v88[1];
      char v90 = v89 == 0;
      if (v87)
      {
        if (!v89) {
          goto LABEL_80;
        }
        if (*v86 == *v88 && v87 == v89)
        {
          sub_24083B2F4((uint64_t)v128, type metadata accessor for SharedConceptCodedValue);
          uint64_t v56 = v126;
          sub_24083B2F4((uint64_t)v126, type metadata accessor for SharedConceptCodedValue);
          a1 = v127;
          goto LABEL_64;
        }
        char v90 = sub_240955618();
        a1 = v127;
        uint64_t v56 = v126;
      }
      else
      {
        a1 = v127;
      }
      sub_24083B2F4((uint64_t)v128, type metadata accessor for SharedConceptCodedValue);
      sub_24083B2F4((uint64_t)v56, type metadata accessor for SharedConceptCodedValue);
      if ((v90 & 1) == 0) {
        goto LABEL_81;
      }
LABEL_64:
      unint64_t v57 = v117 + 1;
    }
    while (v117 + 1 != v105);
  }
  BOOL v91 = v125 == a1[6] && v131 == a1[7];
  if ((uint64_t v34 = v139, !v91) && (sub_240955618() & 1) == 0 || v42 != *((double *)a1 + 8))
  {
LABEL_10:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if (v124 != a1[9] || v138 != a1[10])
  {
    char v92 = sub_240955618();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    a2 = v132;
    uint64_t v32 = v123;
    uint64_t v31 = v122;
    uint64_t v33 = v121;
    if ((v92 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_89;
  }
LABEL_88:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_89:
  uint64_t result = sub_240955668();
  __break(1u);
  return result;
}

uint64_t sub_240945978(void *a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for SharedConceptFeedItemData(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v14 = v9;
    goto LABEL_14;
  }
  if (a3)
  {
    sub_240943C2C();
    goto LABEL_8;
  }
  if (v13 <= v12)
  {
    sub_240942CD8();
LABEL_8:
    uint64_t v15 = *v4;
    sub_2409556F8();
    sub_2408857EC((uint64_t)v27);
    uint64_t v16 = sub_240955748();
    uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
    a2 = v16 & ~v17;
    if ((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v26 = v8;
      uint64_t v18 = ~v17;
      uint64_t v14 = v9;
      uint64_t v19 = *(void *)(v9 + 72);
      while (1)
      {
        sub_24083D548(*(void *)(v15 + 48) + v19 * a2, (uint64_t)v11, type metadata accessor for SharedConceptFeedItemData);
        BOOL v20 = sub_24088F74C(v11, a1);
        sub_24083B2F4((uint64_t)v11, type metadata accessor for SharedConceptFeedItemData);
        if (v20) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v14 = v9;
  sub_240941D24();
LABEL_14:
  uint64_t v21 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_240824600((uint64_t)a1, *(void *)(v21 + 48) + *(void *)(v14 + 72) * a2, type metadata accessor for SharedConceptFeedItemData);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_240955668();
  __break(1u);
  return result;
}

uint64_t sub_240945BC8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = sub_240951E08();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v29 = v3;
  uint64_t v30 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  uint64_t v12 = v10 + 1;
  if (a3)
  {
    sub_240943F48(v12, MEMORY[0x263F45618], sub_240946914, (void (*)(uint64_t))sub_24093E240);
  }
  else
  {
    if (v11 > v10)
    {
      sub_240942138(MEMORY[0x263F45618], sub_240946914);
      goto LABEL_12;
    }
    sub_240942FB0(v12, MEMORY[0x263F45618], sub_240946914, (void (*)(uint64_t))sub_24093E240);
  }
  uint64_t v13 = *v3;
  sub_24093E240();
  uint64_t v14 = sub_2409546F8();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    BOOL v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    uint64_t v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v9, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_2409468E0();
      char v22 = sub_240954778();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v9, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_240955668();
  __break(1u);
  return result;
}

uint64_t sub_240945EA8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = sub_2409526C8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v29 = v3;
  uint64_t v30 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  uint64_t v12 = v10 + 1;
  if (a3)
  {
    sub_240943F48(v12, MEMORY[0x263F45F38], (void (*)(void))sub_240919F34, (void (*)(uint64_t))sub_24093A1C0);
  }
  else
  {
    if (v11 > v10)
    {
      sub_240942138(MEMORY[0x263F45F38], (void (*)(void))sub_240919F34);
      goto LABEL_12;
    }
    sub_240942FB0(v12, MEMORY[0x263F45F38], (void (*)(void))sub_240919F34, (void (*)(uint64_t))sub_24093A1C0);
  }
  uint64_t v13 = *v3;
  sub_24093A1C0();
  uint64_t v14 = sub_2409546F8();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    BOOL v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    uint64_t v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v9, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_240946594();
      char v22 = sub_240954778();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v9, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_240955668();
  __break(1u);
  return result;
}

uint64_t sub_240946188(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = sub_240951A98();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v29 = v3;
  uint64_t v30 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  uint64_t v12 = v10 + 1;
  if (a3)
  {
    sub_240943F48(v12, MEMORY[0x263F07508], sub_2409464F0, (void (*)(uint64_t))sub_240946488);
  }
  else
  {
    if (v11 > v10)
    {
      sub_240942138(MEMORY[0x263F07508], sub_2409464F0);
      goto LABEL_12;
    }
    sub_240942FB0(v12, MEMORY[0x263F07508], sub_2409464F0, (void (*)(uint64_t))sub_240946488);
  }
  uint64_t v13 = *v3;
  sub_240946488();
  uint64_t v14 = sub_2409546F8();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    BOOL v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    uint64_t v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v9, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_2409464BC();
      char v22 = sub_240954778();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v9, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_240955668();
  __break(1u);
  return result;
}

id sub_240946470(id a1, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_240820D40(a1);
  }
  return a1;
}

uint64_t sub_240946488()
{
  return sub_24083C8FC(&qword_26AFCC5F0, MEMORY[0x263F07508]);
}

uint64_t sub_2409464BC()
{
  return sub_24083C8FC(&qword_268C914A8, MEMORY[0x263F07508]);
}

void sub_2409464F0(uint64_t a1)
{
}

void sub_240946524(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_240955288();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_240946594()
{
  return sub_24083C8FC(&qword_26AFD03E8, MEMORY[0x263F45F38]);
}

uint64_t sub_2409465C8()
{
  uint64_t v1 = (int *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_240951FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_2409466C4@<X0>(unsigned __int8 *a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(uint64_t ***)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24093F5EC(a1, v2 + v6, v7, a2);
}

uint64_t sub_240946770()
{
  return sub_240954328();
}

uint64_t sub_240946798()
{
  return sub_240954328();
}

uint64_t sub_2409467C4()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24094680C()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240946844()
{
  return sub_24083C8FC(&qword_268C90A08, MEMORY[0x263F45738]);
}

uint64_t sub_240946878()
{
  return sub_24083C8FC(&qword_268C90A10, MEMORY[0x263F45738]);
}

void sub_2409468AC(uint64_t a1)
{
}

uint64_t sub_2409468E0()
{
  return sub_24083C8FC(&qword_268C91FA0, MEMORY[0x263F45618]);
}

void sub_240946914(uint64_t a1)
{
}

void sub_240946948()
{
  if (!qword_268C91FB0)
  {
    type metadata accessor for SharedConceptFeedItemData(255);
    sub_24083C8FC(&qword_268C91FB8, (void (*)(uint64_t))type metadata accessor for SharedConceptFeedItemData);
    unint64_t v0 = sub_240955288();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268C91FB0);
    }
  }
}

uint64_t sub_2409469DC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24082EFE8(255, (unint64_t *)&qword_268C90E10, &qword_268C90E18, 0x263F0A4A0, MEMORY[0x263F08F88]);
    sub_24083F780(a2, &qword_268C90E18);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for AccountUpgradeSummaryTileView(uint64_t a1)
{
  return sub_24082A2AC(a1, (uint64_t *)&unk_268C91FC0);
}

uint64_t sub_240946ABC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_240946AFC(uint64_t a1, char a2)
{
  uint64_t v4 = sub_240954BA8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24094D194(0, &qword_268C914C0, MEMORY[0x263F45E58], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v28 = (char *)&v25 - v9;
  uint64_t v10 = sub_240952518();
  uint64_t v26 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_240952558();
  uint64_t v27 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2409536C8();
  uint64_t v16 = (void (*)(uint64_t))sub_2409536D8();
  v16(a1);
  if ((a2 & 1) != 0
    && (uint64_t v17 = (void *)sub_240953688(),
        id v18 = objc_msgSend(v17, sel_image),
        v17,
        v18))
  {
    (*(void (**)(char *, void, uint64_t))(v26 + 104))(v12, *MEMORY[0x263F45E50], v10);
    id v19 = v18;
    sub_240952538();
    BOOL v20 = (void *)sub_240953688();
    uint64_t v22 = v27;
    uint64_t v21 = (uint64_t)v28;
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v28, v15, v13);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(v21, 0, 1, v13);
    sub_240954BB8();

    sub_24094D8DC(v21, &qword_268C914C0, MEMORY[0x263F45E58]);
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v15, v13);
  }
  else
  {
    uint64_t v24 = (void *)sub_240953688();
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F461E8], v4);
    sub_240954B98();

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

id sub_240946EB0(double a1, double a2, double a3, double a4)
{
  v17.receiver = v4;
  v17.super_class = (Class)type metadata accessor for AccountUpgradeSummaryTileView(0);
  id v9 = objc_msgSendSuper2(&v17, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v10 = (void *)sub_240953688();
  id v11 = objc_msgSend(v10, sel_widthAnchor);

  id v12 = objc_msgSend(v11, sel_constraintEqualToConstant_, 45.0);
  objc_msgSend(v12, sel_setActive_, 1);

  uint64_t v13 = (void *)sub_240953688();
  id v14 = objc_msgSend(v13, sel_heightAnchor);

  id v15 = objc_msgSend(v14, sel_constraintEqualToConstant_, 45.0);
  objc_msgSend(v15, sel_setActive_, 1);

  return v9;
}

id sub_240947008(double a1, double a2, double a3, double a4)
{
  return sub_240946EB0(a1, a2, a3, a4);
}

void sub_24094702C()
{
}

void sub_240947088()
{
}

id sub_2409470B8()
{
  return sub_24094BE68(type metadata accessor for AccountUpgradeSummaryTileView);
}

uint64_t sub_2409470D0()
{
  return type metadata accessor for AccountUpgradeSummaryTileView(0);
}

uint64_t sub_2409470D8()
{
  uint64_t v1 = sub_2409533C8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t))MEMORY[0x263F461A8];
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24094D194(0, &qword_268C90C88, MEMORY[0x263F461A8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  id v9 = (char *)&v21 - v8;
  sub_24094D194(0, &qword_26AFCE168, MEMORY[0x263F45B10], v6);
  MEMORY[0x270FA5388](v10 - 8);
  id v12 = (char *)&v21 - v11;
  uint64_t v13 = sub_240953F38();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v0 + OBJC_IVAR____TtC13HealthRecords53AccountStatusUpgradeSummaryTileFeedItemViewController_accountData;
  swift_beginAccess();
  sub_24094D2F0(v17, (uint64_t)v9, &qword_268C90C88, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v9, 1, v1))
  {
    sub_24094D8DC((uint64_t)v9, &qword_268C90C88, MEMORY[0x263F461A8]);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
LABEL_4:
    int v18 = *MEMORY[0x263F45AF8];
    (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x263F45AF8], v13);
    sub_24094D8DC((uint64_t)v12, &qword_26AFCE168, MEMORY[0x263F45B10]);
    goto LABEL_5;
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v9, v1);
  sub_24094D8DC((uint64_t)v9, &qword_268C90C88, MEMORY[0x263F461A8]);
  sub_240953388();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1) {
    goto LABEL_4;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  int v18 = *MEMORY[0x263F45AF8];
LABEL_5:
  int v19 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v16, v13);
  if (v19 != v18)
  {
    if (v19 == *MEMORY[0x263F45B00]) {
      return 3;
    }
    if (v19 == *MEMORY[0x263F45B08]) {
      return 4;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  return 2;
}

uint64_t sub_2409475B4()
{
  uint64_t v1 = sub_240953F38();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v38 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24094D25C();
  uint64_t v40 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v41 = (uint64_t)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2409533C8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t (*)(uint64_t))MEMORY[0x263F461A8];
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24094D194(0, &qword_268C90C88, MEMORY[0x263F461A8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v37 - v13;
  sub_24094D194(0, &qword_26AFCE168, MEMORY[0x263F45B10], v11);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v39 = (uint64_t)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  BOOL v20 = (char *)&v37 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v37 - v21;
  uint64_t v23 = v0 + OBJC_IVAR____TtC13HealthRecords53AccountStatusUpgradeSummaryTileFeedItemViewController_accountData;
  swift_beginAccess();
  sub_24094D2F0(v23, (uint64_t)v14, &qword_268C90C88, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v14, 1, v6))
  {
    sub_24094D8DC((uint64_t)v14, &qword_268C90C88, MEMORY[0x263F461A8]);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v22, 1, 1, v1);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v14, v6);
    sub_24094D8DC((uint64_t)v14, &qword_268C90C88, MEMORY[0x263F461A8]);
    sub_240953388();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v20, *MEMORY[0x263F45B08], v1);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v2 + 56))(v20, 0, 1, v1);
  uint64_t v24 = v41;
  uint64_t v25 = v41 + *(int *)(v40 + 48);
  uint64_t v26 = (uint64_t (*)(uint64_t))MEMORY[0x263F45B10];
  sub_24094D2F0((uint64_t)v22, v41, &qword_26AFCE168, MEMORY[0x263F45B10]);
  sub_24094D2F0((uint64_t)v20, v25, &qword_26AFCE168, v26);
  uint64_t v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v27(v24, 1, v1) != 1)
  {
    uint64_t v30 = v39;
    sub_24094D2F0(v24, v39, &qword_26AFCE168, MEMORY[0x263F45B10]);
    if (v27(v25, 1, v1) != 1)
    {
      uint64_t v32 = v38;
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v38, v25, v1);
      sub_24094D0B0(&qword_268C90C98, MEMORY[0x263F45B10]);
      char v29 = sub_240954778();
      uint64_t v33 = *(void (**)(char *, uint64_t))(v2 + 8);
      v33(v32, v1);
      uint64_t v34 = v30;
      unint64_t v35 = (uint64_t (*)(uint64_t))MEMORY[0x263F45B10];
      sub_24094D8DC((uint64_t)v20, &qword_26AFCE168, MEMORY[0x263F45B10]);
      sub_24094D8DC((uint64_t)v22, &qword_26AFCE168, v35);
      v33((char *)v34, v1);
      sub_24094D8DC(v24, &qword_26AFCE168, v35);
      return v29 & 1;
    }
    uint64_t v31 = (uint64_t (*)(uint64_t))MEMORY[0x263F45B10];
    sub_24094D8DC((uint64_t)v20, &qword_26AFCE168, MEMORY[0x263F45B10]);
    sub_24094D8DC((uint64_t)v22, &qword_26AFCE168, v31);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v30, v1);
    goto LABEL_9;
  }
  uint64_t v28 = (uint64_t (*)(uint64_t))MEMORY[0x263F45B10];
  sub_24094D8DC((uint64_t)v20, &qword_26AFCE168, MEMORY[0x263F45B10]);
  sub_24094D8DC((uint64_t)v22, &qword_26AFCE168, v28);
  if (v27(v25, 1, v1) != 1)
  {
LABEL_9:
    sub_24094D370(v24, (uint64_t (*)(void))sub_24094D25C);
    char v29 = 0;
    return v29 & 1;
  }
  sub_24094D8DC(v24, &qword_26AFCE168, MEMORY[0x263F45B10]);
  char v29 = 1;
  return v29 & 1;
}

uint64_t sub_240947C68()
{
  uint64_t v1 = v0;
  v22[1] = swift_getObjectType();
  uint64_t v2 = sub_2409540C8();
  void v22[2] = *(void *)(v2 - 8);
  v22[3] = v2;
  MEMORY[0x270FA5388](v2);
  sub_24094D194(0, &qword_268C90C88, MEMORY[0x263F461A8], MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v22 - v7;
  uint64_t v9 = v0 + OBJC_IVAR____TtC13HealthRecords53AccountStatusUpgradeSummaryTileFeedItemViewController_context;
  swift_beginAccess();
  uint64_t result = sub_24094D610(v9, (uint64_t)v23, (uint64_t (*)(void))sub_24089D370);
  uint64_t v11 = v24;
  if (v24)
  {
    uint64_t v12 = sub_2408304E8(v23, v24);
    uint64_t v13 = *(void *)(v11 - 8);
    MEMORY[0x270FA5388](v12);
    uint64_t v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v13 + 16))(v15);
    uint64_t v16 = sub_240953BB8();
    unint64_t v18 = v17;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v11);
    uint64_t result = sub_2408371B8((uint64_t)v23);
    if (v18 >> 60 != 15)
    {
      sub_240951798();
      swift_allocObject();
      sub_240951788();
      uint64_t v19 = sub_2409533C8();
      sub_24094D0B0(&qword_268C90C70, MEMORY[0x263F461A8]);
      sub_240951778();
      swift_release();
      uint64_t v20 = *(void *)(v19 - 8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v8, 0, 1, v19);
      uint64_t v21 = v1 + OBJC_IVAR____TtC13HealthRecords53AccountStatusUpgradeSummaryTileFeedItemViewController_accountData;
      swift_beginAccess();
      sub_24094D848((uint64_t)v8, v21);
      swift_endAccess();
      sub_24094D2F0(v21, (uint64_t)v6, &qword_268C90C88, MEMORY[0x263F461A8]);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v6, 1, v19) == 1)
      {
        sub_240849C34(v16, v18);
        return sub_24094D8DC((uint64_t)v6, &qword_268C90C88, MEMORY[0x263F461A8]);
      }
      else
      {
        sub_24094D8DC((uint64_t)v6, &qword_268C90C88, MEMORY[0x263F461A8]);
        sub_240948218();
        return sub_240849C34(v16, v18);
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240948218()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_240952518();
  uint64_t v48 = *(void *)(v2 - 8);
  uint64_t v49 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v47 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_2409533C8();
  uint64_t v56 = *(void *)(v4 - 8);
  uint64_t v57 = v4;
  MEMORY[0x270FA5388](v4);
  char v50 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24094D194(0, &qword_268C90C88, MEMORY[0x263F461A8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v55 = (uint64_t)&v46 - v8;
  sub_24094D194(0, &qword_26AFCE2A0, MEMORY[0x263F07508], v6);
  MEMORY[0x270FA5388](v9 - 8);
  BOOL v52 = (char *)&v46 - v10;
  uint64_t v11 = sub_240951A98();
  uint64_t v53 = *(void *)(v11 - 8);
  uint64_t v54 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v46 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_240954BA8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_2409536B8();
  uint64_t v51 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v20 = objc_msgSend(self, sel_systemFontOfSize_, 45.0);
  uint64_t v21 = self;
  id v22 = objc_msgSend(v21, sel_configurationWithFont_, v20);

  uint64_t v23 = (void *)sub_240954788();
  id v24 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v23, v22);

  if (v24)
  {
    id v25 = objc_msgSend(v21, sel_configurationPreferringMulticolor);
    id v26 = objc_msgSend(v24, sel_imageByApplyingSymbolConfiguration_, v25);

    if (v26)
    {
      sub_2409490F4(v26, (uint64_t)v19);
      uint64_t v27 = (void **)&v1[OBJC_IVAR____TtC13HealthRecords53AccountStatusUpgradeSummaryTileFeedItemViewController_tileView];
      swift_beginAccess();
      uint64_t v28 = *v27;
      sub_2409536C8();
      char v29 = (void (*)(char *))sub_2409536D8();
      id v30 = v28;
      v29(v19);
      uint64_t v31 = (void *)sub_240953688();
      (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x263F461E8], v13);
      sub_240954B98();

      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v19, v17);
    }
  }
  uint64_t result = sub_2409475B4();
  if ((result & 1) == 0)
  {
    uint64_t v33 = (uint64_t)&v1[OBJC_IVAR____TtC13HealthRecords53AccountStatusUpgradeSummaryTileFeedItemViewController_accountData];
    swift_beginAccess();
    uint64_t v34 = v55;
    sub_24094D2F0(v33, v55, &qword_268C90C88, MEMORY[0x263F461A8]);
    uint64_t v36 = v56;
    uint64_t v35 = v57;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v34, 1, v57))
    {
      sub_24094D8DC(v34, &qword_268C90C88, MEMORY[0x263F461A8]);
      uint64_t v37 = (uint64_t)v52;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v52, 1, 1, v54);
      return sub_24094D8DC(v37, &qword_26AFCE2A0, MEMORY[0x263F07508]);
    }
    uint64_t v38 = v50;
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v50, v34, v35);
    sub_24094D8DC(v34, &qword_268C90C88, MEMORY[0x263F461A8]);
    uint64_t v37 = (uint64_t)v52;
    sub_2409533A8();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
    uint64_t v40 = v53;
    uint64_t v39 = v54;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56))(v37, 0, 1, v54);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v37, 1, v39) == 1) {
      return sub_24094D8DC(v37, &qword_26AFCE2A0, MEMORY[0x263F07508]);
    }
    uint64_t v41 = v46;
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v46, v37, v39);
    sub_24083EDCC(0, (unint64_t *)&qword_268C90618);
    sub_240954DD8();
    sub_240952A08();
    sub_2409529F8();
    sub_240952C18();
    swift_allocObject();
    sub_240952BF8();
    uint64_t v43 = v47;
    uint64_t v42 = v48;
    uint64_t v44 = v49;
    (*(void (**)(char *, void, uint64_t))(v48 + 104))(v47, *MEMORY[0x263F45E50], v49);
    *(void *)(swift_allocObject() + 16) = v1;
    unint64_t v45 = v1;
    sub_240952BD8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
    return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v41, v39);
  }
  return result;
}

void sub_240948A70(uint64_t a1, void *a2)
{
  id v30 = a2;
  sub_24094D194(0, (unint64_t *)&unk_26AFCE028, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v28 - v4;
  sub_2408CCBC4();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (void **)((char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_240952558();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v28 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v28 - v17;
  sub_24094D610(a1, (uint64_t)v8, (uint64_t (*)(void))sub_2408CCBC4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v31 = *v8;
    uint64_t v19 = v31;
    sub_2408484BC(0, qword_26AFD07C0);
    swift_willThrowTypedImpl();
  }
  else
  {
    id v20 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    char v29 = v20;
    v20(v16, (char *)v8, v9);
    v20(v18, v16, v9);
    uint64_t v21 = sub_240954AB8();
    uint64_t v22 = (uint64_t)v5;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v5, 1, 1, v21);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v18, v9);
    sub_240954A98();
    id v23 = v30;
    uint64_t v24 = sub_240954A88();
    unint64_t v25 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    id v26 = (char *)swift_allocObject();
    uint64_t v27 = MEMORY[0x263F8F500];
    *((void *)v26 + 2) = v24;
    *((void *)v26 + 3) = v27;
    *((void *)v26 + 4) = v23;
    v29(&v26[v25], v13, v9);
    sub_240839E0C(v22, (uint64_t)&unk_268C92028, (uint64_t)v26);
    swift_release();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v18, v9);
  }
}

uint64_t sub_240948DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  uint64_t v6 = sub_240952508();
  v5[7] = v6;
  v5[8] = *(void *)(v6 - 8);
  v5[9] = swift_task_alloc();
  v5[10] = swift_task_alloc();
  uint64_t v7 = sub_2409536B8();
  v5[11] = v7;
  v5[12] = *(void *)(v7 - 8);
  v5[13] = swift_task_alloc();
  sub_240954A98();
  v5[14] = sub_240954A88();
  uint64_t v9 = sub_240954A48();
  return MEMORY[0x270FA2498](sub_240948F58, v9, v8);
}

uint64_t sub_240948F58()
{
  uint64_t v1 = v0[13];
  uint64_t v13 = v0[12];
  uint64_t v2 = v0[10];
  uint64_t v14 = v0[11];
  uint64_t v4 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[5];
  swift_release();
  uint64_t v7 = (void *)sub_240952548();
  sub_2409490F4(v7, v1);

  uint64_t v8 = (id *)(v6 + OBJC_IVAR____TtC13HealthRecords53AccountStatusUpgradeSummaryTileFeedItemViewController_tileView);
  swift_beginAccess();
  id v9 = *v8;
  sub_240952528();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v3, *MEMORY[0x263F45E38], v5);
  LOBYTE(v8) = sub_2409524F8();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v10(v3, v5);
  v10(v2, v5);
  sub_240946AFC(v1, v8 & 1);

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v1, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_2409490F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v24 = a1;
  uint64_t v25 = a2;
  uint64_t v2 = sub_240952B98();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F07690];
  sub_24094D194(0, &qword_26AFCC6A8, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  id v9 = (char *)&v19 - v8;
  uint64_t v10 = sub_240951AB8();
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  sub_240952B88();
  uint64_t v12 = sub_2409535A8();
  uint64_t v22 = v13;
  uint64_t v23 = v12;
  uint64_t v14 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v26 = v2;
  id v20 = v14;
  v14(v5, v2);
  sub_24094D8DC((uint64_t)v9, &qword_26AFCC6A8, v6);
  sub_2409475B4();
  v11(v9, 1, 1, v10);
  sub_240952B88();
  uint64_t v21 = sub_2409535A8();
  uint64_t v19 = v15;
  uint64_t v16 = v20;
  v20(v5, v26);
  sub_24094D8DC((uint64_t)v9, &qword_26AFCC6A8, MEMORY[0x263F07690]);
  sub_2409475B4();
  v11(v9, 1, 1, v10);
  sub_240952B88();
  sub_2409535A8();
  v16(v5, v26);
  sub_24094D8DC((uint64_t)v9, &qword_26AFCC6A8, MEMORY[0x263F07690]);
  objc_msgSend(self, sel_clearColor);
  id v17 = v24;
  return sub_2409536A8();
}

void sub_240949774()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2409540C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240954088();
  uint64_t v6 = sub_2409540B8();
  os_log_type_t v7 = sub_240954BF8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_240818000, v6, v7, "AccountStatusUpgradeSummaryTileFeedItemViewController loaded", v8, 2u);
    MEMORY[0x2456021C0](v8, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v9 = (objc_class *)type metadata accessor for AccountStatusUpgradeSummaryTileFeedItemViewController(0);
  v10.receiver = v1;
  v10.super_class = v9;
  objc_msgSendSuper2(&v10, sel_viewDidLoad);
  sub_240949924();
}

void sub_240949924()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v3 = v2;
  uint64_t v4 = (id *)&v0[OBJC_IVAR____TtC13HealthRecords53AccountStatusUpgradeSummaryTileFeedItemViewController_tileView];
  swift_beginAccess();
  objc_msgSend(v3, sel_addSubview_, *v4);

  id v5 = objc_msgSend(v1, sel_view);
  if (!v5)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v6 = v5;
  objc_msgSend(v5, sel_hk_alignConstraintsWithView_, *v4);

  id v7 = objc_msgSend(v1, sel_view);
  if (v7)
  {
    uint64_t v8 = v7;
    id v9 = objc_msgSend(v7, sel_heightAnchor);

    id v10 = objc_msgSend(v9, sel_constraintGreaterThanOrEqualToConstant_, 60.0);
    LODWORD(v11) = 1148829696;
    objc_msgSend(v10, sel_setPriority_, v11);
    objc_msgSend(v10, sel_setActive_, 1);
    id v12 = *v4;
    uint64_t v13 = (void *)sub_240953698();

    *(void *)(swift_allocObject() + 16) = v1;
    id v14 = v1;
    sub_240953A68();

    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_240949AD8()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  id v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24094D194(0, (unint64_t *)&unk_26AFCE028, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v151 = &v144[-v4];
  uint64_t v5 = sub_240951A98();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  id v9 = &v144[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v149 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v159 = &v144[-v10];
  uint64_t v167 = sub_240953F38();
  uint64_t v169 = *(void *)(v167 - 8);
  MEMORY[0x270FA5388](v167);
  id v153 = &v144[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24094D25C();
  uint64_t v168 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v157 = &v144[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v13);
  uint64_t v164 = &v144[-v15];
  sub_24094D194(0, &qword_26AFCE168, MEMORY[0x263F45B10], v2);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v154 = &v144[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v160 = &v144[-v20];
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v161 = &v144[-v22];
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v158 = &v144[-v24];
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v166 = &v144[-v26];
  MEMORY[0x270FA5388](v25);
  uint64_t v172 = (uint64_t)&v144[-v27];
  sub_24094D194(0, &qword_268C90C88, MEMORY[0x263F461A8], v2);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v170 = &v144[-v29];
  uint64_t v175 = sub_2409533C8();
  uint64_t v30 = *(void *)(v175 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v175);
  os_log_type_t v165 = &v144[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v31);
  uint64_t v34 = &v144[-v33];
  uint64_t v35 = sub_2409540C8();
  uint64_t v171 = *(void *)(v35 - 8);
  uint64_t v36 = MEMORY[0x270FA5388](v35);
  uint64_t v162 = &v144[-((v37 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  unint64_t v152 = &v144[-v39];
  MEMORY[0x270FA5388](v38);
  uint64_t v41 = &v144[-v40];
  sub_240954088();
  uint64_t v42 = sub_2409540B8();
  os_log_type_t v43 = sub_240954C38();
  BOOL v44 = os_log_type_enabled(v42, v43);
  uint64_t v156 = v5;
  uint64_t v155 = v6;
  uint64_t v173 = v30;
  uint64_t v174 = v34;
  unint64_t v150 = v9;
  if (v44)
  {
    unint64_t v45 = (uint8_t *)swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v178 = v46;
    *(_DWORD *)unint64_t v45 = 136315138;
    uint64_t v176 = ObjectType;
    swift_getMetatypeMetadata();
    uint64_t v47 = sub_2409547E8();
    uint64_t v176 = sub_2408370E4(v47, v48, &v178);
    uint64_t v34 = v174;
    sub_2409550B8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240818000, v42, v43, "[%s] Tapped on account upgrade tile", v45, 0xCu);
    swift_arrayDestroy();
    uint64_t v30 = v173;
    MEMORY[0x2456021C0](v46, -1, -1);
    MEMORY[0x2456021C0](v45, -1, -1);
  }

  uint64_t v49 = *(void (**)(unsigned char *, uint64_t))(v171 + 8);
  v49(v41, v35);
  uint64_t v50 = v35;
  uint64_t v51 = v1 + OBJC_IVAR____TtC13HealthRecords53AccountStatusUpgradeSummaryTileFeedItemViewController_accountData;
  swift_beginAccess();
  BOOL v52 = v170;
  sub_24094D2F0(v51, (uint64_t)v170, &qword_268C90C88, MEMORY[0x263F461A8]);
  uint64_t v53 = v175;
  int v54 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v30 + 48))(v52, 1, v175);
  uint64_t v55 = v172;
  if (v54 != 1)
  {
    double v146 = v49;
    uint64_t v147 = v50;
    uint64_t ObjectType = v1;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v30 + 32))(v34, v52, v53);
    sub_240953388();
    uint64_t v61 = *MEMORY[0x263F45B00];
    uint64_t v62 = v169;
    uint64_t v63 = v166;
    uint64_t v64 = v167;
    uint64_t v148 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v169 + 104);
    v148(v166, v61, v167);
    uint64_t v162 = *(unsigned char **)(v62 + 56);
    ((void (*)(unsigned char *, void, uint64_t, uint64_t))v162)(v63, 0, 1, v64);
    unint64_t v65 = v164;
    uint64_t v66 = (uint64_t)&v164[*(int *)(v168 + 48)];
    uint64_t v67 = v55;
    char v68 = (uint64_t (*)(uint64_t))MEMORY[0x263F45B10];
    sub_24094D2F0(v67, (uint64_t)v164, &qword_26AFCE168, MEMORY[0x263F45B10]);
    sub_24094D2F0((uint64_t)v63, v66, &qword_26AFCE168, v68);
    uint64_t v69 = *(unsigned char **)(v62 + 48);
    int v70 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v69)(v65, 1, v64);
    uint64_t v170 = v69;
    if (v70 == 1)
    {
      uint64_t v71 = (uint64_t (*)(uint64_t))MEMORY[0x263F45B10];
      sub_24094D8DC((uint64_t)v63, &qword_26AFCE168, MEMORY[0x263F45B10]);
      sub_24094D8DC(v67, &qword_26AFCE168, v71);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v69)(v66, 1, v64) == 1)
      {
        sub_24094D8DC((uint64_t)v65, &qword_26AFCE168, MEMORY[0x263F45B10]);
        uint64_t v72 = v173;
        uint64_t v73 = v165;
        uint64_t v74 = v175;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v173 + 16))(v165, v174, v175);
LABEL_19:
        char v92 = *(void (**)(unsigned char *, uint64_t))(v72 + 8);
        v92(v73, v74);
        uint64_t v90 = ObjectType;
        BOOL v91 = v174;
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t v75 = v158;
      sub_24094D2F0((uint64_t)v65, (uint64_t)v158, &qword_26AFCE168, MEMORY[0x263F45B10]);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v69)(v66, 1, v64) != 1)
      {
        uint64_t v101 = v169;
        char v102 = v153;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v169 + 32))(v153, v66, v64);
        sub_24094D0B0(&qword_268C90C98, MEMORY[0x263F45B10]);
        int v145 = sub_240954778();
        unint64_t v103 = *(void (**)(unsigned char *, uint64_t))(v101 + 8);
        uint64_t v104 = v102;
        uint64_t v77 = v168;
        v103(v104, v64);
        uint64_t v105 = (uint64_t (*)(uint64_t))MEMORY[0x263F45B10];
        sub_24094D8DC((uint64_t)v166, &qword_26AFCE168, MEMORY[0x263F45B10]);
        sub_24094D8DC(v172, &qword_26AFCE168, v105);
        v103(v158, v64);
        uint64_t v74 = v175;
        sub_24094D8DC((uint64_t)v65, &qword_26AFCE168, v105);
        uint64_t v72 = v173;
        uint64_t v73 = v165;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v173 + 16))(v165, v174, v74);
        if (v145) {
          goto LABEL_19;
        }
LABEL_13:
        char v78 = v161;
        sub_240953388();
        uint64_t v79 = v160;
        uint64_t v80 = v167;
        v148(v160, *MEMORY[0x263F45B08], v167);
        ((void (*)(unsigned char *, void, uint64_t, uint64_t))v162)(v79, 0, 1, v80);
        uint64_t v81 = v80;
        uint64_t v82 = *(int *)(v77 + 48);
        uint64_t v83 = v157;
        uint64_t v84 = (uint64_t)&v157[v82];
        uint64_t v85 = (uint64_t (*)(uint64_t))MEMORY[0x263F45B10];
        sub_24094D2F0((uint64_t)v78, (uint64_t)v157, &qword_26AFCE168, MEMORY[0x263F45B10]);
        sub_24094D2F0((uint64_t)v79, v84, &qword_26AFCE168, v85);
        uint64_t v86 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v170;
        if (((unsigned int (*)(unsigned char *, uint64_t, uint64_t))v170)(v83, 1, v81) == 1)
        {
          uint64_t v87 = (uint64_t (*)(uint64_t))MEMORY[0x263F45B10];
          sub_24094D8DC((uint64_t)v79, &qword_26AFCE168, MEMORY[0x263F45B10]);
          sub_24094D8DC((uint64_t)v78, &qword_26AFCE168, v87);
          char v88 = *(void (**)(unsigned char *, uint64_t))(v173 + 8);
          v88(v73, v175);
          int v89 = v86(v84, 1, v81);
          uint64_t v90 = ObjectType;
          BOOL v91 = v174;
          if (v89 == 1)
          {
            sub_24094D8DC((uint64_t)v83, &qword_26AFCE168, MEMORY[0x263F45B10]);
            char v92 = v88;
LABEL_20:
            sub_240952808();
            long long v106 = (void *)sub_2409527D8();
            uint64_t v107 = v90 + OBJC_IVAR____TtC13HealthRecords53AccountStatusUpgradeSummaryTileFeedItemViewController_context;
            swift_beginAccess();
            uint64_t result = sub_24094D610(v107, (uint64_t)&v176, (uint64_t (*)(void))sub_24089D370);
            uint64_t v108 = v177;
            if (!v177)
            {
              __break(1u);
              return result;
            }
            uint64_t v109 = (void *)v90;
            uint64_t v110 = sub_2408304E8(&v176, v177);
            uint64_t v111 = *(void *)(v108 - 8);
            MEMORY[0x270FA5388](v110);
            uint64_t v113 = &v144[-((v112 + 15) & 0xFFFFFFFFFFFFFFF0)];
            (*(void (**)(unsigned char *))(v111 + 16))(v113);
            uint64_t v114 = (void *)sub_240953B98();
            (*(void (**)(unsigned char *, uint64_t))(v111 + 8))(v113, v108);
            uint64_t v115 = (void *)sub_2409527E8();

            sub_2408371B8((uint64_t)&v176);
            sub_240952E08();
            swift_allocObject();
            id v116 = v115;
            uint64_t v117 = sub_240952DE8();
            uint64_t v118 = v159;
            sub_2409533A8();
            uint64_t v119 = v109;
            if ((sub_2409475B4() & 1) == 0)
            {
              uint64_t v122 = sub_240954AB8();
              uint64_t v123 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v122 - 8) + 56);
              uint64_t v172 = (uint64_t)v92;
              uint64_t v124 = (uint64_t)v151;
              v123(v151, 1, 1, v122);
              uint64_t v125 = v155;
              uint64_t v126 = v150;
              uint64_t v127 = v156;
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v155 + 16))(v150, v118, v156);
              sub_240954A98();
              id v128 = v119;
              swift_retain();
              uint64_t v129 = sub_240954A88();
              unint64_t v130 = (*(unsigned __int8 *)(v125 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80);
              uint64_t v131 = (char *)swift_allocObject();
              uint64_t v132 = MEMORY[0x263F8F500];
              *((void *)v131 + 2) = v129;
              *((void *)v131 + 3) = v132;
              *((void *)v131 + 4) = v128;
              *((void *)v131 + 5) = v117;
              (*(void (**)(char *, unsigned char *, uint64_t))(v125 + 32))(&v131[v130], v126, v127);
              sub_240839E0C(v124, (uint64_t)&unk_268C92018, (uint64_t)v131);

              swift_release();
              swift_release();
              (*(void (**)(unsigned char *, uint64_t))(v125 + 8))(v159, v127);
              return ((uint64_t (*)(unsigned char *, uint64_t))v172)(v174, v175);
            }
            sub_240952DD8();

            swift_release();
            (*(void (**)(unsigned char *, uint64_t))(v155 + 8))(v118, v156);
            uint64_t v120 = v91;
            uint64_t v121 = v175;
            return ((uint64_t (*)(unsigned char *, uint64_t))v92)(v120, v121);
          }
          uint64_t v100 = v175;
        }
        else
        {
          uint64_t v93 = v154;
          sub_24094D2F0((uint64_t)v83, (uint64_t)v154, &qword_26AFCE168, MEMORY[0x263F45B10]);
          int v94 = v86(v84, 1, v81);
          long long v95 = (void (**)(unsigned char *, uint64_t))(v169 + 8);
          uint64_t v96 = ObjectType;
          uint64_t v97 = v173;
          BOOL v91 = v174;
          if (v94 != 1)
          {
            uint64_t v137 = v169 + 32;
            uint64_t v138 = v153;
            (*(void (**)(unsigned char *, uint64_t, uint64_t))(v169 + 32))(v153, v84, v81);
            sub_24094D0B0(&qword_268C90C98, MEMORY[0x263F45B10]);
            LODWORD(v172) = sub_240954778();
            uint64_t v139 = v96;
            uint64_t v140 = *(void (**)(unsigned char *, uint64_t))(v137 - 24);
            v140(v138, v81);
            uint64_t v141 = (uint64_t (*)(uint64_t))MEMORY[0x263F45B10];
            sub_24094D8DC((uint64_t)v160, &qword_26AFCE168, MEMORY[0x263F45B10]);
            sub_24094D8DC((uint64_t)v161, &qword_26AFCE168, v141);
            uint64_t v142 = *(void (**)(unsigned char *, uint64_t))(v97 + 8);
            v142(v165, v175);
            uint64_t v143 = v81;
            char v92 = v142;
            v140(v154, v143);
            uint64_t v90 = v139;
            uint64_t v100 = v175;
            sub_24094D8DC((uint64_t)v83, &qword_26AFCE168, v141);
            if (v172) {
              goto LABEL_20;
            }
LABEL_26:
            uint64_t v133 = v152;
            sub_240954078();
            uint64_t v134 = sub_2409540B8();
            os_log_type_t v135 = sub_240954C18();
            if (os_log_type_enabled(v134, v135))
            {
              uint64_t v136 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v136 = 0;
              _os_log_impl(&dword_240818000, v134, v135, "AccountStatusUpgradeSummaryTile is not gateway upgrade, cannot proceed", v136, 2u);
              MEMORY[0x2456021C0](v136, -1, -1);
            }

            v146(v133, v147);
            uint64_t v120 = v91;
            uint64_t v121 = v100;
            return ((uint64_t (*)(unsigned char *, uint64_t))v92)(v120, v121);
          }
          uint64_t v98 = v93;
          BOOL v99 = (uint64_t (*)(uint64_t))MEMORY[0x263F45B10];
          sub_24094D8DC((uint64_t)v160, &qword_26AFCE168, MEMORY[0x263F45B10]);
          sub_24094D8DC((uint64_t)v161, &qword_26AFCE168, v99);
          uint64_t v100 = v175;
          char v88 = *(void (**)(unsigned char *, uint64_t))(v97 + 8);
          v88(v165, v175);
          (*v95)(v98, v81);
        }
        sub_24094D370((uint64_t)v83, (uint64_t (*)(void))sub_24094D25C);
        char v92 = v88;
        goto LABEL_26;
      }
      uint64_t v76 = (uint64_t (*)(uint64_t))MEMORY[0x263F45B10];
      sub_24094D8DC((uint64_t)v166, &qword_26AFCE168, MEMORY[0x263F45B10]);
      sub_24094D8DC(v172, &qword_26AFCE168, v76);
      (*(void (**)(unsigned char *, uint64_t))(v169 + 8))(v75, v64);
    }
    sub_24094D370((uint64_t)v65, (uint64_t (*)(void))sub_24094D25C);
    uint64_t v73 = v165;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v173 + 16))(v165, v174, v175);
    uint64_t v77 = v168;
    goto LABEL_13;
  }
  sub_24094D8DC((uint64_t)v52, &qword_268C90C88, MEMORY[0x263F461A8]);
  uint64_t v56 = v162;
  sub_240954078();
  uint64_t v57 = sub_2409540B8();
  os_log_type_t v58 = sub_240954C18();
  if (os_log_type_enabled(v57, v58))
  {
    uint64_t v59 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v59 = 0;
    _os_log_impl(&dword_240818000, v57, v58, "AccountStatusUpgradeSummaryTile could not decode data, cannot proceed", v59, 2u);
    MEMORY[0x2456021C0](v59, -1, -1);
  }

  return ((uint64_t (*)(unsigned char *, uint64_t))v49)(v56, v50);
}

uint64_t sub_24094AF24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  uint64_t v7 = sub_240951A98();
  v6[11] = v7;
  v6[12] = *(void *)(v7 - 8);
  v6[13] = swift_task_alloc();
  uint64_t v8 = sub_2409540C8();
  v6[14] = v8;
  v6[15] = *(void *)(v8 - 8);
  v6[16] = swift_task_alloc();
  v6[17] = sub_240954A98();
  v6[18] = sub_240954A88();
  return MEMORY[0x270FA2498](sub_24094B05C, 0, 0);
}

uint64_t sub_24094B05C()
{
  *(void *)(v0 + 152) = sub_240954A88();
  uint64_t v2 = sub_240954A48();
  return MEMORY[0x270FA2498](sub_24094B0E8, v2, v1);
}

uint64_t sub_24094B0E8()
{
  uint64_t v1 = v0[8];
  swift_release();
  uint64_t v2 = OBJC_IVAR____TtC13HealthRecords53AccountStatusUpgradeSummaryTileFeedItemViewController_tileView;
  v0[20] = OBJC_IVAR____TtC13HealthRecords53AccountStatusUpgradeSummaryTileFeedItemViewController_tileView;
  uint64_t v3 = (id *)(v1 + v2);
  swift_beginAccess();
  id v4 = *v3;
  uint64_t v5 = (void *)sub_240953698();

  uint64_t v6 = (void *)sub_240953A78();
  objc_msgSend(v6, sel_setEnabled_, 0);

  uint64_t v7 = (void *)swift_task_alloc();
  v0[21] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_24094B1F4;
  uint64_t v8 = v0[10];
  return MEMORY[0x270F37828](v8);
}

uint64_t sub_24094B1F4(uint64_t a1)
{
  id v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 176) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v7 = sub_240954A48();
    v4[27] = v7;
    v4[28] = v6;
    return MEMORY[0x270FA2498](sub_24094B830, v7, v6);
  }
  else
  {
    v4[23] = a1;
    uint64_t v8 = (void *)swift_task_alloc();
    v4[24] = v8;
    *uint64_t v8 = v5;
    v8[1] = sub_24094B398;
    uint64_t v9 = v4[8];
    return MEMORY[0x270F37848](a1, v9);
  }
}

uint64_t sub_24094B398()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24094B494, 0, 0);
}

uint64_t sub_24094B494()
{
  *(void *)(v0 + 200) = sub_240954A88();
  uint64_t v2 = sub_240954A48();
  return MEMORY[0x270FA2498](sub_24094B520, v2, v1);
}

uint64_t sub_24094B520()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 64);
  swift_release();
  id v3 = *(id *)(v2 + v1);
  uint64_t v4 = (void *)sub_240953698();

  uint64_t v5 = (void *)sub_240953A78();
  objc_msgSend(v5, sel_setEnabled_, 1);

  uint64_t v7 = sub_240954A48();
  return MEMORY[0x270FA2498](sub_24094B5F8, v7, v6);
}

uint64_t sub_24094B5F8()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24094B678()
{
  *(void *)(v0 + 208) = sub_240954A88();
  uint64_t v2 = sub_240954A48();
  return MEMORY[0x270FA2498](sub_24094B704, v2, v1);
}

uint64_t sub_24094B704()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[8];
  swift_release();
  id v3 = *(id *)(v2 + v1);
  uint64_t v4 = (void *)sub_240953698();

  uint64_t v5 = (void *)sub_240953A78();
  objc_msgSend(v5, sel_setEnabled_, 1);

  uint64_t v6 = v0[27];
  uint64_t v7 = v0[28];
  return MEMORY[0x270FA2498](sub_24094B7B0, v6, v7);
}

uint64_t sub_24094B7B0()
{
  uint64_t v1 = *(void **)(v0 + 176);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24094B830()
{
  uint64_t v31 = v0;
  uint64_t v1 = (void *)v0[22];
  uint64_t v3 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v5 = v0[10];
  uint64_t v4 = v0[11];
  sub_240954078();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  id v6 = v1;
  id v7 = v1;
  uint64_t v8 = sub_2409540B8();
  os_log_type_t v9 = sub_240954C18();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (void *)v0[22];
    uint64_t v27 = v0[15];
    uint64_t v28 = v0[14];
    uint64_t v29 = v0[16];
    os_log_type_t type = v9;
    uint64_t v12 = v0[12];
    uint64_t v11 = v0[13];
    uint64_t v13 = v0[11];
    uint64_t v14 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v30 = v26;
    *(_DWORD *)uint64_t v14 = 136315394;
    sub_24094D0B0(&qword_268C90688, MEMORY[0x263F07508]);
    uint64_t v15 = sub_2409555D8();
    v0[5] = sub_2408370E4(v15, v16, &v30);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    *(_WORD *)(v14 + 12) = 2080;
    v0[6] = v10;
    id v17 = v10;
    sub_2408484BC(0, qword_26AFD07C0);
    uint64_t v18 = sub_2409547E8();
    v0[7] = sub_2408370E4(v18, v19, &v30);
    sub_2409550B8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240818000, v8, type, "AccountStatusUpgradeSummaryTile failed to fetch account %s: %s, cannot upgrade", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v26, -1, -1);
    MEMORY[0x2456021C0](v14, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v29, v28);
  }
  else
  {
    uint64_t v20 = (void *)v0[22];
    uint64_t v22 = v0[15];
    uint64_t v21 = v0[16];
    uint64_t v23 = v0[14];
    (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  }
  return MEMORY[0x270FA2498](sub_24094B678, 0, 0);
}

id sub_24094BB44(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = &v3[OBJC_IVAR____TtC13HealthRecords53AccountStatusUpgradeSummaryTileFeedItemViewController_accountData];
  uint64_t v7 = sub_2409533C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = &v3[OBJC_IVAR____TtC13HealthRecords53AccountStatusUpgradeSummaryTileFeedItemViewController_context];
  *(_OWORD *)uint64_t v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((void *)v8 + 4) = 0;
  uint64_t v9 = OBJC_IVAR____TtC13HealthRecords53AccountStatusUpgradeSummaryTileFeedItemViewController_tileView;
  id v10 = objc_allocWithZone((Class)type metadata accessor for AccountUpgradeSummaryTileView(0));
  uint64_t v11 = v3;
  id v12 = objc_msgSend(v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v3[v9] = v12;

  if (a2)
  {
    uint64_t v13 = (void *)sub_240954788();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = 0;
  }
  v16.receiver = v11;
  v16.super_class = (Class)type metadata accessor for AccountStatusUpgradeSummaryTileFeedItemViewController(0);
  id v14 = objc_msgSendSuper2(&v16, sel_initWithNibName_bundle_, v13, a3);

  return v14;
}

id sub_24094BD04(void *a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC13HealthRecords53AccountStatusUpgradeSummaryTileFeedItemViewController_accountData];
  uint64_t v4 = sub_2409533C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = &v1[OBJC_IVAR____TtC13HealthRecords53AccountStatusUpgradeSummaryTileFeedItemViewController_context];
  *(_OWORD *)uint64_t v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((void *)v5 + 4) = 0;
  uint64_t v6 = OBJC_IVAR____TtC13HealthRecords53AccountStatusUpgradeSummaryTileFeedItemViewController_tileView;
  id v7 = objc_allocWithZone((Class)type metadata accessor for AccountUpgradeSummaryTileView(0));
  uint64_t v8 = v1;
  id v9 = objc_msgSend(v7, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v1[v6] = v9;

  v12.receiver = v8;
  v12.super_class = (Class)type metadata accessor for AccountStatusUpgradeSummaryTileFeedItemViewController(0);
  id v10 = objc_msgSendSuper2(&v12, sel_initWithCoder_, a1);

  return v10;
}

id sub_24094BE50()
{
  return sub_24094BE68(type metadata accessor for AccountStatusUpgradeSummaryTileFeedItemViewController);
}

id sub_24094BE68(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_24094BF34()
{
  return type metadata accessor for AccountStatusUpgradeSummaryTileFeedItemViewController(0);
}

uint64_t type metadata accessor for AccountStatusUpgradeSummaryTileFeedItemViewController(uint64_t a1)
{
  return sub_24082A2AC(a1, (uint64_t *)&unk_268C91FD8);
}

void sub_24094BF5C()
{
  sub_24094D194(319, &qword_268C90C88, MEMORY[0x263F461A8], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_24094C034@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC13HealthRecords53AccountStatusUpgradeSummaryTileFeedItemViewController_context;
  swift_beginAccess();
  return sub_24094D610(v3, a1, (uint64_t (*)(void))sub_24089D370);
}

uint64_t sub_24094C09C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC13HealthRecords53AccountStatusUpgradeSummaryTileFeedItemViewController_context;
  swift_beginAccess();
  sub_24085A89C(a1, v3);
  swift_endAccess();
  sub_240947C68();
  return sub_24094D370(a1, (uint64_t (*)(void))sub_24089D370);
}

uint64_t (*sub_24094C120(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_24094C180;
}

uint64_t sub_24094C180(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_240947C68();
  }
  return result;
}

id sub_24094C1B4@<X0>(void **a1@<X8>)
{
  uint64_t v3 = (void **)(*v1 + OBJC_IVAR____TtC13HealthRecords53AccountStatusUpgradeSummaryTileFeedItemViewController_tileView);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *a1 = *v3;

  return v4;
}

void sub_24094C218(void **a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void **)(*v1 + OBJC_IVAR____TtC13HealthRecords53AccountStatusUpgradeSummaryTileFeedItemViewController_tileView);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *uint64_t v3 = v2;
}

uint64_t (*sub_24094C278())()
{
  return j__swift_endAccess;
}

uint64_t sub_24094C2D8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F342E8](a1, WitnessTable);
}

uint64_t sub_24094C33C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F43FC0];
  uint64_t v3 = sub_240953918();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_24094C3B0()
{
  return sub_240953C08() & 1;
}

uint64_t sub_24094C42C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F34920](a1, WitnessTable);
}

uint64_t sub_24094C480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F34928](a1, a2, a3, WitnessTable);
}

void (*sub_24094C4EC(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  swift_getWitnessTable();
  v2[4] = sub_240953DB8();
  return sub_2408B2910;
}

uint64_t sub_24094C570()
{
  return sub_240953DE8();
}

uint64_t sub_24094C5D4()
{
  uint64_t v1 = sub_2409540C8();
  uint64_t v82 = *(void *)(v1 - 8);
  uint64_t v83 = v1;
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  uint64_t v81 = (char *)v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v74 = (char *)v68 - v4;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24094D194(0, &qword_26AFCE168, MEMORY[0x263F45B10], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v75 = (char *)v68 - v7;
  uint64_t v76 = sub_240953F38();
  uint64_t v77 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  uint64_t v73 = (char *)v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2409533C8();
  id v10 = *(void **)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v79 = (char *)v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_super v12 = (uint64_t (*)(uint64_t))MEMORY[0x263F461A8];
  sub_24094D194(0, &qword_268C90C88, MEMORY[0x263F461A8], v5);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  char v78 = (char *)v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  id v17 = (char *)v68 - v16;
  sub_24094D194(0, &qword_26AFCE2A0, MEMORY[0x263F07508], v5);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)v68 - v19;
  uint64_t v21 = sub_240951A98();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = v0 + OBJC_IVAR____TtC13HealthRecords53AccountStatusUpgradeSummaryTileFeedItemViewController_accountData;
  swift_beginAccess();
  sub_24094D2F0(v25, (uint64_t)v17, &qword_268C90C88, v12);
  uint64_t v26 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v10[6];
  uint64_t v80 = v9;
  uint64_t v27 = v9;
  uint64_t v28 = v26;
  if (v26((uint64_t)v17, 1, v27))
  {
    sub_24094D8DC((uint64_t)v17, &qword_268C90C88, MEMORY[0x263F461A8]);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, 1, 1, v21);
LABEL_4:
    sub_24094D8DC((uint64_t)v20, &qword_26AFCE2A0, MEMORY[0x263F07508]);
    uint64_t v34 = v82;
    uint64_t v33 = v83;
LABEL_5:
    uint64_t v35 = v81;
    sub_240954088();
    uint64_t v36 = sub_2409540B8();
    os_log_type_t v37 = sub_240954C38();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v38 = 0;
      _os_log_impl(&dword_240818000, v36, v37, "Tapped on tile dismissal while context.userData was unavailable", v38, 2u);
      MEMORY[0x2456021C0](v38, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v35, v33);
  }
  uint64_t v71 = v28;
  uint64_t v29 = (uint64_t)v78;
  uint64_t v72 = v24;
  v68[1] = v0;
  uint64_t v30 = v79;
  uint64_t v31 = v80;
  uint64_t v69 = (void (*)(char *, char *, uint64_t))v10[2];
  v68[2] = v10 + 2;
  v69(v79, v17, v80);
  sub_24094D8DC((uint64_t)v17, &qword_268C90C88, MEMORY[0x263F461A8]);
  sub_2409533A8();
  uint64_t v32 = (void (*)(char *, uint64_t))v10[1];
  int v70 = v10 + 1;
  v32(v30, v31);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1) {
    goto LABEL_4;
  }
  uint64_t v40 = v21;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v72, v20, v21);
  uint64_t v41 = v29;
  sub_24094D2F0(v25, v29, &qword_268C90C88, MEMORY[0x263F461A8]);
  uint64_t v42 = v22;
  if (v71(v29, 1, v80))
  {
    sub_24094D8DC(v29, &qword_268C90C88, MEMORY[0x263F461A8]);
    uint64_t v43 = (uint64_t)v75;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 56))(v75, 1, 1, v76);
    uint64_t v34 = v82;
    uint64_t v33 = v83;
LABEL_11:
    (*(void (**)(char *, uint64_t))(v42 + 8))(v72, v40);
    sub_24094D8DC(v43, &qword_26AFCE168, MEMORY[0x263F45B10]);
    goto LABEL_5;
  }
  unint64_t v45 = v79;
  uint64_t v44 = v80;
  v69(v79, (char *)v41, v80);
  sub_24094D8DC(v41, &qword_268C90C88, MEMORY[0x263F461A8]);
  uint64_t v43 = (uint64_t)v75;
  uint64_t v46 = v21;
  sub_240953388();
  uint64_t v40 = v21;
  v32(v45, v44);
  uint64_t v47 = v77;
  uint64_t v48 = v76;
  int v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v43, 1, v76);
  uint64_t v34 = v82;
  uint64_t v33 = v83;
  if (v49 == 1) {
    goto LABEL_11;
  }
  uint64_t v50 = v43;
  uint64_t v51 = v73;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v73, v50, v48);
  BOOL v52 = v74;
  sub_240954088();
  uint64_t v53 = sub_2409540B8();
  os_log_type_t v54 = sub_240954C38();
  if (os_log_type_enabled(v53, v54))
  {
    uint64_t v55 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v55 = 0;
    _os_log_impl(&dword_240818000, v53, v54, "User dismissed AccountStatusUpgrade tile", v55, 2u);
    uint64_t v56 = v55;
    BOOL v52 = v74;
    MEMORY[0x2456021C0](v56, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v34 + 8))(v52, v33);
  sub_24094D194(0, (unint64_t *)&qword_268C91DE0, (uint64_t (*)(uint64_t))sub_24094D1F8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2409562B0;
  *(void *)(inited + 32) = sub_240953468();
  *(void *)(inited + 40) = v58;
  uint64_t v59 = v72;
  *(void *)(inited + 48) = sub_240951A48();
  *(void *)(inited + 56) = v60;
  *(void *)(inited + 64) = sub_240953458();
  *(void *)(inited + 72) = v61;
  *(void *)(inited + 80) = sub_240953F28();
  *(void *)(inited + 88) = v62;
  unint64_t v63 = sub_24092D32C(inited);
  sub_24083EDCC(0, &qword_268C91088);
  uint64_t v64 = (void *)sub_240954CA8();
  sub_240954DB8();
  sub_24092D868(v63);
  swift_bridgeObjectRelease();
  id v65 = objc_allocWithZone((Class)sub_240953658());
  uint64_t v66 = (void *)sub_240953648();
  objc_msgSend(v64, sel_addOperation_, v66);

  sub_2409529A8();
  uint64_t v67 = (void *)sub_240952998();
  sub_2409470D8();
  sub_240952978();

  (*(void (**)(char *, uint64_t))(v47 + 8))(v51, v48);
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v59, v46);
}

uint64_t sub_24094D020()
{
  return sub_24094D0B0(&qword_268C91FE8, (void (*)(uint64_t))type metadata accessor for AccountStatusUpgradeSummaryTileFeedItemViewController);
}

uint64_t sub_24094D068()
{
  return sub_24094D0B0(&qword_268C91FF0, (void (*)(uint64_t))type metadata accessor for AccountStatusUpgradeSummaryTileFeedItemViewController);
}

uint64_t sub_24094D0B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24094D0F8()
{
  return MEMORY[0x263F43A10];
}

uint64_t sub_24094D104()
{
  return sub_24094D0B0(&qword_268C91FF8, (void (*)(uint64_t))type metadata accessor for AccountStatusUpgradeSummaryTileFeedItemViewController);
}

uint64_t sub_24094D14C()
{
  return sub_24094D0B0(&qword_268C92000, (void (*)(uint64_t))type metadata accessor for AccountStatusUpgradeSummaryTileFeedItemViewController);
}

void sub_24094D194(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24094D1F8()
{
  if (!qword_268C91DE8)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268C91DE8);
    }
  }
}

void sub_24094D25C()
{
  if (!qword_268C92008)
  {
    sub_24094D194(255, &qword_26AFCE168, MEMORY[0x263F45B10], MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, &qword_268C92008);
    }
  }
}

uint64_t sub_24094D2F0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_24094D194(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_24094D370(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24094D3D0()
{
  uint64_t v1 = sub_240951A98();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24094D4AC(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_240951A98() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  id v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *id v10 = v2;
  v10[1] = sub_24083F1F4;
  return sub_24094AF24(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_24094D5AC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24094D5E4()
{
  return sub_240949AD8();
}

void sub_24094D608(uint64_t a1)
{
  sub_240948A70(a1, *(void **)(v1 + 16));
}

uint64_t sub_24094D610(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24094D678()
{
  uint64_t v1 = sub_240952558();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24094D74C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_240952558() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_24081E750;
  return sub_240948DF8(a1, v5, v6, v7, v8);
}

uint64_t sub_24094D848(uint64_t a1, uint64_t a2)
{
  sub_24094D194(0, &qword_268C90C88, MEMORY[0x263F461A8], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24094D8DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_24094D194(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_24094D950(uint64_t a1, uint64_t *a2, uint64_t a3, unint64_t a4)
{
  uint64_t v32 = a2;
  uint64_t v38 = *MEMORY[0x263EF8340];
  uint64_t v7 = sub_2409540C8();
  uint64_t v31 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24082EE7C(0, &qword_26AFD03B8, MEMORY[0x263F45630], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v29 - v11;
  uint64_t v13 = sub_240951E78();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = a3;
  unint64_t v37 = a4;
  id v17 = v33;
  unint64_t v18 = sub_240935240((void (*)(void))sub_240951004, (uint64_t)v35, a1);
  if (!v17)
  {
    a4 = v18;
    uint64_t v30 = v9;
    uint64_t v33 = v16;
    sub_24094EB08(v32, a3, (uint64_t)v12);
    uint64_t v20 = v14;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      sub_24081B5E4((uint64_t)v12, &qword_26AFD03B8, MEMORY[0x263F45630]);
    }
    else
    {
      unint64_t v21 = a4;
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v33, v12, v13);
      sub_240954058();
      uint64_t v22 = sub_2409540B8();
      os_log_type_t v23 = sub_240954C38();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v24 = 0;
        _os_log_impl(&dword_240818000, v22, v23, "New lab results feed item generated", v24, 2u);
        uint64_t v25 = v24;
        uint64_t v20 = v14;
        MEMORY[0x2456021C0](v25, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v31 + 8))(v30, v7);
      sub_24082EE7C(0, &qword_26AFD05E0, MEMORY[0x263F45630], MEMORY[0x263F8E0F8]);
      unint64_t v26 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_240956800;
      uint64_t v28 = v33;
      (*(void (**)(unint64_t, char *, uint64_t))(v20 + 16))(v27 + v26, v33, v13);
      unint64_t v34 = v21;
      sub_2408FF07C(v27);
      a4 = v34;
      (*(void (**)(char *, uint64_t))(v20 + 8))(v28, v13);
    }
  }
  return a4;
}

uint64_t sub_24094DD5C@<X0>(id *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v32 = a3;
  uint64_t v5 = sub_2409540C8();
  uint64_t v30 = *(void *)(v5 - 8);
  uint64_t v31 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_240951A98();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v26 - v13;
  uint64_t v33 = a1;
  id v15 = objc_msgSend(*a1, sel_identifier);
  sub_240951A78();

  sub_240954058();
  uint64_t v29 = v9;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  uint64_t v16 = sub_2409540B8();
  os_log_type_t v17 = sub_240954C38();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v28 = a2;
    uint64_t v19 = (uint8_t *)v18;
    uint64_t v27 = swift_slowAlloc();
    uint64_t v35 = v27;
    *(_DWORD *)uint64_t v19 = 136446210;
    unint64_t v26 = v19 + 4;
    sub_24082C6CC(&qword_268C90688, MEMORY[0x263F07508]);
    uint64_t v20 = sub_2409555D8();
    uint64_t v34 = sub_2408370E4(v20, v21, &v35);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    uint64_t v22 = *(void (**)(char *, uint64_t))(v29 + 8);
    v22(v12, v8);
    _os_log_impl(&dword_240818000, v16, v17, "New records account feed item generated for account: %{public}s", v19, 0xCu);
    uint64_t v23 = v27;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v23, -1, -1);
    uint64_t v24 = v19;
    a2 = v28;
    MEMORY[0x2456021C0](v24, -1, -1);
  }
  else
  {
    uint64_t v22 = *(void (**)(char *, uint64_t))(v29 + 8);
    v22(v12, v8);
  }

  (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v31);
  sub_24094E0E0(v33, a2, v32);
  return ((uint64_t (*)(char *, uint64_t))v22)(v14, v8);
}

uint64_t sub_24094E0E0@<X0>(id *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v77 = a2;
  uint64_t v65 = a3;
  uint64_t v74 = sub_240952138();
  uint64_t v76 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  uint64_t v73 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_240951A98();
  uint64_t v70 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  char v68 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_2409525A8();
  uint64_t v67 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v66 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_240951E78();
  uint64_t v63 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v72 = (uint64_t)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2409526C8();
  uint64_t v81 = *(void (***)(char *, uint64_t))(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  char v92 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v90 = (char *)&v62 - v11;
  uint64_t v12 = sub_2409525E8();
  uint64_t v89 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  char v88 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_24082EE7C(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v15 - 8);
  os_log_type_t v17 = (char *)&v62 - v16;
  uint64_t v18 = type metadata accessor for NewRecordsFeedItemData(0);
  uint64_t v19 = v18 - 8;
  MEMORY[0x270FA5388](v18);
  unint64_t v21 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v22 = *a1;
  uint64_t v23 = sub_240952BC8();
  uint64_t v24 = *(int *)(type metadata accessor for AccountNewRecordsData(0) + 24);
  char v78 = a1;
  sub_24081B7E8((uint64_t)a1 + v24, (uint64_t)v17, (unint64_t *)&qword_26AFCF7F8, v14);
  sub_240881BD0(v22, v23, (uint64_t)v17, (uint64_t)v21);
  uint64_t v25 = *(int *)(v19 + 36);
  uint64_t v75 = v21;
  uint64_t result = *(void *)&v21[v25];
  uint64_t v27 = *(void *)(result + 16);
  if (v27)
  {
    uint64_t v28 = v89 + 16;
    uint64_t v86 = *(void (**)(char *, unint64_t, uint64_t))(v89 + 16);
    unint64_t v29 = result + ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80));
    uint64_t v82 = *(void *)(v89 + 72);
    unsigned int v85 = *MEMORY[0x263F45FE8];
    unsigned int v84 = *MEMORY[0x263F45F00];
    uint64_t v83 = (void (**)(char *, void, uint64_t))(v81 + 13);
    uint64_t v30 = v81 + 1;
    uint64_t v81 = (void (**)(char *, uint64_t))(v89 + 8);
    uint64_t v62 = result;
    swift_bridgeObjectRetain();
    uint64_t v80 = 0;
    uint64_t v31 = 0;
    uint64_t v32 = v88;
    uint64_t v87 = v12;
    uint64_t v89 = v28;
    while (1)
    {
      v86(v32, v29, v12);
      sub_2409525D8();
      uint64_t v35 = sub_2409528B8();
      uint64_t v36 = v92;
      (*(void (**)(char *, void, uint64_t))(*(void *)(v35 - 8) + 104))(v92, v85, v35);
      (*v83)(v36, v84, v8);
      sub_24082C6CC(&qword_26AFCEC90, MEMORY[0x263F45F38]);
      sub_240954968();
      sub_240954968();
      if (v91[0] == v91[5] && v91[1] == v91[6])
      {
        swift_bridgeObjectRelease_n();
        uint64_t v33 = *v30;
        (*v30)(v92, v8);
        v33(v90, v8);
      }
      else
      {
        char v37 = sub_240955618();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v38 = *v30;
        (*v30)(v92, v8);
        v38(v90, v8);
        if ((v37 & 1) == 0)
        {
          uint64_t v32 = v88;
          uint64_t result = sub_2409525B8();
          uint64_t v12 = v87;
          if (__OFADD__(v80, result)) {
            goto LABEL_24;
          }
          v80 += result;
          goto LABEL_5;
        }
      }
      uint64_t v32 = v88;
      uint64_t result = sub_2409525B8();
      BOOL v34 = __OFADD__(v31, result);
      v31 += result;
      uint64_t v12 = v87;
      if (v34)
      {
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        return result;
      }
LABEL_5:
      (*v81)(v32, v12);
      v29 += v82;
      if (!--v27)
      {
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v39 = v80;
        goto LABEL_13;
      }
    }
  }
  uint64_t v39 = 0;
  uint64_t v31 = 0;
LABEL_13:
  BOOL v34 = __OFADD__(v31, v39);
  uint64_t v40 = v31 + v39;
  uint64_t v41 = v76;
  if (v34) {
    goto LABEL_25;
  }
  if (v40 <= 0)
  {
    sub_24083B354((uint64_t)v75, type metadata accessor for NewRecordsFeedItemData);
    uint64_t v58 = 1;
    uint64_t v59 = v65;
    uint64_t v60 = v64;
    uint64_t v61 = v63;
  }
  else
  {
    uint64_t v42 = (void *)sub_240951F68();
    id v43 = *v78;
    uint64_t v44 = v67;
    unint64_t v45 = v66;
    uint64_t v46 = v69;
    (*(void (**)(char *, void, uint64_t))(v67 + 104))(v66, *MEMORY[0x263F45E68], v69);
    id v47 = objc_msgSend(v43, sel_identifier);
    uint64_t v48 = v68;
    sub_240951A78();

    uint64_t v49 = sub_24084A680();
    uint64_t v51 = v50;
    (*(void (**)(char *, uint64_t))(v70 + 8))(v48, v71);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
    BOOL v52 = (unsigned int *)MEMORY[0x263F456F8];
    if (v31 <= 0) {
      BOOL v52 = (unsigned int *)MEMORY[0x263F45700];
    }
    uint64_t v53 = (uint64_t)v73;
    uint64_t v54 = v74;
    (*(void (**)(char *, void, uint64_t))(v41 + 104))(v73, *v52, v74);
    uint64_t v55 = v72;
    uint64_t v56 = v79;
    uint64_t v57 = (uint64_t)v75;
    sub_24094FB80(v78, v42, v49, v51, v53, v72);
    uint64_t v79 = v56;
    if (v56)
    {
      swift_bridgeObjectRelease();

      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v53, v54);
      return sub_24083B354(v57, type metadata accessor for NewRecordsFeedItemData);
    }
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v53, v54);
    swift_bridgeObjectRelease();
    sub_24095134C(v57);
    sub_240951D78();
    sub_240951DC8();
    sub_240951F38();
    sub_240951D18();

    sub_2408371B8((uint64_t)v91);
    sub_24083B354(v57, type metadata accessor for NewRecordsFeedItemData);
    uint64_t v61 = v63;
    uint64_t v59 = v65;
    uint64_t v60 = v64;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 32))(v65, v55, v64);
    uint64_t v58 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(v59, v58, 1, v60);
}

uint64_t sub_24094EB08@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v48 = a3;
  uint64_t v5 = sub_240952138();
  uint64_t v52 = *(void *)(v5 - 8);
  uint64_t v53 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v51 = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_240951A98();
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v45 = v7;
  MEMORY[0x270FA5388](v7);
  id v43 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2409525A8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_240951E78();
  uint64_t v46 = *(void *)(v13 - 8);
  uint64_t v47 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v49 = (char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for NewLabsFeedItemData(0);
  uint64_t v16 = v15 - 8;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (void *)((char *)v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = *a1;
  uint64_t v20 = type metadata accessor for AllAccountsLabRecordsData(0);
  sub_24081B7E8((uint64_t)a1 + *(int *)(v20 + 20), (uint64_t)v18 + *(int *)(v16 + 28), (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
  uint64_t v21 = *(int *)(v20 + 24);
  uint64_t v50 = a1;
  uint64_t v22 = *(uint64_t *)((char *)a1 + v21);
  *uint64_t v18 = v19;
  *(uint64_t *)((char *)v18 + *(int *)(v16 + 32)) = v22;
  swift_bridgeObjectRetain();
  v42[1] = a2;
  uint64_t v23 = (void *)sub_240951F68();
  if (v19 < 1)
  {
    sub_24083B354((uint64_t)v18, type metadata accessor for NewLabsFeedItemData);

    uint64_t v30 = 1;
    uint64_t v32 = v47;
    uint64_t v31 = v48;
    uint64_t v33 = v46;
  }
  else
  {
    uint64_t v24 = (void *)sub_240951C68();
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F45EB0], v9);
    v42[0] = sub_240952588();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    if (v24)
    {
      uint64_t v54 = 0x656C69666F72505BLL;
      unint64_t v55 = 0xE90000000000003ALL;
      id v25 = v24;
      id v26 = objc_msgSend(v25, sel_identifier);
      uint64_t v27 = v43;
      sub_240951A78();

      sub_240951A48();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v27, v45);
      sub_2409548A8();
      swift_bridgeObjectRelease();
      sub_2409548A8();

      unint64_t v28 = v54;
      unint64_t v29 = v55;
    }
    else
    {
      unint64_t v29 = 0x800000024095C1A0;
      unint64_t v28 = 0xD000000000000013;
    }
    uint64_t v34 = (uint64_t)v51;
    uint64_t v35 = (uint64_t)v49;
    uint64_t v54 = v28;
    unint64_t v55 = v29;
    sub_2409548A8();

    swift_bridgeObjectRelease();
    uint64_t v37 = v54;
    uint64_t v36 = v55;
    uint64_t v39 = v52;
    uint64_t v38 = v53;
    (*(void (**)(uint64_t, void, uint64_t))(v52 + 104))(v34, *MEMORY[0x263F45700], v53);
    uint64_t v40 = v56;
    sub_24095041C((uint64_t)v50, v23, v37, v36, v34, v35);
    if (v40)
    {
      swift_bridgeObjectRelease();

      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v34, v38);
      return sub_24083B354((uint64_t)v18, type metadata accessor for NewLabsFeedItemData);
    }
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v34, v38);
    swift_bridgeObjectRelease();
    sub_240951F38();
    sub_240951D18();

    sub_2408371B8((uint64_t)&v54);
    sub_24083B354((uint64_t)v18, type metadata accessor for NewLabsFeedItemData);
    uint64_t v33 = v46;
    uint64_t v32 = v47;
    uint64_t v31 = v48;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 32))(v48, v35, v47);
    uint64_t v30 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56))(v31, v30, 1, v32);
}

uint64_t sub_24094F0D0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24082EE7C(0, &qword_26AFCDDD0, (uint64_t (*)(uint64_t))sub_240840084, MEMORY[0x263EFDDF8]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v38 = (char *)&v31 - v7;
  sub_240841BE4(0, &qword_26AFCDFE0, MEMORY[0x263EFDEA0]);
  uint64_t v9 = v8;
  uint64_t v39 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v37 = sub_2409540C8();
  uint64_t v12 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  sub_240954058();
  id v16 = v15;
  id v17 = v15;
  uint64_t v18 = sub_2409540B8();
  os_log_type_t v19 = sub_240954C18();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v36 = a2;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v35 = v5;
    uint64_t v21 = (uint8_t *)v20;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v41 = v32;
    uint64_t v33 = v6;
    *(_DWORD *)uint64_t v21 = 136446210;
    uint64_t v31 = v21 + 4;
    uint64_t v40 = (uint64_t)v15;
    id v22 = v15;
    sub_2408484BC(0, qword_26AFD07C0);
    sub_240955658();
    uint64_t v34 = v9;
    id v23 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v24 = sub_240954808();
    uint64_t v40 = sub_2408370E4(v24, v25, &v41);
    uint64_t v6 = v33;
    sub_2409550B8();
    uint64_t v9 = v34;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240818000, v18, v19, "Error making feed item for AccountNewRecordsData or AllAccountsLabRecordsData, hiding from UI: %{public}s", v21, 0xCu);
    uint64_t v26 = v32;
    a2 = v36;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v26, -1, -1);
    uint64_t v27 = v21;
    uint64_t v5 = v35;
    MEMORY[0x2456021C0](v27, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v37);
  uint64_t v40 = MEMORY[0x263F8EE78];
  sub_240840084(0);
  unint64_t v28 = v38;
  sub_2409543A8();
  sub_2408484BC(0, qword_26AFD07C0);
  sub_240954368();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v28, v5);
  sub_240841CF4((unint64_t *)&qword_26AFCDFD8, &qword_26AFCDFE0, MEMORY[0x263EFDEA0]);
  uint64_t v29 = sub_240954498();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v11, v9);
  *a2 = v29;
  return result;
}

uint64_t sub_24094F588@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v4 = (void *)(a1 + 16);
  sub_2408304E8((void *)(a1 + 16), *(void *)(a1 + 40));
  sub_2408304E8(v4, *(void *)(a1 + 40));
  uint64_t v5 = (void *)sub_240951EE8();
  sub_240951ED8();

  uint64_t v6 = sub_2409549C8();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v12)
  {
    sub_2408304E8((void *)(a2 + 16), *(void *)(a2 + 40));
    sub_2408304E8((void *)(a2 + 16), *(void *)(a2 + 40));
    uint64_t v8 = (void *)sub_240951EE8();
    sub_240951ED8();

    uint64_t v9 = sub_2409549C8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_2408FF258(v9);
    *a3 = v6;
  }
  return result;
}

uint64_t sub_24094F738@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_240864F38();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_2409540C8();
  uint64_t v9 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  sub_240954058();
  id v13 = v12;
  id v14 = v12;
  uint64_t v15 = sub_2409540B8();
  os_log_type_t v16 = sub_240954C18();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v35 = v5;
    uint64_t v18 = v17;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v39 = v33;
    *(_DWORD *)uint64_t v18 = 136446466;
    unint64_t v38 = sub_2409298F4();
    sub_240950FC4(0, &qword_268C92030, (void (*)(uint64_t))sub_2409298F4);
    uint64_t v34 = v6;
    uint64_t v19 = sub_2409547E8();
    uint64_t v36 = a2;
    unint64_t v38 = sub_2408370E4(v19, v20, &v39);
    sub_2409550B8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    v32[1] = v18 + 14;
    unint64_t v38 = (unint64_t)v12;
    id v21 = v12;
    id v22 = v12;
    sub_2408484BC(0, qword_26AFD07C0);
    sub_240955658();
    id v23 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_240955138();
    swift_unknownObjectRelease();
    uint64_t v24 = sub_2409547E8();
    unint64_t v26 = v25;

    uint64_t v27 = v24;
    a2 = v36;
    unint64_t v38 = sub_2408370E4(v27, v26, &v39);
    sub_2409550B8();
    uint64_t v6 = v34;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_240818000, v15, v16, "[%{public}s] Unable to compute desired difference for commit: %{public}s", (uint8_t *)v18, 0x16u);
    uint64_t v28 = v33;
    swift_arrayDestroy();
    MEMORY[0x2456021C0](v28, -1, -1);
    uint64_t v29 = v18;
    uint64_t v5 = v35;
    MEMORY[0x2456021C0](v29, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v37);
  unint64_t v38 = MEMORY[0x263F8EE78];
  sub_24083FEFC(0, (unint64_t *)&qword_26AFD04F8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
  sub_2409543A8();
  sub_24082C6CC((unint64_t *)&qword_26AFCDDD8, (void (*)(uint64_t))sub_240864F38);
  uint64_t v30 = sub_240954498();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v30;
  return result;
}

uint64_t sub_24094FB80@<X0>(id *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v56 = a5;
  uint64_t v60 = a3;
  uint64_t v61 = a4;
  id v62 = a2;
  uint64_t v67 = a1;
  uint64_t v65 = a6;
  uint64_t v57 = sub_240952138();
  uint64_t v71 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v69 = (char *)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_2409521C8();
  uint64_t v70 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  char v68 = (char *)v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_240951838();
  MEMORY[0x270FA5388](v9 - 8);
  v55[2] = (char *)v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_240951A28();
  uint64_t v64 = *(void *)(v66 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v66);
  uint64_t v59 = (char *)v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)v55 - v13;
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24082EE7C(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v77 = (uint64_t)v55 - v17;
  sub_24082EE7C(0, &qword_268C90A48, MEMORY[0x263F45770], v15);
  MEMORY[0x270FA5388](v18 - 8);
  unint64_t v20 = (char *)v55 - v19;
  uint64_t v21 = sub_240951C08();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for NewRecordsFeedItemViewController();
  sub_2409517C8();
  swift_allocObject();
  sub_2409517B8();
  type metadata accessor for NewRecordsFeedItemData(0);
  sub_24082C6CC(&qword_268C92040, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
  sub_2409517A8();
  uint64_t result = swift_release();
  if (!v6)
  {
    unint64_t v26 = v59;
    uint64_t v27 = v20;
    v55[1] = 0;
    (*(void (**)(char *, void, uint64_t))(v22 + 104))(v24, *MEMORY[0x263F45548], v21);
    id v28 = v62;
    swift_bridgeObjectRetain();
    sub_240951CC8();
    uint64_t v29 = type metadata accessor for AccountNewRecordsData(0);
    uint64_t v30 = v67;
    uint64_t v31 = v77;
    sub_24081B7E8((uint64_t)v67 + *(int *)(v29 + 24), v77, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
    uint64_t v32 = v64;
    uint64_t v33 = v31;
    uint64_t v34 = v66;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v33, 1, v66) == 1)
    {
      uint64_t v35 = sub_240952208();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v27, 1, 1, v35);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v14, v77, v34);
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v26, v14, v34);
      sub_240951828();
      sub_240954AD8();
      sub_2409521E8();
      uint64_t v36 = sub_240952208();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v27, 0, 1, v36);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v34);
    }
    uint64_t v37 = v56;
    uint64_t v38 = v57;
    sub_240951DD8();
    uint64_t v74 = MEMORY[0x263F8EE88];
    uint64_t v39 = sub_240952048();
    sub_240940118(v76, v39, v40);
    swift_bridgeObjectRelease();
    uint64_t v41 = v74;
    uint64_t v42 = (void (*)(uint64_t *, void))sub_240951E38();
    sub_24089E058(v41);
    v42(v76, 0);
    (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v69, v37, v38);
    id v43 = v68;
    sub_2409521D8();
    uint64_t v44 = v63;
    sub_240951D38();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v43, v44);
    sub_24083FEFC(0, (unint64_t *)&qword_26AFD0670, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_2409562B0;
    strcpy((char *)(v45 + 32), "NewRecordsTile");
    *(unsigned char *)(v45 + 47) = -18;
    id v46 = objc_msgSend(*v30, sel_title);
    uint64_t v47 = sub_2409547C8();
    uint64_t v49 = v48;

    v76[0] = v47;
    v76[1] = v49;
    uint64_t v74 = 32;
    unint64_t v75 = 0xE100000000000000;
    uint64_t v72 = 0;
    unint64_t v73 = 0xE000000000000000;
    sub_240864EE4();
    uint64_t v50 = sub_240955108();
    uint64_t v52 = v51;
    swift_bridgeObjectRelease();
    *(void *)(v45 + 48) = v50;
    *(void *)(v45 + 56) = v52;
    uint64_t v53 = (void *)sub_240954988();
    swift_bridgeObjectRelease();
    id v54 = (id)HKUIJoinStringsForAutomationIdentifier();

    if (v54)
    {
      sub_2409547C8();
    }
    return sub_240951E18();
  }
  return result;
}

uint64_t sub_24095041C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v47 = a5;
  uint64_t v54 = a3;
  uint64_t v55 = a4;
  id v56 = a2;
  uint64_t v57 = a1;
  uint64_t v59 = a6;
  uint64_t v7 = sub_240952138();
  uint64_t v49 = *(void *)(v7 - 8);
  uint64_t v50 = v7;
  MEMORY[0x270FA5388](v7);
  id v62 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_2409521C8();
  uint64_t v63 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v61 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_240951838();
  MEMORY[0x270FA5388](v10 - 8);
  v46[1] = (char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_240951A28();
  uint64_t v58 = *(void *)(v60 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v60);
  uint64_t v52 = (char *)v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v46 - v14;
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24082EE7C(0, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v53 = (uint64_t)v46 - v18;
  sub_24082EE7C(0, &qword_268C90A48, MEMORY[0x263F45770], v16);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)v46 - v20;
  uint64_t v22 = sub_240951C08();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  unint64_t v25 = (char *)v46 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for NewRecordsLabFeedItemViewController();
  sub_2409517C8();
  swift_allocObject();
  sub_2409517B8();
  type metadata accessor for NewLabsFeedItemData(0);
  sub_24082C6CC(&qword_268C92038, (void (*)(uint64_t))type metadata accessor for NewLabsFeedItemData);
  sub_2409517A8();
  uint64_t result = swift_release();
  if (!v6)
  {
    uint64_t v27 = v52;
    v46[0] = 0;
    (*(void (**)(char *, void, uint64_t))(v23 + 104))(v25, *MEMORY[0x263F45548], v22);
    id v28 = v56;
    swift_bridgeObjectRetain();
    sub_240951CC8();
    uint64_t v29 = type metadata accessor for AllAccountsLabRecordsData(0);
    uint64_t v30 = v53;
    sub_24081B7E8(v57 + *(int *)(v29 + 20), v53, (unint64_t *)&qword_26AFCF7F8, MEMORY[0x263F07490]);
    uint64_t v31 = v58;
    uint64_t v32 = v60;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v30, 1, v60) == 1)
    {
      uint64_t v33 = sub_240952208();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v21, 1, 1, v33);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v15, v30, v32);
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v27, v15, v32);
      sub_240951828();
      sub_240954AD8();
      sub_2409521E8();
      uint64_t v34 = sub_240952208();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v21, 0, 1, v34);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v32);
    }
    uint64_t v36 = v47;
    uint64_t v35 = v48;
    uint64_t v38 = v49;
    uint64_t v37 = v50;
    sub_240951DD8();
    uint64_t v65 = MEMORY[0x263F8EE88];
    uint64_t v39 = sub_240952008();
    sub_240940118(&v64, v39, v40);
    swift_bridgeObjectRelease();
    uint64_t v41 = v65;
    uint64_t v42 = (void (*)(uint64_t *, void))sub_240951E38();
    sub_24089E058(v41);
    v42(&v64, 0);
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v62, v36, v37);
    id v43 = v61;
    sub_2409521D8();
    sub_240951D38();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v43, v35);
    uint64_t v44 = (void *)sub_240954988();
    id v45 = (id)HKUIJoinStringsForAutomationIdentifier();

    if (v45)
    {
      sub_2409547C8();
    }
    return sub_240951E18();
  }
  return result;
}

uint64_t sub_240950B80()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HealthRecords19NewRecordsGenerator_domain;
  uint64_t v2 = sub_240951F18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_24083B354(v0 + OBJC_IVAR____TtC13HealthRecords19NewRecordsGenerator_context, (uint64_t (*)(void))type metadata accessor for HealthRecordsGeneratorContext);

  return swift_deallocClassInstance();
}

uint64_t sub_240950C4C()
{
  return type metadata accessor for NewRecordsGenerator();
}

uint64_t sub_240950C54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC13HealthRecords19NewRecordsGenerator_domain;
  uint64_t v4 = sub_240951F18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_240950CCC()
{
  if (!qword_26AFCF550)
  {
    sub_24082EE7C(255, &qword_26AFCF428, type metadata accessor for AccountNewRecordsData, MEMORY[0x263F8D488]);
    type metadata accessor for AllAccountsLabRecordsData(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AFCF550);
    }
  }
}

uint64_t sub_240950D6C()
{
  uint64_t v1 = sub_240951FB8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

unint64_t sub_240950E08(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *(void *)(sub_240951FB8() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_24094D950(a1, a2, v2 + v6, *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_240950EB0()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240950EE8@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v6 = *(uint64_t (**)(uint64_t, char *))(v2 + 16);
  uint64_t v7 = *(void *)a1;
  sub_240950CCC();
  uint64_t result = v6(v7, &a1[*(int *)(v8 + 48)]);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_240950F50()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_240950F90@<X0>(uint64_t *a1@<X8>)
{
  return sub_24094F588(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_240950FAC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_240950FBC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24094F738(a1, a2);
}

uint64_t sub_240950FC4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a2;
  if (!*a2)
  {
    a3(255);
    uint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_240951004@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24094DD5C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_240951020(uint64_t a1)
{
  uint64_t v2 = sub_240952B98();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24082EE7C(0, &qword_26AFCC6A8, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t v9 = type metadata accessor for NewRecordsFeedItemData(0);
  uint64_t v10 = (uint64_t *)(a1 + *(int *)(v9 + 24));
  uint64_t v11 = v10[1];
  if (v11)
  {
    uint64_t v12 = *v10;
    uint64_t v13 = sub_240951AB8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 1, 1, v13);
    sub_2408E4234();
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_2409562B0;
    uint64_t v15 = (uint64_t *)(a1 + *(int *)(v9 + 20));
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    uint64_t v18 = MEMORY[0x263F8D310];
    *(void *)(v14 + 56) = MEMORY[0x263F8D310];
    unint64_t v19 = sub_240853EA8();
    *(void *)(v14 + 32) = v17;
    *(void *)(v14 + 40) = v16;
    *(void *)(v14 + 96) = v18;
    *(void *)(v14 + 104) = v19;
    *(void *)(v14 + 64) = v19;
    *(void *)(v14 + 72) = v12;
    *(void *)(v14 + 80) = v11;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v20 = sub_240951AB8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v8, 1, 1, v20);
    sub_2408E4234();
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_240956800;
    uint64_t v22 = (uint64_t *)(a1 + *(int *)(v9 + 20));
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    *(void *)(v21 + 56) = MEMORY[0x263F8D310];
    *(void *)(v21 + 64) = sub_240853EA8();
    *(void *)(v21 + 32) = v24;
    *(void *)(v21 + 40) = v23;
  }
  swift_bridgeObjectRetain();
  sub_240952B88();
  uint64_t v25 = sub_2409535A8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_24081B5E4((uint64_t)v8, &qword_26AFCC6A8, MEMORY[0x263F07690]);
  return v25;
}

uint64_t sub_24095134C(uint64_t a1)
{
  uint64_t v2 = sub_2409526C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_2409528B8();
  uint64_t v6 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v40 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2409525E8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_240951020(a1);
  uint64_t v33 = v13;
  uint64_t v14 = *(void *)(a1 + *(int *)(type metadata accessor for NewRecordsFeedItemData(0) + 28));
  uint64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
    uint64_t v32 = v12;
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    uint64_t v16 = v9 + 16;
    uint64_t v18 = v14 + ((*(unsigned __int8 *)(v16 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 64));
    uint64_t v46 = *(void *)(v16 + 56);
    uint64_t v47 = v17;
    id v45 = (uint64_t (**)(char *, uint64_t))(v3 + 88);
    int v44 = *MEMORY[0x263F45F00];
    unint64_t v19 = (void (**)(char *, uint64_t))(v16 - 8);
    uint64_t v36 = (void (**)(char *, uint64_t))(v3 + 96);
    uint64_t v37 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v34 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v35 = (void (**)(char *, char *, uint64_t))(v6 + 32);
    v31[1] = v14;
    swift_bridgeObjectRetain();
    uint64_t v20 = (void *)MEMORY[0x263F8EE78];
    uint64_t v38 = v16;
    uint64_t v39 = v2;
    while (1)
    {
      v47(v11, v18, v8);
      if ((sub_2409525C8() & 1) == 0)
      {
        sub_2409525D8();
        int v21 = (*v45)(v5, v2);
        if (v21 == v44)
        {
          (*v36)(v5, v2);
          uint64_t v23 = v40;
          uint64_t v22 = v41;
          (*v35)(v40, v5, v41);
          sub_2409525B8();
          uint64_t v24 = sub_240952888();
          uint64_t v42 = v25;
          uint64_t v43 = v24;
          (*v34)(v23, v22);
          (*v19)(v11, v8);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v20 = sub_2408C296C(0, v20[2] + 1, 1, v20);
          }
          unint64_t v27 = v20[2];
          unint64_t v26 = v20[3];
          if (v27 >= v26 >> 1) {
            uint64_t v20 = sub_2408C296C((void *)(v26 > 1), v27 + 1, 1, v20);
          }
          void v20[2] = v27 + 1;
          id v28 = &v20[2 * v27];
          uint64_t v29 = v42;
          v28[4] = v43;
          v28[5] = v29;
          uint64_t v2 = v39;
          goto LABEL_5;
        }
        (*v37)(v5, v2);
      }
      (*v19)(v11, v8);
LABEL_5:
      v18 += v46;
      if (!--v15)
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = v32;
        break;
      }
    }
  }
  sub_2409549F8();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_240951778()
{
  return MEMORY[0x270EEDDD0]();
}

uint64_t sub_240951788()
{
  return MEMORY[0x270EEDE10]();
}

uint64_t sub_240951798()
{
  return MEMORY[0x270EEDE18]();
}

uint64_t sub_2409517A8()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_2409517B8()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_2409517C8()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_2409517D8()
{
  return MEMORY[0x270EEE0C8]();
}

uint64_t sub_2409517E8()
{
  return MEMORY[0x270EEE188]();
}

uint64_t sub_2409517F8()
{
  return MEMORY[0x270EEE208]();
}

uint64_t sub_240951808()
{
  return MEMORY[0x270EEE258]();
}

uint64_t sub_240951818()
{
  return MEMORY[0x270F31B78]();
}

uint64_t sub_240951828()
{
  return MEMORY[0x270EEE300]();
}

uint64_t sub_240951838()
{
  return MEMORY[0x270EEE338]();
}

uint64_t sub_240951848()
{
  return MEMORY[0x270EEE3B8]();
}

uint64_t sub_240951858()
{
  return MEMORY[0x270EEE3D0]();
}

uint64_t sub_240951868()
{
  return MEMORY[0x270EEE738]();
}

uint64_t sub_240951878()
{
  return MEMORY[0x270EEE768]();
}

uint64_t sub_240951888()
{
  return MEMORY[0x270EEE7B8]();
}

uint64_t sub_240951898()
{
  return MEMORY[0x270EEE828]();
}

uint64_t sub_2409518A8()
{
  return MEMORY[0x270EEE848]();
}

uint64_t sub_2409518B8()
{
  return MEMORY[0x270EEE890]();
}

uint64_t sub_2409518C8()
{
  return MEMORY[0x270EEE8E8]();
}

uint64_t sub_2409518D8()
{
  return MEMORY[0x270EEF830]();
}

uint64_t sub_2409518E8()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_2409518F8()
{
  return MEMORY[0x270EEFA18]();
}

uint64_t sub_240951908()
{
  return MEMORY[0x270EEFE20]();
}

uint64_t sub_240951918()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_240951928()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_240951938()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_240951948()
{
  return MEMORY[0x270EF02C8]();
}

uint64_t sub_240951958()
{
  return MEMORY[0x270EF0700]();
}

uint64_t sub_240951968()
{
  return MEMORY[0x270EF07A0]();
}

uint64_t sub_240951978()
{
  return MEMORY[0x270F31B98]();
}

uint64_t sub_240951988()
{
  return MEMORY[0x270F31BA8]();
}

uint64_t sub_240951998()
{
  return MEMORY[0x270F31BC0]();
}

uint64_t sub_2409519A8()
{
  return MEMORY[0x270EF0998]();
}

uint64_t sub_2409519B8()
{
  return MEMORY[0x270EF09A8]();
}

uint64_t sub_2409519C8()
{
  return MEMORY[0x270EF09B8]();
}

uint64_t sub_2409519D8()
{
  return MEMORY[0x270EF0AF0]();
}

uint64_t sub_2409519E8()
{
  return MEMORY[0x270EF0AF8]();
}

uint64_t sub_2409519F8()
{
  return MEMORY[0x270EF0B88]();
}

uint64_t sub_240951A08()
{
  return MEMORY[0x270EF0BA8]();
}

uint64_t sub_240951A18()
{
  return MEMORY[0x270EF0C30]();
}

uint64_t sub_240951A28()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_240951A38()
{
  return MEMORY[0x270EF0C58]();
}

uint64_t sub_240951A48()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_240951A58()
{
  return MEMORY[0x270EF0C88]();
}

uint64_t sub_240951A68()
{
  return MEMORY[0x270EF0CB0]();
}

uint64_t sub_240951A78()
{
  return MEMORY[0x270EF0CB8]();
}

uint64_t sub_240951A88()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_240951A98()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_240951AA8()
{
  return MEMORY[0x270EF0FA0]();
}

uint64_t sub_240951AB8()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t sub_240951AC8()
{
  return MEMORY[0x270EF10C8]();
}

uint64_t sub_240951AD8()
{
  return MEMORY[0x270EF10D8]();
}

uint64_t sub_240951AE8()
{
  return MEMORY[0x270EF1248]();
}

uint64_t sub_240951AF8()
{
  return MEMORY[0x270EF1258]();
}

uint64_t sub_240951B08()
{
  return MEMORY[0x270EF1350]();
}

uint64_t sub_240951B18()
{
  return MEMORY[0x270EF1378]();
}

uint64_t sub_240951B28()
{
  return MEMORY[0x270EF13B0]();
}

uint64_t sub_240951B38()
{
  return MEMORY[0x270EF1428]();
}

uint64_t sub_240951B48()
{
  return MEMORY[0x270EF1440]();
}

uint64_t sub_240951B58()
{
  return MEMORY[0x270EF1600]();
}

uint64_t sub_240951B68()
{
  return MEMORY[0x270EF1608]();
}

uint64_t sub_240951B78()
{
  return MEMORY[0x270EF16E0]();
}

uint64_t sub_240951B88()
{
  return MEMORY[0x270EF1700]();
}

uint64_t sub_240951B98()
{
  return MEMORY[0x270EF1738]();
}

uint64_t sub_240951BA8()
{
  return MEMORY[0x270F32640]();
}

uint64_t sub_240951BB8()
{
  return MEMORY[0x270F36140]();
}

uint64_t sub_240951BC8()
{
  return MEMORY[0x270F36148]();
}

uint64_t sub_240951BD8()
{
  return MEMORY[0x270F36180]();
}

uint64_t sub_240951BE8()
{
  return MEMORY[0x270F36220]();
}

uint64_t sub_240951BF8()
{
  return MEMORY[0x270F36238]();
}

uint64_t sub_240951C08()
{
  return MEMORY[0x270F362C0]();
}

uint64_t sub_240951C18()
{
  return MEMORY[0x270F362D0]();
}

uint64_t sub_240951C28()
{
  return MEMORY[0x270F362D8]();
}

uint64_t sub_240951C38()
{
  return MEMORY[0x270F362F8]();
}

uint64_t sub_240951C48()
{
  return MEMORY[0x270F36308]();
}

uint64_t sub_240951C58()
{
  return MEMORY[0x270F36310]();
}

uint64_t sub_240951C68()
{
  return MEMORY[0x270F36320]();
}

uint64_t sub_240951C78()
{
  return MEMORY[0x270F36328]();
}

uint64_t sub_240951C88()
{
  return MEMORY[0x270F36338]();
}

uint64_t sub_240951C98()
{
  return MEMORY[0x270F36340]();
}

uint64_t sub_240951CA8()
{
  return MEMORY[0x270F36348]();
}

uint64_t sub_240951CB8()
{
  return MEMORY[0x270F36350]();
}

uint64_t sub_240951CC8()
{
  return MEMORY[0x270F31BE8]();
}

uint64_t sub_240951CD8()
{
  return MEMORY[0x270F32660]();
}

uint64_t sub_240951CE8()
{
  return MEMORY[0x270F32668]();
}

uint64_t sub_240951CF8()
{
  return MEMORY[0x270F32670]();
}

uint64_t sub_240951D08()
{
  return MEMORY[0x270F32680]();
}

uint64_t sub_240951D18()
{
  return MEMORY[0x270F37298]();
}

uint64_t sub_240951D28()
{
  return MEMORY[0x270F36390]();
}

uint64_t sub_240951D38()
{
  return MEMORY[0x270F363B8]();
}

uint64_t sub_240951D48()
{
  return MEMORY[0x270F363C8]();
}

uint64_t sub_240951D58()
{
  return MEMORY[0x270F363D8]();
}

uint64_t sub_240951D68()
{
  return MEMORY[0x270F363E8]();
}

uint64_t sub_240951D78()
{
  return MEMORY[0x270F363F8]();
}

uint64_t sub_240951D88()
{
  return MEMORY[0x270F36400]();
}

uint64_t sub_240951D98()
{
  return MEMORY[0x270F36408]();
}

uint64_t sub_240951DA8()
{
  return MEMORY[0x270F36420]();
}

uint64_t sub_240951DB8()
{
  return MEMORY[0x270F36430]();
}

uint64_t sub_240951DC8()
{
  return MEMORY[0x270F36460]();
}

uint64_t sub_240951DD8()
{
  return MEMORY[0x270F36470]();
}

uint64_t sub_240951DE8()
{
  return MEMORY[0x270F36490]();
}

uint64_t sub_240951DF8()
{
  return MEMORY[0x270F36498]();
}

uint64_t sub_240951E08()
{
  return MEMORY[0x270F364A0]();
}

uint64_t sub_240951E18()
{
  return MEMORY[0x270F364B8]();
}

uint64_t sub_240951E28()
{
  return MEMORY[0x270F364C0]();
}

uint64_t sub_240951E38()
{
  return MEMORY[0x270F364C8]();
}

uint64_t sub_240951E48()
{
  return MEMORY[0x270F364D8]();
}

uint64_t sub_240951E58()
{
  return MEMORY[0x270F364F0]();
}

uint64_t sub_240951E68()
{
  return MEMORY[0x270F364F8]();
}

uint64_t sub_240951E78()
{
  return MEMORY[0x270F36500]();
}

uint64_t sub_240951E88()
{
  return MEMORY[0x270F372A0]();
}

uint64_t sub_240951E98()
{
  return MEMORY[0x270F36528]();
}

uint64_t sub_240951EA8()
{
  return MEMORY[0x270F36530]();
}

uint64_t sub_240951EB8()
{
  return MEMORY[0x270F36538]();
}

uint64_t sub_240951EC8()
{
  return MEMORY[0x270F36540]();
}

uint64_t sub_240951ED8()
{
  return MEMORY[0x270F36590]();
}

uint64_t sub_240951EE8()
{
  return MEMORY[0x270F365A0]();
}

uint64_t sub_240951EF8()
{
  return MEMORY[0x270F365D8]();
}

uint64_t sub_240951F08()
{
  return MEMORY[0x270F365F0]();
}

uint64_t sub_240951F18()
{
  return MEMORY[0x270F36608]();
}

uint64_t sub_240951F28()
{
  return MEMORY[0x270F36610]();
}

uint64_t sub_240951F38()
{
  return MEMORY[0x270F36618]();
}

uint64_t sub_240951F48()
{
  return MEMORY[0x270F36620]();
}

uint64_t sub_240951F58()
{
  return MEMORY[0x270F36628]();
}

uint64_t sub_240951F68()
{
  return MEMORY[0x270F36630]();
}

uint64_t sub_240951F78()
{
  return MEMORY[0x270F36638]();
}

uint64_t sub_240951F88()
{
  return MEMORY[0x270F36640]();
}

uint64_t sub_240951F98()
{
  return MEMORY[0x270F36648]();
}

uint64_t sub_240951FA8()
{
  return MEMORY[0x270F36658]();
}

uint64_t sub_240951FB8()
{
  return MEMORY[0x270F36660]();
}

uint64_t sub_240951FC8()
{
  return MEMORY[0x270F366D8]();
}

uint64_t sub_240951FD8()
{
  return MEMORY[0x270F366F0]();
}

uint64_t sub_240951FE8()
{
  return MEMORY[0x270F36708]();
}

uint64_t sub_240951FF8()
{
  return MEMORY[0x270F36730]();
}

uint64_t sub_240952008()
{
  return MEMORY[0x270F36738]();
}

uint64_t sub_240952018()
{
  return MEMORY[0x270F36740]();
}

uint64_t sub_240952028()
{
  return MEMORY[0x270F36748]();
}

uint64_t sub_240952038()
{
  return MEMORY[0x270F36750]();
}

uint64_t sub_240952048()
{
  return MEMORY[0x270F36758]();
}

uint64_t sub_240952058()
{
  return MEMORY[0x270F36760]();
}

uint64_t sub_240952068()
{
  return MEMORY[0x270F36768]();
}

uint64_t sub_240952078()
{
  return MEMORY[0x270F36770]();
}

uint64_t sub_240952088()
{
  return MEMORY[0x270F36788]();
}

uint64_t sub_240952098()
{
  return MEMORY[0x270F36798]();
}

uint64_t sub_2409520A8()
{
  return MEMORY[0x270F367A0]();
}

uint64_t sub_2409520B8()
{
  return MEMORY[0x270F367A8]();
}

uint64_t sub_2409520C8()
{
  return MEMORY[0x270F367B0]();
}

uint64_t sub_2409520D8()
{
  return MEMORY[0x270F36808]();
}

uint64_t sub_2409520E8()
{
  return MEMORY[0x270F36868]();
}

uint64_t sub_2409520F8()
{
  return MEMORY[0x270F36890]();
}

uint64_t sub_240952108()
{
  return MEMORY[0x270F36898]();
}

uint64_t sub_240952118()
{
  return MEMORY[0x270F368A0]();
}

uint64_t sub_240952128()
{
  return MEMORY[0x270F368A8]();
}

uint64_t sub_240952138()
{
  return MEMORY[0x270F368C8]();
}

uint64_t sub_240952148()
{
  return MEMORY[0x270F368D8]();
}

uint64_t sub_240952158()
{
  return MEMORY[0x270F368F0]();
}

uint64_t sub_240952168()
{
  return MEMORY[0x270F36900]();
}

uint64_t sub_240952178()
{
  return MEMORY[0x270F36908]();
}

uint64_t sub_240952188()
{
  return MEMORY[0x270F36910]();
}

uint64_t sub_240952198()
{
  return MEMORY[0x270F36928]();
}

uint64_t sub_2409521A8()
{
  return MEMORY[0x270F36930]();
}

uint64_t sub_2409521B8()
{
  return MEMORY[0x270F36948]();
}

uint64_t sub_2409521C8()
{
  return MEMORY[0x270F36978]();
}

uint64_t sub_2409521D8()
{
  return MEMORY[0x270F36980]();
}

uint64_t sub_2409521E8()
{
  return MEMORY[0x270F369B8]();
}

uint64_t sub_2409521F8()
{
  return MEMORY[0x270F369C0]();
}

uint64_t sub_240952208()
{
  return MEMORY[0x270F369C8]();
}

uint64_t sub_240952218()
{
  return MEMORY[0x270F369D8]();
}

uint64_t sub_240952228()
{
  return MEMORY[0x270F369E0]();
}

uint64_t sub_240952238()
{
  return MEMORY[0x270F36A08]();
}

uint64_t sub_240952248()
{
  return MEMORY[0x270F36A10]();
}

uint64_t sub_240952258()
{
  return MEMORY[0x270F36A28]();
}

uint64_t sub_240952268()
{
  return MEMORY[0x270F372A8]();
}

uint64_t sub_240952278()
{
  return MEMORY[0x270F36AC0]();
}

uint64_t sub_240952288()
{
  return MEMORY[0x270F36AC8]();
}

uint64_t sub_240952298()
{
  return MEMORY[0x270F36AF0]();
}

uint64_t sub_2409522A8()
{
  return MEMORY[0x270F36B00]();
}

uint64_t sub_2409522B8()
{
  return MEMORY[0x270F36B20]();
}

uint64_t sub_2409522C8()
{
  return MEMORY[0x270F36B28]();
}

uint64_t sub_2409522D8()
{
  return MEMORY[0x270F36B88]();
}

uint64_t sub_2409522E8()
{
  return MEMORY[0x270F36C08]();
}

uint64_t sub_2409522F8()
{
  return MEMORY[0x270F36CF8]();
}

uint64_t sub_240952308()
{
  return MEMORY[0x270F36D20]();
}

uint64_t sub_240952318()
{
  return MEMORY[0x270F36D28]();
}

uint64_t sub_240952328()
{
  return MEMORY[0x270F32698]();
}

uint64_t sub_240952338()
{
  return MEMORY[0x270F372B0]();
}

uint64_t sub_240952348()
{
  return MEMORY[0x270F372B8]();
}

uint64_t sub_240952358()
{
  return MEMORY[0x270F36FD0]();
}

uint64_t sub_240952368()
{
  return MEMORY[0x270F36FE8]();
}

uint64_t sub_240952378()
{
  return MEMORY[0x270F36FF8]();
}

uint64_t sub_240952388()
{
  return MEMORY[0x270F36DC8]();
}

uint64_t sub_240952398()
{
  return MEMORY[0x270F36DD0]();
}

uint64_t sub_2409523A8()
{
  return MEMORY[0x270F36DE8]();
}

uint64_t sub_2409523B8()
{
  return MEMORY[0x270F372C0]();
}

uint64_t sub_2409523C8()
{
  return MEMORY[0x270F372C8]();
}

uint64_t sub_2409523D8()
{
  return MEMORY[0x270F372D0]();
}

uint64_t sub_2409523E8()
{
  return MEMORY[0x270F372D8]();
}

uint64_t sub_2409523F8()
{
  return MEMORY[0x270F372E0]();
}

uint64_t sub_240952418()
{
  return MEMORY[0x270F372F0]();
}

uint64_t sub_240952428()
{
  return MEMORY[0x270F372F8]();
}

uint64_t sub_240952438()
{
  return MEMORY[0x270F37300]();
}

uint64_t sub_240952448()
{
  return MEMORY[0x270F37308]();
}

uint64_t sub_240952458()
{
  return MEMORY[0x270F37310]();
}

uint64_t sub_240952468()
{
  return MEMORY[0x270F37318]();
}

uint64_t sub_240952478()
{
  return MEMORY[0x270F37320]();
}

uint64_t sub_240952488()
{
  return MEMORY[0x270F37328]();
}

uint64_t sub_240952498()
{
  return MEMORY[0x270F37330]();
}

uint64_t sub_2409524A8()
{
  return MEMORY[0x270F37338]();
}

uint64_t sub_2409524B8()
{
  return MEMORY[0x270F37340]();
}

uint64_t sub_2409524C8()
{
  return MEMORY[0x270F37348]();
}

uint64_t sub_2409524D8()
{
  return MEMORY[0x270F37350]();
}

uint64_t sub_2409524E8()
{
  return MEMORY[0x270F37358]();
}

uint64_t sub_2409524F8()
{
  return MEMORY[0x270F37360]();
}

uint64_t sub_240952508()
{
  return MEMORY[0x270F37368]();
}

uint64_t sub_240952518()
{
  return MEMORY[0x270F37370]();
}

uint64_t sub_240952528()
{
  return MEMORY[0x270F37378]();
}

uint64_t sub_240952538()
{
  return MEMORY[0x270F37380]();
}

uint64_t sub_240952548()
{
  return MEMORY[0x270F37388]();
}

uint64_t sub_240952558()
{
  return MEMORY[0x270F37390]();
}

uint64_t sub_240952568()
{
  return MEMORY[0x270F37398]();
}

uint64_t sub_240952578()
{
  return MEMORY[0x270F373A0]();
}

uint64_t sub_240952588()
{
  return MEMORY[0x270F373A8]();
}

uint64_t sub_240952598()
{
  return MEMORY[0x270F373B0]();
}

uint64_t sub_2409525A8()
{
  return MEMORY[0x270F373B8]();
}

uint64_t sub_2409525B8()
{
  return MEMORY[0x270F373C0]();
}

uint64_t sub_2409525C8()
{
  return MEMORY[0x270F373C8]();
}

uint64_t sub_2409525D8()
{
  return MEMORY[0x270F373D0]();
}

uint64_t sub_2409525E8()
{
  return MEMORY[0x270F373D8]();
}

uint64_t sub_2409525F8()
{
  return MEMORY[0x270F373E0]();
}

uint64_t sub_240952608()
{
  return MEMORY[0x270F373E8]();
}

uint64_t sub_240952618()
{
  return MEMORY[0x270F373F0]();
}

uint64_t sub_240952628()
{
  return MEMORY[0x270F373F8]();
}

uint64_t sub_240952638()
{
  return MEMORY[0x270F37400]();
}

uint64_t sub_240952648()
{
  return MEMORY[0x270F37408]();
}

uint64_t sub_240952658()
{
  return MEMORY[0x270F37410]();
}

uint64_t sub_240952668()
{
  return MEMORY[0x270F37418]();
}

uint64_t sub_240952678()
{
  return MEMORY[0x270F37420]();
}

uint64_t sub_240952688()
{
  return MEMORY[0x270F37428]();
}

uint64_t sub_240952698()
{
  return MEMORY[0x270F37430]();
}

uint64_t sub_2409526A8()
{
  return MEMORY[0x270F37438]();
}

uint64_t sub_2409526B8()
{
  return MEMORY[0x270F37440]();
}

uint64_t sub_2409526C8()
{
  return MEMORY[0x270F37448]();
}

uint64_t sub_2409526D8()
{
  return MEMORY[0x270F37450]();
}

uint64_t sub_2409526E8()
{
  return MEMORY[0x270F37458]();
}

uint64_t sub_2409526F8()
{
  return MEMORY[0x270F37460]();
}

uint64_t sub_240952708()
{
  return MEMORY[0x270F37468]();
}

uint64_t sub_240952718()
{
  return MEMORY[0x270F37470]();
}

uint64_t sub_240952728()
{
  return MEMORY[0x270F37478]();
}

uint64_t sub_240952738()
{
  return MEMORY[0x270F37480]();
}

uint64_t sub_240952748()
{
  return MEMORY[0x270F37488]();
}

uint64_t sub_240952758()
{
  return MEMORY[0x270F37490]();
}

uint64_t sub_240952768()
{
  return MEMORY[0x270F37498]();
}

uint64_t sub_240952778()
{
  return MEMORY[0x270F374A0]();
}

uint64_t sub_240952788()
{
  return MEMORY[0x270F374A8]();
}

uint64_t sub_240952798()
{
  return MEMORY[0x270F374B0]();
}

uint64_t sub_2409527A8()
{
  return MEMORY[0x270F374B8]();
}

uint64_t sub_2409527B8()
{
  return MEMORY[0x270F374C0]();
}

uint64_t sub_2409527C8()
{
  return MEMORY[0x270F374C8]();
}

uint64_t sub_2409527D8()
{
  return MEMORY[0x270F374D0]();
}

uint64_t sub_2409527E8()
{
  return MEMORY[0x270F374D8]();
}

uint64_t sub_2409527F8()
{
  return MEMORY[0x270F374E0]();
}

uint64_t sub_240952808()
{
  return MEMORY[0x270F374E8]();
}

uint64_t sub_240952818()
{
  return MEMORY[0x270F374F0]();
}

uint64_t sub_240952828()
{
  return MEMORY[0x270F374F8]();
}

uint64_t sub_240952838()
{
  return MEMORY[0x270F37500]();
}

uint64_t sub_240952848()
{
  return MEMORY[0x270F37508]();
}

uint64_t sub_240952858()
{
  return MEMORY[0x270F37510]();
}

uint64_t sub_240952868()
{
  return MEMORY[0x270F37518]();
}

uint64_t sub_240952878()
{
  return MEMORY[0x270F37520]();
}

uint64_t sub_240952888()
{
  return MEMORY[0x270F37528]();
}

uint64_t sub_240952898()
{
  return MEMORY[0x270F37530]();
}

uint64_t sub_2409528A8()
{
  return MEMORY[0x270F37538]();
}

uint64_t sub_2409528B8()
{
  return MEMORY[0x270F37540]();
}

uint64_t sub_2409528C8()
{
  return MEMORY[0x270F37548]();
}

uint64_t sub_2409528D8()
{
  return MEMORY[0x270F37550]();
}

uint64_t sub_2409528E8()
{
  return MEMORY[0x270F37558]();
}

uint64_t sub_2409528F8()
{
  return MEMORY[0x270F37560]();
}

uint64_t sub_240952908()
{
  return MEMORY[0x270F37568]();
}

uint64_t sub_240952918()
{
  return MEMORY[0x270F37570]();
}

uint64_t sub_240952928()
{
  return MEMORY[0x270F37578]();
}

uint64_t sub_240952938()
{
  return MEMORY[0x270F37580]();
}

uint64_t sub_240952948()
{
  return MEMORY[0x270F37588]();
}

uint64_t sub_240952958()
{
  return MEMORY[0x270F37590]();
}

uint64_t sub_240952968()
{
  return MEMORY[0x270F37598]();
}

uint64_t sub_240952978()
{
  return MEMORY[0x270F375A0]();
}

uint64_t sub_240952988()
{
  return MEMORY[0x270F375A8]();
}

uint64_t sub_240952998()
{
  return MEMORY[0x270F375C0]();
}

uint64_t sub_2409529A8()
{
  return MEMORY[0x270F375C8]();
}

uint64_t sub_2409529B8()
{
  return MEMORY[0x270F375D0]();
}

uint64_t sub_2409529C8()
{
  return MEMORY[0x270F375D8]();
}

uint64_t sub_2409529D8()
{
  return MEMORY[0x270F375E0]();
}

uint64_t sub_2409529E8()
{
  return MEMORY[0x270F375E8]();
}

uint64_t sub_2409529F8()
{
  return MEMORY[0x270F375F0]();
}

uint64_t sub_240952A08()
{
  return MEMORY[0x270F375F8]();
}

uint64_t sub_240952A18()
{
  return MEMORY[0x270F37600]();
}

uint64_t sub_240952A28()
{
  return MEMORY[0x270F37608]();
}

uint64_t sub_240952A38()
{
  return MEMORY[0x270F37610]();
}

uint64_t sub_240952A48()
{
  return MEMORY[0x270F37618]();
}

uint64_t sub_240952A58()
{
  return MEMORY[0x270F37620]();
}

uint64_t sub_240952A68()
{
  return MEMORY[0x270F37660]();
}

uint64_t sub_240952A78()
{
  return MEMORY[0x270F37668]();
}

uint64_t sub_240952A88()
{
  return MEMORY[0x270F37670]();
}

uint64_t sub_240952A98()
{
  return MEMORY[0x270F37678]();
}

uint64_t sub_240952AA8()
{
  return MEMORY[0x270F37680]();
}

uint64_t sub_240952AB8()
{
  return MEMORY[0x270F37688]();
}

uint64_t sub_240952AC8()
{
  return MEMORY[0x270F37690]();
}

uint64_t sub_240952AD8()
{
  return MEMORY[0x270F37698]();
}

uint64_t sub_240952AE8()
{
  return MEMORY[0x270F376A0]();
}

uint64_t sub_240952AF8()
{
  return MEMORY[0x270F376C0]();
}

uint64_t sub_240952B08()
{
  return MEMORY[0x270F376C8]();
}

uint64_t sub_240952B18()
{
  return MEMORY[0x270F376D0]();
}

uint64_t sub_240952B28()
{
  return MEMORY[0x270F376D8]();
}

uint64_t sub_240952B38()
{
  return MEMORY[0x270F376E0]();
}

uint64_t sub_240952B48()
{
  return MEMORY[0x270F376E8]();
}

uint64_t sub_240952B58()
{
  return MEMORY[0x270F376F0]();
}

uint64_t sub_240952B68()
{
  return MEMORY[0x270F376F8]();
}

uint64_t sub_240952B78()
{
  return MEMORY[0x270F37700]();
}

uint64_t sub_240952B88()
{
  return MEMORY[0x270F37708]();
}

uint64_t sub_240952B98()
{
  return MEMORY[0x270F37710]();
}

uint64_t sub_240952BA8()
{
  return MEMORY[0x270F37718]();
}

uint64_t sub_240952BB8()
{
  return MEMORY[0x270F37720]();
}

uint64_t sub_240952BC8()
{
  return MEMORY[0x270F37728]();
}

uint64_t sub_240952BD8()
{
  return MEMORY[0x270F37730]();
}

uint64_t sub_240952BE8()
{
  return MEMORY[0x270F37738]();
}

uint64_t sub_240952BF8()
{
  return MEMORY[0x270F37740]();
}

uint64_t sub_240952C08()
{
  return MEMORY[0x270F37748]();
}

uint64_t sub_240952C18()
{
  return MEMORY[0x270F37750]();
}

uint64_t sub_240952C28()
{
  return MEMORY[0x270F37758]();
}

uint64_t sub_240952C38()
{
  return MEMORY[0x270F37760]();
}

uint64_t sub_240952C48()
{
  return MEMORY[0x270F37768]();
}

uint64_t sub_240952C58()
{
  return MEMORY[0x270F37770]();
}

uint64_t sub_240952C68()
{
  return MEMORY[0x270F37778]();
}

uint64_t sub_240952C78()
{
  return MEMORY[0x270F37780]();
}

uint64_t sub_240952C88()
{
  return MEMORY[0x270F37788]();
}

uint64_t sub_240952C98()
{
  return MEMORY[0x270F37790]();
}

uint64_t sub_240952CA8()
{
  return MEMORY[0x270F37798]();
}

uint64_t sub_240952CB8()
{
  return MEMORY[0x270F377A0]();
}

uint64_t sub_240952CC8()
{
  return MEMORY[0x270F377A8]();
}

uint64_t sub_240952CD8()
{
  return MEMORY[0x270F377B0]();
}

uint64_t sub_240952CE8()
{
  return MEMORY[0x270F377B8]();
}

uint64_t sub_240952CF8()
{
  return MEMORY[0x270F377C0]();
}

uint64_t sub_240952D08()
{
  return MEMORY[0x270F377C8]();
}

uint64_t sub_240952D18()
{
  return MEMORY[0x270F377D0]();
}

uint64_t sub_240952D28()
{
  return MEMORY[0x270F377D8]();
}

uint64_t sub_240952D38()
{
  return MEMORY[0x270F377E0]();
}

uint64_t sub_240952D48()
{
  return MEMORY[0x270F377F0]();
}

uint64_t sub_240952D58()
{
  return MEMORY[0x270F377F8]();
}

uint64_t sub_240952D68()
{
  return MEMORY[0x270F37800]();
}

uint64_t sub_240952D78()
{
  return MEMORY[0x270F37808]();
}

uint64_t sub_240952D88()
{
  return MEMORY[0x270F37810]();
}

uint64_t sub_240952D98()
{
  return MEMORY[0x270F37818]();
}

uint64_t sub_240952DA8()
{
  return MEMORY[0x270F37820]();
}

uint64_t sub_240952DD8()
{
  return MEMORY[0x270F37838]();
}

uint64_t sub_240952DE8()
{
  return MEMORY[0x270F37840]();
}

uint64_t sub_240952E08()
{
  return MEMORY[0x270F37850]();
}

uint64_t sub_240952E18()
{
  return MEMORY[0x270F37858]();
}

uint64_t sub_240952E28()
{
  return MEMORY[0x270F37860]();
}

uint64_t sub_240952E38()
{
  return MEMORY[0x270F37868]();
}

uint64_t sub_240952E48()
{
  return MEMORY[0x270F37870]();
}

uint64_t sub_240952E58()
{
  return MEMORY[0x270F37878]();
}

uint64_t sub_240952E68()
{
  return MEMORY[0x270F37880]();
}

uint64_t sub_240952E78()
{
  return MEMORY[0x270F37888]();
}

uint64_t sub_240952E88()
{
  return MEMORY[0x270F37890]();
}

uint64_t sub_240952E98()
{
  return MEMORY[0x270F37898]();
}

uint64_t sub_240952EA8()
{
  return MEMORY[0x270F378A0]();
}

uint64_t sub_240952EB8()
{
  return MEMORY[0x270F378A8]();
}

uint64_t sub_240952EC8()
{
  return MEMORY[0x270F378B0]();
}

uint64_t sub_240952ED8()
{
  return MEMORY[0x270F378B8]();
}

uint64_t sub_240952EE8()
{
  return MEMORY[0x270F378C0]();
}

uint64_t sub_240952EF8()
{
  return MEMORY[0x270F378C8]();
}

uint64_t sub_240952F08()
{
  return MEMORY[0x270F378D0]();
}

uint64_t sub_240952F18()
{
  return MEMORY[0x270F378D8]();
}

uint64_t sub_240952F28()
{
  return MEMORY[0x270F378E0]();
}

uint64_t sub_240952F38()
{
  return MEMORY[0x270F378E8]();
}

uint64_t sub_240952F48()
{
  return MEMORY[0x270F378F0]();
}

uint64_t sub_240952F58()
{
  return MEMORY[0x270F378F8]();
}

uint64_t sub_240952F68()
{
  return MEMORY[0x270F37900]();
}

uint64_t sub_240952F78()
{
  return MEMORY[0x270F37908]();
}

uint64_t sub_240952F88()
{
  return MEMORY[0x270F37910]();
}

uint64_t sub_240952F98()
{
  return MEMORY[0x270F37918]();
}

uint64_t sub_240952FA8()
{
  return MEMORY[0x270F37920]();
}

uint64_t sub_240952FB8()
{
  return MEMORY[0x270F37928]();
}

uint64_t sub_240952FC8()
{
  return MEMORY[0x270F37930]();
}

uint64_t sub_240952FD8()
{
  return MEMORY[0x270F37938]();
}

uint64_t sub_240952FE8()
{
  return MEMORY[0x270F37940]();
}

uint64_t sub_240952FF8()
{
  return MEMORY[0x270F37948]();
}

uint64_t sub_240953008()
{
  return MEMORY[0x270F37950]();
}

uint64_t sub_240953018()
{
  return MEMORY[0x270F37958]();
}

uint64_t sub_240953028()
{
  return MEMORY[0x270F37960]();
}

uint64_t sub_240953038()
{
  return MEMORY[0x270F37968]();
}

uint64_t sub_240953048()
{
  return MEMORY[0x270F37970]();
}

uint64_t sub_240953058()
{
  return MEMORY[0x270F37978]();
}

uint64_t sub_240953068()
{
  return MEMORY[0x270F37980]();
}

uint64_t sub_240953078()
{
  return MEMORY[0x270F37988]();
}

uint64_t sub_240953088()
{
  return MEMORY[0x270F37990]();
}

uint64_t sub_240953098()
{
  return MEMORY[0x270F37998]();
}

uint64_t sub_2409530A8()
{
  return MEMORY[0x270F379A0]();
}

uint64_t sub_2409530B8()
{
  return MEMORY[0x270F379A8]();
}

uint64_t sub_2409530C8()
{
  return MEMORY[0x270F379B0]();
}

uint64_t sub_2409530D8()
{
  return MEMORY[0x270F379B8]();
}

uint64_t sub_2409530E8()
{
  return MEMORY[0x270F379C0]();
}

uint64_t sub_2409530F8()
{
  return MEMORY[0x270F379C8]();
}

uint64_t sub_240953108()
{
  return MEMORY[0x270F379D0]();
}

uint64_t sub_240953118()
{
  return MEMORY[0x270F379D8]();
}

uint64_t sub_240953128()
{
  return MEMORY[0x270F379E0]();
}

uint64_t sub_240953138()
{
  return MEMORY[0x270F379E8]();
}

uint64_t sub_240953148()
{
  return MEMORY[0x270F379F0]();
}

uint64_t sub_240953158()
{
  return MEMORY[0x270F379F8]();
}

uint64_t sub_240953168()
{
  return MEMORY[0x270F37A00]();
}

uint64_t sub_240953178()
{
  return MEMORY[0x270F37A08]();
}

uint64_t sub_240953188()
{
  return MEMORY[0x270F37A10]();
}

uint64_t sub_240953198()
{
  return MEMORY[0x270F37A18]();
}

uint64_t sub_2409531A8()
{
  return MEMORY[0x270F37A20]();
}

uint64_t sub_2409531B8()
{
  return MEMORY[0x270F37A28]();
}

uint64_t sub_2409531C8()
{
  return MEMORY[0x270F37A30]();
}

uint64_t sub_2409531D8()
{
  return MEMORY[0x270F37A38]();
}

uint64_t sub_2409531E8()
{
  return MEMORY[0x270F37A40]();
}

uint64_t sub_2409531F8()
{
  return MEMORY[0x270F37A48]();
}

uint64_t sub_240953208()
{
  return MEMORY[0x270F37A50]();
}

uint64_t sub_240953218()
{
  return MEMORY[0x270F37A58]();
}

uint64_t sub_240953228()
{
  return MEMORY[0x270F37A60]();
}

uint64_t sub_240953238()
{
  return MEMORY[0x270F37A68]();
}

uint64_t sub_240953248()
{
  return MEMORY[0x270F37A70]();
}

uint64_t sub_240953258()
{
  return MEMORY[0x270F37A78]();
}

uint64_t sub_240953268()
{
  return MEMORY[0x270F37A80]();
}

uint64_t sub_240953278()
{
  return MEMORY[0x270F37A88]();
}

uint64_t sub_240953288()
{
  return MEMORY[0x270F37A90]();
}

uint64_t sub_240953298()
{
  return MEMORY[0x270F37A98]();
}

uint64_t sub_2409532A8()
{
  return MEMORY[0x270F37AA0]();
}

uint64_t sub_2409532B8()
{
  return MEMORY[0x270F37AA8]();
}

uint64_t sub_2409532C8()
{
  return MEMORY[0x270F37AB0]();
}

uint64_t sub_2409532D8()
{
  return MEMORY[0x270F37AB8]();
}

uint64_t sub_2409532F8()
{
  return MEMORY[0x270F37AC8]();
}

uint64_t sub_240953308()
{
  return MEMORY[0x270F37AD0]();
}

uint64_t sub_240953318()
{
  return MEMORY[0x270F37AE0]();
}

uint64_t sub_240953328()
{
  return MEMORY[0x270F37AE8]();
}

uint64_t sub_240953338()
{
  return MEMORY[0x270F37AF0]();
}

uint64_t sub_240953348()
{
  return MEMORY[0x270F37AF8]();
}

uint64_t sub_240953358()
{
  return MEMORY[0x270F37B00]();
}

uint64_t sub_240953368()
{
  return MEMORY[0x270F37B08]();
}

uint64_t sub_240953378()
{
  return MEMORY[0x270F37B10]();
}

uint64_t sub_240953388()
{
  return MEMORY[0x270F37B18]();
}

uint64_t sub_240953398()
{
  return MEMORY[0x270F37B20]();
}

uint64_t sub_2409533A8()
{
  return MEMORY[0x270F37B28]();
}

uint64_t sub_2409533B8()
{
  return MEMORY[0x270F37B30]();
}

uint64_t sub_2409533C8()
{
  return MEMORY[0x270F37B38]();
}

uint64_t sub_2409533D8()
{
  return MEMORY[0x270F37B40]();
}

uint64_t sub_2409533F8()
{
  return MEMORY[0x270F37B50]();
}

uint64_t sub_240953408()
{
  return MEMORY[0x270F37B58]();
}

uint64_t sub_240953418()
{
  return MEMORY[0x270F37B60]();
}

uint64_t sub_240953428()
{
  return MEMORY[0x270F37B68]();
}

uint64_t sub_240953438()
{
  return MEMORY[0x270F37B70]();
}

uint64_t sub_240953448()
{
  return MEMORY[0x270F37B78]();
}

uint64_t sub_240953458()
{
  return MEMORY[0x270F37B80]();
}

uint64_t sub_240953468()
{
  return MEMORY[0x270F37B88]();
}

uint64_t sub_240953478()
{
  return MEMORY[0x270F37B90]();
}

uint64_t sub_240953488()
{
  return MEMORY[0x270F37B98]();
}

uint64_t sub_240953498()
{
  return MEMORY[0x270F37BA0]();
}

uint64_t sub_2409534A8()
{
  return MEMORY[0x270F37BA8]();
}

uint64_t sub_2409534B8()
{
  return MEMORY[0x270F37BB0]();
}

uint64_t sub_2409534C8()
{
  return MEMORY[0x270F37BB8]();
}

uint64_t sub_2409534D8()
{
  return MEMORY[0x270F37BC0]();
}

uint64_t sub_2409534E8()
{
  return MEMORY[0x270F37BC8]();
}

uint64_t sub_2409534F8()
{
  return MEMORY[0x270F37BD0]();
}

uint64_t sub_240953508()
{
  return MEMORY[0x270F37BD8]();
}

uint64_t sub_240953518()
{
  return MEMORY[0x270F37BE0]();
}

uint64_t sub_240953528()
{
  return MEMORY[0x270F37BE8]();
}

uint64_t sub_240953538()
{
  return MEMORY[0x270F37BF0]();
}

uint64_t sub_240953548()
{
  return MEMORY[0x270F37BF8]();
}

uint64_t sub_240953558()
{
  return MEMORY[0x270F37C00]();
}

uint64_t sub_240953568()
{
  return MEMORY[0x270F37C08]();
}

uint64_t sub_240953578()
{
  return MEMORY[0x270F37C10]();
}

uint64_t sub_240953588()
{
  return MEMORY[0x270F37C18]();
}

uint64_t sub_240953598()
{
  return MEMORY[0x270F37C20]();
}

uint64_t sub_2409535A8()
{
  return MEMORY[0x270F37C28]();
}

uint64_t sub_2409535B8()
{
  return MEMORY[0x270F31E88]();
}

uint64_t sub_2409535C8()
{
  return MEMORY[0x270F31E98]();
}

uint64_t sub_2409535D8()
{
  return MEMORY[0x270F31EA0]();
}

uint64_t sub_2409535E8()
{
  return MEMORY[0x270F31EB0]();
}

uint64_t sub_2409535F8()
{
  return MEMORY[0x270F31EB8]();
}

uint64_t sub_240953608()
{
  return MEMORY[0x270F322A8]();
}

uint64_t sub_240953618()
{
  return MEMORY[0x270F322B0]();
}

uint64_t sub_240953628()
{
  return MEMORY[0x270F32308]();
}

uint64_t sub_240953638()
{
  return MEMORY[0x270F32330]();
}

uint64_t sub_240953648()
{
  return MEMORY[0x270F370D0]();
}

uint64_t sub_240953658()
{
  return MEMORY[0x270F370D8]();
}

uint64_t sub_240953668()
{
  return MEMORY[0x270F326E8]();
}

uint64_t sub_240953678()
{
  return MEMORY[0x270F326F0]();
}

uint64_t sub_240953688()
{
  return MEMORY[0x270F32738]();
}

uint64_t sub_240953698()
{
  return MEMORY[0x270F32740]();
}

uint64_t sub_2409536A8()
{
  return MEMORY[0x270F32750]();
}

uint64_t sub_2409536B8()
{
  return MEMORY[0x270F32758]();
}

uint64_t sub_2409536C8()
{
  return MEMORY[0x270F32770]();
}

uint64_t sub_2409536D8()
{
  return MEMORY[0x270F32778]();
}

uint64_t sub_2409536E8()
{
  return MEMORY[0x270F32798]();
}

uint64_t sub_2409536F8()
{
  return MEMORY[0x270F327A8]();
}

uint64_t sub_240953708()
{
  return MEMORY[0x270F327B8]();
}

uint64_t sub_240953718()
{
  return MEMORY[0x270F328D0]();
}

uint64_t sub_240953728()
{
  return MEMORY[0x270F32BD8]();
}

uint64_t sub_240953738()
{
  return MEMORY[0x270F32BE0]();
}

uint64_t sub_240953748()
{
  return MEMORY[0x270F32BE8]();
}

uint64_t sub_240953758()
{
  return MEMORY[0x270F32BF0]();
}

uint64_t sub_240953768()
{
  return MEMORY[0x270F32BF8]();
}

uint64_t sub_240953778()
{
  return MEMORY[0x270F32C00]();
}

uint64_t sub_240953788()
{
  return MEMORY[0x270F32D28]();
}

uint64_t sub_240953798()
{
  return MEMORY[0x270F32D30]();
}

uint64_t sub_2409537A8()
{
  return MEMORY[0x270F32D38]();
}

uint64_t sub_2409537B8()
{
  return MEMORY[0x270F32D50]();
}

uint64_t sub_2409537C8()
{
  return MEMORY[0x270F32D60]();
}

uint64_t sub_2409537D8()
{
  return MEMORY[0x270F32D68]();
}

uint64_t sub_2409537E8()
{
  return MEMORY[0x270F32E08]();
}

uint64_t sub_2409537F8()
{
  return MEMORY[0x270F32E10]();
}

uint64_t sub_240953808()
{
  return MEMORY[0x270F32E18]();
}

uint64_t sub_240953818()
{
  return MEMORY[0x270F32E98]();
}

uint64_t sub_240953828()
{
  return MEMORY[0x270F32EE8]();
}

uint64_t sub_240953838()
{
  return MEMORY[0x270F32EF0]();
}

uint64_t sub_240953848()
{
  return MEMORY[0x270F330B8]();
}

uint64_t sub_240953858()
{
  return MEMORY[0x270F33118]();
}

uint64_t sub_240953868()
{
  return MEMORY[0x270F33180]();
}

uint64_t sub_240953878()
{
  return MEMORY[0x270F331B0]();
}

uint64_t sub_240953888()
{
  return MEMORY[0x270F33250]();
}

uint64_t sub_240953898()
{
  return MEMORY[0x270F33278]();
}

uint64_t sub_2409538A8()
{
  return MEMORY[0x270F33280]();
}

uint64_t sub_2409538B8()
{
  return MEMORY[0x270F33288]();
}

uint64_t sub_2409538C8()
{
  return MEMORY[0x270F33290]();
}

uint64_t sub_2409538D8()
{
  return MEMORY[0x270F33378]();
}

uint64_t sub_2409538E8()
{
  return MEMORY[0x270F33380]();
}

uint64_t sub_2409538F8()
{
  return MEMORY[0x270F33388]();
}

uint64_t sub_240953908()
{
  return MEMORY[0x270F33390]();
}

uint64_t sub_240953918()
{
  return MEMORY[0x270F33398]();
}

uint64_t sub_240953928()
{
  return MEMORY[0x270F333B8]();
}

uint64_t sub_240953938()
{
  return MEMORY[0x270F333D0]();
}

uint64_t sub_240953948()
{
  return MEMORY[0x270F333D8]();
}

uint64_t sub_240953958()
{
  return MEMORY[0x270F333E0]();
}

uint64_t sub_240953968()
{
  return MEMORY[0x270F333E8]();
}

uint64_t sub_240953978()
{
  return MEMORY[0x270F33508]();
}

uint64_t sub_240953988()
{
  return MEMORY[0x270F33520]();
}

uint64_t sub_240953998()
{
  return MEMORY[0x270F33530]();
}

uint64_t sub_2409539A8()
{
  return MEMORY[0x270F33538]();
}

uint64_t sub_2409539B8()
{
  return MEMORY[0x270F33560]();
}

uint64_t sub_2409539C8()
{
  return MEMORY[0x270F33568]();
}

uint64_t sub_2409539D8()
{
  return MEMORY[0x270F336C8]();
}

uint64_t sub_2409539E8()
{
  return MEMORY[0x270F336D0]();
}

uint64_t sub_2409539F8()
{
  return MEMORY[0x270F336D8]();
}

uint64_t sub_240953A08()
{
  return MEMORY[0x270F336E0]();
}

uint64_t sub_240953A18()
{
  return MEMORY[0x270F33748]();
}

uint64_t sub_240953A28()
{
  return MEMORY[0x270F33868]();
}

uint64_t sub_240953A38()
{
  return MEMORY[0x270F33880]();
}

uint64_t sub_240953A48()
{
  return MEMORY[0x270F33888]();
}

uint64_t sub_240953A58()
{
  return MEMORY[0x270F339D0]();
}

uint64_t sub_240953A68()
{
  return MEMORY[0x270F33A38]();
}

uint64_t sub_240953A78()
{
  return MEMORY[0x270F33A48]();
}

uint64_t sub_240953A88()
{
  return MEMORY[0x270F33AB0]();
}

uint64_t sub_240953A98()
{
  return MEMORY[0x270F33AB8]();
}

uint64_t sub_240953AA8()
{
  return MEMORY[0x270F33B50]();
}

uint64_t sub_240953AB8()
{
  return MEMORY[0x270F33B58]();
}

uint64_t sub_240953AC8()
{
  return MEMORY[0x270F33BF8]();
}

uint64_t sub_240953AD8()
{
  return MEMORY[0x270F33C50]();
}

uint64_t sub_240953AE8()
{
  return MEMORY[0x270F34068]();
}

uint64_t sub_240953AF8()
{
  return MEMORY[0x270F34070]();
}

uint64_t sub_240953B08()
{
  return MEMORY[0x270F34078]();
}

uint64_t sub_240953B18()
{
  return MEMORY[0x270F34080]();
}

uint64_t sub_240953B28()
{
  return MEMORY[0x270F34088]();
}

uint64_t sub_240953B38()
{
  return MEMORY[0x270F340A0]();
}

uint64_t sub_240953B48()
{
  return MEMORY[0x270F340A8]();
}

uint64_t sub_240953B58()
{
  return MEMORY[0x270F340B0]();
}

uint64_t sub_240953B68()
{
  return MEMORY[0x270F340D0]();
}

uint64_t sub_240953B78()
{
  return MEMORY[0x270F340D8]();
}

uint64_t sub_240953B88()
{
  return MEMORY[0x270F340E0]();
}

uint64_t sub_240953B98()
{
  return MEMORY[0x270F34108]();
}

uint64_t sub_240953BA8()
{
  return MEMORY[0x270F34110]();
}

uint64_t sub_240953BB8()
{
  return MEMORY[0x270F34130]();
}

uint64_t sub_240953BC8()
{
  return MEMORY[0x270F34160]();
}

uint64_t sub_240953BD8()
{
  return MEMORY[0x270F34178]();
}

uint64_t sub_240953BE8()
{
  return MEMORY[0x270F34190]();
}

uint64_t sub_240953BF8()
{
  return MEMORY[0x270F34298]();
}

uint64_t sub_240953C08()
{
  return MEMORY[0x270F342E0]();
}

uint64_t sub_240953C28()
{
  return MEMORY[0x270F342F0]();
}

uint64_t sub_240953C38()
{
  return MEMORY[0x270F342F8]();
}

uint64_t sub_240953C48()
{
  return MEMORY[0x270F34300]();
}

uint64_t sub_240953C58()
{
  return MEMORY[0x270F34328]();
}

uint64_t sub_240953C68()
{
  return MEMORY[0x270F34330]();
}

uint64_t sub_240953C78()
{
  return MEMORY[0x270F343A8]();
}

uint64_t sub_240953C88()
{
  return MEMORY[0x270F343B8]();
}

uint64_t sub_240953C98()
{
  return MEMORY[0x270F343C8]();
}

uint64_t sub_240953CA8()
{
  return MEMORY[0x270F344F0]();
}

uint64_t sub_240953CB8()
{
  return MEMORY[0x270F344F8]();
}

uint64_t sub_240953CC8()
{
  return MEMORY[0x270F34500]();
}

uint64_t sub_240953CD8()
{
  return MEMORY[0x270F34510]();
}

uint64_t sub_240953CE8()
{
  return MEMORY[0x270F345C8]();
}

uint64_t sub_240953CF8()
{
  return MEMORY[0x270F345D0]();
}

uint64_t sub_240953D08()
{
  return MEMORY[0x270F345D8]();
}

uint64_t sub_240953D18()
{
  return MEMORY[0x270F34640]();
}

uint64_t sub_240953D28()
{
  return MEMORY[0x270F34650]();
}

uint64_t sub_240953D38()
{
  return MEMORY[0x270F346D8]();
}

uint64_t sub_240953D48()
{
  return MEMORY[0x270F34750]();
}

uint64_t sub_240953D58()
{
  return MEMORY[0x270F34780]();
}

uint64_t sub_240953D68()
{
  return MEMORY[0x270F347A8]();
}

uint64_t sub_240953D78()
{
  return MEMORY[0x270F347B0]();
}

uint64_t sub_240953D88()
{
  return MEMORY[0x270F348E8]();
}

uint64_t sub_240953D98()
{
  return MEMORY[0x270F348F0]();
}

uint64_t sub_240953DA8()
{
  return MEMORY[0x270F34900]();
}

uint64_t sub_240953DB8()
{
  return MEMORY[0x270F34918]();
}

uint64_t sub_240953DE8()
{
  return MEMORY[0x270F34930]();
}

uint64_t sub_240953DF8()
{
  return MEMORY[0x270F34938]();
}

uint64_t sub_240953E08()
{
  return MEMORY[0x270F34940]();
}

uint64_t sub_240953E18()
{
  return MEMORY[0x270F34948]();
}

uint64_t sub_240953E28()
{
  return MEMORY[0x270F34968]();
}

uint64_t sub_240953E38()
{
  return MEMORY[0x270F34980]();
}

uint64_t sub_240953E48()
{
  return MEMORY[0x270F34988]();
}

uint64_t sub_240953E58()
{
  return MEMORY[0x270F34990]();
}

uint64_t sub_240953E68()
{
  return MEMORY[0x270F34A70]();
}

uint64_t sub_240953E78()
{
  return MEMORY[0x270F34C30]();
}

uint64_t sub_240953E88()
{
  return MEMORY[0x270F34C38]();
}

uint64_t sub_240953E98()
{
  return MEMORY[0x270F34C40]();
}

uint64_t sub_240953EA8()
{
  return MEMORY[0x270F34C48]();
}

uint64_t sub_240953EB8()
{
  return MEMORY[0x270F350B0]();
}

uint64_t sub_240953EC8()
{
  return MEMORY[0x270F350B8]();
}

uint64_t sub_240953ED8()
{
  return MEMORY[0x270F350D0]();
}

uint64_t sub_240953EE8()
{
  return MEMORY[0x270F350D8]();
}

uint64_t sub_240953EF8()
{
  return MEMORY[0x270F37020]();
}

uint64_t sub_240953F08()
{
  return MEMORY[0x270F37028]();
}

uint64_t sub_240953F18()
{
  return MEMORY[0x270F37030]();
}

uint64_t sub_240953F28()
{
  return MEMORY[0x270F37110]();
}

uint64_t sub_240953F38()
{
  return MEMORY[0x270F37118]();
}

uint64_t sub_240953F48()
{
  return MEMORY[0x270F37C38]();
}

uint64_t sub_240953F58()
{
  return MEMORY[0x270F371D8]();
}

uint64_t sub_240953F68()
{
  return MEMORY[0x270F371E8]();
}

uint64_t sub_240953F78()
{
  return MEMORY[0x270F371F0]();
}

uint64_t sub_240953F88()
{
  return MEMORY[0x270F37200]();
}

uint64_t sub_240953F98()
{
  return MEMORY[0x270F37208]();
}

uint64_t sub_240953FA8()
{
  return MEMORY[0x270F37210]();
}

uint64_t sub_240953FB8()
{
  return MEMORY[0x270F37218]();
}

uint64_t sub_240953FC8()
{
  return MEMORY[0x270F37230]();
}

uint64_t sub_240953FD8()
{
  return MEMORY[0x270F37250]();
}

uint64_t sub_240953FE8()
{
  return MEMORY[0x270F37258]();
}

uint64_t sub_240953FF8()
{
  return MEMORY[0x270F37260]();
}

uint64_t sub_240954008()
{
  return MEMORY[0x270F37268]();
}

uint64_t sub_240954018()
{
  return MEMORY[0x270F37270]();
}

uint64_t sub_240954028()
{
  return MEMORY[0x270F37278]();
}

uint64_t sub_240954038()
{
  return MEMORY[0x270FA2D00]();
}

uint64_t sub_240954048()
{
  return MEMORY[0x270F36E38]();
}

uint64_t sub_240954058()
{
  return MEMORY[0x270F36E40]();
}

uint64_t sub_240954068()
{
  return MEMORY[0x270F36E48]();
}

uint64_t sub_240954078()
{
  return MEMORY[0x270F36E58]();
}

uint64_t sub_240954088()
{
  return MEMORY[0x270F36E78]();
}

uint64_t sub_240954098()
{
  return MEMORY[0x270F36E98]();
}

uint64_t sub_2409540A8()
{
  return MEMORY[0x270F35100]();
}

uint64_t sub_2409540B8()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_2409540C8()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_2409540D8()
{
  return MEMORY[0x270F81748]();
}

uint64_t sub_2409540E8()
{
  return MEMORY[0x270EE3820]();
}

uint64_t sub_2409540F8()
{
  return MEMORY[0x270EE3838]();
}

uint64_t sub_240954108()
{
  return MEMORY[0x270F36EC0]();
}

uint64_t sub_240954118()
{
  return MEMORY[0x270EE3840]();
}

uint64_t sub_240954128()
{
  return MEMORY[0x270EE3850]();
}

uint64_t sub_240954138()
{
  return MEMORY[0x270EE3858]();
}

uint64_t sub_240954148()
{
  return MEMORY[0x270EE3880]();
}

uint64_t sub_240954158()
{
  return MEMORY[0x270EE38B0]();
}

uint64_t sub_240954168()
{
  return MEMORY[0x270EE38C8]();
}

uint64_t sub_240954178()
{
  return MEMORY[0x270EE38E0]();
}

uint64_t sub_240954188()
{
  return MEMORY[0x270F36EE8]();
}

uint64_t sub_240954198()
{
  return MEMORY[0x270F36EF0]();
}

uint64_t sub_2409541A8()
{
  return MEMORY[0x270EE3900]();
}

uint64_t sub_2409541B8()
{
  return MEMORY[0x270EE3940]();
}

uint64_t sub_2409541C8()
{
  return MEMORY[0x270EE3950]();
}

uint64_t sub_2409541D8()
{
  return MEMORY[0x270EE3958]();
}

uint64_t sub_2409541E8()
{
  return MEMORY[0x270EE3960]();
}

uint64_t sub_2409541F8()
{
  return MEMORY[0x270EE3988]();
}

uint64_t sub_240954208()
{
  return MEMORY[0x270EE3998]();
}

uint64_t sub_240954218()
{
  return MEMORY[0x270EE39C0]();
}

uint64_t sub_240954228()
{
  return MEMORY[0x270EE39C8]();
}

uint64_t sub_240954238()
{
  return MEMORY[0x270EE3A20]();
}

uint64_t sub_240954248()
{
  return MEMORY[0x270EE3A28]();
}

uint64_t sub_240954258()
{
  return MEMORY[0x270EE3A38]();
}

uint64_t sub_240954268()
{
  return MEMORY[0x270EE3A40]();
}

uint64_t sub_240954278()
{
  return MEMORY[0x270EE3A48]();
}

uint64_t sub_240954288()
{
  return MEMORY[0x270EE3A58]();
}

uint64_t sub_240954298()
{
  return MEMORY[0x270EE3A70]();
}

uint64_t sub_2409542A8()
{
  return MEMORY[0x270EE3A90]();
}

uint64_t sub_2409542B8()
{
  return MEMORY[0x270EE3AB8]();
}

uint64_t sub_2409542C8()
{
  return MEMORY[0x270EE3AC0]();
}

uint64_t sub_2409542D8()
{
  return MEMORY[0x270EE3AD8]();
}

uint64_t sub_2409542E8()
{
  return MEMORY[0x270EE3B50]();
}

uint64_t sub_2409542F8()
{
  return MEMORY[0x270F34CD0]();
}

uint64_t sub_240954308()
{
  return MEMORY[0x270EE3B60]();
}

uint64_t sub_240954318()
{
  return MEMORY[0x270EE3B98]();
}

uint64_t sub_240954328()
{
  return MEMORY[0x270EE3C88]();
}

uint64_t sub_240954338()
{
  return MEMORY[0x270EE3CA0]();
}

uint64_t sub_240954348()
{
  return MEMORY[0x270EE3CA8]();
}

uint64_t sub_240954358()
{
  return MEMORY[0x270EE3CB8]();
}

uint64_t sub_240954368()
{
  return MEMORY[0x270EE3D18]();
}

uint64_t sub_240954378()
{
  return MEMORY[0x270EE3D20]();
}

uint64_t sub_240954388()
{
  return MEMORY[0x270EE3D30]();
}

uint64_t sub_240954398()
{
  return MEMORY[0x270EE3D38]();
}

uint64_t sub_2409543A8()
{
  return MEMORY[0x270EE3D40]();
}

uint64_t sub_2409543B8()
{
  return MEMORY[0x270EE3D50]();
}

uint64_t sub_2409543C8()
{
  return MEMORY[0x270EE3D58]();
}

uint64_t sub_2409543D8()
{
  return MEMORY[0x270EE3D68]();
}

uint64_t sub_2409543E8()
{
  return MEMORY[0x270EE3D78]();
}

uint64_t sub_240954408()
{
  return MEMORY[0x270F37C40]();
}

uint64_t sub_240954418()
{
  return MEMORY[0x270EE3D98]();
}

uint64_t sub_240954428()
{
  return MEMORY[0x270EE3DA0]();
}

uint64_t sub_240954438()
{
  return MEMORY[0x270EE3DA8]();
}

uint64_t sub_240954448()
{
  return MEMORY[0x270EE3DB0]();
}

uint64_t sub_240954458()
{
  return MEMORY[0x270EE3DD8]();
}

uint64_t sub_240954468()
{
  return MEMORY[0x270EE3DE0]();
}

uint64_t sub_240954478()
{
  return MEMORY[0x270F36F00]();
}

uint64_t sub_240954488()
{
  return MEMORY[0x270F36F18]();
}

uint64_t sub_240954498()
{
  return MEMORY[0x270EE3E08]();
}

uint64_t sub_2409544A8()
{
  return MEMORY[0x270EE3E18]();
}

uint64_t sub_2409544B8()
{
  return MEMORY[0x270EE3E20]();
}

uint64_t sub_2409544C8()
{
  return MEMORY[0x270EE3E38]();
}

uint64_t sub_2409544D8()
{
  return MEMORY[0x270EE3E40]();
}

uint64_t sub_2409544E8()
{
  return MEMORY[0x270EE3E50]();
}

uint64_t sub_2409544F8()
{
  return MEMORY[0x270EE3E78]();
}

uint64_t sub_240954508()
{
  return MEMORY[0x270EE3EA0]();
}

uint64_t sub_240954518()
{
  return MEMORY[0x270EE3EB8]();
}

uint64_t sub_240954528()
{
  return MEMORY[0x270EE3F18]();
}

uint64_t sub_240954538()
{
  return MEMORY[0x270EE3F28]();
}

uint64_t sub_240954548()
{
  return MEMORY[0x270EE3F30]();
}

uint64_t sub_240954558()
{
  return MEMORY[0x270EE3F40]();
}

uint64_t sub_240954568()
{
  return MEMORY[0x270EE3F58]();
}

uint64_t sub_240954578()
{
  return MEMORY[0x270EE3F60]();
}

uint64_t sub_240954588()
{
  return MEMORY[0x270EE3F68]();
}

uint64_t sub_240954598()
{
  return MEMORY[0x270EE3F78]();
}

uint64_t sub_2409545A8()
{
  return MEMORY[0x270EE3F90]();
}

uint64_t sub_2409545B8()
{
  return MEMORY[0x270EE3FF0]();
}

uint64_t sub_2409545C8()
{
  return MEMORY[0x270EE4008]();
}

uint64_t sub_2409545D8()
{
  return MEMORY[0x270EE4028]();
}

uint64_t sub_2409545E8()
{
  return MEMORY[0x270EE4030]();
}

uint64_t sub_2409545F8()
{
  return MEMORY[0x270FA09A8]();
}

uint64_t sub_240954608()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_240954618()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_240954628()
{
  return MEMORY[0x270FA0AC0]();
}

uint64_t sub_240954638()
{
  return MEMORY[0x270FA0B00]();
}

uint64_t sub_240954648()
{
  return MEMORY[0x270FA0BC8]();
}

uint64_t sub_240954658()
{
  return MEMORY[0x270EF30B8]();
}

uint64_t sub_240954668()
{
  return MEMORY[0x270EF30C8]();
}

uint64_t sub_240954678()
{
  return MEMORY[0x270EF30D0]();
}

uint64_t sub_240954688()
{
  return MEMORY[0x270EF30D8]();
}

uint64_t sub_240954698()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_2409546A8()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_2409546B8()
{
  return MEMORY[0x270F37C48]();
}

uint64_t sub_2409546C8()
{
  return MEMORY[0x270F37C50]();
}

uint64_t sub_2409546D8()
{
  return MEMORY[0x270F9D148]();
}

uint64_t sub_2409546E8()
{
  return MEMORY[0x270F9D1D0]();
}

uint64_t sub_2409546F8()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_240954708()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_240954718()
{
  return MEMORY[0x270F9D3C8]();
}

uint64_t sub_240954728()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_240954738()
{
  return MEMORY[0x270F9D488]();
}

uint64_t sub_240954748()
{
  return MEMORY[0x270F9D4A0]();
}

uint64_t sub_240954758()
{
  return MEMORY[0x270F9D4A8]();
}

uint64_t sub_240954768()
{
  return MEMORY[0x270F9D4B0]();
}

uint64_t sub_240954778()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_240954788()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_240954798()
{
  return MEMORY[0x270EF19B8]();
}

uint64_t sub_2409547A8()
{
  return MEMORY[0x270EF19C8]();
}

uint64_t sub_2409547B8()
{
  return MEMORY[0x270EF19E0]();
}

uint64_t sub_2409547C8()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_2409547D8()
{
  return MEMORY[0x270EF1A50]();
}

uint64_t sub_2409547E8()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_2409547F8()
{
  return MEMORY[0x270F9D5F8]();
}

uint64_t sub_240954808()
{
  return MEMORY[0x270F9D600]();
}

uint64_t sub_240954818()
{
  return MEMORY[0x270F9D648]();
}

uint64_t sub_240954828()
{
  return MEMORY[0x270F37C58]();
}

uint64_t sub_240954838()
{
  return MEMORY[0x270F34CF8]();
}

uint64_t sub_240954848()
{
  return MEMORY[0x270F34D00]();
}

uint64_t sub_240954858()
{
  return MEMORY[0x270F9D6B8]();
}

uint64_t sub_240954868()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_240954878()
{
  return MEMORY[0x270F9D748]();
}

uint64_t sub_240954888()
{
  return MEMORY[0x270F9D758]();
}

uint64_t sub_240954898()
{
  return MEMORY[0x270F9D760]();
}

uint64_t sub_2409548A8()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_2409548B8()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_2409548C8()
{
  return MEMORY[0x270F9D7E8]();
}

uint64_t sub_2409548D8()
{
  return MEMORY[0x270F9D800]();
}

uint64_t sub_2409548F8()
{
  return MEMORY[0x270F9D810]();
}

uint64_t sub_240954908()
{
  return MEMORY[0x270F9D860]();
}

uint64_t sub_240954918()
{
  return MEMORY[0x270F9D878]();
}

uint64_t sub_240954928()
{
  return MEMORY[0x270F9D8B0]();
}

uint64_t sub_240954938()
{
  return MEMORY[0x270F9D8E0]();
}

uint64_t sub_240954948()
{
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_240954958()
{
  return MEMORY[0x270EE4040]();
}

uint64_t sub_240954968()
{
  return MEMORY[0x270F9DA70]();
}

uint64_t sub_240954978()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_240954988()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_240954998()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_2409549A8()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_2409549B8()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_2409549C8()
{
  return MEMORY[0x270F36F38]();
}

uint64_t sub_2409549D8()
{
  return MEMORY[0x270F37C60]();
}

uint64_t sub_2409549E8()
{
  return MEMORY[0x270F37C68]();
}

uint64_t sub_2409549F8()
{
  return MEMORY[0x270F37C70]();
}

uint64_t sub_240954A08()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_240954A18()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_240954A28()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_240954A38()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_240954A48()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_240954A58()
{
  return MEMORY[0x270FA1E18]();
}

uint64_t sub_240954A68()
{
  return MEMORY[0x270FA1E20]();
}

uint64_t sub_240954A78()
{
  return MEMORY[0x270FA1E28]();
}

uint64_t sub_240954A88()
{
  return MEMORY[0x270FA1EA0]();
}

uint64_t sub_240954A98()
{
  return MEMORY[0x270FA1EA8]();
}

uint64_t sub_240954AA8()
{
  return MEMORY[0x270FA1F08]();
}

uint64_t sub_240954AB8()
{
  return MEMORY[0x270FA1F10]();
}

uint64_t sub_240954AC8()
{
  return MEMORY[0x270F9DD60]();
}

uint64_t sub_240954AD8()
{
  return MEMORY[0x270F37C78]();
}

uint64_t sub_240954AE8()
{
  return MEMORY[0x270F9DDA0]();
}

uint64_t sub_240954B08()
{
  return MEMORY[0x270EF1C60]();
}

uint64_t sub_240954B18()
{
  return MEMORY[0x270EF1C70]();
}

uint64_t sub_240954B28()
{
  return MEMORY[0x270EF1C78]();
}

uint64_t sub_240954B48()
{
  return MEMORY[0x270EF1C98]();
}

uint64_t sub_240954B58()
{
  return MEMORY[0x270F9DEB0]();
}

uint64_t sub_240954B68()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_240954B78()
{
  return MEMORY[0x270F9DF80]();
}

uint64_t sub_240954B88()
{
  return MEMORY[0x270F9E330]();
}

uint64_t sub_240954B98()
{
  return MEMORY[0x270F37C80]();
}

uint64_t sub_240954BA8()
{
  return MEMORY[0x270F37C88]();
}

uint64_t sub_240954BB8()
{
  return MEMORY[0x270F37C90]();
}

uint64_t sub_240954BC8()
{
  return MEMORY[0x270F37C98]();
}

uint64_t sub_240954BD8()
{
  return MEMORY[0x270F36F58]();
}

uint64_t sub_240954BE8()
{
  return MEMORY[0x270F37CA0]();
}

uint64_t sub_240954BF8()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t sub_240954C08()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_240954C18()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_240954C28()
{
  return MEMORY[0x270FA2E70]();
}

uint64_t sub_240954C38()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_240954C48()
{
  return MEMORY[0x270F36F60]();
}

uint64_t sub_240954C58()
{
  return MEMORY[0x270F37CA8]();
}

uint64_t sub_240954C68()
{
  return MEMORY[0x270F37CB0]();
}

uint64_t sub_240954C78()
{
  return MEMORY[0x270F37CB8]();
}

uint64_t sub_240954C88()
{
  return MEMORY[0x270EF3458]();
}

uint64_t sub_240954C98()
{
  return MEMORY[0x270EF3490]();
}

uint64_t sub_240954CA8()
{
  return MEMORY[0x270F36F88]();
}

uint64_t sub_240954CB8()
{
  return MEMORY[0x270F34D40]();
}

uint64_t sub_240954CC8()
{
  return MEMORY[0x270F34D50]();
}

uint64_t sub_240954CD8()
{
  return MEMORY[0x270F37CC0]();
}

uint64_t sub_240954CE8()
{
  return MEMORY[0x270F37CC8]();
}

uint64_t sub_240954CF8()
{
  return MEMORY[0x270F37CD0]();
}

uint64_t sub_240954D08()
{
  return MEMORY[0x270F37CD8]();
}

uint64_t sub_240954D18()
{
  return MEMORY[0x270FA0C50]();
}

uint64_t sub_240954D28()
{
  return MEMORY[0x270FA0C78]();
}

uint64_t sub_240954D38()
{
  return MEMORY[0x270FA0CD0]();
}

uint64_t sub_240954D48()
{
  return MEMORY[0x270FA0CF0]();
}

uint64_t sub_240954D58()
{
  return MEMORY[0x270FA0D20]();
}

uint64_t sub_240954D68()
{
  return MEMORY[0x270FA0D50]();
}

uint64_t sub_240954D78()
{
  return MEMORY[0x270FA0D70]();
}

uint64_t sub_240954D88()
{
  return MEMORY[0x270FA0DA0]();
}

uint64_t sub_240954D98()
{
  return MEMORY[0x270FA0DB8]();
}

uint64_t sub_240954DA8()
{
  return MEMORY[0x270F37CE8]();
}

uint64_t sub_240954DB8()
{
  return MEMORY[0x270F37CF0]();
}

uint64_t sub_240954DC8()
{
  return MEMORY[0x270F37CF8]();
}

uint64_t sub_240954DD8()
{
  return MEMORY[0x270F37D00]();
}

uint64_t sub_240954DE8()
{
  return MEMORY[0x270EF2010]();
}

uint64_t sub_240954DF8()
{
  return MEMORY[0x270EF2020]();
}

uint64_t sub_240954E08()
{
  return MEMORY[0x270FA0F00]();
}

uint64_t sub_240954E18()
{
  return MEMORY[0x270FA0F28]();
}

uint64_t sub_240954E28()
{
  return MEMORY[0x270F82688]();
}

uint64_t sub_240954E38()
{
  return MEMORY[0x270F826B0]();
}

uint64_t sub_240954E48()
{
  return MEMORY[0x270F37D08]();
}

uint64_t sub_240954E58()
{
  return MEMORY[0x270F37D10]();
}

uint64_t sub_240954E68()
{
  return MEMORY[0x270F37D18]();
}

uint64_t sub_240954E78()
{
  return MEMORY[0x270F37D20]();
}

uint64_t sub_240954E88()
{
  return MEMORY[0x270F37D28]();
}

uint64_t sub_240954E98()
{
  return MEMORY[0x270F37D38]();
}

uint64_t sub_240954EA8()
{
  return MEMORY[0x270F37D40]();
}

uint64_t sub_240954EB8()
{
  return MEMORY[0x270F37D48]();
}

uint64_t sub_240954EC8()
{
  return MEMORY[0x270F37D50]();
}

uint64_t sub_240954ED8()
{
  return MEMORY[0x270F37D58]();
}

uint64_t sub_240954EE8()
{
  return MEMORY[0x270F37D60]();
}

uint64_t sub_240954EF8()
{
  return MEMORY[0x270F37D70]();
}

uint64_t sub_240954F08()
{
  return MEMORY[0x270F34E68]();
}

uint64_t sub_240954F18()
{
  return MEMORY[0x270F828A8]();
}

uint64_t sub_240954F28()
{
  return MEMORY[0x270F37D78]();
}

uint64_t sub_240954F38()
{
  return MEMORY[0x270F34E70]();
}

uint64_t sub_240954F48()
{
  return MEMORY[0x270F37D80]();
}

uint64_t sub_240954F58()
{
  return MEMORY[0x270EF20D8]();
}

uint64_t sub_240954F68()
{
  return MEMORY[0x270F34E88]();
}

uint64_t sub_240954F78()
{
  return MEMORY[0x270F34E98]();
}

uint64_t sub_240954F88()
{
  return MEMORY[0x270F37D88]();
}

uint64_t sub_240954F98()
{
  return MEMORY[0x270F37D90]();
}

uint64_t sub_240954FA8()
{
  return MEMORY[0x270F37D98]();
}

uint64_t sub_240954FB8()
{
  return MEMORY[0x270FA1170]();
}

uint64_t sub_240954FC8()
{
  return MEMORY[0x270FA1180]();
}

uint64_t sub_240954FD8()
{
  return MEMORY[0x270F82960]();
}

uint64_t sub_240954FE8()
{
  return MEMORY[0x270F82998]();
}

uint64_t sub_240954FF8()
{
  return MEMORY[0x270F829B0]();
}

uint64_t sub_240955008()
{
  return MEMORY[0x270F829B8]();
}

uint64_t sub_240955018()
{
  return MEMORY[0x270F82A68]();
}

uint64_t sub_240955028()
{
  return MEMORY[0x270F82AD0]();
}

uint64_t sub_240955038()
{
  return MEMORY[0x270F82AF0]();
}

uint64_t sub_240955048()
{
  return MEMORY[0x270F82B28]();
}

uint64_t sub_240955058()
{
  return MEMORY[0x270F82B58]();
}

uint64_t sub_240955068()
{
  return MEMORY[0x270F82B88]();
}

uint64_t sub_240955078()
{
  return MEMORY[0x270F36FA8]();
}

uint64_t sub_240955088()
{
  return MEMORY[0x270F36FB0]();
}

uint64_t sub_240955098()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_2409550A8()
{
  return MEMORY[0x270F9E518]();
}

uint64_t sub_2409550B8()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_2409550C8()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_2409550D8()
{
  return MEMORY[0x270EF23D8]();
}

uint64_t sub_2409550E8()
{
  return MEMORY[0x270EF23E8]();
}

uint64_t sub_2409550F8()
{
  return MEMORY[0x270EF2478]();
}

uint64_t sub_240955108()
{
  return MEMORY[0x270EF24A0]();
}

uint64_t sub_240955118()
{
  return MEMORY[0x270EF2560]();
}

uint64_t sub_240955128()
{
  return MEMORY[0x270EF25B0]();
}

uint64_t sub_240955138()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_240955148()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_240955158()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_240955168()
{
  return MEMORY[0x270F9E800]();
}

uint64_t sub_240955178()
{
  return MEMORY[0x270F9E810]();
}

uint64_t sub_240955188()
{
  return MEMORY[0x270F9E818]();
}

uint64_t sub_240955198()
{
  return MEMORY[0x270F9E830]();
}

uint64_t sub_2409551A8()
{
  return MEMORY[0x270F9E838]();
}

uint64_t sub_2409551B8()
{
  return MEMORY[0x270F9E840]();
}

uint64_t sub_2409551C8()
{
  return MEMORY[0x270F9E848]();
}

uint64_t sub_2409551D8()
{
  return MEMORY[0x270F9E858]();
}

uint64_t sub_2409551E8()
{
  return MEMORY[0x270F9E860]();
}

uint64_t sub_2409551F8()
{
  return MEMORY[0x270F9E870]();
}

uint64_t sub_240955208()
{
  return MEMORY[0x270F9E880]();
}

uint64_t sub_240955218()
{
  return MEMORY[0x270F9E8C0]();
}

uint64_t sub_240955228()
{
  return MEMORY[0x270F9E8C8]();
}

uint64_t sub_240955238()
{
  return MEMORY[0x270F9E8E8]();
}

uint64_t sub_240955248()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_240955258()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_240955268()
{
  return MEMORY[0x270F9E968]();
}

uint64_t sub_240955278()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_240955288()
{
  return MEMORY[0x270F9E978]();
}

uint64_t sub_240955298()
{
  return MEMORY[0x270F9E988]();
}

uint64_t sub_2409552A8()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_2409552B8()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_2409552C8()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_2409552D8()
{
  return MEMORY[0x270F9EA48]();
}

uint64_t sub_2409552E8()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_2409552F8()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_240955308()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_240955318()
{
  return MEMORY[0x270F9EBE0]();
}

uint64_t sub_240955328()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_240955338()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_240955348()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_240955358()
{
  return MEMORY[0x270F9EF50]();
}

uint64_t sub_240955368()
{
  return MEMORY[0x270F9EF88]();
}

uint64_t sub_240955378()
{
  return MEMORY[0x270F9EFB0]();
}

uint64_t sub_240955388()
{
  return MEMORY[0x270F9EFC0]();
}

uint64_t sub_240955398()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_2409553A8()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_2409553B8()
{
  return MEMORY[0x270F9EFF8]();
}

uint64_t sub_2409553C8()
{
  return MEMORY[0x270F9F000]();
}

uint64_t sub_2409553D8()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_2409553E8()
{
  return MEMORY[0x270F9F090]();
}

uint64_t sub_2409553F8()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_240955408()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_240955418()
{
  return MEMORY[0x270F9F0A8]();
}

uint64_t sub_240955428()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_240955438()
{
  return MEMORY[0x270F9F0B8]();
}

uint64_t sub_240955448()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_240955458()
{
  return MEMORY[0x270F9F1A8]();
}

uint64_t sub_240955468()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_240955478()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_240955488()
{
  return MEMORY[0x270F9F290]();
}

uint64_t sub_240955498()
{
  return MEMORY[0x270F9F298]();
}

uint64_t sub_2409554A8()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_2409554B8()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_2409554C8()
{
  return MEMORY[0x270F9F2F0]();
}

uint64_t sub_2409554D8()
{
  return MEMORY[0x270F9F2F8]();
}

uint64_t sub_2409554E8()
{
  return MEMORY[0x270F9F308]();
}

uint64_t sub_2409554F8()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_240955508()
{
  return MEMORY[0x270F9F338]();
}

uint64_t sub_240955518()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_240955528()
{
  return MEMORY[0x270F9F3D0]();
}

uint64_t sub_240955538()
{
  return MEMORY[0x270F9F3D8]();
}

uint64_t sub_240955548()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_240955558()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_240955568()
{
  return MEMORY[0x270F9F430]();
}

uint64_t sub_240955578()
{
  return MEMORY[0x270F9F438]();
}

uint64_t sub_240955588()
{
  return MEMORY[0x270F9F448]();
}

uint64_t sub_240955598()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_2409555A8()
{
  return MEMORY[0x270F9F478]();
}

uint64_t sub_2409555B8()
{
  return MEMORY[0x270F9F4C0]();
}

uint64_t sub_2409555C8()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_2409555D8()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_2409555E8()
{
  return MEMORY[0x270F9F4F8]();
}

uint64_t sub_2409555F8()
{
  return MEMORY[0x270F9F7C0]();
}

uint64_t sub_240955608()
{
  return MEMORY[0x270F9F7C8]();
}

uint64_t sub_240955618()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_240955628()
{
  return MEMORY[0x270F9F918]();
}

uint64_t sub_240955648()
{
  return MEMORY[0x270F9FA68]();
}

uint64_t sub_240955658()
{
  return MEMORY[0x270F9FA88]();
}

uint64_t sub_240955668()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_240955678()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_240955688()
{
  return MEMORY[0x270EF2680]();
}

uint64_t sub_240955698()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_2409556A8()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_2409556B8()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_2409556C8()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_2409556D8()
{
  return MEMORY[0x270F9FC28]();
}

uint64_t sub_2409556E8()
{
  return MEMORY[0x270F9FC30]();
}

uint64_t sub_2409556F8()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_240955708()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_240955718()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_240955728()
{
  return MEMORY[0x270F9FC78]();
}

uint64_t sub_240955738()
{
  return MEMORY[0x270F9FC80]();
}

uint64_t sub_240955748()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_240955758()
{
  return MEMORY[0x270F9FCF8]();
}

uint64_t sub_240955768()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_240955778()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_2409557A8()
{
  return MEMORY[0x270FA0128]();
}

Boolean CFStringTransform(CFMutableStringRef string, CFRange *range, CFStringRef transform, Boolean reverse)
{
  return MEMORY[0x270EE52B8](string, range, transform, reverse);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  MEMORY[0x270EE7218]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

uint64_t HKLocalizedStringForDateAndTemplateWithFormattingContext()
{
  return MEMORY[0x270F38270]();
}

uint64_t HKMostRecentSampleEndDateText()
{
  return MEMORY[0x270F38280]();
}

uint64_t HKSensitiveLogItem()
{
  return MEMORY[0x270EF3808]();
}

uint64_t HKUIJoinStringsForAutomationIdentifier()
{
  return MEMORY[0x270F38330]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

{
  return MEMORY[0x270F9A3C0]();
}

{
  return MEMORY[0x270F9A3C8]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return MEMORY[0x270FA0170]();
}

void bzero(void *a1, size_t a2)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x270ED94B8](value);
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x270FA01A0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x270FA23F8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_deletedMethodError()
{
  return MEMORY[0x270FA0250]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x270FA0268]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_dynamicCastUnknownClass()
{
  return MEMORY[0x270FA02B0]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getExistentialTypeMetadata()
{
  return MEMORY[0x270FA0358]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x270FA03C8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x270FA0420]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x270FA0430]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x270FA04C0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x270FA0568]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x270FA2458]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x270FA05A8]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x270FA05F0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x270FA0648]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x270FA0650]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x270FA0658]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}