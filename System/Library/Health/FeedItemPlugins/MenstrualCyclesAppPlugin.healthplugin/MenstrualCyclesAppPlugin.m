uint64_t sub_24119231C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = v2;
  v6 = v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34MenstrualCyclesBrowseTileGenerator_domain;
  v7 = sub_24162C128();
  v8 = *(void *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, a2, v7);
  sub_2411BA340(a1);
  v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
  v11 = sub_24162C1C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
  *(void *)(v3 + 16) = v10;
  return v3;
}

uint64_t sub_241192460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631E08();
  uint64_t v5 = sub_241199E7C(a2, a3, a4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_2411924E0(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  v3 = sub_241192C50(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[6 * v9 + 4];
  if (a1 + 32 < v10 + 48 * v8 && v10 < a1 + 32 + 48 * v8) {
    goto LABEL_24;
  }
  sub_2411C84B0();
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

void *sub_241192654(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  int64_t v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  uint64_t v7 = sub_24162C128();
  unint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_retain();
  v8(v5, v6, v7);
  return a1;
}

uint64_t sub_2411926EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_24162C128();
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

void *sub_24119275C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_2411AB1D0(0, (unint64_t *)&qword_26B0125B0, MEMORY[0x263F8E778], MEMORY[0x263F8E0F8]);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_2411927E4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  swift_retain();
  sub_2411952DC(v3);

  return swift_release();
}

uint64_t sub_241192834@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24162C1C8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_24119289C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_24162C1C8();
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_24119290C(uint64_t a1, uint64_t a2, void *a3)
{
  sub_24119D488(a2, a3);
  sub_2411C15D8();
  sub_2411A151C(&qword_26B011200, 255, (void (*)(uint64_t))sub_2411C15D8);
  uint64_t v3 = sub_24162FCB8();
  swift_release();
  return v3;
}

uint64_t sub_2411929B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v25 = type metadata accessor for MenstrualCyclesOnboardingChangeDetector();
  v26 = &off_26F5757A8;
  v24[0] = a3;
  uint64_t v22 = type metadata accessor for UserCharacteristicsChangeDetector();
  v23 = &off_26F575790;
  v21[0] = a4;
  type metadata accessor for MenstrualCyclesArticlesGeneratorPipeline();
  unint64_t v10 = (uint64_t *)swift_allocObject();
  uint64_t v11 = sub_241192BB0((uint64_t)v24, v25);
  MEMORY[0x270FA5388](v11);
  BOOL v13 = (void *)((char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v14 + 16))(v13);
  uint64_t v15 = sub_241192BB0((uint64_t)v21, v22);
  MEMORY[0x270FA5388](v15);
  v17 = (void *)((char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v18 + 16))(v17);
  uint64_t v19 = sub_2411A35EC(a1, a2, *v13, *v17, a5, v10);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v21);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v24);
  return v19;
}

uint64_t sub_241192BB0(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

id sub_241192C00(uint64_t a1)
{
  return sub_2411B4184(a1);
}

uint64_t sub_241192C24@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_2411B1574(a1);
  *a2 = result;
  return result;
}

void *sub_241192C50(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_2411BBDA8(0, (unint64_t *)&unk_26B0123F0, (uint64_t (*)(uint64_t))sub_2411C84B0, MEMORY[0x263F8E0F8]);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size_1(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24158ED90(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_241192DA4(unint64_t a1, void *a2)
{
  unint64_t v3 = v2;
  id v60 = a2;
  uint64_t v59 = sub_241631AC8();
  unint64_t v63 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  v58 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_24162B9E8();
  unint64_t v6 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  v56 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C85F4(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v65 = (uint64_t)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_24162B718();
  unint64_t v10 = *(char ***)(v67 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v67);
  v66 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  v55 = (char *)v39 - v13;
  uint64_t v54 = sub_24162BA08();
  uint64_t v14 = *(char **)(v54 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v54);
  v53 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  v68 = (char *)v39 - v17;
  uint64_t v69 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_26;
  }
  uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v18)
  {
    while (1)
    {
      v39[1] = v3;
      unint64_t v3 = 0;
      unint64_t v19 = a1 & 0xC000000000000001;
      uint64_t v20 = a1 & 0xFFFFFFFFFFFFFF8;
      unsigned int v48 = *MEMORY[0x263F07870];
      v47 = (void (**)(char *, void, uint64_t))(v6 + 104);
      v64 = (void (**)(char *, uint64_t))(v10 + 1);
      v46 = (void (**)(char *, uint64_t))(v6 + 8);
      v45 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 6);
      v40 = (void (**)(char *, uint64_t, uint64_t))(v10 + 4);
      v44 = (void (**)(char *, char *, uint64_t))(v10 + 2);
      v43 = (void (**)(char *, char *, uint64_t))(v14 + 16);
      v42 = (void (**)(char *, uint64_t))(v63 + 8);
      v41 = (void (**)(char *, uint64_t))(v14 + 8);
      unint64_t v10 = &selRef_numberOfComponentsInPickerView_;
      uint64_t v49 = a1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v50 = a1 & 0xC000000000000001;
      uint64_t v51 = v18;
      unint64_t v52 = a1;
      while (v19)
      {
        v21 = (char *)MEMORY[0x245620370](v3, a1);
LABEL_9:
        uint64_t v14 = v21;
        unint64_t v6 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_23;
        }
        if ([v21 v10[53]])
        {
        }
        else
        {
          id v22 = objc_msgSend(v60, sel_currentCalendar);
          sub_24162B928();

          unint64_t v10 = (char **)objc_msgSend(v14, sel_allDays);
          objc_msgSend(v14, sel_allDays);
          v24 = (char *)v10 + v23;
          if (__OFADD__(v10, v23)) {
            goto LABEL_24;
          }
          BOOL v25 = __OFSUB__(v24, 1);
          v26 = v24 - 1;
          if (v25) {
            goto LABEL_25;
          }
          uint64_t v62 = (uint64_t)v26;
          unint64_t v63 = v3 + 1;
          uint64_t v27 = v67;
          uint64_t v28 = v65;
          v30 = v56;
          uint64_t v29 = v57;
          (*v47)(v56, v48, v57);
          v31 = v66;
          sub_24162B708();
          sub_24162B968();
          v61 = *v64;
          v61(v31, v27);
          (*v46)(v30, v29);
          if ((*v45)(v28, 1, v27) == 1)
          {
            v32 = v55;
            sub_24162B708();
            sub_2411CB408(v65, (uint64_t (*)(void))sub_2411C85F4);
          }
          else
          {
            v32 = v55;
            (*v40)(v55, v65, v67);
          }
          uint64_t v33 = v67;
          (*v44)(v66, v32, v67);
          uint64_t v34 = v54;
          v35 = v68;
          (*v43)(v53, v68, v54);
          v36 = v58;
          sub_241631A68();
          uint64_t v37 = sub_241631A88();
          (*v42)(v36, v59);
          v61(v32, v33);
          (*v41)(v35, v34);
          if (v62 >= v37)
          {
            sub_241632F18();
            sub_241632F48();
            sub_241632F58();
            sub_241632F28();
          }
          else
          {
          }
          uint64_t v18 = v51;
          a1 = v52;
          uint64_t v20 = v49;
          unint64_t v19 = v50;
          unint64_t v10 = &selRef_numberOfComponentsInPickerView_;
          unint64_t v6 = v63;
        }
        ++v3;
        if (v6 == v18) {
          return v69;
        }
      }
      if (v3 < *(void *)(v20 + 16)) {
        break;
      }
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      uint64_t v18 = sub_241633068();
      if (!v18) {
        return MEMORY[0x263F8EE78];
      }
    }
    v21 = (char *)*(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x263F8EE78];
}

void *sub_241193460(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, unint64_t *a6, uint64_t a7)
{
  char v9 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v11 = a2;
    goto LABEL_8;
  }
  unint64_t v10 = a4[3];
  uint64_t v11 = v10 >> 1;
  if ((uint64_t)(v10 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v11 + 0x4000000000000000 >= 0)
  {
    uint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v11 = a2;
    }
LABEL_8:
    uint64_t v12 = a4[2];
    if (v11 <= v12) {
      uint64_t v13 = a4[2];
    }
    else {
      uint64_t v13 = v11;
    }
    if (v13)
    {
      sub_2411C0708(0, a5, a6, a7, MEMORY[0x263F8E0F8]);
      uint64_t v14 = (void *)swift_allocObject();
      size_t v15 = j__malloc_size_1(v14);
      v14[2] = v12;
      v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
      uint64_t v16 = v14 + 4;
      if (v9)
      {
LABEL_13:
        if (v14 != a4 || v16 >= &a4[5 * v12 + 4]) {
          memmove(v16, a4 + 4, 40 * v12);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v14 = (void *)MEMORY[0x263F8EE78];
      uint64_t v16 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24158EB84(0, v12, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_2411935B8(uint64_t a1, void *a2)
{
  unint64_t v3 = v2;
  id v39 = a2;
  uint64_t v5 = sub_24162B718();
  MEMORY[0x270FA5388](v5 - 8);
  v38 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_241631AC8();
  uint64_t v7 = *(char ***)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v34 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_24162BA08();
  char v9 = *(char **)(v36 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v36);
  v35 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  v40 = (char *)v26 - v12;
  uint64_t v41 = MEMORY[0x263F8EE78];
  if ((unint64_t)a1 >> 62) {
    goto LABEL_23;
  }
  uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v13)
  {
    while (1)
    {
      unint64_t v14 = 0;
      unint64_t v15 = a1 & 0xC000000000000001;
      uint64_t v16 = a1 & 0xFFFFFFFFFFFFFF8;
      uint64_t v28 = (void (**)(char *, uint64_t))(v7 + 1);
      uint64_t v29 = (void (**)(char *, char *, uint64_t))(v9 + 16);
      v26[1] = v3;
      uint64_t v27 = (void (**)(char *, uint64_t))(v9 + 8);
      uint64_t v7 = &selRef_numberOfComponentsInPickerView_;
      uint64_t v32 = v13;
      uint64_t v33 = a1;
      uint64_t v30 = a1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v31 = a1 & 0xC000000000000001;
      while (v15)
      {
        uint64_t v17 = (char *)MEMORY[0x245620370](v14, a1);
LABEL_9:
        char v9 = v17;
        unint64_t v3 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          goto LABEL_20;
        }
        if ([v17 v7[53]])
        {
        }
        else
        {
          id v18 = objc_msgSend(v39, sel_currentCalendar);
          sub_24162B928();

          uint64_t v7 = (char **)objc_msgSend(v9, sel_allDays);
          objc_msgSend(v9, sel_allDays);
          uint64_t v20 = (char *)v7 + v19;
          if (__OFADD__(v7, v19)) {
            goto LABEL_21;
          }
          a1 = (uint64_t)(v20 - 1);
          if (__OFSUB__(v20, 1)) {
            goto LABEL_22;
          }
          sub_24162B708();
          uint64_t v21 = v36;
          id v22 = v40;
          (*v29)(v35, v40, v36);
          uint64_t v23 = v34;
          sub_241631A68();
          uint64_t v24 = sub_241631A88();
          (*v28)(v23, v37);
          (*v27)(v22, v21);
          if (a1 >= v24)
          {
            sub_241632F18();
            sub_241632F48();
            sub_241632F58();
            sub_241632F28();
          }
          else
          {
          }
          uint64_t v13 = v32;
          a1 = v33;
          uint64_t v16 = v30;
          unint64_t v15 = v31;
          uint64_t v7 = &selRef_numberOfComponentsInPickerView_;
        }
        ++v14;
        if (v3 == v13) {
          return v41;
        }
      }
      if (v14 < *(void *)(v16 + 16)) {
        break;
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      uint64_t v13 = sub_241633068();
      if (!v13) {
        return MEMORY[0x263F8EE78];
      }
    }
    uint64_t v17 = (char *)*(id *)(a1 + 8 * v14 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x263F8EE78];
}

uint64_t sub_24119397C(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_24162C128();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void **assignWithCopy for HKMCAnalysisResult(void **a1, void **a2)
{
  unint64_t v3 = *a1;
  uint64_t v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      id v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    uint64_t v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  id v5 = v4;

  return a1;
}

uint64_t sub_241193A78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v15 = a1;
  uint64_t v14 = sub_24162C0E8();
  uint64_t v1 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  unint64_t v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24162CBF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[1] = sub_24162C178();
  sub_24119EDE0(0, (unint64_t *)&qword_26B012FC8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v8 = sub_24162BD98();
  uint64_t v9 = *(void *)(v8 - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_241637EE0;
  (*(void (**)(unint64_t, void, uint64_t))(v9 + 104))(v11 + v10, *MEMORY[0x263F45540], v8);
  sub_2411B8B4C((uint64_t)v7);
  sub_24162CBE8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F45688], v14);
  return sub_24162C0F8();
}

uint64_t sub_241193D08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v6 = *(void *)(*(void *)(v3 - 8) + 64);
  uint64_t v7 = *(void *)(sub_24162C1C8() - 8);
  uint64_t v8 = v1 + ((v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_2411B1E30(v8, v3, v4, a1);
}

void sub_241193DE8(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  if (!((unint64_t)*a1 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    if (v4) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
LABEL_13:
    *a2 = 0;
    return;
  }
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v4 = sub_241633068();
  if (!v4) {
    goto LABEL_12;
  }
LABEL_3:
  unint64_t v5 = v4 - 1;
  if (__OFSUB__(v4, 1))
  {
    __break(1u);
    goto LABEL_15;
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_15:
    id v6 = (id)MEMORY[0x245620370](v5, v3);
    goto LABEL_8;
  }
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v5 < *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v6 = *(id *)(v3 + 8 * v5 + 32);
LABEL_8:
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();
    self;
    uint64_t v8 = swift_dynamicCastObjCClass();
    if (v8)
    {
      *a2 = v8;
      return;
    }

    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_241193EE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v15 = a1;
  uint64_t v14 = sub_24162C0E8();
  uint64_t v1 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24162CBF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[1] = sub_24162C178();
  sub_24119EE44(0, (unint64_t *)&qword_26B012FC8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v8 = sub_24162BD98();
  uint64_t v9 = *(void *)(v8 - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_241637EE0;
  (*(void (**)(unint64_t, void, uint64_t))(v9 + 104))(v11 + v10, *MEMORY[0x263F45540], v8);
  sub_2411B8B4C((uint64_t)v7);
  sub_24162CBE8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F45688], v14);
  return sub_24162C0F8();
}

uint64_t sub_241194174(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24162C1C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);

  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 28);

  return _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0(v5);
}

uint64_t sub_241194200@<X0>(uint64_t a1@<X8>)
{
  uint64_t v15 = a1;
  uint64_t v14 = sub_24162C0E8();
  uint64_t v1 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24162CBF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[1] = sub_24162C178();
  sub_24119ED18(0, (unint64_t *)&qword_26B012FC8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v8 = sub_24162BD98();
  uint64_t v9 = *(void *)(v8 - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_241637EE0;
  (*(void (**)(unint64_t, void, uint64_t))(v9 + 104))(v11 + v10, *MEMORY[0x263F45580], v8);
  sub_2411B8B4C((uint64_t)v7);
  sub_24162CBE8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F45688], v14);
  return sub_24162C0F8();
}

uint64_t sub_241194490@<X0>(uint64_t a1@<X8>)
{
  v14[1] = a1;
  uint64_t v1 = sub_24162C0E8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24162CBF8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = sub_24162BDD8();
  sub_24119EEA8(0, (unint64_t *)&qword_26B012FC8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v9 = sub_24162BD98();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_241637EE0;
  (*(void (**)(unint64_t, void, uint64_t))(v10 + 104))(v12 + v11, *MEMORY[0x263F45548], v9);
  sub_2411B8B4C((uint64_t)v8);
  sub_24162CBE8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F45688], v1);
  return sub_24162C0F8();
}

uint64_t sub_24119470C@<X0>(uint64_t a1@<X8>)
{
  v14[1] = a1;
  uint64_t v1 = sub_24162C0E8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24162CBF8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = sub_24162BDD8();
  sub_24119ED7C(0, (unint64_t *)&qword_26B012FC8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v9 = sub_24162BD98();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_241637EE0;
  (*(void (**)(unint64_t, void, uint64_t))(v10 + 104))(v12 + v11, *MEMORY[0x263F45548], v9);
  sub_2411B8B4C((uint64_t)v8);
  sub_24162CBE8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F45688], v1);
  return sub_24162C0F8();
}

uint64_t sub_241194988(uint64_t a1, void *a2, void *a3, char a4, uint64_t a5)
{
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_241633068()) {
    sub_2411CAA28(MEMORY[0x263F8EE78]);
  }
  uint64_t v10 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin35SetupPregnancyModeFeaturesGenerator_experienceModelSubject;
  sub_2411B134C(0, &qword_26B011238, (uint64_t (*)(uint64_t))sub_2411C0598, MEMORY[0x263EFDD90]);
  swift_allocObject();
  *(void *)(a5 + v10) = sub_24162FB58();
  uint64_t v11 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin35SetupPregnancyModeFeaturesGenerator_pregnancyModelSubject;
  sub_2411C1294();
  swift_allocObject();
  *(void *)(a5 + v11) = sub_24162FB58();
  uint64_t v12 = a5 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin35SetupPregnancyModeFeaturesGenerator_context;
  uint64_t v13 = sub_24162C1C8();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, a1, v13);
  *(void *)(a5 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin35SetupPregnancyModeFeaturesGenerator_pregnancyModelProvider) = a2;
  *(void *)(a5 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin35SetupPregnancyModeFeaturesGenerator_experienceStore) = a3;
  *(unsigned char *)(a5 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin35SetupPregnancyModeFeaturesGenerator_isiPad) = a4 & 1;
  id v15 = a2;
  id v16 = a3;
  sub_2411981D0();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v13);
  return a5;
}

uint64_t sub_241194B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24162C128();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_24162C1C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_release();

  return swift_release();
}

uint64_t sub_241194C24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v19 = a1;
  uint64_t v1 = sub_24162C0E8();
  uint64_t v17 = *(void *)(v1 - 8);
  uint64_t v18 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24162CBF8();
  uint64_t v4 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[1] = sub_24162BDD8();
  sub_2411B6C0C(0, (unint64_t *)&qword_26B012FC8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v7 = sub_24162BD98();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_24163BB30;
  unint64_t v12 = v11 + v10;
  uint64_t v13 = *(void (**)(unint64_t, void, uint64_t))(v8 + 104);
  v13(v11 + v10, *MEMORY[0x263F454F0], v7);
  v13(v12 + v9, *MEMORY[0x263F45578], v7);
  v13(v12 + 2 * v9, *MEMORY[0x263F454E8], v7);
  v13(v12 + 3 * v9, *MEMORY[0x263F45580], v7);
  v13(v12 + 4 * v9, *MEMORY[0x263F45540], v7);
  v13(v12 + 5 * v9, *MEMORY[0x263F45548], v7);
  sub_2411B8B4C((uint64_t)v6);
  sub_24162CBE8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v16);
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v3, *MEMORY[0x263F45688], v18);
  return sub_24162C0F8();
}

uint64_t sub_241194F58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v18 = a1;
  uint64_t v1 = sub_24162B718();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24162B9E8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24162BA08();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C85F4(0);
  MEMORY[0x270FA5388](v13 - 8);
  id v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162B9A8();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F07870], v5);
  sub_24162B708();
  sub_24162B968();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v15, 1, v1) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v2 + 32))(v18, v15, v1);
  }
  sub_24138A2D0((uint64_t)v15, (uint64_t (*)(void))sub_2411C85F4);
  uint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  sub_241632E78();
  sub_241631E08();
  sub_241631E08();
  sub_241631E08();
  uint64_t result = sub_241633038();
  __break(1u);
  return result;
}

id sub_2411952DC(void *a1)
{
  uint64_t v2 = sub_24162EFA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (HKShowSensitiveLogItems())
  {
    sub_24162EF48();
    uint64_t v6 = sub_24162EF98();
    os_log_type_t v7 = sub_2416322E8();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      id v16 = (id)swift_slowAlloc();
      id v18 = v16;
      *(_DWORD *)uint64_t v8 = 136315138;
      v15[1] = v8 + 4;
      uint64_t v9 = sub_2416333E8();
      uint64_t v17 = sub_2411B6898(v9, v10, (uint64_t *)&v18);
      sub_241632C28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v6, v7, "[%s] Received pregnancy model update", v8, 0xCu);
      id v11 = v16;
      swift_arrayDestroy();
      MEMORY[0x245621640](v11, -1, -1);
      MEMORY[0x245621640](v8, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_24162FB28();
  id v12 = v18;
  char v13 = v19;
  id result = objc_msgSend(a1, sel_state);
  if ((v13 & 1) != 0 || v12 != result)
  {
    id v18 = objc_msgSend(a1, sel_state);
    char v19 = 0;
    return (id)sub_24162FB08();
  }
  return result;
}

uint64_t sub_241195544@<X0>(uint64_t a1@<X0>, void *a2@<X1>, long long *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (int *)type metadata accessor for CycleFactorsReminderGeneratorPipeline(0);
  *(void *)(a4 + v8[8]) = 89;
  uint64_t v9 = sub_24162C1C8();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a4, a1, v9);
  *(void *)(a4 + v8[5]) = a2;
  id v11 = a2;
  sub_24162C148();
  sub_2411B6854(v14, v14[3]);
  sub_24162C038();
  _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  sub_24162C4F8();
  swift_allocObject();
  uint64_t v12 = sub_24162C4C8();

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v14);
  *(void *)(a4 + v8[6]) = v12;
  return sub_2411B6CD4(a3, a4 + v8[7]);
}

uint64_t sub_2411956D0(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v7 = a3;
  uint64_t v9 = *(void (**)(id, uint64_t, void *, void *))(a1 + 32);
  if (a3)
  {
    sub_2411C01D8();
    uint64_t v7 = sub_241631F28();
  }
  swift_retain();
  id v10 = a2;
  id v11 = a4;
  id v12 = a5;
  v9(v10, v7, a4, a5);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241195794()
{
  uint64_t v0 = sub_24162C0E8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SleepingWristTemperatureHelpTileGenerator(0);
  sub_24162C178();
  sub_24119EF0C(0, (unint64_t *)&qword_26B012FC8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v4 = sub_24162BD98();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_241637EE0;
  (*(void (**)(unint64_t, void, uint64_t))(v5 + 104))(v7 + v6, *MEMORY[0x263F45540], v4);
  sub_2411BFDA0(0, (unint64_t *)&qword_26B0121F0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_24163B390;
  sub_2411B9D00(0, (unint64_t *)&qword_26B010718);
  *(void *)(v8 + 32) = MEMORY[0x24561F7E0]((id)*MEMORY[0x263F09BE0]);
  v10[1] = v8;
  sub_241631F48();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F45688], v0);
  return sub_24162C0F8();
}

uint64_t sub_241195A00()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_241195A40(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_24162EFA8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v9 = a1;
    unsigned __int8 v10 = objc_msgSend(v9, sel_BOOLValue);
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v25) = v10;
    swift_retain();
    sub_24162FC58();
  }
  else
  {
    sub_24162EF48();
    id v11 = a3;
    id v12 = a3;
    char v13 = sub_24162EF98();
    os_log_type_t v14 = sub_2416322C8();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v25 = v23;
      *(_DWORD *)uint64_t v15 = 136446466;
      uint64_t v16 = sub_2416333E8();
      uint64_t v24 = sub_2411B6898(v16, v17, &v25);
      sub_241632C28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2082;
      uint64_t v24 = (uint64_t)a3;
      id v18 = a3;
      sub_2411AB16C(0, (unint64_t *)&qword_26B010860, (uint64_t (*)(uint64_t))sub_2411CE834, MEMORY[0x263F8D8F0]);
      uint64_t v19 = sub_241631D48();
      uint64_t v24 = sub_2411B6898(v19, v20, &v25);
      sub_241632C28();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24118E000, v13, v14, "[%{public}s] Error retrieving onboarding: %{public}s", (uint8_t *)v15, 0x16u);
      uint64_t v21 = v23;
      swift_arrayDestroy();
      MEMORY[0x245621640](v21, -1, -1);
      MEMORY[0x245621640](v15, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v25) = 0;
    swift_retain();
    sub_24162FC58();
  }
}

void sub_241195D84(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = sub_24162EFA8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    sub_24162EF48();
    id v14 = a4;
    id v15 = a4;
    uint64_t v16 = sub_24162EF98();
    os_log_type_t v17 = sub_2416322C8();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v28 = v26;
      *(_DWORD *)uint64_t v18 = 136446466;
      uint64_t v19 = sub_2416333E8();
      uint64_t v27 = sub_2411B6898(v19, v20, &v28);
      sub_241632C28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2080;
      uint64_t v27 = (uint64_t)a4;
      id v21 = a4;
      sub_24128B6BC();
      uint64_t v22 = sub_241631D48();
      uint64_t v27 = sub_2411B6898(v22, v23, &v28);
      sub_241632C28();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24118E000, v16, v17, "[%{public}s] Day summary query failed with error: %s", (uint8_t *)v18, 0x16u);
      uint64_t v24 = v26;
      swift_arrayDestroy();
      MEMORY[0x245621640](v24, -1, -1);
      MEMORY[0x245621640](v18, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v28 = 0;
    goto LABEL_14;
  }
  if (a2 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    if (sub_241633068()) {
      goto LABEL_4;
    }
    goto LABEL_13;
  }
  uint64_t v10 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  if (!v10)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v28 = 1;
LABEL_14:
    sub_24162FB38();
    return;
  }
LABEL_4:
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v11 = (id)MEMORY[0x245620370](0, a2);
    goto LABEL_7;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v11 = *(id *)(a2 + 32);
LABEL_7:
    id v12 = v11;
    swift_bridgeObjectRelease();
    uint64_t v28 = (uint64_t)v12;
    id v13 = v12;
    sub_24162FB38();

    return;
  }
  __break(1u);
}

void **sub_2411960B4@<X0>(void **result@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *result;
  if ((unint64_t)*result >= 2) {
    id result = v3;
  }
  else {
    uint64_t v3 = 0;
  }
  *a2 = v3;
  return result;
}

uint64_t sub_2411960F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24162C1C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  id v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v10 = a3[7];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  long long v13 = *(_OWORD *)(a2 + v10 + 24);
  *(_OWORD *)(a1 + v10 + 24) = v13;
  uint64_t v14 = v13;
  id v15 = **(void (***)(uint64_t, uint64_t, uint64_t))(v13 - 8);
  id v16 = v9;
  swift_retain();
  v15(v11, v12, v14);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

void sub_241196204(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_24162EFA8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = sub_24162C1C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0(a1 + a2[7]);
  uint64_t v8 = *(void **)(a1 + a2[8]);
}

uint64_t sub_2411962DC()
{
  sub_2411C5850();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v21 = v1;
  uint64_t v22 = v2;
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C29BC();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v23 = v5;
  uint64_t v24 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C3810();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v25 = v9;
  uint64_t v26 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v0
                  + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin35SetupPregnancyModeFeaturesGenerator_experienceModelSubject);
  uint64_t v27 = *(void *)(v0
                  + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin35SetupPregnancyModeFeaturesGenerator_pregnancyModelSubject);
  uint64_t v28 = v13;
  sub_2411B12E8(0, &qword_26B011238, (void (*)(uint64_t))sub_2411C0598);
  v20[1] = v14;
  sub_2411B12E8(0, (unint64_t *)&qword_26B011248, (void (*)(uint64_t))sub_2412AD384);
  sub_241196680((unint64_t *)&unk_26B011228, &qword_26B011238, (void (*)(uint64_t))sub_2411C0598);
  sub_241196680(&qword_26B011240, (unint64_t *)&qword_26B011248, (void (*)(uint64_t))sub_2412AD384);
  swift_retain();
  swift_retain();
  sub_24162F888();
  sub_24162C198();
  uint64_t v15 = v21;
  sub_24162F868();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v15);
  sub_2411966D0(&qword_26B011120, (void (*)(uint64_t))sub_2411C29BC);
  uint64_t v16 = v23;
  sub_24162FCE8();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v16);
  sub_2411966D0((unint64_t *)&unk_26B011088, (void (*)(uint64_t))sub_2411C3810);
  uint64_t v17 = v25;
  uint64_t v18 = sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v17);
  return v18;
}

uint64_t sub_241196680(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2411B12E8(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2411966D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241196718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v19[0] = a4;
  uint64_t v7 = sub_24162C1C8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  sub_2411C1E5C();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v7);
  unint64_t v15 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v16 + v15, (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  *(void *)(v16 + ((v9 + v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_24162FA48();
  sub_2411C1768(0);
  sub_2411C1700();
  sub_2411A62B8(&qword_26B00EB90, sub_2411C1768);
  sub_2411A62B8((unint64_t *)&unk_26B00EBA8, (void (*)(uint64_t))sub_2411C1700);
  sub_24162FE18();
  swift_release();
  sub_2411A62B8(&qword_26B0103A0, (void (*)(uint64_t))sub_2411C1E5C);
  uint64_t v17 = sub_24162FCB8();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  *(void *)v19[0] = v17;
  return result;
}

uint64_t sub_241196A00()
{
  sub_2411C5A3C();
  uint64_t v26 = v1;
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C2A50();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  uint64_t v28 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C38AC();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v29 = v9;
  uint64_t v30 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for OvulationConfirmationFailureTileGenerator(0);
  uint64_t v14 = *(int *)(v13 + 24);
  uint64_t v32 = *(void *)(*(void *)(v0 + *(int *)(v13 + 28)) + 80);
  uint64_t v15 = *(void *)(v0 + v14);
  uint64_t v16 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  uint64_t v18 = v17;
  swift_retain();
  uint64_t v19 = sub_2411AF73C(v16, v18, v15);
  swift_bridgeObjectRelease();
  uint64_t v31 = v19;
  sub_241196DD8(0, &qword_26B010490, (void (*)(uint64_t))type metadata accessor for OvulationConfirmationState);
  sub_241196DD8(0, (unint64_t *)&qword_26B010510, (void (*)(uint64_t))sub_2411ED5E8);
  sub_241196E3C(&qword_26B010488, &qword_26B010490, (void (*)(uint64_t))type metadata accessor for OvulationConfirmationState);
  sub_241196E3C((unint64_t *)&qword_26B010508, (unint64_t *)&qword_26B010510, (void (*)(uint64_t))sub_2411ED5E8);
  sub_24162F888();
  sub_24162C198();
  uint64_t v20 = v26;
  sub_24162F868();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v20);
  type metadata accessor for OvulationConfirmationFailureTileGenerator.Change(0);
  sub_241196E8C(&qword_26B010280, (void (*)(uint64_t))sub_2411C2A50);
  uint64_t v21 = v27;
  sub_24162FCE8();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v21);
  sub_241196E8C(&qword_26B010168, (void (*)(uint64_t))sub_2411C38AC);
  uint64_t v22 = v29;
  uint64_t v23 = sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v22);
  return v23;
}

void sub_241196DD8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24162FA68();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241196E3C(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241196DD8(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241196E8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241196ED4(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_24162C1C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0(a1 + a2[6]);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0(a1 + a2[7]);

  uint64_t v6 = *(void **)(a1 + a2[9]);
}

uint64_t sub_241196F84@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24162EFA8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v39 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v39 - v10;
  uint64_t v12 = sub_24162CDC8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = v4;
  if (a1)
  {
    id v16 = a1;
    if (objc_msgSend(v16, sel_type) == (id)1)
    {
      id v17 = objc_msgSend(self, sel_categoryWithID_, 8);
      if (v17)
      {
        uint64_t v18 = v17;
        type metadata accessor for MenstrualCyclesSidebarActionHandler(0);
        (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F43CA8], v12);
        sub_2411BB13C(&qword_26B00F308, (void (*)(uint64_t))type metadata accessor for MenstrualCyclesSidebarActionHandler);
        sub_24162BE08();
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);

        uint64_t v36 = sub_24162C018();
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(a2, 0, 1, v36);
      }
      sub_24162EF18();
      uint64_t v28 = sub_24162EF98();
      os_log_type_t v29 = sub_2416322C8();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = swift_slowAlloc();
        uint64_t v31 = swift_slowAlloc();
        uint64_t v43 = v31;
        *(_DWORD *)uint64_t v30 = 136315394;
        uint64_t v42 = sub_24162C018();
        sub_2414051BC();
        uint64_t v32 = sub_241631D48();
        uint64_t v40 = a2;
        uint64_t v42 = sub_2411B6898(v32, v33, &v43);
        sub_241632C28();
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2080;
        uint64_t v42 = 5;
        type metadata accessor for HKDisplayCategoryIdentifier(0);
        uint64_t v34 = sub_241631D48();
        uint64_t v42 = sub_2411B6898(v34, v35, &v43);
        sub_241632C28();
        a2 = v40;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24118E000, v28, v29, "%s: Unable to create display category for %s", (uint8_t *)v30, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x245621640](v31, -1, -1);
        MEMORY[0x245621640](v30, -1, -1);
      }

      uint64_t v26 = *(void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v27 = v11;
      goto LABEL_12;
    }

    uint64_t v4 = v41;
  }
  sub_24162EF18();
  id v19 = a1;
  uint64_t v20 = sub_24162EF98();
  os_log_type_t v21 = sub_2416322C8();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v43 = v23;
    *(_DWORD *)uint64_t v22 = 136446466;
    uint64_t v40 = a2;
    uint64_t v42 = sub_2411B6898(0x65466E6967756C50, 0xEE006D6574496465, &v43);
    sub_241632C28();
    *(_WORD *)(v22 + 12) = 2080;
    uint64_t v24 = sub_24162BDB8();
    uint64_t v42 = sub_2411B6898(v24, v25, &v43);
    a2 = v40;
    sub_241632C28();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v20, v21, "[%{public}s] Sidebar feed item is not supported for non-primary profile: %s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245621640](v23, -1, -1);
    MEMORY[0x245621640](v22, -1, -1);

    uint64_t v26 = *(void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v27 = v9;
LABEL_12:
    v26(v27, v41);
    goto LABEL_13;
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
LABEL_13:
  uint64_t v38 = sub_24162C018();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(a2, 1, 1, v38);
}

uint64_t sub_241197790@<X0>(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  int v37 = a2;
  unint64_t v35 = a4;
  id v36 = a1;
  uint64_t v5 = sub_24162C0E8();
  uint64_t v33 = *(void *)(v5 - 8);
  uint64_t v34 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v32 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_24162CBF8();
  uint64_t v7 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24162C128();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24162C1C8();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v16 + 16))(v15, a3);
  uint64_t v30 = sub_24162BDD8();
  sub_2411BAE9C(0, (unint64_t *)&qword_26B012FC8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v17 = sub_24162BD98();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 72);
  unint64_t v20 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_24163A4F0;
  unint64_t v22 = v21 + v20;
  uint64_t v23 = *(void (**)(unint64_t, void, uint64_t))(v18 + 104);
  v23(v22, *MEMORY[0x263F454F0], v17);
  v23(v22 + v19, *MEMORY[0x263F45578], v17);
  sub_2411B8B4C((uint64_t)v9);
  sub_24162CBE8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v31);
  (*(void (**)(char *, void, uint64_t))(v33 + 104))(v32, *MEMORY[0x263F45688], v34);
  sub_24162C0F8();
  uint64_t v24 = type metadata accessor for SharedProjectionHighlightModelGenerator();
  unint64_t v25 = v35;
  v35[3] = v24;
  v25[4] = sub_2411A70D0(qword_26B012D70, (void (*)(uint64_t))type metadata accessor for SharedProjectionHighlightModelGenerator);
  uint64_t v26 = sub_2411B6C70(v25);
  id v27 = v36;
  id v28 = v36;
  return sub_24119C304((uint64_t)v15, (uint64_t)v12, v27, v37, v26);
}

void *sub_241197B88(void *a1, int a2)
{
  uint64_t v4 = sub_24162EFA8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v8 = a1;
    sub_24162EF48();
    id v9 = v8;
    uint64_t v10 = sub_24162EF98();
    os_log_type_t v11 = sub_2416322B8();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v21 = v13;
      *(_DWORD *)uint64_t v12 = 67109378;
      LODWORD(v20) = a2 & 1;
      sub_241632C28();
      *(_WORD *)(v12 + 8) = 2082;
      uint64_t v18 = v12 + 10;
      uint64_t v20 = (uint64_t)v9;
      sub_2411F1EFC();
      int v19 = a2;
      id v14 = v9;
      uint64_t v15 = sub_241631D78();
      uint64_t v20 = sub_2411B6898(v15, v16, &v21);
      sub_241632C28();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v10, v11, "SharedProjectionHighlightModelGeneratorPipeline translate to feed item should display %{BOOL}d analysis %{public}s", (uint8_t *)v12, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x245621640](v13, -1, -1);
      MEMORY[0x245621640](v12, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return a1;
}

uint64_t sub_241197DE8(void *a1)
{
  uint64_t v2 = sub_24162C0E8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24162CBF8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411B8B4C((uint64_t)v9);
  unint64_t v10 = sub_24162CBE8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  unint64_t v11 = sub_2411BEC6C(v10);
  swift_bridgeObjectRelease();
  if (v11)
  {
    uint64_t v12 = sub_2411B9F20(v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = sub_2411B9F20(MEMORY[0x263F8EE78]);
  }
  sub_2411BDDC8(0, (unint64_t *)&qword_26B012FC8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v13 = sub_24162BD98();
  uint64_t v14 = *(void *)(v13 - 8);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_241637EE0;
  (*(void (**)(unint64_t, void, uint64_t))(v14 + 104))(v16 + v15, *MEMORY[0x263F45500], v13);
  id v17 = a1;
  sub_2411B9F50(v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_2411B96DC(v12);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F45688], v2);
  return sub_24162C108();
}

uint64_t sub_2411980F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24162C128();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24162C1C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  swift_retain();
  swift_retain();
  return a1;
}

void sub_2411981D0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)((char *)v0
                + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin35SetupPregnancyModeFeaturesGenerator_experienceStore);
  objc_msgSend(v2, sel_registerObserver_completionHandler_, v0, 0);
  uint64_t v3 = *(void **)((char *)v0
                + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin35SetupPregnancyModeFeaturesGenerator_pregnancyModelProvider);
  swift_unknownObjectRetain();
  sub_24162C158();
  objc_msgSend(v3, sel_registerObserver_isUserInitiated_, v0, sub_24162C548() & 1);
  swift_unknownObjectRelease();
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v1;
  v7[4] = sub_2411C71D8;
  v7[5] = v5;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 1107296256;
  v7[2] = sub_2411ABF50;
  v7[3] = &unk_26F56F490;
  uint64_t v6 = _Block_copy(v7);
  swift_release();
  objc_msgSend(v2, sel_fetchExperienceModelWithCompletion_, v6);
  _Block_release(v6);
}

void *sub_241198368(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24162C1C8();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  long long v13 = *(_OWORD *)((char *)a2 + v12 + 24);
  *(_OWORD *)((char *)a1 + v12 + 24) = v13;
  (**(void (***)(void))(v13 - 8))();
  uint64_t v14 = a3[7];
  long long v15 = *(_OWORD *)((char *)a2 + v14 + 24);
  *(_OWORD *)((char *)a1 + v14 + 24) = v15;
  (**(void (***)(void))(v15 - 8))();
  uint64_t v16 = a3[8];
  uint64_t v17 = a3[9];
  uint64_t v18 = *(void **)((char *)a2 + v16);
  *(void *)((char *)a1 + v16) = v18;
  uint64_t v19 = *(void **)((char *)a2 + v17);
  *(void *)((char *)a1 + v17) = v19;
  id v20 = v18;
  id v21 = v19;
  return a1;
}

uint64_t sub_2411984D4()
{
  uint64_t v0 = sub_24162CBF8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24162BD98();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MenstrualCyclesBrowseTileViewController();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F45568], v4);
  sub_24162BDD8();
  sub_24162BDF8();
  sub_2411B8B4C((uint64_t)v3);
  sub_24162CBB8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_24162BEA8();
  id v8 = (id)HKMCCycleTrackingSampleTypes();
  sub_2411C029C();
  unint64_t v9 = sub_241631F28();

  uint64_t v10 = sub_2411B9F20(v9);
  swift_bridgeObjectRelease();
  sub_2411B96DC(v10);
  swift_bridgeObjectRelease();
  return sub_24162BEE8();
}

uint64_t sub_241198708(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_24162EFA8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_24162C1C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0(a1 + a2[6]);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0(a1 + a2[7]);

  swift_release();

  return swift_release();
}

uint64_t sub_2411987F4(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_241198838()
{
  return sub_241198840(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_241198840(void *a1, void *a2)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = a2;
  id v5 = a1;
  return sub_24162FC58();
}

void destroy for HKMCAnalysisResult(void **a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF) {
}
  }

uint64_t sub_241198994@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v26 = a2;
  uint64_t v24 = a3;
  uint64_t v3 = sub_24162C0E8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24162CBF8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[1] = sub_24162BDD8();
  sub_2411BAFC8(0, (unint64_t *)&qword_26B012FC8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v11 = sub_24162BD98();
  uint64_t v12 = *(void *)(v11 - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_241637EE0;
  (*(void (**)(unint64_t, void, uint64_t))(v12 + 104))(v14 + v13, *MEMORY[0x263F45548], v11);
  sub_2411B8B4C((uint64_t)v10);
  sub_24162CBE8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F45688], v3);
  uint64_t v15 = v24;
  sub_24162C0F8();
  uint64_t v16 = (int *)type metadata accessor for OvulationConfirmationFailureTileGenerator(0);
  uint64_t v17 = v15 + v16[5];
  uint64_t v18 = sub_24162C1C8();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = v25;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v17, v25, v18);
  sub_24162C148();
  sub_2411B6854(v27, v27[3]);
  sub_24162C038();
  _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  sub_24162C4F8();
  swift_allocObject();
  uint64_t v21 = sub_24162C4C8();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v18);
  uint64_t result = _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v27);
  *(void *)(v15 + v16[6]) = v21;
  *(void *)(v15 + v16[7]) = v26;
  return result;
}

uint64_t sub_241198D38(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_24162C1C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_24162C128();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  swift_release();
  swift_release();
  uint64_t v7 = a1 + a2[10];
  uint64_t v8 = sub_24162BA08();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t sub_241198E58()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_241198E98()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_241198EE8()
{
  swift_release();
  sub_24120B328();

  return MEMORY[0x270FA0238](v0, 49, 7);
}

uint64_t sub_241198F2C()
{
  uint64_t v1 = (int *)(type metadata accessor for PregnancyInteractivePickerRow() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + v1[13];
  uint64_t v8 = sub_24162DA38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_24119905C()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24119909C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for LearnMoreFooterText() - 8);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(*(void *)v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = v0 + v4;
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v7 + v2[12], v1);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_2411991A4(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  swift_release();

  return MEMORY[0x270FA0238](v1, 48, 7);
}

uint64_t sub_2411991EC()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_241199234()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_241199274()
{
  uint64_t v1 = (int *)(type metadata accessor for SleepingWristTemperatureHelpTileGenerator(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + v1[7];
  uint64_t v8 = sub_24162EFA8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v6 + v1[8];
  uint64_t v10 = sub_24162C1C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0(v6 + v1[9]);

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_2411993C0()
{
  uint64_t v1 = type metadata accessor for EditPregnancyView(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  sub_241483B08(0, (unint64_t *)&qword_268CFA8A8, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_24162FEE8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v3 + v4;
  uint64_t v8 = v5 + *(int *)(v1 + 20);
  sub_241483B08(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, v7, v2 | 7);
}

uint64_t sub_241199588()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_2411995E0()
{
  uint64_t started = type metadata accessor for PregnancyStartDateMethodInputRow(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(started - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(started - 8) + 64);
  uint64_t v5 = v0 + v3;
  sub_2414FAAB8(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_241630128();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v3 + v4;
  uint64_t v8 = v5 + *(int *)(started + 20);
  sub_2414F46F0(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();

  return MEMORY[0x270FA0238](v0, v7, v2 | 7);
}

uint64_t sub_241199770(uint64_t (*a1)(void))
{
  uint64_t v2 = (int *)(a1(0) - 8);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(*(void *)v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = v1 + v4;
  sub_2411E2CE8(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v7 + v2[7];
  uint64_t v10 = sub_24162DA38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);

  return MEMORY[0x270FA0238](v1, v5, v6);
}

uint64_t sub_2411998CC(uint64_t (*a1)(void))
{
  uint64_t v2 = (int *)(a1(0) - 8);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(*(void *)v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = v1 + v4;
  sub_241521400(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v7 + v2[7];
  uint64_t v10 = sub_24162DA38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);

  return MEMORY[0x270FA0238](v1, v5, v6);
}

uint64_t sub_241199A28()
{
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 160, 7);
}

uint64_t sub_241199AA0()
{
  uint64_t v1 = (int *)(type metadata accessor for PregnancyStartDateMethodInputPickerSheet() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  sub_24155F77C(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  swift_release();
  uint64_t v6 = v0 + v3 + v1[8];
  sub_24155F77C(0, (unint64_t *)&unk_268D03500, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_24162FFD8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_241199C54()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 168, 7);
}

uint64_t sub_241199CE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24162EFA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24162C1C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  long long v12 = *(_OWORD *)(a2 + v11 + 24);
  *(_OWORD *)(a1 + v11 + 24) = v12;
  (**(void (***)(void))(v12 - 8))();
  uint64_t v13 = a3[7];
  long long v14 = *(_OWORD *)(a2 + v13 + 24);
  *(_OWORD *)(a1 + v13 + 24) = v14;
  (**(void (***)(void))(v14 - 8))();
  uint64_t v15 = a3[8];
  uint64_t v16 = a3[9];
  uint64_t v17 = *(void **)(a2 + v15);
  *(void *)(a1 + v15) = v17;
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  id v18 = v17;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_241199E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v17[1] = a3;
  uint64_t v4 = sub_241632218();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C36E4(0, &qword_26B0101F8, MEMORY[0x263F44AA8], (void (*)(uint64_t))sub_2411BFFDC, (void (*)(void))sub_2411C0264);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  long long v12 = (char *)v17 - v11;
  sub_2411BFDA0(0, (unint64_t *)&qword_26B0121F0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_24163B390;
  *(void *)(v13 + 32) = objc_msgSend(self, sel_queryDescriptorWithSampleType_, a1);
  v17[3] = v13;
  sub_241631F48();
  id v14 = objc_msgSend(self, sel_sortDescriptorsForMostRecentSamples);
  sub_2411B9D00(0, (unint64_t *)&qword_26B012398);
  sub_241631F28();

  sub_241632238();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2411BFFDC();
  sub_2411C0264();
  sub_24162FCE8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_2411C2E84();
  uint64_t v15 = sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v15;
}

uint64_t sub_24119A174@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  sub_2411C1050(0);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C3CA4();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *a1;
  if (*(void *)(v16 + 16))
  {
    uint64_t v27 = v13;
    sub_24162C138();
    sub_2411B6854(v29, v29[3]);
    uint64_t v17 = _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_24119AF04(v17);
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_24162C3C8();
    swift_bridgeObjectRelease();
    uint64_t v28 = v18;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v16;
    *(void *)(v19 + 24) = a2;
    sub_2411C1768(0);
    sub_2411C0774(0);
    sub_2411A62B8(&qword_26B00EB90, sub_2411C1768);
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_24162FCE8();
    swift_release();
    swift_release();
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v29);
    sub_2411A62B8(&qword_26B00EB70, (void (*)(uint64_t))sub_2411C3CA4);
    uint64_t v20 = sub_24162FCB8();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v15, v12);
  }
  else
  {
    sub_2411BDD64(0, &qword_26B00E668, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
    uint64_t v22 = sub_24162C518();
    uint64_t v23 = *(void *)(v22 - 8);
    unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_241637EE0;
    (*(void (**)(unint64_t, void, uint64_t))(v23 + 104))(v25 + v24, *MEMORY[0x263F45888], v22);
    v29[0] = v25;
    sub_2411C0774(0);
    sub_24162FB98();
    sub_2411A62B8(&qword_26B0125A8, sub_2411C1050);
    uint64_t v20 = sub_24162FCB8();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  *a3 = v20;
  return result;
}

void sub_24119A5AC(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v7 = *(void (**)(id, void *, void *))(a1 + 32);
  swift_retain();
  id v10 = a2;
  id v8 = a3;
  id v9 = a4;
  v7(v10, a3, a4);
  swift_release();
}

void sub_24119A64C(uint64_t a1, void *a2, void *a3)
{
  sub_2411AC64C(a1, a2, a3, v3);
}

void *sub_24119A654(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)v2;
  uint64_t v5 = v2;
  uint64_t v41 = v2;
  uint64_t v55 = v4;
  uint64_t v56 = a2;
  uint64_t v6 = sub_24162C1C8();
  uint64_t v43 = v6;
  uint64_t v46 = *(void *)(v6 - 8);
  uint64_t v7 = v46;
  uint64_t v53 = *(void *)(v46 + 64);
  MEMORY[0x270FA5388](v6);
  unint64_t v52 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C0E8C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v57 = v9;
  uint64_t v58 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v54 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24162C0E8();
  uint64_t v50 = *(void *)(v12 - 8);
  uint64_t v51 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v49 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_24162CBF8();
  uint64_t v14 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_24162C128();
  uint64_t v47 = *(void *)(v17 - 8);
  uint64_t v48 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v42 = a1;
  v44(&v5[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin53MenstrualCyclesNotificationsSettingsGeneratorPipeline_context], a1, v6);
  uint64_t v20 = (void *)sub_24162C178();
  sub_2411BB090(0, (unint64_t *)&qword_26B012FC8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v21 = sub_24162BD98();
  uint64_t v22 = *(void *)(v21 - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_241637EE0;
  (*(void (**)(unint64_t, void, uint64_t))(v22 + 104))(v24 + v23, *MEMORY[0x263F45570], v21);
  id v25 = v20;
  sub_2411B8B4C((uint64_t)v16);
  sub_24162CBE8();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v45);
  (*(void (**)(char *, void, uint64_t))(v50 + 104))(v49, *MEMORY[0x263F45688], v51);
  sub_24162C0F8();

  uint64_t v26 = v41;
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))(&v41[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin53MenstrualCyclesNotificationsSettingsGeneratorPipeline_domain], v19, v48);
  uint64_t v27 = v52;
  uint64_t v29 = v42;
  uint64_t v28 = v43;
  v44(v52, v42, v43);
  uint64_t v30 = v46;
  unint64_t v31 = (*(unsigned __int8 *)(v46 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  unint64_t v32 = (v53 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v33 = swift_allocObject();
  unint64_t v34 = v33 + v31;
  uint64_t v35 = v30;
  (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v34, v27, v28);
  uint64_t v36 = v55;
  *(void *)(v33 + v32) = v56;
  *(void *)(v33 + ((v32 + 15) & 0xFFFFFFFFFFFFFFF8)) = v36;
  sub_2411C19B4();
  sub_2411AB8F0((unint64_t *)&qword_26B012E98, (void (*)(uint64_t))sub_2411C19B4);
  swift_retain();
  int v37 = v54;
  sub_24162FBE8();
  sub_2411AB8F0(&qword_26B00EBF8, (void (*)(uint64_t))sub_2411C0E8C);
  uint64_t v38 = v57;
  uint64_t v39 = sub_24162FCB8();
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v29, v28);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v37, v38);
  uint64_t result = v26;
  *(void *)((char *)v26
            + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin53MenstrualCyclesNotificationsSettingsGeneratorPipeline_publisher) = v39;
  return result;
}

void *sub_24119AC88(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24162EFA8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[3] = 0;
  v1[4] = 0;
  uint64_t v19 = 0;
  sub_2411C1378();
  swift_allocObject();
  v1[5] = sub_24162FB58();
  v1[2] = a1;
  id v8 = a1;
  sub_2411A05D4();
  sub_24119CA88();
  sub_24162EF48();
  uint64_t v9 = sub_24162EF98();
  os_log_type_t v10 = sub_2416322E8();
  if (os_log_type_enabled(v9, v10))
  {
    id v17 = v8;
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v19 = v12;
    *(_DWORD *)uint64_t v11 = 136446210;
    uint64_t v16 = v4;
    uint64_t v13 = sub_2416333E8();
    uint64_t v18 = sub_2411B6898(v13, v14, &v19);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v9, v10, "[%{public}s] Initializing", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v12, -1, -1);
    MEMORY[0x245621640](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v16);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v2;
}

uint64_t sub_24119AF04(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_241632108();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      sub_24119AF9C(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_24119AF9C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_241633308();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631DC8();
  uint64_t v8 = sub_241633358();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_241633218() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_241633218() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_24119B14C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  uint64_t *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_24119B14C(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_2414A3470();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_2414A6290();
      goto LABEL_22;
    }
    sub_2414A744C();
  }
  uint64_t v11 = *v4;
  sub_241633308();
  sub_241631DC8();
  uint64_t result = sub_241633358();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_241633218(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_241633258();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_241633218();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  uint64_t *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_24119B2E8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  v16[3] = sub_2411B9D00(0, (unint64_t *)&qword_26B010750);
  v16[4] = MEMORY[0x263F44B48];
  v16[0] = a3;
  uint64_t v8 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin29AddPregnancyFeedItemGenerator_pregnancyModelSubject;
  v15[0] = 0;
  sub_2411C1294();
  swift_allocObject();
  *(void *)(a4 + v8) = sub_24162FB58();
  uint64_t v9 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin29AddPregnancyFeedItemGenerator_pregnancyTestResultType;
  sub_2411B9D00(0, (unint64_t *)&qword_26B0125F0);
  *(void *)(a4 + v9) = MEMORY[0x24561F7D0]((id)*MEMORY[0x263F093C8]);
  *(unsigned char *)(a4 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin29AddPregnancyFeedItemGenerator_tileTrigger) = 2;
  uint64_t v10 = a4 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin29AddPregnancyFeedItemGenerator_context;
  uint64_t v11 = sub_24162C1C8();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v10, a1, v11);
  *(void *)(a4 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin29AddPregnancyFeedItemGenerator_pregnancyModelProvider) = a2;
  swift_unknownObjectRetain();
  sub_24162C148();
  sub_2411B6854(v15, v15[3]);
  sub_24162C038();
  _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  sub_24162C4F8();
  swift_allocObject();
  uint64_t v13 = sub_24162C4C8();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v15);
  *(void *)(a4 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin29AddPregnancyFeedItemGenerator_contentStateManager) = v13;
  sub_2411A3DF4((uint64_t)v16, a4 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin29AddPregnancyFeedItemGenerator_cycleTrackingFeatureStatusManager);
  swift_retain();
  sub_24162C158();
  objc_msgSend(a2, sel_registerObserver_isUserInitiated_, a4, sub_24162C548() & 1, v15[0]);
  swift_release();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v16);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
  return a4;
}

uint64_t sub_24119B55C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24162C1C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24162C128();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = *(void **)(a2 + v11);
  *(void *)(a1 + v11) = v13;
  uint64_t v14 = *(void **)(a2 + v12);
  *(void *)(a1 + v12) = v14;
  uint64_t v15 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v16 = a3[10];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_24162BA08();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
  id v21 = v13;
  id v22 = v14;
  swift_retain();
  swift_retain();
  v20(v17, v18, v19);
  return a1;
}

uint64_t sub_24119B6B8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v40 = a3;
  uint64_t v41 = a4;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v33 = a5;
  uint64_t v6 = sub_24162B7F8();
  uint64_t v36 = *(void *)(v6 - 8);
  uint64_t v37 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_24162C0E8();
  uint64_t v9 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_24162CBF8();
  uint64_t v12 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v14 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = (int *)type metadata accessor for CycleDeviationsUpdateTileGeneratorPipeline();
  v32[1] = a5 + updated[5];
  v32[0] = sub_24162BDD8();
  sub_2411BAF00(0, (unint64_t *)&qword_26B012FC8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v16 = sub_24162BD98();
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_241637EE0;
  (*(void (**)(unint64_t, void, uint64_t))(v17 + 104))(v19 + v18, *MEMORY[0x263F45548], v16);
  sub_2411B8B4C((uint64_t)v14);
  sub_24162CBE8();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v34);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F45688], v35);
  sub_24162C0F8();
  uint64_t v20 = v33;
  uint64_t v22 = v36;
  uint64_t v21 = v37;
  (*(void (**)(char *, void, uint64_t))(v36 + 104))(v8, *MEMORY[0x263F07740], v37);
  sub_24162B808();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v21);
  uint64_t v23 = sub_24162C1C8();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v20, v38, v23);
  uint64_t v26 = v39;
  uint64_t v27 = v40;
  *(void *)(v20 + updated[7]) = v39;
  *(void *)(v20 + updated[8]) = v27;
  uint64_t v28 = v20;
  id v29 = v26;
  swift_retain();
  sub_24162C148();
  sub_2411B6854(v42, v42[3]);
  sub_24162C038();
  _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  sub_24162C4F8();
  swift_allocObject();
  uint64_t v30 = sub_24162C4C8();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v23);
  uint64_t result = _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v42);
  *(void *)(v28 + updated[9]) = v30;
  *(void *)(v28 + updated[6]) = v41;
  return result;
}

uint64_t sub_24119BB6C()
{
  uint64_t v1 = v0;
  sub_2411A84C0(0, &qword_26B00EC40, MEMORY[0x263EFDE48]);
  uint64_t v47 = v2;
  uint64_t v49 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v41 - v3;
  sub_2411C2110();
  uint64_t v50 = v5;
  uint64_t v53 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  v44 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411AE590(0, (unint64_t *)&qword_26B0101E8, (void (*)(uint64_t))sub_2411C2110, (void (*)(uint64_t))sub_2411C0494, (void (*)(void))sub_2411C2198);
  uint64_t v56 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v43 = (char *)&v41 - v8;
  sub_2411C3EA4();
  uint64_t v42 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = v12;
  sub_2411C4B90();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v51 = v13;
  uint64_t v52 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C2428(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v54 = v17;
  uint64_t v55 = v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v45 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411AE590(0, &qword_26B0101A8, sub_2411C2428, (void (*)(uint64_t))type metadata accessor for SleepOnboardingTileGenerator.Change, (void (*)(void))sub_2411C2470);
  uint64_t v46 = v20;
  uint64_t v48 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v41 - v21;
  uint64_t v23 = (int *)type metadata accessor for SleepOnboardingTileGenerator(0);
  uint64_t v24 = (void *)(v0 + v23[6]);
  uint64_t v25 = v24[3];
  uint64_t v26 = v24[4];
  sub_2411B6854(v24, v25);
  uint64_t v27 = v1 + v23[5];
  uint64_t v58 = sub_2411B25DC(v27, v25, v26);
  uint64_t v28 = (void *)(v1 + v23[7]);
  uint64_t v29 = v28[3];
  uint64_t v30 = v28[4];
  sub_2411B6854(v28, v29);
  uint64_t v57 = sub_2411B25DC(v27, v29, v30);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, *(void *)(v1 + v23[9])+ OBJC_IVAR____TtC24MenstrualCyclesAppPlugin38SleepMeasurementsConfigurationProvider_configurationPublisher, v42);
  swift_beginAccess();
  sub_2411A84C0(0, (unint64_t *)&qword_26B00EC48, MEMORY[0x263EFDE58]);
  sub_24162FC18();
  swift_endAccess();
  sub_2411C0C70();
  unint64_t v31 = v44;
  uint64_t v32 = v47;
  sub_24162FD48();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v4, v32);
  sub_2411C0494();
  sub_2411C2198();
  uint64_t v33 = v50;
  sub_24162FCE8();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v31, v33);
  uint64_t v34 = (void (*)(uint64_t))MEMORY[0x263F44998];
  sub_2411C1900(0, (unint64_t *)&qword_26B010480, MEMORY[0x263F44998]);
  sub_2411C1964(&qword_26B010478, (unint64_t *)&qword_26B010480, v34);
  sub_24119C2BC((unint64_t *)&unk_26B0100F0, (void (*)(uint64_t))sub_2411C3EA4);
  sub_2411C2FFC();
  sub_24162F8E8();
  sub_24162C198();
  uint64_t v35 = v45;
  uint64_t v36 = v51;
  sub_24162F8C8();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v16, v36);
  type metadata accessor for SleepOnboardingTileGenerator.Change(0);
  sub_2411C2470();
  uint64_t v37 = v54;
  sub_24162FCE8();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v35, v37);
  sub_2411C3398();
  uint64_t v38 = v46;
  uint64_t v39 = sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v22, v38);
  return v39;
}

uint64_t sub_24119C2BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24119C304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, int a4@<W3>, uint64_t *a5@<X8>)
{
  int v50 = a4;
  uint64_t v56 = a1;
  uint64_t v8 = sub_24162C1C8();
  uint64_t v54 = *(void *)(v8 - 8);
  uint64_t v55 = v8;
  uint64_t v9 = *(void *)(v54 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = &v49[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2411C0DF8();
  uint64_t v12 = v11;
  uint64_t v51 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = &v49[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v57 = sub_24162EFA8();
  uint64_t v61 = *(void *)(v57 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v57);
  uint64_t v62 = &v49[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v15);
  uint64_t v52 = &v49[-v17];
  sub_2411C1050(0);
  uint64_t v19 = v18;
  uint64_t v20 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = &v49[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = *(int *)(type metadata accessor for SharedProjectionHighlightModelGenerator() + 20);
  uint64_t v53 = a5;
  uint64_t v24 = (char *)a5 + v23;
  uint64_t v25 = sub_24162C128();
  uint64_t v58 = *(void *)(v25 - 8);
  uint64_t v59 = v25;
  (*(void (**)(char *, uint64_t))(v58 + 16))(v24, a2);
  unint64_t v63 = a3;
  uint64_t v60 = a2;
  if (a3)
  {
    uint64_t v26 = v56;
    uint64_t v27 = sub_2411BBFB0(v56, v63, v50 & 1);
    uint64_t v28 = v54;
    uint64_t v29 = v55;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v54 + 16))(&v49[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], v26, v55);
    unint64_t v30 = (*(unsigned __int8 *)(v28 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    unint64_t v31 = (v9 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = v27;
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v28 + 32))(v32 + v30, v10, v29);
    *(void *)(v32 + v31) = &unk_26F565EF0;
    sub_2411C1700();
    sub_2411BA264((unint64_t *)&unk_26B00EBA8, (void (*)(uint64_t))sub_2411C1700);
    swift_retain();
    sub_24162FBE8();
    sub_2411BA264((unint64_t *)&unk_26B00EC20, (void (*)(uint64_t))sub_2411C0DF8);
    uint64_t v33 = sub_24162FCB8();
    (*(void (**)(unsigned char *, uint64_t))(v51 + 8))(v14, v12);
    swift_release();
    uint64_t *v53 = v33;
    sub_24162EF48();
    uint64_t v34 = sub_24162EF98();
    os_log_type_t v35 = sub_2416322E8();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v65 = v37;
      *(_DWORD *)uint64_t v36 = 136446210;
      uint64_t v64 = sub_2411B6898(0xD000000000000027, 0x8000000241638B70, &v65);
      sub_241632C28();
      _os_log_impl(&dword_24118E000, v34, v35, "[%{public}s] Initialized", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245621640](v37, -1, -1);
      MEMORY[0x245621640](v36, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v60, v59);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v29);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v61 + 8))(v62, v57);
  }
  else
  {
    uint64_t v65 = MEMORY[0x263F8EE78];
    sub_2411C0774(0);
    sub_24162FB98();
    sub_2411BA264(&qword_26B0125A8, sub_2411C1050);
    uint64_t v39 = sub_24162FCB8();
    (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v22, v19);
    uint64_t *v53 = v39;
    sub_24162EF48();
    uint64_t v40 = sub_24162EF98();
    os_log_type_t v41 = sub_2416322E8();
    BOOL v42 = os_log_type_enabled(v40, v41);
    uint64_t v44 = v55;
    uint64_t v43 = v56;
    uint64_t v45 = v54;
    uint64_t v46 = v57;
    if (v42)
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      uint64_t v65 = v48;
      *(_DWORD *)uint64_t v47 = 136446210;
      uint64_t v64 = sub_2411B6898(0xD000000000000027, 0x8000000241638B70, &v65);
      sub_241632C28();
      _os_log_impl(&dword_24118E000, v40, v41, "[%{public}s] Initialized with nil analysis, submitting no PluginSharableModelChanges", v47, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245621640](v48, -1, -1);
      MEMORY[0x245621640](v47, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v60, v59);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v44);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v61 + 8))(v52, v46);
  }
}

void sub_24119CA88()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  if (v1[3])
  {
    objc_msgSend((id)v1[2], sel_stopQuery_);
    uint64_t v3 = (void *)v1[3];
    v1[3] = 0;
  }
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v2;
  id v6 = objc_allocWithZone(MEMORY[0x263F45148]);
  uint64_t v17 = sub_241574984;
  uint64_t v18 = v5;
  uint64_t aBlock = MEMORY[0x263EF8330];
  unint64_t v14 = 1107296256;
  uint64_t v15 = sub_2415748C0;
  uint64_t v16 = &unk_26F577218;
  uint64_t v7 = _Block_copy(&aBlock);
  swift_retain();
  id v8 = objc_msgSend(v6, sel_initWithUpdateHandler_, v7);
  _Block_release(v7);
  swift_release();
  swift_release();
  uint64_t aBlock = 0;
  unint64_t v14 = 0xE000000000000000;
  id v9 = v8;
  sub_2416333E8();
  sub_241631E08();
  swift_bridgeObjectRelease();
  sub_241631E08();
  sub_241632F68();
  uint64_t v10 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setDebugIdentifier_, v10);

  uint64_t v11 = (void *)v1[3];
  v1[3] = v9;
  id v12 = v9;

  objc_msgSend((id)v1[2], sel_executeQuery_, v12);
}

void *initializeBufferWithCopyOfBuffer for HKMCAnalysisResult(void *a1, void **a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    id v4 = v3;
  }
  *a1 = v3;
  return a1;
}

uint64_t sub_24119CD00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_24162C1C8() - 8);
  uint64_t result = sub_24119CD68(*(void *)(v1 + 16), v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
  *a1 = result;
  return result;
}

uint64_t sub_24119CD68(uint64_t a1, uint64_t a2)
{
  v24[11] = a2;
  sub_2411B134C(0, &qword_26B0105A0, (uint64_t (*)(uint64_t))sub_2411B1DFC, MEMORY[0x263EFDE08]);
  v24[6] = *(void *)(v2 - 8);
  v24[7] = v2;
  MEMORY[0x270FA5388](v2);
  v24[5] = (char *)v24 - v3;
  uint64_t v4 = sub_24162EFA8();
  v24[8] = *(void *)(v4 - 8);
  v24[9] = v4;
  MEMORY[0x270FA5388](v4);
  v24[10] = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24162E7D8();
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411B1DFC(0);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  v24[4] = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v24 - v12;
  sub_2411B6C0C(0, &qword_26B010570, (uint64_t (*)(uint64_t))sub_2411B1DFC, MEMORY[0x263EFDDF8]);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  void v24[3] = (char *)v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v24 - v19;
  sub_2411B9D00(0, (unint64_t *)&qword_26B010750);
  sub_24162E818();
  uint64_t v21 = v25;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v13, v8, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v13, 0, 1, v6);
  sub_24162FB98();
  sub_24119D400();
  uint64_t v22 = sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v15);
  return v22;
}

unint64_t sub_24119D400()
{
  unint64_t result = qword_26B010568;
  if (!qword_26B010568)
  {
    sub_2411B6C0C(255, &qword_26B010570, (uint64_t (*)(uint64_t))sub_2411B1DFC, MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B010568);
  }
  return result;
}

uint64_t sub_24119D488(uint64_t a1, void *a2)
{
  uint64_t v38 = sub_24162C0E8();
  uint64_t v36 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v34 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24162CBF8();
  uint64_t v32 = *(void *)(v4 - 8);
  uint64_t v33 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_24162C128();
  uint64_t v35 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  unint64_t v30 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241632218();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C0A68(0, &qword_26B0112A0, MEMORY[0x263F44AA8], (void (*)(void))sub_2411C0264);
  uint64_t v29 = v12;
  uint64_t v31 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v28 - v13;
  sub_24162C148();
  sub_2411B6854(v41, v41[3]);
  uint64_t v15 = (void *)sub_24162C038();
  sub_2411BFC90();
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_24163B390;
  *(void *)(v16 + 32) = a2;
  uint64_t v39 = v16;
  sub_241631F48();
  id v17 = a2;
  sub_241632238();

  swift_bridgeObjectRelease();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v41);
  uint64_t v18 = sub_2411C0264();
  sub_24162FC98();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_24162C1B8();
  sub_24162C178();
  sub_24119EE44(0, (unint64_t *)&qword_26B012FC8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v19 = sub_24162BD98();
  uint64_t v20 = *(void *)(v19 - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_241637EE0;
  (*(void (**)(unint64_t, void, uint64_t))(v20 + 104))(v22 + v21, *MEMORY[0x263F45540], v19);
  sub_2411B8B4C((uint64_t)v6);
  sub_24162CBE8();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v6, v33);
  (*(void (**)(char *, void, uint64_t))(v36 + 104))(v34, *MEMORY[0x263F45688], v38);
  uint64_t v23 = v30;
  sub_24162C0F8();
  uint64_t v39 = v8;
  uint64_t v40 = v18;
  swift_getOpaqueTypeConformance2();
  uint64_t v24 = v29;
  uint64_t v25 = sub_24162FCA8();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v23, v37);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v41);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v24);
  v41[0] = v25;
  sub_2411C15D8();
  sub_2411A151C(&qword_26B011200, 255, (void (*)(uint64_t))sub_2411C15D8);
  uint64_t v26 = sub_24162FCB8();
  swift_release();
  return v26;
}

uint64_t sub_24119DAA0(uint64_t a1)
{
  uint64_t v45 = a1;
  v43[1] = *v1;
  uint64_t v2 = sub_24162EFA8();
  uint64_t v57 = *(void *)(v2 - 8);
  uint64_t v58 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v53 = (char *)v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24162C1C8();
  uint64_t v59 = *(void *)(v4 - 8);
  uint64_t v60 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v52 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24119E1F8(0, (unint64_t *)&unk_26B012EE0, (uint64_t (*)(uint64_t))sub_2411C8510, MEMORY[0x263EFDDF8]);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v55 = v6;
  uint64_t v56 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v54 = (char *)v43 - v8;
  uint64_t v9 = sub_24162C0E8();
  uint64_t v49 = *(void *)(v9 - 8);
  uint64_t v50 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v48 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_24162CBF8();
  uint64_t v11 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v13 = (char *)v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_24162C128();
  uint64_t v14 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v16 = (char *)v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v44 = (id)sub_24162C178();
  sub_24119E1F8(0, (unint64_t *)&qword_26B012FC8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v17 = sub_24162BD98();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 72);
  unint64_t v20 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_24163A4F0;
  unint64_t v22 = v21 + v20;
  uint64_t v23 = *(void (**)(unint64_t, void, uint64_t))(v18 + 104);
  v23(v22, *MEMORY[0x263F45568], v17);
  v23(v22 + v19, *MEMORY[0x263F45560], v17);
  uint64_t v24 = v51;
  id v25 = v44;
  sub_2411B8B4C((uint64_t)v13);
  sub_24162CBE8();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v46);
  uint64_t v26 = v45;
  (*(void (**)(char *, void, uint64_t))(v49 + 104))(v48, *MEMORY[0x263F45688], v50);
  sub_24162C0F8();

  uint64_t v27 = v53;
  uint64_t v28 = v24 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42MenstrualCyclesBrowseTileGeneratorPipeline_domain;
  uint64_t v29 = v47;
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v24 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42MenstrualCyclesBrowseTileGeneratorPipeline_domain, v16, v47);
  uint64_t v30 = (uint64_t)v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v52, v26, v60);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v28, v29);
  uint64_t v31 = type metadata accessor for MenstrualCyclesBrowseTileGenerator(0);
  swift_allocObject();
  uint64_t v32 = sub_24119231C(v30, (uint64_t)v16);
  v62[3] = v31;
  v62[4] = sub_2411C817C();
  v62[0] = v32;
  sub_2411C8510();
  uint64_t v33 = v54;
  sub_24162FB98();
  sub_2411C1174();
  uint64_t v34 = v55;
  uint64_t v35 = sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v33, v34);
  *(void *)(v24 + 16) = v35;
  sub_24162EF48();
  uint64_t v36 = sub_24162EF98();
  os_log_type_t v37 = sub_2416322E8();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = (uint8_t *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    v62[0] = v39;
    *(_DWORD *)uint64_t v38 = 136446210;
    uint64_t v40 = sub_2416333E8();
    uint64_t v61 = sub_2411B6898(v40, v41, v62);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v36, v37, "[%{public}s] Initializing", v38, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v39, -1, -1);
    MEMORY[0x245621640](v38, -1, -1);
  }

  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v26, v60);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v27, v58);
  return v24;
}

void sub_24119E1F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_24119E25C@<X0>(id *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v81 = a5;
  uint64_t v79 = a4;
  uint64_t v83 = a3;
  uint64_t v85 = a2;
  v86 = a1;
  v88 = a6;
  sub_2411C8628(0);
  MEMORY[0x270FA5388](v6 - 8);
  v84 = (char *)v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24119EF0C(0, (unint64_t *)&unk_26B013110, MEMORY[0x263F079C8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v67 = (char *)v63 - v10;
  sub_24119EF0C(0, &qword_26B0130C8, MEMORY[0x263F07920], v8);
  MEMORY[0x270FA5388](v11 - 8);
  v66 = (char *)v63 - v12;
  uint64_t v13 = sub_24162B138();
  uint64_t v72 = *(void *)(v13 - 8);
  uint64_t v73 = v13;
  MEMORY[0x270FA5388](v13);
  v70 = (char *)v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_24162B718();
  uint64_t v69 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  v68 = (char *)v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_241632288();
  uint64_t v80 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  v76 = (char *)v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C36E4(0, &qword_26B010218, MEMORY[0x263F44B38], sub_2411C73BC, (void (*)(void))sub_2411C0230);
  uint64_t v77 = *(void *)(v17 - 8);
  uint64_t v78 = v17;
  MEMORY[0x270FA5388](v17);
  v74 = (char *)v63 - v18;
  uint64_t v75 = sub_24162AEE8();
  uint64_t v19 = *(void *)(v75 - 8);
  uint64_t v20 = *(void *)(v19 + 64);
  uint64_t v21 = MEMORY[0x270FA5388](v75);
  uint64_t v65 = (char *)v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)v63 - v22;
  sub_2411C73BC(0);
  uint64_t v87 = v24;
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24119EF0C(0, &qword_26B010578, (uint64_t (*)(uint64_t))sub_2411C73BC, MEMORY[0x263EFDDF8]);
  uint64_t v28 = v27;
  uint64_t v29 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)v63 - v30;
  sub_2411A48E0(0, &qword_26B0107A8, (uint64_t (*)(uint64_t))sub_2411C73BC, MEMORY[0x263EFDEA0]);
  uint64_t v33 = v32;
  uint64_t v34 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v36 = (char *)v63 - v35;
  if (*v86)
  {
    v86 = (id *)*v86;
    uint64_t v64 = v23;
    sub_241632988();
    os_log_type_t v37 = self;
    uint64_t v38 = (void *)sub_24162AE98();
    id v39 = objc_msgSend(v37, sel_predicateForSamplesWithinDateInterval_options_, v38, 0);

    uint64_t v40 = _HKStatisticsOptionBaselineRelativeQuantities();
    uint64_t v41 = v40 | 0x20;
    if ((v40 & 0xFFFFFFFFFFFFFFDFLL) == 0) {
      uint64_t v41 = 32;
    }
    v63[1] = v41;
    BOOL v42 = v68;
    sub_24162B498();
    uint64_t v43 = v66;
    sub_24162B9A8();
    uint64_t v44 = sub_24162BA08();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v43, 0, 1, v44);
    uint64_t v45 = sub_24162BA68();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v67, 1, 1, v45);
    uint64_t v46 = v70;
    sub_24162B118();
    uint64_t v47 = (uint64_t)v84;
    uint64_t v48 = v75;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v84, 1, 1, v75);
    uint64_t v89 = v79;
    uint64_t v90 = v81;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_241631E08();
    uint64_t v49 = v76;
    sub_241632298();

    swift_bridgeObjectRelease();
    sub_2411C68C0(v47, (uint64_t (*)(void))sub_2411C8628);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v46, v73);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v42, v71);
    uint64_t v50 = v65;
    uint64_t v51 = v64;
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v65, v64, v48);
    unint64_t v52 = (*(unsigned __int8 *)(v19 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    unint64_t v53 = (v20 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v54 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v19 + 32))(v54 + v52, v50, v48);
    uint64_t v55 = v86;
    *(void *)(v54 + v53) = v86;
    sub_2411C0230();
    uint64_t v56 = v55;
    uint64_t v57 = v74;
    uint64_t v58 = v82;
    sub_24162FCE8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v80 + 8))(v49, v58);
    sub_2411C2D4C();
    uint64_t v59 = v78;
    uint64_t v60 = sub_24162FCB8();

    (*(void (**)(char *, uint64_t))(v77 + 8))(v57, v59);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v51, v48);
  }
  else
  {
    uint64_t v62 = type metadata accessor for BaselineRelativeQuantitySample(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v26, 1, 1, v62);
    sub_24162FB98();
    sub_2411CE834();
    sub_24162FB88();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
    sub_241445078();
    uint64_t v60 = sub_24162FCB8();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v36, v33);
  }
  uint64_t *v88 = v60;
  return result;
}

void sub_24119ED18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24119ED7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24119EDE0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24119EE44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24119EEA8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24119EF0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

id sub_24119EF70(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v24 = a2;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_2411C0CEC();
  uint64_t v27 = *(void *)(v6 - 8);
  uint64_t v28 = v6;
  MEMORY[0x270FA5388](v6);
  unint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C3EA4();
  uint64_t v29 = v9;
  uint64_t v26 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v25 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin38SleepMeasurementsConfigurationProvider_configurationUpdates;
  uint64_t v22 = (uint64_t (*)(void, ValueMetadata *, void, void))MEMORY[0x263EFDD78];
  sub_24119F3D8(0, &qword_26B010550, MEMORY[0x263EFDD78]);
  swift_allocObject();
  uint64_t v12 = v2;
  uint64_t v13 = sub_24162FAE8();
  *(void *)&v3[v11] = v13;
  *(void *)&v12[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin38SleepMeasurementsConfigurationProvider_sleepStore] = a1;
  uint64_t v14 = &v12[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin38SleepMeasurementsConfigurationProvider_logger];
  uint64_t v23 = sub_24162EFA8();
  uint64_t v15 = *(void *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v14, a2, v23);
  uint64_t v32 = v13;
  *(void *)(swift_allocObject() + 16) = a1;
  uint64_t v16 = (uint64_t (*)(void, ValueMetadata *, void, void))MEMORY[0x263EFDE20];
  sub_24119F3D8(0, &qword_26B0105E0, MEMORY[0x263EFDE20]);
  sub_24119F43C((unint64_t *)&unk_26B0105D0, &qword_26B0105E0, v16);
  id v17 = a1;
  swift_retain();
  sub_24162FBE8();
  sub_24119F43C((unint64_t *)&unk_26B010540, &qword_26B010550, v22);
  sub_2411C0DA0();
  uint64_t v18 = v25;
  uint64_t v19 = v28;
  sub_24162FD98();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v19);
  swift_release();
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v12[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin38SleepMeasurementsConfigurationProvider_configurationPublisher], v18, v29);

  v31.receiver = v12;
  v31.super_class = ObjectType;
  id v20 = objc_msgSendSuper2(&v31, sel_init);
  objc_msgSend(v17, sel_addObserver_, v20);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v24, v23);
  return v20;
}

uint64_t sub_24119F334@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  *(void *)(swift_allocObject() + 16) = a1;
  sub_24119F3D8(0, &qword_26B0105E0, MEMORY[0x263EFDE20]);
  swift_allocObject();
  id v4 = a1;
  uint64_t result = sub_24162FBC8();
  *a2 = result;
  return result;
}

void sub_24119F3D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, ValueMetadata *, void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, &type metadata for SleepMeasurementsConfiguration, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_24119F43C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void, ValueMetadata *, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24119F3D8(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24119F480(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = *v2;
  sub_2411C1BC4();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  uint64_t v29 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v27 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24162C1C8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C0F2C();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v18 = (v10 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v19 + v17, v11, v8);
  *(void *)(v19 + v18) = v26;
  sub_2411C3ABC(0, (unint64_t *)&unk_26B011078, sub_241514F10, (void (*)(uint64_t))sub_2411C8510, (void (*)(void))sub_241514F30);
  sub_2411C3B4C();
  swift_retain();
  sub_24162FBE8();
  sub_2411A0240((unint64_t *)&unk_26B011270, (void (*)(uint64_t))sub_2411C0F2C);
  uint64_t v20 = sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v21 = sub_24162ED98();
  uint64_t v30 = v20;
  uint64_t v31 = v21;
  sub_2411AB360(0, (unint64_t *)&qword_26B012EA0, (void (*)(uint64_t))sub_2411C8510);
  sub_2411C1A30();
  uint64_t v22 = v27;
  sub_24162FD28();
  swift_release();
  sub_2411A0240(&qword_26B012E78, (void (*)(uint64_t))sub_2411C1BC4);
  uint64_t v23 = v28;
  sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v22, v23);
  sub_24162EDA8();
  return swift_release();
}

uint64_t sub_24119F894()
{
  sub_2411C2360();
  uint64_t v46 = v1;
  uint64_t v49 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v45 = (char *)v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C332C();
  uint64_t v48 = v3;
  uint64_t v51 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v43 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C3ABC(0, &qword_26B011100, (void (*)(uint64_t))sub_2411C2360, (void (*)(uint64_t))sub_2411C060C, (void (*)(void))sub_2411C23F4);
  uint64_t v47 = v5;
  uint64_t v50 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  BOOL v42 = (char *)v35 - v6;
  sub_2411C3DFC();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v52 = v7;
  uint64_t v53 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v44 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411AB064(0, &qword_26B010660, MEMORY[0x263EFDE48]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v35 - v13;
  sub_2411C43C0();
  uint64_t v40 = v15;
  MEMORY[0x270FA5388](v15);
  v35[1] = (char *)v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411A0288(0, &qword_26B012F40, (uint64_t (*)(uint64_t))type metadata accessor for HKBiologicalSex, MEMORY[0x263EFDE48]);
  uint64_t v39 = v17;
  MEMORY[0x270FA5388](v17);
  v35[0] = (char *)v35 - v18;
  sub_2411A02EC(0, (unint64_t *)&unk_26B012F20, (uint64_t)&type metadata for UserCharacteristics.Age, MEMORY[0x263EFDE48]);
  uint64_t v38 = v19;
  MEMORY[0x270FA5388](v19);
  sub_2411C4A10();
  uint64_t v37 = v20;
  uint64_t v41 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v36 = (char *)v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (void *)(v0 + qword_26B010AB8);
  sub_2411B6854((void *)(v0 + qword_26B010AB8), *(void *)(v0 + qword_26B010AB8 + 24));
  swift_beginAccess();
  sub_2411A02EC(0, (unint64_t *)&qword_26B012F48, (uint64_t)&type metadata for UserCharacteristics.Age, MEMORY[0x263EFDE58]);
  sub_24162FC18();
  swift_endAccess();
  sub_2411B6854(v22, v22[3]);
  swift_beginAccess();
  sub_2411A0288(0, (unint64_t *)&qword_26B012F50, (uint64_t (*)(uint64_t))type metadata accessor for HKBiologicalSex, MEMORY[0x263EFDE58]);
  sub_24162FC18();
  swift_endAccess();
  sub_2411B6854((void *)(v0 + qword_26B0108A0), *(void *)(v0 + qword_26B0108A0 + 24));
  swift_beginAccess();
  sub_2411AB064(0, &qword_26B010668, MEMORY[0x263EFDE58]);
  sub_24162FC18();
  swift_endAccess();
  sub_2411C0B80();
  sub_24162FCC8();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v54 = *(void *)(v0 + qword_26B010AD8);
  sub_2411C11FC();
  sub_2411C0BF4();
  sub_2411C0AF8();
  sub_2411A0240(&qword_26B010098, (void (*)(uint64_t))sub_2411C43C0);
  sub_2411A0240(&qword_26B011250, (void (*)(uint64_t))sub_2411C11FC);
  swift_retain();
  uint64_t v23 = v36;
  sub_24162F8E8();
  sub_24162C198();
  uint64_t v24 = v45;
  uint64_t v25 = v37;
  sub_24162F8C8();
  sub_2411C23F4();
  uint64_t v26 = v43;
  uint64_t v27 = v46;
  sub_24162FCE8();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v24, v27);
  sub_2411C060C();
  uint64_t v28 = v42;
  uint64_t v29 = v48;
  sub_24162F948();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v26, v29);
  sub_2411C3290();
  sub_2411A0240((unint64_t *)&unk_26B0112F0, (void (*)(uint64_t))sub_2411C060C);
  uint64_t v30 = v44;
  uint64_t v31 = v47;
  sub_24162FDC8();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v28, v31);
  sub_2411A0240((unint64_t *)&unk_26B011048, (void (*)(uint64_t))sub_2411C3DFC);
  uint64_t v32 = v52;
  uint64_t v33 = sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v30, v32);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v23, v25);
  return v33;
}

uint64_t sub_2411A01AC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2411B9D00(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2411A01FC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2411B9D00(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2411A0240(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2411A0288(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411A02EC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_2411A0388(void *a1)
{
  uint64_t v2 = sub_24162EFA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162EF48();
  uint64_t v6 = sub_24162EF98();
  os_log_type_t v7 = sub_2416322B8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v14 = a1;
    unint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v16 = v9;
    *(_DWORD *)unint64_t v8 = 136315138;
    uint64_t v13 = v2;
    uint64_t v10 = sub_2416333E8();
    uint64_t v15 = sub_2411B6898(v10, v11, &v16);
    sub_241632C28();
    a1 = v14;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v6, v7, "[%s] pregnancyModelDidUpdate", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v9, -1, -1);
    MEMORY[0x245621640](v8, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v13);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  uint64_t v16 = (uint64_t)a1;
  id v12 = a1;
  sub_24162FB08();
}

void sub_2411A05D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24162EFA8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162EF48();
  os_log_type_t v7 = sub_24162EF98();
  os_log_type_t v8 = sub_2416322E8();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v29 = v2;
  if (v9)
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v28 = v3;
    unint64_t v11 = (uint8_t *)v10;
    uint64_t v12 = swift_slowAlloc();
    uint64_t aBlock = v12;
    *(_DWORD *)unint64_t v11 = 136446210;
    uint64_t v13 = sub_2416333E8();
    uint64_t v30 = sub_2411B6898(v13, v14, &aBlock);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v7, v8, "[%{public}s] Fetching latest day summary", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v12, -1, -1);
    MEMORY[0x245621640](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v28);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  if (v1[4])
  {
    objc_msgSend((id)v1[2], sel_stopQuery_);
    uint64_t v15 = (void *)v1[4];
    v1[4] = 0;
  }
  uint64_t v16 = *MEMORY[0x263F094E8];
  uint64_t v17 = *(void *)(MEMORY[0x263F094E8] + 8);
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = v29;
  *(void *)(v18 + 16) = v1;
  *(void *)(v18 + 24) = v19;
  id v20 = objc_allocWithZone(MEMORY[0x263F45150]);
  uint64_t v35 = sub_2411C7C30;
  uint64_t v36 = v18;
  uint64_t aBlock = MEMORY[0x263EF8330];
  unint64_t v32 = 1107296256;
  uint64_t v33 = sub_2411956D0;
  uint64_t v34 = &unk_26F5771A0;
  uint64_t v21 = _Block_copy(&aBlock);
  swift_retain();
  id v22 = objc_msgSend(v20, sel_initWithDayIndexRange_ascending_limit_resultsHandler_, v16, v17, 0, 1, v21);
  _Block_release(v21);
  swift_release();
  uint64_t aBlock = 0;
  unint64_t v32 = 0xE000000000000000;
  id v23 = v22;
  sub_2416333E8();
  sub_241631E08();
  swift_bridgeObjectRelease();
  sub_241631E08();
  uint64_t v30 = (uint64_t)v1;
  sub_241632F68();
  uint64_t v24 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v23, sel_setDebugIdentifier_, v24);

  uint64_t v25 = (void *)v1[4];
  v1[4] = v23;
  id v26 = v23;

  objc_msgSend((id)v1[2], sel_executeQuery_, v26);
}

uint64_t sub_2411A09BC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v38 = sub_24162C1C8();
  uint64_t v4 = *(void *)(v38 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v38);
  uint64_t v44 = sub_241632228();
  uint64_t v42 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v39 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C1C44();
  uint64_t v45 = v7;
  uint64_t v43 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v40 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C0A68(0, (unint64_t *)&unk_26B011290, (void (*)(uint64_t))sub_2411C1C44, (void (*)(void))sub_2411C1D38);
  uint64_t v46 = *(void *)(v9 - 8);
  uint64_t v47 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v41 = (char *)&v36 - v10;
  uint64_t v11 = sub_24162B718();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = self;
  sub_241194F58((uint64_t)v14);
  uint64_t v16 = (void *)sub_24162B668();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  id v17 = objc_msgSend(v15, sel_predicateForSamplesWithStartDate_endDate_options_, v16, 0, 0);

  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A678]), sel_initWithSampleType_predicate_, *(void *)(v2+ OBJC_IVAR____TtC24MenstrualCyclesAppPlugin29AddPregnancyFeedItemGenerator_pregnancyTestResultType), v17);
  if (sub_24162C158())
  {
    sub_24162C148();
    id v37 = v17;
    sub_2411B6854(v49, v49[3]);
    id v20 = (void *)sub_24162C038();
    sub_2411BFC90();
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_24163B390;
    *(void *)(v21 + 32) = v18;
    uint64_t v48 = v21;
    sub_241631F48();
    id v22 = v18;
    id v23 = v39;
    sub_241632258();

    swift_bridgeObjectRelease();
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v49);
    uint64_t v24 = v38;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v38);
    unint64_t v25 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v2;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v26 + v25, (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v24);
    *(void *)(v26 + ((v5 + v25 + 7) & 0xFFFFFFFFFFFFFFF8)) = v22;
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = sub_2411C7430;
    *(void *)(v27 + 24) = v26;
    id v28 = v22;
    swift_retain();
    sub_24162FA48();
    sub_2411C15D8();
    sub_2411A151C(&qword_26B0106F0, 255, MEMORY[0x263F44AB8]);
    sub_2411A151C(&qword_26B011200, 255, (void (*)(uint64_t))sub_2411C15D8);
    uint64_t v29 = v40;
    uint64_t v30 = v44;
    sub_24162FD68();
    swift_release();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v23, v30);
    uint64_t v31 = sub_2411C1D38();
    unint64_t v32 = v41;
    uint64_t v33 = v45;
    sub_24162FC98();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v29, v33);
    v49[0] = v33;
    v49[1] = v31;
    swift_getOpaqueTypeConformance2();
    uint64_t v34 = v47;
    uint64_t v19 = sub_24162FCB8();

    (*(void (**)(char *, uint64_t))(v46 + 8))(v32, v34);
  }
  else
  {
    uint64_t v19 = sub_24119D488(a1, v18);
  }
  return v19;
}

uint64_t sub_2411A1048()
{
  uint64_t v1 = v0;
  sub_2411C4CE8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v31 = v2;
  uint64_t v32 = v3;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C24A4();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v33 = v6;
  uint64_t v34 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C3434();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v35 = v10;
  uint64_t v36 = v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v30 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)(v0
                 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin29AddPregnancyFeedItemGenerator_cycleTrackingFeatureStatusManager);
  uint64_t v14 = *(void *)(v0
                  + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin29AddPregnancyFeedItemGenerator_cycleTrackingFeatureStatusManager
                  + 24);
  uint64_t v15 = v13[4];
  sub_2411B6854(v13, v14);
  uint64_t v16 = v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin29AddPregnancyFeedItemGenerator_context;
  uint64_t v40 = sub_2411B25DC(v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin29AddPregnancyFeedItemGenerator_context, v14, v15);
  uint64_t v39 = *(void *)(v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin29AddPregnancyFeedItemGenerator_pregnancyModelSubject);
  swift_retain();
  uint64_t v38 = sub_2411A09BC(v16);
  uint64_t v17 = *(void *)(v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin29AddPregnancyFeedItemGenerator_contentStateManager);
  uint64_t v18 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  uint64_t v20 = sub_2411B01F0(v18, v19, v17);
  swift_bridgeObjectRelease();
  uint64_t v37 = v20;
  uint64_t v21 = (void (*)(uint64_t))MEMORY[0x263F44998];
  sub_2411A1564(0, (unint64_t *)&qword_26B010480, MEMORY[0x263F44998]);
  uint64_t v29 = v22;
  sub_2411C1294();
  sub_2411C15D8();
  sub_2411A1564(0, &qword_26B010410, sub_2411C85F4);
  sub_2411AE740(&qword_26B010478, (unint64_t *)&qword_26B010480, v21);
  sub_2411A151C(&qword_26B011240, 255, (void (*)(uint64_t))sub_2411C1294);
  sub_2411A151C(&qword_26B011200, 255, (void (*)(uint64_t))sub_2411C15D8);
  sub_2411AE740((unint64_t *)&qword_26B010400, &qword_26B010410, sub_2411C85F4);
  sub_24162F8E8();
  sub_24162C198();
  uint64_t v23 = v31;
  sub_24162F8C8();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v23);
  type metadata accessor for AddPregnancyFeedItemGenerator.Change(0);
  sub_2411A151C(&qword_26B011158, 255, (void (*)(uint64_t))sub_2411C24A4);
  uint64_t v24 = v30;
  uint64_t v25 = v33;
  sub_24162FCE8();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v25);
  sub_2411A151C((unint64_t *)&unk_26B0110C0, 255, (void (*)(uint64_t))sub_2411C3434);
  uint64_t v26 = v35;
  uint64_t v27 = sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v24, v26);
  return v27;
}

uint64_t sub_2411A151C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2411A1564(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24162FA68();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2411A15C8(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_24162EFA8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v42 - v13;
  if (a1)
  {
    uint64_t v15 = a3 + 16;
    id v16 = a1;
    sub_24162EF48();
    id v17 = v16;
    uint64_t v18 = sub_24162EF98();
    os_log_type_t v19 = sub_2416322E8();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v44 = v15;
      uint64_t v22 = v21;
      uint64_t v47 = v21;
      *(_DWORD *)uint64_t v20 = 136315394;
      uint64_t v43 = v9;
      uint64_t v46 = a4;
      swift_getMetatypeMetadata();
      uint64_t v45 = v8;
      uint64_t v23 = sub_241631D78();
      uint64_t v46 = sub_2411B6898(v23, v24, &v47);
      sub_241632C28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2080;
      id v25 = objc_msgSend(v17, sel_pregnancyModeSetupCompletionSet);
      sub_2411B9D00(0, (unint64_t *)&unk_26B011350);
      sub_2411A1B88();
      uint64_t v26 = sub_2416320F8();

      uint64_t v46 = v26;
      sub_2411C0598();
      uint64_t v27 = sub_241631D78();
      uint64_t v46 = sub_2411B6898(v27, v28, &v47);
      sub_241632C28();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v18, v19, "[%s] Received initial model %s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245621640](v22, -1, -1);
      MEMORY[0x245621640](v20, -1, -1);

      (*(void (**)(char *, uint64_t))(v43 + 8))(v12, v45);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    }
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      swift_retain();
      swift_release();
      id v40 = objc_msgSend(v17, sel_pregnancyModeSetupCompletionSet);
      sub_2411B9D00(0, (unint64_t *)&unk_26B011350);
      sub_2411A1B88();
      uint64_t v41 = sub_2416320F8();

      uint64_t v47 = v41;
      sub_24162FB08();
      swift_bridgeObjectRelease();

      swift_release();
    }
    else
    {
    }
  }
  else
  {
    sub_24162EF48();
    id v29 = a2;
    id v30 = a2;
    uint64_t v31 = sub_24162EF98();
    os_log_type_t v32 = sub_2416322C8();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = v9;
      uint64_t v35 = swift_slowAlloc();
      uint64_t v47 = v35;
      *(_DWORD *)uint64_t v33 = 136315394;
      uint64_t v45 = v8;
      uint64_t v46 = a4;
      swift_getMetatypeMetadata();
      uint64_t v36 = sub_241631D78();
      uint64_t v46 = sub_2411B6898(v36, v37, &v47);
      sub_241632C28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2080;
      uint64_t v46 = (uint64_t)a2;
      sub_24119ED7C(0, (unint64_t *)&qword_26B010860, (uint64_t (*)(uint64_t))sub_2411CE834, MEMORY[0x263F8D8F0]);
      uint64_t v38 = sub_241632BF8();
      uint64_t v46 = sub_2411B6898(v38, v39, &v47);
      sub_241632C28();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24118E000, v31, v32, "[%s] Received error when fetching experience model: %s", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245621640](v35, -1, -1);
      MEMORY[0x245621640](v33, -1, -1);

      (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v45);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
  }
}

unint64_t sub_2411A1B88()
{
  unint64_t result = qword_26B011360;
  if (!qword_26B011360)
  {
    sub_2411B9D00(255, (unint64_t *)&unk_26B011350);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B011360);
  }
  return result;
}

uint64_t sub_2411A1BF0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_2411AC344;
  *(void *)(v8 + 24) = v7;
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = sub_2411AC308;
  v9[3] = v8;
  v9[4] = a3;
  v9[5] = ObjectType;
  v13[4] = sub_2411ABFDC;
  v13[5] = v9;
  v13[0] = MEMORY[0x263EF8330];
  v13[1] = 1107296256;
  void v13[2] = sub_2411ABF50;
  v13[3] = &unk_26F573488;
  uint64_t v10 = _Block_copy(v13);
  swift_retain();
  swift_retain();
  id v11 = a3;
  swift_release();
  objc_msgSend(v11, sel_currentSleepEventRecordWithCompletion_, v10);
  _Block_release(v10);
  return swift_release();
}

uint64_t sub_2411A1D5C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for MenstrualCyclesHealthPluginDelegate();
  uint64_t v2 = swift_allocObject();
  uint64_t result = sub_2411A1DC4("[%{public}s] Plugin delegate is initialized");
  *a1 = v2;
  return result;
}

uint64_t type metadata accessor for MenstrualCyclesHealthPluginDelegate()
{
  return self;
}

uint64_t sub_2411A1DC4(const char *a1)
{
  uint64_t v3 = v1;
  uint64_t v4 = sub_24162EFA8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162EF48();
  uint64_t v8 = sub_24162EF98();
  os_log_type_t v9 = sub_2416322E8();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v17 = v4;
    uint64_t v10 = swift_slowAlloc();
    id v16 = a1;
    id v11 = (uint8_t *)v10;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v19 = v12;
    *(_DWORD *)id v11 = 136446210;
    uint64_t v13 = sub_2416333E8();
    uint64_t v18 = sub_2411B6898(v13, v14, &v19);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v8, v9, v16, v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v12, -1, -1);
    MEMORY[0x245621640](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v17);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v3;
}

void *sub_2411A1FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v117 = a1;
  uint64_t v118 = a4;
  uint64_t v80 = *a6;
  uint64_t v10 = sub_24162EFA8();
  uint64_t v108 = *(void *)(v10 - 8);
  uint64_t v109 = v10;
  MEMORY[0x270FA5388](v10);
  v111 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_24162BA08();
  uint64_t v107 = *(void *)(v110 - 8);
  MEMORY[0x270FA5388](v110);
  uint64_t v104 = v12;
  v105 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_24162C1C8();
  uint64_t v114 = *(void *)(v116 - 8);
  MEMORY[0x270FA5388](v116);
  uint64_t v99 = v13;
  v102 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C35F4();
  uint64_t v93 = v14;
  uint64_t v91 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v89 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C42BC();
  uint64_t v92 = v16;
  uint64_t v90 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  v88 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C4240();
  uint64_t v103 = v18;
  uint64_t v101 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  v98 = (char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C40A8(0, &qword_26B011010, (void (*)(uint64_t))sub_2411C35F4, (void (*)(void))sub_2413595E8);
  uint64_t v100 = v20;
  uint64_t v97 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  v95 = (char *)&v80 - v21;
  sub_2411AAED8(0, &qword_26B010660, MEMORY[0x263EFDE48]);
  uint64_t v82 = v22;
  uint64_t v81 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  unint64_t v24 = (char *)&v80 - v23;
  sub_2411C43C0();
  uint64_t v85 = v25;
  MEMORY[0x270FA5388](v25);
  uint64_t v83 = (char *)&v80 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C5104();
  uint64_t v86 = v27;
  uint64_t v84 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  id v29 = (char *)&v80 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411B14F4(0, (unint64_t *)&unk_26B011148, (uint64_t (*)(uint64_t))sub_2411C5104, sub_2413595B4, MEMORY[0x263EFDBB0]);
  uint64_t v113 = v30;
  uint64_t v106 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  v112 = (char *)&v80 - v31;
  os_log_type_t v32 = a6;
  uint64_t v33 = (char *)a6 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin28SummaryTileGeneratorPipeline_domain;
  if (qword_26B00ED48 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_24162C128();
  uint64_t v35 = sub_2411BF848(v34, (uint64_t)qword_26B018008);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v33, v35, v34);
  uint64_t v36 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin28SummaryTileGeneratorPipeline_pregnancyModelSubject;
  uint64_t v119 = 0;
  sub_2411C1294();
  swift_allocObject();
  *(void *)((char *)v32 + v36) = sub_24162FB58();
  *(void *)((char *)v32
            + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin28SummaryTileGeneratorPipeline_daySummaryChangeDetector) = a2;
  *(void *)((char *)v32
            + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin28SummaryTileGeneratorPipeline_onboardingChangeDetector) = a3;
  *(void *)((char *)v32
            + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin28SummaryTileGeneratorPipeline_pregnancyModelProvider) = a5;
  v115 = v32;
  uint64_t v120 = *(void *)(a2 + 40);
  swift_beginAccess();
  sub_2411AAED8(0, &qword_26B010668, MEMORY[0x263EFDE58]);
  uint64_t v94 = a2;
  swift_retain();
  uint64_t v96 = a3;
  swift_retain();
  id v87 = a5;
  swift_retain();
  sub_24162FC18();
  swift_endAccess();
  sub_2411C0B80();
  uint64_t v37 = v82;
  sub_24162FCC8();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v24, v37);
  uint64_t v119 = *(void *)((char *)v32 + v36);
  sub_2411C1314(0, (unint64_t *)&qword_26B00ED68, (uint64_t)&type metadata for DaySummaryChangeDetector.Result, MEMORY[0x263EFDD90]);
  sub_2411C13E0();
  sub_2411B680C(&qword_26B010098, (void (*)(uint64_t))sub_2411C43C0);
  sub_2411B680C(&qword_26B011240, (void (*)(uint64_t))sub_2411C1294);
  swift_retain();
  sub_24162F8B8();
  sub_24162C198();
  uint64_t v38 = v86;
  sub_24162F898();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v29, v38);
  sub_2411B6C0C(0, &qword_26B011310, (uint64_t (*)(uint64_t))sub_2411C012C, MEMORY[0x263F8D8F0]);
  sub_2411C2664();
  unint64_t v39 = v89;
  sub_24162FCE8();
  sub_2411C012C();
  sub_2413595E8();
  id v40 = v88;
  uint64_t v41 = v93;
  sub_24162FCC8();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v39, v41);
  sub_2411C0084();
  uint64_t v42 = v98;
  uint64_t v43 = v92;
  sub_24162F8F8();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v40, v43);
  uint64_t v44 = v114;
  uint64_t v45 = v102;
  uint64_t v46 = v116;
  (*(void (**)(char *, uint64_t, uint64_t))(v114 + 16))(v102, v117, v116);
  uint64_t v47 = v107;
  uint64_t v48 = v105;
  uint64_t v49 = v110;
  (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v105, v118, v110);
  unint64_t v50 = (*(unsigned __int8 *)(v44 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  unint64_t v51 = (v99 + *(unsigned __int8 *)(v47 + 80) + v50) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  uint64_t v52 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v44 + 32))(v52 + v50, v45, v46);
  uint64_t v53 = v47;
  uint64_t v54 = *(void (**)(unint64_t, char *, uint64_t))(v47 + 32);
  uint64_t v55 = v49;
  v54(v52 + v51, v48, v49);
  uint64_t v56 = swift_allocObject();
  *(void *)(v56 + 16) = sub_24135976C;
  *(void *)(v56 + 24) = v52;
  sub_2411C8460(0, (unint64_t *)&qword_26B012630);
  uint64_t v57 = v95;
  uint64_t v58 = v103;
  sub_24162F8F8();
  swift_release();
  uint64_t v59 = v42;
  uint64_t v60 = v87;
  (*(void (**)(char *, uint64_t))(v101 + 8))(v59, v58);
  sub_2411C4338();
  uint64_t v61 = v100;
  uint64_t v62 = sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v57, v61);
  v105 = (char *)v62;
  uint64_t v119 = v62;
  sub_2411C19B4();
  sub_2411B680C((unint64_t *)&qword_26B012E98, (void (*)(uint64_t))sub_2411C19B4);
  uint64_t v63 = v117;
  uint64_t v64 = sub_24162FC88();
  uint64_t v65 = v115;
  *(void *)((char *)v115 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin28SummaryTileGeneratorPipeline_publisher) = v64;
  swift_retain();
  sub_24162C158();
  objc_msgSend(v60, sel_registerObserver_isUserInitiated_, v65, sub_24162C548() & 1);
  swift_release();
  v66 = v111;
  sub_24162EF48();
  uint64_t v67 = sub_24162EF98();
  os_log_type_t v68 = sub_2416322E8();
  BOOL v69 = os_log_type_enabled(v67, v68);
  uint64_t v70 = v63;
  uint64_t v71 = v118;
  uint64_t v72 = v53;
  uint64_t v73 = v116;
  uint64_t v74 = v114;
  if (v69)
  {
    uint64_t v75 = (uint8_t *)swift_slowAlloc();
    uint64_t v76 = swift_slowAlloc();
    uint64_t v119 = v76;
    *(_DWORD *)uint64_t v75 = 136446210;
    nullsub_1(v80);
    uint64_t v77 = sub_2416333E8();
    uint64_t v120 = sub_2411B6898(v77, v78, &v119);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v67, v68, "[%{public}s] Initializing", v75, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v76, -1, -1);
    MEMORY[0x245621640](v75, -1, -1);

    swift_release();
    swift_release();

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v118, v110);
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v117, v116);
    (*(void (**)(char *, uint64_t))(v108 + 8))(v111, v109);
  }
  else
  {

    swift_release();
    swift_release();

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v55);
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v70, v73);
    (*(void (**)(char *, uint64_t))(v108 + 8))(v66, v109);
  }
  (*(void (**)(char *, uint64_t))(v106 + 8))(v112, v113);
  return v115;
}

uint64_t sub_2411A2F5C(uint64_t a1)
{
  uint64_t v54 = *v1;
  uint64_t v3 = sub_24162C128();
  uint64_t v56 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v55 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24162C1C8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  os_log_type_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v49 - v10;
  uint64_t v12 = sub_24162EFA8();
  uint64_t v60 = *(void *)(v12 - 8);
  uint64_t v61 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162EF48();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v15(v11, a1, v5);
  uint64_t v16 = sub_24162EF98();
  os_log_type_t v17 = sub_2416322E8();
  uint64_t v59 = v16;
  int v53 = v17;
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v57 = v6 + 16;
  uint64_t v58 = v9;
  if (v18)
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v52 = v3;
    uint64_t v20 = v19;
    uint64_t v50 = swift_slowAlloc();
    v63[0] = v50;
    *(_DWORD *)uint64_t v20 = 136446466;
    uint64_t v49 = v20 + 4;
    uint64_t v21 = sub_2416333E8();
    uint64_t v62 = sub_2411B6898(v21, v22, v63);
    uint64_t v54 = a1;
    sub_241632C28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    v15(v9, (uint64_t)v11, v5);
    uint64_t v23 = sub_241631D48();
    uint64_t v62 = sub_2411B6898(v23, v24, v63);
    a1 = v54;
    sub_241632C28();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    uint64_t v25 = v59;
    _os_log_impl(&dword_24118E000, v59, (os_log_type_t)v53, "[%{public}s] Creating sharable pipelines for context: %s", (uint8_t *)v20, 0x16u);
    uint64_t v26 = v50;
    swift_arrayDestroy();
    MEMORY[0x245621640](v26, -1, -1);
    uint64_t v27 = v20;
    uint64_t v3 = v52;
    MEMORY[0x245621640](v27, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  (*(void (**)(char *, uint64_t))(v60 + 8))(v14, v61);
  uint64_t v28 = (void *)sub_24162C178();
  id v29 = (void *)sub_24162BDD8();
  char v30 = sub_24162BDC8();

  if ((v30 & 1) == 0) {
    return MEMORY[0x263F8EE78];
  }
  sub_24162C148();
  sub_2411B6854(v63, v64);
  unint64_t v51 = (void (*)(uint64_t, uint64_t, uint64_t))v15;
  uint64_t v31 = (void *)sub_24162C178();
  os_log_type_t v32 = v55;
  sub_2411B8FB8(v31);

  uint64_t v33 = (void *)sub_24162C068();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v32, v3);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v63);
  sub_24162C148();
  sub_2411B6854(v63, v64);
  uint64_t v34 = (void *)sub_24162C038();
  id v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F451A0]), sel_initWithHealthStore_queue_, v34, v33);

  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v63);
  uint64_t v36 = (uint64_t)v58;
  v15(v58, a1, v5);
  id v37 = objc_allocWithZone((Class)type metadata accessor for MenstrualCyclesAnalysisChangeDetector());
  id v38 = v33;
  id v39 = sub_2411AB938(v38, v36);

  type metadata accessor for MenstrualCyclesOnboardingChangeDetector();
  swift_allocObject();
  id v40 = v38;
  id v41 = v35;
  uint64_t v42 = v5;
  uint64_t v43 = sub_2411B838C(v41, v40);

  sub_2411B6D38(0, &qword_26B012FD8, (unint64_t *)&unk_26B012620);
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_241637EE0;
  v51(v36, a1, v42);
  uint64_t v45 = type metadata accessor for SharedProjectionHighlightModelGeneratorPipeline();
  swift_allocObject();
  uint64_t v46 = (char *)v39;
  swift_retain();
  uint64_t v47 = sub_2411A6390(v36, v46, (uint64_t)v43);
  *(void *)(v44 + 56) = v45;
  *(void *)(v44 + 64) = sub_2411B680C(&qword_26B012DF8, (void (*)(uint64_t))type metadata accessor for SharedProjectionHighlightModelGeneratorPipeline);
  *(void *)(v44 + 32) = v47;

  swift_release();
  return v44;
}

uint64_t sub_2411A35EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t *a6)
{
  id v55 = a5;
  uint64_t v49 = a2;
  uint64_t v10 = *a6;
  uint64_t v11 = sub_24162C1C8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  int v53 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24162EFA8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v54 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v46 - v18;
  v60[3] = type metadata accessor for MenstrualCyclesOnboardingChangeDetector();
  v60[4] = &off_26F5757A8;
  v60[0] = a3;
  v59[3] = type metadata accessor for UserCharacteristicsChangeDetector();
  v59[4] = &off_26F575790;
  v59[0] = a4;
  swift_retain();
  sub_24162EF48();
  uint64_t v20 = sub_24162EF98();
  os_log_type_t v21 = sub_2416322E8();
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v51 = v14;
  uint64_t v52 = a1;
  uint64_t v50 = v15;
  uint64_t v47 = v10;
  if (v22)
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v46 = v12;
    unint64_t v24 = (uint8_t *)v23;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v57 = v25;
    *(_DWORD *)unint64_t v24 = 136446210;
    nullsub_1(v10);
    uint64_t v26 = sub_2416333E8();
    uint64_t v56 = sub_2411B6898(v26, v27, &v57);
    uint64_t v15 = v50;
    uint64_t v14 = v51;
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v20, v21, "[%{public}s] Allocated", v24, 0xCu);
    swift_arrayDestroy();
    uint64_t v28 = v25;
    a1 = v52;
    MEMORY[0x245621640](v28, -1, -1);
    id v29 = v24;
    uint64_t v12 = v46;
    MEMORY[0x245621640](v29, -1, -1);
  }

  uint64_t v48 = *(void (**)(char *, uint64_t))(v15 + 8);
  v48(v19, v14);
  id v30 = v55;
  sub_2411A3DF4((uint64_t)v60, (uint64_t)a6 + qword_26B0108A0);
  sub_2411A3DF4((uint64_t)v59, (uint64_t)a6 + qword_26B010AB8);
  *(uint64_t *)((char *)a6 + qword_26B010AE0) = (uint64_t)v30;
  id v31 = objc_msgSend((id)swift_unknownObjectRetain(), sel_getCurrentPregnancyModel);
  os_log_type_t v32 = v31;
  if (v31)
  {
    id v33 = objc_msgSend(v31, sel_state);
  }
  else
  {
    id v33 = 0;
  }
  uint64_t v57 = (uint64_t)v33;
  BOOL v58 = v32 == 0;
  sub_2411C11FC();
  swift_allocObject();
  *(uint64_t *)((char *)a6 + qword_26B010AD8) = sub_24162FB58();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v53, a1, v11);
  uint64_t v34 = sub_24162ED88();
  swift_retain();
  sub_24162C158();
  objc_msgSend(v30, sel_registerObserver_isUserInitiated_, v34, sub_24162C548() & 1);
  if (sub_24162C158())
  {
    uint64_t v35 = sub_24119F894();
    sub_24119F480(a1, v35);
    swift_release();
  }
  uint64_t v36 = v54;
  sub_24162EF48();
  id v37 = sub_24162EF98();
  os_log_type_t v38 = sub_2416322E8();
  if (os_log_type_enabled(v37, v38))
  {
    int v53 = (char *)v11;
    id v39 = (uint8_t *)swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    uint64_t v57 = v40;
    *(_DWORD *)id v39 = 136446210;
    nullsub_1(v47);
    uint64_t v41 = sub_2416333E8();
    uint64_t v56 = sub_2411B6898(v41, v42, &v57);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v37, v38, "[%{public}s] Initializing", v39, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v40, -1, -1);
    MEMORY[0x245621640](v39, -1, -1);

    swift_release();
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v59);
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v60);
    (*(void (**)(uint64_t, char *))(v12 + 8))(v52, v53);
    uint64_t v43 = v51;
    uint64_t v44 = v36;
  }
  else
  {

    swift_release();
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v59);
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v60);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
    uint64_t v44 = v36;
    uint64_t v43 = v14;
  }
  v48(v44, v43);
  return v34;
}

uint64_t sub_2411A3C34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_24162EF48();
  uint64_t v11 = (int *)type metadata accessor for OvulationConfirmationHelpTileGenerator(0);
  uint64_t v12 = a6 + v11[5];
  uint64_t v13 = sub_24162C1C8();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, a1, v13);
  sub_2411A3DF4(a2, a6 + v11[6]);
  sub_2411A3DF4(a3, a6 + v11[7]);
  *(void *)(a6 + v11[8]) = a4;
  id v15 = a4;
  sub_24162C148();
  sub_2411B6854(v20, v20[3]);
  sub_24162C038();
  _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  sub_24162C4F8();
  swift_allocObject();
  uint64_t v16 = sub_24162C4C8();

  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0(a3);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0(a2);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v13);
  uint64_t result = _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v20);
  *(void *)(a6 + v11[9]) = v16;
  *(void *)(a6 + v11[10]) = a5;
  return result;
}

uint64_t sub_2411A3DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2411A3E58(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_241632228();
  uint64_t v33 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  os_log_type_t v32 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C1D70();
  uint64_t v35 = v10;
  uint64_t v37 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v39 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C2024();
  uint64_t v36 = v12;
  uint64_t v38 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v34 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411BFDA0(0, (unint64_t *)&qword_26B0121F0);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_24163B390;
  *(void *)(v14 + 32) = objc_msgSend(self, sel_queryDescriptorWithSampleType_, a1);
  uint64_t v40 = v14;
  sub_241631F48();
  uint64_t v31 = a2;
  uint64_t v40 = a2;
  uint64_t v41 = a3;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631E08();
  sub_241632258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v15 = (void *)swift_allocObject();
  void v15[2] = v4;
  v15[3] = a1;
  void v15[4] = a2;
  v15[5] = a3;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_2411C0224;
  *(void *)(v16 + 24) = v15;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  id v17 = v4;
  id v18 = a1;
  sub_24162FA48();
  sub_2411BFFDC();
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_2411A48E0(0, (unint64_t *)&unk_26B010530, (uint64_t (*)(uint64_t))sub_2411BFFDC, MEMORY[0x263EFDCF0]);
  sub_2411A5114(&qword_26B0106F0, MEMORY[0x263F44AB8]);
  sub_2411C145C();
  uint64_t v20 = v32;
  sub_24162FD78();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v20, v8);
  os_log_type_t v21 = (void *)swift_allocObject();
  v21[2] = v17;
  void v21[3] = v18;
  v21[4] = v31;
  v21[5] = a3;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  id v22 = v17;
  id v23 = v18;
  sub_24162FA48();
  sub_2411C73BC(0);
  sub_2411A48E0(0, &qword_26B0104B0, (uint64_t (*)(uint64_t))sub_2411C73BC, v19);
  sub_2411A5114(&qword_26B0103C0, (void (*)(uint64_t))sub_2411C1D70);
  sub_2411C1878();
  uint64_t v25 = v34;
  uint64_t v24 = v35;
  uint64_t v26 = v39;
  sub_24162FD78();
  swift_release();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v26, v24);
  sub_2411A5114(&qword_26B010390, (void (*)(uint64_t))sub_2411C2024);
  uint64_t v27 = v36;
  uint64_t v28 = sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v25, v27);
  return v28;
}

uint64_t sub_2411A43AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SleepingWristTemperatureHelpTileGenerator(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2);
  sub_2411C1F44();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v33 = v5;
  uint64_t v34 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v31 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C2B80();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v35 = v8;
  uint64_t v36 = v9;
  MEMORY[0x270FA5388](v8);
  os_log_type_t v32 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = v0;
  sub_24162C148();
  sub_2411B6854(v37, v37[3]);
  uint64_t v11 = (void *)sub_24162C038();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v37);
  sub_2411B9D00(0, (unint64_t *)&qword_26B010718);
  uint64_t v12 = (void *)MEMORY[0x24561F7E0]((id)*MEMORY[0x263F09BE0]);
  v37[0] = v2;
  sub_2411C62F4();
  uint64_t v13 = sub_241631D48();
  uint64_t v15 = sub_2411A3E58(v12, v13, v14);

  swift_bridgeObjectRelease();
  v37[0] = v15;
  id v29 = type metadata accessor for SleepingWristTemperatureHelpTileGenerator;
  uint64_t v16 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411A49C4(v1, (uint64_t)v16, type metadata accessor for SleepingWristTemperatureHelpTileGenerator);
  uint64_t v17 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v18 = (v17 + 16) & ~v17;
  v28[1] = (uint64_t (*)(void))(v17 | 7);
  v28[2] = (uint64_t (*)(void))(v18 + v4);
  uint64_t v19 = swift_allocObject();
  v28[0] = type metadata accessor for SleepingWristTemperatureHelpTileGenerator;
  sub_2411A4C08((uint64_t)v16, v19 + v18, type metadata accessor for SleepingWristTemperatureHelpTileGenerator);
  sub_24162FA48();
  uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_2411A48E0(0, &qword_26B0104B0, (uint64_t (*)(uint64_t))sub_2411C73BC, MEMORY[0x263EFDCF0]);
  sub_2416319C8();
  sub_2411A48E0(0, &qword_26B0111E0, MEMORY[0x263F090D0], v20);
  sub_2411C1878();
  sub_2411C17F0();
  os_log_type_t v21 = v31;
  sub_24162FD78();
  swift_release();
  swift_release();
  sub_2411A49C4(v30, (uint64_t)v16, v29);
  uint64_t v22 = swift_allocObject();
  sub_2411A4C08((uint64_t)v16, v22 + v18, v28[0]);
  sub_24119EF0C(0, &qword_26B011268, MEMORY[0x263F090D0], MEMORY[0x263EFDDF8]);
  sub_2411A5114(&qword_26B011180, (void (*)(uint64_t))sub_2411C1F44);
  sub_2411C10EC();
  uint64_t v24 = v32;
  uint64_t v23 = v33;
  sub_24162FD08();
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v21, v23);
  sub_2411A5114(&qword_26B011108, (void (*)(uint64_t))sub_2411C2B80);
  uint64_t v25 = v35;
  uint64_t v26 = sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v24, v25);
  return v26;
}

void sub_2411A48E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = sub_2411CE834();
    unint64_t v9 = a4(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_2411A495C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2411A49C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void *sub_2411A4A2C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  unint64_t v8 = (char *)a1 + v7;
  unint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24162EFA8();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_24162C1C8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = a3[7];
  long long v17 = *(_OWORD *)((char *)a2 + v16 + 24);
  *(_OWORD *)((char *)a1 + v16 + 24) = v17;
  (**(void (***)(void))(v17 - 8))();
  uint64_t v18 = a3[8];
  uint64_t v19 = *(void **)((char *)a2 + v18);
  *(void *)((char *)a1 + v18) = v19;
  id v20 = v19;
  return a1;
}

uint64_t type metadata accessor for SleepingWristTemperatureHelpTileGenerator(uint64_t a1)
{
  return sub_2411B6BD4(a1, qword_26B00FDE8);
}

uint64_t sub_2411A4BA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2411A4C08(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2411A4C70()
{
  uint64_t v1 = v0;
  sub_2411C3EA4();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30[1] = v6;
  sub_2411C5388();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v33 = v7;
  uint64_t v34 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C277C(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v35 = v11;
  uint64_t v36 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C36E4(0, &qword_26B0110A8, sub_2411C277C, (void (*)(uint64_t))type metadata accessor for SleepingWristTemperatureHelpTileGenerator.Change, (void (*)(void))sub_2411C27C4);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  uint64_t v32 = v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v30 - v17;
  uint64_t v19 = (int *)type metadata accessor for SleepingWristTemperatureHelpTileGenerator(0);
  id v20 = (void *)(v0 + v19[7]);
  uint64_t v21 = v20[3];
  uint64_t v22 = v20[4];
  sub_2411B6854(v20, v21);
  uint64_t v38 = sub_2411B25DC(v1 + v19[6], v21, v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, *(void *)(v1 + v19[8])+ OBJC_IVAR____TtC24MenstrualCyclesAppPlugin38SleepMeasurementsConfigurationProvider_configurationPublisher, v3);
  uint64_t v37 = sub_2411A43AC();
  uint64_t v23 = (void (*)(uint64_t))MEMORY[0x263F44998];
  sub_2411A515C(0, (unint64_t *)&qword_26B010480, MEMORY[0x263F44998]);
  uint64_t v24 = (void (*)(uint64_t))MEMORY[0x263F090D0];
  sub_2411A515C(0, (unint64_t *)&unk_26B0111F0, MEMORY[0x263F090D0]);
  sub_2411A51C0(&qword_26B010478, (unint64_t *)&qword_26B010480, v23);
  sub_2411A5114((unint64_t *)&unk_26B0100F0, (void (*)(uint64_t))sub_2411C3EA4);
  sub_2411A51C0(&qword_26B0111E8, (unint64_t *)&unk_26B0111F0, v24);
  sub_24162F8B8();
  sub_24162C198();
  uint64_t v25 = v33;
  sub_24162F898();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v25);
  type metadata accessor for SleepingWristTemperatureHelpTileGenerator.Change(0);
  sub_2411C27C4();
  uint64_t v26 = v35;
  sub_24162FCE8();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v26);
  sub_2411C3774();
  uint64_t v27 = v31;
  uint64_t v28 = sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v27);
  return v28;
}

uint64_t sub_2411A5114(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2411A515C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24162FA68();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2411A51C0(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2411A515C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_2411A5210(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v41 = *v1;
  uint64_t v4 = sub_24162EFA8();
  uint64_t v50 = *(void *)(v4 - 8);
  uint64_t v51 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v49 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24162C1C8();
  uint64_t v52 = *(void *)(v6 - 8);
  uint64_t v7 = v52;
  uint64_t v53 = v6;
  uint64_t v45 = *(void *)(v52 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v44 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24162C5F8();
  uint64_t v42 = *(void *)(v9 - 8);
  uint64_t v43 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C4448();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v47 = v12;
  uint64_t v48 = v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v46 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24162C128();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v19((char *)v1+ OBJC_IVAR____TtC24MenstrualCyclesAppPlugin55SharedProjectionHighlightChartFeedItemGeneratorPipeline_context, a1, v6);
  id v20 = (void *)sub_24162C178();
  sub_241197DE8(v20);

  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))((uint64_t)v2+ OBJC_IVAR____TtC24MenstrualCyclesAppPlugin55SharedProjectionHighlightChartFeedItemGeneratorPipeline_domain, v18, v15);
  sub_24162C138();
  sub_2411B6854(v55, v55[3]);
  sub_24162C118();
  sub_24162C5E8();
  uint64_t v21 = sub_24162C3D8();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v11, v43);
  uint64_t v54 = v21;
  uint64_t v22 = v44;
  uint64_t v23 = v53;
  v19(v44, a1, v53);
  uint64_t v24 = a1;
  uint64_t v25 = v52;
  unint64_t v26 = (*(unsigned __int8 *)(v52 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  uint64_t v27 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v27 + v26, v22, v23);
  sub_2411C1700();
  sub_2411C8510();
  sub_2411A6348((unint64_t *)&unk_26B00EBA8, (void (*)(uint64_t))sub_2411C1700);
  uint64_t v28 = v46;
  sub_24162FCC8();
  swift_release();
  swift_release();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v55);
  sub_2411A6348(&qword_26B00EB60, (void (*)(uint64_t))sub_2411C4448);
  uint64_t v29 = v47;
  uint64_t v30 = sub_24162FC88();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v28, v29);
  v55[0] = v30;
  sub_2411C19B4();
  sub_2411A6348((unint64_t *)&qword_26B012E98, (void (*)(uint64_t))sub_2411C19B4);
  uint64_t v31 = sub_24162FCB8();
  swift_release();
  v2[2] = v31;
  uint64_t v32 = v49;
  sub_24162EF48();
  uint64_t v33 = v32;
  uint64_t v34 = sub_24162EF98();
  os_log_type_t v35 = sub_2416322E8();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    v55[0] = v37;
    *(_DWORD *)uint64_t v36 = 136446210;
    uint64_t v38 = sub_2416333E8();
    uint64_t v54 = sub_2411B6898(v38, v39, v55);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v34, v35, "[%{public}s] Initializing", v36, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v37, -1, -1);
    MEMORY[0x245621640](v36, -1, -1);
  }

  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v24, v53);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v33, v51);
  return v2;
}

char *sub_2411A58C4(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  id v73 = a2;
  v60[0] = *(void *)v3;
  uint64_t v5 = sub_24162EFA8();
  uint64_t v75 = *(void *)(v5 - 8);
  uint64_t v76 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v74 = (char *)v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24162C1C8();
  uint64_t v77 = *(void *)(v7 - 8);
  uint64_t v8 = v77;
  uint64_t v78 = v7;
  uint64_t v67 = *(void *)(v77 + 64);
  MEMORY[0x270FA5388](v7);
  uint64_t v65 = (char *)v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_24162C5F8();
  uint64_t v63 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v62 = (char *)v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C5954();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v69 = v11;
  uint64_t v70 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v64 = (char *)v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C3958();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v71 = v14;
  uint64_t v72 = v15;
  MEMORY[0x270FA5388](v14);
  v66 = (char *)v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_24162DFA8();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  id v20 = (char *)v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_24162C128();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v60[1] = v8 + 16;
  uint64_t v61 = v25;
  v25(&v3[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin50SharedProjectionHighlightFeedItemGeneratorPipeline_context], a1, v78);
  uint64_t v26 = a1;
  uint64_t v27 = (void *)sub_24162C178();
  sub_2411B8FB8(v27);

  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v3[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin50SharedProjectionHighlightFeedItemGeneratorPipeline_domain], v24, v21);
  sub_24162C148();
  sub_2411B6854(v81, v82);
  sub_24162C038();
  id v28 = objc_msgSend(self, sel_defaultCenter, v60[0]);
  sub_2411C0044();
  sub_241632348();
  id v29 = objc_allocWithZone((Class)sub_24162E418());
  uint64_t v30 = sub_24162E3F8();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v81);
  *(void *)&v3[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin50SharedProjectionHighlightFeedItemGeneratorPipeline_notificationSettingsManager] = v30;
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x263F444C0], v17);
  uint64_t v31 = sub_24162E408();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  uint64_t v32 = v26;
  sub_24162C138();
  sub_2411B6854(v81, v82);
  sub_24162C118();
  uint64_t v33 = v62;
  sub_24162C5E8();
  uint64_t v34 = sub_24162C3D8();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v33, v68);
  uint64_t v79 = v31;
  uint64_t v80 = v34;
  uint64_t v68 = v31;
  sub_2411C1700();
  sub_2411C1570();
  sub_2411A6300((unint64_t *)&unk_26B00EBA8, (void (*)(uint64_t))sub_2411C1700);
  sub_2411A6300((unint64_t *)&unk_26B00EBC0, (void (*)(uint64_t))sub_2411C1570);
  os_log_type_t v35 = v64;
  sub_24162FCD8();
  swift_release();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v81);
  uint64_t v36 = v65;
  uint64_t v37 = v32;
  uint64_t v38 = v78;
  v61(v65, v32, v78);
  uint64_t v39 = v77;
  unint64_t v40 = (*(unsigned __int8 *)(v77 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
  unint64_t v41 = (v67 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v42 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v39 + 32))(v42 + v40, v36, v38);
  id v43 = v73;
  *(void *)(v42 + v41) = v73;
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = sub_2414FFE14;
  *(void *)(v44 + 24) = v42;
  sub_2411C8510();
  sub_2411A6300(&qword_26B00EB40, (void (*)(uint64_t))sub_2411C5954);
  id v73 = v43;
  uint64_t v45 = v66;
  uint64_t v46 = v69;
  sub_24162FCE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v35, v46);
  sub_2411A6300(&qword_26B00EB80, (void (*)(uint64_t))sub_2411C3958);
  uint64_t v47 = v71;
  uint64_t v48 = sub_24162FC88();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v45, v47);
  v81[0] = v48;
  sub_2411C19B4();
  sub_2411A6300((unint64_t *)&qword_26B012E98, (void (*)(uint64_t))sub_2411C19B4);
  uint64_t v49 = sub_24162FCB8();
  swift_release();
  uint64_t v50 = v3;
  *((void *)v3 + 2) = v49;
  uint64_t v51 = v74;
  sub_24162EF48();
  uint64_t v52 = v51;
  uint64_t v53 = sub_24162EF98();
  os_log_type_t v54 = sub_2416322E8();
  if (os_log_type_enabled(v53, v54))
  {
    id v55 = (uint8_t *)swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    v81[0] = v56;
    *(_DWORD *)id v55 = 136446210;
    uint64_t v57 = sub_2416333E8();
    uint64_t v80 = sub_2411B6898(v57, v58, v81);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v53, v54, "[%{public}s] Initializing", v55, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v56, -1, -1);
    MEMORY[0x245621640](v55, -1, -1);
  }

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v37, v78);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v52, v76);
  return v50;
}

uint64_t sub_2411A62B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2411A6300(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2411A6348(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_2411A6390(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v72 = a3;
  uint64_t v82 = a2;
  uint64_t v74 = *v3;
  uint64_t v6 = sub_24162EFA8();
  uint64_t v87 = *(void *)(v6 - 8);
  uint64_t v88 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v84 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24162C1C8();
  uint64_t v92 = *(void *)(v8 - 8);
  uint64_t v93 = v8;
  uint64_t v81 = *(void *)(v92 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v79 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411A7024(0, &qword_26B0100B8, (void (*)(uint64_t))sub_2411C04FC);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v77 = v10;
  uint64_t v78 = v11;
  MEMORY[0x270FA5388](v10);
  id v73 = (char *)&v65 - v12;
  sub_2411A7024(0, &qword_26B0100C0, (void (*)(uint64_t))sub_2411C02DC);
  uint64_t v80 = v13;
  uint64_t v86 = *(void **)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v75 = (char *)&v65 - v14;
  sub_2411A7024(0, &qword_26B0100B0, (void (*)(uint64_t))sub_2411C8568);
  uint64_t v91 = v15;
  uint64_t v85 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v90 = (char *)&v65 - v16;
  sub_2411A6FA0(0, &qword_26B010660, MEMORY[0x263EFDE48]);
  uint64_t v69 = v17;
  uint64_t v70 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v65 - v18;
  sub_2411C43C0();
  uint64_t v71 = v20;
  MEMORY[0x270FA5388](v20);
  uint64_t v65 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411A8428(0, &qword_26B00EC40, (uint64_t)&type metadata for HKMCAnalysisResult, MEMORY[0x263EFDE48]);
  uint64_t v68 = v22;
  MEMORY[0x270FA5388](v22);
  sub_2411C5770();
  uint64_t v66 = v23;
  uint64_t v67 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C2928();
  uint64_t v89 = v26;
  uint64_t v83 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  id v28 = (char *)&v65 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_24162C128();
  uint64_t v30 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v32 = (char *)&v65 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = (void *)sub_24162C178();
  sub_2411B8FB8(v33);

  uint64_t v34 = v32;
  uint64_t v35 = v72;
  (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))((uint64_t)v4 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin47SharedProjectionHighlightModelGeneratorPipeline_domain, v34, v29);
  uint64_t v36 = v82;
  *(void *)((char *)v4
            + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin47SharedProjectionHighlightModelGeneratorPipeline_analysisChangeDetector) = v82;
  *(void *)((char *)v4
            + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin47SharedProjectionHighlightModelGeneratorPipeline_onboardingChangeDetector) = v35;
  uint64_t v37 = v36;
  swift_beginAccess();
  sub_2411A8428(0, (unint64_t *)&qword_26B00EC48, (uint64_t)&type metadata for HKMCAnalysisResult, MEMORY[0x263EFDE58]);
  uint64_t v76 = v37;
  swift_retain();
  sub_24162FC18();
  swift_endAccess();
  swift_beginAccess();
  sub_2411A6FA0(0, &qword_26B010668, MEMORY[0x263EFDE58]);
  sub_24162FC18();
  swift_endAccess();
  sub_2411C0B80();
  uint64_t v38 = v69;
  sub_24162FCC8();
  uint64_t v39 = v19;
  uint64_t v40 = v74;
  (*(void (**)(char *, uint64_t))(v70 + 8))(v39, v38);
  sub_2411C0C70();
  sub_2411A70D0(&qword_26B010098, (void (*)(uint64_t))sub_2411C43C0);
  sub_24162F888();
  sub_24162C198();
  uint64_t v41 = v66;
  sub_24162F868();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v25, v41);
  sub_2411C04FC();
  sub_2411A70D0(&qword_26B010290, (void (*)(uint64_t))sub_2411C2928);
  uint64_t v42 = v73;
  uint64_t v82 = v28;
  sub_24162FCC8();
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = v40;
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = sub_2411C5DC0;
  *(void *)(v44 + 24) = v43;
  sub_2411C02DC();
  uint64_t v45 = v75;
  uint64_t v46 = v77;
  sub_24162F8F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v42, v46);
  uint64_t v47 = v92;
  uint64_t v48 = v93;
  uint64_t v49 = v79;
  (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v79, a1, v93);
  uint64_t v50 = v47;
  unint64_t v51 = (*(unsigned __int8 *)(v47 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  uint64_t v52 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v52 + v51, v49, v48);
  uint64_t v53 = swift_allocObject();
  *(void *)(v53 + 16) = sub_2411C5DC4;
  *(void *)(v53 + 24) = v52;
  sub_2411C8568();
  uint64_t v54 = v80;
  sub_24162F8F8();
  swift_release();
  ((void (*)(char *, uint64_t))v86[1])(v45, v54);
  sub_2411C41CC();
  uint64_t v55 = sub_24162FC88();
  uint64_t v86 = v4;
  v4[2] = v55;
  uint64_t v56 = v84;
  sub_24162EF48();
  uint64_t v57 = v56;
  unint64_t v58 = sub_24162EF98();
  os_log_type_t v59 = sub_2416322E8();
  if (os_log_type_enabled(v58, v59))
  {
    uint64_t v60 = (uint8_t *)swift_slowAlloc();
    uint64_t v61 = swift_slowAlloc();
    uint64_t v95 = v61;
    *(_DWORD *)uint64_t v60 = 136446210;
    uint64_t v62 = sub_2416333E8();
    uint64_t v94 = sub_2411B6898(v62, v63, &v95);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v58, v59, "[%{public}s] Initializing", v60, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v61, -1, -1);
    MEMORY[0x245621640](v60, -1, -1);
  }

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v92 + 8))(a1, v93);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v57, v88);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v90, v91);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v82, v89);
  return v86;
}

void sub_2411A6FA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_2411A8428(255, (unint64_t *)&qword_26B0106A0, MEMORY[0x263F8D4F8], MEMORY[0x263F8D8F0]);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_2411A7024(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    sub_2411C2928();
    a3(255);
    sub_2411A70D0(&qword_26B010290, (void (*)(uint64_t))sub_2411C2928);
    unint64_t v5 = sub_24162F908();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_2411A70D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2411A7118(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v106 = a4;
  uint64_t v130 = a3;
  id v105 = a2;
  uint64_t v96 = a1;
  uint64_t v123 = *v4;
  uint64_t v5 = sub_24162EFA8();
  uint64_t v121 = *(void *)(v5 - 8);
  uint64_t v122 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v95 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24162C1C8();
  uint64_t v128 = *(void *)(v7 - 8);
  uint64_t v129 = v7;
  uint64_t v117 = *(void *)(v128 + 64);
  MEMORY[0x270FA5388](v7);
  v115 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411A8790(0, &qword_26B010198, (void (*)(uint64_t))sub_2411C0374);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v118 = v9;
  uint64_t v119 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v114 = (char *)&v82 - v11;
  sub_2411A8790(0, &qword_26B010190, (void (*)(uint64_t))sub_2411C8510);
  uint64_t v127 = v12;
  uint64_t v120 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  v126 = (char *)&v82 - v13;
  uint64_t v110 = type metadata accessor for HKBiologicalSex;
  sub_2411A8628(0, &qword_26B012F40, (uint64_t (*)(uint64_t))type metadata accessor for HKBiologicalSex, MEMORY[0x263EFDE48]);
  uint64_t v112 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v109 = (char *)&v82 - v15;
  uint64_t v16 = (uint64_t (*)(void, uint64_t))MEMORY[0x263EFDE48];
  sub_2411A8474(0, (unint64_t *)&unk_26B012F20, (uint64_t)&type metadata for UserCharacteristics.Age, MEMORY[0x263EFDE48]);
  uint64_t v111 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v104 = (char *)&v82 - v18;
  sub_2411C5670();
  uint64_t v113 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v107 = (char *)&v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411AAFE0(0, &qword_26B010660, MEMORY[0x263EFDE48]);
  uint64_t v98 = v21;
  uint64_t v99 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v94 = (char *)&v82 - v22;
  sub_2411C43C0();
  uint64_t v108 = v23;
  MEMORY[0x270FA5388](v23);
  uint64_t v93 = (char *)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411A8474(0, &qword_26B00EC40, (uint64_t)&type metadata for HKMCAnalysisResult, v16);
  uint64_t v89 = v25;
  uint64_t v90 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v87 = (char *)&v82 - v26;
  sub_2411C2110();
  uint64_t v91 = v27;
  uint64_t v92 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v86 = (char *)&v82 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C2F20();
  uint64_t v103 = v29;
  MEMORY[0x270FA5388](v29);
  uint64_t v88 = (char *)&v82 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C4E8C();
  uint64_t v101 = v31;
  uint64_t v102 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v100 = (char *)&v82 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C253C();
  uint64_t v125 = v33;
  uint64_t v116 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  v124 = (char *)&v82 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_24162C0E8();
  uint64_t v35 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  uint64_t v37 = (char *)&v82 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_24162CBF8();
  uint64_t v38 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  uint64_t v40 = (char *)&v82 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_24162C128();
  uint64_t v41 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  uint64_t v43 = (char *)&v82 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_24162BDD8();
  sub_2411A8628(0, (unint64_t *)&qword_26B012FC8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v44 = sub_24162BD98();
  uint64_t v45 = *(void *)(v44 - 8);
  unint64_t v46 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  uint64_t v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_241637EE0;
  (*(void (**)(unint64_t, void, uint64_t))(v45 + 104))(v47 + v46, *MEMORY[0x263F45580], v44);
  sub_2411B8B4C((uint64_t)v40);
  sub_24162CBE8();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v83);
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v37, *MEMORY[0x263F45688], v85);
  uint64_t v48 = v95;
  uint64_t v49 = v97;
  sub_24162C0F8();
  (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v49 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46MenstrualCyclesOnboardingTileGeneratorPipeline_domain, v43, v84);
  id v50 = v105;
  *(void *)(v49
            + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46MenstrualCyclesOnboardingTileGeneratorPipeline_analysisChangeDetector) = v105;
  *(void *)(v49
            + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46MenstrualCyclesOnboardingTileGeneratorPipeline_onboardingChangeDetector) = v130;
  id v51 = v106;
  *(void *)(v49
            + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46MenstrualCyclesOnboardingTileGeneratorPipeline_userCharacteristicsChangeDetector) = v106;
  uint64_t v52 = v50;
  swift_beginAccess();
  uint64_t v53 = (uint64_t (*)(void, uint64_t))MEMORY[0x263EFDE58];
  sub_2411A8474(0, (unint64_t *)&qword_26B00EC48, (uint64_t)&type metadata for HKMCAnalysisResult, MEMORY[0x263EFDE58]);
  id v105 = v52;
  swift_retain();
  id v54 = v51;
  uint64_t v55 = v87;
  sub_24162FC18();
  swift_endAccess();
  sub_2411A872C((unint64_t *)&qword_26B00EC38, &qword_26B00EC40, (uint64_t)&type metadata for HKMCAnalysisResult);
  uint64_t v56 = v86;
  uint64_t v57 = v89;
  sub_24162FD48();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v55, v57);
  sub_2411A8628(0, (unint64_t *)&qword_26B00EC60, (uint64_t (*)(uint64_t))sub_2411F1EFC, MEMORY[0x263F8D8F0]);
  sub_2411A86E4(&qword_26B010330, (void (*)(uint64_t))sub_2411C2110);
  uint64_t v58 = v91;
  sub_24162FCE8();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v56, v58);
  swift_beginAccess();
  sub_2411AAFE0(0, &qword_26B010668, MEMORY[0x263EFDE58]);
  os_log_type_t v59 = v94;
  sub_24162FC18();
  swift_endAccess();
  sub_2411C0B80();
  uint64_t v60 = v98;
  sub_24162FCC8();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v59, v60);
  swift_beginAccess();
  sub_2411A8474(0, (unint64_t *)&qword_26B012F48, (uint64_t)&type metadata for UserCharacteristics.Age, v53);
  sub_24162FC18();
  swift_endAccess();
  id v106 = v54;
  swift_beginAccess();
  sub_2411A8628(0, (unint64_t *)&qword_26B012F50, (uint64_t (*)(uint64_t))v110, MEMORY[0x263EFDE58]);
  sub_24162FC18();
  swift_endAccess();
  sub_2411A872C((unint64_t *)&qword_26B012F18, (unint64_t *)&unk_26B012F20, (uint64_t)&type metadata for UserCharacteristics.Age);
  sub_2411C0AF8();
  sub_24162F888();
  sub_2411A86E4((unint64_t *)&qword_26B0101E0, (void (*)(uint64_t))sub_2411C2F20);
  sub_2411A86E4(&qword_26B010098, (void (*)(uint64_t))sub_2411C43C0);
  sub_2411A86E4(&qword_26B00EB50, (void (*)(uint64_t))sub_2411C5670);
  uint64_t v61 = v100;
  sub_24162F8B8();
  sub_24162C198();
  uint64_t v62 = v101;
  sub_24162F898();
  (*(void (**)(char *, uint64_t))(v102 + 8))(v61, v62);
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = v123;
  uint64_t v64 = swift_allocObject();
  *(void *)(v64 + 16) = sub_2412CAB9C;
  *(void *)(v64 + 24) = v63;
  sub_2411C0374();
  sub_2411A86E4(&qword_26B0102E0, (void (*)(uint64_t))sub_2411C253C);
  uint64_t v65 = v114;
  sub_24162FCE8();
  swift_release();
  uint64_t v66 = v128;
  uint64_t v67 = v129;
  uint64_t v68 = v115;
  uint64_t v69 = v96;
  (*(void (**)(char *, uint64_t, uint64_t))(v128 + 16))(v115, v96, v129);
  uint64_t v70 = v66;
  unint64_t v71 = (*(unsigned __int8 *)(v66 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
  uint64_t v72 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v70 + 32))(v72 + v71, v68, v67);
  uint64_t v73 = swift_allocObject();
  *(void *)(v73 + 16) = sub_2412CACE0;
  *(void *)(v73 + 24) = v72;
  sub_2411C8510();
  uint64_t v74 = v118;
  sub_24162F948();
  swift_release();
  (*(void (**)(char *, uint64_t))(v119 + 8))(v65, v74);
  sub_2411C34E4();
  *(void *)(v49 + 16) = sub_24162FC88();
  sub_24162EF48();
  uint64_t v75 = sub_24162EF98();
  os_log_type_t v76 = sub_2416322E8();
  if (os_log_type_enabled(v75, v76))
  {
    uint64_t v77 = (uint8_t *)swift_slowAlloc();
    uint64_t v78 = swift_slowAlloc();
    uint64_t v132 = v78;
    *(_DWORD *)uint64_t v77 = 136446210;
    uint64_t v79 = sub_2416333E8();
    uint64_t v131 = sub_2411B6898(v79, v80, &v132);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v75, v76, "[%{public}s] Initializing", v77, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v78, -1, -1);
    MEMORY[0x245621640](v77, -1, -1);
  }

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v69, v129);
  (*(void (**)(char *, uint64_t))(v121 + 8))(v48, v122);
  (*(void (**)(char *, uint64_t))(v120 + 8))(v126, v127);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v124, v125);
  return v49;
}

void sub_2411A8428(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_2411A8474(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_2411A84C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, ValueMetadata *))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, &type metadata for HKMCAnalysisResult);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2411A8510(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_2411A855C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411A85C0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_2411B9D00(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_2411A8628(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411A868C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_2411B9D00(255, a3);
    unint64_t v4 = sub_241632C18();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2411A86E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2411A872C(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2411A8474(255, a2, a3, MEMORY[0x263EFDE48]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2411A8790(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    sub_2411C253C();
    a3(255);
    sub_2411A86E4(&qword_26B0102E0, (void (*)(uint64_t))sub_2411C253C);
    unint64_t v5 = sub_24162F958();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_2411A883C()
{
  sub_2411AAF5C(0, &qword_26B010660, MEMORY[0x263EFDE48]);
  uint64_t v47 = v1;
  uint64_t v49 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v43 = (char *)&v39 - v2;
  sub_2411C43C0();
  uint64_t v53 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v42 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411AB268(0, &qword_26B00EC40, (uint64_t)&type metadata for HKMCAnalysisResult, MEMORY[0x263EFDE48]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v39 - v8;
  sub_2411C2110();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C2F20();
  uint64_t v46 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v39 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C4FC8();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v44 = v17;
  uint64_t v45 = v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C25D0();
  uint64_t v48 = v21;
  uint64_t v51 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v40 = (char *)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C3558();
  uint64_t v50 = v23;
  uint64_t v52 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v41 = (char *)&v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for CycleDeviationsUpdateTileGeneratorPipeline();
  swift_beginAccess();
  sub_2411AB268(0, (unint64_t *)&qword_26B00EC48, (uint64_t)&type metadata for HKMCAnalysisResult, MEMORY[0x263EFDE58]);
  sub_24162FC18();
  swift_endAccess();
  sub_2411C0C70();
  sub_24162FD48();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_2411A85C0(0, (unint64_t *)&qword_26B00EC60, (unint64_t *)&qword_26B012340, 0x263F45110, MEMORY[0x263F8D8F0]);
  sub_2411A9098(&qword_26B010330, (void (*)(uint64_t))sub_2411C2110);
  sub_24162FCE8();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  swift_beginAccess();
  sub_2411AAF5C(0, &qword_26B010668, MEMORY[0x263EFDE58]);
  uint64_t v26 = v43;
  sub_24162FC18();
  swift_endAccess();
  sub_2411C0B80();
  uint64_t v27 = v47;
  sub_24162FCC8();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v27);
  uint64_t v28 = *(void *)(v0 + *(int *)(updated + 36));
  uint64_t v29 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  uint64_t v31 = sub_2411AF73C(v29, v30, v28);
  swift_bridgeObjectRelease();
  uint64_t v54 = v31;
  sub_2411C14E4();
  sub_2411A9098((unint64_t *)&qword_26B0101E0, (void (*)(uint64_t))sub_2411C2F20);
  sub_2411A9098(&qword_26B010098, (void (*)(uint64_t))sub_2411C43C0);
  sub_2411A9098((unint64_t *)&qword_26B010508, (void (*)(uint64_t))sub_2411C14E4);
  sub_24162F8B8();
  sub_24162C198();
  uint64_t v32 = v40;
  uint64_t v33 = v44;
  sub_24162F898();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v20, v33);
  sub_2411A9098(&qword_26B0102D0, (void (*)(uint64_t))sub_2411C25D0);
  uint64_t v34 = v41;
  uint64_t v35 = v48;
  sub_24162FCE8();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v32, v35);
  sub_2411A9098(&qword_26B010178, (void (*)(uint64_t))sub_2411C3558);
  uint64_t v36 = v50;
  uint64_t v37 = sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v34, v36);
  return v37;
}

uint64_t sub_2411A9098(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_2411A90E0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void *a7)
{
  uint64_t v85 = a6;
  uint64_t v86 = a1;
  uint64_t v84 = sub_24162BA08();
  uint64_t v82 = *(void *)(v84 - 8);
  uint64_t v83 = *(void *)(v82 + 64);
  MEMORY[0x270FA5388](v84);
  uint64_t v81 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C3EA4();
  uint64_t v76 = v13;
  uint64_t v73 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v72 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411AAED8(0, &qword_26B010660, MEMORY[0x263EFDE48]);
  uint64_t v66 = v15;
  uint64_t v67 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v62 = (char *)&v58 - v16;
  sub_2411C43C0();
  uint64_t v80 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v64 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411AB21C(0, &qword_26B00EC40, (uint64_t)&type metadata for HKMCAnalysisResult, MEMORY[0x263EFDE48]);
  uint64_t v20 = v19;
  uint64_t v21 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v58 - v22;
  sub_2411C2110();
  uint64_t v61 = v24;
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v58 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C2F20();
  uint64_t v71 = v28;
  MEMORY[0x270FA5388](v28);
  uint64_t v60 = (char *)&v58 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C46B4();
  uint64_t v68 = v30;
  uint64_t v69 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v65 = (char *)&v58 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411B14F4(0, &qword_26B010318, (uint64_t (*)(uint64_t))sub_2411C46B4, sub_241359DE8, MEMORY[0x263EFDBB0]);
  uint64_t v74 = v32;
  uint64_t v78 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v63 = (char *)&v58 - v33;
  sub_2411C3134();
  uint64_t v77 = v34;
  uint64_t v79 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v70 = (char *)&v58 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88[3] = sub_2411B9D00(0, (unint64_t *)&qword_26B010750);
  v88[4] = MEMORY[0x263F44B48];
  v88[0] = a4;
  a7[2] = a2;
  a7[3] = a3;
  uint64_t v75 = a7;
  sub_2411A3DF4((uint64_t)v88, (uint64_t)(a7 + 5));
  a7[4] = a5;
  swift_beginAccess();
  sub_2411AB21C(0, (unint64_t *)&qword_26B00EC48, (uint64_t)&type metadata for HKMCAnalysisResult, MEMORY[0x263EFDE58]);
  id v36 = a2;
  swift_retain();
  id v59 = a5;
  sub_24162FC18();
  swift_endAccess();
  sub_2411C0C70();
  sub_24162FD48();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  sub_2411A868C(0, (unint64_t *)&qword_26B00EC60, (unint64_t *)&qword_26B012340);
  sub_2411B680C(&qword_26B010330, (void (*)(uint64_t))sub_2411C2110);
  uint64_t v37 = v61;
  sub_24162FCE8();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v37);
  swift_beginAccess();
  sub_2411AAED8(0, &qword_26B010668, MEMORY[0x263EFDE58]);
  uint64_t v38 = v62;
  sub_24162FC18();
  swift_endAccess();
  sub_2411C0B80();
  uint64_t v39 = v66;
  sub_24162FCC8();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v38, v39);
  uint64_t v87 = sub_2411B0F04(v86);
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v72, (uint64_t)v59+ OBJC_IVAR____TtC24MenstrualCyclesAppPlugin38SleepMeasurementsConfigurationProvider_configurationPublisher, v76);
  uint64_t v40 = (uint64_t (*)(uint64_t))MEMORY[0x263F44998];
  sub_2411B134C(0, (unint64_t *)&qword_26B010480, MEMORY[0x263F44998], MEMORY[0x263EFDCF0]);
  sub_2411B680C((unint64_t *)&qword_26B0101E0, (void (*)(uint64_t))sub_2411C2F20);
  sub_2411B680C(&qword_26B010098, (void (*)(uint64_t))sub_2411C43C0);
  sub_2411B13C0(&qword_26B010478, (unint64_t *)&qword_26B010480, v40);
  sub_2411B680C((unint64_t *)&unk_26B0100F0, (void (*)(uint64_t))sub_2411C3EA4);
  uint64_t v41 = v65;
  sub_24162F8E8();
  sub_24162C198();
  uint64_t v42 = v63;
  uint64_t v43 = v68;
  sub_24162F8C8();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v41, v43);
  uint64_t v45 = v81;
  uint64_t v44 = v82;
  uint64_t v47 = v84;
  uint64_t v46 = v85;
  (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v81, v85, v84);
  unint64_t v48 = (*(unsigned __int8 *)(v44 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  uint64_t v49 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v44 + 32))(v49 + v48, v45, v47);
  uint64_t v50 = swift_allocObject();
  *(void *)(v50 + 16) = sub_241359ECC;
  *(void *)(v50 + 24) = v49;
  type metadata accessor for OvulationConfirmationState();
  sub_2411C2248();
  uint64_t v51 = v70;
  uint64_t v52 = v74;
  sub_24162FCE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v42, v52);
  sub_2411B680C(&qword_26B0101C0, (void (*)(uint64_t))sub_2411C3134);
  uint64_t v53 = v77;
  uint64_t v54 = sub_24162FCB8();
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v46, v47);
  uint64_t v55 = sub_24162C1C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v55 - 8) + 8))(v86, v55);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v51, v53);
  uint64_t v56 = v75;
  v75[10] = v54;
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v88);
  return v56;
}

uint64_t sub_2411A9C8C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v131 = a4;
  uint64_t v129 = a3;
  id v107 = a2;
  uint64_t v130 = a1;
  v84[0] = *v4;
  uint64_t v5 = sub_24162EFA8();
  uint64_t v120 = *(void *)(v5 - 8);
  uint64_t v121 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v119 = (char *)v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C0E8C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v117 = v7;
  uint64_t v118 = v8;
  MEMORY[0x270FA5388](v7);
  v115 = (char *)v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24162BA08();
  uint64_t v127 = *(void *)(v10 - 8);
  uint64_t v128 = v10;
  uint64_t v111 = *(void *)(v127 + 64);
  MEMORY[0x270FA5388](v10);
  uint64_t v110 = (char *)v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24162C1C8();
  uint64_t v125 = *(void *)(v12 - 8);
  uint64_t v126 = v12;
  uint64_t v109 = *(void *)(v125 + 64);
  MEMORY[0x270FA5388](v12);
  uint64_t v108 = (char *)v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C3A04();
  uint64_t v113 = v14;
  uint64_t v114 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v112 = (char *)v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411AAED8(0, &qword_26B010660, MEMORY[0x263EFDE48]);
  uint64_t v104 = v16;
  uint64_t v105 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v103 = (char *)v84 - v17;
  sub_2411C43C0();
  uint64_t v106 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v102 = (char *)v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411AB21C(0, &qword_26B00EC40, (uint64_t)&type metadata for HKMCAnalysisResult, MEMORY[0x263EFDE48]);
  uint64_t v94 = v20;
  uint64_t v95 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v92 = (char *)v84 - v21;
  sub_2411C2110();
  uint64_t v96 = v22;
  uint64_t v97 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v91 = (char *)v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C2F20();
  uint64_t v101 = v24;
  MEMORY[0x270FA5388](v24);
  uint64_t v93 = (char *)v84 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C5584();
  uint64_t v99 = v26;
  uint64_t v100 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v98 = (char *)v84 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C2894();
  uint64_t v124 = v28;
  uint64_t v116 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v123 = (char *)v84 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_24162C0E8();
  uint64_t v89 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  uint64_t v88 = (char *)v84 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_24162CBF8();
  uint64_t v31 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  uint64_t v33 = (char *)v84 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_24162C128();
  uint64_t v86 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v35 = (char *)v84 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84[1] = sub_24162BDD8();
  sub_2411A855C(0, (unint64_t *)&qword_26B012FC8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v36 = sub_24162BD98();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = *(void *)(v37 + 72);
  unint64_t v39 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  uint64_t v40 = 2 * v38;
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_24163AC10;
  unint64_t v42 = v41 + v39;
  uint64_t v43 = *(void (**)(unint64_t, void, uint64_t))(v37 + 104);
  v43(v42, *MEMORY[0x263F454F0], v36);
  unint64_t v44 = v42 + v38;
  uint64_t v45 = v130;
  v43(v44, *MEMORY[0x263F45578], v36);
  v43(v42 + v40, *MEMORY[0x263F45548], v36);
  sub_2411B8B4C((uint64_t)v33);
  sub_24162CBE8();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v85);
  (*(void (**)(char *, void, uint64_t))(v89 + 104))(v88, *MEMORY[0x263F45688], v90);
  uint64_t v46 = v122;
  sub_24162C0F8();
  (*(void (**)(uint64_t, char *, uint64_t))(v86 + 32))(v46 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40ProjectionHighlightTileGeneratorPipeline_domain, v35, v87);
  id v47 = v107;
  *(void *)(v46
            + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40ProjectionHighlightTileGeneratorPipeline_analysisChangeDetector) = v107;
  *(void *)(v46
            + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40ProjectionHighlightTileGeneratorPipeline_onboardingChangeDetector) = v129;
  unint64_t v48 = v47;
  swift_beginAccess();
  sub_2411AB21C(0, (unint64_t *)&qword_26B00EC48, (uint64_t)&type metadata for HKMCAnalysisResult, MEMORY[0x263EFDE58]);
  id v107 = v48;
  swift_retain();
  uint64_t v49 = v92;
  sub_24162FC18();
  swift_endAccess();
  sub_2411C0C70();
  uint64_t v50 = v91;
  uint64_t v51 = v94;
  sub_24162FD48();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v49, v51);
  sub_2411A855C(0, (unint64_t *)&qword_26B00EC60, (uint64_t (*)(uint64_t))sub_2411F1EFC, MEMORY[0x263F8D8F0]);
  sub_2411AB2B4(&qword_26B010330, (void (*)(uint64_t))sub_2411C2110);
  uint64_t v52 = v96;
  sub_24162FCE8();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v50, v52);
  swift_beginAccess();
  sub_2411AAED8(0, &qword_26B010668, MEMORY[0x263EFDE58]);
  uint64_t v53 = v103;
  sub_24162FC18();
  swift_endAccess();
  sub_2411C0B80();
  uint64_t v54 = v104;
  sub_24162FCC8();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v53, v54);
  sub_2411AB2B4((unint64_t *)&qword_26B0101E0, (void (*)(uint64_t))sub_2411C2F20);
  sub_2411AB2B4(&qword_26B010098, (void (*)(uint64_t))sub_2411C43C0);
  uint64_t v55 = v98;
  sub_24162F888();
  sub_24162C198();
  uint64_t v56 = v99;
  sub_24162F868();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v55, v56);
  sub_2411AB2B4(&qword_26B0102A0, (void (*)(uint64_t))sub_2411C2894);
  uint64_t v133 = sub_24162FC88();
  uint64_t v57 = v125;
  uint64_t v58 = v126;
  id v59 = v108;
  (*(void (**)(char *, uint64_t, uint64_t))(v125 + 16))(v108, v45, v126);
  uint64_t v60 = v127;
  uint64_t v61 = v128;
  uint64_t v62 = v110;
  (*(void (**)(char *, uint64_t, uint64_t))(v127 + 16))(v110, v131, v128);
  uint64_t v63 = v57;
  unint64_t v64 = (*(unsigned __int8 *)(v57 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  uint64_t v65 = v60;
  unint64_t v66 = (v109 + *(unsigned __int8 *)(v60 + 80) + v64) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  uint64_t v67 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v63 + 32))(v67 + v64, v59, v58);
  (*(void (**)(unint64_t, char *, uint64_t))(v65 + 32))(v67 + v66, v62, v61);
  uint64_t v68 = swift_allocObject();
  *(void *)(v68 + 16) = sub_2411F208C;
  *(void *)(v68 + 24) = v67;
  sub_2411AB2FC(0, &qword_26B010520, (void (*)(uint64_t))sub_2411C02DC);
  sub_2411C8510();
  sub_2411AB8A0(&qword_26B010518, &qword_26B010520, (void (*)(uint64_t))sub_2411C02DC);
  uint64_t v69 = v112;
  sub_24162FCE8();
  swift_release();
  swift_release();
  sub_2411AB2B4(&qword_26B010138, (void (*)(uint64_t))sub_2411C3A04);
  uint64_t v70 = v113;
  sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v114 + 8))(v69, v70);
  sub_2411AB2FC(0, (unint64_t *)&qword_26B012EA0, (void (*)(uint64_t))sub_2411C8510);
  sub_2411AB8A0((unint64_t *)&qword_26B012E98, (unint64_t *)&qword_26B012EA0, (void (*)(uint64_t))sub_2411C8510);
  swift_retain();
  uint64_t v71 = v115;
  sub_24162FBE8();
  sub_2411AB2B4(&qword_26B00EBF8, (void (*)(uint64_t))sub_2411C0E8C);
  uint64_t v72 = v117;
  uint64_t v73 = sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v118 + 8))(v71, v72);
  uint64_t v74 = v122;
  *(void *)(v122 + 16) = v73;
  uint64_t v75 = v119;
  sub_24162EF48();
  uint64_t v76 = v75;
  uint64_t v77 = sub_24162EF98();
  os_log_type_t v78 = sub_2416322E8();
  if (os_log_type_enabled(v77, v78))
  {
    uint64_t v79 = (uint8_t *)swift_slowAlloc();
    uint64_t v80 = swift_slowAlloc();
    uint64_t v133 = v80;
    *(_DWORD *)uint64_t v79 = 136446210;
    uint64_t v81 = sub_2416333E8();
    uint64_t v132 = sub_2411B6898(v81, v82, &v133);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v77, v78, "[%{public}s] Initializing", v79, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v80, -1, -1);
    MEMORY[0x245621640](v79, -1, -1);
  }
  swift_release();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v131, v128);
  (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v130, v126);
  (*(void (**)(char *, uint64_t))(v120 + 8))(v76, v121);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v123, v124);
  return v74;
}

void sub_2411AAED8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_2411AB21C(255, (unint64_t *)&qword_26B0106A0, MEMORY[0x263F8D4F8], MEMORY[0x263F8D8F0]);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_2411AAF5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_2411AB268(255, (unint64_t *)&qword_26B0106A0, MEMORY[0x263F8D4F8], MEMORY[0x263F8D8F0]);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_2411AAFE0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_2411A8474(255, (unint64_t *)&qword_26B0106A0, MEMORY[0x263F8D4F8], MEMORY[0x263F8D8F0]);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_2411AB064(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_2411A02EC(255, (unint64_t *)&qword_26B0106A0, MEMORY[0x263F8D4F8], MEMORY[0x263F8D8F0]);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_2411AB0E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_2411AB1D0(255, (unint64_t *)&qword_26B0106A0, MEMORY[0x263F8D4F8], MEMORY[0x263F8D8F0]);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_2411AB16C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411AB1D0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_2411AB21C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_2411AB268(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_2411AB2B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2411AB2FC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24162FA68();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2411AB360(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24162FA68();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2411AB3C4(uint64_t a1)
{
  uint64_t v29 = a1;
  uint64_t v30 = sub_24162C1C8();
  uint64_t v1 = *(void *)(v30 - 8);
  uint64_t v2 = *(void *)(v1 + 64);
  MEMORY[0x270FA5388](v30);
  uint64_t v28 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411AB0E8(0, &qword_26B010660, MEMORY[0x263EFDE48]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v27 - v6;
  sub_2411C43C0();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C3BE8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v31 = v13;
  uint64_t v32 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_2411AB0E8(0, &qword_26B010668, MEMORY[0x263EFDE58]);
  sub_24162FC18();
  swift_endAccess();
  sub_2411C0B80();
  sub_24162FCC8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_2411AB8F0(&qword_26B010098, (void (*)(uint64_t))sub_2411C43C0);
  uint64_t v17 = v29;
  uint64_t v18 = sub_24162FC88();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v34 = v18;
  uint64_t v19 = v28;
  uint64_t v20 = v17;
  uint64_t v21 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v28, v20, v30);
  unint64_t v22 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v23 + v22, v19, v21);
  *(void *)(v23 + ((v2 + v22 + 7) & 0xFFFFFFFFFFFFFFF8)) = v33;
  sub_2411C1570();
  sub_2411BF880(0, (unint64_t *)&qword_26B012630);
  sub_2411AB8F0((unint64_t *)&unk_26B00EBC0, (void (*)(uint64_t))sub_2411C1570);
  sub_24162FCE8();
  swift_release();
  swift_release();
  sub_2411AB8F0(&qword_26B010128, (void (*)(uint64_t))sub_2411C3BE8);
  uint64_t v24 = v31;
  uint64_t v25 = sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v24);
  return v25;
}

uint64_t sub_2411AB8A0(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2411AB2FC(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2411AB8F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_2411AB938(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = sub_24162EFA8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v3[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37MenstrualCyclesAnalysisChangeDetector_analysisQuery] = 0;
  uint64_t v11 = &v3[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37MenstrualCyclesAnalysisChangeDetector_generatorContext];
  uint64_t v12 = sub_24162C1C8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void (**)(char *, uint64_t))(v13 + 16);
  uint64_t v32 = v12;
  v14(v11, a2);
  *(void *)&v3[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37MenstrualCyclesAnalysisChangeDetector_observerQueue] = a1;
  swift_beginAccess();
  uint64_t v34 = 0;
  uint64_t v15 = v3;
  id v16 = a1;
  sub_24162FC08();
  swift_endAccess();

  v33.receiver = v15;
  v33.super_class = ObjectType;
  id v17 = objc_msgSendSuper2(&v33, sel_init);
  sub_24162EF48();
  id v18 = v17;
  uint64_t v19 = sub_24162EF98();
  os_log_type_t v20 = sub_2416322E8();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v31 = a2;
    unint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v30 = v8;
    uint64_t v24 = v23;
    v35[0] = v23;
    *(_DWORD *)unint64_t v22 = 136446210;
    uint64_t v29 = v7;
    uint64_t v25 = sub_2411ABEB8();
    uint64_t v34 = sub_2411B6898(v25, v26, v35);
    sub_241632C28();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v19, v20, "[%{public}s] Initializing", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v24, -1, -1);
    uint64_t v27 = v22;
    a2 = v31;
    MEMORY[0x245621640](v27, -1, -1);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v29);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  sub_2411ABC80();

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a2, v32);
  return v18;
}

void sub_2411ABC80()
{
  swift_getObjectType();
  uint64_t v1 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v2 = objc_allocWithZone(MEMORY[0x263F45120]);
  id v17 = sub_24119A64C;
  uint64_t v18 = v1;
  uint64_t aBlock = MEMORY[0x263EF8330];
  unint64_t v14 = 1107296256;
  uint64_t v15 = sub_24119A5AC;
  id v16 = &unk_26F56C5A0;
  uint64_t v3 = _Block_copy(&aBlock);
  swift_retain();
  id v4 = objc_msgSend(v2, sel_initWithUpdateHandler_, v3);
  _Block_release(v3);
  swift_release();
  swift_release();
  uint64_t v5 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37MenstrualCyclesAnalysisChangeDetector_analysisQuery;
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37MenstrualCyclesAnalysisChangeDetector_analysisQuery);
  *(void *)(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37MenstrualCyclesAnalysisChangeDetector_analysisQuery) = v4;

  uint64_t v7 = *(void **)(v0 + v5);
  if (v7)
  {
    uint64_t aBlock = 0;
    unint64_t v14 = 0xE000000000000000;
    id v8 = v7;
    sub_2416333E8();
    sub_241631E08();
    swift_bridgeObjectRelease();
    sub_241631E08();
    sub_241632F68();
    uint64_t v9 = (void *)sub_241631CC8();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setDebugIdentifier_, v9);

    uint64_t v10 = *(void **)(v0 + v5);
    if (v10)
    {
      id v11 = v10;
      sub_24162C148();
      sub_2411B6854(&aBlock, (uint64_t)v16);
      uint64_t v12 = (void *)sub_24162C038();
      objc_msgSend(v12, sel_executeQuery_, v11);

      _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&aBlock);
    }
  }
}

uint64_t sub_2411ABEB8()
{
  return 0;
}

void sub_2411ABF50(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_2411ABFDC(void *a1, void *a2)
{
  return sub_2411ABFE8(a1, a2, *(uint64_t (**)(void))(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_2411ABFE8(void *a1, void *a2, uint64_t (*a3)(void), uint64_t a4, void *a5)
{
  uint64_t v10 = sub_24162EFA8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    uint64_t v38 = a4;
    sub_24162EF48();
    id v14 = a2;
    id v15 = a2;
    id v16 = sub_24162EF98();
    os_log_type_t v17 = sub_2416322C8();
    int v18 = v17;
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v37 = a3;
      uint64_t v20 = v19;
      uint64_t v36 = swift_slowAlloc();
      uint64_t v40 = v36;
      *(_DWORD *)uint64_t v20 = 136446466;
      HIDWORD(v35) = v18;
      uint64_t v21 = sub_2416333E8();
      uint64_t v39 = sub_2411B6898(v21, v22, &v40);
      sub_241632C28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2082;
      uint64_t v39 = (uint64_t)a2;
      id v23 = a2;
      sub_24128B6BC();
      uint64_t v24 = sub_241631D48();
      uint64_t v39 = sub_2411B6898(v24, v25, &v40);
      sub_241632C28();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24118E000, v16, BYTE4(v35), "[%{public}s] Failed to retrieve sleep event record: %{public}s", (uint8_t *)v20, 0x16u);
      uint64_t v26 = v36;
      swift_arrayDestroy();
      MEMORY[0x245621640](v26, -1, -1);
      uint64_t v27 = v20;
      a3 = v37;
      MEMORY[0x245621640](v27, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  id v28 = a1;
  id v29 = a5;
  unsigned int v30 = objc_msgSend(v29, sel_hasSleepFocusMode);
  if (a1)
  {
    LODWORD(a1) = objc_msgSend(v28, sel_isCurrentSleepCoachingOnboardingCompleted);
    unsigned int v31 = objc_msgSend(v28, sel_isCurrentSleepTrackingOnboardingCompleted);

    if (v31) {
      int v32 = 256;
    }
    else {
      int v32 = 0;
    }
  }
  else
  {

    int v32 = 0;
  }
  if (v30) {
    int v33 = 0x10000;
  }
  else {
    int v33 = 0;
  }
  return a3(v32 | a1 | v33);
}

uint64_t sub_2411AC308(int a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(a1 & 0x10101);
}

uint64_t sub_2411AC344(int a1)
{
  uint64_t v2 = *(uint64_t (**)(__int16 *))(v1 + 16);
  char v5 = BYTE2(a1);
  __int16 v4 = a1;
  char v6 = HIBYTE(a1) & 1;
  return v2(&v4);
}

uint64_t sub_2411AC390(void *a1, void *a2)
{
  return sub_2411AC398(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_2411AC398(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_241631488();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2416314A8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  id v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[0] = *(void *)(a3 + 24);
  id v16 = (void *)swift_allocObject();
  v16[2] = a1;
  v16[3] = a3;
  v16[4] = a2;
  void v16[5] = a4;
  aBlock[4] = sub_2411C8098;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2411987F4;
  aBlock[3] = &unk_26F578988;
  os_log_type_t v17 = _Block_copy(aBlock);
  id v18 = a1;
  swift_retain();
  id v19 = a2;
  sub_241631498();
  v21[1] = MEMORY[0x263F8EE78];
  sub_2411ACE78();
  sub_2411AB16C(0, (unint64_t *)&qword_26B013090, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
  sub_2411ACDF0();
  sub_241632D08();
  MEMORY[0x24561FA80](0, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

void sub_2411AC64C(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v8 = sub_241631488();
  uint64_t v51 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2416314A8();
  uint64_t v49 = *(void *)(v11 - 8);
  uint64_t v50 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24162EFA8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  os_log_type_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v18 = MEMORY[0x245621790](a4 + 16);
  if (v18)
  {
    id v19 = (void *)v18;
    if (a2)
    {
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v19;
      *(void *)(v20 + 24) = a2;
      uint64_t v57 = sub_241198838;
      uint64_t v58 = v20;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v54 = 1107296256;
      uint64_t v55 = sub_2411987F4;
      uint64_t v56 = &unk_26F56C640;
      uint64_t v21 = _Block_copy(&aBlock);
      id v22 = a2;
      id v23 = v19;
      id v24 = v22;
      sub_241631498();
      uint64_t v52 = MEMORY[0x263F8EE78];
      sub_2411ACE78();
      sub_2411ACED0(0, (unint64_t *)&qword_26B013090, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
      sub_2411ACDF0();
      sub_241632D08();
      MEMORY[0x24561FA80](0, v13, v10, v21);
      _Block_release(v21);

      (*(void (**)(char *, uint64_t))(v51 + 8))(v10, v8);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v13, v50);
      swift_release();
      sub_24162C158();
      if ((sub_24162C548() & 1) == 0)
      {
LABEL_11:

        return;
      }
      sub_24162C148();
      sub_2411B6854(&aBlock, (uint64_t)v56);
      unint64_t v25 = (void *)sub_24162C038();
      objc_msgSend(v25, sel_stopQuery_, a1);
    }
    else
    {
      sub_24162EF48();
      id v26 = v19;
      id v27 = a3;
      id v28 = v26;
      id v29 = a3;
      unsigned int v30 = sub_24162EF98();
      os_log_type_t v31 = sub_2416322C8();
      int v46 = v31;
      BOOL v32 = os_log_type_enabled(v30, v31);
      uint64_t v47 = a1;
      if (v32)
      {
        uint64_t v33 = swift_slowAlloc();
        id v48 = v28;
        uint64_t v34 = v33;
        uint64_t v45 = swift_slowAlloc();
        uint64_t aBlock = v45;
        *(_DWORD *)uint64_t v34 = 136446466;
        os_log_t v44 = v30;
        uint64_t v35 = sub_2411ABEB8();
        uint64_t v52 = sub_2411B6898(v35, v36, &aBlock);
        sub_241632C28();

        swift_bridgeObjectRelease();
        *(_WORD *)(v34 + 12) = 2080;
        uint64_t v52 = (uint64_t)a3;
        id v37 = a3;
        sub_2411ACED0(0, (unint64_t *)&qword_26B010860, (uint64_t (*)(uint64_t))sub_2411CE834, MEMORY[0x263F8D8F0]);
        uint64_t v38 = sub_241631D48();
        uint64_t v52 = sub_2411B6898(v38, v39, &aBlock);
        sub_241632C28();
        swift_bridgeObjectRelease();

        unsigned int v30 = v44;
        _os_log_impl(&dword_24118E000, v44, (os_log_type_t)v46, "[%{public}s] HKMCAnalysisQuery returned nil analysis with error: %s", (uint8_t *)v34, 0x16u);
        uint64_t v40 = v45;
        swift_arrayDestroy();
        MEMORY[0x245621640](v40, -1, -1);
        uint64_t v41 = v34;
        id v28 = v48;
        MEMORY[0x245621640](v41, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      uint64_t v42 = swift_allocObject();
      *(void *)(v42 + 16) = v28;
      uint64_t v57 = sub_24127F0EC;
      uint64_t v58 = v42;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v54 = 1107296256;
      uint64_t v55 = sub_2411987F4;
      uint64_t v56 = &unk_26F56C5F0;
      uint64_t v43 = _Block_copy(&aBlock);
      id v23 = v28;
      sub_241631498();
      uint64_t v52 = MEMORY[0x263F8EE78];
      sub_2411ACE78();
      sub_2411ACED0(0, (unint64_t *)&qword_26B013090, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
      sub_2411ACDF0();
      sub_241632D08();
      MEMORY[0x24561FA80](0, v13, v10, v43);
      _Block_release(v43);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v10, v8);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v13, v50);
      swift_release();
      sub_24162C158();
      if ((sub_24162C548() & 1) == 0) {
        goto LABEL_11;
      }
      sub_24162C148();
      sub_2411B6854(&aBlock, (uint64_t)v56);
      unint64_t v25 = (void *)sub_24162C038();
      objc_msgSend(v25, sel_stopQuery_, v47);
    }

    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&aBlock);
    goto LABEL_11;
  }
}

unint64_t sub_2411ACDF0()
{
  unint64_t result = qword_26B0130A0;
  if (!qword_26B0130A0)
  {
    sub_2411CE7D0(255, (unint64_t *)&qword_26B013090, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0130A0);
  }
  return result;
}

unint64_t sub_2411ACE78()
{
  unint64_t result = qword_26B013080;
  if (!qword_26B013080)
  {
    sub_241631488();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B013080);
  }
  return result;
}

void sub_2411ACED0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411ACF34(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411ACF98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411ACFFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411AD060(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411AD0C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2411AD128()
{
  uint64_t v1 = v0;
  sub_2411C54D4();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v80 = v2;
  uint64_t v81 = v3;
  MEMORY[0x270FA5388](v2);
  uint64_t v79 = (char *)v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263EFDBB0];
  sub_2411ADC5C(0, &qword_26B0102B8, (uint64_t (*)(uint64_t))sub_2411C54D4, sub_24135E768, MEMORY[0x263EFDBB0]);
  uint64_t v82 = v6;
  MEMORY[0x270FA5388](v6);
  os_log_type_t v78 = (char *)v61 - v7;
  sub_2411AB21C(0, &qword_26B00EC40, (uint64_t)&type metadata for HKMCAnalysisResult, MEMORY[0x263EFDE48]);
  uint64_t v63 = v8;
  uint64_t v64 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v61 - v9;
  sub_2411C2110();
  uint64_t v65 = v11;
  uint64_t v66 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v62 = (char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411AE620(0, (unint64_t *)&qword_26B0101E8, (void (*)(uint64_t))sub_2411C2110, (void (*)(uint64_t))sub_2411C0494, (void (*)(void))sub_2411C2198);
  uint64_t v77 = v13;
  MEMORY[0x270FA5388](v13);
  v61[1] = (char *)v61 - v14;
  sub_2411C5B40();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  id v19 = (char *)v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411ADC5C(0, &qword_26B010278, (uint64_t (*)(uint64_t))sub_2411C5B40, sub_24135E79C, v5);
  uint64_t v75 = v20;
  MEMORY[0x270FA5388](v20);
  sub_2411C44F4();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v72 = v21;
  uint64_t v73 = v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v69 = (char *)v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C21CC(0);
  uint64_t v74 = v24;
  uint64_t v76 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v68 = (char *)v61 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411AE620(0, &qword_26B0101D8, sub_2411C21CC, (void (*)(uint64_t))type metadata accessor for OvulationConfirmationHelpTileGenerator.Change, (void (*)(void))sub_2411C2214);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v70 = v26;
  uint64_t v71 = v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v67 = (char *)v61 - v28;
  id v29 = (int *)type metadata accessor for OvulationConfirmationHelpTileGenerator(0);
  unsigned int v30 = (void *)(v0 + v29[6]);
  uint64_t v32 = v30[3];
  uint64_t v31 = v30[4];
  sub_2411B6854(v30, v32);
  uint64_t v33 = v1 + v29[5];
  uint64_t v85 = sub_2411B25DC(v33, v32, v31);
  uint64_t v34 = (void *)(v1 + v29[7]);
  uint64_t v35 = v34[3];
  uint64_t v36 = v34[4];
  sub_2411B6854(v34, v35);
  uint64_t v86 = sub_2411B25DC(v33, v35, v36);
  id v37 = (void (*)(uint64_t))MEMORY[0x263F44998];
  sub_2411ADDDC(0, (unint64_t *)&qword_26B010480, MEMORY[0x263F44998]);
  sub_2411ADE40(&qword_26B010478, (unint64_t *)&qword_26B010480, v37);
  sub_24162F888();
  sub_24162C198();
  sub_24162F868();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t v86 = *(void *)(*(void *)(v1 + v29[10]) + 80);
  swift_beginAccess();
  sub_2411AB21C(0, (unint64_t *)&qword_26B00EC48, (uint64_t)&type metadata for HKMCAnalysisResult, MEMORY[0x263EFDE58]);
  swift_retain();
  sub_24162FC18();
  swift_endAccess();
  sub_2411C0C70();
  uint64_t v38 = v62;
  uint64_t v39 = v63;
  sub_24162FD48();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v10, v39);
  sub_2411C0494();
  sub_2411C2198();
  uint64_t v40 = v65;
  sub_24162FCE8();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v38, v40);
  uint64_t v41 = *(void *)(v1 + v29[9]);
  uint64_t v42 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  uint64_t v44 = sub_2411B01F0(v42, v43, v41);
  swift_bridgeObjectRelease();
  uint64_t v85 = v44;
  uint64_t v45 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  uint64_t v47 = sub_2411B01F0(v45, v46, v41);
  swift_bridgeObjectRelease();
  uint64_t v84 = v47;
  uint64_t v48 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  uint64_t v50 = sub_2411B01F0(v48, v49, v41);
  swift_bridgeObjectRelease();
  uint64_t v83 = v50;
  sub_2411ADDDC(0, &qword_26B010410, sub_2411C85F4);
  sub_2411ADE40((unint64_t *)&qword_26B010400, &qword_26B010410, sub_2411C85F4);
  uint64_t v51 = v79;
  sub_24162F8B8();
  sub_24162C198();
  uint64_t v52 = v80;
  sub_24162F898();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v51, v52);
  sub_2411ADDDC(0, &qword_26B010490, (void (*)(uint64_t))type metadata accessor for OvulationConfirmationState);
  sub_2411C2AE4();
  sub_2411ADE40(&qword_26B010488, &qword_26B010490, (void (*)(uint64_t))type metadata accessor for OvulationConfirmationState);
  sub_2411C2FFC();
  sub_2411C27F8();
  uint64_t v53 = v69;
  sub_24162F8E8();
  sub_24162C198();
  uint64_t v54 = v68;
  uint64_t v55 = v72;
  sub_24162F8C8();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v53, v55);
  type metadata accessor for OvulationConfirmationHelpTileGenerator.Change(0);
  sub_2411C2214();
  uint64_t v56 = v67;
  uint64_t v57 = v74;
  sub_24162FCE8();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v54, v57);
  sub_2411C3098();
  uint64_t v58 = v70;
  uint64_t v59 = sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v56, v58);
  return v59;
}

void sub_2411ADBDC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_2411ADC5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_2411ADCDC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_2411ADD5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_2411ADDDC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24162FA68();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2411ADE40(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2411ADDDC(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2411ADE90()
{
  uint64_t v1 = v0;
  sub_2411A8510(0, &qword_26B00EC40, (uint64_t)&type metadata for HKMCAnalysisResult, MEMORY[0x263EFDE48]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v39 - v5;
  sub_2411C2110();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411AE6B0(0, (unint64_t *)&qword_26B0101E8, (void (*)(uint64_t))sub_2411C2110, (void (*)(uint64_t))sub_2411C0494, (void (*)(void))sub_2411C2198);
  uint64_t v47 = v12;
  MEMORY[0x270FA5388](v12);
  v39[1] = (char *)v39 - v13;
  sub_2411C4860();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v44 = v14;
  uint64_t v45 = v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v41 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C22E4(0);
  uint64_t v46 = v17;
  uint64_t v48 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v40 = (char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411AE6B0(0, &qword_26B0101B8, sub_2411C22E4, (void (*)(uint64_t))type metadata accessor for CycleFactorsReminderGeneratorPipeline.Change, (void (*)(void))sub_2411C232C);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v42 = v19;
  uint64_t v43 = v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)v39 - v21;
  uint64_t v23 = type metadata accessor for CycleFactorsReminderGeneratorPipeline(0);
  swift_beginAccess();
  sub_2411A8510(0, (unint64_t *)&qword_26B00EC48, (uint64_t)&type metadata for HKMCAnalysisResult, MEMORY[0x263EFDE58]);
  sub_24162FC18();
  swift_endAccess();
  sub_2411C0C70();
  sub_24162FD48();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_2411C0494();
  sub_2411C2198();
  sub_24162FCE8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v24 = (void *)(v0 + *(int *)(v23 + 28));
  uint64_t v25 = v24[3];
  uint64_t v26 = v24[4];
  sub_2411B6854(v24, v25);
  uint64_t v51 = sub_2411B25DC(v1, v25, v26);
  uint64_t v50 = sub_2411AE844(v1);
  uint64_t v27 = *(void *)(v1 + *(int *)(v23 + 24));
  uint64_t v28 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  uint64_t v30 = sub_2411B01F0(v28, v29, v27);
  swift_bridgeObjectRelease();
  uint64_t v49 = v30;
  uint64_t v31 = (void (*)(uint64_t))MEMORY[0x263F44998];
  sub_2411AE7E0(0, (unint64_t *)&qword_26B010480, MEMORY[0x263F44998]);
  sub_2411C1570();
  sub_2411AE7E0(0, &qword_26B010410, sub_2411C85F4);
  sub_2411C2FFC();
  sub_2411AE790(&qword_26B010478, (unint64_t *)&qword_26B010480, v31);
  sub_2411AF6F4((unint64_t *)&unk_26B00EBC0, (void (*)(uint64_t))sub_2411C1570);
  sub_2411AE790((unint64_t *)&qword_26B010400, &qword_26B010410, sub_2411C85F4);
  uint64_t v32 = v41;
  sub_24162F8E8();
  sub_24162C198();
  uint64_t v33 = v40;
  uint64_t v34 = v44;
  sub_24162F8C8();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v32, v34);
  type metadata accessor for CycleFactorsReminderGeneratorPipeline.Change(0);
  sub_2411C232C();
  uint64_t v35 = v46;
  sub_24162FCE8();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v33, v35);
  sub_2411C31F4();
  uint64_t v36 = v42;
  uint64_t v37 = sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v22, v36);
  return v37;
}

void sub_2411AE590(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    unint64_t v8 = sub_24162F958();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411AE620(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    unint64_t v8 = sub_24162F958();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411AE6B0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    unint64_t v8 = sub_24162F958();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2411AE740(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2411A1564(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2411AE790(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2411AE7E0(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2411AE7E0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24162FA68();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2411AE844(uint64_t a1)
{
  uint64_t v73 = a1;
  sub_2411A8510(0, &qword_26B010588, MEMORY[0x263F8D4F8], MEMORY[0x263EFDDF8]);
  uint64_t v94 = v1;
  uint64_t v71 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v70 = (char *)&v66 - v2;
  uint64_t v69 = sub_24162EFA8();
  uint64_t v68 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v67 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24162C0E8();
  uint64_t v91 = *(void *)(v4 - 8);
  uint64_t v92 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v90 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24162CBF8();
  uint64_t v85 = *(void *)(v6 - 8);
  uint64_t v86 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v84 = (uint64_t)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24162C128();
  uint64_t v88 = *(void *)(v8 - 8);
  uint64_t v89 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v87 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_241632248();
  uint64_t v74 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  uint64_t v72 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C2DE8();
  uint64_t v78 = v11;
  uint64_t v77 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v75 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C2C6C();
  uint64_t v82 = *(void *)(v13 - 8);
  uint64_t v83 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v81 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24162B9E8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_24162BA08();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C85F4(0);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v25 = (char *)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_24162B718();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v66 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v93 = (char *)&v66 - v31;
  sub_24162B9A8();
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x263F078A8], v15);
  sub_24162B708();
  sub_24162B968();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v27 + 8);
  uint64_t v80 = v27 + 8;
  uint64_t v79 = v32;
  v32(v30, v26);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
    sub_2413DE370((uint64_t)v25, (uint64_t (*)(void))sub_2411C85F4);
    uint64_t v33 = v67;
    sub_24162EF48();
    uint64_t v34 = sub_24162EF98();
    os_log_type_t v35 = sub_2416322C8();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      v95[0] = v37;
      *(_DWORD *)uint64_t v36 = 136446210;
      v95[5] = sub_2411B6898(0xD000000000000025, 0x8000000241648750, v95);
      sub_241632C28();
      _os_log_impl(&dword_24118E000, v34, v35, "[%{public}s] Failed to subtract 3 months of the current date", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245621640](v37, -1, -1);
      MEMORY[0x245621640](v36, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v68 + 8))(v33, v69);
    LOBYTE(v95[0]) = 1;
    uint64_t v38 = v70;
    sub_24162FB98();
    sub_2411C0FD4();
    uint64_t v39 = v94;
    uint64_t v40 = sub_24162FCB8();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v38, v39);
  }
  else
  {
    uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    uint64_t v71 = v26;
    v41(v93, v25, v26);
    uint64_t v42 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
    uint64_t v44 = v43;
    sub_2411B9D00(0, &qword_26B0106B8);
    sub_2411BFCEC();
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_24163A4F0;
    *(void *)(v45 + 56) = MEMORY[0x263F8D310];
    *(void *)(v45 + 64) = sub_2411C0A14();
    *(void *)(v45 + 32) = v42;
    *(void *)(v45 + 40) = v44;
    uint64_t v46 = sub_24162B668();
    *(void *)(v45 + 96) = sub_2411B9D00(0, &qword_26B010760);
    *(void *)(v45 + 104) = sub_2411BFEE8();
    *(void *)(v45 + 72) = v46;
    uint64_t v47 = (void *)sub_241632188();
    sub_24162C148();
    sub_2411B6854(v95, v95[3]);
    uint64_t v48 = (void *)sub_24162C038();
    id v49 = (id)HKMCCycleFactorsTypes();
    sub_2411B9D00(0, (unint64_t *)&qword_26B0125F0);
    unint64_t v50 = sub_241631F28();

    if (v50 >> 62)
    {
      sub_2411B9D00(0, (unint64_t *)&qword_26B012368);
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      sub_241633058();
      swift_bridgeObjectRelease();
    }
    else
    {
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      sub_241633228();
      sub_2411B9D00(0, (unint64_t *)&qword_26B012368);
    }
    swift_bridgeObjectRelease();
    id v51 = v47;
    uint64_t v52 = v72;
    sub_241632268();

    swift_bridgeObjectRelease();
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v95);
    sub_2411AF6F4(&qword_26B0106F8, MEMORY[0x263F44AC8]);
    uint64_t v53 = v75;
    uint64_t v54 = v76;
    sub_24162FCE8();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v52, v54);
    sub_2411AF6F4(&qword_26B010200, (void (*)(uint64_t))sub_2411C2DE8);
    sub_2411C0FD4();
    uint64_t v55 = v81;
    uint64_t v56 = v78;
    sub_24162FD08();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v53, v56);
    sub_24162C1B8();
    sub_24162BDD8();
    sub_24119EEA8(0, (unint64_t *)&qword_26B012FC8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
    uint64_t v57 = sub_24162BD98();
    uint64_t v58 = *(void *)(v57 - 8);
    unint64_t v59 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
    uint64_t v60 = swift_allocObject();
    *(_OWORD *)(v60 + 16) = xmmword_241637EE0;
    (*(void (**)(unint64_t, void, uint64_t))(v58 + 104))(v60 + v59, *MEMORY[0x263F45548], v57);
    uint64_t v61 = v84;
    sub_2411B8B4C(v84);
    sub_24162CBE8();
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v61, v86);
    (*(void (**)(char *, void, uint64_t))(v91 + 104))(v90, *MEMORY[0x263F45688], v92);
    uint64_t v62 = v87;
    sub_24162C0F8();
    sub_2411AF6F4(&qword_26B010250, (void (*)(uint64_t))sub_2411C2C6C);
    uint64_t v63 = v83;
    uint64_t v64 = sub_24162FCA8();
    (*(void (**)(char *, uint64_t))(v88 + 8))(v62, v89);
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v95);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v55, v63);
    v95[0] = v64;
    sub_2411C1570();
    sub_2411AF6F4((unint64_t *)&unk_26B00EBC0, (void (*)(uint64_t))sub_2411C1570);
    uint64_t v40 = sub_24162FCB8();
    swift_release();

    v79(v93, v71);
  }
  return v40;
}

uint64_t sub_2411AF6F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2411AF73C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v50 = a3;
  sub_2411B0008();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v48 = v5;
  uint64_t v49 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v46 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_241632648();
  uint64_t v52 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v39 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411AFFCC(0);
  uint64_t v44 = v9;
  uint64_t v47 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v42 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  id v51 = (char *)&v37 - v12;
  sub_2411B00F8();
  uint64_t v43 = v13;
  uint64_t v45 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v41 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24162C4A8();
  uint64_t v53 = v15;
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v15;
  v16[3] = a1;
  v16[4] = a2;
  sub_2411B0A2C(0, &qword_26B0105F0, (void (*)(uint64_t))sub_2411ED5E8);
  uint64_t v38 = sub_2411ED5E8;
  sub_2411B09B8(0, &qword_26B0105B0, (uint64_t (*)(uint64_t))sub_2411ED5E8, MEMORY[0x263EFDE08]);
  sub_2411B0AA0(&qword_26B0105E8, &qword_26B0105F0, (void (*)(uint64_t))sub_2411ED5E8);
  sub_2411AFEBC();
  swift_retain();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_24162FD08();
  swift_release();
  swift_release();
  id v37 = self;
  id v17 = objc_msgSend(v37, sel_defaultCenter);
  uint64_t v53 = a1;
  uint64_t v54 = a2;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631E08();
  uint64_t v18 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  uint64_t v19 = v39;
  sub_241632658();

  uint64_t v20 = (void *)swift_allocObject();
  void v20[2] = v50;
  v20[3] = a1;
  void v20[4] = a2;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_retain();
  sub_24162FA48();
  sub_2411B09B8(0, (unint64_t *)&qword_26B010510, (uint64_t (*)(uint64_t))v38, MEMORY[0x263EFDCF0]);
  uint64_t v38 = (void (*)())v21;
  sub_2411B0970(&qword_26B010740, MEMORY[0x263F07CB0]);
  sub_2411AFF44();
  uint64_t v22 = v40;
  sub_24162FE18();
  swift_release();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v52 + 8);
  v52 += 8;
  v23(v19, v22);
  id v24 = objc_msgSend(v37, sel_defaultCenter);
  uint64_t v53 = a1;
  uint64_t v54 = a2;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631E08();
  uint64_t v25 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  sub_241632658();

  uint64_t v26 = (void *)swift_allocObject();
  void v26[2] = v50;
  v26[3] = a1;
  v26[4] = a2;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_retain();
  sub_24162FA48();
  uint64_t v27 = v42;
  sub_24162FE18();
  swift_release();
  v23(v19, v22);
  sub_2411B0970(&qword_26B010240, (void (*)(uint64_t))sub_2411B00F8);
  sub_2411B0970(&qword_26B0103B0, sub_2411AFFCC);
  uint64_t v28 = v46;
  uint64_t v29 = v51;
  uint64_t v31 = v43;
  uint64_t v30 = v44;
  uint64_t v32 = v41;
  sub_24162FD38();
  sub_2411B0970(&qword_26B010350, (void (*)(uint64_t))sub_2411B0008);
  uint64_t v33 = v48;
  uint64_t v34 = sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v28, v33);
  os_log_type_t v35 = *(void (**)(char *, uint64_t))(v47 + 8);
  v35(v27, v30);
  v35(v29, v30);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v32, v31);
  return v34;
}

unint64_t sub_2411AFEBC()
{
  unint64_t result = qword_26B0105A8;
  if (!qword_26B0105A8)
  {
    sub_2411B09B8(255, &qword_26B0105B0, (uint64_t (*)(uint64_t))sub_2411ED5E8, MEMORY[0x263EFDE08]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0105A8);
  }
  return result;
}

unint64_t sub_2411AFF44()
{
  unint64_t result = qword_26B010508;
  if (!qword_26B010508)
  {
    sub_2411B09B8(255, (unint64_t *)&qword_26B010510, (uint64_t (*)(uint64_t))sub_2411ED5E8, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B010508);
  }
  return result;
}

void sub_2411AFFCC(uint64_t a1)
{
}

void sub_2411B0008()
{
  if (!qword_26B010358)
  {
    sub_2411B00F8();
    sub_2411AFFCC(255);
    sub_2411B0970(&qword_26B010240, (void (*)(uint64_t))sub_2411B00F8);
    sub_2411B0970(&qword_26B0103B0, sub_2411AFFCC);
    unint64_t v0 = sub_24162F9B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010358);
    }
  }
}

void sub_2411B00F8()
{
  if (!qword_26B010248)
  {
    sub_2411B0A2C(255, &qword_26B0105F0, (void (*)(uint64_t))sub_2411ED5E8);
    sub_2411B09B8(255, &qword_26B0105B0, (uint64_t (*)(uint64_t))sub_2411ED5E8, MEMORY[0x263EFDE08]);
    sub_2411B0AA0(&qword_26B0105E8, &qword_26B0105F0, (void (*)(uint64_t))sub_2411ED5E8);
    sub_2411AFEBC();
    unint64_t v0 = sub_24162F978();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010248);
    }
  }
}

uint64_t sub_2411B01F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v50 = a3;
  sub_2411B0D1C();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v48 = v5;
  uint64_t v49 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v46 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_241632648();
  uint64_t v52 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v39 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411B0CE0(0);
  uint64_t v44 = v9;
  uint64_t v47 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v42 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  id v51 = (char *)&v37 - v12;
  sub_2411B0E0C();
  uint64_t v43 = v13;
  uint64_t v45 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v41 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24162C4D8();
  uint64_t v53 = v15;
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v15;
  v16[3] = a1;
  v16[4] = a2;
  sub_2411B0A2C(0, (unint64_t *)&unk_26B0105C0, sub_2411C85F4);
  uint64_t v38 = sub_2411C85F4;
  sub_2411B09B8(0, &qword_26B010598, (uint64_t (*)(uint64_t))sub_2411C85F4, MEMORY[0x263EFDE08]);
  sub_2411B0AA0(&qword_26B0105B8, (unint64_t *)&unk_26B0105C0, sub_2411C85F4);
  sub_2411B0BD0();
  swift_retain();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_24162FD08();
  swift_release();
  swift_release();
  id v37 = self;
  id v17 = objc_msgSend(v37, sel_defaultCenter);
  uint64_t v53 = a1;
  uint64_t v54 = a2;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631E08();
  uint64_t v18 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  uint64_t v19 = v39;
  sub_241632658();

  uint64_t v20 = (void *)swift_allocObject();
  void v20[2] = v50;
  v20[3] = a1;
  void v20[4] = a2;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_retain();
  sub_24162FA48();
  sub_2411B09B8(0, &qword_26B010410, (uint64_t (*)(uint64_t))v38, MEMORY[0x263EFDCF0]);
  uint64_t v38 = (void (*)(uint64_t))v21;
  sub_2411B0970(&qword_26B010740, MEMORY[0x263F07CB0]);
  sub_2411B0C58();
  uint64_t v22 = v40;
  sub_24162FE18();
  swift_release();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v52 + 8);
  v52 += 8;
  v23(v19, v22);
  id v24 = objc_msgSend(v37, sel_defaultCenter);
  uint64_t v53 = a1;
  uint64_t v54 = a2;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631E08();
  uint64_t v25 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  sub_241632658();

  uint64_t v26 = (void *)swift_allocObject();
  void v26[2] = v50;
  v26[3] = a1;
  v26[4] = a2;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_retain();
  sub_24162FA48();
  uint64_t v27 = v42;
  sub_24162FE18();
  swift_release();
  v23(v19, v22);
  sub_2411B0970(&qword_26B010230, (void (*)(uint64_t))sub_2411B0E0C);
  sub_2411B0970(&qword_26B010370, sub_2411B0CE0);
  uint64_t v28 = v46;
  uint64_t v29 = v51;
  uint64_t v31 = v43;
  uint64_t v30 = v44;
  uint64_t v32 = v41;
  sub_24162FD38();
  sub_2411B0970(&qword_26B010340, (void (*)(uint64_t))sub_2411B0D1C);
  uint64_t v33 = v48;
  uint64_t v34 = sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v28, v33);
  os_log_type_t v35 = *(void (**)(char *, uint64_t))(v47 + 8);
  v35(v27, v30);
  v35(v29, v30);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v32, v31);
  return v34;
}

uint64_t sub_2411B0970(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2411B09B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411B0A2C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_2411CE834();
    unint64_t v4 = sub_24162FBB8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2411B0AA0(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2411B0A2C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2411B0AF0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), void (*a5)(void))
{
  if (!*a2)
  {
    sub_2411B09B8(255, a3, a4, MEMORY[0x263EFDCF0]);
    sub_241632648();
    a5();
    sub_2411B0970(&qword_26B010740, MEMORY[0x263F07CB0]);
    unint64_t v7 = sub_24162F9D8();
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_2411B0BD0()
{
  unint64_t result = qword_26B010590;
  if (!qword_26B010590)
  {
    sub_2411B09B8(255, &qword_26B010598, (uint64_t (*)(uint64_t))sub_2411C85F4, MEMORY[0x263EFDE08]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B010590);
  }
  return result;
}

unint64_t sub_2411B0C58()
{
  unint64_t result = qword_26B010400;
  if (!qword_26B010400)
  {
    sub_2411B09B8(255, &qword_26B010410, (uint64_t (*)(uint64_t))sub_2411C85F4, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B010400);
  }
  return result;
}

void sub_2411B0CE0(uint64_t a1)
{
}

void sub_2411B0D1C()
{
  if (!qword_26B010348)
  {
    sub_2411B0E0C();
    sub_2411B0CE0(255);
    sub_2411B0970(&qword_26B010230, (void (*)(uint64_t))sub_2411B0E0C);
    sub_2411B0970(&qword_26B010370, sub_2411B0CE0);
    unint64_t v0 = sub_24162F9B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010348);
    }
  }
}

void sub_2411B0E0C()
{
  if (!qword_26B010238)
  {
    sub_2411B0A2C(255, (unint64_t *)&unk_26B0105C0, sub_2411C85F4);
    sub_2411B09B8(255, &qword_26B010598, (uint64_t (*)(uint64_t))sub_2411C85F4, MEMORY[0x263EFDE08]);
    sub_2411B0AA0(&qword_26B0105B8, (unint64_t *)&unk_26B0105C0, sub_2411C85F4);
    sub_2411B0BD0();
    unint64_t v0 = sub_24162F978();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010238);
    }
  }
}

uint64_t sub_2411B0F04(uint64_t a1)
{
  sub_2411B2C2C();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v25 = v3;
  uint64_t v26 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24162C1C8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  sub_2411B14F4(0, (unint64_t *)&qword_26B010600, (uint64_t (*)(uint64_t))sub_2411B2BF8, sub_2411B14C0, MEMORY[0x263EFDE30]);
  uint64_t v24 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v23 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  unint64_t v14 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v15 + v14, (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  sub_2411B2BF8(0);
  sub_2411B14C0();
  id v16 = v1;
  sub_24162FBE8();
  *(void *)(swift_allocObject() + 16) = v16;
  id v17 = v16;
  sub_24162FA48();
  uint64_t v18 = (uint64_t (*)(uint64_t))MEMORY[0x263F44998];
  sub_2411B134C(0, (unint64_t *)&qword_26B010480, MEMORY[0x263F44998], MEMORY[0x263EFDCF0]);
  sub_2411B1424();
  sub_2411B13C0(&qword_26B010478, (unint64_t *)&qword_26B010480, v18);
  uint64_t v19 = v24;
  sub_24162FE18();
  swift_release();
  sub_2411B680C(&qword_26B010380, (void (*)(uint64_t))sub_2411B2C2C);
  uint64_t v20 = v25;
  uint64_t v21 = sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v20);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v19);
  return v21;
}

void sub_2411B12E8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24162FB48();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2411B134C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2411B13C0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2411B134C(255, a2, a3, MEMORY[0x263EFDCF0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2411B1424()
{
  unint64_t result = qword_26B0105F8;
  if (!qword_26B0105F8)
  {
    sub_2411B14F4(255, (unint64_t *)&qword_26B010600, (uint64_t (*)(uint64_t))sub_2411B2BF8, sub_2411B14C0, MEMORY[0x263EFDE30]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0105F8);
  }
  return result;
}

uint64_t sub_2411B14C0()
{
  return sub_2411B680C(&qword_26B010468, sub_2411B2BF8);
}

void sub_2411B14F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_2411B1574(uint64_t a1)
{
  sub_2411B1CAC();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411B1DFC(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24162E7D8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411B1D98(a1, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_2412D0684((uint64_t)v9);
    sub_2411B9D00(0, (unint64_t *)&qword_26B010750);
    return sub_24162E828();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    sub_2411B9D00(0, (unint64_t *)&qword_26B010750);
    v21[0] = sub_24162E828();
    v21[1] = v21[0];
    sub_2411B6C0C(0, &qword_26B010788, MEMORY[0x263F44998], MEMORY[0x263F8E0F8]);
    unint64_t v15 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_241637EE0;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 16))(v16 + v15, v13, v10);
    uint64_t v17 = v3;
    uint64_t v18 = v4;
    uint64_t v19 = (uint64_t (*)(uint64_t))MEMORY[0x263F44998];
    sub_2411B134C(0, (unint64_t *)&qword_26B010480, MEMORY[0x263F44998], MEMORY[0x263EFDCF0]);
    sub_2411B13C0(&qword_26B010478, (unint64_t *)&qword_26B010480, v19);
    sub_24162FD88();
    swift_release();
    swift_bridgeObjectRelease();
    sub_2411B680C(&qword_26B010108, (void (*)(uint64_t))sub_2411B1CAC);
    uint64_t v14 = sub_24162FCB8();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v17);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  return v14;
}

uint64_t sub_2411B192C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v20 = a2;
  sub_2411B1CAC();
  uint64_t v4 = v3;
  uint64_t v19 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411B1DFC(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24162E7D8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411B1D98(a1, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_2412D0684((uint64_t)v9);
    uint64_t result = sub_24162E808();
    uint64_t v15 = result;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    uint64_t v21 = sub_24162E808();
    sub_2411B24BC(0, &qword_26B010788, MEMORY[0x263F44998], MEMORY[0x263F8E0F8]);
    unint64_t v16 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_241637EE0;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 16))(v17 + v16, v13, v10);
    sub_2411B2B90();
    sub_2411B2AD4(&qword_26B010478, (void (*)(uint64_t))sub_2411B2B90);
    sub_24162FD88();
    swift_release();
    swift_bridgeObjectRelease();
    sub_2411B2AD4(&qword_26B010108, (void (*)(uint64_t))sub_2411B1CAC);
    uint64_t v15 = sub_24162FCB8();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  *uint64_t v20 = v15;
  return result;
}

void sub_2411B1CAC()
{
  if (!qword_26B010110)
  {
    sub_2412D05A0();
    sub_2411B2B90();
    sub_2411B2AD4(&qword_26B0103E0, (void (*)(uint64_t))sub_2412D05A0);
    sub_2411B2AD4(&qword_26B010478, (void (*)(uint64_t))sub_2411B2B90);
    unint64_t v0 = sub_24162F918();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010110);
    }
  }
}

uint64_t sub_2411B1D98(uint64_t a1, uint64_t a2)
{
  sub_2411B1DFC(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2411B1DFC(uint64_t a1)
{
}

uint64_t sub_2411B1E30@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  v26[11] = a1;
  v26[12] = a3;
  uint64_t v27 = a4;
  uint64_t v28 = a2;
  uint64_t v4 = sub_24162EFA8();
  v26[8] = *(void *)(v4 - 8);
  v26[9] = v4;
  MEMORY[0x270FA5388](v4);
  v26[10] = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411B2574(0);
  v26[6] = *(void *)(v6 - 8);
  v26[7] = v6;
  MEMORY[0x270FA5388](v6);
  v26[5] = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24162E7D8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411B1DFC(0);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  v26[3] = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  unint64_t v16 = (char *)v26 - v15;
  sub_2411B25A8(0);
  uint64_t v18 = v17;
  uint64_t v19 = *(void *)(v17 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  v26[4] = (char *)v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)v26 - v22;
  sub_24162E7F8();
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v16, v11, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v16, 0, 1, v8);
  sub_24162FB98();
  sub_2411B2AD4((unint64_t *)&qword_26B010568, sub_2411B25A8);
  uint64_t v24 = sub_24162FCB8();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v23, v18);
  *uint64_t v27 = v24;
  return result;
}

void sub_2411B24BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411B2520(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241632C18();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2411B2574(uint64_t a1)
{
}

void sub_2411B25A8(uint64_t a1)
{
}

uint64_t sub_2411B25DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v38 = a1;
  uint64_t v39 = a3;
  sub_2411B2C2C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v43 = v4;
  uint64_t v44 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v42 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24162C1C8();
  uint64_t v33 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a2 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411B2D18();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v40 = v15;
  uint64_t v41 = v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v36 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v37 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v37(v14, v45, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v38, v7);
  uint64_t v18 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v19 = (v18 + 32) & ~v18;
  uint64_t v38 = v19 + v13;
  uint64_t v35 = v18 | 7;
  unint64_t v20 = (v19 + v13 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v39;
  *(void *)(v21 + 16) = a2;
  *(void *)(v21 + 24) = v22;
  uint64_t v34 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
  v34(v21 + v19, v14, a2);
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v21 + v20, v11, v33);
  sub_2411B2BF8(0);
  sub_2411B2AD4(&qword_26B010468, sub_2411B2BF8);
  uint64_t v23 = v36;
  sub_24162FBE8();
  v37(v14, v45, a2);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = a2;
  *(void *)(v24 + 24) = v22;
  v34(v24 + v19, v14, a2);
  sub_24162FA48();
  sub_2411B2B90();
  sub_2411B2AD4((unint64_t *)&qword_26B0105F8, (void (*)(uint64_t))sub_2411B2D18);
  sub_2411B2AD4(&qword_26B010478, (void (*)(uint64_t))sub_2411B2B90);
  uint64_t v25 = v42;
  uint64_t v26 = v40;
  uint64_t v27 = v23;
  sub_24162FE18();
  swift_release();
  sub_2411B2AD4(&qword_26B010380, (void (*)(uint64_t))sub_2411B2C2C);
  uint64_t v28 = v43;
  uint64_t v29 = v25;
  uint64_t v30 = sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v29, v28);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v27, v26);
  return v30;
}

uint64_t sub_2411B2AD4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2411B2B1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411B2B90()
{
  if (!qword_26B010480)
  {
    sub_24162E7D8();
    unint64_t v0 = sub_24162FA68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010480);
    }
  }
}

void sub_2411B2BF8(uint64_t a1)
{
}

void sub_2411B2C2C()
{
  if (!qword_26B010388)
  {
    sub_2411B2B90();
    sub_2411B2D18();
    sub_2411B2AD4(&qword_26B010478, (void (*)(uint64_t))sub_2411B2B90);
    sub_2411B2AD4((unint64_t *)&qword_26B0105F8, (void (*)(uint64_t))sub_2411B2D18);
    unint64_t v0 = sub_24162F9D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010388);
    }
  }
}

void sub_2411B2D18()
{
  if (!qword_26B010600)
  {
    sub_2411B2BF8(255);
    sub_2411B2AD4(&qword_26B010468, sub_2411B2BF8);
    unint64_t v0 = sub_24162FBF8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010600);
    }
  }
}

void *sub_2411B2DAC(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v131 = a3;
  uint64_t v100 = a2;
  uint64_t v133 = a5;
  uint64_t v134 = a1;
  uint64_t v124 = *a5;
  uint64_t v96 = sub_24162EFA8();
  uint64_t v95 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  uint64_t v123 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_24162C1C8();
  uint64_t v130 = *(void *)(v132 - 8);
  MEMORY[0x270FA5388](v132);
  uint64_t v113 = v8;
  uint64_t v118 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C3FB0();
  uint64_t v116 = v9;
  uint64_t v115 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v114 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C402C();
  uint64_t v120 = v11;
  uint64_t v119 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v117 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C40A8(0, &qword_26B0100D0, sub_2411C2700, (void (*)(void))sub_2411C2748);
  uint64_t v122 = v13;
  uint64_t v94 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v121 = (char *)&v91 - v14;
  sub_2411AB21C(0, &qword_26B00EC40, (uint64_t)&type metadata for HKMCAnalysisResult, MEMORY[0x263EFDE48]);
  uint64_t v104 = v15;
  uint64_t v103 = *((void *)v15 - 1);
  MEMORY[0x270FA5388](v15);
  uint64_t v102 = (char *)&v91 - v16;
  sub_2411C2110();
  uint64_t v107 = v17;
  uint64_t v106 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v105 = (char *)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C2F20();
  uint64_t v111 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v109 = (char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C5234();
  uint64_t v112 = v21;
  uint64_t v110 = *((void *)v21 - 1);
  MEMORY[0x270FA5388](v21);
  uint64_t v108 = (char *)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C2700(0);
  uint64_t v129 = v23;
  uint64_t v93 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v128 = (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411B6C0C(0, (unint64_t *)&unk_26B012FA0, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v99 = (char *)&v91 - v26;
  sub_2411C1AA4();
  uint64_t v126 = *(void *)(v27 - 8);
  uint64_t v127 = v27;
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v101 = (char *)&v91 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v125 = (char *)&v91 - v30;
  uint64_t v31 = sub_24162C0E8();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v34 = (char *)&v91 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_24162C128();
  uint64_t v36 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v38 = (char *)&v91 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin36LastMenstrualPeriodGeneratorPipeline_observer;
  *(void *)((char *)a5 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin36LastMenstrualPeriodGeneratorPipeline_observer) = a4;
  id v92 = a4;
  uint64_t v97 = sub_24162C178();
  sub_2411B6C0C(0, (unint64_t *)&qword_26B012FC8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v39 = sub_24162BD98();
  uint64_t v40 = *(void *)(v39 - 8);
  unint64_t v41 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_241637EE0;
  (*(void (**)(unint64_t, void, uint64_t))(v40 + 104))(v42 + v41, *MEMORY[0x263F454E8], v39);
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v34, *MEMORY[0x263F45688], v31);
  sub_24162C0F8();
  (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))((uint64_t)v133 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin36LastMenstrualPeriodGeneratorPipeline_domain, v38, v35);
  v136[5] = sub_2411B0F04(v134);
  sub_24162C148();
  sub_2411B6854(v136, v136[3]);
  sub_24162C078();
  uint64_t v43 = (uint64_t (*)(uint64_t))MEMORY[0x263F44998];
  sub_2411B134C(0, (unint64_t *)&qword_26B010480, MEMORY[0x263F44998], MEMORY[0x263EFDCF0]);
  uint64_t v45 = v44;
  sub_2411B13C0(&qword_26B010478, (unint64_t *)&qword_26B010480, v43);
  uint64_t v100 = v45;
  uint64_t v46 = (void *)sub_24162FCA8();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v135);
  swift_release();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v136);
  v136[0] = sub_24162C958();
  uint64_t v47 = (void *)MEMORY[0x245620E40]();
  if (!v47)
  {
    sub_2411B9D00(0, (unint64_t *)&qword_26B0130B0);
    uint64_t v47 = (void *)sub_2416325A8();
  }
  id v135 = v47;
  uint64_t v48 = sub_241632598();
  uint64_t v49 = (uint64_t)v99;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v99, 1, 1, v48);
  uint64_t v50 = (uint64_t (*)(uint64_t))MEMORY[0x263F43920];
  sub_2411B134C(0, &qword_26B012EB0, MEMORY[0x263F43920], MEMORY[0x263EFDCF0]);
  sub_2411B9D00(0, (unint64_t *)&qword_26B0130B0);
  sub_2411B13C0(&qword_26B012EA8, &qword_26B012EB0, v50);
  sub_2411A01FC((unint64_t *)&qword_26B012FB0, (unint64_t *)&qword_26B0130B0);
  id v51 = v125;
  sub_24162FDA8();
  sub_2411BFF50(v49);

  swift_release();
  id v135 = v46;
  swift_beginAccess();
  sub_2411AB21C(0, (unint64_t *)&qword_26B00EC48, (uint64_t)&type metadata for HKMCAnalysisResult, MEMORY[0x263EFDE58]);
  swift_retain();
  uint64_t v52 = v102;
  sub_24162FC18();
  swift_endAccess();
  sub_2411C0C70();
  uint64_t v53 = v105;
  uint64_t v54 = v104;
  sub_24162FD48();
  (*(void (**)(char *, void *))(v103 + 8))(v52, v54);
  sub_2411A868C(0, (unint64_t *)&qword_26B00EC60, (unint64_t *)&qword_26B012340);
  uint64_t v104 = v46;
  sub_2411B680C(&qword_26B010330, (void (*)(uint64_t))sub_2411C2110);
  uint64_t v55 = v107;
  sub_24162FCE8();
  (*(void (**)(char *, uint64_t))(v106 + 8))(v53, v55);
  (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v101, v51, v127);
  sub_2411B680C((unint64_t *)&qword_26B0101E0, (void (*)(uint64_t))sub_2411C2F20);
  sub_2411B680C(&qword_26B012E88, (void (*)(uint64_t))sub_2411C1AA4);
  uint64_t v56 = v108;
  sub_24162F8B8();
  sub_24162C198();
  uint64_t v57 = v112;
  sub_24162F898();
  (*(void (**)(char *, void (*)(void, void, void)))(v110 + 8))(v56, v57);
  uint64_t v58 = swift_allocObject();
  uint64_t v59 = v124;
  *(void *)(v58 + 16) = v124;
  uint64_t v60 = swift_allocObject();
  *(void *)(v60 + 16) = sub_2413598E4;
  *(void *)(v60 + 24) = v58;
  sub_2411C83EC();
  sub_2411C2748();
  uint64_t v61 = v114;
  sub_24162FCC8();
  swift_release();
  uint64_t v62 = v130;
  uint64_t v112 = *(void (**)(void, void, void))(v130 + 16);
  uint64_t v63 = v118;
  uint64_t v64 = v132;
  v112(v118, v134, v132);
  uint64_t v65 = *(unsigned __int8 *)(v62 + 80);
  uint64_t v66 = (v65 + 16) & ~v65;
  v113 += v66;
  uint64_t v111 = v65 | 7;
  unint64_t v67 = (v113 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v68 = swift_allocObject();
  uint64_t v69 = *(void (**)(uint64_t, char *, uint64_t))(v62 + 32);
  v69(v68 + v66, v63, v64);
  *(void *)(v68 + v67) = v59;
  uint64_t v70 = swift_allocObject();
  *(void *)(v70 + 16) = sub_241359A18;
  *(void *)(v70 + 24) = v68;
  sub_2411C02DC();
  uint64_t v71 = v117;
  uint64_t v72 = v116;
  sub_24162F8F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v115 + 8))(v61, v72);
  uint64_t v73 = v134;
  uint64_t v74 = v132;
  v112(v63, v134, v132);
  uint64_t v75 = swift_allocObject();
  v69(v75 + v66, v63, v74);
  uint64_t v76 = swift_allocObject();
  *(void *)(v76 + 16) = sub_241359B34;
  *(void *)(v76 + 24) = v75;
  sub_2411C8460(0, (unint64_t *)&qword_26B012630);
  uint64_t v77 = v121;
  uint64_t v78 = v120;
  sub_24162F8F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v119 + 8))(v71, v78);
  sub_2411C4144();
  uint64_t v79 = v122;
  uint64_t v80 = sub_24162FC88();
  uint64_t v81 = v133;
  v133[2] = v80;
  uint64_t v82 = v123;
  sub_24162EF48();
  uint64_t v83 = sub_24162EF98();
  os_log_type_t v84 = sub_2416322E8();
  if (os_log_type_enabled(v83, v84))
  {
    uint64_t v85 = (uint8_t *)swift_slowAlloc();
    uint64_t v86 = v74;
    uint64_t v87 = swift_slowAlloc();
    v136[0] = v87;
    *(_DWORD *)uint64_t v85 = 136446210;
    nullsub_1(v124);
    uint64_t v88 = sub_2416333E8();
    id v135 = (id)sub_2411B6898(v88, v89, v136);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v83, v84, "[%{public}s] Initializing", v85, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v87, -1, -1);
    MEMORY[0x245621640](v85, -1, -1);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v130 + 8))(v73, v86);
    (*(void (**)(char *, uint64_t))(v95 + 8))(v123, v96);
    (*(void (**)(char *, uint64_t))(v94 + 8))(v121, v122);
  }
  else
  {
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v130 + 8))(v73, v74);
    (*(void (**)(char *, uint64_t))(v95 + 8))(v82, v96);
    (*(void (**)(char *, uint64_t))(v94 + 8))(v77, v79);
  }
  (*(void (**)(char *, uint64_t))(v93 + 8))(v128, v129);
  (*(void (**)(char *, uint64_t))(v126 + 8))(v125, v127);
  return v81;
}

id sub_2411B4184(uint64_t a1)
{
  uint64_t v291 = *MEMORY[0x263EF8340];
  v271 = (void *)*v1;
  uint64_t v274 = sub_24162BA08();
  uint64_t v260 = *(void *)(v274 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v274);
  uint64_t v5 = (char *)&v254 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  v277 = (char *)&v254 - v6;
  uint64_t v267 = sub_24162C0E8();
  v266 = *(void (***)(void, void, void))(v267 - 8);
  MEMORY[0x270FA5388](v267);
  v265 = (char *)&v254 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v264 = (char *)sub_24162CBF8();
  v263 = (char *)*((void *)v264 - 1);
  MEMORY[0x270FA5388](v264);
  v262 = (char *)&v254 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v269 = (void *)sub_24162C128();
  v268 = (void *)*(v269 - 1);
  MEMORY[0x270FA5388](v269);
  v270 = (uint64_t *)((char *)&v254 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_24162C1C8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v254 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v254 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v254 - v18;
  uint64_t v20 = sub_24162EFA8();
  uint64_t v278 = *(void *)(v20 - 8);
  *(void *)&long long v279 = v20;
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  v257 = (char *)&v254 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  v258 = (char *)&v254 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v254 - v25;
  sub_24162EF48();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v283 = a1;
  v27(v19, a1, v10);
  uint64_t v28 = sub_24162EF98();
  os_log_type_t v29 = sub_2416322E8();
  v275 = v28;
  LODWORD(v261) = v29;
  BOOL v30 = os_log_type_enabled(v28, v29);
  v280 = v17;
  uint64_t v281 = v11 + 16;
  v282 = v27;
  v259 = v14;
  v273 = v5;
  if (v30)
  {
    uint64_t v31 = swift_slowAlloc();
    *(void *)&long long v256 = swift_slowAlloc();
    *(void *)&long long v288 = v256;
    *(_DWORD *)uint64_t v31 = 136446466;
    id v255 = (id)(v31 + 4);
    uint64_t v32 = sub_2416333E8();
    v284 = (void *)sub_2411B6898(v32, v33, (uint64_t *)&v288);
    sub_241632C28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2080;
    v27(v17, (uint64_t)v19, v10);
    uint64_t v34 = sub_241631D48();
    v284 = (void *)sub_2411B6898(v34, v35, (uint64_t *)&v288);
    uint64_t v36 = v283;
    sub_241632C28();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v19, v10);
    uint64_t v37 = v275;
    _os_log_impl(&dword_24118E000, v275, (os_log_type_t)v261, "[%{public}s] Creating pipelines for context: %s", (uint8_t *)v31, 0x16u);
    uint64_t v38 = v256;
    swift_arrayDestroy();
    MEMORY[0x245621640](v38, -1, -1);
    MEMORY[0x245621640](v31, -1, -1);

    (*(void (**)(char *, void))(v278 + 8))(v26, v279);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v19, v10);

    (*(void (**)(char *, void))(v278 + 8))(v26, v279);
    uint64_t v36 = v283;
  }
  if (sub_24162C188())
  {
    uint64_t v39 = (void *)sub_24162C178();
    uint64_t v40 = (void *)sub_24162BDD8();
    char v41 = sub_24162BDC8();

    if (v41)
    {
      sub_2411B6D38(0, &qword_26B012FD0, &qword_26B012610);
      uint64_t v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_241637EE0;
      uint64_t v43 = (uint64_t)v280;
      v282(v280, v36, v10);
      uint64_t v44 = type metadata accessor for MenstrualCyclesBrowseTileGeneratorPipeline();
      swift_allocObject();
      uint64_t v45 = sub_24119DAA0(v43);
      *(void *)(v42 + 56) = v44;
      *(void *)(v42 + 64) = sub_2411B680C(&qword_26B012948, (void (*)(uint64_t))type metadata accessor for MenstrualCyclesBrowseTileGeneratorPipeline);
      *(void *)(v42 + 32) = v45;
      return (id)v42;
    }
    return (id)MEMORY[0x263F8EE78];
  }
  uint64_t v276 = v10;
  id v261 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A130]), sel_init);
  sub_24162C148();
  sub_2411B6854(&v288, v289);
  uint64_t v46 = (void *)sub_24162C038();
  type metadata accessor for UserCharacteristics();
  swift_allocObject();
  uint64_t v47 = sub_2411B7B58(v46);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v288);
  swift_retain();
  sub_24162C148();
  v275 = v290;
  sub_2411B6854(&v288, v289);
  sub_24162BDD8();
  sub_2411B6C0C(0, (unint64_t *)&qword_26B012FC8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v48 = sub_24162BD98();
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = *(void *)(v49 + 72);
  unint64_t v51 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  uint64_t v52 = swift_allocObject();
  long long v256 = xmmword_24163A4F0;
  *(_OWORD *)(v52 + 16) = xmmword_24163A4F0;
  unint64_t v53 = v52 + v51;
  uint64_t v54 = *(void (**)(unint64_t, void, uint64_t))(v49 + 104);
  v54(v53, *MEMORY[0x263F45550], v48);
  v54(v53 + v50, *MEMORY[0x263F45580], v48);
  uint64_t v55 = v262;
  sub_2411B8B4C((uint64_t)v262);
  sub_24162CBE8();
  (*((void (**)(char *, char *))v263 + 1))(v55, v264);
  ((void (**)(char *, void, uint64_t))v266)[13](v265, *MEMORY[0x263F45688], v267);
  uint64_t v56 = v270;
  sub_24162C0F8();
  uint64_t v57 = (void *)sub_24162C068();
  uint64_t v58 = v269;
  v268 = (void *)v268[1];
  ((void (*)(void *, void *))v268)(v56, v269);
  id v59 = objc_allocWithZone((Class)type metadata accessor for UserCharacteristicsChangeDetector());
  uint64_t v267 = (uint64_t)v47;
  uint64_t v60 = sub_2411B6D98((uint64_t)v47, v57);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v288);
  uint64_t v61 = (void *)sub_24162C168();
  id v62 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F451B0]), sel_initWithHealthStore_, v61);

  uint64_t v63 = (void *)sub_24162C178();
  id v64 = v63;
  uint64_t v65 = (void *)sub_24162BDD8();
  char v66 = sub_24162BDC8();

  if ((v66 & 1) == 0)
  {
    uint64_t v97 = v268;
    uint64_t v98 = v60;
    if (!v63)
    {
      uint64_t v114 = v283;
      sub_24162C148();
      sub_2411B6854(&v288, v289);
      uint64_t v115 = v270;
      sub_2411B87C8((uint64_t)v270);
      uint64_t v116 = (void *)sub_24162C068();
      ((void (*)(void *, void *))v97)(v115, v58);
      _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v288);
      sub_24162C148();
      sub_2411B6854(&v288, v289);
      uint64_t v117 = (void *)sub_24162C038();
      id v118 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F451A0]), sel_initWithHealthStore_queue_, v117, v116);

      _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v288);
      type metadata accessor for MenstrualCyclesOnboardingChangeDetector();
      swift_allocObject();
      id v119 = v118;
      uint64_t v120 = v98;
      id v121 = v116;
      uint64_t v122 = sub_2411B838C(v119, v121);

      sub_2411B6C0C(0, (unint64_t *)&unk_26B0123F0, (uint64_t (*)(uint64_t))sub_2411C84B0, MEMORY[0x263F8E0F8]);
      uint64_t v123 = swift_allocObject();
      long long v279 = xmmword_24163CA90;
      *(_OWORD *)(v123 + 16) = xmmword_24163CA90;
      *(void *)(v123 + 56) = &type metadata for Period101ArticleDataProvider;
      *(void *)(v123 + 64) = sub_2411C7A1C();
      *(void *)(v123 + 72) = sub_2411C79C8();
      *(void *)(v123 + 104) = &type metadata for CycleFactorsArticleDataProvider;
      *(void *)(v123 + 112) = sub_2411C7368();
      *(void *)(v123 + 120) = sub_2411C7314();
      *(void *)(v123 + 152) = &type metadata for SpottingArticleDataProvider;
      *(void *)(v123 + 160) = sub_2411C7B6C();
      *(void *)(v123 + 168) = sub_2411C7B18();
      *(void *)(v123 + 200) = &type metadata for FertilityArticleDataProvider;
      *(void *)(v123 + 208) = sub_2411C7AC4();
      *(void *)(v123 + 216) = sub_2411C7A70();
      *(void *)&long long v288 = v123;
      uint64_t v124 = swift_allocObject();
      *(_OWORD *)(v124 + 16) = v279;
      *(void *)(v124 + 56) = &type metadata for PregnancyMedicationsArticleDataProvider;
      *(void *)(v124 + 64) = sub_2411C69C8();
      *(void *)(v124 + 72) = sub_2411C6974();
      uint64_t v125 = sub_24162C168();
      *(void *)(v124 + 104) = &type metadata for PregnancyArticleDataProvider;
      *(void *)(v124 + 112) = sub_2411C7974();
      *(void *)(v124 + 120) = sub_2411C7920();
      *(void *)(v124 + 80) = v125;
      *(void *)(v124 + 152) = &type metadata for PregnancyExerciseArticleDataProvider;
      *(void *)(v124 + 160) = sub_2411C7138();
      *(void *)(v124 + 168) = sub_2411C70E4();
      *(void *)(v124 + 200) = &type metadata for PregnancyWarningSignsArticleDataProvider;
      *(void *)(v124 + 208) = sub_2411C686C();
      *(void *)(v124 + 216) = sub_2411C6818();
      sub_2411924E0(v124);
      sub_2411B6D38(0, &qword_26B012FD0, &qword_26B012610);
      uint64_t v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_241637EE0;
      uint64_t v126 = (uint64_t)v280;
      v282(v280, v114, v276);
      uint64_t v127 = v288;
      uint64_t v128 = v120;
      id v129 = v62;
      swift_retain();
      uint64_t v130 = sub_2411929B4(v126, v127, (uint64_t)v122, (uint64_t)v128, v129);
      *(void *)(v42 + 56) = type metadata accessor for MenstrualCyclesArticlesGeneratorPipeline();
      *(void *)(v42 + 64) = sub_2411B680C(&qword_26B00F350, (void (*)(uint64_t))type metadata accessor for MenstrualCyclesArticlesGeneratorPipeline);
      *(void *)(v42 + 32) = v130;
      swift_release();

      swift_release();
      return (id)v42;
    }
    uint64_t v99 = (void (**)(void, void, void))v62;
    if (objc_msgSend(v64, sel_type) == (id)2)
    {
      sub_2411B6D38(0, &qword_26B012FD0, &qword_26B012610);
      uint64_t v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = v256;
      v265 = v60;
      uint64_t v100 = (uint64_t)v280;
      uint64_t v101 = v283;
      uint64_t v102 = v276;
      v266 = v99;
      uint64_t v103 = (void (*)(uint64_t, uint64_t, uint64_t))v282;
      v282(v280, v283, v276);
      uint64_t v104 = type metadata accessor for SharedProjectionHighlightFeedItemGeneratorPipeline();
      swift_allocObject();
      id v105 = v261;
      uint64_t v106 = sub_2411A58C4(v100, v105);
      *(void *)(v42 + 56) = v104;
      *(void *)(v42 + 64) = sub_2411B680C(&qword_26B00E9A8, (void (*)(uint64_t))type metadata accessor for SharedProjectionHighlightFeedItemGeneratorPipeline);
      *(void *)(v42 + 32) = v106;
      v103(v100, v101, v102);
      uint64_t v107 = type metadata accessor for SharedProjectionHighlightChartFeedItemGeneratorPipeline();
      swift_allocObject();
      uint64_t v108 = sub_2411A5210(v100);
      *(void *)(v42 + 96) = v107;
      *(void *)(v42 + 104) = sub_2411B680C(&qword_26B00EA78, (void (*)(uint64_t))type metadata accessor for SharedProjectionHighlightChartFeedItemGeneratorPipeline);
      *(void *)(v42 + 72) = v108;

      swift_release();
      return (id)v42;
    }

    swift_release();
    return (id)MEMORY[0x263F8EE78];
  }
  v266 = (void (**)(void, void, void))v62;
  v265 = v60;

  id v67 = objc_msgSend(v261, sel_currentCalendar);
  sub_24162B928();

  uint64_t v68 = v283;
  sub_24162C148();
  sub_2411B6854(&v288, v289);
  sub_2411B87C8((uint64_t)v56);
  uint64_t v69 = (void *)sub_24162C068();
  uint64_t v70 = v268;
  ((void (*)(void *, void *))v268)(v56, v58);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v288);
  sub_24162C148();
  sub_2411B6854(&v288, v289);
  uint64_t v71 = (void *)sub_24162C038();
  id v72 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F451A0]), sel_initWithHealthStore_queue_, v71, v69);

  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v288);
  type metadata accessor for MenstrualCyclesOnboardingChangeDetector();
  swift_allocObject();
  id v73 = v72;
  id v74 = v69;
  v275 = sub_2411B838C(v73, v74);

  sub_24162C148();
  sub_2411B6854(&v288, v289);
  sub_241194C24((uint64_t)v56);
  uint64_t v75 = (void *)sub_24162C068();
  ((void (*)(void *, void *))v70)(v56, v58);
  uint64_t v76 = (uint64_t)v280;
  v282(v280, v68, v276);
  id v77 = objc_allocWithZone((Class)type metadata accessor for MenstrualCyclesAnalysisChangeDetector());
  v269 = sub_2411AB938(v75, v76);

  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v288);
  sub_24162C148();
  sub_2411B6854(&v288, v289);
  uint64_t v78 = (void *)sub_24162C038();
  type metadata accessor for DaySummaryChangeDetector();
  swift_allocObject();
  v270 = sub_24119AC88(v78);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v288);
  sub_24162C148();
  sub_2411B6854(&v288, v289);
  uint64_t v79 = (void *)sub_24162C038();
  uint64_t v80 = v258;
  sub_24162EF48();
  uint64_t v81 = sub_2416333E8();
  unint64_t v83 = v82;
  v284 = 0;
  unint64_t v285 = 0xE000000000000000;
  sub_241632E78();
  swift_bridgeObjectRelease();
  v284 = (void *)v81;
  unint64_t v285 = v83;
  sub_241631E08();
  id v84 = objc_allocWithZone(MEMORY[0x263F75EA8]);
  id v85 = v79;
  uint64_t v86 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  id v87 = objc_msgSend(v84, sel_initWithIdentifier_healthStore_options_, v86, v85, 2);

  uint64_t v89 = v278;
  uint64_t v88 = v279;
  uint64_t v90 = (uint64_t)v257;
  (*(void (**)(char *, char *, void))(v278 + 16))(v257, v80, v279);
  id v91 = objc_allocWithZone((Class)type metadata accessor for SleepMeasurementsConfigurationProvider());
  id v92 = sub_24119EF70(v87, v90);

  (*(void (**)(char *, uint64_t))(v89 + 8))(v80, v88);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v288);
  id v93 = (id)*MEMORY[0x263F09798];
  sub_24162C148();
  sub_2411B6854(&v288, v289);
  uint64_t v94 = (void *)sub_24162C038();
  sub_2411B7D54();
  *(void *)&long long v256 = v73;
  id v255 = v74;
  if (v95)
  {
    uint64_t v96 = (void *)sub_241631CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v96 = 0;
  }
  uint64_t v109 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3D0]), sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v93, v94, v96);

  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v288);
  id v110 = (id)*MEMORY[0x263F097F8];
  sub_24162C148();
  sub_2411B6854(&v288, v289);
  uint64_t v111 = (void *)sub_24162C038();
  sub_2411B7D54();
  if (v112)
  {
    uint64_t v113 = (void *)sub_241631CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v113 = 0;
  }
  id v131 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3D0]), sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v110, v111, v113);

  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v288);
  id v132 = (id)*MEMORY[0x263F097B0];
  sub_24162C148();
  sub_2411B6854(&v288, v289);
  uint64_t v133 = (void *)sub_24162C038();
  sub_2411B7D54();
  v263 = v109;
  id v135 = v92;
  if (v134)
  {
    v136 = (void *)sub_241631CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v136 = 0;
  }
  v264 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3D0]), sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v132, v133, v136);

  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v288);
  uint64_t v137 = (uint64_t)v280;
  uint64_t v138 = v283;
  uint64_t v139 = v276;
  ((void (*)(char *, uint64_t))v282)(v280, v283);
  uint64_t v278 = *(void *)(v260 + 16);
  *(void *)&long long v279 = v260 + 16;
  uint64_t v140 = (uint64_t)v273;
  ((void (*)(char *, char *, uint64_t))v278)(v273, v277, v274);
  type metadata accessor for OvulationConfirmationStateProvider();
  v141 = (void *)swift_allocObject();
  v142 = v269;
  v143 = v275;
  swift_retain();
  v144 = v131;
  v269 = v144;
  id v145 = v135;
  uint64_t v146 = (uint64_t)v144;
  id v147 = v145;
  v268 = v145;
  v271 = sub_2411A90E0(v137, v142, (uint64_t)v143, v146, v145, v140, v141);

  swift_release();
  sub_24162C148();
  sub_2411B6854(&v288, v289);
  sub_24162C038();
  v148 = (objc_class *)sub_24162C968();
  sub_24162C928();
  id v149 = objc_allocWithZone(v148);
  id v272 = (id)sub_24162C948();
  swift_release();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v288);
  sub_2411B6D38(0, &qword_26B012FD0, &qword_26B012610);
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_2416455D0;
  uint64_t v150 = v138;
  uint64_t v151 = v139;
  uint64_t v152 = v139;
  uint64_t v153 = v138;
  v154 = (void (*)(uint64_t, uint64_t, uint64_t))v282;
  v282((char *)v137, v150, v152);
  uint64_t v155 = type metadata accessor for MenstrualCyclesOnboardingTileGeneratorPipeline();
  swift_allocObject();
  v156 = v142;
  v157 = v275;
  swift_retain();
  v258 = v265;
  uint64_t v158 = sub_2411A7118(v137, v156, (uint64_t)v157, v258);
  *(void *)(v42 + 56) = v155;
  *(void *)(v42 + 64) = sub_2411B680C(&qword_26B012A08, (void (*)(uint64_t))type metadata accessor for MenstrualCyclesOnboardingTileGeneratorPipeline);
  *(void *)(v42 + 32) = v158;
  v154(v137, v153, v151);
  uint64_t v159 = (uint64_t)v273;
  ((void (*)(char *, char *, uint64_t))v278)(v273, v277, v274);
  uint64_t v160 = type metadata accessor for ProjectionHighlightTileGeneratorPipeline();
  swift_allocObject();
  v161 = v156;
  swift_retain();
  uint64_t v162 = sub_2411A9C8C(v137, v161, (uint64_t)v157, v159);
  *(void *)(v42 + 96) = v160;
  *(void *)(v42 + 104) = sub_2411B680C(&qword_26B00FB28, (void (*)(uint64_t))type metadata accessor for ProjectionHighlightTileGeneratorPipeline);
  *(void *)(v42 + 72) = v162;
  uint64_t v163 = v153;
  uint64_t v164 = v153;
  v165 = (void (*)(uint64_t, uint64_t, uint64_t))v282;
  v282((char *)v137, v164, v151);
  uint64_t v166 = type metadata accessor for MenstrualCyclesBrowseTileGeneratorPipeline();
  swift_allocObject();
  uint64_t v167 = sub_24119DAA0(v137);
  *(void *)(v42 + 136) = v166;
  *(void *)(v42 + 144) = sub_2411B680C(&qword_26B012948, (void (*)(uint64_t))type metadata accessor for MenstrualCyclesBrowseTileGeneratorPipeline);
  *(void *)(v42 + 112) = v167;
  v165(v137, v163, v151);
  uint64_t MenstrualPeriodGeneratorPipeline = type metadata accessor for LastMenstrualPeriodGeneratorPipeline();
  v169 = (void *)swift_allocObject();
  v170 = v161;
  v265 = v170;
  v171 = v263;
  v257 = (char *)v272;
  v172 = sub_2411B2DAC(v137, (uint64_t)v171, v170, v257, v169);

  *(void *)(v42 + 176) = MenstrualPeriodGeneratorPipeline;
  *(void *)(v42 + 184) = sub_2411B680C(&qword_26B012718, (void (*)(uint64_t))type metadata accessor for LastMenstrualPeriodGeneratorPipeline);
  *(void *)(v42 + 152) = v172;
  v165(v137, v283, v151);
  uint64_t v173 = type metadata accessor for SharedProjectionHighlightFeedItemGeneratorPipeline();
  swift_allocObject();
  id v261 = v261;
  v174 = sub_2411A58C4(v137, v261);
  *(void *)(v42 + 216) = v173;
  *(void *)(v42 + 224) = sub_2411B680C(&qword_26B00E9A8, (void (*)(uint64_t))type metadata accessor for SharedProjectionHighlightFeedItemGeneratorPipeline);
  *(void *)(v42 + 192) = v174;
  v165(v137, v283, v151);
  uint64_t v175 = type metadata accessor for SharedProjectionHighlightChartFeedItemGeneratorPipeline();
  swift_allocObject();
  v176 = sub_2411A5210(v137);
  *(void *)(v42 + 256) = v175;
  *(void *)(v42 + 264) = sub_2411B680C(&qword_26B00EA78, (void (*)(uint64_t))type metadata accessor for SharedProjectionHighlightChartFeedItemGeneratorPipeline);
  *(void *)(v42 + 232) = v176;
  v165(v137, v283, v151);
  uint64_t v177 = type metadata accessor for MenstrualCyclesNotificationsSettingsGeneratorPipeline();
  swift_allocObject();
  v178 = v275;
  swift_retain();
  v179 = sub_24119A654(v137, (uint64_t)v178);
  swift_release();
  *(void *)(v42 + 296) = v177;
  *(void *)(v42 + 304) = sub_2411B680C(&qword_26B00E6C0, (void (*)(uint64_t))type metadata accessor for MenstrualCyclesNotificationsSettingsGeneratorPipeline);
  *(void *)(v42 + 272) = v179;
  uint64_t v180 = v151;
  v165(v137, v283, v151);
  id v272 = (id)sub_2411B9D00(0, (unint64_t *)&qword_26B010750);
  v181 = MEMORY[0x263F44B48];
  uint64_t v289 = (uint64_t)v272;
  v290 = MEMORY[0x263F44B48];
  *(void *)&long long v288 = v171;
  *(void *)(v42 + 336) = type metadata accessor for CycleFactorsReminderGeneratorPipeline(0);
  *(void *)(v42 + 344) = sub_2411B680C(&qword_26B00F8F0, (void (*)(uint64_t))type metadata accessor for CycleFactorsReminderGeneratorPipeline);
  v182 = sub_2411B6C70((uint64_t *)(v42 + 312));
  v183 = v265;
  v265 = v171;
  sub_241195544(v137, v183, &v288, (uint64_t)v182);
  v165(v137, v283, v180);
  v184 = (void *)*MEMORY[0x263F09930];
  v185 = v183;
  swift_retain();
  id v186 = v184;
  sub_24162C148();
  sub_2411B6854(&v288, v289);
  v187 = (void *)sub_24162C038();
  id v188 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A0C0]), sel_initWithLoggingCategory_healthDataSource_, v186, v187);

  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v288);
  *(void *)(v42 + 376) = type metadata accessor for CycleDeviationsUpdateTileGeneratorPipeline();
  *(void *)(v42 + 384) = sub_2411B680C(&qword_26B00FEA0, (void (*)(uint64_t))type metadata accessor for CycleDeviationsUpdateTileGeneratorPipeline);
  v189 = sub_2411B6C70((uint64_t *)(v42 + 352));
  sub_24119B6B8(v137, v185, (uint64_t)v178, (uint64_t)v188, (uint64_t)v189);
  v190 = (void (*)(uint64_t, uint64_t, uint64_t))v282;
  uint64_t v191 = v276;
  v282((char *)v137, v283, v276);
  v192 = v181;
  uint64_t v289 = (uint64_t)v272;
  v290 = v181;
  v193 = v265;
  v287 = v192;
  *(void *)&long long v288 = v265;
  id v286 = v272;
  v194 = v264;
  v284 = v264;
  *(void *)(v42 + 416) = type metadata accessor for OvulationConfirmationHelpTileGenerator(0);
  *(void *)(v42 + 424) = sub_2411B680C(&qword_26B00FA50, (void (*)(uint64_t))type metadata accessor for OvulationConfirmationHelpTileGenerator);
  v195 = sub_2411B6C70((uint64_t *)(v42 + 392));
  v196 = v185;
  v263 = v196;
  v197 = v193;
  v262 = v197;
  v198 = v194;
  v265 = v198;
  uint64_t v199 = (uint64_t)v271;
  swift_retain();
  sub_2411A3C34(v137, (uint64_t)&v288, (uint64_t)&v284, v196, v199, (uint64_t)v195);
  v190(v137, v283, v191);
  v200 = (void (*)(char *, uint64_t, uint64_t))v190;
  *(void *)(v42 + 456) = type metadata accessor for OvulationConfirmationFailureTileGenerator(0);
  *(void *)(v42 + 464) = sub_2411B680C(&qword_26B00FC98, (void (*)(uint64_t))type metadata accessor for OvulationConfirmationFailureTileGenerator);
  v201 = sub_2411B6C70((uint64_t *)(v42 + 432));
  swift_retain();
  sub_241198994(v137, v199, (uint64_t)v201);
  v202 = (int *)type metadata accessor for SleepOnboardingTileGenerator(0);
  *(void *)(v42 + 496) = v202;
  *(void *)(v42 + 504) = sub_2411B680C(&qword_26B00F5D8, (void (*)(uint64_t))type metadata accessor for SleepOnboardingTileGenerator);
  v203 = sub_2411B6C70((uint64_t *)(v42 + 472));
  v204 = (uint64_t *)((char *)v203 + v202[6]);
  uint64_t v205 = (uint64_t)v272;
  v204[3] = v272;
  v206 = MEMORY[0x263F44B48];
  v204[4] = MEMORY[0x263F44B48];
  void *v204 = v197;
  v207 = (char **)((char *)v203 + v202[7]);
  v207[3] = (char *)v205;
  v207[4] = (char *)v206;
  uint64_t v208 = v205;
  v209 = v206;
  *v207 = v198;
  uint64_t *v203 = 0xD000000000000026;
  v203[1] = 0x8000000241663E90;
  v200((char *)v203 + v202[5], v283, v191);
  v210 = v263;
  *(uint64_t *)((char *)v203 + v202[8]) = (uint64_t)v263;
  id v211 = v268;
  *(uint64_t *)((char *)v203 + v202[9]) = (uint64_t)v268;
  uint64_t v289 = v208;
  v290 = v209;
  id v212 = v269;
  *(void *)&long long v288 = v269;
  v213 = (int *)type metadata accessor for SleepingWristTemperatureHelpTileGenerator(0);
  *(void *)(v42 + 536) = v213;
  *(void *)(v42 + 544) = sub_2411B680C(&qword_26B00FDE0, (void (*)(uint64_t))type metadata accessor for SleepingWristTemperatureHelpTileGenerator);
  v214 = sub_2411B6C70((uint64_t *)(v42 + 512));
  uint64_t *v214 = 0xD000000000000020;
  v214[1] = 0x8000000241663EC0;
  id v215 = v211;
  v264 = v210;
  v269 = v212;
  v216 = v215;
  v263 = v262;
  v217 = v265;
  uint64_t v218 = v283;
  id v272 = v217;
  sub_24162EF48();
  uint64_t v219 = v276;
  v220 = v282;
  v282((char *)v214 + v213[6], v218, v276);
  sub_2411B6CD4(&v288, (uint64_t)v214 + v213[7]);
  uint64_t v221 = v213[8];
  v268 = v216;
  *(uint64_t *)((char *)v214 + v221) = (uint64_t)v216;
  uint64_t v222 = (uint64_t)v280;
  v220(v280, v218, v219);
  uint64_t v223 = (uint64_t)v273;
  ((void (*)(char *, char *, uint64_t))v278)(v273, v277, v274);
  uint64_t v224 = type metadata accessor for SummaryTileGeneratorPipeline();
  v225 = (void *)swift_allocObject();
  v226 = v275;
  swift_retain();
  v227 = v270;
  swift_retain();
  v228 = v266;
  v229 = sub_2411A1FE4(v222, (uint64_t)v227, (uint64_t)v226, v223, v228, v225);
  unint64_t v231 = *(void *)(v42 + 16);
  unint64_t v230 = *(void *)(v42 + 24);
  if (v231 >= v230 >> 1) {
    uint64_t v42 = (uint64_t)sub_2411BFE34((void *)(v230 > 1), v231 + 1, 1, (void *)v42);
  }
  uint64_t v232 = (uint64_t)v259;
  uint64_t v289 = v224;
  v290 = sub_2411B680C(&qword_26B012C50, (void (*)(uint64_t))type metadata accessor for SummaryTileGeneratorPipeline);
  *(void *)&long long v288 = v229;
  *(void *)(v42 + 16) = v231 + 1;
  sub_2411B6CD4(&v288, v42 + 40 * v231 + 32);
  v233 = (void *)sub_24162C168();
  id v234 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F45168]), sel_initWithHealthStore_, v233);

  v282((char *)v232, v218, v276);
  v235 = self;
  v236 = v228;
  id v237 = v234;
  id result = objc_msgSend(v235, sel_sharedBehavior);
  if (result)
  {
    v239 = result;
    char v240 = objc_msgSend(result, sel_isiPad);

    uint64_t v241 = type metadata accessor for SetupPregnancyModeFeaturesGenerator();
    uint64_t v242 = swift_allocObject();
    uint64_t v243 = sub_241194988(v232, v236, v237, v240, v242);

    unint64_t v244 = *(void *)(v42 + 16);
    unint64_t v245 = *(void *)(v42 + 24);
    swift_retain();
    if (v244 >= v245 >> 1) {
      uint64_t v42 = (uint64_t)sub_2411BFE34((void *)(v245 > 1), v244 + 1, 1, (void *)v42);
    }
    uint64_t v289 = v241;
    v290 = sub_2411B680C((unint64_t *)&unk_26B010D50, (void (*)(uint64_t))type metadata accessor for SetupPregnancyModeFeaturesGenerator);
    *(void *)&long long v288 = v243;
    *(void *)(v42 + 16) = v244 + 1;
    sub_2411B6CD4(&v288, v42 + 40 * v244 + 32);
    uint64_t v246 = (uint64_t)v280;
    v282(v280, v283, v276);
    uint64_t v247 = type metadata accessor for AddPregnancyFeedItemGenerator(0);
    uint64_t v248 = swift_allocObject();
    v249 = v263;
    v250 = v236;
    uint64_t v251 = sub_24119B2E8(v246, v250, (uint64_t)v249, v248);

    unint64_t v253 = *(void *)(v42 + 16);
    unint64_t v252 = *(void *)(v42 + 24);
    swift_retain();
    if (v253 >= v252 >> 1) {
      uint64_t v42 = (uint64_t)sub_2411BFE34((void *)(v252 > 1), v253 + 1, 1, (void *)v42);
    }
    uint64_t v289 = v247;
    v290 = sub_2411B680C(&qword_26B010CB8, (void (*)(uint64_t))type metadata accessor for AddPregnancyFeedItemGenerator);
    *(void *)&long long v288 = v251;
    *(void *)(v42 + 16) = v253 + 1;
    sub_2411B6CD4(&v288, v42 + 40 * v253 + 32);
    swift_release();

    swift_release();
    swift_release();
    swift_release();

    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v260 + 8))(v277, v274);
    return (id)v42;
  }
  __break(1u);
  return result;
}

uint64_t sub_2411B680C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_2411B6854(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_2411B6898(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_2411B6A18(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_2411B69BC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_2411B69BC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  }
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v12);
  return v7;
}

uint64_t _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_2411B69BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2411B6A18(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_241632C38();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_2411BFE50(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_241632F08();
  if (!v8)
  {
    sub_241633028();
    __break(1u);
LABEL_17:
    uint64_t result = sub_2416330E8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_2411B6BD4(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2411B6C0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t *sub_2411B6C70(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_2411B6CD4(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t type metadata accessor for UserCharacteristicsChangeDetector()
{
  uint64_t result = qword_26B012D60;
  if (!qword_26B012D60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2411B6D38(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_2411C8460(255, a3);
    unint64_t v4 = sub_2416331E8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

char *sub_2411B6D98(uint64_t a1, void *a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_24162EFA8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = &unk_268CFD000;
  *(void *)&v2[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin33UserCharacteristicsChangeDetector_userCharacteristics] = a1;
  uint64_t v10 = v2;
  swift_retain();
  id v11 = sub_2411B7180();
  char v13 = v12;
  swift_beginAccess();
  uint64_t v34 = (uint64_t)v11;
  char v35 = v13 & 1;
  sub_24162FC08();
  swift_endAccess();
  id v14 = sub_2411B77A4();
  swift_beginAccess();
  uint64_t v34 = (uint64_t)v14;
  type metadata accessor for HKBiologicalSex(0);
  sub_24162FC08();
  swift_endAccess();
  uint64_t v15 = &unk_268CFD000;
  *(void *)&v10[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin33UserCharacteristicsChangeDetector_observerQueue] = a2;
  id v16 = a2;

  uint64_t v17 = (objc_class *)type metadata accessor for UserCharacteristicsChangeDetector();
  v33.receiver = v10;
  v33.super_class = v17;
  uint64_t v18 = (char *)objc_msgSendSuper2(&v33, sel_init);
  sub_24162EF48();
  uint64_t v19 = sub_24162EF98();
  os_log_type_t v20 = sub_2416322E8();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v31 = v5;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v30 = v6;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc();
    v36[0] = v23;
    *(_DWORD *)uint64_t v22 = 136446210;
    os_log_type_t v29 = v8;
    uint64_t v24 = sub_2416333E8();
    uint64_t v34 = sub_2411B6898(v24, v25, v36);
    uint64_t v15 = (void *)&unk_268CFD000;
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v19, v20, "[%{public}s] Initializing", v22, 0xCu);
    swift_arrayDestroy();
    uint64_t v26 = v23;
    uint64_t v9 = (void *)&unk_268CFD000;
    MEMORY[0x245621640](v26, -1, -1);
    MEMORY[0x245621640](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v31);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  objc_msgSend(*(id *)(*(void *)&v18[v9[348]] + 24), sel_registerObserver_queue_, v18, *(void *)&v18[v15[349]]);

  swift_release();
  return v18;
}

void sub_2411B7100(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

void type metadata accessor for HKBiologicalSex(uint64_t a1)
{
}

uint64_t type metadata accessor for UserCharacteristics()
{
  return self;
}

id sub_2411B7180()
{
  v51[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = sub_24162EFA8();
  uint64_t v46 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v45 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_24162B718();
  uint64_t v3 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24162B138();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  char v12 = (char *)&v44 - v11;
  MEMORY[0x270FA5388](v10);
  id v14 = (char *)&v44 - v13;
  uint64_t v15 = (void *)v0[2];
  v51[0] = 0;
  id v16 = objc_msgSend(v15, sel_dateOfBirthComponentsWithError_, v51);
  id v17 = v51[0];
  if (v16)
  {
    uint64_t v18 = v16;
    sub_24162B088();
    id v19 = v17;

    id result = objc_msgSend(self, sel_hk_gregorianCalendarWithLocalTimeZone);
    if (result)
    {
      uint64_t v21 = result;
      sub_24162B708();
      uint64_t v22 = (void *)sub_24162B668();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v47);
      id v23 = objc_msgSend(v21, sel_hk_dateOfBirthDateComponentsWithDate_, v22);

      sub_24162B088();
      uint64_t v24 = sub_24162B068();
      unint64_t v25 = (void *)sub_24162B068();
      id v26 = objc_msgSend(v21, sel_components_fromDateComponents_toDateComponents_options_, 4, v24, v25, 0);

      sub_24162B088();
      uint64_t v27 = sub_24162B0D8();
      LOBYTE(v24) = v28;

      uint64_t v29 = v49;
      uint64_t v30 = *(void (**)(char *, uint64_t))(v48 + 8);
      v30(v9, v49);
      v30(v12, v29);
      v30(v14, v29);
      if (v24) {
        return 0;
      }
      else {
        return (id)v27;
      }
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    uint64_t v49 = v1;
    id v31 = v51[0];
    uint64_t v32 = (void *)sub_24162B348();

    swift_willThrow();
    objc_super v33 = v45;
    sub_24162EF48();
    swift_retain();
    id v34 = v32;
    swift_retain();
    id v35 = v32;
    uint64_t v36 = sub_24162EF98();
    os_log_type_t v37 = sub_2416322C8();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v39 = (void *)swift_slowAlloc();
      v51[0] = v39;
      *(_DWORD *)uint64_t v38 = 136446722;
      uint64_t v50 = *v0;
      sub_241513734();
      uint64_t v40 = sub_241631D48();
      uint64_t v50 = sub_2411B6898(v40, v41, (uint64_t *)v51);
      sub_241632C28();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2082;
      uint64_t v50 = sub_2411B6898(0x2928656741746567, 0xE800000000000000, (uint64_t *)v51);
      sub_241632C28();
      *(_WORD *)(v38 + 22) = 2082;
      swift_getErrorValue();
      uint64_t v42 = sub_241633298();
      uint64_t v50 = sub_2411B6898(v42, v43, (uint64_t *)v51);
      sub_241632C28();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24118E000, v36, v37, "[%{public}s.%{public}s] failed to get date of birth components with error: %{public}s", (uint8_t *)v38, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x245621640](v39, -1, -1);
      MEMORY[0x245621640](v38, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v46 + 8))(v33, v49);
    return 0;
  }
  return result;
}

id sub_2411B77A4()
{
  uint64_t v1 = v0;
  v28[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = sub_24162EFA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (void *)v0[2];
  v28[0] = 0;
  id v7 = objc_msgSend(v6, sel_biologicalSexWithError_, v28);
  if (v7)
  {
    uint64_t v8 = v7;
    id v9 = v28[0];
    id v10 = objc_msgSend(v8, sel_biologicalSex);
  }
  else
  {
    id v11 = v28[0];
    char v12 = (void *)sub_24162B348();

    swift_willThrow();
    sub_24162EF48();
    swift_retain();
    id v13 = v12;
    swift_retain();
    id v14 = v12;
    uint64_t v15 = sub_24162EF98();
    os_log_type_t v16 = sub_2416322C8();
    int v17 = v16;
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v18 = swift_slowAlloc();
      id v26 = (void *)swift_slowAlloc();
      v28[0] = v26;
      *(_DWORD *)uint64_t v18 = 136446722;
      HIDWORD(v25) = v17;
      uint64_t v27 = *v1;
      sub_241513734();
      uint64_t v19 = sub_241631D48();
      uint64_t v27 = sub_2411B6898(v19, v20, (uint64_t *)v28);
      sub_241632C28();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2082;
      uint64_t v27 = sub_2411B6898(0xD000000000000012, 0x800000024166F930, (uint64_t *)v28);
      sub_241632C28();
      *(_WORD *)(v18 + 22) = 2082;
      swift_getErrorValue();
      uint64_t v21 = sub_241633298();
      uint64_t v27 = sub_2411B6898(v21, v22, (uint64_t *)v28);
      sub_241632C28();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24118E000, v15, BYTE4(v25), "[%{public}s.%{public}s] failed to get biologicalSex with error: %{public}s", (uint8_t *)v18, 0x20u);
      id v23 = v26;
      swift_arrayDestroy();
      MEMORY[0x245621640](v23, -1, -1);
      MEMORY[0x245621640](v18, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  return v10;
}

void *sub_2411B7B58(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)*MEMORY[0x263F09930];
  id v5 = objc_allocWithZone(MEMORY[0x263F0A5A8]);
  id v6 = v4;
  id v7 = (void *)sub_241631CC8();
  id v8 = objc_msgSend(v5, sel_initWithName_loggingCategory_, v7, v6);

  v2[3] = v8;
  v2[4] = 0;
  v2[2] = a1;
  sub_2411B7D14();
  id v9 = a1;
  id v10 = (void *)sub_2416325A8();
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  id v12 = objc_allocWithZone(MEMORY[0x263F451F8]);
  void v17[4] = sub_2415137A4;
  v17[5] = v11;
  v17[0] = MEMORY[0x263EF8330];
  v17[1] = 1107296256;
  v17[2] = sub_2411987F4;
  v17[3] = &unk_26F575718;
  id v13 = _Block_copy(v17);
  swift_retain();
  id v14 = objc_msgSend(v12, sel_initWithQueue_completion_, v10, v13);

  _Block_release(v13);
  swift_release();

  swift_release();
  uint64_t v15 = (void *)v2[4];
  v2[4] = v14;

  return v2;
}

unint64_t sub_2411B7D14()
{
  unint64_t result = qword_26B0130B0;
  if (!qword_26B0130B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B0130B0);
  }
  return result;
}

uint64_t sub_2411B7D54()
{
  uint64_t v40 = *v0;
  uint64_t v1 = sub_24162EFA8();
  uint64_t v41 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v44 = &v35[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_24162C408();
  uint64_t v45 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  id v6 = &v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v42 = &v35[-v8];
  MEMORY[0x270FA5388](v7);
  unint64_t v43 = &v35[-v9];
  uint64_t v10 = sub_24162C468();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2411B8294();
  MEMORY[0x270FA5388](v14);
  os_log_type_t v16 = &v35[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24162C1A8();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v38 = v6;
    uint64_t v39 = v1;
    uint64_t v17 = v45;
    uint64_t v18 = v43;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v45 + 32))(v43, v16, v3);
    sub_24162EF48();
    uint64_t v19 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 16);
    unint64_t v20 = v42;
    v19(v42, v18, v3);
    uint64_t v21 = sub_24162EF98();
    os_log_type_t v22 = sub_2416322C8();
    int v23 = v22;
    BOOL v24 = os_log_type_enabled(v21, v22);
    uint64_t v25 = v41;
    if (v24)
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v47 = v37;
      *(_DWORD *)uint64_t v26 = 136446466;
      int v36 = v23;
      uint64_t v27 = sub_2416333E8();
      uint64_t v46 = sub_2411B6898(v27, v28, &v47);
      sub_241632C28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2082;
      v19(v38, v20, v3);
      uint64_t v29 = sub_241631D48();
      uint64_t v46 = sub_2411B6898(v29, v30, &v47);
      sub_241632C28();
      swift_bridgeObjectRelease();
      id v31 = *(void (**)(unsigned char *, uint64_t))(v45 + 8);
      v31(v20, v3);
      _os_log_impl(&dword_24118E000, v21, (os_log_type_t)v36, "[%{public}s] Performing feed item generation with no country code: %{public}s", (uint8_t *)v26, 0x16u);
      uint64_t v32 = v37;
      swift_arrayDestroy();
      MEMORY[0x245621640](v32, -1, -1);
      MEMORY[0x245621640](v26, -1, -1);
    }
    else
    {

      id v31 = *(void (**)(unsigned char *, uint64_t))(v45 + 8);
      v31(v20, v3);
    }
    (*(void (**)(unsigned char *, uint64_t))(v25 + 8))(v44, v39);
    v31(v43, v3);
    return 0;
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32))(v13, v16, v10);
    uint64_t v33 = sub_24162C458();
    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
  }
  return v33;
}

void sub_2411B8294()
{
  if (!qword_26B0107C0)
  {
    sub_24162C468();
    sub_24162C408();
    sub_2411B680C(&qword_26B00F230, MEMORY[0x263F457B0]);
    unint64_t v0 = sub_241633388();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0107C0);
    }
  }
}

uint64_t type metadata accessor for MenstrualCyclesOnboardingChangeDetector()
{
  uint64_t result = qword_26B012588;
  if (!qword_26B012588) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_2411B838C(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_24162EFA8();
  uint64_t v30 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411AB16C(0, &qword_26B010668, (uint64_t (*)(uint64_t))sub_2411B8770, MEMORY[0x263EFDE58]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v28 - v13;
  uint64_t v15 = (char *)v3
      + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin39MenstrualCyclesOnboardingChangeDetector__isOnboardingCompleted;
  LOBYTE(aBlock[0]) = 2;
  sub_2411B8770();
  sub_24162FC08();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v14, v11);
  v3[2] = a1;
  v3[3] = a2;
  id v16 = a1;
  id v17 = a2;
  sub_24162EF48();
  uint64_t v18 = sub_24162EF98();
  os_log_type_t v19 = sub_2416322E8();
  if (os_log_type_enabled(v18, v19))
  {
    unint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    aBlock[0] = v21;
    *(_DWORD *)unint64_t v20 = 136446210;
    uint64_t v29 = v7;
    uint64_t v22 = sub_2416333E8();
    uint64_t v31 = sub_2411B6898(v22, v23, aBlock);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v18, v19, "[%{public}s] Initializing", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v21, -1, -1);
    MEMORY[0x245621640](v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v29);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v7);
  }
  BOOL v24 = (void *)v3[2];
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v3;
  *(void *)(v25 + 24) = v6;
  aBlock[4] = (uint64_t)sub_2411AC38C;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_2411ABF50;
  aBlock[3] = (uint64_t)&unk_26F5789D8;
  uint64_t v26 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v24, sel_isAnyOnboardingVersionCompletedWithCompletion_, v26);
  _Block_release(v26);
  objc_msgSend((id)v3[2], sel_addObserver_queue_, v3, v3[3]);
  return v3;
}

void sub_2411B8770()
{
  if (!qword_26B0106A0)
  {
    unint64_t v0 = sub_241632C18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0106A0);
    }
  }
}

uint64_t sub_2411B87C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v19 = a1;
  uint64_t v1 = sub_24162C0E8();
  uint64_t v17 = *(void *)(v1 - 8);
  uint64_t v18 = v1;
  MEMORY[0x270FA5388](v1);
  id v16 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24162CBF8();
  uint64_t v3 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24162BDD8();
  sub_2411B6C0C(0, (unint64_t *)&qword_26B012FC8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v6 = sub_24162BD98();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 72);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_24163CAA0;
  unint64_t v11 = v10 + v9;
  uint64_t v12 = *(void (**)(unint64_t, void, uint64_t))(v7 + 104);
  v12(v11, *MEMORY[0x263F45550], v6);
  v12(v11 + v8, *MEMORY[0x263F45520], v6);
  v12(v11 + 2 * v8, *MEMORY[0x263F454F0], v6);
  v12(v11 + 3 * v8, *MEMORY[0x263F45578], v6);
  v12(v11 + 4 * v8, *MEMORY[0x263F454E8], v6);
  v12(v11 + 5 * v8, *MEMORY[0x263F45580], v6);
  v12(v11 + 6 * v8, *MEMORY[0x263F45570], v6);
  v12(v11 + 7 * v8, *MEMORY[0x263F45548], v6);
  sub_2411B8B4C((uint64_t)v5);
  sub_24162CBE8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v15);
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v16, *MEMORY[0x263F45688], v18);
  return sub_24162C0F8();
}

uint64_t sub_2411B8B4C@<X0>(uint64_t a1@<X8>)
{
  sub_2411B8F60();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24162CBC8();
  uint64_t v6 = sub_24162C208();
  if (*(void *)(v5 + 16) && (unint64_t v8 = sub_2411B8E04(v6, v7), (v9 & 1) != 0))
  {
    unint64_t v10 = v8;
    uint64_t v11 = *(void *)(v5 + 56);
    uint64_t v12 = sub_24162CBF8();
    uint64_t v13 = *(void *)(v12 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v4, v11 + *(void *)(v13 + 72) * v10, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v4, 0, 1, v12);
  }
  else
  {
    uint64_t v12 = sub_24162CBF8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v4, 1, 1, v12);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24162CBF8();
  uint64_t v14 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v12) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a1, v4, v12);
  }
  sub_241461940((uint64_t)v4);
  unint64_t v16 = 0;
  unint64_t v17 = 0xE000000000000000;
  sub_241632E78();
  swift_bridgeObjectRelease();
  unint64_t v16 = 0xD00000000000002BLL;
  unint64_t v17 = 0x800000024166CFD0;
  sub_24162C208();
  sub_241631E08();
  swift_bridgeObjectRelease();
  uint64_t result = sub_241633038();
  __break(1u);
  return result;
}

unint64_t sub_2411B8E04(uint64_t a1, uint64_t a2)
{
  sub_241633308();
  sub_241631DC8();
  uint64_t v4 = sub_241633358();

  return sub_2411B8E7C(a1, a2, v4);
}

unint64_t sub_2411B8E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    unint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_241633218() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_241633218() & 1) == 0);
    }
  }
  return v6;
}

void sub_2411B8F60()
{
  if (!qword_26B0130D0)
  {
    sub_24162CBF8();
    unint64_t v0 = sub_241632C18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0130D0);
    }
  }
}

uint64_t sub_2411B8FB8(void *a1)
{
  uint64_t v2 = sub_24162C0E8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24162CBF8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411B8B4C((uint64_t)v9);
  unint64_t v10 = sub_24162CBE8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  unint64_t v11 = sub_2411BEC6C(v10);
  swift_bridgeObjectRelease();
  if (v11)
  {
    uint64_t v12 = sub_2411B9F20(v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = sub_2411B9F20(MEMORY[0x263F8EE78]);
  }
  sub_2411BB02C(0, (unint64_t *)&qword_26B012FC8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v13 = sub_24162BD98();
  uint64_t v14 = *(void *)(v13 - 8);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_241637EE0;
  (*(void (**)(unint64_t, void, uint64_t))(v14 + 104))(v16 + v15, *MEMORY[0x263F454D0], v13);
  id v17 = a1;
  sub_2411B9F50(v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_2411B96DC(v12);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F45688], v2);
  return sub_24162C108();
}

uint64_t sub_2411B92C0(uint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v5 = a1;
  unint64_t v6 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_241632D88()) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v7 = MEMORY[0x263F8EE88];
    if (v6) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v12 = -1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = v5 + 56;
    uint64_t v9 = ~v12;
    uint64_t v13 = -v12;
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v11 = v14 & *(void *)(v5 + 56);
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t result = swift_retain();
    uint64_t v10 = 0;
    goto LABEL_11;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_6;
  }
LABEL_3:
  sub_2411B9660();
  uint64_t v7 = sub_241632E58();
  if (!v6) {
    goto LABEL_7;
  }
LABEL_4:
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_retain();
  sub_241632D48();
  sub_2411B9D00(0, a2);
  sub_2411A01AC(a4, a2);
  uint64_t result = sub_241632118();
  uint64_t v5 = v36;
  uint64_t v34 = v37;
  uint64_t v9 = v38;
  uint64_t v10 = v39;
  unint64_t v11 = v40;
LABEL_11:
  int64_t v15 = (unint64_t)(v9 + 64) >> 6;
  uint64_t v16 = v7 + 56;
  while (v5 < 0)
  {
    if (!sub_241632DC8()) {
      goto LABEL_45;
    }
    sub_2411B9D00(0, a2);
    swift_dynamicCast();
    unint64_t v20 = v35;
LABEL_36:
    uint64_t result = sub_2416329A8();
    uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v16 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(void *)(*(void *)(v7 + 48) + 8 * v17) = v20;
    ++*(void *)(v7 + 16);
  }
  if (v11)
  {
    unint64_t v18 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v19 = v18 | (v10 << 6);
LABEL_35:
    unint64_t v20 = *(void **)(*(void *)(v5 + 48) + 8 * v19);
    id v35 = v20;
    id v25 = v20;
    goto LABEL_36;
  }
  int64_t v21 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v21 >= v15) {
      goto LABEL_45;
    }
    unint64_t v22 = *(void *)(v34 + 8 * v21);
    uint64_t v23 = v10 + 1;
    if (!v22)
    {
      uint64_t v23 = v10 + 2;
      if (v10 + 2 >= v15) {
        goto LABEL_45;
      }
      unint64_t v22 = *(void *)(v34 + 8 * v23);
      if (!v22)
      {
        uint64_t v23 = v10 + 3;
        if (v10 + 3 >= v15) {
          goto LABEL_45;
        }
        unint64_t v22 = *(void *)(v34 + 8 * v23);
        if (!v22)
        {
          uint64_t v23 = v10 + 4;
          if (v10 + 4 >= v15) {
            goto LABEL_45;
          }
          unint64_t v22 = *(void *)(v34 + 8 * v23);
          if (!v22)
          {
            uint64_t v23 = v10 + 5;
            if (v10 + 5 >= v15) {
              goto LABEL_45;
            }
            unint64_t v22 = *(void *)(v34 + 8 * v23);
            if (!v22)
            {
              uint64_t v24 = v10 + 6;
              while (v15 != v24)
              {
                unint64_t v22 = *(void *)(v34 + 8 * v24++);
                if (v22)
                {
                  uint64_t v23 = v24 - 1;
                  goto LABEL_34;
                }
              }
LABEL_45:
              swift_release();
              sub_2411B96D4();
              return v7;
            }
          }
        }
      }
    }
LABEL_34:
    unint64_t v11 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v23 << 6);
    uint64_t v10 = v23;
    goto LABEL_35;
  }
LABEL_46:
  __break(1u);
  return result;
}

void sub_2411B9660()
{
  if (!qword_26B0123D0)
  {
    sub_2411B9D00(255, &qword_26B012350);
    sub_241256348();
    unint64_t v0 = sub_241632E68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0123D0);
    }
  }
}

uint64_t sub_2411B96D4()
{
  return swift_release();
}

uint64_t sub_2411B96DC(uint64_t a1)
{
  return sub_2411B92C0(a1, (unint64_t *)&qword_26B012368, 0x263F0A6E8, (unint64_t *)&qword_26B012370);
}

uint64_t sub_2411B96F8(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, void (*a5)(void))
{
  unint64_t v10 = a1 >> 62;
  if (a1 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_241633068();
    swift_bridgeObjectRelease();
  }
  sub_2411B9D00(0, a2);
  sub_2411A01FC(a4, a2);
  uint64_t result = sub_241632108();
  uint64_t v18 = result;
  if (v10)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v12 = sub_241633068();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v12) {
      return v18;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v12) {
      return v18;
    }
  }
  if (v12 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v12; ++i)
      {
        uint64_t v14 = (void *)MEMORY[0x245620370](i, a1);
        sub_2411B989C(&v17, v14, a2, a3, a5);
      }
    }
    else
    {
      int64_t v15 = (void **)(a1 + 32);
      do
      {
        uint64_t v16 = *v15++;
        sub_2411B989C(&v17, v16, a2, a3, a5);

        --v12;
      }
      while (v12);
    }
    return v18;
  }
  __break(1u);
  return result;
}

uint64_t sub_2411B989C(void *a1, void *a2, unint64_t *a3, uint64_t a4, void (*a5)(void))
{
  uint64_t v9 = v5;
  uint64_t v12 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v12 < 0) {
      uint64_t v13 = *v5;
    }
    else {
      uint64_t v13 = v12 & 0xFFFFFFFFFFFFFF8;
    }
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    id v14 = a2;
    uint64_t v15 = sub_241632D98();

    if (v15)
    {
      swift_bridgeObjectRelease();

      sub_2411B9D00(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v37;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_241632D88();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v27 = sub_2414A2BC8(v13, result + 1, a5, a3, a4, a5);
    uint64_t v38 = v27;
    unint64_t v28 = *(void *)(v27 + 16);
    if (*(void *)(v27 + 24) <= v28)
    {
      uint64_t v33 = v28 + 1;
      id v34 = v14;
      sub_2414A3E30(v33, a5);
      uint64_t v29 = v38;
    }
    else
    {
      uint64_t v29 = v27;
      id v30 = v14;
    }
    sub_2414A4E7C((uint64_t)v14, v29);
    *uint64_t v9 = v29;
    swift_bridgeObjectRelease();
    *a1 = v14;
  }
  else
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v17 = sub_2416329A8();
    uint64_t v18 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v19 = v17 & ~v18;
    if ((*(void *)(v12 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19))
    {
      sub_2411B9D00(0, a3);
      id v20 = *(id *)(*(void *)(v12 + 48) + 8 * v19);
      char v21 = sub_2416329B8();

      if (v21)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        id v25 = *(void **)(*(void *)(*v5 + 48) + 8 * v19);
        *a1 = v25;
        id v26 = v25;
        return 0;
      }
      uint64_t v22 = ~v18;
      while (1)
      {
        unint64_t v19 = (v19 + 1) & v22;
        if (((*(void *)(v12 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
          break;
        }
        id v23 = *(id *)(*(void *)(v12 + 48) + 8 * v19);
        char v24 = sub_2416329B8();

        if (v24) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v39 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    id v32 = a2;
    sub_2411B9B6C((uint64_t)v32, v19, isUniquelyReferenced_nonNull_native, a5, a3);
    *uint64_t v5 = v39;
    swift_bridgeObjectRelease();
    *a1 = v32;
  }
  return 1;
}

void sub_2411B9B6C(uint64_t a1, unint64_t a2, char a3, void (*a4)(void), unint64_t *a5)
{
  unint64_t v9 = *(void *)(*v5 + 16);
  unint64_t v10 = *(void *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v11 = v9 + 1;
  if (a3)
  {
    sub_2414A3E30(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_2414A691C(a4);
      goto LABEL_14;
    }
    sub_2414A7D48(v11, a4);
  }
  uint64_t v12 = *v5;
  uint64_t v13 = sub_2416329A8();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_2411B9D00(0, a5);
    id v15 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
    char v16 = sub_2416329B8();

    if (v16)
    {
LABEL_13:
      sub_241633258();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
        char v19 = sub_2416329B8();

        if (v19) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v20 + 48) + 8 * a2) = a1;
  uint64_t v21 = *(void *)(v20 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v23;
  }
}

uint64_t sub_2411B9D00(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_2411B9D3C(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v12 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_241632F38();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x245620370](i, v1);
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        self;
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_241632F18();
        sub_241632F48();
        sub_241632F58();
        sub_241632F28();
        if (v4 == v2) {
          return v12;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v1 + 32;
      while (1)
      {
        uint64_t v7 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        uint64_t v8 = *(void **)(v6 + 8 * v5);
        self;
        uint64_t v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v9;
        id v10 = v8;
        sub_241632F18();
        sub_241632F48();
        sub_241632F58();
        sub_241632F28();
        ++v5;
        if (v7 == v2) {
          return v12;
        }
      }
    }
    __break(1u);
LABEL_18:
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_241633068();
    swift_bridgeObjectRelease();
    sub_241632F38();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v2 = sub_241633068();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_2411B9F20(unint64_t a1)
{
  return sub_2411B96F8(a1, (unint64_t *)&qword_26B012368, 0x263F0A6E8, (unint64_t *)&qword_26B012370, (void (*)(void))sub_2414AF5C0);
}

uint64_t sub_2411B9F50(uint64_t a1)
{
  uint64_t v2 = sub_24162BD98();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_2411BA2AC();
    uint64_t v9 = sub_241632E58();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    id v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    id v15 = (void (**)(char *, uint64_t))(v11 - 8);
    BOOL v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_2411BA264(&qword_26B012488, MEMORY[0x263F45588]);
      uint64_t v16 = sub_241631B68();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_2411BA264(&qword_26B00E620, MEMORY[0x263F45588]);
          char v23 = sub_241631C28();
          char v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        id v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_2411BA264(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2411BA2AC()
{
  if (!qword_26B012FC0)
  {
    sub_24162BD98();
    sub_2411BA264(&qword_26B012488, MEMORY[0x263F45588]);
    unint64_t v0 = sub_241632E68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B012FC0);
    }
  }
}

void sub_2411BA340(uint64_t a1)
{
  uint64_t v97 = a1;
  uint64_t v1 = sub_24162C1C8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v95 = v3;
  uint64_t v96 = (char *)&v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C3D50();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C10B8(0);
  uint64_t v92 = *(void *)(v9 - 8);
  uint64_t v93 = v9;
  MEMORY[0x270FA5388](v9);
  id v91 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C08C8(0, &qword_26B012218, MEMORY[0x263F45630], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v87 = (uint64_t)&v77 - v12;
  uint64_t v13 = sub_24162EFA8();
  uint64_t v98 = *(void *)(v13 - 8);
  uint64_t v99 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  unint64_t v83 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v77 - v16;
  uint64_t v18 = sub_24162C018();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v86 = (char *)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  id v84 = (char *)&v77 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  id v26 = (char *)&v77 - v25;
  MEMORY[0x270FA5388](v24);
  BOOL v28 = (char *)&v77 - v27;
  sub_2411984D4();
  uint64_t v102 = v19;
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  uint64_t v94 = v28;
  uint64_t v82 = v19 + 16;
  uint64_t v81 = v29;
  v29(v26, v28, v18);
  unint64_t v30 = sub_2411BB0F4(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v32 = *(void *)(v30 + 16);
  unint64_t v31 = *(void *)(v30 + 24);
  uint64_t v89 = v1;
  uint64_t v90 = v8;
  uint64_t v88 = v2;
  if (v32 >= v31 >> 1) {
    unint64_t v30 = sub_2411BB0F4(v31 > 1, v32 + 1, 1, v30);
  }
  *(void *)(v30 + 16) = v32 + 1;
  uint64_t v33 = *(void (**)(unint64_t, char *, uint64_t))(v102 + 32);
  unint64_t v34 = (*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80);
  uint64_t v100 = v30;
  unint64_t v80 = v34;
  uint64_t v79 = *(void *)(v102 + 72);
  uint64_t v101 = v18;
  uint64_t v85 = v102 + 32;
  v33(v30 + v34 + v79 * v32, v26, v18);
  sub_24162EF48();
  id v35 = sub_24162EF98();
  os_log_type_t v36 = sub_2416322E8();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v78 = v6;
    uint64_t v38 = (uint8_t *)v37;
    uint64_t v39 = swift_slowAlloc();
    v104[0] = v39;
    *(_DWORD *)uint64_t v38 = 136446210;
    uint64_t v40 = sub_2416333E8();
    uint64_t v103 = sub_2411B6898(v40, v41, v104);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v35, v36, "[%{public}s] Submitting browse tile", v38, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v39, -1, -1);
    uint64_t v42 = v38;
    uint64_t v6 = v78;
    MEMORY[0x245621640](v42, -1, -1);
  }

  unint64_t v43 = *(void (**)(char *, uint64_t))(v98 + 8);
  v43(v17, v99);
  uint64_t v44 = v97;
  id v45 = objc_msgSend(self, sel_sharedBehavior);
  if (!v45)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v46 = v45;
  id v47 = objc_msgSend(v45, sel_features);

  if (!v47)
  {
LABEL_17:
    __break(1u);
    return;
  }
  unsigned int v48 = objc_msgSend(v47, sel_stanley);

  if (v48)
  {
    uint64_t v49 = (void *)sub_24162C178();
    uint64_t v50 = v87;
    sub_241196F84(v49, v87);

    uint64_t v51 = v101;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48))(v50, 1, v101) == 1)
    {
      sub_24133A84C(v50);
    }
    else
    {
      uint64_t v52 = v50;
      unint64_t v53 = v84;
      v33((unint64_t)v84, (char *)v52, v51);
      v81(v86, v53, v51);
      uint64_t v54 = v100;
      unint64_t v56 = *(void *)(v100 + 16);
      unint64_t v55 = *(void *)(v100 + 24);
      if (v56 >= v55 >> 1) {
        uint64_t v54 = sub_2411BB0F4(v55 > 1, v56 + 1, 1, v100);
      }
      *(void *)(v54 + 16) = v56 + 1;
      uint64_t v100 = v54;
      uint64_t v57 = v101;
      v33(v54 + v80 + v56 * v79, v86, v101);
      uint64_t v58 = v83;
      sub_24162EF48();
      id v59 = sub_24162EF98();
      os_log_type_t v60 = sub_2416322E8();
      if (os_log_type_enabled(v59, v60))
      {
        uint64_t v61 = (uint8_t *)swift_slowAlloc();
        uint64_t v62 = swift_slowAlloc();
        v104[0] = v62;
        *(_DWORD *)uint64_t v61 = 136446210;
        uint64_t v63 = sub_2416333E8();
        uint64_t v103 = sub_2411B6898(v63, v64, v104);
        sub_241632C28();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24118E000, v59, v60, "[%{public}s] Submitting sidebar tile", v61, 0xCu);
        swift_arrayDestroy();
        uint64_t v65 = v62;
        uint64_t v44 = v97;
        MEMORY[0x245621640](v65, -1, -1);
        MEMORY[0x245621640](v61, -1, -1);

        v43(v83, v99);
        (*(void (**)(char *, uint64_t))(v102 + 8))(v84, v101);
      }
      else
      {

        v43(v58, v99);
        (*(void (**)(char *, uint64_t))(v102 + 8))(v84, v57);
      }
    }
  }
  uint64_t v66 = v89;
  id v67 = v90;
  uint64_t v68 = v88;
  v104[0] = v100;
  sub_2411C0990(0);
  uint64_t v69 = v91;
  sub_24162FB98();
  sub_2411BB13C((unint64_t *)&unk_26B012EF0, sub_2411C10B8);
  uint64_t v70 = v93;
  uint64_t v71 = sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v69, v70);
  v104[0] = v71;
  id v72 = v96;
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v96, v44, v66);
  unint64_t v73 = (*(unsigned __int8 *)(v68 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
  unint64_t v74 = (v95 + v73 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v75 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v68 + 32))(v75 + v73, v72, v66);
  uint64_t v76 = (void *)(v75 + v74);
  void *v76 = 0xD000000000000021;
  v76[1] = 0x80000002416699E0;
  sub_2411C1788();
  sub_2411C07A8();
  sub_2411BB13C(&qword_26B012EB8, (void (*)(uint64_t))sub_2411C1788);
  sub_24162FCE8();
  swift_release();
  sub_2411BB13C(&qword_26B012E38, (void (*)(uint64_t))sub_2411C3D50);
  sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v67, v5);
  swift_release();
  (*(void (**)(char *, uint64_t))(v102 + 8))(v94, v101);
}

void sub_2411BAE38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411BAE9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411BAF00(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411BAF64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411BAFC8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411BB02C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411BB090(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2411BB0F4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2411BBB00(a1, a2, a3, a4, (unint64_t *)&unk_26B0123E0, MEMORY[0x263F45630], MEMORY[0x263F45630], MEMORY[0x263F45630]);
}

uint64_t sub_2411BB13C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2411BB184@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = sub_24162C518();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  unint64_t v83 = (uint64_t *)((char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v10);
  uint64_t v86 = (uint64_t *)((char *)&v66 - v12);
  sub_2411C85C0(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v77 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24162C2F8();
  uint64_t v92 = *(void *)(v15 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v95 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v96 = (char *)&v66 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  id v72 = (char *)&v66 - v21;
  uint64_t result = MEMORY[0x270FA5388](v20);
  uint64_t v85 = (char *)&v66 - v23;
  uint64_t v91 = *a1;
  uint64_t v76 = *(void *)(v91 + 16);
  if (v76)
  {
    uint64_t v84 = v8;
    uint64_t v89 = *(void *)(a3 + 16);
    if (v89)
    {
      id v67 = a4;
      uint64_t v24 = *(void *)(a2 + 16);
      uint64_t v88 = a3 + 32;
      uint64_t v25 = v92;
      uint64_t v97 = v92 + 16;
      id v26 = (void (**)(char *, uint64_t))(v92 + 8);
      uint64_t v81 = (void (**)(char *, char *, uint64_t))(v92 + 32);
      int v71 = *MEMORY[0x263F45880];
      uint64_t v82 = v9;
      uint64_t v79 = v9 + 32;
      unint64_t v80 = (void (**)(void))(v9 + 104);
      unint64_t v74 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v92 + 56);
      unsigned int v68 = *MEMORY[0x263F458A0];
      uint64_t v66 = a3;
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v27 = 0;
      uint64_t v28 = *(unsigned __int8 *)(v25 + 80);
      uint64_t v29 = (v28 + 32) & ~v28;
      uint64_t v75 = a2 + v29;
      uint64_t v69 = v28 | 7;
      uint64_t v70 = v29;
      uint64_t v73 = v91 + v29;
      unint64_t v30 = MEMORY[0x263F8EE78];
      long long v78 = xmmword_241637EE0;
      uint64_t v90 = a2;
      unint64_t v31 = v95;
      uint64_t v87 = v24;
      do
      {
        uint64_t v93 = v27;
        unint64_t v94 = v30;
        unint64_t v32 = (uint64_t *)(v88 + 16 * v27);
        uint64_t v33 = *v32;
        uint64_t v34 = v32[1];
        if (v24)
        {
          uint64_t v35 = *(void *)(v92 + 72);
          os_log_type_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v92 + 16);
          _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
          _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
          uint64_t v37 = v75;
          uint64_t v38 = v96;
          while (1)
          {
            v36(v38, v37, v15);
            if (sub_24162C2C8() == v33 && v39 == v34) {
              break;
            }
            char v40 = sub_241633218();
            swift_bridgeObjectRelease();
            if (v40) {
              goto LABEL_22;
            }
            uint64_t v38 = v96;
            (*v26)(v96, v15);
            v37 += v35;
            if (!--v24)
            {
              swift_bridgeObjectRelease();
              unint64_t v31 = v95;
              goto LABEL_15;
            }
          }
          swift_bridgeObjectRelease();
LABEL_22:
          uint64_t v49 = v84;
          swift_bridgeObjectRelease();
          uint64_t v50 = *v81;
          uint64_t v51 = v72;
          (*v81)(v72, v96, v15);
          swift_bridgeObjectRelease();
          uint64_t v52 = v85;
          v50(v85, v51, v15);
          sub_2411BDD64(0, &qword_26B00EC90, MEMORY[0x263F45738], MEMORY[0x263F8E0F8]);
          uint64_t v53 = v70;
          uint64_t v54 = swift_allocObject();
          *(_OWORD *)(v54 + 16) = v78;
          v36((char *)(v54 + v53), (uint64_t)v52, v15);
          uint64_t *v86 = v54;
          (*v80)();
          unint64_t v30 = v94;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v30 = sub_2411BBE0C(0, *(void *)(v30 + 16) + 1, 1, v30);
          }
          uint64_t v24 = v87;
          uint64_t v48 = v93;
          unint64_t v56 = *(void *)(v30 + 16);
          unint64_t v55 = *(void *)(v30 + 24);
          if (v56 >= v55 >> 1) {
            unint64_t v30 = sub_2411BBE0C(v55 > 1, v56 + 1, 1, v30);
          }
          *(void *)(v30 + 16) = v56 + 1;
          (*(void (**)(unint64_t, uint64_t *, uint64_t))(v82 + 32))(v30+ ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80))+ *(void *)(v82 + 72) * v56, v86, v49);
          (*v26)(v85, v15);
        }
        else
        {
          _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
LABEL_15:
          uint64_t v41 = *(void *)(v92 + 72);
          uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v92 + 16);
          _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
          uint64_t v43 = v73;
          uint64_t v44 = v76;
          while (1)
          {
            v42(v31, v43, v15);
            if (sub_24162C2C8() == v33 && v45 == v34) {
              break;
            }
            char v46 = sub_241633218();
            swift_bridgeObjectRelease();
            if (v46) {
              goto LABEL_27;
            }
            unint64_t v31 = v95;
            (*v26)(v95, v15);
            v43 += v41;
            if (!--v44)
            {
              swift_bridgeObjectRelease();
              uint64_t v47 = (uint64_t)v77;
              (*v74)(v77, 1, 1, v15);
              swift_bridgeObjectRelease();
              sub_2413655BC(v47, (uint64_t (*)(void))sub_2411C85C0);
              uint64_t v24 = v87;
              uint64_t v48 = v93;
              unint64_t v30 = v94;
              goto LABEL_6;
            }
          }
          swift_bridgeObjectRelease();
LABEL_27:
          unint64_t v30 = v94;
          uint64_t v57 = v95;
          uint64_t v24 = v87;
          uint64_t v48 = v93;
          swift_bridgeObjectRelease();
          uint64_t v58 = (uint64_t)v77;
          (*v81)(v77, v57, v15);
          (*v74)((char *)v58, 0, 1, v15);
          sub_2413655BC(v58, (uint64_t (*)(void))sub_2411C85C0);
          sub_2411BFDE8(0, (unint64_t *)&qword_26B013220, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
          uint64_t v59 = swift_allocObject();
          *(_OWORD *)(v59 + 16) = v78;
          *(void *)(v59 + 32) = v33;
          *(void *)(v59 + 40) = v34;
          os_log_type_t v60 = v83;
          uint64_t v61 = v84;
          *unint64_t v83 = v59;
          ((void (*)(uint64_t *, void, uint64_t))*v80)(v60, v68, v61);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v30 = sub_2411BBE0C(0, *(void *)(v30 + 16) + 1, 1, v30);
          }
          unint64_t v63 = *(void *)(v30 + 16);
          unint64_t v62 = *(void *)(v30 + 24);
          if (v63 >= v62 >> 1) {
            unint64_t v30 = sub_2411BBE0C(v62 > 1, v63 + 1, 1, v30);
          }
          *(void *)(v30 + 16) = v63 + 1;
          (*(void (**)(unint64_t, uint64_t *, uint64_t))(v82 + 32))(v30+ ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80))+ *(void *)(v82 + 72) * v63, v83, v61);
        }
        unint64_t v31 = v95;
LABEL_6:
        uint64_t v27 = v48 + 1;
      }
      while (v27 != v89);
      uint64_t result = swift_bridgeObjectRelease();
      a4 = v67;
    }
    else
    {
      unint64_t v30 = MEMORY[0x263F8EE78];
    }
    *a4 = v30;
  }
  else
  {
    sub_2411BDD64(0, &qword_26B00E668, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
    unint64_t v64 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v65 = swift_allocObject();
    *(_OWORD *)(v65 + 16) = xmmword_241637EE0;
    *(void *)(v65 + v64) = a2;
    (*(void (**)(void))(v9 + 104))();
    *a4 = v65;
    return _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  }
  return result;
}

uint64_t sub_2411BBB00(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  if (a3)
  {
    unint64_t v12 = *(void *)(a4 + 24);
    uint64_t v13 = v12 >> 1;
    if ((uint64_t)(v12 >> 1) < a2)
    {
      if (v13 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v12 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v13 = a2;
      }
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v13 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v13;
  }
  if (!v15)
  {
    uint64_t v19 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_2411BBDA8(0, a5, a6, MEMORY[0x263F8E0F8]);
  uint64_t v16 = *(void *)(a7(0) - 8);
  uint64_t v17 = *(void *)(v16 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = (void *)swift_allocObject();
  size_t v20 = j__malloc_size_1(v19);
  if (!v17 || (v20 - v18 == 0x8000000000000000 ? (BOOL v21 = v17 == -1) : (BOOL v21 = 0), v21))
  {
LABEL_29:
    uint64_t result = sub_241633028();
    __break(1u);
    return result;
  }
  void v19[2] = v14;
  v19[3] = 2 * ((uint64_t)(v20 - v18) / v17);
LABEL_19:
  uint64_t v22 = *(void *)(a7(0) - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v24 = (unint64_t)v19 + v23;
  if (a1)
  {
    if ((unint64_t)v19 < a4 || v24 >= a4 + v23 + *(void *)(v22 + 72) * v14)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v19 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_2411BBE54(0, v14, v24, a4, a8);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v19;
}

void sub_2411BBDA8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2411BBE0C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2411BBB00(a1, a2, a3, a4, &qword_26B00E668, MEMORY[0x263F458B0], MEMORY[0x263F458B0], MEMORY[0x263F458B0]);
}

uint64_t sub_2411BBE54(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_2411BBFB0(uint64_t a1, void *a2, char a3)
{
  uint64_t v5 = sub_24162EFA8();
  uint64_t v194 = *(void *)(v5 - 8);
  uint64_t v195 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  v190 = (char *)&v168 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  v183 = (char *)&v168 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v175 = (char *)&v168 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  v184 = (char *)&v168 - v13;
  MEMORY[0x270FA5388](v12);
  v176 = (char *)&v168 - v14;
  uint64_t v197 = type metadata accessor for SharedProjectionHighlightTileViewModelContextData();
  uint64_t v15 = MEMORY[0x270FA5388](v197);
  uint64_t v192 = (uint64_t)&v168 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  unint64_t v18 = (char *)&v168 - v17;
  sub_2411C85C0(0);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v188 = (uint64_t)&v168 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v187 = (uint64_t)&v168 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  id v26 = (char *)&v168 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v168 - v27;
  uint64_t v196 = sub_24162C2F8();
  uint64_t v198 = *(void *)(v196 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v196);
  v179 = (char *)&v168 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  v182 = (char *)&v168 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v177 = (char *)&v168 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  v181 = (char *)&v168 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v180 = (char *)&v168 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v191 = (char *)&v168 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  v178 = (char *)&v168 - v42;
  MEMORY[0x270FA5388](v41);
  v189 = (char *)&v168 - v43;
  sub_2411C1084(0);
  uint64_t v45 = v44;
  uint64_t v46 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v48 = (char *)&v168 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = MEMORY[0x263F8EE78];
  unint64_t v201 = MEMORY[0x263F8EE78];
  id v50 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A130]), sel_init);
  if (a3)
  {
    v171 = v48;
    uint64_t v172 = v46;
    uint64_t v173 = v45;
    id v51 = objc_msgSend(a2, sel_menstruationProjections);
    sub_2411B9D00(0, (unint64_t *)&qword_26B013120);
    uint64_t v52 = sub_241631F28();

    id v170 = v50;
    id v53 = v50;
    unint64_t v54 = sub_2411935B8(v52, v53);
    swift_bridgeObjectRelease();

    id v55 = objc_msgSend(a2, sel_fertileWindowProjections);
    unint64_t v56 = sub_241631F28();

    id v57 = v53;
    unint64_t v174 = sub_241192DA4(v56, v57);
    swift_bridgeObjectRelease();

    if (v54 >> 62)
    {
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v58 = sub_241633068();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v58 = *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v59 = (void (*)(char *, char *, void *))0xD000000000000027;
    os_log_type_t v60 = &off_241637000;
    if (!v58)
    {
      swift_bridgeObjectRelease();
      uint64_t v67 = *MEMORY[0x263F44A48];
      uint64_t v76 = *MEMORY[0x263F44A58];
LABEL_12:
      sub_2411BDD00(0, (unint64_t *)&unk_26B010790, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
      uint64_t v77 = sub_24162E868();
      uint64_t v78 = *(void *)(v77 - 8);
      unint64_t v79 = (*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
      uint64_t v80 = swift_allocObject();
      *(_OWORD *)(v80 + 16) = *((_OWORD *)v60 + 238);
      uint64_t v81 = (char *)(v80 + v79);
      uint64_t v82 = sub_24162E858();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v82 - 8) + 104))(v81, v67, v82);
      (*(void (**)(char *, uint64_t, uint64_t))(v78 + 104))(v81, v76, v77);
      unint64_t v83 = &v18[*(int *)(v197 + 24)];
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      sub_24162C3E8();
      uint64_t v84 = sub_24162C3F8();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v83, 0, 1, v84);
      *(void *)unint64_t v18 = 0;
      v18[8] = 0;
      sub_2411BDEA8(0xD00000000000002ELL, 0x8000000241655EE0, v80, (uint64_t)v18, (uint64_t)v26);
      uint64_t v74 = v198;
      a2 = (void *)v196;
      id v186 = *(void (**)(char *, void, uint64_t, uint64_t))(v198 + 56);
      v186(v26, 0, 1, v196);
      swift_bridgeObjectRelease();
      v185 = *(unsigned int (**)(char *, uint64_t, void *))(v74 + 48);
      if (v185(v26, 1, a2) != 1)
      {
        LODWORD(v193) = v76;
        uint64_t v59 = *(void (**)(char *, char *, void *))(v74 + 32);
        v59(v191, v26, a2);
        uint64_t v85 = v184;
        sub_24162EF48();
        uint64_t v86 = sub_24162EF98();
        os_log_type_t v87 = sub_2416322B8();
        if (os_log_type_enabled(v86, v87))
        {
          uint64_t v88 = (uint8_t *)swift_slowAlloc();
          uint64_t v89 = swift_slowAlloc();
          v200 = (char *)v89;
          *(_DWORD *)uint64_t v88 = 136446210;
          uint64_t v199 = sub_2411B6898(0xD000000000000027, 0x8000000241638B70, (uint64_t *)&v200);
          os_log_type_t v60 = &off_241637000;
          uint64_t v74 = v198;
          sub_241632C28();
          _os_log_impl(&dword_24118E000, v86, v87, "[%{public}s] Appending no data menstruation model", v88, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x245621640](v89, -1, -1);
          MEMORY[0x245621640](v88, -1, -1);

          (*(void (**)(char *, uint64_t))(v194 + 8))(v184, v195);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v194 + 8))(v85, v195);
        }
        uint64_t v81 = v180;
        (*(void (**)(char *, char *, void *))(v74 + 16))(v180, v191, a2);
        unint64_t v99 = v201;
        if (swift_isUniquelyReferenced_nonNull_native()) {
          goto LABEL_21;
        }
        goto LABEL_69;
      }
      sub_2411CB408((uint64_t)v26, (uint64_t (*)(void))sub_2411C85C0);
      while (1)
      {
LABEL_30:
        unint64_t v54 = v174;
        if (v174 >> 62)
        {
          _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
          unint64_t v99 = sub_241633068();
          swift_bridgeObjectRelease();
          if (!v99)
          {
LABEL_49:
            swift_bridgeObjectRelease();
            uint64_t v114 = *MEMORY[0x263F44A50];
            goto LABEL_50;
          }
        }
        else
        {
          unint64_t v99 = *(void *)((v174 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v99) {
            goto LABEL_49;
          }
        }
        LODWORD(v193) = v76;
        if ((v54 & 0xC000000000000001) != 0) {
          goto LABEL_67;
        }
        if (*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          uint64_t v107 = (char *)*(id *)(v54 + 32);
          goto LABEL_35;
        }
        __break(1u);
LABEL_69:
        unint64_t v99 = sub_2411BDE2C(0, *(void *)(v99 + 16) + 1, 1, v99);
LABEL_21:
        unint64_t v101 = *(void *)(v99 + 16);
        unint64_t v100 = *(void *)(v99 + 24);
        if (v101 >= v100 >> 1) {
          unint64_t v99 = sub_2411BDE2C(v100 > 1, v101 + 1, 1, v99);
        }
        *(void *)(v99 + 16) = v101 + 1;
        v59((char *)(v99+ ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80))+ *(void *)(v74 + 72) * v101), v81, a2);
        unint64_t v201 = v99;
        (*(void (**)(char *, void *))(v74 + 8))(v191, a2);
        uint64_t v59 = (void (*)(char *, char *, void *))0xD000000000000027;
        uint64_t v76 = v193;
      }
    }
    if ((v54 & 0xC000000000000001) != 0)
    {
      id v61 = (id)MEMORY[0x245620370](0, v54);
      goto LABEL_8;
    }
    if (*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v61 = *(id *)(v54 + 32);
LABEL_8:
      unint64_t v62 = v61;
      swift_bridgeObjectRelease();
      sub_2411BDD00(0, (unint64_t *)&unk_26B010790, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
      uint64_t v63 = *(void *)(sub_24162E868() - 8);
      unint64_t v64 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
      uint64_t v65 = swift_allocObject();
      *(_OWORD *)(v65 + 16) = xmmword_241637EE0;
      unint64_t v66 = v65 + v64;
      uint64_t v67 = *MEMORY[0x263F44A48];
      uint64_t v68 = sub_24162E858();
      (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 104))(v66, v67, v68);
      uint64_t v69 = *(void (**)(unint64_t))(v63 + 104);
      LODWORD(v193) = *MEMORY[0x263F44A58];
      v69(v66);
      uint64_t v70 = &v18[*(int *)(v197 + 24)];
      sub_24162C3E8();
      uint64_t v71 = sub_24162C3F8();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v70, 0, 1, v71);
      *(void *)unint64_t v18 = v62;
      v18[8] = 0;
      uint64_t v72 = v192;
      sub_2411BE9C8((uint64_t)v18, v192);
      uint64_t v73 = v62;
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v59 = (void (*)(char *, char *, void *))0xD000000000000027;
      sub_2411BDEA8(0xD00000000000002ELL, 0x8000000241655EE0, v65, v72, (uint64_t)v28);
      sub_2411CB408((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for SharedProjectionHighlightTileViewModelContextData);
      uint64_t v74 = v198;
      uint64_t v75 = v196;
      id v186 = *(void (**)(char *, void, uint64_t, uint64_t))(v198 + 56);
      v186(v28, 0, 1, v196);
      swift_bridgeObjectRelease();
      v185 = *(unsigned int (**)(char *, uint64_t, void *))(v74 + 48);
      if (v185(v28, 1, (void *)v75) != 1)
      {
        uint64_t v191 = v73;
        uint64_t v90 = *(void (**)(char *, char *, uint64_t))(v74 + 32);
        v184 = (char *)(v74 + 32);
        v90(v189, v28, v75);
        if (HKShowSensitiveLogItems())
        {
          uint64_t v91 = v176;
          sub_24162EF48();
          uint64_t v92 = v191;
          uint64_t v93 = sub_24162EF98();
          os_log_type_t v94 = sub_2416322B8();
          if (os_log_type_enabled(v93, v94))
          {
            uint64_t v95 = swift_slowAlloc();
            v169 = (void *)swift_slowAlloc();
            uint64_t v180 = (char *)swift_slowAlloc();
            v200 = v180;
            *(_DWORD *)uint64_t v95 = 136446466;
            uint64_t v199 = sub_2411B6898(0xD000000000000027, 0x8000000241638B70, (uint64_t *)&v200);
            sub_241632C28();
            *(_WORD *)(v95 + 12) = 2112;
            uint64_t v199 = (uint64_t)v92;
            uint64_t v96 = v92;
            uint64_t v59 = (void (*)(char *, char *, void *))0xD000000000000027;
            uint64_t v74 = v198;
            sub_241632C28();
            uint64_t v97 = v169;
            void *v169 = v62;

            _os_log_impl(&dword_24118E000, v93, v94, "[%{public}s] Appending menstruation model with projection: %@", (uint8_t *)v95, 0x16u);
            sub_2411CB3A0();
            swift_arrayDestroy();
            MEMORY[0x245621640](v97, -1, -1);
            uint64_t v98 = v180;
            swift_arrayDestroy();
            MEMORY[0x245621640](v98, -1, -1);
            MEMORY[0x245621640](v95, -1, -1);

            (*(void (**)(char *, uint64_t))(v194 + 8))(v176, v195);
          }
          else
          {

            (*(void (**)(char *, uint64_t))(v194 + 8))(v91, v195);
          }
        }
        uint64_t v81 = v178;
        (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v178, v189, v196);
        unint64_t v102 = v201;
        uint64_t v103 = (void (*)(unint64_t, char *, uint64_t))v90;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v102 = sub_2411BDE2C(0, *(void *)(v102 + 16) + 1, 1, v102);
        }
        uint64_t v76 = v193;
        os_log_type_t v60 = &off_241637000;
        unint64_t v105 = *(void *)(v102 + 16);
        unint64_t v104 = *(void *)(v102 + 24);
        if (v105 >= v104 >> 1) {
          unint64_t v102 = sub_2411BDE2C(v104 > 1, v105 + 1, 1, v102);
        }
        *(void *)(v102 + 16) = v105 + 1;
        uint64_t v106 = (void *)v196;
        v103(v102+ ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80))+ *(void *)(v74 + 72) * v105, v81, v196);
        a2 = v106;

        unint64_t v201 = v102;
        (*(void (**)(char *, void *))(v74 + 8))(v189, v106);
        goto LABEL_30;
      }

      sub_2411CB408((uint64_t)v28, (uint64_t (*)(void))sub_2411C85C0);
      uint64_t v76 = v193;
      os_log_type_t v60 = &off_241637000;
      goto LABEL_12;
    }
    __break(1u);
LABEL_67:
    uint64_t v107 = (char *)MEMORY[0x245620370](0, v54);
LABEL_35:
    uint64_t v108 = v107;
    swift_bridgeObjectRelease();
    sub_2411BDD00(0, (unint64_t *)&unk_26B010790, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
    uint64_t v109 = sub_24162E868();
    uint64_t v110 = *(void *)(v109 - 8);
    unint64_t v111 = (*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80);
    uint64_t v112 = swift_allocObject();
    *(_OWORD *)(v112 + 16) = *((_OWORD *)v60 + 238);
    unint64_t v113 = v112 + v111;
    uint64_t v114 = *MEMORY[0x263F44A50];
    uint64_t v115 = sub_24162E858();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 104))(v113, v114, v115);
    (*(void (**)(unint64_t, void, uint64_t))(v110 + 104))(v113, v193, v109);
    uint64_t v116 = &v18[*(int *)(v197 + 24)];
    sub_24162C3E8();
    uint64_t v117 = sub_24162C3F8();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v117 - 8) + 56))(v116, 0, 1, v117);
    *(void *)unint64_t v18 = v108;
    v18[8] = 1;
    uint64_t v118 = v192;
    sub_2411BE9C8((uint64_t)v18, v192);
    uint64_t v191 = v108;
    id v119 = v108;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v120 = v187;
    sub_2411BDEA8(0xD00000000000002FLL, 0x8000000241655EB0, v112, v118, v187);
    sub_2411CB408((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for SharedProjectionHighlightTileViewModelContextData);
    uint64_t v121 = v198;
    v186((char *)v120, 0, 1, (uint64_t)a2);
    swift_bridgeObjectRelease();
    if (v185((char *)v120, 1, a2) == 1)
    {

      sub_2411CB408(v120, (uint64_t (*)(void))sub_2411C85C0);
      uint64_t v76 = v193;
LABEL_50:
      sub_2411BDD00(0, (unint64_t *)&unk_26B010790, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
      uint64_t v137 = sub_24162E868();
      uint64_t v138 = *(void *)(v137 - 8);
      unint64_t v139 = (*(unsigned __int8 *)(v138 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80);
      uint64_t v140 = swift_allocObject();
      *(_OWORD *)(v140 + 16) = *((_OWORD *)v60 + 238);
      unint64_t v141 = v140 + v139;
      uint64_t v142 = sub_24162E858();
      (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v142 - 8) + 104))(v141, v114, v142);
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v138 + 104))(v141, v76, v137);
      v143 = &v18[*(int *)(v197 + 24)];
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      sub_24162C3E8();
      uint64_t v144 = sub_24162C3F8();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v144 - 8) + 56))(v143, 0, 1, v144);
      *(void *)unint64_t v18 = 0;
      v18[8] = 1;
      uint64_t v145 = v188;
      sub_2411BDEA8(0xD00000000000002FLL, 0x8000000241655EB0, v140, (uint64_t)v18, v188);
      uint64_t v146 = v198;
      v186((char *)v145, 0, 1, (uint64_t)a2);
      swift_bridgeObjectRelease();
      if (v185((char *)v145, 1, a2) == 1)
      {
        sub_2411CB408(v145, (uint64_t (*)(void))sub_2411C85C0);
        v136 = v190;
      }
      else
      {
        id v147 = *(void (**)(char *, uint64_t, void *))(v146 + 32);
        v148 = v182;
        v147(v182, v145, a2);
        id v149 = v183;
        sub_24162EF48();
        uint64_t v150 = sub_24162EF98();
        os_log_type_t v151 = sub_2416322B8();
        BOOL v152 = os_log_type_enabled(v150, v151);
        v136 = v190;
        if (v152)
        {
          uint64_t v153 = (uint8_t *)swift_slowAlloc();
          uint64_t v154 = swift_slowAlloc();
          v200 = (char *)v154;
          *(_DWORD *)uint64_t v153 = 136446210;
          uint64_t v199 = sub_2411B6898(0xD000000000000027, 0x8000000241638B70, (uint64_t *)&v200);
          v148 = v182;
          uint64_t v146 = v198;
          sub_241632C28();
          _os_log_impl(&dword_24118E000, v150, v151, "[%{public}s] Appending no data fertile window model", v153, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x245621640](v154, -1, -1);
          MEMORY[0x245621640](v153, -1, -1);

          (*(void (**)(char *, uint64_t))(v194 + 8))(v183, v195);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v194 + 8))(v149, v195);
        }
        uint64_t v155 = v179;
        (*(void (**)(char *, char *, void *))(v146 + 16))(v179, v148, a2);
        unint64_t v156 = v201;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v156 = sub_2411BDE2C(0, *(void *)(v156 + 16) + 1, 1, v156);
        }
        unint64_t v158 = *(void *)(v156 + 16);
        unint64_t v157 = *(void *)(v156 + 24);
        if (v158 >= v157 >> 1) {
          unint64_t v156 = sub_2411BDE2C(v157 > 1, v158 + 1, 1, v156);
        }
        *(void *)(v156 + 16) = v158 + 1;
        v147((char *)(v156+ ((*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80))+ *(void *)(v146 + 72) * v158), (uint64_t)v155, a2);
        unint64_t v201 = v156;
        (*(void (**)(char *, void *))(v146 + 8))(v148, a2);
      }
    }
    else
    {
      uint64_t v122 = *(void (**)(char *, uint64_t, void *))(v121 + 32);
      uint64_t v123 = v181;
      v122(v181, v120, a2);
      if (HKShowSensitiveLogItems())
      {
        uint64_t v124 = v175;
        sub_24162EF48();
        uint64_t v125 = v119;
        uint64_t v126 = sub_24162EF98();
        os_log_type_t v127 = sub_2416322B8();
        if (os_log_type_enabled(v126, v127))
        {
          uint64_t v128 = swift_slowAlloc();
          v193 = (void *)swift_slowAlloc();
          uint64_t v197 = swift_slowAlloc();
          v200 = (char *)v197;
          *(_DWORD *)uint64_t v128 = 136446466;
          uint64_t v199 = sub_2411B6898(0xD000000000000027, 0x8000000241638B70, (uint64_t *)&v200);
          sub_241632C28();
          *(_WORD *)(v128 + 12) = 2112;
          uint64_t v199 = (uint64_t)v125;
          id v129 = v125;
          a2 = (void *)v196;
          uint64_t v121 = v198;
          sub_241632C28();
          uint64_t v130 = v193;
          void *v193 = v191;

          _os_log_impl(&dword_24118E000, v126, v127, "[%{public}s] Appending fertile window model with projection: %@", (uint8_t *)v128, 0x16u);
          sub_2411CB3A0();
          swift_arrayDestroy();
          MEMORY[0x245621640](v130, -1, -1);
          uint64_t v131 = v197;
          swift_arrayDestroy();
          MEMORY[0x245621640](v131, -1, -1);
          MEMORY[0x245621640](v128, -1, -1);

          (*(void (**)(char *, uint64_t))(v194 + 8))(v175, v195);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v194 + 8))(v124, v195);
        }
        uint64_t v123 = v181;
      }
      id v132 = v177;
      (*(void (**)(char *, char *, void *))(v121 + 16))(v177, v123, a2);
      unint64_t v133 = v201;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v133 = sub_2411BDE2C(0, *(void *)(v133 + 16) + 1, 1, v133);
      }
      unint64_t v135 = *(void *)(v133 + 16);
      unint64_t v134 = *(void *)(v133 + 24);
      if (v135 >= v134 >> 1) {
        unint64_t v133 = sub_2411BDE2C(v134 > 1, v135 + 1, 1, v133);
      }
      *(void *)(v133 + 16) = v135 + 1;
      v122((char *)(v133+ ((*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80))+ *(void *)(v121 + 72) * v135), (uint64_t)v132, a2);

      unint64_t v201 = v133;
      (*(void (**)(char *, void *))(v121 + 8))(v123, a2);
      v136 = v190;
    }
    sub_24162EF48();
    uint64_t v159 = v201;
    swift_bridgeObjectRetain_n();
    uint64_t v160 = sub_24162EF98();
    os_log_type_t v161 = sub_2416322E8();
    if (os_log_type_enabled(v160, v161))
    {
      uint64_t v162 = swift_slowAlloc();
      uint64_t v163 = swift_slowAlloc();
      v200 = (char *)v163;
      *(_DWORD *)uint64_t v162 = 136446466;
      uint64_t v199 = sub_2411B6898(0xD000000000000027, 0x8000000241638B70, (uint64_t *)&v200);
      sub_241632C28();
      *(_WORD *)(v162 + 12) = 2080;
      uint64_t v199 = v159;
      sub_2411BDE74(0);
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v164 = sub_241631D78();
      uint64_t v199 = sub_2411B6898(v164, v165, (uint64_t *)&v200);
      sub_241632C28();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v160, v161, "[%{public}s]: submitting: %s", (uint8_t *)v162, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245621640](v163, -1, -1);
      MEMORY[0x245621640](v162, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v194 + 8))(v136, v195);
    uint64_t v45 = v173;
    uint64_t v46 = v172;
    uint64_t v48 = v171;
    id v50 = v170;
    swift_beginAccess();
    uint64_t v199 = v201;
    sub_2411BDE74(0);
  }
  else
  {
    v200 = (char *)v49;
    sub_2411BDE74(0);
  }
  sub_24162FB98();
  sub_2411BA264((unint64_t *)&unk_26B00EBD0, sub_2411C1084);
  uint64_t v166 = sub_24162FCB8();

  (*(void (**)(char *, uint64_t))(v46 + 8))(v48, v45);
  return v166;
}

void sub_2411BDD00(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411BDD64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411BDDC8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2411BDE2C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2411BBB00(a1, a2, a3, a4, &qword_26B00EC90, MEMORY[0x263F45738], MEMORY[0x263F45738], MEMORY[0x263F45738]);
}

void sub_2411BDE74(uint64_t a1)
{
}

uint64_t sub_2411BDEA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v90 = a4;
  uint64_t v82 = a1;
  uint64_t v83 = a2;
  uint64_t v81 = a5;
  sub_2411BEBB4(0, (unint64_t *)&qword_26B0125C0, MEMORY[0x263F07690]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v80 = (char *)&v75 - v7;
  sub_2411BEBB4(0, (unint64_t *)&unk_26B013110, MEMORY[0x263F079C8]);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v79 = (char *)&v75 - v9;
  uint64_t v10 = sub_24162C3F8();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v78 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_24162EFA8();
  uint64_t v86 = *(void (**)(char *, uint64_t))(v89 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v89);
  uint64_t v88 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v85 = (char *)&v75 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v75 - v16;
  uint64_t v18 = type metadata accessor for SharedProjectionHighlightTileViewModelContextData();
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v21 = (uint64_t *)((char *)&v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (void **)((char *)&v75 - v22);
  uint64_t v24 = sub_24162CBF8();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v75 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411B8B4C((uint64_t)v27);
  unint64_t v28 = sub_24162CBE8();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  uint64_t v29 = sub_2411BEC6C(v28);
  swift_bridgeObjectRelease();
  if (v29)
  {
    sub_2411B9D00(0, &qword_26B00EC78);
    uint64_t v30 = v90;
    sub_2411BE9C8(v90, (uint64_t)v23);
    id v31 = sub_2411BEC78(v23);
    sub_24162EF48();
    sub_2411BE9C8(v30, (uint64_t)v21);
    uint64_t v32 = sub_24162EF98();
    os_log_type_t v33 = sub_2416322B8();
    BOOL v34 = os_log_type_enabled(v32, v33);
    uint64_t v84 = a3;
    unint64_t v87 = v29;
    if (v34)
    {
      id v77 = v31;
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315138;
      uint64_t v91 = *v21;
      uint64_t v37 = (void *)v91;
      uint64_t v92 = (char *)v36;
      sub_2414051F8();
      id v38 = v37;
      uint64_t v39 = sub_241631D48();
      uint64_t v91 = sub_2411B6898(v39, v40, (uint64_t *)&v92);
      id v31 = v77;
      sub_241632C28();
      swift_bridgeObjectRelease();
      sub_2411BE850((uint64_t)v21);
      _os_log_impl(&dword_24118E000, v32, v33, "PluginSharableModel SharedProjectionHighlightTileViewModelContextData projection: %s", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245621640](v36, -1, -1);
      MEMORY[0x245621640](v35, -1, -1);
    }
    else
    {
      sub_2411BE850((uint64_t)v21);
    }

    uint64_t v41 = (void (*)(char *, uint64_t))*((void *)v86 + 1);
    uint64_t v42 = v89;
    v41(v17, v89);
    uint64_t v43 = v85;
    sub_24162EF48();
    uint64_t v44 = v31;
    uint64_t v45 = sub_24162EF98();
    os_log_type_t v46 = sub_2416322B8();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 67109120;
      LODWORD(v92) = [v44 hasProjection];
      sub_241632C28();

      _os_log_impl(&dword_24118E000, v45, v46, "PluginSharableModel hasProjection: %{BOOL}d", v47, 8u);
      MEMORY[0x245621640](v47, -1, -1);
    }
    else
    {

      uint64_t v45 = v44;
    }
    uint64_t v48 = v88;

    v41(v43, v42);
    id v49 = [v44 projection];
    if (v49)
    {
      id v50 = v49;
      sub_2411B9D00(0, (unint64_t *)&qword_26B013120);
      id v51 = v50;
      id v52 = sub_2414DE3D0(v51);
      if (v52)
      {
        id v53 = v52;
        sub_24162EF48();
        id v54 = v53;
        id v55 = sub_24162EF98();
        os_log_type_t v56 = sub_2416322B8();
        int v57 = v56;
        if (os_log_type_enabled(v55, v56))
        {
          uint64_t v58 = swift_slowAlloc();
          LODWORD(v77) = v57;
          uint64_t v59 = (uint8_t *)v58;
          uint64_t v85 = (char *)swift_slowAlloc();
          uint64_t v92 = v85;
          *(_DWORD *)uint64_t v59 = 136315138;
          uint64_t v75 = v59 + 4;
          uint64_t v76 = v59;
          id v60 = v54;
          id v61 = objc_msgSend(v60, sel_description);
          uint64_t v62 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
          uint64_t v86 = v41;
          uint64_t v63 = v62;
          unint64_t v65 = v64;

          uint64_t v91 = sub_2411B6898(v63, v65, (uint64_t *)&v92);
          sub_241632C28();

          swift_bridgeObjectRelease();
          unint64_t v66 = v76;
          _os_log_impl(&dword_24118E000, v55, (os_log_type_t)v77, "PluginSharableModel projection: %s", v76, 0xCu);
          uint64_t v67 = v85;
          swift_arrayDestroy();
          MEMORY[0x245621640](v67, -1, -1);
          MEMORY[0x245621640](v66, -1, -1);

          v86(v88, v89);
        }
        else
        {

          v41(v48, v42);
        }
      }
      else
      {
      }
    }
    if (v87 >> 62)
    {
      sub_2411B9D00(0, &qword_26B012350);
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      sub_241633058();
      swift_bridgeObjectRelease();
    }
    else
    {
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      sub_241633228();
      sub_2411B9D00(0, &qword_26B012350);
    }
    swift_bridgeObjectRelease();
    id v68 = [v44 data];
    if (v68)
    {
      uint64_t v69 = v68;
      sub_24162B488();

      sub_24162C2D8();
      uint64_t v70 = v79;
      sub_24162BA58();
      uint64_t v71 = sub_24162BA68();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v70, 0, 1, v71);
      uint64_t v72 = v80;
      sub_24162B7D8();
      uint64_t v73 = sub_24162B7E8();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v72, 0, 1, v73);
      sub_24162C2B8();

      return sub_2411BE850(v90);
    }
    __break(1u);
  }
  uint64_t result = sub_241633038();
  __break(1u);
  return result;
}

uint64_t sub_2411BE850(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SharedProjectionHighlightTileViewModelContextData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for SharedProjectionHighlightTileViewModelContextData()
{
  uint64_t result = qword_26B00E908;
  if (!qword_26B00E908) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2411BE8F8(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_24162C3F8();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t sub_2411BE9C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SharedProjectionHighlightTileViewModelContextData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2411BEA2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = sub_24162C3F8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  id v11 = v4;
  if (v10(v7, 1, v8))
  {
    sub_2411BEF50();
    memcpy(v6, v7, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void sub_2411BEB50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411BEBB4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241632C18();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2411BEC08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2411BEC6C(unint64_t a1)
{
  return sub_2411B9D3C(a1);
}

id sub_2411BEC78(void **a1)
{
  sub_2411BEF50();
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = *a1;
    if (*a1)
    {
      sub_2411B9D00(0, &qword_26B00E660);
      id v8 = v7;
      id v9 = v6;
      id v10 = v8;
      id v11 = sub_2414DE7D4(v10);
      objc_msgSend(v9, sel_setProjection_, v11);
    }
    else
    {
      id v12 = result;
    }
    id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46508]), sel_init);
    if (result)
    {
      id v13 = result;
      uint64_t v14 = (void *)sub_241631CC8();
      swift_bridgeObjectRelease();
      objc_msgSend(v13, sel_setKind_, v14);

      objc_msgSend(v6, sel_setProjectionKind_, v13);
      uint64_t v15 = type metadata accessor for SharedProjectionHighlightTileViewModelContextData();
      sub_2411BEEEC((uint64_t)a1 + *(int *)(v15 + 24), (uint64_t)v4);
      sub_2411BEE84();
      sub_24162DAD8();

      sub_2411BE850((uint64_t)a1);
      return v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_2411BEE84()
{
  unint64_t result = qword_26B00EC70;
  if (!qword_26B00EC70)
  {
    sub_2411B9D00(255, &qword_26B00EC78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B00EC70);
  }
  return result;
}

uint64_t sub_2411BEEEC(uint64_t a1, uint64_t a2)
{
  sub_2411BEF50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2411BEF50()
{
  if (!qword_26B00E630)
  {
    sub_24162C3F8();
    unint64_t v0 = sub_241632C18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B00E630);
    }
  }
}

uint64_t getEnumTagSinglePayload for HKMCAnalysisResult(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

void *initializeWithTake for SleepingWristTemperatureBaselineRelativeValue(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t storeEnumTagSinglePayload for HKMCAnalysisResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SleepMeasurementsConfiguration(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(unsigned char *)(result + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)unint64_t result = v2;
  return result;
}

uint64_t sub_2411BF080(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF090(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF0A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF0B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF0C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF0D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF0E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF0F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF100(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF110(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF120(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF130(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF140(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF150(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF160(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF170(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF180(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF190(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF1B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF1C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF1D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF1E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF1F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF200(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF210(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF220(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF230(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF240(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF250(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF260(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF270(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF280(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF290(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF2A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF2B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF2C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF2D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF2E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF2F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF300(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF310(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF320(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF330(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF340(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF350(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF360(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF370(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF380(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF390(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF3A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF3B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF3C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF3D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF3E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF3F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF400(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF410(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF420(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF430(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF440(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF450(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF460(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF470(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF480(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF490(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF4A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2411BF4B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241518394);
}

uint64_t initializeWithTake for DeviationsConfirmationFlowCoordinator.State(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t sub_2411BF4D8()
{
  return swift_release();
}

uint64_t sub_2411BF4E0()
{
  return swift_release();
}

uint64_t sub_2411BF4E8()
{
  return swift_release();
}

uint64_t sub_2411BF4F0()
{
  return swift_release();
}

uint64_t sub_2411BF4F8()
{
  return swift_release();
}

uint64_t sub_2411BF500()
{
  return swift_release();
}

uint64_t sub_2411BF508()
{
  return swift_release();
}

uint64_t sub_2411BF510()
{
  return swift_release();
}

uint64_t sub_2411BF518()
{
  return swift_release();
}

uint64_t sub_2411BF520()
{
  return swift_release();
}

uint64_t sub_2411BF528()
{
  return swift_release();
}

uint64_t sub_2411BF530()
{
  return swift_release();
}

uint64_t sub_2411BF538()
{
  return swift_release();
}

uint64_t sub_2411BF540()
{
  return swift_release();
}

uint64_t sub_2411BF548()
{
  return swift_release();
}

uint64_t sub_2411BF550()
{
  return swift_release();
}

uint64_t sub_2411BF558()
{
  return swift_release();
}

uint64_t sub_2411BF560()
{
  return swift_release();
}

uint64_t sub_2411BF568()
{
  return swift_release();
}

uint64_t sub_2411BF570()
{
  return swift_release();
}

uint64_t sub_2411BF578()
{
  return swift_release();
}

uint64_t sub_2411BF580()
{
  return swift_release();
}

uint64_t sub_2411BF588()
{
  return swift_release();
}

uint64_t sub_2411BF590()
{
  return swift_release();
}

uint64_t sub_2411BF598()
{
  return swift_release();
}

uint64_t sub_2411BF5A0()
{
  return swift_release();
}

uint64_t sub_2411BF5A8()
{
  return swift_release();
}

uint64_t sub_2411BF5B0()
{
  return swift_release();
}

uint64_t sub_2411BF5B8()
{
  return swift_release();
}

uint64_t sub_2411BF5C0()
{
  return swift_release();
}

uint64_t sub_2411BF5C8()
{
  return swift_release();
}

uint64_t sub_2411BF5D0()
{
  return swift_release();
}

uint64_t sub_2411BF5D8()
{
  return swift_release();
}

uint64_t sub_2411BF5E0()
{
  return swift_release();
}

uint64_t sub_2411BF5E8()
{
  return swift_release();
}

uint64_t sub_2411BF5F0()
{
  return swift_release();
}

uint64_t sub_2411BF5F8()
{
  return swift_release();
}

uint64_t sub_2411BF600()
{
  return swift_release();
}

uint64_t sub_2411BF608()
{
  return swift_release();
}

uint64_t sub_2411BF610()
{
  return swift_release();
}

uint64_t sub_2411BF618()
{
  return swift_release();
}

uint64_t sub_2411BF620()
{
  return swift_release();
}

uint64_t sub_2411BF628()
{
  return swift_release();
}

uint64_t sub_2411BF630()
{
  return swift_release();
}

uint64_t sub_2411BF638()
{
  return swift_release();
}

uint64_t sub_2411BF640()
{
  return swift_release();
}

uint64_t sub_2411BF648()
{
  return swift_release();
}

uint64_t sub_2411BF650()
{
  return swift_release();
}

uint64_t sub_2411BF658()
{
  return swift_release();
}

uint64_t sub_2411BF660()
{
  return swift_release();
}

uint64_t sub_2411BF668()
{
  return swift_release();
}

uint64_t sub_2411BF670()
{
  return swift_release();
}

uint64_t sub_2411BF678()
{
  return swift_release();
}

uint64_t sub_2411BF680()
{
  return swift_release();
}

uint64_t sub_2411BF688()
{
  return swift_release();
}

uint64_t sub_2411BF690()
{
  return swift_release();
}

uint64_t sub_2411BF698()
{
  return swift_release();
}

uint64_t sub_2411BF6A0()
{
  return swift_release();
}

uint64_t sub_2411BF6A8()
{
  return swift_release();
}

uint64_t sub_2411BF6B0()
{
  return swift_release();
}

uint64_t sub_2411BF6B8()
{
  return swift_release();
}

uint64_t sub_2411BF6C0()
{
  return swift_release();
}

uint64_t sub_2411BF6C8()
{
  return swift_release();
}

uint64_t sub_2411BF6D0()
{
  return swift_release();
}

uint64_t sub_2411BF6D8()
{
  return swift_release();
}

uint64_t sub_2411BF6E0()
{
  return swift_release();
}

uint64_t sub_2411BF6E8()
{
  return swift_release();
}

BOOL sub_2411BF6F0(void *a1)
{
  return *a1 != 0;
}

unsigned char *sub_2411BF700@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_2411BF70C()
{
  return swift_retain();
}

uint64_t sub_2411BF718@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2411B192C(a1, a2);
}

uint64_t sub_2411BF758(uint64_t a1, uint64_t a2)
{
  return sub_2411A1BF0(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_2411BF760@<X0>(uint64_t *a1@<X8>)
{
  return sub_24119F334(*(void **)(v1 + 16), a1);
}

id sub_2411BF7B4(uint64_t a1)
{
  return objc_msgSend(v1, sel_setMinimumSupportedVersion_, a1);
}

id sub_2411BF7C8(uint64_t a1)
{
  return objc_msgSend(v1, sel_setLatestSupportedVersion_, a1);
}

id sub_2411BF7DC(id result)
{
  if ((unint64_t)result >= 2) {
    return result;
  }
  return result;
}

id sub_2411BF7EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void **)a1;
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = 1;
  if (*(void *)a1 == 1) {
    unsigned int v5 = 0;
  }
  else {
    unsigned int v5 = *(void **)a1;
  }
  if (v2) {
    uint64_t v4 = (uint64_t)v5;
  }
  else {
    char v3 = 0;
  }
  *(void *)a2 = v4;
  *(unsigned char *)(a2 + 8) = v3;
  return sub_2411BF7DC(v2);
}

unint64_t sub_2411BF81C()
{
  return 0xD000000000000020;
}

uint64_t sub_2411BF848(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_2411BF880(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_2411BF8D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411BF934(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_2411BF880(255, a3);
    unint64_t v4 = sub_241632C18();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2411BF98C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_2411BF880(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_2411BF9F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411BFA58(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_2411C8460(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_2411BFAC4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241632C18();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2411BFB18(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      char v3 = sub_24119275C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_241632E88();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_241633028();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_241631E18();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_2416330E8();
    __break(1u);
LABEL_14:
    uint64_t result = sub_241633028();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void sub_2411BFC90()
{
  if (!qword_26B0121F0)
  {
    unint64_t v0 = sub_2416331E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0121F0);
    }
  }
}

void sub_2411BFCEC()
{
  if (!qword_26B012400)
  {
    sub_2411BF880(255, (unint64_t *)&qword_26B012420);
    unint64_t v0 = sub_2416331E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B012400);
    }
  }
}

void sub_2411BFD54(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_2411BFDA0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_2416331E8();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_2411BFDE8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void *sub_2411BFE34(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_241193460(a1, a2, a3, a4, &qword_26B012FD0, &qword_26B012610, MEMORY[0x263F456E8]);
}

uint64_t sub_2411BFE50(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_2411BFB18(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_2412E7D64(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_2412E7D64(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

unint64_t sub_2411BFEE8()
{
  unint64_t result = qword_26B010768;
  if (!qword_26B010768)
  {
    sub_2411B9D00(255, &qword_26B010760);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B010768);
  }
  return result;
}

uint64_t sub_2411BFF50(uint64_t a1)
{
  sub_2411BF9F4(0, (unint64_t *)&unk_26B012FA0, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2411BFFDC()
{
  if (!qword_26B010738)
  {
    sub_2411B9D00(255, &qword_26B010730);
    unint64_t v0 = sub_241632C18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010738);
    }
  }
}

unint64_t sub_2411C0044()
{
  unint64_t result = qword_26B011320;
  if (!qword_26B011320)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B011320);
  }
  return result;
}

void sub_2411C0084()
{
  if (!qword_26B011318)
  {
    sub_2411A868C(255, (unint64_t *)&qword_26B012380, (unint64_t *)&qword_26B012378);
    sub_2411A868C(255, (unint64_t *)&qword_26B011330, &qword_26B00ED70);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_26B011318);
    }
  }
}

void sub_2411C012C()
{
  if (!qword_26B011308)
  {
    sub_2411A868C(255, (unint64_t *)&qword_26B012380, (unint64_t *)&qword_26B012378);
    sub_2411A868C(255, (unint64_t *)&qword_26B011330, &qword_26B00ED70);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_26B011308);
    }
  }
}

unint64_t sub_2411C01D8()
{
  unint64_t result = qword_26B012378;
  if (!qword_26B012378)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B012378);
  }
  return result;
}

uint64_t sub_2411C0218@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24119E25C(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_2411C0224()
{
  return sub_241192460(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_2411C0230()
{
  return sub_2411A5114((unint64_t *)&unk_26B010700, MEMORY[0x263F44B38]);
}

uint64_t sub_2411C0264()
{
  return sub_2411A151C(&qword_26B0106E8, 255, MEMORY[0x263F44AA8]);
}

unint64_t sub_2411C029C()
{
  unint64_t result = qword_26B012368;
  if (!qword_26B012368)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B012368);
  }
  return result;
}

void sub_2411C02DC()
{
  if (!qword_26B00EC68)
  {
    sub_2411A855C(255, (unint64_t *)&qword_26B00EC60, (uint64_t (*)(uint64_t))sub_2411F1EFC, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B00EC68);
    }
  }
}

void sub_2411C0374()
{
  if (!qword_26B0106D0)
  {
    sub_2411A8628(255, (unint64_t *)&qword_26B00EC60, (uint64_t (*)(uint64_t))sub_2411F1EFC, MEMORY[0x263F8D8F0]);
    sub_24162C288();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_26B0106D0);
    }
  }
}

uint64_t sub_2411C041C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v5 & 1;
  return result;
}

uint64_t sub_2411C0460(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

void sub_2411C0494()
{
  if (!qword_26B00EC60)
  {
    sub_2411B9D00(255, (unint64_t *)&qword_26B012340);
    unint64_t v0 = sub_241632C18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B00EC60);
    }
  }
}

void sub_2411C04FC()
{
  if (!qword_26B0106C0)
  {
    sub_2411BAE9C(255, (unint64_t *)&qword_26B00EC60, (uint64_t (*)(uint64_t))sub_2411F1EFC, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B0106C0);
    }
  }
}

void sub_2411C0598()
{
  if (!qword_26B011300)
  {
    sub_2411B9D00(255, (unint64_t *)&unk_26B011350);
    sub_2411A1B88();
    unint64_t v0 = sub_241632128();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B011300);
    }
  }
}

void sub_2411C060C()
{
  if (!qword_26B0112E8)
  {
    sub_24122BFD4();
    sub_2411A0240(&qword_26B010710, (void (*)(uint64_t))sub_24122BFD4);
    unint64_t v0 = sub_241632128();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0112E8);
    }
  }
}

void sub_2411C06A0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_2411BF880(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_2411C0708(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_2411C8460(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_2411C0774(uint64_t a1)
{
}

void sub_2411C07A8()
{
  if (!qword_26B012F70)
  {
    unint64_t v0 = sub_241631FA8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B012F70);
    }
  }
}

void sub_2411C0800(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411C0864(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411C08C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411C092C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411C0990(uint64_t a1)
{
}

void sub_2411C09C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x263F8D310]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_2411C0A14()
{
  unint64_t result = qword_26B012330;
  if (!qword_26B012330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B012330);
  }
  return result;
}

void sub_2411C0A68(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v7) {
      atomic_store(OpaqueTypeMetadata2, a2);
    }
  }
}

unint64_t sub_2411C0AF8()
{
  unint64_t result = qword_26B012F30;
  if (!qword_26B012F30)
  {
    sub_2411A8628(255, &qword_26B012F40, (uint64_t (*)(uint64_t))type metadata accessor for HKBiologicalSex, MEMORY[0x263EFDE48]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B012F30);
  }
  return result;
}

unint64_t sub_2411C0B80()
{
  unint64_t result = qword_26B010650;
  if (!qword_26B010650)
  {
    sub_2411AAED8(255, &qword_26B010660, MEMORY[0x263EFDE48]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B010650);
  }
  return result;
}

unint64_t sub_2411C0BF4()
{
  unint64_t result = qword_26B012F18;
  if (!qword_26B012F18)
  {
    sub_2411A02EC(255, (unint64_t *)&unk_26B012F20, (uint64_t)&type metadata for UserCharacteristics.Age, MEMORY[0x263EFDE48]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B012F18);
  }
  return result;
}

unint64_t sub_2411C0C70()
{
  unint64_t result = qword_26B00EC38;
  if (!qword_26B00EC38)
  {
    sub_2411AB21C(255, &qword_26B00EC40, (uint64_t)&type metadata for HKMCAnalysisResult, MEMORY[0x263EFDE48]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B00EC38);
  }
  return result;
}

void sub_2411C0CEC()
{
  if (!qword_26B010640)
  {
    unint64_t v0 = (uint64_t (*)(void, ValueMetadata *, void, void))MEMORY[0x263EFDE20];
    sub_24119F3D8(255, &qword_26B0105E0, MEMORY[0x263EFDE20]);
    sub_24119F43C((unint64_t *)&unk_26B0105D0, &qword_26B0105E0, v0);
    unint64_t v1 = sub_24162FBF8();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B010640);
    }
  }
}

unint64_t sub_2411C0DA0()
{
  unint64_t result = qword_26B010630;
  if (!qword_26B010630)
  {
    sub_2411C0CEC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B010630);
  }
  return result;
}

void sub_2411C0DF8()
{
  if (!qword_26B00EC30)
  {
    sub_2411C1700();
    sub_2411BA264((unint64_t *)&unk_26B00EBA8, (void (*)(uint64_t))sub_2411C1700);
    unint64_t v0 = sub_24162FBF8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B00EC30);
    }
  }
}

void sub_2411C0E8C()
{
  if (!qword_26B00EC00)
  {
    sub_2411AB2FC(255, (unint64_t *)&qword_26B012EA0, (void (*)(uint64_t))sub_2411C8510);
    sub_2411AB8A0((unint64_t *)&qword_26B012E98, (unint64_t *)&qword_26B012EA0, (void (*)(uint64_t))sub_2411C8510);
    unint64_t v0 = sub_24162FBF8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B00EC00);
    }
  }
}

void sub_2411C0F2C()
{
  if (!qword_26B011280)
  {
    sub_2411C3ABC(255, (unint64_t *)&unk_26B011078, sub_241514F10, (void (*)(uint64_t))sub_2411C8510, (void (*)(void))sub_241514F30);
    sub_2411C3B4C();
    unint64_t v0 = sub_24162FBF8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B011280);
    }
  }
}

unint64_t sub_2411C0FD4()
{
  unint64_t result = qword_26B010580;
  if (!qword_26B010580)
  {
    sub_2411A8510(255, &qword_26B010588, MEMORY[0x263F8D4F8], MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B010580);
  }
  return result;
}

void sub_2411C1050(uint64_t a1)
{
}

void sub_2411C1084(uint64_t a1)
{
}

void sub_2411C10B8(uint64_t a1)
{
}

unint64_t sub_2411C10EC()
{
  unint64_t result = qword_26B011260;
  if (!qword_26B011260)
  {
    sub_24119EF0C(255, &qword_26B011268, MEMORY[0x263F090D0], MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B011260);
  }
  return result;
}

unint64_t sub_2411C1174()
{
  unint64_t result = qword_26B012ED8;
  if (!qword_26B012ED8)
  {
    sub_24119E1F8(255, (unint64_t *)&unk_26B012EE0, (uint64_t (*)(uint64_t))sub_2411C8510, MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B012ED8);
  }
  return result;
}

void sub_2411C11FC()
{
  if (!qword_26B011258)
  {
    sub_2411B6C0C(255, (unint64_t *)&unk_26B011340, (uint64_t (*)(uint64_t))type metadata accessor for HKMCPregnancyState, MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_24162FB48();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B011258);
    }
  }
}

void sub_2411C1294()
{
  if (!qword_26B011248)
  {
    sub_2411A868C(255, (unint64_t *)&qword_26B011330, &qword_26B00ED70);
    unint64_t v0 = sub_24162FB48();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B011248);
    }
  }
}

void sub_2411C1314(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t, void, void))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_2411C1378()
{
  if (!qword_26B00ED68)
  {
    unint64_t v0 = sub_24162FB48();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B00ED68);
    }
  }
}

unint64_t sub_2411C13E0()
{
  unint64_t result = qword_26B00F1A0;
  if (!qword_26B00F1A0)
  {
    sub_2411C1314(255, (unint64_t *)&qword_26B00ED68, (uint64_t)&type metadata for DaySummaryChangeDetector.Result, MEMORY[0x263EFDD90]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B00F1A0);
  }
  return result;
}

unint64_t sub_2411C145C()
{
  unint64_t result = qword_26B010528;
  if (!qword_26B010528)
  {
    sub_2411A48E0(255, (unint64_t *)&unk_26B010530, (uint64_t (*)(uint64_t))sub_2411BFFDC, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B010528);
  }
  return result;
}

void sub_2411C14E4()
{
  if (!qword_26B010510)
  {
    sub_2411AB268(255, (unint64_t *)&qword_26B0106B0, MEMORY[0x263F8D6C8], MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_24162FA68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010510);
    }
  }
}

void sub_2411C1570()
{
  if (!qword_26B00E658)
  {
    unint64_t v0 = sub_24162FA68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B00E658);
    }
  }
}

void sub_2411C15D8()
{
  if (!qword_26B011208)
  {
    sub_24138A088(255, &qword_26B0112E0, (unint64_t *)&qword_26B0123B0, 0x263F0A6B8, MEMORY[0x263F8D488]);
    unint64_t v0 = sub_24162FA68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B011208);
    }
  }
}

uint64_t sub_2411C166C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

void sub_2411C169C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24162FA68();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2411C1700()
{
  if (!qword_26B00EBB8)
  {
    sub_2411C0774(255);
    unint64_t v0 = sub_24162FA68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B00EBB8);
    }
  }
}

void sub_2411C1768(uint64_t a1)
{
}

void sub_2411C1788()
{
  if (!qword_26B012EC0)
  {
    sub_2411C0990(255);
    unint64_t v0 = sub_24162FA68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B012EC0);
    }
  }
}

unint64_t sub_2411C17F0()
{
  unint64_t result = qword_26B0111D8;
  if (!qword_26B0111D8)
  {
    sub_2411A48E0(255, &qword_26B0111E0, MEMORY[0x263F090D0], MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0111D8);
  }
  return result;
}

unint64_t sub_2411C1878()
{
  unint64_t result = qword_26B0104A8;
  if (!qword_26B0104A8)
  {
    sub_2411A48E0(255, &qword_26B0104B0, (uint64_t (*)(uint64_t))sub_2411C73BC, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0104A8);
  }
  return result;
}

void sub_2411C1900(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24162FA68();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2411C1964(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2411C1900(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2411C19B4()
{
  if (!qword_26B012EA0)
  {
    sub_2411C8460(255, (unint64_t *)&qword_26B012630);
    unint64_t v0 = sub_24162FA68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B012EA0);
    }
  }
}

unint64_t sub_2411C1A30()
{
  unint64_t result = qword_26B012E98;
  if (!qword_26B012E98)
  {
    sub_2411AB360(255, (unint64_t *)&qword_26B012EA0, (void (*)(uint64_t))sub_2411C8510);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B012E98);
  }
  return result;
}

void sub_2411C1AA4()
{
  if (!qword_26B012E90)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F43920];
    sub_2411B134C(255, &qword_26B012EB0, MEMORY[0x263F43920], MEMORY[0x263EFDCF0]);
    sub_2411B9D00(255, (unint64_t *)&qword_26B0130B0);
    sub_2411B13C0(&qword_26B012EA8, &qword_26B012EB0, v0);
    sub_2411A01FC((unint64_t *)&qword_26B012FB0, (unint64_t *)&qword_26B0130B0);
    unint64_t v1 = sub_24162FA38();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B012E90);
    }
  }
}

void sub_2411C1BC4()
{
  if (!qword_26B012E80)
  {
    sub_2411AB360(255, (unint64_t *)&qword_26B012EA0, (void (*)(uint64_t))sub_2411C8510);
    sub_2411C1A30();
    unint64_t v0 = sub_24162FA18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B012E80);
    }
  }
}

void sub_2411C1C44()
{
  if (!qword_26B0111A8)
  {
    sub_24138A0F0();
    sub_241632228();
    sub_2411A151C((unint64_t *)&unk_26B011030, 255, (void (*)(uint64_t))sub_24138A0F0);
    sub_2411A151C(&qword_26B0106F0, 255, MEMORY[0x263F44AB8]);
    unint64_t v0 = sub_24162F9D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0111A8);
    }
  }
}

uint64_t sub_2411C1D38()
{
  return sub_2411A151C((unint64_t *)&unk_26B011198, 255, (void (*)(uint64_t))sub_2411C1C44);
}

void sub_2411C1D70()
{
  if (!qword_26B0103C8)
  {
    sub_2411A48E0(255, (unint64_t *)&unk_26B010530, (uint64_t (*)(uint64_t))sub_2411BFFDC, MEMORY[0x263EFDCF0]);
    sub_241632228();
    sub_2411C145C();
    sub_2411A5114(&qword_26B0106F0, MEMORY[0x263F44AB8]);
    unint64_t v0 = sub_24162F9D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0103C8);
    }
  }
}

void sub_2411C1E5C()
{
  if (!qword_26B0103A8)
  {
    sub_2411C1700();
    sub_2411C1768(255);
    sub_2411A62B8((unint64_t *)&unk_26B00EBA8, (void (*)(uint64_t))sub_2411C1700);
    sub_2411A62B8(&qword_26B00EB90, sub_2411C1768);
    unint64_t v0 = sub_24162F9D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0103A8);
    }
  }
}

void sub_2411C1F44()
{
  if (!qword_26B011188)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_2411A48E0(255, &qword_26B0111E0, MEMORY[0x263F090D0], MEMORY[0x263EFDCF0]);
    sub_2411A48E0(255, &qword_26B0104B0, (uint64_t (*)(uint64_t))sub_2411C73BC, v0);
    sub_2411C17F0();
    sub_2411C1878();
    unint64_t v1 = sub_24162F9D8();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B011188);
    }
  }
}

void sub_2411C2024()
{
  if (!qword_26B010398)
  {
    sub_2411A48E0(255, &qword_26B0104B0, (uint64_t (*)(uint64_t))sub_2411C73BC, MEMORY[0x263EFDCF0]);
    sub_2411C1D70();
    sub_2411C1878();
    sub_2411A5114(&qword_26B0103C0, (void (*)(uint64_t))sub_2411C1D70);
    unint64_t v0 = sub_24162F9D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010398);
    }
  }
}

void sub_2411C2110()
{
  if (!qword_26B010338)
  {
    sub_2411AB21C(255, &qword_26B00EC40, (uint64_t)&type metadata for HKMCAnalysisResult, MEMORY[0x263EFDE48]);
    sub_2411C0C70();
    unint64_t v0 = sub_24162F9A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010338);
    }
  }
}

uint64_t sub_2411C2198()
{
  return sub_24119C2BC(&qword_26B010330, (void (*)(uint64_t))sub_2411C2110);
}

void sub_2411C21CC(uint64_t a1)
{
}

uint64_t sub_2411C2214()
{
  return sub_2411C6C70(&qword_26B010320, sub_2411C21CC);
}

unint64_t sub_2411C2248()
{
  unint64_t result = qword_26B010310;
  if (!qword_26B010310)
  {
    sub_2411B14F4(255, &qword_26B010318, (uint64_t (*)(uint64_t))sub_2411C46B4, sub_241359DE8, MEMORY[0x263EFDBB0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B010310);
  }
  return result;
}

void sub_2411C22E4(uint64_t a1)
{
}

uint64_t sub_2411C232C()
{
  return sub_2411AF6F4(&qword_26B010300, sub_2411C22E4);
}

void sub_2411C2360()
{
  if (!qword_26B011178)
  {
    sub_2411C4A10();
    sub_2411A0240(&qword_26B010FF8, (void (*)(uint64_t))sub_2411C4A10);
    unint64_t v0 = sub_24162F998();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B011178);
    }
  }
}

uint64_t sub_2411C23F4()
{
  return sub_2411A0240((unint64_t *)&unk_26B011168, (void (*)(uint64_t))sub_2411C2360);
}

void sub_2411C2428(uint64_t a1)
{
}

uint64_t sub_2411C2470()
{
  return sub_24119C2BC(&qword_26B0102F0, sub_2411C2428);
}

void sub_2411C24A4()
{
  if (!qword_26B011160)
  {
    sub_2411C4CE8();
    sub_2411A151C((unint64_t *)&unk_26B010FD8, 255, (void (*)(uint64_t))sub_2411C4CE8);
    unint64_t v0 = sub_24162F998();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B011160);
    }
  }
}

void sub_2411C253C()
{
  if (!qword_26B0102E8)
  {
    sub_2411C4E8C();
    sub_2411A86E4(&qword_26B010038, (void (*)(uint64_t))sub_2411C4E8C);
    unint64_t v0 = sub_24162F998();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0102E8);
    }
  }
}

void sub_2411C25D0()
{
  if (!qword_26B0102D8)
  {
    sub_2411C4FC8();
    sub_2411A9098(&qword_26B010028, (void (*)(uint64_t))sub_2411C4FC8);
    unint64_t v0 = sub_24162F998();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0102D8);
    }
  }
}

unint64_t sub_2411C2664()
{
  unint64_t result = qword_26B011140;
  if (!qword_26B011140)
  {
    sub_2411B14F4(255, (unint64_t *)&unk_26B011148, (uint64_t (*)(uint64_t))sub_2411C5104, sub_2413595B4, MEMORY[0x263EFDBB0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B011140);
  }
  return result;
}

void sub_2411C2700(uint64_t a1)
{
}

uint64_t sub_2411C2748()
{
  return sub_2411B680C(&qword_26B0102C0, sub_2411C2700);
}

void sub_2411C277C(uint64_t a1)
{
}

uint64_t sub_2411C27C4()
{
  return sub_2411A5114(&qword_26B011130, sub_2411C277C);
}

unint64_t sub_2411C27F8()
{
  unint64_t result = qword_26B0102B0;
  if (!qword_26B0102B0)
  {
    sub_2411ADC5C(255, &qword_26B0102B8, (uint64_t (*)(uint64_t))sub_2411C54D4, sub_24135E768, MEMORY[0x263EFDBB0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0102B0);
  }
  return result;
}

void sub_2411C2894()
{
  if (!qword_26B0102A8)
  {
    sub_2411C5584();
    sub_2411AB2B4(&qword_26B00FFE8, (void (*)(uint64_t))sub_2411C5584);
    unint64_t v0 = sub_24162F998();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0102A8);
    }
  }
}

void sub_2411C2928()
{
  if (!qword_26B010298)
  {
    sub_2411C5770();
    sub_2411A70D0(&qword_26B00FFD8, (void (*)(uint64_t))sub_2411C5770);
    unint64_t v0 = sub_24162F998();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010298);
    }
  }
}

void sub_2411C29BC()
{
  if (!qword_26B011128)
  {
    sub_2411C5850();
    sub_2411966D0((unint64_t *)&unk_26B010FA0, (void (*)(uint64_t))sub_2411C5850);
    unint64_t v0 = sub_24162F998();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B011128);
    }
  }
}

void sub_2411C2A50()
{
  if (!qword_26B010288)
  {
    sub_2411C5A3C();
    sub_241196E8C(&qword_26B00FFC8, (void (*)(uint64_t))sub_2411C5A3C);
    unint64_t v0 = sub_24162F998();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010288);
    }
  }
}

unint64_t sub_2411C2AE4()
{
  unint64_t result = qword_26B010270;
  if (!qword_26B010270)
  {
    sub_2411ADC5C(255, &qword_26B010278, (uint64_t (*)(uint64_t))sub_2411C5B40, sub_24135E79C, MEMORY[0x263EFDBB0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B010270);
  }
  return result;
}

void sub_2411C2B80()
{
  if (!qword_26B011110)
  {
    sub_2411C1F44();
    sub_24119EF0C(255, &qword_26B011268, MEMORY[0x263F090D0], MEMORY[0x263EFDDF8]);
    sub_2411A5114(&qword_26B011180, (void (*)(uint64_t))sub_2411C1F44);
    sub_2411C10EC();
    unint64_t v0 = sub_24162F978();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B011110);
    }
  }
}

void sub_2411C2C6C()
{
  if (!qword_26B010258)
  {
    sub_2411C2DE8();
    sub_2411A8510(255, &qword_26B010588, MEMORY[0x263F8D4F8], MEMORY[0x263EFDDF8]);
    sub_2411AF6F4(&qword_26B010200, (void (*)(uint64_t))sub_2411C2DE8);
    sub_2411C0FD4();
    unint64_t v0 = sub_24162F978();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010258);
    }
  }
}

unint64_t sub_2411C2D4C()
{
  unint64_t result = qword_26B010210;
  if (!qword_26B010210)
  {
    sub_2411C36E4(255, &qword_26B010218, MEMORY[0x263F44B38], sub_2411C73BC, (void (*)(void))sub_2411C0230);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B010210);
  }
  return result;
}

void sub_2411C2DE8()
{
  if (!qword_26B010208)
  {
    sub_241632248();
    sub_2411AF6F4(&qword_26B0106F8, MEMORY[0x263F44AC8]);
    unint64_t v0 = sub_24162F958();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010208);
    }
  }
}

unint64_t sub_2411C2E84()
{
  unint64_t result = qword_26B0101F0;
  if (!qword_26B0101F0)
  {
    sub_2411C36E4(255, &qword_26B0101F8, MEMORY[0x263F44AA8], (void (*)(uint64_t))sub_2411BFFDC, (void (*)(void))sub_2411C0264);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0101F0);
  }
  return result;
}

void sub_2411C2F20()
{
  if (!qword_26B0101E8)
  {
    sub_2411C2110();
    sub_2411A855C(255, (unint64_t *)&qword_26B00EC60, (uint64_t (*)(uint64_t))sub_2411F1EFC, MEMORY[0x263F8D8F0]);
    sub_2411AB2B4(&qword_26B010330, (void (*)(uint64_t))sub_2411C2110);
    unint64_t v0 = sub_24162F958();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0101E8);
    }
  }
}

unint64_t sub_2411C2FFC()
{
  unint64_t result = qword_26B0101E0;
  if (!qword_26B0101E0)
  {
    sub_2411AE590(255, (unint64_t *)&qword_26B0101E8, (void (*)(uint64_t))sub_2411C2110, (void (*)(uint64_t))sub_2411C0494, (void (*)(void))sub_2411C2198);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0101E0);
  }
  return result;
}

unint64_t sub_2411C3098()
{
  unint64_t result = qword_26B0101D0;
  if (!qword_26B0101D0)
  {
    sub_2411AE620(255, &qword_26B0101D8, sub_2411C21CC, (void (*)(uint64_t))type metadata accessor for OvulationConfirmationHelpTileGenerator.Change, (void (*)(void))sub_2411C2214);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0101D0);
  }
  return result;
}

void sub_2411C3134()
{
  if (!qword_26B0101C8)
  {
    sub_2411B14F4(255, &qword_26B010318, (uint64_t (*)(uint64_t))sub_2411C46B4, sub_241359DE8, MEMORY[0x263EFDBB0]);
    type metadata accessor for OvulationConfirmationState();
    sub_2411C2248();
    unint64_t v0 = sub_24162F958();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0101C8);
    }
  }
}

unint64_t sub_2411C31F4()
{
  unint64_t result = qword_26B0101B0;
  if (!qword_26B0101B0)
  {
    sub_2411AE6B0(255, &qword_26B0101B8, sub_2411C22E4, (void (*)(uint64_t))type metadata accessor for CycleFactorsReminderGeneratorPipeline.Change, (void (*)(void))sub_2411C232C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0101B0);
  }
  return result;
}

unint64_t sub_2411C3290()
{
  unint64_t result = qword_26B0110F0;
  if (!qword_26B0110F0)
  {
    sub_2411C3ABC(255, &qword_26B011100, (void (*)(uint64_t))sub_2411C2360, (void (*)(uint64_t))sub_2411C060C, (void (*)(void))sub_2411C23F4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0110F0);
  }
  return result;
}

void sub_2411C332C()
{
  if (!qword_26B0110E0)
  {
    sub_2411C2360();
    sub_2411C23F4();
    unint64_t v0 = sub_24162F958();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0110E0);
    }
  }
}

unint64_t sub_2411C3398()
{
  unint64_t result = qword_26B0101A0;
  if (!qword_26B0101A0)
  {
    sub_2411AE590(255, &qword_26B0101A8, sub_2411C2428, (void (*)(uint64_t))type metadata accessor for SleepOnboardingTileGenerator.Change, (void (*)(void))sub_2411C2470);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0101A0);
  }
  return result;
}

void sub_2411C3434()
{
  if (!qword_26B0110D0)
  {
    sub_2411C24A4();
    type metadata accessor for AddPregnancyFeedItemGenerator.Change(255);
    sub_2411A151C(&qword_26B011158, 255, (void (*)(uint64_t))sub_2411C24A4);
    unint64_t v0 = sub_24162F958();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0110D0);
    }
  }
}

unint64_t sub_2411C34E4()
{
  unint64_t result = qword_26B010188;
  if (!qword_26B010188)
  {
    sub_2411A8790(255, &qword_26B010190, (void (*)(uint64_t))sub_2411C8510);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B010188);
  }
  return result;
}

void sub_2411C3558()
{
  if (!qword_26B010180)
  {
    sub_2411C25D0();
    sub_2411A9098(&qword_26B0102D0, (void (*)(uint64_t))sub_2411C25D0);
    unint64_t v0 = sub_24162F958();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010180);
    }
  }
}

void sub_2411C35F4()
{
  if (!qword_26B0110B8)
  {
    sub_2411B14F4(255, (unint64_t *)&unk_26B011148, (uint64_t (*)(uint64_t))sub_2411C5104, sub_2413595B4, MEMORY[0x263EFDBB0]);
    sub_2411B6C0C(255, &qword_26B011310, (uint64_t (*)(uint64_t))sub_2411C012C, MEMORY[0x263F8D8F0]);
    sub_2411C2664();
    unint64_t v0 = sub_24162F958();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0110B8);
    }
  }
}

void sub_2411C36E4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    unint64_t v8 = sub_24162F958();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_2411C3774()
{
  unint64_t result = qword_26B0110A0;
  if (!qword_26B0110A0)
  {
    sub_2411C36E4(255, &qword_26B0110A8, sub_2411C277C, (void (*)(uint64_t))type metadata accessor for SleepingWristTemperatureHelpTileGenerator.Change, (void (*)(void))sub_2411C27C4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0110A0);
  }
  return result;
}

void sub_2411C3810()
{
  if (!qword_26B011098)
  {
    sub_2411C29BC();
    sub_2411966D0(&qword_26B011120, (void (*)(uint64_t))sub_2411C29BC);
    unint64_t v0 = sub_24162F958();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B011098);
    }
  }
}

void sub_2411C38AC()
{
  if (!qword_26B010170)
  {
    sub_2411C2A50();
    type metadata accessor for OvulationConfirmationFailureTileGenerator.Change(255);
    sub_241196E8C(&qword_26B010280, (void (*)(uint64_t))sub_2411C2A50);
    unint64_t v0 = sub_24162F958();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010170);
    }
  }
}

void sub_2411C3958()
{
  if (!qword_26B00EB88)
  {
    sub_2411C5954();
    sub_2411C8510();
    sub_2411A6300(&qword_26B00EB40, (void (*)(uint64_t))sub_2411C5954);
    unint64_t v0 = sub_24162F958();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B00EB88);
    }
  }
}

void sub_2411C3A04()
{
  if (!qword_26B010140)
  {
    sub_2411AB2FC(255, &qword_26B010520, (void (*)(uint64_t))sub_2411C02DC);
    sub_2411C8510();
    sub_2411AB8A0(&qword_26B010518, &qword_26B010520, (void (*)(uint64_t))sub_2411C02DC);
    unint64_t v0 = sub_24162F958();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010140);
    }
  }
}

void sub_2411C3ABC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    unint64_t v8 = sub_24162F958();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_2411C3B4C()
{
  unint64_t result = qword_26B011068;
  if (!qword_26B011068)
  {
    sub_2411C3ABC(255, (unint64_t *)&unk_26B011078, sub_241514F10, (void (*)(uint64_t))sub_2411C8510, (void (*)(void))sub_241514F30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B011068);
  }
  return result;
}

void sub_2411C3BE8()
{
  if (!qword_26B010130)
  {
    sub_2411C1570();
    sub_2411BF880(255, (unint64_t *)&qword_26B012630);
    sub_2411AB8F0((unint64_t *)&unk_26B00EBC0, (void (*)(uint64_t))sub_2411C1570);
    unint64_t v0 = sub_24162F958();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010130);
    }
  }
}

void sub_2411C3CA4()
{
  if (!qword_26B00EB78)
  {
    sub_2411C1768(255);
    sub_2411C0774(255);
    sub_2411A62B8(&qword_26B00EB90, sub_2411C1768);
    unint64_t v0 = sub_24162F958();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B00EB78);
    }
  }
}

void sub_2411C3D50()
{
  if (!qword_26B012E40)
  {
    sub_2411C1788();
    sub_2411C07A8();
    sub_2412CB6D0(&qword_26B012EB8, (void (*)(uint64_t))sub_2411C1788);
    unint64_t v0 = sub_24162F958();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B012E40);
    }
  }
}

void sub_2411C3DFC()
{
  if (!qword_26B011058)
  {
    sub_2411C3ABC(255, &qword_26B011100, (void (*)(uint64_t))sub_2411C2360, (void (*)(uint64_t))sub_2411C060C, (void (*)(void))sub_2411C23F4);
    sub_2411C3290();
    unint64_t v0 = sub_24162F938();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B011058);
    }
  }
}

void sub_2411C3EA4()
{
  if (!qword_26B010100)
  {
    sub_2411C0CEC();
    unint64_t v0 = (uint64_t (*)(void, ValueMetadata *, void, void))MEMORY[0x263EFDD78];
    sub_24119F3D8(255, &qword_26B010550, MEMORY[0x263EFDD78]);
    sub_24119C2BC((unint64_t *)&qword_26B010630, (void (*)(uint64_t))sub_2411C0CEC);
    sub_24119F43C((unint64_t *)&unk_26B010540, &qword_26B010550, v0);
    unint64_t v1 = sub_24162F918();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B010100);
    }
  }
}

void sub_2411C3FB0()
{
  if (!qword_26B0100E0)
  {
    sub_2411C2700(255);
    sub_2411C83EC();
    sub_2411C2748();
    unint64_t v0 = sub_24162F908();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0100E0);
    }
  }
}

void sub_2411C402C()
{
  if (!qword_26B0100D8)
  {
    sub_2411C2700(255);
    sub_2411C02DC();
    sub_2411C2748();
    unint64_t v0 = sub_24162F908();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0100D8);
    }
  }
}

void sub_2411C40A8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_2411C8460(255, (unint64_t *)&qword_26B012630);
    a4();
    unint64_t v6 = sub_24162F908();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_2411C4144()
{
  unint64_t result = qword_26B0100C8;
  if (!qword_26B0100C8)
  {
    sub_2411C40A8(255, &qword_26B0100D0, sub_2411C2700, (void (*)(void))sub_2411C2748);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0100C8);
  }
  return result;
}

unint64_t sub_2411C41CC()
{
  unint64_t result = qword_26B0100A8;
  if (!qword_26B0100A8)
  {
    sub_2411A7024(255, &qword_26B0100B0, (void (*)(uint64_t))sub_2411C8568);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0100A8);
  }
  return result;
}

void sub_2411C4240()
{
  if (!qword_26B011020)
  {
    sub_2411C35F4();
    sub_2411C0084();
    sub_2413595E8();
    unint64_t v0 = sub_24162F908();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B011020);
    }
  }
}

void sub_2411C42BC()
{
  if (!qword_26B011018)
  {
    sub_2411C35F4();
    sub_2411C012C();
    sub_2413595E8();
    unint64_t v0 = sub_24162F908();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B011018);
    }
  }
}

unint64_t sub_2411C4338()
{
  unint64_t result = qword_26B011008;
  if (!qword_26B011008)
  {
    sub_2411C40A8(255, &qword_26B011010, (void (*)(uint64_t))sub_2411C35F4, (void (*)(void))sub_2413595E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B011008);
  }
  return result;
}

void sub_2411C43C0()
{
  if (!qword_26B0100A0)
  {
    sub_2411AAED8(255, &qword_26B010660, MEMORY[0x263EFDE48]);
    sub_2411C0B80();
    unint64_t v0 = sub_24162F908();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0100A0);
    }
  }
}

void sub_2411C4448()
{
  if (!qword_26B00EB68)
  {
    sub_2411C1700();
    sub_2411C8510();
    sub_2411A6348((unint64_t *)&unk_26B00EBA8, (void (*)(uint64_t))sub_2411C1700);
    unint64_t v0 = sub_24162F908();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B00EB68);
    }
  }
}

void sub_2411C44F4()
{
  if (!qword_26B010080)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263EFDBB0];
    sub_2411ADC5C(255, &qword_26B010278, (uint64_t (*)(uint64_t))sub_2411C5B40, sub_24135E79C, MEMORY[0x263EFDBB0]);
    sub_2411ADDDC(255, &qword_26B010490, (void (*)(uint64_t))type metadata accessor for OvulationConfirmationState);
    sub_2411AE620(255, (unint64_t *)&qword_26B0101E8, (void (*)(uint64_t))sub_2411C2110, (void (*)(uint64_t))sub_2411C0494, (void (*)(void))sub_2411C2198);
    sub_2411ADC5C(255, &qword_26B0102B8, (uint64_t (*)(uint64_t))sub_2411C54D4, sub_24135E768, v0);
    sub_2411C2AE4();
    sub_2411ADE40(&qword_26B010488, &qword_26B010490, (void (*)(uint64_t))type metadata accessor for OvulationConfirmationState);
    sub_2411C2FFC();
    sub_2411C27F8();
    unint64_t v1 = sub_24162F8D8();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B010080);
    }
  }
}

void sub_2411C46B4()
{
  if (!qword_26B010070)
  {
    sub_2411C2F20();
    sub_2411C43C0();
    unint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F44998];
    sub_2411B134C(255, (unint64_t *)&qword_26B010480, MEMORY[0x263F44998], MEMORY[0x263EFDCF0]);
    sub_2411C3EA4();
    sub_2411B680C((unint64_t *)&qword_26B0101E0, (void (*)(uint64_t))sub_2411C2F20);
    sub_2411B680C(&qword_26B010098, (void (*)(uint64_t))sub_2411C43C0);
    sub_2411B13C0(&qword_26B010478, (unint64_t *)&qword_26B010480, v0);
    sub_2411B680C((unint64_t *)&unk_26B0100F0, (void (*)(uint64_t))sub_2411C3EA4);
    unint64_t v1 = sub_24162F8D8();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B010070);
    }
  }
}

void sub_2411C4860()
{
  if (!qword_26B010060)
  {
    sub_2411AE6B0(255, (unint64_t *)&qword_26B0101E8, (void (*)(uint64_t))sub_2411C2110, (void (*)(uint64_t))sub_2411C0494, (void (*)(void))sub_2411C2198);
    unint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F44998];
    sub_2411AE7E0(255, (unint64_t *)&qword_26B010480, MEMORY[0x263F44998]);
    sub_2411C1570();
    sub_2411AE7E0(255, &qword_26B010410, sub_2411C85F4);
    sub_2411C2FFC();
    sub_2411AE790(&qword_26B010478, (unint64_t *)&qword_26B010480, v0);
    sub_2411AF6F4((unint64_t *)&unk_26B00EBC0, (void (*)(uint64_t))sub_2411C1570);
    sub_2411AE790((unint64_t *)&qword_26B010400, &qword_26B010410, sub_2411C85F4);
    unint64_t v1 = sub_24162F8D8();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B010060);
    }
  }
}

void sub_2411C4A10()
{
  if (!qword_26B011000)
  {
    sub_2411A02EC(255, (unint64_t *)&unk_26B012F20, (uint64_t)&type metadata for UserCharacteristics.Age, MEMORY[0x263EFDE48]);
    sub_2411A0288(255, &qword_26B012F40, (uint64_t (*)(uint64_t))type metadata accessor for HKBiologicalSex, MEMORY[0x263EFDE48]);
    sub_2411C43C0();
    sub_2411C11FC();
    sub_2411C0BF4();
    sub_2411C0AF8();
    sub_2411A0240(&qword_26B010098, (void (*)(uint64_t))sub_2411C43C0);
    sub_2411A0240(&qword_26B011250, (void (*)(uint64_t))sub_2411C11FC);
    unint64_t v0 = sub_24162F8D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B011000);
    }
  }
}

void sub_2411C4B90()
{
  if (!qword_26B010050)
  {
    unint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F44998];
    sub_2411C1900(255, (unint64_t *)&qword_26B010480, MEMORY[0x263F44998]);
    sub_2411C3EA4();
    sub_2411AE590(255, (unint64_t *)&qword_26B0101E8, (void (*)(uint64_t))sub_2411C2110, (void (*)(uint64_t))sub_2411C0494, (void (*)(void))sub_2411C2198);
    sub_2411C1964(&qword_26B010478, (unint64_t *)&qword_26B010480, v0);
    sub_24119C2BC((unint64_t *)&unk_26B0100F0, (void (*)(uint64_t))sub_2411C3EA4);
    sub_2411C2FFC();
    unint64_t v1 = sub_24162F8D8();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B010050);
    }
  }
}

void sub_2411C4CE8()
{
  if (!qword_26B010FE8)
  {
    unint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F44998];
    sub_2411A1564(255, (unint64_t *)&qword_26B010480, MEMORY[0x263F44998]);
    sub_2411C1294();
    sub_2411C15D8();
    sub_2411A1564(255, &qword_26B010410, sub_2411C85F4);
    sub_2411AE740(&qword_26B010478, (unint64_t *)&qword_26B010480, v0);
    sub_2411A151C(&qword_26B011240, 255, (void (*)(uint64_t))sub_2411C1294);
    sub_2411A151C(&qword_26B011200, 255, (void (*)(uint64_t))sub_2411C15D8);
    sub_2411AE740((unint64_t *)&qword_26B010400, &qword_26B010410, sub_2411C85F4);
    unint64_t v1 = sub_24162F8D8();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B010FE8);
    }
  }
}

void sub_2411C4E8C()
{
  if (!qword_26B010040)
  {
    sub_2411C2F20();
    sub_2411C43C0();
    sub_2411C5670();
    sub_2411A86E4((unint64_t *)&qword_26B0101E0, (void (*)(uint64_t))sub_2411C2F20);
    sub_2411A86E4(&qword_26B010098, (void (*)(uint64_t))sub_2411C43C0);
    sub_2411A86E4(&qword_26B00EB50, (void (*)(uint64_t))sub_2411C5670);
    unint64_t v0 = sub_24162F8A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010040);
    }
  }
}

void sub_2411C4FC8()
{
  if (!qword_26B010030)
  {
    sub_2411C2F20();
    sub_2411C43C0();
    sub_2411C14E4();
    sub_2411A9098((unint64_t *)&qword_26B0101E0, (void (*)(uint64_t))sub_2411C2F20);
    sub_2411A9098(&qword_26B010098, (void (*)(uint64_t))sub_2411C43C0);
    sub_2411A9098((unint64_t *)&qword_26B010508, (void (*)(uint64_t))sub_2411C14E4);
    unint64_t v0 = sub_24162F8A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010030);
    }
  }
}

void sub_2411C5104()
{
  if (!qword_26B010FD0)
  {
    sub_2411C1314(255, (unint64_t *)&qword_26B00ED68, (uint64_t)&type metadata for DaySummaryChangeDetector.Result, MEMORY[0x263EFDD90]);
    sub_2411C43C0();
    sub_2411C1294();
    sub_2411C13E0();
    sub_2411B680C(&qword_26B010098, (void (*)(uint64_t))sub_2411C43C0);
    sub_2411B680C(&qword_26B011240, (void (*)(uint64_t))sub_2411C1294);
    unint64_t v0 = sub_24162F8A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010FD0);
    }
  }
}

void sub_2411C5234()
{
  if (!qword_26B010020)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F44998];
    sub_2411B134C(255, (unint64_t *)&qword_26B010480, MEMORY[0x263F44998], MEMORY[0x263EFDCF0]);
    sub_2411C2F20();
    sub_2411C1AA4();
    sub_2411B13C0(&qword_26B010478, (unint64_t *)&qword_26B010480, v0);
    sub_2411B680C((unint64_t *)&qword_26B0101E0, (void (*)(uint64_t))sub_2411C2F20);
    sub_2411B680C(&qword_26B012E88, (void (*)(uint64_t))sub_2411C1AA4);
    unint64_t v1 = sub_24162F8A8();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B010020);
    }
  }
}

void sub_2411C5388()
{
  if (!qword_26B010FC0)
  {
    unint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F44998];
    sub_2411A515C(255, (unint64_t *)&qword_26B010480, MEMORY[0x263F44998]);
    sub_2411C3EA4();
    unint64_t v1 = (void (*)(uint64_t))MEMORY[0x263F090D0];
    sub_2411A515C(255, (unint64_t *)&unk_26B0111F0, MEMORY[0x263F090D0]);
    sub_2411A51C0(&qword_26B010478, (unint64_t *)&qword_26B010480, v0);
    sub_2411A5114((unint64_t *)&unk_26B0100F0, (void (*)(uint64_t))sub_2411C3EA4);
    sub_2411A51C0(&qword_26B0111E8, (unint64_t *)&unk_26B0111F0, v1);
    unint64_t v2 = sub_24162F8A8();
    if (!v3) {
      atomic_store(v2, (unint64_t *)&qword_26B010FC0);
    }
  }
}

void sub_2411C54D4()
{
  if (!qword_26B010010)
  {
    sub_2411ADDDC(255, &qword_26B010410, sub_2411C85F4);
    sub_2411ADE40((unint64_t *)&qword_26B010400, &qword_26B010410, sub_2411C85F4);
    unint64_t v0 = sub_24162F8A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010010);
    }
  }
}

void sub_2411C5584()
{
  if (!qword_26B00FFF0)
  {
    sub_2411C2F20();
    sub_2411C43C0();
    sub_2411AB2B4((unint64_t *)&qword_26B0101E0, (void (*)(uint64_t))sub_2411C2F20);
    sub_2411AB2B4(&qword_26B010098, (void (*)(uint64_t))sub_2411C43C0);
    unint64_t v0 = sub_24162F878();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B00FFF0);
    }
  }
}

void sub_2411C5670()
{
  if (!qword_26B00EB58)
  {
    sub_2411A8474(255, (unint64_t *)&unk_26B012F20, (uint64_t)&type metadata for UserCharacteristics.Age, MEMORY[0x263EFDE48]);
    sub_2411A8628(255, &qword_26B012F40, (uint64_t (*)(uint64_t))type metadata accessor for HKBiologicalSex, MEMORY[0x263EFDE48]);
    sub_2411A872C((unint64_t *)&qword_26B012F18, (unint64_t *)&unk_26B012F20, (uint64_t)&type metadata for UserCharacteristics.Age);
    sub_2411C0AF8();
    unint64_t v0 = sub_24162F878();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B00EB58);
    }
  }
}

void sub_2411C5770()
{
  if (!qword_26B00FFE0)
  {
    sub_2411A8428(255, &qword_26B00EC40, (uint64_t)&type metadata for HKMCAnalysisResult, MEMORY[0x263EFDE48]);
    sub_2411C43C0();
    sub_2411C0C70();
    sub_2411A70D0(&qword_26B010098, (void (*)(uint64_t))sub_2411C43C0);
    unint64_t v0 = sub_24162F878();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B00FFE0);
    }
  }
}

void sub_2411C5850()
{
  if (!qword_26B010FB0)
  {
    sub_2411B12E8(255, &qword_26B011238, (void (*)(uint64_t))sub_2411C0598);
    sub_2411B12E8(255, (unint64_t *)&qword_26B011248, (void (*)(uint64_t))sub_2412AD384);
    sub_241196680((unint64_t *)&unk_26B011228, &qword_26B011238, (void (*)(uint64_t))sub_2411C0598);
    sub_241196680(&qword_26B011240, (unint64_t *)&qword_26B011248, (void (*)(uint64_t))sub_2412AD384);
    unint64_t v0 = sub_24162F878();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010FB0);
    }
  }
}

void sub_2411C5954()
{
  if (!qword_26B00EB48)
  {
    sub_2411C1700();
    sub_2411C1570();
    sub_2411A6300((unint64_t *)&unk_26B00EBA8, (void (*)(uint64_t))sub_2411C1700);
    sub_2411A6300((unint64_t *)&unk_26B00EBC0, (void (*)(uint64_t))sub_2411C1570);
    unint64_t v0 = sub_24162F878();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B00EB48);
    }
  }
}

void sub_2411C5A3C()
{
  if (!qword_26B00FFD0)
  {
    sub_241196DD8(255, &qword_26B010490, (void (*)(uint64_t))type metadata accessor for OvulationConfirmationState);
    sub_241196DD8(255, (unint64_t *)&qword_26B010510, (void (*)(uint64_t))sub_2411ED5E8);
    sub_241196E3C(&qword_26B010488, &qword_26B010490, (void (*)(uint64_t))type metadata accessor for OvulationConfirmationState);
    sub_241196E3C((unint64_t *)&qword_26B010508, (unint64_t *)&qword_26B010510, (void (*)(uint64_t))sub_2411ED5E8);
    unint64_t v0 = sub_24162F878();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B00FFD0);
    }
  }
}

void sub_2411C5B40()
{
  if (!qword_26B00FFC0)
  {
    unint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F44998];
    sub_2411ADDDC(255, (unint64_t *)&qword_26B010480, MEMORY[0x263F44998]);
    sub_2411ADE40(&qword_26B010478, (unint64_t *)&qword_26B010480, v0);
    unint64_t v1 = sub_24162F878();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B00FFC0);
    }
  }
}

uint64_t type metadata accessor for SharedProjectionHighlightChartFeedItemGeneratorPipeline()
{
  uint64_t result = qword_26B00EA80;
  if (!qword_26B00EA80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2411C5C38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin55SharedProjectionHighlightChartFeedItemGeneratorPipeline_domain;
  uint64_t v4 = sub_24162C128();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SharedProjectionHighlightFeedItemGeneratorPipeline()
{
  uint64_t result = qword_26B00E9B0;
  if (!qword_26B00E9B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2411C5CFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin50SharedProjectionHighlightFeedItemGeneratorPipeline_domain;
  uint64_t v4 = sub_24162C128();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SharedProjectionHighlightModelGeneratorPipeline()
{
  uint64_t result = qword_26B012E00;
  if (!qword_26B012E00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2411C5DC4@<X0>(void *a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(sub_24162C1C8() - 8);
  uint64_t v8 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_241197790(a1, a2, v8, a3);
}

uint64_t sub_2411C5E4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin47SharedProjectionHighlightModelGeneratorPipeline_domain;
  uint64_t v4 = sub_24162C128();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t *sub_2411C5EC4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24162C1C8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_24162C128();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = *(void **)((char *)a2 + v12);
    *(uint64_t *)((char *)a1 + v12) = (uint64_t)v14;
    uint64_t v15 = *(void **)((char *)a2 + v13);
    *(uint64_t *)((char *)a1 + v13) = (uint64_t)v15;
    uint64_t v16 = a3[9];
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(uint64_t *)((char *)a1 + v16) = *(uint64_t *)((char *)a2 + v16);
    uint64_t v17 = a3[10];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = sub_24162BA08();
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
    id v22 = v14;
    id v23 = v15;
    swift_retain();
    swift_retain();
    v21(v18, v19, v20);
  }
  return a1;
}

uint64_t type metadata accessor for CycleDeviationsUpdateTileGeneratorPipeline()
{
  uint64_t result = qword_26B00FEA8;
  if (!qword_26B00FEA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2411C60BC(uint64_t a1)
{
  uint64_t v2 = sub_2411A9098(&qword_26B00FE90, (void (*)(uint64_t))type metadata accessor for CycleDeviationsUpdateTileGeneratorPipeline);

  return MEMORY[0x270F36D78](a1, v2);
}

uint64_t sub_2411C6128@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2411A883C();
  *a1 = result;
  return result;
}

uint64_t *sub_2411C6150(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_24162EFA8();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_24162C1C8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = a3[7];
    long long v18 = *(_OWORD *)((char *)a2 + v17 + 24);
    *(_OWORD *)((char *)v4 + v17 + 24) = v18;
    (**(void (***)(void))(v18 - 8))();
    uint64_t v19 = a3[8];
    uint64_t v20 = *(void **)((char *)a2 + v19);
    *(uint64_t *)((char *)v4 + v19) = (uint64_t)v20;
    id v21 = v20;
  }
  return v4;
}

unint64_t sub_2411C62F4()
{
  unint64_t result = qword_26B00FE88;
  if (!qword_26B00FE88)
  {
    type metadata accessor for SleepingWristTemperatureHelpTileGenerator(255);
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B00FE88);
  }
  return result;
}

uint64_t type metadata accessor for SleepingWristTemperatureHelpTileGenerator.Change(uint64_t a1)
{
  return sub_2411B6BD4(a1, qword_26B00FD38);
}

uint64_t sub_2411C6350(uint64_t a1)
{
  uint64_t v2 = sub_2411A5114(&qword_26B00FDD0, (void (*)(uint64_t))type metadata accessor for SleepingWristTemperatureHelpTileGenerator);

  return MEMORY[0x270F36D78](a1, v2);
}

uint64_t sub_2411C63C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  uint64_t v5 = sub_24162C1C8();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_2411C6430@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2411A4C70();
  *a1 = result;
  return result;
}

uint64_t *sub_2411C6458(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_24162C128();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_24162C1C8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v4 + v12) = *(uint64_t *)((char *)a2 + v12);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t type metadata accessor for OvulationConfirmationFailureTileGenerator(uint64_t a1)
{
  return sub_2411B6BD4(a1, qword_26B00FCA0);
}

uint64_t type metadata accessor for OvulationConfirmationFailureTileGenerator.Change(uint64_t a1)
{
  return sub_2411B6BD4(a1, qword_26B00FBF8);
}

uint64_t sub_2411C65C4(uint64_t a1)
{
  uint64_t v2 = sub_241196E8C(&qword_26B00FC88, (void (*)(uint64_t))type metadata accessor for OvulationConfirmationFailureTileGenerator);

  return MEMORY[0x270F36D78](a1, v2);
}

uint64_t sub_2411C6630@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24162C128();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_2411C6698@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_241196A00();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for ProjectionHighlightTileGeneratorPipeline()
{
  uint64_t result = qword_26B00FB30;
  if (!qword_26B00FB30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2411C670C@<X0>(uint64_t *a1@<X8>)
{
  return sub_2411C6714(a1);
}

uint64_t sub_2411C6714@<X0>(uint64_t *a1@<X8>)
{
  sub_2411AB2FC(0, (unint64_t *)&qword_26B012EA0, (void (*)(uint64_t))sub_2411C8510);
  sub_2411AB8A0((unint64_t *)&qword_26B012E98, (unint64_t *)&qword_26B012EA0, (void (*)(uint64_t))sub_2411C8510);
  uint64_t result = sub_24162FCB8();
  *a1 = result;
  return result;
}

uint64_t sub_2411C67A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40ProjectionHighlightTileGeneratorPipeline_domain;
  uint64_t v4 = sub_24162C128();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_2411C6818()
{
  unint64_t result = qword_26B010F08;
  if (!qword_26B010F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B010F08);
  }
  return result;
}

unint64_t sub_2411C686C()
{
  unint64_t result = qword_26B010F00;
  if (!qword_26B010F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B010F00);
  }
  return result;
}

uint64_t sub_2411C68C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for SharedProjectionHighlightModelGenerator()
{
  uint64_t result = qword_26B012598;
  if (!qword_26B012598) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2411C696C()
{
  return swift_retain();
}

unint64_t sub_2411C6974()
{
  unint64_t result = qword_26B010E48;
  if (!qword_26B010E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B010E48);
  }
  return result;
}

unint64_t sub_2411C69C8()
{
  unint64_t result = qword_26B010E40;
  if (!qword_26B010E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B010E40);
  }
  return result;
}

uint64_t type metadata accessor for SleepMeasurementsConfigurationProvider()
{
  uint64_t result = qword_26B00FB18;
  if (!qword_26B00FB18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_2411C6A68(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_24162EFA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_24162C1C8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    long long v13 = *(_OWORD *)((char *)a2 + v12 + 24);
    *(_OWORD *)((char *)v4 + v12 + 24) = v13;
    (**(void (***)(void))(v13 - 8))();
    uint64_t v14 = a3[7];
    long long v15 = *(_OWORD *)((char *)a2 + v14 + 24);
    *(_OWORD *)((char *)v4 + v14 + 24) = v15;
    (**(void (***)(void))(v15 - 8))();
    uint64_t v16 = a3[8];
    uint64_t v17 = a3[9];
    long long v18 = *(void **)((char *)a2 + v16);
    *(uint64_t *)((char *)v4 + v16) = (uint64_t)v18;
    *(uint64_t *)((char *)v4 + v17) = *(uint64_t *)((char *)a2 + v17);
    *(uint64_t *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    id v19 = v18;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t type metadata accessor for OvulationConfirmationHelpTileGenerator(uint64_t a1)
{
  return sub_2411B6BD4(a1, qword_26B00FA58);
}

uint64_t sub_2411C6C70(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for OvulationConfirmationHelpTileGenerator.Change(uint64_t a1)
{
  return sub_2411B6BD4(a1, qword_26B00F998);
}

uint64_t sub_2411C6CD8(uint64_t a1)
{
  uint64_t v2 = sub_2411C6C70(&qword_26B00FA40, (void (*)(uint64_t))type metadata accessor for OvulationConfirmationHelpTileGenerator);

  return MEMORY[0x270F36D78](a1, v2);
}

uint64_t sub_2411C6D44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2411AD128();
  *a1 = result;
  return result;
}

uint64_t *sub_2411C6D6C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24162C1C8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    uint64_t v11 = a3[7];
    uint64_t v12 = (char *)a1 + v11;
    long long v13 = (char *)a2 + v11;
    long long v14 = *(_OWORD *)((char *)a2 + v11 + 24);
    *(_OWORD *)((char *)a1 + v11 + 24) = v14;
    uint64_t v15 = v14;
    uint64_t v16 = **(void (***)(char *, char *, uint64_t))(v14 - 8);
    id v17 = v10;
    swift_retain();
    v16(v12, v13, v15);
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  }
  return a1;
}

uint64_t type metadata accessor for CycleFactorsReminderGeneratorPipeline(uint64_t a1)
{
  return sub_2411B6BD4(a1, qword_26B00F8F8);
}

uint64_t type metadata accessor for CycleFactorsReminderGeneratorPipeline.Change(uint64_t a1)
{
  return sub_2411B6BD4(a1, qword_26B00F848);
}

uint64_t sub_2411C6F10(uint64_t a1)
{
  uint64_t v2 = sub_2411AF6F4(&qword_26B00F8E0, (void (*)(uint64_t))type metadata accessor for CycleFactorsReminderGeneratorPipeline);

  return MEMORY[0x270F36D78](a1, v2);
}

uint64_t sub_2411C6F7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2411ADE90();
  *a1 = result;
  return result;
}

uint64_t *sub_2411C6FA4@<X0>(uint64_t *result@<X0>, BOOL *a2@<X8>)
{
  int64_t v2 = 0;
  uint64_t v3 = 0;
  uint64_t v4 = *result;
  uint64_t v5 = 1 << *(unsigned char *)(*result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  uint64_t v8 = *(void *)(v4 + 64);
  uint64_t v7 = v4 + 64;
  unint64_t v9 = v6 & v8;
  int64_t v10 = (unint64_t)(v5 + 63) >> 6;
  do
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v2 << 6);
    }
    else
    {
      int64_t v15 = v2 + 1;
      if (__OFADD__(v2, 1)) {
        goto LABEL_27;
      }
      if (v15 >= v10)
      {
LABEL_25:
        *a2 = v3 > 0;
        return result;
      }
      unint64_t v16 = *(void *)(v7 + 8 * v15);
      ++v2;
      if (!v16)
      {
        int64_t v2 = v15 + 1;
        if (v15 + 1 >= v10) {
          goto LABEL_25;
        }
        unint64_t v16 = *(void *)(v7 + 8 * v2);
        if (!v16)
        {
          int64_t v2 = v15 + 2;
          if (v15 + 2 >= v10) {
            goto LABEL_25;
          }
          unint64_t v16 = *(void *)(v7 + 8 * v2);
          if (!v16)
          {
            int64_t v2 = v15 + 3;
            if (v15 + 3 >= v10) {
              goto LABEL_25;
            }
            unint64_t v16 = *(void *)(v7 + 8 * v2);
            if (!v16)
            {
              int64_t v2 = v15 + 4;
              if (v15 + 4 >= v10) {
                goto LABEL_25;
              }
              unint64_t v16 = *(void *)(v7 + 8 * v2);
              if (!v16)
              {
                int64_t v17 = v15 + 5;
                if (v17 >= v10) {
                  goto LABEL_25;
                }
                unint64_t v16 = *(void *)(v7 + 8 * v17);
                if (!v16)
                {
                  while (1)
                  {
                    int64_t v2 = v17 + 1;
                    if (__OFADD__(v17, 1)) {
                      goto LABEL_28;
                    }
                    if (v2 >= v10) {
                      goto LABEL_25;
                    }
                    unint64_t v16 = *(void *)(v7 + 8 * v2);
                    ++v17;
                    if (v16) {
                      goto LABEL_24;
                    }
                  }
                }
                int64_t v2 = v17;
              }
            }
          }
        }
      }
LABEL_24:
      unint64_t v9 = (v16 - 1) & v16;
      unint64_t v12 = __clz(__rbit64(v16)) + (v2 << 6);
    }
    uint64_t v13 = *(void *)(*(void *)(*result + 56) + 8 * v12);
    BOOL v14 = __OFADD__(v3, v13);
    v3 += v13;
  }
  while (!v14);
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_2411C70E4()
{
  unint64_t result = qword_26B010DA8;
  if (!qword_26B010DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B010DA8);
  }
  return result;
}

unint64_t sub_2411C7138()
{
  unint64_t result = qword_26B010DA0;
  if (!qword_26B010DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B010DA0);
  }
  return result;
}

uint64_t type metadata accessor for SetupPregnancyModeFeaturesGenerator()
{
  uint64_t result = qword_26B010D60;
  if (!qword_26B010D60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2411C71D8(void *a1, void *a2)
{
  sub_2411A15C8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_2411C71E0(uint64_t a1)
{
  uint64_t v2 = sub_2411966D0(&qword_26B010D40, (void (*)(uint64_t))type metadata accessor for SetupPregnancyModeFeaturesGenerator);

  return MEMORY[0x270F36D78](a1, v2);
}

uint64_t sub_2411C724C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin35SetupPregnancyModeFeaturesGenerator_context;
  uint64_t v4 = sub_24162C1C8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_2411C72C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2411962DC();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for OvulationConfirmationStateProvider()
{
  return self;
}

unint64_t sub_2411C7314()
{
  unint64_t result = qword_26B013070;
  if (!qword_26B013070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B013070);
  }
  return result;
}

unint64_t sub_2411C7368()
{
  unint64_t result = qword_26B013068;
  if (!qword_26B013068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B013068);
  }
  return result;
}

void sub_2411C73BC(uint64_t a1)
{
}

uint64_t type metadata accessor for AddPregnancyFeedItemGenerator(uint64_t a1)
{
  return sub_2411B6BD4(a1, qword_26B010CC0);
}

uint64_t type metadata accessor for AddPregnancyFeedItemGenerator.Change(uint64_t a1)
{
  return sub_2411B6BD4(a1, qword_26B010C00);
}

uint64_t sub_2411C7430()
{
  uint64_t v1 = *(void *)(sub_24162C1C8() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void **)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24119290C(v3, v0 + v2, v4);
}

uint64_t sub_2411C74C0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F36D78](a1, WitnessTable);
}

uint64_t sub_2411C7514@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin29AddPregnancyFeedItemGenerator_context;
  uint64_t v4 = sub_24162C1C8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_2411C758C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2411A1048();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for SummaryTileGeneratorPipeline()
{
  uint64_t result = qword_26B012C58;
  if (!qword_26B012C58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2411C7604()
{
  return swift_retain();
}

uint64_t sub_2411C7618@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin28SummaryTileGeneratorPipeline_domain;
  uint64_t v4 = sub_24162C128();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t *sub_2411C7690(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    int64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_24162C1C8();
    unint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    long long v14 = *(_OWORD *)((char *)a2 + v13 + 24);
    *(_OWORD *)((char *)v4 + v13 + 24) = v14;
    (**(void (***)(void))(v14 - 8))();
    uint64_t v15 = a3[7];
    long long v16 = *(_OWORD *)((char *)a2 + v15 + 24);
    *(_OWORD *)((char *)v4 + v15 + 24) = v16;
    (**(void (***)(void))(v16 - 8))();
    uint64_t v17 = a3[8];
    uint64_t v18 = a3[9];
    id v19 = *(void **)((char *)a2 + v17);
    *(uint64_t *)((char *)v4 + v17) = (uint64_t)v19;
    uint64_t v20 = *(void **)((char *)a2 + v18);
    *(uint64_t *)((char *)v4 + v18) = (uint64_t)v20;
    id v21 = v19;
    id v22 = v20;
  }
  return v4;
}

uint64_t type metadata accessor for SleepOnboardingTileGenerator(uint64_t a1)
{
  return sub_2411B6BD4(a1, qword_26B00F5E0);
}

uint64_t type metadata accessor for SleepOnboardingTileGenerator.Change(uint64_t a1)
{
  return sub_2411B6BD4(a1, qword_26B00F530);
}

uint64_t sub_2411C788C(uint64_t a1)
{
  uint64_t v2 = sub_24119C2BC(&qword_26B00F5C8, (void (*)(uint64_t))type metadata accessor for SleepOnboardingTileGenerator);

  return MEMORY[0x270F36D78](a1, v2);
}

uint64_t sub_2411C78F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24119BB6C();
  *a1 = result;
  return result;
}

unint64_t sub_2411C7920()
{
  unint64_t result = qword_26B010BA0;
  if (!qword_26B010BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B010BA0);
  }
  return result;
}

unint64_t sub_2411C7974()
{
  unint64_t result = qword_26B010B98;
  if (!qword_26B010B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B010B98);
  }
  return result;
}

unint64_t sub_2411C79C8()
{
  unint64_t result = qword_26B013060;
  if (!qword_26B013060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B013060);
  }
  return result;
}

unint64_t sub_2411C7A1C()
{
  unint64_t result = qword_26B013058;
  if (!qword_26B013058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B013058);
  }
  return result;
}

unint64_t sub_2411C7A70()
{
  unint64_t result = qword_26B012210;
  if (!qword_26B012210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B012210);
  }
  return result;
}

unint64_t sub_2411C7AC4()
{
  unint64_t result = qword_26B012208;
  if (!qword_26B012208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B012208);
  }
  return result;
}

unint64_t sub_2411C7B18()
{
  unint64_t result = qword_26B013050;
  if (!qword_26B013050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B013050);
  }
  return result;
}

unint64_t sub_2411C7B6C()
{
  unint64_t result = qword_26B013048;
  if (!qword_26B013048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B013048);
  }
  return result;
}

uint64_t type metadata accessor for OvulationConfirmationState()
{
  uint64_t result = qword_26B00F378;
  if (!qword_26B00F378) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for DaySummaryChangeDetector()
{
  return self;
}

void sub_2411C7C30(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
}

uint64_t storeEnumTagSinglePayload for UserCharacteristics.Age(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for UserCharacteristics.Age(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

void **assignWithTake for HKMCAnalysisResult(void **a1, unint64_t *a2)
{
  char v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t sub_2411C7CEC(uint64_t a1)
{
  return sub_2411A2F5C(a1);
}

uint64_t sub_2411C7D10()
{
  type metadata accessor for MenstrualCyclesHealthPluginDelegate();
  uint64_t v0 = swift_allocObject();
  sub_2411A1DC4("[%{public}s] Plugin delegate is initialized");
  return v0;
}

uint64_t type metadata accessor for MenstrualCyclesNotificationsSettingsGeneratorPipeline()
{
  uint64_t result = qword_26B00E6C8;
  if (!qword_26B00E6C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2411C7D9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_24162C1C8() - 8);
  uint64_t result = sub_2411AB3C4(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
  *a1 = result;
  return result;
}

uint64_t sub_2411C7E38()
{
  return swift_retain();
}

uint64_t sub_2411C7E4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin53MenstrualCyclesNotificationsSettingsGeneratorPipeline_domain;
  uint64_t v4 = sub_24162C128();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for MenstrualCyclesOnboardingTileGeneratorPipeline()
{
  uint64_t result = qword_26B012A10;
  if (!qword_26B012A10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2411C7F10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46MenstrualCyclesOnboardingTileGeneratorPipeline_domain;
  uint64_t v4 = sub_24162C128();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for MenstrualCyclesBrowseTileGeneratorPipeline()
{
  uint64_t result = qword_26B012950;
  if (!qword_26B012950) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2411C7FD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42MenstrualCyclesBrowseTileGeneratorPipeline_domain;
  uint64_t v4 = sub_24162C128();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for MenstrualCyclesArticlesGeneratorPipeline()
{
  uint64_t result = qword_26B012910;
  if (!qword_26B012910) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2411C8098()
{
  sub_241195A40(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t type metadata accessor for MenstrualCyclesBrowseTileViewController()
{
  uint64_t result = qword_26B0130D8;
  if (!qword_26B0130D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for MenstrualCyclesAnalysisChangeDetector()
{
  uint64_t result = qword_26B012578;
  if (!qword_26B012578) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for MenstrualCyclesSidebarActionHandler(uint64_t a1)
{
  return sub_2411B6BD4(a1, qword_26B00F310);
}

uint64_t type metadata accessor for MenstrualCyclesBrowseTileGenerator(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_26B012828);
}

unint64_t sub_2411C817C()
{
  unint64_t result = qword_26B012820;
  if (!qword_26B012820)
  {
    type metadata accessor for MenstrualCyclesBrowseTileGenerator(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B012820);
  }
  return result;
}

uint64_t sub_2411C81D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_24162C1C8() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_241196718(v5, v1 + v4, v6, a1);
}

uint64_t sub_2411C8274@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_24162C1C8() - 8);
  uint64_t v6 = *(void *)(v2
                 + ((*(void *)(v5 + 64)
                   + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
                   + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24119A174(a1, v6, a2);
}

uint64_t sub_2411C8320@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_2411BB184(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t type metadata accessor for LastMenstrualPeriodGeneratorPipeline()
{
  uint64_t result = qword_26B012720;
  if (!qword_26B012720) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2411C8374@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin36LastMenstrualPeriodGeneratorPipeline_domain;
  uint64_t v4 = sub_24162C128();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_2411C83EC()
{
  if (!qword_26B00F268)
  {
    sub_24162E7D8();
    sub_2411C0494();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B00F268);
    }
  }
}

uint64_t sub_2411C8460(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_2411C84B0()
{
  unint64_t result = qword_26B012230;
  if (!qword_26B012230)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B012230);
  }
  return result;
}

unint64_t sub_2411C8510()
{
  unint64_t result = qword_26B012630;
  if (!qword_26B012630)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B012630);
  }
  return result;
}

unint64_t sub_2411C8568()
{
  unint64_t result = qword_26B012618;
  if (!qword_26B012618)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B012618);
  }
  return result;
}

void sub_2411C85C0(uint64_t a1)
{
}

void sub_2411C85F4(uint64_t a1)
{
}

void sub_2411C8628(uint64_t a1)
{
}

unint64_t variable initialization expression of CycleChartsCollectionView.subscriptions()
{
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) == 0 || !sub_241633068()) {
    return MEMORY[0x263F8EE88];
  }
  unint64_t v2 = MEMORY[0x263F8EE78];
  return sub_2411CA178(v2);
}

uint64_t sub_2411C8844(uint64_t a1, uint64_t a2)
{
  return sub_2411C97F4(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_2411C8874()
{
  return MEMORY[0x270EF17B0](*v0);
}

uint64_t sub_2411C887C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = 0;
  char v7 = 1;
  uint64_t result = MEMORY[0x245619080](a1, &v6);
  char v4 = v7;
  uint64_t v5 = v6;
  if (v7) {
    uint64_t v5 = 0;
  }
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v4;
  return result;
}

uint64_t sub_2411C88D0(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = 0;
  char v8 = 1;
  char v3 = MEMORY[0x245619090](a1, &v7);
  char v4 = v8;
  uint64_t v5 = v7;
  if (v8) {
    uint64_t v5 = 0;
  }
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v4;
  return v3 & 1;
}

void sub_2411C8928(double *a1@<X8>)
{
  *a1 = MEMORY[0x2456190A0]();
}

uint64_t sub_2411C8950(uint64_t a1)
{
  uint64_t v2 = sub_2411BA264(&qword_268CFA040, type metadata accessor for HKError);

  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_2411C89BC(uint64_t a1)
{
  uint64_t v2 = sub_2411BA264(&qword_268CFA040, type metadata accessor for HKError);

  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t sub_2411C8A2C(uint64_t a1)
{
  uint64_t v2 = sub_2411BA264((unint64_t *)&qword_268CFA078, type metadata accessor for HKError);

  return MEMORY[0x270EEF788](a1, v2);
}

id sub_2411C8A98()
{
  return *v0;
}

uint64_t sub_2411C8AA0@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_2411C8AA8()
{
  return MEMORY[0x270EF1C48](*v0);
}

uint64_t sub_2411C8AB0(uint64_t a1, uint64_t a2)
{
  int v6 = 0;
  char v7 = 1;
  uint64_t result = MEMORY[0x24561F570](a1, &v6);
  char v4 = v7;
  int v5 = v6;
  if (v7) {
    int v5 = 0;
  }
  *(_DWORD *)a2 = v5;
  *(unsigned char *)(a2 + 4) = v4;
  return result;
}

uint64_t sub_2411C8B04(uint64_t a1, uint64_t a2)
{
  int v7 = 0;
  char v8 = 1;
  char v3 = MEMORY[0x24561F580](a1, &v7);
  char v4 = v8;
  int v5 = v7;
  if (v8) {
    int v5 = 0;
  }
  *(_DWORD *)a2 = v5;
  *(unsigned char *)(a2 + 4) = v4;
  return v3 & 1;
}

void sub_2411C8B5C(float *a1@<X8>)
{
  *a1 = MEMORY[0x24561F590]();
}

uint64_t sub_2411C8B88(uint64_t a1, uint64_t a2)
{
  return sub_2411C97F4(a1, a2, MEMORY[0x263F8D308]);
}

BOOL sub_2411C8BA0(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_2411C8BD0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_2411C8BE4(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_2411C8BF8(void *result)
{
  *v1 &= *result;
  return result;
}

void sub_2411C8C0C(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_2411C8C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

void *sub_2411C8C2C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_2411C8C40@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

void *sub_2411C8C54@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_2411C8C80@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_2411C8CA4(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_2411C8CB8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_2411C8CCC(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_2411C8CE0(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_2411C8CF4(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_2411C8D08()
{
  return *v0 == 0;
}

void *sub_2411C8D18(void *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_2411C8D30()
{
  return sub_241633318();
}

uint64_t sub_2411C8D60()
{
  return sub_241633358();
}

uint64_t sub_2411C8DA8()
{
  return sub_241633358();
}

uint64_t sub_2411C8DEC(uint64_t a1, id *a2)
{
  uint64_t result = sub_241631CE8();
  *a2 = 0;
  return result;
}

uint64_t sub_2411C8E64(uint64_t a1, id *a2)
{
  char v3 = sub_241631CF8();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_2411C8EE4@<X0>(uint64_t *a1@<X8>)
{
  _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  uint64_t v2 = sub_241631CC8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2411C8F28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2411C8F54()
{
  return _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
}

uint64_t sub_2411C8F64(uint64_t a1)
{
  uint64_t v2 = sub_2411BA264((unint64_t *)&qword_268CFA078, type metadata accessor for HKError);

  return MEMORY[0x270EEF7E8](a1, v2);
}

uint64_t sub_2411C8FD0(uint64_t a1)
{
  uint64_t v2 = sub_2411BA264((unint64_t *)&qword_268CFA078, type metadata accessor for HKError);

  return MEMORY[0x270EEF7A0](a1, v2);
}

uint64_t sub_2411C903C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_2411BA264((unint64_t *)&qword_268CFA078, type metadata accessor for HKError);
  id v5 = a1;

  return MEMORY[0x270EEF790](v5, a2, v4);
}

uint64_t sub_2411C90CC()
{
  id v1 = *v0;
  uint64_t v2 = sub_2416329D8();

  return v2;
}

uint64_t sub_2411C9104(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2411BA264((unint64_t *)&qword_268CFA078, type metadata accessor for HKError);

  return MEMORY[0x270EEF7D0](a1, a2, v4);
}

uint64_t sub_2411C9180()
{
  return sub_241633358();
}

void *sub_2411C91E0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_2411C91F0(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_2411C91FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_2411C9E2C(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

void *sub_2411C923C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_2411C9248(uint64_t a1, uint64_t a2)
{
  return sub_2411C96E4(a1, a2, (void (*)(void))sub_2411CAFF8, (void (*)(void))sub_2411CB02C);
}

uint64_t sub_2411C9274(uint64_t a1, uint64_t a2)
{
  return sub_2411C96E4(a1, a2, (void (*)(void))sub_2411CCDB4, (void (*)(void))sub_2411CCDE8);
}

uint64_t sub_2411C92A0(uint64_t a1, uint64_t a2)
{
  return sub_2411C96E4(a1, a2, (void (*)(void))sub_2411CCE1C, (void (*)(void))sub_2411CCE50);
}

double sub_2411C92CC@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

uint64_t sub_2411C92D8()
{
  return sub_2416330F8();
}

uint64_t sub_2411C93A0(uint64_t a1, uint64_t a2)
{
  return sub_2411C96E4(a1, a2, (void (*)(void))sub_2411CAF28, (void (*)(void))sub_2411CAF5C);
}

uint64_t sub_2411C93CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2411BA264((unint64_t *)&qword_268CFA078, type metadata accessor for HKError);

  return MEMORY[0x270EEF7B8](a1, a2, a3, v6);
}

BOOL sub_2411C9450(void *a1, void *a2)
{
  return *a1 == *a2;
}

_DWORD *sub_2411C9464@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

float sub_2411C9474@<S0>(_DWORD *a1@<X8>)
{
  float result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t sub_2411C9480()
{
  return sub_2416330F8();
}

uint64_t sub_2411C953C(uint64_t a1, uint64_t a2)
{
  return sub_2411C96E4(a1, a2, (void (*)(void))sub_2411CAF90, (void (*)(void))sub_2411CAFC4);
}

uint64_t sub_2411C9568(uint64_t a1, uint64_t a2)
{
  return sub_2411C96E4(a1, a2, (void (*)(void))sub_2411CCA88, (void (*)(void))sub_2411CCABC);
}

uint64_t sub_2411C9594(uint64_t a1, uint64_t a2)
{
  return sub_2411C96E4(a1, a2, (void (*)(void))sub_2411CCAF0, (void (*)(void))sub_2411CCB24);
}

uint64_t sub_2411C95C0(uint64_t a1, uint64_t a2)
{
  return sub_2411C96E4(a1, a2, (void (*)(void))sub_2411CCD4C, (void (*)(void))sub_2411CCD80);
}

uint64_t sub_2411C95EC(uint64_t a1, uint64_t a2)
{
  return sub_2411C96E4(a1, a2, (void (*)(void))sub_2411CCCE4, (void (*)(void))sub_2411CCD18);
}

uint64_t sub_2411C9618(uint64_t a1, uint64_t a2)
{
  return sub_2411C96E4(a1, a2, (void (*)(void))sub_2411CCB58, (void (*)(void))sub_2411CCB8C);
}

uint64_t sub_2411C9644(uint64_t a1, uint64_t a2)
{
  return sub_2411C96E4(a1, a2, (void (*)(void))sub_2411CCC7C, (void (*)(void))sub_2411CCCB0);
}

uint64_t sub_2411C9670@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_241631CC8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2411C96B8(uint64_t a1, uint64_t a2)
{
  return sub_2411C96E4(a1, a2, (void (*)(void))sub_2411CCC14, (void (*)(void))sub_2411CCC48);
}

uint64_t sub_2411C96E4(uint64_t a1, uint64_t a2, void (*a3)(void), void (*a4)(void))
{
  a3();
  a4();

  return sub_2416330F8();
}

uint64_t sub_2411C9758()
{
  return MEMORY[0x270F9DDC0](*v0);
}

uint64_t sub_2411C9760()
{
  return sub_241633348();
}

uint64_t sub_2411C9794()
{
  return sub_2416332F8();
}

uint64_t sub_2411C97A4()
{
  return MEMORY[0x270F9DE70](*v0);
}

uint64_t sub_2411C97AC()
{
  return sub_241633338();
}

void sub_2411C97E0()
{
}

uint64_t sub_2411C97F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_2411C9838()
{
  _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  sub_241631DC8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2411C988C()
{
  _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  sub_241633308();
  sub_241631DC8();
  uint64_t v0 = sub_241633358();
  swift_bridgeObjectRelease();
  return v0;
}

BOOL sub_2411C9900(double *a1, double *a2)
{
  return *a1 == *a2;
}

BOOL sub_2411C9914(float *a1, float *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2411C9928()
{
  uint64_t v0 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  uint64_t v2 = v1;
  if (v0 == _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_241633218();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_2411C99B4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_2411CAE78();
    uint64_t v3 = sub_241632E58();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      int v7 = *(unsigned __int8 *)(v6 + v4);
      sub_241633308();
      sub_241633318();
      uint64_t result = sub_241633358();
      uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v10 = result & ~v9;
      unint64_t v11 = v10 >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
      uint64_t v13 = 1 << v10;
      uint64_t v14 = *(void *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(unsigned __int8 *)(v14 + v10) == v7) {
          goto LABEL_3;
        }
        uint64_t v15 = ~v9;
        while (1)
        {
          unint64_t v10 = (v10 + 1) & v15;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v14 + v10) == v7) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v11) = v13 | v12;
      *(unsigned char *)(v14 + v10) = v7;
      uint64_t v16 = *(void *)(v3 + 16);
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_2411C9AF4(uint64_t a1)
{
  uint64_t v2 = sub_24162B9E8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_2411CADE4();
    uint64_t v9 = sub_241632E58();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    id v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_2411BA264((unint64_t *)&unk_26B0125D0, MEMORY[0x263F07908]);
      uint64_t v16 = sub_241631B68();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_2411BA264(&qword_26B0120D8, MEMORY[0x263F07908]);
          char v23 = sub_241631C28();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

void sub_2411C9E08(unint64_t a1)
{
}

uint64_t sub_2411C9E2C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_2411C9E64(uint64_t a1)
{
  uint64_t v2 = sub_24162D498();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_2411CB060();
    uint64_t v9 = sub_241632E58();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    id v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_2411BA264(&qword_268CF9E28, MEMORY[0x263F43F70]);
      uint64_t v16 = sub_241631B68();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_2411BA264(&qword_268CF9E30, MEMORY[0x263F43F70]);
          char v23 = sub_241631C28();
          uint64_t v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

unint64_t sub_2411CA178(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v6 = sub_241633068();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_2411CB554();
      uint64_t result = sub_241632E58();
      unint64_t v3 = result;
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v5 = sub_241633068();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v5) {
        return v3;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  unint64_t v3 = MEMORY[0x263F8EE88];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return v3;
  }
LABEL_9:
  unint64_t v7 = 0;
  unint64_t v8 = v3 + 56;
  unint64_t v22 = v1 & 0xC000000000000001;
  unint64_t v19 = v1 + 32;
  uint64_t v20 = v1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v21 = v1;
  while (v22)
  {
    uint64_t result = MEMORY[0x245620370](v7, v1);
    unint64_t v9 = result;
    BOOL v10 = __OFADD__(v7++, 1);
    if (v10) {
      goto LABEL_26;
    }
LABEL_18:
    sub_24162FA98();
    sub_2411BA264(&qword_268CF9E48, MEMORY[0x263EFDD18]);
    uint64_t result = sub_241631B68();
    uint64_t v11 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v12 = result & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = *(void *)(v8 + 8 * (v12 >> 6));
    uint64_t v15 = 1 << v12;
    if (((1 << v12) & v14) != 0)
    {
      uint64_t v16 = ~v11;
      sub_2411BA264(&qword_268CF9E50, MEMORY[0x263EFDD18]);
      do
      {
        uint64_t result = sub_241631C28();
        if (result)
        {
          uint64_t result = swift_release();
          unint64_t v1 = v21;
          goto LABEL_11;
        }
        unint64_t v12 = (v12 + 1) & v16;
        unint64_t v13 = v12 >> 6;
        uint64_t v14 = *(void *)(v8 + 8 * (v12 >> 6));
        uint64_t v15 = 1 << v12;
      }
      while ((v14 & (1 << v12)) != 0);
      unint64_t v1 = v21;
    }
    *(void *)(v8 + 8 * v13) = v15 | v14;
    *(void *)(*(void *)(v3 + 48) + 8 * v12) = v9;
    uint64_t v17 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v17, 1);
    uint64_t v18 = v17 + 1;
    if (v10) {
      goto LABEL_27;
    }
    *(void *)(v3 + 16) = v18;
LABEL_11:
    if (v7 == v5) {
      return v3;
    }
  }
  if (v7 >= *(void *)(v20 + 16)) {
    goto LABEL_28;
  }
  unint64_t v9 = *(void *)(v19 + 8 * v7);
  uint64_t result = swift_retain();
  BOOL v10 = __OFADD__(v7++, 1);
  if (!v10) {
    goto LABEL_18;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

__n128 initializeWithTake for PDFLegends(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void type metadata accessor for HKFeatureIdentifier(uint64_t a1)
{
}

void type metadata accessor for HKMCCycleFactor(uint64_t a1)
{
}

__n128 initializeWithTake for PhaseWindow(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for HKMCDaySummaryBleedingType(uint64_t a1)
{
}

void type metadata accessor for HKMCLoggedDataMethod(uint64_t a1)
{
}

void type metadata accessor for UIUserInterfaceSizeClass(uint64_t a1)
{
}

void type metadata accessor for HKMCDaySummaryBleedingFlow(uint64_t a1)
{
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for HKMCDisplayTypeIdentifier(uint64_t a1)
{
}

void type metadata accessor for HKMCDeviationType(uint64_t a1)
{
}

void type metadata accessor for HKMCDaySummarySymptoms(uint64_t a1)
{
}

void type metadata accessor for HKMCDaySummarySexualActivity(uint64_t a1)
{
}

void type metadata accessor for HKMCDaySummaryProgesteroneTestResult(uint64_t a1)
{
}

void type metadata accessor for HKMCDaySummaryPregnancyTestResult(uint64_t a1)
{
}

void type metadata accessor for HKMCDaySummaryOvulationTestResult(uint64_t a1)
{
}

void type metadata accessor for HKMCDaySummaryCervicalMucusQuality(uint64_t a1)
{
}

void type metadata accessor for HKMCPregnancyState(uint64_t a1)
{
}

uint64_t sub_2411CA5A8()
{
  return sub_2411BA264(&qword_268CF9D60, type metadata accessor for HKMCDaySummarySymptoms);
}

uint64_t sub_2411CA5F0()
{
  return sub_2411BA264(&qword_268CF9D68, type metadata accessor for HKMCDaySummarySymptoms);
}

uint64_t sub_2411CA638()
{
  return sub_2411BA264(&qword_268CF9D70, type metadata accessor for HKMCDaySummarySymptoms);
}

uint64_t sub_2411CA680()
{
  return sub_2411BA264(&qword_268CF9D78, type metadata accessor for HKMCDaySummarySymptoms);
}

uint64_t sub_2411CA6C8()
{
  return sub_2411BA264(&qword_268CF9D80, type metadata accessor for HKMCDisplayTypeIdentifier);
}

uint64_t sub_2411CA710()
{
  return sub_2411BA264(&qword_268CF9D88, type metadata accessor for HKMCDisplayTypeIdentifier);
}

uint64_t sub_2411CA758()
{
  return sub_2411BA264(&qword_268CF9D90, type metadata accessor for UIUserInterfaceSizeClass);
}

uint64_t sub_2411CA7A0()
{
  return sub_2411BA264(&qword_268CF9D98, type metadata accessor for HKMCLoggedDataMethod);
}

uint64_t sub_2411CA7E8()
{
  return sub_2411BA264(&qword_268CF9DA0, type metadata accessor for HKMCLoggedDataMethod);
}

uint64_t sub_2411CA830()
{
  return sub_2411BA264(&qword_268CF9DA8, type metadata accessor for HKMCLoggedDataMethod);
}

uint64_t sub_2411CA878()
{
  return sub_2411BA264(&qword_268CF9DB0, type metadata accessor for HKMCCycleFactor);
}

uint64_t sub_2411CA8C0()
{
  return sub_2411BA264(&qword_268CF9DB8, type metadata accessor for HKFeatureIdentifier);
}

uint64_t sub_2411CA908()
{
  return sub_2411BA264(&qword_268CF9DC0, type metadata accessor for HKFeatureIdentifier);
}

uint64_t sub_2411CA950()
{
  return sub_2411BA264(&qword_268CF9DC8, type metadata accessor for HKFeatureIdentifier);
}

uint64_t sub_2411CA998()
{
  return sub_2411BA264(&qword_268CF9DD0, type metadata accessor for HKMCDeviationType);
}

uint64_t sub_2411CA9E0()
{
  return sub_2411BA264(&qword_268CF9DD8, type metadata accessor for HKMCDisplayTypeIdentifier);
}

void sub_2411CAA28(unint64_t a1)
{
}

void sub_2411CAA4C(unint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7 = a1;
  unint64_t v8 = a1 >> 62;
  if (a1 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v12 = sub_241633068();
    swift_bridgeObjectRelease();
    if (v12)
    {
LABEL_3:
      sub_2411CB4C8(0, a2, a3, a4, a5);
      uint64_t v9 = sub_241632E58();
      uint64_t v10 = v7 & 0xFFFFFFFFFFFFFF8;
      if (!v8) {
        goto LABEL_4;
      }
LABEL_8:
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v11 = sub_241633068();
      swift_bridgeObjectRelease();
      if (!v11) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v9 = MEMORY[0x263F8EE88];
  uint64_t v10 = v7 & 0xFFFFFFFFFFFFFF8;
  if (v8) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v11 = *(void *)(v10 + 16);
  if (!v11) {
    return;
  }
LABEL_9:
  uint64_t v13 = v9 + 56;
  uint64_t v50 = v11;
  if ((v7 & 0xC000000000000001) != 0)
  {
    uint64_t v14 = 0;
    unint64_t v46 = v7;
    while (1)
    {
      uint64_t v15 = MEMORY[0x245620370](v14, v7);
      BOOL v16 = __OFADD__(v14++, 1);
      if (v16)
      {
        __break(1u);
        goto LABEL_37;
      }
      uint64_t v17 = v15;
      uint64_t v18 = sub_2416329A8();
      uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      uint64_t v22 = *(void *)(v13 + 8 * (v20 >> 6));
      uint64_t v23 = 1 << v20;
      if (((1 << v20) & v22) != 0)
      {
        sub_2411B9D00(0, a3);
        id v24 = *(id *)(*(void *)(v9 + 48) + 8 * v20);
        char v25 = sub_2416329B8();

        if (v25)
        {
LABEL_11:
          swift_unknownObjectRelease();
          unint64_t v7 = v46;
          goto LABEL_12;
        }
        uint64_t v26 = ~v19;
        while (1)
        {
          unint64_t v20 = (v20 + 1) & v26;
          unint64_t v21 = v20 >> 6;
          uint64_t v22 = *(void *)(v13 + 8 * (v20 >> 6));
          uint64_t v23 = 1 << v20;
          if ((v22 & (1 << v20)) == 0) {
            break;
          }
          id v27 = *(id *)(*(void *)(v9 + 48) + 8 * v20);
          char v28 = sub_2416329B8();

          if (v28) {
            goto LABEL_11;
          }
        }
        unint64_t v7 = v46;
      }
      *(void *)(v13 + 8 * v21) = v23 | v22;
      *(void *)(*(void *)(v9 + 48) + 8 * v20) = v17;
      uint64_t v29 = *(void *)(v9 + 16);
      BOOL v16 = __OFADD__(v29, 1);
      uint64_t v30 = v29 + 1;
      if (v16) {
        goto LABEL_38;
      }
      *(void *)(v9 + 16) = v30;
LABEL_12:
      if (v14 == v50) {
        return;
      }
    }
  }
  uint64_t v31 = 0;
  uint64_t v47 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v31 != v47)
  {
    id v32 = *(id *)(v7 + 32 + 8 * v31);
    uint64_t v33 = sub_2416329A8();
    uint64_t v34 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v35 = v33 & ~v34;
    unint64_t v36 = v35 >> 6;
    uint64_t v37 = *(void *)(v13 + 8 * (v35 >> 6));
    uint64_t v38 = 1 << v35;
    if (((1 << v35) & v37) != 0)
    {
      sub_2411B9D00(0, a3);
      id v39 = *(id *)(*(void *)(v9 + 48) + 8 * v35);
      char v40 = sub_2416329B8();

      if (v40) {
        goto LABEL_24;
      }
      uint64_t v41 = ~v34;
      unint64_t v35 = (v35 + 1) & v41;
      unint64_t v36 = v35 >> 6;
      uint64_t v37 = *(void *)(v13 + 8 * (v35 >> 6));
      uint64_t v38 = 1 << v35;
      if ((v37 & (1 << v35)) != 0)
      {
        while (1)
        {
          id v42 = *(id *)(*(void *)(v9 + 48) + 8 * v35);
          char v43 = sub_2416329B8();

          if (v43) {
            break;
          }
          unint64_t v35 = (v35 + 1) & v41;
          unint64_t v36 = v35 >> 6;
          uint64_t v37 = *(void *)(v13 + 8 * (v35 >> 6));
          uint64_t v38 = 1 << v35;
          if ((v37 & (1 << v35)) == 0) {
            goto LABEL_32;
          }
        }
LABEL_24:

        uint64_t v11 = v50;
        goto LABEL_25;
      }
LABEL_32:
      uint64_t v11 = v50;
    }
    *(void *)(v13 + 8 * v36) = v38 | v37;
    *(void *)(*(void *)(v9 + 48) + 8 * v35) = v32;
    uint64_t v44 = *(void *)(v9 + 16);
    BOOL v16 = __OFADD__(v44, 1);
    uint64_t v45 = v44 + 1;
    if (v16) {
      goto LABEL_39;
    }
    *(void *)(v9 + 16) = v45;
LABEL_25:
    if (++v31 == v11) {
      return;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

void sub_2411CADC0(unint64_t a1)
{
}

void sub_2411CADE4()
{
  if (!qword_26B0125F8)
  {
    sub_24162B9E8();
    sub_2411BA264((unint64_t *)&unk_26B0125D0, MEMORY[0x263F07908]);
    unint64_t v0 = sub_241632E68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0125F8);
    }
  }
}

void sub_2411CAE78()
{
  if (!qword_268CF9DE0)
  {
    sub_2411CAED4();
    unint64_t v0 = sub_241632E68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF9DE0);
    }
  }
}

unint64_t sub_2411CAED4()
{
  unint64_t result = qword_268CFE670;
  if (!qword_268CFE670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFE670);
  }
  return result;
}

uint64_t sub_2411CAF28()
{
  return sub_2411BA264(&qword_268CF9DF0, type metadata accessor for HKFeatureIdentifier);
}

uint64_t sub_2411CAF5C()
{
  return sub_2411BA264(&qword_268CF9DF8, type metadata accessor for HKFeatureIdentifier);
}

uint64_t sub_2411CAF90()
{
  return sub_2411BA264(&qword_268CF9E00, type metadata accessor for HKMCLoggedDataMethod);
}

uint64_t sub_2411CAFC4()
{
  return sub_2411BA264(&qword_268CF9E08, type metadata accessor for HKMCLoggedDataMethod);
}

uint64_t sub_2411CAFF8()
{
  return sub_2411BA264(&qword_268CF9E10, type metadata accessor for HKMCDisplayTypeIdentifier);
}

uint64_t sub_2411CB02C()
{
  return sub_2411BA264(&qword_268CF9E18, type metadata accessor for HKMCDisplayTypeIdentifier);
}

void sub_2411CB060()
{
  if (!qword_268CF9E20)
  {
    sub_24162D498();
    sub_2411BA264(&qword_268CF9E28, MEMORY[0x263F43F70]);
    unint64_t v0 = sub_241632E68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF9E20);
    }
  }
}

uint64_t sub_2411CB0F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_2411CB468();
    uint64_t v3 = sub_241632E58();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_241633308();
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      sub_241631DC8();
      uint64_t result = sub_241633358();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        BOOL v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_241633218(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_241633218();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      unint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      void *v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

void sub_2411CB294(unint64_t a1)
{
}

uint64_t sub_2411CB2B8()
{
  uint64_t v1 = sub_24162C1C8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

void sub_2411CB3A0()
{
  if (!qword_26B0121E0)
  {
    sub_2411B9D00(255, (unint64_t *)&qword_26B012200);
    unint64_t v0 = sub_241632C18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0121E0);
    }
  }
}

uint64_t sub_2411CB408(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_2411CB468()
{
  if (!qword_26B0123C0)
  {
    unint64_t v0 = sub_241632E68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0123C0);
    }
  }
}

void sub_2411CB4C8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  if (!*a2)
  {
    sub_2411B9D00(255, a3);
    sub_2411A01AC(a5, a3);
    unint64_t v8 = sub_241632E68();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411CB554()
{
  if (!qword_268CF9E40)
  {
    sub_24162FA98();
    sub_2411BA264(&qword_268CF9E48, MEMORY[0x263EFDD18]);
    unint64_t v0 = sub_241632E68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF9E40);
    }
  }
}

void type metadata accessor for HKMCDayViewModelBleedingType(uint64_t a1)
{
}

void type metadata accessor for UNNotificationPresentationOptions(uint64_t a1)
{
}

void type metadata accessor for HKMCNotificationCategory(uint64_t a1)
{
}

void type metadata accessor for OpenURLOptionsKey(uint64_t a1)
{
}

void type metadata accessor for HKDisplayCategoryIdentifier(uint64_t a1)
{
}

uint64_t *sub_2411CB64C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    unint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_24162C128();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_retain();
    v10(v7, v8, v9);
  }
  return v5;
}

void *sub_2411CB730(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  unint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24162C128();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *sub_2411CB7C4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_24162C128();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_2411CB840(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  unint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24162C128();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_2411CB8CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2411CB8E0);
}

uint64_t sub_2411CB8E0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24162C128();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    unint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_2411CB990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2411CB9A4);
}

void *sub_2411CB9A4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24162C128();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2411CBA4C()
{
  uint64_t result = sub_24162C128();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

void type metadata accessor for ImageInitializationOption(uint64_t a1)
{
}

void type metadata accessor for CGRectEdge(uint64_t a1)
{
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for PhaseWindow(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t getEnumTagSinglePayload for CycleDayHeaderRow(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CycleDayHeaderRow(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
}

void type metadata accessor for UIUserInterfaceLevel(uint64_t a1)
{
}

void type metadata accessor for Weight(uint64_t a1)
{
}

void type metadata accessor for TraitKey(uint64_t a1)
{
}

void type metadata accessor for AttributeName(uint64_t a1)
{
}

void type metadata accessor for UNAuthorizationStatus(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for CycleDateFooterRow(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CycleDateFooterRow(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for HKDayIndexRange(uint64_t a1)
{
}

void type metadata accessor for HKMCDayViewModelFertileWindowLevel(uint64_t a1)
{
}

void type metadata accessor for HKMCDayViewModelMenstruationLevel(uint64_t a1)
{
}

void type metadata accessor for HKMCPregnancyAdjustedFeatureIdentifier(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for HKError(uint64_t a1)
{
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for UIContentSizeCategory(uint64_t a1)
{
}

uint64_t sub_2411CBD2C()
{
  return sub_2411BA264((unint64_t *)&qword_268CF9F18, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_2411CBD74()
{
  return sub_2411BA264(&qword_268CF9F20, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_2411CBDBC()
{
  return sub_2411BA264(&qword_268CF9F28, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_2411CBE04()
{
  return sub_2411BA264(&qword_268CF9F30, type metadata accessor for Key);
}

uint64_t sub_2411CBE4C()
{
  return sub_2411BA264(&qword_268CF9F38, type metadata accessor for Key);
}

uint64_t sub_2411CBE94()
{
  return sub_2411BA264(&qword_268CF9F40, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_2411CBEDC()
{
  return sub_2411BA264(&qword_268CF9F48, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_2411CBF24()
{
  return sub_2411BA264(&qword_268CF9F50, type metadata accessor for HKError);
}

uint64_t sub_2411CBF6C()
{
  return sub_2411BA264(&qword_268CF9F58, type metadata accessor for HKError);
}

uint64_t sub_2411CBFB4()
{
  return sub_2411BA264(&qword_268CF9F60, type metadata accessor for HKMCPregnancyAdjustedFeatureIdentifier);
}

uint64_t sub_2411CBFFC()
{
  return sub_2411BA264(&qword_268CF9F68, type metadata accessor for HKMCPregnancyAdjustedFeatureIdentifier);
}

uint64_t sub_2411CC044()
{
  return sub_2411BA264(&qword_268CF9F70, type metadata accessor for AttributeName);
}

uint64_t sub_2411CC08C()
{
  return sub_2411BA264(&qword_268CF9F78, type metadata accessor for AttributeName);
}

uint64_t sub_2411CC0D4()
{
  return sub_2411BA264(&qword_268CF9F80, type metadata accessor for TraitKey);
}

uint64_t sub_2411CC11C()
{
  return sub_2411BA264(&qword_268CF9F88, type metadata accessor for TraitKey);
}

uint64_t sub_2411CC164()
{
  return sub_2411BA264(&qword_268CF9F90, type metadata accessor for Weight);
}

uint64_t sub_2411CC1AC()
{
  return sub_2411BA264(&qword_268CF9F98, type metadata accessor for Weight);
}

uint64_t sub_2411CC1F4()
{
  return sub_2411BA264(&qword_268CF9FA0, type metadata accessor for Weight);
}

uint64_t sub_2411CC23C()
{
  return sub_2411BA264(&qword_268CF9FA8, type metadata accessor for UILayoutPriority);
}

uint64_t sub_2411CC284()
{
  return sub_2411BA264(&qword_268CF9FB0, type metadata accessor for UILayoutPriority);
}

uint64_t sub_2411CC2CC()
{
  return sub_2411BA264(&qword_268CF9FB8, type metadata accessor for UILayoutPriority);
}

uint64_t sub_2411CC314()
{
  return sub_2411BA264(&qword_268CF9FC0, type metadata accessor for ImageInitializationOption);
}

uint64_t sub_2411CC35C()
{
  return sub_2411BA264(&qword_268CF9FC8, type metadata accessor for ImageInitializationOption);
}

uint64_t sub_2411CC3A4()
{
  return sub_2411BA264(&qword_268CF9FD0, type metadata accessor for OpenURLOptionsKey);
}

uint64_t sub_2411CC3EC()
{
  return sub_2411BA264(&qword_268CF9FD8, type metadata accessor for OpenURLOptionsKey);
}

uint64_t sub_2411CC434()
{
  return sub_2411BA264(&qword_268CF9FE0, type metadata accessor for HKMCNotificationCategory);
}

uint64_t sub_2411CC47C()
{
  return sub_2411BA264(&qword_268CF9FE8, type metadata accessor for HKMCNotificationCategory);
}

uint64_t sub_2411CC4C4()
{
  return sub_2411BA264(&qword_268CF9FF0, type metadata accessor for HKMCNotificationCategory);
}

uint64_t sub_2411CC50C()
{
  return sub_2411BA264(&qword_268CF9FF8, type metadata accessor for UNNotificationPresentationOptions);
}

uint64_t sub_2411CC554()
{
  return sub_2411BA264(&qword_268CFA000, type metadata accessor for UNNotificationPresentationOptions);
}

uint64_t sub_2411CC59C()
{
  return sub_2411BA264(&qword_268CFA008, type metadata accessor for UNNotificationPresentationOptions);
}

uint64_t sub_2411CC5E4()
{
  return sub_2411BA264(&qword_268CFA010, type metadata accessor for UNNotificationPresentationOptions);
}

uint64_t sub_2411CC62C()
{
  return sub_2411BA264(&qword_268CFA018, type metadata accessor for OpenURLOptionsKey);
}

uint64_t sub_2411CC674()
{
  return sub_2411BA264(&qword_268CFA020, type metadata accessor for ImageInitializationOption);
}

uint64_t sub_2411CC6BC()
{
  return sub_2411BA264(&qword_268CFA028, type metadata accessor for AttributeName);
}

uint64_t sub_2411CC704()
{
  return sub_2411BA264(&qword_268CFA030, type metadata accessor for TraitKey);
}

uint64_t sub_2411CC74C()
{
  return sub_2411BA264(&qword_268CFA038, type metadata accessor for HKMCPregnancyAdjustedFeatureIdentifier);
}

uint64_t sub_2411CC794()
{
  return sub_2411BA264(&qword_268CFA040, type metadata accessor for HKError);
}

uint64_t sub_2411CC7DC()
{
  return sub_2411BA264(&qword_268CFA048, type metadata accessor for HKError);
}

uint64_t sub_2411CC824()
{
  return sub_2411BA264(&qword_268CFA050, type metadata accessor for HKError);
}

uint64_t sub_2411CC86C()
{
  return sub_2411BA264(&qword_268CFA058, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

uint64_t sub_2411CC8C8()
{
  return sub_2411BA264(&qword_268CFA060, type metadata accessor for Code);
}

unint64_t sub_2411CC914()
{
  unint64_t result = qword_268CFA068;
  if (!qword_268CFA068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFA068);
  }
  return result;
}

uint64_t sub_2411CC968()
{
  return sub_2411BA264(&qword_268CFA070, type metadata accessor for Code);
}

uint64_t sub_2411CC9B0()
{
  return sub_2411BA264((unint64_t *)&qword_268CFA078, type metadata accessor for HKError);
}

uint64_t sub_2411CC9F8()
{
  return sub_2411BA264(&qword_268CFA080, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_2411CCA40()
{
  return sub_2411BA264(&qword_268CFA088, type metadata accessor for Key);
}

uint64_t sub_2411CCA88()
{
  return sub_2411BA264(&qword_268CFA090, type metadata accessor for HKMCNotificationCategory);
}

uint64_t sub_2411CCABC()
{
  return sub_2411BA264(&qword_268CFA098, type metadata accessor for HKMCNotificationCategory);
}

uint64_t sub_2411CCAF0()
{
  return sub_2411BA264(&qword_268CFA0A0, type metadata accessor for OpenURLOptionsKey);
}

uint64_t sub_2411CCB24()
{
  return sub_2411BA264(&qword_268CFA0A8, type metadata accessor for OpenURLOptionsKey);
}

uint64_t sub_2411CCB58()
{
  return sub_2411BA264(&qword_268CFA0B0, type metadata accessor for ImageInitializationOption);
}

uint64_t sub_2411CCB8C()
{
  return sub_2411BA264(&qword_268CFA0B8, type metadata accessor for ImageInitializationOption);
}

unint64_t sub_2411CCBC0()
{
  unint64_t result = qword_268CFA0E0;
  if (!qword_268CFA0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFA0E0);
  }
  return result;
}

uint64_t sub_2411CCC14()
{
  return sub_2411BA264(&qword_268CFA0E8, type metadata accessor for TraitKey);
}

uint64_t sub_2411CCC48()
{
  return sub_2411BA264(&qword_268CFA0F0, type metadata accessor for TraitKey);
}

uint64_t sub_2411CCC7C()
{
  return sub_2411BA264(&qword_268CFA0F8, type metadata accessor for AttributeName);
}

uint64_t sub_2411CCCB0()
{
  return sub_2411BA264((unint64_t *)&unk_268CFA100, type metadata accessor for AttributeName);
}

uint64_t sub_2411CCCE4()
{
  return sub_2411BA264((unint64_t *)&unk_268D00F40, type metadata accessor for HKMCPregnancyAdjustedFeatureIdentifier);
}

uint64_t sub_2411CCD18()
{
  return sub_2411BA264(&qword_268CFA110, type metadata accessor for HKMCPregnancyAdjustedFeatureIdentifier);
}

uint64_t sub_2411CCD4C()
{
  return sub_2411BA264(&qword_268CFA118, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_2411CCD80()
{
  return sub_2411BA264((unint64_t *)&unk_268CFA120, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_2411CCDB4()
{
  return sub_2411BA264(&qword_268CFFFF0, type metadata accessor for Key);
}

uint64_t sub_2411CCDE8()
{
  return sub_2411BA264(&qword_268CFA130, type metadata accessor for Key);
}

uint64_t sub_2411CCE1C()
{
  return sub_2411BA264(&qword_268CFA138, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_2411CCE50()
{
  return sub_2411BA264(&qword_268CFA140, type metadata accessor for UIContentSizeCategory);
}

void type metadata accessor for NSDirectionalEdgeInsets(uint64_t a1)
{
}

uint64_t sub_2411CCF08()
{
  sub_2411CD138(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ProgesteroneTestResultLoggingCardDataSource()
{
  return self;
}

uint64_t sub_2411CCF64(uint64_t result)
{
  if ((*(unsigned char *)(result
                 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37SingleSelectLoggingCardViewController_checkedIndex
                 + 8) & 1) != 0)
  {
    uint64_t v2 = 0;
    goto LABEL_7;
  }
  unint64_t v3 = *(void *)(result
                 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37SingleSelectLoggingCardViewController_checkedIndex);
  if (qword_268CF92C8 == -1)
  {
    if ((v3 & 0x8000000000000000) == 0) {
      goto LABEL_5;
    }
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  unint64_t result = swift_once();
  if ((v3 & 0x8000000000000000) != 0) {
    goto LABEL_13;
  }
LABEL_5:
  if (v3 >= *(void *)(qword_268D23C20 + 16))
  {
LABEL_14:
    __break(1u);
    return result;
  }
  uint64_t v2 = *(void *)(qword_268D23C20 + 8 * v3 + 32);
LABEL_7:
  *(void *)(v1 + 32) = v2;
  unint64_t result = MEMORY[0x245621790](v1 + 16);
  if (result)
  {
    uint64_t v4 = result;
    sub_241588A0C((void *)*MEMORY[0x263F44F98]);
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin33LoggingCardCarouselViewController_mutableDaySummary), sel_setProgesteroneTestResult_, v2);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2411CD05C()
{
  if (qword_268CF92C8 != -1) {
    swift_once();
  }
  return *(void *)(qword_268D23C20 + 16);
}

void sub_2411CD0AC(uint64_t a1, unint64_t a2)
{
  if (qword_268CF92C8 == -1)
  {
    if ((a2 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  swift_once();
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if (*(void *)(qword_268D23C20 + 16) <= a2)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v3 = *(void *)(qword_268D23C20 + 8 * a2 + 32);

  sub_24127406C(v3);
}

uint64_t sub_2411CD138(uint64_t a1)
{
  return a1;
}

id UIViewController.resolvedHealthStoreOrBust.getter()
{
  uint64_t v1 = v0;
  id result = objc_msgSend(v0, sel_resolvedHealthStore);
  if (!result)
  {
    sub_241632E78();
    id v3 = objc_msgSend(v0, sel_description);
    _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();

    sub_241631E08();
    swift_bridgeObjectRelease();
    sub_241631E08();
    id v4 = objc_msgSend(v1, sel_parentViewController);
    sub_2411CD310();
    sub_241631D48();
    sub_241631E08();
    swift_bridgeObjectRelease();
    sub_241631E08();
    objc_msgSend(v1, sel_presentingViewController);
    sub_241631D48();
    sub_241631E08();
    swift_bridgeObjectRelease();
    id result = (id)sub_241633038();
    __break(1u);
  }
  return result;
}

void sub_2411CD310()
{
  if (!qword_268CFA220)
  {
    sub_2411CD368();
    unint64_t v0 = sub_241632C18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFA220);
    }
  }
}

unint64_t sub_2411CD368()
{
  unint64_t result = qword_268CFD4F0;
  if (!qword_268CFD4F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268CFD4F0);
  }
  return result;
}

void sub_2411CD3A8(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v93 = a1;
  uint64_t v94 = a2;
  uint64_t v96 = *v2;
  sub_2411CE7D0(0, (unint64_t *)&unk_26B00F1B0, MEMORY[0x263F090E8], MEMORY[0x263F8D8F0]);
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v85 - v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v91 = (char *)&v85 - v12;
  uint64_t v13 = sub_24162EFA8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  BOOL v16 = (char *)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
  id v92 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F451A0]), sel_initWithHealthStore_, v17);

  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F451E0]), sel_init);
  sub_24162EF48();
  swift_retain_n();
  uint64_t v19 = sub_24162EF98();
  os_log_type_t v20 = sub_2416322E8();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v97 = v3;
  id v95 = v18;
  if (v21)
  {
    uint64_t v86 = v16;
    os_log_t v85 = v19;
    id v87 = v5;
    id v88 = (id)v13;
    uint64_t v89 = v7;
    uint64_t v90 = v10;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    aBlock[0] = v23;
    *(_DWORD *)uint64_t v22 = 136446978;
    uint64_t v24 = sub_2416333E8();
    uint64_t v99 = sub_2411B6898(v24, v25, aBlock);
    sub_241632C28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    uint64_t v26 = v3[2] + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_cycleLength;
    uint64_t v27 = (uint64_t)v91;
    if (*(unsigned char *)(v26 + 8))
    {
      id v28 = 0;
    }
    else
    {
      uint64_t v30 = *(void *)v26;
      uint64_t v31 = self;
      swift_retain();
      id v32 = objc_msgSend(v31, sel_dayUnit);
      id v28 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v32, (double)v30);
      swift_release();
    }
    uint64_t v99 = (uint64_t)v28;
    sub_2411CE70C();
    uint64_t v33 = sub_241631D78();
    uint64_t v99 = sub_2411B6898(v33, v34, aBlock);
    sub_241632C28();
    unint64_t v35 = v97;
    swift_release_n();
    swift_bridgeObjectRelease();
    id v36 = 0;
    *(_WORD *)(v22 + 22) = 2080;
    uint64_t v37 = v35[2] + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_periodLength;
    if ((*(unsigned char *)(v37 + 8) & 1) == 0)
    {
      uint64_t v38 = *(void *)v37;
      id v39 = self;
      swift_retain();
      id v40 = objc_msgSend(v39, sel_dayUnit);
      id v36 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v40, (double)v38);
      swift_release();
    }
    uint64_t v99 = (uint64_t)v36;
    uint64_t v41 = sub_241631D78();
    uint64_t v99 = sub_2411B6898(v41, v42, aBlock);
    sub_241632C28();
    id v3 = v97;
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 32) = 2080;
    uint64_t v43 = v3[2] + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_startOfLastMenstrualPeriodDayIndex;
    swift_beginAccess();
    sub_2411CE5A0(v43, v27);
    uint64_t v44 = sub_241631D78();
    uint64_t v99 = sub_2411B6898(v44, v45, aBlock);
    sub_241632C28();
    swift_release_n();
    swift_bridgeObjectRelease();
    os_log_type_t v46 = v20;
    os_log_t v47 = v85;
    _os_log_impl(&dword_24118E000, v85, v46, "[%{public}s] Setting onboarding completed with cycle length: %s, period length: %s, last period start: %s", (uint8_t *)v22, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x245621640](v23, -1, -1);
    MEMORY[0x245621640](v22, -1, -1);

    (*(void (**)(char *, id))(v14 + 8))(v86, v88);
    id v18 = v95;
    uint64_t v29 = (uint64_t)v90;
    uint64_t v7 = v89;
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v29 = (uint64_t)v10;
  }
  uint64_t v48 = v3[2];
  uint64_t v49 = *(unsigned __int8 *)(v48
                           + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_menstruationNotificationsEnabled);
  swift_retain();
  objc_msgSend(v18, sel_setMenstruationNotificationsEnabled_, v49);
  objc_msgSend(v18, sel_setFertileWindowNotificationsEnabled_, *(unsigned __int8 *)(v48+ OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_fertileWindowNotificationsEnabled));
  swift_release();
  swift_retain();
  sub_2413A7640();
  swift_release();
  swift_retain();
  uint64_t v50 = sub_2413A7730();
  swift_release();
  uint64_t v51 = v3[2];
  char v52 = *(unsigned char *)(v51 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_cycleLength + 8);
  uint64_t v91 = (char *)v50;
  if (v52)
  {
    id v88 = 0;
  }
  else
  {
    uint64_t v53 = *(void *)(v51 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_cycleLength);
    id v54 = self;
    swift_retain();
    id v55 = objc_msgSend(v54, sel_dayUnit);
    id v88 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v55, (double)v53);
    swift_release();

    uint64_t v51 = v3[2];
  }
  if (*(unsigned char *)(v51 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_periodLength + 8))
  {
    id v87 = 0;
  }
  else
  {
    uint64_t v56 = *(void *)(v51 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_periodLength);
    int v57 = self;
    swift_retain();
    id v58 = objc_msgSend(v57, sel_dayUnit);
    id v87 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v58, (double)v56);
    swift_release();

    uint64_t v51 = v3[2];
  }
  uint64_t v59 = v51 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_startOfLastMenstrualPeriodDayIndex;
  swift_beginAccess();
  sub_2411CE5A0(v59, v29);
  sub_2411CE5A0(v29, (uint64_t)v7);
  uint64_t v60 = sub_241631AC8();
  uint64_t v61 = *(void *)(v60 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v7, 1, v60) == 1)
  {
    sub_2411CE634((uint64_t)v7);
    uint64_t v86 = 0;
  }
  else
  {
    uint64_t v62 = sub_241631A88();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v7, v60);
    uint64_t v86 = (char *)objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v62);
  }
  sub_2411CE634(v29);
  uint64_t v63 = v3[2];
  LODWORD(v90) = *(unsigned __int8 *)(v63
                                    + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_menstruationProjectionsEnabled);
  LODWORD(v89) = *(unsigned __int8 *)(v63
                                    + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_fertileWindowProjectionsEnabled);
  char v64 = *(unsigned char *)(v63 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_deviationDetectionEnabled);
  char v65 = *(unsigned char *)(v63
                 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_fertilityTrackingDisplayTypesVisible);
  char v66 = *(unsigned char *)(v63 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_sexualActivityDisplayTypeVisible);
  uint64_t v67 = *(void **)(v63 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_countryGatingHandler);
  uint64_t v69 = v67[5];
  uint64_t v68 = v67[6];
  uint64_t v70 = v67[7];
  id v71 = objc_allocWithZone(MEMORY[0x263F45198]);
  sub_2411B9D00(0, (unint64_t *)&qword_26B012390);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v72 = (void *)sub_241631F18();
  swift_bridgeObjectRelease();
  uint64_t v73 = (void *)sub_241631F18();
  swift_bridgeObjectRelease();
  BYTE3(v84) = v66;
  BYTE2(v84) = v65;
  BYTE1(v84) = v64;
  LOBYTE(v84) = (_BYTE)v89;
  uint64_t v74 = v88;
  uint64_t v75 = v87;
  uint64_t v76 = v86;
  id v77 = objc_msgSend(v71, sel_initWithUserEnteredCycleLength_userEnteredPeriodLength_userEnteredLastPeriodStartDay_addedCycleFactors_deletedCycleFactors_menstruationProjectionsEnabled_fertileWindowProjectionsEnabled_deviationDetectionEnabled_fertilityTrackingDisplayTypesVisible_sexualActivityDisplayTypeVisible_heartRateInputSupportedCountryCode_deviationDetectionSupportedCountryCode_wristTemperatureInputSupportedCountryCode_heartRateInputEnabled_wristTemperatureInputEnabled_, v88, v87, v86, v72, v73, v90, v84, v69, v68, v70, 0, 0);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v78 = (void *)swift_allocObject();
  uint64_t v79 = v93;
  uint64_t v80 = v94;
  v78[2] = v97;
  v78[3] = v79;
  uint64_t v81 = v96;
  v78[4] = v80;
  v78[5] = v81;
  aBlock[4] = (uint64_t)sub_2411CE700;
  aBlock[5] = (uint64_t)v78;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_241328D44;
  aBlock[3] = (uint64_t)&unk_26F5686C0;
  uint64_t v82 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id v83 = v92;
  objc_msgSend(v92, sel_setOnboardingCompletedWithInfo_completion_, v77, v82);
  _Block_release(v82);
}

uint64_t sub_2411CDF34(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v21 = a4;
  uint64_t v22 = a6;
  uint64_t v10 = sub_241631488();
  uint64_t v24 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_2416314A8();
  uint64_t v13 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411B9D00(0, (unint64_t *)&qword_26B0130B0);
  BOOL v16 = (void *)sub_2416325A8();
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a2;
  *(void *)(v17 + 32) = a3;
  *(void *)(v17 + 40) = v21;
  *(void *)(v17 + 48) = a5;
  *(void *)(v17 + 56) = v22;
  aBlock[4] = sub_2411CE7BC;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2411987F4;
  aBlock[3] = &unk_26F568710;
  id v18 = _Block_copy(aBlock);
  id v19 = a2;
  swift_retain();
  swift_retain();
  swift_release();
  sub_241631498();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_2411ACE78();
  sub_2411CE7D0(0, (unint64_t *)&qword_26B013090, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
  sub_2411ACDF0();
  sub_241632D08();
  MEMORY[0x24561FA80](0, v15, v12, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v23);
}

uint64_t sub_2411CE228(char a1, void *a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v8 = sub_24162EFA8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    sub_2411A3DF4(a3 + 40, (uint64_t)v24);
    sub_2411B6854(v24, v24[3]);
    sub_24162C438();
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v24);
    sub_241423A50(1);
    return a4();
  }
  else
  {
    sub_24162EF48();
    id v13 = a2;
    id v14 = a2;
    uint64_t v15 = sub_24162EF98();
    os_log_type_t v16 = sub_2416322C8();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      v24[0] = v18;
      *(_DWORD *)uint64_t v17 = 136446466;
      uint64_t v19 = sub_2416333E8();
      uint64_t v25 = sub_2411B6898(v19, v20, v24);
      sub_241632C28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2082;
      uint64_t v25 = (uint64_t)a2;
      id v21 = a2;
      sub_2411CE7D0(0, (unint64_t *)&qword_26B010860, (uint64_t (*)(uint64_t))sub_2411CE834, MEMORY[0x263F8D8F0]);
      uint64_t v22 = sub_241631D48();
      uint64_t v25 = sub_2411B6898(v22, v23, v24);
      sub_241632C28();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24118E000, v15, v16, "[%{public}s] Failed to set onboarding to completed with error: %{public}s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245621640](v18, -1, -1);
      MEMORY[0x245621640](v17, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_2411CE534()
{
  swift_release();
  sub_2411CD138(v0 + 24);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0(v0 + 40);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MenstrualCyclesOnboardingCompletionManager()
{
  return self;
}

uint64_t sub_2411CE5A0(uint64_t a1, uint64_t a2)
{
  sub_2411CE7D0(0, (unint64_t *)&unk_26B00F1B0, MEMORY[0x263F090E8], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2411CE634(uint64_t a1)
{
  sub_2411CE7D0(0, (unint64_t *)&unk_26B00F1B0, MEMORY[0x263F090E8], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2411CE6C0()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_2411CE700(char a1, void *a2)
{
  return sub_2411CDF34(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

void sub_2411CE70C()
{
  if (!qword_26B011708)
  {
    sub_2411B9D00(255, &qword_26B011700);
    unint64_t v0 = sub_241632C18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B011708);
    }
  }
}

uint64_t sub_2411CE774()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_2411CE7BC()
{
  return sub_2411CE228(*(unsigned char *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(uint64_t (**)(void))(v0 + 40));
}

void sub_2411CE7D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_2411CE834()
{
  unint64_t result = qword_26B012410;
  if (!qword_26B012410)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B012410);
  }
  return result;
}

uint64_t destroy for PhaseWindow()
{
  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for PhaseWindow()
{
  return &type metadata for PhaseWindow;
}

uint64_t sub_2411CE8C0()
{
  return MEMORY[0x263F8D320];
}

uint64_t sub_2411CE8D0@<X0>(void *a1@<X8>)
{
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631E08();
  swift_bridgeObjectRelease();
  sub_241632078();
  uint64_t result = sub_241632078();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t destroy for PhaseWindows()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

__n128 initializeWithTake for PhaseWindowModel(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PhaseWindows()
{
  return &type metadata for PhaseWindows;
}

uint64_t _s24MenstrualCyclesAppPlugin16PhaseWindowModelVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return a1;
}

void *_s24MenstrualCyclesAppPlugin16PhaseWindowModelVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t _s24MenstrualCyclesAppPlugin16PhaseWindowModelVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t _s24MenstrualCyclesAppPlugin16PhaseWindowModelVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2411CEB44(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhaseWindowModel()
{
  return &type metadata for PhaseWindowModel;
}

uint64_t sub_2411CEB9C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2411CEBB8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v85 = a2;
  sub_2411D0460();
  uint64_t v84 = v3 - 8;
  MEMORY[0x270FA5388](v3 - 8);
  id v83 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_24162F768();
  uint64_t v82 = *(void *)(v81 - 8);
  MEMORY[0x270FA5388](v81);
  id v77 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411D05AC(0, (unint64_t *)&qword_268CFA290);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  id v71 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v69 = (char *)&v66 - v10;
  MEMORY[0x270FA5388](v9);
  char v66 = (char *)&v66 - v11;
  uint64_t v12 = sub_24162F818();
  uint64_t v73 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  id v14 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411D01B0();
  uint64_t v74 = v15;
  uint64_t v75 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411D00E0();
  uint64_t v78 = v18;
  uint64_t v80 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v72 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411CFFCC();
  uint64_t v79 = v20;
  uint64_t v91 = *(void *)(v20 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  id v87 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v90 = (char *)&v66 - v23;
  sub_2411CFCD8();
  uint64_t v76 = v24;
  uint64_t v89 = *(void *)(v24 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  id v88 = (char *)&v66 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v86 = (char *)&v66 - v27;
  uint64_t v68 = a1;
  uint64_t v29 = a1[3];
  uint64_t v28 = a1[4];
  uint64_t v93 = *a1;
  sub_2411D0524(0, &qword_268CFA238, (uint64_t)&type metadata for PhaseWindow, MEMORY[0x263F8D488]);
  sub_2411CFD94();
  sub_2411CFF50();
  sub_2411CFE64();
  uint64_t v31 = v30;
  unint64_t v32 = sub_2411CFEFC();
  unint64_t v67 = v32;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v98 = v12;
  uint64_t v99 = &type metadata for ChartText;
  uint64_t v100 = MEMORY[0x263EFCD60];
  unint64_t v101 = v32;
  uint64_t v70 = MEMORY[0x263EFCB48];
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v98 = v31;
  uint64_t v99 = (ValueMetadata *)OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_2411D04D0();
  sub_2416312D8();
  sub_241630528();
  uint64_t v98 = v29;
  sub_24162F6F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_241630528();
  uint64_t v98 = 0;
  sub_24162F6F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_241630528();
  uint64_t v98 = v28;
  sub_24162F6F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24162F7F8();
  sub_2411D0524(0, (unint64_t *)&qword_268CFA2A0, MEMORY[0x263F8EF38], MEMORY[0x263F8E0F8]);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_24163A4F0;
  *(_OWORD *)(v34 + 32) = xmmword_24163A500;
  sub_24162FF28();
  unint64_t v35 = (ValueMetadata *)MEMORY[0x263EFCD60];
  sub_24162F6A8();
  sub_2411D0570((uint64_t)&v98);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v14, v12);
  id v36 = v77;
  sub_24162F738();
  sub_2416313F8();
  id v92 = v68;
  uint64_t v93 = v12;
  uint64_t v94 = v35;
  uint64_t v37 = swift_getOpaqueTypeConformance2();
  unint64_t v38 = v67;
  id v39 = v72;
  uint64_t v40 = v74;
  sub_24162F638();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v36, v81);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v17, v40);
  id v41 = objc_msgSend(self, sel_systemGrayColor);
  uint64_t v42 = MEMORY[0x24561E470](v41);
  unint64_t v96 = v38;
  uint64_t v97 = v42;
  uint64_t v93 = v40;
  uint64_t v94 = &type metadata for ChartText;
  uint64_t v95 = v37;
  swift_getOpaqueTypeConformance2();
  uint64_t v43 = v87;
  uint64_t v44 = v78;
  sub_24162F658();
  swift_release();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v39, v44);
  uint64_t v45 = v91;
  uint64_t v82 = *(void *)(v91 + 32);
  os_log_type_t v46 = v90;
  os_log_t v47 = v43;
  uint64_t v48 = v43;
  uint64_t v49 = v79;
  ((void (*)(char *, char *, uint64_t))v82)(v90, v47, v79);
  uint64_t v50 = v88;
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v89 + 16);
  uint64_t v52 = v76;
  v51(v88, v86, v76);
  uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
  id v54 = v46;
  uint64_t v55 = v49;
  v53(v48, v54, v49);
  sub_2411D0374();
  uint64_t v56 = v83;
  int v57 = v50;
  uint64_t v58 = v52;
  v51(v83, v57, v52);
  uint64_t v59 = v84;
  uint64_t v60 = &v56[*(int *)(v84 + 56)];
  v53(v60, v48, v55);
  uint64_t v61 = v89;
  uint64_t v62 = v85;
  (*(void (**)(uint64_t, char *, uint64_t))(v89 + 32))(v85, v56, v58);
  ((void (*)(uint64_t, char *, uint64_t))v82)(v62 + *(int *)(v59 + 56), v60, v55);
  uint64_t v63 = *(void (**)(char *, uint64_t))(v91 + 8);
  v63(v90, v55);
  char v64 = *(void (**)(char *, uint64_t))(v61 + 8);
  v64(v86, v58);
  v63(v87, v55);
  return ((uint64_t (*)(char *, uint64_t))v64)(v88, v58);
}

uint64_t sub_2411CF6C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v3 = sub_24162F768();
  uint64_t v29 = *(void *)(v3 - 8);
  uint64_t v30 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v26 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411D05AC(0, &qword_268CFA2A8);
  MEMORY[0x270FA5388](v5 - 8);
  sub_2411D05AC(0, (unint64_t *)&qword_268CFA290);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_24162F818();
  uint64_t v25 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411CFE64();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v27 = v11;
  uint64_t v28 = v12;
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *a1;
  uint64_t v23 = a1[1];
  uint64_t v15 = a1[2];
  uint64_t v16 = a1[3];
  sub_241630528();
  uint64_t v36 = v15;
  sub_24162F6F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_241630528();
  uint64_t v36 = v16;
  sub_24162F6F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_241630528();
  uint64_t v36 = 0;
  sub_24162F6F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24162F808();
  uint64_t v32 = v24;
  uint64_t v33 = v23;
  uint64_t v34 = v15;
  uint64_t v35 = v16;
  uint64_t v17 = v26;
  sub_24162F758();
  sub_2416313F8();
  unint64_t v21 = sub_2411CFEFC();
  uint64_t v18 = MEMORY[0x263EFCD60];
  sub_24162F638();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v17, v30);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v8);
  uint64_t v36 = v8;
  uint64_t v37 = &type metadata for ChartText;
  uint64_t v38 = v18;
  unint64_t v39 = v21;
  swift_getOpaqueTypeConformance2();
  uint64_t v19 = v27;
  sub_24162F698();
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v14, v19);
}

uint64_t sub_2411CFBBC()
{
  return sub_24162F798();
}

uint64_t sub_2411CFC40()
{
  return sub_24162F608();
}

uint64_t sub_2411CFC5C@<X0>(uint64_t a1@<X8>)
{
  return sub_2411CEBB8(*(void **)(v1 + 16), a1);
}

void sub_2411CFC64()
{
  if (!qword_268CFA228)
  {
    sub_2411CFCD8();
    sub_2411CFFCC();
    unint64_t v0 = sub_24162F5E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFA228);
    }
  }
}

void sub_2411CFCD8()
{
  if (!qword_268CFA230)
  {
    sub_2411D0524(255, &qword_268CFA238, (uint64_t)&type metadata for PhaseWindow, MEMORY[0x263F8D488]);
    sub_2411CFD94();
    sub_2411CFF50();
    unint64_t v0 = sub_241631308();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFA230);
    }
  }
}

void sub_2411CFD94()
{
  if (!qword_268CFA240)
  {
    sub_2411CFE64();
    sub_24162F818();
    sub_2411CFEFC();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268CFA240);
    }
  }
}

void sub_2411CFE64()
{
  if (!qword_268CFA248)
  {
    sub_24162F818();
    sub_2411CFEFC();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268CFA248);
    }
  }
}

unint64_t sub_2411CFEFC()
{
  unint64_t result = qword_268CFA250;
  if (!qword_268CFA250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFA250);
  }
  return result;
}

unint64_t sub_2411CFF50()
{
  unint64_t result = qword_268CFA258;
  if (!qword_268CFA258)
  {
    sub_2411D0524(255, &qword_268CFA238, (uint64_t)&type metadata for PhaseWindow, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFA258);
  }
  return result;
}

void sub_2411CFFCC()
{
  if (!qword_268CFA260)
  {
    sub_2411D00E0();
    sub_2411D01B0();
    sub_24162F818();
    swift_getOpaqueTypeConformance2();
    sub_2411CFEFC();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268CFA260);
    }
  }
}

void sub_2411D00E0()
{
  if (!qword_268CFA268)
  {
    sub_2411D01B0();
    sub_24162F818();
    swift_getOpaqueTypeConformance2();
    sub_2411CFEFC();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268CFA268);
    }
  }
}

void sub_2411D01B0()
{
  if (!qword_268CFA270)
  {
    sub_24162F818();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268CFA270);
    }
  }
}

unint64_t sub_2411D0234()
{
  unint64_t result = qword_268CFA278;
  if (!qword_268CFA278)
  {
    sub_2411CFC64();
    sub_2411D0374();
    sub_2411D00E0();
    sub_2411D01B0();
    sub_24162F818();
    swift_getOpaqueTypeConformance2();
    sub_2411CFEFC();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFA278);
  }
  return result;
}

unint64_t sub_2411D0374()
{
  unint64_t result = qword_268CFA280;
  if (!qword_268CFA280)
  {
    sub_2411CFCD8();
    sub_2411CFE64();
    sub_24162F818();
    sub_2411CFEFC();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFA280);
  }
  return result;
}

void sub_2411D0460()
{
  if (!qword_268CFA288)
  {
    sub_2411CFCD8();
    sub_2411CFFCC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CFA288);
    }
  }
}

unint64_t sub_2411D04D0()
{
  unint64_t result = qword_268CFA298;
  if (!qword_268CFA298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFA298);
  }
  return result;
}

void sub_2411D0524(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_2411D0570(uint64_t a1)
{
  return a1;
}

uint64_t sub_2411D059C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v2 + 16);
  *a1 = *(void *)(v2 + 8);
  a1[1] = v3;
  return _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
}

void sub_2411D05AC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_24162F708();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_2411D05F8@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  return _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
}

uint64_t _s24MenstrualCyclesAppPlugin11PhaseWindowVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return a1;
}

void *_s24MenstrualCyclesAppPlugin11PhaseWindowVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t _s24MenstrualCyclesAppPlugin11PhaseWindowVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for OnboardingTypePicker(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OnboardingTypePicker(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhaseWindowSeparator()
{
  return &type metadata for PhaseWindowSeparator;
}

unint64_t sub_2411D0778()
{
  unint64_t result = qword_268CFA2B0;
  if (!qword_268CFA2B0)
  {
    sub_2411D07D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFA2B0);
  }
  return result;
}

void sub_2411D07D0()
{
  if (!qword_268CFA2B8)
  {
    sub_2411CFC64();
    sub_2411D0234();
    unint64_t v0 = sub_24162F7A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFA2B8);
    }
  }
}

id sub_2411D083C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView_viewModel;
  uint64_t v10 = self;
  uint64_t v11 = v4;
  *(void *)&v4[v9] = objc_msgSend(v10, sel_unfetchedDayViewModel);
  v11[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView_isFutureDay] = 0;
  *(void *)&v11[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___fertilityProjectionReversed] = 0;
  *(void *)&v11[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___menstruationProjectionHighReversed] = 0;
  *(void *)&v11[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___menstruationProjectionLowReversed] = 0;
  *(void *)&v11[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___pill] = 0;
  *(void *)&v11[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___pillMask] = 0;
  *(void *)&v11[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___menstruationIndicator] = 0;
  *(void *)&v11[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___menstruationIndicatorMask] = 0;
  *(void *)&v11[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___logIndicator] = 0;
  *(void *)&v11[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___pregnancyBorderLayer] = 0;
  uint64_t v12 = &v11[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView_configuration];
  *(_OWORD *)uint64_t v12 = xmmword_24163A640;
  *((_OWORD *)v12 + 1) = xmmword_24163A650;
  *((_OWORD *)v12 + 2) = xmmword_24163A660;

  v15.receiver = v11;
  v15.super_class = (Class)type metadata accessor for StaticPillView();
  id v13 = objc_msgSendSuper2(&v15, sel_initWithFrame_, a1, a2, a3, a4);
  sub_2411D17B4();

  return v13;
}

id sub_2411D09CC(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView_viewModel;
  uint64_t v4 = self;
  unint64_t v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_unfetchedDayViewModel);
  v5[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView_isFutureDay] = 0;
  *(void *)&v5[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___fertilityProjectionReversed] = 0;
  *(void *)&v5[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___menstruationProjectionHighReversed] = 0;
  *(void *)&v5[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___menstruationProjectionLowReversed] = 0;
  *(void *)&v5[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___pill] = 0;
  *(void *)&v5[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___pillMask] = 0;
  *(void *)&v5[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___menstruationIndicator] = 0;
  *(void *)&v5[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___menstruationIndicatorMask] = 0;
  *(void *)&v5[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___logIndicator] = 0;
  *(void *)&v5[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___pregnancyBorderLayer] = 0;
  uint64_t v6 = &v5[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView_configuration];
  *(_OWORD *)uint64_t v6 = xmmword_24163A640;
  *((_OWORD *)v6 + 1) = xmmword_24163A650;
  *((_OWORD *)v6 + 2) = xmmword_24163A660;

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for StaticPillView();
  id v7 = objc_msgSendSuper2(&v11, sel_initWithCoder_, a1);
  id v8 = v7;
  if (v7)
  {
    id v9 = v7;
    sub_2411D17B4();
  }
  return v8;
}

id sub_2411D0B60()
{
  return sub_2411D0B9C(&OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___fertilityProjectionReversed, (SEL *)&selRef_hkmc_fertilityProjectionReversedImage);
}

id sub_2411D0B74()
{
  return sub_2411D0B9C(&OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___menstruationProjectionHighReversed, (SEL *)&selRef_hkmc_menstruationProjectionHighReversedImage);
}

id sub_2411D0B88()
{
  return sub_2411D0B9C(&OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___menstruationProjectionLowReversed, (SEL *)&selRef_hkmc_menstruationProjectionLowReversedImage);
}

id sub_2411D0B9C(uint64_t *a1, SEL *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = [self *a2];
    id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithPatternImage_, v6);

    id v8 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v7;
    id v5 = v7;

    uint64_t v4 = 0;
  }
  id v9 = v4;
  return v5;
}

void sub_2411D0C44()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView_viewModel;
  switch((unint64_t)objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView_viewModel], sel_menstruationLevel))
  {
    case 1uLL:
      id v3 = sub_2411D0B88();
      goto LABEL_9;
    case 2uLL:
    case 3uLL:
      id v3 = sub_2411D0B74();
      goto LABEL_9;
    case 4uLL:
      int v4 = v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView_isFutureDay];
      id v5 = self;
      if (v4 == 1) {
        id v6 = objc_msgSend(v5, sel_hkmc_menstruationTimelineFutureColor);
      }
      else {
        id v6 = objc_msgSend(v5, sel_hkmc_menstruationColor);
      }
      id v3 = v6;
LABEL_9:
      id v23 = v3;
      id v25 = v3;
      break;
    default:
      id v23 = 0;
      id v25 = 0;
      break;
  }
  id v7 = objc_msgSend(v1, sel_traitCollection);
  id v8 = objc_msgSend(v7, sel_accessibilityContrast);

  id v9 = (char *)objc_msgSend(*(id *)&v1[v2], sel_fertileWindowLevel);
  if ((unint64_t)(v9 - 1) < 2)
  {
    id v12 = sub_2411D0B60();
  }
  else
  {
    if (v9 == (char *)3)
    {
      id v13 = objc_msgSend(self, sel_hkmc_ovulationDayCycleTimelineReversedColor);
    }
    else
    {
      if (v9)
      {
        uint64_t v10 = self;
        objc_super v11 = &selRef_hkmc_highContrastRegularDayColor;
        if (v8 != (id)1) {
          objc_super v11 = &selRef_hkmc_regularDayColor;
        }
      }
      else
      {
        uint64_t v10 = self;
        objc_super v11 = &selRef_hkmc_highContrastRegularDayColor;
        if (v8 != (id)1) {
          objc_super v11 = &selRef_hkmc_regularDayColor;
        }
      }
      id v13 = [v10 *v11];
    }
    id v12 = v13;
  }
  id v14 = v12;
  id v24 = v12;
  if (objc_msgSend(*(id *)&v1[v2], sel_bleedingInPregnancyLevel) == (id)1)
  {
    id v15 = objc_msgSend(self, sel_hkmc_menstruationColor);

    id v25 = v15;
    id v23 = v15;
  }
  if (objc_msgSend(*(id *)&v1[v2], sel_bleedingAfterPregnancyLevel) == (id)1)
  {
    id v16 = objc_msgSend(self, sel_hkmc_menstruationColor);

    id v25 = v16;
    id v23 = v16;
  }
  if (((unint64_t)objc_msgSend(*(id *)&v1[v2], sel_pregnancyState) | 4) == 6)
  {
    sub_2411B9D00(0, (unint64_t *)&qword_268CFA910);
    uint64_t v17 = (void *)sub_241632948();

    id v24 = v17;
    id v14 = v17;
  }
  int v18 = v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView_isFutureDay];
  uint64_t v19 = self;
  uint64_t v20 = &selRef_hkmc_supplementaryDataTimelineFutureColor;
  if (!v18) {
    uint64_t v20 = &selRef_hkmc_supplementaryDataColor;
  }
  id v21 = [v19 *v20];
  uint64_t v22 = self;
  objc_msgSend(v22, sel_begin);
  objc_msgSend(v22, sel_setDisableActions_, 1);
  sub_2411D0FBC((uint64_t)v1, &v24, &v25, v21);
  objc_msgSend(v22, sel_commit);
}

void sub_2411D0FBC(uint64_t a1, id *a2, id *a3, void *a4)
{
  id v8 = sub_2411D14BC();
  id v9 = objc_msgSend(*a2, sel_CGColor);
  objc_msgSend(v8, sel_setBackgroundColor_, v9);

  id v10 = sub_2411D15AC();
  objc_msgSend(v10, sel_setHidden_, *a3 == 0);

  id v11 = sub_2411D15AC();
  if (*a3) {
    id v12 = objc_msgSend(*a3, sel_CGColor);
  }
  else {
    id v12 = 0;
  }
  objc_msgSend(v11, sel_setBackgroundColor_, v12);

  id v13 = sub_2411D1698();
  uint64_t v14 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView_viewModel;
  objc_msgSend(v13, sel_setHidden_, objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView_viewModel), sel_isSupplementaryDataLogged) ^ 1);

  id v15 = sub_2411D1698();
  id v16 = objc_msgSend(a4, sel_CGColor);
  objc_msgSend(v15, sel_setFillColor_, v16);

  sub_2411D112C((unint64_t)objc_msgSend(*(id *)(a1 + v14), sel_pregnancyState));
}

void sub_2411D112C(unint64_t a1)
{
  if (a1 > 6)
  {
    sub_241633038();
    __break(1u);
    return;
  }
  if (((1 << a1) & 0x1C) == 0)
  {
    if (((1 << a1) & 3) != 0)
    {
      id v2 = sub_2411D1718();
      objc_msgSend(v2, sel_setLineWidth_, 0.0);

      id v3 = sub_2411D1718();
      objc_msgSend(v3, sel_setLineDashPattern_, 0);
      int v4 = &selRef_setFillColor_;
    }
    else
    {
      id v15 = sub_2411D1718();
      objc_msgSend(v15, sel_setLineWidth_, 2.0);

      id v16 = sub_2411D1718();
      sub_2411B9D00(0, (unint64_t *)&qword_268CFA910);
      uint64_t v17 = (void *)sub_241632958();
      id v3 = objc_msgSend(v17, sel_CGColor);

      objc_msgSend(v16, sel_setStrokeColor_, v3);
      int v4 = &selRef_setLineDashPattern_;
    }

    id v18 = sub_2411D1718();
    objc_msgSend(v18, *v4, 0);

LABEL_11:
    id v19 = sub_2411D1718();
    objc_msgSend(v19, sel_setFillColor_, 0);
    goto LABEL_12;
  }
  id v5 = sub_2411D1718();
  sub_2411B9D00(0, (unint64_t *)&qword_268CFA910);
  id v6 = (void *)sub_241632968();
  id v7 = objc_msgSend(v6, sel_CGColor);

  objc_msgSend(v5, sel_setStrokeColor_, v7);
  id v8 = sub_2411D1718();
  objc_msgSend(v8, sel_setLineWidth_, 2.0);

  id v9 = sub_2411D1718();
  if (qword_268CF9160 != -1) {
    swift_once();
  }
  sub_2411B9D00(0, (unint64_t *)&qword_26B00E600);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  id v10 = (void *)sub_241631F18();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setLineDashPattern_, v10);

  id v11 = sub_2411D1718();
  objc_msgSend(v11, sel_setLineCap_, *MEMORY[0x263F15E70]);

  if (a1 != 4) {
    goto LABEL_11;
  }
  id v12 = sub_2411D1718();
  id v13 = (void *)sub_241632958();
  id v14 = objc_msgSend(v13, sel_colorWithAlphaComponent_, 0.2);

  id v19 = objc_msgSend(v14, sel_CGColor);
  objc_msgSend(v12, sel_setFillColor_, v19);

LABEL_12:
}

id sub_2411D14BC()
{
  return sub_2411D16AC(&OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___pill, (Class *)0x263F157E8);
}

id sub_2411D14D0()
{
  uint64_t v1 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___pillMask;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___pillMask);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___pillMask);
  }
  else
  {
    id v4 = objc_msgSend(self, sel_blackColor);
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15880]), sel_init);
    id v6 = objc_msgSend(v4, sel_CGColor);
    objc_msgSend(v5, sel_setFillColor_, v6);

    id v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    id v3 = v5;

    id v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_2411D15AC()
{
  return sub_2411D16AC(&OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___menstruationIndicator, (Class *)0x263F157E8);
}

id sub_2411D15C0()
{
  uint64_t v1 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___menstruationIndicatorMask;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___menstruationIndicatorMask);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___menstruationIndicatorMask);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15880]), sel_init);
    id v5 = objc_msgSend(self, sel_blackColor);
    id v6 = objc_msgSend(v5, sel_CGColor);

    objc_msgSend(v4, sel_setFillColor_, v6);
    id v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_2411D1698()
{
  return sub_2411D16AC(&OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___logIndicator, (Class *)0x263F15880);
}

id sub_2411D16AC(uint64_t *a1, Class *a2)
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = objc_msgSend(objc_allocWithZone(*a2), sel_init);
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_2411D1718()
{
  uint64_t v1 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___pregnancyBorderLayer;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___pregnancyBorderLayer);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView____lazy_storage___pregnancyBorderLayer);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15880]), sel_init);
    objc_msgSend(v4, sel_setBackgroundColor_, 0);
    objc_msgSend(v4, sel_setFillColor_, 0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_2411D17B4()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  id v2 = objc_msgSend(v0, sel_layer);
  id v3 = sub_2411D14BC();
  objc_msgSend(v2, sel_addSublayer_, v3);

  id v4 = objc_msgSend(v1, sel_layer);
  id v5 = sub_2411D15AC();
  objc_msgSend(v4, sel_addSublayer_, v5);

  id v6 = objc_msgSend(v1, sel_layer);
  id v7 = sub_2411D1698();
  objc_msgSend(v6, sel_addSublayer_, v7);

  id v8 = objc_msgSend(v1, sel_layer);
  id v9 = sub_2411D1718();
  objc_msgSend(v8, sel_addSublayer_, v9);

  id v10 = sub_2411D14BC();
  id v11 = sub_2411D14D0();
  objc_msgSend(v10, sel_setMask_, v11);

  id v12 = sub_2411D15AC();
  id v13 = sub_2411D15C0();
  objc_msgSend(v12, sel_setMask_, v13);

  sub_2411D19AC();
  sub_2411D0C44();
  sub_2411B9D00(0, (unint64_t *)&qword_268CFDCF0);
  sub_2416325D8();
  sub_241632918();
  swift_unknownObjectRelease();

  return swift_bridgeObjectRelease();
}

void sub_2411D19AC()
{
  id v1 = sub_2411D15C0();
  id v2 = (double *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView_configuration];
  double v3 = *(double *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView_configuration + 16];
  v15.origin.x = 0.0;
  v15.origin.y = 0.0;
  v15.size.width = v3;
  v15.size.height = v3;
  CGPathRef v4 = CGPathCreateWithEllipseInRect(v15, 0);
  objc_msgSend(v1, sel_setFrame_, 0.0, 0.0, v3, v3);
  objc_msgSend(v1, sel_setPath_, v4);

  id v5 = sub_2411D15C0();
  objc_msgSend(v5, sel_setAnchorPoint_, 0.5, 0.0);

  id v6 = sub_2411D15C0();
  objc_msgSend(v6, sel_setPosition_, 0.0, v2[4]);

  objc_msgSend(v0, sel_frame);
  double v8 = v7 - v2[5] - v2[3];
  id v9 = sub_2411D1698();
  double v10 = v2[3];
  v16.origin.x = 0.0;
  v16.origin.y = 0.0;
  v16.size.width = v10;
  v16.size.height = v10;
  CGPathRef v11 = CGPathCreateWithEllipseInRect(v16, 0);
  objc_msgSend(v9, sel_setFrame_, 0.0, 0.0, v10, v10);
  objc_msgSend(v9, sel_setPath_, v11);

  id v12 = sub_2411D1698();
  objc_msgSend(v12, sel_setAnchorPoint_, 0.5, 0.0);

  id v13 = sub_2411D1698();
  objc_msgSend(v13, sel_setPosition_, 0.0, v8);
}

id sub_2411D1C04()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StaticPillView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for StaticPillView()
{
  return self;
}

void sub_2411D1D28(void *a1)
{
  id v2 = sub_2411D14BC();
  objc_msgSend(a1, sel_bounds);
  objc_msgSend(v2, sel_setFrame_);

  id v3 = sub_2411D14D0();
  id v4 = sub_2411D14BC();
  objc_msgSend(v4, sel_frame);
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;

  objc_msgSend(v3, sel_setFrame_, v6, v8, v10, v12);
  id v13 = sub_2411D14D0();
  objc_msgSend(a1, sel_bounds);
  CGFloat x = v43.origin.x;
  CGFloat y = v43.origin.y;
  CGFloat width = v43.size.width;
  CGFloat height = v43.size.height;
  CGFloat v18 = CGRectGetWidth(v43) * 0.5;
  v44.origin.CGFloat x = x;
  v44.origin.CGFloat y = y;
  v44.size.CGFloat width = width;
  v44.size.CGFloat height = height;
  CGPathRef v19 = CGPathCreateWithRoundedRect(v44, v18, v18, 0);
  objc_msgSend(v13, sel_setPath_, v19);

  objc_msgSend(a1, sel_bounds);
  CGFloat v20 = v45.origin.x;
  CGFloat v21 = v45.origin.y;
  CGFloat v22 = v45.size.width;
  CGFloat v23 = v45.size.height;
  CGFloat v24 = CGRectGetWidth(v45) * 0.5;
  v46.origin.CGFloat x = v20;
  v46.origin.CGFloat y = v21;
  v46.size.CGFloat width = v22;
  v46.size.CGFloat height = v23;
  id v25 = CGPathCreateWithRoundedRect(v46, v24, v24, 0);
  BoundingBoCGFloat x = CGPathGetBoundingBox(v25);
  CGFloat v26 = BoundingBox.origin.x;
  CGFloat v27 = BoundingBox.origin.y;
  double v28 = BoundingBox.size.width;
  CGFloat v29 = BoundingBox.size.height;

  v48.origin.CGFloat x = v26;
  v48.origin.CGFloat y = v27;
  v48.size.CGFloat width = v28;
  v48.size.CGFloat height = v29;
  CGRectGetMidX(v48);
  v49.origin.CGFloat x = v26;
  v49.origin.CGFloat y = v27;
  v49.size.CGFloat width = v28;
  v49.size.CGFloat height = v29;
  CGRectGetMidY(v49);
  v50.origin.CGFloat x = v26;
  v50.origin.CGFloat y = v27;
  v50.size.CGFloat width = v28;
  v50.size.CGFloat height = v29;
  CGRectGetMidX(v50);
  v51.origin.CGFloat x = v26;
  v51.origin.CGFloat y = v27;
  v51.size.CGFloat width = v28;
  v51.size.CGFloat height = v29;
  CGRectGetMidY(v51);
  sub_241632878();
  id v34 = objc_msgSend(self, sel_bezierPathWithRoundedRect_cornerRadius_, v30, v31, v32, v33, v28 * 0.5);
  id v35 = sub_2411D1718();
  id v36 = objc_msgSend(v34, sel_CGPath);
  objc_msgSend(v35, sel_setPath_, v36);

  id v37 = sub_2411D15AC();
  objc_msgSend(a1, sel_bounds);
  objc_msgSend(v37, sel_setFrame_);

  id v38 = sub_2411D15C0();
  objc_msgSend(a1, sel_bounds);
  double MidX = CGRectGetMidX(v52);
  objc_msgSend(v38, sel_position);
  objc_msgSend(v38, sel_setPosition_, MidX);

  id v41 = sub_2411D1698();
  objc_msgSend(a1, sel_bounds);
  double v40 = CGRectGetMidX(v53);
  objc_msgSend(v41, sel_position);
  objc_msgSend(v41, sel_setPosition_, v40);
}

uint64_t sub_2411D207C()
{
  sub_2411BFC90();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_24163A670;
  sub_2411B9D00(0, (unint64_t *)&qword_26B00E600);
  *(void *)(v0 + 32) = sub_241632998();
  *(void *)(v0 + 40) = sub_241632998();
  uint64_t result = sub_241631F48();
  qword_268CFA2C0 = v0;
  return result;
}

void sub_2411D2110()
{
}

uint64_t sub_2411D2134(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 8))();
  id v2 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  char IsEventUsed = AnalyticsIsEventUsed();

  if (IsEventUsed) {
    return 1;
  }
  id v5 = objc_msgSend(self, sel_hkmc_menstrualCyclesDefaults);
  id v4 = objc_msgSend(v5, sel_hkmc_analyticsDebugModeEnabled);

  return (uint64_t)v4;
}

uint64_t sub_2411D21D0(uint64_t a1, uint64_t a2)
{
  if (((*(uint64_t (**)(void))(a2 + 16))() & 1) == 0) {
    return 1;
  }
  sub_24162C8D8();
  sub_24162C8C8();
  char v2 = sub_24162C8B8();
  swift_release();
  return v2 & 1;
}

uint64_t sub_2411D2234(uint64_t a1, uint64_t a2)
{
  if ((sub_2411D2134(a1, a2) & 1) == 0) {
    return 0;
  }

  return sub_2411D21D0(a1, a2);
}

uint64_t sub_2411D2294(uint64_t a1, uint64_t a2)
{
  uint64_t v73 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v70 = &v64[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  double v8 = &v64[-v7];
  MEMORY[0x270FA5388](v9);
  double v11 = &v64[-v10];
  MEMORY[0x270FA5388](v12);
  os_log_t v67 = (os_log_t)&v64[-v13];
  MEMORY[0x270FA5388](v14);
  uint64_t v69 = &v64[-v15];
  MEMORY[0x270FA5388](v16);
  CGFloat v18 = &v64[-v17];
  uint64_t v19 = sub_24162EFA8();
  uint64_t v72 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  CGFloat v21 = &v64[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v22);
  CGFloat v24 = &v64[-v23];
  swift_getDynamicType();
  int v71 = sub_2411D2234(a1, a2);
  if (v71)
  {
    uint64_t v68 = v19;
    (*(void (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
    id v25 = (void *)sub_241631CC8();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
    sub_2411D2B70();
    CGFloat v26 = (void *)sub_241631B18();
    swift_bridgeObjectRelease();
    AnalyticsSendEvent();

    sub_24162EF48();
    CGFloat v27 = *(void (**)(os_log_t, uint64_t, uint64_t))(v73 + 16);
    v27(v18, v2, a1);
    v27(v69, v2, a1);
    double v28 = sub_24162EF98();
    os_log_type_t v29 = sub_2416322E8();
    int v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v70 = swift_slowAlloc();
      uint64_t v75 = v70;
      *(_DWORD *)uint64_t v31 = 136446466;
      uint64_t DynamicType = swift_getDynamicType();
      swift_getMetatypeMetadata();
      os_log_t v66 = v28;
      uint64_t v32 = sub_241631D48();
      uint64_t DynamicType = sub_2411B6898(v32, v33, (uint64_t *)&v75);
      sub_241632C28();
      swift_bridgeObjectRelease();
      int v65 = v30;
      id v34 = *(void (**)(unsigned char *, uint64_t))(v73 + 8);
      v34(v18, a1);
      *(_WORD *)(v31 + 12) = 2082;
      uint64_t v73 = v31 + 14;
      id v35 = v69;
      v27(v67, (uint64_t)v69, a1);
      uint64_t v36 = sub_241631D88();
      uint64_t DynamicType = sub_2411B6898(v36, v37, (uint64_t *)&v75);
      sub_241632C28();
      swift_bridgeObjectRelease();
      v34(v35, a1);
      os_log_t v38 = v66;
      _os_log_impl(&dword_24118E000, v66, (os_log_type_t)v65, "[%{public}s] Submitted metric: %{public}s", (uint8_t *)v31, 0x16u);
      unint64_t v39 = v70;
      swift_arrayDestroy();
      MEMORY[0x245621640](v39, -1, -1);
      MEMORY[0x245621640](v31, -1, -1);
    }
    else
    {
      uint64_t v61 = *(void (**)(unsigned char *, uint64_t))(v73 + 8);
      v61(v18, a1);
      v61(v69, a1);
    }
    (*(void (**)(unsigned char *, uint64_t))(v72 + 8))(v24, v68);
  }
  else
  {
    sub_24162EF48();
    double v40 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v73 + 16);
    v40(v11, v2, a1);
    v40(v8, v2, a1);
    v40(v70, v2, a1);
    id v41 = sub_24162EF98();
    os_log_type_t v42 = sub_2416322E8();
    int v43 = v42;
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v44 = swift_slowAlloc();
      os_log_t v67 = v41;
      uint64_t v45 = v44;
      uint64_t v69 = swift_slowAlloc();
      uint64_t v75 = v69;
      *(_DWORD *)uint64_t v45 = 136446722;
      uint64_t DynamicType = swift_getDynamicType();
      swift_getMetatypeMetadata();
      LODWORD(v66) = v43;
      uint64_t v46 = sub_241631D48();
      uint64_t DynamicType = sub_2411B6898(v46, v47, (uint64_t *)&v75);
      sub_241632C28();
      swift_bridgeObjectRelease();
      uint64_t v73 = *(void *)(v73 + 8);
      ((void (*)(unsigned char *, uint64_t))v73)(v11, a1);
      *(_WORD *)(v45 + 12) = 2082;
      swift_getDynamicType();
      char v48 = sub_2411D2134(a1, a2);
      BOOL v49 = (v48 & 1) == 0;
      if (v48) {
        uint64_t v50 = 1702195828;
      }
      else {
        uint64_t v50 = 0x65736C6166;
      }
      uint64_t v68 = v19;
      if (v49) {
        unint64_t v51 = 0xE500000000000000;
      }
      else {
        unint64_t v51 = 0xE400000000000000;
      }
      uint64_t DynamicType = sub_2411B6898(v50, v51, (uint64_t *)&v75);
      sub_241632C28();
      swift_bridgeObjectRelease();
      CGRect v52 = v8;
      CGRect v53 = (void (*)(unsigned char *, uint64_t))v73;
      ((void (*)(unsigned char *, uint64_t))v73)(v52, a1);
      *(_WORD *)(v45 + 22) = 2082;
      id v54 = v70;
      swift_getDynamicType();
      char v55 = sub_2411D21D0(a1, a2);
      BOOL v56 = (v55 & 1) == 0;
      if (v55) {
        uint64_t v57 = 1702195828;
      }
      else {
        uint64_t v57 = 0x65736C6166;
      }
      if (v56) {
        unint64_t v58 = 0xE500000000000000;
      }
      else {
        unint64_t v58 = 0xE400000000000000;
      }
      uint64_t DynamicType = sub_2411B6898(v57, v58, (uint64_t *)&v75);
      sub_241632C28();
      swift_bridgeObjectRelease();
      v53(v54, a1);
      os_log_t v59 = v67;
      _os_log_impl(&dword_24118E000, v67, (os_log_type_t)v66, "[%{public}s] Skipping submitting metric. isEnabled: %{public}s, isAllowed: %{public}s", (uint8_t *)v45, 0x20u);
      uint64_t v60 = v69;
      swift_arrayDestroy();
      MEMORY[0x245621640](v60, -1, -1);
      MEMORY[0x245621640](v45, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v72 + 8))(v21, v68);
    }
    else
    {
      uint64_t v62 = *(void (**)(unsigned char *, uint64_t))(v73 + 8);
      v62(v11, a1);
      v62(v8, a1);
      v62(v70, a1);

      (*(void (**)(unsigned char *, uint64_t))(v72 + 8))(v21, v19);
    }
  }
  return v71 & 1;
}

uint64_t sub_2411D2AEC()
{
  return 1;
}

uint64_t sub_2411D2AF8()
{
  uint64_t v0 = sub_241632148();
  uint64_t v1 = MEMORY[0x263F8EE80];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_241348D90(v0, 0x6E6F6973726576, 0xE700000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  return v1;
}

unint64_t sub_2411D2B70()
{
  unint64_t result = qword_26B012200;
  if (!qword_26B012200)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B012200);
  }
  return result;
}

id sub_2411D2BB0(char a1)
{
  return sub_2411D31BC(a1, 0xD000000000000020, 0x8000000241656C80, 0);
}

id sub_2411D2BD0(void *a1, uint64_t a2, int a3, char a4)
{
  int v35 = a3;
  id v34 = a1;
  uint64_t v5 = sub_24162B7E8();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = sub_241631CA8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v32 - v11;
  sub_241631C38();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v37 = v7 + 16;
  os_log_t v38 = v13;
  v13(v9, v12, v6);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  int v39 = a4 & 1;
  id v14 = (id)qword_26B0181A0;
  sub_24162B7D8();
  sub_241631D38();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v12, v6);
  unint64_t v33 = v15;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v16 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  uint64_t v17 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  id v34 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v16, v17, 1);

  sub_241631C38();
  v38(v9, v12, v6);
  id v18 = (id)qword_26B0181A0;
  sub_24162B7D8();
  sub_241631D38();
  v15(v12, v6);
  uint64_t v19 = swift_allocObject();
  v35 &= 1u;
  *(unsigned char *)(v19 + 16) = v35;
  *(unsigned char *)(v19 + 17) = v39;
  uint64_t v20 = v36;
  *(void *)(v19 + 24) = v36;
  CGFloat v21 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  uint64_t v44 = sub_2411D4510;
  uint64_t v45 = v19;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v41 = 1107296256;
  v32[1] = &v42;
  os_log_type_t v42 = sub_2412A82A0;
  int v43 = &unk_26F568A38;
  uint64_t v22 = _Block_copy(&aBlock);
  swift_release();
  uint64_t v23 = self;
  id v24 = objc_msgSend(v23, sel_actionWithTitle_style_handler_, v21, 0, v22);
  _Block_release(v22);

  id v25 = v34;
  objc_msgSend(v34, sel_addAction_, v24);

  sub_241631C38();
  v38(v9, v12, v6);
  id v26 = (id)qword_26B0181A0;
  sub_24162B7D8();
  sub_241631D38();
  v33(v12, v6);
  uint64_t v27 = swift_allocObject();
  *(unsigned char *)(v27 + 16) = v35;
  *(unsigned char *)(v27 + 17) = v39;
  *(void *)(v27 + 24) = v20;
  double v28 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  uint64_t v44 = sub_2411D452C;
  uint64_t v45 = v27;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v41 = 1107296256;
  os_log_type_t v42 = sub_2412A82A0;
  int v43 = &unk_26F568A88;
  os_log_type_t v29 = _Block_copy(&aBlock);
  swift_release();
  id v30 = objc_msgSend(v23, sel_actionWithTitle_style_handler_, v28, 1, v29);
  _Block_release(v29);

  objc_msgSend(v25, sel_addAction_, v30);
  return v25;
}

id sub_2411D319C(char a1)
{
  return sub_2411D31BC(a1, 0xD000000000000023, 0x8000000241656C30, 1);
}

id sub_2411D31BC(char a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6 = sub_24162B7E8();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = sub_241631CA8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = &v20[-v12];
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v10, v13, v7);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v14 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v15 = (void *)sub_241631D38();
  uint64_t v17 = v16;
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v13, v7);
  id v18 = sub_2411D2BD0(v15, v17, a1 & 1, a4);
  swift_bridgeObjectRelease();
  return v18;
}

id sub_2411D33C8(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = a2;
  uint64_t v30 = a1;
  uint64_t v2 = sub_24162B7E8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_241631CA8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v26 - v8;
  sub_241631C38();
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v27(v6, v9, v3);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v10 = (id)qword_26B0181A0;
  sub_24162B7D8();
  sub_241631D38();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v9, v3);
  v26[0] = v11;
  uint64_t v12 = sub_241631CC8();
  v26[1] = v4 + 8;
  uint64_t v13 = (void *)v12;
  swift_bridgeObjectRelease();
  id v28 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, 0, v13, 0);

  sub_241631C38();
  id v14 = v27;
  v27(v6, v9, v3);
  id v15 = (id)qword_26B0181A0;
  sub_24162B7D8();
  sub_241631D38();
  v11(v9, v3);
  uint64_t v16 = v29;
  swift_retain();
  uint64_t v17 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  aBlock[4] = v30;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2412A82A0;
  aBlock[3] = &unk_26F568948;
  id v18 = _Block_copy(aBlock);
  swift_release();
  uint64_t v19 = self;
  id v20 = objc_msgSend(v19, sel_actionWithTitle_style_handler_, v17, 0, v18);
  _Block_release(v18);

  sub_241631C38();
  v14(v6, v9, v3);
  id v21 = (id)qword_26B0181A0;
  sub_24162B7D8();
  sub_241631D38();
  ((void (*)(char *, uint64_t))v26[0])(v9, v3);
  uint64_t v22 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(v19, sel_actionWithTitle_style_handler_, v22, 1, 0);

  id v24 = v28;
  objc_msgSend(v28, sel_addAction_, v20);
  objc_msgSend(v24, sel_addAction_, v23);

  return v24;
}

id sub_2411D386C(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  uint64_t v2 = sub_24162B7E8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_241631CA8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v24 - v8;
  sub_241631C38();
  id v28 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  void v24[3] = v4 + 16;
  v28(v6, v9, v3);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v10 = (id)qword_26B0181A0;
  sub_24162B7D8();
  v24[2] = 0x8000000241656B70;
  sub_241631D38();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v24[1] = v4 + 8;
  v11(v9, v3);
  uint64_t v12 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  id v25 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, 0, v12, 0);

  sub_241631C38();
  v28(v6, v9, v3);
  id v13 = (id)qword_26B0181A0;
  sub_24162B7D8();
  sub_241631D38();
  v11(v9, v3);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v26;
  *(void *)(v14 + 24) = v27;
  swift_retain();
  id v15 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_2411D3DA4;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2412A82A0;
  aBlock[3] = &unk_26F568998;
  uint64_t v16 = _Block_copy(aBlock);
  swift_release();
  uint64_t v17 = self;
  id v18 = objc_msgSend(v17, sel_actionWithTitle_style_handler_, v15, 2, v16);
  _Block_release(v16);

  sub_241631C38();
  v28(v6, v9, v3);
  id v19 = (id)qword_26B0181A0;
  sub_24162B7D8();
  sub_241631D38();
  v11(v9, v3);
  id v20 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(v17, sel_actionWithTitle_style_handler_, v20, 1, 0);

  id v22 = v25;
  objc_msgSend(v25, sel_addAction_, v18);
  objc_msgSend(v22, sel_addAction_, v21);

  return v22;
}

uint64_t sub_2411D3D6C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2411D3DA4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

id sub_2411D3DCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v47 = a3;
  uint64_t v48 = a2;
  uint64_t v43 = a1;
  uint64_t v3 = sub_24162BB18();
  uint64_t v45 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v42 = v4;
  uint64_t v44 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24162B7E8();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241631CA8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v39 - v13;
  sub_241631C38();
  uint64_t v15 = v9 + 16;
  uint64_t v16 = v8;
  BOOL v49 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v49(v11, v14, v8);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v17 = (id)qword_26B0181A0;
  sub_24162B7D8();
  sub_241631D38();
  id v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v14, v8);
  double v40 = v18;
  uint64_t v19 = sub_241631CC8();
  uint64_t v41 = v9 + 8;
  id v20 = (void *)v19;
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, 0, v20, 0);

  sub_241631C38();
  v39[0] = v16;
  v49(v11, v14, v16);
  id v22 = (id)qword_26B0181A0;
  void v39[2] = v7;
  sub_24162B7D8();
  sub_241631D38();
  v39[1] = v15;
  v18(v14, v16);
  id v24 = v44;
  uint64_t v23 = v45;
  uint64_t v25 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v44, v43, v46);
  unint64_t v26 = (*(unsigned __int8 *)(v23 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v27 = (char *)swift_allocObject();
  uint64_t v28 = v47;
  *((void *)v27 + 2) = v48;
  *((void *)v27 + 3) = v28;
  *((void *)v27 + 4) = v21;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v27[v26], v24, v25);
  swift_unknownObjectRetain();
  id v29 = v21;
  uint64_t v30 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_2411D445C;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2412A82A0;
  aBlock[3] = &unk_26F5689E8;
  uint64_t v31 = _Block_copy(aBlock);
  swift_release();
  uint64_t v32 = self;
  id v33 = objc_msgSend(v32, sel_actionWithTitle_style_handler_, v30, 2, v31);
  _Block_release(v31);

  sub_241631C38();
  uint64_t v34 = v39[0];
  v49(v11, v14, v39[0]);
  id v35 = (id)qword_26B0181A0;
  sub_24162B7D8();
  sub_241631D38();
  v40(v14, v34);
  uint64_t v36 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  id v37 = objc_msgSend(v32, sel_actionWithTitle_style_handler_, v36, 1, 0);

  objc_msgSend(v29, sel_addAction_, v33);
  objc_msgSend(v29, sel_addAction_, v37);

  return v29;
}

uint64_t sub_2411D4388()
{
  uint64_t v1 = sub_24162BB18();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_2411D445C()
{
  uint64_t v1 = sub_24162BB18();
  uint64_t v4 = *(void *)(v1 - 8);
  uint64_t result = v1 - 8;
  uint64_t v3 = v4;
  if (v0[2])
  {
    uint64_t v5 = (char *)v0 + ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v7 = v0[3];
    uint64_t v6 = v0[4];
    uint64_t ObjectType = swift_getObjectType();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t))(v7 + 8))(v6, v5, ObjectType, v7);
  }
  return result;
}

uint64_t sub_2411D4500()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2411D4510()
{
  return sub_2411D4538(*(unsigned __int8 *)(v0 + 16), *(unsigned __int8 *)(v0 + 17));
}

uint64_t sub_2411D451C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2411D452C()
{
  return sub_2411D48A8(*(unsigned char *)(v0 + 16), *(unsigned __int8 *)(v0 + 17));
}

uint64_t sub_2411D4538(int a1, int a2)
{
  int v22 = a2;
  int v20 = a1;
  uint64_t v23 = sub_24162E3B8();
  uint64_t v21 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v3 = &v19[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_24162E3C8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_24162E3E8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_24162C848();
  uint64_t v13 = *(void *)(v12 - 8);
  __n128 v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = &v19[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, void, uint64_t, __n128))(v13 + 104))(v16, *MEMORY[0x263F43580], v12, v14);
  sub_24162C838();
  (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v16, v12);
  id v17 = (unsigned int *)MEMORY[0x263F44730];
  if ((v20 & 1) == 0) {
    id v17 = (unsigned int *)MEMORY[0x263F44738];
  }
  (*(void (**)(unsigned char *, void, uint64_t))(v5 + 104))(v7, *v17, v4);
  (*(void (**)(unsigned char *, void, uint64_t))(v21 + 104))(v3, *MEMORY[0x263F44718], v23);
  sub_24162E3D8();
  sub_2411D4B54();
  sub_24162C858();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_2411D48A8(char a1, int a2)
{
  v18[3] = a2;
  uint64_t v3 = sub_24162E3B8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24162E3C8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24162E3E8();
  uint64_t v12 = *(void *)(v11 - 8);
  __n128 v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (unsigned int *)MEMORY[0x263F44730];
  if ((a1 & 1) == 0) {
    uint64_t v16 = (unsigned int *)MEMORY[0x263F44738];
  }
  (*(void (**)(char *, void, uint64_t, __n128))(v8 + 104))(v10, *v16, v7, v13);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F44720], v3);
  sub_24162E3D8();
  sub_2411D4B54();
  sub_24162C858();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
}

unint64_t sub_2411D4B54()
{
  unint64_t result = qword_268CFA328;
  if (!qword_268CFA328)
  {
    sub_24162E3E8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFA328);
  }
  return result;
}

id sub_2411D4BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v48 = a3;
  uint64_t v49 = a4;
  uint64_t v54 = a1;
  uint64_t v55 = a2;
  uint64_t v4 = sub_24162B7E8();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_241631CA8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  __n128 v13 = (char *)v47 - v12;
  sub_241631C38();
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v57(v10, v13, v7);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v14 = (id)qword_26B0181A0;
  sub_24162B7D8();
  v47[2] = sub_241631D38();
  uint64_t v53 = v15;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v13, v7);
  sub_241631C38();
  v57(v10, v13, v7);
  id v17 = (id)qword_26B0181A0;
  sub_24162B7D8();
  v47[1] = sub_241631D38();
  uint64_t v51 = v18;
  BOOL v56 = v16;
  v16(v13, v7);
  CGRect v52 = v6;
  if ((unint64_t)(v54 - 1) >= 2)
  {
    uint64_t v50 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = v56;
    uint64_t v19 = v57;
    id v24 = v10;
    uint64_t v25 = v13;
    if (!v54)
    {
      sub_241631C38();
      v19(v24, v13, v7);
      id v26 = (id)qword_26B0181A0;
      sub_24162B7D8();
      uint64_t v50 = sub_241631D38();
      uint64_t v22 = v27;
      v23(v13, v7);
    }
  }
  else
  {
    sub_241631C38();
    uint64_t v19 = v57;
    v57(v10, v13, v7);
    id v20 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v50 = sub_241631D38();
    uint64_t v22 = v21;
    uint64_t v23 = v56;
    id v24 = v10;
    uint64_t v25 = v13;
    v56(v13, v7);
  }
  if (v55 != 5 && v55 != 4 && v55 != 3) {
    goto LABEL_17;
  }
  sub_241631C38();
  v19(v24, v25, v7);
  uint64_t v28 = v7;
  id v29 = (id)qword_26B0181A0;
  sub_24162B7D8();
  sub_241631D38();
  uint64_t v31 = v30;
  v23(v25, v28);
  if (!v22) {
    goto LABEL_17;
  }
  if (v31)
  {
    uint64_t v32 = (void *)sub_241631CC8();
    swift_bridgeObjectRelease();
    id v33 = (void *)sub_241631CC8();
    swift_bridgeObjectRelease();
    id v34 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v32, v33, 1);

    uint64_t v35 = swift_allocObject();
    uint64_t v36 = v48;
    uint64_t v37 = v49;
    *(void *)(v35 + 16) = v48;
    *(void *)(v35 + 24) = v37;
    swift_retain();
    os_log_t v38 = (void *)sub_241631CC8();
    swift_bridgeObjectRelease();
    uint64_t v62 = sub_2411D5404;
    uint64_t v63 = v35;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v59 = 1107296256;
    uint64_t v60 = sub_2412A82A0;
    uint64_t v61 = &unk_26F568AD8;
    int v39 = _Block_copy(&aBlock);
    swift_release();
    double v40 = self;
    id v41 = objc_msgSend(v40, sel_actionWithTitle_style_handler_, v38, 1, v39);
    _Block_release(v39);

    objc_msgSend(v34, sel_addAction_, v41);
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = v36;
    *(void *)(v42 + 24) = v37;
    swift_retain();
    uint64_t v43 = (void *)sub_241631CC8();
    swift_bridgeObjectRelease();
    uint64_t v62 = sub_2411D5430;
    uint64_t v63 = v42;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v59 = 1107296256;
    uint64_t v60 = sub_2412A82A0;
    uint64_t v61 = &unk_26F568B28;
    uint64_t v44 = _Block_copy(&aBlock);
    swift_release();
    id v45 = objc_msgSend(v40, sel_actionWithTitle_style_handler_, v43, 2, v44);
    _Block_release(v44);

    objc_msgSend(v34, sel_addAction_, v45);
  }
  else
  {
LABEL_17:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v34;
}

uint64_t sub_2411D5404()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

uint64_t sub_2411D5430()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(1);
}

uint64_t sub_2411D548C()
{
  return 0;
}

void sub_2411D5494(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24162BB18();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t *)(v3 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37SingleSelectLoggingCardViewController_checkedIndex);
  uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37SingleSelectLoggingCardViewController_checkedIndex);
  LOBYTE(v8) = *(unsigned char *)(v3
                        + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37SingleSelectLoggingCardViewController_checkedIndex
                        + 8);
  *uint64_t v10 = a1;
  *((unsigned char *)v10 + 8) = a2 & 1;
  if (v8)
  {
    if (a2) {
      return;
    }
    goto LABEL_10;
  }
  uint64_t v12 = *(void **)(v3 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_tableView);
  MEMORY[0x245618F80](v11, 0);
  __n128 v13 = (void *)sub_24162BA88();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  id v14 = objc_msgSend(v12, sel_cellForRowAtIndexPath_, v13);

  if (v14)
  {
    type metadata accessor for DataTypeLoggingCell();
    uint64_t v15 = swift_dynamicCastClass();
    if (v15)
    {
      *(unsigned char *)(v15 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin19DataTypeLoggingCell_isChecked) = 0;
      sub_2413668EC();
    }
  }
  if ((v10[1] & 1) == 0)
  {
    a1 = *v10;
LABEL_10:
    uint64_t v16 = *(void **)(v3 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_tableView);
    MEMORY[0x245618F80](a1, 0);
    id v17 = (void *)sub_24162BA88();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    id v18 = objc_msgSend(v16, sel_cellForRowAtIndexPath_, v17);

    if (v18)
    {
      type metadata accessor for DataTypeLoggingCell();
      uint64_t v19 = swift_dynamicCastClass();
      if (v19)
      {
        *(unsigned char *)(v19 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin19DataTypeLoggingCell_isChecked) = 1;
        sub_2413668EC();
      }
    }
  }
}

void sub_2411D56C8()
{
  v11.receiver = v0;
  v11.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v11, sel_viewDidLoad);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_tableView];
  type metadata accessor for DataTypeLoggingCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v3 = (void *)sub_241631CC8();
  objc_msgSend(v1, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v3);

  objc_msgSend(v1, sel_setDelegate_, v0);
  objc_msgSend(v1, sel_setDataSource_, v0);
  objc_msgSend(v1, sel__setSeparatorInsetIsRelativeToCellEdges_, 0);
  objc_msgSend(v1, sel__setSectionContentInsetFollowsLayoutMargins_, 0);
  objc_msgSend(v1, sel_setSeparatorInsetReference_, 1);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 2.22507386e-308);
  objc_msgSend(v1, sel_setTableHeaderView_, v4);

  uint64_t v5 = &v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37SingleSelectLoggingCardViewController_dataSource];
  if (MEMORY[0x245621790](&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37SingleSelectLoggingCardViewController_dataSource]))
  {
    uint64_t v6 = *((void *)v5 + 1);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v8 = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 32))(v0, ObjectType, v6);
    swift_unknownObjectRelease();
    if (v8)
    {
      id v9 = objc_msgSend(v8, sel_heightAnchor);
      id v10 = objc_msgSend(v9, sel_constraintGreaterThanOrEqualToConstant_, 100.0);

      objc_msgSend(v10, sel_setActive_, 1);
      objc_msgSend(v1, sel_setTableFooterView_, v8);
    }
  }
}

void sub_2411D592C()
{
  v8.receiver = v0;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, sel_viewDidLayoutSubviews);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_tableView];
  id v2 = objc_msgSend(v1, sel_tableFooterView);
  if (v2)
  {
    uint64_t v3 = v2;
    objc_msgSend(v1, sel_bounds);
    objc_msgSend(v3, sel_systemLayoutSizeFittingSize_, v4, *(double *)(MEMORY[0x263F83810] + 8));
    double v6 = v5;
    objc_msgSend(v3, sel_frame);
    if (v7 != v6)
    {
      objc_msgSend(v3, sel_frame);
      objc_msgSend(v3, sel_setFrame_);
      objc_msgSend(v1, sel_setTableFooterView_, v3);
    }
  }
}

void *sub_2411D5B20(void *a1)
{
  uint64_t v2 = v1;
  double v4 = (void *)sub_241631CC8();
  double v5 = (void *)sub_24162BA88();
  id v6 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v4, v5);

  type metadata accessor for DataTypeLoggingCell();
  double v7 = (void *)swift_dynamicCastClassUnconditional();
  *((unsigned char *)v7 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin19DataTypeLoggingCell_editableDaySummarySection) = *(unsigned char *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_editableDaySummarySection);
  uint64_t v8 = v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37SingleSelectLoggingCardViewController_dataSource;
  if (MEMORY[0x245621790](v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37SingleSelectLoggingCardViewController_dataSource))
  {
    uint64_t v9 = *(void *)(v8 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v11 = sub_24162BAC8();
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 16))(v2, v11, ObjectType, v9);
    unint64_t v14 = v13;
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v12 = 0;
    unint64_t v14 = 0;
  }
  id v15 = objc_msgSend(v7, sel_textLabel);
  if (v15)
  {
    uint64_t v16 = v15;
    if (v14)
    {
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      id v17 = (void *)sub_241631CC8();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v17 = 0;
    }
    objc_msgSend(v16, sel_setText_, v17);
  }
  uint64_t v41 = v12;
  long long v43 = *(_OWORD *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 16);
  long long v44 = *(_OWORD *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration);
  long long v42 = *(_OWORD *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 32);
  uint64_t v18 = *(void *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 48);
  uint64_t v19 = *(void *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 56);
  uint64_t v21 = *(void **)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 64);
  uint64_t v20 = *(void *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 72);
  char v22 = *(unsigned char *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 80);
  uint64_t v23 = *(void *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 88);
  uint64_t v24 = *(void *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 96);
  char v25 = *(unsigned char *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 104);
  uint64_t v49 = &type metadata for LoggingCardCarouselConfiguration;
  uint64_t v50 = &off_26F571FA8;
  uint64_t v26 = swift_allocObject();
  uint64_t v47 = v26;
  *(_OWORD *)(v26 + 16) = v44;
  *(_OWORD *)(v26 + 32) = v43;
  *(_OWORD *)(v26 + 48) = v42;
  *(void *)(v26 + 64) = v18;
  *(void *)(v26 + 72) = v19;
  *(void *)(v26 + 80) = v21;
  *(void *)(v26 + 88) = v20;
  *(unsigned char *)(v26 + 96) = v22;
  *(void *)(v26 + 104) = v23;
  *(void *)(v26 + 112) = v24;
  *(unsigned char *)(v26 + 120) = v25;
  sub_2411A3DF4((uint64_t)&v47, (uint64_t)&v45);
  uint64_t v27 = (uint64_t)v7 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin19DataTypeLoggingCell_configuration;
  swift_beginAccess();
  id v28 = v21;
  sub_2411D6518((uint64_t)&v45, v27);
  uint64_t v29 = swift_endAccess();
  (*(void (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v7) + 0x118))(v29);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v47);

  *((unsigned char *)v7 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin19DataTypeLoggingCell_isChecked) = (sub_24162BAC8() == *(void *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37SingleSelectLoggingCardViewController_checkedIndex)) & ~*(unsigned char *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37SingleSelectLoggingCardViewController_checkedIndex + 8);
  sub_2413668EC();
  uint64_t v47 = HKMCDisplayTypeIdentifier.loggingCardTitle.getter();
  uint64_t v48 = v30;
  uint64_t v45 = 32;
  unint64_t v46 = 0xE100000000000000;
  unint64_t v31 = sub_2411D662C();
  uint64_t v32 = MEMORY[0x263F8D310];
  unint64_t v39 = v31;
  unint64_t v40 = v31;
  uint64_t v37 = MEMORY[0x263F8D310];
  unint64_t v38 = v31;
  sub_241632C98();
  swift_bridgeObjectRelease();
  uint64_t v33 = qword_26B00F370;
  id v34 = v6;
  if (v33 != -1) {
    swift_once();
  }
  uint64_t v47 = qword_26B017FC8;
  uint64_t v48 = unk_26B017FD0;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631E08();
  sub_241631E08();
  swift_bridgeObjectRelease();
  sub_241631E08();
  if (v14)
  {
    uint64_t v45 = v41;
    unint64_t v46 = v14;
    unint64_t v39 = v31;
    unint64_t v40 = v31;
    uint64_t v37 = v32;
    unint64_t v38 = v31;
    sub_241632C98();
    swift_bridgeObjectRelease();
  }
  sub_241631E08();
  swift_bridgeObjectRelease();
  uint64_t v35 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setAccessibilityIdentifier_, v35, v37, v38, v39, v40);

  return v7;
}

uint64_t sub_2411D6160(void *a1)
{
  uint64_t v3 = (void *)sub_24162BA88();
  objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v3, 0);

  if ((*(unsigned char *)(v1
                 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37SingleSelectLoggingCardViewController_checkedIndex
                 + 8) & 1) != 0
    || (uint64_t v4 = *(void *)(v1
                       + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37SingleSelectLoggingCardViewController_checkedIndex),
        v4 != sub_24162BAC8()))
  {
    uint64_t v5 = sub_24162BAC8();
    char v6 = 0;
  }
  else
  {
    uint64_t v5 = 0;
    char v6 = 1;
  }
  sub_2411D5494(v5, v6);
  uint64_t v7 = v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37SingleSelectLoggingCardViewController_dataSource;
  uint64_t result = MEMORY[0x245621790](v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37SingleSelectLoggingCardViewController_dataSource);
  if (result)
  {
    uint64_t v9 = *(void *)(v7 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 24))(v1, ObjectType, v9);
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_2411D6358()
{
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_tableView), sel_setNeedsLayout);
}

uint64_t sub_2411D645C()
{
  return sub_2411CD138(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37SingleSelectLoggingCardViewController_dataSource);
}

id sub_2411D646C()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SingleSelectLoggingCardViewController()
{
  return self;
}

uint64_t sub_2411D64E0()
{
  return MEMORY[0x270FA0238](v0, 121, 7);
}

uint64_t sub_2411D6518(uint64_t a1, uint64_t a2)
{
  sub_2411D657C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_2411D657C()
{
  if (!qword_268D024E0)
  {
    sub_2411D65D4();
    unint64_t v0 = sub_241632C18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D024E0);
    }
  }
}

unint64_t sub_2411D65D4()
{
  unint64_t result = qword_268CFA340;
  if (!qword_268CFA340)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CFA340);
  }
  return result;
}

unint64_t sub_2411D662C()
{
  unint64_t result = qword_26B0125E0;
  if (!qword_26B0125E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0125E0);
  }
  return result;
}

uint64_t *sub_2411D6680(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_2411D67B8(0, &qword_26B0112A8, &qword_26B00ED70);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    id v10 = (char *)a2 + v8;
    sub_2411D67B8(0, &qword_26B0112B0, (unint64_t *)&unk_26B011350);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

void sub_2411D67B8(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_2411B9D00(255, a3);
    unint64_t v4 = sub_2416317E8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2411D6810(uint64_t a1, uint64_t a2)
{
  sub_2411D67B8(0, &qword_26B0112A8, &qword_26B00ED70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_2411D67B8(0, &qword_26B0112B0, (unint64_t *)&unk_26B011350);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_2411D68E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2411D67B8(0, &qword_26B0112A8, &qword_26B00ED70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_2411D67B8(0, &qword_26B0112B0, (unint64_t *)&unk_26B011350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_2411D69D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2411D67B8(0, &qword_26B0112A8, &qword_26B00ED70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_2411D67B8(0, &qword_26B0112B0, (unint64_t *)&unk_26B011350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_2411D6AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2411D67B8(0, &qword_26B0112A8, &qword_26B00ED70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_2411D67B8(0, &qword_26B0112B0, (unint64_t *)&unk_26B011350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_2411D6BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2411D67B8(0, &qword_26B0112A8, &qword_26B00ED70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_2411D67B8(0, &qword_26B0112B0, (unint64_t *)&unk_26B011350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_2411D6C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2411D6C9C);
}

uint64_t sub_2411D6C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2411D67B8(0, &qword_26B0112A8, &qword_26B00ED70);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    sub_2411D67B8(0, &qword_26B0112B0, (unint64_t *)&unk_26B011350);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_2411D6DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2411D6DD8);
}

uint64_t sub_2411D6DD8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_2411D67B8(0, &qword_26B0112A8, &qword_26B00ED70);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    sub_2411D67B8(0, &qword_26B0112B0, (unint64_t *)&unk_26B011350);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for SetupPregnancyModeFeaturesTileUserData()
{
  uint64_t result = qword_26B010DB0;
  if (!qword_26B010DB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2411D6F58()
{
  sub_2411D67B8(319, &qword_26B0112A8, &qword_26B00ED70);
  if (v0 <= 0x3F)
  {
    sub_2411D67B8(319, &qword_26B0112B0, (unint64_t *)&unk_26B011350);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

BOOL sub_2411D7050(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_2411D7068()
{
  return sub_241633358();
}

uint64_t sub_2411D70B0()
{
  return sub_241633318();
}

uint64_t sub_2411D70DC()
{
  return sub_241633358();
}

uint64_t sub_2411D7120()
{
  if (*v0) {
    return 0xD000000000000015;
  }
  else {
    return 0x636E616E67657270;
  }
}

uint64_t sub_2411D716C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2411D7D8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2411D7194()
{
  return 0;
}

void sub_2411D71A0(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_2411D71AC(uint64_t a1)
{
  unint64_t v2 = sub_2411D78A0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2411D71E8(uint64_t a1)
{
  unint64_t v2 = sub_2411D78A0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2411D7224(void *a1)
{
  sub_2411D7A10(0, &qword_268CFA430, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v9[-v6];
  sub_2411B6854(a1, a1[3]);
  sub_2411D78A0();
  sub_2416333A8();
  v9[15] = 0;
  sub_2411D67B8(0, &qword_26B0112A8, &qword_26B00ED70);
  sub_2411D7A74(&qword_268CFA438);
  sub_2416331A8();
  if (!v1)
  {
    type metadata accessor for SetupPregnancyModeFeaturesTileUserData();
    v9[14] = 1;
    sub_2411D67B8(0, &qword_26B0112B0, (unint64_t *)&unk_26B011350);
    sub_2411D78F4(&qword_268CFA440);
    sub_2416331A8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2411D7440@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  sub_2411D67B8(0, &qword_26B0112B0, (unint64_t *)&unk_26B011350);
  uint64_t v27 = v4;
  uint64_t v24 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v22 - v5;
  sub_2411D67B8(0, &qword_26B0112A8, &qword_26B00ED70);
  uint64_t v30 = v7;
  uint64_t v26 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v28 = (char *)&v22 - v8;
  sub_2411D7A10(0, &qword_268CFA410, MEMORY[0x263F8E040]);
  uint64_t v31 = v9;
  uint64_t v29 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v22 - v10;
  uint64_t v12 = type metadata accessor for SetupPregnancyModeFeaturesTileUserData();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411B6854(a1, a1[3]);
  sub_2411D78A0();
  sub_241633398();
  if (v2) {
    return _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)a1);
  }
  uint64_t v23 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v26;
  uint64_t v16 = v27;
  char v33 = 0;
  sub_2411D7A74(&qword_268CFA420);
  uint64_t v18 = v28;
  sub_241633158();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  uint64_t v22 = (uint64_t)v15;
  v19(v15, v18, v30);
  char v32 = 1;
  sub_2411D78F4(&qword_268CFA428);
  sub_241633158();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v31);
  uint64_t v20 = v22;
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v22 + *(int *)(v23 + 20), v6, v16);
  sub_2411D7950(v20, v25);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)a1);
  return sub_2411D79B4(v20);
}

uint64_t sub_2411D7870@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2411D7440(a1, a2);
}

uint64_t sub_2411D7888(void *a1)
{
  return sub_2411D7224(a1);
}

unint64_t sub_2411D78A0()
{
  unint64_t result = qword_268CFA418;
  if (!qword_268CFA418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFA418);
  }
  return result;
}

uint64_t sub_2411D78F4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2411D67B8(255, &qword_26B0112B0, (unint64_t *)&unk_26B011350);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2411D7950(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SetupPregnancyModeFeaturesTileUserData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2411D79B4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SetupPregnancyModeFeaturesTileUserData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2411D7A10(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_2411D78A0();
    unint64_t v7 = a3(a1, &type metadata for SetupPregnancyModeFeaturesTileUserData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_2411D7A74(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2411D67B8(255, &qword_26B0112A8, &qword_26B00ED70);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *initializeBufferWithCopyOfBuffer for AnalysisKind(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SetupPregnancyModeFeaturesTileUserData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SetupPregnancyModeFeaturesTileUserData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2411D7C38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_2411D7C60(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_2411D7C68(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SetupPregnancyModeFeaturesTileUserData.CodingKeys()
{
  return &type metadata for SetupPregnancyModeFeaturesTileUserData.CodingKeys;
}

unint64_t sub_2411D7C88()
{
  unint64_t result = qword_268CFA448;
  if (!qword_268CFA448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFA448);
  }
  return result;
}

unint64_t sub_2411D7CE0()
{
  unint64_t result = qword_268CFA450;
  if (!qword_268CFA450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFA450);
  }
  return result;
}

unint64_t sub_2411D7D38()
{
  unint64_t result = qword_268CFA458[0];
  if (!qword_268CFA458[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_268CFA458);
  }
  return result;
}

uint64_t sub_2411D7D8C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x636E616E67657270 && a2 == 0xEE006C65646F4D79;
  if (v2 || (sub_241633218() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000241656EE0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_241633218();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void *initializeBufferWithCopyOfBuffer for PDFLegend(void *a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  id v6 = v3;
  id v7 = v5;
  return a1;
}

void destroy for PDFLegend(uint64_t a1)
{
  BOOL v2 = *(void **)(a1 + 16);
}

uint64_t assignWithCopy for PDFLegend(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  id v7 = *(void **)(a2 + 16);
  int v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  return a1;
}

__n128 initializeWithTake for PDFLegend(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for PDFLegend(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = a2[2];

  return a1;
}

uint64_t getEnumTagSinglePayload for PDFLegend(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PDFLegend(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PDFLegend()
{
  return &type metadata for PDFLegend;
}

void *initializeBufferWithCopyOfBuffer for PDFLegends(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return a1;
}

void *assignWithCopy for PDFLegends(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for PDFLegends(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PDFLegends(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PDFLegends(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PDFLegends()
{
  return &type metadata for PDFLegends;
}

uint64_t sub_2411D81B8(void *a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v8 = sub_24162BB98();
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = *(void *)(a3 + 16);
  if (v12)
  {
    unsigned int v53 = *MEMORY[0x263F00040];
    uint64_t v51 = (void (**)(char *, uint64_t))(v9 + 8);
    CGRect v52 = (void (**)(char *, void, uint64_t))(v9 + 104);
    uint64_t v50 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v48 = v11;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v47 = a3;
    uint64_t v13 = (void **)(a3 + 48);
    double v14 = 0.0;
    uint64_t v49 = a1;
    uint64_t v15 = v50;
    do
    {
      double v55 = v14;
      double v16 = *((double *)v13 - 1);
      uint64_t v17 = *v13;
      id v18 = *(v13 - 2);
      id v54 = v18;
      id v19 = v17;
      sub_24162CB68();
      sub_24162CB58();
      uint64_t v20 = (CGContext *)objc_msgSend(a1, sel_CGContext);
      sub_24162CB18();
      double v22 = v21;
      double v24 = v23 + 1.0;
      CGFloat v25 = v23 + 1.0 + 0.5;
      CGContextSaveGState(v20);
      v56.size.CGFloat height = 6.0;
      v56.origin.CGFloat x = v22;
      v56.origin.CGFloat y = v25;
      v56.size.CGFloat width = v16;
      uint64_t v26 = CGPathCreateWithRoundedRect(v56, 1.0, 1.0, 0);
      CGContextAddPath(v20, v26);
      uint64_t v27 = (CGColor *)objc_msgSend(v18, sel_CGColor);
      CGContextSetFillColorWithColor(v20, v27);

      uint64_t v28 = v48;
      (*v52)(v15, v53, v48);
      sub_2416321D8();
      (*v51)(v15, v28);
      CGContextRestoreGState(v20);
      CGContextSaveGState(v20);
      objc_msgSend(v19, sel_drawAtPoint_, v16 + v22 + 3.0, v24);
      CGContextRestoreGState(v20);

      a1 = v49;
      sub_241632608();
      CGFloat v30 = v29;
      CGFloat v32 = v31;
      CGFloat v34 = v33;
      CGFloat v36 = v35;
      sub_24162CB18();
      CGFloat v38 = v37;
      double v39 = a4;
      CGFloat v41 = v40;
      v57.origin.CGFloat x = v30;
      v57.origin.CGFloat y = v32;
      v57.size.CGFloat width = v34;
      v57.size.CGFloat height = v36;
      CGFloat v42 = v16 + CGRectGetWidth(v57) + 3.0;
      v58.origin.CGFloat x = v30;
      v58.origin.CGFloat y = v32;
      v58.size.CGFloat width = v34;
      v58.size.CGFloat height = v36;
      v59.size.CGFloat height = CGRectGetHeight(v58);
      v59.origin.CGFloat x = v38;
      v59.origin.CGFloat y = v41;
      v59.size.CGFloat width = v42;
      double Width = CGRectGetWidth(v59);

      swift_release();
      double v44 = Width + v39;
      a4 = v39;
      double v14 = v55 + v44;
      v13 += 3;
      --v12;
    }
    while (v12);
    a3 = v47;
    swift_bridgeObjectRelease();
  }
  sub_2411D8728(a4, a2, a3);
  CGRectGetHeight(v60);
  return sub_24162CB58();
}

void sub_2411D8530(void *a1, CGFloat a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v9 = sub_24162BB98();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (CGContext *)objc_msgSend(a1, sel_CGContext);
  sub_24162CB18();
  double v15 = v14;
  double v17 = v16 + 1.0;
  CGFloat v18 = v16 + 1.0 + 0.5;
  CGContextSaveGState(v13);
  v22.size.CGFloat height = 6.0;
  v22.origin.CGFloat x = v15;
  v22.origin.CGFloat y = v18;
  v22.size.CGFloat width = a2;
  id v19 = CGPathCreateWithRoundedRect(v22, 1.0, 1.0, 0);
  CGContextAddPath(v13, v19);
  uint64_t v20 = (CGColor *)objc_msgSend(a4, sel_CGColor);
  CGContextSetFillColorWithColor(v13, v20);

  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F00040], v9);
  sub_2416321D8();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  CGContextRestoreGState(v13);
  CGContextSaveGState(v13);
  objc_msgSend(a5, sel_drawAtPoint_, v15 + 3.0 + a2, v17);
  CGContextRestoreGState(v13);
}

uint64_t sub_2411D8728(double a1, uint64_t a2, uint64_t a3)
{
  double v3 = -a1;
  uint64_t v4 = *(void *)(a3 + 16);
  if (v4)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    id v6 = (void **)(a3 + 48);
    CGFloat v7 = 0.0;
    do
    {
      double v30 = v3;
      double v8 = *((double *)v6 - 1);
      uint64_t v9 = *v6;
      id v10 = *(v6 - 2);
      id v11 = v9;
      sub_241632608();
      CGFloat v13 = v12;
      CGFloat v15 = v14;
      double v16 = v7;
      CGFloat v18 = v17;
      CGFloat v20 = v19;
      sub_24162CB18();
      CGFloat v22 = v21;
      CGFloat v24 = v23;
      v31.origin.CGFloat x = v13;
      v31.origin.CGFloat y = v15;
      v31.size.CGFloat width = v18;
      v31.size.CGFloat height = v20;
      double v25 = v8 + CGRectGetWidth(v31) + 3.0;
      v32.origin.CGFloat x = v13;
      v32.origin.CGFloat y = v15;
      v32.size.CGFloat width = v18;
      CGFloat v7 = v16;
      v32.size.CGFloat height = v20;
      CGFloat Height = CGRectGetHeight(v32);
      v33.origin.CGFloat x = v22;
      v33.origin.CGFloat y = v24;
      v33.size.CGFloat width = v25;
      v33.size.CGFloat height = Height;
      double Width = CGRectGetWidth(v33);
      v34.origin.CGFloat x = v22;
      v34.origin.CGFloat y = v24;
      v34.size.CGFloat width = v25;
      v34.size.CGFloat height = Height;
      if (v16 < CGRectGetHeight(v34))
      {
        v35.origin.CGFloat x = v22;
        v35.origin.CGFloat y = v24;
        v35.size.CGFloat width = v25;
        v35.size.CGFloat height = Height;
        CGFloat v7 = CGRectGetHeight(v35);
      }
      double v3 = v30 + Width + a1;

      v6 += 3;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  return sub_24162CB18();
}

uint64_t sub_2411D88D8(void *a1, uint64_t a2)
{
  return sub_2411D81B8(a1, a2, *(void *)(v2 + 8), *(double *)v2);
}

uint64_t sub_2411D88E4(uint64_t a1)
{
  return sub_2411D8728(*(double *)v1, a1, *(void *)(v1 + 8));
}

uint64_t sub_2411D88F0(uint64_t a1)
{
  double v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  unint64_t v4 = sub_2411D8D0C();
  void *v3 = v1;
  v3[1] = sub_2411D899C;
  return MEMORY[0x270F33478](a1, v4);
}

uint64_t sub_2411D899C(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

void sub_2411D8A9C(void *a1, uint64_t a2)
{
  sub_2411D8530(a1, *(CGFloat *)(v2 + 8), a2, *(void **)v2, *(void **)(v2 + 16));
}

double sub_2411D8AAC()
{
  sub_241632608();
  CGFloat v1 = v0;
  CGFloat v3 = v2;
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  sub_24162CB18();
  double v9 = v8;
  v11.origin.CGFloat x = v1;
  v11.origin.CGFloat y = v3;
  v11.size.CGFloat width = v5;
  v11.size.CGFloat height = v7;
  CGRectGetWidth(v11);
  v12.origin.CGFloat x = v1;
  v12.origin.CGFloat y = v3;
  v12.size.CGFloat width = v5;
  v12.size.CGFloat height = v7;
  CGRectGetHeight(v12);
  return v9;
}

uint64_t sub_2411D8B5C(uint64_t a1)
{
  CGFloat v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  unint64_t v4 = sub_2411D8CB8();
  void *v3 = v1;
  v3[1] = sub_2411D8D60;
  return MEMORY[0x270F33478](a1, v4);
}

unint64_t sub_2411D8C0C()
{
  unint64_t result = qword_268CFA470;
  if (!qword_268CFA470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFA470);
  }
  return result;
}

unint64_t sub_2411D8C64()
{
  unint64_t result = qword_268CFA478;
  if (!qword_268CFA478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFA478);
  }
  return result;
}

unint64_t sub_2411D8CB8()
{
  unint64_t result = qword_268CFA480;
  if (!qword_268CFA480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFA480);
  }
  return result;
}

unint64_t sub_2411D8D0C()
{
  unint64_t result = qword_268CFA488[0];
  if (!qword_268CFA488[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_268CFA488);
  }
  return result;
}

uint64_t sub_2411D8D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

uint64_t sub_2411D8D74()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_2411D8DF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  unint64_t v9 = v8;
  if (v7 <= 2)
  {
    if (v8 <= 3)
    {
      unsigned int v11 = (~(-1 << (8 * v8)) - v7 + 3) >> (8 * v8);
      if (v11 > 0xFFFE)
      {
        uint64_t v10 = 4;
      }
      else
      {
        BOOL v12 = v11 != 0;
        BOOL v13 = v11 >= 0xFF;
        uint64_t v10 = 2;
        if (!v13) {
          uint64_t v10 = v12;
        }
      }
    }
    else
    {
      uint64_t v10 = 1;
    }
    unint64_t v9 = v10 + v8;
  }
  uint64_t v14 = *(_DWORD *)(v6 + 80);
  if (v14 <= 7 && v9 <= 0x18 && (*(_DWORD *)(v6 + 80) & 0x100000) == 0)
  {
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48))(a2, 3, v5))
    {
      if (v7 <= 2)
      {
        if (v8 <= 3)
        {
          unsigned int v19 = (~(-1 << (8 * v8)) - v7 + 3) >> (8 * v8);
          if (v19 > 0xFFFE)
          {
            uint64_t v18 = 4;
          }
          else
          {
            BOOL v20 = v19 != 0;
            BOOL v13 = v19 >= 0xFF;
            uint64_t v18 = 2;
            if (!v13) {
              uint64_t v18 = v20;
            }
          }
        }
        else
        {
          uint64_t v18 = 1;
        }
        v8 += v18;
      }
      memcpy(a1, a2, v8);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 3, v5);
    }
  }
  else
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  return a1;
}

uint64_t sub_2411D8FE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 3, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(a1, v3);
  }
  return result;
}

void *sub_2411D90AC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 3, v5))
  {
    unsigned int v7 = *(_DWORD *)(v6 + 84);
    size_t v8 = *(void *)(v6 + 64);
    if (v7 <= 2)
    {
      if (v8 <= 3)
      {
        unsigned int v10 = (~(-1 << (8 * v8)) - v7 + 3) >> (8 * v8);
        if (v10 > 0xFFFE)
        {
          uint64_t v9 = 4;
        }
        else
        {
          BOOL v11 = v10 != 0;
          BOOL v12 = v10 >= 0xFF;
          uint64_t v9 = 2;
          if (!v12) {
            uint64_t v9 = v11;
          }
        }
      }
      else
      {
        uint64_t v9 = 1;
      }
      v8 += v9;
    }
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 3, v5);
  }
  return a1;
}

void *sub_2411D91FC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unsigned int v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 3, v5);
  int v9 = v7(a2, 3, v5);
  if (v8)
  {
    if (v9)
    {
      unsigned int v10 = *(_DWORD *)(v6 + 84);
      size_t v11 = *(void *)(v6 + 64);
      if (v10 <= 2)
      {
        if (v11 > 3)
        {
LABEL_5:
          uint64_t v12 = 1;
LABEL_16:
          v11 += v12;
          goto LABEL_17;
        }
LABEL_9:
        unsigned int v15 = (~(-1 << (8 * v11)) - v10 + 3) >> (8 * v11);
        if (v15 > 0xFFFE)
        {
          uint64_t v12 = 4;
        }
        else
        {
          BOOL v16 = v15 != 0;
          BOOL v17 = v15 >= 0xFF;
          uint64_t v12 = 2;
          if (!v17) {
            uint64_t v12 = v16;
          }
        }
        goto LABEL_16;
      }
      goto LABEL_17;
    }
    (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 3, v5);
  }
  else
  {
    if (v9)
    {
      uint64_t v14 = *(void (**)(void *, uint64_t))(v6 + 8);
      uint64_t v13 = v6 + 8;
      v14(a1, v5);
      unsigned int v10 = *(_DWORD *)(v13 + 76);
      size_t v11 = *(void *)(v13 + 56);
      if (v10 <= 2)
      {
        if (v11 > 3) {
          goto LABEL_5;
        }
        goto LABEL_9;
      }
LABEL_17:
      memcpy(a1, a2, v11);
      return a1;
    }
    (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
  }
  return a1;
}

void *sub_2411D93CC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 3, v5))
  {
    unsigned int v7 = *(_DWORD *)(v6 + 84);
    size_t v8 = *(void *)(v6 + 64);
    if (v7 <= 2)
    {
      if (v8 <= 3)
      {
        unsigned int v10 = (~(-1 << (8 * v8)) - v7 + 3) >> (8 * v8);
        if (v10 > 0xFFFE)
        {
          uint64_t v9 = 4;
        }
        else
        {
          BOOL v11 = v10 != 0;
          BOOL v12 = v10 >= 0xFF;
          uint64_t v9 = 2;
          if (!v12) {
            uint64_t v9 = v11;
          }
        }
      }
      else
      {
        uint64_t v9 = 1;
      }
      v8 += v9;
    }
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 3, v5);
  }
  return a1;
}

void *sub_2411D951C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unsigned int v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 3, v5);
  int v9 = v7(a2, 3, v5);
  if (v8)
  {
    if (v9)
    {
      unsigned int v10 = *(_DWORD *)(v6 + 84);
      size_t v11 = *(void *)(v6 + 64);
      if (v10 <= 2)
      {
        if (v11 > 3)
        {
LABEL_5:
          uint64_t v12 = 1;
LABEL_16:
          v11 += v12;
          goto LABEL_17;
        }
LABEL_9:
        unsigned int v15 = (~(-1 << (8 * v11)) - v10 + 3) >> (8 * v11);
        if (v15 > 0xFFFE)
        {
          uint64_t v12 = 4;
        }
        else
        {
          BOOL v16 = v15 != 0;
          BOOL v17 = v15 >= 0xFF;
          uint64_t v12 = 2;
          if (!v17) {
            uint64_t v12 = v16;
          }
        }
        goto LABEL_16;
      }
      goto LABEL_17;
    }
    (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 3, v5);
  }
  else
  {
    if (v9)
    {
      uint64_t v14 = *(void (**)(void *, uint64_t))(v6 + 8);
      uint64_t v13 = v6 + 8;
      v14(a1, v5);
      unsigned int v10 = *(_DWORD *)(v13 + 76);
      size_t v11 = *(void *)(v13 + 56);
      if (v10 <= 2)
      {
        if (v11 > 3) {
          goto LABEL_5;
        }
        goto LABEL_9;
      }
LABEL_17:
      memcpy(a1, a2, v11);
      return a1;
    }
    (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
  }
  return a1;
}

uint64_t sub_2411D96EC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 3;
  uint64_t v7 = *(void *)(v4 + 64);
  if (v5 <= 2)
  {
    unsigned int v6 = 0;
    if (v7 <= 3)
    {
      unsigned int v9 = (~(-1 << (8 * v7)) - v5 + 3) >> (8 * v7);
      if (v9 > 0xFFFE)
      {
        uint64_t v8 = 4;
      }
      else
      {
        BOOL v10 = v9 != 0;
        BOOL v11 = v9 >= 0xFF;
        uint64_t v8 = 2;
        if (!v11) {
          uint64_t v8 = v10;
        }
      }
    }
    else
    {
      uint64_t v8 = 1;
    }
    v7 += v8;
  }
  if (!a2) {
    return 0;
  }
  int v12 = a2 - v6;
  if (a2 <= v6) {
    goto LABEL_30;
  }
  char v13 = 8 * v7;
  if (v7 <= 3)
  {
    unsigned int v15 = ((v12 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      int v14 = *(_DWORD *)((char *)a1 + v7);
      if (!v14) {
        goto LABEL_30;
      }
      goto LABEL_20;
    }
    if (v15 > 0xFF)
    {
      int v14 = *(unsigned __int16 *)((char *)a1 + v7);
      if (!*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_30;
      }
      goto LABEL_20;
    }
    if (v15 < 2)
    {
LABEL_30:
      if (v6)
      {
        unsigned int v19 = (*(uint64_t (**)(void))(v4 + 48))();
        if (v19 >= 4) {
          return v19 - 3;
        }
        else {
          return 0;
        }
      }
      return 0;
    }
  }
  int v14 = *((unsigned __int8 *)a1 + v7);
  if (!*((unsigned char *)a1 + v7)) {
    goto LABEL_30;
  }
LABEL_20:
  int v16 = (v14 - 1) << v13;
  if (v7 > 3) {
    int v16 = 0;
  }
  if (v7)
  {
    if (v7 <= 3) {
      int v17 = v7;
    }
    else {
      int v17 = 4;
    }
    switch(v17)
    {
      case 2:
        int v18 = *a1;
        break;
      case 3:
        int v18 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v18 = *(_DWORD *)a1;
        break;
      default:
        int v18 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v18 = 0;
  }
  return v6 + (v18 | v16) + 1;
}

void sub_2411D98E0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  unsigned int v8 = v7 - 3;
  size_t v9 = *(void *)(v6 + 64);
  if (v7 <= 2)
  {
    unsigned int v8 = 0;
    if (v9 <= 3)
    {
      unsigned int v11 = (~(-1 << (8 * v9)) - v7 + 3) >> (8 * v9);
      if (v11 > 0xFFFE)
      {
        uint64_t v10 = 4;
      }
      else
      {
        BOOL v12 = v11 != 0;
        BOOL v13 = v11 >= 0xFF;
        uint64_t v10 = 2;
        if (!v13) {
          uint64_t v10 = v12;
        }
      }
    }
    else
    {
      uint64_t v10 = 1;
    }
    v9 += v10;
  }
  BOOL v13 = a3 >= v8;
  unsigned int v14 = a3 - v8;
  if (v14 != 0 && v13)
  {
    if (v9 <= 3)
    {
      unsigned int v18 = ((v14 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v18))
      {
        int v15 = 4;
      }
      else if (v18 >= 0x100)
      {
        int v15 = 2;
      }
      else
      {
        int v15 = v18 > 1;
      }
    }
    else
    {
      int v15 = 1;
    }
  }
  else
  {
    int v15 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v16 = ~v8 + a2;
    if (v9 < 4)
    {
      int v17 = (v16 >> (8 * v9)) + 1;
      if (v9)
      {
        int v19 = v16 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v9] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v9] = v17;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v9] = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 2:
      *(_WORD *)&a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x2411D9B64);
    case 4:
      *(_DWORD *)&a1[v9] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (a2)
      {
LABEL_30:
        BOOL v20 = *(void (**)(void))(v6 + 56);
        v20();
      }
      return;
  }
}

uint64_t sub_2411D9B8C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 48))(a1, 3);
}

uint64_t sub_2411D9BBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 56))(a1, a2, 3);
}

uint64_t type metadata accessor for Determined()
{
  return sub_2411D9FC0();
}

uint64_t sub_2411D9C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v30 = a2;
  uint64_t v5 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v26 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = v7;
  uint64_t v8 = type metadata accessor for Determined();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  double v29 = (char *)&v25 - v10;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v12 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  int v15 = (char *)&v25 - v14;
  unsigned int v16 = (char *)&v25 + *(int *)(v13 + 48) - v14;
  uint64_t v28 = v9;
  int v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v17((char *)&v25 - v14, a1, v8);
  v17(v16, v30, v8);
  uint64_t v30 = v5;
  unsigned int v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  switch(v18(v15, 3, a3))
  {
    case 1u:
      if (v18(v16, 3, a3) != 1) {
        goto LABEL_9;
      }
      goto LABEL_5;
    case 2u:
      if (v18(v16, 3, a3) != 2) {
        goto LABEL_9;
      }
      goto LABEL_5;
    case 3u:
      if (v18(v16, 3, a3) != 3) {
        goto LABEL_9;
      }
LABEL_5:
      char v19 = 1;
      goto LABEL_11;
    default:
      v17(v29, (uint64_t)v15, v8);
      if (v18(v16, 3, a3))
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v29, a3);
LABEL_9:
        char v19 = 0;
      }
      else
      {
        uint64_t v20 = v30;
        double v21 = v26;
        (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v26, v16, a3);
        CGFloat v22 = v29;
        char v19 = sub_241631C28();
        double v23 = *(void (**)(char *, uint64_t))(v20 + 8);
        v23(v21, a3);
        v23(v22, a3);
LABEL_11:
        uint64_t v12 = v28;
        TupleTypeMetadata2 = v8;
      }
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, TupleTypeMetadata2);
      return v19 & 1;
  }
}

uint64_t sub_2411D9FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2411D9C04(a1, a2, *(void *)(a3 + 16));
}

uint64_t sub_2411D9FC0()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for DeviationsCalendarViewController()
{
  uint64_t result = qword_268CFA540;
  if (!qword_268CFA540) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2411DA03C()
{
  sub_2411DFF98(319, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    sub_2411DFF98(319, &qword_26B0130C0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F) {
      swift_initClassMetadata2();
    }
  }
}

BOOL sub_2411DA1A0()
{
  if (*(void *)(v0[2] + 16)) {
    return 1;
  }
  if (*(void *)(v0[3] + 16)) {
    return 1;
  }
  if (*(void *)(v0[7] + 16)) {
    return 1;
  }
  return *(void *)(v0[8] + 16) != 0;
}

id sub_2411DA1F0()
{
  uint64_t v1 = qword_268CFA538;
  double v2 = *(void **)&v0[qword_268CFA538];
  id v3 = v2;
  if (v2 == (void *)1)
  {
    id v3 = sub_2411DA260(v0);
    uint64_t v4 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v3;
    id v5 = v3;
    sub_2411E0300(v4);
  }
  sub_2411E0310(v2);
  return v3;
}

id sub_2411DA260(void *a1)
{
  id result = objc_msgSend(a1, sel_collectionView);
  if (result)
  {
    double v2 = result;
    id v3 = (void *)sub_241631CC8();
    id v4 = objc_msgSend(v2, sel__visibleDecorationViewsOfKind_, v3);

    if (v4)
    {
      uint64_t v5 = sub_241631F28();

      if (*(void *)(v5 + 16))
      {
        sub_2411B69BC(v5 + 32, (uint64_t)&v8);
        swift_bridgeObjectRelease();
        if (*((void *)&v9 + 1))
        {
          type metadata accessor for CalendarLogOverlayView();
          if (swift_dynamicCast())
          {
            uint64_t v6 = v7;
            *(void *)(v7 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin22CalendarLogOverlayView_delegate + 8) = &off_26F568E00;
            swift_unknownObjectWeakAssign();
            return (id)v6;
          }
          return 0;
        }
      }
      else
      {
        long long v8 = 0u;
        long long v9 = 0u;
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      long long v8 = 0u;
      long long v9 = 0u;
    }
    sub_2411E0320((uint64_t)&v8);
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_2411DA3B8(uint64_t a1, void *a2, void *a3, char *a4, void *a5, uint64_t a6)
{
  uint64_t v124 = a6;
  id v104 = a5;
  uint64_t v126 = a4;
  id v121 = a3;
  uint64_t v127 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_2411DFE60((uint64_t)a2, (uint64_t)v134);
  uint64_t v98 = v134[0];
  uint64_t v102 = v134[1];
  uint64_t v8 = v134[2];
  uint64_t v97 = v134[3];
  uint64_t v99 = v134[4];
  uint64_t v100 = (void (*)(char *, uint64_t, uint64_t))v134[5];
  unint64_t v101 = (void (*)(char *, char *, uint64_t))v134[6];
  uint64_t v9 = v134[8];
  uint64_t v96 = v134[7];
  uint64_t v95 = v134[9];
  uint64_t v118 = sub_24162EFA8();
  uint64_t v117 = *(void *)(v118 - 8);
  MEMORY[0x270FA5388](v118);
  uint64_t v116 = (char *)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_24162B9E8();
  uint64_t v111 = *(void *)(v112 - 8);
  MEMORY[0x270FA5388](v112);
  uint64_t v110 = (char *)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_241631AC8();
  uint64_t v107 = *(void *)(v108 - 8);
  MEMORY[0x270FA5388](v108);
  uint64_t v106 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24162B718();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v115 = (char *)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v114 = (char *)&v94 - v17;
  MEMORY[0x270FA5388](v18);
  unint64_t v113 = (char *)&v94 - v19;
  MEMORY[0x270FA5388](v20);
  uint64_t v123 = (char *)&v94 - v21;
  MEMORY[0x270FA5388](v22);
  uint64_t v120 = (char *)&v94 - v23;
  uint64_t v24 = sub_24162BB18();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v103 = (char *)&v94 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = sub_24162BA08();
  uint64_t v122 = *(void *)(v128 - 8);
  MEMORY[0x270FA5388](v128);
  uint64_t v109 = (char *)&v94 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411DFF98(0, &qword_26B0130C0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v28 - 8);
  unint64_t v105 = (char *)&v94 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v31 = MEMORY[0x270FA5388](v30);
  CGRect v33 = (char *)&v94 - v32;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v25 + 56))(&v6[qword_268CFA528], 1, 1, v24, v31);
  uint64_t v34 = (uint64_t)&v6[qword_268CFA530];
  uint64_t v130 = v14;
  CGRect v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  uint64_t v129 = v13;
  v35(&v6[qword_268CFA530], 1, 1, v13);
  *(void *)&v6[qword_268CFA538] = 1;
  uint64_t v125 = a2;
  sub_2411DFE60((uint64_t)a2, (uint64_t)v135);
  if (v136)
  {
    uint64_t v36 = v102;
    uint64_t v37 = (uint64_t)v101;
    char v38 = (char)v100;
    uint64_t v39 = v99;
    char v40 = v98;
    uint64_t v41 = v97;
    uint64_t v42 = v96;
    uint64_t v43 = v95;
  }
  else
  {
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    uint64_t v36 = swift_getKeyPath();
    uint64_t v45 = swift_getKeyPath();
    MEMORY[0x270FA5388](v45);
    uint64_t v37 = swift_getKeyPath();
    char v38 = 1;
    uint64_t v8 = MEMORY[0x263F8EE88];
    uint64_t v39 = 2;
    char v40 = 0;
    uint64_t v41 = MEMORY[0x263F8EE88];
    uint64_t v42 = MEMORY[0x263F8EE88];
    uint64_t v9 = MEMORY[0x263F8EE88];
    uint64_t v43 = 2;
  }
  uint64_t v46 = &v6[qword_268CFA510];
  *uint64_t v46 = v40;
  *((void *)v46 + 1) = v36;
  *((void *)v46 + 2) = v8;
  *((void *)v46 + 3) = v41;
  *((void *)v46 + 4) = v39;
  v46[40] = v38;
  *((void *)v46 + 6) = v37;
  *((void *)v46 + 7) = v42;
  *((void *)v46 + 8) = v9;
  *((void *)v46 + 9) = v43;
  id v47 = v121;
  *(void *)&v6[qword_268CFA518] = v121;
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v130 + 16);
  uint64_t v49 = v129;
  uint64_t v102 = v130 + 16;
  unint64_t v101 = v48;
  v48(v33, v126, v129);
  v35(v33, 0, 1, v49);
  swift_beginAccess();
  uint64_t v50 = v6;
  sub_2411DFFFC(v125, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_2411DFF14);
  id v121 = v47;
  sub_2411E0280((uint64_t)v33, v34, &qword_26B0130C0, MEMORY[0x263F07490]);
  swift_endAccess();
  uint64_t v51 = &v50[qword_268D23900];
  uint64_t v52 = v124;
  *(void *)uint64_t v51 = v104;
  *((void *)v51 + 1) = v52;
  id v53 = objc_allocWithZone(MEMORY[0x263F466D0]);
  swift_retain();
  uint64_t v54 = v127;
  double v55 = (void *)sub_24162B8E8();
  id v56 = objc_msgSend(v53, sel_initWithCalendar_, v55);

  *(void *)&v50[qword_268CFA520] = v56;
  CGRect v57 = v109;
  uint64_t v100 = *(void (**)(char *, uint64_t, uint64_t))(v122 + 16);
  v100(v109, v54, v128);
  sub_2411DFF98(0, &qword_268CFA560, MEMORY[0x263F462A0], MEMORY[0x263F8E0F8]);
  sub_241631628();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_24163A4F0;
  type metadata accessor for CalendarLogOverlayView();
  sub_2411E0238(&qword_268CFA568, (void (*)(uint64_t))type metadata accessor for CalendarLogOverlayView);
  MEMORY[0x245618FA0](0, 0);
  sub_241631618();
  uint64_t v58 = v54;
  sub_241631608();
  id v59 = objc_allocWithZone((Class)sub_241631568());
  CGRect v60 = (void *)sub_241631558();
  v132.receiver = v50;
  v132.super_class = ObjectType;
  id v104 = v60;
  uint64_t v103 = (char *)objc_msgSendSuper2(&v132, sel_initWithCollectionViewLayout_);
  id v61 = v121;
  objc_msgSend(v121, sel_activeDayRange);
  uint64_t v62 = v106;
  sub_241631A78();
  uint64_t v63 = v120;
  sub_241631AB8();
  (*(void (**)(char *, uint64_t))(v107 + 8))(v62, v108);
  uint64_t v64 = v111;
  int v65 = v110;
  uint64_t v66 = v112;
  (*(void (**)(char *, void, uint64_t))(v111 + 104))(v110, *MEMORY[0x263F07870], v112);
  objc_msgSend(v61, sel_activeDayRange);
  uint64_t v67 = (uint64_t)v105;
  sub_24162B968();
  uint64_t v68 = v130;
  uint64_t v69 = v66;
  uint64_t v70 = v129;
  (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v69);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v67, 1, v70) == 1)
  {
    sub_2411E00D4(v67, &qword_26B0130C0, MEMORY[0x263F07490]);
    v133[0] = 0;
    v133[1] = 0xE000000000000000;
    sub_241632E78();
    swift_bridgeObjectRelease();
    strcpy((char *)v133, "Unable to add ");
    HIBYTE(v133[1]) = -18;
    objc_msgSend(v121, sel_activeDayRange);
    uint64_t v131 = v93;
    sub_2416331D8();
    sub_241631E08();
    swift_bridgeObjectRelease();
    sub_241631E08();
    sub_2411E0238(&qword_268CFA570, MEMORY[0x263F07490]);
    sub_2416331D8();
    sub_241631E08();
    swift_bridgeObjectRelease();
    uint64_t result = sub_241633038();
    __break(1u);
  }
  else
  {
    int v71 = v123;
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 32))(v123, v67, v70);
    sub_2411E0238(&qword_268CFA578, (void (*)(uint64_t))type metadata accessor for DeviationsCalendarViewController);
    uint64_t v72 = v128;
    v100(v57, v58, v128);
    uint64_t v73 = v101;
    v101(v113, v63, v70);
    v73(v114, v71, v70);
    uint64_t v74 = v103;
    sub_24162B708();
    id v75 = objc_allocWithZone((Class)sub_241631698());
    uint64_t v76 = (void *)sub_241631648();
    id v77 = v74;
    id v78 = v76;
    sub_2416316E8();

    uint64_t v79 = v116;
    sub_24162EF48();
    uint64_t v80 = sub_24162EF98();
    os_log_type_t v81 = sub_2416322E8();
    if (os_log_type_enabled(v80, v81))
    {
      uint64_t v82 = (uint8_t *)swift_slowAlloc();
      uint64_t v83 = swift_slowAlloc();
      v133[0] = v83;
      *(_DWORD *)uint64_t v82 = 136446210;
      uint64_t v84 = sub_2416333E8();
      uint64_t v131 = sub_2411B6898(v84, v85, v133);
      uint64_t v86 = v127;
      uint64_t v87 = v128;
      sub_241632C28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v80, v81, "[%{public}s] initializing", v82, 0xCu);
      swift_arrayDestroy();
      uint64_t v88 = v83;
      uint64_t v63 = v120;
      MEMORY[0x245621640](v88, -1, -1);
      MEMORY[0x245621640](v82, -1, -1);

      (*(void (**)(char *, uint64_t))(v117 + 8))(v79, v118);
    }
    else
    {
      uint64_t v87 = v72;

      (*(void (**)(char *, uint64_t))(v117 + 8))(v79, v118);
      uint64_t v86 = v127;
    }
    id v89 = v121;
    objc_msgSend(v121, sel_registerObserver_, v77);

    swift_release();
    sub_2411DFFFC(v125, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_2411E0050);

    uint64_t v90 = *(void (**)(uint64_t, uint64_t))(v130 + 8);
    uint64_t v91 = v129;
    v90((uint64_t)v126, v129);
    (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v86, v87);
    v90((uint64_t)v123, v91);
    v90((uint64_t)v63, v91);
    return (uint64_t)v77;
  }
  return result;
}

void sub_2411DB484(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = &a1[qword_268CFA528];
  uint64_t v6 = sub_24162BB18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = &a1[qword_268CFA530];
  uint64_t v8 = sub_24162B718();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(void *)&a1[qword_268CFA538] = 1;
  id v9 = a3;

  sub_241633038();
  __break(1u);
}

void sub_2411DB5A0()
{
  v4.receiver = v0;
  v4.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v4, sel_viewDidLoad);
  sub_2411DB63C();
  sub_2411DB864();
  id v1 = objc_msgSend(v0, sel_collectionView);
  if (v1)
  {
    double v2 = v1;
    id v3 = (void *)sub_2416316D8();
    objc_msgSend(v2, sel_setDataSource_, v3);

    sub_2411DB96C();
  }
  else
  {
    __break(1u);
  }
}

void sub_2411DB63C()
{
  id v1 = v0;
  id v2 = objc_msgSend(v0, sel_collectionView);
  if (!v2)
  {
    __break(1u);
    goto LABEL_9;
  }
  id v3 = v2;
  sub_2416316C8();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v5 = (id)*MEMORY[0x263F833F0];
  sub_2416316B8();
  uint64_t v6 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_registerClass_forSupplementaryViewOfKind_withReuseIdentifier_, ObjCClassFromMetadata, v5, v6);

  id v7 = objc_msgSend(v0, sel_collectionView);
  if (!v7)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v8 = v7;
  type metadata accessor for CalendarSpacerCell();
  uint64_t v9 = swift_getObjCClassFromMetadata();
  uint64_t v10 = (void *)sub_241631CC8();
  objc_msgSend(v8, sel_registerClass_forCellWithReuseIdentifier_, v9, v10);

  id v11 = objc_msgSend(v1, sel_collectionView);
  if (!v11)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v12 = v11;
  type metadata accessor for DeviationCalendarCell();
  uint64_t v13 = swift_getObjCClassFromMetadata();
  uint64_t v14 = (void *)sub_241631CC8();
  objc_msgSend(v12, sel_registerClass_forCellWithReuseIdentifier_, v13, v14);

  id v15 = objc_msgSend(v1, sel_collectionView);
  if (!v15)
  {
LABEL_11:
    __break(1u);
    return;
  }
  uint64_t v16 = v15;
  type metadata accessor for CalendarFutureCell();
  uint64_t v17 = swift_getObjCClassFromMetadata();
  id v18 = (id)sub_241631CC8();
  objc_msgSend(v16, sel_registerClass_forCellWithReuseIdentifier_, v17, v18);
}

void sub_2411DB864()
{
  id v1 = objc_msgSend(v0, sel_navigationItem);
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824A8]), sel_initWithBarButtonSystemItem_target_action_, 1, v0, sel_cancelButtonTapped);
  objc_msgSend(v1, sel_setLeftBarButtonItem_, v2);

  id v3 = objc_msgSend(v0, sel_navigationItem);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824A8]), sel_initWithBarButtonSystemItem_target_action_, 0, v0, sel_doneButtonTapped);
  objc_msgSend(v3, sel_setRightBarButtonItem_, v4);
}

void sub_2411DB96C()
{
  objc_msgSend(v0, sel_setClearsSelectionOnViewWillAppear_, 0);
  id v1 = objc_msgSend(v0, sel_collectionView);
  if (!v1)
  {
    __break(1u);
    goto LABEL_11;
  }
  id v2 = v1;
  id v3 = objc_msgSend(self, sel_systemBackgroundColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v3);

  id v4 = objc_msgSend(v0, sel_collectionView);
  if (!v4)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  id v5 = v4;
  objc_msgSend(v4, sel_setShowsVerticalScrollIndicator_, 0);

  id v7 = objc_msgSend(v0, sel_collectionView);
  if (!v7)
  {
LABEL_12:
    __break(1u);
    return;
  }
  if (HKUICalendarLocaleIsRightToLeft()) {
    uint64_t v6 = 4;
  }
  else {
    uint64_t v6 = 3;
  }
  objc_msgSend(v7, sel_setSemanticContentAttribute_, v6);
}

void sub_2411DBA98(void *a1)
{
  id v1 = a1;
  sub_2411DB5A0();
}

id sub_2411DBAE0()
{
  id v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_24162BB18();
  uint64_t v22 = *(void *)(v3 - 8);
  uint64_t v23 = v3;
  MEMORY[0x270FA5388](v3);
  id v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_2411DFF98(0, &qword_26B0130C0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v22 - v11;
  uint64_t v13 = sub_24162B718();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24.receiver = v1;
  v24.super_class = ObjectType;
  objc_msgSendSuper2(&v24, sel_viewDidLayoutSubviews);
  uint64_t v17 = (uint64_t)v1 + qword_268CFA530;
  swift_beginAccess();
  sub_2411E04B8(v17, (uint64_t)v12, &qword_26B0130C0, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1) {
    return (id)sub_2411E00D4((uint64_t)v12, &qword_26B0130C0, MEMORY[0x263F07490]);
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  id result = objc_msgSend(v1, sel_collectionView);
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v19 = result;
  id result = (id)sub_2416316D8();
  if (!result)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  uint64_t v20 = result;
  sub_241631678();

  uint64_t v21 = (void *)sub_24162BA88();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v23);
  objc_msgSend(v19, sel_scrollToItemAtIndexPath_atScrollPosition_animated_, v21, 2, 0);

  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v10, 1, 1, v13);
  swift_beginAccess();
  sub_2411E0280((uint64_t)v10, v17, &qword_26B0130C0, MEMORY[0x263F07490]);
  swift_endAccess();
  sub_2411DBE8C();
  return (id)(*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

void sub_2411DBE8C()
{
  id v1 = v0;
  uint64_t v2 = sub_24162B7E8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_241631CA8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v29[-v8];
  uint64_t v10 = (void *)sub_241631708();
  id v11 = objc_msgSend(v1, sel_collectionView);
  if (v11)
  {
    uint64_t v12 = v11;
    objc_msgSend(v11, sel_bounds);

    sub_241631538();
    id v13 = objc_msgSend(v1, sel_navigationItem);
    sub_241631C38();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v7, v9, v3);
    if (qword_26B0131F0 != -1) {
      swift_once();
    }
    id v14 = (id)qword_26B0181A0;
    sub_24162B7D8();
    sub_241631D38();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v9, v3);
    id v15 = objc_msgSend(v1, sel_collectionView);
    if (v15)
    {
      uint64_t v16 = v15;
      objc_msgSend(v15, sel_bounds);
      CGFloat v18 = v17;
      CGFloat v20 = v19;
      CGFloat v22 = v21;
      CGFloat v24 = v23;

      v30.origin.CGFloat x = v18;
      v30.origin.CGFloat y = v20;
      v30.size.CGFloat width = v22;
      v30.size.CGFloat height = v24;
      CGRectGetWidth(v30);
      id v25 = objc_allocWithZone((Class)sub_241631788());
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v26 = (void *)sub_241631778();
      objc_msgSend(v26, sel_layoutMargins);
      objc_msgSend(v26, sel_setLayoutMargins_);
      id v27 = v26;
      objc_msgSend(v27, sel_layoutMargins);
      objc_msgSend(v27, sel_setLayoutMargins_);

      id v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F83050]), sel_initWithContentView_, v27);
      swift_bridgeObjectRelease();

      objc_msgSend(v13, sel__setBottomPalette_, v28);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_2411DC230(void *a1)
{
  id v1 = a1;
  sub_2411DBAE0();
}

void sub_2411DC278(uint64_t a1, double a2, double a3)
{
  uint64_t v4 = v3;
  v13.receiver = v4;
  v13.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v13, sel_viewWillTransitionToSize_withTransitionCoordinator_, a1, a2, a3);
  id v8 = objc_msgSend(v4, sel_collectionViewLayout);
  objc_msgSend(v8, sel_invalidateLayout);

  uint64_t v9 = (void *)sub_241631708();
  sub_241631538();

  id v10 = objc_msgSend(v4, sel_navigationItem);
  id v11 = objc_msgSend(v10, sel__bottomPalette);

  if (v11)
  {
    id v12 = objc_msgSend(v11, sel_contentView);

    if (v12)
    {
      objc_msgSend(v12, sel_layoutMargins);
      objc_msgSend(v12, sel_setLayoutMargins_);
      objc_msgSend(v12, sel_layoutMargins);
      objc_msgSend(v12, sel_setLayoutMargins_);
    }
  }
}

void sub_2411DC3D4(void *a1, double a2, double a3, uint64_t a4, uint64_t a5)
{
  swift_unknownObjectRetain();
  id v9 = a1;
  sub_2411DC278(a5, a2, a3);
  swift_unknownObjectRelease();
}

void sub_2411DC454(void *a1)
{
  v17.receiver = v1;
  v17.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v17, sel_traitCollectionDidChange_, a1);
  if (a1)
  {
    id v3 = a1;
    id v4 = objc_msgSend(v1, sel_traitCollection);
    id v5 = objc_msgSend(v4, sel_preferredContentSizeCategory);

    id v6 = objc_msgSend(v3, sel_preferredContentSizeCategory);
    uint64_t v7 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
    uint64_t v9 = v8;
    if (v7 == _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0() && v9 == v10)
    {

      swift_bridgeObjectRelease_n();
      return;
    }
    char v12 = sub_241633218();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v12) {
      return;
    }
  }
  id v13 = objc_msgSend(v1, sel_collectionViewLayout);
  objc_msgSend(v13, sel_invalidateLayout);

  id v14 = objc_msgSend(v1, sel_navigationItem);
  id v15 = objc_msgSend(v14, sel__bottomPalette);

  if (v15)
  {
    id v16 = objc_msgSend(v15, sel_contentView);

    objc_msgSend(v16, sel_traitCollectionDidChange_, a1);
  }
}

void sub_2411DC634(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  sub_2411DC454(a3);
}

id sub_2411DC6A0()
{
  id v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_24162EFA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162EF48();
  id v6 = sub_24162EF98();
  os_log_type_t v7 = sub_2416322E8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    id v16 = v1;
    uint64_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v18 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t v11 = sub_2416333E8();
    uint64_t v17 = sub_2411B6898(v11, v12, &v18);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v6, v7, "[%{public}s] Exiting period/spotting calendar editing", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v10, -1, -1);
    id v13 = v9;
    id v1 = v16;
    MEMORY[0x245621640](v13, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

void sub_2411DC8A4(void *a1)
{
  id v1 = a1;
  sub_2411DC6A0();
}

id sub_2411DC8EC()
{
  id v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_24162EFA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162EF48();
  id v6 = sub_24162EF98();
  os_log_type_t v7 = sub_2416322E8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    v18[0] = v2;
    uint64_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    *(void *)&v19[0] = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t v11 = sub_2416333E8();
    v18[1] = sub_2411B6898(v11, v12, (uint64_t *)v19);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v6, v7, "[%{public}s] Done editing period and spotting", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v10, -1, -1);
    MEMORY[0x245621640](v9, -1, -1);

    (*(void (**)(char *, void))(v3 + 8))(v5, v18[0]);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  id v13 = *(void (**)(_OWORD *))&v1[qword_268D23900];
  id v14 = &v1[qword_268CFA510];
  swift_beginAccess();
  long long v15 = *((_OWORD *)v14 + 3);
  void v19[2] = *((_OWORD *)v14 + 2);
  v19[3] = v15;
  unsigned char v19[4] = *((_OWORD *)v14 + 4);
  long long v16 = *((_OWORD *)v14 + 1);
  v19[0] = *(_OWORD *)v14;
  v19[1] = v16;
  swift_retain();
  sub_2411E03D8((uint64_t)v19);
  v13(v19);
  sub_2411E0448((uint64_t)v19);
  swift_release();
  return objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

void sub_2411DCB74(void *a1)
{
  id v1 = a1;
  sub_2411DC8EC();
}

uint64_t sub_2411DCBBC(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = v3;
  int v58 = a3;
  uint64_t v62 = a2;
  uint64_t v6 = sub_24162BB18();
  uint64_t v60 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  double v55 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411E01A4();
  uint64_t v59 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v61 = (uint64_t)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411DFF98(0, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30], MEMORY[0x263F8D8F0]);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v57 = (uint64_t)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)&v54 - v13;
  uint64_t v15 = sub_241631AC8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for CycleDay();
  uint64_t result = MEMORY[0x270FA5388](v19);
  CGFloat v22 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v23 = (void *)((char *)a1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin15CalendarDayCell_day);
  uint64_t v24 = *(void *)((char *)a1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin15CalendarDayCell_day + 16);
  if (v24)
  {
    id v56 = a1;
    uint64_t v26 = v23[4];
    uint64_t v25 = v23[5];
    uint64_t v27 = v23[3];
    uint64_t v28 = v23[1];
    char v63 = *v23;
    uint64_t v64 = v28;
    uint64_t v65 = v24;
    __int16 v66 = v27 & 0x101;
    char v67 = BYTE2(v27);
    uint64_t v68 = v26;
    uint64_t v69 = v25;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t result = sub_2416316D8();
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v29 = (void *)result;
    sub_241631668();

    id v30 = objc_msgSend(*(id *)(v4 + qword_268CFA518), sel_dayViewModelAtIndex_, sub_241631A88());
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v22, v18, v15);
    *(void *)&v22[*(int *)(v19 + 20)] = v30;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    __n128 v31 = (void *)(v4 + qword_268CFA510);
    swift_beginAccess();
    uint64_t v32 = v31[2];
    uint64_t v33 = v31[3];
    swift_retain();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    swift_getAtKeyPath();
    if (v70[0] == 1)
    {
      char v34 = sub_2413D3264((uint64_t)v22, v33);
      swift_bridgeObjectRelease();
      swift_release();
      char v35 = v34 ^ 1;
    }
    else
    {
      char v35 = sub_2413D3264((uint64_t)v22, v32);
      swift_bridgeObjectRelease();
      swift_release();
    }
    uint64_t v36 = v60;
    uint64_t v37 = v59;
    swift_bridgeObjectRelease();
    LOBYTE(v66) = v35 & 1;
    uint64_t v38 = v31[7];
    uint64_t v39 = v31[8];
    swift_retain();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    swift_getAtKeyPath();
    if (v70[0] == 1)
    {
      char v40 = sub_2413D3264((uint64_t)v22, v39);
      swift_bridgeObjectRelease();
      swift_release();
      char v41 = v40 ^ 1;
    }
    else
    {
      char v41 = sub_2413D3264((uint64_t)v22, v38);
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_bridgeObjectRelease();
    char v67 = v41 & 1;
    sub_2415928EC();
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v14, v62, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v14, 0, 1, v6);
    uint64_t v42 = v4 + qword_268CFA528;
    swift_beginAccess();
    uint64_t v43 = v61;
    uint64_t v44 = v61 + *(int *)(v37 + 48);
    uint64_t v45 = (uint64_t (*)(uint64_t))MEMORY[0x263F07A30];
    sub_2411E04B8((uint64_t)v14, v61, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
    sub_2411E04B8(v42, v44, (unint64_t *)&qword_26B011D00, v45);
    uint64_t v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
    if (v46(v43, 1, v6) == 1)
    {
      sub_2411E00D4((uint64_t)v14, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
      int v47 = v46(v44, 1, v6);
      uint64_t v48 = v56;
      if (v47 == 1)
      {
        sub_2411E00D4(v43, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
        char v49 = 1;
LABEL_16:
        v70[0] = v63;
        uint64_t v71 = v64;
        uint64_t v72 = v65;
        char v73 = v66;
        char v74 = v49 & 1;
        char v75 = v67;
        uint64_t v76 = v68;
        uint64_t v77 = v69;
        (*(void (**)(char *, void))((*MEMORY[0x263F8EED0] & *v48) + 0x118))(v70, v58 & 1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return sub_2411E0144((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for CycleDay);
      }
    }
    else
    {
      uint64_t v50 = v57;
      sub_2411E04B8(v43, v57, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
      if (v46(v44, 1, v6) != 1)
      {
        uint64_t v51 = v55;
        (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v55, v44, v6);
        sub_2411E0238((unint64_t *)&unk_268D01020, MEMORY[0x263F07A30]);
        char v49 = sub_241631C28();
        uint64_t v52 = *(void (**)(char *, uint64_t))(v36 + 8);
        v52(v51, v6);
        id v53 = (uint64_t (*)(uint64_t))MEMORY[0x263F07A30];
        sub_2411E00D4((uint64_t)v14, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
        v52((char *)v50, v6);
        sub_2411E00D4(v43, (unint64_t *)&qword_26B011D00, v53);
        uint64_t v48 = v56;
        goto LABEL_16;
      }
      sub_2411E00D4((uint64_t)v14, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v50, v6);
      uint64_t v48 = v56;
    }
    sub_2411E0144(v43, (uint64_t (*)(void))sub_2411E01A4);
    char v49 = 0;
    goto LABEL_16;
  }
  return result;
}

void sub_2411DD430()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_241631AC8();
  uint64_t v51 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v50 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for CycleDay();
  MEMORY[0x270FA5388](v49);
  uint64_t v52 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24162BB18();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411DFF98(0, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30], MEMORY[0x263F8D8F0]);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  id v14 = (char *)&v47 - v13;
  uint64_t v15 = (char *)sub_2411DA1F0();
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = v6;
    uint64_t v18 = v5;
    uint64_t v19 = v1 + qword_268CFA528;
    swift_beginAccess();
    uint64_t v48 = v2;
    CGFloat v20 = (uint64_t (*)(uint64_t))MEMORY[0x263F07A30];
    sub_2411E04B8(v19, (uint64_t)v14, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
    BOOL v21 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v18) != 1;
    sub_2411E00D4((uint64_t)v14, (unint64_t *)&qword_26B011D00, v20);
    objc_msgSend(*(id *)(*(void *)&v16[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin22CalendarLogOverlayView_flowToggle]+ OBJC_IVAR____TtC24MenstrualCyclesAppPluginP33_61BF7A68BF04E2E624D5FFBA5D55F26621ToggleButtonWithLabel_toggleButton), sel_setUserInteractionEnabled_, v21);
    uint64_t v2 = v48;
    BOOL v22 = v21;
    uint64_t v5 = v18;
    uint64_t v6 = v17;
    objc_msgSend(*(id *)(*(void *)&v16[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin22CalendarLogOverlayView_spottingToggle]+ OBJC_IVAR____TtC24MenstrualCyclesAppPluginP33_61BF7A68BF04E2E624D5FFBA5D55F26621ToggleButtonWithLabel_toggleButton), sel_setUserInteractionEnabled_, v22);
  }
  uint64_t v23 = v1 + qword_268CFA528;
  swift_beginAccess();
  sub_2411E04B8(v23, (uint64_t)v12, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, v5) == 1)
  {
    sub_2411E00D4((uint64_t)v12, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
    uint64_t v24 = (char *)sub_2411DA1F0();
    if (v24)
    {
      uint64_t v25 = v24;
      uint64_t v26 = *(void *)&v24[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin22CalendarLogOverlayView_flowToggle];
      *(unsigned char *)(v26
               + OBJC_IVAR____TtC24MenstrualCyclesAppPluginP33_61BF7A68BF04E2E624D5FFBA5D55F26621ToggleButtonWithLabel_isChecked) = 0;
      objc_msgSend(*(id *)(v26+ OBJC_IVAR____TtC24MenstrualCyclesAppPluginP33_61BF7A68BF04E2E624D5FFBA5D55F26621ToggleButtonWithLabel_toggleButton), sel_setNeedsUpdateConfiguration);
      uint64_t v27 = *(void *)&v25[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin22CalendarLogOverlayView_spottingToggle];
      *(unsigned char *)(v27
               + OBJC_IVAR____TtC24MenstrualCyclesAppPluginP33_61BF7A68BF04E2E624D5FFBA5D55F26621ToggleButtonWithLabel_isChecked) = 0;
      objc_msgSend(*(id *)(v27+ OBJC_IVAR____TtC24MenstrualCyclesAppPluginP33_61BF7A68BF04E2E624D5FFBA5D55F26621ToggleButtonWithLabel_toggleButton), sel_setNeedsUpdateConfiguration);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v12, v5);
    uint64_t v28 = sub_2416316D8();
    if (v28)
    {
      uint64_t v29 = (void *)v28;
      id v30 = v50;
      sub_241631668();

      id v31 = objc_msgSend(*(id *)(v1 + qword_268CFA518), sel_dayViewModelAtIndex_, sub_241631A88());
      uint64_t v32 = v51;
      uint64_t v33 = (uint64_t)v52;
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v52, v30, v2);
      *(void *)(v33 + *(int *)(v49 + 20)) = v31;
      (*(void (**)(char *, uint64_t))(v32 + 8))(v30, v2);
      char v34 = (char *)sub_2411DA1F0();
      if (v34)
      {
        char v35 = v34;
        uint64_t v50 = v8;
        uint64_t v51 = v6;
        uint64_t v36 = (void *)(v1 + qword_268CFA510);
        swift_beginAccess();
        uint64_t v37 = v36[2];
        uint64_t v38 = v36[3];
        swift_retain();
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        swift_getAtKeyPath();
        if (v53 == 1)
        {
          char v39 = sub_2413D3264(v33, v38);
          swift_bridgeObjectRelease();
          swift_release();
          char v40 = v39 ^ 1;
        }
        else
        {
          char v40 = sub_2413D3264(v33, v37);
          swift_bridgeObjectRelease();
          swift_release();
        }
        swift_bridgeObjectRelease();
        uint64_t v41 = v36[7];
        uint64_t v42 = v36[8];
        swift_retain();
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        swift_getAtKeyPath();
        if (v53 == 1)
        {
          char v43 = sub_2413D3264(v33, v42);
          swift_bridgeObjectRelease();
          swift_release();
          char v44 = v43 ^ 1;
        }
        else
        {
          char v44 = sub_2413D3264(v33, v41);
          swift_bridgeObjectRelease();
          swift_release();
        }
        swift_bridgeObjectRelease();
        uint64_t v45 = *(void *)&v35[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin22CalendarLogOverlayView_flowToggle];
        *(unsigned char *)(v45
                 + OBJC_IVAR____TtC24MenstrualCyclesAppPluginP33_61BF7A68BF04E2E624D5FFBA5D55F26621ToggleButtonWithLabel_isChecked) = v40 & 1;
        objc_msgSend(*(id *)(v45+ OBJC_IVAR____TtC24MenstrualCyclesAppPluginP33_61BF7A68BF04E2E624D5FFBA5D55F26621ToggleButtonWithLabel_toggleButton), sel_setNeedsUpdateConfiguration);
        uint64_t v46 = *(void *)&v35[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin22CalendarLogOverlayView_spottingToggle];
        *(unsigned char *)(v46
                 + OBJC_IVAR____TtC24MenstrualCyclesAppPluginP33_61BF7A68BF04E2E624D5FFBA5D55F26621ToggleButtonWithLabel_isChecked) = v44 & 1;
        objc_msgSend(*(id *)(v46+ OBJC_IVAR____TtC24MenstrualCyclesAppPluginP33_61BF7A68BF04E2E624D5FFBA5D55F26621ToggleButtonWithLabel_toggleButton), sel_setNeedsUpdateConfiguration);

        uint64_t v6 = v51;
        uint64_t v33 = (uint64_t)v52;
        uint64_t v8 = v50;
      }
      sub_2411E0144(v33, (uint64_t (*)(void))type metadata accessor for CycleDay);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_2411DDAFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_241631AC8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CycleDay();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_2416316D8();
  if (result)
  {
    uint64_t v10 = (void *)result;
    sub_241631668();

    id v11 = objc_msgSend(*(id *)(v1 + qword_268CFA518), sel_dayViewModelAtIndex_, sub_241631A88());
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v8, v5, v2);
    *(void *)&v8[*(int *)(v6 + 20)] = v11;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    swift_beginAccess();
    sub_24143DB08((uint64_t)v8);
    swift_endAccess();
    return sub_2411E0144((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CycleDay);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2411DDCE4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_2411DDD18(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4 = a4;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_2411DDD4C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  sub_2411E00D4(v0 + qword_268CFA528, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
  sub_2411E00D4(v0 + qword_268CFA530, &qword_26B0130C0, MEMORY[0x263F07490]);
  swift_release();
  uint64_t v1 = *(void **)(v0 + qword_268CFA538);

  sub_2411E0300(v1);
}

void sub_2411DDE68(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  sub_2411E00D4(a1 + qword_268CFA528, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
  sub_2411E00D4(a1 + qword_268CFA530, &qword_26B0130C0, MEMORY[0x263F07490]);
  swift_release();
  uint64_t v2 = *(void **)(a1 + qword_268CFA538);

  sub_2411E0300(v2);
}

uint64_t sub_2411DDF88()
{
  return type metadata accessor for DeviationsCalendarViewController();
}

uint64_t sub_2411DDF90(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7 = sub_24162BB18();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162BAA8();
  type metadata accessor for CalendarDayCell();
  uint64_t v11 = swift_dynamicCastClass();
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    id v13 = a3;
    id v14 = a4;
    id v15 = a1;
    sub_2411DCBBC(v12, (uint64_t)v10, 0);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_2411DE0C4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_241631AC8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CycleDay();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)sub_24162BA88();
  id v12 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v11);

  if (v12)
  {
    type metadata accessor for CalendarDayCell();
    uint64_t v13 = swift_dynamicCastClass();
    if (!v13
      || *(void *)(v13 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin15CalendarDayCell_day + 16)
      && (sub_24162E768() & 1) != 0)
    {
    }
    else
    {
      uint64_t result = sub_2416316D8();
      if (!result)
      {
        __break(1u);
        return result;
      }
      id v15 = (void *)result;
      sub_241631668();

      id v16 = objc_msgSend(*(id *)(v2 + qword_268CFA518), sel_dayViewModelAtIndex_, sub_241631A88());
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v10, v7, v4);
      uint64_t v17 = *(int *)(v8 + 20);
      *(void *)&v10[v17] = v16;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      id v18 = *(id *)&v10[v17];
      sub_2411E0144((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for CycleDay);
      LOBYTE(v16) = objc_msgSend(v18, sel_isFetched);

      if (v16) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_2411DE33C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_24162BB18();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162BAA8();
  id v9 = a3;
  id v10 = a1;
  LOBYTE(a1) = sub_2411DE0C4(v9);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return a1 & 1;
}

void sub_2411DE440(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24162BB18();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v36 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411DFF98(0, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30], MEMORY[0x263F8D8F0]);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  id v15 = (char *)v32 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v32 - v16;
  id v18 = (void *)sub_24162BA88();
  id v19 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v18);

  if (v19)
  {
    uint64_t v20 = type metadata accessor for DeviationCalendarCell();
    BOOL v21 = (void *)swift_dynamicCastClass();
    if (v21)
    {
      v32[1] = v20;
      uint64_t v33 = v21;
      char v34 = a1;
      uint64_t v35 = v3;
      uint64_t v22 = v3 + qword_268CFA528;
      swift_beginAccess();
      uint64_t v23 = (uint64_t (*)(uint64_t))MEMORY[0x263F07A30];
      sub_2411E04B8(v22, (uint64_t)v17, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v15, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
      swift_beginAccess();
      sub_2411E0280((uint64_t)v15, v22, (unint64_t *)&qword_26B011D00, v23);
      swift_endAccess();
      sub_2411E04B8((uint64_t)v17, (uint64_t)v12, (unint64_t *)&qword_26B011D00, v23);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
      {
        sub_2411E00D4((uint64_t)v12, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
        uint64_t v24 = v34;
      }
      else
      {
        uint64_t v26 = (uint64_t)v36;
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v36, v12, v6);
        sub_2411E0238((unint64_t *)&unk_268D01020, MEMORY[0x263F07A30]);
        char v27 = sub_241631C28();
        uint64_t v24 = v34;
        if ((v27 & 1) == 0)
        {
          uint64_t v28 = (void *)sub_24162BA88();
          id v29 = objc_msgSend(v24, sel_cellForItemAtIndexPath_, v28);

          if (v29)
          {
            id v30 = (void *)swift_dynamicCastClass();
            if (v30) {
              sub_2411DCBBC(v30, v26, 1);
            }
          }
        }
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v26, v6);
      }
      sub_2411DDAFC();
      sub_2411DCBBC(v33, a2, 1);
      sub_2411DD430();

      sub_2411E00D4((uint64_t)v17, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
      id v31 = (void *)sub_24162BA88();
      objc_msgSend(v24, sel_deselectItemAtIndexPath_animated_, v31, 1);

      return;
    }
  }
  uint64_t v36 = (char *)sub_24162BA88();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v36, 1);
  uint64_t v25 = v36;
}

uint64_t sub_2411DE8F8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_24162BB18();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162BAA8();
  id v9 = a3;
  id v10 = a1;
  sub_2411DE440(v9, (uint64_t)v8);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_2411DE9F4(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_2411DF7D0();
}

void *sub_2411DEA54(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2411DF9B0(a2, a3, a4);
}

id sub_2411DEA68(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)sub_241631CC8();
  id v4 = (void *)sub_24162BA88();
  id v5 = objc_msgSend(a2, sel_dequeueReusableCellWithReuseIdentifier_forIndexPath_, v3, v4);

  return v5;
}

uint64_t sub_2411DEAEC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2411DFB48(a2, a3, a4);
}

id sub_2411DEB00(int a1)
{
  uint64_t v2 = v1;
  int v27 = a1;
  uint64_t v26 = sub_241631AC8();
  uint64_t v3 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  id v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for CycleDay();
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (uint64_t)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t (*)(uint64_t))MEMORY[0x263F07A30];
  sub_2411DFF98(0, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  id v10 = (char *)&v25 - v9;
  uint64_t v11 = sub_24162BB18();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v2[qword_268CFA528];
  swift_beginAccess();
  sub_2411E04B8(v15, (uint64_t)v10, (unint64_t *)&qword_26B011D00, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return (id)sub_2411E00D4((uint64_t)v10, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  id result = (id)sub_2416316D8();
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v17 = result;
  sub_241631668();

  id v18 = objc_msgSend(*(id *)&v2[qword_268CFA518], sel_dayViewModelAtIndex_, sub_241631A88());
  uint64_t v19 = v28;
  uint64_t v20 = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(v28, v5, v26);
  *(void *)(v19 + *(int *)(v25 + 20)) = v18;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v20);
  swift_beginAccess();
  sub_24143DD2C(v27 & 1, v19);
  swift_endAccess();
  id result = objc_msgSend(v2, sel_collectionView);
  if (!result)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  BOOL v21 = result;
  uint64_t v22 = (void *)sub_24162BA88();
  id v23 = objc_msgSend(v21, sel_cellForItemAtIndexPath_, v22);

  if (v23)
  {
    type metadata accessor for DeviationCalendarCell();
    uint64_t v24 = (void *)swift_dynamicCastClass();
    if (v24) {
      sub_2411DCBBC(v24, (uint64_t)v14, 1);
    }
  }
  sub_2411E0144(v28, (uint64_t (*)(void))type metadata accessor for CycleDay);
  return (id)(*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

id sub_2411DEF40(int a1)
{
  uint64_t v2 = v1;
  int v27 = a1;
  uint64_t v26 = sub_241631AC8();
  uint64_t v3 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  id v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for CycleDay();
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (uint64_t)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t (*)(uint64_t))MEMORY[0x263F07A30];
  sub_2411DFF98(0, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  id v10 = (char *)&v25 - v9;
  uint64_t v11 = sub_24162BB18();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v2[qword_268CFA528];
  swift_beginAccess();
  sub_2411E04B8(v15, (uint64_t)v10, (unint64_t *)&qword_26B011D00, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return (id)sub_2411E00D4((uint64_t)v10, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  id result = (id)sub_2416316D8();
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v17 = result;
  sub_241631668();

  id v18 = objc_msgSend(*(id *)&v2[qword_268CFA518], sel_dayViewModelAtIndex_, sub_241631A88());
  uint64_t v19 = v28;
  uint64_t v20 = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(v28, v5, v26);
  *(void *)(v19 + *(int *)(v25 + 20)) = v18;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v20);
  swift_beginAccess();
  sub_24143DD2C(v27 & 1, v19);
  swift_endAccess();
  id result = objc_msgSend(v2, sel_collectionView);
  if (!result)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  BOOL v21 = result;
  uint64_t v22 = (void *)sub_24162BA88();
  id v23 = objc_msgSend(v21, sel_cellForItemAtIndexPath_, v22);

  if (v23)
  {
    type metadata accessor for DeviationCalendarCell();
    uint64_t v24 = (void *)swift_dynamicCastClass();
    if (v24) {
      sub_2411DCBBC(v24, (uint64_t)v14, 1);
    }
  }
  sub_2411E0144(v28, (uint64_t (*)(void))type metadata accessor for CycleDay);
  return (id)(*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

id sub_2411DF444()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CalendarSpacerCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CalendarSpacerCell()
{
  return self;
}

uint64_t destroy for CalendarChanges()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CalendarChanges(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_retain();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_retain();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return a1;
}

uint64_t assignWithCopy for CalendarChanges(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

__n128 initializeWithTake for CalendarChanges(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for CalendarChanges(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for CalendarChanges(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CalendarChanges(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CalendarChanges()
{
  return &type metadata for CalendarChanges;
}

uint64_t sub_2411DF7D0()
{
  swift_getObjectType();
  uint64_t v0 = sub_24162EFA8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  long long v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162EF48();
  long long v4 = sub_24162EF98();
  os_log_type_t v5 = sub_2416322E8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136446210;
    uint64_t v8 = sub_2416333E8();
    uint64_t v11 = sub_2411B6898(v8, v9, &v12);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v4, v5, "[%{public}s] Received a viewModelProvider update", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v7, -1, -1);
    MEMORY[0x245621640](v6, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void *sub_2411DF9B0(void *a1, uint64_t a2, uint64_t a3)
{
  char v5 = sub_2412D68B8(a2);
  uint64_t v12 = a3;
  sub_2411DFE0C();
  LOBYTE(v12) = v5;
  uint64_t v13 = sub_241632CD8();
  uint64_t v14 = v6;
  LOWORD(v15) = 0;
  BYTE2(v15) = 0;
  uint64_t v7 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)sub_24162BA88();
  id v9 = objc_msgSend(a1, sel_dequeueReusableCellWithReuseIdentifier_forIndexPath_, v7, v8, v12, v13, v14, v15, 0, 0);

  type metadata accessor for CalendarDayCell();
  id v10 = (void *)swift_dynamicCastClassUnconditional();
  (*(void (**)(uint64_t *, void))((*MEMORY[0x263F8EED0] & *v10) + 0x118))(&v12, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_2411DFB48(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  id v22 = a1;
  uint64_t v3 = sub_24162B5A8();
  uint64_t v23 = *(void *)(v3 - 8);
  uint64_t v24 = v3;
  MEMORY[0x270FA5388](v3);
  char v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24162B5B8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  id v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v13 = (void *)*MEMORY[0x263F833F0];
  sub_2416316C8();
  id v14 = v13;
  sub_2416316B8();
  uint64_t v15 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  uint64_t v16 = (void *)sub_24162BA88();
  id v17 = objc_msgSend(v22, sel_dequeueReusableSupplementaryViewOfKind_withReuseIdentifier_forIndexPath_, v14, v15, v16);

  uint64_t v18 = swift_dynamicCastClassUnconditional();
  MEMORY[0x245618270]();
  sub_24162B578();
  sub_24162B518();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v24);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v10, v6);
  sub_2411E0238((unint64_t *)&qword_268CFA550, MEMORY[0x263F07258]);
  sub_24162B6F8();
  v19(v12, v6);
  sub_2416316A8();
  swift_bridgeObjectRelease();
  return v18;
}

unint64_t sub_2411DFE0C()
{
  unint64_t result = qword_26B012338;
  if (!qword_26B012338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B012338);
  }
  return result;
}

uint64_t sub_2411DFE60(uint64_t a1, uint64_t a2)
{
  sub_2411E0390(0, &qword_268CFA558);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2411DFEDC()
{
  return 8;
}

uint64_t sub_2411DFEE8()
{
  return swift_release();
}

uint64_t sub_2411DFEF0(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_2411DFF04(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_2411DFF14(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_retain();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    swift_retain();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    return _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  }
  return result;
}

void sub_2411DFF98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void *sub_2411DFFFC(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_2411E0050(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2411E00D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_2411DFF98(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2411E0144(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_2411E01A4()
{
  if (!qword_268CFA580)
  {
    sub_2411DFF98(255, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30], MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CFA580);
    }
  }
}

uint64_t sub_2411E0238(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2411E0280(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_2411DFF98(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

void sub_2411E0300(id a1)
{
  if (a1 != (id)1) {
}
  }

id sub_2411E0310(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

uint64_t sub_2411E0320(uint64_t a1)
{
  sub_2411E0390(0, (unint64_t *)&qword_268CFB470);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2411E0390(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_241632C18();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_2411E03D8(uint64_t a1)
{
  return a1;
}

uint64_t sub_2411E0448(uint64_t a1)
{
  return a1;
}

uint64_t sub_2411E04B8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_2411DFF98(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

id sub_2411E0538()
{
  id v0 = objc_msgSend(self, sel_uniformAcrossSiblingsWithEstimate_, 200.0);
  id v1 = objc_msgSend(self, sel_fixedSpacing_, 0.0);
  sub_2411E06F4();
  uint64_t v2 = (void *)sub_24162E288();

  id v3 = objc_msgSend(self, sel_sectionWithGroup_, v2);
  objc_msgSend(v3, sel_setContentInsetsReference_, 2);
  objc_msgSend(v3, sel_setInterGroupSpacing_, 0.0);

  return v3;
}

uint64_t sub_2411E066C()
{
  sub_2411CD138(v0 + 24);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CycleLogLayoutEngine()
{
  return self;
}

id sub_2411E06C8()
{
  return sub_2411E0538();
}

uint64_t sub_2411E06EC()
{
  return 0;
}

unint64_t sub_2411E06F4()
{
  unint64_t result = qword_268CFA588;
  if (!qword_268CFA588)
  {
    type metadata accessor for CycleLogLayoutEngine();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFA588);
  }
  return result;
}

ValueMetadata *type metadata accessor for DataTypeDetailConfiguration.ComponentIdentifier.CycleTracking()
{
  return &type metadata for DataTypeDetailConfiguration.ComponentIdentifier.CycleTracking;
}

uint64_t sub_2411E0758(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  return sub_2411E08F0(a1, a2, a3, a4, *v4);
}

void *sub_2411E0768(uint64_t a1, uint64_t (*a2)(void, char *))
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_2411E0D14();
  uint64_t v16 = v4;
  char v5 = (char *)(a1
              + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80)));
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 72);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v7 = (void *)MEMORY[0x263F8EE78];
  do
  {
    uint64_t v9 = a2(*(void *)v5, &v5[*(int *)(v16 + 48)]);
    if (v10)
    {
      uint64_t v11 = v9;
      uint64_t v12 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = sub_24158B7BC(0, v7[2] + 1, 1, v7);
      }
      unint64_t v14 = v7[2];
      unint64_t v13 = v7[3];
      if (v14 >= v13 >> 1) {
        uint64_t v7 = sub_24158B7BC((void *)(v13 > 1), v14 + 1, 1, v7);
      }
      v7[2] = v14 + 1;
      unint64_t v8 = &v7[2 * v14];
      v8[4] = v11;
      v8[5] = v12;
    }
    v5 += v6;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_2411E08F0(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, double a5)
{
  uint64_t v9 = sub_2413FECAC();
  uint64_t v10 = sub_2411E0768(v9, (uint64_t (*)(void, char *))sub_2411E0C48);
  swift_bridgeObjectRelease();
  char v34 = v10;
  uint64_t v11 = v10[2];
  if (v11)
  {
    id v37 = self;
    uint64_t v12 = sub_2411B9D00(0, (unint64_t *)&qword_268CFA590);
    double v36 = *MEMORY[0x263F81840];
    uint64_t v35 = (void *)*MEMORY[0x263F81500];
    unint64_t v13 = (void *)*MEMORY[0x263F81540];
    unint64_t v14 = (id *)(v10 + 5);
    uint64_t v15 = (void *)*MEMORY[0x263F814F0];
    do
    {
      uint64_t v16 = (uint64_t)*(v14 - 1);
      id v17 = *v14;
      v39.origin.CGFloat x = a1;
      v39.origin.CGFloat y = a2;
      v39.size.CGFloat width = a3;
      v39.size.CGFloat height = a4;
      double MinX = CGRectGetMinX(v39);
      if (qword_268CF9308 != -1) {
        swift_once();
      }
      double v19 = *(double *)&qword_268D23C60;
      v40.origin.CGFloat x = a1;
      v40.origin.CGFloat y = a2;
      v40.size.CGFloat width = a3;
      v40.size.CGFloat height = a4;
      double MinY = CGRectGetMinY(v40);
      if (qword_268CF92E8 != -1) {
        swift_once();
      }
      double v21 = (double)v16 * a5 + MinX + v19 + *(double *)&qword_268D23C40;
      double v22 = MinY + *(double *)&qword_268D23C40;
      id v23 = objc_msgSend(v37, sel_systemFontOfSize_weight_, 6.0, v36, v34);
      uint64_t v24 = sub_24162CC48();
      uint64_t v25 = sub_241632718();
      sub_2411E0C50();
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_24163AC10;
      *(void *)(inited + 32) = v15;
      uint64_t v27 = sub_2411B9D00(0, &qword_26B012140);
      *(void *)(inited + 40) = v23;
      *(void *)(inited + 64) = v27;
      *(void *)(inited + 72) = v35;
      uint64_t v28 = sub_2411B9D00(0, (unint64_t *)&qword_268CFA910);
      *(void *)(inited + 80) = v24;
      *(void *)(inited + 104) = v28;
      *(void *)(inited + 112) = v13;
      *(void *)(inited + 144) = v12;
      *(void *)(inited + 120) = v25;
      id v29 = v15;
      id v30 = v35;
      id v31 = v13;
      sub_2414E42B8(inited);
      type metadata accessor for Key(0);
      sub_2411CCDB4();
      uint64_t v32 = (void *)sub_241631B18();
      swift_bridgeObjectRelease();
      objc_msgSend(v17, sel_drawAtPoint_withAttributes_, v32, v21, v22);

      v14 += 2;
      --v11;
    }
    while (v11);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_2411E0C48(uint64_t a1, uint64_t a2)
{
  return a1;
}

void sub_2411E0C50()
{
  if (!qword_268CFA900)
  {
    sub_2411E0CA8();
    unint64_t v0 = sub_2416331E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFA900);
    }
  }
}

void sub_2411E0CA8()
{
  if (!qword_268CFFFE0)
  {
    type metadata accessor for Key(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CFFFE0);
    }
  }
}

void sub_2411E0D14()
{
  if (!qword_268CFA598)
  {
    sub_241631AC8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CFA598);
    }
  }
}

uint64_t type metadata accessor for AboutTextDataSource()
{
  uint64_t result = qword_268CFA5B0;
  if (!qword_268CFA5B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2411E0DCC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2411E0E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_24162B788();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = (void *)(v5 + qword_268CFA5A8);
  *unint64_t v14 = a1;
  v14[1] = a2;
  uint64_t v15 = (void *)(v5 + qword_268CFA5A0);
  *uint64_t v15 = a3;
  v15[1] = a4;
  sub_2411E14DC(0, (unint64_t *)&qword_268D00EC0, MEMORY[0x263F44068]);
  uint64_t v16 = *(void *)(sub_24162D678() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = swift_allocObject();
  long long v25 = xmmword_241637EE0;
  *(_OWORD *)(v18 + 16) = xmmword_241637EE0;
  unint64_t v26 = v18 + v17;
  sub_2411E14DC(0, (unint64_t *)&qword_268CFC790, (void (*)(uint64_t))sub_2411E1530);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = v25;
  type metadata accessor for AboutTextCollectionViewCell();
  sub_2411E1494(&qword_268CFA5C0, (void (*)(uint64_t))type metadata accessor for AboutTextCollectionViewCell);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v20 = sub_24162CD08();
  uint64_t v22 = v21;
  *(void *)(v19 + 56) = &type metadata for AboutTextDataSourceItem;
  *(void *)(v19 + 64) = sub_2411E1588();
  id v23 = (void *)swift_allocObject();
  *(void *)(v19 + 32) = v23;
  void v23[2] = v20;
  v23[3] = v22;
  v23[4] = 0xD000000000000017;
  v23[5] = 0x80000002416572B0;
  v23[6] = a3;
  v23[7] = a4;
  sub_24162B778();
  sub_24162B738();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_24162D668();
  return sub_24162E0F8();
}

uint64_t sub_2411E1110()
{
  uint64_t v0 = sub_24162D2C8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162D268();
  uint64_t v4 = sub_24162D1D8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void sub_2411E11DC()
{
}

void sub_2411E11F8()
{
}

void sub_2411E1214()
{
}

uint64_t sub_2411E1240()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2411E1288()
{
  sub_24162E108();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_2411E12F0()
{
  return type metadata accessor for AboutTextDataSource();
}

uint64_t sub_2411E12F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_24162F338();
  MEMORY[0x270FA5388](v2 - 8);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_24162F2C8();
  uint64_t v3 = sub_24162CAE8();
  swift_allocObject();
  uint64_t v4 = sub_24162CAC8();
  a1[3] = v3;
  uint64_t result = sub_2411E1494(&qword_268CFD2C0, MEMORY[0x263F43AA8]);
  a1[4] = result;
  *a1 = v4;
  return result;
}

uint64_t sub_2411E1424()
{
  return sub_241632438();
}

uint64_t sub_2411E1494(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2411E14DC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2416331E8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_2411E1530()
{
  unint64_t result = qword_268CFF090;
  if (!qword_268CFF090)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CFF090);
  }
  return result;
}

unint64_t sub_2411E1588()
{
  unint64_t result = qword_268CFA5C8;
  if (!qword_268CFA5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFA5C8);
  }
  return result;
}

uint64_t sub_2411E15DC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t *sub_2411E1624(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_2411E2CE8(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_24162DA38();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_2411E175C(uint64_t a1, uint64_t a2)
{
  sub_2411E2CE8(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_24162DA38();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_2411E1834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2411E2CE8(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24162DA38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_2411E191C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2411E2CE8(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24162DA38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_2411E1A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2411E2CE8(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24162DA38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_2411E1AEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2411E2CE8(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24162DA38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_2411E1BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2411E1BE8);
}

uint64_t sub_2411E1BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2411E2CE8(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_24162DA38();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_2411E1D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2411E1D24);
}

uint64_t sub_2411E1D24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_2411E2CE8(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_24162DA38();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for PastPregnancyStartDatePickerRow()
{
  uint64_t result = qword_268CFA5E8;
  if (!qword_268CFA5E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2411E1EA4()
{
  sub_2411E2CE8(319, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  if (v0 <= 0x3F)
  {
    sub_24162DA38();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_2411E1F9C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2411E1FB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t started = type metadata accessor for PastPregnancyStartDatePickerRow();
  uint64_t v30 = *(void *)(started - 8);
  MEMORY[0x270FA5388](started);
  uint64_t v31 = v4;
  uint64_t v32 = (uint64_t)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_24162DA38();
  uint64_t v29 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411E2CE8(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v27 - v10;
  if (qword_268CF9168 != -1) {
    swift_once();
  }
  uint64_t v12 = *(void *)algn_268CFA5D8;
  uint64_t v28 = qword_268CFA5D0;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631378();
  swift_getKeyPath();
  sub_241631398();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v13 = v34;
  uint64_t v27 = v35;
  char v14 = v36;
  uint64_t v15 = v1 + *(int *)(started + 20);
  uint64_t v16 = v29;
  uint64_t v17 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v6, v15, v33);
  uint64_t v18 = v32;
  sub_2411E2D54(v1, v32, (uint64_t (*)(void))type metadata accessor for PastPregnancyStartDatePickerRow);
  unint64_t v19 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v20 = swift_allocObject();
  sub_2411E2A3C(v18, v20 + v19);
  *(void *)a1 = v28;
  *(void *)(a1 + 8) = v12;
  uint64_t v21 = v27;
  *(void *)(a1 + 16) = v13;
  *(void *)(a1 + 24) = v21;
  *(unsigned char *)(a1 + 32) = v14;
  sub_2411E2BEC(0, &qword_268CFA5F8, (uint64_t (*)(uint64_t))sub_2411E2B10, sub_2411E2B70, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for PregnancyInteractivePickerRow);
  uint64_t v23 = v22;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(a1 + *(int *)(v22 + 44), v6, v17);
  long long v25 = (void *)(a1 + *(int *)(v23 + 48));
  *long long v25 = 0xD000000000000018;
  v25[1] = 0x8000000241657390;
  unint64_t v26 = (uint64_t (**)@<X0>(uint64_t@<X8>))(a1 + *(int *)(v23 + 52));
  void *v26 = sub_2411E2AA0;
  v26[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v20;
  return result;
}

uint64_t sub_2411E2394@<X0>(uint64_t a1@<X8>)
{
  v14[0] = a1;
  uint64_t v1 = sub_241630668();
  MEMORY[0x270FA5388](v1 - 8);
  sub_2411E2BA4(0);
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411E2CE8(0, &qword_268CFA618, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  MEMORY[0x270FA5388](v6 - 8);
  sub_2411E2CE8(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v14 - v10;
  if (qword_268CF9168 != -1) {
    swift_once();
  }
  void v14[2] = qword_268CFA5D0;
  v14[3] = *(void *)algn_268CFA5D8;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631378();
  swift_getKeyPath();
  sub_241631398();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_241631368();
  if (qword_268CF9598 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_2411BF848(v3, (uint64_t)qword_268D23FE8);
  sub_2411E2D54(v12, (uint64_t)v5, (uint64_t (*)(void))sub_2411E2BA4);
  swift_release();
  sub_241630658();
  sub_2411D662C();
  return sub_24162FE58();
}

uint64_t sub_2411E26C8()
{
  return sub_241630D38();
}

uint64_t sub_2411E26E8()
{
  uint64_t v0 = sub_24162B7E8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_241631CA8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v13[-v6];
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v9 = sub_241631D38();
  uint64_t v11 = v10;
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  qword_268CFA5D0 = v9;
  *(void *)algn_268CFA5D8 = v11;
  return result;
}

uint64_t sub_2411E28E8()
{
  uint64_t v1 = (int *)(type metadata accessor for PastPregnancyStartDatePickerRow() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  sub_2411E2CE8(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v6 + v1[7];
  uint64_t v9 = sub_24162DA38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_2411E2A3C(uint64_t a1, uint64_t a2)
{
  uint64_t started = type metadata accessor for PastPregnancyStartDatePickerRow();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(started - 8) + 32))(a2, a1, started);
  return a2;
}

uint64_t sub_2411E2AA0@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for PastPregnancyStartDatePickerRow();

  return sub_2411E2394(a1);
}

void sub_2411E2B10()
{
  if (!qword_268CFA600)
  {
    unint64_t v0 = sub_24162FE68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFA600);
    }
  }
}

uint64_t sub_2411E2B70()
{
  return sub_2411E2CA0(&qword_268CFA608, (void (*)(uint64_t))sub_2411E2B10);
}

void sub_2411E2BA4(uint64_t a1)
{
}

void sub_2411E2BEC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_2411E2C6C()
{
  return sub_2411E2CA0((unint64_t *)&unk_26B00E680, MEMORY[0x263F07490]);
}

uint64_t sub_2411E2CA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2411E2CE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2411E2D54(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_2411E2DC0()
{
  unint64_t result = qword_268CFA620;
  if (!qword_268CFA620)
  {
    sub_2411E2BEC(255, &qword_268CFA5F8, (uint64_t (*)(uint64_t))sub_2411E2B10, sub_2411E2B70, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for PregnancyInteractivePickerRow);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFA620);
  }
  return result;
}

uint64_t destroy for PregnancyOnboardingModel()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PregnancyOnboardingModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  swift_retain();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return a1;
}

uint64_t assignWithCopy for PregnancyOnboardingModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  return a1;
}

__n128 initializeWithTake for PregnancyOnboardingModel(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PregnancyOnboardingModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  return a1;
}

uint64_t getEnumTagSinglePayload for PregnancyOnboardingModel(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 36)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PregnancyOnboardingModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 36) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 36) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PregnancyOnboardingModel()
{
  return &type metadata for PregnancyOnboardingModel;
}

void sub_2411E30C8(int a1@<W0>, void *a2@<X1>, void *a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v29 = a1;
  uint64_t v9 = sub_24162B718();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C85F4(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v25 - v17;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v25 - v20;
  int v28 = a4;
  if ((a4 - 1) > 1u)
  {
    unint64_t v26 = (void *)MEMORY[0x263F8EE78];
    uint64_t v27 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    unint64_t v26 = a3;
    uint64_t v27 = a2;
  }
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v22(v21, 1, 1, v9);
  v22(v18, 1, 1, v9);
  v22(v15, 1, 1, v9);
  sub_24162B5E8();
  type metadata accessor for PregnancyDatesInputViewModel();
  swift_allocObject();
  uint64_t v23 = sub_24137FB78(4, (uint64_t)v21, 0, 0, v12, 0, 1, (uint64_t)v18, 1u, 0, (uint64_t)v15);
  sub_2411E333C(a2, a3, v28);
  *(void *)a5 = v23;
  *(unsigned char *)(a5 + 8) = v29 & 1;
  uint64_t v24 = v27;
  *(void *)(a5 + 16) = v26;
  *(void *)(a5 + 24) = v24;
  *(_DWORD *)(a5 + 32) = 0;
}

void sub_2411E333C(void *a1, void *a2, char a3)
{
  switch(a3)
  {
    case 0:

      a1 = a2;
      goto LABEL_6;
    case 1:
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 3:
LABEL_6:

      break;
    default:
      return;
  }
}

void sub_2411E33E8(char a1)
{
  if (a1 == 51) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = sub_241633208();
  }
  long long v3 = (void *)sub_241631CC8();
  objc_msgSend(v1, sel_setObject_forKey_, v2, v3);
  swift_unknownObjectRelease();
}

uint64_t sub_2411E3488@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v97 = a2;
  uint64_t v5 = sub_24162B718();
  uint64_t v101 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  id v92 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v93 = (char *)&v77 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v100 = (char *)&v77 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  id v89 = (char *)&v77 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  unint64_t v85 = (char *)&v77 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v77 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v83 = (char *)&v77 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v86 = (char *)&v77 - v21;
  uint64_t v96 = sub_24162AEE8();
  uint64_t v22 = *(void *)(v96 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v96);
  uint64_t v87 = (char *)&v77 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v99 = (char *)&v77 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v82 = (char *)&v77 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)&v77 - v30;
  MEMORY[0x270FA5388](v29);
  uint64_t v84 = (char *)&v77 - v32;
  sub_2411E3CF0();
  uint64_t v34 = MEMORY[0x270FA5388](v33 - 8);
  uint64_t v91 = (char *)&v77 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v34);
  id v37 = (char *)&v77 - v36;
  uint64_t v38 = sub_24162C3B8();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v90 = (char *)&v77 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v98 = (char *)&v77 - v43;
  MEMORY[0x270FA5388](v42);
  uint64_t v45 = (char *)&v77 - v44;
  uint64_t v46 = sub_24162C018();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(a3, a1, v46);
  sub_24162BF38();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38) == 1) {
    return sub_2411E3D48((uint64_t)v37);
  }
  uint64_t v80 = a3;
  uint64_t v78 = v39;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v45, v37, v38);
  uint64_t v88 = v45;
  sub_24162C388();
  sub_24162AEC8();
  uint64_t v48 = v96;
  uint64_t v77 = *(void (**)(char *, uint64_t))(v22 + 8);
  v77(v31, v96);
  uint64_t v49 = sub_2411E2C6C();
  uint64_t v50 = v97;
  uint64_t v81 = v49;
  char v51 = sub_241631BC8();
  uint64_t v52 = v101;
  uint64_t v94 = *(void (**)(char *, char *, uint64_t))(v101 + 16);
  uint64_t v95 = v101 + 16;
  uint64_t v79 = v38;
  char v53 = v83;
  if (v51)
  {
    uint64_t v54 = v83;
    double v55 = v50;
  }
  else
  {
    uint64_t v54 = v83;
    double v55 = v18;
  }
  v94(v54, v55, v5);
  id v56 = *(void (**)(char *, uint64_t))(v52 + 8);
  v56(v18, v5);
  uint64_t v57 = v82;
  sub_24162C388();
  int v58 = v85;
  sub_24162AEA8();
  uint64_t v59 = v48;
  uint64_t v60 = v77;
  v77(v57, v59);
  if (sub_241631BB8()) {
    uint64_t v61 = v58;
  }
  else {
    uint64_t v61 = v53;
  }
  v94(v86, v61, v5);
  v56(v58, v5);
  uint64_t v101 = v52 + 8;
  v56(v53, v5);
  uint64_t v62 = v99;
  sub_24162C388();
  sub_24162AEA8();
  uint64_t v63 = v96;
  v60(v62, v96);
  sub_24162AEB8();
  sub_24162C348();
  sub_24162C358();
  sub_24162C398();
  uint64_t v64 = v87;
  sub_24162C388();
  sub_24162AEC8();
  v60(v64, v63);
  uint64_t v65 = v92;
  sub_24162C378();
  __int16 v66 = v97;
  if (sub_241631BC8())
  {
    char v67 = v93;
    uint64_t v68 = v93;
    uint64_t v69 = v65;
  }
  else
  {
    char v67 = v93;
    uint64_t v68 = v93;
    uint64_t v69 = v66;
  }
  v94(v68, v69, v5);
  uint64_t v70 = v79;
  v56(v65, v5);
  uint64_t v71 = v100;
  sub_24162B608();
  v56(v67, v5);
  v56(v71, v5);
  uint64_t v72 = v98;
  sub_24162C388();
  sub_24162C358();
  char v73 = v90;
  sub_24162C398();
  uint64_t v74 = v78;
  char v75 = v91;
  (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v91, v73, v70);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v75, 0, 1, v70);
  sub_24162BF48();
  uint64_t v76 = *(void (**)(char *, uint64_t))(v74 + 8);
  v76(v73, v70);
  v76(v72, v70);
  return ((uint64_t (*)(char *, uint64_t))v76)(v88, v70);
}

void sub_2411E3CF0()
{
  if (!qword_26B012220)
  {
    sub_24162C3B8();
    unint64_t v0 = sub_241632C18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B012220);
    }
  }
}

uint64_t sub_2411E3D48(uint64_t a1)
{
  sub_2411E3CF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_2411E3DA4(void *a1, char a2, char a3)
{
  uint64_t v4 = v3;
  swift_getObjectType();
  uint64_t v8 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_label;
  id v9 = objc_allocWithZone(MEMORY[0x263F828E0]);
  uint64_t v10 = v4;
  *(void *)&v4[v8] = objc_msgSend(v9, sel_init);
  uint64_t v11 = &v10[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_lastSize];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  v10[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_isBold] = a2;
  id v12 = objc_msgSend(self, sel_blackColor);
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15880]), sel_init);
  id v14 = objc_msgSend(v12, sel_CGColor);
  objc_msgSend(v13, sel_setFillColor_, v14);

  *(void *)&v10[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_circleMask] = v13;
  v10[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_isMaskVisible] = a3;

  v47.receiver = v10;
  v47.super_class = (Class)type metadata accessor for CalendarDayLabel();
  uint64_t v15 = (char *)objc_msgSendSuper2(&v47, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v15, sel_setOpaque_, 1);
  uint64_t v16 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_label;
  uint64_t v17 = *(void **)&v15[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_label];
  objc_msgSend(v17, sel_setTextColor_, a1);
  objc_msgSend(v17, sel_setTextAlignment_, 1);
  sub_2411E4470();
  int v18 = v15[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_isMaskVisible];
  if (v18 == 1)
  {
    long long v19 = *MEMORY[0x263F15740];
    long long v20 = *(_OWORD *)(MEMORY[0x263F15740] + 16);
    long long v21 = *(_OWORD *)(MEMORY[0x263F15740] + 32);
    long long v22 = *(_OWORD *)(MEMORY[0x263F15740] + 48);
    long long v23 = *(_OWORD *)(MEMORY[0x263F15740] + 64);
    long long v24 = *(_OWORD *)(MEMORY[0x263F15740] + 80);
    long long v25 = *(_OWORD *)(MEMORY[0x263F15740] + 96);
    long long v26 = *(_OWORD *)(MEMORY[0x263F15740] + 112);
  }
  else
  {
    CATransform3DMakeScale(&v46, 0.0001, 0.0001, 1.0);
    long long v19 = *(_OWORD *)&v46.m11;
    long long v20 = *(_OWORD *)&v46.m13;
    long long v21 = *(_OWORD *)&v46.m21;
    long long v22 = *(_OWORD *)&v46.m23;
    long long v23 = *(_OWORD *)&v46.m31;
    long long v24 = *(_OWORD *)&v46.m33;
    long long v25 = *(_OWORD *)&v46.m41;
    long long v26 = *(_OWORD *)&v46.m43;
  }
  uint64_t v27 = *(void **)&v15[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_circleMask];
  *(_OWORD *)&v46.m11 = v19;
  *(_OWORD *)&v46.m13 = v20;
  *(_OWORD *)&v46.m21 = v21;
  *(_OWORD *)&v46.m23 = v22;
  *(_OWORD *)&v46.m31 = v23;
  *(_OWORD *)&v46.m33 = v24;
  *(_OWORD *)&v46.m41 = v25;
  *(_OWORD *)&v46.m43 = v26;
  objc_msgSend(v27, sel_setTransform_, &v46);
  objc_msgSend(v27, sel_setHidden_, v18 ^ 1u);
  objc_msgSend(v15, sel_addSubview_, v17);
  objc_msgSend(v17, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v28 = v17;
  sub_2416328D8();

  uint64_t v29 = self;
  sub_2411BFC90();
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_24163ADC0;
  id v31 = objc_msgSend(*(id *)&v15[v16], sel_leadingAnchor);
  id v32 = objc_msgSend(v15, sel_leadingAnchor);
  id v33 = objc_msgSend(v31, sel_constraintEqualToAnchor_, v32);

  *(void *)(v30 + 32) = v33;
  id v34 = objc_msgSend(v15, sel_trailingAnchor);
  id v35 = objc_msgSend(*(id *)&v15[v16], sel_trailingAnchor);
  id v36 = objc_msgSend(v34, sel_constraintEqualToAnchor_, v35);

  *(void *)(v30 + 40) = v36;
  id v37 = objc_msgSend(*(id *)&v15[v16], sel_centerYAnchor);
  id v38 = objc_msgSend(v15, sel_centerYAnchor);
  id v39 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v38);

  *(void *)(v30 + 48) = v39;
  *(void *)&v46.m11 = v30;
  sub_241631F48();
  sub_2411B9D00(0, (unint64_t *)&qword_26B012130);
  uint64_t v40 = (void *)sub_241631F18();
  swift_bridgeObjectRelease();
  objc_msgSend(v29, sel_activateConstraints_, v40);

  sub_2411E58B4();
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_241637EE0;
  uint64_t v42 = sub_24162F5B8();
  uint64_t v43 = MEMORY[0x263F82018];
  *(void *)(v41 + 32) = v42;
  *(void *)(v41 + 40) = v43;
  uint64_t v44 = v15;
  sub_241632918();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v44;
}

id sub_2411E4254(id result, char a2)
{
  uint64_t v3 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_isMaskVisible;
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_isMaskVisible) != (result & 1))
  {
    *(unsigned char *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_isMaskVisible) = result & 1;
    if (a2)
    {
      if ((result & 1) != 0
        || (uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_circleMask),
            id v5 = sub_2411E5A30(),
            uint64_t v6 = (void *)sub_241631CC8(),
            objc_msgSend(v4, sel_addAnimation_forKey_, v5, v6),
            v5,
            v6,
            *(unsigned char *)(v2 + v3) == 1))
      {
        uint64_t v7 = 0;
        long long v8 = *MEMORY[0x263F15740];
        long long v9 = *(_OWORD *)(MEMORY[0x263F15740] + 16);
        long long v10 = *(_OWORD *)(MEMORY[0x263F15740] + 32);
        long long v11 = *(_OWORD *)(MEMORY[0x263F15740] + 48);
        long long v12 = *(_OWORD *)(MEMORY[0x263F15740] + 64);
        long long v13 = *(_OWORD *)(MEMORY[0x263F15740] + 80);
        long long v14 = *(_OWORD *)(MEMORY[0x263F15740] + 96);
        long long v15 = *(_OWORD *)(MEMORY[0x263F15740] + 112);
      }
      else
      {
        CATransform3DMakeScale(&v28, 0.0001, 0.0001, 1.0);
        long long v8 = *(_OWORD *)&v28.m11;
        long long v9 = *(_OWORD *)&v28.m13;
        long long v10 = *(_OWORD *)&v28.m21;
        long long v11 = *(_OWORD *)&v28.m23;
        long long v12 = *(_OWORD *)&v28.m31;
        long long v13 = *(_OWORD *)&v28.m33;
        uint64_t v7 = 1;
        long long v14 = *(_OWORD *)&v28.m41;
        long long v15 = *(_OWORD *)&v28.m43;
      }
      uint64_t v27 = *(void **)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_circleMask);
      *(_OWORD *)&v28.m11 = v8;
      *(_OWORD *)&v28.m13 = v9;
      *(_OWORD *)&v28.m21 = v10;
      *(_OWORD *)&v28.m23 = v11;
      *(_OWORD *)&v28.m31 = v12;
      *(_OWORD *)&v28.m33 = v13;
      *(_OWORD *)&v28.m41 = v14;
      *(_OWORD *)&v28.m43 = v15;
      objc_msgSend(v27, sel_setTransform_, &v28);
      return objc_msgSend(v27, sel_setHidden_, v7);
    }
    else
    {
      uint64_t v16 = self;
      objc_msgSend(v16, sel_begin);
      objc_msgSend(v16, sel_setDisableActions_, 1);
      char v17 = *(unsigned char *)(v2 + v3) ^ 1;
      if (v17)
      {
        CATransform3DMakeScale(&v28, 0.0001, 0.0001, 1.0);
        long long v18 = *(_OWORD *)&v28.m11;
        long long v19 = *(_OWORD *)&v28.m13;
        long long v20 = *(_OWORD *)&v28.m21;
        long long v21 = *(_OWORD *)&v28.m23;
        long long v22 = *(_OWORD *)&v28.m31;
        long long v23 = *(_OWORD *)&v28.m33;
        long long v24 = *(_OWORD *)&v28.m41;
        long long v25 = *(_OWORD *)&v28.m43;
      }
      else
      {
        long long v18 = *MEMORY[0x263F15740];
        long long v19 = *(_OWORD *)(MEMORY[0x263F15740] + 16);
        long long v20 = *(_OWORD *)(MEMORY[0x263F15740] + 32);
        long long v21 = *(_OWORD *)(MEMORY[0x263F15740] + 48);
        long long v22 = *(_OWORD *)(MEMORY[0x263F15740] + 64);
        long long v23 = *(_OWORD *)(MEMORY[0x263F15740] + 80);
        long long v24 = *(_OWORD *)(MEMORY[0x263F15740] + 96);
        long long v25 = *(_OWORD *)(MEMORY[0x263F15740] + 112);
      }
      long long v26 = *(void **)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_circleMask);
      *(_OWORD *)&v28.m11 = v18;
      *(_OWORD *)&v28.m13 = v19;
      *(_OWORD *)&v28.m21 = v20;
      *(_OWORD *)&v28.m23 = v21;
      *(_OWORD *)&v28.m31 = v22;
      *(_OWORD *)&v28.m33 = v23;
      *(_OWORD *)&v28.m41 = v24;
      *(_OWORD *)&v28.m43 = v25;
      objc_msgSend(v26, sel_setTransform_, &v28);
      objc_msgSend(v26, sel_setHidden_, v17 & 1);
      return objc_msgSend(v16, sel_commit);
    }
  }
  return result;
}

void sub_2411E4470()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_traitCollection);
  if (v2)
  {
    id v3 = v2;
    id v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);
    id v5 = (void *)*MEMORY[0x263F83420];
    char v6 = sub_2416326C8();

    if (v6)
    {
      sub_24162F5B8();
      sub_2411E5B04();
      id v7 = v5;
      uint64_t v8 = sub_2416325F8();

      id v3 = (id)v8;
    }
    else
    {
    }
  }
  else
  {
    id v3 = objc_msgSend(self, sel_traitCollectionWithPreferredContentSizeCategory_, *MEMORY[0x263F83420]);
  }
  int v9 = v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_isBold];
  long long v10 = self;
  if (qword_268CF9178 != -1) {
    swift_once();
  }
  long long v11 = &selRef_systemFontOfSize_;
  if (v9) {
    long long v11 = &selRef_boldSystemFontOfSize_;
  }
  id v12 = objc_msgSend(v10, *v11, *(double *)&qword_268CFA630);
  long long v13 = *(void **)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_label];
  if (qword_268CF9188 != -1) {
    swift_once();
  }
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82770]), sel_initForTextStyle_, qword_268CFA640);
  id v15 = objc_msgSend(v14, sel_scaledFontForFont_compatibleWithTraitCollection_, v12, v3);

  objc_msgSend(v13, sel_setFont_, v15);
}

id sub_2411E47AC()
{
  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for CalendarDayLabel();
  objc_msgSendSuper2(&v12, sel_layoutSubviews);
  uint64_t v1 = (void *)((char *)v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_lastSize);
  double v2 = *(double *)((char *)v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_lastSize);
  double v3 = *(double *)((char *)v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_lastSize + 8);
  id result = objc_msgSend(v0, sel_bounds);
  if (v2 != v6 || v3 != v5)
  {
    objc_msgSend(v0, sel_bounds);
    *uint64_t v1 = v8;
    v1[1] = v9;
    long long v10 = self;
    objc_msgSend(v10, sel_begin);
    id v11 = objc_msgSend(v10, sel_setDisableActions_, 1);
    (*(void (**)(id))((*MEMORY[0x263F8EED0] & *v0) + 0x108))(v11);
    return objc_msgSend(v10, sel_commit);
  }
  return result;
}

id sub_2411E4904()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_circleMask];
  CGFloat v2 = *(double *)(MEMORY[0x263F15740] + 8);
  CGFloat v3 = *(double *)(MEMORY[0x263F15740] + 16);
  CGFloat v4 = *(double *)(MEMORY[0x263F15740] + 24);
  CGFloat v5 = *(double *)(MEMORY[0x263F15740] + 32);
  CGFloat v6 = *(double *)(MEMORY[0x263F15740] + 40);
  CGFloat v7 = *(double *)(MEMORY[0x263F15740] + 48);
  CGFloat v8 = *(double *)(MEMORY[0x263F15740] + 56);
  CGFloat v9 = *(double *)(MEMORY[0x263F15740] + 64);
  CGFloat v10 = *(double *)(MEMORY[0x263F15740] + 72);
  CGFloat v11 = *(double *)(MEMORY[0x263F15740] + 80);
  CGFloat v12 = *(double *)(MEMORY[0x263F15740] + 88);
  CGFloat v14 = *(double *)(MEMORY[0x263F15740] + 96);
  CGFloat m42 = *(double *)(MEMORY[0x263F15740] + 104);
  CGFloat m43 = *(double *)(MEMORY[0x263F15740] + 112);
  CGFloat m44 = *(double *)(MEMORY[0x263F15740] + 120);
  double v55 = *MEMORY[0x263F15740];
  v56.CGFloat m11 = *(CGFloat *)MEMORY[0x263F15740];
  double v53 = v3;
  double v54 = v2;
  v56.CGFloat m12 = v2;
  v56.CGFloat m13 = v3;
  double v51 = v5;
  double v52 = v4;
  v56.CGFloat m14 = v4;
  v56.CGFloat m21 = v5;
  double v49 = v7;
  double v50 = v6;
  v56.CGFloat m22 = v6;
  v56.CGFloat m23 = v7;
  double v47 = v9;
  double v48 = v8;
  v56.CGFloat m24 = v8;
  v56.CGFloat m31 = v9;
  double v45 = v11;
  double v46 = v10;
  v56.CGFloat m32 = v10;
  v56.CGFloat m33 = v11;
  double v43 = v14;
  double v44 = v12;
  v56.CGFloat m34 = v12;
  v56.CGFloat m41 = v14;
  v56.CGFloat m42 = m42;
  v56.CGFloat m43 = m43;
  v56.CGFloat m44 = m44;
  objc_msgSend(v1, sel_setTransform_, &v56);
  id v17 = objc_msgSend(v0, sel_traitCollection);
  id v18 = objc_msgSend(v17, sel_preferredContentSizeCategory);
  char v19 = sub_2416326C8();

  if (v19)
  {
    if (qword_268CF9170 != -1) {
      swift_once();
    }
    CGFloat v20 = *(double *)&qword_268CFA628;
    objc_msgSend(v1, sel_setFrame_, 0.0, 0.0, *(double *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_lastSize], *(double *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_lastSize + 8]);
    objc_msgSend(v1, sel_frame);
    CGPathRef v21 = CGPathCreateWithRoundedRect(v57, v20, v20, 0);
  }
  else
  {
    double v22 = *(double *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_lastSize];
    v58.origin.CGFloat x = 0.0;
    v58.origin.CGFloat y = 0.0;
    v58.size.CGFloat width = v22;
    v58.size.CGFloat height = v22;
    CGPathRef v21 = CGPathCreateWithEllipseInRect(v58, 0);
    objc_msgSend(v1, sel_setFrame_, 0.0, 0.0, v22, v22);
  }
  objc_msgSend(v1, sel_setPath_, v21);

  objc_msgSend(v1, sel_setAnchorPoint_, 0.5, 0.5);
  objc_msgSend(v0, sel_bounds);
  CGFloat x = v59.origin.x;
  CGFloat y = v59.origin.y;
  CGFloat width = v59.size.width;
  CGFloat height = v59.size.height;
  double MidX = CGRectGetMidX(v59);
  v60.origin.CGFloat x = x;
  v60.origin.CGFloat y = y;
  v60.size.CGFloat width = width;
  v60.size.CGFloat height = height;
  objc_msgSend(v1, sel_setPosition_, MidX, CGRectGetMidY(v60));
  int v28 = v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_isMaskVisible];
  CGFloat m12 = v54;
  CGFloat m11 = v55;
  CGFloat m14 = v52;
  CGFloat m13 = v53;
  CGFloat m22 = v50;
  CGFloat m21 = v51;
  CGFloat m24 = v48;
  CGFloat m23 = v49;
  CGFloat m32 = v46;
  CGFloat m31 = v47;
  CGFloat m34 = v44;
  CGFloat m33 = v45;
  CGFloat m41 = v43;
  if ((v28 & 1) == 0)
  {
    CATransform3DMakeScale(&v56, 0.0001, 0.0001, 1.0);
    CGFloat m11 = v56.m11;
    CGFloat m12 = v56.m12;
    CGFloat m13 = v56.m13;
    CGFloat m14 = v56.m14;
    CGFloat m21 = v56.m21;
    CGFloat m22 = v56.m22;
    CGFloat m23 = v56.m23;
    CGFloat m24 = v56.m24;
    CGFloat m31 = v56.m31;
    CGFloat m32 = v56.m32;
    CGFloat m33 = v56.m33;
    CGFloat m34 = v56.m34;
    CGFloat m41 = v56.m41;
    CGFloat m42 = v56.m42;
    CGFloat m43 = v56.m43;
    CGFloat m44 = v56.m44;
  }
  v56.CGFloat m11 = m11;
  v56.CGFloat m12 = m12;
  v56.CGFloat m13 = m13;
  v56.CGFloat m14 = m14;
  v56.CGFloat m21 = m21;
  v56.CGFloat m22 = m22;
  v56.CGFloat m23 = m23;
  v56.CGFloat m24 = m24;
  v56.CGFloat m31 = m31;
  v56.CGFloat m32 = m32;
  v56.CGFloat m33 = m33;
  v56.CGFloat m34 = m34;
  v56.CGFloat m41 = m41;
  v56.CGFloat m42 = m42;
  v56.CGFloat m43 = m43;
  v56.CGFloat m44 = m44;
  objc_msgSend(v1, sel_setTransform_, &v56);
  return objc_msgSend(v1, sel_setHidden_, v28 ^ 1u);
}

id sub_2411E4D28()
{
  return sub_2411E5844(type metadata accessor for CalendarDayLabel);
}

uint64_t type metadata accessor for CalendarDayLabel()
{
  return self;
}

void sub_2411E4DB0()
{
  unint64_t v0 = self;
  uint64_t v1 = sub_2411E3DA4(objc_msgSend(v0, sel_tertiaryLabelColor), 1, 1);
  uint64_t v2 = qword_26B0131F0;
  CGFloat v3 = v1;
  if (v2 != -1) {
    swift_once();
  }
  id v4 = (id)qword_26B0181A0;
  CGFloat v5 = (void *)sub_241631CC8();
  id v6 = objc_msgSend(v0, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v5, v4, 0);

  if (v6)
  {
    objc_msgSend(v3, sel_setBackgroundColor_, v6);

    id v7 = objc_msgSend(v3, sel_layer);
    objc_msgSend(v7, sel_setMask_, *(void *)&v3[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_circleMask]);

    id v8 = *(id *)&v3[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_label];
    id v9 = objc_msgSend(v8, sel_layer);

    _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
    id v10 = objc_allocWithZone(MEMORY[0x263F157C8]);
    CGFloat v11 = (void *)sub_241631CC8();
    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(v10, sel_initWithType_, v11);

    objc_msgSend(v9, sel_setCompositingFilter_, v12);
  }
  else
  {
    __break(1u);
  }
}

id sub_2411E5010()
{
  return sub_2411E5844(type metadata accessor for CalendarFutureLabel);
}

uint64_t type metadata accessor for CalendarFutureLabel()
{
  return self;
}

uint64_t type metadata accessor for CalendarSelectedLabel()
{
  return self;
}

char *sub_2411E50CC()
{
  swift_getObjectType();
  uint64_t v1 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18CalendarTodayLabel_ring;
  id v2 = objc_allocWithZone(MEMORY[0x263F15880]);
  CGFloat v3 = v0;
  id v4 = objc_msgSend(v2, sel_init);
  if (qword_268CF9180 != -1) {
    swift_once();
  }
  objc_msgSend(v4, sel_setLineWidth_, *(double *)&qword_268CFA638);
  objc_msgSend(v4, sel_setFillColor_, 0);
  *(void *)&v3[v1] = v4;

  CGFloat v5 = self;
  id v6 = sub_2411E3DA4(objc_msgSend(v5, sel_whiteColor), 1, 1);
  id v7 = objc_msgSend(v5, sel_hkmc_menstruationColor);
  objc_msgSend(v6, sel_setBackgroundColor_, v7);

  id v8 = v6;
  id v9 = objc_msgSend(v8, sel_layer);
  objc_msgSend(v9, sel_setMask_, *(void *)&v8[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_circleMask]);

  id v10 = objc_msgSend(v8, sel_layer);
  objc_msgSend(v10, sel_addSublayer_, *(void *)&v8[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18CalendarTodayLabel_ring]);

  sub_2411E5660();
  sub_2411B9D00(0, (unint64_t *)&qword_268CFDCF0);
  CGFloat v11 = v8;
  sub_2416325D8();
  sub_241632918();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v11;
}

id sub_2411E52F0()
{
  sub_2411E4904();
  objc_msgSend(v0, sel_bounds);
  double Width = CGRectGetWidth(v18);
  if (qword_268CF9180 != -1) {
    swift_once();
  }
  double v2 = Width + *(double *)&qword_268CFA638 * -0.5;
  id v3 = objc_msgSend(v0, sel_traitCollection);
  id v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);
  char v5 = sub_2416326C8();

  if (v5)
  {
    objc_msgSend(v0, sel_bounds);
    double v6 = CGRectGetHeight(v19) + *(double *)&qword_268CFA638 * -0.5;
    id v7 = *(void **)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18CalendarTodayLabel_ring];
    if (qword_268CF9170 != -1) {
      swift_once();
    }
    CGFloat v8 = *(double *)&qword_268CFA628;
    objc_msgSend(v7, sel_setFrame_, 0.0, 0.0, v2, v6);
    objc_msgSend(v7, sel_frame);
    CGPathRef v9 = CGPathCreateWithRoundedRect(v20, v8, v8, 0);
  }
  else
  {
    id v7 = *(void **)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18CalendarTodayLabel_ring];
    v21.origin.CGFloat x = 0.0;
    v21.origin.CGFloat y = 0.0;
    v21.size.CGFloat width = v2;
    v21.size.CGFloat height = v2;
    CGPathRef v9 = CGPathCreateWithEllipseInRect(v21, 0);
    objc_msgSend(v7, sel_setFrame_, 0.0, 0.0, v2, v2);
  }
  objc_msgSend(v7, sel_setPath_, v9);

  objc_msgSend(v7, sel_setAnchorPoint_, 0.5, 0.5);
  objc_msgSend(v0, sel_bounds);
  CGFloat x = v22.origin.x;
  CGFloat y = v22.origin.y;
  CGFloat v12 = v22.size.width;
  CGFloat height = v22.size.height;
  double MidX = CGRectGetMidX(v22);
  v23.origin.CGFloat x = x;
  v23.origin.CGFloat y = y;
  v23.size.CGFloat width = v12;
  v23.size.CGFloat height = height;
  double MidY = CGRectGetMidY(v23);

  return objc_msgSend(v7, sel_setPosition_, MidX, MidY);
}

void sub_2411E5660()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18CalendarTodayLabel_ring];
  id v2 = objc_msgSend(self, sel_labelColor);
  id v3 = objc_msgSend(v2, sel_colorWithAlphaComponent_, 0.3);

  id v4 = objc_msgSend(v3, sel_CGColor);
  objc_msgSend(v1, sel_setStrokeColor_, v4);

  id v5 = objc_msgSend(v0, sel_traitCollection);
  id v6 = objc_msgSend(v5, sel_userInterfaceStyle);

  if ((unint64_t)v6 > 2)
  {
    objc_msgSend(v1, sel_setCompositingFilter_, 0);
  }
  else
  {
    _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
    id v7 = objc_allocWithZone(MEMORY[0x263F157C8]);
    CGFloat v8 = (void *)sub_241631CC8();
    swift_bridgeObjectRelease();
    id v9 = objc_msgSend(v7, sel_initWithType_, v8);

    objc_msgSend(v1, sel_setCompositingFilter_, v9);
  }
}

void sub_2411E581C()
{
}

id sub_2411E582C()
{
  return sub_2411E5844(type metadata accessor for CalendarTodayLabel);
}

id sub_2411E5844(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for CalendarTodayLabel()
{
  return self;
}

void sub_2411E58B4()
{
  if (!qword_268CFA920)
  {
    sub_2411E590C();
    unint64_t v0 = sub_2416331E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFA920);
    }
  }
}

unint64_t sub_2411E590C()
{
  unint64_t result = qword_268CFB7F0;
  if (!qword_268CFB7F0)
  {
    sub_2411E5948();
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CFB7F0);
  }
  return result;
}

unint64_t sub_2411E5948()
{
  unint64_t result = qword_268CFA930;
  if (!qword_268CFA930)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CFA930);
  }
  return result;
}

void sub_2411E59A0()
{
  qword_268CFA628 = 0x4020000000000000;
}

void sub_2411E59B0()
{
  qword_268CFA630 = 0x4032000000000000;
}

void sub_2411E59C0()
{
  qword_268CFA638 = 0x4000000000000000;
}

id sub_2411E59D0()
{
  qword_268CFA640 = *MEMORY[0x263F83570];
  return (id)qword_268CFA640;
}

void sub_2411E59E8()
{
}

void sub_2411E5A0C()
{
}

id sub_2411E5A30()
{
  unint64_t v0 = (void *)sub_241631CC8();
  id v1 = objc_msgSend(self, sel_animationWithKeyPath_, v0);

  id v2 = (void *)sub_241631FB8();
  objc_msgSend(v1, sel_setFromValue_, v2);

  objc_super v3 = (void *)sub_241631FB8();
  objc_msgSend(v1, sel_setToValue_, v3);

  objc_msgSend(v1, sel_setDuration_, 0.5);
  objc_msgSend(v1, sel_setTimeOffset_, 0.5);
  return v1;
}

unint64_t sub_2411E5B04()
{
  unint64_t result = qword_268CF9F18;
  if (!qword_268CF9F18)
  {
    type metadata accessor for UIContentSizeCategory(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF9F18);
  }
  return result;
}

id sub_2411E5B5C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_2411E5B80(a1, a2, a3, a4);
}

id sub_2411E5B80@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v48 = a1;
  double v49 = a2;
  uint64_t v6 = sub_24162EFA8();
  uint64_t v46 = *(void *)(v6 - 8);
  uint64_t v47 = v6;
  MEMORY[0x270FA5388](v6);
  CGFloat v8 = &v41[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_24162B718();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  CGFloat v12 = &v41[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2411BAE38(0, &qword_26B0130C0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v13 - 8);
  id v15 = &v41[-v14];
  uint64_t v16 = sub_24162C938();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  CGRect v19 = (id *)&v41[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(id *, uint64_t, uint64_t))(v17 + 16))(v19, a3, v16);
  int v20 = (*(uint64_t (**)(id *, uint64_t))(v17 + 88))(v19, v16);
  if (v20 == *MEMORY[0x263F43908] || v20 == *MEMORY[0x263F43900])
  {
    (*(void (**)(id *, uint64_t))(v17 + 96))(v19, v16);

    goto LABEL_4;
  }
  if (v20 != *MEMORY[0x263F43910])
  {
    if (v20 != *MEMORY[0x263F43918]) {
      (*(void (**)(id *, uint64_t))(v17 + 8))(v19, v16);
    }
    goto LABEL_4;
  }
  (*(void (**)(id *, uint64_t))(v17 + 96))(v19, v16);
  id v27 = *v19;
  unsigned int v44 = objc_msgSend(*v19, sel_syncEnabled);
  id v28 = objc_msgSend(v27, sel_restoreCompletionDate);
  if (!v28)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v15, 1, 1, v9);
    goto LABEL_14;
  }
  uint64_t v29 = v28;
  sub_24162B6A8();

  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v15, v12, v9);
  int v30 = 1;
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) == 1) {
LABEL_14:
  }
    int v30 = 0;
  sub_2411E7908((uint64_t)v15);
  id v31 = objc_msgSend(v27, sel_errorRequiringUserAction);
  if (v31)
  {

    int v32 = 1;
  }
  else
  {
    int v32 = v30 | v44 ^ 1;
  }
  sub_24162EF48();
  id v33 = sub_24162EF98();
  os_log_type_t v34 = sub_2416322E8();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v43 = v36;
    *(_DWORD *)uint64_t v35 = 136446978;
    int v42 = v30;
    uint64_t v50 = v45;
    uint64_t v51 = v36;
    sub_2411E7994();
    uint64_t v37 = sub_241631D48();
    uint64_t v50 = sub_2411B6898(v37, v38, &v51);
    sub_241632C28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 12) = 1024;
    LODWORD(v50) = v44;
    sub_241632C28();
    *(_WORD *)(v35 + 18) = 1024;
    LODWORD(v50) = v42;
    sub_241632C28();
    *(_WORD *)(v35 + 24) = 1024;
    LODWORD(v50) = v32;
    sub_241632C28();
    _os_log_impl(&dword_24118E000, v33, v34, "[%{public}s] Received cloud sync status update, syncEnabled: %{BOOL}d, restoreCompleted: %{BOOL}d, shouldProceed: %{BOOL}d", (uint8_t *)v35, 0x1Eu);
    uint64_t v39 = v43;
    swift_arrayDestroy();
    MEMORY[0x245621640](v39, -1, -1);
    MEMORY[0x245621640](v35, -1, -1);
  }

  (*(void (**)(unsigned char *, uint64_t))(v46 + 8))(v8, v47);
  if ((v32 & 1) == 0)
  {
    sub_2411C83EC();
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(a4, 1, 1, v40);
  }
LABEL_4:
  sub_2411C83EC();
  uint64_t v22 = v21;
  uint64_t v23 = *(int *)(v21 + 48);
  uint64_t v24 = sub_24162E7D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(a4, v48, v24);
  *(void *)(a4 + v23) = v49;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a4, 0, 1, v22);
  long long v25 = v49;

  return v25;
}

id sub_2411E6254(uint64_t a1, void *a2, uint8_t *a3)
{
  return sub_2411E627C(a1, a2, a3);
}

id sub_2411E627C(uint64_t a1, void *a2, uint8_t *a3)
{
  uint64_t v112 = a3;
  id v115 = a2;
  uint64_t v4 = sub_24162EFA8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v113 = v4;
  uint64_t v114 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v111 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v110 = (char *)&v107 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v108 = (char *)&v107 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v107 = (char *)&v107 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v109 = (char *)&v107 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v107 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v107 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v107 - v22;
  uint64_t v24 = sub_24162E7B8();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  id v27 = (char *)&v107 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_24162E7D8();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  id v31 = (char *)&v107 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v31, a1, v28);
  int v32 = (*(uint64_t (**)(char *, uint64_t))(v29 + 88))(v31, v28);
  if (v32 == *MEMORY[0x263F44990])
  {
    (*(void (**)(char *, uint64_t))(v29 + 96))(v31, v28);
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v27, v31, v24);
    id v33 = (void *)sub_24162E7A8();
    unsigned __int8 v34 = objc_msgSend(v33, sel_menstruationProjectionsEnabled);

    if (v34)
    {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
      id v35 = v115;
      if (!v115)
      {
        uint64_t v43 = v111;
        sub_24162EF48();
        uint64_t v71 = sub_24162EF98();
        os_log_type_t v72 = sub_2416322E8();
        if (os_log_type_enabled(v71, v72))
        {
          char v73 = (uint8_t *)swift_slowAlloc();
          uint64_t v74 = swift_slowAlloc();
          v116[0] = v74;
          *(_DWORD *)char v73 = 136446210;
          uint64_t v75 = sub_2416333E8();
          uint64_t v117 = sub_2411B6898(v75, v76, v116);
          sub_241632C28();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24118E000, v71, v72, "[%{public}s] Should not display because no analysis", v73, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x245621640](v74, -1, -1);
          MEMORY[0x245621640](v73, -1, -1);
        }

        goto LABEL_11;
      }
      id v36 = v115;
      id v37 = objc_msgSend(v36, sel_lastMenstrualFlowDayIndex);
      if (v37)
      {
        unint64_t v38 = v37;
        sub_24162C148();
        sub_2411B6854(v116, v116[3]);
        uint64_t v39 = (void *)sub_24162C038();
        id v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F45210]), sel_initWithHealthStore_, v39);

        _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v116);
        id v41 = objc_msgSend(v40, sel_lastMenstrualPeriodDismissalDay);

        if (!v41) {
          goto LABEL_8;
        }
        id v42 = objc_msgSend(v41, sel_integerValue);
        if ((uint64_t)v42 < (uint64_t)objc_msgSend(v38, sel_integerValue))
        {

LABEL_8:
          if (objc_msgSend(v36, sel_isPeriodLogLate))
          {
            uint64_t v43 = v108;
            sub_24162EF48();
            unsigned int v44 = sub_24162EF98();
            os_log_type_t v45 = sub_2416322E8();
            if (os_log_type_enabled(v44, v45))
            {
              uint64_t v46 = (uint8_t *)swift_slowAlloc();
              uint64_t v47 = swift_slowAlloc();
              v116[0] = v47;
              *(_DWORD *)uint64_t v46 = 136446210;
              uint64_t v48 = sub_2416333E8();
              uint64_t v117 = sub_2411B6898(v48, v49, v116);
              sub_241632C28();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_24118E000, v44, v45, "[%{public}s] Should display", v46, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x245621640](v47, -1, -1);
              MEMORY[0x245621640](v46, -1, -1);

LABEL_11:
              (*(void (**)(char *, uint64_t))(v114 + 8))(v43, v113);
              return v35;
            }
          }
          else
          {
            uint64_t v43 = v107;
            sub_24162EF48();
            unsigned int v44 = sub_24162EF98();
            os_log_type_t v84 = sub_2416322E8();
            if (os_log_type_enabled(v44, v84))
            {
              unint64_t v85 = (uint8_t *)swift_slowAlloc();
              uint64_t v86 = swift_slowAlloc();
              v116[0] = v86;
              *(_DWORD *)unint64_t v85 = 136446210;
              uint64_t v87 = sub_2416333E8();
              uint64_t v117 = sub_2411B6898(v87, v88, v116);
              sub_241632C28();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_24118E000, v44, v84, "[%{public}s] Should not display because period log isn't late", v85, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x245621640](v86, -1, -1);
              MEMORY[0x245621640](v85, -1, -1);

              goto LABEL_11;
            }
          }

          goto LABEL_11;
        }
        id v89 = v109;
        sub_24162EF48();
        id v90 = v41;
        id v91 = v38;
        id v92 = v90;
        id v93 = v91;
        uint64_t v94 = sub_24162EF98();
        os_log_type_t v95 = sub_2416322E8();
        if (os_log_type_enabled(v94, v95))
        {
          uint64_t v96 = swift_slowAlloc();
          uint64_t v97 = swift_slowAlloc();
          v116[0] = v97;
          *(_DWORD *)uint64_t v96 = 136446722;
          uint64_t v98 = sub_2416333E8();
          uint64_t v117 = sub_2411B6898(v98, v99, v116);
          sub_241632C28();
          swift_bridgeObjectRelease();
          *(_WORD *)(v96 + 12) = 2080;
          uint64_t v117 = (uint64_t)v92;
          sub_2411B9D00(0, (unint64_t *)&qword_26B00E600);
          id v100 = v92;
          uint64_t v101 = sub_241631D78();
          uint64_t v117 = sub_2411B6898(v101, v102, v116);
          id v35 = v115;
          sub_241632C28();

          swift_bridgeObjectRelease();
          *(_WORD *)(v96 + 22) = 2080;
          uint64_t v117 = (uint64_t)v93;
          id v103 = v93;
          uint64_t v104 = sub_241631D78();
          uint64_t v117 = sub_2411B6898(v104, v105, v116);
          sub_241632C28();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24118E000, v94, v95, "[%{public}s] Should not display because dismissal day index (%s) is more recent than last menstrual flow day index (%s)", (uint8_t *)v96, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x245621640](v97, -1, -1);
          MEMORY[0x245621640](v96, -1, -1);

          (*(void (**)(char *, uint64_t))(v114 + 8))(v109, v113);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v114 + 8))(v89, v113);
        }
      }
      else
      {
        uint64_t v77 = v110;
        sub_24162EF48();
        uint64_t v78 = sub_24162EF98();
        os_log_type_t v79 = sub_2416322E8();
        if (os_log_type_enabled(v78, v79))
        {
          uint64_t v80 = (uint8_t *)swift_slowAlloc();
          uint64_t v81 = swift_slowAlloc();
          v116[0] = v81;
          *(_DWORD *)uint64_t v80 = 136446210;
          uint64_t v82 = sub_2416333E8();
          uint64_t v117 = sub_2411B6898(v82, v83, v116);
          sub_241632C28();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24118E000, v78, v79, "[%{public}s] Should not display because no last menstrual flow day index", v80, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x245621640](v81, -1, -1);
          MEMORY[0x245621640](v80, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v114 + 8))(v77, v113);
      }
    }
    else
    {
      sub_24162EF48();
      CATransform3D v56 = sub_24162EF98();
      os_log_type_t v57 = sub_2416322E8();
      if (os_log_type_enabled(v56, v57))
      {
        CGRect v58 = (uint8_t *)swift_slowAlloc();
        uint64_t v59 = swift_slowAlloc();
        v116[0] = v59;
        *(_DWORD *)CGRect v58 = 136446210;
        uint64_t v112 = v58 + 4;
        uint64_t v60 = sub_2416333E8();
        uint64_t v117 = sub_2411B6898(v60, v61, v116);
        sub_241632C28();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24118E000, v56, v57, "[%{public}s] Should not display because period predictions not enabled", v58, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x245621640](v59, -1, -1);
        MEMORY[0x245621640](v58, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v114 + 8))(v23, v113);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
      id v35 = v115;
      id v62 = v115;
    }
  }
  else
  {
    if (v32 == *MEMORY[0x263F44988])
    {
      sub_24162EF48();
      uint64_t v50 = sub_24162EF98();
      os_log_type_t v51 = sub_2416322E8();
      if (os_log_type_enabled(v50, v51))
      {
        double v52 = (uint8_t *)swift_slowAlloc();
        uint64_t v53 = swift_slowAlloc();
        v116[0] = v53;
        *(_DWORD *)double v52 = 136446210;
        uint64_t v112 = v52 + 4;
        uint64_t v54 = sub_2416333E8();
        uint64_t v117 = sub_2411B6898(v54, v55, v116);
        sub_241632C28();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24118E000, v50, v51, "[%{public}s] Should not display because onboarding not completed", v52, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x245621640](v53, -1, -1);
        MEMORY[0x245621640](v52, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v114 + 8))(v21, v113);
    }
    else
    {
      sub_24162EF48();
      uint64_t v63 = sub_24162EF98();
      os_log_type_t v64 = sub_2416322E8();
      if (os_log_type_enabled(v63, v64))
      {
        uint64_t v65 = (uint8_t *)swift_slowAlloc();
        uint64_t v66 = swift_slowAlloc();
        v116[0] = v66;
        *(_DWORD *)uint64_t v65 = 136446210;
        uint64_t v112 = v65 + 4;
        uint64_t v67 = sub_2416333E8();
        uint64_t v117 = sub_2411B6898(v67, v68, v116);
        sub_241632C28();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24118E000, v63, v64, "[%{public}s] Should not display because onboarding in unknown state", v65, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x245621640](v66, -1, -1);
        MEMORY[0x245621640](v65, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v114 + 8))(v18, v113);
    }
    id v35 = v115;
    uint64_t v69 = *(void (**)(char *, uint64_t))(v29 + 8);
    id v70 = v115;
    v69(v31, v28);
  }
  return v35;
}

unint64_t sub_2411E717C@<X0>(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v32 = a2;
  id v31 = a1;
  id v33 = a4;
  uint64_t v30 = sub_24162C0E8();
  uint64_t v5 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_24162CBF8();
  uint64_t v8 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24162C128();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24162C1C8();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v17 + 16))(v16, a3);
  uint64_t v28 = sub_24162BDD8();
  sub_2411BAE38(0, (unint64_t *)&qword_26B012FC8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v18 = sub_24162BD98();
  uint64_t v19 = *(void *)(v18 - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_241637EE0;
  (*(void (**)(unint64_t, void, uint64_t))(v19 + 104))(v21 + v20, *MEMORY[0x263F45520], v18);
  sub_2411B8B4C((uint64_t)v10);
  sub_24162CBE8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v29);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F45688], v30);
  sub_24162C0F8();
  uint64_t MenstrualPeriodGenerator = type metadata accessor for LastMenstrualPeriodGenerator();
  swift_allocObject();
  id v23 = v31;
  id v24 = v31;
  uint64_t v25 = sub_241408C68((uint64_t)v16, (uint64_t)v13, v23, v32);
  uint64_t v26 = v33;
  v33[3] = MenstrualPeriodGenerator;
  unint64_t result = sub_2411E78B0();
  v26[4] = result;
  void *v26 = v25;
  return result;
}

uint64_t sub_2411E752C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24162EFA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162EF48();
  uint64_t v6 = sub_24162EF98();
  os_log_type_t v7 = sub_2416322E8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v17 = v2;
    uint64_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v19 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t v11 = sub_2416333E8();
    uint64_t v18 = sub_2411B6898(v11, v12, &v19);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v6, v7, "[%{public}s] Deallocated", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v10, -1, -1);
    MEMORY[0x245621640](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v17);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  swift_release();
  uint64_t v13 = v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin36LastMenstrualPeriodGeneratorPipeline_domain;
  uint64_t v14 = sub_24162C128();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);

  return v1;
}

uint64_t sub_2411E77A4()
{
  sub_2411E752C();

  return swift_deallocClassInstance();
}

uint64_t sub_2411E77FC()
{
  return type metadata accessor for LastMenstrualPeriodGeneratorPipeline();
}

uint64_t sub_2411E7804()
{
  uint64_t result = sub_24162C128();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_2411E78B0()
{
  unint64_t result = qword_26B012490;
  if (!qword_26B012490)
  {
    type metadata accessor for LastMenstrualPeriodGenerator();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B012490);
  }
  return result;
}

uint64_t sub_2411E7908(uint64_t a1)
{
  sub_2411BAE38(0, &qword_26B0130C0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2411E7994()
{
  unint64_t result = qword_26B0127E0;
  if (!qword_26B0127E0)
  {
    type metadata accessor for LastMenstrualPeriodGeneratorPipeline();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B0127E0);
  }
  return result;
}

uint64_t sub_2411E79D0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24162FC48();
  swift_release();

  return swift_release();
}

uint64_t sub_2411E7A48(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, int a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v107 = a7;
  uint64_t v108 = a2;
  LODWORD(v104) = a6;
  uint64_t v109 = a4;
  uint64_t v110 = a5;
  id v105 = a3;
  uint64_t v102 = *(void *)v7;
  sub_2411EA444(0, &qword_268CFA6C0, (uint64_t (*)(uint64_t))sub_2411EA410, MEMORY[0x263EFDE48]);
  uint64_t v100 = *(void *)(v10 - 8);
  uint64_t v101 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v98 = (char *)v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  unint64_t v99 = (char *)v81 - v13;
  sub_2411EB0C4(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v97 = (char *)v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411EB454(0, &qword_268CFA6C8, (uint64_t (*)(uint64_t))sub_2411EB0F8, sub_2411EB178, MEMORY[0x263EFDB28]);
  uint64_t v86 = v16;
  uint64_t v85 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  os_log_type_t v84 = (char *)v81 - v17;
  sub_2411EB1AC();
  uint64_t v93 = v18;
  uint64_t v91 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  unint64_t v88 = (char *)v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411EB368();
  uint64_t v94 = v20;
  uint64_t v92 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  id v89 = (char *)v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411EB454(0, &qword_268CFA700, (uint64_t (*)(uint64_t))sub_2411EB368, sub_2411EB4E4, MEMORY[0x263EFDA30]);
  uint64_t v95 = *(void *)(v22 - 8);
  uint64_t v96 = v22;
  MEMORY[0x270FA5388](v22);
  id v90 = (char *)v81 - v23;
  uint64_t v83 = sub_24162EFA8();
  uint64_t v82 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  uint64_t v25 = (char *)v81 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411EA444(0, &qword_268CFA6B0, (uint64_t (*)(uint64_t))sub_2411EA410, MEMORY[0x263EFDE58]);
  uint64_t v27 = v26;
  uint64_t v28 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)v81 - v29;
  sub_2411EA410(0);
  uint64_t v32 = v31;
  MEMORY[0x270FA5388](v31);
  unsigned __int8 v34 = (char *)v81 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  id v37 = (char *)v81 - v36;
  sub_24162B9A8();
  unint64_t v38 = &v8[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24DeviationDetailViewModel__displayName];
  uint64_t v39 = sub_24162C2A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v37, 1, 1, v39);
  sub_2411EB060((uint64_t)v37, (uint64_t)v34);
  uint64_t v103 = v32;
  sub_24162FC08();
  sub_2411EB530((uint64_t)v37, (uint64_t (*)(void))sub_2411EA410);
  id v40 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
  uint64_t v87 = v27;
  v40(v38, v30, v27);
  id v41 = &v8[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24DeviationDetailViewModel_startDate];
  uint64_t v42 = sub_24162B718();
  uint64_t v43 = *(void *)(v42 - 8);
  unsigned int v44 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  os_log_type_t v45 = v41;
  uint64_t v46 = v108;
  uint64_t v106 = a1;
  uint64_t v47 = a1;
  char v48 = (char)v104;
  v44(v45, v47, v42);
  v44(&v8[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24DeviationDetailViewModel_endDate], v46, v42);
  unint64_t v49 = (unint64_t)v105;
  uint64_t v50 = v110;
  *((void *)v8 + 2) = v109;
  *((void *)v8 + 3) = v50;
  v8[32] = v48;
  if (v49 >= 4)
  {
    uint64_t result = sub_241633038();
    __break(1u);
  }
  else
  {
    v8[33] = 0x2030100u >> (8 * v49);
    uint64_t v51 = v107;
    v44(&v8[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24DeviationDetailViewModel_referenceDateForPDFExport], v107, v42);
    if (v48)
    {
      double v52 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v52(v51, v42);
      uint64_t v53 = v46;
    }
    else
    {
      uint64_t v54 = v109;
      unint64_t v55 = v110;
      sub_2411EA4AC(v109, v110, 0);
      id v56 = v54;
      id v57 = v55;
      sub_24162EF48();
      CGRect v58 = sub_24162EF98();
      os_log_type_t v59 = sub_2416322E8();
      BOOL v60 = os_log_type_enabled(v58, v59);
      id v104 = v57;
      id v105 = v56;
      if (v60)
      {
        unint64_t v61 = (uint8_t *)swift_slowAlloc();
        id v62 = (void *)swift_slowAlloc();
        id v112 = v62;
        *(_DWORD *)unint64_t v61 = 136446210;
        v81[1] = v61 + 4;
        uint64_t v63 = sub_2416333E8();
        uint64_t v111 = sub_2411B6898(v63, v64, (uint64_t *)&v112);
        sub_241632C28();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24118E000, v58, v59, "[%{public}s] firing ProfileDisplayNamePublisher", v61, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x245621640](v62, -1, -1);
        MEMORY[0x245621640](v61, -1, -1);

        uint64_t v65 = v102;
        (*(void (**)(char *, uint64_t))(v82 + 8))(v25, v83);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v82 + 8))(v25, v83);
        uint64_t v65 = v102;
      }
      sub_24162E878();
      sub_2411EB7DC(&qword_268CFA710, MEMORY[0x263F45A58]);
      id v112 = (id)sub_24162C028();
      sub_2411EB0F8();
      sub_2411EB178();
      uint64_t v66 = v84;
      sub_24162FCE8();
      swift_release();
      *(void *)(swift_allocObject() + 16) = v65;
      uint64_t v67 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
      sub_2411EB62C(0, &qword_268CFA6D8, MEMORY[0x263EFDCF0]);
      sub_2411EB2CC();
      sub_2411EB69C(&qword_268CFA6E8, &qword_268CFA6D8, v67);
      unint64_t v68 = v88;
      uint64_t v69 = v86;
      sub_24162FD08();
      swift_release();
      (*(void (**)(char *, uint64_t))(v85 + 8))(v66, v69);
      sub_2411B7D14();
      id v112 = (id)sub_2416325A8();
      uint64_t v70 = sub_241632598();
      uint64_t v71 = (uint64_t)v97;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v97, 1, 1, v70);
      sub_2411EB7DC(&qword_268CFA6F8, (void (*)(uint64_t))sub_2411EB1AC);
      sub_2411EB7DC((unint64_t *)&qword_26B012FB0, (void (*)(uint64_t))sub_2411B7D14);
      os_log_type_t v72 = v89;
      uint64_t v73 = v93;
      sub_24162FDA8();
      sub_2411EB530(v71, (uint64_t (*)(void))sub_2411EB0C4);

      (*(void (**)(char *, uint64_t))(v91 + 8))(v68, v73);
      sub_2411EB4E4();
      uint64_t v74 = v90;
      uint64_t v75 = v94;
      sub_24162FCC8();
      (*(void (**)(char *, uint64_t))(v92 + 8))(v72, v75);
      swift_beginAccess();
      unint64_t v76 = v99;
      sub_24162FC18();
      swift_endAccess();
      sub_2411EB590();
      uint64_t v77 = v96;
      sub_24162FDF8();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v74, v77);
      uint64_t v79 = v100;
      uint64_t v78 = v101;
      (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v98, v76, v101);
      swift_beginAccess();
      sub_24162FC28();
      swift_endAccess();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v76, v78);

      sub_2411EA500(v109, v110, 0);
      double v52 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v52(v107, v42);
      uint64_t v53 = v108;
    }
    v52(v53, v42);
    v52(v106, v42);
    return (uint64_t)v8;
  }
  return result;
}

uint64_t sub_2411E881C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24162C2A8();
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, a1, v4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);

  return v5(a2, 0, 1, v4);
}

uint64_t sub_2411E88EC@<X0>(void **a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v31 = a2;
  sub_2411EB62C(0, &qword_268CFA720, MEMORY[0x263EFDE08]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v29 - v8;
  uint64_t v32 = sub_24162EFA8();
  uint64_t v10 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  sub_24162EF48();
  id v14 = v13;
  id v15 = v13;
  uint64_t v16 = sub_24162EF98();
  os_log_type_t v17 = sub_2416322C8();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v30 = v6;
    uint64_t v19 = v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v34 = v20;
    *(_DWORD *)uint64_t v19 = 136446466;
    uint64_t v29 = v7;
    uint64_t v21 = sub_2416333E8();
    uint64_t v31 = a3;
    uint64_t v33 = sub_2411B6898(v21, v22, &v34);
    sub_241632C28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    uint64_t v33 = (uint64_t)v13;
    id v23 = v13;
    sub_2411BF880(0, (unint64_t *)&qword_26B012410);
    uint64_t v24 = sub_241631D48();
    uint64_t v33 = sub_2411B6898(v24, v25, &v34);
    a3 = v31;
    sub_241632C28();
    uint64_t v7 = v29;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24118E000, v16, v17, "[%{public}s] ProfileDisplayNamePublisher encountered an error: %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245621640](v20, -1, -1);
    uint64_t v26 = v19;
    uint64_t v6 = v30;
    MEMORY[0x245621640](v26, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v32);
  sub_2411EA410(0);
  sub_24162FBA8();
  sub_2411EB69C(&qword_268CFA728, &qword_268CFA720, MEMORY[0x263EFDE08]);
  uint64_t v27 = sub_24162FCB8();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *a3 = v27;
  return result;
}

uint64_t sub_2411E8CA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2411EB060(a1, a2);
  sub_2411EA410(0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(a2, 0, 1, v3);
}

uint64_t sub_2411E8D18()
{
  sub_2411EB6E0();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v29 - v6;
  sub_2411EB748();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v34 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v29 - v12;
  uint64_t v14 = v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24DeviationDetailViewModel_startDate;
  uint64_t v15 = v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24DeviationDetailViewModel_endDate;
  uint64_t v16 = sub_24162B718();
  sub_2411EB7DC((unint64_t *)&unk_26B00E680, MEMORY[0x263F07490]);
  uint64_t result = sub_241631BD8();
  if (result)
  {
    uint64_t v31 = &v7[*(int *)(v2 + 48)];
    uint64_t v18 = v31;
    uint64_t v32 = v9;
    uint64_t v19 = *(void *)(v16 - 8);
    uint64_t v20 = v19;
    uint64_t v30 = v2;
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
    uint64_t v33 = v13;
    v21(v7, v14, v16);
    v21(v18, v15, v16);
    unint64_t v22 = &v4[*(int *)(v2 + 48)];
    v21(v4, (uint64_t)v7, v16);
    v21(v22, (uint64_t)v18, v16);
    id v23 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    uint64_t v24 = (uint64_t)v34;
    v23(v34, v4, v16);
    unint64_t v25 = *(void (**)(char *, uint64_t))(v20 + 8);
    v25(v22, v16);
    uint64_t v26 = &v4[*(int *)(v30 + 48)];
    v23(v4, v7, v16);
    v23(v26, v31, v16);
    v23((char *)(v24 + *(int *)(v32 + 36)), v26, v16);
    v25(v4, v16);
    uint64_t v27 = (uint64_t)v33;
    sub_2411EB824(v24, (uint64_t)v33);
    uint64_t v28 = sub_24151C548();
    sub_2411EB530(v27, (uint64_t (*)(void))sub_2411EB748);
    return v28;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2411E9060()
{
  uint64_t v1 = v0;
  uint64_t v38 = sub_24162B718();
  uint64_t v2 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v34 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_241631AC8();
  uint64_t v36 = *(void *)(v4 - 8);
  uint64_t v37 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24162B7F8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24162BA08();
  uint64_t v35 = *(void *)(v11 - 8);
  uint64_t v12 = v35;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v28 - v17;
  (*(void (**)(char *, void, uint64_t, __n128))(v8 + 104))(v10, *MEMORY[0x263F07740], v7, v16);
  sub_24162B808();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  uint64_t v30 = v2 + 16;
  uint64_t v31 = v19;
  uint64_t v20 = v34;
  v19(v34, v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24DeviationDetailViewModel_startDate, v38);
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  uint64_t v33 = v11;
  v29(v14, v18, v11);
  sub_241631A68();
  uint64_t v32 = sub_241631A88();
  uint64_t v21 = v37;
  unint64_t v22 = *(void (**)(char *, uint64_t))(v36 + 8);
  v22(v6, v37);
  v31(v20, v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24DeviationDetailViewModel_endDate, v38);
  id v23 = v18;
  v29(v14, v18, v11);
  sub_241631A68();
  uint64_t v24 = sub_241631A88();
  v22(v6, v21);
  uint64_t v39 = v32;
  uint64_t v40 = sub_2416331D8();
  uint64_t v41 = v25;
  sub_241631E08();
  uint64_t v39 = v24;
  sub_2416331D8();
  sub_241631E08();
  swift_bridgeObjectRelease();
  uint64_t v26 = v40;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v23, v33);
  return v26;
}

uint64_t sub_2411E9480()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_24162EFA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_24162B718();
  uint64_t v6 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24162B138();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*((unsigned char *)v0 + 32)) {
    return 0;
  }
  uint64_t v27 = v1;
  uint64_t v28 = v5;
  uint64_t v29 = v3;
  uint64_t v30 = v2;
  uint64_t v31 = (uint64_t)v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24DeviationDetailViewModel_userCalendar;
  sub_2411EA444(0, (unint64_t *)&unk_26B012600, MEMORY[0x263F07908], MEMORY[0x263F8E0F8]);
  uint64_t v13 = sub_24162B9E8();
  uint64_t v14 = *(void *)(v13 - 8);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_241637EE0;
  (*(void (**)(unint64_t, void, uint64_t))(v14 + 104))(v16 + v15, *MEMORY[0x263F07870], v13);
  sub_2411C9AF4(v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_24162B6B8();
  sub_24162B868();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v32);
  uint64_t v17 = sub_24162B098();
  LOBYTE(v15) = v18;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v15)
  {
    uint64_t v20 = v28;
    sub_24162EF48();
    uint64_t v21 = sub_24162EF98();
    os_log_type_t v22 = sub_2416322C8();
    if (os_log_type_enabled(v21, v22))
    {
      id v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v34 = v24;
      *(_DWORD *)id v23 = 136446210;
      uint64_t v25 = sub_2416333E8();
      uint64_t v33 = sub_2411B6898(v25, v26, &v34);
      sub_241632C28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v21, v22, "[%{public}s] Failed to calculate the days from the deviation endDate til reference date", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245621640](v24, -1, -1);
      MEMORY[0x245621640](v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v29 + 8))(v20, v30);
    return 0;
  }
  if (!__OFADD__(v17, 1)) {
    return v17 + 1 < 180;
  }
  __break(1u);
  return result;
}

uint64_t sub_2411E993C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24162C2A8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411EA410(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + 32))
  {
    return sub_2411E9E50();
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24162FC48();
    swift_release();
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2))
    {
      sub_2411EB530((uint64_t)v8, (uint64_t (*)(void))sub_2411EA410);
      uint64_t v10 = 0;
      unint64_t v11 = 0xE000000000000000;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
      sub_2411EB530((uint64_t)v8, (uint64_t (*)(void))sub_2411EA410);
      uint64_t v10 = sub_24162C298();
      unint64_t v11 = v12;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    sub_2411E9BD8();
    sub_2411BFCEC();
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_241637EE0;
    *(void *)(v13 + 56) = MEMORY[0x263F8D310];
    *(void *)(v13 + 64) = sub_2411C0A14();
    *(void *)(v13 + 32) = v10;
    *(void *)(v13 + 40) = v11;
    uint64_t v14 = sub_241631CD8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v14;
  }
}

uint64_t sub_2411E9BD8()
{
  uint64_t v0 = sub_24162B7E8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_241631CA8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = &v11[-v6];
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v9 = sub_241631D38();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t sub_2411E9E50()
{
  uint64_t v0 = sub_24162B7E8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_241631CA8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = &v11[-v6];
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v9 = sub_241631D38();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t sub_2411EA0C4()
{
  sub_2411EA500(*(void **)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32));
  uint64_t v1 = v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24DeviationDetailViewModel_startDate;
  uint64_t v2 = sub_24162B718();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24DeviationDetailViewModel_endDate, v2);
  uint64_t v4 = v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24DeviationDetailViewModel_userCalendar;
  uint64_t v5 = sub_24162BA08();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  v3(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24DeviationDetailViewModel_referenceDateForPDFExport, v2);
  uint64_t v6 = v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24DeviationDetailViewModel__displayName;
  sub_2411EA444(0, &qword_268CFA6B0, (uint64_t (*)(uint64_t))sub_2411EA410, MEMORY[0x263EFDE58]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return swift_deallocClassInstance();
}

uint64_t sub_2411EA274()
{
  return type metadata accessor for DeviationDetailViewModel();
}

uint64_t type metadata accessor for DeviationDetailViewModel()
{
  uint64_t result = qword_268CFA6A0;
  if (!qword_268CFA6A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2411EA2C8()
{
  sub_24162B718();
  if (v0 <= 0x3F)
  {
    sub_24162BA08();
    if (v1 <= 0x3F)
    {
      sub_2411EA444(319, &qword_268CFA6B0, (uint64_t (*)(uint64_t))sub_2411EA410, MEMORY[0x263EFDE58]);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_2411EA410(uint64_t a1)
{
}

void sub_2411EA444(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

id sub_2411EA4AC(id result, void *a2, char a3)
{
  if (!a3)
  {
    id v4 = result;
    return a2;
  }
  return result;
}

void destroy for DeviationDetailViewModel.DisplayStyle(uint64_t a1)
{
}

void sub_2411EA500(void *a1, void *a2, char a3)
{
  if (!a3)
  {
  }
}

uint64_t _s24MenstrualCyclesAppPlugin24DeviationDetailViewModelC12DisplayStyleOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  id v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_2411EA4AC(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DeviationDetailViewModel.DisplayStyle(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  id v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_2411EA4AC(*(id *)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_2411EA500(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for DeviationDetailViewModel.DisplayStyle(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for DeviationDetailViewModel.DisplayStyle(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  id v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_2411EA500(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviationDetailViewModel.DisplayStyle(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviationDetailViewModel.DisplayStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_2411EA6D0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_2411EA6E8(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DeviationDetailViewModel.DisplayStyle()
{
  return &type metadata for DeviationDetailViewModel.DisplayStyle;
}

id sub_2411EA710(char a1)
{
  switch(a1)
  {
    case 1:
      goto LABEL_14;
    case 2:
      goto LABEL_6;
    case 3:
      goto LABEL_10;
    default:
      unint64_t v1 = self;
      unint64_t v2 = (void *)sub_241631CC8();
      if (qword_26B0131F0 != -1) {
        swift_once();
      }
      id v3 = objc_msgSend(v1, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v2, qword_26B0181A0, 0);

      if (v3) {
        return v3;
      }
      __break(1u);
LABEL_6:
      int v4 = self;
      char v5 = (void *)sub_241631CC8();
      if (qword_26B0131F0 != -1) {
        swift_once();
      }
      id v3 = objc_msgSend(v4, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v5, qword_26B0181A0, 0);

      if (!v3)
      {
        __break(1u);
LABEL_10:
        char v6 = self;
        uint64_t v7 = (void *)sub_241631CC8();
        if (qword_26B0131F0 != -1) {
          swift_once();
        }
        id v3 = objc_msgSend(v6, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v7, qword_26B0181A0, 0);

        if (!v3)
        {
          __break(1u);
LABEL_14:
          char v8 = self;
          uint64_t v9 = (void *)sub_241631CC8();
          if (qword_26B0131F0 != -1) {
            swift_once();
          }
          id v3 = objc_msgSend(v8, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v9, qword_26B0181A0, 0);

          if (!v3)
          {
            __break(1u);
            JUMPOUT(0x2411EA9D0);
          }
        }
      }
      return v3;
  }
}

uint64_t sub_2411EA9E0()
{
  uint64_t v0 = sub_24162B7E8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_241631CA8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  int v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = &v11[-v6];
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v9 = sub_241631D38();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t sub_2411EAC54()
{
  uint64_t v0 = sub_24162B7E8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_241631CA8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  int v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = &v11[-v6];
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v9 = sub_241631D38();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t sub_2411EAECC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24162FC48();
  swift_release();

  return swift_release();
}

uint64_t sub_2411EAF4C(uint64_t a1)
{
  sub_2411EA410(0);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_2411EB060(a1, (uint64_t)&v9 - v6);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2411EB060((uint64_t)v7, (uint64_t)v5);
  swift_retain();
  sub_24162FC58();
  return sub_2411EB530((uint64_t)v7, (uint64_t (*)(void))sub_2411EA410);
}

uint64_t sub_2411EB060(uint64_t a1, uint64_t a2)
{
  sub_2411EA410(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2411EB0C4(uint64_t a1)
{
}

void sub_2411EB0F8()
{
  if (!qword_26B010440)
  {
    sub_24162C2A8();
    sub_2411BF880(255, (unint64_t *)&qword_26B012410);
    unint64_t v0 = sub_24162FA68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010440);
    }
  }
}

uint64_t sub_2411EB178()
{
  return sub_2411EB7DC(&qword_26B010438, (void (*)(uint64_t))sub_2411EB0F8);
}

void sub_2411EB1AC()
{
  if (!qword_268CFA6D0)
  {
    sub_2411EB454(255, &qword_268CFA6C8, (uint64_t (*)(uint64_t))sub_2411EB0F8, sub_2411EB178, MEMORY[0x263EFDB28]);
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_2411EB62C(255, &qword_268CFA6D8, MEMORY[0x263EFDCF0]);
    sub_2411EB2CC();
    sub_2411EB69C(&qword_268CFA6E8, &qword_268CFA6D8, v0);
    unint64_t v1 = sub_24162F978();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268CFA6D0);
    }
  }
}

unint64_t sub_2411EB2CC()
{
  unint64_t result = qword_268CFA6E0;
  if (!qword_268CFA6E0)
  {
    sub_2411EB454(255, &qword_268CFA6C8, (uint64_t (*)(uint64_t))sub_2411EB0F8, sub_2411EB178, MEMORY[0x263EFDB28]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFA6E0);
  }
  return result;
}

void sub_2411EB368()
{
  if (!qword_268CFA6F0)
  {
    sub_2411EB1AC();
    sub_2411B7D14();
    sub_2411EB7DC(&qword_268CFA6F8, (void (*)(uint64_t))sub_2411EB1AC);
    sub_2411EB7DC((unint64_t *)&qword_26B012FB0, (void (*)(uint64_t))sub_2411B7D14);
    unint64_t v0 = sub_24162FA38();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFA6F0);
    }
  }
}

void sub_2411EB454(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    sub_2411EA410(255);
    uint64_t v11 = v10;
    uint64_t v12 = a4();
    unint64_t v13 = a5(a1, v9, v11, v12);
    if (!v14) {
      atomic_store(v13, a2);
    }
  }
}

uint64_t sub_2411EB4E4()
{
  return sub_2411EB7DC(&qword_268CFA708, (void (*)(uint64_t))sub_2411EB368);
}

uint64_t sub_2411EB518()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2411EB528@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2411E88EC(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_2411EB530(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_2411EB590()
{
  unint64_t result = qword_268CFA718;
  if (!qword_268CFA718)
  {
    sub_2411EB454(255, &qword_268CFA700, (uint64_t (*)(uint64_t))sub_2411EB368, sub_2411EB4E4, MEMORY[0x263EFDA30]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFA718);
  }
  return result;
}

void sub_2411EB62C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    sub_2411EA410(255);
    unint64_t v7 = a3(a1, v6, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_2411EB69C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2411EB62C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2411EB6E0()
{
  if (!qword_268CFA730)
  {
    sub_24162B718();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CFA730);
    }
  }
}

void sub_2411EB748()
{
  if (!qword_268CFA738)
  {
    sub_24162B718();
    sub_2411EB7DC((unint64_t *)&unk_26B00E680, MEMORY[0x263F07490]);
    unint64_t v0 = sub_241632178();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFA738);
    }
  }
}

uint64_t sub_2411EB7DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2411EB824(uint64_t a1, uint64_t a2)
{
  sub_2411EB748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for ContentStateManager()
{
  return &type metadata for ContentStateManager;
}

uint64_t sub_2411EB898@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v4 = sub_24162B7F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24162BA08();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v9 = sub_24162B718();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v10 = sub_241631AC8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162B708();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F07740], v4);
  sub_24162B808();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_241631A68();
  uint64_t v14 = sub_241631A88();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t result = sub_2411EBB08(v14, 0, a1, v16);
  uint64_t *v17 = result;
  return result;
}

uint64_t sub_2411EBB08(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v31 = a4;
  char v6 = a2 & 1;
  sub_2411ED6D4(0);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v30 - v13;
  sub_2411ED7A0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v33 = v15;
  uint64_t v34 = v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v32 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_24162C4B8();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(unsigned char *)(v18 + 24) = v6;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_2411ED924;
  *(void *)(v19 + 24) = v18;
  sub_2411ED0AC();
  sub_2411ED5E8();
  sub_2411B0970(&qword_268CFA750, (void (*)(uint64_t))sub_2411ED0AC);
  sub_24162FCE8();
  swift_release();
  swift_release();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  unint64_t v20 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v21 = (v10 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v22 + v20, v12, v8);
  id v23 = (void *)(v22 + v21);
  uint64_t v24 = v31;
  *id v23 = a3;
  v23[1] = v24;
  uint64_t v25 = (void (**)(uint64_t@<X8>))(v22 + ((v21 + 23) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v25 = sub_2411EC5E8;
  v25[1] = 0;
  sub_2411ED204(0, (unint64_t *)&unk_26B0116D0, (uint64_t (*)(uint64_t))sub_2411ED5E8, MEMORY[0x263EFDDF8]);
  sub_2411B0970(&qword_268CFA780, sub_2411ED6D4);
  sub_2411ED88C();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  unint64_t v26 = v32;
  sub_24162FD08();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  sub_2411B0970(&qword_268CFA788, (void (*)(uint64_t))sub_2411ED7A0);
  uint64_t v27 = v33;
  uint64_t v28 = sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v26, v27);
  return v28;
}

uint64_t sub_2411EBF44@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  sub_2411C85F4(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162B6B8();
  uint64_t v9 = sub_24162B718();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 0, 1, v9);
  uint64_t v10 = sub_2411EC034((uint64_t)v8, a1, a2);
  uint64_t result = sub_2411E7908((uint64_t)v8);
  *a3 = v10;
  return result;
}

uint64_t sub_2411EC034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v32 = a3;
  sub_2411C85F4(0);
  uint64_t v33 = v5;
  uint64_t v30 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v30 + 64);
  MEMORY[0x270FA5388](v5);
  sub_2411ED08C(0);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = MEMORY[0x270FA5388](v7);
  uint64_t v31 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v30 - v12;
  sub_2411ED118();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v35 = v14;
  uint64_t v36 = v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v34 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_24162C4E8();
  sub_2411ED2F0(a1, (uint64_t)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v17 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v18 = swift_allocObject();
  sub_2411ED470((uint64_t)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_2411ED4D4;
  *(void *)(v19 + 24) = v18;
  sub_2411ED0AC();
  sub_2411B0970(&qword_268CFA750, (void (*)(uint64_t))sub_2411ED0AC);
  sub_24162FCE8();
  swift_release();
  swift_release();
  unint64_t v20 = v31;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v31, v13, v8);
  unint64_t v21 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v22 = (v10 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23 + v21, v20, v8);
  uint64_t v24 = (void *)(v23 + v22);
  void *v24 = a2;
  v24[1] = v32;
  uint64_t v25 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v23 + ((v22 + 23) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v25 = sub_2411EC5F8;
  v25[1] = 0;
  sub_2411ED204(0, &qword_26B0116C0, (uint64_t (*)(uint64_t))sub_2411C85F4, MEMORY[0x263EFDDF8]);
  sub_2411B0970(&qword_268CFA760, sub_2411ED08C);
  sub_2411ED268();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  unint64_t v26 = v34;
  sub_24162FD08();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
  sub_2411B0970(&qword_268CFA768, (void (*)(uint64_t))sub_2411ED118);
  uint64_t v27 = v35;
  uint64_t v28 = sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v26, v27);
  return v28;
}

uint64_t sub_2411EC500@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  sub_2411C85F4(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24162B718();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = sub_2411EC034((uint64_t)v8, a1, a2);
  uint64_t result = sub_2411E7908((uint64_t)v8);
  *a3 = v10;
  return result;
}

void sub_2411EC5E8(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t sub_2411EC5F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_24162B718();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t sub_2411EC664@<X0>(void *a1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, void (*a4)(void *__return_ptr, void)@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  void (*v31)(void *__return_ptr, void);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[2];

  uint64_t v33 = a2;
  uint64_t v11 = sub_24162EFA8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162EF48();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  id v15 = a1;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  id v16 = a1;
  unint64_t v17 = sub_24162EF98();
  os_log_type_t v18 = sub_2416322C8();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v29 = v11;
    uint64_t v20 = v19;
    uint64_t v28 = swift_slowAlloc();
    v35[0] = v28;
    *(_DWORD *)uint64_t v20 = 136446722;
    uint64_t v30 = a5;
    uint64_t v34 = sub_2411B6898(0xD000000000000013, 0x800000024163AF60, v35);
    uint64_t v31 = a4;
    sub_241632C28();
    uint64_t v32 = a6;
    *(_WORD *)(v20 + 12) = 2082;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v34 = sub_2411B6898(v33, a3, v35);
    sub_241632C28();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v20 + 22) = 2082;
    uint64_t v34 = (uint64_t)a1;
    id v21 = a1;
    sub_2411CE834();
    uint64_t v22 = sub_241631D48();
    uint64_t v34 = sub_2411B6898(v22, v23, v35);
    a4 = v31;
    sub_241632C28();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24118E000, v17, v18, "[%{public}s] Failed to set value for key %{public}s: %{public}s", (uint8_t *)v20, 0x20u);
    uint64_t v24 = v28;
    swift_arrayDestroy();
    MEMORY[0x245621640](v24, -1, -1);
    MEMORY[0x245621640](v20, -1, -1);

    uint64_t v25 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v29);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    uint64_t v25 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  a4(v35, v25);
  sub_2411ED5E8();
  return sub_24162FB98();
}

uint64_t sub_2411EC990@<X0>(void *a1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, void (*a4)(void)@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v32 = a2;
  sub_2411C85F4(0);
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v34 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_24162EFA8();
  uint64_t v14 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  id v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162EF48();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  id v17 = a1;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  id v18 = a1;
  uint64_t v19 = sub_24162EF98();
  os_log_type_t v20 = sub_2416322C8();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v31 = a4;
    uint64_t v22 = v21;
    v30[0] = swift_slowAlloc();
    uint64_t v36 = v30[0];
    *(_DWORD *)uint64_t v22 = 136446722;
    v30[3] = a5;
    uint64_t v35 = sub_2411B6898(0xD000000000000013, 0x800000024163AF60, &v36);
    v30[1] = v12;
    sub_241632C28();
    void v30[2] = a6;
    *(_WORD *)(v22 + 12) = 2082;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v35 = sub_2411B6898(v32, a3, &v36);
    sub_241632C28();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 22) = 2082;
    uint64_t v35 = (uint64_t)a1;
    id v23 = a1;
    sub_2411CE834();
    uint64_t v24 = sub_241631D48();
    uint64_t v35 = sub_2411B6898(v24, v25, &v36);
    sub_241632C28();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24118E000, v19, v20, "[%{public}s] Failed to set value for key %{public}s: %{public}s", (uint8_t *)v22, 0x20u);
    uint64_t v26 = v30[0];
    swift_arrayDestroy();
    MEMORY[0x245621640](v26, -1, -1);
    uint64_t v27 = v22;
    a4 = v31;
    MEMORY[0x245621640](v27, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  uint64_t v28 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v33);
  a4(v28);
  return sub_24162FB98();
}

uint64_t sub_2411ECCFC@<X0>(void *a1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, void (*a4)(void)@<X4>, uint64_t a5@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v9 = sub_24162EFA8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162EF48();
  swift_retain();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  id v13 = a1;
  swift_retain();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  id v14 = a1;
  uint64_t v15 = sub_24162EF98();
  os_log_type_t v16 = sub_2416322C8();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v28 = a4;
    uint64_t v18 = v17;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v32 = v26;
    *(_DWORD *)uint64_t v18 = 136446722;
    uint64_t v27 = v9;
    uint64_t v31 = sub_2411B6898(0xD000000000000013, 0x800000024163AF60, &v32);
    uint64_t v29 = a5;
    sub_241632C28();
    swift_release_n();
    *(_WORD *)(v18 + 12) = 2082;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v31 = sub_2411B6898(v30, a3, &v32);
    sub_241632C28();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 22) = 2082;
    uint64_t v31 = (uint64_t)a1;
    id v19 = a1;
    sub_2411CE834();
    uint64_t v20 = sub_241631D48();
    uint64_t v31 = sub_2411B6898(v20, v21, &v32);
    sub_241632C28();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24118E000, v15, v16, "[%{public}s] Failed to get value for key %{public}s: %{public}s", (uint8_t *)v18, 0x20u);
    uint64_t v22 = v26;
    swift_arrayDestroy();
    MEMORY[0x245621640](v22, -1, -1);
    uint64_t v23 = v18;
    a4 = v28;
    MEMORY[0x245621640](v23, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v27);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_release_n();

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  a4(0);
  return sub_24162FBA8();
}

uint64_t sub_2411ED054@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2411ED65C(a1, sub_2411C85F4, a2);
}

uint64_t sub_2411ED070@<X0>(uint64_t *a1@<X8>)
{
  return sub_2411EBF44(*(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_2411ED080@<X0>(uint64_t *a1@<X8>)
{
  return sub_2411EC500(*(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

void sub_2411ED08C(uint64_t a1)
{
}

void sub_2411ED0AC()
{
  if (!qword_268CFA748)
  {
    sub_2411CE834();
    unint64_t v0 = sub_24162FBB8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFA748);
    }
  }
}

void sub_2411ED118()
{
  if (!qword_268CFA758)
  {
    sub_2411ED08C(255);
    sub_2411ED204(255, &qword_26B0116C0, (uint64_t (*)(uint64_t))sub_2411C85F4, MEMORY[0x263EFDDF8]);
    sub_2411B0970(&qword_268CFA760, sub_2411ED08C);
    sub_2411ED268();
    unint64_t v0 = sub_24162F978();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFA758);
    }
  }
}

void sub_2411ED204(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_2411ED268()
{
  unint64_t result = qword_26B0116B8;
  if (!qword_26B0116B8)
  {
    sub_2411ED204(255, &qword_26B0116C0, (uint64_t (*)(uint64_t))sub_2411C85F4, MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0116B8);
  }
  return result;
}

uint64_t sub_2411ED2F0(uint64_t a1, uint64_t a2)
{
  sub_2411C85F4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2411ED354()
{
  sub_2411C85F4(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = sub_24162B718();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_2411ED470(uint64_t a1, uint64_t a2)
{
  sub_2411C85F4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2411ED4D4@<X0>(uint64_t a1@<X8>)
{
  sub_2411C85F4(0);
  uint64_t v4 = v1
     + ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));

  return sub_2411ED2F0(v4, a1);
}

uint64_t sub_2411ED544()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2411ED57C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_2411ED5A4()
{
  return sub_2411ED980((uint64_t (*)(void))sub_2411ED08C);
}

uint64_t sub_2411ED5BC(uint64_t *a1)
{
  return sub_2411EDA78(a1, (uint64_t (*)(void))sub_2411ED08C, (uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2411EC990);
}

void sub_2411ED5E8()
{
  if (!qword_26B0106B0)
  {
    unint64_t v0 = sub_241632C18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0106B0);
    }
  }
}

uint64_t sub_2411ED644@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2411ED65C(a1, (void (*)(void))sub_2411ED5E8, a2);
}

uint64_t sub_2411ED65C@<X0>(void **a1@<X0>, void (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  return sub_2411ECCFC(*a1, *(void *)(v3 + 24), *(void *)(v3 + 32), a2, a3);
}

uint64_t sub_2411ED688@<X0>(uint64_t *a1@<X8>)
{
  return sub_2411EB898(*(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_2411ED698@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2411EBB08(0, 1, *(void *)(v1 + 24), *(void *)(v1 + 32));
  *a1 = result;
  return result;
}

void sub_2411ED6D4(uint64_t a1)
{
}

void sub_2411ED6F4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    sub_2411ED0AC();
    a3(255);
    sub_2411B0970(&qword_268CFA750, (void (*)(uint64_t))sub_2411ED0AC);
    unint64_t v5 = sub_24162F958();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_2411ED7A0()
{
  if (!qword_268CFA778)
  {
    sub_2411ED6D4(255);
    sub_2411ED204(255, (unint64_t *)&unk_26B0116D0, (uint64_t (*)(uint64_t))sub_2411ED5E8, MEMORY[0x263EFDDF8]);
    sub_2411B0970(&qword_268CFA780, sub_2411ED6D4);
    sub_2411ED88C();
    unint64_t v0 = sub_24162F978();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFA778);
    }
  }
}

unint64_t sub_2411ED88C()
{
  unint64_t result = qword_26B0116C8;
  if (!qword_26B0116C8)
  {
    sub_2411ED204(255, (unint64_t *)&unk_26B0116D0, (uint64_t (*)(uint64_t))sub_2411ED5E8, MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0116C8);
  }
  return result;
}

uint64_t sub_2411ED914()
{
  return MEMORY[0x270FA0238](v0, 25, 7);
}

uint64_t sub_2411ED924()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_2411ED930@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v4 & 1;
  return result;
}

uint64_t sub_2411ED968()
{
  return sub_2411ED980((uint64_t (*)(void))sub_2411ED6D4);
}

uint64_t sub_2411ED980(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v4 | 7;
  unint64_t v7 = (((*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v1, v7 + 16, v6);
}

uint64_t sub_2411EDA4C(uint64_t *a1)
{
  return sub_2411EDA78(a1, (uint64_t (*)(void))sub_2411ED6D4, (uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2411EC664);
}

uint64_t sub_2411EDA78(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v3 + v7);
  uint64_t v10 = *(void *)(v3 + v7 + 8);
  uint64_t v11 = *(void *)(v3 + v8);
  uint64_t v12 = *(void *)(v3 + v8 + 8);
  uint64_t v13 = *a1;

  return a3(v13, v3 + v6, v9, v10, v11, v12);
}

uint64_t sub_2411EDB54()
{
  return sub_241631EF8();
}

uint64_t sub_2411EDBE4()
{
  return sub_241631EE8();
}

void OngoingPregnancyUserData.init(pregnancyState:sample:)(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  type metadata accessor for OngoingPregnancyUserData();
  sub_2411B9D00(0, (unint64_t *)&qword_26B012390);
  id v6 = a2;
  sub_2416317F8();
  id v4 = objc_msgSend(v6, sel_startDate);
  sub_24162B6A8();

  id v5 = objc_msgSend(v6, sel_endDate);
  sub_24162B6A8();

  sub_2411B9D00(0, (unint64_t *)&qword_268CFA790);
  sub_241632778();
}

uint64_t type metadata accessor for OngoingPregnancyUserData()
{
  uint64_t result = qword_26B00F170;
  if (!qword_26B00F170) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t OngoingPregnancyUserData.init(data:)(uint64_t a1, unint64_t a2)
{
  return swift_release();
}

uint64_t sub_2411EDEA8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t OngoingPregnancyUserData.encode()()
{
  sub_24162AE28();
  swift_allocObject();
  sub_24162AE18();
  type metadata accessor for OngoingPregnancyUserData();
  sub_2411EDFC0(&qword_268CFA7A0, (void (*)(uint64_t))type metadata accessor for OngoingPregnancyUserData);
  uint64_t v0 = sub_24162AE08();
  swift_release();
  return v0;
}

uint64_t sub_2411EDFC0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static OngoingPregnancyUserData.__derived_struct_equals(_:_:)(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  type metadata accessor for OngoingPregnancyUserData();
  sub_2411B9D00(0, (unint64_t *)&qword_26B012390);
  sub_2411EED0C();
  if ((sub_2416317D8() & 1) == 0 || (sub_24162B698() & 1) == 0 || (sub_24162B698() & 1) == 0) {
    return 0;
  }

  return sub_24162B698();
}

BOOL sub_2411EE0F8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_2411EE10C()
{
  unint64_t result = 0x636E616E67657270;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x656C706D6173;
      break;
    case 2:
      unint64_t result = 0x7461447472617473;
      break;
    case 3:
      unint64_t result = 0x65746144646E65;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2411EE1C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2411EFBCC(a1, a2);
  *a3 = result;
  return result;
}

void sub_2411EE1F0(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_2411EE1FC(uint64_t a1)
{
  unint64_t v2 = sub_2411EED74();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2411EE238(uint64_t a1)
{
  unint64_t v2 = sub_2411EED74();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t OngoingPregnancyUserData.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_2411EEE30(0, &qword_268CFA7B0, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v11[-v8];
  sub_2411B6854(a1, a1[3]);
  sub_2411EED74();
  sub_2416333A8();
  uint64_t v12 = *v3;
  v11[15] = 0;
  type metadata accessor for HKMCPregnancyState(0);
  sub_2411EDFC0(&qword_268CFA7C0, type metadata accessor for HKMCPregnancyState);
  sub_2416331A8();
  if (!v2)
  {
    type metadata accessor for OngoingPregnancyUserData();
    v11[14] = 1;
    sub_2411EEDC8();
    sub_2411EDFC0(&qword_268CFA7D0, (void (*)(uint64_t))sub_2411EEDC8);
    sub_2416331A8();
    v11[13] = 2;
    sub_24162B718();
    sub_2411EDFC0(&qword_268CFA7D8, MEMORY[0x263F07490]);
    sub_2416331A8();
    v11[12] = 3;
    sub_2416331A8();
    v11[11] = 4;
    sub_2416331A8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t OngoingPregnancyUserData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = sub_24162B718();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  uint64_t v38 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v35 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v36 = (char *)v31 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v40 = (char *)v31 - v9;
  sub_2411EEDC8();
  uint64_t v11 = v10;
  uint64_t v39 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411EEE30(0, &qword_268CFA7E0, MEMORY[0x263F8E040]);
  uint64_t v41 = *(void *)(v14 - 8);
  uint64_t v42 = v14;
  MEMORY[0x270FA5388](v14);
  os_log_type_t v16 = (char *)v31 - v15;
  uint64_t v17 = (int *)type metadata accessor for OngoingPregnancyUserData();
  MEMORY[0x270FA5388](v17);
  id v19 = (char *)v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411B6854(a1, a1[3]);
  sub_2411EED74();
  uint64_t v43 = v16;
  uint64_t v20 = (uint64_t)v44;
  sub_241633398();
  if (v20) {
    return _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)a1);
  }
  unint64_t v21 = v40;
  unsigned int v44 = a1;
  uint64_t v32 = v11;
  uint64_t v33 = v19;
  type metadata accessor for HKMCPregnancyState(0);
  char v49 = 0;
  sub_2411EDFC0(&qword_268CFA7E8, type metadata accessor for HKMCPregnancyState);
  sub_241633158();
  uint64_t v22 = v33;
  *(void *)uint64_t v33 = v50;
  char v48 = 1;
  sub_2411EDFC0(&qword_268CFA7F0, (void (*)(uint64_t))sub_2411EEDC8);
  uint64_t v23 = v32;
  sub_241633158();
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(&v22[v17[5]], v13, v23);
  char v47 = 2;
  sub_2411EDFC0(&qword_268CFA7F8, MEMORY[0x263F07490]);
  uint64_t v24 = v37;
  sub_241633158();
  uint64_t v25 = &v22[v17[6]];
  uint64_t v26 = *(char **)(v38 + 32);
  v31[1] = v38 + 32;
  uint64_t v40 = v26;
  ((void (*)(char *, char *, uint64_t))v26)(v25, v21, v24);
  char v46 = 3;
  uint64_t v27 = v36;
  sub_241633158();
  uint64_t v28 = (uint64_t)v33;
  ((void (*)(char *, char *, uint64_t))v40)(&v33[v17[7]], v27, v24);
  char v45 = 4;
  uint64_t v29 = v35;
  sub_241633158();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v42);
  ((void (*)(uint64_t, char *, uint64_t))v40)(v28 + v17[8], v29, v24);
  sub_2411EEE94(v28, v34);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v44);
  return sub_2411EEEF8(v28);
}

uint64_t sub_2411EEBF4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return OngoingPregnancyUserData.init(from:)(a1, a2);
}

uint64_t sub_2411EEC0C(void *a1)
{
  return OngoingPregnancyUserData.encode(to:)(a1);
}

uint64_t sub_2411EEC24(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  sub_2411B9D00(0, (unint64_t *)&qword_26B012390);
  sub_2411EED0C();
  if ((sub_2416317D8() & 1) == 0 || (sub_24162B698() & 1) == 0 || (sub_24162B698() & 1) == 0) {
    return 0;
  }

  return sub_24162B698();
}

unint64_t sub_2411EED0C()
{
  unint64_t result = qword_268CFA7A8;
  if (!qword_268CFA7A8)
  {
    sub_2411B9D00(255, (unint64_t *)&qword_26B012390);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFA7A8);
  }
  return result;
}

unint64_t sub_2411EED74()
{
  unint64_t result = qword_268CFA7B8;
  if (!qword_268CFA7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFA7B8);
  }
  return result;
}

void sub_2411EEDC8()
{
  if (!qword_268CFA7C8)
  {
    sub_2411B9D00(255, (unint64_t *)&qword_26B012390);
    unint64_t v0 = sub_2416317E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFA7C8);
    }
  }
}

void sub_2411EEE30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_2411EED74();
    unint64_t v7 = a3(a1, &type metadata for OngoingPregnancyUserData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_2411EEE94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OngoingPregnancyUserData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2411EEEF8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OngoingPregnancyUserData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for OngoingPregnancyUserData(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_2411EEDC8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[6];
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_24162B718();
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    v15(v12, v13, v14);
    v15((char *)v4 + a3[7], (char *)a2 + a3[7], v14);
    v15((char *)v4 + a3[8], (char *)a2 + a3[8], v14);
  }
  return v4;
}

uint64_t destroy for OngoingPregnancyUserData(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  sub_2411EEDC8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = sub_24162B718();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v10)((void *)(v7 - 8), v6, v7);
  v10(a1 + a2[7], v7);
  uint64_t v8 = a1 + a2[8];

  return ((uint64_t (*)(uint64_t, uint64_t))v10)(v8, v7);
}

char *initializeWithCopy for OngoingPregnancyUserData(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  sub_2411EEDC8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = sub_24162B718();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
  v14(v11, v12, v13);
  v14(&a1[a3[7]], &a2[a3[7]], v13);
  v14(&a1[a3[8]], &a2[a3[8]], v13);
  return a1;
}

char *assignWithCopy for OngoingPregnancyUserData(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  sub_2411EEDC8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = sub_24162B718();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24);
  v14(v11, v12, v13);
  v14(&a1[a3[7]], &a2[a3[7]], v13);
  v14(&a1[a3[8]], &a2[a3[8]], v13);
  return a1;
}

char *initializeWithTake for OngoingPregnancyUserData(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  sub_2411EEDC8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = sub_24162B718();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
  v14(v11, v12, v13);
  v14(&a1[a3[7]], &a2[a3[7]], v13);
  v14(&a1[a3[8]], &a2[a3[8]], v13);
  return a1;
}

char *assignWithTake for OngoingPregnancyUserData(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  sub_2411EEDC8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = sub_24162B718();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40);
  v14(v11, v12, v13);
  v14(&a1[a3[7]], &a2[a3[7]], v13);
  v14(&a1[a3[8]], &a2[a3[8]], v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for OngoingPregnancyUserData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2411EF634);
}

uint64_t sub_2411EF634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2411EEDC8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_24162B718();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 24);
    return v13(v15, a2, v14);
  }
}

uint64_t storeEnumTagSinglePayload for OngoingPregnancyUserData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2411EF744);
}

uint64_t sub_2411EF744(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_2411EEDC8();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    uint64_t v14 = sub_24162B718();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + *(int *)(a4 + 24);
    return v15(v17, a2, a2, v16);
  }
}

void sub_2411EF84C()
{
  sub_2411EEDC8();
  if (v0 <= 0x3F)
  {
    sub_24162B718();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for OngoingPregnancyUserData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for OngoingPregnancyUserData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2411EFA84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

unsigned char *sub_2411EFAAC(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for OngoingPregnancyUserData.CodingKeys()
{
  return &type metadata for OngoingPregnancyUserData.CodingKeys;
}

unint64_t sub_2411EFAC8()
{
  unint64_t result = qword_268CFA800;
  if (!qword_268CFA800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFA800);
  }
  return result;
}

unint64_t sub_2411EFB20()
{
  unint64_t result = qword_268CFA808;
  if (!qword_268CFA808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFA808);
  }
  return result;
}

unint64_t sub_2411EFB78()
{
  unint64_t result = qword_268CFA810;
  if (!qword_268CFA810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFA810);
  }
  return result;
}

uint64_t sub_2411EFBCC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x636E616E67657270 && a2 == 0xEE00657461745379;
  if (v2 || (sub_241633218() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C706D6173 && a2 == 0xE600000000000000 || (sub_241633218() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7461447472617473 && a2 == 0xE900000000000065 || (sub_241633218() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65746144646E65 && a2 == 0xE700000000000000 || (sub_241633218() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000241657B30)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_241633218();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

id sub_2411EFE10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin29CycleHistoryYearSectionHeader_yearLabel;
  id v5 = objc_allocWithZone(MEMORY[0x263F828E0]);
  char v6 = v2;
  *(void *)&v2[v4] = objc_msgSend(v5, sel_init);
  uint64_t v7 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin29CycleHistoryYearSectionHeader_headerSeparator;
  *(void *)&v6[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46968]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  if (a2)
  {
    int v8 = (void *)sub_241631CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    int v8 = 0;
  }
  v12.receiver = v6;
  v12.super_class = (Class)type metadata accessor for CycleHistoryYearSectionHeader();
  id v9 = objc_msgSendSuper2(&v12, sel_initWithReuseIdentifier_, v8);

  id v10 = v9;
  sub_2411F0024();

  return v10;
}

uint64_t sub_2411F0024()
{
  unint64_t v1 = v0;
  swift_getObjectType();
  id v2 = objc_msgSend(v0, sel_contentView);
  int v3 = self;
  id v4 = objc_msgSend(v3, sel_systemBackgroundColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v4);

  uint64_t v5 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin29CycleHistoryYearSectionHeader_headerSeparator;
  id v6 = *(id *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin29CycleHistoryYearSectionHeader_headerSeparator];
  id v7 = objc_msgSend(v3, sel_separatorColor);
  objc_msgSend(v6, sel_setColor_, v7);

  objc_msgSend(*(id *)&v1[v5], sel_setSeparatorThickness_, 0.5);
  uint64_t v8 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin29CycleHistoryYearSectionHeader_yearLabel;
  id v9 = *(id *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin29CycleHistoryYearSectionHeader_yearLabel];
  id v10 = objc_msgSend(v3, sel_labelColor);
  objc_msgSend(v9, sel_setTextColor_, v10);

  uint64_t v11 = *(void **)&v1[v8];
  sub_2411B9D00(0, &qword_26B012140);
  id v12 = v11;
  uint64_t v13 = (void *)sub_241632898();
  objc_msgSend(v12, sel_setFont_, v13);

  objc_msgSend(*(id *)&v1[v8], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(*(id *)&v1[v5], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v14 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v14, sel_addSubview_, *(void *)&v1[v8]);

  id v15 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v15, sel_addSubview_, *(void *)&v1[v5]);

  sub_2411BFC90();
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_24163B1D0;
  id v17 = objc_msgSend(*(id *)&v1[v8], sel_leadingAnchor);
  id v18 = objc_msgSend(v1, sel_contentView);
  id v19 = objc_msgSend(v18, sel_layoutMarginsGuide);

  id v20 = objc_msgSend(v19, sel_leadingAnchor);
  id v21 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v20);

  *(void *)(v16 + 32) = v21;
  id v22 = objc_msgSend(*(id *)&v1[v8], sel_topAnchor);
  id v23 = objc_msgSend(v1, sel_contentView);
  id v24 = objc_msgSend(v23, sel_topAnchor);

  if (qword_268CF9190 != -1) {
    swift_once();
  }
  id v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v24, *(double *)&qword_268CFA820);

  *(void *)(v16 + 40) = v25;
  id v26 = objc_msgSend(v1, sel_contentView);
  id v27 = objc_msgSend(v26, sel_bottomAnchor);

  id v28 = objc_msgSend(*(id *)&v1[v8], sel_bottomAnchor);
  if (qword_268CF9198 != -1) {
    swift_once();
  }
  id v29 = objc_msgSend(v27, sel_constraintEqualToAnchor_constant_, v28, *(double *)&qword_268CFA828);

  *(void *)(v16 + 48) = v29;
  id v30 = objc_msgSend(v1, sel_contentView);
  id v31 = objc_msgSend(v30, sel_layoutMarginsGuide);

  id v32 = objc_msgSend(v31, sel_trailingAnchor);
  id v33 = objc_msgSend(*(id *)&v1[v8], sel_trailingAnchor);
  id v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v33);

  *(void *)(v16 + 56) = v34;
  sub_241631F48();
  id v54 = self;
  sub_2411B9D00(0, (unint64_t *)&qword_26B012130);
  uint64_t v35 = (void *)sub_241631F18();
  swift_bridgeObjectRelease();
  objc_msgSend(v54, sel_activateConstraints_, v35);

  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_24163ADC0;
  id v37 = objc_msgSend(*(id *)&v1[v5], sel_leadingAnchor);
  id v38 = objc_msgSend(v1, sel_contentView);
  id v39 = objc_msgSend(v38, sel_leadingAnchor);

  id v40 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v39);
  *(void *)(v36 + 32) = v40;
  id v41 = objc_msgSend(*(id *)&v1[v5], sel_trailingAnchor);
  id v42 = objc_msgSend(v1, sel_contentView);
  id v43 = objc_msgSend(v42, sel_trailingAnchor);

  id v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_, v43);
  *(void *)(v36 + 40) = v44;
  id v45 = objc_msgSend(*(id *)&v1[v5], sel_bottomAnchor);
  id v46 = objc_msgSend(v1, sel_contentView);
  id v47 = objc_msgSend(v46, sel_bottomAnchor);

  id v48 = objc_msgSend(v45, sel_constraintEqualToAnchor_, v47);
  *(void *)(v36 + 48) = v48;
  sub_241631F48();
  char v49 = (void *)sub_241631F18();
  swift_bridgeObjectRelease();
  objc_msgSend(v54, sel_activateConstraints_, v49);

  sub_2411E58B4();
  uint64_t v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_241637EE0;
  uint64_t v51 = sub_24162F5B8();
  uint64_t v52 = MEMORY[0x263F82018];
  *(void *)(v50 + 32) = v51;
  *(void *)(v50 + 40) = v52;
  sub_241632918();
  swift_unknownObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_2411F07D8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CycleHistoryYearSectionHeader();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CycleHistoryYearSectionHeader()
{
  return self;
}

void sub_2411F087C()
{
  qword_268CFA820 = 0x4038000000000000;
}

void sub_2411F088C()
{
  qword_268CFA828 = 0x4020000000000000;
}

void sub_2411F089C(uint64_t a1)
{
  unint64_t v1 = *(void **)(a1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin29CycleHistoryYearSectionHeader_yearLabel);
  sub_2411B9D00(0, &qword_26B012140);
  id v2 = v1;
  id v3 = (id)sub_241632898();
  objc_msgSend(v2, sel_setFont_, v3);
}

char *sub_2411F0960(void *a1, double a2, double a3, double a4, double a5)
{
  id v11 = objc_allocWithZone(v5);
  return sub_2411F09C4(a1, a2, a3, a4, a5);
}

char *sub_2411F09C4(void *a1, double a2, double a3, double a4, double a5)
{
  id v11 = objc_allocWithZone((Class)type metadata accessor for CalendarTodayLabel());
  id v12 = v5;
  *(void *)&v12[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21DeviationCalendarCell_editingIndicator] = sub_2411E50CC();
  id v13 = objc_msgSend(self, sel_hkmc_supplementaryDataColor);
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15880]), sel_init);
  v20.origin.CGFloat x = 0.0;
  v20.origin.CGFloat y = 0.0;
  v20.size.CGFloat width = 8.0;
  v20.size.CGFloat height = 8.0;
  CGPathRef v15 = CGPathCreateWithEllipseInRect(v20, 0);
  objc_msgSend(v14, sel_setFrame_, 0.0, 0.0, 8.0, 8.0);
  objc_msgSend(v14, sel_setPath_, v15);

  id v16 = objc_msgSend(v13, sel_CGColor);
  objc_msgSend(v14, sel_setFillColor_, v16);

  *(void *)&v12[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21DeviationCalendarCell_intermenstrualBleedingIndicator] = v14;
  id v17 = a1;
  id v18 = sub_2415CC6A8(v17, a2, a3, a4, a5);
  sub_2411F1400();

  return v18;
}

void sub_2411F0BB0()
{
  unint64_t v1 = v0;
  sub_2415CCB04();
  id v2 = objc_msgSend(v0, sel_contentView);
  id v3 = objc_msgSend(v2, sel_layer);

  objc_msgSend(v3, sel_addSublayer_, *(void *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21DeviationCalendarCell_intermenstrualBleedingIndicator]);
  id v4 = *(void **)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21DeviationCalendarCell_editingIndicator];
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v5 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v5, sel_addSubview_, v4);

  id v6 = self;
  sub_2411AB1D0(0, (unint64_t *)&qword_26B0121F0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_24163B1D0;
  id v8 = objc_msgSend(v4, sel_centerXAnchor);
  id v9 = *(void **)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin15CalendarDayCell_dayLabel];
  id v10 = objc_msgSend(v9, sel_centerXAnchor);
  id v11 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v10);

  *(void *)(v7 + 32) = v11;
  id v12 = objc_msgSend(v4, sel_widthAnchor);
  id v13 = objc_msgSend(v9, sel_widthAnchor);
  id v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v13);

  *(void *)(v7 + 40) = v14;
  id v15 = objc_msgSend(v4, sel_heightAnchor);
  id v16 = objc_msgSend(v9, sel_heightAnchor);
  id v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

  *(void *)(v7 + 48) = v17;
  id v18 = objc_msgSend(v4, sel_centerYAnchor);
  id v19 = objc_msgSend(v9, sel_centerYAnchor);
  id v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v19);

  *(void *)(v7 + 56) = v20;
  sub_241631F48();
  sub_2411F1694();
  id v21 = (id)sub_241631F18();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_activateConstraints_, v21);
}

void sub_2411F0ED0(unsigned __int8 *a1, char a2)
{
  id v3 = v2;
  sub_2415CCFC8(a1, a2);
  id v6 = *(unsigned char **)&v2[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21DeviationCalendarCell_editingIndicator];
  uint64_t v7 = self;
  id v8 = objc_msgSend(v7, sel_whiteColor);
  uint64_t v9 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_label;
  id v10 = *(void **)&v6[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_label];
  id v11 = (void *)sub_241631CC8();
  objc_msgSend(v10, sel_setText_, v11);

  objc_msgSend(v10, sel_setTextColor_, v8);
  uint64_t v12 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_isBold;
  char v13 = v6[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_isBold];
  v6[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CalendarDayLabel_isBold] = 1;
  if ((v13 & 1) == 0) {
    sub_2411E4470();
  }

  int v14 = a1[25];
  char v15 = a2 & 1;
  sub_2411E4254((id)a1[25], v15);
  sub_2411F1210(a1[26] & 1, v15);
  if (v14 == 1 && (a1[24] & 1) == 0)
  {
    id v16 = objc_msgSend(v7, sel_clearColor);
    objc_msgSend(v6, sel_setBackgroundColor_, v16);

    id v17 = objc_msgSend(v7, sel_clearColor);
    id v18 = *(void **)&v6[v9];
    id v19 = (void *)sub_241631CC8();
    objc_msgSend(v18, sel_setText_, v19);

    objc_msgSend(v18, sel_setTextColor_, v17);
    int v20 = v6[v12];
    v6[v12] = 0;
    if (v20 == 1) {
      sub_2411E4470();
    }
  }
  sub_2411F160C((uint64_t)(a1 + 32), (uint64_t)v22);
  sub_2411F160C((uint64_t)v22, (uint64_t)v23);
  if (v23[1]) {
    id v21 = (void *)sub_241631CC8();
  }
  else {
    id v21 = 0;
  }
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v21);
}

void sub_2411F1100()
{
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin15CalendarDayCell_separator);
  id v2 = self;
  id v3 = objc_msgSend(v2, sel_opaqueSeparatorColor);
  id v4 = objc_msgSend(v3, sel_CGColor);

  objc_msgSend(v1, sel_setBackgroundColor_, v4);
  id v5 = objc_retain(*(id *)(v0
                         + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21DeviationCalendarCell_intermenstrualBleedingIndicator));
  id v6 = objc_msgSend(v2, sel_hkmc_supplementaryDataColor);
  id v7 = objc_msgSend(v6, sel_CGColor);

  objc_msgSend(v5, sel_setFillColor_, v7);
}

id sub_2411F1210(char a1, char a2)
{
  if (a2)
  {
    if (a1)
    {
      long long v4 = *MEMORY[0x263F15740];
      long long v5 = *(_OWORD *)(MEMORY[0x263F15740] + 16);
      long long v6 = *(_OWORD *)(MEMORY[0x263F15740] + 32);
      long long v7 = *(_OWORD *)(MEMORY[0x263F15740] + 48);
      long long v8 = *(_OWORD *)(MEMORY[0x263F15740] + 64);
      long long v9 = *(_OWORD *)(MEMORY[0x263F15740] + 80);
      long long v10 = *(_OWORD *)(MEMORY[0x263F15740] + 96);
      long long v11 = *(_OWORD *)(MEMORY[0x263F15740] + 112);
    }
    else
    {
      id v22 = objc_retain(*(id *)(v2
                              + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21DeviationCalendarCell_intermenstrualBleedingIndicator));
      id v23 = sub_2411E5A30();
      id v24 = (void *)sub_241631CC8();
      objc_msgSend(v22, sel_addAnimation_forKey_, v23, v24);

      CATransform3DMakeScale(&v30, 0.0001, 0.0001, 1.0);
      long long v4 = *(_OWORD *)&v30.m11;
      long long v5 = *(_OWORD *)&v30.m13;
      long long v6 = *(_OWORD *)&v30.m21;
      long long v7 = *(_OWORD *)&v30.m23;
      long long v8 = *(_OWORD *)&v30.m31;
      long long v9 = *(_OWORD *)&v30.m33;
      long long v10 = *(_OWORD *)&v30.m41;
      long long v11 = *(_OWORD *)&v30.m43;
    }
    uint64_t v25 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21DeviationCalendarCell_intermenstrualBleedingIndicator;
    id v26 = *(void **)(v2
                   + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21DeviationCalendarCell_intermenstrualBleedingIndicator);
    *(_OWORD *)&v30.CGFloat m11 = v4;
    *(_OWORD *)&v30.CGFloat m13 = v5;
    *(_OWORD *)&v30.CGFloat m21 = v6;
    *(_OWORD *)&v30.CGFloat m23 = v7;
    *(_OWORD *)&v30.CGFloat m31 = v8;
    *(_OWORD *)&v30.CGFloat m33 = v9;
    *(_OWORD *)&v30.CGFloat m41 = v10;
    *(_OWORD *)&v30.CGFloat m43 = v11;
    objc_msgSend(v26, sel_setTransform_, &v30);
    return objc_msgSend(*(id *)(v2 + v25), sel_setHidden_, (a1 & 1) == 0);
  }
  else
  {
    uint64_t v12 = self;
    objc_msgSend(v12, sel_begin);
    objc_msgSend(v12, sel_setDisableActions_, 1);
    char v13 = a1 ^ 1;
    if (v13)
    {
      CATransform3DMakeScale(&v30, 0.0001, 0.0001, 1.0);
      long long v14 = *(_OWORD *)&v30.m11;
      long long v15 = *(_OWORD *)&v30.m13;
      long long v16 = *(_OWORD *)&v30.m21;
      long long v17 = *(_OWORD *)&v30.m23;
      long long v18 = *(_OWORD *)&v30.m31;
      long long v19 = *(_OWORD *)&v30.m33;
      long long v20 = *(_OWORD *)&v30.m41;
      long long v21 = *(_OWORD *)&v30.m43;
    }
    else
    {
      long long v14 = *MEMORY[0x263F15740];
      long long v15 = *(_OWORD *)(MEMORY[0x263F15740] + 16);
      long long v16 = *(_OWORD *)(MEMORY[0x263F15740] + 32);
      long long v17 = *(_OWORD *)(MEMORY[0x263F15740] + 48);
      long long v18 = *(_OWORD *)(MEMORY[0x263F15740] + 64);
      long long v19 = *(_OWORD *)(MEMORY[0x263F15740] + 80);
      long long v20 = *(_OWORD *)(MEMORY[0x263F15740] + 96);
      long long v21 = *(_OWORD *)(MEMORY[0x263F15740] + 112);
    }
    uint64_t v28 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21DeviationCalendarCell_intermenstrualBleedingIndicator;
    id v29 = *(void **)(v2
                   + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21DeviationCalendarCell_intermenstrualBleedingIndicator);
    *(_OWORD *)&v30.CGFloat m11 = v14;
    *(_OWORD *)&v30.CGFloat m13 = v15;
    *(_OWORD *)&v30.CGFloat m21 = v16;
    *(_OWORD *)&v30.CGFloat m23 = v17;
    *(_OWORD *)&v30.CGFloat m31 = v18;
    *(_OWORD *)&v30.CGFloat m33 = v19;
    *(_OWORD *)&v30.CGFloat m41 = v20;
    *(_OWORD *)&v30.CGFloat m43 = v21;
    objc_msgSend(v29, sel_setTransform_, &v30);
    objc_msgSend(*(id *)(v2 + v28), sel_setHidden_, v13 & 1);
    return objc_msgSend(v12, sel_commit);
  }
}

id sub_2411F1400()
{
  id v1 = objc_msgSend(v0, sel_traitCollection);
  id v2 = objc_msgSend(v1, sel_preferredContentSizeCategory);

  LOBYTE(v1) = sub_2416326C8();
  if (v1) {
    double v3 = 4.0;
  }
  else {
    double v3 = 0.0;
  }
  uint64_t v4 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21DeviationCalendarCell_intermenstrualBleedingIndicator;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21DeviationCalendarCell_intermenstrualBleedingIndicator], sel_setAnchorPoint_, 0.5, 0.5);
  id v5 = *(id *)&v0[v4];
  objc_msgSend(v0, sel_bounds);
  double v7 = v6 * 0.5;
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v5, sel_setPosition_, v7, v3 + v8 * 0.68);

  long long v9 = *(void **)&v0[v4];

  return objc_msgSend(v9, sel_setHidden_, 1);
}

void sub_2411F1528()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21DeviationCalendarCell_intermenstrualBleedingIndicator);
}

id sub_2411F1568()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DeviationCalendarCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DeviationCalendarCell()
{
  return self;
}

uint64_t sub_2411F160C(uint64_t a1, uint64_t a2)
{
  sub_2411AB1D0(0, (unint64_t *)&qword_26B010670, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2411F1694()
{
  unint64_t result = qword_26B012130;
  if (!qword_26B012130)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B012130);
  }
  return result;
}

uint64_t sub_2411F16D4@<X0>(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v43 = a4;
  id v44 = a5;
  int v46 = a2;
  id v45 = a1;
  uint64_t v6 = sub_24162BA08();
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v42 = v6;
  MEMORY[0x270FA5388](v6);
  id v40 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24162C0E8();
  uint64_t v38 = *(void *)(v8 - 8);
  uint64_t v39 = v8;
  MEMORY[0x270FA5388](v8);
  long long v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_24162CBF8();
  uint64_t v11 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  char v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24162C128();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v36 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24162C1C8();
  MEMORY[0x270FA5388](v16);
  long long v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v19 + 16))(v18, a3);
  uint64_t v35 = sub_24162BDD8();
  sub_2411A855C(0, (unint64_t *)&qword_26B012FC8, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v20 = sub_24162BD98();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(void *)(v21 + 72);
  unint64_t v23 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_24163A4F0;
  unint64_t v25 = v24 + v23;
  id v26 = *(void (**)(unint64_t, void, uint64_t))(v21 + 104);
  v26(v25, *MEMORY[0x263F454F0], v20);
  v26(v25 + v22, *MEMORY[0x263F45578], v20);
  sub_2411B8B4C((uint64_t)v13);
  sub_24162CBE8();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v37);
  (*(void (**)(char *, void, uint64_t))(v38 + 104))(v10, *MEMORY[0x263F45688], v39);
  uint64_t v27 = (uint64_t)v36;
  sub_24162C0F8();
  uint64_t v28 = (uint64_t)v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v40, v43, v42);
  uint64_t v29 = type metadata accessor for ProjectionHighlightGenerator();
  CATransform3D v30 = v44;
  v44[3] = v29;
  void v30[4] = sub_2411AB2B4(&qword_26B00F490, (void (*)(uint64_t))type metadata accessor for ProjectionHighlightGenerator);
  id v31 = sub_2411B6C70(v30);
  id v32 = v45;
  id v33 = v45;
  return sub_241400EDC((uint64_t)v18, v27, v32, v46, v28, v31);
}

uint64_t sub_2411F1B64()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24162EFA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162EF48();
  uint64_t v6 = sub_24162EF98();
  os_log_type_t v7 = sub_2416322E8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v17 = v2;
    uint64_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v19 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t v11 = sub_2416333E8();
    uint64_t v18 = sub_2411B6898(v11, v12, &v19);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v6, v7, "[%{public}s] Deallocated", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v10, -1, -1);
    MEMORY[0x245621640](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v17);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  swift_release();
  uint64_t v13 = v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40ProjectionHighlightTileGeneratorPipeline_domain;
  uint64_t v14 = sub_24162C128();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  objc_release(*(id *)(v1
                     + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40ProjectionHighlightTileGeneratorPipeline_analysisChangeDetector));
  swift_release();
  return v1;
}

uint64_t sub_2411F1DEC()
{
  sub_2411F1B64();

  return swift_deallocClassInstance();
}

uint64_t sub_2411F1E44()
{
  return type metadata accessor for ProjectionHighlightTileGeneratorPipeline();
}

uint64_t sub_2411F1E4C()
{
  uint64_t result = sub_24162C128();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_2411F1EFC()
{
  unint64_t result = qword_26B012340;
  if (!qword_26B012340)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B012340);
  }
  return result;
}

uint64_t sub_2411F1F3C()
{
  uint64_t v1 = sub_24162C1C8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_24162BA08();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return MEMORY[0x270FA0238](v0, v10, v11);
}

uint64_t sub_2411F208C@<X0>(void *a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(sub_24162C1C8() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(sub_24162BA08() - 8);
  uint64_t v11 = v3 + ((v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));

  return sub_2411F16D4(a1, a2, v3 + v8, v11, a3);
}

uint64_t sub_2411F2178()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2411F21B0(uint64_t a1)
{
  return sub_241358408(a1, *(uint64_t (**)(void, void))(v1 + 16));
}

id sub_2411F21B8(uint64_t a1)
{
  uint64_t v2 = sub_24162B7E8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_241631CA8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v17 - v8;
  id v10 = objc_msgSend(self, sel_boldButton);
  objc_msgSend(v10, sel_addTarget_action_forControlEvents_, a1, sel_hxui_primaryFooterButtonTapped, 64);
  sub_241631C38();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v11 = (id)qword_26B0181A0;
  sub_24162B7D8();
  sub_241631D38();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  unint64_t v12 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setTitle_forState_, v12, 0);

  uint64_t v13 = qword_26B00F370;
  id v14 = v10;
  if (v13 != -1) {
    swift_once();
  }
  v17[1] = qword_26B017FC8;
  v17[2] = unk_26B017FD0;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631E08();
  sub_241631E08();
  sub_241631E08();
  sub_241631E08();
  sub_241631E08();
  uint64_t v15 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setAccessibilityIdentifier_, v15);

  return v14;
}

id sub_2411F2520(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v6 = (void *)a2(v2);
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

uint64_t sub_2411F2584(uint64_t a1)
{
  uint64_t v2 = sub_2416308F8();
  v14[1] = *(void *)(v2 - 8);
  void v14[2] = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t started = type metadata accessor for PregnancyStartDateInputView(0);
  uint64_t v4 = started - 8;
  MEMORY[0x270FA5388](started);
  uint64_t v6 = (void *)((char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v7 = *(unsigned char *)(a1
                + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46PregnancyOnboardingRecordDetailsViewController_estimationMethod);
  uint64_t *v6 = swift_getKeyPath();
  sub_2411F4420(0, (unint64_t *)&qword_268CFA8A8, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for PregnancyDatesInputViewModel();
  sub_2411F42D8((unint64_t *)&qword_268CFA8A0, (void (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel);
  swift_retain();
  sub_241631388();
  *((unsigned char *)v6 + *(int *)(v4 + 32)) = v7;
  sub_2411F438C();
  id v9 = objc_allocWithZone(v8);
  uint64_t v10 = sub_2416305F8();
  id v11 = (uint64_t (*)(uint64_t))MEMORY[0x263F1A4B8];
  sub_2411F4420(0, &qword_268CFA8C0, MEMORY[0x263F1A4B8], MEMORY[0x263F8E0F8]);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_241637EE0;
  sub_2416308E8();
  v14[3] = v12;
  sub_2411F42D8(&qword_268CFA8C8, MEMORY[0x263F1A4B8]);
  sub_2411F4420(0, &qword_268CFA8D0, v11, MEMORY[0x263F8D488]);
  sub_2411F4320((unint64_t *)&qword_268CFA8D8, &qword_268CFA8D0, v11);
  sub_241632D08();
  sub_2416305E8();
  return v10;
}

id sub_2411F28B8(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = swift_getObjectType();
  v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46PregnancyOnboardingRecordDetailsViewController_onboardingStep] = 2;
  *(void *)&v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46PregnancyOnboardingRecordDetailsViewController____lazy_storage___addPregnancyButton] = 0;
  *(void *)&v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46PregnancyOnboardingRecordDetailsViewController____lazy_storage___hostingController] = 0;
  *(void *)&v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46PregnancyOnboardingRecordDetailsViewController_viewModel] = a1;
  v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46PregnancyOnboardingRecordDetailsViewController_estimationMethod] = a2;
  *(void *)&v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46PregnancyOnboardingRecordDetailsViewController_coordinator] = a3;
  id v9 = (objc_class *)ObjectType;
  switch(a2)
  {
    case 1:
      uint64_t v13 = qword_268CF94D0;
      swift_retain();
      swift_retain();
      if (v13 != -1) {
        swift_once();
      }
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      id v11 = (void *)sub_241631CC8();
      swift_bridgeObjectRelease();
      if (qword_268CF94D8 != -1) {
        goto LABEL_21;
      }
      break;
    case 2:
      uint64_t v12 = qword_268CF94E0;
      swift_retain();
      swift_retain();
      if (v12 != -1) {
        swift_once();
      }
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      id v11 = (void *)sub_241631CC8();
      swift_bridgeObjectRelease();
      if (qword_268CF94E8 != -1) {
        goto LABEL_21;
      }
      break;
    case 3:
      uint64_t v14 = qword_268CF94F0;
      swift_retain();
      swift_retain();
      if (v14 != -1) {
        swift_once();
      }
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      id v11 = (void *)sub_241631CC8();
      swift_bridgeObjectRelease();
      if (qword_268CF94F8 != -1) {
        goto LABEL_21;
      }
      break;
    default:
      uint64_t v10 = qword_268CF94C0;
      swift_retain();
      swift_retain();
      if (v10 != -1) {
        swift_once();
      }
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      id v11 = (void *)sub_241631CC8();
      swift_bridgeObjectRelease();
      if (qword_268CF94C8 != -1) {
LABEL_21:
      }
        swift_once();
      break;
  }
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v15 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  uint64_t v16 = self;
  uint64_t v17 = (void *)sub_241631CC8();
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v18 = objc_msgSend(v16, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v17, qword_26B0181A0, 0);

  if (!v18)
  {
    __break(1u);
    JUMPOUT(0x2411F2D34);
  }
  objc_msgSend(v18, sel_setIsAccessibilityElement_, 0);
  v21.receiver = v4;
  v21.super_class = v9;
  id v19 = objc_msgSendSuper2(&v21, sel_initWithTitle_detailText_icon_contentLayout_, v11, v15, v18, 2);

  swift_release();
  swift_release();
  return v19;
}

void sub_2411F2D44()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_24162B468();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v35 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411F4420(0, &qword_268CFCE90, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  id v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  id v11 = (char *)&v34 - v10;
  v38.receiver = v1;
  v38.super_class = ObjectType;
  objc_msgSendSuper2(&v38, sel_viewDidLoad);
  objc_msgSend(v1, sel_setModalInPresentation_, 1);
  id v12 = sub_2411F2520(&OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46PregnancyOnboardingRecordDetailsViewController____lazy_storage___hostingController, sub_2411F2584);
  objc_msgSend(v1, sel_addChildViewController_, v12);

  id v13 = objc_msgSend(v1, sel_contentView);
  id v14 = sub_2411F2520(&OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46PregnancyOnboardingRecordDetailsViewController____lazy_storage___hostingController, sub_2411F2584);
  id v15 = objc_msgSend(v14, sel_view);

  if (!v15)
  {
    __break(1u);
    goto LABEL_16;
  }
  objc_msgSend(v13, sel_addSubview_, v15);

  id v16 = sub_2411F2520(&OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46PregnancyOnboardingRecordDetailsViewController____lazy_storage___hostingController, sub_2411F2584);
  objc_msgSend(v16, sel_didMoveToParentViewController_, v1);

  id v17 = sub_2411F2520(&OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46PregnancyOnboardingRecordDetailsViewController____lazy_storage___hostingController, sub_2411F2584);
  id v18 = objc_msgSend(v17, sel_view);

  if (!v18)
  {
LABEL_16:
    __break(1u);
    return;
  }
  id v19 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v18, sel_hk_alignConstraintsWithView_, v19);

  id v20 = objc_msgSend(v1, sel_buttonTray);
  id v21 = sub_2411F2520(&OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46PregnancyOnboardingRecordDetailsViewController____lazy_storage___addPregnancyButton, (uint64_t (*)(uint64_t))sub_2411F21B8);
  objc_msgSend(v20, sel_addButton_, v21);

  id v22 = sub_2411F2520(&OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46PregnancyOnboardingRecordDetailsViewController____lazy_storage___addPregnancyButton, (uint64_t (*)(uint64_t))sub_2411F21B8);
  uint64_t v23 = *(void *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46PregnancyOnboardingRecordDetailsViewController_viewModel];
  swift_getKeyPath();
  uint64_t v36 = v23;
  sub_2411F42D8((unint64_t *)&qword_268CFA8A0, (void (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel);
  sub_24162BB48();
  swift_release();
  objc_msgSend(v22, sel_setEnabled_, *(unsigned __int8 *)(v23+ OBJC_IVAR____TtC24MenstrualCyclesAppPlugin28PregnancyDatesInputViewModel__isValidPregnancySampleInput));

  uint64_t v25 = MEMORY[0x270FA5388](v24);
  *(&v34 - 2) = (uint64_t)v1;
  MEMORY[0x270FA5388](v25);
  *(&v34 - 2) = (uint64_t)v1;
  sub_24162BB28();
  objc_msgSend(v1, sel_hxui_addCancelButton);
  id v26 = objc_msgSend(v1, sel_navigationItem);
  id v27 = objc_msgSend(v26, sel_rightBarButtonItem);

  uint64_t v28 = v35;
  if (v27)
  {
    char v29 = v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46PregnancyOnboardingRecordDetailsViewController_onboardingStep];
    if (qword_26B00F370 != -1) {
      swift_once();
    }
    uint64_t v36 = qword_26B017FC8;
    uint64_t v37 = unk_26B017FD0;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_241631E08();
    sub_241631E08();
    PregnancyOnboardingStep.description.getter(v29);
    sub_241631E08();
    swift_bridgeObjectRelease();
    sub_241631E08();
    sub_241631E08();
    CATransform3D v30 = (void *)sub_241631CC8();
    swift_bridgeObjectRelease();
    objc_msgSend(v27, sel_setAccessibilityIdentifier_, v30);
  }
  if (qword_268CF91A8 != -1) {
    swift_once();
  }
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_24162B458();
  swift_bridgeObjectRelease();
  sub_2411F4138((uint64_t)v11, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
    sub_2411F41CC((uint64_t)v11);
    id v11 = v9;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v28, v9, v3);
    id v31 = objc_msgSend(v1, sel_buttonTray);
    if (qword_268CF91A0 != -1) {
      swift_once();
    }
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    id v32 = (void *)sub_241631CC8();
    swift_bridgeObjectRelease();
    id v33 = (void *)sub_24162B428();
    objc_msgSend(v31, sel_setCaptionText_learnMoreURL_, v32, v33);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v28, v3);
  }
  sub_2411F41CC((uint64_t)v11);
}

uint64_t sub_2411F36E4()
{
  uint64_t v1 = *(void *)(v0
                 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46PregnancyOnboardingRecordDetailsViewController_coordinator);
  int v2 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46PregnancyOnboardingRecordDetailsViewController_onboardingStep);
  uint64_t v3 = *(void (**)(uint64_t))(v1 + 416);
  swift_retain();
  if (v3)
  {
    uint64_t v4 = sub_2411F4080((uint64_t)v3);
    v3(v4);
    sub_2411F4090((uint64_t)v3);
  }
  sub_2415E9CF4(v2, 2);
  objc_msgSend(*(id *)(v1 + 360), sel_dismissViewControllerAnimated_completion_, 1, 0);

  return swift_release();
}

uint64_t sub_2411F37E4()
{
  return swift_release();
}

uint64_t sub_2411F3888()
{
  uint64_t v0 = sub_241631488();
  uint64_t v13 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2416314A8();
  uint64_t v3 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411B7D14();
  uint64_t v11 = sub_2416325A8();
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_2411F42D0;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2411987F4;
  aBlock[3] = &unk_26F569378;
  uint64_t v7 = _Block_copy(aBlock);
  swift_retain();
  sub_241631498();
  uint64_t v14 = MEMORY[0x263F8EE78];
  sub_2411F42D8((unint64_t *)&qword_26B013080, MEMORY[0x263F8F030]);
  uint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F030];
  sub_2411F4420(0, (unint64_t *)&qword_26B013090, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
  sub_2411F4320((unint64_t *)&qword_26B0130A0, (unint64_t *)&qword_26B013090, v8);
  sub_241632D08();
  id v9 = (void *)v11;
  MEMORY[0x24561FA80](0, v5, v2, v7);
  _Block_release(v7);

  (*(void (**)(char *, uint64_t))(v13 + 8))(v2, v0);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v12);
  swift_release();
  return swift_release();
}

void sub_2411F3B94(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x245621790](v1);
  if (v2)
  {
    uint64_t v3 = (char *)v2;
    id v4 = sub_2411F2520(&OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46PregnancyOnboardingRecordDetailsViewController____lazy_storage___addPregnancyButton, (uint64_t (*)(uint64_t))sub_2411F21B8);
    uint64_t v5 = *(void *)&v3[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46PregnancyOnboardingRecordDetailsViewController_viewModel];
    swift_getKeyPath();
    sub_2411F42D8((unint64_t *)&qword_268CFA8A0, (void (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel);
    sub_24162BB48();
    swift_release();
    objc_msgSend(v4, sel_setEnabled_, *(unsigned __int8 *)(v5+ OBJC_IVAR____TtC24MenstrualCyclesAppPlugin28PregnancyDatesInputViewModel__isValidPregnancySampleInput), v5);

    uint64_t v7 = MEMORY[0x270FA5388](v6);
    MEMORY[0x270FA5388](v7);
    sub_24162BB28();
  }
}

uint64_t type metadata accessor for PregnancyOnboardingRecordDetailsViewController()
{
  return self;
}

uint64_t sub_2411F3E30(uint64_t a1)
{
  return sub_2411F3E80(a1, 0xD00000000000002FLL, 0x8000000241657F30, &qword_268CFA850, algn_268CFA858);
}

uint64_t sub_2411F3E58(uint64_t a1)
{
  return sub_2411F3E80(a1, 0xD000000000000032, 0x8000000241657F60, &qword_268CFA860, algn_268CFA868);
}

uint64_t sub_2411F3E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  uint64_t v7 = sub_24162B7E8();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = sub_241631CA8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v20[-v13];
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v12, v14, v8);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v15 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v16 = sub_241631D38();
  uint64_t v18 = v17;
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
  *a4 = v16;
  *a5 = v18;
  return result;
}

uint64_t sub_2411F4080(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_2411F4090(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_2411F40A8()
{
  return sub_24137D514(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_2411F40CC()
{
  return sub_2411F37E4();
}

uint64_t (*sub_2411F40D4())()
{
  uint64_t v1 = *(void **)(v0 + 16);
  *(void *)(swift_allocObject() + 16) = v1;
  id v2 = v1;
  return sub_2411F4290;
}

uint64_t sub_2411F4138(uint64_t a1, uint64_t a2)
{
  sub_2411F4420(0, &qword_268CFCE90, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2411F41CC(uint64_t a1)
{
  sub_2411F4420(0, &qword_268CFCE90, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2411F4258()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2411F4290()
{
  return sub_2411F3888();
}

uint64_t sub_2411F4298()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_2411F42D0()
{
  sub_2411F3B94(v0);
}

uint64_t sub_2411F42D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2411F4320(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2411F4420(255, a2, a3, MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2411F438C()
{
  if (!qword_268CFA8B0)
  {
    type metadata accessor for PregnancyStartDateInputView(255);
    sub_2411F42D8(&qword_268CFA8B8, (void (*)(uint64_t))type metadata accessor for PregnancyStartDateInputView);
    unint64_t v0 = sub_241630608();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFA8B0);
    }
  }
}

void sub_2411F4420(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

id sub_2411F448C()
{
  sub_2411F473C();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24162B7E8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F087A8]), sel_init);
  sub_24162B7D8();
  unint64_t v8 = (void *)sub_24162B7A8();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v4 + 8);
  v9(v6, v3);
  objc_msgSend(v7, sel_setLocale_, v8);

  uint64_t v10 = (void *)sub_241631CC8();
  id v11 = objc_msgSend(v7, sel_locale);
  if (v11)
  {
    uint64_t v12 = v11;
    sub_24162B7C8();

    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v2, v6, v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    {
      uint64_t v13 = 0;
    }
    else
    {
      uint64_t v13 = (void *)sub_24162B7A8();
      v9(v2, v3);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
    uint64_t v13 = 0;
  }
  id v14 = objc_msgSend(self, sel_dateFormatFromTemplate_options_locale_, v10, 0, v13);

  objc_msgSend(v7, sel_setDateTemplate_, v14);
  return v7;
}

void sub_2411F473C()
{
  if (!qword_26B0125C0)
  {
    sub_24162B7E8();
    unint64_t v0 = sub_241632C18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0125C0);
    }
  }
}

id sub_2411F4794()
{
  uint64_t v1 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23LearnMoreFooterTextView____lazy_storage___textView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23LearnMoreFooterTextView____lazy_storage___textView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23LearnMoreFooterTextView____lazy_storage___textView);
  }
  else
  {
    id v4 = sub_2411F47F4();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_2411F47F4()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82D60]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_setBackgroundColor_, 0);
  objc_msgSend(v0, sel_setScrollEnabled_, 0);
  objc_msgSend(v0, sel_setUserInteractionEnabled_, 1);
  objc_msgSend(v0, sel_setEditable_, 0);
  objc_msgSend(v0, sel__setInteractiveTextSelectionDisabled_, 1);
  objc_msgSend(v0, sel_setTextContainerInset_, *MEMORY[0x263F834E8], *(double *)(MEMORY[0x263F834E8] + 8), *(double *)(MEMORY[0x263F834E8] + 16), *(double *)(MEMORY[0x263F834E8] + 24));
  id v1 = objc_msgSend(v0, sel_textContainer);
  objc_msgSend(v1, sel_setLineFragmentPadding_, 0.0);

  objc_msgSend(v0, sel_setAccessibilityTraits_, *MEMORY[0x263F832B8]);
  return v0;
}

id sub_2411F4934(double a1, double a2, double a3, double a4)
{
  swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23LearnMoreFooterTextView____lazy_storage___textView] = 0;
  uint64_t v9 = &v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23LearnMoreFooterTextView_text];
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0;
  uint64_t v10 = &v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23LearnMoreFooterTextView_highlightedText];
  *(void *)uint64_t v10 = 0;
  *((void *)v10 + 1) = 0;
  id v11 = &v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23LearnMoreFooterTextView_tapCompletion];
  *(void *)id v11 = nullsub_1;
  *((void *)v11 + 1) = 0;
  v23.receiver = v4;
  v23.super_class = (Class)type metadata accessor for LearnMoreFooterTextView();
  id v12 = objc_msgSendSuper2(&v23, sel_initWithFrame_, a1, a2, a3, a4);
  id v13 = sub_2411F4794();
  objc_msgSend(v13, sel_setDelegate_, v12);

  id v14 = v12;
  id v15 = sub_2411F4794();
  objc_msgSend(v14, sel_addSubview_, v15);

  id v16 = sub_2411F4794();
  id v17 = v14;
  MEMORY[0x24561FDC0]();

  sub_2411F5424(0, (unint64_t *)&qword_268CFA920, (void (*)(uint64_t))sub_2411E590C);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_241637EE0;
  uint64_t v19 = sub_24162F5B8();
  uint64_t v20 = MEMORY[0x263F82018];
  *(void *)(v18 + 32) = v19;
  *(void *)(v18 + 40) = v20;
  id v21 = v17;
  sub_241632918();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v21;
}

void sub_2411F4BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v11 = (void *)(v6 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23LearnMoreFooterTextView_text);
  *id v11 = a1;
  v11[1] = a2;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  id v12 = (void *)(v6 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23LearnMoreFooterTextView_highlightedText);
  *id v12 = a3;
  v12[1] = a4;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  id v13 = (void *)(v6 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23LearnMoreFooterTextView_tapCompletion);
  *id v13 = a5;
  v13[1] = a6;
  swift_retain();
  swift_release();
  uint64_t v14 = sub_2411B9D00(0, &qword_26B012140);
  id v15 = (void *)sub_241632898();
  sub_2411F5424(0, (unint64_t *)&qword_268CFA900, (void (*)(uint64_t))sub_2411E0CA8);
  uint64_t inited = swift_initStackObject();
  id v17 = (void **)MEMORY[0x263F814F0];
  *(_OWORD *)(inited + 16) = xmmword_24163A4F0;
  uint64_t v18 = *v17;
  *(void *)(inited + 32) = *v17;
  *(void *)(inited + 40) = v15;
  uint64_t v19 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v14;
  *(void *)(inited + 72) = v19;
  id v42 = self;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  id v20 = v18;
  id v43 = v15;
  id v21 = v19;
  id v22 = objc_msgSend(v42, sel_secondaryLabelColor);
  uint64_t v23 = sub_2411B9D00(0, (unint64_t *)&qword_268CFA910);
  *(void *)(inited + 104) = v23;
  *(void *)(inited + 80) = v22;
  sub_2414E42B8(inited);
  id v24 = objc_allocWithZone(MEMORY[0x263F089B8]);
  uint64_t v25 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_2411CCDB4();
  id v26 = (void *)sub_241631B18();
  swift_bridgeObjectRelease();
  id v27 = objc_msgSend(v24, sel_initWithString_attributes_, v25, v26);

  uint64_t v28 = swift_initStackObject();
  *(_OWORD *)(v28 + 16) = xmmword_24163A4F0;
  *(void *)(v28 + 32) = v21;
  id v29 = v21;
  *(void *)(v28 + 40) = objc_msgSend(v42, sel_hk_appKeyColor);
  CATransform3D v30 = (void *)*MEMORY[0x263F81520];
  uint64_t v31 = MEMORY[0x263F8D310];
  *(void *)(v28 + 64) = v23;
  *(void *)(v28 + 72) = v30;
  *(void *)(v28 + 104) = v31;
  *(void *)(v28 + 80) = 0x2F2F3A706174;
  *(void *)(v28 + 88) = 0xE600000000000000;
  id v32 = v30;
  sub_2414E42B8(v28);
  id v33 = (void *)sub_241631B18();
  swift_bridgeObjectRelease();
  id v34 = objc_allocWithZone(NSString);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v35 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  id v36 = objc_msgSend(v34, sel_initWithString_, v35);

  uint64_t v37 = (void *)sub_241631CC8();
  id v38 = objc_msgSend(v36, sel_rangeOfString_, v37);
  uint64_t v40 = v39;

  objc_msgSend(v27, sel_addAttributes_range_, v33, v38, v40);
  id v41 = sub_2411F4794();
  objc_msgSend(v41, sel_setAttributedText_, v27);
}

id sub_2411F50EC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LearnMoreFooterTextView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for LearnMoreFooterTextView()
{
  return self;
}

uint64_t sub_2411F51BC(uint64_t result)
{
  uint64_t v1 = *(void *)(result + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23LearnMoreFooterTextView_text + 8);
  if (v1)
  {
    uint64_t v2 = *(void *)(result + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23LearnMoreFooterTextView_highlightedText + 8);
    if (v2)
    {
      uint64_t v3 = *(void *)(result + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23LearnMoreFooterTextView_text);
      uint64_t v4 = *(void *)(result + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23LearnMoreFooterTextView_highlightedText);
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      sub_2411F4BE4(v3, v1, v4, v2, (uint64_t)nullsub_1, 0);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_2411F5288(uint64_t a1, id a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = sub_24162B448();
  if (v8)
  {
    if (v7 == 7364980 && v8 == 0xE300000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v9 = sub_241633218();
      swift_bridgeObjectRelease();
      if ((v9 & 1) == 0) {
        return 0;
      }
    }
    if (*(void *)(v3 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23LearnMoreFooterTextView_text + 8))
    {
      if (*(void *)(v3 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23LearnMoreFooterTextView_highlightedText + 8))
      {
        id v10 = objc_allocWithZone(NSString);
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        id v11 = (void *)sub_241631CC8();
        swift_bridgeObjectRelease();
        id v12 = objc_msgSend(v10, sel_initWithString_, v11);

        id v13 = (void *)sub_241631CC8();
        swift_bridgeObjectRelease();
        id v14 = objc_msgSend(v12, sel_rangeOfString_, v13);
        uint64_t v16 = v15;

        if (v14 == a2 && v16 == a3)
        {
          id v17 = *(void (**)(uint64_t))(v4
                                               + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23LearnMoreFooterTextView_tapCompletion);
          uint64_t v18 = swift_retain();
          v17(v18);
          swift_release();
        }
      }
    }
  }
  return 0;
}

void sub_2411F5424(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2416331E8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

id sub_2411F5478()
{
  uint64_t v1 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController____lazy_storage___footerView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController____lazy_storage___footerView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController____lazy_storage___footerView);
  }
  else
  {
    id v4 = sub_2411F5960();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_2411F54D8(double a1, double a2)
{
  id result = objc_msgSend(v2, sel_view);
  if (!result)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v5 = result;
  objc_msgSend(result, sel_bounds);
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;
  CGFloat v13 = v12;

  v20.origin.CGFloat x = v7;
  v20.origin.CGFloat y = v9;
  v20.size.CGFloat width = v11;
  v20.size.CGFloat height = v13;
  double Height = CGRectGetHeight(v20);
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_headerView], sel_bounds);
  double v15 = Height - CGRectGetHeight(v21);
  if (qword_268CF91B0 != -1) {
    swift_once();
  }
  id result = *(id *)&v2[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_footerHeightConstraint];
  if (v15 - *(double *)&qword_268CFA940 < a2)
  {
    if (result)
    {
      uint64_t v16 = qword_268CF91B8;
      id v17 = result;
      if (v16 != -1) {
        swift_once();
      }
      objc_msgSend(v17, sel_setConstant_, *(double *)&qword_268CFA948);

      uint64_t v18 = *(void **)&v2[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_tableView];
      id result = objc_msgSend(v18, sel_setBounces_, 1);
      goto LABEL_11;
    }
    goto LABEL_15;
  }
  if (!result)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  objc_msgSend(result, sel_setConstant_, 0.0);
  uint64_t v18 = *(void **)&v2[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_tableView];
  id result = objc_msgSend(v18, sel_setBounces_, 0);
LABEL_11:
  uint64_t v19 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_flashedScrollIndicatorOnLoad;
  if ((v2[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_flashedScrollIndicatorOnLoad] & 1) == 0)
  {
    id result = objc_msgSend(v18, sel_flashScrollIndicators);
    v2[v19] = 1;
  }
  return result;
}

void sub_2411F56BC()
{
  qword_268CFA940 = 0x4030000000000000;
}

void sub_2411F56CC()
{
  qword_268CFA948 = 0x4046000000000000;
}

id sub_2411F56DC()
{
  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for LoggingCardTableView();
  objc_msgSendSuper2(&v11, sel_layoutSubviews);
  id result = objc_msgSend(v0, sel_contentSize);
  double v4 = v3;
  double v5 = v2;
  double v6 = (double *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPluginP33_CF600760015F1B1EB9BB714E5E29173820LoggingCardTableView_previousContentSize];
  if (v3 != *(double *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPluginP33_CF600760015F1B1EB9BB714E5E29173820LoggingCardTableView_previousContentSize]
    || v2 != *(double *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPluginP33_CF600760015F1B1EB9BB714E5E29173820LoggingCardTableView_previousContentSize
                          + 8])
  {
    double v8 = &v0[OBJC_IVAR____TtC24MenstrualCyclesAppPluginP33_CF600760015F1B1EB9BB714E5E29173820LoggingCardTableView_loggingCardTableViewObserver];
    id result = (id)MEMORY[0x245621790](&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPluginP33_CF600760015F1B1EB9BB714E5E29173820LoggingCardTableView_loggingCardTableViewObserver]);
    if (result)
    {
      uint64_t v9 = *((void *)v8 + 1);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, double, double))(v9 + 8))(ObjectType, v9, v4, v5);
      id result = (id)swift_unknownObjectRelease();
    }
    double *v6 = v4;
    v6[1] = v5;
  }
  return result;
}

id sub_2411F5910()
{
  return sub_2411F6E58(0, type metadata accessor for LoggingCardTableView);
}

uint64_t type metadata accessor for LoggingCardTableView()
{
  return self;
}

id sub_2411F5960()
{
  id v0 = objc_msgSend(self, sel_effectWithStyle_, 8);
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E50]), sel_initWithEffect_, v0);

  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_init);
  id v3 = objc_msgSend(self, sel_tertiarySystemBackgroundColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v3);

  id v4 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v4, sel_addSubview_, v2);

  id v5 = objc_msgSend(v1, sel_contentView);
  MEMORY[0x24561FDC0]();

  return v1;
}

char *sub_2411F5B20(uint64_t a1, char a2, void *a3, long long *a4)
{
  *(void *)&v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController____lazy_storage___footerView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_alphaValue] = 0x3FF0000000000000;
  *(void *)&v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_footerHeightConstraint] = 0;
  v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_flashedScrollIndicatorOnLoad] = 0;
  v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_editableDaySummarySection] = a2;
  double v8 = v4;
  HKMCDisplayTypeIdentifier.description.getter();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  if (v10) {
    type metadata accessor for LoggingCardInfoButtonHeaderView(0);
  }
  else {
    type metadata accessor for LoggingCardHeaderView(0);
  }
  objc_super v11 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  *(void *)&v8[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_headerView] = v11;
  *(void *)&v8[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_displayType] = a3;
  double v12 = *(void **)&v11[qword_268CFB620];
  id v13 = a3;
  id v14 = v12;
  *(void *)&long long v32 = HKMCDisplayTypeIdentifier.loggingCardTitle.getter();
  *((void *)&v32 + 1) = v15;
  sub_2411D662C();
  sub_241632C88();
  swift_bridgeObjectRelease();
  uint64_t v16 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setText_, v16);

  *(void *)&v8[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_tableView] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for LoggingCardTableView()), sel_initWithFrame_style_, a1, 0.0, 0.0, 0.0, 0.0);
  id v17 = &v8[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration];
  long long v18 = a4[2];
  long long v19 = *a4;
  *((_OWORD *)v17 + 1) = a4[1];
  *((_OWORD *)v17 + 2) = v18;
  *(_OWORD *)id v17 = v19;
  long long v21 = a4[4];
  long long v20 = a4[5];
  long long v22 = a4[3];
  *(_OWORD *)(v17 + 89) = *(long long *)((char *)a4 + 89);
  *((_OWORD *)v17 + 4) = v21;
  *((_OWORD *)v17 + 5) = v20;
  *((_OWORD *)v17 + 3) = v22;
  sub_2411F6F48((uint64_t)a4);

  v31.receiver = v8;
  v31.super_class = (Class)type metadata accessor for LoggingCardViewController();
  uint64_t v23 = (char *)objc_msgSendSuper2(&v31, sel_initWithNibName_bundle_, 0, 0);
  id v24 = *(void **)&v23[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_tableView];
  uint64_t v25 = qword_26B00F370;
  id v26 = v23;
  id v27 = v24;
  if (v25 != -1) {
    swift_once();
  }
  long long v32 = xmmword_26B017FC8;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631E08();
  long long v28 = v32;
  *(void *)&long long v32 = 46;
  *((void *)&v32 + 1) = 0xE100000000000000;
  sub_241453D7C();
  sub_241631E08();
  swift_bridgeObjectRelease();
  long long v32 = v28;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631E08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v29 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_setAccessibilityIdentifier_, v29);
  sub_2411F6F74((uint64_t)a4);

  return v26;
}

void sub_2411F5E50()
{
  id v1 = v0;
  v130.receiver = v0;
  v130.super_class = (Class)type metadata accessor for LoggingCardViewController();
  objc_msgSendSuper2(&v130, sel_viewDidLoad);
  id v2 = *(void **)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_tableView];
  objc_msgSend(v2, sel_setBounces_, 0);
  type metadata accessor for LoggingCardTableView();
  id v129 = v2;
  uint64_t v3 = swift_dynamicCastClass();
  if (v3)
  {
    *(void *)(v3
              + OBJC_IVAR____TtC24MenstrualCyclesAppPluginP33_CF600760015F1B1EB9BB714E5E29173820LoggingCardTableView_loggingCardTableViewObserver
              + 8) = &off_26F5693A0;
    swift_unknownObjectWeakAssign();
  }
  id v4 = *(char **)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_headerView];
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v5 = sub_2411F5478();
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  id v6 = objc_msgSend(v1, sel_view);
  if (!v6)
  {
    __break(1u);
    goto LABEL_24;
  }
  CGFloat v7 = v6;
  objc_msgSend(v6, sel_addSubview_, v4);

  id v8 = objc_msgSend(v1, sel_view);
  if (!v8)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v9 = v8;
  uint64_t v128 = v4;
  objc_msgSend(v8, sel_addSubview_, v129);

  id v10 = objc_msgSend(v1, sel_view);
  if (!v10)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  objc_super v11 = v10;
  id v12 = sub_2411F5478();
  objc_msgSend(v11, sel_addSubview_, v12);

  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46968]), sel_init);
  HKUIFloorToScreenScale();
  objc_msgSend(v13, sel_setSeparatorThickness_);
  uint64_t v124 = self;
  id v14 = objc_msgSend(v124, sel_opaqueSeparatorColor);
  objc_msgSend(v13, sel_setColor_, v14);

  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v15 = sub_2411F5478();
  id v16 = objc_msgSend(v15, sel_contentView);

  objc_msgSend(v16, sel_addSubview_, v13);
  id v17 = self;
  sub_2411BFC90();
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_24163ADC0;
  id v19 = objc_msgSend(v13, sel_leadingAnchor);
  id v20 = sub_2411F5478();
  id v21 = objc_msgSend(v20, sel_contentView);

  id v22 = objc_msgSend(v21, (SEL)&selRef_setPath_ + 2);
  id v23 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v22);

  *(void *)(v18 + 32) = v23;
  id v24 = objc_msgSend(v13, sel_trailingAnchor);
  id v25 = sub_2411F5478();
  id v26 = objc_msgSend(v25, sel_contentView);

  id v27 = objc_msgSend(v26, (SEL)&selRef_CGContext + 4);
  id v28 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v27);

  *(void *)(v18 + 40) = v28;
  uint64_t v123 = v13;
  id v29 = objc_msgSend(v13, sel_topAnchor);
  id v30 = sub_2411F5478();
  id v31 = objc_msgSend(v30, sel_contentView);

  id v32 = objc_msgSend(v31, sel_topAnchor);
  id v33 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v32);

  *(void *)(v18 + 48) = v33;
  sub_241631F48();
  sub_2411B9D00(0, (unint64_t *)&qword_26B012130);
  id v34 = (void *)sub_241631F18();
  swift_bridgeObjectRelease();
  id v125 = v17;
  objc_msgSend(v17, sel_activateConstraints_, v34);

  id v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v129, sel_setTableFooterView_, v35);

  id v36 = sub_2411F5478();
  id v37 = objc_msgSend(v36, sel_heightAnchor);

  id v38 = objc_msgSend(v37, sel_constraintEqualToConstant_, 0.0);
  uint64_t v39 = *(void **)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_footerHeightConstraint];
  uint64_t v126 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_footerHeightConstraint;
  *(void *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_footerHeightConstraint] = v38;

  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_24163B380;
  uint64_t v127 = qword_268CFB620;
  id v41 = objc_msgSend(*(id *)&v128[qword_268CFB620], sel_leadingAnchor);
  id v42 = objc_msgSend(v129, sel_layoutMarginsGuide);
  id v43 = objc_msgSend(v42, sel_leadingAnchor);

  id v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_, v43);
  *(void *)(v40 + 32) = v44;
  id v45 = objc_msgSend(v128, sel_trailingAnchor);
  id v46 = objc_msgSend(v1, sel_view);
  if (!v46)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  id v47 = v46;
  id v48 = objc_msgSend(v46, sel_trailingAnchor);

  id v49 = objc_msgSend(v45, sel_constraintEqualToAnchor_, v48);
  *(void *)(v40 + 40) = v49;
  id v50 = objc_msgSend(v128, (SEL)&selRef_setPath_ + 2);
  id v51 = objc_msgSend(v1, sel_view);
  if (!v51)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v52 = v51;
  id v53 = objc_msgSend(v51, (SEL)&selRef_setPath_ + 2);

  id v54 = objc_msgSend(v50, sel_constraintEqualToAnchor_, v53);
  *(void *)(v40 + 48) = v54;
  id v55 = objc_msgSend(v128, sel_topAnchor);
  id v56 = objc_msgSend(v1, sel_view);
  if (!v56)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  id v57 = v56;
  id v58 = objc_msgSend(v56, sel_topAnchor);

  id v59 = objc_msgSend(v55, sel_constraintEqualToAnchor_, v58);
  *(void *)(v40 + 56) = v59;
  id v60 = objc_msgSend(v129, sel_trailingAnchor);
  id v61 = objc_msgSend(v1, sel_view);
  if (!v61)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  id v62 = v61;
  id v63 = objc_msgSend(v61, sel_trailingAnchor);

  id v64 = objc_msgSend(v60, sel_constraintEqualToAnchor_, v63);
  *(void *)(v40 + 64) = v64;
  id v65 = objc_msgSend(v129, (SEL)&selRef_setPath_ + 2);
  id v66 = objc_msgSend(v1, sel_view);
  if (!v66)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v67 = v66;
  id v68 = objc_msgSend(v66, (SEL)&selRef_setPath_ + 2);

  id v69 = objc_msgSend(v65, sel_constraintEqualToAnchor_, v68);
  *(void *)(v40 + 72) = v69;
  id v70 = objc_msgSend(v129, sel_topAnchor);
  id v71 = objc_msgSend(v128, sel_bottomAnchor);
  id v72 = objc_msgSend(v70, sel_constraintEqualToAnchor_, v71);

  *(void *)(v40 + 80) = v72;
  id v73 = objc_msgSend(v129, sel_bottomAnchor);
  id v74 = sub_2411F5478();
  id v75 = objc_msgSend(v74, sel_topAnchor);

  id v76 = objc_msgSend(v73, sel_constraintEqualToAnchor_, v75);
  *(void *)(v40 + 88) = v76;
  id v77 = sub_2411F5478();
  id v78 = objc_msgSend(v77, sel_trailingAnchor);

  id v79 = objc_msgSend(v1, sel_view);
  if (!v79)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v80 = v79;
  id v81 = objc_msgSend(v79, sel_trailingAnchor);

  id v82 = objc_msgSend(v78, sel_constraintEqualToAnchor_, v81);
  *(void *)(v40 + 96) = v82;
  id v83 = sub_2411F5478();
  id v84 = objc_msgSend(v83, sel_leadingAnchor);

  id v85 = objc_msgSend(v1, sel_view);
  if (!v85)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v86 = v85;
  id v87 = objc_msgSend(v85, sel_leadingAnchor);

  id v88 = objc_msgSend(v84, sel_constraintEqualToAnchor_, v87);
  *(void *)(v40 + 104) = v88;
  id v89 = sub_2411F5478();
  id v90 = objc_msgSend(v89, sel_bottomAnchor);

  id v91 = objc_msgSend(v1, sel_view);
  if (!v91)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v92 = v91;
  id v93 = objc_msgSend(v91, sel_bottomAnchor);

  id v94 = objc_msgSend(v90, sel_constraintEqualToAnchor_, v93);
  *(void *)(v40 + 112) = v94;
  uint64_t v95 = *(void **)&v1[v126];
  if (!v95)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    return;
  }
  *(void *)(v40 + 120) = v95;
  sub_241631F48();
  id v96 = v95;
  uint64_t v97 = (void *)sub_241631F18();
  swift_bridgeObjectRelease();
  objc_msgSend(v125, sel_activateConstraints_, v97);

  type metadata accessor for LoggingCardInfoButtonHeaderView(0);
  uint64_t v98 = swift_dynamicCastClass();
  if (v98)
  {
    uint64_t v99 = v98;
    uint64_t v100 = qword_268CFB638;
    uint64_t v101 = *(void **)(v98 + qword_268CFB638);
    uint64_t v102 = v128;
    id v103 = objc_msgSend(v101, sel_trailingAnchor);
    id v104 = v129;
    id v105 = objc_msgSend(v129, sel_layoutMarginsGuide);
    id v106 = objc_msgSend(v105, sel_trailingAnchor);

    id v107 = objc_msgSend(v103, sel_constraintEqualToAnchor_, v106);
    objc_msgSend(v107, sel_setActive_, 1);

    objc_msgSend(*(id *)(v99 + v100), sel_addTarget_action_forControlEvents_, v1, sel_infoButtonTapped_, 64);
  }
  else
  {
    id v108 = objc_msgSend(*(id *)&v128[v127], sel_trailingAnchor);
    id v104 = v129;
    id v109 = objc_msgSend(v129, sel_layoutMarginsGuide);
    id v110 = objc_msgSend(v109, sel_trailingAnchor);

    uint64_t v102 = (char *)objc_msgSend(v108, sel_constraintEqualToAnchor_, v110);
    objc_msgSend(v102, sel_setActive_, 1);
  }

  id v111 = objc_msgSend(v1, sel_view);
  if (!v111) {
    goto LABEL_35;
  }
  id v112 = v111;
  id v113 = objc_msgSend(v124, sel_clearColor);
  objc_msgSend(v112, sel_setBackgroundColor_, v113);

  id v114 = objc_msgSend(v124, sel_tertiarySystemBackgroundColor);
  objc_msgSend(v104, sel_setBackgroundColor_, v114);

  id v115 = objc_msgSend(v1, sel_traitCollection);
  id v116 = objc_msgSend(v115, sel_accessibilityContrast);

  if (v116 == (id)1)
  {
    uint64_t v117 = off_2650E79E8[v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_editableDaySummarySection]];
    id v118 = objc_msgSend(v124, *off_2650E79B0[v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_editableDaySummarySection]]);
  }
  else
  {
    uint64_t v117 = off_2650E7A58[v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_editableDaySummarySection]];
    id v118 = objc_msgSend(v124, *off_2650E7A20[v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_editableDaySummarySection]]);
  }
  id v119 = [v124 *v117];
  sub_241631518();

  sub_2411E58B4();
  uint64_t v120 = swift_allocObject();
  *(_OWORD *)(v120 + 16) = xmmword_241637EE0;
  uint64_t v121 = sub_24162F5B8();
  uint64_t v122 = MEMORY[0x263F82018];
  *(void *)(v120 + 32) = v121;
  *(void *)(v120 + 40) = v122;
  MEMORY[0x24561F9C0](v120, sel_respondToContentSizeChanges);

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
}

id sub_2411F6E40(uint64_t a1)
{
  return sub_2411F6E58(a1, type metadata accessor for LoggingCardViewController);
}

id sub_2411F6E58(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t type metadata accessor for LoggingCardViewController()
{
  return self;
}

uint64_t sub_2411F6F48(uint64_t a1)
{
  id v2 = *(id *)(a1 + 64);
  return a1;
}

uint64_t sub_2411F6F74(uint64_t a1)
{
  return a1;
}

void sub_2411F6FA0()
{
  uint64_t v1 = sub_24162EFA8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  objc_super v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162EF48();
  id v5 = v0;
  id v6 = sub_24162EF98();
  os_log_type_t v7 = sub_2416322E8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v27 = v1;
    id v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v29 = v9;
    *(_DWORD *)id v8 = 136446210;
    uint64_t ObjectType = swift_getObjectType();
    sub_2411F73AC(0, &qword_268CFA9B0, v10, (uint64_t (*)(uint64_t))type metadata accessor for LoggingCardViewController, MEMORY[0x263F8EEC8]);
    uint64_t v11 = sub_241631D48();
    uint64_t ObjectType = sub_2411B6898(v11, v12, &v29);
    sub_241632C28();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v6, v7, "[%{public}s] Info button tapped", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v9, -1, -1);
    MEMORY[0x245621640](v8, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v27);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  HKMCDisplayTypeIdentifier.description.getter();
  if (v13)
  {
    id v14 = objc_allocWithZone(MEMORY[0x263F086A0]);
    id v15 = (void *)sub_241631CC8();
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(v14, sel_initWithString_, v15);

    id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F467B8]), sel_initWithDescription_, v16);
    sub_2411BFC90();
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_24163B390;
    *(void *)(v18 + 32) = v17;
    uint64_t v29 = v18;
    sub_241631F48();
    id v19 = objc_allocWithZone(MEMORY[0x263F467C8]);
    sub_2411B9D00(0, &qword_268CFA9A8);
    id v20 = v17;
    id v21 = (void *)sub_241631F18();
    swift_bridgeObjectRelease();
    id v22 = objc_msgSend(v19, sel_initWithTextItems_, v21);

    id v23 = v22;
    HKMCDisplayTypeIdentifier.loggingCardTitle.getter();
    id v24 = (void *)sub_241631CC8();
    swift_bridgeObjectRelease();
    objc_msgSend(v23, sel_setTitle_, v24);

    id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46848]), sel_initWithRootViewController_, v23);
    objc_msgSend(v25, sel_setModalPresentationStyle_, 2);
    objc_msgSend(v5, sel_presentViewController_animated_completion_, v25, 1, 0);
  }
}

uint64_t sub_2411F73AC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t))
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t v8 = a4(a3);
    uint64_t result = a5(v8);
    atomic_store(result, a2);
  }
  return result;
}

double sub_2411F73F4@<D0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v8.receiver = v2;
  v8.super_class = ObjectType;
  objc_msgSendSuper2(&v8, sel_copyWithZone_, a1);
  sub_241632CE8();
  swift_unknownObjectRelease();
  swift_dynamicCast();
  *(void *)(v7 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin35LoggingCardCarouselLayoutAttributes_zoomLevel) = *(void *)&v2[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin35LoggingCardCarouselLayoutAttributes_zoomLevel];
  *(void *)(v7 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin35LoggingCardCarouselLayoutAttributes_xTranslationFactor) = *(void *)&v2[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin35LoggingCardCarouselLayoutAttributes_xTranslationFactor];
  double result = *(double *)&v2[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin35LoggingCardCarouselLayoutAttributes_alphaValue];
  *(double *)(v7 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin35LoggingCardCarouselLayoutAttributes_alphaValue) = result;
  a2[3] = ObjectType;
  *a2 = v7;
  return result;
}

id sub_2411F7524(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_2411F7884(a1, (uint64_t)v16);
  if (!v17)
  {
    sub_2411E0320((uint64_t)v16);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  id v4 = v15;
  if (*(double *)&v15[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin35LoggingCardCarouselLayoutAttributes_zoomLevel] != *(double *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin35LoggingCardCarouselLayoutAttributes_zoomLevel]
    || *(double *)&v15[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin35LoggingCardCarouselLayoutAttributes_xTranslationFactor] != *(double *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin35LoggingCardCarouselLayoutAttributes_xTranslationFactor]
    || *(double *)&v15[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin35LoggingCardCarouselLayoutAttributes_alphaValue] != *(double *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin35LoggingCardCarouselLayoutAttributes_alphaValue])
  {

    return 0;
  }
  sub_2411F7884(a1, (uint64_t)v16);
  uint64_t v5 = v17;
  if (v17)
  {
    id v6 = sub_2411B6854(v16, v17);
    uint64_t v7 = *(void *)(v5 - 8);
    MEMORY[0x270FA5388](v6);
    uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v7 + 16))(v9);
    uint64_t v10 = sub_241633208();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v16);
  }
  else
  {
    uint64_t v10 = 0;
  }
  v14.receiver = v1;
  v14.super_class = ObjectType;
  id v11 = objc_msgSendSuper2(&v14, sel_isEqual_, v10);

  swift_unknownObjectRelease();
  return v11;
}

uint64_t type metadata accessor for LoggingCardCarouselLayoutAttributes()
{
  return self;
}

void sub_2411F7828()
{
  if (!qword_268CFB470)
  {
    unint64_t v0 = sub_241632C18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFB470);
    }
  }
}

uint64_t sub_2411F7884(uint64_t a1, uint64_t a2)
{
  sub_2411F7828();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2411F78E8(id a1, uint64_t a2)
{
  switch(a2)
  {
    case 2:
      id v4 = objc_msgSend(self, sel_hkmc_menstruationColor);
      uint64_t v8 = *(void **)(v2 + *(int *)(type metadata accessor for CycleDay() + 20));
      if (!objc_msgSend(v8, sel_isFetched)) {
        goto LABEL_16;
      }
      id v6 = objc_msgSend(v8, sel_daySummary);
      if (!v6) {
        goto LABEL_17;
      }
      uint64_t v7 = &selRef_bleedingAfterPregnancyFlow;
LABEL_13:
      id v10 = [v6 *v7];

      if (v10 == a1) {
        id v6 = v4;
      }
      else {
        id v6 = 0;
      }
      goto LABEL_17;
    case 1:
      id v4 = objc_msgSend(self, sel_hkmc_menstruationColor);
      uint64_t v5 = *(void **)(v2 + *(int *)(type metadata accessor for CycleDay() + 20));
      if (objc_msgSend(v5, sel_isFetched))
      {
        id v6 = objc_msgSend(v5, sel_daySummary);
        if (v6)
        {
          uint64_t v7 = &selRef_bleedingInPregnancyFlow;
          goto LABEL_13;
        }
LABEL_17:
        id v11 = v6;

        return (uint64_t)v6;
      }
LABEL_16:
      id v6 = 0;
      goto LABEL_17;
    case 0:
      id v4 = objc_msgSend(self, sel_hkmc_menstruationColor);
      uint64_t v9 = *(void **)(v2 + *(int *)(type metadata accessor for CycleDay() + 20));
      if (!objc_msgSend(v9, sel_isFetched)) {
        goto LABEL_16;
      }
      id v6 = objc_msgSend(v9, sel_daySummary);
      if (!v6) {
        goto LABEL_17;
      }
      uint64_t v7 = &selRef_menstrualFlow;
      goto LABEL_13;
  }
  type metadata accessor for HKMCDaySummaryBleedingType(0);
  uint64_t result = sub_241633248();
  __break(1u);
  return result;
}

void sub_2411F7ADC(uint64_t a1, void *a2)
{
}

void sub_2411F7AE8(uint64_t a1, void *a2)
{
}

void sub_2411F7AF4(uint64_t a1, void *a2)
{
}

void sub_2411F7B00(uint64_t a1, void *a2)
{
}

id sub_2411F7B0C(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(self, sel_hkmc_supplementaryDataColor);
  uint64_t v5 = *(void **)(a1 + *(int *)(type metadata accessor for CycleDay() + 20));
  if (!objc_msgSend(v5, sel_isFetched)
    || (id v6 = objc_msgSend(v5, sel_daySummary)) == 0
    || (v7 = v6, unint64_t v8 = (unint64_t)objc_msgSend(v6, sel_symptoms), v7, (a2 & ~v8) != 0))
  {

    return 0;
  }
  return v4;
}

void sub_2411F7BC8(uint64_t a1, void *a2)
{
}

void sub_2411F7BD4(uint64_t a1, id a2, SEL *a3)
{
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v6 = (id)qword_26B0181A0;
  uint64_t v7 = (void *)sub_241631CC8();
  id v8 = objc_msgSend(self, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v7, v6, 0);

  if (v8)
  {
    uint64_t v9 = *(void **)(a1 + *(int *)(type metadata accessor for CycleDay() + 20));
    id v10 = 0;
    if (objc_msgSend(v9, sel_isFetched))
    {
      id v11 = objc_msgSend(v9, sel_daySummary);
      if (v11)
      {
        unint64_t v12 = v11;
        id v13 = [v11 *a3];

        if (v13 == a2) {
          id v10 = v8;
        }
        else {
          id v10 = 0;
        }
      }
      else
      {
        id v10 = 0;
      }
    }
    id v14 = v10;
  }
  else
  {
    __break(1u);
  }
}

void sub_2411F7D20(uint64_t a1)
{
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v2 = (id)qword_26B0181A0;
  uint64_t v3 = (void *)sub_241631CC8();
  id v4 = objc_msgSend(self, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v3, v2, 0);

  if (v4)
  {
    uint64_t v5 = *(void **)(a1 + *(int *)(type metadata accessor for CycleDay() + 20));
    id v6 = 0;
    if (objc_msgSend(v5, sel_isFetched))
    {
      id v7 = objc_msgSend(v5, sel_daySummary);
      if (v7)
      {
        id v8 = v7;
        unsigned int v9 = objc_msgSend(v7, sel_intermenstrualBleeding);

        if (v9) {
          id v6 = v4;
        }
        else {
          id v6 = 0;
        }
      }
      else
      {
        id v6 = 0;
      }
    }
    id v10 = v6;
  }
  else
  {
    __break(1u);
  }
}

uint64_t protocol witness for Identifiable.id.getter in conformance HKMCDaySummaryCervicalMucusQuality@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2411F841C(*v1, 0xD000000000000016, 0x8000000241658520, (void (*)(uint64_t))sub_2415941BC);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2411F7EB8()
{
  uint64_t v0 = sub_24162B7E8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_241631CA8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  id v7 = (char *)&v13 - v6;
  sub_241631C38();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v9 = sub_241631D38();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  sub_2415990B4();
  uint64_t v14 = v9;
  uint64_t v15 = v11;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631E08();
  sub_241631E08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_2411F80E4(uint64_t a1)
{
  return sub_2411F814C(a1, 0x415F4C4155584553, 0xEF59544956495443, (void (*)(uint64_t))sub_2412B1A8C);
}

uint64_t sub_2411F811C(uint64_t a1)
{
  return sub_2411F814C(a1, 0xD000000000000022, 0x80000002416584F0, (void (*)(uint64_t))sub_24161B15C);
}

uint64_t sub_2411F814C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = sub_24162B7E8();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = sub_241631CA8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v19 - v12;
  sub_241631C38();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v14 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v15 = sub_241631D38();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  a4(a1);
  uint64_t v20 = v15;
  uint64_t v21 = v17;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631E08();
  sub_241631E08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_2411F838C(uint64_t a1)
{
  return sub_2411F841C(a1, 0xD000000000000022, 0x80000002416584C0, (void (*)(uint64_t))sub_2414D6A9C);
}

uint64_t sub_2411F83BC(uint64_t a1)
{
  return sub_2411F841C(a1, 0xD000000000000016, 0x8000000241658520, (void (*)(uint64_t))sub_2415941BC);
}

uint64_t sub_2411F83EC(uint64_t a1)
{
  return sub_2411F841C(a1, 0xD000000000000025, 0x8000000241658490, (void (*)(uint64_t))sub_24127406C);
}

uint64_t sub_2411F841C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = sub_24162B7E8();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = sub_241631CA8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v19 - v12;
  sub_241631C38();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v14 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v15 = sub_241631D38();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  a4(a1);
  uint64_t v20 = v15;
  uint64_t v21 = v17;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631E08();
  sub_241631E08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t protocol witness for Identifiable.id.getter in conformance HKMCDaySummaryOvulationTestResult@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2411F814C(*v1, 0xD000000000000022, 0x80000002416584F0, (void (*)(uint64_t))sub_24161B15C);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t protocol witness for Identifiable.id.getter in conformance HKMCDaySummaryPregnancyTestResult@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2411F841C(*v1, 0xD000000000000022, 0x80000002416584C0, (void (*)(uint64_t))sub_2414D6A9C);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t protocol witness for Identifiable.id.getter in conformance HKMCDaySummaryProgesteroneTestResult@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2411F841C(*v1, 0xD000000000000025, 0x8000000241658490, (void (*)(uint64_t))sub_24127406C);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t protocol witness for Identifiable.id.getter in conformance HKMCDaySummarySexualActivity@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2411F814C(*v1, 0x415F4C4155584553, 0xEF59544956495443, (void (*)(uint64_t))sub_2412B1A8C);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t protocol witness for Identifiable.id.getter in conformance HKMCDaySummarySymptoms@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2411F7EB8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2411F87F0(uint64_t a1)
{
  uint64_t result = sub_2411F8A00(&qword_268CFA9D0, type metadata accessor for HKMCDaySummaryCervicalMucusQuality);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2411F8848(uint64_t a1)
{
  uint64_t result = sub_2411F8A00(&qword_268CFA9D8, type metadata accessor for HKMCDaySummaryOvulationTestResult);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2411F88A0(uint64_t a1)
{
  uint64_t result = sub_2411F8A00(&qword_268CFA9E0, type metadata accessor for HKMCDaySummaryPregnancyTestResult);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2411F88F8(uint64_t a1)
{
  uint64_t result = sub_2411F8A00(&qword_268CFA9E8, type metadata accessor for HKMCDaySummaryProgesteroneTestResult);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2411F8950(uint64_t a1)
{
  uint64_t result = sub_2411F8A00(&qword_268CFA9F0, type metadata accessor for HKMCDaySummarySexualActivity);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2411F89A8(uint64_t a1)
{
  uint64_t result = sub_2411F8A00(&qword_268CFA9F8, type metadata accessor for HKMCDaySummarySymptoms);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2411F8A00(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2411F8A48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v37 = a3;
  int v38 = a4;
  uint64_t v8 = sub_24162EFA8();
  uint64_t v36 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24162B7E8();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v12 = sub_241631CA8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v35 - v17;
  if (a2 == 2 || a2 == 1)
  {
    sub_241631C38();
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
    if (qword_26B0131F0 == -1) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
  if (!a2)
  {
    sub_241631C38();
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
    if (qword_26B0131F0 == -1)
    {
LABEL_7:
      id v19 = (id)qword_26B0181A0;
      sub_24162B7D8();
      uint64_t v20 = sub_241631D38();
      uint64_t v22 = v21;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
      uint64_t v23 = sub_24160A5D8(a2, a1);
      if (v24) {
        uint64_t v25 = v23;
      }
      else {
        uint64_t v25 = 0;
      }
      if (v24) {
        unint64_t v26 = v24;
      }
      else {
        unint64_t v26 = 0xE000000000000000;
      }
      uint64_t v39 = v20;
      uint64_t v40 = v22;
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      sub_241631E08();
      sub_241631E08();
      uint64_t v27 = v39;
      uint64_t v28 = v40;
      uint64_t result = swift_allocObject();
      uint64_t v30 = result;
      *(void *)(result + 16) = a1;
      *(void *)(result + 24) = a2;
      if ((v37 & 1) == 0)
      {
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v20 = 0;
        uint64_t v22 = 0;
      }
      *(void *)a5 = v27;
      *(void *)(a5 + 8) = v28;
      *(void *)(a5 + 16) = sub_2411F8FB0;
      *(void *)(a5 + 24) = v30;
      *(void *)(a5 + 32) = v20;
      *(void *)(a5 + 40) = v22;
      *(void *)(a5 + 48) = v25;
      *(void *)(a5 + 56) = v26;
      *(unsigned char *)(a5 + 64) = v38 & 1;
      *(void *)(a5 + 72) = 0;
      *(void *)(a5 + 80) = 0;
      *(void *)(a5 + 88) = 0x3FF0000000000000;
      return result;
    }
LABEL_16:
    swift_once();
    goto LABEL_7;
  }
  sub_24162EF48();
  id v31 = sub_24162EF98();
  os_log_type_t v32 = sub_2416322C8();
  if (os_log_type_enabled(v31, v32))
  {
    id v33 = (uint8_t *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v39 = v34;
    *(_DWORD *)id v33 = 136315138;
    uint64_t v41 = sub_2411B6898(0x79726F6765746143, 0xEB00000000776F52, &v39);
    sub_241632C28();
    _os_log_impl(&dword_24118E000, v31, v32, "[%s] Unrecognized type", v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v34, -1, -1);
    MEMORY[0x245621640](v33, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v8);
  uint64_t result = sub_241633038();
  __break(1u);
  return result;
}

uint64_t sub_2411F8FA0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2411F8FB0()
{
  return sub_2411F78E8(*(id *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_2411F8FDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_24162B7E8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_241631CA8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = &v15[-v8];
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v10 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v11 = sub_241631D38();
  uint64_t v13 = v12;
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v9, v3);
  *(void *)a1 = 0xD000000000000016;
  *(void *)(a1 + 8) = 0x8000000241658430;
  *(void *)(a1 + 16) = sub_2411F7D20;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = v11;
  *(void *)(a1 + 40) = v13;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 64) = 1;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0x3FF0000000000000;
  return result;
}

uint64_t sub_2411F9208(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_241495680(*a1, *a2);
}

uint64_t sub_2411F9214()
{
  return sub_241633358();
}

uint64_t sub_2411F92C4()
{
  sub_241631DC8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2411F9360()
{
  return sub_241633358();
}

uint64_t sub_2411F940C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2411FA698();
  *a1 = result;
  return result;
}

void sub_2411F943C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE800000000000000;
  unint64_t v4 = 0xE900000000000079;
  uint64_t v5 = 0x636E616E67657270;
  if (v2 != 1)
  {
    uint64_t v5 = 0x746144726568746FLL;
    unint64_t v4 = 0xE900000000000061;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x676E696465656C62;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_2411F94A8()
{
  return sub_24162CD08();
}

uint64_t sub_2411F94DC()
{
  uint64_t v1 = 0x636E616E67657270;
  if (*v0 != 1) {
    uint64_t v1 = 0x746144726568746FLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x676E696465656C62;
  }
}

uint64_t sub_2411F9544()
{
  uint64_t v0 = sub_24162B7E8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_241631CA8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v11[-v6];
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v9 = sub_241631D38();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t sub_2411F9784()
{
  sub_2411FA218();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24162F338();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  id v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  id v10 = (char *)v31 - v9;
  uint64_t v11 = v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin17CycleLogSubheader_item;
  swift_beginAccess();
  sub_2411FA270(v11, (uint64_t)v33);
  if (!v34) {
    return sub_2411FA33C((uint64_t)v33, (uint64_t (*)(void))sub_2411FA2D4);
  }
  sub_2411BF880(0, (unint64_t *)&qword_268CFF090);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    int v13 = v32[0];
    uint64_t v14 = v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin17CycleLogSubheader_contentView;
    uint64_t v15 = *(void *)(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin17CycleLogSubheader_contentView);
    uint64_t v16 = *(void *)(v14 + 8);
    uint64_t ObjectType = swift_getObjectType();
    void v31[2] = v15;
    v31[3] = ObjectType;
    sub_24162EFD8();
    sub_2411BF880(0, &qword_268CFAA18);
    int v18 = swift_dynamicCast();
    id v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    if (v18)
    {
      v19(v3, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
        goto LABEL_10;
      }
    }
    else
    {
      v19(v3, 1, 1, v4);
    }
    v31[1] = v16;
    sub_24162F198();
    uint64_t v20 = (void (*)(unsigned char *, void))sub_24162F298();
    *(void *)(v21 + 8) = 0;
    v20(v32, 0);
    uint64_t v22 = (void (*)(unsigned char *, void))sub_24162F298();
    *uint64_t v23 = 0x4018000000000000;
    v22(v32, 0);
    unint64_t v24 = (void (*)(unsigned char *, void))sub_24162F298();
    *(void *)(v25 + 16) = 0x4018000000000000;
    v24(v32, 0);
    sub_24162F2D8();
    uint64_t result = (uint64_t)objc_msgSend(self, sel__preferredFontForTextStyle_variant_, *MEMORY[0x263F83588], 1024);
    if (!result)
    {
      __break(1u);
      return result;
    }
    unint64_t v26 = (void (*)(unsigned char *, void))sub_24162F268();
    sub_24162F228();
    v26(v32, 0);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v8, v4);
    sub_2411FA33C((uint64_t)v3, (uint64_t (*)(void))sub_2411FA218);
LABEL_10:
    uint64_t v34 = v4;
    uint64_t v35 = MEMORY[0x263F81F20];
    uint64_t v27 = sub_2411B6C70(v33);
    (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 16))(v27, v10, v4);
    sub_2411F9544();
    sub_24162F2F8();
    if (v13)
    {
      if (v13 == 1)
      {
        sub_2411FA39C();
        sub_241632958();
LABEL_16:
        uint64_t v30 = (void (*)(unsigned char *, void))sub_24162F268();
        sub_24162F248();
        v30(v32, 0);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
        return sub_24162EFE8();
      }
      id v28 = objc_msgSend(self, sel_hkmc_supplementaryDataTextColor);
    }
    else
    {
      id v28 = objc_msgSend(self, sel_hkmc_menstruationColor);
    }
    id v29 = v28;
    goto LABEL_16;
  }
  return result;
}

char *sub_2411F9C60(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = sub_24162F338();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  int v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v36 - v14;
  uint64_t v16 = &v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin17CycleLogSubheader_item];
  *(_OWORD *)uint64_t v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *((void *)v16 + 4) = 0;
  uint64_t v17 = v4;
  sub_24162F198();
  int v18 = (void (*)(unsigned char *, void))sub_24162F298();
  *(void *)(v19 + 8) = 0;
  v18(v37, 0);
  uint64_t v20 = (void (*)(unsigned char *, void))sub_24162F298();
  void *v21 = 0x4018000000000000;
  v20(v37, 0);
  uint64_t v22 = (void (*)(unsigned char *, void))sub_24162F298();
  *(void *)(v23 + 16) = 0x4018000000000000;
  v22(v37, 0);
  sub_24162F2D8();
  uint64_t result = (char *)objc_msgSend(self, sel__preferredFontForTextStyle_variant_, *MEMORY[0x263F83588], 1024);
  if (result)
  {
    uint64_t v25 = (void (*)(unsigned char *, void))sub_24162F268();
    sub_24162F228();
    v25(v37, 0);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v13, v9);
    uint64_t v26 = sub_24162F188();
    uint64_t v28 = v27;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    id v29 = (uint64_t *)&v17[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin17CycleLogSubheader_contentView];
    *id v29 = v26;
    v29[1] = v28;

    uint64_t v30 = (objc_class *)type metadata accessor for CycleLogSubheader();
    v36.receiver = v17;
    v36.super_class = v30;
    id v31 = (char *)objc_msgSendSuper2(&v36, sel_initWithFrame_, a1, a2, a3, a4);
    os_log_type_t v32 = *(void **)&v31[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin17CycleLogSubheader_contentView];
    id v33 = v31;
    objc_msgSend(v33, sel_addSubview_, v32);
    uint64_t v34 = v33;
    id v35 = v32;
    MEMORY[0x24561FDC0](v34);

    return v34;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_2411F9FE4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CycleLogSubheader();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CycleLogSubheader()
{
  return self;
}

uint64_t sub_2411FA09C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin17CycleLogSubheader_item;
  swift_beginAccess();
  return sub_2411FA270(v3, a1);
}

uint64_t sub_2411FA0F4(uint64_t a1)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin17CycleLogSubheader_item;
  swift_beginAccess();
  sub_2411FA3DC(a1, v3);
  swift_endAccess();
  sub_2411F9784();
  return sub_2411FA33C(a1, (uint64_t (*)(void))sub_2411FA2D4);
}

uint64_t (*sub_2411FA17C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_2411FA1E0;
}

uint64_t sub_2411FA1E0(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_2411F9784();
  }
  return result;
}

void sub_2411FA218()
{
  if (!qword_268CFAA10)
  {
    sub_24162F338();
    unint64_t v0 = sub_241632C18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFAA10);
    }
  }
}

uint64_t sub_2411FA270(uint64_t a1, uint64_t a2)
{
  sub_2411FA2D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2411FA2D4()
{
  if (!qword_268CFFE30)
  {
    sub_2411BF880(255, (unint64_t *)&qword_268CFF090);
    unint64_t v0 = sub_241632C18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFFE30);
    }
  }
}

uint64_t sub_2411FA33C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_2411FA39C()
{
  unint64_t result = qword_268CFA910;
  if (!qword_268CFA910)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268CFA910);
  }
  return result;
}

uint64_t sub_2411FA3DC(uint64_t a1, uint64_t a2)
{
  sub_2411FA2D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for CycleTrackingSubheaderItem()
{
  return &type metadata for CycleTrackingSubheaderItem;
}

unint64_t sub_2411FA458()
{
  unint64_t result = qword_268CFAA20;
  if (!qword_268CFAA20)
  {
    type metadata accessor for CycleLogSubheader();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFAA20);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AnalysisKind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s24MenstrualCyclesAppPlugin26CycleTrackingSubheaderItemV5TitleOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2411FA608);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CycleTrackingSubheaderItem.Title()
{
  return &type metadata for CycleTrackingSubheaderItem.Title;
}

unint64_t sub_2411FA644()
{
  unint64_t result = qword_268CFAA28;
  if (!qword_268CFAA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFAA28);
  }
  return result;
}

uint64_t sub_2411FA698()
{
  unint64_t v0 = sub_241633108();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_2411FA6E4(double a1, double a2, double a3)
{
  uint64_t v6 = sub_2411FD104(a1, a2, a3);
  uint64_t v20 = MEMORY[0x263F8EE78];
  uint64_t result = sub_24149DCE4(0, v6 & ~(v6 >> 63), 0);
  if (v6 < 0) {
    goto LABEL_30;
  }
  uint64_t result = v20;
  char v8 = 0;
  uint64_t v9 = 0;
  if (!v6)
  {
    double v12 = a1;
    goto LABEL_16;
  }
  double v10 = a1;
  do
  {
    BOOL v11 = v10 <= a2;
    if (a3 > 0.0) {
      BOOL v11 = v10 >= a2;
    }
    if (v11)
    {
      if (v8 & 1 | (v10 != a2)) {
        goto LABEL_28;
      }
      char v8 = 1;
      double v12 = v10;
    }
    else
    {
      BOOL v13 = __OFADD__(v9++, 1);
      if (v13) {
        goto LABEL_29;
      }
      double v12 = a1 + (double)v9 * a3;
    }
    uint64_t v21 = result;
    unint64_t v15 = *(void *)(result + 16);
    unint64_t v14 = *(void *)(result + 24);
    if (v15 >= v14 >> 1)
    {
      sub_24149DCE4(v14 > 1, v15 + 1, 1);
      uint64_t result = v21;
    }
    *(void *)(result + 16) = v15 + 1;
    *(double *)(result + 8 * v15 + 32) = v10;
    double v10 = v12;
    --v6;
  }
  while (v6);
  while (1)
  {
LABEL_16:
    BOOL v16 = v12 <= a2;
    if (a3 > 0.0) {
      BOOL v16 = v12 >= a2;
    }
    if (!v16) {
      break;
    }
    if ((v12 != a2) | v8 & 1) {
      return result;
    }
    char v8 = 1;
    double v17 = v12;
LABEL_23:
    uint64_t v22 = result;
    unint64_t v19 = *(void *)(result + 16);
    unint64_t v18 = *(void *)(result + 24);
    if (v19 >= v18 >> 1)
    {
      sub_24149DCE4(v18 > 1, v19 + 1, 1);
      uint64_t result = v22;
    }
    *(void *)(result + 16) = v19 + 1;
    *(double *)(result + 8 * v19 + 32) = v12;
    double v12 = v17;
  }
  BOOL v13 = __OFADD__(v9++, 1);
  if (!v13)
  {
    double v17 = a1 + (double)v9 * a3;
    goto LABEL_23;
  }
  __break(1u);
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

void sub_2411FA8CC()
{
  long long v1 = *(_OWORD *)(v0 + 24);
  long long v17 = *(_OWORD *)(v0 + 8);
  long long v18 = v1;
  uint64_t v19 = *(void *)(v0 + 40);
  uint64_t v2 = MEMORY[0x263F8D8F0];
  sub_2411FEE80((uint64_t)&v17, (uint64_t)v20, (uint64_t)&qword_268CFAA48, (uint64_t)sub_2411FEEF4, MEMORY[0x263F8D8F0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_2411FEE1C);
  sub_2411FEE80((uint64_t)v20, (uint64_t)v21, (uint64_t)&qword_268CFAA48, (uint64_t)sub_2411FEEF4, v2, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_2411FEE1C);
  if (v22)
  {
    uint64_t v3 = MEMORY[0x263F8EE78];
  }
  else
  {
    if (*((double *)&v18 + 1) == 0.0) {
      goto LABEL_19;
    }
    uint64_t v3 = sub_2411FA6E4(v21[1], v21[0], -*((double *)&v18 + 1));
  }
  sub_2411FEBF4(v0);
  unint64_t v4 = sub_2411FD288(v3);
  sub_2411FEC40(v0);
  swift_bridgeObjectRelease();
  if (v4 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v8 = sub_241633068();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_7;
    }
  }
  else if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_7:
    if ((v4 & 0xC000000000000001) != 0)
    {
      id v5 = (id)MEMORY[0x245620370](0, v4);
      goto LABEL_10;
    }
    if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v5 = *(id *)(v4 + 32);
LABEL_10:
      uint64_t v6 = v5;
      swift_bridgeObjectRelease();
      sub_2411FDB38();
      type metadata accessor for Key(0);
      sub_2411FEBAC(&qword_268CFFFF0, type metadata accessor for Key);
      BOOL v7 = (void *)sub_241631B18();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_sizeWithAttributes_, v7);

      goto LABEL_13;
    }
    __break(1u);
LABEL_19:
    __break(1u);
    return;
  }
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v9 = *MEMORY[0x263F81788];
  uint64_t v10 = *MEMORY[0x263F81840];
  id v11 = (id)*MEMORY[0x263F835B8];
  id v12 = sub_2415D17B8((uint64_t)v11, 0x8000, v9, v10, 0);

  id v13 = objc_msgSend(self, sel_configurationWithFont_scale_, v12, 1);
  unint64_t v14 = (void *)sub_241631CC8();
  id v15 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v14, v13);

  if (v15)
  {
    id v16 = objc_msgSend(v15, sel_imageWithRenderingMode_, 2);

    if (v16)
    {
      objc_msgSend(v16, sel_size);
    }
  }
}

void sub_2411FAC40()
{
  uint64_t v1 = MEMORY[0x263F8D310];
  uint64_t v2 = MEMORY[0x263F8D8F0];
  sub_2411FEE80(v0 + 56, (uint64_t)v17, (uint64_t)&qword_26B010670, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_2411BFD54);
  sub_2411FEE80((uint64_t)v17, (uint64_t)v18, (uint64_t)&qword_26B010670, v1, v2, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_2411BFD54);
  if (v18[1]) {
    uint64_t v3 = (void *)sub_241631CC8();
  }
  else {
    uint64_t v3 = 0;
  }
  double v4 = *(double *)(v0 + 112);
  double v5 = *(double *)(v0 + 80);
  double v6 = *(double *)(v0 + 96);
  sub_24134E378();
  if (v3)
  {
    type metadata accessor for Key(0);
    sub_2411FEBAC(&qword_268CFFFF0, type metadata accessor for Key);
    BOOL v7 = (void *)sub_241631B18();
    objc_msgSend(v3, sel_boundingRectWithSize_options_attributes_context_, 1, v7, 0, v4 - v5 - v6, 1.79769313e308);

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = *MEMORY[0x263F835B8];
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82770]), sel_initForTextStyle_, *MEMORY[0x263F835B8]);
  objc_msgSend(v9, sel_scaledValueForValue_, 32.0);

  long long v10 = *(_OWORD *)(v0 + 24);
  long long v13 = *(_OWORD *)(v0 + 8);
  long long v14 = v10;
  uint64_t v15 = *(void *)(v0 + 40);
  uint64_t v11 = MEMORY[0x263F8D8F0];
  sub_2411FEE80((uint64_t)&v13, (uint64_t)v16, (uint64_t)&qword_268CFAA48, (uint64_t)sub_2411FEEF4, MEMORY[0x263F8D8F0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_2411FEE1C);
  sub_2411FEE80((uint64_t)v16, (uint64_t)v19, (uint64_t)&qword_268CFAA48, (uint64_t)sub_2411FEEF4, v11, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_2411FEE1C);
  if (v20) {
    goto LABEL_10;
  }
  if (*((double *)&v14 + 1) != 0.0)
  {
    sub_2411FA6E4(v19[1], v19[0], -*((double *)&v14 + 1));
LABEL_10:
    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82770]), sel_initForTextStyle_, v8);
    objc_msgSend(v12, sel_scaledValueForValue_, 32.0);

    return;
  }
  __break(1u);
}

void sub_2411FAF74(CGContext *a1, double *a2, void *a3)
{
  long long v7 = *(_OWORD *)(v3 + 24);
  long long v44 = *(_OWORD *)(v3 + 8);
  long long v45 = v7;
  uint64_t v46 = *(void *)(v3 + 40);
  uint64_t v8 = MEMORY[0x263F8D8F0];
  sub_2411FEE80((uint64_t)&v44, (uint64_t)v47, (uint64_t)&qword_268CFAA48, (uint64_t)sub_2411FEEF4, MEMORY[0x263F8D8F0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_2411FEE1C);
  sub_2411FEE80((uint64_t)v47, (uint64_t)v48, (uint64_t)&qword_268CFAA48, (uint64_t)sub_2411FEEF4, v8, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_2411FEE1C);
  if (v49)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
  }
  else
  {
    if (*((double *)&v45 + 1) == 0.0)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    uint64_t v9 = sub_2411FA6E4(v48[1], v48[0], -*((double *)&v45 + 1));
  }
  sub_2411FEBF4(v3);
  unint64_t v10 = sub_2411FD288(v9);
  sub_2411FEC40(v3);
  swift_bridgeObjectRelease();
  unint64_t v11 = sub_2411FDFEC();
  if (!(v10 >> 62))
  {
    uint64_t v12 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    if (v12) {
      goto LABEL_7;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return;
  }
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v12 = sub_241633068();
  if (!v12) {
    goto LABEL_27;
  }
LABEL_7:
  if (v12 < 1)
  {
    __break(1u);
    goto LABEL_29;
  }
  double v42 = *(double *)(v3 + 120);
  double v43 = *(double *)(v3 + 80);
  CGFloat v13 = a2[6];
  CGFloat v41 = a2[7];
  CGFloat v15 = a2[4];
  CGFloat v14 = a2[5];
  unint64_t v16 = v10 & 0xC000000000000001;
  uint64_t v39 = (id *)(v10 + 32);
  uint64_t v40 = a2;
  if ((v10 & 0xC000000000000001) != 0) {
    id v17 = (id)MEMORY[0x245620370](0, v10);
  }
  else {
    id v17 = *(id *)(v10 + 32);
  }
  long long v18 = v17;
  type metadata accessor for Key(0);
  sub_2411FEBAC(&qword_268CFFFF0, type metadata accessor for Key);
  uint64_t v19 = (void *)sub_241631B18();
  objc_msgSend(v18, sel_sizeWithAttributes_, v19);
  double v21 = v20;

  double v22 = v21 * -0.5;
  v50.size.CGFloat height = v41;
  v50.origin.CGFloat x = v15;
  v50.origin.CGFloat y = v14;
  v50.size.CGFloat width = v13;
  CGRect v51 = CGRectOffset(v50, 0.0, v42 * 0.0);
  CGFloat x = v51.origin.x;
  CGFloat y = v51.origin.y;
  CGFloat width = v51.size.width;
  CGFloat height = v51.size.height;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_24152F06C(v18, v11, a1, a3, 0, x, y, width, height, v22, v43, 0.0, 0.0);
  swift_bridgeObjectRelease();

  uint64_t v27 = v12 - 1;
  if (v27)
  {
    for (uint64_t i = 0; i != v27; ++i)
    {
      if (v16) {
        id v31 = (id)MEMORY[0x245620370](i + 1, v10);
      }
      else {
        id v31 = *(id *)(v10 + 8 * i + 40);
      }
      os_log_type_t v32 = v31;
      v52.size.CGFloat height = v41;
      v52.origin.CGFloat x = v15;
      v52.origin.CGFloat y = v14;
      v52.size.CGFloat width = v13;
      CGRect v53 = CGRectOffset(v52, 0.0, v42 * (double)(i + 1));
      CGFloat v33 = v53.origin.x;
      CGFloat v34 = v53.origin.y;
      CGFloat v35 = v53.size.width;
      CGFloat v36 = v53.size.height;
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      sub_24152F06C(v32, v11, a1, a3, 0, v33, v34, v35, v36, v22, v43, 0.0, 0.0);
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v16)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    id v28 = (id)MEMORY[0x245620370](0, v10);
    swift_bridgeObjectRelease();
    id v29 = v40;
LABEL_21:
    sub_2411FE140(v28, *v29, v29[1], v29[2], v29[3]);

    if (v16)
    {
      id v37 = (id)MEMORY[0x245620370](v27, v10);
LABEL_25:
      int v38 = v37;
      swift_bridgeObjectRelease();
      sub_2411FE140(v38, v29[8], v29[9], v29[10], v29[11]);

      return;
    }
    if (v27 < *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v37 = v39[v27];
      goto LABEL_25;
    }
    goto LABEL_31;
  }
  id v29 = v40;
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v28 = *v39;
    goto LABEL_21;
  }
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
}

void sub_2411FB43C(CGContext *a1, CGRect *a2, id a3)
{
  uint64_t v4 = v3;
  objc_msgSend(a3, sel_displayScale);
  CGFloat x = a2->origin.x;
  CGFloat y = a2->origin.y;
  CGFloat width = a2->size.width;
  CGFloat height = a2->size.height;
  double v13 = 1.0 / v12;
  v60.origin.CGFloat x = a2->origin.x;
  v60.origin.CGFloat y = y;
  v60.size.CGFloat width = width;
  v60.size.CGFloat height = height;
  CGFloat MinX = CGRectGetMinX(v60);
  v61.origin.CGFloat x = x;
  v61.origin.CGFloat y = y;
  v61.size.CGFloat width = width;
  v61.size.CGFloat height = height;
  CGFloat MaxX = CGRectGetMaxX(v61);
  CGContextSaveGState(a1);
  unint64_t v16 = self;
  id v17 = objc_msgSend(v16, sel_systemGray3Color);
  id v18 = objc_msgSend(v17, sel_resolvedColorWithTraitCollection_, a3);

  uint64_t v19 = (CGColor *)objc_msgSend(v18, sel_CGColor);
  CGContextSetStrokeColorWithColor(a1, v19);

  id v20 = objc_msgSend(v16, sel_systemGray3Color);
  id v21 = objc_msgSend(v20, sel_resolvedColorWithTraitCollection_, a3);

  double v22 = (CGColor *)objc_msgSend(v21, sel_CGColor);
  CGContextSetFillColorWithColor(a1, v22);

  CGContextSetLineWidth(a1, v13);
  sub_2411BFD54(0, (unint64_t *)&qword_268CFA2A0, MEMORY[0x263F8EF38], MEMORY[0x263F8E0F8]);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_24163A4F0;
  *(double *)(v23 + 32) = v13;
  *(double *)(v23 + 40) = v13 * 3.0;
  sub_241632198();
  swift_bridgeObjectRelease();
  v62.origin.CGFloat x = x;
  v62.origin.CGFloat y = y;
  v62.size.CGFloat width = width;
  v62.size.CGFloat height = height;
  double MinY = CGRectGetMinY(v62);
  v63.origin.CGFloat x = a2[1].origin.x;
  v63.origin.CGFloat y = a2[1].origin.y;
  CGFloat v52 = v63.origin.y;
  CGFloat v53 = v63.origin.x;
  v63.size.CGFloat width = a2[1].size.width;
  CGFloat v25 = a2[1].size.height;
  CGFloat v51 = v63.size.width;
  v63.size.CGFloat height = v25;
  double v26 = CGRectGetMinY(v63);
  double v27 = CGRectGetMinY(a2[2]);
  double v28 = v13 * 0.5 + v13 * ceil(MinY / v13);
  sub_2411FEE1C(0, (unint64_t *)&qword_268D04800, (uint64_t (*)(uint64_t))type metadata accessor for CGPoint, MEMORY[0x263F8E0F8]);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_24163A4F0;
  *(CGFloat *)(v29 + 32) = MinX;
  *(double *)(v29 + 40) = v28;
  *(CGFloat *)(v29 + 48) = MaxX;
  *(double *)(v29 + 56) = v28;
  sub_2416321A8();
  swift_bridgeObjectRelease();
  double v30 = v13 * 0.5 + v13 * ceil(v26 / v13);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_24163A4F0;
  *(CGFloat *)(v31 + 32) = MinX;
  *(double *)(v31 + 40) = v30;
  *(CGFloat *)(v31 + 48) = MaxX;
  *(double *)(v31 + 56) = v30;
  sub_2416321A8();
  swift_bridgeObjectRelease();
  double v32 = v13 * 0.5 + v13 * ceil(v27 / v13);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_24163A4F0;
  *(CGFloat *)(v33 + 32) = MinX;
  *(double *)(v33 + 40) = v32;
  *(CGFloat *)(v33 + 48) = MaxX;
  *(double *)(v33 + 56) = v32;
  sub_2416321A8();
  swift_bridgeObjectRelease();
  CGContextRestoreGState(a1);
  CGContextSaveGState(a1);
  id v34 = objc_msgSend(v16, sel_systemGrayColor);
  id v35 = objc_msgSend(v34, sel_resolvedColorWithTraitCollection_, a3);

  CGFloat v36 = (CGColor *)objc_msgSend(v35, sel_CGColor);
  CGContextSetStrokeColorWithColor(a1, v36);

  CGContextSetLineWidth(a1, v13);
  v64.origin.CGFloat x = v53;
  v64.origin.CGFloat y = v52;
  v64.size.CGFloat width = v51;
  v64.size.CGFloat height = v25;
  double v50 = CGRectGetMinY(v64);
  v65.origin.CGFloat x = v53;
  v65.origin.CGFloat y = v52;
  v65.size.CGFloat width = v51;
  v65.size.CGFloat height = v25;
  double v37 = CGRectGetMinY(v65);
  long long v38 = *(_OWORD *)(v4 + 24);
  long long v54 = *(_OWORD *)(v4 + 8);
  long long v55 = v38;
  uint64_t v56 = *(void *)(v4 + 40);
  uint64_t v39 = MEMORY[0x263F8D8F0];
  sub_2411FEE80((uint64_t)&v54, (uint64_t)v57, (uint64_t)&qword_268CFAA48, (uint64_t)sub_2411FEEF4, MEMORY[0x263F8D8F0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_2411FEE1C);
  sub_2411FEE80((uint64_t)v57, (uint64_t)v58, (uint64_t)&qword_268CFAA48, (uint64_t)sub_2411FEEF4, v39, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_2411FEE1C);
  if (v59)
  {
    uint64_t v40 = MEMORY[0x263F8EE78];
  }
  else
  {
    if (*((double *)&v55 + 1) == 0.0)
    {
LABEL_14:
      __break(1u);
      return;
    }
    uint64_t v40 = sub_2411FA6E4(v58[1], v58[0], -*((double *)&v55 + 1));
  }
  uint64_t v41 = *(void *)(v40 + 16);
  swift_bridgeObjectRelease();
  double v42 = *(double *)(v4 + 120);
  if (v42 == 0.0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v41 <= 1) {
    uint64_t v43 = 1;
  }
  else {
    uint64_t v43 = v41;
  }
  uint64_t v44 = sub_2411FCAD4(1, 1, v50, v37 + v42 * (double)(v43 - 1), v42);
  uint64_t v45 = *(void *)(v44 + 16);
  if (v45)
  {
    uint64_t v46 = (double *)(v44 + 32);
    do
    {
      double v47 = *v46++;
      double v48 = v13 * 0.5 + v13 * ceil(v47 / v13);
      uint64_t v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = xmmword_24163A4F0;
      *(CGFloat *)(v49 + 32) = MinX;
      *(double *)(v49 + 40) = v48;
      *(CGFloat *)(v49 + 48) = MaxX;
      *(double *)(v49 + 56) = v48;
      sub_2416321A8();
      swift_bridgeObjectRelease();
      --v45;
    }
    while (v45);
  }
  swift_bridgeObjectRelease();
  CGContextRestoreGState(a1);
}

void sub_2411FB9C4(CGContext *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  uint64_t v10 = v9;
  sub_2411FDC94((uint64_t)&v25, a6, a7, a8, a9);
  v34[0] = v26;
  v34[1] = v27;
  v34[2] = v28;
  v34[3] = v29;
  v34[4] = v30;
  v34[5] = v31;
  uint64_t v24 = a5;
  sub_2411FBBC0(a3, a2, a4, a1, (CGFloat *)v34, a5);
  swift_getAtKeyPath();
  CGFloat x = v25.origin.x;
  sub_2411FEE1C(0, &qword_268D00F10, (uint64_t (*)(uint64_t))sub_2411FE9C4, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241637EE0;
  *(CGFloat *)(inited + 32) = x;
  long long v18 = *(_OWORD *)(v10 + 24);
  v32[0] = *(_OWORD *)(v10 + 8);
  v32[1] = v18;
  uint64_t v33 = *(void *)(v10 + 40);
  uint64_t v19 = v33;
  long long v20 = v32[0];
  LOBYTE(a5) = v18;
  sub_2411FEAA0((uint64_t)v32);
  sub_2411FEACC(*(id *)&x);
  uint64_t v21 = sub_2415DD7C0(inited, v20, *((uint64_t *)&v20 + 1), a5, v19);
  sub_2411FEADC((uint64_t)v32);
  swift_setDeallocating();
  sub_2411FEAA0((uint64_t)v32);
  sub_2411FE9C4();
  swift_arrayDestroy();
  if (*(void *)(v21 + 16))
  {
    unint64_t v22 = *(void *)(v21 + 32);
    char v23 = *(unsigned char *)(v21 + 40);
    sub_2411FBF28(CGRectMinXEdge, (uint64_t)&v25, *(CGFloat *)(v10 + 104));
    sub_2411FC098(v22, v23, a3, a1, &v25, v24);
  }
  swift_bridgeObjectRelease();
  sub_2411FEADC((uint64_t)v32);
  sub_2411FEB08(*(id *)&x);
}

uint64_t sub_2411FBBC0(uint64_t a1, uint64_t a2, uint64_t a3, CGContext *a4, CGFloat *a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v39 = a6;
  sub_2411FEB18();
  MEMORY[0x270FA5388](v11 - 8);
  double v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2416319D8();
  swift_retain();
  sub_2411FEBF4(v7);
  uint64_t v14 = sub_2411FD364((unint64_t)v13, a3, v7);
  sub_2411FEC40(v7);
  swift_release();
  long long v15 = *(_OWORD *)(v7 + 24);
  v40[0] = *(_OWORD *)(v7 + 8);
  v40[1] = v15;
  uint64_t v41 = *(void *)(v7 + 40);
  uint64_t v16 = v41;
  long long v17 = v40[0];
  char v18 = v15;
  sub_2411FEAA0((uint64_t)v40);
  uint64_t v19 = sub_2415DD7C0(v14, v17, *((uint64_t *)&v17 + 1), v18, v16);
  sub_2411FEADC((uint64_t)v40);
  swift_bridgeObjectRelease();
  double v20 = *(double *)(v7 + 104) * 9.0;
  CGFloat v21 = *a5;
  CGFloat v22 = a5[1];
  double v23 = a5[2];
  double v24 = a5[3];
  CGFloat v25 = *a5 - v20;
  double v26 = a5[5];
  CGFloat v37 = a5[4];
  CGFloat v35 = v26;
  double v27 = a5[7];
  CGFloat v38 = a5[6];
  CGFloat v36 = v27;
  double v28 = a5[8];
  CGFloat v29 = a5[9];
  double v30 = a5[10];
  double v31 = a5[11];
  v42[0] = v25;
  v42[1] = v22;
  v42[2] = v20 + v20 + v23;
  v42[3] = v24 + 0.0;
  void v42[4] = v37 - v20;
  v42[5] = v26;
  v42[6] = v20 + v20 + v38;
  v42[7] = v27 + 0.0;
  v42[8] = v28 - v20;
  v42[9] = v29;
  v42[10] = v20 + v20 + v30;
  v42[11] = v31 + 0.0;
  CGContextSaveGState(a4);
  sub_2411BFD54(0, (unint64_t *)&qword_268CFA2A0, MEMORY[0x263F8EF38], MEMORY[0x263F8E0F8]);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_24163A4F0;
  *(_OWORD *)(v32 + 32) = xmmword_24163B7E0;
  sub_241632198();
  swift_bridgeObjectRelease();
  CGContextSaveGState(a4);
  v43.origin.CGFloat x = v21;
  v43.origin.CGFloat y = v22;
  v43.size.CGFloat width = v23;
  v43.size.CGFloat height = v24;
  CGContextClipToRect(a4, v43);
  uint64_t v33 = v39;
  sub_2411FCD7C(v19, a4, v42, v39);
  CGContextRestoreGState(a4);
  v44.origin.CGFloat x = v28;
  v44.origin.CGFloat y = v29;
  v44.size.CGFloat width = v30;
  v44.size.CGFloat height = v31;
  CGContextClipToRect(a4, v44);
  sub_2411FCD7C(v19, a4, v42, v33);
  CGContextRestoreGState(a4);
  CGContextSaveGState(a4);
  v45.origin.CGFloat x = v37;
  v45.origin.CGFloat y = v35;
  v45.size.CGFloat width = v38;
  v45.size.CGFloat height = v36;
  CGContextClipToRect(a4, v45);
  sub_2411FCD7C(v19, a4, v42, v33);
  swift_bridgeObjectRelease();
  CGContextRestoreGState(a4);
  return sub_2411FECF4((uint64_t)v13, (uint64_t (*)(void))sub_2411FEB18);
}

void sub_2411FBF28(CGRectEdge edge@<W0>, uint64_t a2@<X8>, CGFloat a3@<D0>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  CGRect v26 = *(CGRect *)v3;
  memset(&slice, 0, sizeof(slice));
  memset(&remainder, 0, sizeof(remainder));
  CGRectDivide(v26, &slice, &remainder, a3, edge);
  CGPoint origin = slice.origin;
  CGFloat width = slice.size.width;
  CGFloat height = slice.size.height;
  CGFloat v9 = remainder.size.height;
  CGFloat v21 = remainder.size.width;
  CGRect v27 = *(CGRect *)(v3 + 32);
  memset(&slice, 0, sizeof(slice));
  CGPoint v22 = remainder.origin;
  memset(&remainder, 0, sizeof(remainder));
  CGRectDivide(v27, &slice, &remainder, a3, edge);
  CGFloat v10 = slice.size.width;
  CGFloat v11 = slice.size.height;
  CGPoint v18 = slice.origin;
  CGPoint v19 = remainder.origin;
  CGFloat v13 = remainder.size.width;
  CGFloat v12 = remainder.size.height;
  CGRect v28 = *(CGRect *)(v3 + 64);
  memset(&slice, 0, sizeof(slice));
  memset(&remainder, 0, sizeof(remainder));
  CGRectDivide(v28, &slice, &remainder, a3, edge);
  CGPoint v14 = remainder.origin;
  CGSize size = remainder.size;
  CGPoint v16 = slice.origin;
  CGSize v17 = slice.size;
  *(CGPoint *)a2 = origin;
  *(CGFloat *)(a2 + 16) = width;
  *(CGFloat *)(a2 + 24) = height;
  *(CGPoint *)(a2 + 32) = v18;
  *(CGFloat *)(a2 + 48) = v10;
  *(CGFloat *)(a2 + 56) = v11;
  *(CGPoint *)(a2 + 64) = v16;
  *(CGSize *)(a2 + 80) = v17;
  *(CGPoint *)(a2 + 96) = v22;
  *(CGFloat *)(a2 + 112) = v21;
  *(CGFloat *)(a2 + 120) = v9;
  *(CGPoint *)(a2 + 128) = v19;
  *(CGFloat *)(a2 + 144) = v13;
  *(CGFloat *)(a2 + 152) = v12;
  *(CGPoint *)(a2 + 160) = v14;
  *(CGSize *)(a2 + 176) = size;
}

void sub_2411FC098(unint64_t a1, char a2, uint64_t a3, void *a4, CGRect *a5, uint64_t a6)
{
  if (a2)
  {
    if (a1 >= 2) {
      return;
    }
    CGSize v17 = (char *)objc_msgSend(*(id *)(a3 + *(int *)(type metadata accessor for CycleDay() + 20)), sel_fertileWindowLevel);
    if ((unint64_t)(v17 - 1) >= 2)
    {
      if (v17 == (char *)3)
      {
        if (qword_26B0131F0 != -1) {
          swift_once();
        }
        id v20 = (id)qword_26B0181A0;
        a4 = (void *)sub_241631CC8();
        CGColorRef color = (CGColorRef)objc_msgSend(self, sel_colorNamed_inBundle_compatibleWithTraitCollection_, a4, v20, 0);

        if (!color)
        {
          __break(1u);
          goto LABEL_19;
        }
      }
      else
      {
        CGColorRef color = (CGColorRef)objc_msgSend(self, sel_systemBackgroundColor);
      }
    }
    else
    {
      if (qword_26B0131F0 != -1) {
        swift_once();
      }
      id v18 = (id)qword_26B0181A0;
      a4 = (void *)sub_241631CC8();
      CGColorRef color = (CGColorRef)objc_msgSend(self, sel_colorNamed_inBundle_compatibleWithTraitCollection_, a4, v18, 0);

      if (!color)
      {
        __break(1u);
LABEL_10:
        if (v7 + -1.0 > v12)
        {
          double x = a5[2].origin.x;
          CGFloat y = a5[2].origin.y;
          CGFloat width = a5[2].size.width;
          CGFloat height = a5[2].size.height;
          goto LABEL_12;
        }
LABEL_19:
        CGFloat v21 = a5[1].origin.x;
        CGFloat v22 = a5[1].origin.y;
        CGFloat v23 = a5[1].size.width;
        CGFloat v24 = a5[1].size.height;
        v43.origin.double x = v21;
        v43.origin.CGFloat y = v22;
        v43.size.CGFloat width = v23;
        v43.size.CGFloat height = v24;
        double MinY = CGRectGetMinY(v43);
        v44.origin.double x = v21;
        v44.origin.CGFloat y = v22;
        v44.size.CGFloat width = v23;
        v44.size.CGFloat height = v24;
        double MidY = MinY + CGRectGetHeight(v44) * v7;
        goto LABEL_20;
      }
    }
    id v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82770]), sel_initForTextStyle_, *MEMORY[0x263F83570]);
    objc_msgSend(v29, sel_scaledValueForValue_, 8.0);
    double v31 = v30;

    if (qword_26B0131F0 != -1) {
      swift_once();
    }
    id v32 = (id)qword_26B0181A0;
    uint64_t v33 = (void *)sub_241631CC8();
    id v34 = objc_msgSend(self, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v33, v32, 0);

    if (!v34)
    {
      __break(1u);
      return;
    }
    CGFloat v35 = a5[1].origin.x;
    CGFloat v36 = a5[1].origin.y;
    CGFloat v37 = a5[1].size.width;
    CGFloat v38 = a5[1].size.height;
    id v39 = objc_msgSend(v34, sel_resolvedColorWithTraitCollection_, a6);

    id v40 = [(CGColor *)color resolvedColorWithTraitCollection:a6];
    sub_2411FE458(v39, v40, v35, v36, v37, v38, v31, 0.5, 0.9);

    goto LABEL_26;
  }
  double v7 = *(double *)&a1;
  id v11 = objc_msgSend(*v6, sel_resolvedColorWithTraitCollection_, a6);
  CGColorRef color = (CGColorRef)objc_msgSend(v11, sel_CGColor);

  double v12 = 2.22044605e-16;
  if (v7 >= 2.22044605e-16) {
    goto LABEL_10;
  }
  double x = a5->origin.x;
  CGFloat y = a5->origin.y;
  CGFloat width = a5->size.width;
  CGFloat height = a5->size.height;
LABEL_12:
  double MidY = CGRectGetMidY(*(CGRect *)&x);
LABEL_20:
  id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82770]), sel_initForTextStyle_, *MEMORY[0x263F83570]);
  objc_msgSend(v26, sel_scaledValueForValue_, 8.0);
  double v28 = v27;

  CGContextSetFillColorWithColor((CGContextRef)a4, color);
  v45.origin.double x = CGRectGetMidX(a5[1]) - v28 * 0.5;
  v45.origin.CGFloat y = MidY - v28 * 0.5;
  v45.size.CGFloat width = v28;
  v45.size.CGFloat height = v28;
  CGContextFillEllipseInRect((CGContextRef)a4, v45);
LABEL_26:
}

uint64_t sub_2411FC55C()
{
  return sub_241631D48();
}

void sub_2411FC5A8()
{
}

double sub_2411FC5F4()
{
  double v1 = *(double *)(v0 + 80);
  double v2 = *(double *)(v0 + 96);
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82770]), sel_initForTextStyle_, *MEMORY[0x263F83570]);
  objc_msgSend(v3, sel_scaledValueForValue_, 8.0);
  double v5 = v4;

  return v2 + v1 + v5;
}

double sub_2411FC674()
{
  return *(double *)(v0 + 104);
}

void sub_2411FC67C(double a1)
{
  *(double *)(v1 + 104) = a1;
}

double sub_2411FC684()
{
  return *(double *)(v0 + 112);
}

void sub_2411FC68C(double a1)
{
  *(double *)(v1 + 112) = a1;
}

void sub_2411FC694()
{
}

void sub_2411FC6E0(CGContext *a1, void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  long long v9 = v6[5];
  long long v31 = v6[4];
  long long v32 = v9;
  long long v10 = v6[7];
  long long v33 = v6[6];
  long long v34 = v10;
  long long v11 = v6[1];
  long long v27 = *v6;
  long long v28 = v11;
  long long v12 = v6[3];
  long long v29 = v6[2];
  long long v30 = v12;
  sub_2411FDC94((uint64_t)&v19, a3, a4, a5, a6);
  long long v13 = v19;
  long long v14 = v20;
  long long v19 = v21;
  long long v20 = v22;
  long long v21 = v23;
  long long v22 = v24;
  long long v23 = v25;
  long long v24 = v26;
  uint64_t v15 = MEMORY[0x263F8D310];
  uint64_t v16 = MEMORY[0x263F8D8F0];
  sub_2411FEE80((uint64_t)&v30 + 8, (uint64_t)v35, (uint64_t)&qword_26B010670, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_2411BFD54);
  sub_2411FEE80((uint64_t)v35, (uint64_t)v36, (uint64_t)&qword_26B010670, v15, v16, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_2411BFD54);
  if (v36[1])
  {
    CGSize v17 = (void *)sub_241631CC8();
    unint64_t v18 = sub_24134E378();
    sub_24152F06C(v17, v18, a1, a2, 0, *(CGFloat *)&v13, *((CGFloat *)&v13 + 1), *(CGFloat *)&v14, *((CGFloat *)&v14 + 1), *((double *)&v31 + 1), *(double *)&v32, *((double *)&v32 + 1), *(double *)&v33);
    swift_bridgeObjectRelease();
  }
  sub_2411FAF74(a1, (double *)&v19, a2);
}

void sub_2411FC860(CGContext *a1, void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  long long v9 = v6[5];
  long long v33 = v6[4];
  long long v34 = v9;
  long long v10 = v6[7];
  long long v35 = v6[6];
  long long v36 = v10;
  long long v11 = v6[1];
  long long v29 = *v6;
  long long v30 = v11;
  long long v12 = v6[3];
  long long v31 = v6[2];
  long long v32 = v12;
  sub_2411FDC94((uint64_t)&v25, a3, a4, a5, a6);
  CGFloat v13 = v25;
  CGFloat v14 = v26;
  CGFloat v16 = v27;
  CGFloat v15 = v28;
  uint64_t v17 = MEMORY[0x263F8D310];
  uint64_t v18 = MEMORY[0x263F8D8F0];
  sub_2411FEE80((uint64_t)&v32 + 8, (uint64_t)v37, (uint64_t)&qword_26B010670, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_2411BFD54);
  sub_2411FEE80((uint64_t)v37, (uint64_t)&v25, (uint64_t)&qword_26B010670, v17, v18, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_2411BFD54);
  if (v26 != 0.0)
  {
    long long v19 = (void *)sub_241631CC8();
    unint64_t v20 = sub_24134E378();
    double v21 = *((double *)&v33 + 1);
    long long v23 = v34;
    double v22 = *(double *)&v35;
    id v24 = objc_msgSend(self, sel_systemBackgroundColor);
    sub_24152F06C(v19, v20, a1, a2, v24, v13, v14, v16, v15, v21, *(double *)&v23, *((double *)&v23 + 1), v22);
    swift_bridgeObjectRelease();
  }
}

void sub_2411FC9FC(CGContext *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, uint64_t a6, uint64_t a7, void *a8)
{
  long long v11 = v8[5];
  long long v23 = v8[4];
  long long v24 = v11;
  long long v12 = v8[7];
  long long v25 = v8[6];
  long long v26 = v12;
  long long v13 = v8[1];
  long long v19 = *v8;
  long long v20 = v13;
  long long v14 = v8[3];
  long long v21 = v8[2];
  long long v22 = v14;
  sub_2411FDC94((uint64_t)&v15, a2, a3, a4, a5);
  CGRect v15 = v16;
  CGRect v16 = v17;
  CGRect v17 = v18;
  sub_2411FB43C(a1, &v15, a8);
}

void sub_2411FCA88(CGContext *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
}

uint64_t sub_2411FCAD4(uint64_t result, uint64_t a2, double a3, double a4, double a5)
{
  if (result < 0)
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
  }
  else
  {
    uint64_t v5 = result;
    if (result)
    {
      uint64_t result = sub_2411FD178(a2, (uint64_t)v25, a3, a4, a5);
      unint64_t v6 = 0;
      double v7 = *(double *)v25;
      double v8 = *(double *)&v25[1];
      double v9 = *(double *)&v25[2];
      uint64_t v10 = v25[3];
      char v11 = v26;
      double v12 = v27;
      char v13 = v28 & 1;
      uint64_t v14 = MEMORY[0x263F8EE78];
      uint64_t v15 = MEMORY[0x263F8EE78];
      while (1)
      {
        double v16 = v12;
        BOOL v17 = v12 <= v8;
        if (v9 > 0.0) {
          BOOL v17 = v8 <= v12;
        }
        if (v17)
        {
          if ((v12 != v8) | v13 & 1) {
            goto LABEL_34;
          }
          if (v11)
          {
            char v13 = 1;
LABEL_12:
            char v11 = 1;
            goto LABEL_17;
          }
          if (v10 == 0x8000000000000000)
          {
LABEL_34:
            swift_release();
            return v14;
          }
          char v11 = 0;
          char v13 = 1;
        }
        else
        {
          if (v11)
          {
            double v12 = v9 + v12;
            goto LABEL_12;
          }
          if (__OFADD__(v10++, 1))
          {
            __break(1u);
            goto LABEL_39;
          }
          char v11 = 0;
          double v12 = v7 + (double)v10 * v9;
        }
LABEL_17:
        uint64_t v19 = *(void *)(v15 + 16);
        if (v19 >= v5)
        {
          if (v6 >= v19) {
            goto LABEL_40;
          }
          uint64_t v22 = *(void *)(v15 + 8 * v6 + 32);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_24149DD04(0, *(void *)(v14 + 16) + 1, 1);
          }
          unint64_t v24 = *(void *)(v14 + 16);
          unint64_t v23 = *(void *)(v14 + 24);
          if (v24 >= v23 >> 1) {
            sub_24149DD04(v23 > 1, v24 + 1, 1);
          }
          *(void *)(v14 + 16) = v24 + 1;
          *(void *)(v14 + 8 * v24 + 32) = v22;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = sub_2414A13A4(v15);
            uint64_t v15 = result;
          }
          if (v6 >= *(void *)(v15 + 16)) {
            goto LABEL_41;
          }
          *(double *)(v15 + 8 * v6 + 32) = v16;
          if ((uint64_t)(v6 + 1) < v5) {
            ++v6;
          }
          else {
            unint64_t v6 = 0;
          }
        }
        else
        {
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0) {
            uint64_t result = sub_24149DD04(0, v19 + 1, 1);
          }
          unint64_t v21 = *(void *)(v15 + 16);
          unint64_t v20 = *(void *)(v15 + 24);
          if (v21 >= v20 >> 1) {
            uint64_t result = sub_24149DD04(v20 > 1, v21 + 1, 1);
          }
          *(void *)(v15 + 16) = v21 + 1;
          *(double *)(v15 + 8 * v21 + 32) = v16;
        }
      }
    }
    return sub_24157A8BC(a2, a3, a4, a5);
  }
  return result;
}

void sub_2411FCD7C(uint64_t a1, CGContext *a2, double *a3, uint64_t a4)
{
  CGFloat v9 = a3[4];
  CGFloat v10 = a3[5];
  CGFloat v11 = a3[6];
  CGFloat v12 = a3[7];
  v41.origin.double x = v9;
  v41.origin.CGFloat y = v10;
  v41.size.CGFloat width = v11;
  v41.size.CGFloat height = v12;
  double MinX = CGRectGetMinX(v41);
  double v14 = *(double *)(v4 + 104);
  CGContextSaveGState(a2);
  id v39 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824C0]), sel_init);
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82770]), sel_initForTextStyle_, *MEMORY[0x263F83570]);
  objc_msgSend(v15, sel_scaledValueForValue_, 2.0);
  double v17 = v16;

  objc_msgSend(v39, sel_setLineWidth_, v17);
  objc_msgSend(v39, sel_setLineCapStyle_, 1);
  objc_msgSend(v39, sel_setLineJoinStyle_, 2);
  id v18 = objc_msgSend(*(id *)v4, sel_resolvedColorWithTraitCollection_, a4);
  uint64_t v19 = (CGColor *)objc_msgSend(v18, sel_CGColor);

  CGContextSetStrokeColorWithColor(a2, v19);
  v42.origin.double x = v9;
  v42.origin.CGFloat y = v10;
  v42.size.CGFloat width = v11;
  v42.size.CGFloat height = v12;
  double MinY = CGRectGetMinY(v42);
  v43.origin.double x = v9;
  v43.origin.CGFloat y = v10;
  v43.size.CGFloat width = v11;
  v43.size.CGFloat height = v12;
  double Height = CGRectGetHeight(v43);
  unint64_t v22 = *(void *)(a1 + 16);
  if (!v22) {
    goto LABEL_27;
  }
  double v23 = Height;
  double v24 = MinX + v14 * 0.5;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  unint64_t v25 = 0;
  char v26 = 0;
LABEL_3:
  if (v25 <= v22) {
    unint64_t v27 = v22;
  }
  else {
    unint64_t v27 = v25;
  }
  uint64_t v28 = -(uint64_t)v27;
  long long v29 = (double *)(a1 + 40 + 16 * v25++);
  while (1)
  {
    if (v28 + v25 == 1)
    {
      __break(1u);
      return;
    }
    double v30 = *(v29 - 1);
    int v31 = *(unsigned __int8 *)v29;
    if (v31 != 1)
    {
      if (v30 >= 2.22044605e-16)
      {
        if (v30 + -1.0 <= 2.22044605e-16)
        {
          double MidY = MinY + v23 * v30;
          CGFloat v37 = v39;
          if ((v26 & 1) == 0) {
            goto LABEL_24;
          }
LABEL_21:
          objc_msgSend(v37, sel_currentPoint);
          if (vabdd_f64(v24, v38) <= v14 * 9.0) {
            objc_msgSend(v39, sel_addLineToPoint_, v24, MidY);
          }
          objc_msgSend(v39, sel_stroke);
          objc_msgSend(v39, sel_removeAllPoints);
          CGFloat v37 = v39;
LABEL_24:
          objc_msgSend(v37, sel_moveToPoint_, v24, MidY);
          if (v25 == v22) {
            goto LABEL_26;
          }
LABEL_25:
          char v26 = v31 ^ 1;
          double v24 = v14 + v24;
          goto LABEL_3;
        }
        double v32 = a3[8];
        uint64_t v33 = *((void *)a3 + 9);
        uint64_t v34 = *((void *)a3 + 10);
        uint64_t v35 = *((void *)a3 + 11);
      }
      else
      {
        double v32 = *a3;
        uint64_t v33 = *((void *)a3 + 1);
        uint64_t v34 = *((void *)a3 + 2);
        uint64_t v35 = *((void *)a3 + 3);
      }
      double MidY = CGRectGetMidY(*(CGRect *)&v32);
      CGFloat v37 = v39;
      if ((v26 & 1) == 0) {
        goto LABEL_24;
      }
      goto LABEL_21;
    }
    if (*(void *)&v30 < 2uLL) {
      break;
    }
    double v24 = v14 + v24;
    ++v25;
    v29 += 2;
    if (v25 - v22 == 1) {
      goto LABEL_26;
    }
  }
  objc_msgSend(v39, sel_stroke);
  objc_msgSend(v39, sel_removeAllPoints);
  if (v25 != v22) {
    goto LABEL_25;
  }
LABEL_26:
  swift_bridgeObjectRelease();
LABEL_27:
  objc_msgSend(v39, sel_stroke, Height);
  objc_msgSend(v39, sel_removeAllPoints);
  CGContextRestoreGState(a2);
}

uint64_t sub_2411FD104(double a1, double a2, double a3)
{
  uint64_t result = 0;
  char v4 = 0;
  uint64_t v5 = 0;
  double v6 = a1;
  do
  {
    BOOL v8 = v6 <= a2;
    if (a3 > 0.0) {
      BOOL v8 = v6 >= a2;
    }
    if (v8)
    {
      if ((v6 != a2) | v4 & 1) {
        return result;
      }
      char v4 = 1;
    }
    else
    {
      BOOL v7 = __OFADD__(v5++, 1);
      if (v7) {
        goto LABEL_12;
      }
      double v6 = a1 + (double)v5 * a3;
    }
    BOOL v7 = __OFADD__(result++, 1);
  }
  while (!v7);
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_2411FD178@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  if (result < 1)
  {
    LOBYTE(v7) = 0;
    uint64_t v5 = 0;
    double v6 = a3;
  }
  else
  {
    uint64_t v5 = 0;
    double v6 = a3;
    while (1)
    {
      BOOL v7 = v6 <= a4;
      if (a5 > 0.0) {
        BOOL v7 = v6 >= a4;
      }
      if (v7) {
        break;
      }
      if (v5 == 0x7FFFFFFFFFFFFFFFLL)
      {
LABEL_26:
        __break(1u);
        return result;
      }
      double v6 = a3 + (double)++v5 * a5;
      if (v5 >= result) {
        goto LABEL_24;
      }
    }
    BOOL v8 = v6 != a4;
    if (v6 == a4)
    {
      if (v5 + 1 >= result)
      {
        LOBYTE(v7) = 1;
        goto LABEL_24;
      }
      double v9 = v6;
      while (1)
      {
        BOOL v10 = v9 <= a4;
        if (a5 > 0.0) {
          BOOL v10 = v9 >= a4;
        }
        if (v10) {
          break;
        }
        if (v5 == 0x7FFFFFFFFFFFFFFFLL) {
          goto LABEL_26;
        }
        uint64_t v11 = v5 + 1;
        double v9 = a3 + (double)(v5 + 1) * a5;
        uint64_t v12 = v5 + 2;
        ++v5;
        if (v12 >= result)
        {
          double v6 = v9;
          uint64_t v5 = v11;
          goto LABEL_24;
        }
      }
      BOOL v8 = v9 != a4;
    }
    else
    {
      double v9 = v6;
    }
    LOBYTE(v7) = !v8;
    if (v6 == a4) {
      LOBYTE(v7) = 1;
    }
    double v6 = v9;
  }
LABEL_24:
  *(double *)a2 = a3;
  *(double *)(a2 + 8) = a4;
  *(double *)(a2 + 16) = a5;
  *(void *)(a2 + 24) = v5;
  *(unsigned char *)(a2 + 32) = 0;
  *(double *)(a2 + 40) = v6;
  *(unsigned char *)(a2 + 48) = v7;
  return result;
}

uint64_t sub_2411FD288(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v6 = MEMORY[0x263F8EE78];
    sub_241632F38();
    char v4 = (double *)(a1 + 32);
    do
    {
      double v5 = *v4++;
      sub_2415B59EC(v5);
      sub_241631CC8();
      swift_bridgeObjectRelease();
      sub_241632F18();
      sub_241632F48();
      sub_241632F58();
      sub_241632F28();
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

uint64_t sub_2411FD364(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v78 = a3;
  sub_2411FEC8C();
  uint64_t v81 = v5;
  MEMORY[0x270FA5388](v5);
  id v70 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  id v69 = (char *)&v58 - v8;
  sub_2411FEB18();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  id v68 = (char *)&v58 - v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v79 = (uint64_t)&v58 - v16;
  uint64_t v73 = type metadata accessor for CycleChartDay();
  MEMORY[0x270FA5388](v73);
  id v72 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_241631AC8();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v67 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  id v66 = (char *)&v58 - v22;
  MEMORY[0x270FA5388](v23);
  unint64_t v25 = (char *)&v58 - v24;
  uint64_t v80 = v10;
  unint64_t v26 = a1 + *(int *)(v10 + 36);
  uint64_t v27 = sub_2411FEBAC((unint64_t *)&unk_268CFC5C0, MEMORY[0x263F090E8]);
  unint64_t v71 = v26;
  uint64_t v65 = v27;
  sub_241632C68();
  uint64_t v28 = v85;
  uint64_t result = MEMORY[0x263F8EE78];
  if (v85)
  {
    uint64_t v85 = MEMORY[0x263F8EE78];
    double v30 = &v85;
    sub_24149DD58(0, v28 & ~(v28 >> 63), 0);
    int v31 = *(void (**)(char *, uint64_t *, uint64_t))(v19 + 16);
    id v74 = v25;
    id v82 = v31;
    uint64_t v83 = v19 + 16;
    uint64_t result = ((uint64_t (*)(char *, unint64_t, uint64_t))v31)(v25, a1, v18);
    if ((v28 & 0x8000000000000000) == 0)
    {
      uint64_t v32 = v28;
      CGRect v61 = (char *)a1;
      uint64_t v64 = *(void *)(v78 + 48);
      uint64_t v78 = v19 + 32;
      uint64_t v33 = (void (**)(char *, uint64_t *))(v19 + 8);
      id v63 = *(id *)(a2 + 16);
      uint64_t v62 = *(void *)(a2 + 24);
      uint64_t v34 = (uint64_t *)v74;
      CGRect v60 = v12;
      char v59 = v33;
      while (v32)
      {
        uint64_t v75 = v32;
        uint64_t v35 = (uint64_t)v72;
        v82(v72, v34, v18);
        id v36 = objc_msgSend(v63, sel_dayViewModelAtIndex_, sub_241631A88());
        *(void *)(v35 + *(int *)(type metadata accessor for CycleDay() + 20)) = v36;
        sub_2416315D8();
        swift_getAtKeyPath();
        sub_2411FECF4(v35, (uint64_t (*)(void))type metadata accessor for CycleChartDay);
        uint64_t v37 = v84;
        uint64_t v38 = v85;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24149DD58(0, *(void *)(v38 + 16) + 1, 1);
          uint64_t v38 = v85;
        }
        unint64_t v25 = v61;
        a1 = *(void *)(v38 + 16);
        unint64_t v39 = *(void *)(v38 + 24);
        if (a1 >= v39 >> 1)
        {
          sub_24149DD58(v39 > 1, a1 + 1, 1);
          uint64_t v38 = v85;
        }
        *(void *)(v38 + 16) = a1 + 1;
        *(void *)(v38 + 8 * a1 + 32) = v37;
        uint64_t v40 = sub_2411FEBAC((unint64_t *)&qword_26B0121C0, MEMORY[0x263F090E8]);
        unint64_t v41 = v71;
        double v30 = (uint64_t *)v18;
        uint64_t v77 = v40;
        if ((sub_241631BD8() & 1) == 0) {
          goto LABEL_16;
        }
        uint64_t v42 = v81;
        CGRect v43 = v69;
        CGRect v44 = &v69[*(int *)(v81 + 48)];
        uint64_t v45 = v18;
        double v30 = (uint64_t *)v18;
        uint64_t v46 = (void (*)(char *, unint64_t, uint64_t *))v82;
        v82(v69, (uint64_t *)v25, v45);
        id v76 = v44;
        v46(v44, v41, v30);
        double v47 = v70;
        double v48 = &v70[*(int *)(v42 + 48)];
        v46(v70, (unint64_t)v43, v30);
        v46(v48, (unint64_t)v44, v30);
        uint64_t v49 = *(void (**)(char *, char *, uint64_t *))v78;
        uint64_t v50 = (uint64_t)v68;
        (*(void (**)(char *, char *, uint64_t *))v78)(v68, v47, v30);
        CGFloat v51 = (char *)*v59;
        (*v59)(v48, v30);
        CGFloat v52 = &v47[*(int *)(v81 + 48)];
        CGFloat v53 = v43;
        uint64_t v54 = v79;
        v49(v47, v53, v30);
        v49(v52, v76, v30);
        uint64_t v55 = v50 + *(int *)(v80 + 36);
        id v76 = (char *)v49;
        v49((char *)v55, v52, v30);
        unint64_t v25 = v51;
        uint64_t v56 = v47;
        uint64_t v12 = v60;
        ((void (*)(char *, uint64_t *))v51)(v56, v30);
        sub_2411FED54(v50, v54);
        uint64_t v34 = (uint64_t *)v74;
        LOBYTE(v51) = sub_241631BD8();
        a1 = (unint64_t)v67;
        v82(v67, v34, (uint64_t)v30);
        sub_2411FEDB8(v54, (uint64_t)v12);
        if ((v51 & 1) == 0) {
          goto LABEL_17;
        }
        char v57 = sub_241631BB8();
        sub_2411FECF4((uint64_t)v12, (uint64_t (*)(void))sub_2411FEB18);
        uint64_t result = ((uint64_t (*)(unint64_t, uint64_t *))v25)(a1, v30);
        if ((v57 & 1) == 0) {
          goto LABEL_18;
        }
        uint64_t v18 = (uint64_t)v30;
        sub_2411FECF4(v79, (uint64_t (*)(void))sub_2411FEB18);
        uint64_t v84 = 1;
        a1 = (unint64_t)v66;
        double v30 = v34;
        sub_241632C58();
        ((void (*)(uint64_t *, uint64_t))v25)(v34, v18);
        ((void (*)(uint64_t *, unint64_t, uint64_t))v76)(v34, a1, v18);
        uint64_t v32 = v75 - 1;
        if (v75 == 1)
        {
          ((void (*)(uint64_t *, uint64_t))v25)(v34, v18);
          return v85;
        }
      }
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      sub_2411FECF4((uint64_t)v12, (uint64_t (*)(void))sub_2411FEB18);
      uint64_t result = ((uint64_t (*)(unint64_t, uint64_t *))v25)(a1, v30);
LABEL_18:
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

unint64_t sub_2411FDB38()
{
  sub_2411FEE1C(0, (unint64_t *)&qword_268CFA900, (uint64_t (*)(uint64_t))sub_2411E0CA8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  uint64_t v1 = (void **)MEMORY[0x263F814F0];
  *(_OWORD *)(inited + 16) = xmmword_24163A4F0;
  uint64_t v2 = *v1;
  *(void *)(inited + 32) = v2;
  id v3 = (void *)*MEMORY[0x263F835B8];
  uint64_t v4 = *MEMORY[0x263F81788];
  uint64_t v5 = *MEMORY[0x263F81840];
  id v6 = v2;
  id v7 = v3;
  id v8 = sub_2415D17B8((uint64_t)v7, 0x8000, v4, v5, 0);

  uint64_t v9 = sub_2411B9D00(0, &qword_26B012140);
  *(void *)(inited + 40) = v8;
  uint64_t v10 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 72) = v10;
  uint64_t v11 = self;
  id v12 = v10;
  id v13 = objc_msgSend(v11, sel_tertiaryLabelColor);
  *(void *)(inited + 104) = sub_2411B9D00(0, (unint64_t *)&qword_268CFA910);
  *(void *)(inited + 80) = v13;
  return sub_2414E42B8(inited);
}

void sub_2411FDC94(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  v50[2] = *MEMORY[0x263EF8340];
  uint64_t v10 = MEMORY[0x263F8D310];
  uint64_t v11 = MEMORY[0x263F8D8F0];
  sub_2411FEE80((uint64_t)(v5 + 7), (uint64_t)v49, (uint64_t)&qword_26B010670, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_2411BFD54);
  sub_2411FEE80((uint64_t)v49, (uint64_t)v50, (uint64_t)&qword_26B010670, v10, v11, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_2411BFD54);
  if (v50[1]) {
    id v12 = (void *)sub_241631CC8();
  }
  else {
    id v12 = 0;
  }
  double v13 = v5[14];
  double v14 = v5[9];
  double v15 = v5[10];
  double v17 = v5[11];
  double v16 = v5[12];
  sub_24134E378();
  if (v12)
  {
    type metadata accessor for Key(0);
    sub_2411FEBAC(&qword_268CFFFF0, type metadata accessor for Key);
    uint64_t v18 = (void *)sub_241631B18();
    objc_msgSend(v12, sel_boundingRectWithSize_options_attributes_context_, 1, v18, 0, v13 - v15 - v16, 1.79769313e308);
    double v20 = v19;

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    double v20 = 0.0;
  }
  memset(&slice, 0, sizeof(slice));
  memset(&remainder, 0, sizeof(remainder));
  v51.origin.CGFloat x = a2;
  v51.origin.CGFloat y = a3;
  v51.size.CGFloat width = a4;
  v51.size.CGFloat height = a5;
  CGRectDivide(v51, &slice, &remainder, v17 + v14 + v20, CGRectMinYEdge);
  CGPoint recta = slice.origin;
  CGFloat height = slice.size.height;
  CGFloat width = slice.size.width;
  CGFloat x = remainder.origin.x;
  CGFloat y = remainder.origin.y;
  CGFloat v24 = remainder.size.width;
  CGFloat v25 = remainder.size.height;
  uint64_t v26 = *MEMORY[0x263F835B8];
  id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82770]), sel_initForTextStyle_, *MEMORY[0x263F835B8]);
  objc_msgSend(v27, sel_scaledValueForValue_, 32.0);
  CGFloat v29 = v28;

  memset(&slice, 0, sizeof(slice));
  memset(&remainder, 0, sizeof(remainder));
  v52.origin.CGFloat x = x;
  v52.origin.CGFloat y = y;
  v52.size.CGFloat width = v24;
  v52.size.CGFloat height = v25;
  CGRectDivide(v52, &slice, &remainder, v29, CGRectMinYEdge);
  CGPoint origin = slice.origin;
  CGFloat v30 = slice.size.width;
  CGFloat v31 = slice.size.height;
  CGFloat v32 = remainder.origin.x;
  CGFloat v33 = remainder.origin.y;
  CGFloat v34 = remainder.size.width;
  CGFloat v35 = remainder.size.height;
  id v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82770]), sel_initForTextStyle_, v26);
  objc_msgSend(v36, sel_scaledValueForValue_, 32.0);
  CGFloat v38 = v37;

  memset(&slice, 0, sizeof(slice));
  memset(&remainder, 0, sizeof(remainder));
  v53.origin.CGFloat x = v32;
  v53.origin.CGFloat y = v33;
  v53.size.CGFloat width = v34;
  v53.size.CGFloat height = v35;
  CGRectDivide(v53, &slice, &remainder, v38, CGRectMaxYEdge);
  CGPoint v39 = remainder.origin;
  CGSize size = remainder.size;
  CGPoint v41 = slice.origin;
  CGSize v42 = slice.size;
  *(CGPoint *)a1 = recta;
  *(CGFloat *)(a1 + 16) = width;
  *(CGFloat *)(a1 + 24) = height;
  *(CGPoint *)(a1 + 32) = origin;
  *(CGFloat *)(a1 + 48) = v30;
  *(CGFloat *)(a1 + 56) = v31;
  *(CGPoint *)(a1 + 64) = v39;
  *(CGSize *)(a1 + 80) = size;
  *(CGPoint *)(a1 + 96) = v41;
  *(CGSize *)(a1 + 112) = v42;
}

unint64_t sub_2411FDFEC()
{
  sub_2411FEE1C(0, (unint64_t *)&qword_268CFA900, (uint64_t (*)(uint64_t))sub_2411E0CA8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  uint64_t v1 = (void **)MEMORY[0x263F814F0];
  *(_OWORD *)(inited + 16) = xmmword_24163A4F0;
  uint64_t v2 = *v1;
  *(void *)(inited + 32) = v2;
  uint64_t v3 = *MEMORY[0x263F835F0];
  uint64_t v4 = *MEMORY[0x263F81788];
  uint64_t v5 = *MEMORY[0x263F81840];
  id v6 = v2;
  id v7 = sub_2415D17B8(v3, 0x8000, v4, v5, 0);
  uint64_t v8 = sub_2411B9D00(0, &qword_26B012140);
  *(void *)(inited + 40) = v7;
  uint64_t v9 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v8;
  *(void *)(inited + 72) = v9;
  uint64_t v10 = self;
  id v11 = v9;
  id v12 = objc_msgSend(v10, sel_secondaryLabelColor);
  *(void *)(inited + 104) = sub_2411B9D00(0, (unint64_t *)&qword_268CFA910);
  *(void *)(inited + 80) = v12;
  return sub_2414E42B8(inited);
}

void sub_2411FE140(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  sub_2411FDB38();
  type metadata accessor for Key(0);
  sub_2411FEBAC(&qword_268CFFFF0, type metadata accessor for Key);
  id v11 = (void *)sub_241631B18();
  objc_msgSend(a1, sel_sizeWithAttributes_, v11);
  double v13 = v12;
  double v15 = v14;

  v31.origin.CGFloat x = a2;
  v31.origin.CGFloat y = a3;
  v31.size.CGFloat width = a4;
  v31.size.CGFloat height = a5;
  double v16 = CGRectGetMinX(v31) + *(double *)(v5 + 80);
  v32.origin.CGFloat x = a2;
  v32.origin.CGFloat y = a3;
  v32.size.CGFloat width = a4;
  v32.size.CGFloat height = a5;
  CGFloat v17 = CGRectGetMidY(v32) + v15 * -0.5;
  uint64_t v18 = (void *)sub_241631B18();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_drawAtPoint_withAttributes_, v18, v16, v17);

  double v19 = (void *)*MEMORY[0x263F835B8];
  uint64_t v20 = *MEMORY[0x263F81788];
  uint64_t v21 = *MEMORY[0x263F81840];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  id v22 = v19;
  id v23 = sub_2415D17B8((uint64_t)v22, 0x8000, v20, v21, 0);

  id v24 = objc_msgSend(self, sel_configurationWithFont_scale_, v23, 1);
  CGFloat v25 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  id v26 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v25, v24);

  if (v26)
  {
    id v29 = objc_msgSend(v26, sel_imageWithRenderingMode_, 2);

    if (v29)
    {
      v33.origin.CGFloat x = a2;
      v33.origin.CGFloat y = a3;
      v33.size.CGFloat width = a4;
      v33.size.CGFloat height = a5;
      double MidY = CGRectGetMidY(v33);
      objc_msgSend(v29, sel_size);
      objc_msgSend(v29, sel_drawAtPoint_, v13 + v16, MidY + v28 * -0.5);
    }
  }
}

void sub_2411FE458(void *a1, void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, double a7, double a8, double a9)
{
  CGFloat v17 = (1.0 - a9) * CGRectGetHeight(*(CGRect *)&a3);
  v26.origin.CGFloat x = a3;
  v26.origin.CGFloat y = a4;
  v26.size.CGFloat width = a5;
  v26.size.CGFloat height = a6;
  CGRect v27 = CGRectInset(v26, 0.0, v17);
  CGFloat x = v27.origin.x;
  CGFloat y = v27.origin.y;
  CGFloat width = v27.size.width;
  CGFloat height = v27.size.height;
  id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824C0]), sel_init);
  v28.origin.CGFloat x = x;
  v28.origin.CGFloat y = y;
  v28.size.CGFloat width = width;
  v28.size.CGFloat height = height;
  double MidX = CGRectGetMidX(v28);
  v29.origin.CGFloat x = x;
  v29.origin.CGFloat y = y;
  v29.size.CGFloat width = width;
  v29.size.CGFloat height = height;
  objc_msgSend(v24, sel_moveToPoint_, MidX, CGRectGetMinY(v29));
  v30.origin.CGFloat x = x;
  v30.origin.CGFloat y = y;
  v30.size.CGFloat width = width;
  v30.size.CGFloat height = height;
  double v23 = CGRectGetMidX(v30);
  v31.origin.CGFloat x = x;
  v31.origin.CGFloat y = y;
  v31.size.CGFloat width = width;
  v31.size.CGFloat height = height;
  objc_msgSend(v24, sel_addLineToPoint_, v23, CGRectGetMaxY(v31));
  objc_msgSend(v24, sel_setLineCapStyle_, 1);
  objc_msgSend(a1, sel_setStroke);
  objc_msgSend(v24, sel_setLineWidth_, a7);
  objc_msgSend(v24, sel_stroke);
  objc_msgSend(v24, sel_setLineWidth_, a7 * a8);
  objc_msgSend(a2, sel_setStroke);
  objc_msgSend(v24, sel_stroke);
}

uint64_t destroy for QuantityRow(id *a1)
{
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for QuantityRow(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  long long v6 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = v6;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  id v7 = v3;
  id v8 = v4;
  swift_retain();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return a1;
}

uint64_t assignWithCopy for QuantityRow(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  long long v7 = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v7;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  id v8 = *(void **)(a2 + 40);
  uint64_t v9 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v8;
  id v10 = v8;

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  return a1;
}

__n128 initializeWithTake for QuantityRow(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for QuantityRow(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for QuantityRow(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 128)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QuantityRow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QuantityRow()
{
  return &type metadata for QuantityRow;
}

void sub_2411FE95C()
{
  if (!qword_268CFAA30)
  {
    type metadata accessor for CycleChartDay();
    sub_2411FE9C4();
    unint64_t v0 = sub_2416333B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFAA30);
    }
  }
}

void sub_2411FE9C4()
{
  if (!qword_268CFAA38)
  {
    sub_2411B9D00(255, &qword_26B011700);
    sub_2411FEA38();
    unint64_t v0 = type metadata accessor for Determined();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFAA38);
    }
  }
}

unint64_t sub_2411FEA38()
{
  unint64_t result = qword_268CFAA40;
  if (!qword_268CFAA40)
  {
    sub_2411B9D00(255, &qword_26B011700);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFAA40);
  }
  return result;
}

uint64_t sub_2411FEAA0(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  return a1;
}

id sub_2411FEACC(id result)
{
  if ((unint64_t)result >= 3) {
    return result;
  }
  return result;
}

uint64_t sub_2411FEADC(uint64_t a1)
{
  return a1;
}

void sub_2411FEB08(id a1)
{
  if ((unint64_t)a1 >= 3) {
}
  }

void sub_2411FEB18()
{
  if (!qword_26B0121D0)
  {
    sub_241631AC8();
    sub_2411FEBAC((unint64_t *)&qword_26B0121C0, MEMORY[0x263F090E8]);
    unint64_t v0 = sub_241632178();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0121D0);
    }
  }
}

uint64_t sub_2411FEBAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2411FEBF4(uint64_t a1)
{
  id v2 = *(void **)a1;
  long long v3 = *(void **)(a1 + 40);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  id v4 = v2;
  id v5 = v3;
  swift_retain();
  return a1;
}

uint64_t sub_2411FEC40(uint64_t a1)
{
  id v2 = *(void **)a1;
  long long v3 = *(void **)(a1 + 40);
  swift_release();

  swift_bridgeObjectRelease();
  return a1;
}

void sub_2411FEC8C()
{
  if (!qword_268CFC5B0)
  {
    sub_241631AC8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CFC5B0);
    }
  }
}

uint64_t sub_2411FECF4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2411FED54(uint64_t a1, uint64_t a2)
{
  sub_2411FEB18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2411FEDB8(uint64_t a1, uint64_t a2)
{
  sub_2411FEB18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2411FEE1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2411FEE80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

void sub_2411FEEF4()
{
  if (!qword_268CFAA50)
  {
    unint64_t v0 = sub_241631C08();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFAA50);
    }
  }
}

id sub_2411FEF54(double a1, double a2, double a3, double a4)
{
  swift_getObjectType();
  uint64_t v9 = &v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37CycleChartLeadingAxisHeaderFooterView_header];
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  v9[32] = 1;
  id v10 = &v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37CycleChartLeadingAxisHeaderFooterView_footer];
  v10[16] = 1;
  *(void *)id v10 = 0;
  *((void *)v10 + 1) = 0;
  *(void *)&v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin10CycleChart_rows] = MEMORY[0x263F8EE78];
  v17.receiver = v4;
  v17.super_class = (Class)type metadata accessor for CycleChart();
  id v11 = objc_msgSendSuper2(&v17, sel_initWithFrame_, a1, a2, a3, a4);
  sub_2411B9D00(0, (unint64_t *)&qword_268CFDCF0);
  id v12 = v11;
  sub_2416325D8();
  sub_241632918();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  double v13 = self;
  id v14 = v12;
  id v15 = objc_msgSend(v13, sel_clearColor);
  objc_msgSend(v14, sel_setBackgroundColor_, v15);

  objc_msgSend(v14, sel_setUserInteractionEnabled_, 0);
  return v14;
}

void sub_2411FF1B8(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  id v5 = v4;
  uint64_t v109 = *MEMORY[0x263EF8340];
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = sub_24162EFA8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)&v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24162B718();
  uint64_t v103 = *(void *)(v15 - 8);
  uint64_t v104 = v15;
  MEMORY[0x270FA5388](v15);
  objc_super v17 = (char *)&v100 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_2416331F8();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  id v105 = (char *)&v100 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107.receiver = v5;
  v107.super_class = ObjectType;
  objc_msgSendSuper2(&v107, sel_drawRect_, a1, a2, a3, a4);
  uint64_t v21 = UIGraphicsGetCurrentContext();
  if (v21)
  {
    id v22 = v21;
    CGContextSaveGState(v21);
    id v23 = objc_msgSend(v5, sel_traitCollection);
    objc_msgSend(v23, sel_displayScale);
    double v25 = v24;

    CGRect v26 = (uint64_t *)MEMORY[0x263F835B8];
    double v27 = 1.0 / v25;
    if ((v5[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37CycleChartLeadingAxisHeaderFooterView_header + 32] & 1) == 0)
    {
      CGFloat v28 = *(double *)&v5[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37CycleChartLeadingAxisHeaderFooterView_header];
      double v101 = *(double *)&v5[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37CycleChartLeadingAxisHeaderFooterView_header + 8];
      v108[0].origin.CGFloat x = v28;
      sub_2411DFE0C();
      sub_241632CD8();
      CGRect v29 = (void *)sub_241631CC8();
      swift_bridgeObjectRelease();
      sub_2411E0C50();
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_24163A4F0;
      CGRect v31 = (void *)*MEMORY[0x263F814F0];
      *(void *)(inited + 32) = *MEMORY[0x263F814F0];
      CGRect v32 = v26;
      uint64_t v33 = *v26;
      uint64_t v100 = v18;
      uint64_t v34 = *MEMORY[0x263F81788];
      uint64_t v102 = v19;
      uint64_t v35 = *MEMORY[0x263F81840];
      id v36 = v31;
      id v37 = sub_2415D17B8(v33, 0, v34, v35, 0);
      uint64_t v38 = sub_2411B9D00(0, &qword_26B012140);
      *(void *)(inited + 40) = v37;
      CGPoint v39 = (void *)*MEMORY[0x263F81500];
      *(void *)(inited + 64) = v38;
      *(void *)(inited + 72) = v39;
      uint64_t v40 = self;
      id v41 = v39;
      id v42 = objc_msgSend(v40, sel_secondaryLabelColor);
      CGRect v26 = v32;
      *(void *)(inited + 104) = sub_2411B9D00(0, (unint64_t *)&qword_268CFA910);
      *(void *)(inited + 80) = v42;
      sub_2414E42B8(inited);
      type metadata accessor for Key(0);
      sub_2411CCDB4();
      CGRect v43 = (void *)sub_241631B18();
      uint64_t v18 = v100;
      swift_bridgeObjectRelease();
      objc_msgSend(v29, sel_sizeWithAttributes_, v43);
      double v45 = v44;

      uint64_t v19 = v102;
      double v46 = 7.0;
      if (*(void *)&v101 != 2) {
        double v46 = 1.0;
      }
      double v47 = 2.0;
      if (*(void *)&v101 == 2) {
        double v47 = 8.0;
      }
      double v48 = ceil(v47 + v46 + v45);
      uint64_t v49 = (uint64_t)v105;
      (*(void (**)(char *, void, uint64_t))(v102 + 104))(v105, *MEMORY[0x263F8E218], v18);
      v110.origin.CGFloat x = a1;
      v110.origin.CGFloat y = a2;
      v110.size.CGFloat width = a3;
      v110.size.CGFloat height = a4;
      double MinY = CGRectGetMinY(v110);
      CGFloat v51 = sub_24152E790(v49, v27, v48 + MinY) - MinY;
      memset(v108, 0, 32);
      memset(&v106, 0, sizeof(v106));
      v111.origin.CGFloat x = a1;
      v111.origin.CGFloat y = a2;
      v111.size.CGFloat width = a3;
      v111.size.CGFloat height = a4;
      CGRectDivide(v111, v108, &v106, v51, CGRectMinYEdge);
      CGFloat x = v108[0].origin.x;
      CGFloat y = v108[0].origin.y;
      double v101 = a1;
      double v54 = a2;
      double v55 = a3;
      double v56 = a4;
      double v57 = v27;
      CGFloat width = v108[0].size.width;
      CGFloat height = v108[0].size.height;
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v49, v18);
      id v60 = objc_msgSend(v5, sel_traitCollection);
      CGFloat v61 = width;
      double v27 = v57;
      a4 = v56;
      a3 = v55;
      a2 = v54;
      a1 = v101;
      sub_2414FF230(v22, v60, x, y, v61, height);
    }
    if ((v5[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37CycleChartLeadingAxisHeaderFooterView_footer + 16] & 1) == 0)
    {
      sub_24162B6B8();
      sub_24162B6E8();
      uint64_t v62 = v18;
      (*(void (**)(char *, uint64_t))(v103 + 8))(v17, v104);
      uint64_t v63 = v19;
      id v64 = objc_allocWithZone(NSString);
      uint64_t v65 = (void *)sub_241631CC8();
      swift_bridgeObjectRelease();
      id v66 = objc_msgSend(v64, sel_initWithString_, v65);

      sub_2411E0C50();
      uint64_t v67 = swift_initStackObject();
      *(_OWORD *)(v67 + 16) = xmmword_24163A4F0;
      id v68 = (void *)*MEMORY[0x263F814F0];
      *(void *)(v67 + 32) = *MEMORY[0x263F814F0];
      uint64_t v69 = *v26;
      uint64_t v70 = *MEMORY[0x263F81788];
      uint64_t v71 = *MEMORY[0x263F81840];
      id v72 = v68;
      id v73 = sub_2415D17B8(v69, 0, v70, v71, 0);
      uint64_t v74 = sub_2411B9D00(0, &qword_26B012140);
      *(void *)(v67 + 40) = v73;
      uint64_t v75 = (void *)*MEMORY[0x263F81500];
      *(void *)(v67 + 64) = v74;
      *(void *)(v67 + 72) = v75;
      id v76 = self;
      id v77 = v75;
      id v78 = objc_msgSend(v76, sel_secondaryLabelColor);
      *(void *)(v67 + 104) = sub_2411B9D00(0, (unint64_t *)&qword_268CFA910);
      *(void *)(v67 + 80) = v78;
      sub_2414E42B8(v67);
      type metadata accessor for Key(0);
      sub_2411CCDB4();
      uint64_t v79 = (void *)sub_241631B18();
      swift_bridgeObjectRelease();
      objc_msgSend(v66, sel_sizeWithAttributes_, v79);
      double v81 = v80;

      double v82 = v81 + 4.0 + 4.0;
      uint64_t v83 = (uint64_t)v105;
      (*(void (**)(char *, void, uint64_t))(v63 + 104))(v105, *MEMORY[0x263F8E220], v62);
      v112.origin.CGFloat x = a1;
      v112.origin.CGFloat y = a2;
      v112.size.CGFloat width = a3;
      v112.size.CGFloat height = a4;
      double MaxY = CGRectGetMaxY(v112);
      CGFloat v85 = MaxY - sub_24152E790(v83, v27, MaxY - v82);
      memset(v108, 0, 32);
      memset(&v106, 0, sizeof(v106));
      v113.origin.CGFloat x = a1;
      v113.origin.CGFloat y = a2;
      v113.size.CGFloat width = a3;
      v113.size.CGFloat height = a4;
      CGRectDivide(v113, v108, &v106, v85, CGRectMaxYEdge);
      double v86 = v108[0].origin.x;
      double v87 = v108[0].origin.y;
      double v88 = v108[0].size.width;
      double v89 = v108[0].size.height;
      (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v83, v62);
      id v90 = objc_msgSend(v5, sel_traitCollection);
      id v91 = objc_msgSend(v76, sel_systemBackgroundColor);
      id v92 = objc_msgSend(v91, sel_resolvedColorWithTraitCollection_, v90);

      CGContextSaveGState(v22);
      id v93 = (CGColor *)objc_msgSend(v92, sel_CGColor);
      CGContextSetFillColorWithColor(v22, v93);

      v114.origin.CGFloat x = v86;
      v114.origin.CGFloat y = v87;
      v114.size.CGFloat width = v88;
      v114.size.CGFloat height = v89;
      CGContextFillRect(v22, v114);
      CGContextRestoreGState(v22);

      sub_24128E99C(v22, v90, v86, v87, v88, v89);
      sub_24128EB8C(v22, v90, v86, v87, v88, v89);
    }
    CGContextRestoreGState(v22);
  }
  else
  {
    sub_24162EF48();
    id v94 = sub_24162EF98();
    os_log_type_t v95 = sub_2416322C8();
    if (os_log_type_enabled(v94, v95))
    {
      id v96 = (uint8_t *)swift_slowAlloc();
      uint64_t v97 = swift_slowAlloc();
      *(void *)&v108[0].origin.CGFloat x = v97;
      *(_DWORD *)id v96 = 136446210;
      id v105 = (char *)(v96 + 4);
      uint64_t v98 = sub_2416333E8();
      *(void *)&v106.origin.CGFloat x = sub_2411B6898(v98, v99, (uint64_t *)v108);
      sub_241632C28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v94, v95, "[%{public}s] Skipping drawing with no current context", v96, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245621640](v97, -1, -1);
      MEMORY[0x245621640](v96, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

void sub_2411FFC4C()
{
}

uint64_t type metadata accessor for CycleChartLeadingAxisHeaderFooterView()
{
  return self;
}

uint64_t sub_2411FFCA0()
{
  return sub_24131D9F8();
}

uint64_t sub_2411FFCC4(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  id v5 = a1;
  swift_retain();
  unint64_t v6 = sub_24131E6E0();
  id v7 = v5;
  swift_retain();
  uint64_t v8 = sub_241200C7C(v6, v7, a2);
  swift_bridgeObjectRelease();

  swift_release();
  *(void *)(v3 + 32) = v8;
  id v9 = (id)HKMCSymptomSampleTypes();
  sub_2411B9D00(0, (unint64_t *)&qword_26B0125F0);
  unint64_t v10 = sub_241631F28();

  if (v10 >> 62)
  {
    sub_2411B9D00(0, (unint64_t *)&qword_26B012368);
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    unint64_t v11 = sub_241633058();
    swift_bridgeObjectRelease();
  }
  else
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_241633228();
    sub_2411B9D00(0, (unint64_t *)&qword_26B012368);
    unint64_t v11 = v10;
  }
  swift_bridgeObjectRelease();
  id v12 = v7;
  swift_retain();
  uint64_t v13 = sub_2412007A4(v11, v12, a2);
  swift_bridgeObjectRelease();

  swift_release_n();
  *(void *)(v3 + 40) = v13;
  return v3;
}

uint64_t sub_2411FFE78()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CycleChartsEditViewModel()
{
  return self;
}

uint64_t sub_2411FFEEC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24162FC48();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_2411FFF60@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CycleChartsEditViewModel();
  uint64_t result = sub_24162FAC8();
  *a1 = result;
  return result;
}

uint64_t sub_2411FFF9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a4;
  v6[4] = sub_241632008();
  v6[5] = sub_241631FF8();
  uint64_t v8 = (void *)swift_task_alloc();
  v6[6] = v8;
  *uint64_t v8 = v6;
  v8[1] = sub_24120005C;
  return sub_2414CB4D8(a6);
}

uint64_t sub_24120005C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 56) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_241631FC8();
    uint64_t v7 = v6;
    uint64_t v8 = sub_24120029C;
  }
  else
  {
    *(void *)(v4 + 64) = a1;
    uint64_t v5 = sub_241631FC8();
    uint64_t v7 = v9;
    uint64_t v8 = sub_2412001DC;
  }
  return MEMORY[0x270FA2498](v8, v5, v7);
}

uint64_t sub_2412001DC()
{
  uint64_t v1 = v0[8];
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v0[2] = v1;
  swift_retain();
  sub_24162FC58();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_24120029C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_241200300()
{
  id v1 = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *(void *)(v0 + 16));
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  id v3 = objc_msgSend(v1, sel_displayTypeForObjectType_, *(void *)(v0 + 24));

  if (v3)
  {
    id v4 = objc_msgSend(v3, sel_localization);

    id v5 = objc_msgSend(v4, sel_displayName);
    id v3 = (id)_sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  }
  return v3;
}

uint64_t sub_2412003DC()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin32CycleChartsEditViewDataTypeModel__sample;
  sub_241201198(0, &qword_268CFAA80, (uint64_t (*)(uint64_t))sub_2412005F8, MEMORY[0x263EFDE58]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_2412004C4()
{
  return type metadata accessor for CycleChartsEditViewDataTypeModel();
}

uint64_t type metadata accessor for CycleChartsEditViewDataTypeModel()
{
  uint64_t result = qword_268CFAA70;
  if (!qword_268CFAA70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_241200518()
{
  sub_241201198(319, &qword_268CFAA80, (uint64_t (*)(uint64_t))sub_2412005F8, MEMORY[0x263EFDE58]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_2412005F8()
{
  if (!qword_26B00E5F8)
  {
    sub_2411B9D00(255, (unint64_t *)&qword_26B0123B0);
    unint64_t v0 = sub_241632C18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B00E5F8);
    }
  }
}

uint64_t sub_241200660()
{
  return MEMORY[0x263EFDDD8];
}

uint64_t sub_24120066C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CycleChartsEditViewDataTypeModel();
  uint64_t result = sub_24162FAC8();
  *a1 = result;
  return result;
}

uint64_t sub_2412006AC@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24162FC48();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_24120072C(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return sub_24162FC58();
}

uint64_t sub_2412007A4(unint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v46 = a3;
  id v44 = a2;
  sub_241201198(0, (unint64_t *)&qword_26B00F1C0, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v34 - v7;
  sub_241201198(0, &qword_268CFAA80, (uint64_t (*)(uint64_t))sub_2412005F8, MEMORY[0x263EFDE58]);
  uint64_t v43 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v42 = (char *)&v34 - v11;
  if (a1 >> 62) {
    goto LABEL_23;
  }
  uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x263F8EE78];
    if (!v12) {
      break;
    }
    id v41 = v8;
    uint64_t v52 = MEMORY[0x263F8EE78];
    uint64_t v8 = (char *)&v52;
    uint64_t result = sub_241632F38();
    if (v12 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v34 = v4;
    unint64_t v39 = a1 & 0xC000000000000001;
    uint64_t v14 = sub_241632008();
    uint64_t v4 = 0;
    id v37 = (void (**)(char *, char *, uint64_t))(v10 + 32);
    uint64_t v38 = v14;
    unint64_t v35 = a1;
    uint64_t v36 = MEMORY[0x263F8EE60] + 8;
    uint64_t v40 = v12;
    while (v12 != v4)
    {
      uint64_t v45 = v4;
      if (v39) {
        id v15 = (id)MEMORY[0x245620370](v4, a1);
      }
      else {
        id v15 = *(id *)(a1 + 8 * v4 + 32);
      }
      uint64_t v16 = v15;
      type metadata accessor for CycleChartsEditViewDataTypeModel();
      objc_super v17 = (void *)swift_allocObject();
      uint64_t v18 = (char *)v17 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin32CycleChartsEditViewDataTypeModel__sample;
      uint64_t v51 = 0;
      sub_2412005F8();
      id v19 = v44;
      uint64_t v20 = v46;
      swift_retain();
      uint64_t v21 = v42;
      sub_24162FC08();
      (*v37)(v18, v21, v43);
      v17[3] = v16;
      void v17[4] = v20;
      v17[2] = v19;
      uint64_t v22 = sub_241632028();
      uint64_t v23 = *(void *)(v22 - 8);
      uint64_t v24 = (uint64_t)v41;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v41, 1, 1, v22);
      id v25 = v16;
      id v26 = v19;
      swift_retain();
      id v27 = v25;
      swift_retain();
      uint64_t v28 = sub_241631FF8();
      CGRect v29 = (void *)swift_allocObject();
      v29[2] = v28;
      v29[3] = MEMORY[0x263F8F500];
      void v29[4] = v17;
      v29[5] = v26;
      v29[6] = v27;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v24, 1, v22) == 1)
      {
        sub_2412012C8(v24);
      }
      else
      {
        sub_241632018();
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v22);
      }
      uint64_t v12 = v40;
      uint64_t v30 = v45;
      if (v29[2])
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v31 = sub_241631FC8();
        uint64_t v33 = v32;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v31 = 0;
        uint64_t v33 = 0;
      }
      a1 = v35;
      if (v33 | v31)
      {
        uint64_t v47 = 0;
        uint64_t v48 = 0;
        uint64_t v49 = v31;
        uint64_t v50 = v33;
      }
      uint64_t v4 = v30 + 1;
      swift_task_create();
      swift_release();

      swift_release();
      uint64_t v8 = (char *)&v52;
      sub_241632F18();
      uint64_t v10 = *(void *)(v52 + 16);
      sub_241632F48();
      sub_241632F58();
      sub_241632F28();
      if (v12 == v4) {
        return v52;
      }
    }
    __break(1u);
LABEL_23:
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v12 = sub_241633068();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_241200C7C(unint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v46 = a3;
  id v42 = a2;
  sub_241201198(0, (unint64_t *)&qword_26B00F1C0, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v34 - v7;
  sub_241201198(0, &qword_268CFAA80, (uint64_t (*)(uint64_t))sub_2412005F8, MEMORY[0x263EFDE58]);
  uint64_t v41 = v9;
  uint64_t v10 = *(void (***)(char *, char *, uint64_t))(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v40 = (char *)&v34 - v11;
  uint64_t v52 = MEMORY[0x263F8EE78];
  if (a1 >> 62)
  {
LABEL_23:
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v12 = sub_241633068();
    if (v12) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    if (v12)
    {
LABEL_3:
      uint64_t v34 = v4;
      unint64_t v13 = a1 & 0xC000000000000001;
      unint64_t v39 = v10 + 4;
      uint64_t v14 = 4;
      id v15 = &selRef_numberOfComponentsInPickerView_;
      unint64_t v37 = a1;
      uint64_t v38 = MEMORY[0x263F8EE60] + 8;
      unint64_t v35 = a1 & 0xC000000000000001;
      uint64_t v36 = v12;
      uint64_t v45 = v8;
      while (1)
      {
        if (v13) {
          uint64_t v16 = (char *)MEMORY[0x245620370](v14 - 4, a1);
        }
        else {
          uint64_t v16 = (char *)*(id *)(a1 + 8 * v14);
        }
        uint64_t v10 = (void (**)(char *, char *, uint64_t))v16;
        uint64_t v4 = v14 - 3;
        if (__OFADD__(v14 - 4, 1))
        {
          __break(1u);
          goto LABEL_23;
        }
        if ([v16 v15[349]] != (id)95) {
          break;
        }

LABEL_5:
        ++v14;
        if (v4 == v12)
        {
          swift_bridgeObjectRelease();
          return v52;
        }
      }
      uint64_t v44 = v14 - 3;
      type metadata accessor for CycleChartsEditViewDataTypeModel();
      objc_super v17 = (void *)swift_allocObject();
      uint64_t v18 = (char *)v17 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin32CycleChartsEditViewDataTypeModel__sample;
      uint64_t v51 = 0;
      sub_2412005F8();
      id v19 = v42;
      uint64_t v20 = v46;
      swift_retain();
      uint64_t v21 = v40;
      sub_24162FC08();
      (*v39)(v18, v21, v41);
      v17[3] = v10;
      void v17[4] = v20;
      v17[2] = v19;
      uint64_t v22 = sub_241632028();
      uint64_t v23 = *(void *)(v22 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v45, 1, 1, v22);
      sub_241632008();
      uint64_t v24 = v10;
      id v25 = v19;
      uint64_t v8 = v45;
      swift_retain();
      id v26 = v24;
      swift_retain();
      uint64_t v27 = sub_241631FF8();
      uint64_t v28 = (void *)swift_allocObject();
      id v28[2] = v27;
      v28[3] = MEMORY[0x263F8F500];
      v28[4] = v17;
      uint64_t v43 = v17;
      v28[5] = v25;
      v28[6] = v26;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v8, 1, v22) == 1)
      {
        sub_2412012C8((uint64_t)v8);
        if (v28[2])
        {
LABEL_13:
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v29 = sub_241631FC8();
          uint64_t v31 = v30;
          swift_unknownObjectRelease();
LABEL_16:
          unint64_t v13 = v35;
          uint64_t v12 = v36;
          if (v31 | v29)
          {
            uint64_t v47 = 0;
            uint64_t v48 = 0;
            uint64_t v49 = v29;
            uint64_t v50 = v31;
          }
          a1 = v37;
          swift_task_create();
          swift_release();

          uint64_t v32 = swift_release();
          MEMORY[0x24561F3D0](v32);
          if (*(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_241631F68();
          }
          sub_241631F98();
          sub_241631F48();
          id v15 = &selRef_numberOfComponentsInPickerView_;
          uint64_t v4 = v44;
          goto LABEL_5;
        }
      }
      else
      {
        sub_241632018();
        (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v22);
        if (v28[2]) {
          goto LABEL_13;
        }
      }
      uint64_t v29 = 0;
      uint64_t v31 = 0;
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

void sub_241201198(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241201200(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_24120151C;
  return sub_2411FFF9C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_2412012C8(uint64_t a1)
{
  sub_241201198(0, (unint64_t *)&qword_26B00F1C0, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241201360(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_241201428;
  return sub_2411FFF9C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_241201428()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_241201520(uint64_t a1)
{
  v2[14] = a1;
  v2[15] = v1;
  v2[16] = *v1;
  uint64_t v3 = sub_24162EFA8();
  v2[17] = v3;
  v2[18] = *(void *)(v3 - 8);
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  sub_2412048AC(0, &qword_26B012218, MEMORY[0x263F45630], MEMORY[0x263F8D8F0]);
  v2[21] = swift_task_alloc();
  uint64_t v4 = sub_24162C018();
  v2[22] = v4;
  v2[23] = *(void *)(v4 - 8);
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2412016E0, 0, 0);
}

uint64_t sub_2412016E0()
{
  char v59 = v0;
  swift_getObjectType();
  sub_2412054DC(&qword_26B00ED60, v1, (void (*)(uint64_t))type metadata accessor for ReviewOngoingPregnancyTileExecutor);
  sub_24162BD58();
  uint64_t v2 = (char *)v0[21];
  uint64_t v4 = v0[22];
  uint64_t v3 = v0[23];
  sub_2412044A8();
  uint64_t v5 = (void *)sub_24162EBF8();
  sub_24120230C(v5, v2);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v2, 1, v4) == 1)
  {
    sub_241205524(v0[21], &qword_26B012218, MEMORY[0x263F45630]);
    sub_24162EF48();
    uint64_t v6 = sub_24162EF98();
    os_log_type_t v7 = sub_2416322E8();
    BOOL v8 = os_log_type_enabled(v6, v7);
    uint64_t v10 = v0[18];
    uint64_t v9 = v0[19];
    uint64_t v11 = v0[17];
    if (v8)
    {
      uint64_t v12 = v0[16];
      uint64_t v53 = v0[17];
      unint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v57 = v14;
      *(_DWORD *)unint64_t v13 = 136315138;
      v0[12] = v12;
      swift_getMetatypeMetadata();
      uint64_t v15 = sub_241631D78();
      v0[10] = sub_2411B6898(v15, v16, &v57);
      sub_241632C28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v6, v7, "[%s] Executor did not receive a new feed item", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245621640](v14, -1, -1);
      MEMORY[0x245621640](v13, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v53);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    }
    uint64_t v37 = v0[5];
    uint64_t v38 = v0[6];
    sub_2411B6854(v0 + 2, v37);
    unint64_t v39 = (void *)swift_task_alloc();
    v0[30] = v39;
    *unint64_t v39 = v0;
    v39[1] = sub_241201FEC;
    uint64_t v40 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v18 = v0[24];
    uint64_t v17 = v0[25];
    uint64_t v19 = v0[22];
    uint64_t v20 = v0[23];
    (*(void (**)(uint64_t, void, uint64_t))(v20 + 32))(v17, v0[21], v19);
    sub_24162EF48();
    uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
    v21(v18, v17, v19);
    uint64_t v22 = sub_24162EF98();
    os_log_type_t v23 = sub_2416322E8();
    BOOL v24 = os_log_type_enabled(v22, v23);
    uint64_t v25 = v0[23];
    uint64_t v26 = v0[20];
    uint64_t v27 = v0[18];
    uint64_t v55 = v0[17];
    if (v24)
    {
      uint64_t v48 = v0[24];
      os_log_type_t type = v23;
      uint64_t v49 = v0[22];
      uint64_t v52 = v0[20];
      uint64_t v28 = v0[16];
      double v54 = v21;
      uint64_t v29 = swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      uint64_t v56 = v50;
      *(_DWORD *)uint64_t v29 = 136315394;
      v0[9] = v28;
      swift_getMetatypeMetadata();
      uint64_t v30 = sub_241631D78();
      v0[11] = sub_2411B6898(v30, v31, &v56);
      sub_241632C28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2080;
      uint64_t v57 = 0;
      unint64_t v58 = 0xE000000000000000;
      sub_241632E78();
      swift_bridgeObjectRelease();
      uint64_t v57 = 0xD000000000000019;
      unint64_t v58 = 0x8000000241658960;
      sub_24162BE58();
      sub_241631E08();
      swift_bridgeObjectRelease();
      unint64_t v32 = v58;
      v0[7] = v57;
      v0[8] = v32;
      uint64_t v33 = sub_241631D78();
      v0[13] = sub_2411B6898(v33, v34, &v56);
      sub_241632C28();
      swift_bridgeObjectRelease();
      unint64_t v35 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
      v35(v48, v49);
      _os_log_impl(&dword_24118E000, v22, type, "[%s] Executor is %s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245621640](v50, -1, -1);
      uint64_t v36 = v29;
      uint64_t v21 = v54;
      MEMORY[0x245621640](v36, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v52, v55);
    }
    else
    {
      unint64_t v35 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
      v35(v0[24], v0[22]);

      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v55);
    }
    v0[26] = v35;
    uint64_t v41 = v0[25];
    uint64_t v42 = v0[22];
    uint64_t v43 = v0[23];
    uint64_t v37 = v0[5];
    uint64_t v38 = v0[6];
    sub_2411B6854(v0 + 2, v37);
    sub_2412048AC(0, (unint64_t *)&unk_26B0123E0, MEMORY[0x263F45630], MEMORY[0x263F8E0F8]);
    unint64_t v44 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    uint64_t v45 = swift_allocObject();
    v0[27] = v45;
    *(_OWORD *)(v45 + 16) = xmmword_241637EE0;
    v21(v45 + v44, v41, v42);
    uint64_t v46 = (void *)swift_task_alloc();
    v0[28] = v46;
    *uint64_t v46 = v0;
    v46[1] = sub_241201DF4;
    uint64_t v40 = v45;
  }
  return MEMORY[0x270F365C8](v40, v37, v38);
}

uint64_t sub_241201DF4()
{
  *(void *)(*(void *)v1 + 232) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_24120224C;
  }
  else {
    uint64_t v2 = sub_241201F28;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_241201F28()
{
  (*(void (**)(void, void))(v0 + 208))(*(void *)(v0 + 200), *(void *)(v0 + 176));
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_241201FEC()
{
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2412021A8;
  }
  else {
    uint64_t v2 = sub_241202100;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_241202100()
{
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2412021A8()
{
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24120224C()
{
  (*(void (**)(void, void))(v0 + 208))(*(void *)(v0 + 200), *(void *)(v0 + 176));
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24120230C@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  unint64_t v165 = a2;
  uint64_t v162 = *v2;
  uint64_t v145 = sub_24162C288();
  uint64_t v143 = *(void *)(v145 - 8);
  MEMORY[0x270FA5388](v145);
  uint64_t v142 = (char *)&v130 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24162C328();
  uint64_t v144 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v141 = (char *)&v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = sub_24162CBF8();
  uint64_t v139 = *(void *)(v140 - 8);
  MEMORY[0x270FA5388](v140);
  uint64_t v138 = (uint64_t)&v130 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_24162BD98();
  uint64_t v147 = *(void *)(v148 - 8);
  MEMORY[0x270FA5388](v148);
  uint64_t v146 = (char *)&v130 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24162D368();
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v156 = (char *)&v130 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2412048AC(0, &qword_26B00ED90, MEMORY[0x263F43658], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v155 = (char *)&v130 - v13;
  uint64_t v153 = sub_24162DAF8();
  MEMORY[0x270FA5388](v153);
  uint64_t v154 = (char *)&v130 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2412048AC(0, &qword_26B00F240, MEMORY[0x263F43640], v11);
  MEMORY[0x270FA5388](v15 - 8);
  BOOL v152 = (char *)&v130 - v16;
  sub_2412048AC(0, &qword_26B00F260, MEMORY[0x263F43F20], v11);
  MEMORY[0x270FA5388](v17 - 8);
  os_log_type_t v151 = (char *)&v130 - v18;
  uint64_t v150 = sub_24162D378();
  uint64_t v149 = *(void *)(v150 - 8);
  MEMORY[0x270FA5388](v150);
  unint64_t v157 = (char *)&v130 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2412048AC(0, &qword_26B012218, MEMORY[0x263F45630], v11);
  MEMORY[0x270FA5388](v20 - 8);
  unint64_t v158 = (char *)&v130 - v21;
  uint64_t v22 = sub_24162C018();
  uint64_t v166 = *(void *)(v22 - 8);
  uint64_t v167 = v22;
  MEMORY[0x270FA5388](v22);
  uint64_t v137 = (char *)&v130 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_24162EFA8();
  uint64_t v168 = *(void *)(v24 - 8);
  v169 = (void (*)(char *, void, uint64_t, uint64_t))v24;
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v130 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)&v130 - v28;
  MEMORY[0x270FA5388](v30);
  unint64_t v32 = (char *)&v130 - v31;
  MEMORY[0x270FA5388](v33);
  uint64_t v159 = (char *)&v130 - v34;
  MEMORY[0x270FA5388](v35);
  uint64_t v37 = (char *)&v130 - v36;
  uint64_t v160 = type metadata accessor for OngoingPregnancyUserData();
  MEMORY[0x270FA5388](v160);
  os_log_type_t v161 = (uint64_t *)((char *)&v130 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v164 = sub_24162B718();
  uint64_t v39 = *(void *)(v164 - 8);
  MEMORY[0x270FA5388](v164);
  uint64_t v41 = (char *)&v130 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v42);
  unint64_t v44 = (char *)&v130 - v43;
  *(void *)&double v46 = MEMORY[0x270FA5388](v45).n128_u64[0];
  uint64_t v163 = (char *)&v130 - v47;
  if (objc_msgSend(a1, sel_state, v46) != (id)1)
  {
    sub_24162EF48();
    id v64 = sub_24162EF98();
    os_log_type_t v65 = sub_2416322E8();
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = swift_slowAlloc();
      uint64_t v67 = swift_slowAlloc();
      uint64_t v170 = v67;
      *(_DWORD *)uint64_t v66 = 136315394;
      uint64_t v171 = v162;
      swift_getMetatypeMetadata();
      uint64_t v68 = sub_241631D78();
      uint64_t v171 = sub_2411B6898(v68, v69, &v170);
      sub_241632C28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v66 + 12) = 2080;
      uint64_t v171 = 0xD00000000000001DLL;
      unint64_t v172 = 0x8000000241658980;
      uint64_t v70 = sub_241631D78();
      uint64_t v171 = sub_2411B6898(v70, v71, &v170);
      sub_241632C28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v64, v65, "[%s] Executor will not create a feed item. Reason: %s", (uint8_t *)v66, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245621640](v67, -1, -1);
      MEMORY[0x245621640](v66, -1, -1);
    }

    (*(void (**)(char *, void (*)(char *, void, uint64_t, uint64_t)))(v168 + 8))(v26, v169);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v166 + 56))(v165, 1, 1, v167);
  }
  id v48 = objc_msgSend(a1, sel_sample);
  if (!v48)
  {
    sub_24162EF48();
    id v72 = sub_24162EF98();
    os_log_type_t v73 = sub_2416322E8();
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v74 = swift_slowAlloc();
      uint64_t v75 = swift_slowAlloc();
      uint64_t v170 = v75;
      *(_DWORD *)uint64_t v74 = 136315394;
      uint64_t v171 = v162;
      swift_getMetatypeMetadata();
      uint64_t v76 = sub_241631D78();
      uint64_t v171 = sub_2411B6898(v76, v77, &v170);
      sub_241632C28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v74 + 12) = 2080;
      uint64_t v171 = 0xD00000000000001CLL;
      unint64_t v172 = 0x80000002416589A0;
      uint64_t v78 = sub_241631D78();
      uint64_t v171 = sub_2411B6898(v78, v79, &v170);
      sub_241632C28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v72, v73, "[%s] Executor will not create a feed item. Reason: %s", (uint8_t *)v74, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245621640](v75, -1, -1);
      MEMORY[0x245621640](v74, -1, -1);
    }

    (*(void (**)(char *, void (*)(char *, void, uint64_t, uint64_t)))(v168 + 8))(v29, v169);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v166 + 56))(v165, 1, 1, v167);
  }
  uint64_t v49 = v48;
  uint64_t v50 = (uint64_t)objc_msgSend(self, sel_maximumNumberOfWeeksPregnant);
  if ((unsigned __int128)(v50 * (__int128)7) >> 64 != (7 * v50) >> 63)
  {
    __break(1u);
    goto LABEL_29;
  }
  if ((unsigned __int128)(7 * v50 * (__int128)86400) >> 64 != (604800 * v50) >> 63)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    swift_once();
    goto LABEL_18;
  }
  uint64_t v134 = v5;
  id v51 = objc_msgSend(v49, sel_startDate);
  sub_24162B6A8();

  sub_24162B618();
  uint64_t v52 = v39 + 8;
  uint64_t v53 = *(void (**)(char *, uint64_t))(v39 + 8);
  v53(v44, v164);
  sub_24162B6B8();
  sub_2412054DC((unint64_t *)&unk_26B00E680, 255, MEMORY[0x263F07490]);
  uint64_t v136 = v41;
  if (sub_241631BB8())
  {
    sub_24162EF48();
    double v54 = sub_24162EF98();
    os_log_type_t v55 = sub_2416322E8();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = swift_slowAlloc();
      uint64_t v57 = swift_slowAlloc();
      uint64_t v170 = v57;
      *(_DWORD *)uint64_t v56 = 136315394;
      uint64_t v171 = v162;
      swift_getMetatypeMetadata();
      unint64_t v135 = v53;
      uint64_t v58 = sub_241631D78();
      uint64_t v171 = sub_2411B6898(v58, v59, &v170);
      sub_241632C28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v56 + 12) = 2080;
      uint64_t v171 = 0xD000000000000017;
      unint64_t v172 = 0x80000002416589F0;
      uint64_t v60 = sub_241631D78();
      uint64_t v171 = sub_2411B6898(v60, v61, &v170);
      sub_241632C28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v54, v55, "[%s] Will not create a feed item, %s", (uint8_t *)v56, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245621640](v57, -1, -1);
      MEMORY[0x245621640](v56, -1, -1);

      (*(void (**)(char *, void (*)(char *, void, uint64_t, uint64_t)))(v168 + 8))(v32, v169);
      uint64_t v62 = v164;
      uint64_t v63 = v135;
      v135(v136, v164);
      v63(v163, v62);
    }
    else
    {

      (*(void (**)(char *, void (*)(char *, void, uint64_t, uint64_t)))(v168 + 8))(v32, v169);
      uint64_t v105 = v164;
      v53(v136, v164);
      v53(v163, v105);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v166 + 56))(v165, 1, 1, v167);
  }
  id v81 = objc_msgSend(a1, sel_state);
  void *v161 = v81;
  sub_2411B9D00(0, (unint64_t *)&qword_26B012390);
  id v82 = v49;
  sub_2416317F8();
  id v83 = objc_msgSend(v82, sel_startDate);
  sub_24162B6A8();

  id v84 = objc_msgSend(v82, sel_endDate);
  sub_24162B6A8();

  sub_2411B9D00(0, (unint64_t *)&qword_268CFA790);
  sub_241632778();
  id v132 = v82;

  sub_24162EF48();
  CGFloat v85 = sub_24162EF98();
  os_log_type_t v86 = sub_2416322E8();
  BOOL v87 = os_log_type_enabled(v85, v86);
  uint64_t v133 = v52;
  unint64_t v135 = v53;
  if (v87)
  {
    double v88 = (uint8_t *)swift_slowAlloc();
    uint64_t v89 = swift_slowAlloc();
    uint64_t v171 = v89;
    *(_DWORD *)double v88 = 136315138;
    uint64_t v90 = sub_241203F40();
    uint64_t v170 = sub_2411B6898(v90, v91, &v171);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v85, v86, "%s", v88, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v89, -1, -1);
    MEMORY[0x245621640](v88, -1, -1);
  }

  uint64_t v131 = *(void (**)(void, void))(v168 + 8);
  v131(v37, v169);
  if (qword_268CF91C0 != -1) {
    goto LABEL_30;
  }
LABEL_18:
  uint64_t v92 = sub_24162D438();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v151, 1, 1, v92);
  uint64_t v93 = sub_24162C868();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v152, 1, 1, v93);
  uint64_t v171 = MEMORY[0x263F8EE78];
  sub_2412054DC((unint64_t *)&unk_268CFE2A0, 255, MEMORY[0x263F44328]);
  sub_2412048AC(0, (unint64_t *)&unk_268CFD6F0, MEMORY[0x263F44328], MEMORY[0x263F8D488]);
  sub_241204BB0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241632D08();
  sub_24162D9F8();
  swift_allocObject();
  uint64_t v154 = (char *)sub_24162D9E8();
  if (qword_268CF91C8 != -1) {
    swift_once();
  }
  uint64_t v153 = qword_268CFAAB0;
  uint64_t v94 = qword_268CF91D0;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  if (v94 != -1) {
    swift_once();
  }
  BOOL v152 = (char *)qword_268CFAAC0;
  uint64_t v95 = qword_268CF91D8;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  if (v95 != -1) {
    swift_once();
  }
  uint64_t v96 = qword_26B0131F0;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  if (v96 != -1) {
    swift_once();
  }
  id v97 = (id)qword_26B0181A0;
  uint64_t v98 = v155;
  sub_24162C878();
  uint64_t v99 = sub_24162C888();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56))(v98, 0, 1, v99);
  sub_24162D348();
  sub_2412048AC(0, &qword_268CFD700, MEMORY[0x263F43C08], MEMORY[0x263F8E0F8]);
  uint64_t v100 = sub_24162CCF8();
  uint64_t v101 = *(void *)(v100 - 8);
  unint64_t v102 = (*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
  uint64_t v103 = swift_allocObject();
  *(_OWORD *)(v103 + 16) = xmmword_241637EE0;
  (*(void (**)(unint64_t, void, uint64_t))(v101 + 104))(v103 + v102, *MEMORY[0x263F43BD8], v100);
  uint64_t v104 = v157;
  sub_24162D338();
  sub_24162AE28();
  swift_allocObject();
  sub_24162AE18();
  sub_2412054DC(&qword_268CFA7A0, 255, (void (*)(uint64_t))type metadata accessor for OngoingPregnancyUserData);
  uint64_t v106 = sub_24162AE08();
  unint64_t v108 = v107;
  swift_release();
  sub_241204C38();
  uint64_t v109 = v147;
  CGRect v110 = v146;
  uint64_t v111 = v148;
  (*(void (**)(char *, void, uint64_t))(v147 + 104))(v146, *MEMORY[0x263F45548], v148);
  CGRect v112 = (void *)sub_24162BDD8();
  sub_2412054DC(&qword_268CFAB08, 255, (void (*)(uint64_t))sub_241204C38);
  CGRect v113 = v158;
  sub_24162BE38();
  CGRect v114 = v165;

  sub_2411EDEA8(v106, v108);
  (*(void (**)(char *, uint64_t))(v109 + 8))(v110, v111);
  (*(void (**)(char *, uint64_t))(v149 + 8))(v104, v150);
  id v115 = v114;
  uint64_t v116 = v166;
  uint64_t v117 = v167;
  v169 = *(void (**)(char *, void, uint64_t, uint64_t))(v166 + 56);
  v169(v113, 0, 1, v167);
  id v118 = *(void (**)(char *, char *, uint64_t))(v116 + 32);
  id v119 = v137;
  v118(v137, v113, v117);
  uint64_t v120 = sub_24162C208();
  uint64_t v122 = v121;
  uint64_t v123 = (void (*)(uint64_t *, void))sub_24162BFE8();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_24119AF9C(&v170, v120, v122);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v123(&v171, 0);
  uint64_t v124 = v138;
  sub_2411B8B4C(v138);
  unint64_t v125 = sub_24162CBE8();
  (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v124, v140);
  sub_2414AD108(v125);
  swift_bridgeObjectRelease();
  sub_24162BEE8();
  (*(void (**)(char *, void, uint64_t))(v143 + 104))(v142, *MEMORY[0x263F456F8], v145);
  uint64_t v126 = v141;
  sub_24162C338();
  uint64_t v127 = v134;
  sub_24162BE68();

  (*(void (**)(char *, uint64_t))(v144 + 8))(v126, v127);
  sub_2411EEEF8((uint64_t)v161);
  uint64_t v128 = v164;
  id v129 = v135;
  v135(v136, v164);
  v129(v163, v128);
  v118(v115, v119, v117);
  return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v169)(v115, 0, 1, v117);
}

uint64_t sub_241203F40()
{
  return sub_241631D78();
}

uint64_t sub_241203FEC()
{
  swift_unknownObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtCC24MenstrualCyclesAppPlugin34ReviewOngoingPregnancyTileExecutor7Planner_signals;
  uint64_t v2 = sub_24162EA88();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_24120409C()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_2412040C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCC24MenstrualCyclesAppPlugin34ReviewOngoingPregnancyTileExecutor7Planner_signals;
  uint64_t v4 = sub_24162EA88();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_241204140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241204224(a1, a2, a3, a4, MEMORY[0x263F45460]);
}

uint64_t sub_241204158()
{
  return sub_241204EC8();
}

uint64_t sub_241204160(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = sub_2412054DC(&qword_26B00F180, 255, (void (*)(uint64_t))type metadata accessor for ReviewOngoingPregnancyTileExecutor.Planner);

  return MEMORY[0x270F36170](a1, a2, v5, v6);
}

uint64_t sub_24120420C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241204224(a1, a2, a3, a4, MEMORY[0x263F45470]);
}

uint64_t sub_241204224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = *v5;
  uint64_t v9 = sub_2412054DC(&qword_26B00F180, 255, (void (*)(uint64_t))type metadata accessor for ReviewOngoingPregnancyTileExecutor.Planner);

  return a5(a1, a2, v8, v9);
}

uint64_t sub_2412042E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241204224(a1, a2, a3, a4, MEMORY[0x263F45468]);
}

uint64_t sub_2412042FC()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ReviewOngoingPregnancyTileExecutor()
{
  return self;
}

uint64_t sub_241204360()
{
  return type metadata accessor for ReviewOngoingPregnancyTileExecutor.Planner();
}

uint64_t type metadata accessor for ReviewOngoingPregnancyTileExecutor.Planner()
{
  uint64_t result = qword_26B00F190;
  if (!qword_26B00F190) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2412043B4()
{
  uint64_t result = sub_24162EA88();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_24120445C()
{
  return sub_2412054DC((unint64_t *)&unk_268CFAAE0, 255, (void (*)(uint64_t))sub_2412044A8);
}

void sub_2412044A8()
{
  if (!qword_26B00F168)
  {
    sub_2411B9D00(255, &qword_26B00ED70);
    unint64_t v0 = sub_24162EC08();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B00F168);
    }
  }
}

uint64_t sub_241204510()
{
  return sub_2412054DC(&qword_26B00F188, 255, (void (*)(uint64_t))type metadata accessor for ReviewOngoingPregnancyTileExecutor.Planner);
}

uint64_t sub_24120455C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_241201428;
  return sub_241201520(a1);
}

uint64_t sub_2412045F0()
{
  return sub_24162EAC8();
}

uint64_t sub_241204660(uint64_t a1)
{
  uint64_t v3 = sub_24162EA88();
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)&double v5 = MEMORY[0x270FA5388](v3).n128_u64[0];
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(*(id *)(v1 + 32), sel_profileIdentifier, v5);
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  long long v12 = *(_OWORD *)(v1 + 16);
  v9(v7, a1, v3);
  type metadata accessor for ReviewOngoingPregnancyTileExecutor.Planner();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v8;
  *(_OWORD *)(v10 + 24) = v12;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v10 + OBJC_IVAR____TtCC24MenstrualCyclesAppPlugin34ReviewOngoingPregnancyTileExecutor7Planner_signals, v7, v3);
  swift_unknownObjectRetain();
  return v10;
}

uint64_t sub_2412047AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  uint64_t v8 = sub_2412054DC(&qword_26B00ED58, a2, (void (*)(uint64_t))type metadata accessor for ReviewOngoingPregnancyTileExecutor);

  return MEMORY[0x270F35F48](a1, a2, a3, v7, v8);
}

uint64_t sub_241204864(uint64_t a1, uint64_t a2)
{
  return sub_2412054DC(&qword_26B00ED60, a2, (void (*)(uint64_t))type metadata accessor for ReviewOngoingPregnancyTileExecutor);
}

void sub_2412048AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241204910(uint64_t a1)
{
  return sub_2412049B0(a1, 0xD000000000000021, 0x8000000241658AC0, &qword_268CFAAA0, algn_268CFAAA8);
}

uint64_t sub_241204938(uint64_t a1)
{
  return sub_2412049B0(a1, 0xD000000000000020, 0x8000000241658A90, &qword_268CFAAB0, algn_268CFAAB8);
}

uint64_t sub_241204960(uint64_t a1)
{
  return sub_2412049B0(a1, 0xD00000000000001FLL, 0x8000000241658A70, &qword_268CFAAC0, algn_268CFAAC8);
}

uint64_t sub_241204988(uint64_t a1)
{
  return sub_2412049B0(a1, 0xD000000000000027, 0x8000000241658A40, &qword_268CFAAD0, algn_268CFAAD8);
}

uint64_t sub_2412049B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  uint64_t v7 = sub_24162B7E8();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = sub_241631CA8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = &v20[-v13];
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v11, v14, v8);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v15 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v16 = sub_241631D38();
  uint64_t v18 = v17;
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
  *a4 = v16;
  *a5 = v18;
  return result;
}

unint64_t sub_241204BB0()
{
  unint64_t result = qword_268CFE2B0;
  if (!qword_268CFE2B0)
  {
    sub_2412048AC(255, (unint64_t *)&unk_268CFD6F0, MEMORY[0x263F44328], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFE2B0);
  }
  return result;
}

void sub_241204C38()
{
  if (!qword_268CFAAF8)
  {
    type metadata accessor for ReviewOngoingPregnancyTileActionHandler();
    sub_2412054DC(&qword_268CFAB00, 255, (void (*)(uint64_t))type metadata accessor for ReviewOngoingPregnancyTileActionHandler);
    unint64_t v0 = sub_24162D458();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFAAF8);
    }
  }
}

uint64_t sub_241204CD0()
{
  uint64_t v0 = sub_24162EA18();
  MEMORY[0x270FA5388](v0 - 8);
  sub_2411BFC90();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_24163B390;
  sub_24162EA08();
  sub_2412048AC(0, (unint64_t *)&qword_26B00F1E0, (uint64_t (*)(uint64_t))sub_241204E70, MEMORY[0x263F8E0F8]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_241637EE0;
  sub_24162C538();
  *(void *)(v2 + 56) = sub_24162EB58();
  *(void *)(v2 + 64) = sub_2412054DC(&qword_26B00F148, 255, MEMORY[0x263F453F0]);
  sub_2411B6C70((uint64_t *)(v2 + 32));
  sub_24162C528();
  sub_24162EA38();
  swift_allocObject();
  *(void *)(v1 + 32) = sub_24162EA28();
  sub_241631F48();
  return v1;
}

unint64_t sub_241204E70()
{
  unint64_t result = qword_26B00F160;
  if (!qword_26B00F160)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B00F160);
  }
  return result;
}

uint64_t sub_241204EC8()
{
  uint64_t v0 = sub_24162EA98();
  uint64_t v25 = *(void *)(v0 - 8);
  uint64_t v26 = v0;
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24162EAB8();
  MEMORY[0x270FA5388](v3 - 8);
  v24[1] = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24162EAE8();
  MEMORY[0x270FA5388](v5 - 8);
  v24[0] = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2412048AC(0, &qword_26B00F158, (uint64_t (*)(uint64_t))sub_241205400, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v24 - v8;
  sub_2412048AC(0, &qword_26B00F140, MEMORY[0x263F458C0], MEMORY[0x263F45330]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v24 - v13;
  sub_241205400();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162C538();
  sub_24162EA58();
  sub_2412054DC(&qword_26B00F138, 255, MEMORY[0x263F458C0]);
  sub_24162EB38();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, v16) == 1)
  {
    sub_241205524((uint64_t)v9, &qword_26B00F158, (uint64_t (*)(uint64_t))sub_241205400);
    return MEMORY[0x263F8EE78];
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v9, v16);
    sub_2412048AC(0, &qword_26B00F1E8, (uint64_t (*)(uint64_t))sub_2412044A8, MEMORY[0x263F8E0F8]);
    sub_2412044A8();
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_241637EE0;
    sub_24162EAD8();
    uint64_t v22 = v25;
    uint64_t v21 = v26;
    (*(void (**)(char *, void, uint64_t))(v25 + 104))(v2, *MEMORY[0x263F45358], v26);
    sub_24162EAA8();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v2, v21);
    sub_24162EBA8();
    sub_2411B9D00(0, &qword_26B00ED70);
    sub_24162EBE8();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  return v20;
}

void sub_241205400()
{
  if (!qword_26B00F150)
  {
    sub_2411B9D00(255, &qword_26B00ED70);
    sub_241205474();
    unint64_t v0 = sub_24162EBB8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B00F150);
    }
  }
}

unint64_t sub_241205474()
{
  unint64_t result = qword_26B00F1D8;
  if (!qword_26B00F1D8)
  {
    sub_2411B9D00(255, &qword_26B00ED70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B00F1D8);
  }
  return result;
}

uint64_t sub_2412054DC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241205524(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_2412048AC(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_241205594(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_24162E468();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24162E478();
  uint64_t v47 = *(void *)(v9 - 8);
  uint64_t v48 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (id *)((char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  self;
  if (!swift_dynamicCastObjCClass())
  {
LABEL_6:
    type metadata accessor for HKError(0);
    uint64_t v52 = 3;
    sub_241205AB8(MEMORY[0x263F8EE78]);
    sub_241205BE0();
    sub_24162B318();
    swift_willThrow();
    return;
  }
  uint64_t v45 = v6;
  uint64_t v46 = v5;
  id v12 = a1;
  uint64_t v13 = (void *)sub_24162DDB8();
  id v14 = objc_msgSend(v13, sel_displayTypeController);

  if (v14)
  {
    id v15 = objc_msgSend(v14, sel_displayTypeForObjectType_, v12);

    if (v15)
    {
      id v16 = (id)*MEMORY[0x263F097A0];
      uint64_t v17 = sub_24162DDB8();
      uint64_t v44 = v2;
      uint64_t v18 = (void *)v17;
      id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3D0]), sel_initWithFeatureIdentifier_healthStore_, v16, v17);
      uint64_t v43 = a2;
      uint64_t v20 = v19;

      id v41 = v15;
      sub_24162DDD8();
      *((void *)&v50 + 1) = sub_241205C38();
      uint64_t v51 = MEMORY[0x263F44B48];
      *(void *)&long long v49 = v20;
      uint64_t v21 = sub_24162E518();
      swift_allocObject();
      id v42 = v20;
      uint64_t v22 = sub_24162E508();
      sub_241205C78();
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_24163BB30;
      uint64_t v24 = sub_24162DD08();
      long long v49 = 0u;
      long long v50 = 0u;
      uint64_t v51 = 0;
      uint64_t v25 = MEMORY[0x263F44398];
      *(void *)(v23 + 56) = v24;
      *(void *)(v23 + 64) = v25;
      sub_2411B6C70((uint64_t *)(v23 + 32));
      id v26 = v12;
      sub_24162DCF8();
      uint64_t v27 = sub_24162DC28();
      uint64_t v28 = MEMORY[0x263F44350];
      *(void *)(v23 + 96) = v27;
      *(void *)(v23 + 104) = v28;
      sub_2411B6C70((uint64_t *)(v23 + 72));
      id v29 = v26;
      sub_24162DC18();
      *((void *)&v50 + 1) = v21;
      uint64_t v51 = MEMORY[0x263F447A8];
      *(void *)&long long v49 = v22;
      uint64_t v30 = sub_24162DD28();
      uint64_t v31 = MEMORY[0x263F443A0];
      *(void *)(v23 + 136) = v30;
      *(void *)(v23 + 144) = v31;
      sub_2411B6C70((uint64_t *)(v23 + 112));
      swift_retain();
      sub_24162DD18();
      *uint64_t v11 = v29;
      (*(void (**)(void *, void, uint64_t))(v47 + 104))(v11, *MEMORY[0x263F44778], v48);
      id v32 = v29;
      sub_24162DC78();
      (*(void (**)(char *, void, uint64_t))(v45 + 104))(v8, *MEMORY[0x263F44768], v46);
      uint64_t v33 = sub_24162DC98();
      uint64_t v34 = MEMORY[0x263F44378];
      *(void *)(v23 + 176) = v33;
      *(void *)(v23 + 184) = v34;
      sub_2411B6C70((uint64_t *)(v23 + 152));
      sub_24162DC88();
      id v35 = v32;
      sub_24162DD78();
      uint64_t v36 = sub_24162DD88();
      uint64_t v37 = MEMORY[0x263F443C0];
      *(void *)(v23 + 216) = v36;
      *(void *)(v23 + 224) = v37;
      sub_2411B6C70((uint64_t *)(v23 + 192));
      sub_24162DD68();
      uint64_t v38 = sub_24162DC58();
      uint64_t v39 = MEMORY[0x263F44358];
      *(void *)(v23 + 256) = v38;
      *(void *)(v23 + 264) = v39;
      sub_2411B6C70((uint64_t *)(v23 + 232));
      id v40 = v35;
      sub_24162DC48();
      sub_24162DC68();

      swift_release();
      return;
    }

    goto LABEL_6;
  }
  __break(1u);
}

void sub_241205AA0(void *a1@<X0>, uint64_t a2@<X8>)
{
}

unint64_t sub_241205AB8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_241205D28();
  uint64_t v2 = sub_2416330C8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_241205E0C(v6, (uint64_t)&v15);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_241205D94(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_241205EDC(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_241205BE0()
{
  unint64_t result = qword_268CFA078;
  if (!qword_268CFA078)
  {
    type metadata accessor for HKError(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFA078);
  }
  return result;
}

unint64_t sub_241205C38()
{
  unint64_t result = qword_26B010750;
  if (!qword_26B010750)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B010750);
  }
  return result;
}

void sub_241205C78()
{
  if (!qword_268CFE380)
  {
    sub_241205CD0();
    unint64_t v0 = sub_2416331E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFE380);
    }
  }
}

unint64_t sub_241205CD0()
{
  unint64_t result = qword_268CFAB10;
  if (!qword_268CFAB10)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CFAB10);
  }
  return result;
}

void sub_241205D28()
{
  if (!qword_268CFAB18)
  {
    unint64_t v0 = sub_2416330D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFAB18);
    }
  }
}

unint64_t sub_241205D94(uint64_t a1, uint64_t a2)
{
  sub_241633308();
  sub_241631DC8();
  uint64_t v4 = sub_241633358();

  return sub_241205EEC(a1, a2, v4);
}

uint64_t sub_241205E0C(uint64_t a1, uint64_t a2)
{
  sub_241205E70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_241205E70()
{
  if (!qword_268CFC440)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CFC440);
    }
  }
}

_OWORD *sub_241205EDC(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_241205EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_241633218() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_241633218() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_241633218()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_241206034(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24162DDE8();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_2412060A0(uint64_t a1)
{
  uint64_t v2 = sub_24162DDE8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_241206104(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24162DDE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_241206168(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24162DDE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_2412061CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24162DDE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_241206230(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24162DDE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_241206294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2412062A8);
}

uint64_t sub_2412062A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24162DDE8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_241206314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241206328);
}

uint64_t sub_241206328(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24162DDE8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for DeviationSampleDataTypeDetailConfigurationProvider()
{
  uint64_t result = qword_268CFAB20;
  if (!qword_268CFAB20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2412063E4()
{
  uint64_t result = sub_24162DDE8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_241206470()
{
  return sub_241633358();
}

uint64_t sub_241206528()
{
  return sub_241633358();
}

uint64_t sub_2412065B0()
{
  return sub_241633358();
}

uint64_t sub_241206778(char *a1, char *a2)
{
  return sub_241495900(*a1, *a2);
}

uint64_t sub_241206784()
{
  return sub_241633358();
}

uint64_t sub_241206814()
{
  sub_241631DC8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241206890()
{
  return sub_241633358();
}

uint64_t sub_24120691C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_241633108();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_24120697C(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0x547972616D6D7573;
  if (*v1) {
    unint64_t v2 = 0xD000000000000011;
  }
  unint64_t v3 = 0x8000000241655F40;
  if (!*v1) {
    unint64_t v3 = 0xEB00000000656C69;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_2412069C8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_241495C94(*a1, *a2);
}

uint64_t sub_2412069D4()
{
  return sub_241206470();
}

uint64_t sub_2412069DC()
{
  sub_241631DC8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241206A7C()
{
  return sub_2412571C8();
}

uint64_t sub_241206A84@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_241208738();
  *a1 = result;
  return result;
}

void sub_241206AB4(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xD000000000000012;
  unint64_t v3 = 0xD000000000000019;
  unint64_t v4 = 0x8000000241655F80;
  if (*v1 != 1)
  {
    unint64_t v3 = 0x656C637943646461;
    unint64_t v4 = 0xEF73726F74636146;
  }
  if (*v1)
  {
    unint64_t v2 = v3;
    unint64_t v5 = v4;
  }
  else
  {
    unint64_t v5 = 0x8000000241655F60;
  }
  *a1 = v2;
  a1[1] = v5;
}

unint64_t sub_241206B24(char a1)
{
  unint64_t result = 0x6C4668636E75616CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x547373696D736964;
      break;
    case 2:
      unint64_t result = 0x74696445646964;
      break;
    case 3:
      unint64_t result = 0x74656C6544646964;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x64657070696B73;
      break;
    case 6:
      unint64_t result = 0x656C6C65636E6163;
      break;
    case 7:
      unint64_t result = 0x6E4F646441646964;
      break;
    case 8:
      unint64_t result = 0x6441746F4E646964;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_241206C68(unsigned __int8 *a1, char *a2)
{
  return sub_2414959B4(*a1, *a2);
}

uint64_t sub_241206C74()
{
  return sub_241633358();
}

uint64_t sub_241206CBC()
{
  return sub_241256BF4();
}

uint64_t sub_241206CC4()
{
  return sub_241633358();
}

uint64_t sub_241206D08@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_241208784();
  *a1 = result;
  return result;
}

unint64_t sub_241206D38@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_241206B24(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_241206D64()
{
  uint64_t v1 = sub_24162EFA8();
  uint64_t v52 = *(void *)(v1 - 8);
  uint64_t v53 = v1;
  MEMORY[0x270FA5388](v1);
  long long v50 = (char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v51 = (char *)&v50 - v4;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v50 - v6;
  uint64_t v8 = sub_24162CCF8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v50 - v13;
  MEMORY[0x270FA5388](v15);
  long long v17 = (char *)&v50 - v16;
  __n128 v19 = MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v50 - v20;
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16);
  v22((char *)&v50 - v20, v0, v8, v19);
  int v23 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v21, v8);
  if (v23 == *MEMORY[0x263F43BA0]) {
    return 0;
  }
  if (v23 == *MEMORY[0x263F43B98] || v23 == *MEMORY[0x263F43BE0] || v23 == *MEMORY[0x263F43BF8]) {
    goto LABEL_10;
  }
  if (v23 == *MEMORY[0x263F43BD8]) {
    return 1;
  }
  if (v23 == *MEMORY[0x263F43BD0]
    || v23 == *MEMORY[0x263F43BB0]
    || v23 == *MEMORY[0x263F43BE8]
    || v23 == *MEMORY[0x263F43BC0]
    || v23 == *MEMORY[0x263F43BA8])
  {
    goto LABEL_10;
  }
  if (v23 == *MEMORY[0x263F43BF0])
  {
    uint64_t v33 = v51;
    sub_24162EF48();
    ((void (*)(char *, uint64_t, uint64_t))v22)(v14, v0, v8);
    uint64_t v34 = sub_24162EF98();
    os_log_type_t v35 = sub_2416322D8();
    BOOL v36 = os_log_type_enabled(v34, v35);
    uint64_t v37 = v52;
    if (v36)
    {
      uint64_t v38 = swift_slowAlloc();
      long long v50 = (char *)swift_slowAlloc();
      os_log_type_t v55 = v50;
      *(_DWORD *)uint64_t v38 = 136446466;
      uint64_t v54 = sub_2411B6898(0x61746E6573657250, 0xEC0000006E6F6974, (uint64_t *)&v55);
      sub_241632C28();
      *(_WORD *)(v38 + 12) = 2080;
      sub_2412087E8();
      uint64_t v39 = sub_2416331D8();
      uint64_t v54 = sub_2411B6898(v39, v40, (uint64_t *)&v55);
      sub_241632C28();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
      _os_log_impl(&dword_24118E000, v34, v35, "[%{public}s] Tried to submit analytics event from unexpected presentation context: %s", (uint8_t *)v38, 0x16u);
      id v41 = v50;
      swift_arrayDestroy();
      MEMORY[0x245621640](v41, -1, -1);
      MEMORY[0x245621640](v38, -1, -1);

      (*(void (**)(char *, uint64_t))(v37 + 8))(v51, v53);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);

      (*(void (**)(char *, uint64_t))(v37 + 8))(v33, v53);
    }
    return 0;
  }
  if (v23 == *MEMORY[0x263F43BC8]) {
    goto LABEL_10;
  }
  if (v23 == *MEMORY[0x263F43BB8])
  {
    id v42 = v50;
    sub_24162EF48();
    ((void (*)(char *, uint64_t, uint64_t))v22)(v11, v0, v8);
    uint64_t v43 = v42;
    uint64_t v44 = sub_24162EF98();
    os_log_type_t v45 = sub_2416322D8();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = swift_slowAlloc();
      uint64_t v51 = (char *)swift_slowAlloc();
      os_log_type_t v55 = v51;
      *(_DWORD *)uint64_t v46 = 136446466;
      uint64_t v54 = sub_2411B6898(0x61746E6573657250, 0xEC0000006E6F6974, (uint64_t *)&v55);
      sub_241632C28();
      *(_WORD *)(v46 + 12) = 2080;
      sub_2412087E8();
      uint64_t v47 = sub_2416331D8();
      uint64_t v54 = sub_2411B6898(v47, v48, (uint64_t *)&v55);
      sub_241632C28();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      _os_log_impl(&dword_24118E000, v44, v45, "[%{public}s] Tried to submit analytics event from unexpected presentation context: %s", (uint8_t *)v46, 0x16u);
      long long v49 = v51;
      swift_arrayDestroy();
      MEMORY[0x245621640](v49, -1, -1);
      MEMORY[0x245621640](v46, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }

    (*(void (**)(char *, uint64_t))(v52 + 8))(v43, v53);
    return 0;
  }
  if (v23 == *MEMORY[0x263F43C00])
  {
LABEL_10:
    sub_24162EF48();
    ((void (*)(char *, uint64_t, uint64_t))v22)(v17, v0, v8);
    id v26 = sub_24162EF98();
    os_log_type_t v27 = sub_2416322D8();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v51 = (char *)swift_slowAlloc();
      os_log_type_t v55 = v51;
      *(_DWORD *)uint64_t v28 = 136446466;
      uint64_t v54 = sub_2411B6898(0x61746E6573657250, 0xEC0000006E6F6974, (uint64_t *)&v55);
      sub_241632C28();
      *(_WORD *)(v28 + 12) = 2080;
      sub_2412087E8();
      uint64_t v29 = sub_2416331D8();
      uint64_t v54 = sub_2411B6898(v29, v30, (uint64_t *)&v55);
      sub_241632C28();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
      _os_log_impl(&dword_24118E000, v26, v27, "[%{public}s] Tried to submit analytics event from unexpected presentation context: %s", (uint8_t *)v28, 0x16u);
      uint64_t v31 = v51;
      swift_arrayDestroy();
      MEMORY[0x245621640](v31, -1, -1);
      MEMORY[0x245621640](v28, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
    }

    (*(void (**)(char *, uint64_t))(v52 + 8))(v7, v53);
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v21, v8);
  return 0;
}

unint64_t sub_241207660(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v54 = sub_24162B718();
  uint64_t v53 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24162EFA8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v12 = MEMORY[0x270FA5388](v11).n128_u64[0];
  uint64_t v14 = (char *)&v50 - v13;
  id v15 = objc_msgSend(a1, sel_healthDataSource, v12);
  if (v15)
  {
    id v16 = v15;
    sub_2411BF8D0(0, (unint64_t *)&qword_268CFAB50, (uint64_t (*)(uint64_t))sub_241205E70, MEMORY[0x263F8E0F8]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24163A4F0;
    *(void *)(inited + 32) = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
    *(void *)(inited + 40) = v18;
    swift_getObjectType();
    uint64_t v52 = v2;
    sub_24162EF48();
    uint64_t v19 = sub_2413985FC();
    id v50 = v16;
    uint64_t v20 = v7;
    uint64_t v22 = v21;
    uint64_t v51 = v3;
    int v23 = *(void (**)(char *, uint64_t))(v8 + 8);
    v23(v14, v20);
    *(void *)(inited + 72) = MEMORY[0x263F8D310];
    *(void *)(inited + 48) = v19;
    *(void *)(inited + 56) = v22;
    *(void *)(inited + 80) = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
    *(void *)(inited + 88) = v24;
    sub_24162EF48();
    sub_2415BA568();
    id v25 = sub_241398898();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v6, v54);
    v23(v14, v20);
    *(void *)(inited + 120) = sub_241208894();
    *(void *)(inited + 96) = v25;
    unint64_t v26 = sub_2414E4810(inited);
    uint64_t v27 = v51;
    LOBYTE(v56) = *(unsigned char *)(v51 + 32);
    uint64_t v28 = sub_241631D48();
    uint64_t v29 = MEMORY[0x263F8D310];
    uint64_t v57 = MEMORY[0x263F8D310];
    *(void *)&long long v56 = v28;
    *((void *)&v56 + 1) = v30;
    sub_241205EDC(&v56, v55);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v58 = v26;
    sub_24134906C(v55, 0x747865746E6F63, 0xE700000000000000, isUniquelyReferenced_nonNull_native);
    unint64_t v32 = v58;
    swift_bridgeObjectRelease();
    LOBYTE(v56) = *(unsigned char *)(v27 + 33);
    uint64_t v33 = sub_241631D48();
    uint64_t v57 = v29;
    *(void *)&long long v56 = v33;
    *((void *)&v56 + 1) = v34;
    sub_241205EDC(&v56, v55);
    char v35 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v58 = v32;
    sub_24134906C(v55, 1885697139, 0xE400000000000000, v35);
    unint64_t v36 = v58;
    swift_bridgeObjectRelease();
    LOBYTE(v56) = *(unsigned char *)(v27 + 34);
    uint64_t v37 = sub_241631D48();
    uint64_t v57 = v29;
    *(void *)&long long v56 = v37;
    *((void *)&v56 + 1) = v38;
    sub_241205EDC(&v56, v55);
    char v39 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v58 = v36;
    sub_24134906C(v55, 0x6E6F69746361, 0xE600000000000000, v39);
    unint64_t v40 = v58;
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v54 = v8;
    sub_24162EF48();
    id v41 = sub_24162EF98();
    os_log_type_t v42 = sub_2416322D8();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      *(void *)&long long v56 = v44;
      uint64_t v53 = v7;
      *(_DWORD *)uint64_t v43 = 136446210;
      uint64_t v45 = sub_2416333E8();
      *(void *)&v55[0] = sub_2411B6898(v45, v46, (uint64_t *)&v56);
      sub_241632C28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v41, v42, "[%{public}s] Tried to create a payload with a dataSource containing nil healthDataSource", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245621640](v44, -1, -1);
      MEMORY[0x245621640](v43, -1, -1);

      (*(void (**)(char *, uint64_t))(v54 + 8))(v10, v53);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v54 + 8))(v10, v7);
    }
    uint64_t v47 = *(void *)(v3 + 16);
    unint64_t v40 = *(void *)(v3 + 24);
    sub_241208840();
    swift_allocError();
    *unint64_t v48 = v47;
    v48[1] = v40;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    swift_willThrow();
  }
  return v40;
}

uint64_t sub_241207D5C()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ReviewCycleFactorsEvent()
{
  return self;
}

uint64_t getEnumTagSinglePayload for ReviewCycleFactorsEvent.Action(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ReviewCycleFactorsEvent.Action(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241207F14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReviewCycleFactorsEvent.Action()
{
  return &type metadata for ReviewCycleFactorsEvent.Action;
}

unsigned char *storeEnumTagSinglePayload for ReviewCycleFactorsEvent.Step(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241208018);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReviewCycleFactorsEvent.Step()
{
  return &type metadata for ReviewCycleFactorsEvent.Step;
}

unsigned char *storeEnumTagSinglePayload for ReviewCycleFactorsEvent.Context(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24120811CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReviewCycleFactorsEvent.Context()
{
  return &type metadata for ReviewCycleFactorsEvent.Context;
}

unint64_t sub_241208158()
{
  unint64_t result = qword_268CFAB30;
  if (!qword_268CFAB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFAB30);
  }
  return result;
}

unint64_t sub_2412081B0()
{
  unint64_t result = qword_268CFAB38;
  if (!qword_268CFAB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFAB38);
  }
  return result;
}

unint64_t sub_241208208()
{
  unint64_t result = qword_268CFAB40;
  if (!qword_268CFAB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFAB40);
  }
  return result;
}

uint64_t sub_24120825C(char a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_24162CCF8();
  uint64_t v11 = *(void *)(v10 - 8);
  __n128 v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v14, a3, v10, v12);
  char v15 = sub_241206D64() & 1;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 0xD000000000000032;
  *(void *)(v16 + 24) = 0x8000000241658BD0;
  *(unsigned char *)(v16 + 32) = v15;
  *(unsigned char *)(v16 + 33) = a1;
  *(unsigned char *)(v16 + 34) = a2;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A0C0]), sel_initWithLoggingCategory_healthDataSource_, *MEMORY[0x263F09930], a4);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v5;
  aBlock[4] = sub_2412087E0;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_241328D44;
  aBlock[3] = &unk_26F569908;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v17, sel_submitEvent_completion_, v16, v19);
  _Block_release(v19);

  return swift_release_n();
}

void sub_24120849C(char a1, void *a2)
{
  uint64_t v4 = sub_24162EFA8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  BOOL v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    sub_24162EF48();
    id v8 = a2;
    id v9 = a2;
    uint64_t v10 = sub_24162EF98();
    os_log_type_t v11 = sub_2416322C8();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v20 = v13;
      *(_DWORD *)uint64_t v12 = 136446466;
      uint64_t v14 = sub_2416333E8();
      uint64_t v19 = sub_2411B6898(v14, v15, &v20);
      sub_241632C28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2082;
      uint64_t v19 = (uint64_t)a2;
      id v16 = a2;
      sub_2411BF8D0(0, (unint64_t *)&qword_26B010860, (uint64_t (*)(uint64_t))sub_2411CE834, MEMORY[0x263F8D8F0]);
      uint64_t v17 = sub_241631D58();
      uint64_t v19 = sub_2411B6898(v17, v18, &v20);
      sub_241632C28();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24118E000, v10, v11, "[%{public}s] Error submitting analytics event: %{public}s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245621640](v13, -1, -1);
      MEMORY[0x245621640](v12, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_241208738()
{
  unint64_t v0 = sub_241633108();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_241208784()
{
  unint64_t v0 = sub_241633108();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

uint64_t sub_2412087D0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_2412087E0(char a1, void *a2)
{
}

unint64_t sub_2412087E8()
{
  unint64_t result = qword_268CFAB48;
  if (!qword_268CFAB48)
  {
    sub_24162CCF8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFAB48);
  }
  return result;
}

unint64_t sub_241208840()
{
  unint64_t result = qword_268CFC430;
  if (!qword_268CFC430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFC430);
  }
  return result;
}

unint64_t sub_241208894()
{
  unint64_t result = qword_26B00E600;
  if (!qword_26B00E600)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B00E600);
  }
  return result;
}

unsigned char *_s11FeatureNameOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2412089A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11FeatureNameOMa()
{
  return &_s11FeatureNameON;
}

uint64_t sub_2412089E0(char *a1, char *a2)
{
  return sub_24149655C(*a1, *a2);
}

uint64_t sub_2412089EC()
{
  return sub_241206528();
}

uint64_t sub_2412089F4()
{
  sub_241631DC8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241208A68()
{
  return sub_241256FF4();
}

uint64_t sub_241208A70@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_241633108();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_241208AD0(unint64_t *a1@<X8>)
{
  if (*v1) {
    unint64_t v2 = 0xD00000000000001CLL;
  }
  else {
    unint64_t v2 = 0xD000000000000014;
  }
  unint64_t v3 = 0x8000000241656020;
  if (*v1) {
    unint64_t v3 = 0x8000000241656040;
  }
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_241208B18()
{
  unint64_t result = qword_268CFAB58;
  if (!qword_268CFAB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFAB58);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FilterSection(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FilterSection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241208CC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterSection()
{
  return &type metadata for FilterSection;
}

uint64_t getEnumTagSinglePayload for CycleHistoryFilter(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xCE) {
    goto LABEL_17;
  }
  if (a2 + 50 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 50) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 50;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 50;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 50;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x33;
  int v8 = v6 - 51;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CycleHistoryFilter(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 50 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 50) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xCE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xCD)
  {
    unsigned int v6 = ((a2 - 206) >> 8) + 1;
    *unint64_t result = a2 + 50;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241208E5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 50;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CycleHistoryFilter()
{
  return &type metadata for CycleHistoryFilter;
}

uint64_t sub_241208E94(char a1)
{
  uint64_t v2 = sub_24162B7E8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_241631CA8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  id v9 = &v13[-v8];
  uint64_t v10 = 0;
  switch(a1)
  {
    case 3:
      return v10;
    default:
      sub_241631C38();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v6, v9, v3);
      if (qword_26B0131F0 != -1) {
        swift_once();
      }
      id v11 = (id)qword_26B0181A0;
      sub_24162B7D8();
      uint64_t v10 = sub_241631D38();
      (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v9, v3);
      break;
  }
  return v10;
}

uint64_t sub_2412095D4(char a1)
{
  uint64_t v2 = sub_24162B7E8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_241631CA8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  id v9 = &v13[-v8];
  uint64_t v10 = 0;
  switch(a1)
  {
    case 3:
      return v10;
    default:
      sub_241631C38();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v6, v9, v3);
      if (qword_26B0131F0 != -1) {
        swift_once();
      }
      id v11 = (id)qword_26B0181A0;
      sub_24162B7D8();
      uint64_t v10 = sub_241631D38();
      (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v9, v3);
      break;
  }
  return v10;
}

uint64_t sub_241209D08(char a1)
{
  uint64_t result = 1;
  switch(a1)
  {
    case 4:
      return result;
    case 5:
      uint64_t result = 2;
      break;
    case 6:
      uint64_t result = 4;
      break;
    case 7:
      uint64_t result = 8;
      break;
    case 8:
      uint64_t result = 16;
      break;
    case 9:
      uint64_t result = 32;
      break;
    case 10:
      uint64_t result = 64;
      break;
    case 11:
      uint64_t result = 128;
      break;
    case 12:
      uint64_t result = 256;
      break;
    case 13:
      uint64_t result = 512;
      break;
    case 14:
      uint64_t result = 1024;
      break;
    case 15:
      uint64_t result = 2048;
      break;
    case 16:
      uint64_t result = 4096;
      break;
    case 17:
      uint64_t result = 0x2000;
      break;
    case 18:
      uint64_t result = 0x4000;
      break;
    case 32:
      uint64_t result = 0x8000;
      break;
    case 33:
      uint64_t result = 0x10000;
      break;
    case 34:
      uint64_t result = 0x20000;
      break;
    case 35:
      uint64_t result = 0x40000;
      break;
    case 36:
      uint64_t result = 0x80000;
      break;
    case 37:
      uint64_t result = 0x100000;
      break;
    case 38:
      uint64_t result = 0x200000;
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t sub_241209F0C(char a1)
{
  return byte_24163C02E[a1];
}

unint64_t sub_241209F28@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_24120B250(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_241209F58()
{
  unint64_t result = qword_268CFAB60;
  if (!qword_268CFAB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFAB60);
  }
  return result;
}

unint64_t sub_241209FB0()
{
  unint64_t result = qword_268CFAB68;
  if (!qword_268CFAB68)
  {
    sub_24120A008();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFAB68);
  }
  return result;
}

void sub_24120A008()
{
  if (!qword_268CFAB70)
  {
    unint64_t v0 = sub_241631FA8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFAB70);
    }
  }
}

uint64_t sub_24120A060(char a1)
{
  uint64_t v2 = sub_24162B7E8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_241631CA8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  id v9 = &v13[-v8];
  switch(a1)
  {
    case 1:
    case 2:
      sub_241631C38();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v6, v9, v3);
      if (qword_26B0131F0 != -1) {
        goto LABEL_6;
      }
      break;
    default:
      sub_241631C38();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v6, v9, v3);
      if (qword_26B0131F0 != -1) {
LABEL_6:
      }
        swift_once();
      break;
  }
  id v10 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v11 = sub_241631D38();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

void *sub_24120A3FC(char a1)
{
  unint64_t result = &unk_26F5665F8;
  switch(a1)
  {
    case 1:
      unint64_t result = &unk_26F566620;
      break;
    case 2:
      unint64_t result = &unk_26F566648;
      break;
    case 3:
      uint64_t v3 = &unk_26F566590;
      sub_24120A59C((uint64_t *)&v3);
      unint64_t result = v3;
      break;
    case 4:
      unint64_t result = &unk_26F566670;
      break;
    case 5:
      unint64_t result = &unk_26F566698;
      break;
    case 6:
      unint64_t result = &unk_26F5666E8;
      break;
    case 7:
      unint64_t result = &unk_26F5666C0;
      break;
    case 8:
      unint64_t result = &unk_26F566710;
      break;
    case 9:
      unint64_t result = &unk_26F566738;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24120A4FC@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_24120B260(*a1);
  *a2 = result;
  return result;
}

void sub_24120A528(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_24120A534(void *a1@<X8>)
{
  *a1 = &unk_26F5665C8;
}

unint64_t sub_24120A548()
{
  unint64_t result = qword_268CFAB78;
  if (!qword_268CFAB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFAB78);
  }
  return result;
}

uint64_t sub_24120A59C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_2414A13B8(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_24120A608(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_24120A608(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_2416331C8();
  if (result < v4)
  {
    if (v4 >= 0) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = v4 + 1;
    }
    if (v4 < -1) {
      goto LABEL_158;
    }
    uint64_t v100 = v4;
    uint64_t v98 = result;
    uint64_t v96 = a1;
    if (v4 < 2)
    {
      uint64_t v9 = MEMORY[0x263F8EE78];
      __dst = (char *)(MEMORY[0x263F8EE78] + 32);
      if (v4 != 1)
      {
        unint64_t v14 = *(void *)(MEMORY[0x263F8EE78] + 16);
        uint64_t v12 = (char *)MEMORY[0x263F8EE78];
        if (v14 < 2) {
          goto LABEL_127;
        }
        goto LABEL_115;
      }
      uint64_t v97 = MEMORY[0x263F8EE78];
      uint64_t v104 = v1;
    }
    else
    {
      uint64_t v104 = v1;
      uint64_t v7 = v6 >> 1;
      uint64_t v8 = sub_241631F88();
      *(void *)(v8 + 16) = v7;
      uint64_t v97 = v8;
      __dst = (char *)(v8 + 32);
    }
    uint64_t v10 = 0;
    uint64_t v11 = *a1;
    uint64_t v12 = (char *)MEMORY[0x263F8EE78];
    uint64_t v13 = v100;
LABEL_16:
    uint64_t v15 = v10++;
    if (v10 >= v13) {
      goto LABEL_44;
    }
    char v16 = *(unsigned char *)(v11 + v15);
    sub_241208E94(*(unsigned char *)(v11 + v10));
    if (v17)
    {
      sub_241208E94(v16);
      if (v18)
      {
        sub_2411D662C();
        uint64_t v19 = sub_241632CA8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        BOOL v20 = v19 == -1;
        uint64_t v21 = v15 + 2;
        uint64_t v13 = v100;
        if (v15 + 2 < v100) {
          goto LABEL_27;
        }
LABEL_31:
        if (v20) {
          goto LABEL_34;
        }
        goto LABEL_43;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v21 = v15 + 2;
    uint64_t v13 = v100;
    if (v15 + 2 >= v100) {
      goto LABEL_35;
    }
    BOOL v20 = 1;
    while (1)
    {
LABEL_27:
      char v23 = *(unsigned char *)(v11 + v10);
      sub_241208E94(*(unsigned char *)(v11 + v21));
      if (!v24) {
        goto LABEL_25;
      }
      sub_241208E94(v23);
      if (!v25) {
        break;
      }
      sub_2411D662C();
      uint64_t v26 = sub_241632CA8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (((v20 ^ (v26 != -1)) & 1) == 0)
      {
        uint64_t v13 = v100;
        goto LABEL_31;
      }
LABEL_26:
      uint64_t v22 = v21 + 1;
      uint64_t v10 = v21;
      uint64_t v21 = v22;
      uint64_t v13 = v100;
      if (v22 >= v100)
      {
        uint64_t v21 = v22;
        if (!v20) {
          goto LABEL_43;
        }
LABEL_34:
        if (v21 < v15) {
          goto LABEL_151;
        }
LABEL_35:
        if (v15 < v21)
        {
          uint64_t v27 = v21 - 1;
          uint64_t v28 = v15;
          do
          {
            if (v28 != v27)
            {
              if (!v11) {
                goto LABEL_156;
              }
              char v29 = *(unsigned char *)(v11 + v28);
              *(unsigned char *)(v11 + v28) = *(unsigned char *)(v11 + v27);
              *(unsigned char *)(v11 + v27) = v29;
            }
            BOOL v71 = ++v28 < v27--;
          }
          while (v71);
        }
LABEL_43:
        uint64_t v10 = v21;
LABEL_44:
        if (v10 >= v13) {
          goto LABEL_65;
        }
LABEL_45:
        if (__OFSUB__(v10, v15)) {
          goto LABEL_149;
        }
        if (v10 - v15 >= v98) {
          goto LABEL_65;
        }
        uint64_t v30 = v15 + v98;
        if (__OFADD__(v15, v98)) {
          goto LABEL_152;
        }
        if (v30 >= v13) {
          uint64_t v30 = v13;
        }
        if (v30 >= v15)
        {
          if (v10 == v30) {
            goto LABEL_65;
          }
          uint64_t v102 = v15;
          uint64_t v31 = (char *)(v11 + v10);
          uint64_t v99 = v30;
          while (2)
          {
            char v32 = *(unsigned char *)(v11 + v10);
            uint64_t v33 = v102;
            uint64_t v34 = v31;
            while (2)
            {
              char v35 = *(v34 - 1);
              sub_241208E94(v32);
              if (v36)
              {
                sub_241208E94(v35);
                if (v37)
                {
                  sub_2411D662C();
                  uint64_t v38 = sub_241632CA8();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (v38 != -1) {
                    break;
                  }
                  goto LABEL_58;
                }
                swift_bridgeObjectRelease();
                if (!v11) {
                  goto LABEL_154;
                }
              }
              else
              {
LABEL_58:
                if (!v11) {
                  goto LABEL_154;
                }
              }
              char v32 = *v34;
              *uint64_t v34 = *(v34 - 1);
              *(v34 - 1) = v32;
              ++v33;
              --v34;
              if (v10 != v33) {
                continue;
              }
              break;
            }
            ++v10;
            ++v31;
            if (v10 != v99) {
              continue;
            }
            break;
          }
          uint64_t v10 = v99;
          uint64_t v15 = v102;
LABEL_65:
          if (v10 < v15) {
            goto LABEL_144;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v12 = sub_2414A9DD0(0, *((void *)v12 + 2) + 1, 1, v12);
          }
          unint64_t v40 = *((void *)v12 + 2);
          unint64_t v39 = *((void *)v12 + 3);
          unint64_t v14 = v40 + 1;
          if (v40 >= v39 >> 1) {
            uint64_t v12 = sub_2414A9DD0((char *)(v39 > 1), v40 + 1, 1, v12);
          }
          *((void *)v12 + 2) = v14;
          uint64_t v103 = v12 + 32;
          id v41 = &v12[16 * v40 + 32];
          *(void *)id v41 = v15;
          *((void *)v41 + 1) = v10;
          if (v40)
          {
            os_log_type_t v42 = v12 + 32;
            while (1)
            {
              unint64_t v43 = v14 - 1;
              if (v14 >= 4)
              {
                unint64_t v48 = &v42[16 * v14];
                uint64_t v49 = *((void *)v48 - 8);
                uint64_t v50 = *((void *)v48 - 7);
                BOOL v54 = __OFSUB__(v50, v49);
                uint64_t v51 = v50 - v49;
                if (v54) {
                  goto LABEL_133;
                }
                uint64_t v53 = *((void *)v48 - 6);
                uint64_t v52 = *((void *)v48 - 5);
                BOOL v54 = __OFSUB__(v52, v53);
                uint64_t v46 = v52 - v53;
                char v47 = v54;
                if (v54) {
                  goto LABEL_134;
                }
                unint64_t v55 = v14 - 2;
                long long v56 = &v42[16 * v14 - 32];
                uint64_t v58 = *(void *)v56;
                uint64_t v57 = *((void *)v56 + 1);
                BOOL v54 = __OFSUB__(v57, v58);
                uint64_t v59 = v57 - v58;
                if (v54) {
                  goto LABEL_136;
                }
                BOOL v54 = __OFADD__(v46, v59);
                uint64_t v60 = v46 + v59;
                if (v54) {
                  goto LABEL_139;
                }
                if (v60 >= v51)
                {
                  uint64_t v78 = &v42[16 * v43];
                  uint64_t v80 = *(void *)v78;
                  uint64_t v79 = *((void *)v78 + 1);
                  BOOL v54 = __OFSUB__(v79, v80);
                  uint64_t v81 = v79 - v80;
                  if (v54) {
                    goto LABEL_143;
                  }
                  BOOL v71 = v46 < v81;
                  goto LABEL_103;
                }
              }
              else
              {
                if (v14 != 3)
                {
                  uint64_t v72 = *((void *)v12 + 4);
                  uint64_t v73 = *((void *)v12 + 5);
                  BOOL v54 = __OFSUB__(v73, v72);
                  uint64_t v65 = v73 - v72;
                  char v66 = v54;
                  goto LABEL_97;
                }
                uint64_t v45 = *((void *)v12 + 4);
                uint64_t v44 = *((void *)v12 + 5);
                BOOL v54 = __OFSUB__(v44, v45);
                uint64_t v46 = v44 - v45;
                char v47 = v54;
              }
              if (v47) {
                goto LABEL_135;
              }
              unint64_t v55 = v14 - 2;
              unint64_t v61 = &v42[16 * v14 - 32];
              uint64_t v63 = *(void *)v61;
              uint64_t v62 = *((void *)v61 + 1);
              BOOL v64 = __OFSUB__(v62, v63);
              uint64_t v65 = v62 - v63;
              char v66 = v64;
              if (v64) {
                goto LABEL_138;
              }
              uint64_t v67 = &v42[16 * v43];
              uint64_t v69 = *(void *)v67;
              uint64_t v68 = *((void *)v67 + 1);
              BOOL v54 = __OFSUB__(v68, v69);
              uint64_t v70 = v68 - v69;
              if (v54) {
                goto LABEL_141;
              }
              if (__OFADD__(v65, v70)) {
                goto LABEL_142;
              }
              if (v65 + v70 >= v46)
              {
                BOOL v71 = v46 < v70;
LABEL_103:
                if (v71) {
                  unint64_t v43 = v55;
                }
                goto LABEL_105;
              }
LABEL_97:
              if (v66) {
                goto LABEL_137;
              }
              uint64_t v74 = &v42[16 * v43];
              uint64_t v76 = *(void *)v74;
              uint64_t v75 = *((void *)v74 + 1);
              BOOL v54 = __OFSUB__(v75, v76);
              uint64_t v77 = v75 - v76;
              if (v54) {
                goto LABEL_140;
              }
              if (v77 < v65) {
                goto LABEL_15;
              }
LABEL_105:
              unint64_t v82 = v43 - 1;
              if (v43 - 1 >= v14)
              {
                __break(1u);
LABEL_130:
                __break(1u);
LABEL_131:
                __break(1u);
LABEL_132:
                __break(1u);
LABEL_133:
                __break(1u);
LABEL_134:
                __break(1u);
LABEL_135:
                __break(1u);
LABEL_136:
                __break(1u);
LABEL_137:
                __break(1u);
LABEL_138:
                __break(1u);
LABEL_139:
                __break(1u);
LABEL_140:
                __break(1u);
LABEL_141:
                __break(1u);
LABEL_142:
                __break(1u);
LABEL_143:
                __break(1u);
LABEL_144:
                __break(1u);
LABEL_145:
                __break(1u);
LABEL_146:
                __break(1u);
LABEL_147:
                __break(1u);
LABEL_148:
                __break(1u);
LABEL_149:
                __break(1u);
LABEL_150:
                __break(1u);
LABEL_151:
                __break(1u);
LABEL_152:
                __break(1u);
                goto LABEL_153;
              }
              if (!v11) {
                goto LABEL_155;
              }
              id v83 = v12;
              id v84 = &v42[16 * v82];
              CGFloat v85 = v42;
              uint64_t v86 = *(void *)v84;
              BOOL v87 = &v85[16 * v43];
              uint64_t v88 = *((void *)v87 + 1);
              sub_24120AF20((char *)(v11 + *(void *)v84), (char *)(v11 + *(void *)v87), v11 + v88, __dst);
              if (v104)
              {
                uint64_t v9 = v97;
                goto LABEL_127;
              }
              if (v88 < v86) {
                goto LABEL_130;
              }
              if (v43 > *((void *)v83 + 2)) {
                goto LABEL_131;
              }
              *(void *)id v84 = v86;
              os_log_type_t v42 = v103;
              *(void *)&v103[16 * v82 + 8] = v88;
              unint64_t v89 = *((void *)v83 + 2);
              if (v43 >= v89) {
                goto LABEL_132;
              }
              uint64_t v12 = v83;
              unint64_t v14 = v89 - 1;
              memmove(v87, v87 + 16, 16 * (v89 - 1 - v43));
              *((void *)v83 + 2) = v89 - 1;
              if (v89 <= 2) {
                goto LABEL_15;
              }
            }
          }
          unint64_t v14 = 1;
LABEL_15:
          uint64_t v13 = v100;
          if (v10 >= v100)
          {
            uint64_t v2 = v104;
            uint64_t v9 = v97;
            if (v14 < 2)
            {
LABEL_127:
              swift_bridgeObjectRelease();
              *(void *)(v9 + 16) = 0;
              return swift_bridgeObjectRelease();
            }
LABEL_115:
            uint64_t v90 = *v96;
            while (1)
            {
              unint64_t v91 = v14 - 2;
              if (v14 < 2) {
                goto LABEL_145;
              }
              if (!v90) {
                goto LABEL_157;
              }
              uint64_t v92 = *(void *)&v12[16 * v91 + 32];
              uint64_t v93 = *(void *)&v12[16 * v14 + 24];
              sub_24120AF20((char *)(v90 + v92), (char *)(v90 + *(void *)&v12[16 * v14 + 16]), v90 + v93, __dst);
              if (v2) {
                goto LABEL_127;
              }
              if (v93 < v92) {
                goto LABEL_146;
              }
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v12 = sub_2414AA258((uint64_t)v12);
              }
              if (v91 >= *((void *)v12 + 2)) {
                goto LABEL_147;
              }
              uint64_t v94 = &v12[16 * v91 + 32];
              *(void *)uint64_t v94 = v92;
              *((void *)v94 + 1) = v93;
              unint64_t v95 = *((void *)v12 + 2);
              if (v14 > v95) {
                goto LABEL_148;
              }
              memmove(&v12[16 * v14 + 16], &v12[16 * v14 + 32], 16 * (v95 - v14));
              *((void *)v12 + 2) = v95 - 1;
              unint64_t v14 = v95 - 1;
              if (v95 <= 2) {
                goto LABEL_127;
              }
            }
          }
          goto LABEL_16;
        }
LABEL_153:
        __break(1u);
LABEL_154:
        __break(1u);
LABEL_155:
        __break(1u);
LABEL_156:
        __break(1u);
LABEL_157:
        __break(1u);
LABEL_158:
        uint64_t result = sub_241633028();
        __break(1u);
        return result;
      }
    }
    swift_bridgeObjectRelease();
LABEL_25:
    if (!v20)
    {
      uint64_t v10 = v21;
      uint64_t v13 = v100;
      if (v21 >= v100) {
        goto LABEL_65;
      }
      goto LABEL_45;
    }
    goto LABEL_26;
  }
  if (v4 < 0) {
    goto LABEL_150;
  }
  if (v4) {
    return sub_24120ADF0(0, v4, 1, a1);
  }
  return result;
}

uint64_t sub_24120ADF0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v14 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    uint64_t v6 = (unsigned char *)(*a4 + a3);
LABEL_5:
    LOBYTE(result) = *(unsigned char *)(v5 + v4);
    uint64_t v7 = v14;
    uint64_t v8 = v6;
    while (1)
    {
      char v9 = *(v8 - 1);
      uint64_t result = sub_241208E94(result);
      if (!v10) {
        goto LABEL_9;
      }
      sub_241208E94(v9);
      if (v11) {
        break;
      }
      uint64_t result = swift_bridgeObjectRelease();
      if (!v5)
      {
LABEL_13:
        __break(1u);
        return result;
      }
LABEL_10:
      uint64_t result = *v8;
      *uint64_t v8 = *(v8 - 1);
      *(v8 - 1) = result;
      ++v7;
      --v8;
      if (v4 == v7)
      {
LABEL_4:
        ++v4;
        ++v6;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
    }
    sub_2411D662C();
    uint64_t v12 = sub_241632CA8();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v12 != -1) {
      goto LABEL_4;
    }
LABEL_9:
    if (!v5) {
      goto LABEL_13;
    }
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_24120AF20(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char v29 = __dst;
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  size_t v8 = a2 - __src;
  unint64_t v9 = a3 - (void)a2;
  uint64_t v30 = __src;
  if (a2 - __src >= (uint64_t)(a3 - (void)a2))
  {
    if ((v9 & 0x8000000000000000) != 0) {
      goto LABEL_45;
    }
    if (__dst != a2 || a3 <= (unint64_t)__dst) {
      memmove(__dst, a2, a3 - (void)a2);
    }
    char v16 = &v4[v9];
    uint64_t v28 = &v4[v9];
    uint64_t v30 = v6;
    if (__src >= v6 || (char *)a3 == v6)
    {
LABEL_44:
      sub_2414A9EC8((void **)&v30, (const void **)&v29, &v28);
      return 1;
    }
    uint64_t v17 = (char *)(a3 - 1);
    uint64_t v18 = v6;
    uint64_t v26 = v4;
    while (1)
    {
      uint64_t v19 = v17 + 1;
      char v21 = *--v18;
      char v20 = v21;
      sub_241208E94(*(v16 - 1));
      if (!v22) {
        goto LABEL_38;
      }
      sub_241208E94(v20);
      if (!v23) {
        break;
      }
      sub_2411D662C();
      uint64_t v24 = sub_241632CA8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v24 == -1) {
        goto LABEL_38;
      }
      uint64_t v28 = v16 - 1;
      if (v19 < v16 || v17 >= v16 || v19 != v16) {
        char *v17 = *(v16 - 1);
      }
      uint64_t v18 = v6;
      --v16;
LABEL_42:
      if (v18 > __src)
      {
        --v17;
        uint64_t v6 = v18;
        if (v16 > v26) {
          continue;
        }
      }
      goto LABEL_44;
    }
    swift_bridgeObjectRelease();
LABEL_38:
    if (v19 != v6 || v17 >= v6) {
      char *v17 = *v18;
    }
    uint64_t v30 = v18;
    goto LABEL_42;
  }
  if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst) {
      memmove(__dst, __src, v8);
    }
    uint64_t v10 = &v4[v8];
    uint64_t v28 = &v4[v8];
    if (v6 != v7 && (unint64_t)v6 < a3)
    {
      while (1)
      {
        char v11 = *v4;
        sub_241208E94(*v6);
        if (!v12) {
          goto LABEL_15;
        }
        sub_241208E94(v11);
        if (!v13) {
          break;
        }
        sub_2411D662C();
        uint64_t v14 = sub_241632CA8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v14 == -1) {
          goto LABEL_15;
        }
        if (v7 != v4) {
          *uint64_t v7 = *v4;
        }
        char v29 = ++v4;
        uint64_t v15 = v6;
LABEL_19:
        ++v7;
        if (v4 < v10)
        {
          uint64_t v6 = v15;
          if ((unint64_t)v15 < a3) {
            continue;
          }
        }
        uint64_t v30 = v7;
        goto LABEL_44;
      }
      swift_bridgeObjectRelease();
LABEL_15:
      uint64_t v15 = v6 + 1;
      if (v7 < v6 || v7 >= v15 || v7 != v6) {
        *uint64_t v7 = *v6;
      }
      goto LABEL_19;
    }
    goto LABEL_44;
  }
LABEL_45:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

unint64_t sub_24120B250(unint64_t result)
{
  if (result >= 0x33) {
    return 51;
  }
  return result;
}

unint64_t sub_24120B260(unint64_t result)
{
  if (result >= 0xA) {
    return 10;
  }
  return result;
}

uint64_t sub_24120B27C(void *a1, uint64_t a2)
{
  type metadata accessor for CycleChartsEditViewModel();
  swift_allocObject();
  id v4 = a1;
  swift_retain();
  return sub_2411FFCC4(v4, a2);
}

uint64_t sub_24120B2E0()
{
  return swift_retain();
}

uint64_t destroy for CycleChartsEditView()
{
  swift_release();

  return sub_24120B328();
}

uint64_t sub_24120B328()
{
  return swift_release();
}

uint64_t initializeWithCopy for CycleChartsEditView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  char v6 = *(unsigned char *)(a2 + 32);
  swift_retain();
  sub_24120B2E0();
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  return a1;
}

uint64_t assignWithCopy for CycleChartsEditView(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  LOBYTE(v2) = *((unsigned char *)v2 + 32);
  sub_24120B2E0();
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = (_BYTE)v2;
  sub_24120B328();
  return a1;
}

__n128 initializeWithTake for CycleChartsEditView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for CycleChartsEditView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  char v4 = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = v4;
  sub_24120B328();
  return a1;
}

uint64_t getEnumTagSinglePayload for CycleChartsEditView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CycleChartsEditView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CycleChartsEditView()
{
  return &type metadata for CycleChartsEditView;
}

uint64_t sub_24120B500()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24120B51C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v68 = a2;
  sub_24120DE1C();
  uint64_t v70 = *(void *)(v3 - 8);
  uint64_t v71 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v69 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v67 = (char *)&v55 - v6;
  MEMORY[0x270FA5388](v7);
  uint64_t v72 = (char *)&v55 - v8;
  uint64_t v9 = sub_24162B7E8();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v10 = sub_241631CA8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v63 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v55 - v14;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v55 - v17;
  sub_241631C38();
  uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v60(v15, v18, v10);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v19 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v20 = sub_241631D38();
  uint64_t v22 = v21;
  long long v56 = *(void (**)(char *, uint64_t))(v11 + 8);
  v56(v18, v10);
  uint64_t v74 = v20;
  uint64_t v75 = v22;
  unint64_t v62 = sub_2411D662C();
  uint64_t v23 = sub_241630C28();
  uint64_t v64 = v24;
  uint64_t v65 = v23;
  int v61 = v25;
  uint64_t v66 = v26;
  uint64_t v27 = *(void *)(a1 + 16);
  uint64_t v28 = *(void *)(a1 + 24);
  int v29 = *(unsigned __int8 *)(a1 + 32);
  type metadata accessor for CycleChartsEditViewModel();
  sub_2412101F8(&qword_268CFAC60, (void (*)(uint64_t))type metadata accessor for CycleChartsEditViewModel);
  uint64_t v58 = v28;
  uint64_t v59 = v27;
  int v57 = v29;
  uint64_t v30 = *(void *)(sub_24162FF08() + 24);
  id v31 = (id)HKMCSymptomSampleTypes();
  sub_2411B9D00(0, (unint64_t *)&qword_26B0125F0);
  uint64_t v32 = sub_241631F28();

  if ((unint64_t)v32 >> 62)
  {
    uint64_t v54 = v32 & 0xFFFFFFFFFFFFFF8;
    if (v32 < 0) {
      uint64_t v54 = v32;
    }
    uint64_t v55 = v54;
    sub_2411B9D00(0, (unint64_t *)&qword_26B012368);
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    unint64_t v33 = sub_241633058();
    swift_bridgeObjectRelease();
  }
  else
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_241633228();
    sub_2411B9D00(0, (unint64_t *)&qword_26B012368);
    unint64_t v33 = v32;
  }
  swift_bridgeObjectRelease();
  swift_retain();
  sub_24120F534(v33, v30);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v34 = v63;
  sub_241631C38();
  v60(v18, v34, v10);
  id v35 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v36 = sub_241631D38();
  uint64_t v38 = v37;
  v56(v34, v10);
  uint64_t v74 = v36;
  uint64_t v75 = v38;
  uint64_t v39 = swift_allocObject();
  long long v40 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v39 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v39 + 32) = v40;
  *(unsigned char *)(v39 + 48) = *(unsigned char *)(a1 + 32);
  swift_retain();
  sub_24120B2E0();
  id v41 = v67;
  sub_241631198();
  uint64_t v43 = v70;
  uint64_t v42 = v71;
  uint64_t v44 = v72;
  (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v72, v41, v71);
  LOBYTE(v74) = v61 & 1;
  char v73 = 1;
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
  uint64_t v46 = v69;
  v45(v69, v44, v42);
  LOBYTE(v41) = v74;
  char v47 = v68;
  uint64_t v48 = v64;
  uint64_t v49 = v65;
  uint64_t *v68 = v65;
  v47[1] = v48;
  *((unsigned char *)v47 + 16) = (_BYTE)v41;
  char v50 = v73;
  void v47[3] = v66;
  v47[4] = 0;
  *((unsigned char *)v47 + 40) = v50;
  sub_24120DDAC();
  v45((char *)v47 + *(int *)(v51 + 64), v46, v42);
  sub_24120F7E4(v49, v48, (char)v41);
  uint64_t v52 = *(void (**)(char *, uint64_t))(v43 + 8);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  v52(v72, v42);
  v52(v46, v42);
  sub_24120EFBC(v49, v48, v74);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24120BBDC()
{
  type metadata accessor for CycleChartsEditViewModel();
  sub_2412101F8(&qword_268CFAC60, (void (*)(uint64_t))type metadata accessor for CycleChartsEditViewModel);
  uint64_t v0 = *(void *)(sub_24162FF08() + 24);
  id v1 = (id)HKMCSymptomSampleTypes();
  sub_2411B9D00(0, (unint64_t *)&qword_26B0125F0);
  unint64_t v2 = sub_241631F28();

  if (v2 >> 62)
  {
    sub_2411B9D00(0, (unint64_t *)&qword_26B012368);
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    unint64_t v3 = sub_241633058();
    swift_bridgeObjectRelease();
  }
  else
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_241633228();
    sub_2411B9D00(0, (unint64_t *)&qword_26B012368);
    unint64_t v3 = v2;
  }
  swift_bridgeObjectRelease();
  swift_retain();
  char v4 = sub_24120F534(v3, v0);
  swift_bridgeObjectRelease();
  swift_release();
  if (v4) {
    sub_24131DCC0();
  }
  else {
    sub_24131DC9C();
  }
  sub_24162FAC8();
  sub_24162FB68();
  swift_release();

  return swift_release();
}

uint64_t sub_24120BDBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v90 = a2;
  uint64_t v3 = sub_241630468();
  uint64_t v88 = *(void *)(v3 - 8);
  uint64_t v89 = v3;
  MEMORY[0x270FA5388](v3);
  BOOL v87 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24162B7E8();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v86 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_241631CA8();
  uint64_t v81 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v75 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v74 = (char *)&v68 - v9;
  uint64_t v82 = sub_2416313A8();
  uint64_t v80 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v79 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24120DF6C(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v77 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_24162FE98();
  uint64_t v13 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  uint64_t v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24120D994();
  uint64_t v69 = v16;
  uint64_t v72 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24120D8E0();
  uint64_t v78 = v19;
  uint64_t v76 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v68 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24120D8AC(0);
  uint64_t v73 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24120FABC(0, &qword_268CFAB88, sub_24120D8AC, (void (*)(void))sub_24120DFD4);
  uint64_t v84 = *(void *)(v24 - 8);
  uint64_t v85 = v24;
  MEMORY[0x270FA5388](v24);
  unint64_t v91 = (char *)&v68 - v25;
  type metadata accessor for CycleChartsEditViewModel();
  sub_2412101F8(&qword_268CFAC60, (void (*)(uint64_t))type metadata accessor for CycleChartsEditViewModel);
  sub_24162FF18();
  swift_getKeyPath();
  sub_2416300C8();
  swift_release();
  swift_release();
  uint64_t v83 = a1;
  uint64_t v92 = a1;
  sub_24120DBD8(0, &qword_268CFABA8, (uint64_t (*)(uint64_t))sub_24120DA44, MEMORY[0x263F1BAC8]);
  sub_24120DEB0();
  uint64_t v26 = v74;
  uint64_t v27 = v75;
  sub_241630B38();
  uint64_t v28 = v71;
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F18440], v71);
  sub_2412101F8(&qword_268CFAC10, (void (*)(uint64_t))sub_24120D994);
  int v29 = v68;
  uint64_t v30 = v69;
  sub_241630D68();
  id v31 = v15;
  uint64_t v32 = v81;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v31, v28);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v18, v30);
  uint64_t KeyPath = swift_getKeyPath();
  id v35 = v79;
  uint64_t v34 = v80;
  uint64_t v36 = v82;
  (*(void (**)(char *, void, uint64_t))(v80 + 104))(v79, *MEMORY[0x263F1B878], v82);
  uint64_t v37 = v77;
  sub_2416312A8();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
  sub_24120DFA0(0);
  uint64_t v39 = (uint64_t)v37;
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v37, 0, 1, v38);
  uint64_t v40 = v73;
  id v41 = (uint64_t *)&v23[*(int *)(v73 + 36)];
  sub_24120DF38(0);
  sub_24120E294(v39, (uint64_t)v41 + *(int *)(v42 + 28));
  *id v41 = KeyPath;
  uint64_t v43 = v76;
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
  uint64_t v82 = (uint64_t)v23;
  uint64_t v45 = v78;
  v44(v23, v29, v78);
  sub_24120EFCC(v39, (uint64_t (*)(void))sub_24120DF6C);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v29, v45);
  sub_241631C38();
  uint64_t v46 = v70;
  (*(void (**)(char *, char *))(v32 + 16))(v27, v26);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v47 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v48 = sub_241631D38();
  unint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v26, v46);
  uint64_t v93 = v48;
  unint64_t v94 = v50;
  sub_2411D662C();
  uint64_t v51 = sub_241630C28();
  uint64_t v53 = v52;
  char v55 = v54 & 1;
  int v57 = v87;
  uint64_t v56 = v88;
  uint64_t v58 = v89;
  (*(void (**)(char *, void, uint64_t))(v88 + 104))(v87, *MEMORY[0x263F19698], v89);
  unint64_t v59 = sub_24120DFD4();
  uint64_t v60 = v82;
  sub_241630DE8();
  sub_24120EFBC(v51, v53, v55);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v58);
  uint64_t v61 = sub_24120EFCC(v60, (uint64_t (*)(void))sub_24120D8AC);
  MEMORY[0x270FA5388](v61);
  sub_24120E0DC();
  uint64_t v93 = v40;
  unint64_t v94 = v59;
  swift_getOpaqueTypeConformance2();
  sub_24120E190();
  uint64_t v63 = v62;
  uint64_t v64 = sub_2412101F8(&qword_268CFAC58, (void (*)(uint64_t))sub_24120E190);
  uint64_t v93 = v63;
  unint64_t v94 = v64;
  swift_getOpaqueTypeConformance2();
  uint64_t v65 = v85;
  uint64_t v66 = v91;
  sub_241630EC8();
  return (*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v66, v65);
}

uint64_t sub_24120C8E4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v6 = sub_24131D9F8();
  uint64_t v4 = _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_2413A65F4(v4);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_retain();
  sub_24120F25C(v6, v3, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease_n();
  return sub_24131EAD8();
}

uint64_t sub_24120C994@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v40 = a2;
  sub_24120FFC0(0, &qword_268CFABE0, (uint64_t (*)(uint64_t))sub_24120DD78, sub_24120DE7C, MEMORY[0x263F1B640]);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v33 - v4;
  sub_24120DCC4();
  uint64_t v39 = v6;
  uint64_t v37 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v38 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v33 - v9;
  sub_24120DAB4();
  uint64_t v12 = v11;
  uint64_t v36 = *(void *)(v11 - 8);
  uint64_t v13 = v36;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v33 - v17;
  uint64_t v43 = 0;
  char v44 = 0;
  uint64_t v42 = a1;
  sub_24120DB1C();
  sub_24120F07C();
  id v35 = v18;
  sub_241631318();
  *(void *)uint64_t v5 = sub_241630498();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  sub_24120F140();
  sub_24120B51C(a1, (uint64_t *)&v5[*(int *)(v19 + 44)]);
  uint64_t v41 = a1;
  sub_24120F1B0();
  unint64_t v33 = v10;
  sub_241631318();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  uint64_t v34 = v15;
  uint64_t v21 = v18;
  uint64_t v22 = v12;
  v20(v15, v21, v12);
  uint64_t v24 = v37;
  uint64_t v23 = v38;
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  uint64_t v26 = v10;
  uint64_t v27 = v39;
  v25(v38, v26, v39);
  uint64_t v28 = v40;
  v20(v40, v15, v22);
  sub_24120DA44();
  v25(&v28[*(int *)(v29 + 48)], v23, v27);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v24 + 8);
  v30(v33, v27);
  id v31 = *(void (**)(char *, uint64_t))(v36 + 8);
  v31(v35, v22);
  v30(v23, v27);
  return ((uint64_t (*)(char *, uint64_t))v31)(v34, v22);
}

uint64_t sub_24120CD5C()
{
  return sub_2416312E8();
}

void sub_24120CEAC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_identifier);
  uint64_t v4 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

uint64_t sub_24120CF08()
{
  return sub_2416312E8();
}

uint64_t sub_24120D058@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CycleChartsEditViewDataTypeModel();
  sub_2412101F8(&qword_268CFAC88, (void (*)(uint64_t))type metadata accessor for CycleChartsEditViewDataTypeModel);
  swift_retain();
  uint64_t result = sub_2416300A8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24120D0E0(uint64_t a1)
{
  sub_24120DF6C(0);
  MEMORY[0x270FA5388](v2 - 8);
  sub_24120E294(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_2416303D8();
}

uint64_t sub_24120D168(uint64_t a1)
{
  uint64_t v2 = sub_2416306B8();
  MEMORY[0x270FA5388](v2 - 8);
  sub_24120E190();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241630698();
  uint64_t v11 = a1;
  sub_24120DE1C();
  sub_2412101F8((unint64_t *)&qword_268CFAC50, (void (*)(uint64_t))sub_24120DE1C);
  sub_24162FF38();
  uint64_t v8 = sub_2412101F8(&qword_268CFAC58, (void (*)(uint64_t))sub_24120E190);
  MEMORY[0x24561DBD0](v7, v4, v8);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_24120D338(uint64_t a1)
{
  uint64_t v2 = sub_24162B7E8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_241631CA8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v17 - v8;
  sub_241631C38();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v10 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v11 = sub_241631D38();
  uint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  v17[1] = v11;
  v17[2] = v13;
  long long v18 = *(_OWORD *)(a1 + 16);
  char v19 = *(unsigned char *)(a1 + 32);
  uint64_t v14 = swift_allocObject();
  long long v15 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v14 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v14 + 32) = v15;
  *(unsigned char *)(v14 + 48) = *(unsigned char *)(a1 + 32);
  swift_retain();
  sub_24120F040((uint64_t)&v18);
  sub_2411D662C();
  return sub_241631198();
}

uint64_t sub_24120D598()
{
  return sub_241630198();
}

uint64_t sub_24120D730@<X0>(uint64_t a1@<X8>)
{
  return sub_24120BDBC(*(void *)(v1 + 16), a1);
}

void sub_24120D738()
{
  if (!qword_268CFAB80)
  {
    sub_24120FABC(255, &qword_268CFAB88, sub_24120D8AC, (void (*)(void))sub_24120DFD4);
    sub_24120E0DC();
    sub_24120D8AC(255);
    sub_24120DFD4();
    swift_getOpaqueTypeConformance2();
    sub_24120E190();
    sub_2412101F8(&qword_268CFAC58, (void (*)(uint64_t))sub_24120E190);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268CFAB80);
    }
  }
}

void sub_24120D8AC(uint64_t a1)
{
}

void sub_24120D8E0()
{
  if (!qword_268CFAB98)
  {
    sub_24120D994();
    sub_2412101F8(&qword_268CFAC10, (void (*)(uint64_t))sub_24120D994);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268CFAB98);
    }
  }
}

void sub_24120D994()
{
  if (!qword_268CFABA0)
  {
    sub_24120DBD8(255, &qword_268CFABA8, (uint64_t (*)(uint64_t))sub_24120DA44, MEMORY[0x263F1BAC8]);
    sub_24120DEB0();
    unint64_t v0 = sub_241630B68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFABA0);
    }
  }
}

void sub_24120DA44()
{
  if (!qword_268CFABB0)
  {
    sub_24120DAB4();
    sub_24120DCC4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CFABB0);
    }
  }
}

void sub_24120DAB4()
{
  if (!qword_268CFABB8)
  {
    sub_24120DB1C();
    unint64_t v0 = sub_241631358();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFABB8);
    }
  }
}

void sub_24120DB1C()
{
  if (!qword_268CFABC0)
  {
    sub_24120DBD8(255, &qword_268CFABC8, (uint64_t (*)(uint64_t))type metadata accessor for CycleChartsEditViewDataTypeModel, MEMORY[0x263F8D488]);
    sub_24120DC3C();
    unint64_t v0 = sub_241631308();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFABC0);
    }
  }
}

void sub_24120DBD8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_24120DC3C()
{
  unint64_t result = qword_268CFABD0;
  if (!qword_268CFABD0)
  {
    sub_24120DBD8(255, &qword_268CFABC8, (uint64_t (*)(uint64_t))type metadata accessor for CycleChartsEditViewDataTypeModel, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFABD0);
  }
  return result;
}

void sub_24120DCC4()
{
  if (!qword_268CFABD8)
  {
    sub_24120FFC0(255, &qword_268CFABE0, (uint64_t (*)(uint64_t))sub_24120DD78, sub_24120DE7C, MEMORY[0x263F1B640]);
    sub_24120DB1C();
    unint64_t v0 = sub_241631358();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFABD8);
    }
  }
}

void sub_24120DD78(uint64_t a1)
{
}

void sub_24120DDAC()
{
  if (!qword_268CFABF0)
  {
    sub_24120DE1C();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268CFABF0);
    }
  }
}

void sub_24120DE1C()
{
  if (!qword_268CFABF8)
  {
    unint64_t v0 = sub_2416311A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFABF8);
    }
  }
}

uint64_t sub_24120DE7C()
{
  return sub_2412101F8(&qword_268CFAC00, sub_24120DD78);
}

unint64_t sub_24120DEB0()
{
  unint64_t result = qword_268CFAC08;
  if (!qword_268CFAC08)
  {
    sub_24120DBD8(255, &qword_268CFABA8, (uint64_t (*)(uint64_t))sub_24120DA44, MEMORY[0x263F1BAC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFAC08);
  }
  return result;
}

void sub_24120DF38(uint64_t a1)
{
}

void sub_24120DF6C(uint64_t a1)
{
}

void sub_24120DFA0(uint64_t a1)
{
}

unint64_t sub_24120DFD4()
{
  unint64_t result = qword_268CFAC30;
  if (!qword_268CFAC30)
  {
    sub_24120D8AC(255);
    sub_24120D994();
    sub_2412101F8(&qword_268CFAC10, (void (*)(uint64_t))sub_24120D994);
    swift_getOpaqueTypeConformance2();
    sub_2412101F8(&qword_268CFAC38, sub_24120DF38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFAC30);
  }
  return result;
}

void sub_24120E0DC()
{
  if (!qword_268CFAC40)
  {
    sub_24120E190();
    sub_2412101F8(&qword_268CFAC58, (void (*)(uint64_t))sub_24120E190);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268CFAC40);
    }
  }
}

void sub_24120E190()
{
  if (!qword_268CFAC48)
  {
    sub_24120DE1C();
    sub_2412101F8((unint64_t *)&qword_268CFAC50, (void (*)(uint64_t))sub_24120DE1C);
    unint64_t v0 = sub_24162FF48();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFAC48);
    }
  }
}

uint64_t sub_24120E230@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24131D9F8();
  *a1 = result;
  return result;
}

uint64_t sub_24120E264@<X0>(char *a1@<X8>)
{
  return sub_24120C994(*(void *)(v1 + 16), a1);
}

uint64_t sub_24120E26C()
{
  return sub_2416303C8();
}

uint64_t sub_24120E294(uint64_t a1, uint64_t a2)
{
  sub_24120DF6C(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24120E2F8()
{
  uint64_t v0 = sub_24162B568();
  uint64_t v58 = *(void *)(v0 - 8);
  uint64_t v59 = v0;
  MEMORY[0x270FA5388](v0);
  uint64_t v56 = (char *)&v55 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_24162B538();
  uint64_t v60 = *(void *)(v2 - 8);
  uint64_t v61 = v2;
  MEMORY[0x270FA5388](v2);
  int v57 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24162B5A8();
  uint64_t v69 = *(void *)(v4 - 8);
  uint64_t v70 = (void (*)(void, void))v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v67 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24162B9E8();
  uint64_t v64 = *(void *)(v6 - 8);
  uint64_t v65 = v6;
  MEMORY[0x270FA5388](v6);
  unint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24162BA08();
  uint64_t v62 = *(void *)(v9 - 8);
  uint64_t v63 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_24162B5B8();
  uint64_t v68 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  uint64_t v66 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  long long v15 = (char *)&v55 - v14;
  MEMORY[0x270FA5388](v16);
  uint64_t v72 = (char *)&v55 - v17;
  sub_2411C85F4(0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_24162B718();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v73 = (char *)&v55 - v26;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_24162FC48();
  swift_release();
  swift_release();
  id v27 = v74;
  if (v74)
  {
    id v28 = objc_msgSend(v74, sel_endDate);

    sub_24162B6A8();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v21);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, 1, 1, v21);
  }
  swift_release();
  uint64_t v29 = v21;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    sub_24120EFCC((uint64_t)v20, (uint64_t (*)(void))sub_2411C85F4);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v73, v20, v21);
    sub_24162B9A8();
    sub_24162B6B8();
    uint64_t v32 = v64;
    uint64_t v31 = v65;
    (*(void (**)(char *, void, uint64_t))(v64 + 104))(v8, *MEMORY[0x263F078A0], v65);
    char v33 = sub_24162B988();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v31);
    uint64_t v34 = *(void (**)(char *, uint64_t))(v22 + 8);
    uint64_t v64 = v22 + 8;
    uint64_t v65 = v29;
    char v55 = v34;
    v34(v24, v29);
    uint64_t v35 = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v11, v63);
    uint64_t v36 = v66;
    MEMORY[0x245618740](v35);
    uint64_t v37 = v68;
    uint64_t v38 = (void (**)(char *, uint64_t))(v68 + 8);
    if (v33)
    {
      uint64_t v39 = v67;
      sub_24162B578();
      sub_24162B518();
      (*(void (**)(char *, void))(v69 + 8))(v39, v70);
      uint64_t v40 = v15;
      uint64_t v41 = *v38;
      uint64_t v63 = (unint64_t)v38 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v42 = v71;
      v41(v36, v71);
      uint64_t v43 = v57;
      sub_24162B528();
      char v44 = v72;
      sub_24162B4F8();
      uint64_t v46 = v60;
      uint64_t v45 = (void (*)(void, void))v61;
    }
    else
    {
      id v47 = v56;
      sub_24162B548();
      sub_24162B508();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v47, v59);
      uint64_t v40 = v15;
      uint64_t v41 = *v38;
      uint64_t v63 = (unint64_t)v38 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v42 = v71;
      v41(v36, v71);
      uint64_t v43 = v67;
      sub_24162B578();
      char v44 = v72;
      sub_24162B518();
      uint64_t v46 = v69;
      uint64_t v45 = v70;
    }
    (*(void (**)(char *, void))(v46 + 8))(v43, v45);
    uint64_t v70 = (void (*)(void, void))v41;
    v41(v40, v42);
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v24, v73, v65);
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v40, v44, v42);
    sub_2412101F8((unint64_t *)&qword_268CFA550, MEMORY[0x263F07258]);
    uint64_t v48 = v42;
    sub_2412101F8((unint64_t *)&qword_268CFAD00, MEMORY[0x263F07490]);
    uint64_t v49 = sub_241630BF8();
    uint64_t v51 = v50;
    char v53 = v52 & 1;
    sub_2416309D8();
    uint64_t v30 = sub_241630BE8();
    swift_release();
    sub_24120EFBC(v49, v51, v53);
    swift_bridgeObjectRelease();
    v70(v72, v48);
    v55(v73, v65);
  }
  return v30;
}

uint64_t sub_24120EBBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  v40[1] = MEMORY[0x263F1AC68];
  _OWORD v40[2] = a1;
  sub_24120FABC(0, &qword_268CFACA0, (void (*)(uint64_t))sub_24120FB48, (void (*)(void))sub_24120FC00);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v41 = v2;
  uint64_t v42 = v3;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v40 - v4;
  sub_24120FCA8();
  uint64_t v43 = *(void *)(v6 - 8);
  uint64_t v44 = v6;
  MEMORY[0x270FA5388](v6);
  v40[0] = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  id v8 = sub_241200300();
  unint64_t v10 = v9;
  swift_release();
  uint64_t v46 = (uint64_t)v8;
  unint64_t v47 = v10;
  sub_2411D662C();
  uint64_t v11 = sub_241630C28();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v46 = v11;
  unint64_t v47 = v13;
  char v48 = v17;
  uint64_t v49 = v15;
  uint64_t v50 = KeyPath;
  uint64_t v51 = 0x3FE999999999999ALL;
  sub_24120FB48();
  uint64_t v20 = v19;
  unint64_t v21 = sub_24120FC00();
  sub_241630D78();
  sub_24120EFBC(v11, v13, v17);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_24120E2F8();
  uint64_t v24 = v23;
  char v26 = v25;
  uint64_t v28 = v27;
  uint64_t v46 = v20;
  unint64_t v47 = v21;
  swift_getOpaqueTypeConformance2();
  uint64_t v29 = v40[0];
  uint64_t v30 = v41;
  sub_241630E88();
  sub_24120FDF0(v22, v24, v26, v28);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v5, v30);
  id v31 = objc_msgSend(self, sel_secondarySystemGroupedBackgroundColor);
  uint64_t v46 = MEMORY[0x24561E470](v31);
  LOWORD(v47) = 256;
  sub_24120FE34();
  sub_2412101F8(&qword_268CFACE0, (void (*)(uint64_t))sub_24120FE34);
  swift_retain();
  uint64_t v32 = sub_241631258();
  uint64_t v33 = v43;
  uint64_t v34 = v45;
  uint64_t v35 = v29;
  uint64_t v36 = v29;
  uint64_t v37 = v44;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v45, v36, v44);
  swift_release();
  sub_24120FF04(0, &qword_268CFACE8, (void (*)(uint64_t))sub_24120FCA8, sub_24120FF78);
  *(void *)(v34 + *(int *)(v38 + 36)) = v32;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v35, v37);
}

uint64_t sub_24120EFB4@<X0>(uint64_t a1@<X8>)
{
  return sub_24120EBBC(*v1, a1);
}

uint64_t sub_24120EFBC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24120EFCC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24120F02C()
{
  return sub_24120D168(*(void *)(v0 + 16));
}

uint64_t sub_24120F034()
{
  return sub_24120D338(*(void *)(v0 + 16));
}

uint64_t sub_24120F040(uint64_t a1)
{
  return a1;
}

uint64_t sub_24120F074()
{
  return sub_24120CD5C();
}

unint64_t sub_24120F07C()
{
  unint64_t result = qword_268CFAC68;
  if (!qword_268CFAC68)
  {
    sub_24120DB1C();
    sub_24120F0EC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFAC68);
  }
  return result;
}

unint64_t sub_24120F0EC()
{
  unint64_t result = qword_268CFAC70;
  if (!qword_268CFAC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFAC70);
  }
  return result;
}

void sub_24120F140()
{
  if (!qword_268CFAC78)
  {
    sub_24120DD78(255);
    unint64_t v0 = sub_241630028();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFAC78);
    }
  }
}

uint64_t sub_24120F1A8()
{
  return sub_24120CF08();
}

unint64_t sub_24120F1B0()
{
  unint64_t result = qword_268CFAC80;
  if (!qword_268CFAC80)
  {
    sub_24120FFC0(255, &qword_268CFABE0, (uint64_t (*)(uint64_t))sub_24120DD78, sub_24120DE7C, MEMORY[0x263F1B640]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFAC80);
  }
  return result;
}

char *sub_24120F24C()
{
  return sel_identifier;
}

uint64_t sub_24120F25C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 56);
  int64_t v29 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v31 = a3 + 56;
  uint64_t result = _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v8 << 6);
      goto LABEL_24;
    }
    int64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v12 >= v29) {
      return swift_release();
    }
    unint64_t v13 = *(void *)(v28 + 8 * v12);
    ++v8;
    if (!v13)
    {
      int64_t v8 = v12 + 1;
      if (v12 + 1 >= v29) {
        return swift_release();
      }
      unint64_t v13 = *(void *)(v28 + 8 * v8);
      if (!v13)
      {
        int64_t v8 = v12 + 2;
        if (v12 + 2 >= v29) {
          return swift_release();
        }
        unint64_t v13 = *(void *)(v28 + 8 * v8);
        if (!v13)
        {
          int64_t v8 = v12 + 3;
          if (v12 + 3 >= v29) {
            return swift_release();
          }
          unint64_t v13 = *(void *)(v28 + 8 * v8);
          if (!v13)
          {
            int64_t v14 = v12 + 4;
            if (v14 >= v29) {
              return swift_release();
            }
            unint64_t v13 = *(void *)(v28 + 8 * v14);
            int64_t v8 = v14;
            if (!v13) {
              break;
            }
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_24:
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
    uint64_t v17 = *v15;
    unint64_t v16 = v15[1];
    if (*(void *)(a3 + 16))
    {
      sub_241633308();
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      sub_241631DC8();
      uint64_t v18 = sub_241633358();
      uint64_t v19 = -1 << *(unsigned char *)(a3 + 32);
      unint64_t v20 = v18 & ~v19;
      if ((*(void *)(v31 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20))
      {
        uint64_t v21 = *(void *)(a3 + 48);
        uint64_t v22 = (void *)(v21 + 16 * v20);
        BOOL v23 = *v22 == v17 && v22[1] == v16;
        if (v23 || (sub_241633218() & 1) != 0) {
          goto LABEL_5;
        }
        uint64_t v24 = ~v19;
        unint64_t v25 = (v20 + 1) & v24;
        if ((*(void *)(v31 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25))
        {
          while (1)
          {
            char v26 = (void *)(v21 + 16 * v25);
            BOOL v27 = *v26 == v17 && v26[1] == v16;
            if (v27 || (sub_241633218() & 1) != 0) {
              break;
            }
            char v9 = 0;
            unint64_t v25 = (v25 + 1) & v24;
            if (((*(void *)(v31 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
              goto LABEL_6;
            }
          }
LABEL_5:
          char v9 = 1;
          goto LABEL_6;
        }
      }
    }
    else
    {
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    }
    char v9 = 0;
LABEL_6:
    sub_24131CD40(v17, v16, v9);
    uint64_t result = swift_bridgeObjectRelease();
  }
  while (1)
  {
    int64_t v8 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v8 >= v29) {
      return swift_release();
    }
    unint64_t v13 = *(void *)(v28 + 8 * v8);
    ++v14;
    if (v13) {
      goto LABEL_23;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_24120F534(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62)
  {
LABEL_26:
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v4 = sub_241633068();
    if (v4) {
      goto LABEL_3;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    return 1;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  if (!v4) {
    goto LABEL_27;
  }
LABEL_3:
  sub_2411B9D00(0, (unint64_t *)&qword_26B0125F0);
  id ObjCClassFromMetadata = (id)swift_getObjCClassFromMetadata();
  uint64_t v25 = a2 + 72;
  swift_beginAccess();
  uint64_t v5 = 4;
  while (1)
  {
    a2 = v5 - 4;
    if ((a1 & 0xC000000000000001) != 0)
    {
      id v6 = (id)MEMORY[0x245620370](v5 - 4, a1);
      uint64_t v7 = v5 - 3;
      if (__OFADD__(a2, 1)) {
        goto LABEL_25;
      }
    }
    else
    {
      id v6 = *(id *)(a1 + 8 * v5);
      uint64_t v7 = v5 - 3;
      if (__OFADD__(a2, 1))
      {
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
    }
    uint64_t v27 = v7;
    int64_t v8 = v6;
    id v9 = objc_msgSend(v6, sel_identifier);
    uint64_t v10 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
    uint64_t v12 = v11;

    uint64_t result = (uint64_t)objc_msgSend(ObjCClassFromMetadata, sel_menstrualFlowType);
    if (!result) {
      break;
    }
    int64_t v14 = (void *)result;
    id v15 = objc_msgSend((id)result, sel_identifier);

    uint64_t v16 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
    uint64_t v18 = v17;

    if (v10 == v16 && v12 == v18)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v20 = sub_241633218();
      swift_bridgeObjectRelease();
      if ((v20 & 1) != 0 || (uint64_t v21 = *(void *)v25, !*(void *)(*(void *)v25 + 16)))
      {

LABEL_22:
        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      unint64_t v22 = sub_2411B8E04(v10, v12);
      if ((v23 & 1) == 0)
      {

        swift_bridgeObjectRelease_n();
        goto LABEL_22;
      }
      char v24 = *(unsigned char *)(*(void *)(v21 + 56) + v22);

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      if (v24)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
LABEL_5:
    ++v5;
    if (v27 == v4) {
      goto LABEL_27;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24120F7DC()
{
  return sub_24120BBDC();
}

uint64_t sub_24120F7E4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  }
}

void *initializeBufferWithCopyOfBuffer for DataTypeRow(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for DataTypeRow()
{
  return swift_release();
}

void *assignWithCopy for DataTypeRow(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for DataTypeRow(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for DataTypeRow()
{
  return &type metadata for DataTypeRow;
}

uint64_t sub_24120F8B4()
{
  return sub_2412101F8(&qword_268CFAC90, (void (*)(uint64_t))sub_24120F8FC);
}

void sub_24120F8FC()
{
  if (!qword_268CFAC98)
  {
    sub_241630078();
    sub_24120D738();
    sub_24120FABC(255, &qword_268CFAB88, sub_24120D8AC, (void (*)(void))sub_24120DFD4);
    sub_24120E0DC();
    sub_24120D8AC(255);
    sub_24120DFD4();
    swift_getOpaqueTypeConformance2();
    sub_24120E190();
    sub_2412101F8(&qword_268CFAC58, (void (*)(uint64_t))sub_24120E190);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t v0 = sub_2416301A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFAC98);
    }
  }
}

uint64_t sub_24120FAA0()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_24120FABC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v7) {
      atomic_store(OpaqueTypeMetadata2, a2);
    }
  }
}

void sub_24120FB48()
{
  if (!qword_268CFACA8)
  {
    sub_24120FBA8();
    unint64_t v0 = sub_241630188();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFACA8);
    }
  }
}

void sub_24120FBA8()
{
  if (!qword_268CFACB0)
  {
    unint64_t v0 = sub_2416308C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFACB0);
    }
  }
}

unint64_t sub_24120FC00()
{
  unint64_t result = qword_268CFACB8;
  if (!qword_268CFACB8)
  {
    sub_24120FB48();
    sub_2412101F8((unint64_t *)&qword_268CFACC0, (void (*)(uint64_t))sub_24120FBA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFACB8);
  }
  return result;
}

void sub_24120FCA8()
{
  if (!qword_268CFACC8)
  {
    sub_24120FABC(255, &qword_268CFACA0, (void (*)(uint64_t))sub_24120FB48, (void (*)(void))sub_24120FC00);
    sub_24120FB48();
    sub_24120FC00();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268CFACC8);
    }
  }
}

uint64_t sub_24120FD9C@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_241630318();
  *a1 = v3;
  return result;
}

uint64_t sub_24120FDC8()
{
  return sub_241630328();
}

uint64_t sub_24120FDF0(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_24120EFBC(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_24120FE34()
{
  if (!qword_268CFACD0)
  {
    sub_24120FEB0();
    unint64_t v0 = sub_24162FEC8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFACD0);
    }
  }
}

unint64_t sub_24120FEB0()
{
  unint64_t result = qword_268CFACD8;
  if (!qword_268CFACD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFACD8);
  }
  return result;
}

void sub_24120FF04(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_241630188();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_24120FF78(uint64_t a1)
{
}

void sub_24120FFC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_241210040()
{
  return sub_2412101F8(&qword_268CFACF8, MEMORY[0x263F1A1F8]);
}

unint64_t sub_241210080()
{
  unint64_t result = qword_268CFAD08;
  if (!qword_268CFAD08)
  {
    sub_24120FF04(255, &qword_268CFACE8, (void (*)(uint64_t))sub_24120FCA8, sub_24120FF78);
    sub_24120FABC(255, &qword_268CFACA0, (void (*)(uint64_t))sub_24120FB48, (void (*)(void))sub_24120FC00);
    sub_24120FB48();
    sub_24120FC00();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_2412101F8(&qword_268CFAD10, sub_24120FF78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFAD08);
  }
  return result;
}

uint64_t sub_2412101F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for MenstrualCycleAndBodyTemperatureChartWithLegend()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MenstrualCycleAndBodyTemperatureChartWithLegend(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v5 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v5;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return a1;
}

void *assignWithCopy for MenstrualCycleAndBodyTemperatureChartWithLegend(void *a1, void *a2)
{
  *a1 = *a2;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for MenstrualCycleAndBodyTemperatureChartWithLegend(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for MenstrualCycleAndBodyTemperatureChartWithLegend(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MenstrualCycleAndBodyTemperatureChartWithLegend(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MenstrualCycleAndBodyTemperatureChartWithLegend(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MenstrualCycleAndBodyTemperatureChartWithLegend()
{
  return &type metadata for MenstrualCycleAndBodyTemperatureChartWithLegend;
}

uint64_t sub_241210588()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2412105A4@<X0>(uint64_t **a1@<X0>, uint64_t a2@<X8>)
{
  sub_241211D3C();
  uint64_t v4 = **a1;
  sub_241211D90();
  long long v5 = a1[1];
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  uint64_t v8 = v5[2];
  uint64_t v10 = v5[3];
  uint64_t v9 = v5[4];
  sub_241211DE4();
  unint64_t v11 = a1[2];
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = v11[2];
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = v7;
  *(void *)(a2 + 24) = v8;
  *(void *)(a2 + 32) = v10;
  *(void *)(a2 + 40) = v9;
  *(void *)(a2 + 48) = v13;
  *(void *)(a2 + 56) = v12;
  *(void *)(a2 + 64) = v14;
  *(_OWORD *)(a2 + 72) = *(_OWORD *)(v11 + 3);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();

  return _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
}

uint64_t sub_241210668@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2412129E8();
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241212A5C();
  uint64_t v9 = v8;
  sub_241213420();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = *(void (**)(char *, void, uint64_t))(v10 + 16);
  v11(v7, *a1, v9);
  uint64_t v12 = &v7[*(int *)(v5 + 56)];
  v11(v12, a1[1], v9);
  sub_241212DCC();
  uint64_t v14 = v13;
  sub_241212ED8();
  sub_24162F848();
  sub_241212FB4(255, (unint64_t *)&qword_268CFAE20, (uint64_t (*)(uint64_t))sub_241213020, MEMORY[0x263F18868], MEMORY[0x263F18E28]);
  sub_2412131D4();
  id v15 = &v7[*(int *)(v5 + 72)];
  uint64_t v16 = a1[2];
  uint64_t v17 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, v16, v14);
  uint64_t v18 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v18(a2, v7, v9);
  v18(a2 + *(int *)(v5 + 56), v12, v9);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(a2 + *(int *)(v5 + 72), v15, v14);
}

uint64_t sub_241210880@<X0>(uint64_t a1@<X8>)
{
  sub_2411D662C();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v2 = sub_241630C28();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  id v7 = objc_msgSend(self, sel_hk_compactRoundedFontOfSize_, 14.0);
  sub_241630B08();
  uint64_t v8 = sub_241630BE8();
  uint64_t v10 = v9;
  char v12 = v11;
  swift_release();
  char v13 = v12 & 1;
  sub_24120EFBC(v2, v4, v6);
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(self, sel_secondaryLabelColor);
  MEMORY[0x24561E470](v14);
  uint64_t v15 = sub_241630BA8();
  uint64_t v17 = v16;
  char v19 = v18;
  uint64_t v21 = v20;
  swift_release();
  sub_24120EFBC(v8, v10, v13);
  swift_bridgeObjectRelease();
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = v15;
  *(void *)(a1 + 8) = v17;
  *(unsigned char *)(a1 + 16) = v19 & 1;
  *(void *)(a1 + 24) = v21;
  *(void *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 40) = 1;
  return result;
}

uint64_t sub_241210A08@<X0>(uint64_t a1@<X8>)
{
  return sub_241210880(a1);
}

uint64_t sub_241210A10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2416305A8();
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = v1[6];
  uint64_t v11 = v1[7];
  uint64_t v12 = v1[8];
  uint64_t v13 = v1[9];
  uint64_t v14 = v1[10];
  uint64_t v15 = _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = v15;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v9;
  *(void *)(a1 + 80) = v10;
  *(void *)(a1 + 88) = v11;
  *(void *)(a1 + 96) = v12;
  *(void *)(a1 + 104) = v13;
  *(void *)(a1 + 112) = v14;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();

  return _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
}

__n128 initializeWithTake for MenstrualCycleAndBodyTemperatureViewModel(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

ValueMetadata *type metadata accessor for MenstrualCycleAndBodyTemperatureChart()
{
  return &type metadata for MenstrualCycleAndBodyTemperatureChart;
}

uint64_t _s24MenstrualCyclesAppPlugin41MenstrualCycleAndBodyTemperatureViewModelVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s24MenstrualCyclesAppPlugin41MenstrualCycleAndBodyTemperatureViewModelVwcp_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return a1;
}

void *_s24MenstrualCyclesAppPlugin41MenstrualCycleAndBodyTemperatureViewModelVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s24MenstrualCyclesAppPlugin41MenstrualCycleAndBodyTemperatureViewModelVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s24MenstrualCyclesAppPlugin41MenstrualCycleAndBodyTemperatureViewModelVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_241210DC0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MenstrualCycleAndBodyTemperatureViewModel()
{
  return &type metadata for MenstrualCycleAndBodyTemperatureViewModel;
}

uint64_t sub_241210E24()
{
  return sub_24121202C(&qword_268CFAD28, (void (*)(uint64_t))sub_241210E6C);
}

void sub_241210E6C()
{
  if (!qword_268CFAD30)
  {
    sub_241211B78(255, &qword_268CFAD38, (uint64_t (*)(uint64_t))sub_241210F00, MEMORY[0x263F1BAC8]);
    sub_241210F68();
    unint64_t v0 = sub_241631238();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFAD30);
    }
  }
}

void sub_241210F00()
{
  if (!qword_268CFAD40)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CFAD40);
    }
  }
}

unint64_t sub_241210F68()
{
  unint64_t result = qword_268CFAD48;
  if (!qword_268CFAD48)
  {
    sub_241211B78(255, &qword_268CFAD38, (uint64_t (*)(uint64_t))sub_241210F00, MEMORY[0x263F1BAC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFAD48);
  }
  return result;
}

uint64_t sub_241210FF0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24121100C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v61 = a1;
  sub_241211B78(0, &qword_268CFAD50, MEMORY[0x263EFCD98], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v50 = (char *)&v49 - v3;
  uint64_t v4 = sub_24162F788();
  uint64_t v59 = *(void *)(v4 - 8);
  uint64_t v60 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v58 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241211BDC();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241212FB4(0, &qword_268CFAD88, (uint64_t (*)(uint64_t))sub_241211BDC, MEMORY[0x263F18868], MEMORY[0x263F18E28]);
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v49 - v13;
  sub_241211E38();
  uint64_t v16 = v15;
  uint64_t v49 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  char v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241212104();
  uint64_t v52 = v19;
  uint64_t v51 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241212250();
  uint64_t v55 = v22;
  uint64_t v54 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v62 = (char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2412123EC();
  uint64_t v57 = v24;
  uint64_t v56 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  char v53 = (char *)&v49 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = v1;
  sub_241211C40();
  sub_241211CB4();
  sub_24162F7B8();
  if (qword_268CF91E0 != -1) {
    swift_once();
  }
  sub_2416313F8();
  sub_24162FFB8();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v14, v10, v7);
  char v26 = &v14[*(int *)(v12 + 36)];
  long long v27 = v70;
  *(_OWORD *)char v26 = v69;
  *((_OWORD *)v26 + 1) = v27;
  *((_OWORD *)v26 + 2) = v71;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_241212FB4(0, &qword_268CFAD98, MEMORY[0x263EFCB08], MEMORY[0x263EFCB00], MEMORY[0x263EFCD78]);
  uint64_t v29 = v28;
  unint64_t v30 = sub_241211F4C();
  unint64_t v31 = sub_241212074();
  sub_241630C48();
  sub_2412126A4((uint64_t)v14);
  uint64_t v65 = v12;
  uint64_t v66 = v29;
  unint64_t v67 = v30;
  unint64_t v68 = v31;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_241630C58();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v18, v16);
  if (qword_268CF91E8 != -1) {
    swift_once();
  }
  uint64_t v33 = v58;
  sub_24162F778();
  uint64_t v34 = sub_24162F858();
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56);
  uint64_t v36 = (uint64_t)v50;
  v35(v50, 1, 1, v34);
  uint64_t v65 = v16;
  uint64_t v66 = OpaqueTypeConformance2;
  uint64_t v37 = swift_getOpaqueTypeConformance2();
  uint64_t v38 = v52;
  uint64_t v39 = v60;
  sub_241630C88();
  sub_241212748(v36);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v33, v39);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v21, v38);
  uint64_t v64 = &unk_26F566760;
  v35((char *)v36, 1, 1, v34);
  sub_241213188(0, (unint64_t *)&qword_268D00710, MEMORY[0x263F8D6C8], MEMORY[0x263F8D488]);
  uint64_t v41 = v40;
  uint64_t v65 = v38;
  uint64_t v66 = v39;
  unint64_t v67 = v37;
  unint64_t v68 = MEMORY[0x263EFCCD8];
  uint64_t v42 = swift_getOpaqueTypeConformance2();
  unint64_t v43 = sub_2412125FC();
  uint64_t v44 = v53;
  uint64_t v45 = v55;
  uint64_t v46 = v62;
  sub_241630C78();
  sub_241212748(v36);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v46, v45);
  uint64_t v65 = v45;
  uint64_t v66 = v41;
  unint64_t v67 = v42;
  unint64_t v68 = v43;
  swift_getOpaqueTypeConformance2();
  uint64_t v47 = v57;
  sub_241630C68();
  return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v44, v47);
}

uint64_t sub_2412118B4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[3];
  uint64_t v5 = a1[5];
  uint64_t v4 = a1[6];
  uint64_t v6 = a1[7];
  uint64_t v7 = a1[10];
  uint64_t v14 = a1[4];
  uint64_t v15 = v7;
  uint64_t v11 = v2;
  long long v12 = *(_OWORD *)(a1 + 1);
  uint64_t v13 = v3;
  v16[0] = &v15;
  v16[1] = &v11;
  v9[0] = v5;
  v9[1] = v4;
  v9[2] = v6;
  long long v10 = *((_OWORD *)a1 + 4);
  v16[2] = v9;
  sub_2412105A4(v16, a2);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2412119A0()
{
  uint64_t v0 = sub_24162F728();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_24162F6E8();
  MEMORY[0x270FA5388](v1 - 8);
  sub_24162F6D8();
  sub_24162F718();
  sub_24162F5D8();
  return sub_24162F828();
}

uint64_t sub_241211AC0()
{
  return sub_24162F5C8();
}

uint64_t sub_241211B2C@<X0>(uint64_t a1@<X8>)
{
  return sub_24121100C(a1);
}

void sub_241211B78(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241211BDC()
{
  if (!qword_268CFAD58)
  {
    sub_241211C40();
    sub_241211CB4();
    unint64_t v0 = sub_24162F7C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFAD58);
    }
  }
}

void sub_241211C40()
{
  if (!qword_268CFAD60)
  {
    unint64_t v0 = sub_24162F5E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFAD60);
    }
  }
}

unint64_t sub_241211CB4()
{
  unint64_t result = qword_268CFAD68;
  if (!qword_268CFAD68)
  {
    sub_241211C40();
    sub_241211D3C();
    sub_241211D90();
    sub_241211DE4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFAD68);
  }
  return result;
}

unint64_t sub_241211D3C()
{
  unint64_t result = qword_268CFAD70;
  if (!qword_268CFAD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFAD70);
  }
  return result;
}

unint64_t sub_241211D90()
{
  unint64_t result = qword_268CFAD78;
  if (!qword_268CFAD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFAD78);
  }
  return result;
}

unint64_t sub_241211DE4()
{
  unint64_t result = qword_268CFAD80;
  if (!qword_268CFAD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFAD80);
  }
  return result;
}

void sub_241211E38()
{
  if (!qword_268CFAD90)
  {
    sub_241212FB4(255, &qword_268CFAD88, (uint64_t (*)(uint64_t))sub_241211BDC, MEMORY[0x263F18868], MEMORY[0x263F18E28]);
    sub_241212FB4(255, &qword_268CFAD98, MEMORY[0x263EFCB08], MEMORY[0x263EFCB00], MEMORY[0x263EFCD78]);
    sub_241211F4C();
    sub_241212074();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268CFAD90);
    }
  }
}

unint64_t sub_241211F4C()
{
  unint64_t result = qword_268CFADA0;
  if (!qword_268CFADA0)
  {
    sub_241212FB4(255, &qword_268CFAD88, (uint64_t (*)(uint64_t))sub_241211BDC, MEMORY[0x263F18868], MEMORY[0x263F18E28]);
    sub_24121202C(&qword_268CFADA8, (void (*)(uint64_t))sub_241211BDC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFADA0);
  }
  return result;
}

uint64_t sub_24121202C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_241212074()
{
  unint64_t result = qword_268CFADB0;
  if (!qword_268CFADB0)
  {
    sub_241212FB4(255, &qword_268CFAD98, MEMORY[0x263EFCB08], MEMORY[0x263EFCB00], MEMORY[0x263EFCD78]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFADB0);
  }
  return result;
}

void sub_241212104()
{
  if (!qword_268CFADB8)
  {
    sub_241211E38();
    sub_241212FB4(255, &qword_268CFAD88, (uint64_t (*)(uint64_t))sub_241211BDC, MEMORY[0x263F18868], MEMORY[0x263F18E28]);
    sub_241212FB4(255, &qword_268CFAD98, MEMORY[0x263EFCB08], MEMORY[0x263EFCB00], MEMORY[0x263EFCD78]);
    sub_241211F4C();
    sub_241212074();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268CFADB8);
    }
  }
}

void sub_241212250()
{
  if (!qword_268CFADC0)
  {
    sub_241212104();
    sub_24162F788();
    sub_241211E38();
    sub_241212FB4(255, &qword_268CFAD88, (uint64_t (*)(uint64_t))sub_241211BDC, MEMORY[0x263F18868], MEMORY[0x263F18E28]);
    sub_241212FB4(255, &qword_268CFAD98, MEMORY[0x263EFCB08], MEMORY[0x263EFCB00], MEMORY[0x263EFCD78]);
    sub_241211F4C();
    sub_241212074();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268CFADC0);
    }
  }
}

void sub_2412123EC()
{
  if (!qword_268CFADC8)
  {
    sub_241212250();
    sub_241213188(255, (unint64_t *)&qword_268D00710, MEMORY[0x263F8D6C8], MEMORY[0x263F8D488]);
    sub_241212104();
    sub_24162F788();
    sub_241211E38();
    sub_241212FB4(255, &qword_268CFAD88, (uint64_t (*)(uint64_t))sub_241211BDC, MEMORY[0x263F18868], MEMORY[0x263F18E28]);
    sub_241212FB4(255, &qword_268CFAD98, MEMORY[0x263EFCB08], MEMORY[0x263EFCB00], MEMORY[0x263EFCD78]);
    sub_241211F4C();
    sub_241212074();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_2412125FC();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268CFADC8);
    }
  }
}

unint64_t sub_2412125FC()
{
  unint64_t result = qword_268CFADD0;
  if (!qword_268CFADD0)
  {
    sub_241213188(255, (unint64_t *)&qword_268D00710, MEMORY[0x263F8D6C8], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFADD0);
  }
  return result;
}

uint64_t sub_241212688@<X0>(uint64_t a1@<X8>)
{
  return sub_2412118B4(*(uint64_t **)(v1 + 16), a1);
}

void sub_241212690()
{
  qword_268CFAD18 = 0x406F200000000000;
}

uint64_t sub_2412126A4(uint64_t a1)
{
  sub_241212FB4(0, &qword_268CFAD88, (uint64_t (*)(uint64_t))sub_241211BDC, MEMORY[0x263F18868], MEMORY[0x263F18E28]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_241212738()
{
  qword_268CFAD20 = 0x4034000000000000;
}

uint64_t sub_241212748(uint64_t a1)
{
  sub_241211B78(0, &qword_268CFAD50, MEMORY[0x263EFCD98], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2412127D4()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2412129E8()
{
  if (!qword_268CFADD8)
  {
    sub_241212A5C();
    sub_241212DCC();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268CFADD8);
    }
  }
}

void sub_241212A5C()
{
  if (!qword_268CFADE0)
  {
    sub_241213188(255, &qword_268CFADE8, (uint64_t)&type metadata for LinePoint, MEMORY[0x263F8D488]);
    sub_241212B18();
    sub_241212D50();
    unint64_t v0 = sub_241631308();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFADE0);
    }
  }
}

void sub_241212B18()
{
  if (!qword_268CFADF0)
  {
    sub_241212C18();
    sub_241212CCC();
    sub_24162F7E8();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268CFADF0);
    }
  }
}

void sub_241212C18()
{
  if (!qword_268CFADF8)
  {
    sub_241212CCC();
    sub_24162F7E8();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268CFADF8);
    }
  }
}

void sub_241212CCC()
{
  if (!qword_268CFAE00)
  {
    sub_24162F7E8();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268CFAE00);
    }
  }
}

unint64_t sub_241212D50()
{
  unint64_t result = qword_268CFAE08;
  if (!qword_268CFAE08)
  {
    sub_241213188(255, &qword_268CFADE8, (uint64_t)&type metadata for LinePoint, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFAE08);
  }
  return result;
}

void sub_241212DCC()
{
  if (!qword_268CFAE10)
  {
    sub_241212ED8();
    sub_24162F848();
    sub_241212FB4(255, (unint64_t *)&qword_268CFAE20, (uint64_t (*)(uint64_t))sub_241213020, MEMORY[0x263F18868], MEMORY[0x263F18E28]);
    sub_2412131D4();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268CFAE10);
    }
  }
}

void sub_241212ED8()
{
  if (!qword_268CFAE18)
  {
    sub_24162F848();
    sub_241212FB4(255, (unint64_t *)&qword_268CFAE20, (uint64_t (*)(uint64_t))sub_241213020, MEMORY[0x263F18868], MEMORY[0x263F18E28]);
    sub_2412131D4();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268CFAE18);
    }
  }
}

void sub_241212FB4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, v9, a4);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_241213020()
{
  if (!qword_268CFAE28)
  {
    sub_241213088();
    sub_24121310C();
    unint64_t v0 = sub_241630188();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFAE28);
    }
  }
}

void sub_241213088()
{
  if (!qword_268CFAE30)
  {
    sub_241213188(255, &qword_268CFAE38, MEMORY[0x263F18968], MEMORY[0x263F1A418]);
    unint64_t v0 = sub_241630188();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFAE30);
    }
  }
}

void sub_24121310C()
{
  if (!qword_268CFAE40)
  {
    sub_241213188(255, (unint64_t *)&qword_268CFAE48, MEMORY[0x263F1B440], MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_2416308C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFAE40);
    }
  }
}

void sub_241213188(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_2412131D4()
{
  unint64_t result = qword_268CFAE50;
  if (!qword_268CFAE50)
  {
    sub_241212FB4(255, (unint64_t *)&qword_268CFAE20, (uint64_t (*)(uint64_t))sub_241213020, MEMORY[0x263F18868], MEMORY[0x263F18E28]);
    sub_241213284();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFAE50);
  }
  return result;
}

unint64_t sub_241213284()
{
  unint64_t result = qword_268CFAE58;
  if (!qword_268CFAE58)
  {
    sub_241213020();
    sub_24121332C();
    sub_24121202C(&qword_268CFAE70, (void (*)(uint64_t))sub_24121310C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFAE58);
  }
  return result;
}

unint64_t sub_24121332C()
{
  unint64_t result = qword_268CFAE60;
  if (!qword_268CFAE60)
  {
    sub_241213088();
    sub_2412133A4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFAE60);
  }
  return result;
}

unint64_t sub_2412133A4()
{
  unint64_t result = qword_268CFAE68;
  if (!qword_268CFAE68)
  {
    sub_241213188(255, &qword_268CFAE38, MEMORY[0x263F18968], MEMORY[0x263F1A418]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFAE68);
  }
  return result;
}

unint64_t sub_241213420()
{
  unint64_t result = qword_268CFAE78;
  if (!qword_268CFAE78)
  {
    sub_241212A5C();
    sub_241212C18();
    sub_241212CCC();
    sub_24162F7E8();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFAE78);
  }
  return result;
}

void *assignWithCopy for ChartText(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ChartText(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ChartText()
{
  return &type metadata for ChartText;
}

uint64_t sub_2412135C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2412135EC(void *a1, uint64_t a2, char *a3, void *a4, uint64_t a5, void *a6, void *a7, int a8)
{
  uint64_t v9 = v8;
  LODWORD(v207) = a8;
  id v206 = a7;
  id v205 = a6;
  uint64_t v211 = a5;
  id v217 = a4;
  uint64_t v219 = a2;
  v220 = a3;
  sub_2411FEC8C();
  uint64_t v170 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v175 = (char *)&v165 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  v169 = (char *)&v165 - v14;
  sub_24121547C(0, (unint64_t *)&qword_26B0121D0, MEMORY[0x263F8D870]);
  uint64_t v174 = v15;
  uint64_t v173 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v168 = (char *)&v165 - v16;
  sub_24121530C();
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v172 = (uint64_t)&v165 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v171 = (uint64_t)&v165 - v20;
  sub_241215380();
  MEMORY[0x270FA5388](v21 - 8);
  v182 = (char *)&v165 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  v181 = (char *)&v165 - v24;
  sub_24121547C(0, (unint64_t *)&qword_268CFCC20, MEMORY[0x263F8D1A0]);
  uint64_t v185 = v25;
  MEMORY[0x270FA5388](v25);
  uint64_t v216 = (uint64_t)&v165 - v26;
  long long v27 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241217710(0, &qword_268CFAEC8, type metadata accessor for CycleChartCycle, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v179 = (uint64_t)&v165 - v29;
  sub_241217710(0, (unint64_t *)&unk_268D04810, (uint64_t (*)(uint64_t))type metadata accessor for CycleChartsModel, v27);
  MEMORY[0x270FA5388](v30 - 8);
  v204 = (uint64_t *)((char *)&v165 - v31);
  v214 = (void *)type metadata accessor for CycleChartCycle(0);
  uint64_t v176 = *(v214 - 1);
  MEMORY[0x270FA5388](v214);
  uint64_t v177 = (uint64_t)&v165 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v178 = (uint64_t)&v165 - v34;
  uint64_t v202 = sub_24162D328();
  uint64_t v201 = *(void *)(v202 - 8);
  MEMORY[0x270FA5388](v202);
  v203 = (uint64_t *)((char *)&v165 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v198 = sub_24162B7F8();
  uint64_t v197 = *(void *)(v198 - 8);
  MEMORY[0x270FA5388](v198);
  uint64_t v196 = (char *)&v165 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_24162B7E8();
  MEMORY[0x270FA5388](v37 - 8);
  uint64_t v199 = (char *)&v165 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v193 = sub_241631CA8();
  uint64_t v224 = *(char **)(v193 - 8);
  MEMORY[0x270FA5388](v193);
  uint64_t v192 = (char *)&v165 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v40);
  uint64_t v191 = (char *)&v165 - v41;
  uint64_t v42 = sub_241631C88();
  MEMORY[0x270FA5388](v42 - 8);
  uint64_t v43 = sub_241631AC8();
  uint64_t v221 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v180 = (char *)&v165 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v45);
  v183 = (char *)&v165 - v46;
  MEMORY[0x270FA5388](v47);
  uint64_t v49 = (char *)&v165 - v48;
  uint64_t v167 = sub_24162B718();
  uint64_t v166 = *(void *)(v167 - 8);
  MEMORY[0x270FA5388](v167);
  uint64_t v51 = (char *)&v165 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_24162BA08();
  char v53 = *(void **)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  v200 = (char *)&v165 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v56 = MEMORY[0x270FA5388](v55).n128_u64[0];
  uint64_t v58 = (char *)&v165 - v57;
  *(void *)(v9 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartPDFProvider_dayProviderSubscription) = 0;
  id v184 = a1;
  id v59 = objc_msgSend(a1, sel_healthStore, v56);
  v190 = (void (*)(char *, char *, uint64_t))OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartPDFProvider_healthStore;
  *(void *)(v9 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartPDFProvider_healthStore) = v59;
  id v60 = objc_msgSend(v217, sel_currentCalendar);
  sub_24162B928();

  uint64_t v61 = v9 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartPDFProvider_gregorianCalendar;
  uint64_t v223 = v53;
  uint64_t v62 = (void (*)(uint64_t, char *, uint64_t))v53[4];
  v213 = v58;
  uint64_t v212 = v52;
  v62(v9 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartPDFProvider_gregorianCalendar, v58, v52);
  uint64_t v63 = v221;
  uint64_t v64 = *(void (**)(char *, uint64_t, uint64_t))(v221 + 16);
  uint64_t v225 = v221 + 16;
  uint64_t v222 = v64;
  v64((char *)(v9 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartPDFProvider_today), (uint64_t)v220, v43);
  id v65 = objc_msgSend(*(id *)(v219 + 8), sel_menstruationSegment);
  objc_msgSend(v65, sel_days);

  sub_241631A78();
  sub_241631AB8();
  uint64_t v66 = *(void (**)(char *, uint64_t))(v63 + 8);
  id v215 = v49;
  uint64_t v218 = v43;
  uint64_t v209 = v63 + 8;
  uint64_t v208 = v66;
  v66(v49, v43);
  unint64_t v67 = v192;
  unint64_t v165 = v51;
  unint64_t v68 = v51;
  long long v69 = v191;
  uint64_t v195 = v61;
  MEMORY[0x24561A950](v68, 0, v61);
  uint64_t v194 = sub_24162D318();
  uint64_t v70 = sub_24162DA78();
  uint64_t v71 = v193;
  uint64_t v210 = v9;
  uint64_t v72 = v224;
  id v73 = *(id *)((char *)v190 + v9);
  uint64_t v74 = sub_24162DA48();
  uint64_t v228 = v70;
  uint64_t v229 = MEMORY[0x263F442B0];
  unint64_t v227 = v74;
  sub_241631C78();
  sub_241631C68();
  sub_241631C58();
  swift_bridgeObjectRelease();
  sub_241631C68();
  sub_241631C98();
  v190 = (void (*)(char *, char *, uint64_t))*((void *)v72 + 2);
  v190(v67, v69, v71);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v75 = (id)qword_26B0181A0;
  sub_24162B7D8();
  unint64_t v189 = 0x8000000241656B70;
  uint64_t v187 = sub_241631D38();
  uint64_t v186 = v76;
  uint64_t v77 = (void (*)(char *, uint64_t))*((void *)v72 + 1);
  uint64_t v224 = v72 + 8;
  uint64_t v188 = v77;
  v77(v69, v71);
  sub_241217710(0, &qword_268CFAED0, MEMORY[0x263F43F70], MEMORY[0x263F8E0F8]);
  uint64_t v78 = v69;
  uint64_t v79 = sub_24162D498();
  uint64_t v80 = v67;
  uint64_t v81 = *(void *)(v79 - 8);
  unint64_t v82 = (*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
  uint64_t v83 = swift_allocObject();
  *(_OWORD *)(v83 + 16) = xmmword_241637EE0;
  (*(void (**)(unint64_t, void, uint64_t))(v81 + 104))(v83 + v82, *MEMORY[0x263F43F60], v79);
  sub_2411C9E64(v83);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v84 = v197;
  uint64_t v85 = v196;
  uint64_t v86 = v198;
  (*(void (**)(char *, void, uint64_t))(v197 + 104))(v196, *MEMORY[0x263F07740], v198);
  uint64_t v87 = (uint64_t)v213;
  sub_24162B808();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v85, v86);
  uint64_t v88 = v194;
  uint64_t v89 = sub_24162D308();
  sub_241631C38();
  v190(v80, v78, v71);
  id v90 = (id)qword_26B0181A0;
  sub_24162B7D8();
  sub_241631D38();
  v188(v78, v71);
  uint64_t v228 = v88;
  uint64_t v229 = MEMORY[0x263F43ED0];
  unint64_t v227 = v89;
  uint64_t v91 = type metadata accessor for PDFCycleTrackingPage();
  uint64_t v92 = v203;
  uint64_t *v203 = v91;
  (*(void (**)(uint64_t *, void, uint64_t))(v201 + 104))(v92, *MEMORY[0x263F43ED8], v202);
  objc_allocWithZone((Class)sub_24162D868());
  uint64_t v202 = v89;
  swift_retain();
  uint64_t v93 = sub_24162D858();
  uint64_t v94 = v210;
  *(void *)(v210 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartPDFProvider_pdfViewController) = v93;
  sub_2411BFC90();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24163B390;
  uint64_t v96 = v219;
  uint64_t v97 = *(void **)(v219 + 8);
  *(void *)(inited + 32) = v97;
  unint64_t v227 = inited;
  sub_241631F48();
  unint64_t v98 = v227;
  uint64_t v99 = v215;
  v222(v215, (uint64_t)v220, v218);
  uint64_t v100 = (char *)v223[2];
  v223 += 2;
  uint64_t v224 = v100;
  ((void (*)(uint64_t, uint64_t, uint64_t))v100)(v87, v195, v212);
  id v101 = v97;
  uint64_t v102 = (uint64_t)v200;
  sub_24162B9A8();
  type metadata accessor for CycleChartsPDFModelProvider();
  swift_allocObject();
  uint64_t v103 = v211;
  sub_2411FEAA0(v211);
  id v104 = v205;
  id v105 = v206;
  int v106 = v207 & 1;
  id v207 = v104;
  id v206 = v105;
  uint64_t v107 = sub_241228968(v98, v99, v87, v102, v103, v104, v105, v106);
  *(void *)(v94 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartPDFProvider_chartsProvider) = v107;
  uint64_t v108 = v107 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin27CycleChartsPDFModelProvider_fertilityChart;
  swift_beginAccess();
  uint64_t v109 = v204;
  sub_241216E80(v108, (uint64_t)v204);
  uint64_t v110 = type metadata accessor for CycleChartsModel();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v110 - 8) + 48))(v109, 1, v110);
  uint64_t v112 = v218;
  CGRect v113 = v222;
  if (result != 1)
  {
    uint64_t v114 = *v109;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_241217008((uint64_t)v109, (uint64_t (*)(void))type metadata accessor for CycleChartsModel);
    uint64_t v115 = v179;
    uint64_t v116 = v214;
    uint64_t v117 = v176;
    if (*(void *)(v114 + 16))
    {
      sub_241216F14(v114 + ((*(unsigned __int8 *)(v176 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v176 + 80)), v179, type metadata accessor for CycleChartCycle);
      uint64_t v118 = 0;
    }
    else
    {
      uint64_t v118 = 1;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, void *))(v117 + 56))(v115, v118, 1, v116);
    swift_bridgeObjectRelease();
    uint64_t v119 = v177;
    sub_241216F14(v96, v177, type metadata accessor for CycleChartCycle);
    int v120 = (*(uint64_t (**)(uint64_t, uint64_t, void *))(v117 + 48))(v115, 1, v116);
    uint64_t v121 = v113;
    if (v120 == 1)
    {
      uint64_t v122 = v178;
      sub_241217644(v119, v178, type metadata accessor for CycleChartCycle);
      sub_241216F7C(v115);
    }
    else
    {
      sub_241217008(v119, type metadata accessor for CycleChartCycle);
      uint64_t v122 = v178;
      sub_241217644(v115, v178, type metadata accessor for CycleChartCycle);
    }
    sub_241217644(v122, v94 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartPDFProvider_cycle, type metadata accessor for CycleChartCycle);
    uint64_t v123 = v216;
    sub_24136561C((char *)(v96 + *((int *)v116 + 6)), v216);
    uint64_t v124 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartPDFProvider_healthStore;
    unint64_t v125 = *(void **)(v94 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartPDFProvider_healthStore);
    uint64_t v126 = (uint64_t)v181;
    v121(v181, v123, v112);
    uint64_t v127 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v221 + 56);
    v127(v126, 0, 1, v112);
    uint64_t v128 = (uint64_t)v182;
    v127((uint64_t)v182, 1, 1, v112);
    id v129 = v125;
    uint64_t v130 = v184;
    uint64_t v131 = sub_24139358C(v126, v128);
    sub_241217008(v128, (uint64_t (*)(void))sub_241215380);
    sub_241217008(v126, (uint64_t (*)(void))sub_241215380);
    id v132 = objc_allocWithZone(MEMORY[0x263F45200]);
    id v133 = objc_msgSend(v132, sel_initWithHealthStore_analysisProvider_pregnancyModelProvider_maximumActiveDuration_minimumBufferDuration_shouldFetchCycleFactors_calendarCache_, v129, v130, 0, v131, 0, 0, v217);

    v214 = v130;
    uint64_t v134 = *(void **)(v94 + v124);
    uint64_t v135 = (uint64_t)v213;
    ((void (*)(char *, uint64_t, uint64_t))v224)(v213, v94 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartPDFProvider_gregorianCalendar, v212);
    type metadata accessor for CycleChartDayProvider();
    swift_allocObject();
    uint64_t v136 = (char *)v133;
    id v137 = v134;
    uint64_t v138 = sub_241513F80(v136, v137, v135);
    uint64_t v224 = v136;

    uint64_t v226 = v138[4];
    uint64_t v139 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartPDFProvider_dayProviderSubscription;
    uint64_t v140 = *(void *)(v94 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartPDFProvider_dayProviderSubscription);
    unint64_t v141 = (void *)swift_allocObject();
    v141[2] = v94;
    v141[3] = v138;
    v141[4] = v140;
    uint64_t v142 = swift_allocObject();
    *(void *)(v142 + 16) = sub_2412170B0;
    *(void *)(v142 + 24) = v141;
    sub_2412170FC();
    sub_241217830(&qword_268CFAEE0, (void (*)(uint64_t))sub_2412170FC);
    uint64_t v143 = v221;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v144 = v222;
    uint64_t v145 = sub_24162FDD8();
    uint64_t v146 = v216;
    swift_release();
    swift_release();
    *(void *)(v94 + v139) = v145;
    swift_release();
    uint64_t v147 = v215;
    v144(v215, v146, v112);
    uint64_t v148 = v180;
    sub_2416319F8();
    uint64_t v149 = v183;
    sub_241631A18();
    v208(v148, v112);
    sub_241217830((unint64_t *)&qword_26B0121C0, MEMORY[0x263F090E8]);
    uint64_t result = sub_241631BD8();
    if (result)
    {
      uint64_t v223 = v138;
      uint64_t v150 = v170;
      os_log_type_t v151 = (void (*)(char *, char *, uint64_t))v144;
      BOOL v152 = v169;
      uint64_t v153 = &v169[*(int *)(v170 + 48)];
      uint64_t v154 = *(void (**)(char *, char *, uint64_t))(v143 + 32);
      uint64_t v155 = v147;
      uint64_t v156 = v218;
      v154(v169, v155, v218);
      v213 = v153;
      v154(v153, v149, v156);
      unint64_t v157 = v175;
      unint64_t v158 = &v175[*(int *)(v150 + 48)];
      v151(v175, v152, v156);
      v151(v158, v153, v156);
      uint64_t v159 = (uint64_t)v168;
      v154(v168, v157, v156);
      uint64_t v160 = v208;
      v208(v158, v156);
      os_log_type_t v161 = &v157[*(int *)(v150 + 48)];
      v154(v157, v152, v156);
      v154(v161, v213, v156);
      uint64_t v162 = v174;
      v154((char *)(v159 + *(int *)(v174 + 36)), v161, v156);
      v160(v157, v156);
      uint64_t v163 = v171;
      sub_2411FED54(v159, v171);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v173 + 56))(v163, 0, 1, v162);
      uint64_t v164 = v172;
      sub_241216F14(v163, v172, (uint64_t (*)(void))sub_24121530C);
      sub_241291B64(v164);
      sub_241216F14(v163, v164, (uint64_t (*)(void))sub_24121530C);
      sub_2416315A8();
      sub_241217008(v163, (uint64_t (*)(void))sub_24121530C);

      sub_2411FEADC(v211);
      swift_release();

      swift_release();
      v160(v220, v156);
      sub_241217008(v219, type metadata accessor for CycleChartCycle);
      sub_241217168(v216);
      (*(void (**)(char *, uint64_t))(v166 + 8))(v165, v167);
      return v210;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_241214ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_241217710(0, (unint64_t *)&qword_26B00F1C0, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v14 - v7;
  uint64_t v9 = sub_241632028();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_241632008();
  swift_retain();
  swift_retain();
  uint64_t v10 = sub_241631FF8();
  uint64_t v11 = (void *)swift_allocObject();
  uint64_t v12 = MEMORY[0x263F8F500];
  v11[2] = v10;
  v11[3] = v12;
  v11[4] = a1;
  v11[5] = a2;
  sub_241496830((uint64_t)v8, (uint64_t)&unk_268CFAEF0, (uint64_t)v11);
  uint64_t result = swift_release();
  if (a3) {
    return sub_24162FA88();
  }
  return result;
}

uint64_t sub_241215030()
{
  sub_241217008(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartPDFProvider_cycle, type metadata accessor for CycleChartCycle);
  swift_release();

  uint64_t v1 = v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartPDFProvider_gregorianCalendar;
  uint64_t v2 = sub_24162BA08();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartPDFProvider_today;
  uint64_t v4 = sub_241631AC8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_241215178()
{
  return type metadata accessor for CycleChartPDFProvider();
}

uint64_t type metadata accessor for CycleChartPDFProvider()
{
  uint64_t result = qword_268CFAEB8;
  if (!qword_268CFAEB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2412151CC()
{
  uint64_t result = type metadata accessor for CycleChartCycle(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_24162BA08();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_241631AC8();
      if (v3 <= 0x3F) {
        return swift_updateClassMetadata2();
      }
    }
  }
  return result;
}

id sub_2412152F8()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartPDFProvider_pdfViewController);
}

void sub_24121530C()
{
  if (!qword_26B00F1D0)
  {
    sub_24121547C(255, (unint64_t *)&qword_26B0121D0, MEMORY[0x263F8D870]);
    unint64_t v0 = sub_241632C18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B00F1D0);
    }
  }
}

void sub_241215380()
{
  if (!qword_268CFFB90)
  {
    sub_241631AC8();
    sub_241217830((unint64_t *)&unk_268CFC5C0, MEMORY[0x263F090E8]);
    sub_241215428();
    unint64_t v0 = sub_241631C18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFFB90);
    }
  }
}

unint64_t sub_241215428()
{
  unint64_t result = qword_268CFFBA0;
  if (!qword_268CFFBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFFBA0);
  }
  return result;
}

void sub_24121547C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241631AC8();
    uint64_t v7 = sub_241217830((unint64_t *)&qword_26B0121C0, MEMORY[0x263F090E8]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241215518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  sub_24121547C(0, (unint64_t *)&qword_268CFCC20, MEMORY[0x263F8D1A0]);
  v5[5] = swift_task_alloc();
  type metadata accessor for CycleChartPDFModel(0);
  v5[6] = swift_task_alloc();
  v5[7] = sub_241632008();
  v5[8] = sub_241631FF8();
  v5[9] = sub_241631FF8();
  uint64_t v7 = sub_241631FC8();
  v5[10] = v7;
  v5[11] = v6;
  return MEMORY[0x270FA2498](sub_241215634, v7, v6);
}

uint64_t sub_241215634()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartPDFProvider_healthStore);
  uint64_t v5 = v3 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartPDFProvider_cycle;
  uint64_t v6 = type metadata accessor for CycleChartCycle(0);
  sub_24136561C((char *)(v5 + *(int *)(v6 + 24)), v1);
  swift_retain();
  uint64_t v7 = sub_241621094(v1, v2);
  v0[12] = v7;
  swift_release();
  sub_241217168(v1);
  uint64_t v8 = v3 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartPDFProvider_gregorianCalendar;
  uint64_t v9 = v3 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartPDFProvider_today;
  uint64_t v10 = (void *)swift_task_alloc();
  v0[13] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_241215788;
  uint64_t v11 = v0[6];
  return sub_2413FB764(v11, v4, v5, v7, v8, v9);
}

uint64_t sub_241215788()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 112) = v3;
  void *v3 = v2;
  v3[1] = sub_2412158FC;
  uint64_t v4 = *(void *)(v1 + 48);
  return sub_241215B38(v4);
}

uint64_t sub_2412158FC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  return MEMORY[0x270FA2498](sub_241215A1C, v3, v2);
}

uint64_t sub_241215A1C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_release();
  sub_241217008(v1, type metadata accessor for CycleChartPDFModel);
  uint64_t v3 = sub_241631FC8();
  return MEMORY[0x270FA2498](sub_241215AC4, v3, v2);
}

uint64_t sub_241215AC4()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_241215B38(uint64_t a1)
{
  v2[16] = a1;
  v2[17] = v1;
  v2[18] = *v1;
  uint64_t v3 = sub_24162EFA8();
  v2[19] = v3;
  v2[20] = *(void *)(v3 - 8);
  v2[21] = swift_task_alloc();
  uint64_t v4 = sub_24162D898();
  v2[22] = v4;
  v2[23] = *(void *)(v4 - 8);
  v2[24] = swift_task_alloc();
  uint64_t v5 = *(void *)(type metadata accessor for CycleChartPDFModel(0) - 8);
  v2[25] = v5;
  v2[26] = *(void *)(v5 + 64);
  v2[27] = swift_task_alloc();
  uint64_t v6 = sub_24162D328();
  v2[28] = v6;
  v2[29] = *(void *)(v6 - 8);
  v2[30] = swift_task_alloc();
  uint64_t v7 = sub_24162CE68();
  v2[31] = v7;
  v2[32] = *(void *)(v7 - 8);
  v2[33] = swift_task_alloc();
  uint64_t v8 = sub_24162CE88();
  v2[34] = v8;
  v2[35] = *(void *)(v8 - 8);
  v2[36] = swift_task_alloc();
  sub_241217710(0, (unint64_t *)&unk_268D04810, (uint64_t (*)(uint64_t))type metadata accessor for CycleChartsModel, MEMORY[0x263F8D8F0]);
  v2[37] = swift_task_alloc();
  v2[38] = swift_task_alloc();
  sub_241632008();
  v2[39] = sub_241631FF8();
  uint64_t v10 = sub_241631FC8();
  v2[40] = v10;
  v2[41] = v9;
  return MEMORY[0x270FA2498](sub_241215E90, v10, v9);
}

uint64_t sub_241215E90()
{
  uint64_t v1 = v0[38];
  uint64_t v2 = *(void *)(v0[17] + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartPDFProvider_chartsProvider);
  sub_241217710(0, &qword_268CFAF00, (uint64_t (*)(uint64_t))type metadata accessor for CycleChartsModel, MEMORY[0x263F8E0F8]);
  uint64_t v3 = type metadata accessor for CycleChartsModel();
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v35 = *(void *)(v4 + 72);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24163A4F0;
  uint64_t v7 = v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin27CycleChartsPDFModelProvider_fertilityChart;
  swift_beginAccess();
  sub_241216E80(v7, v1);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  uint64_t result = v8(v1, 1, v3);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v34 = v6;
  uint64_t v10 = v6 + v5;
  uint64_t v11 = v0[37];
  sub_241217644(v0[38], v10, (uint64_t (*)(void))type metadata accessor for CycleChartsModel);
  uint64_t v12 = v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin27CycleChartsPDFModelProvider_symptomsChart;
  swift_beginAccess();
  sub_241216E80(v12, v11);
  uint64_t result = v8(v11, 1, v3);
  if (result == 1)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v31 = v0[35];
  uint64_t v32 = v0[36];
  uint64_t v13 = v0[33];
  uint64_t v33 = v0[34];
  uint64_t v14 = v0[31];
  uint64_t v15 = v0[32];
  uint64_t v17 = v0[29];
  uint64_t v16 = (uint64_t *)v0[30];
  uint64_t v19 = v0[27];
  uint64_t v18 = v0[28];
  uint64_t v28 = v0[25];
  uint64_t v20 = v0[23];
  uint64_t v29 = v0[24];
  uint64_t v30 = v0[22];
  uint64_t v21 = v10 + v35;
  uint64_t v22 = v0[16];
  sub_241217644(v0[37], v21, (uint64_t (*)(void))type metadata accessor for CycleChartsModel);
  (*(void (**)(uint64_t, void, uint64_t))(v15 + 104))(v13, *MEMORY[0x263F43D68], v14);
  *uint64_t v16 = type metadata accessor for PDFCycleTrackingPage();
  (*(void (**)(uint64_t *, void, uint64_t))(v17 + 104))(v16, *MEMORY[0x263F43ED8], v18);
  sub_241216F14(v22, v19, type metadata accessor for CycleChartPDFModel);
  unint64_t v23 = (*(unsigned __int8 *)(v28 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v34;
  sub_241217644(v19, v24 + v23, type metadata accessor for CycleChartPDFModel);
  (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))(v29, *MEMORY[0x263F440C0], v30);
  sub_24162CE78();
  uint64_t v25 = MEMORY[0x263F43D78];
  v0[5] = v33;
  v0[6] = v25;
  uint64_t v26 = sub_2411B6C70(v0 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v31 + 16))(v26, v32, v33);
  uint64_t v36 = (uint64_t (*)(uint64_t *))((int)*MEMORY[0x263F440A8] + MEMORY[0x263F440A8]);
  long long v27 = (void *)swift_task_alloc();
  v0[42] = (uint64_t)v27;
  *long long v27 = v0;
  v27[1] = sub_2412162CC;
  return v36(v0 + 2);
}

uint64_t sub_2412162CC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 344) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 320);
    uint64_t v4 = *(void *)(v2 + 328);
    unint64_t v5 = sub_2412164D8;
  }
  else
  {
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0(v2 + 16);
    uint64_t v3 = *(void *)(v2 + 320);
    uint64_t v4 = *(void *)(v2 + 328);
    unint64_t v5 = sub_2412163E8;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_2412163E8()
{
  uint64_t v2 = v0[35];
  uint64_t v1 = v0[36];
  uint64_t v3 = v0[34];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_2412164D8()
{
  uint64_t v30 = v0;
  uint64_t v1 = (void *)v0[43];
  swift_release();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)(v0 + 2));
  sub_24162EF48();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_24162EF98();
  os_log_type_t v5 = sub_2416322D8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[43];
    uint64_t v27 = v0[34];
    uint64_t v28 = v0[36];
    uint64_t v7 = v0[20];
    uint64_t v25 = v0[21];
    uint64_t v26 = v0[35];
    uint64_t v24 = v0[19];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v29 = v9;
    *(_DWORD *)uint64_t v8 = 136446466;
    uint64_t v10 = sub_2416333E8();
    v0[13] = sub_2411B6898(v10, v11, &v29);
    sub_241632C28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    v0[14] = v6;
    id v12 = v6;
    sub_2411BF880(0, (unint64_t *)&qword_26B012410);
    uint64_t v13 = sub_241631D48();
    v0[15] = sub_2411B6898(v13, v14, &v29);
    sub_241632C28();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24118E000, v4, v5, "[%{public}s] Failed to configure PDF view controller: %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245621640](v9, -1, -1);
    MEMORY[0x245621640](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v25, v24);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    uint64_t v15 = (void *)v0[43];
    uint64_t v17 = v0[35];
    uint64_t v16 = v0[36];
    uint64_t v18 = v0[34];
    uint64_t v20 = v0[20];
    uint64_t v19 = v0[21];
    uint64_t v21 = v0[19];

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_24121680C(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a2;
  sub_241217710(0, &qword_268CFAF08, MEMORY[0x263F43AC8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  os_log_type_t v5 = (char *)v23 - v4;
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = &off_241637000;
  if (v6)
  {
    uint64_t v8 = *(void *)(type metadata accessor for CycleChartsModel() - 8);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v25 = *(void *)(v8 + 72);
    uint64_t v10 = sub_24162CB38();
    unint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    v23[1] = a1;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    id v12 = (void *)MEMORY[0x263F8EE78];
    long long v24 = xmmword_241637EE0;
    do
    {
      uint64_t v13 = v11(v5, 1, 1, v10);
      MEMORY[0x270FA5388](v13);
      v27[3] = sub_24162CB88();
      void v27[4] = MEMORY[0x263F43AD0];
      sub_2411B6C70(v27);
      sub_24162CB78();
      uint64_t v14 = sub_24162DA28();
      _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v27);
      sub_2412177D4(0, (unint64_t *)&unk_268D035A0, &qword_268CFAF10, &qword_268D03590);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = v24;
      *(void *)(v15 + 32) = v14;
      uint64_t v16 = MEMORY[0x24561AEE0]();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v12 = sub_24158B9BC(0, v12[2] + 1, 1, v12);
      }
      unint64_t v18 = v12[2];
      unint64_t v17 = v12[3];
      if (v18 >= v17 >> 1) {
        id v12 = sub_24158B9BC((void *)(v17 > 1), v18 + 1, 1, v12);
      }
      v12[2] = v18 + 1;
      v12[v18 + 4] = v16;
      v9 += v25;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    uint64_t v7 = &off_241637000;
  }
  else
  {
    id v12 = (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v19 = MEMORY[0x24561AED0](v12);
  swift_bridgeObjectRelease();
  sub_2412177D4(0, (unint64_t *)&unk_268D035A0, &qword_268CFAF10, &qword_268D03590);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = *((_OWORD *)v7 + 238);
  *(void *)(v20 + 32) = v19;
  uint64_t v21 = MEMORY[0x24561AEE0]();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_241216BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CycleChartsModel();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v17[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CycleChartPDFModel(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v17[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241216F14(a1, (uint64_t)v9, type metadata accessor for CycleChartPDFModel);
  sub_241216F14(a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CycleChartsModel);
  uint64_t v10 = type metadata accessor for PDFCycleChartView();
  uint64_t v11 = swift_allocObject();
  sub_241217644((uint64_t)v9, v11 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin17PDFCycleChartView_pdfModel, type metadata accessor for CycleChartPDFModel);
  sub_241217644((uint64_t)v6, v11 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin17PDFCycleChartView_cycleChartsModel, (uint64_t (*)(void))type metadata accessor for CycleChartsModel);
  v17[3] = v10;
  void v17[4] = sub_241217830(&qword_268CFAF20, (void (*)(uint64_t))type metadata accessor for PDFCycleChartView);
  v17[0] = v11;
  uint64_t v12 = sub_24162D4D8();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v17);
  sub_2412177D4(0, (unint64_t *)&qword_268D036C0, &qword_268CFAF18, (unint64_t *)&qword_268D03690);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_241637EE0;
  *(void *)(v13 + 32) = v12;
  uint64_t v14 = MEMORY[0x24561A980]();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_241216DC8()
{
  v5[3] = sub_24162E008();
  v5[4] = MEMORY[0x263F44500];
  uint64_t v0 = sub_2411B6C70(v5);
  sub_24155E424((uint64_t)v0);
  uint64_t v1 = sub_24162D4D8();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v5);
  sub_2412177D4(0, (unint64_t *)&qword_268D036C0, &qword_268CFAF18, (unint64_t *)&qword_268D03690);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_241637EE0;
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = MEMORY[0x24561A980]();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_241216E80(uint64_t a1, uint64_t a2)
{
  sub_241217710(0, (unint64_t *)&unk_268D04810, (uint64_t (*)(uint64_t))type metadata accessor for CycleChartsModel, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241216F14(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241216F7C(uint64_t a1)
{
  sub_241217710(0, &qword_268CFAEC8, type metadata accessor for CycleChartCycle, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241217008(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241217068()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_2412170B0()
{
  return sub_241214ECC(v0[2], v0[3], v0[4]);
}

uint64_t sub_2412170BC()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2412170F4(uint64_t a1)
{
  return sub_24131FFA8(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_2412170FC()
{
  if (!qword_268CFAED8)
  {
    unint64_t v0 = sub_24162FA68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFAED8);
    }
  }
}

uint64_t sub_241217168(uint64_t a1)
{
  sub_24121547C(0, (unint64_t *)&qword_268CFCC20, MEMORY[0x263F8D1A0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2412171E0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_241217228(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_241201428;
  return sub_241215518(a1, v4, v5, v7, v6);
}

uint64_t sub_2412172E8()
{
  uint64_t v31 = type metadata accessor for CycleChartPDFModel(0);
  uint64_t v1 = *(void *)(v31 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v33 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v32 = *(void *)(v1 + 64);
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + v2;
  uint64_t v4 = sub_24162D9A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v3 + *(int *)(v31 + 20);

  uint64_t v6 = (int *)type metadata accessor for CycleChartCycle(0);
  uint64_t v7 = v5 + v6[6];
  uint64_t v8 = sub_241631AC8();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v5 + v6[7], v8);
  uint64_t v10 = v5 + v6[8];
  uint64_t v11 = sub_24162BA08();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  v12(v10, v11);
  uint64_t v13 = v5 + v6[9];
  uint64_t v14 = v31;
  v12(v13, v11);
  swift_bridgeObjectRelease();
  uint64_t v15 = v3 + *(int *)(v31 + 28);
  uint64_t v16 = type metadata accessor for CycleChartPDFPregnancyFactor();
  int v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v15, 1, v16);
  uint64_t v19 = v32;
  unint64_t v18 = v2;
  uint64_t v20 = v33;
  if (!v17)
  {
    uint64_t v28 = v11;
    uint64_t v29 = v12;
    uint64_t v21 = sub_24162B718();
    uint64_t v22 = *(void *)(v21 - 8);
    unint64_t v23 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v23(v15, v21);
    swift_bridgeObjectRelease();
    uint64_t v24 = v15 + *(int *)(v16 + 24);
    if (!(*(unsigned int (**)(void))(v22 + 48))()) {
      v23(v24, v21);
    }

    unint64_t v18 = v2;
    uint64_t v20 = v33;
    uint64_t v14 = v31;
    uint64_t v19 = v32;
    uint64_t v12 = v29;
    uint64_t v11 = v28;
  }
  uint64_t v25 = v20 | 7;
  uint64_t v26 = v18 + v19;
  v12(v3 + *(int *)(v14 + 32), v11);
  v9(v3 + *(int *)(v14 + 36), v8);

  return MEMORY[0x270FA0238](v30, v26, v25);
}

uint64_t sub_241217644(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2412176AC()
{
  uint64_t v1 = *(void *)(type metadata accessor for CycleChartPDFModel(0) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_24121680C(v2, v3);
}

void sub_241217710(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241217774()
{
  return sub_241216BA8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_24121777C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_2411BF880(255, a3);
    unint64_t v4 = sub_241631FA8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2412177D4(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  if (!*a2)
  {
    sub_24121777C(255, a3, a4);
    unint64_t v5 = sub_2416331E8();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_241217830(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241217878()
{
  qword_268D23928 = 0x4046000000000000;
}

void sub_241217888()
{
  qword_268D23930 = 0x4010000000000000;
}

uint64_t sub_241217898@<X0>(uint64_t a1@<X8>)
{
  uint64_t v122 = a1;
  sub_24121BDE4(0, &qword_268CFB060, (uint64_t (*)(uint64_t))sub_24121BAFC, (uint64_t (*)(uint64_t))type metadata accessor for EndDatePickerRow, MEMORY[0x263F19B20]);
  uint64_t v110 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v114 = (uint64_t)&v98 - v2;
  uint64_t v113 = type metadata accessor for EndDatePickerRow();
  MEMORY[0x270FA5388](v113);
  uint64_t v112 = (char *)&v98 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_2416312C8();
  uint64_t v120 = *(void *)(v121 - 8);
  MEMORY[0x270FA5388](v121);
  uint64_t v126 = (char *)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v128 = (char *)&v98 - v6;
  uint64_t v7 = sub_24162DA38();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24121BAB4(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v107 = (char *)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v98 - v14;
  sub_24121BA8C(0);
  uint64_t v17 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v117 = (uint64_t)&v98 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v98 - v20;
  sub_24121BA00(0);
  uint64_t v123 = v22;
  MEMORY[0x270FA5388](v22);
  uint64_t v116 = (uint64_t)&v98 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v98 - v25;
  sub_24121B9D8(0);
  uint64_t v28 = v27;
  MEMORY[0x270FA5388](v27);
  uint64_t v119 = (uint64_t)&v98 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v125 = (uint64_t)&v98 - v31;
  MEMORY[0x270FA5388](v32);
  uint64_t v115 = (uint64_t)&v98 - v33;
  MEMORY[0x270FA5388](v34);
  uint64_t v118 = (uint64_t)&v98 - v35;
  MEMORY[0x270FA5388](v36);
  uint64_t v102 = (uint64_t)&v98 - v37;
  MEMORY[0x270FA5388](v38);
  uint64_t v127 = (uint64_t)&v98 - v39;
  type metadata accessor for PregnancyOnboardingAddPastPregnancyViewController.ContentView();
  sub_24121C608(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  uint64_t v101 = v40;
  sub_241631368();
  uint64_t v41 = v136;
  uint64_t v42 = *(void (**)(void))(v8 + 104);
  unsigned int v99 = *MEMORY[0x263F44280];
  uint64_t v100 = v8 + 104;
  unint64_t v98 = (void (*)(char *, void, uint64_t))v42;
  v42(v10);
  sub_24138F638(v41, 7, (uint64_t)v10, 1, (uint64_t)v15);
  swift_release();
  uint64_t v106 = v8;
  uint64_t v43 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v108 = v10;
  uint64_t v111 = v7;
  uint64_t v105 = v8 + 8;
  id v104 = v43;
  v43(v10, v7);
  char v44 = sub_2416309B8();
  if (qword_268CF91F8 != -1) {
    swift_once();
  }
  uint64_t v124 = v28;
  sub_24162FE78();
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  sub_24121BE68((uint64_t)v15, (uint64_t)v21, (uint64_t (*)(void))sub_24121BAB4);
  char v53 = &v21[*(int *)(v17 + 36)];
  char *v53 = v44;
  *((void *)v53 + 1) = v46;
  *((void *)v53 + 2) = v48;
  *((void *)v53 + 3) = v50;
  *((void *)v53 + 4) = v52;
  v53[40] = 0;
  sub_24121C35C((uint64_t)v15, (uint64_t (*)(void))sub_24121BAB4);
  if (qword_268CF91F0 != -1) {
    swift_once();
  }
  uint64_t v109 = v15;
  uint64_t v103 = v17;
  sub_2416313F8();
  sub_2416301F8();
  sub_24121BE68((uint64_t)v21, (uint64_t)v26, (uint64_t (*)(void))sub_24121BA8C);
  uint64_t v54 = &v26[*(int *)(v123 + 36)];
  long long v55 = v134;
  *((_OWORD *)v54 + 4) = v133;
  *((_OWORD *)v54 + 5) = v55;
  *((_OWORD *)v54 + 6) = v135;
  long long v56 = v130;
  *(_OWORD *)uint64_t v54 = v129;
  *((_OWORD *)v54 + 1) = v56;
  long long v57 = v132;
  *((_OWORD *)v54 + 2) = v131;
  *((_OWORD *)v54 + 3) = v57;
  sub_24121C35C((uint64_t)v21, (uint64_t (*)(void))sub_24121BA8C);
  char v58 = sub_2416309A8();
  uint64_t v59 = v102;
  sub_24121BE68((uint64_t)v26, v102, (uint64_t (*)(void))sub_24121BA00);
  uint64_t v60 = v59 + *(int *)(v124 + 36);
  *(unsigned char *)uint64_t v60 = v58;
  *(_OWORD *)(v60 + 8) = 0u;
  *(_OWORD *)(v60 + 24) = 0u;
  *(unsigned char *)(v60 + 40) = 1;
  sub_24121C35C((uint64_t)v26, (uint64_t (*)(void))sub_24121BA00);
  sub_24121C3BC(v59, v127, (uint64_t (*)(void))sub_24121B9D8);
  sub_2416312B8();
  sub_241631368();
  uint64_t v61 = v108;
  uint64_t v62 = v111;
  v98(v108, v99, v111);
  uint64_t v63 = v113;
  uint64_t v64 = (uint64_t)v112;
  (*(void (**)(char *, char *, uint64_t))(v106 + 16))(&v112[*(int *)(v113 + 20)], v61, v62);
  type metadata accessor for PregnancyDatesInputViewModel();
  sub_24121BED0((unint64_t *)&qword_268CFA8A0, (void (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel);
  swift_retain();
  sub_241631388();
  *(unsigned char *)(v64 + *(int *)(v63 + 24)) = 1;
  sub_24121BE68(v64, v114, (uint64_t (*)(void))type metadata accessor for EndDatePickerRow);
  swift_storeEnumTagMultiPayload();
  sub_24121BAFC(0);
  sub_24121C120((unint64_t *)&qword_268CFB068, sub_24121BAFC, (void (*)(void))sub_24121BF18, (void (*)(void))sub_24121C0D8);
  sub_24121BED0(&qword_268CFB0D8, (void (*)(uint64_t))type metadata accessor for EndDatePickerRow);
  uint64_t v65 = (uint64_t)v107;
  sub_241630638();
  sub_24121C35C(v64, (uint64_t (*)(void))type metadata accessor for EndDatePickerRow);
  uint64_t v66 = (uint64_t)v109;
  sub_24121C3BC(v65, (uint64_t)v109, (uint64_t (*)(void))sub_24121BAB4);
  swift_release();
  v104(v61, v62);
  char v67 = sub_2416309B8();
  sub_24162FE78();
  uint64_t v69 = v68;
  uint64_t v71 = v70;
  uint64_t v73 = v72;
  uint64_t v75 = v74;
  uint64_t v76 = v117;
  sub_24121BE68(v66, v117, (uint64_t (*)(void))sub_24121BAB4);
  uint64_t v77 = v76 + *(int *)(v103 + 36);
  *(unsigned char *)uint64_t v77 = v67;
  *(void *)(v77 + 8) = v69;
  *(void *)(v77 + 16) = v71;
  *(void *)(v77 + 24) = v73;
  *(void *)(v77 + 32) = v75;
  *(unsigned char *)(v77 + 40) = 0;
  sub_24121C35C(v66, (uint64_t (*)(void))sub_24121BAB4);
  sub_2416313F8();
  sub_2416301F8();
  uint64_t v78 = v116;
  sub_24121BE68(v76, v116, (uint64_t (*)(void))sub_24121BA8C);
  uint64_t v79 = (_OWORD *)(v78 + *(int *)(v123 + 36));
  long long v80 = v141;
  v79[4] = v140;
  v79[5] = v80;
  v79[6] = v142;
  long long v81 = v137;
  *uint64_t v79 = v136;
  v79[1] = v81;
  long long v82 = v139;
  v79[2] = v138;
  v79[3] = v82;
  sub_24121C35C(v76, (uint64_t (*)(void))sub_24121BA8C);
  char v83 = sub_2416309A8();
  uint64_t v84 = v115;
  sub_24121BE68(v78, v115, (uint64_t (*)(void))sub_24121BA00);
  uint64_t v85 = v84 + *(int *)(v124 + 36);
  *(unsigned char *)uint64_t v85 = v83;
  *(_OWORD *)(v85 + 8) = 0u;
  *(_OWORD *)(v85 + 24) = 0u;
  *(unsigned char *)(v85 + 40) = 1;
  sub_24121C35C(v78, (uint64_t (*)(void))sub_24121BA00);
  uint64_t v86 = v118;
  sub_24121C3BC(v84, v118, (uint64_t (*)(void))sub_24121B9D8);
  uint64_t v87 = v125;
  sub_24121BE68(v127, v125, (uint64_t (*)(void))sub_24121B9D8);
  uint64_t v88 = v120;
  uint64_t v89 = *(void (**)(char *, char *, uint64_t))(v120 + 16);
  uint64_t v90 = v121;
  v89(v126, v128, v121);
  uint64_t v91 = v119;
  sub_24121BE68(v86, v119, (uint64_t (*)(void))sub_24121B9D8);
  uint64_t v92 = v122;
  sub_24121BE68(v87, v122, (uint64_t (*)(void))sub_24121B9D8);
  sub_24121B964();
  uint64_t v94 = v93;
  unint64_t v95 = v126;
  v89((char *)(v92 + *(int *)(v93 + 48)), v126, v90);
  sub_24121BE68(v91, v92 + *(int *)(v94 + 64), (uint64_t (*)(void))sub_24121B9D8);
  sub_24121C35C(v86, (uint64_t (*)(void))sub_24121B9D8);
  uint64_t v96 = *(void (**)(char *, uint64_t))(v88 + 8);
  v96(v128, v90);
  sub_24121C35C(v127, (uint64_t (*)(void))sub_24121B9D8);
  sub_24121C35C(v91, (uint64_t (*)(void))sub_24121B9D8);
  v96(v95, v90);
  return sub_24121C35C(v125, (uint64_t (*)(void))sub_24121B9D8);
}

uint64_t sub_24121872C@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  sub_24121C608(0, (unint64_t *)&qword_268CFA8A8, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  sub_24121B8AC();
  uint64_t v3 = v2;
  uint64_t result = sub_241217898((uint64_t)a1 + *(int *)(v2 + 52));
  *((unsigned char *)a1 + *(int *)(v3 + 56)) = 0;
  return result;
}

id sub_2412187D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2416308F8();
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = type metadata accessor for PregnancyOnboardingAddPastPregnancyViewController.ContentView();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (void *)((char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin49PregnancyOnboardingAddPastPregnancyViewController____lazy_storage___hostingController;
  uint64_t v7 = *(void **)(v1
                + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin49PregnancyOnboardingAddPastPregnancyViewController____lazy_storage___hostingController);
  if (v7)
  {
    id v8 = *(id *)(v1
               + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin49PregnancyOnboardingAddPastPregnancyViewController____lazy_storage___hostingController);
  }
  else
  {
    *uint64_t v5 = swift_getKeyPath();
    sub_24121C608(0, (unint64_t *)&qword_268CFA8A8, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    swift_storeEnumTagMultiPayload();
    type metadata accessor for PregnancyDatesInputViewModel();
    sub_24121BED0((unint64_t *)&qword_268CFA8A0, (void (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel);
    swift_retain();
    sub_241631388();
    sub_24121C574();
    id v10 = objc_allocWithZone(v9);
    uint64_t v11 = (void *)sub_2416305F8();
    uint64_t v12 = (uint64_t (*)(uint64_t))MEMORY[0x263F1A4B8];
    sub_24121C608(0, &qword_268CFA8C0, MEMORY[0x263F1A4B8], MEMORY[0x263F8E0F8]);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_241637EE0;
    sub_2416308E8();
    v17[1] = v13;
    sub_24121BED0(&qword_268CFA8C8, MEMORY[0x263F1A4B8]);
    sub_24121C608(0, &qword_268CFA8D0, v12, MEMORY[0x263F8D488]);
    sub_24121C66C((unint64_t *)&qword_268CFA8D8, &qword_268CFA8D0, v12);
    sub_241632D08();
    sub_2416305E8();
    uint64_t v14 = *(void **)(v1 + v6);
    *(void *)(v1 + v6) = v11;
    id v8 = v11;

    uint64_t v7 = 0;
  }
  id v15 = v7;
  return v8;
}

void sub_241218B18(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v3[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin49PregnancyOnboardingAddPastPregnancyViewController_onboardingStep] = 3;
  *(void *)&v3[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin49PregnancyOnboardingAddPastPregnancyViewController_nextButton] = 0;
  *(void *)&v3[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin49PregnancyOnboardingAddPastPregnancyViewController____lazy_storage___hostingController] = 0;
  *(void *)&v3[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin49PregnancyOnboardingAddPastPregnancyViewController_viewModel] = a1;
  *(void *)&v3[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin49PregnancyOnboardingAddPastPregnancyViewController_coordinator] = a2;
  uint64_t v7 = qword_268CF9208;
  swift_retain();
  swift_retain();
  if (v7 != -1) {
    swift_once();
  }
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  id v8 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  if (qword_268CF9210 != -1) {
    swift_once();
  }
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  Class v9 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  id v10 = self;
  uint64_t v11 = (void *)sub_241631CC8();
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v12 = objc_msgSend(v10, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v11, qword_26B0181A0, 0);

  if (v12)
  {
    objc_msgSend(v12, sel_setIsAccessibilityElement_, 0);
    v13.receiver = v3;
    v13.super_class = ObjectType;
    objc_msgSendSuper2(&v13, sel_initWithTitle_detailText_icon_contentLayout_, v8, v9, v12, 2);

    swift_release();
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void sub_241218D68()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_24121C608(0, &qword_268CFCE90, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v45 = (char *)&v44 - v4;
  uint64_t v5 = sub_24162B468();
  uint64_t v47 = *(void *)(v5 - 8);
  uint64_t v48 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v46 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24162B7E8();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = sub_241631CA8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v13 = MEMORY[0x270FA5388](v12).n128_u64[0];
  id v15 = (char *)&v44 - v14;
  v51.receiver = v1;
  v51.super_class = ObjectType;
  objc_msgSendSuper2(&v51, sel_viewDidLoad, v13);
  objc_msgSend(v1, sel_setModalInPresentation_, 1);
  id v16 = sub_2412187D0();
  objc_msgSend(v1, sel_addChildViewController_, v16);

  id v17 = objc_msgSend(v1, sel_contentView);
  id v18 = sub_2412187D0();
  id v19 = objc_msgSend(v18, sel_view);

  if (!v19)
  {
    __break(1u);
    goto LABEL_17;
  }
  objc_msgSend(v17, sel_addSubview_, v19);

  id v20 = sub_2412187D0();
  objc_msgSend(v20, sel_didMoveToParentViewController_, v1);

  id v21 = sub_2412187D0();
  id v22 = objc_msgSend(v21, sel_view);

  if (!v22)
  {
LABEL_17:
    __break(1u);
    return;
  }
  id v23 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v22, sel_hk_alignConstraintsWithView_, v23);

  sub_241631C38();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v15, v8);
  uint64_t v24 = (uint64_t)v45;
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v25 = (id)qword_26B0181A0;
  sub_24162B7D8();
  sub_241631D38();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
  uint64_t v26 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  uint64_t v27 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin49PregnancyOnboardingAddPastPregnancyViewController_onboardingStep;
  char v28 = v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin49PregnancyOnboardingAddPastPregnancyViewController_onboardingStep];
  if (qword_26B00F370 != -1) {
    swift_once();
  }
  uint64_t v49 = qword_26B017FC8;
  uint64_t v50 = unk_26B017FD0;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631E08();
  sub_241631E08();
  PregnancyOnboardingStep.description.getter(v28);
  sub_241631E08();
  swift_bridgeObjectRelease();
  sub_241631E08();
  sub_241631E08();
  uint64_t v29 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  id v30 = objc_msgSend(v1, sel_hxui_addPrimaryFooterButtonWithTitle_accessibilityIdentifier_, v26, v29);

  uint64_t v31 = *(void **)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin49PregnancyOnboardingAddPastPregnancyViewController_nextButton];
  *(void *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin49PregnancyOnboardingAddPastPregnancyViewController_nextButton] = v30;

  sub_24121957C(v32);
  objc_msgSend(v1, sel_hxui_addCancelButton);
  id v33 = objc_msgSend(v1, sel_navigationItem);
  id v34 = objc_msgSend(v33, sel_rightBarButtonItem);

  if (v34)
  {
    char v35 = v1[v27];
    uint64_t v49 = qword_26B017FC8;
    uint64_t v50 = unk_26B017FD0;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_241631E08();
    sub_241631E08();
    PregnancyOnboardingStep.description.getter(v35);
    sub_241631E08();
    swift_bridgeObjectRelease();
    sub_241631E08();
    sub_241631E08();
    uint64_t v36 = (void *)sub_241631CC8();
    swift_bridgeObjectRelease();
    objc_msgSend(v34, sel_setAccessibilityIdentifier_, v36);
  }
  if (qword_268CF9230 != -1) {
    swift_once();
  }
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_24162B458();
  swift_bridgeObjectRelease();
  uint64_t v38 = v47;
  uint64_t v37 = v48;
  int v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v24, 1, v48);
  uint64_t v40 = v46;
  if (v39 == 1)
  {
    sub_24121C424(v24, &qword_268CFCE90, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v46, v24, v37);
    id v41 = objc_msgSend(v1, sel_buttonTray);
    if (qword_268CF9218 != -1) {
      swift_once();
    }
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v42 = (void *)sub_241631CC8();
    swift_bridgeObjectRelease();
    uint64_t v43 = (void *)sub_24162B428();
    objc_msgSend(v41, sel_setCaptionText_learnMoreURL_, v42, v43);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v37);
  }
}

uint64_t sub_24121957C(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1
                + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin49PregnancyOnboardingAddPastPregnancyViewController_nextButton);
  if (v2)
  {
    uint64_t v3 = *(void *)(v1
                   + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin49PregnancyOnboardingAddPastPregnancyViewController_viewModel);
    swift_getKeyPath();
    sub_24121BED0((unint64_t *)&qword_268CFA8A0, (void (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel);
    id v4 = v2;
    swift_retain();
    sub_24162BB48();
    swift_release();
    uint64_t v5 = *(unsigned __int8 *)(v3
                            + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin28PregnancyDatesInputViewModel__isValidPregnancySampleInput);
    swift_release();
    objc_msgSend(v4, sel_setEnabled_, v5);
  }
  MEMORY[0x270FA5388](a1);
  MEMORY[0x270FA5388](v6);
  return sub_24162BB28();
}

uint64_t sub_241219744()
{
  return swift_release();
}

uint64_t sub_2412197FC()
{
  uint64_t v0 = sub_241631488();
  uint64_t v13 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2416314A8();
  uint64_t v3 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411B7D14();
  uint64_t v11 = sub_2416325A8();
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_24121C56C;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2411987F4;
  aBlock[3] = &unk_26F569F50;
  uint64_t v7 = _Block_copy(aBlock);
  swift_retain();
  sub_241631498();
  uint64_t v14 = MEMORY[0x263F8EE78];
  sub_24121BED0((unint64_t *)&qword_26B013080, MEMORY[0x263F8F030]);
  uint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F030];
  sub_24121C608(0, (unint64_t *)&qword_26B013090, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
  sub_24121C66C((unint64_t *)&qword_26B0130A0, (unint64_t *)&qword_26B013090, v8);
  sub_241632D08();
  uint64_t v9 = (void *)v11;
  MEMORY[0x24561FA80](0, v5, v2, v7);
  _Block_release(v7);

  (*(void (**)(char *, uint64_t))(v13 + 8))(v2, v0);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v12);
  swift_release();
  return swift_release();
}

void sub_241219B08(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x245621790](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    sub_24121957C();
  }
}

void sub_241219B5C()
{
  uint64_t v1 = v0;
  swift_retain();
  BOOL v2 = sub_24137A4C8();
  swift_release();
  if (v2)
  {
    uint64_t v3 = qword_268CF9500;
    swift_retain();
    if (v3 != -1) {
      swift_once();
    }
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    swift_release();
    uint64_t v4 = qword_268CF9508;
    swift_retain();
    if (v4 != -1) {
      swift_once();
    }
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    swift_release();
    uint64_t v5 = (void *)sub_241631CC8();
    swift_bridgeObjectRelease();
    uint64_t v6 = (void *)sub_241631CC8();
    swift_bridgeObjectRelease();
    id v10 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v5, v6, 1);

    uint64_t v7 = qword_268CF9510;
    swift_retain();
    if (v7 != -1) {
      swift_once();
    }
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    swift_release();
    uint64_t v8 = (void *)sub_241631CC8();
    swift_bridgeObjectRelease();
    id v9 = objc_msgSend(self, sel_actionWithTitle_style_handler_, v8, 1, 0);

    objc_msgSend(v10, sel_addAction_, v9);
    objc_msgSend(v1, sel_presentViewController_animated_completion_, v10, 1, 0);
  }
  else
  {
    swift_retain();
    sub_2415E7E28(3, 2);
    swift_release();
  }
}

uint64_t sub_241219E60()
{
  uint64_t v1 = *(void *)(v0
                 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin49PregnancyOnboardingAddPastPregnancyViewController_coordinator);
  int v2 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin49PregnancyOnboardingAddPastPregnancyViewController_onboardingStep);
  uint64_t v3 = *(void (**)(uint64_t))(v1 + 416);
  swift_retain();
  if (v3)
  {
    uint64_t v4 = sub_2411F4080((uint64_t)v3);
    v3(v4);
    sub_2411F4090((uint64_t)v3);
  }
  sub_2415E9CF4(v2, 2);
  objc_msgSend(*(id *)(v1 + 360), sel_dismissViewControllerAnimated_completion_, 1, 0);

  return swift_release();
}

uint64_t type metadata accessor for PregnancyOnboardingAddPastPregnancyViewController()
{
  return self;
}

void sub_24121A034()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  swift_weakInit();
  swift_weakAssign();
  if (qword_268CF9220 != -1) {
    swift_once();
  }
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  int v2 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  if (qword_268CF9228 != -1) {
    swift_once();
  }
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v3 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  uint64_t v4 = self;
  uint64_t v5 = (void *)sub_241631CC8();
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v6 = objc_msgSend(v4, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v5, qword_26B0181A0, 0);

  if (v6)
  {
    objc_msgSend(v6, sel_setIsAccessibilityElement_, 0);
    v7.receiver = v0;
    v7.super_class = ObjectType;
    objc_msgSendSuper2(&v7, sel_initWithTitle_detailText_icon_contentLayout_, v2, v3, v6, 2);

    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void sub_24121A240()
{
  v6.receiver = v0;
  v6.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v6, sel_viewDidLoad);
  objc_msgSend(v0, sel_setModalInPresentation_, 1);
  if (qword_268CF9200 != -1) {
    swift_once();
  }
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v1 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  if (qword_26B00F370 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_26B017FC8;
  uint64_t v5 = unk_26B017FD0;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631E08();
  sub_241631E08();
  sub_241631E08();
  sub_241631E08();
  sub_241631E08();
  int v2 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();

  id v3 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v3, sel_setHidesBackButton_, 1);
}

uint64_t sub_24121A490()
{
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    objc_msgSend(*(id *)(Strong + 360), sel_dismissViewControllerAnimated_completion_, 1, 0);
    swift_release();
  }
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    int v2 = *(void (**)(uint64_t))(result + 400);
    if (v2)
    {
      sub_2411F4080(*(void *)(result + 400));
      uint64_t v3 = swift_release();
      v2(v3);
      return sub_2411F4090((uint64_t)v2);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

void sub_24121A600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v5 = a5;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for PregnancyOnboardingPastPregnancyAddedViewController()
{
  return self;
}

uint64_t *sub_24121A670(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_24121C608(0, (unint64_t *)&qword_268CFA8A8, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_24162FEE8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    id v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    sub_24121C608(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

uint64_t sub_24121A824(uint64_t a1, uint64_t a2)
{
  sub_24121C608(0, (unint64_t *)&qword_268CFA8A8, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_24162FEE8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_24121C608(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

void *sub_24121A954(void *a1, void *a2, uint64_t a3)
{
  sub_24121C608(0, (unint64_t *)&qword_268CFA8A8, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_24162FEE8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  sub_24121C608(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

void *sub_24121AAB8(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_24121C424((uint64_t)a1, (unint64_t *)&qword_268CFA8A8, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    sub_24121C608(0, (unint64_t *)&qword_268CFA8A8, v6, v7);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_24162FEE8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  sub_24121C608(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

char *sub_24121AC4C(char *a1, char *a2, uint64_t a3)
{
  sub_24121C608(0, (unint64_t *)&qword_268CFA8A8, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_24162FEE8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  sub_24121C608(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *sub_24121ADB8(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_24121C424((uint64_t)a1, (unint64_t *)&qword_268CFA8A8, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    sub_24121C608(0, (unint64_t *)&qword_268CFA8A8, v6, v7);
    uint64_t v9 = v8;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_24162FEE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  sub_24121C608(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_24121AF54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24121AF68);
}

uint64_t sub_24121AF68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24121C608(0, &qword_268CFAFC8, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    sub_24121C608(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_24121B0C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24121B0D4);
}

uint64_t sub_24121B0D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_24121C608(0, &qword_268CFAFC8, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    sub_24121C608(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for PregnancyOnboardingAddPastPregnancyViewController.ContentView()
{
  uint64_t result = qword_268CFAFD0;
  if (!qword_268CFAFD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_24121B284()
{
  sub_24121C608(319, (unint64_t *)&qword_268CFA8A8, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    sub_24121C608(319, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_24121B3AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24121B3C8()
{
  uint64_t v0 = sub_24162B7E8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_241631CA8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = &v13[-v6];
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v9 = sub_241631D38();
  uint64_t v11 = v10;
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  qword_268CFAF28 = v9;
  unk_268CFAF30 = v11;
  return result;
}

uint64_t sub_24121B5B4(uint64_t a1)
{
  return sub_24121B6A4(a1, 0xD00000000000002DLL, 0x8000000241659B90, &qword_268CFAF38, &qword_268CFAF40);
}

uint64_t sub_24121B5DC(uint64_t a1)
{
  return sub_24121B6A4(a1, 0xD000000000000030, 0x8000000241659B50, &qword_268CFAF48, &qword_268CFAF50);
}

uint64_t sub_24121B604(uint64_t a1)
{
  return sub_24121B6A4(a1, 0xD00000000000002FLL, 0x8000000241657F30, &qword_268CFAF58, &qword_268CFAF60);
}

uint64_t sub_24121B62C(uint64_t a1)
{
  return sub_24121B6A4(a1, 0xD00000000000002FLL, 0x8000000241659AF0, &qword_268CFAF68, &qword_268CFAF70);
}

uint64_t sub_24121B654(uint64_t a1)
{
  return sub_24121B6A4(a1, 0xD000000000000032, 0x8000000241659AB0, &qword_268CFAF78, &qword_268CFAF80);
}

uint64_t sub_24121B67C(uint64_t a1)
{
  return sub_24121B6A4(a1, 0xD000000000000032, 0x8000000241657F60, &qword_268CFAF88, &qword_268CFAF90);
}

uint64_t sub_24121B6A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  uint64_t v7 = sub_24162B7E8();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = sub_241631CA8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v20[-v13];
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v12, v14, v8);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v15 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v16 = sub_241631D38();
  uint64_t v18 = v17;
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
  *a4 = v16;
  *a5 = v18;
  return result;
}

void sub_24121B8AC()
{
  if (!qword_268CFAFE0)
  {
    sub_24121C608(255, &qword_268CFAFE8, (uint64_t (*)(uint64_t))sub_24121B964, MEMORY[0x263F1BAC8]);
    sub_24121BD08();
    sub_24121BD90();
    unint64_t v0 = type metadata accessor for StyledVStackListSection();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFAFE0);
    }
  }
}

void sub_24121B964()
{
  if (!qword_268CFAFF0)
  {
    sub_24121B9D8(255);
    sub_2416312C8();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268CFAFF0);
    }
  }
}

void sub_24121B9D8(uint64_t a1)
{
}

void sub_24121BA00(uint64_t a1)
{
}

void sub_24121BA28(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241630188();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_24121BA8C(uint64_t a1)
{
}

void sub_24121BAB4(uint64_t a1)
{
}

void sub_24121BAFC(uint64_t a1)
{
}

void sub_24121BB44(uint64_t a1)
{
}

void sub_24121BB8C()
{
  if (!qword_268CFB028)
  {
    type metadata accessor for LastMenstrualPeriodDatePickerRow();
    unint64_t v0 = sub_241630648();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFB028);
    }
  }
}

void sub_24121BBE8(uint64_t a1)
{
}

void sub_24121BC30(uint64_t a1)
{
}

void sub_24121BC78(uint64_t a1)
{
}

void sub_24121BCC0(uint64_t a1)
{
}

unint64_t sub_24121BD08()
{
  unint64_t result = qword_268CFB050;
  if (!qword_268CFB050)
  {
    sub_24121C608(255, &qword_268CFAFE8, (uint64_t (*)(uint64_t))sub_24121B964, MEMORY[0x263F1BAC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB050);
  }
  return result;
}

unint64_t sub_24121BD90()
{
  unint64_t result = qword_268CFB058;
  if (!qword_268CFB058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB058);
  }
  return result;
}

void sub_24121BDE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4(255);
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_24121BE68(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24121BED0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24121BF18()
{
  return sub_24121C120(&qword_268CFB070, sub_24121BB44, (void (*)(void))sub_24121BF60, (void (*)(void))sub_24121C000);
}

unint64_t sub_24121BF60()
{
  unint64_t result = qword_268CFB078;
  if (!qword_268CFB078)
  {
    sub_24121BB8C();
    sub_24121BED0(&qword_268CFB080, (void (*)(uint64_t))type metadata accessor for LastMenstrualPeriodDatePickerRow);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB078);
  }
  return result;
}

unint64_t sub_24121C000()
{
  unint64_t result = qword_268CFB088;
  if (!qword_268CFB088)
  {
    sub_24121BBE8(255);
    sub_24121BED0(&qword_268CFB090, (void (*)(uint64_t))type metadata accessor for EstimatedDueDatePickerRow);
    sub_24121BED0(&qword_268CFB098, (void (*)(uint64_t))type metadata accessor for GestationalAgeInWeeksAndDaysPickerRow);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB088);
  }
  return result;
}

uint64_t sub_24121C0D8()
{
  return sub_24121C120(&qword_268CFB0A0, sub_24121BC30, (void (*)(void))sub_24121C1AC, (void (*)(void))sub_24121C284);
}

uint64_t sub_24121C120(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24121C1AC()
{
  unint64_t result = qword_268CFB0A8;
  if (!qword_268CFB0A8)
  {
    sub_24121BC78(255);
    sub_24121BED0(&qword_268CFB0B0, (void (*)(uint64_t))type metadata accessor for GestationalAgeOnDatePickerRow);
    sub_24121BED0(&qword_268CFB0B8, (void (*)(uint64_t))type metadata accessor for EmbryoAgeAtTransferPickerRow);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB0A8);
  }
  return result;
}

unint64_t sub_24121C284()
{
  unint64_t result = qword_268CFB0C0;
  if (!qword_268CFB0C0)
  {
    sub_24121BCC0(255);
    sub_24121BED0(&qword_268CFB0C8, (void (*)(uint64_t))type metadata accessor for EmbryoTransferDatePickerRow);
    sub_24121BED0(&qword_268CFB0D0, (void (*)(uint64_t))type metadata accessor for PastPregnancyStartDatePickerRow);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB0C0);
  }
  return result;
}

uint64_t sub_24121C35C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24121C3BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24121C424(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_24121C608(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_24121C488()
{
  return sub_241219744();
}

uint64_t (*sub_24121C490())()
{
  uint64_t v1 = *(void **)(v0 + 16);
  *(void *)(swift_allocObject() + 16) = v1;
  id v2 = v1;
  return sub_24121C52C;
}

uint64_t sub_24121C4F4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24121C52C()
{
  return sub_2412197FC();
}

uint64_t sub_24121C534()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_24121C56C()
{
  sub_241219B08(v0);
}

void sub_24121C574()
{
  if (!qword_268CFB0E0)
  {
    type metadata accessor for PregnancyOnboardingAddPastPregnancyViewController.ContentView();
    sub_24121BED0(&qword_268CFB0E8, (void (*)(uint64_t))type metadata accessor for PregnancyOnboardingAddPastPregnancyViewController.ContentView);
    unint64_t v0 = sub_241630608();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFB0E0);
    }
  }
}

void sub_24121C608(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_24121C66C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24121C608(255, a2, a3, MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24121C6D0()
{
  return sub_24121BED0(&qword_268CFB0F0, (void (*)(uint64_t))sub_24121B8AC);
}

uint64_t sub_24121C718()
{
  uint64_t v1 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42DeviationsConfirmationNavigationController____lazy_storage___coordinator;
  if (*(void *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42DeviationsConfirmationNavigationController____lazy_storage___coordinator])
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42DeviationsConfirmationNavigationController____lazy_storage___coordinator];
  }
  else
  {
    uint64_t v3 = v0;
    unint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42DeviationsConfirmationNavigationController_healthStore];
    id v5 = objc_allocWithZone(MEMORY[0x263F0A130]);
    id v6 = v4;
    id v7 = objc_msgSend(v5, sel_init);
    type metadata accessor for DeviationsConfirmationFlowCoordinator();
    uint64_t v2 = swift_allocObject();
    unint64_t v8 = v3;
    sub_24121CDF8(0, v6, v7, v3);
    *(void *)&v3[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void sub_24121C7EC(unint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = a2 & 1;
  sub_24121E024(0, &qword_268CFB160, MEMORY[0x263EFDE48]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v26 - v11;
  sub_24121DE1C(0, (unint64_t *)&qword_26B00F250, MEMORY[0x263F43C08], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v13 - 8);
  id v15 = (char *)&v26 - v14;
  sub_24121D1E8();
  uint64_t v16 = sub_24162CCF8();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, a3, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  uint64_t v18 = v4 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37DeviationsConfirmationFlowCoordinator_currentPresentation;
  swift_beginAccess();
  sub_241222768((uint64_t)v15, v18);
  swift_endAccess();
  uint64_t v19 = *(void *)(v4 + 32);
  *(void *)(v4 + 32) = a1;
  LOBYTE(a3) = *(unsigned char *)(v4 + 40);
  *(unsigned char *)(v4 + 40) = v7;
  j___s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0(a1, v7);
  sub_24121E094(v19, a3);
  if ((*(unsigned char *)(v4 + 40) & 1) == 0)
  {
    uint64_t v20 = *(void *)(v4 + 32);
    *(void *)(v4
              + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37DeviationsConfirmationFlowCoordinator_startingUnconfirmedDeviations) = v20;
    j___s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0(v20, 0);
    swift_bridgeObjectRelease();
  }
  if (!v7)
  {
    uint64_t v21 = sub_24121E0AC(a1);
    swift_beginAccess();
    sub_24121E024(0, &qword_268CFB150, MEMORY[0x263EFDE58]);
    sub_24162FC18();
    swift_endAccess();
    sub_24121E5E4();
    uint64_t v22 = sub_24162FCB8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    id v23 = objc_allocWithZone((Class)type metadata accessor for DeviationsReviewCollectionViewWrapper());
    uint64_t v24 = (char *)sub_24123ECC8(v21, v22);
    *(void *)&v24[qword_268CFB658 + 8] = &off_26F56A018;
    swift_unknownObjectWeakAssign();
    id v25 = (id)MEMORY[0x245621790](v4 + 16);
    if (!v25) {
      id v25 = *(id *)(v4 + 24);
    }
    objc_msgSend(v25, sel_showViewController_sender_, v24, 0);
  }
}

uint64_t type metadata accessor for DeviationsConfirmationNavigationController()
{
  return self;
}

double sub_24121CCE0@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24162FC48();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  return result;
}

id sub_24121CD6C()
{
  uint64_t v1 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37DeviationsConfirmationFlowCoordinator____lazy_storage___eventSubmissionManager;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37DeviationsConfirmationFlowCoordinator____lazy_storage___eventSubmissionManager);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37DeviationsConfirmationFlowCoordinator____lazy_storage___eventSubmissionManager);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A0C0]), sel_initWithLoggingCategory_healthDataSource_, *MEMORY[0x263F09930], *(void *)(v0 + 48));
    long long v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_24121CDF8(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v37 = a4;
  char v35 = a3;
  id v33 = a2;
  uint64_t v36 = sub_24162B7F8();
  uint64_t v6 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_24162BA08();
  uint64_t v9 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24121E024(0, &qword_268CFB150, MEMORY[0x263EFDE58]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v32 - v15;
  uint64_t v32 = v4 + 16;
  swift_unknownObjectWeakInit();
  *(void *)(v4 + 32) = 0;
  *(unsigned char *)(v4 + 40) = -1;
  *(void *)(v4 + 72) = 0;
  uint64_t v17 = v4 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37DeviationsConfirmationFlowCoordinator__ongoingChanges;
  sub_2411E0390(0, &qword_268CFA558);
  long long v38 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  sub_24162FC08();
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v17, v16, v13);
  *(void *)(v4 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37DeviationsConfirmationFlowCoordinator_addedCycleFactors) = MEMORY[0x263F8EE78];
  *(void *)(v4
            + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37DeviationsConfirmationFlowCoordinator____lazy_storage___eventSubmissionManager) = 0;
  uint64_t v18 = v4 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37DeviationsConfirmationFlowCoordinator_currentPresentation;
  uint64_t v19 = sub_24162CCF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  *(void *)(v4
            + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37DeviationsConfirmationFlowCoordinator_startingUnconfirmedDeviations) = 0;
  *(unsigned char *)(v4
           + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37DeviationsConfirmationFlowCoordinator_openedPDFInConfirmedResult) = 0;
  if (a1)
  {
    id v20 = a1;
    uint64_t v21 = v33;
  }
  else
  {
    id v22 = objc_allocWithZone(MEMORY[0x263F45118]);
    uint64_t v21 = v33;
    id v20 = objc_msgSend(v22, sel_initWithHealthStore_, v33);
  }
  *(void *)(v4 + 48) = v21;
  *(void *)(v4 + 56) = v20;
  id v23 = v35;
  uint64_t v24 = v36;
  *(void *)(v4 + 64) = v35;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F07740], v24);
  id v25 = a1;
  id v26 = v20;
  id v27 = v21;
  id v28 = v23;
  sub_24162B808();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v24);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v4 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37DeviationsConfirmationFlowCoordinator_gregorianCalendar, v11, v34);
  uint64_t v29 = v37;
  swift_unknownObjectWeakAssign();
  id v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_init);

  *(void *)(v4 + 24) = v30;
  return v4;
}

void sub_24121D1E8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_24162FC58();
  *(void *)(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37DeviationsConfirmationFlowCoordinator_addedCycleFactors) = MEMORY[0x263F8EE78];
  swift_bridgeObjectRelease();
  *(void *)(v0
            + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37DeviationsConfirmationFlowCoordinator_startingUnconfirmedDeviations) = 0;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v0
           + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37DeviationsConfirmationFlowCoordinator_openedPDFInConfirmedResult) = 0;
  id v1 = (id)MEMORY[0x245621790](v0 + 16);
  if (!v1) {
    id v1 = *(id *)(v0 + 24);
  }

  sub_2411B9D00(0, (unint64_t *)&qword_268CFD4F0);
  uint64_t v2 = (void *)sub_241631F18();
  objc_msgSend(v1, sel_setViewControllers_, v2);
}

uint64_t sub_24121D31C()
{
  v1[19] = v0;
  sub_24121E024(0, &qword_268CFB160, MEMORY[0x263EFDE48]);
  v1[20] = v2;
  v1[21] = *(void *)(v2 - 8);
  v1[22] = swift_task_alloc();
  sub_241632008();
  v1[23] = sub_241631FF8();
  uint64_t v4 = sub_241631FC8();
  v1[24] = v4;
  v1[25] = v3;
  return MEMORY[0x270FA2498](sub_24121D42C, v4, v3);
}

uint64_t sub_24121D42C()
{
  id v1 = *(void **)(v0[19] + 56);
  v0[2] = v0;
  v0[7] = v0 + 18;
  v0[3] = sub_24121D52C;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_24121D9B8;
  v0[13] = &unk_2650E7A90;
  v0[14] = v2;
  objc_msgSend(v1, sel_analysisWithCompletion_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24121D52C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 208) = v2;
  uint64_t v3 = *(void *)(v1 + 200);
  uint64_t v4 = *(void *)(v1 + 192);
  if (v2) {
    long long v5 = sub_24121D93C;
  }
  else {
    long long v5 = sub_24121D65C;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24121D65C()
{
  swift_release();
  uint64_t v1 = (void *)v0[18];
  id v2 = objc_msgSend(v1, sel_deviations);

  if (!v2) {
    goto LABEL_13;
  }
  sub_2411B9D00(0, (unint64_t *)&qword_26B010758);
  unint64_t v3 = sub_241631F28();

  if (v3 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v19 = sub_241633068();
    swift_bridgeObjectRelease();
    if (v19) {
      goto LABEL_4;
    }
    goto LABEL_12;
  }
  if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_12:
    swift_bridgeObjectRelease();
LABEL_13:
    id v18 = 0;
    goto LABEL_14;
  }
LABEL_4:
  uint64_t v4 = v0[19];
  sub_24121D1E8();
  uint64_t v5 = *(void *)(v4 + 32);
  *(void *)(v4 + 32) = v3;
  unsigned __int8 v6 = *(unsigned char *)(v4 + 40);
  *(unsigned char *)(v4 + 40) = 0;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_24121E094(v5, v6);
  if ((*(unsigned char *)(v4 + 40) & 1) == 0)
  {
    uint64_t v7 = *(void *)(v4 + 32);
    *(void *)(v0[19]
              + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37DeviationsConfirmationFlowCoordinator_startingUnconfirmedDeviations) = v7;
    j___s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0(v7, 0);
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = v0[21];
  uint64_t v8 = v0[22];
  uint64_t v10 = v0[19];
  uint64_t v11 = v0[20];
  uint64_t v12 = sub_24121E0AC(v3);
  swift_beginAccess();
  sub_24121E024(0, &qword_268CFB150, MEMORY[0x263EFDE58]);
  sub_24162FC18();
  swift_endAccess();
  sub_24121E5E4();
  uint64_t v13 = sub_24162FCB8();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v11);
  id v14 = objc_allocWithZone((Class)type metadata accessor for DeviationsReviewCollectionViewWrapper());
  uint64_t v15 = (char *)sub_24123ECC8(v12, v13);
  *(void *)&v15[qword_268CFB658 + 8] = &off_26F56A018;
  swift_unknownObjectWeakAssign();
  swift_bridgeObjectRelease();
  uint64_t v16 = v10 + 16;
  id v17 = (id)MEMORY[0x245621790](v10 + 16);
  if (!v17) {
    id v17 = *(id *)(v0[19] + 24);
  }
  objc_msgSend(v17, sel_showViewController_sender_, v15, 0);

  id v18 = (id)MEMORY[0x245621790](v16);
  if (!v18) {
    id v18 = *(id *)(v0[19] + 24);
  }

LABEL_14:
  swift_task_dealloc();
  id v20 = (uint64_t (*)(id))v0[1];
  return v20(v18);
}

uint64_t sub_24121D93C()
{
  swift_release();
  swift_willThrow();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24121D9B8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_2411CE834();
    uint64_t v5 = swift_allocError();
    void *v6 = a3;
    id v7 = a3;
    a1 = v3;
    a2 = (void *)v5;
    return MEMORY[0x270FA2410](a1, a2);
  }
  if (!a2)
  {
    __break(1u);
    return MEMORY[0x270FA2410](a1, a2);
  }
  **(void **)(*(void *)(v3 + 64) + 40) = a2;
  id v8 = a2;

  return swift_continuation_throwingResume();
}

uint64_t sub_24121DA74()
{
  swift_unknownObjectWeakDestroy();

  sub_24121E094(*(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37DeviationsConfirmationFlowCoordinator_gregorianCalendar;
  uint64_t v2 = sub_24162BA08();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37DeviationsConfirmationFlowCoordinator__ongoingChanges;
  sub_24121E024(0, &qword_268CFB150, MEMORY[0x263EFDE58]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37DeviationsConfirmationFlowCoordinator____lazy_storage___eventSubmissionManager));
  sub_241221ABC(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37DeviationsConfirmationFlowCoordinator_currentPresentation, (unint64_t *)&qword_26B00F250, MEMORY[0x263F43C08]);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24121DBD0()
{
  sub_24121DA74();

  return swift_deallocClassInstance();
}

uint64_t sub_24121DC28()
{
  return type metadata accessor for DeviationsConfirmationFlowCoordinator();
}

uint64_t type metadata accessor for DeviationsConfirmationFlowCoordinator()
{
  uint64_t result = qword_268CFB140;
  if (!qword_268CFB140) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_24121DC7C()
{
  sub_24162BA08();
  if (v0 <= 0x3F)
  {
    sub_24121E024(319, &qword_268CFB150, MEMORY[0x263EFDE58]);
    if (v1 <= 0x3F)
    {
      sub_24121DE1C(319, (unint64_t *)&qword_26B00F250, MEMORY[0x263F43C08], MEMORY[0x263F8D8F0]);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_24121DE1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for DeviationsConfirmationFlowCoordinator.State(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unsigned __int8 v4 = *((unsigned char *)a2 + 8);
  j___s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0(*a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for DeviationsConfirmationFlowCoordinator.State(uint64_t a1)
{
  return j__swift_bridgeObjectRelease(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t *assignWithCopy for DeviationsConfirmationFlowCoordinator.State(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unsigned __int8 v4 = *((unsigned char *)a2 + 8);
  j___s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0(*a2, v4);
  uint64_t v5 = *a1;
  uint64_t v6 = *((unsigned __int8 *)a1 + 8);
  *a1 = v3;
  *((unsigned char *)a1 + 8) = v4;
  j__swift_bridgeObjectRelease(v5, v6);
  return a1;
}

uint64_t *assignWithTake for DeviationsConfirmationFlowCoordinator.State(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *a1;
  uint64_t v6 = *((unsigned __int8 *)a1 + 8);
  *a1 = v3;
  *((unsigned char *)a1 + 8) = v4;
  j__swift_bridgeObjectRelease(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviationsConfirmationFlowCoordinator.State(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviationsConfirmationFlowCoordinator.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24121E000(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_24121E008(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DeviationsConfirmationFlowCoordinator.State()
{
  return &type metadata for DeviationsConfirmationFlowCoordinator.State;
}

void sub_24121E024(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_2411E0390(255, &qword_268CFA558);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_24121E094(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return j__swift_bridgeObjectRelease(result, a2 & 1);
  }
  return result;
}

uint64_t sub_24121E0AC(unint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = sub_24162BA08();
  uint64_t v40 = *(void *)(v4 - 8);
  uint64_t v41 = v4;
  MEMORY[0x270FA5388](v4);
  long long v42 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241215380();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v38 - v10;
  sub_24121DE1C(0, &qword_268CFB170, (uint64_t (*)(uint64_t))sub_2412216AC, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  id v14 = (char *)&v38 - v13;
  sub_2412216AC();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v38 - v21;
  long long v39 = (char *)v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37DeviationsConfirmationFlowCoordinator_gregorianCalendar;
  unint64_t v43 = a1;
  sub_241432F18((uint64_t)v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37DeviationsConfirmationFlowCoordinator_gregorianCalendar, a1, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16) == 1)
  {
    sub_241221ABC((uint64_t)v14, &qword_268CFB170, (uint64_t (*)(uint64_t))sub_2412216AC);
    uint64_t v44 = 0;
    unint64_t v45 = 0xE000000000000000;
    sub_241632E78();
    sub_241631E08();
    sub_2416333E8();
    sub_241631E08();
    swift_bridgeObjectRelease();
    sub_241631E08();
    uint64_t result = sub_241633038();
    __break(1u);
  }
  else
  {
    sub_241221740((uint64_t)v14, (uint64_t)v22);
    id v23 = (void *)v2[6];
    uint64_t v24 = (void *)v2[7];
    uint64_t v25 = sub_241631AC8();
    uint64_t v26 = *(void *)(v25 - 8);
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v11, v22, v25);
    id v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
    v27(v11, 0, 1, v25);
    v27(v8, 1, 1, v25);
    id v28 = v23;
    id v29 = v24;
    uint64_t v30 = sub_24139358C((uint64_t)v11, (uint64_t)v8);
    sub_241221974((uint64_t)v8, (uint64_t (*)(void))sub_241215380);
    sub_241221974((uint64_t)v11, (uint64_t (*)(void))sub_241215380);
    id v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F45200]), sel_initWithHealthStore_analysisProvider_pregnancyModelProvider_maximumActiveDuration_minimumBufferDuration_shouldFetchCycleFactors_calendarCache_, v28, v29, 0, v30, 0, 0, v2[8]);

    sub_241221910((uint64_t)v22, (uint64_t)v19);
    uint64_t v32 = sub_241632388();
    objc_msgSend(v31, sel_setActiveDayRange_, v32, v33);
    uint64_t v34 = (uint64_t)v42;
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v42, v39, v41);
    type metadata accessor for DeviationsConfirmationViewModel();
    swift_allocObject();
    uint64_t v35 = _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v36 = sub_241439298(v35, v31, v34);

    sub_241221974((uint64_t)v22, (uint64_t (*)(void))sub_2412216AC);
    return v36;
  }
  return result;
}

unint64_t sub_24121E5E4()
{
  unint64_t result = qword_268CFB168;
  if (!qword_268CFB168)
  {
    sub_24121E024(255, &qword_268CFB160, MEMORY[0x263EFDE48]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB168);
  }
  return result;
}

void sub_24121E658()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24162EFA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v30[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24162BA08();
  __n128 v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v30[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v11 = *(unsigned char *)(v1 + 40);
  if (v11)
  {
    sub_24162EF48();
    swift_retain_n();
    uint64_t v20 = sub_24162EF98();
    os_log_type_t v21 = sub_2416322C8();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      v30[0] = v23;
      *(_DWORD *)uint64_t v22 = 136446466;
      uint64_t v24 = sub_2416333E8();
      uint64_t v31 = sub_2411B6898(v24, v25, v30);
      sub_241632C28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2080;
      unsigned __int8 v26 = *(unsigned char *)(v1 + 40);
      uint64_t v31 = *(void *)(v1 + 32);
      unsigned __int8 v32 = v26;
      sub_2412229DC(v31, v26);
      sub_2411E0390(0, &qword_268CFB1A8);
      uint64_t v27 = sub_241631D58();
      uint64_t v31 = sub_2411B6898(v27, v28, v30);
      sub_241632C28();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v20, v21, "[%{public}s] Tried to present the deviation factors page but the navigation state is unexpected: %s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245621640](v23, -1, -1);
      MEMORY[0x245621640](v22, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    unint64_t v12 = *(void *)(v1 + 32);
    uint64_t v13 = *(void **)(v1 + 48);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 16))(v10, v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37DeviationsConfirmationFlowCoordinator_gregorianCalendar, v8);
    swift_getKeyPath();
    swift_getKeyPath();
    id v14 = v13;
    sub_2412229DC(v12, v11);
    sub_24162FC48();
    swift_release();
    swift_release();
    sub_2411DFE60((uint64_t)v30, (uint64_t)&v31);
    type metadata accessor for DeviationsFactorsConfirmationViewModel();
    swift_allocObject();
    uint64_t v15 = sub_2412F4E7C(v14, (uint64_t)v10, (uint64_t)&v31, v12);
    sub_24121E094(v12, v11);
    sub_241222A5C(&v31);

    type metadata accessor for DeviationsFactorsCompoundDataSource();
    swift_allocObject();
    swift_retain();
    uint64_t v16 = sub_2412CD870();
    id v17 = objc_allocWithZone((Class)type metadata accessor for DeviationsFactorsConfirmationViewController());
    uint64_t v18 = (char *)sub_2414C7D38(v15, v16);
    *(void *)&v18[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43DeviationsFactorsConfirmationViewController_delegate + 8] = &off_26F56A008;
    swift_unknownObjectWeakAssign();
    id v19 = (id)MEMORY[0x245621790](v1 + 16);
    if (!v19) {
      id v19 = *(id *)(v1 + 24);
    }
    objc_msgSend(v19, sel_pushViewController_animated_, v18, 1);
    swift_release();
  }
}

void sub_24121EAFC(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24162B718();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v32[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = &v32[-v8];
  MEMORY[0x270FA5388](v10);
  unint64_t v12 = &v32[-v11];
  if (a1 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v13 = (void *)sub_241633068();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = *(void **)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v13 == (void *)1)
  {
    sub_24121EF44(8, a1);
    if ((a1 & 0xC000000000000001) != 0)
    {
      id v17 = (id)MEMORY[0x245620370](0, a1);
    }
    else
    {
      if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_21;
      }
      id v17 = *(id *)(a1 + 32);
    }
    id v18 = v17;
    id v19 = objc_msgSend(v18, sel_startDate);
    sub_24162B6A8();

    id v20 = objc_msgSend(v18, sel_endDate);
    sub_24162B6A8();

    id v21 = objc_msgSend(v18, sel_hkmc_deviationType);
    sub_24162B6B8();
    type metadata accessor for DeviationDetailViewModel();
    swift_allocObject();
    sub_2411E7A48((uint64_t)v12, (uint64_t)v9, v21, 0, 0, 2, (uint64_t)v6);

    id v22 = objc_allocWithZone((Class)type metadata accessor for DeviationsConfirmedViewController());
    uint64_t v23 = swift_retain();
    uint64_t v16 = (char *)sub_241269118(v23);
    *(void *)&v16[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin35DeviationCustomDetailViewController_delegate + 8] = &off_26F56A038;
    swift_unknownObjectWeakAssign();

LABEL_14:
    swift_release();
    goto LABEL_15;
  }
  if (v13)
  {
    sub_24121EF44(8, a1);
    if ((a1 & 0xC000000000000001) == 0)
    {
      if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return;
      }
      id v24 = *(id *)(a1 + 32);
      goto LABEL_13;
    }
LABEL_21:
    id v24 = (id)MEMORY[0x245620370](0, a1);
LABEL_13:
    id v25 = v24;
    id v26 = objc_msgSend(v25, sel_startDate);
    sub_24162B6A8();

    id v27 = objc_msgSend(v25, sel_endDate);
    sub_24162B6A8();

    id v28 = objc_msgSend(v25, sel_hkmc_deviationType);
    sub_24162B6B8();
    type metadata accessor for DeviationDetailViewModel();
    swift_allocObject();
    sub_2411E7A48((uint64_t)v12, (uint64_t)v9, v28, 0, v13, 1, (uint64_t)v6);

    id v29 = objc_allocWithZone((Class)type metadata accessor for DeviationsConfirmedViewController());
    uint64_t v30 = swift_retain();
    uint64_t v16 = (char *)sub_241269118(v30);
    *(void *)&v16[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin35DeviationCustomDetailViewController_delegate + 8] = &off_26F56A038;
    swift_unknownObjectWeakAssign();

    goto LABEL_14;
  }
  sub_24121EF44(8, 6uLL);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24162FC48();
  swift_release();
  swift_release();
  sub_2411DFE60((uint64_t)v32, (uint64_t)v33);
  id v14 = objc_allocWithZone((Class)type metadata accessor for DeviationsUnconfirmedViewController());
  sub_241362AE8(v33);
  uint64_t v16 = v15;
LABEL_15:
  id v31 = (id)MEMORY[0x245621790](v2 + 16);
  if (!v31) {
    id v31 = *(id *)(v2 + 24);
  }
  objc_msgSend(v31, sel_showViewController_sender_, v16, 0);
}

void sub_24121EF44(int a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_24162EFA8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24121DE1C(0, (unint64_t *)&qword_26B00F250, MEMORY[0x263F43C08], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  long long v57 = (char *)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v47 - v14;
  uint64_t v16 = *(void *)((char *)v3
                  + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37DeviationsConfirmationFlowCoordinator_startingUnconfirmedDeviations);
  if (v16)
  {
    int v55 = a1;
    uint64_t v56 = v6;
    uint64_t v17 = *MEMORY[0x263F09930];
    uint64_t v18 = v3[6];
    id v19 = objc_allocWithZone(MEMORY[0x263F0A0C0]);
    uint64_t v51 = v16;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v53 = v18;
    id v54 = objc_msgSend(v19, sel_initWithLoggingCategory_healthDataSource_, v17, v18);
    uint64_t v20 = (uint64_t)v3
        + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37DeviationsConfirmationFlowCoordinator_currentPresentation;
    swift_beginAccess();
    uint64_t v52 = v15;
    sub_241221A1C(v20, (uint64_t)v15, (unint64_t *)&qword_26B00F250, MEMORY[0x263F43C08]);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24162FC48();
    swift_release();
    swift_release();
    uint64_t v21 = v60;
    if (v60)
    {
      uint64_t v48 = v59;
      unint64_t v49 = a2;
      v47[1] = v61;
      BOOL v50 = sub_2411DA1A0();
      a2 = v49;
      sub_2411E0050(v48, v21);
    }
    else
    {
      BOOL v50 = 0;
    }
    uint64_t v30 = (uint64_t)v57;
    unint64_t v31 = *(void *)((char *)v3
                    + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37DeviationsConfirmationFlowCoordinator_addedCycleFactors);
    if (v31 >> 62)
    {
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v32 = sub_241633068();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v33 = v56;
    uint64_t v34 = (uint64_t)v52;
    sub_241221A1C((uint64_t)v52, v30, (unint64_t *)&qword_26B00F250, MEMORY[0x263F43C08]);
    uint64_t v35 = sub_24162CCF8();
    uint64_t v36 = *(void *)(v35 - 8);
    int v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v30, 1, v35);
    sub_241221A9C(a2);
    if (v37 == 1)
    {
      sub_241221ABC(v30, (unint64_t *)&qword_26B00F250, MEMORY[0x263F43C08]);
      char v38 = 0;
    }
    else
    {
      char v38 = sub_2415BA9C8();
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v30, v35);
    }
    uint64_t v39 = swift_allocObject();
    type metadata accessor for CycleDeviationAnalyticsEvent();
    swift_allocObject();
    uint64_t v40 = sub_2415BA8F4(v55, a2, v38, v51, v50, v32 != 0);
    sub_241221ABC(v34, (unint64_t *)&qword_26B00F250, MEMORY[0x263F43C08]);
    *(void *)(v39 + 16) = v40;
    id v41 = objc_allocWithZone(MEMORY[0x263F0A2E0]);
    id v42 = objc_msgSend(v41, sel_initWithHealthStore_, v53);
    unint64_t v43 = (void *)swift_allocObject();
    uint64_t v44 = v54;
    void v43[2] = v39;
    v43[3] = v44;
    v43[4] = v33;
    aBlock[4] = sub_241221BA4;
    aBlock[5] = v43;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2412215F8;
    aBlock[3] = &unk_26F56A0D0;
    unint64_t v45 = _Block_copy(aBlock);
    swift_retain();
    id v46 = v44;
    swift_release();
    objc_msgSend(v42, sel_numberOfDeviceContextsPerDeviceType_, v45);
    _Block_release(v45);

    swift_release();
  }
  else
  {
    sub_24162EF48();
    id v22 = sub_24162EF98();
    os_log_type_t v23 = sub_2416322C8();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v59 = v25;
      *(_DWORD *)uint64_t v24 = 136446466;
      uint64_t v26 = sub_2416333E8();
      aBlock[0] = sub_2411B6898(v26, v27, &v59);
      sub_241632C28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2080;
      LOBYTE(aBlock[0]) = a1;
      uint64_t v28 = sub_241631D48();
      aBlock[0] = sub_2411B6898(v28, v29, &v59);
      sub_241632C28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v22, v23, "[%{public}s] Tried to submit analytics %s without unconfirmed deviations", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245621640](v25, -1, -1);
      MEMORY[0x245621640](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_24121F6A4(void *a1, uint64_t a2)
{
  id v20 = a1;
  uint64_t v4 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_24121DE1C(0, &qword_26B0130C0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = &v21[-v6 - 8];
  uint64_t v8 = sub_24162B718();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v12 = sub_24162BA08();
  __n128 v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = &v21[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(char *, uint64_t, __n128))(v16 + 16))(v15, v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37DeviationsConfirmationFlowCoordinator_gregorianCalendar, v13);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24162FC48();
  swift_release();
  swift_release();
  sub_2411DFE60((uint64_t)v21, (uint64_t)v22);
  sub_241221A1C(a2, (uint64_t)v7, &qword_26B0130C0, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_24162B708();
    sub_241221ABC((uint64_t)v7, &qword_26B0130C0, MEMORY[0x263F07490]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  }
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  id v18 = objc_allocWithZone((Class)type metadata accessor for DeviationsCalendarViewController());
  return sub_2411DA3B8((uint64_t)v15, v22, v20, v11, sub_241221A14, v17);
}

uint64_t sub_24121F9B8(uint64_t a1)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2411E03D8(a1);
    sub_24162FC58();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_24121EF44(6, 1uLL);
    return swift_release();
  }
  return result;
}

uint64_t sub_24121FAE4(uint64_t a1)
{
  v2[22] = a1;
  v2[23] = v1;
  v2[24] = *v1;
  uint64_t v3 = sub_24162EFA8();
  v2[25] = v3;
  v2[26] = *(void *)(v3 - 8);
  v2[27] = swift_task_alloc();
  sub_24121DE1C(0, (unint64_t *)&qword_26B00F1C0, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  v2[28] = swift_task_alloc();
  v2[29] = sub_241632008();
  v2[30] = sub_241631FF8();
  uint64_t v5 = sub_241631FC8();
  v2[31] = v5;
  v2[32] = v4;
  return MEMORY[0x270FA2498](sub_24121FC60, v5, v4);
}

uint64_t sub_24121FC60()
{
  uint64_t v1 = v0[23];
  int v2 = *(unsigned __int8 *)(v1 + 40);
  if (v2 != 255 && (v2 & 1) != 0)
  {
    *(unsigned char *)(v1
             + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37DeviationsConfirmationFlowCoordinator_openedPDFInConfirmedResult) = 1;
    sub_24121EF44(8, 4uLL);
    uint64_t v1 = v0[23];
  }
  uint64_t v4 = *(void **)(v1 + 56);
  v0[33] = v4;
  v0[2] = v0;
  v0[7] = v0 + 20;
  v0[3] = sub_24121FD98;
  uint64_t v5 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_24121D9B8;
  v0[13] = &unk_2650E7AA8;
  v0[14] = v5;
  objc_msgSend(v4, sel_analysisWithCompletion_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24121FD98()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 272) = v2;
  uint64_t v3 = *(void *)(v1 + 256);
  uint64_t v4 = *(void *)(v1 + 248);
  if (v2) {
    uint64_t v5 = sub_2412200C4;
  }
  else {
    uint64_t v5 = sub_24121FEC8;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24121FEC8()
{
  uint64_t v1 = (void *)v0[33];
  uint64_t v2 = v0[28];
  uint64_t v3 = (void *)v0[23];
  uint64_t v18 = v0[24];
  id v19 = (id)v0[22];
  swift_release();
  uint64_t v4 = (void *)v0[20];
  uint64_t v5 = (void *)v3[6];
  uint64_t v6 = (void *)v3[8];
  type metadata accessor for TwelveMonthCycleHistoryPDFProvider();
  swift_allocObject();
  id v7 = v1;
  id v8 = v5;
  id v9 = v4;
  uint64_t v10 = sub_24161CA58(v7, v8, v9, v6);
  uint64_t v11 = sub_241632028();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v2, 1, 1, v11);
  swift_retain();
  uint64_t v12 = sub_241631FF8();
  __n128 v13 = (void *)swift_allocObject();
  uint64_t v14 = MEMORY[0x263F8F500];
  void v13[2] = v12;
  v13[3] = v14;
  v13[4] = v3;
  v13[5] = v18;
  sub_241328DBC(v2, (uint64_t)&unk_268CFB198, (uint64_t)v13);
  swift_release();
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, *(void *)&v10[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34TwelveMonthCycleHistoryPDFProvider_pdfViewController]);
  objc_msgSend(v19, sel_presentViewController_animated_completion_, v15, 1, 0);

  v3[9] = v10;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_2412200C4()
{
  os_log_type_t v23 = v0;
  uint64_t v1 = (void *)v0[34];
  swift_release();
  swift_willThrow();
  sub_24162EF48();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_24162EF98();
  os_log_type_t v5 = sub_2416322E8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[34];
    uint64_t v7 = v0[26];
    uint64_t v21 = v0[27];
    uint64_t v20 = v0[25];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    v22[0] = v9;
    *(_DWORD *)uint64_t v8 = 136446466;
    uint64_t v10 = sub_2416333E8();
    v0[18] = sub_2411B6898(v10, v11, v22);
    sub_241632C28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v12 = sub_241633298();
    v0[21] = sub_2411B6898(v12, v13, v22);
    sub_241632C28();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24118E000, v4, v5, "[%{public}s] Failed getting cycles from analysis to present PDF ViewController, error: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245621640](v9, -1, -1);
    MEMORY[0x245621640](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v21, v20);
  }
  else
  {
    uint64_t v14 = (void *)v0[34];
    uint64_t v16 = v0[26];
    uint64_t v15 = v0[27];
    uint64_t v17 = v0[25];

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_241220354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[19] = a4;
  v5[20] = a5;
  uint64_t v6 = sub_24162EFA8();
  v5[21] = v6;
  v5[22] = *(void *)(v6 - 8);
  v5[23] = swift_task_alloc();
  uint64_t v7 = sub_24162BA08();
  v5[24] = v7;
  v5[25] = *(void *)(v7 - 8);
  v5[26] = swift_task_alloc();
  uint64_t v8 = sub_24162B718();
  v5[27] = v8;
  v5[28] = *(void *)(v8 - 8);
  v5[29] = swift_task_alloc();
  sub_2412228FC();
  v5[30] = v9;
  v5[31] = *(void *)(v9 - 8);
  v5[32] = swift_task_alloc();
  sub_241632008();
  v5[33] = sub_241631FF8();
  uint64_t v11 = sub_241631FC8();
  v5[34] = v11;
  v5[35] = v10;
  return MEMORY[0x270FA2498](sub_24122055C, v11, v10);
}

uint64_t sub_24122055C()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[29];
  uint64_t v3 = v0[26];
  uint64_t v4 = v0[25];
  uint64_t v14 = v0[24];
  uint64_t v15 = v0[19];
  uint64_t v16 = v0[27];
  sub_24162B6B8();
  sub_24162B9A8();
  id v5 = sub_24161C4C0();
  id v6 = (id)HKMCDeviationSampleTypes();
  sub_2411B9D00(0, (unint64_t *)&qword_26B0125F0);
  unint64_t v7 = sub_241631F28();

  id v8 = v5;
  sub_241610BAC(v7, (uint64_t)v8);

  swift_bridgeObjectRelease();
  sub_24121DE1C(0, (unint64_t *)&qword_268CFCD20, (uint64_t (*)(uint64_t))sub_241222964, MEMORY[0x263F8E0F8]);
  sub_241222964();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_241637EE0;
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x245618650](KeyPath, 0);
  sub_2411B9D00(0, (unint64_t *)&qword_26B012390);
  sub_2416318C8();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v14);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v16);
  uint64_t v10 = *(void *)(v15 + 48);
  uint64_t v11 = (void *)swift_task_alloc();
  v0[36] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_2412207FC;
  uint64_t v12 = v0[30];
  return MEMORY[0x270EF3200](v10, v12);
}

uint64_t sub_2412207FC(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 296) = a1;
  *(void *)(v4 + 304) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 280);
  uint64_t v6 = *(void *)(v3 + 272);
  if (v1) {
    unint64_t v7 = sub_241220D10;
  }
  else {
    unint64_t v7 = sub_241220940;
  }
  return MEMORY[0x270FA2498](v7, v6, v5);
}

uint64_t sub_241220940()
{
  unint64_t v1 = v0[37];
  if (v1 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v2 = sub_241633068();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v2) {
    char v3 = 4;
  }
  else {
    char v3 = 5;
  }
  type metadata accessor for RoomInteractionEvent();
  uint64_t v4 = swift_allocObject();
  v0[39] = v4;
  *(void *)(v4 + 16) = 0xD00000000000002ALL;
  *(void *)(v4 + 24) = 0x8000000241659F90;
  *(unsigned char *)(v4 + 32) = 8;
  *(unsigned char *)(v4 + 33) = v3;
  *(unsigned char *)(v4 + 34) = 1;
  *(void *)(v4 + 40) = 0;
  *(unsigned char *)(v4 + 48) = 0;
  *(void *)(v4 + 56) = 0;
  id v5 = sub_24121CD6C();
  v0[40] = v5;
  v0[2] = v0;
  v0[7] = v0 + 42;
  v0[3] = sub_241220B0C;
  uint64_t v6 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_2415E8460;
  v0[13] = &unk_2650E7AC0;
  v0[14] = v6;
  swift_retain();
  objc_msgSend(v5, sel_submitEvent_completion_, v4, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_241220B0C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 328) = v2;
  uint64_t v3 = *(void *)(v1 + 280);
  uint64_t v4 = *(void *)(v1 + 272);
  if (v2) {
    id v5 = sub_241220DCC;
  }
  else {
    id v5 = sub_241220C3C;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_241220C3C()
{
  uint64_t v1 = (void *)v0[40];
  uint64_t v2 = v0[32];
  uint64_t v3 = v0[30];
  uint64_t v4 = v0[31];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_241220D10()
{
  uint64_t v1 = v0[32];
  uint64_t v2 = v0[30];
  uint64_t v3 = v0[31];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_241220DCC()
{
  unint64_t v31 = v0;
  uint64_t v2 = (void *)v0[40];
  uint64_t v1 = (void *)v0[41];
  swift_release();
  swift_willThrow();

  swift_release();
  sub_24162EF48();
  id v3 = v1;
  id v4 = v1;
  id v5 = sub_24162EF98();
  os_log_type_t v6 = sub_2416322C8();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (void *)v0[41];
    uint64_t v28 = v0[30];
    uint64_t v29 = v0[32];
    uint64_t v8 = v0[22];
    uint64_t v26 = v0[23];
    uint64_t v27 = v0[31];
    uint64_t v25 = v0[21];
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v30[0] = v10;
    *(_DWORD *)uint64_t v9 = 136446466;
    uint64_t v11 = sub_2416333E8();
    v0[16] = sub_2411B6898(v11, v12, v30);
    sub_241632C28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    v0[17] = v7;
    id v13 = v7;
    sub_2411CE834();
    uint64_t v14 = sub_241631D58();
    v0[18] = sub_2411B6898(v14, v15, v30);
    sub_241632C28();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24118E000, v5, v6, "[%{public}s] Error submitting analytics event: %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245621640](v10, -1, -1);
    MEMORY[0x245621640](v9, -1, -1);

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v26, v25);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v29, v28);
  }
  else
  {
    uint64_t v16 = (void *)v0[41];
    uint64_t v18 = v0[31];
    uint64_t v17 = v0[32];
    uint64_t v19 = v0[30];
    uint64_t v21 = v0[22];
    uint64_t v20 = v0[23];
    uint64_t v22 = v0[21];

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

void sub_2412210EC(uint64_t a1)
{
  id v2 = (id)MEMORY[0x245621790](a1 + 16);
  if (!v2) {
    id v2 = *(id *)(a1 + 24);
  }

  sub_2411B9D00(0, (unint64_t *)&qword_268CFD4F0);
  id v3 = (id)sub_241631F18();
  objc_msgSend(v2, sel_setViewControllers_, v3);
}

uint64_t sub_2412211A4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  swift_beginAccess();
  sub_241221C18(&qword_268CFB180, (void (*)(uint64_t))type metadata accessor for DeviationsConfirmationFlowCoordinator);
  swift_unknownObjectRetain();
  uint64_t v8 = sub_24162C898();
  swift_unknownObjectRelease();
  swift_beginAccess();
  *(void *)(a3 + 16) = v8;
  swift_unknownObjectRelease();
  swift_beginAccess();
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a5;
  aBlock[4] = sub_241221C70;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_241328D44;
  aBlock[3] = &unk_26F56A120;
  uint64_t v11 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_release();
  objc_msgSend(a4, sel_submitEvent_completion_, v9, v11);
  _Block_release(v11);
  return swift_unknownObjectRelease();
}

void sub_24122135C(char a1, void *a2)
{
  uint64_t v4 = sub_24162EFA8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    sub_24162EF78();
    id v8 = a2;
    id v9 = a2;
    uint64_t v10 = sub_24162EF98();
    os_log_type_t v11 = sub_2416322C8();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v20 = v13;
      *(_DWORD *)uint64_t v12 = 136446466;
      uint64_t v14 = sub_2416333E8();
      uint64_t v19 = sub_2411B6898(v14, v15, &v20);
      sub_241632C28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2082;
      uint64_t v19 = (uint64_t)a2;
      id v16 = a2;
      sub_24121DE1C(0, (unint64_t *)&qword_26B010860, (uint64_t (*)(uint64_t))sub_2411CE834, MEMORY[0x263F8D8F0]);
      uint64_t v17 = sub_241631D58();
      uint64_t v19 = sub_2411B6898(v17, v18, &v20);
      sub_241632C28();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24118E000, v10, v11, "[%{public}s] Error submitting analytics event: %{public}s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245621640](v13, -1, -1);
      MEMORY[0x245621640](v12, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_2412215F8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_2411B9D00(0, (unint64_t *)&qword_26B00E600);
    sub_241221BB0();
    uint64_t v4 = sub_241631B38();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_2412216AC()
{
  if (!qword_268CFCC20)
  {
    sub_241631AC8();
    sub_241221C18((unint64_t *)&qword_26B0121C0, MEMORY[0x263F090E8]);
    unint64_t v0 = sub_241631C08();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFCC20);
    }
  }
}

uint64_t sub_241221740(uint64_t a1, uint64_t a2)
{
  sub_2412216AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_2412217A4@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24162FC48();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  return result;
}

uint64_t sub_241221834(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2411DFF14(v1, v2);
  swift_retain();
  return sub_24162FC58();
}

uint64_t sub_241221910(uint64_t a1, uint64_t a2)
{
  sub_2412216AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241221974(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2412219DC()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241221A14(uint64_t a1)
{
  return sub_24121F9B8(a1);
}

uint64_t sub_241221A1C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_24121DE1C(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unint64_t sub_241221A9C(unint64_t result)
{
  if (result != 7) {
    return sub_241221AAC(result);
  }
  return result;
}

unint64_t sub_241221AAC(unint64_t result)
{
  if (result >= 7) {
    return _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  }
  return result;
}

uint64_t sub_241221ABC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_24121DE1C(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241221B2C()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241221B64()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_241221BA4(uint64_t a1, uint64_t a2)
{
  return sub_2412211A4(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32));
}

unint64_t sub_241221BB0()
{
  unint64_t result = qword_268CFB178;
  if (!qword_268CFB178)
  {
    sub_2411B9D00(255, (unint64_t *)&qword_26B00E600);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB178);
  }
  return result;
}

uint64_t sub_241221C18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241221C60()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_241221C70(char a1, void *a2)
{
}

uint64_t sub_241221C78()
{
  uint64_t v0 = sub_24162EFA8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162EF48();
  uint64_t v4 = sub_24162EF98();
  os_log_type_t v5 = sub_2416322E8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136446210;
    uint64_t v8 = sub_2416333E8();
    uint64_t v11 = sub_2411B6898(v8, v9, &v12);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v4, v5, "[%{public}s] Confirmation flow successfully finished", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v7, -1, -1);
    MEMORY[0x245621640](v6, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_241221E74(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v59 = *v1;
  uint64_t v4 = sub_24162EFA8();
  unint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (unint64_t)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v55 - v9;
  uint64_t v11 = sub_24162B718();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  id v16 = (char *)&v55 - v15;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v55 - v18;
  int v20 = *((unsigned __int8 *)v2 + 40);
  if (v20 == 255 || (v20 & 1) == 0)
  {
    sub_24162EF48();
    swift_retain_n();
    uint64_t v33 = sub_24162EF98();
    os_log_type_t v34 = sub_2416322C8();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      unint64_t v36 = v5;
      uint64_t v37 = swift_slowAlloc();
      unint64_t v62 = v37;
      *(_DWORD *)uint64_t v35 = 136446466;
      uint64_t v38 = sub_2416333E8();
      uint64_t v60 = sub_2411B6898(v38, v39, (uint64_t *)&v62);
      sub_241632C28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      unsigned __int8 v40 = *((unsigned char *)v2 + 40);
      uint64_t v60 = v2[4];
      unsigned __int8 v61 = v40;
      sub_2412229DC(v60, v40);
      sub_2411E0390(0, &qword_268CFB1A8);
      uint64_t v41 = sub_241631D58();
      uint64_t v60 = sub_2411B6898(v41, v42, (uint64_t *)&v62);
      sub_241632C28();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v33, v34, "[%{public}s] Tried to present next deviation result page but the navigation state is unexpected: %s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245621640](v37, -1, -1);
      MEMORY[0x245621640](v35, -1, -1);

      (*(void (**)(unint64_t, uint64_t))(v36 + 8))(v7, v4);
    }
    else
    {

      swift_release_n();
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v7, v4);
    }
    return;
  }
  uint64_t v56 = a1;
  BOOL v21 = __OFADD__(a1, 1);
  uint64_t v22 = a1 + 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    unint64_t v57 = v5;
    uint64_t v58 = v4;
    unint64_t v7 = v2[4];
    unint64_t v5 = v7 >> 62;
    if (!(v7 >> 62))
    {
      id v23 = *(id *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      j___s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0(v2[4], 1);
      if (v22 < (uint64_t)v23) {
        goto LABEL_6;
      }
LABEL_23:
      sub_24162EF48();
      j___s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0(v7, 1);
      uint64_t v47 = sub_24162EF98();
      os_log_type_t v48 = sub_2416322C8();
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v49 = swift_slowAlloc();
        uint64_t v55 = swift_slowAlloc();
        uint64_t v60 = v55;
        *(_DWORD *)uint64_t v49 = 136446722;
        uint64_t v50 = sub_2416333E8();
        unint64_t v62 = sub_2411B6898(v50, v51, &v60);
        sub_241632C28();
        swift_bridgeObjectRelease();
        *(_WORD *)(v49 + 12) = 2080;
        unint64_t v62 = v7;
        j___s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0(v7, 1);
        sub_2412229F4();
        uint64_t v52 = sub_241631D78();
        unint64_t v62 = sub_2411B6898(v52, v53, &v60);
        sub_241632C28();
        swift_bridgeObjectRelease();
        sub_24121E094(v7, v20);
        sub_24121E094(v7, v20);
        *(_WORD *)(v49 + 22) = 2048;
        unint64_t v62 = v56;
        sub_241632C28();
        _os_log_impl(&dword_24118E000, v47, v48, "[%{public}s] Tried to present next deviation but there isn't one. Deviations: %s, current: %ld", (uint8_t *)v49, 0x20u);
        uint64_t v54 = v55;
        swift_arrayDestroy();
        MEMORY[0x245621640](v54, -1, -1);
        MEMORY[0x245621640](v49, -1, -1);
      }
      else
      {
        sub_24121E094(v7, v20);
        sub_24121E094(v7, v20);
      }

      (*(void (**)(char *, uint64_t))(v57 + 8))(v10, v58);
      return;
    }
  }
  j___s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0(v7, 1);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  id v23 = (id)sub_241633068();
  sub_24121E094(v7, v20);
  if (v22 >= (uint64_t)v23) {
    goto LABEL_23;
  }
LABEL_6:
  if ((v7 & 0xC000000000000001) == 0)
  {
    if (v22 < 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v24 = v7 & 0xFFFFFFFFFFFFFF8;
      if ((unint64_t)v22 < *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v23 = *(id *)(v7 + 8 * v22 + 32);
        goto LABEL_10;
      }
    }
    __break(1u);
    goto LABEL_32;
  }
  id v23 = (id)MEMORY[0x245620370](v22, v7);
  if (v5) {
    goto LABEL_33;
  }
  uint64_t v24 = v7 & 0xFFFFFFFFFFFFFF8;
LABEL_10:
  uint64_t v25 = *(void *)(v24 + 16);
  while (1)
  {
    sub_24121E094(v7, v20);
    unint64_t v7 = v25 - 1;
    if (!__OFSUB__(v25, 1)) {
      break;
    }
LABEL_32:
    __break(1u);
LABEL_33:
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v25 = sub_241633068();
    sub_24121E094(v7, v20);
  }
  id v26 = v23;
  id v27 = objc_msgSend(v26, sel_startDate);
  sub_24162B6A8();

  id v28 = objc_msgSend(v26, sel_endDate);
  sub_24162B6A8();

  id v29 = objc_msgSend(v26, sel_hkmc_deviationType);
  sub_24162B6B8();
  type metadata accessor for DeviationDetailViewModel();
  swift_allocObject();
  if (v22 == v7)
  {
    uint64_t v30 = 2;
    unint64_t v31 = 0;
    int v32 = 2;
  }
  else
  {
    uint64_t v30 = v22;
    unint64_t v31 = (void *)v25;
    int v32 = 1;
  }
  sub_2411E7A48((uint64_t)v19, (uint64_t)v16, v29, (void *)v30, v31, v32, (uint64_t)v13);

  id v43 = objc_allocWithZone((Class)type metadata accessor for DeviationsConfirmedViewController());
  uint64_t v44 = swift_retain();
  unint64_t v45 = (char *)sub_241269118(v44);
  *(void *)&v45[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin35DeviationCustomDetailViewController_delegate + 8] = &off_26F56A038;
  swift_unknownObjectWeakAssign();
  swift_release();
  id v46 = (id)MEMORY[0x245621790](v2 + 2);
  if (!v46) {
    id v46 = (id)v2[3];
  }
  objc_msgSend(v46, sel_showViewController_sender_, v45, 0);
}

void sub_241222634(unint64_t a1, unint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 32);
  *(void *)(v2 + 32) = a1;
  unsigned __int8 v6 = *(unsigned char *)(v2 + 40);
  *(unsigned char *)(v2 + 40) = 1;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_24121E094(v5, v6);
  if ((*(unsigned char *)(v2 + 40) & 1) == 0)
  {
    uint64_t v7 = *(void *)(v2 + 32);
    *(void *)(v2
              + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37DeviationsConfirmationFlowCoordinator_startingUnconfirmedDeviations) = v7;
    j___s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0(v7, 0);
    swift_bridgeObjectRelease();
  }
  *(void *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37DeviationsConfirmationFlowCoordinator_addedCycleFactors) = a2;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  if (a2 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v8 = sub_241633068();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8) {
    unint64_t v9 = 2;
  }
  else {
    unint64_t v9 = 3;
  }
  sub_24121EF44(7, v9);
  sub_241222748(v9);

  sub_24121EAFC(a1);
}

unint64_t sub_241222748(unint64_t result)
{
  if (result != 7) {
    return sub_241222758(result);
  }
  return result;
}

unint64_t sub_241222758(unint64_t result)
{
  if (result >= 7) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_241222768(uint64_t a1, uint64_t a2)
{
  sub_24121DE1C(0, (unint64_t *)&qword_26B00F250, MEMORY[0x263F43C08], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2412227FC()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_24122283C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_241201428;
  return sub_241220354(a1, v4, v5, v7, v6);
}

void sub_2412228FC()
{
  if (!qword_268CFCD10)
  {
    sub_2411B9D00(255, (unint64_t *)&qword_26B012390);
    unint64_t v0 = sub_2416318E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFCD10);
    }
  }
}

void sub_241222964()
{
  if (!qword_268CFB1A0)
  {
    sub_2411B9D00(255, (unint64_t *)&qword_26B012390);
    unint64_t v0 = sub_24162B178();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFB1A0);
    }
  }
}

char *sub_2412229CC()
{
  return sel_startDate;
}

uint64_t sub_2412229DC(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return j___s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0(result, a2 & 1);
  }
  return result;
}

void sub_2412229F4()
{
  if (!qword_268CFB1B0)
  {
    sub_2411B9D00(255, (unint64_t *)&qword_26B012390);
    unint64_t v0 = sub_241631FA8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFB1B0);
    }
  }
}

uint64_t *sub_241222A5C(uint64_t *a1)
{
  return a1;
}

char *sub_241222AB4()
{
  uint64_t v1 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin51MenstrualCyclesOnboardingPeriodLengthViewController____lazy_storage___typicalCycleViewController;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin51MenstrualCyclesOnboardingPeriodLengthViewController____lazy_storage___typicalCycleViewController);
  if (v2)
  {
    uint64_t v3 = *(char **)(v0
                  + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin51MenstrualCyclesOnboardingPeriodLengthViewController____lazy_storage___typicalCycleViewController);
  }
  else
  {
    uint64_t v4 = sub_241222B18(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    uint64_t v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

char *sub_241222B18(uint64_t a1)
{
  uint64_t v25 = a1;
  uint64_t v1 = sub_24162B7E8();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v2 = sub_241631CA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v23 - v7;
  sub_241631C38();
  unint64_t v9 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v9(v5, v8, v2);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v10 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v24 = sub_241631D38();
  uint64_t v12 = v11;
  uint64_t v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  v13(v8, v2);
  sub_241631C38();
  v9(v5, v8, v2);
  id v14 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v15 = sub_241631D38();
  uint64_t v17 = v16;
  v13(v8, v2);
  uint64_t v18 = v25;
  uint64_t v19 = *(void *)(v25
                  + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin45MenstrualCyclesOnboardingPickerViewController_userInfo);
  sub_2411A3DF4(v25 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin45MenstrualCyclesOnboardingPickerViewController_pinnedContentManager, (uint64_t)v27);
  *(void *)((char *)objc_allocWithZone((Class)type metadata accessor for MenstrualCyclesOnboardingTypicalCycleViewController())
            + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin51MenstrualCyclesOnboardingTypicalCycleViewController____lazy_storage___periodTrackingViewController) = 0;
  sub_2411A3DF4((uint64_t)v27, (uint64_t)v26);
  swift_retain();
  int v20 = (char *)sub_241528CC4(10, 90, 0, v24, v12, v15, v17, v19, (uint64_t)v26);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v27);
  uint64_t v21 = v18 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin45MenstrualCyclesOnboardingPickerViewController_delegate;
  MEMORY[0x245621790](v18 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin45MenstrualCyclesOnboardingPickerViewController_delegate);
  *(void *)&v20[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin45MenstrualCyclesOnboardingPickerViewController_delegate + 8] = *(void *)(v21 + 8);
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  return v20;
}

void sub_241222E6C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24162B7E8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_241631CA8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = &v28[-v8];
  id v10 = (objc_class *)type metadata accessor for MenstrualCyclesOnboardingPeriodLengthViewController();
  v29.receiver = v0;
  v29.super_class = v10;
  objc_msgSendSuper2(&v29, sel_viewDidLoad);
  uint64_t v11 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin45MenstrualCyclesOnboardingPickerViewController_userInfo;
  uint64_t v12 = *(void *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin45MenstrualCyclesOnboardingPickerViewController_userInfo]
      + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_periodLength;
  if ((*(unsigned char *)(v12 + 8) & 1) == 0)
  {
    uint64_t v13 = *(void *)v12;
    uint64_t v14 = sub_2415289B4();
    if (v14)
    {
      if (*(void *)(v14 + 16))
      {
        id v15 = *(id *)(v14 + 32);
        swift_bridgeObjectRelease();
        BOOL v16 = __OFSUB__(v13, v15);
        uint64_t v17 = v13 - (void)v15;
        if (v16)
        {
          __break(1u);
          goto LABEL_13;
        }
        id v18 = sub_241528AA8();
        objc_msgSend(v18, sel_selectRow_inComponent_animated_, v17, 0, 0);

        uint64_t v19 = *(void *)&v1[v11];
        if (*(unsigned char *)(v19 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_periodLengthFromAnalysis) == 1
          && (*(unsigned char *)(v19 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_periodLength + 8) & 1) == 0)
        {
          uint64_t v20 = *(void *)(v19 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_periodLength);
          id v21 = objc_allocWithZone(MEMORY[0x263F08780]);
          swift_retain();
          id v22 = objc_msgSend(v21, sel_init);
          uint64_t v23 = sub_241475AC4(v20, 5);
          uint64_t v17 = v24;
          swift_release();

          if (v17)
          {
            uint64_t v11 = v23;
            id v15 = sub_241528BA8();
            sub_241631C38();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v6, v9, v3);
            if (qword_26B0131F0 == -1)
            {
LABEL_9:
              id v25 = (id)qword_26B0181A0;
              sub_24162B7D8();
              sub_241631D38();
              (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v9, v3);
              sub_2411BFCEC();
              uint64_t v26 = swift_allocObject();
              *(_OWORD *)(v26 + 16) = xmmword_241637EE0;
              *(void *)(v26 + 56) = MEMORY[0x263F8D310];
              *(void *)(v26 + 64) = sub_2411C0A14();
              *(void *)(v26 + 32) = v11;
              *(void *)(v26 + 40) = v17;
              sub_241631D28();
              swift_bridgeObjectRelease();
              id v27 = (void *)sub_241631CC8();
              swift_bridgeObjectRelease();
              objc_msgSend(v15, sel_setText_, v27);

              return;
            }
LABEL_13:
            swift_once();
            goto LABEL_9;
          }
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
}

uint64_t sub_241223260(char a1)
{
  uint64_t v3 = sub_24162B7E8();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v4 = sub_241631CA8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)&double v9 = MEMORY[0x270FA5388](v8).n128_u64[0];
  uint64_t v11 = &v20[-v10];
  id v12 = objc_msgSend(v1, sel_navigationItem, v9);
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 16))(v7, v11, v4);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v13 = (id)qword_26B0181A0;
  sub_24162B7D8();
  sub_241631D38();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v11, v4);
  uint64_t v14 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setBackButtonTitle_, v14);

  id v15 = sub_241222AB4();
  objc_msgSend(v1, sel_showViewController_sender_, v15, 0);

  BOOL v16 = &v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin45MenstrualCyclesOnboardingPickerViewController_delegate];
  uint64_t result = MEMORY[0x245621790](&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin45MenstrualCyclesOnboardingPickerViewController_delegate]);
  if (result)
  {
    uint64_t v18 = *((void *)v16 + 1);
    uint64_t ObjectType = swift_getObjectType();
    sub_2414FC4D4(3, a1 & 1, ObjectType, v18);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_24122350C()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_24162EFA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin45MenstrualCyclesOnboardingPickerViewController_userInfo;
  uint64_t v7 = *(void *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin45MenstrualCyclesOnboardingPickerViewController_userInfo];
  swift_retain();
  id v8 = sub_241528AA8();
  double v9 = (char *)objc_msgSend(v8, sel_selectedRowInComponent_, 0);

  if (__OFADD__(v9, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = v7 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_periodLength;
    *(void *)uint64_t v10 = v9 + 1;
    *(unsigned char *)(v10 + 8) = 0;
    swift_release();
    sub_24162EF48();
    uint64_t v11 = v1;
    id v12 = sub_24162EF98();
    os_log_type_t v13 = sub_2416322E8();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v25 = v2;
      uint64_t v16 = v15;
      uint64_t v28 = v15;
      *(_DWORD *)uint64_t v14 = 136446466;
      uint64_t v24 = v3;
      uint64_t v17 = sub_2416333E8();
      uint64_t v26 = sub_2411B6898(v17, v18, &v28);
      sub_241632C28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2080;
      uint64_t v19 = *(void *)&v1[v6] + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_periodLength;
      uint64_t v20 = *(void *)v19;
      LOBYTE(v19) = *(unsigned char *)(v19 + 8);
      uint64_t v26 = v20;
      char v27 = v19;
      sub_2411ED5E8();
      uint64_t v21 = sub_241631D78();
      uint64_t v26 = sub_2411B6898(v21, v22, &v28);
      sub_241632C28();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v12, v13, "[%{public}s] Selected period length: %s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245621640](v16, -1, -1);
      MEMORY[0x245621640](v14, -1, -1);

      (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v25);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    sub_241223260(0);
  }
}

uint64_t sub_24122382C()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_24162EFA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1
                 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin45MenstrualCyclesOnboardingPickerViewController_userInfo)
     + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_periodLength;
  *(void *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 8) = 1;
  sub_24162EF48();
  uint64_t v7 = sub_24162EF98();
  os_log_type_t v8 = sub_2416322E8();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v16 = v2;
    uint64_t v10 = (uint8_t *)v9;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v18 = v11;
    *(_DWORD *)uint64_t v10 = 136446210;
    uint64_t v12 = sub_2416333E8();
    uint64_t v17 = sub_2411B6898(v12, v13, &v18);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v7, v8, "[%{public}s] Selected period length: None", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v11, -1, -1);
    MEMORY[0x245621640](v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v16);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_241223260(1);
}

uint64_t sub_241223A78(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_unknownObjectRetain();
  id v6 = a1;
  sub_241632CE8();
  uint64_t v7 = swift_unknownObjectRelease();
  a4(v7);

  return _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v9);
}

void sub_241223AEC()
{
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin51MenstrualCyclesOnboardingPeriodLengthViewController____lazy_storage___typicalCycleViewController));
}

id sub_241223AFC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MenstrualCyclesOnboardingPeriodLengthViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MenstrualCyclesOnboardingPeriodLengthViewController()
{
  return self;
}

unint64_t sub_241223B64()
{
  unint64_t result = qword_26B012420;
  if (!qword_26B012420)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B012420);
  }
  return result;
}

id sub_241223BBC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 16);
  *a2 = *(void *)a1;
  a2[1] = v2;
  a2[2] = v4;
  return sub_241224514(v3, v2, v4);
}

unint64_t sub_241223BD4@<X0>(void *a1@<X0>, int a2@<W1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t **a6@<X8>)
{
  uint64_t v29 = a5;
  id v31 = a3;
  int v30 = a2;
  uint64_t v9 = sub_24162BA08();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24162C128();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_24162C1C8();
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v20 + 16))(v19, a4);
  if (qword_26B00ED48 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_2411BF848(v13, (uint64_t)qword_26B018008);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v21, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v29, v9);
  uint64_t v22 = type metadata accessor for SummaryTileGenerator();
  swift_allocObject();
  id v23 = v31;
  id v24 = v31;
  id v25 = a1;
  uint64_t v26 = sub_241615134((uint64_t)v19, (uint64_t)v16, a1, v30 & 1, (uint64_t)v12, v23);
  a6[3] = (uint64_t *)v22;
  unint64_t result = sub_2412244BC();
  a6[4] = (uint64_t *)result;
  *a6 = v26;
  return result;
}

uint64_t sub_241223E88()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24162EFA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162EF48();
  id v6 = sub_24162EF98();
  os_log_type_t v7 = sub_2416322E8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v17 = v2;
    uint64_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v19 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t v11 = sub_2416333E8();
    uint64_t v18 = sub_2411B6898(v11, v12, &v19);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v6, v7, "[%{public}s] Deallocated", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v10, -1, -1);
    MEMORY[0x245621640](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v17);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  uint64_t v13 = v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin28SummaryTileGeneratorPipeline_domain;
  uint64_t v14 = sub_24162C128();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  return v1;
}

uint64_t sub_241224138()
{
  sub_241223E88();

  return swift_deallocClassInstance();
}

uint64_t sub_241224190()
{
  return type metadata accessor for SummaryTileGeneratorPipeline();
}

uint64_t sub_241224198()
{
  uint64_t result = sub_24162C128();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_241224244()
{
  uint64_t v14 = sub_24162C0E8();
  uint64_t v0 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24162CBF8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24162C128();
  sub_241224558(v7, qword_26B018008);
  uint64_t v13 = sub_2411BF848(v7, (uint64_t)qword_26B018008);
  sub_24162BDD8();
  sub_2412245BC();
  uint64_t v8 = sub_24162BD98();
  uint64_t v9 = *(void *)(v8 - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_241637EE0;
  (*(void (**)(unint64_t, void, uint64_t))(v9 + 104))(v11 + v10, *MEMORY[0x263F45520], v8);
  sub_2411B8B4C((uint64_t)v6);
  sub_24162CBE8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, *MEMORY[0x263F45688], v14);
  return sub_24162C0F8();
}

unint64_t sub_2412244BC()
{
  unint64_t result = qword_26B012A50;
  if (!qword_26B012A50)
  {
    type metadata accessor for SummaryTileGenerator();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B012A50);
  }
  return result;
}

id sub_241224514(id result, uint64_t a2, void *a3)
{
  if (result != (id)1)
  {
    id v5 = result;
    id v4 = a3;
    return v5;
  }
  return result;
}

uint64_t *sub_241224558(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void sub_2412245BC()
{
  if (!qword_26B012FC8)
  {
    sub_24162BD98();
    unint64_t v0 = sub_2416331E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B012FC8);
    }
  }
}

void sub_241224614(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42CycleFactorsDaySummaryCollectionViewSource_cycleFactors) = a1;
  swift_bridgeObjectRelease();
  *(void *)(v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42CycleFactorsDaySummaryCollectionViewSource_rows) = sub_241224714();
  swift_bridgeObjectRelease();
  uint64_t v2 = (void *)MEMORY[0x245621790](v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42CycleFactorsDaySummaryCollectionViewSource_delegate);
  if (v2)
  {
    uint64_t v3 = v2;
    if (objc_msgSend(v2, sel_isViewLoaded))
    {
      id v4 = objc_msgSend(v3, sel_collectionView);
      if (v4)
      {
        id v5 = v4;
        objc_msgSend(v4, sel_reloadData);
        swift_unknownObjectRelease();
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

char *sub_241224714()
{
  uint64_t v1 = sub_24162B718();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  id v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v29 - v6;
  uint64_t v8 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42CycleFactorsDaySummaryCollectionViewSource_cycleFactors;
  unint64_t v9 = *(void *)(v0
                 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42CycleFactorsDaySummaryCollectionViewSource_cycleFactors);
  if (!(v9 >> 62))
  {
    if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
    return (char *)&unk_26F5667E8;
  }
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v26 = sub_241633068();
  swift_bridgeObjectRelease();
  if (!v26) {
    return (char *)&unk_26F5667E8;
  }
LABEL_3:
  unint64_t v10 = *(void *)(v0 + v8);
  if (!(v10 >> 62))
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t result = (char *)_s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    if (v11) {
      goto LABEL_5;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    uint64_t v15 = (char *)MEMORY[0x263F8EE78];
LABEL_27:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v15 = sub_24158BA28(0, *((void *)v15 + 2) + 1, 1, v15);
    }
    unint64_t v28 = *((void *)v15 + 2);
    unint64_t v27 = *((void *)v15 + 3);
    if (v28 >= v27 >> 1) {
      uint64_t v15 = sub_24158BA28((char *)(v27 > 1), v28 + 1, 1, v15);
    }
    *((void *)v15 + 2) = v28 + 1;
    v15[v28 + 32] = 2;
    return v15;
  }
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  unint64_t result = (char *)sub_241633068();
  uint64_t v11 = (uint64_t)result;
  if (!result) {
    goto LABEL_26;
  }
LABEL_5:
  if (v11 >= 1)
  {
    uint64_t v13 = 0;
    unint64_t v30 = v10 & 0xC000000000000001;
    uint64_t v14 = (void (**)(char *, uint64_t))(v2 + 8);
    uint64_t v15 = (char *)MEMORY[0x263F8EE78];
    uint64_t v31 = v11;
    unint64_t v32 = v10;
    do
    {
      if (v30) {
        id v16 = (id)MEMORY[0x245620370](v13, v10);
      }
      else {
        id v16 = *(id *)(v10 + 8 * v13 + 32);
      }
      uint64_t v17 = v16;
      id v18 = objc_msgSend(v16, sel_endDate);
      sub_24162B6A8();

      sub_24162B5E8();
      LOBYTE(v18) = sub_24162B698();
      uint64_t v19 = *v14;
      (*v14)(v4, v1);
      v19(v7, v1);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (v18)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v15 = sub_24158BA28(0, *((void *)v15 + 2) + 1, 1, v15);
        }
        unint64_t v22 = *((void *)v15 + 2);
        unint64_t v21 = *((void *)v15 + 3);
        unint64_t v23 = v22 + 1;
        char v24 = 1;
        if (v22 >= v21 >> 1) {
          uint64_t v15 = sub_24158BA28((char *)(v21 > 1), v22 + 1, 1, v15);
        }
      }
      else
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v15 = sub_24158BA28(0, *((void *)v15 + 2) + 1, 1, v15);
        }
        unint64_t v22 = *((void *)v15 + 2);
        unint64_t v25 = *((void *)v15 + 3);
        unint64_t v23 = v22 + 1;
        if (v22 >= v25 >> 1) {
          uint64_t v15 = sub_24158BA28((char *)(v25 > 1), v22 + 1, 1, v15);
        }
        char v24 = 0;
      }
      ++v13;
      *((void *)v15 + 2) = v23;
      v15[v22 + 32] = v24;

      unint64_t v10 = v32;
    }
    while (v31 != v13);
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  __break(1u);
  return result;
}

uint64_t sub_241224AD8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_241631AC8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24162B718();
  uint64_t v25 = *(void *)(v10 - 8);
  uint64_t v26 = v10;
  MEMORY[0x270FA5388](v10);
  unint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)sub_241631CC8();
  uint64_t v14 = (void *)sub_241631CC8();
  uint64_t v15 = (void *)sub_24162BA88();
  id v16 = objc_msgSend(a1, sel_dequeueReusableSupplementaryViewOfKind_withReuseIdentifier_forIndexPath_, v13, v14, v15);

  type metadata accessor for HistoryListHeaderView();
  uint64_t v17 = swift_dynamicCastClassUnconditional();
  if (_sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0() == a2 && v18 == a3)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v20 = v24 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42CycleFactorsDaySummaryCollectionViewSource_cycleDay;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v20, v6);
    sub_241631AB8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_241224E40();
    id v21 = *(id *)(v17 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21HistoryListHeaderView_headerLabel);
    unint64_t v22 = (void *)sub_241631CC8();
    objc_msgSend(v21, sel_setText_, v22);
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v26);
    return v17;
  }
  char v19 = sub_241633218();
  swift_bridgeObjectRelease();
  if (v19) {
    goto LABEL_5;
  }
  uint64_t result = sub_241633038();
  __break(1u);
  return result;
}

uint64_t sub_241224E40()
{
  uint64_t v0 = sub_24162B718();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v20 - v5;
  uint64_t v21 = sub_24162BA08();
  uint64_t v7 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  unint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162B9A8();
  uint64_t v10 = (void *)sub_24162B8E8();
  sub_24162B708();
  uint64_t v11 = (void *)sub_24162B668();
  unint64_t v12 = *(void (**)(char *, uint64_t))(v1 + 8);
  v12(v3, v0);
  id v13 = objc_msgSend(v10, sel_hk_startOfYearForDate_addingYears_, v11, 0);

  sub_24162B6A8();
  sub_2412261C0((unint64_t *)&unk_26B00E680, MEMORY[0x263F07490]);
  if (sub_241631BB8())
  {
    id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
    objc_msgSend(v14, sel_setDateStyle_, 3);
    objc_msgSend(v14, sel_setTimeStyle_, 0);
  }
  else
  {
    id v15 = objc_allocWithZone((Class)type metadata accessor for RelativeWeekdayWithMonthAndDayFormatter());
    id v14 = sub_2412E8954(1);
  }
  id v16 = (void *)sub_24162B668();
  id v17 = objc_msgSend(v14, sel_stringFromDate_, v16);

  uint64_t v18 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  v12(v6, v0);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v21);
  return v18;
}

uint64_t sub_24122527C(void *a1, unint64_t a2)
{
  uint64_t v3 = v2;
  id v73 = a1;
  uint64_t v5 = sub_24162B7E8();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v69 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_241631CA8();
  uint64_t v71 = *(void *)(v7 - 8);
  uint64_t v72 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v68 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v70 = (char *)&v65 - v10;
  uint64_t v11 = sub_24162B718();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v12 = sub_24162BA08();
  uint64_t v66 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  unint64_t v14 = (unint64_t)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_241631AC8();
  uint64_t v67 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  id v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v65 - v19;
  uint64_t v21 = type metadata accessor for CycleFactorsSectionViewModel(0);
  MEMORY[0x270FA5388](v21 - 8);
  unint64_t v23 = (uint64_t *)((char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v24 = a2;
  unint64_t v25 = sub_24162BAC8();
  if ((v25 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v26 = *(void *)(v3 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42CycleFactorsDaySummaryCollectionViewSource_rows);
  if (v25 >= *(void *)(v26 + 16))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    id v32 = (id)MEMORY[0x245620370](v24, v14);
    swift_bridgeObjectRelease();
LABEL_8:
    sub_2413CCEF8((uint64_t)objc_msgSend(v32, sel_hkmc_cycleFactor));
    sub_2415A5284();
    id v33 = *(id *)(v3 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin20HistoricalSampleCell_titleLabel);
    os_log_type_t v34 = (void *)sub_241631CC8();
    objc_msgSend(v33, sel_setText_, v34);

    id v35 = *(id *)(v3 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin20HistoricalSampleCell_dateRangeLabel);
    unint64_t v36 = (void *)sub_241631CC8();
    objc_msgSend(v35, sel_setText_, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return v3;
  }
  switch(*(unsigned char *)(v26 + v25 + 32))
  {
    case 1:
      uint64_t v37 = (void *)sub_241631CC8();
      uint64_t v38 = (void *)sub_24162BA88();
      id v39 = objc_msgSend(v73, sel_dequeueReusableCellWithReuseIdentifier_forIndexPath_, v37, v38);
      unsigned __int8 v40 = (char *)v3;

      type metadata accessor for HistoricalSampleCell();
      uint64_t v3 = swift_dynamicCastClassUnconditional();
      unint64_t v41 = a2;
      unint64_t v42 = sub_24162BAC8();
      unint64_t v14 = v42;
      uint64_t v12 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42CycleFactorsDaySummaryCollectionViewSource_cycleFactors;
      id v17 = v40;
      uint64_t v30 = *(void *)&v40[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42CycleFactorsDaySummaryCollectionViewSource_cycleFactors];
      if ((v30 & 0xC000000000000001) != 0) {
        goto LABEL_29;
      }
      if ((v42 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v42 < *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v43 = *(id *)(v30 + 8 * v42 + 32);
        goto LABEL_13;
      }
      __break(1u);
      goto LABEL_32;
    case 2:
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v50 = (void *)sub_241631CC8();
      swift_bridgeObjectRelease();
      unint64_t v51 = (void *)sub_24162BA88();
      objc_msgSend(v73, sel_dequeueReusableCellWithReuseIdentifier_forIndexPath_, v50, v51);

      type metadata accessor for CycleFactorsShowAllFactorsCollectionViewCell();
      return swift_dynamicCastClassUnconditional();
    case 3:
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v53 = sub_241631CC8();
      uint64_t v65 = v3;
      uint64_t v54 = (void *)v53;
      swift_bridgeObjectRelease();
      uint64_t v55 = (void *)sub_24162BA88();
      id v56 = objc_msgSend(v73, sel_dequeueReusableCellWithReuseIdentifier_forIndexPath_, v54, v55);

      type metadata accessor for CycleFactorsNoneCollectionViewCell();
      uint64_t v3 = swift_dynamicCastClassUnconditional();
      uint64_t v57 = v65;
      uint64_t v58 = v65 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42CycleFactorsDaySummaryCollectionViewSource_cycleDay;
      swift_beginAccess();
      uint64_t v59 = v67;
      (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v20, v58, v15);
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v66 + 16))(v14, v57 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42CycleFactorsDaySummaryCollectionViewSource_gregorianCalenadar, v12);
      sub_24162B708();
      sub_241631A68();
      sub_2412261C0((unint64_t *)&unk_268CFC5C0, MEMORY[0x263F090E8]);
      sub_241632C68();
      uint64_t v60 = *(void (**)(char *, uint64_t))(v59 + 8);
      v60(v17, v15);
      v60(v20, v15);
      uint64_t v12 = v71;
      unsigned __int8 v61 = (void (**)(char *, char *, uint64_t))(v71 + 16);
      id v17 = v70;
      sub_241631C38();
      uint64_t v30 = v72;
      (*v61)(v68, v17, v72);
      if (qword_26B0131F0 == -1) {
        goto LABEL_22;
      }
      goto LABEL_35;
    default:
      unint64_t v27 = (void *)sub_241631CC8();
      unint64_t v28 = (void *)sub_24162BA88();
      id v29 = objc_msgSend(v73, sel_dequeueReusableCellWithReuseIdentifier_forIndexPath_, v27, v28);
      uint64_t v30 = v3;

      type metadata accessor for HistoricalSampleCell();
      uint64_t v3 = swift_dynamicCastClassUnconditional();
      unint64_t v31 = sub_24162BAC8();
      unint64_t v24 = v31;
      unint64_t v14 = *(void *)(v30
                      + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42CycleFactorsDaySummaryCollectionViewSource_cycleFactors);
      if ((v14 & 0xC000000000000001) != 0) {
        goto LABEL_26;
      }
      if ((v31 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v31 < *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v32 = *(id *)(v14 + 8 * v31 + 32);
        goto LABEL_8;
      }
      __break(1u);
LABEL_29:
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      id v43 = (id)MEMORY[0x245620370](v14, v30);
      swift_bridgeObjectRelease();
LABEL_13:
      sub_2415A5BCC(v23);

      unint64_t v44 = sub_24162BAC8();
      unint64_t v41 = v44;
      unint64_t v14 = *(void *)&v17[v12];
      if ((v14 & 0xC000000000000001) != 0)
      {
LABEL_32:
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        id v45 = (id)MEMORY[0x245620370](v41, v14);
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      if ((v44 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v44 < *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v45 = *(id *)(v14 + 8 * v44 + 32);
LABEL_17:
        sub_2413CCEF8((uint64_t)objc_msgSend(v45, sel_hkmc_cycleFactor));
        id v46 = *(id *)(v3 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin20HistoricalSampleCell_titleLabel);
        uint64_t v47 = (void *)sub_241631CC8();
        objc_msgSend(v46, sel_setText_, v47);

        id v48 = *(id *)(v3 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin20HistoricalSampleCell_dateRangeLabel);
        uint64_t v49 = (void *)sub_241631CC8();
        objc_msgSend(v48, sel_setText_, v49);

        swift_bridgeObjectRelease();
        sub_24122634C((uint64_t)v23, type metadata accessor for CycleFactorsSectionViewModel);
        return v3;
      }
      __break(1u);
LABEL_35:
      swift_once();
LABEL_22:
      id v62 = (id)qword_26B0181A0;
      sub_24162B7D8();
      sub_241631D38();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v30);
      id v63 = *(id *)(v3 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34CycleFactorsNoneCollectionViewCell_label);
      uint64_t v64 = (void *)sub_241631CC8();
      objc_msgSend(v63, sel_setText_, v64);
      swift_bridgeObjectRelease();

      break;
  }
  return v3;
}

id sub_241225F44()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CycleFactorsDaySummaryCollectionViewSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_241226070()
{
  return type metadata accessor for CycleFactorsDaySummaryCollectionViewSource();
}

uint64_t type metadata accessor for CycleFactorsDaySummaryCollectionViewSource()
{
  uint64_t result = qword_268CFB2A8;
  if (!qword_268CFB2A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2412260C4()
{
  uint64_t result = type metadata accessor for CycleDay();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_24162BA08();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_2412261C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_241226208(uint64_t a1)
{
  uint64_t v3 = v1;
  unint64_t result = sub_24162BAC8();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42CycleFactorsDaySummaryCollectionViewSource_rows);
  if (result >= *(void *)(v6 + 16))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  unsigned int v7 = *(unsigned __int8 *)(v6 + result + 32);
  if (v7 < 2)
  {
    unint64_t result = MEMORY[0x245621790](v3 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42CycleFactorsDaySummaryCollectionViewSource_delegate);
    if (!result) {
      return result;
    }
    unint64_t result = sub_24162BAC8();
    unint64_t v2 = result;
    a1 = *(void *)(v3
                   + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42CycleFactorsDaySummaryCollectionViewSource_cycleFactors);
    if ((a1 & 0xC000000000000001) == 0)
    {
      if ((result & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (result < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v8 = *(id *)(a1 + 8 * result + 32);
LABEL_9:
        sub_241367F18(v8);

        goto LABEL_13;
      }
      __break(1u);
      return result;
    }
LABEL_19:
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    id v8 = (id)MEMORY[0x245620370](v2, a1);
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  if (v7 != 2) {
    return result;
  }
  unint64_t result = MEMORY[0x245621790](v3 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42CycleFactorsDaySummaryCollectionViewSource_delegate);
  if (!result) {
    return result;
  }
  sub_2414CE5F0();
LABEL_13:

  return swift_unknownObjectRelease();
}

uint64_t sub_24122634C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *sub_2412264E0(void *a1)
{
  uint64_t v2 = sub_24162B718();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24162EFA8();
  uint64_t v38 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v10 = MEMORY[0x270FA5388](v9).n128_u64[0];
  uint64_t v12 = (char *)&v33 - v11;
  if (objc_msgSend(a1, sel_healthDataSource, v10))
  {
    sub_241226CF4();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24163A4F0;
    *(void *)(inited + 32) = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
    *(void *)(inited + 40) = v14;
    swift_getObjectType();
    os_log_type_t v34 = v5;
    uint64_t v36 = v3;
    sub_24162EF48();
    uint64_t v15 = sub_2413985FC();
    uint64_t v35 = v2;
    uint64_t v17 = v16;
    uint64_t v37 = v6;
    uint64_t v18 = *(void (**)(char *, uint64_t))(v38 + 8);
    v18(v12, v6);
    *(void *)(inited + 72) = MEMORY[0x263F8D310];
    *(void *)(inited + 48) = v15;
    *(void *)(inited + 56) = v17;
    *(void *)(inited + 80) = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
    *(void *)(inited + 88) = v19;
    sub_24162EF48();
    uint64_t v20 = v34;
    sub_2415BA568();
    id v21 = sub_241398898();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v20, v35);
    v18(v12, v37);
    *(void *)(inited + 120) = sub_241208894();
    *(void *)(inited + 96) = v21;
    uint64_t v5 = (char *)sub_2414E4810(inited);
    swift_unknownObjectRelease();
  }
  else
  {
    sub_24162EF48();
    uint64_t v22 = sub_24162EF98();
    os_log_type_t v23 = sub_2416322D8();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v37 = v6;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v25 = v38;
      uint64_t v26 = (uint8_t *)v24;
      uint64_t v27 = swift_slowAlloc();
      uint64_t v40 = v27;
      *(_DWORD *)uint64_t v26 = 136446210;
      uint64_t v28 = sub_2416333E8();
      uint64_t v39 = sub_2411B6898(v28, v29, &v40);
      sub_241632C28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v22, v23, "[%{public}s] Tried to create a payload with a dataSource containing nil healthDataSource", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245621640](v27, -1, -1);
      MEMORY[0x245621640](v26, -1, -1);

      uint64_t v30 = *(void (**)(char *, uint64_t))(v25 + 8);
      uint64_t v5 = (char *)(v25 + 8);
      v30(v8, v37);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v38 + 8))(v8, v6);
    }
    sub_241208840();
    swift_allocError();
    void *v31 = 0xD00000000000002BLL;
    v31[1] = 0x800000024165A520;
    swift_willThrow();
  }
  return v5;
}

uint64_t sub_241226A48()
{
  sub_241227208(v0+ OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46SleepingWristTemperatureHelpTileAnalyticsEvent_helpTileConfiguration);

  return swift_deallocClassInstance();
}

uint64_t sub_241226AAC()
{
  return type metadata accessor for SleepingWristTemperatureHelpTileAnalyticsEvent();
}

uint64_t type metadata accessor for SleepingWristTemperatureHelpTileAnalyticsEvent()
{
  uint64_t result = qword_268CFB2B8;
  if (!qword_268CFB2B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241226B00()
{
  uint64_t result = type metadata accessor for SleepingWristTemperatureHelpTileConfiguration(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SleepingWristTemperatureHelpTileAnalyticsEvent.Trigger(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241226C64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SleepingWristTemperatureHelpTileAnalyticsEvent.Trigger()
{
  return &type metadata for SleepingWristTemperatureHelpTileAnalyticsEvent.Trigger;
}

unint64_t sub_241226CA0()
{
  unint64_t result = qword_268CFB2C8;
  if (!qword_268CFB2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB2C8);
  }
  return result;
}

void sub_241226CF4()
{
  if (!qword_268CFAB50)
  {
    sub_241205E70();
    unint64_t v0 = sub_2416331E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFAB50);
    }
  }
}

unint64_t sub_241226D4C()
{
  uint64_t v23 = type metadata accessor for SleepingWristTemperatureHelpTileVariant(0);
  MEMORY[0x270FA5388](v23);
  uint64_t v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_2416319C8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241226CF4();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24163AC10;
  *(void *)(inited + 32) = 0xD000000000000011;
  *(void *)(inited + 40) = 0x800000024165A550;
  uint64_t v22 = v0;
  uint64_t v8 = v0
     + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46SleepingWristTemperatureHelpTileAnalyticsEvent_helpTileConfiguration;
  uint64_t v9 = type metadata accessor for SleepingWristTemperatureHelpTileConfiguration(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v8 + *(int *)(v9 + 20), v3);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v10 == *MEMORY[0x263F09070])
  {
    uint64_t v11 = 0x697463656C6C6F63;
    unint64_t v12 = 0xEE0061746144676ELL;
LABEL_3:
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    goto LABEL_10;
  }
  if (v10 == *MEMORY[0x263F09078])
  {
    unint64_t v12 = 0xE600000000000000;
    uint64_t v11 = 0x617461446F6ELL;
  }
  else if (v10 == *MEMORY[0x263F090C8])
  {
    unint64_t v12 = 0xED0000646579616CLL;
    uint64_t v11 = 0x70736944706D6574;
  }
  else
  {
    if (v10 != *MEMORY[0x263F09080])
    {
      unint64_t v12 = 0xE700000000000000;
      uint64_t v11 = 0x6E776F6E6B6E75;
      goto LABEL_3;
    }
    unint64_t v12 = 0xED00006174614468;
    uint64_t v11 = 0x67756F6E45746F6ELL;
  }
LABEL_10:
  uint64_t v13 = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v11;
  *(void *)(inited + 56) = v12;
  *(void *)(inited + 72) = v13;
  strcpy((char *)(inited + 80), "tipTileShown");
  *(unsigned char *)(inited + 93) = 0;
  *(_WORD *)(inited + 94) = -5120;
  sub_2412271A4(v8, (uint64_t)v2);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = sub_2416319A8();
      (*(void (**)(unsigned char *, uint64_t))(*(void *)(v15 - 8) + 8))(v2, v15);
    }
    unint64_t v16 = 0x697463656C6C6F63;
    uint64_t v17 = v22;
    unint64_t v18 = 0xEE0061746144676ELL;
  }
  else if (*v2)
  {
    uint64_t v17 = v22;
    if (*v2 == 1)
    {
      unint64_t v18 = 0x800000024165A570;
      unint64_t v16 = 0xD000000000000011;
    }
    else
    {
      unint64_t v18 = 0xEF7375636F467065;
      unint64_t v16 = 0x656C537055746573;
    }
  }
  else
  {
    unint64_t v18 = 0xEA00000000007065;
    unint64_t v16 = 0x656C537055746573;
    uint64_t v17 = v22;
  }
  *(void *)(inited + 96) = v16;
  *(void *)(inited + 104) = v18;
  *(void *)(inited + 120) = v13;
  *(void *)(inited + 128) = 0x6E6F69746361;
  *(void *)(inited + 136) = 0xE600000000000000;
  uint64_t v19 = 0x6954646577656976;
  if (*(unsigned char *)(v17
                + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46SleepingWristTemperatureHelpTileAnalyticsEvent_trigger))
    uint64_t v19 = 0x6954646570706174;
  *(void *)(inited + 168) = v13;
  *(void *)(inited + 144) = v19;
  *(void *)(inited + 152) = 0xE900000000000070;
  return sub_2414E4810(inited);
}

uint64_t sub_2412271A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SleepingWristTemperatureHelpTileVariant(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241227208(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SleepingWristTemperatureHelpTileConfiguration(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for MenstrualFlowLoggingCardDataSource()
{
  return self;
}

uint64_t sub_241227288(char a1)
{
  uint64_t v2 = sub_24162B7E8();
  MEMORY[0x270FA5388](v2 - 8);
  id v46 = (char *)v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_241631CA8();
  uint64_t v4 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  unsigned int v6 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v43 - v8;
  id v45 = v6;
  if (a1)
  {
    uint64_t v48 = MEMORY[0x263F8EE78];
    sub_24149DFF0(0, 3, 0);
    uint64_t v27 = 0;
    uint64_t v23 = v48;
    unint64_t v44 = (void (**)(char *, char *, uint64_t))(v4 + 16);
    uint64_t v28 = (void (**)(char *, uint64_t))(v4 + 8);
    do
    {
      if (byte_26F5668B0[v27 + 32])
      {
        if (byte_26F5668B0[v27 + 32] == 1)
        {
          sub_241631C38();
          (*v44)(v6, v9, v47);
          if (qword_26B0131F0 != -1) {
            swift_once();
          }
          id v29 = (id)qword_26B0181A0;
          sub_24162B7D8();
          uint64_t v30 = sub_241631D38();
          uint64_t v32 = v31;
          unint64_t v33 = 0xE600000000000000;
          uint64_t v34 = 0x6D756964656DLL;
        }
        else
        {
          sub_241631C38();
          (*v44)(v6, v9, v47);
          if (qword_26B0131F0 != -1) {
            swift_once();
          }
          id v37 = (id)qword_26B0181A0;
          sub_24162B7D8();
          uint64_t v30 = sub_241631D38();
          uint64_t v32 = v38;
          unint64_t v33 = 0xE500000000000000;
          uint64_t v34 = 0x7976616568;
        }
      }
      else
      {
        sub_241631C38();
        (*v44)(v6, v9, v47);
        if (qword_26B0131F0 != -1) {
          swift_once();
        }
        id v35 = (id)qword_26B0181A0;
        sub_24162B7D8();
        uint64_t v30 = sub_241631D38();
        uint64_t v32 = v36;
        unint64_t v33 = 0xE500000000000000;
        uint64_t v34 = 0x746867696CLL;
      }
      (*v28)(v9, v47);
      uint64_t v48 = v23;
      unint64_t v40 = *(void *)(v23 + 16);
      unint64_t v39 = *(void *)(v23 + 24);
      if (v40 >= v39 >> 1)
      {
        sub_24149DFF0(v39 > 1, v40 + 1, 1);
        uint64_t v23 = v48;
      }
      ++v27;
      *(void *)(v23 + 16) = v40 + 1;
      unint64_t v41 = (void *)(v23 + 32 * v40);
      unsigned char v41[4] = v30;
      v41[5] = v32;
      v41[6] = v34;
      v41[7] = v33;
      unsigned int v6 = v45;
    }
    while (v27 != 3);
  }
  else
  {
    uint64_t v48 = MEMORY[0x263F8EE78];
    sub_24149DFF0(0, 2, 0);
    char v10 = 0;
    uint64_t v11 = 0;
    unint64_t v12 = (void (**)(char *, char *, uint64_t))(v4 + 16);
    uint64_t v13 = (void (**)(char *, uint64_t))(v4 + 8);
    v43[1] = 0x800000024165A5F0;
    unint64_t v44 = v12;
    do
    {
      char v14 = v10;
      if (*((unsigned char *)&unk_26F566888 + v11 + 32))
      {
        sub_241631C38();
        (*v44)(v6, v9, v47);
        if (qword_26B0131F0 != -1) {
          swift_once();
        }
        id v15 = (id)qword_26B0181A0;
        sub_24162B7D8();
        uint64_t v16 = sub_241631D38();
        uint64_t v18 = v17;
        unint64_t v19 = 0xE600000000000000;
        uint64_t v20 = 0x776F6C466F6ELL;
      }
      else
      {
        sub_241631C38();
        (*v44)(v6, v9, v47);
        if (qword_26B0131F0 != -1) {
          swift_once();
        }
        id v21 = (id)qword_26B0181A0;
        sub_24162B7D8();
        uint64_t v16 = sub_241631D38();
        uint64_t v18 = v22;
        unint64_t v19 = 0xE400000000000000;
        uint64_t v20 = 2003790950;
      }
      (*v13)(v9, v47);
      uint64_t v23 = v48;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24149DFF0(0, *(void *)(v23 + 16) + 1, 1);
        uint64_t v23 = v48;
      }
      unint64_t v25 = *(void *)(v23 + 16);
      unint64_t v24 = *(void *)(v23 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_24149DFF0(v24 > 1, v25 + 1, 1);
        uint64_t v23 = v48;
      }
      *(void *)(v23 + 16) = v25 + 1;
      uint64_t v26 = (void *)(v23 + 32 * v25);
      v26[4] = v16;
      v26[5] = v18;
      v26[6] = v20;
      v26[7] = v19;
      char v10 = 1;
      uint64_t v11 = 1u;
      unsigned int v6 = v45;
    }
    while ((v14 & 1) == 0);
  }
  return v23;
}

uint64_t sub_241227940(uint64_t a1)
{
  uint64_t v3 = sub_24162BB18();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241227EB0();
  __n128 v8 = MEMORY[0x270FA5388](v7 - 8);
  char v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin36MultiSelectLoggingCardViewController_checkedIndexPaths;
  uint64_t v27 = a1;
  uint64_t v11 = *(void *)(a1
                  + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin36MultiSelectLoggingCardViewController_checkedIndexPaths);
  if (!*(void *)(v11 + 16))
  {
    *(void *)(v1 + 32) = 0;
LABEL_39:
    uint64_t result = MEMORY[0x245621790](v1 + 16, v8);
    if (result)
    {
      uint64_t v24 = result;
      uint64_t v25 = *(void *)(v1 + 32);
      sub_241588A0C((void *)*MEMORY[0x263F44F80]);
      objc_msgSend(*(id *)(v24 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin33LoggingCardCarouselViewController_mutableDaySummary), sel_setMenstrualFlow_, v25);
      return swift_unknownObjectRelease();
    }
    return result;
  }
  uint64_t v12 = *(void *)(v11 + 56);
  uint64_t v28 = v11 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v29 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v30 = v1;
  uint64_t v32 = v4 + 16;
  unint64_t v33 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  uint64_t v31 = v4 + 48;
  uint64_t v16 = (uint64_t (**)(char *, uint64_t))(v4 + 8);
  uint64_t result = _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  int64_t v18 = 0;
  while (v15)
  {
    unint64_t v19 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    unint64_t v20 = v19 | (v18 << 6);
LABEL_22:
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v10, *(void *)(v11 + 48) + *(void *)(v4 + 72) * v20, v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v10, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1) {
      goto LABEL_38;
    }
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v10, v3);
    uint64_t result = sub_24162BB08();
    if (result)
    {
      if (result != 1)
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
      uint64_t result = sub_24162BAC8();
      if (result)
      {
        if (result == 1)
        {
          uint64_t result = (*v16)(v6, v3);
          *(void *)(v30 + 32) = 4;
        }
        else
        {
          if (result != 2) {
            goto LABEL_44;
          }
          uint64_t result = (*v16)(v6, v3);
          *(void *)(v30 + 32) = 5;
        }
      }
      else
      {
        uint64_t result = (*v16)(v6, v3);
        *(void *)(v30 + 32) = 3;
      }
    }
    else if (*(void *)(*(void *)(v27 + v26) + 16) == 1)
    {
      uint64_t result = sub_24162BAC8();
      if (result)
      {
        if (result != 1) {
          goto LABEL_45;
        }
        uint64_t result = (*v16)(v6, v3);
        *(void *)(v30 + 32) = 1;
      }
      else
      {
        uint64_t result = (*v16)(v6, v3);
        *(void *)(v30 + 32) = 2;
      }
    }
    else
    {
      uint64_t result = (*v16)(v6, v3);
    }
  }
  int64_t v21 = v18 + 1;
  if (__OFADD__(v18, 1)) {
    goto LABEL_43;
  }
  if (v21 >= v29)
  {
LABEL_37:
    (*v33)(v10, 1, 1, v3);
LABEL_38:
    swift_release();
    uint64_t v1 = v30;
    goto LABEL_39;
  }
  unint64_t v22 = *(void *)(v28 + 8 * v21);
  ++v18;
  if (v22) {
    goto LABEL_21;
  }
  int64_t v18 = v21 + 1;
  if (v21 + 1 >= v29) {
    goto LABEL_37;
  }
  unint64_t v22 = *(void *)(v28 + 8 * v18);
  if (v22) {
    goto LABEL_21;
  }
  int64_t v18 = v21 + 2;
  if (v21 + 2 >= v29) {
    goto LABEL_37;
  }
  unint64_t v22 = *(void *)(v28 + 8 * v18);
  if (v22)
  {
LABEL_21:
    unint64_t v15 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v18 << 6);
    goto LABEL_22;
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v29) {
    goto LABEL_37;
  }
  unint64_t v22 = *(void *)(v28 + 8 * v23);
  if (v22)
  {
    int64_t v18 = v23;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v29) {
      goto LABEL_37;
    }
    unint64_t v22 = *(void *)(v28 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_21;
    }
  }
LABEL_46:
  __break(1u);
  return result;
}

BOOL sub_241227DF8(uint64_t a1, uint64_t a2)
{
  return a2 == 1;
}

uint64_t sub_241227E04(uint64_t a1, uint64_t a2)
{
  return sub_241227F08(a2);
}

unint64_t sub_241227E0C(unint64_t result)
{
  if (result > 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v1 = *(void *)(sub_241227288(result != 0) + 16);
    swift_bridgeObjectRelease();
    return v1;
  }
  return result;
}

uint64_t sub_241227E4C()
{
  return 2;
}

unint64_t sub_241227E54()
{
  return sub_241228104();
}

uint64_t sub_241227E60()
{
  return 0;
}

void sub_241227E6C(uint64_t a1, unint64_t a2)
{
  if (a2 > 1) {
    __break(1u);
  }
}

BOOL sub_241227E98(uint64_t a1, unint64_t a2)
{
  if (a2 <= 1) {
    return a2 != 0;
  }
  __break(1u);
  return result;
}

void sub_241227EB0()
{
  if (!qword_26B011D00)
  {
    sub_24162BB18();
    unint64_t v0 = sub_241632C18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B011D00);
    }
  }
}

uint64_t sub_241227F08(uint64_t a1)
{
  uint64_t v2 = sub_24162B7E8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_241631CA8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = &v13[-v8];
  uint64_t v10 = 0;
  if (a1 == 1)
  {
    sub_241631C38();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v6, v9, v3);
    if (qword_26B0131F0 != -1) {
      swift_once();
    }
    id v11 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v10 = sub_241631D38();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v9, v3);
  }
  return v10;
}

unint64_t sub_241228104()
{
  unint64_t result = sub_24162BB08();
  if (result <= 1)
  {
    uint64_t v1 = sub_241227288(result != 0);
    unint64_t result = sub_24162BAC8();
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < *(void *)(v1 + 16))
    {
      uint64_t v2 = *(void *)(v1 + 32 * result + 32);
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      swift_bridgeObjectRelease();
      return v2;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t getEnumTagSinglePayload for MCSampleChangeSet.SampleKind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CycleDeviationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241228300);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CycleDeviationType()
{
  return &type metadata for CycleDeviationType;
}

unint64_t sub_24122833C()
{
  unint64_t result = qword_268CFB2D0;
  if (!qword_268CFB2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB2D0);
  }
  return result;
}

uint64_t sub_241228390(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x263F8EE78];
    if (!v2) {
      return v3;
    }
    uint64_t v12 = MEMORY[0x263F8EE78];
    uint64_t result = sub_24149DE20(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v12;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x245620370](v5, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      BOOL v7 = v6;
      objc_msgSend(v6, sel_code);
      uint64_t v8 = HKMCMenstrualSymptomFromDataTypeCode();

      unint64_t v10 = *(void *)(v12 + 16);
      unint64_t v9 = *(void *)(v12 + 24);
      if (v10 >= v9 >> 1) {
        sub_24149DE20(v9 > 1, v10 + 1, 1);
      }
      ++v5;
      *(void *)(v12 + 16) = v10 + 1;
      uint64_t v11 = v12 + 16 * v10;
      *(void *)(v11 + 32) = v8;
      *(_WORD *)(v11 + 40) = 0;
      if (v2 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_15:
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v2 = sub_241633068();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_2412284FC(uint64_t a1)
{
  uint64_t v3 = sub_24162B7E8();
  MEMORY[0x270FA5388](v3 - 8);
  id v43 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241631CA8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v37 - v10;
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v12)
  {
    uint64_t v37 = v1;
    uint64_t v54 = MEMORY[0x263F8EE78];
    sub_24149DDE8(0, v12, 0);
    uint64_t v14 = v54;
    uint64_t v38 = (void (**)(char *, uint64_t))(v6 + 8);
    unint64_t v39 = (void (**)(char *, char *, uint64_t))(v6 + 16);
    unint64_t v15 = (unsigned __int8 *)(a1 + 41);
    unint64_t v41 = v8;
    uint64_t v42 = v5;
    unint64_t v40 = v11;
    do
    {
      uint64_t v49 = v14;
      int64_t v50 = v12;
      uint64_t v16 = *(void *)(v15 - 9);
      int v46 = *(v15 - 1);
      int v48 = *v15;
      uint64_t v47 = swift_allocObject();
      *(void *)(v47 + 16) = v16;
      sub_241631C38();
      uint64_t v17 = *v39;
      (*v39)(v8, v11, v5);
      if (qword_26B0131F0 != -1) {
        swift_once();
      }
      id v18 = (id)qword_26B0181A0;
      sub_24162B7D8();
      uint64_t v19 = sub_241631D38();
      uint64_t v21 = v20;
      unint64_t v22 = *v38;
      (*v38)(v11, v5);
      sub_2415990B4();
      *(void *)&long long v51 = v19;
      *((void *)&v51 + 1) = v21;
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      sub_241631E08();
      sub_241631E08();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v23 = 0;
      uint64_t v24 = 0;
      uint64_t v44 = *((void *)&v51 + 1);
      uint64_t v45 = v51;
      if (v46)
      {
        uint64_t v25 = v40;
        sub_241631C38();
        uint64_t v26 = v42;
        v17(v41, v25, v42);
        id v27 = (id)qword_26B0181A0;
        sub_24162B7D8();
        uint64_t v23 = sub_241631D38();
        uint64_t v24 = v28;
        v22(v25, v26);
      }
      uint64_t v29 = sub_2415990B4();
      uint64_t v31 = v30;
      uint64_t v14 = v49;
      uint64_t v54 = v49;
      unint64_t v33 = *(void *)(v49 + 16);
      unint64_t v32 = *(void *)(v49 + 24);
      if (v33 >= v32 >> 1)
      {
        sub_24149DDE8(v32 > 1, v33 + 1, 1);
        uint64_t v14 = v54;
      }
      v15 += 16;
      uint64_t v52 = &type metadata for CategoryRow;
      uint64_t v53 = &off_26F56F758;
      uint64_t v34 = swift_allocObject();
      *(void *)&long long v51 = v34;
      uint64_t v35 = v44;
      *(void *)(v34 + 16) = v45;
      *(void *)(v34 + 24) = v35;
      uint64_t v36 = v47;
      *(void *)(v34 + 32) = sub_24122C024;
      *(void *)(v34 + 40) = v36;
      *(void *)(v34 + 48) = v23;
      *(void *)(v34 + 56) = v24;
      *(void *)(v34 + 64) = v29;
      *(void *)(v34 + 72) = v31;
      *(unsigned char *)(v34 + 80) = v48;
      *(void *)(v34 + 88) = 0;
      *(void *)(v34 + 96) = 0;
      *(void *)(v34 + 104) = 0x3FF0000000000000;
      *(void *)(v14 + 16) = v33 + 1;
      sub_2411B6CD4(&v51, v14 + 40 * v33 + 32);
      int64_t v12 = v50 - 1;
      uint64_t v8 = v41;
      uint64_t v5 = v42;
      uint64_t v11 = v40;
    }
    while (v50 != 1);
    return v14;
  }
  return result;
}

uint64_t sub_241228968(unint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, int a8)
{
  uint64_t v9 = v8;
  LODWORD(v89) = a8;
  id v88 = a7;
  id v86 = a6;
  uint64_t v97 = a4;
  uint64_t v103 = a3;
  id v104 = a2;
  int64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24122BEC8(0, (unint64_t *)&unk_26B00F1B0, MEMORY[0x263F090E8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v84 = (char *)v81 - v14;
  uint64_t v15 = sub_24162BA08();
  uint64_t v92 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v102 = (uint64_t)v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v101 = (uint64_t)v81 - v18;
  sub_24122BEC8(0, (unint64_t *)&unk_268D04810, (uint64_t (*)(uint64_t))type metadata accessor for CycleChartsModel, v12);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)v81 - v20;
  char v83 = (void *)sub_241631AC8();
  uint64_t v99 = *(v83 - 1);
  MEMORY[0x270FA5388](v83);
  uint64_t v23 = (char *)v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  unint64_t v98 = (char *)v81 - v25;
  MEMORY[0x270FA5388](v26);
  long long v82 = (char *)v81 - v27;
  MEMORY[0x270FA5388](v28);
  uint64_t v100 = (char *)v81 - v29;
  uint64_t v30 = v9 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin27CycleChartsPDFModelProvider_fertilityChart;
  uint64_t v31 = type metadata accessor for CycleChartsModel();
  uint64_t v32 = *(void *)(v31 - 8);
  unint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56);
  uint64_t v34 = v32 + 56;
  v33(v30, 1, 1, v31);
  unint64_t v95 = v33;
  uint64_t v96 = v31;
  uint64_t v94 = v34;
  v33(v9 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin27CycleChartsPDFModelProvider_symptomsChart, 1, 1, v31);
  long long v35 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)a5;
  *(_OWORD *)(v9 + 32) = v35;
  *(void *)(v9 + 48) = *(void *)(a5 + 32);
  sub_2411FEAA0(a5);
  id v36 = v88;
  sub_2415B6B84(v36, (uint64_t)v105);
  long long v37 = v105[1];
  *(_OWORD *)(v9 + 56) = v105[0];
  *(_OWORD *)(v9 + 72) = v37;
  *(void *)(v9 + 88) = v106;
  *(unsigned char *)(v9 + 96) = (_BYTE)v89;
  if (a1 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t result = sub_241633068();
    uint64_t v38 = result;
  }
  else
  {
    uint64_t v38 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  }
  uint64_t v87 = a5;
  uint64_t v85 = v21;
  uint64_t v93 = v15;
  id v88 = v36;
  unint64_t v91 = a1;
  if (!v38)
  {
    uint64_t v44 = v9;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v40 = (id)MEMORY[0x245620370](0, a1);
    goto LABEL_7;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v40 = *(id *)(a1 + 32);
LABEL_7:
    unint64_t v41 = v40;
    swift_bridgeObjectRelease();
    id v42 = objc_msgSend(v41, sel_lastDayIndex);
    if (!v42)
    {
      id v48 = objc_msgSend(v41, sel_menstruationSegment);
      objc_msgSend(v48, sel_days);

      uint64_t v49 = v23;
      sub_241631A78();
      uint64_t v50 = (uint64_t)v98;
      sub_241631A28();
      uint64_t v51 = v99;
      uint64_t v52 = *(void (**)(char *, void *))(v99 + 8);
      uint64_t v45 = v83;
      v52(v23, v83);
      sub_2416319F8();
      uint64_t v53 = v82;
      sub_241631A38();
      v52(v49, v45);
      v52((char *)v50, v45);
      sub_24122BDDC();
      char v54 = sub_241631BC8();
      uint64_t v47 = *(void (**)(char *, char *, void *))(v51 + 16);
      uint64_t v44 = v9;
      if (v54)
      {
        uint64_t v55 = v100;
        id v56 = v53;
      }
      else
      {
        uint64_t v55 = v100;
        id v56 = v104;
      }
      v47(v55, v56, v45);

      v52(v53, v45);
      uint64_t v46 = v99;
      goto LABEL_15;
    }
    id v43 = v42;
    uint64_t v44 = v9;

LABEL_10:
    uint64_t v45 = v83;
    uint64_t v46 = v99;
    uint64_t v47 = *(void (**)(char *, char *, void *))(v99 + 16);
    v47(v100, v104, v83);
LABEL_15:
    uint64_t v57 = (uint64_t)v98;
    v47(v98, v104, v45);
    v81[1] = v46 + 16;
    uint64_t v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 16);
    uint64_t v59 = v45;
    uint64_t v60 = v93;
    v58(v101, v103, v93);
    uint64_t v89 = v58;
    v58(v102, v97, v60);
    unint64_t v61 = v91;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v90 = v44;
    id v62 = sub_2412292E0();
    uint64_t v63 = (uint64_t)v84;
    v47(v84, v100, v59);
    uint64_t v64 = *(void **)(v46 + 56);
    long long v82 = (char *)(v46 + 56);
    char v83 = v64;
    ((void (*)(uint64_t, void, uint64_t, void *))v64)(v63, 0, 1, v59);
    unint64_t v65 = (unint64_t)v85;
    unint64_t v66 = v61;
    uint64_t v68 = v101;
    uint64_t v67 = v102;
    sub_2413F2768(v66, v57, v101, v102, (uint64_t)v62, v63, 99, 1, (unint64_t)v85, 0.0, 0.0, 0.0, 0.0, 612.0);
    v95(v65, 0, 1, v96);
    uint64_t v69 = v90 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin27CycleChartsPDFModelProvider_fertilityChart;
    swift_beginAccess();
    sub_24122BE34(v65, v69);
    swift_endAccess();
    v47((char *)v57, v104, v59);
    uint64_t v70 = v68;
    uint64_t v71 = v93;
    uint64_t v72 = v89;
    v89(v70, v103, v93);
    uint64_t v73 = v67;
    uint64_t v74 = v97;
    v72(v73, v97, v71);
    uint64_t v75 = sub_24122B504();
    uint64_t v76 = v100;
    v47((char *)v63, v100, v59);
    ((void (*)(uint64_t, void, uint64_t, void *))v83)(v63, 0, 1, v59);
    sub_2413F2768(v91, (uint64_t)v98, v101, v102, (uint64_t)v75, v63, 99, 1, v65, 0.0, 0.0, 0.0, 0.0, 612.0);

    sub_2411FEADC(v87);
    uint64_t v77 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
    v77(v74, v71);
    v77(v103, v71);
    uint64_t v78 = *(void (**)(char *, void *))(v99 + 8);
    v78(v104, v59);
    v78(v76, v59);
    v95(v65, 0, 1, v96);
    uint64_t v79 = v90;
    uint64_t v80 = v90 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin27CycleChartsPDFModelProvider_symptomsChart;
    swift_beginAccess();
    sub_24122BE34(v65, v80);
    swift_endAccess();
    return v79;
  }
  __break(1u);
  return result;
}

void *sub_2412292E0()
{
  uint64_t v301 = *MEMORY[0x263EF8340];
  uint64_t v1 = sub_24162B7E8();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v271 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v279 = sub_241631CA8();
  uint64_t v284 = *(void *)(v279 - 8);
  MEMORY[0x270FA5388](v279);
  v282 = (char *)&v271 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v271 - v6;
  sub_24122BEC8(0, (unint64_t *)&qword_268D03530, (uint64_t (*)(uint64_t))sub_24122BF2C, MEMORY[0x263F8E0F8]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_24163BB30;
  sub_2411F8A48(2, 0, 1, 0, (uint64_t)v290);
  *(void *)(v8 + 56) = &type metadata for CategoryRow;
  *(void *)(v8 + 64) = &off_26F56F758;
  uint64_t v9 = (_OWORD *)swift_allocObject();
  *(void *)(v8 + 32) = v9;
  long long v10 = v290[3];
  void v9[3] = v290[2];
  v9[4] = v10;
  long long v11 = v290[5];
  v9[5] = v290[4];
  v9[6] = v11;
  long long v12 = v290[1];
  v9[1] = v290[0];
  v9[2] = v12;
  sub_2411F8A48(3, 0, 0, 0, (uint64_t)v291);
  *(void *)(v8 + 96) = &type metadata for CategoryRow;
  *(void *)(v8 + 104) = &off_26F56F758;
  uint64_t v13 = (_OWORD *)swift_allocObject();
  *(void *)(v8 + 72) = v13;
  long long v14 = v291[3];
  v13[3] = v291[2];
  v13[4] = v14;
  long long v15 = v291[5];
  v13[5] = v291[4];
  void v13[6] = v15;
  long long v16 = v291[1];
  v13[1] = v291[0];
  void v13[2] = v16;
  sub_2411F8A48(4, 0, 0, 0, (uint64_t)v292);
  *(void *)(v8 + 136) = &type metadata for CategoryRow;
  *(void *)(v8 + 144) = &off_26F56F758;
  uint64_t v17 = (_OWORD *)swift_allocObject();
  *(void *)(v8 + 112) = v17;
  long long v18 = v292[3];
  v17[3] = v292[2];
  void v17[4] = v18;
  long long v19 = v292[5];
  void v17[5] = v292[4];
  void v17[6] = v19;
  long long v20 = v292[1];
  v17[1] = v292[0];
  void v17[2] = v20;
  sub_2411F8A48(5, 0, 0, 1, (uint64_t)v293);
  *(void *)(v8 + 176) = &type metadata for CategoryRow;
  *(void *)(v8 + 184) = &off_26F56F758;
  uint64_t v21 = (_OWORD *)swift_allocObject();
  *(void *)(v8 + 152) = v21;
  long long v22 = v293[3];
  void v21[3] = v293[2];
  v21[4] = v22;
  long long v23 = v293[5];
  v21[5] = v293[4];
  v21[6] = v23;
  long long v24 = v293[1];
  v21[1] = v293[0];
  double v21[2] = v24;
  sub_2411F8FDC((uint64_t)v294);
  *(void *)(v8 + 216) = &type metadata for CategoryRow;
  *(void *)(v8 + 224) = &off_26F56F758;
  uint64_t v25 = (_OWORD *)swift_allocObject();
  *(void *)(v8 + 192) = v25;
  long long v26 = v294[3];
  v25[3] = v294[2];
  void v25[4] = v26;
  long long v27 = v294[5];
  v25[5] = v294[4];
  v25[6] = v27;
  long long v28 = v294[1];
  v25[1] = v294[0];
  v25[2] = v28;
  long long v29 = *(_OWORD *)(v0 + 32);
  v299[0] = *(_OWORD *)(v0 + 16);
  v299[1] = v29;
  uint64_t v300 = *(void *)(v0 + 48);
  sub_24122B24C((uint64_t *)v299, (uint64_t)v295);
  *(void *)(v8 + 256) = &type metadata for QuantityRow;
  *(void *)(v8 + 264) = &off_26F5696C0;
  uint64_t v30 = (_OWORD *)swift_allocObject();
  *(void *)(v8 + 232) = v30;
  long long v31 = v295[5];
  v30[5] = v295[4];
  v30[6] = v31;
  long long v32 = v295[7];
  v30[7] = v295[6];
  v30[8] = v32;
  long long v33 = v295[1];
  v30[1] = v295[0];
  uint64_t v30[2] = v33;
  long long v34 = v295[3];
  v30[3] = v295[2];
  void v30[4] = v34;
  id v286 = (void *)v8;
  if (*(unsigned char *)(v0 + 96) == 1)
  {
    long long v35 = *(_OWORD *)(v0 + 72);
    v297[0] = *(_OWORD *)(v0 + 56);
    v297[1] = v35;
    uint64_t v298 = *(void *)(v0 + 88);
    sub_2414D630C((uint64_t *)v297, (uint64_t)v296);
    id v36 = sub_24158B988((void *)1, 7, 1, (void *)v8);
    long long v288 = &type metadata for QuantityRow;
    uint64_t v289 = &off_26F5696C0;
    long long v37 = (_OWORD *)swift_allocObject();
    *(void *)&long long v287 = v37;
    long long v38 = v296[5];
    v37[5] = v296[4];
    v37[6] = v38;
    long long v39 = v296[7];
    v37[7] = v296[6];
    v37[8] = v39;
    long long v40 = v296[1];
    v37[1] = v296[0];
    v37[2] = v40;
    long long v41 = v296[3];
    v37[3] = v296[2];
    void v37[4] = v41;
    void v36[2] = 7;
    sub_2411B6CD4(&v287, (uint64_t)(v36 + 34));
    id v286 = v36;
  }
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_24163CA70;
  uint64_t v277 = swift_allocObject();
  *(void *)(v277 + 16) = 2;
  uint64_t v43 = sub_2411F80E4(2);
  uint64_t v275 = v44;
  uint64_t v276 = v43;
  sub_241631C38();
  uint64_t v45 = v284;
  uint64_t v46 = v284 + 16;
  uint64_t v47 = v279;
  id v48 = *(void (**)(char *, char *, uint64_t))(v284 + 16);
  v48(v282, v7, v279);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v49 = (id)qword_26B0181A0;
  unint64_t v285 = v3;
  sub_24162B7D8();
  uint64_t v50 = v282;
  uint64_t v51 = sub_241631D38();
  uint64_t v273 = v52;
  uint64_t v274 = v51;
  uint64_t v53 = *(void (**)(char *, uint64_t))(v45 + 8);
  v53(v7, v47);
  v280 = v53;
  sub_241631C38();
  uint64_t v283 = v48;
  v48(v50, v7, v47);
  uint64_t v284 = v45 + 8;
  id v54 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v55 = sub_241631D38();
  uint64_t v56 = v47;
  uint64_t v58 = v57;
  uint64_t v59 = v56;
  v53(v7, v56);
  *(void *)(v42 + 56) = &type metadata for CategoryRow;
  *(void *)(v42 + 64) = &off_26F56F758;
  uint64_t v60 = swift_allocObject();
  *(void *)(v42 + 32) = v60;
  uint64_t v61 = v275;
  *(void *)(v60 + 16) = v276;
  *(void *)(v60 + 24) = v61;
  uint64_t v62 = v277;
  *(void *)(v60 + 32) = sub_24122C08C;
  *(void *)(v60 + 40) = v62;
  uint64_t v63 = v273;
  *(void *)(v60 + 48) = v274;
  *(void *)(v60 + 56) = v63;
  *(void *)(v60 + 64) = v55;
  *(void *)(v60 + 72) = v58;
  *(unsigned char *)(v60 + 80) = 0;
  *(void *)(v60 + 88) = 0;
  *(void *)(v60 + 96) = 0;
  *(void *)(v60 + 104) = 0x3FF0000000000000;
  uint64_t v276 = swift_allocObject();
  *(void *)(v276 + 16) = 1;
  uint64_t v64 = sub_2411F80E4(1);
  uint64_t v274 = v65;
  uint64_t v275 = v64;
  uint64_t v277 = 0xD000000000000026;
  sub_241631C38();
  unint64_t v66 = v283;
  v283(v50, v7, v59);
  id v67 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v68 = sub_241631D38();
  uint64_t v281 = v46;
  uint64_t v70 = v69;
  uint64_t v71 = v59;
  uint64_t v72 = v59;
  uint64_t v73 = v280;
  v280(v7, v71);
  *(void *)(v42 + 96) = &type metadata for CategoryRow;
  *(void *)(v42 + 104) = &off_26F56F758;
  uint64_t v74 = swift_allocObject();
  *(void *)(v42 + 72) = v74;
  uint64_t v75 = v274;
  *(void *)(v74 + 16) = v275;
  *(void *)(v74 + 24) = v75;
  uint64_t v76 = v276;
  *(void *)(v74 + 32) = sub_24122C254;
  *(void *)(v74 + 40) = v76;
  *(void *)(v74 + 48) = 0;
  *(void *)(v74 + 56) = 0;
  *(void *)(v74 + 64) = v68;
  *(void *)(v74 + 72) = v70;
  *(unsigned char *)(v74 + 80) = 0;
  *(void *)(v74 + 88) = 0;
  *(void *)(v74 + 96) = 0;
  *(void *)(v74 + 104) = 0x3FF0000000000000;
  uint64_t v276 = swift_allocObject();
  *(void *)(v276 + 16) = 3;
  uint64_t v77 = sub_2411F80E4(3);
  uint64_t v274 = v78;
  uint64_t v275 = v77;
  sub_241631C38();
  v66(v282, v7, v72);
  id v79 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v80 = sub_241631D38();
  uint64_t v82 = v81;
  v73(v7, v72);
  *(void *)(v42 + 136) = &type metadata for CategoryRow;
  *(void *)(v42 + 144) = &off_26F56F758;
  uint64_t v83 = swift_allocObject();
  *(void *)(v42 + 112) = v83;
  uint64_t v84 = v274;
  *(void *)(v83 + 16) = v275;
  *(void *)(v83 + 24) = v84;
  uint64_t v85 = v276;
  *(void *)(v83 + 32) = sub_24122C254;
  *(void *)(v83 + 40) = v85;
  *(void *)(v83 + 48) = 0;
  *(void *)(v83 + 56) = 0;
  *(void *)(v83 + 64) = v80;
  *(void *)(v83 + 72) = v82;
  *(unsigned char *)(v83 + 80) = 1;
  *(void *)(v83 + 88) = 0;
  *(void *)(v83 + 96) = 0;
  *(void *)(v83 + 104) = 0x3FF0000000000000;
  uint64_t v276 = swift_allocObject();
  *(void *)(v276 + 16) = 5;
  uint64_t v86 = sub_2411F83BC(5);
  uint64_t v274 = v87;
  uint64_t v275 = v86;
  sub_241631C38();
  id v88 = v282;
  uint64_t v89 = v72;
  uint64_t v90 = v283;
  v283(v282, v7, v72);
  id v91 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v92 = sub_241631D38();
  uint64_t v272 = v93;
  uint64_t v273 = v92;
  uint64_t v94 = v72;
  unint64_t v95 = v280;
  v280(v7, v94);
  sub_241631C38();
  v90(v88, v7, v89);
  id v96 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v97 = sub_241631D38();
  uint64_t v99 = v98;
  v95(v7, v89);
  uint64_t v100 = v95;
  *(void *)(v42 + 176) = &type metadata for CategoryRow;
  *(void *)(v42 + 184) = &off_26F56F758;
  uint64_t v101 = swift_allocObject();
  *(void *)(v42 + 152) = v101;
  uint64_t v102 = v274;
  *(void *)(v101 + 16) = v275;
  *(void *)(v101 + 24) = v102;
  uint64_t v103 = v276;
  *(void *)(v101 + 32) = sub_24122C0C4;
  *(void *)(v101 + 40) = v103;
  uint64_t v104 = v272;
  *(void *)(v101 + 48) = v273;
  *(void *)(v101 + 56) = v104;
  *(void *)(v101 + 64) = v97;
  *(void *)(v101 + 72) = v99;
  *(unsigned char *)(v101 + 80) = 0;
  *(void *)(v101 + 88) = 0;
  *(void *)(v101 + 96) = 0;
  *(void *)(v101 + 104) = 0x3FF0000000000000;
  uint64_t v105 = swift_allocObject();
  *(void *)(v105 + 16) = 4;
  uint64_t v106 = sub_2411F83BC(4);
  uint64_t v276 = v107;
  sub_241631C38();
  v283(v88, v7, v89);
  id v108 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v109 = sub_241631D38();
  uint64_t v111 = v110;
  v100(v7, v89);
  *(void *)(v42 + 216) = &type metadata for CategoryRow;
  *(void *)(v42 + 224) = &off_26F56F758;
  uint64_t v112 = swift_allocObject();
  *(void *)(v42 + 192) = v112;
  uint64_t v113 = v276;
  *(void *)(v112 + 16) = v106;
  *(void *)(v112 + 24) = v113;
  *(void *)(v112 + 32) = sub_24122C258;
  *(void *)(v112 + 40) = v105;
  *(void *)(v112 + 48) = 0;
  *(void *)(v112 + 56) = 0;
  *(void *)(v112 + 64) = v109;
  *(void *)(v112 + 72) = v111;
  *(unsigned char *)(v112 + 80) = 0;
  *(void *)(v112 + 88) = 0;
  *(void *)(v112 + 96) = 0;
  *(void *)(v112 + 104) = 0x3FF0000000000000;
  uint64_t v276 = swift_allocObject();
  *(void *)(v276 + 16) = 2;
  uint64_t v114 = sub_2411F83BC(2);
  uint64_t v274 = v115;
  uint64_t v275 = v114;
  sub_241631C38();
  uint64_t v116 = v283;
  v283(v282, v7, v89);
  id v117 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v118 = sub_241631D38();
  uint64_t v120 = v119;
  uint64_t v121 = v280;
  v280(v7, v89);
  *(void *)(v42 + 256) = &type metadata for CategoryRow;
  *(void *)(v42 + 264) = &off_26F56F758;
  uint64_t v278 = (void *)v42;
  uint64_t v122 = swift_allocObject();
  *(void *)(v42 + 232) = v122;
  uint64_t v123 = v274;
  *(void *)(v122 + 16) = v275;
  *(void *)(v122 + 24) = v123;
  uint64_t v124 = v276;
  *(void *)(v122 + 32) = sub_24122C258;
  *(void *)(v122 + 40) = v124;
  *(void *)(v122 + 48) = 0;
  *(void *)(v122 + 56) = 0;
  *(void *)(v122 + 64) = v118;
  *(void *)(v122 + 72) = v120;
  *(unsigned char *)(v122 + 80) = 0;
  *(void *)(v122 + 88) = 0;
  *(void *)(v122 + 96) = 0;
  *(void *)(v122 + 104) = 0x3FF0000000000000;
  uint64_t v125 = swift_allocObject();
  *(void *)(v125 + 16) = 3;
  uint64_t v126 = sub_2411F83BC(3);
  uint64_t v275 = v127;
  uint64_t v276 = v126;
  sub_241631C38();
  uint64_t v128 = v282;
  uint64_t v129 = v279;
  v116(v282, v7, v279);
  id v130 = (id)qword_26B0181A0;
  sub_24162B7D8();
  long long v131 = v128;
  uint64_t v132 = sub_241631D38();
  uint64_t v134 = v133;
  uint64_t v135 = v129;
  v121(v7, v129);
  long long v136 = v278;
  v278[37] = &type metadata for CategoryRow;
  v136[38] = &off_26F56F758;
  uint64_t v137 = swift_allocObject();
  v136[34] = v137;
  uint64_t v138 = v275;
  *(void *)(v137 + 16) = v276;
  *(void *)(v137 + 24) = v138;
  *(void *)(v137 + 32) = sub_24122C258;
  *(void *)(v137 + 40) = v125;
  *(void *)(v137 + 48) = 0;
  *(void *)(v137 + 56) = 0;
  *(void *)(v137 + 64) = v132;
  *(void *)(v137 + 72) = v134;
  *(unsigned char *)(v137 + 80) = 0;
  *(void *)(v137 + 88) = 0;
  *(void *)(v137 + 96) = 0;
  *(void *)(v137 + 104) = 0x3FF0000000000000;
  uint64_t v139 = swift_allocObject();
  *(void *)(v139 + 16) = 1;
  uint64_t v140 = sub_2411F83BC(1);
  uint64_t v275 = v141;
  uint64_t v276 = v140;
  sub_241631C38();
  v283(v131, v7, v135);
  id v142 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v143 = sub_241631D38();
  uint64_t v145 = v144;
  v121(v7, v135);
  v136[42] = &type metadata for CategoryRow;
  v136[43] = &off_26F56F758;
  uint64_t v146 = swift_allocObject();
  v136[39] = v146;
  uint64_t v147 = v275;
  *(void *)(v146 + 16) = v276;
  *(void *)(v146 + 24) = v147;
  *(void *)(v146 + 32) = sub_24122C258;
  *(void *)(v146 + 40) = v139;
  *(void *)(v146 + 48) = 0;
  *(void *)(v146 + 56) = 0;
  *(void *)(v146 + 64) = v143;
  *(void *)(v146 + 72) = v145;
  *(unsigned char *)(v146 + 80) = 1;
  *(void *)(v146 + 88) = 0;
  *(void *)(v146 + 96) = 0;
  *(void *)(v146 + 104) = 0x3FF0000000000000;
  uint64_t v275 = swift_allocObject();
  *(void *)(v275 + 16) = 4;
  uint64_t v148 = sub_2411F811C(4);
  uint64_t v273 = v149;
  uint64_t v274 = v148;
  uint64_t v276 = 0xD000000000000022;
  sub_241631C38();
  uint64_t v150 = v282;
  os_log_type_t v151 = v283;
  uint64_t v152 = v279;
  v283(v282, v7, v279);
  id v153 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v154 = sub_241631D38();
  uint64_t v271 = v155;
  uint64_t v272 = v154;
  uint64_t v156 = v280;
  v280(v7, v152);
  sub_241631C38();
  v151(v150, v7, v152);
  id v157 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v158 = sub_241631D38();
  uint64_t v160 = v159;
  v156(v7, v152);
  os_log_type_t v161 = v278;
  v278[47] = &type metadata for CategoryRow;
  v161[48] = &off_26F56F758;
  uint64_t v162 = swift_allocObject();
  v161[44] = v162;
  uint64_t v163 = v273;
  *(void *)(v162 + 16) = v274;
  *(void *)(v162 + 24) = v163;
  uint64_t v164 = v275;
  *(void *)(v162 + 32) = sub_24122C11C;
  *(void *)(v162 + 40) = v164;
  uint64_t v165 = v271;
  *(void *)(v162 + 48) = v272;
  *(void *)(v162 + 56) = v165;
  *(void *)(v162 + 64) = v158;
  *(void *)(v162 + 72) = v160;
  *(unsigned char *)(v162 + 80) = 0;
  *(void *)(v162 + 88) = 0;
  *(void *)(v162 + 96) = 0;
  *(void *)(v162 + 104) = 0x3FF0000000000000;
  uint64_t v166 = swift_allocObject();
  *(void *)(v166 + 16) = 3;
  uint64_t v167 = sub_2411F811C(3);
  uint64_t v274 = v168;
  uint64_t v275 = v167;
  sub_241631C38();
  uint64_t v169 = v152;
  uint64_t v170 = v283;
  v283(v150, v7, v152);
  id v171 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v172 = sub_241631D38();
  uint64_t v174 = v173;
  uint64_t v175 = v280;
  v280(v7, v169);
  v161[52] = &type metadata for CategoryRow;
  v161[53] = &off_26F56F758;
  uint64_t v176 = swift_allocObject();
  v161[49] = v176;
  uint64_t v177 = v274;
  *(void *)(v176 + 16) = v275;
  *(void *)(v176 + 24) = v177;
  *(void *)(v176 + 32) = sub_24122C25C;
  *(void *)(v176 + 40) = v166;
  *(void *)(v176 + 48) = 0;
  *(void *)(v176 + 56) = 0;
  *(void *)(v176 + 64) = v172;
  *(void *)(v176 + 72) = v174;
  *(unsigned char *)(v176 + 80) = 0;
  *(void *)(v176 + 88) = 0;
  *(void *)(v176 + 96) = 0;
  *(void *)(v176 + 104) = 0x3FF0000000000000;
  uint64_t v275 = swift_allocObject();
  *(void *)(v275 + 16) = 2;
  uint64_t v178 = sub_2411F811C(2);
  uint64_t v273 = v179;
  uint64_t v274 = v178;
  sub_241631C38();
  v170(v150, v7, v169);
  id v180 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v181 = sub_241631D38();
  uint64_t v183 = v182;
  v175(v7, v169);
  v161[57] = &type metadata for CategoryRow;
  v161[58] = &off_26F56F758;
  uint64_t v184 = swift_allocObject();
  v161[54] = v184;
  uint64_t v185 = v273;
  *(void *)(v184 + 16) = v274;
  *(void *)(v184 + 24) = v185;
  uint64_t v186 = v275;
  *(void *)(v184 + 32) = sub_24122C25C;
  *(void *)(v184 + 40) = v186;
  *(void *)(v184 + 48) = 0;
  *(void *)(v184 + 56) = 0;
  *(void *)(v184 + 64) = v181;
  *(void *)(v184 + 72) = v183;
  *(unsigned char *)(v184 + 80) = 0;
  *(void *)(v184 + 88) = 0;
  *(void *)(v184 + 96) = 0;
  *(void *)(v184 + 104) = 0x3FF0000000000000;
  uint64_t v187 = swift_allocObject();
  *(void *)(v187 + 16) = 1;
  uint64_t v188 = sub_2411F811C(1);
  uint64_t v274 = v189;
  uint64_t v275 = v188;
  sub_241631C38();
  v283(v282, v7, v169);
  id v190 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v191 = sub_241631D38();
  uint64_t v193 = v192;
  v280(v7, v169);
  v161[62] = &type metadata for CategoryRow;
  v161[63] = &off_26F56F758;
  uint64_t v194 = swift_allocObject();
  v161[59] = v194;
  uint64_t v195 = v274;
  *(void *)(v194 + 16) = v275;
  *(void *)(v194 + 24) = v195;
  *(void *)(v194 + 32) = sub_24122C25C;
  *(void *)(v194 + 40) = v187;
  *(void *)(v194 + 48) = 0;
  *(void *)(v194 + 56) = 0;
  *(void *)(v194 + 64) = v191;
  *(void *)(v194 + 72) = v193;
  *(unsigned char *)(v194 + 80) = 1;
  *(void *)(v194 + 88) = 0;
  *(void *)(v194 + 96) = 0;
  *(void *)(v194 + 104) = 0x3FF0000000000000;
  uint64_t v275 = swift_allocObject();
  *(void *)(v275 + 16) = 3;
  uint64_t v196 = sub_2411F83EC(3);
  uint64_t v273 = v197;
  uint64_t v274 = v196;
  sub_241631C38();
  uint64_t v198 = v282;
  uint64_t v199 = v283;
  v283(v282, v7, v169);
  id v200 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v201 = sub_241631D38();
  uint64_t v271 = v202;
  uint64_t v272 = v201;
  v203 = v280;
  v280(v7, v169);
  sub_241631C38();
  v199(v198, v7, v169);
  id v204 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v205 = sub_241631D38();
  uint64_t v207 = v206;
  uint64_t v208 = v169;
  v203(v7, v169);
  uint64_t v209 = v278;
  v278[67] = &type metadata for CategoryRow;
  v209[68] = &off_26F56F758;
  uint64_t v210 = swift_allocObject();
  v209[64] = v210;
  uint64_t v211 = v273;
  *(void *)(v210 + 16) = v274;
  *(void *)(v210 + 24) = v211;
  uint64_t v212 = v275;
  *(void *)(v210 + 32) = sub_24122C164;
  *(void *)(v210 + 40) = v212;
  uint64_t v213 = v271;
  *(void *)(v210 + 48) = v272;
  *(void *)(v210 + 56) = v213;
  *(void *)(v210 + 64) = v205;
  *(void *)(v210 + 72) = v207;
  *(unsigned char *)(v210 + 80) = 0;
  *(void *)(v210 + 88) = 0;
  *(void *)(v210 + 96) = 0;
  *(void *)(v210 + 104) = 0x3FF0000000000000;
  uint64_t v275 = swift_allocObject();
  *(void *)(v275 + 16) = 2;
  uint64_t v214 = sub_2411F83EC(2);
  uint64_t v273 = v215;
  uint64_t v274 = v214;
  sub_241631C38();
  uint64_t v216 = v283;
  v283(v282, v7, v169);
  id v217 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v218 = sub_241631D38();
  uint64_t v220 = v219;
  uint64_t v221 = v280;
  v280(v7, v208);
  v209[72] = &type metadata for CategoryRow;
  v209[73] = &off_26F56F758;
  uint64_t v222 = swift_allocObject();
  v209[69] = v222;
  uint64_t v223 = v273;
  *(void *)(v222 + 16) = v274;
  *(void *)(v222 + 24) = v223;
  uint64_t v224 = v275;
  *(void *)(v222 + 32) = sub_24122C260;
  *(void *)(v222 + 40) = v224;
  *(void *)(v222 + 48) = 0;
  *(void *)(v222 + 56) = 0;
  *(void *)(v222 + 64) = v218;
  *(void *)(v222 + 72) = v220;
  *(unsigned char *)(v222 + 80) = 0;
  *(void *)(v222 + 88) = 0;
  *(void *)(v222 + 96) = 0;
  *(void *)(v222 + 104) = 0x3FF0000000000000;
  uint64_t v225 = swift_allocObject();
  *(void *)(v225 + 16) = 1;
  uint64_t v226 = sub_2411F83EC(1);
  uint64_t v274 = v227;
  uint64_t v275 = v226;
  sub_241631C38();
  uint64_t v228 = v282;
  uint64_t v229 = v279;
  v216(v282, v7, v279);
  id v230 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v231 = sub_241631D38();
  uint64_t v233 = v232;
  v221(v7, v229);
  v209[77] = &type metadata for CategoryRow;
  v209[78] = &off_26F56F758;
  uint64_t v234 = swift_allocObject();
  v209[74] = v234;
  uint64_t v235 = v274;
  *(void *)(v234 + 16) = v275;
  *(void *)(v234 + 24) = v235;
  *(void *)(v234 + 32) = sub_24122C260;
  *(void *)(v234 + 40) = v225;
  *(void *)(v234 + 48) = 0;
  *(void *)(v234 + 56) = 0;
  *(void *)(v234 + 64) = v231;
  *(void *)(v234 + 72) = v233;
  *(unsigned char *)(v234 + 80) = 1;
  *(void *)(v234 + 88) = 0;
  *(void *)(v234 + 96) = 0;
  *(void *)(v234 + 104) = 0x3FF0000000000000;
  uint64_t v277 = swift_allocObject();
  *(void *)(v277 + 16) = 3;
  uint64_t v236 = sub_2411F838C(3);
  uint64_t v274 = v237;
  uint64_t v275 = v236;
  sub_241631C38();
  v238 = v283;
  v283(v228, v7, v229);
  id v239 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v240 = sub_241631D38();
  uint64_t v272 = v241;
  uint64_t v273 = v240;
  uint64_t v242 = v280;
  v280(v7, v229);
  uint64_t v276 = 0xD00000000000001ELL;
  sub_241631C38();
  v238(v228, v7, v229);
  id v243 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v244 = sub_241631D38();
  uint64_t v246 = v245;
  v242(v7, v229);
  uint64_t v247 = v278;
  v278[82] = &type metadata for CategoryRow;
  v247[83] = &off_26F56F758;
  uint64_t v248 = swift_allocObject();
  v247[79] = v248;
  uint64_t v249 = v274;
  *(void *)(v248 + 16) = v275;
  *(void *)(v248 + 24) = v249;
  uint64_t v250 = v277;
  *(void *)(v248 + 32) = sub_24122C19C;
  *(void *)(v248 + 40) = v250;
  uint64_t v251 = v272;
  *(void *)(v248 + 48) = v273;
  *(void *)(v248 + 56) = v251;
  *(void *)(v248 + 64) = v244;
  *(void *)(v248 + 72) = v246;
  *(unsigned char *)(v248 + 80) = 0;
  *(void *)(v248 + 88) = 0;
  *(void *)(v248 + 96) = 0;
  *(void *)(v248 + 104) = 0x3FF0000000000000;
  uint64_t v252 = swift_allocObject();
  *(void *)(v252 + 16) = 2;
  uint64_t v277 = sub_2411F838C(2);
  uint64_t v275 = v253;
  sub_241631C38();
  uint64_t v254 = v229;
  v238(v228, v7, v229);
  id v255 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v256 = sub_241631D38();
  uint64_t v258 = v257;
  v280(v7, v254);
  v247[87] = &type metadata for CategoryRow;
  v247[88] = &off_26F56F758;
  uint64_t v259 = swift_allocObject();
  v247[84] = v259;
  uint64_t v260 = v275;
  *(void *)(v259 + 16) = v277;
  *(void *)(v259 + 24) = v260;
  *(void *)(v259 + 32) = sub_24122C264;
  *(void *)(v259 + 40) = v252;
  *(void *)(v259 + 48) = 0;
  *(void *)(v259 + 56) = 0;
  *(void *)(v259 + 64) = v256;
  *(void *)(v259 + 72) = v258;
  *(unsigned char *)(v259 + 80) = 0;
  *(void *)(v259 + 88) = 0;
  *(void *)(v259 + 96) = 0;
  *(void *)(v259 + 104) = 0x3FF0000000000000;
  uint64_t v261 = swift_allocObject();
  *(void *)(v261 + 16) = 1;
  uint64_t v262 = sub_2411F838C(1);
  uint64_t v264 = v263;
  sub_241631C38();
  v283(v228, v7, v254);
  id v265 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v266 = sub_241631D38();
  uint64_t v268 = v267;
  v280(v7, v254);
  v247[92] = &type metadata for CategoryRow;
  v247[93] = &off_26F56F758;
  uint64_t v269 = swift_allocObject();
  v247[89] = v269;
  *(void *)(v269 + 16) = v262;
  *(void *)(v269 + 24) = v264;
  *(void *)(v269 + 32) = sub_24122C264;
  *(void *)(v269 + 40) = v261;
  *(void *)(v269 + 48) = 0;
  *(void *)(v269 + 56) = 0;
  *(void *)(v269 + 64) = v266;
  *(void *)(v269 + 72) = v268;
  *(unsigned char *)(v269 + 80) = 1;
  *(void *)(v269 + 88) = 0;
  *(void *)(v269 + 96) = 0;
  *(void *)(v269 + 104) = 0x3FF0000000000000;
  sub_241496C7C((uint64_t)v247);
  return v286;
}

uint64_t sub_24122B09C()
{
  sub_24122C1C8(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin27CycleChartsPDFModelProvider_fertilityChart);
  sub_24122C1C8(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin27CycleChartsPDFModelProvider_symptomsChart);

  return swift_deallocClassInstance();
}

uint64_t sub_24122B120()
{
  return type metadata accessor for CycleChartsPDFModelProvider();
}

uint64_t type metadata accessor for CycleChartsPDFModelProvider()
{
  uint64_t result = qword_268CFB2D8;
  if (!qword_268CFB2D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_24122B174()
{
  sub_24122BEC8(319, (unint64_t *)&unk_268D04810, (uint64_t (*)(uint64_t))type metadata accessor for CycleChartsModel, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

double sub_24122B24C@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v26 = a1[1];
  uint64_t v27 = v3;
  int v25 = *((unsigned __int8 *)a1 + 16);
  uint64_t v4 = a1[3];
  uint64_t v5 = (void *)a1[4];
  uint64_t v6 = sub_24162B7E8();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = sub_241631CA8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  long long v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = &v24[-v12];
  id v14 = objc_msgSend(self, sel_hkmc_supplementaryDataColor);
  uint64_t KeyPath = swift_getKeyPath();
  id v16 = v5;
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v10, v13, v7);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v17 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v18 = sub_241631D38();
  uint64_t v20 = v19;
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v13, v7);
  char v21 = v25 & 1;
  uint64_t v22 = v27;
  *(void *)a2 = v14;
  *(void *)(a2 + 8) = v22;
  *(void *)(a2 + 16) = v26;
  *(unsigned char *)(a2 + 24) = v21;
  *(_DWORD *)(a2 + 25) = *(_DWORD *)v28;
  *(_DWORD *)(a2 + 28) = *(_DWORD *)&v28[3];
  *(void *)(a2 + 32) = v4;
  *(void *)(a2 + 40) = v16;
  *(void *)(a2 + 48) = KeyPath;
  *(void *)(a2 + 56) = v18;
  *(void *)(a2 + 64) = v20;
  double result = 8.0;
  *(_OWORD *)(a2 + 72) = xmmword_24163CA80;
  *(_OWORD *)(a2 + 88) = xmmword_24163CA80;
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = 0;
  *(void *)(a2 + 120) = 0x404F000000000000;
  return result;
}

void *sub_24122B504()
{
  uint64_t v82 = *MEMORY[0x263EF8340];
  sub_24122BEC8(0, (unint64_t *)&qword_268D03530, (uint64_t (*)(uint64_t))sub_24122BF2C, MEMORY[0x263F8E0F8]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_24163CA90;
  sub_2411F8A48(2, 0, 1, 0, (uint64_t)v69);
  *(void *)(v0 + 56) = &type metadata for CategoryRow;
  *(void *)(v0 + 64) = &off_26F56F758;
  uint64_t v1 = (_OWORD *)swift_allocObject();
  *(void *)(v0 + 32) = v1;
  long long v2 = v69[3];
  v1[3] = v69[2];
  v1[4] = v2;
  long long v3 = v69[5];
  v1[5] = v69[4];
  v1[6] = v3;
  long long v4 = v69[1];
  v1[1] = v69[0];
  v1[2] = v4;
  sub_2411F8A48(3, 0, 0, 0, (uint64_t)v70);
  *(void *)(v0 + 96) = &type metadata for CategoryRow;
  *(void *)(v0 + 104) = &off_26F56F758;
  uint64_t v5 = (_OWORD *)swift_allocObject();
  *(void *)(v0 + 72) = v5;
  long long v6 = v70[3];
  v5[3] = v70[2];
  v5[4] = v6;
  long long v7 = v70[5];
  uint64_t v5[5] = v70[4];
  v5[6] = v7;
  long long v8 = v70[1];
  v5[1] = v70[0];
  uint64_t v5[2] = v8;
  sub_2411F8A48(4, 0, 0, 0, (uint64_t)v71);
  *(void *)(v0 + 136) = &type metadata for CategoryRow;
  *(void *)(v0 + 144) = &off_26F56F758;
  uint64_t v9 = (_OWORD *)swift_allocObject();
  *(void *)(v0 + 112) = v9;
  long long v10 = v71[3];
  void v9[3] = v71[2];
  v9[4] = v10;
  long long v11 = v71[5];
  v9[5] = v71[4];
  v9[6] = v11;
  long long v12 = v71[1];
  v9[1] = v71[0];
  v9[2] = v12;
  sub_2411F8A48(5, 0, 0, 1, (uint64_t)v72);
  *(void *)(v0 + 176) = &type metadata for CategoryRow;
  *(void *)(v0 + 184) = &off_26F56F758;
  uint64_t v13 = (_OWORD *)swift_allocObject();
  *(void *)(v0 + 152) = v13;
  long long v14 = v72[3];
  v13[3] = v72[2];
  v13[4] = v14;
  long long v15 = v72[5];
  v13[5] = v72[4];
  void v13[6] = v15;
  long long v16 = v72[1];
  v13[1] = v72[0];
  void v13[2] = v16;
  uint64_t v64 = (void *)v0;
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_24163CAA0;
  sub_2411F8A48(2, 1, 1, 0, (uint64_t)v73);
  *(void *)(v17 + 56) = &type metadata for CategoryRow;
  *(void *)(v17 + 64) = &off_26F56F758;
  uint64_t v18 = (_OWORD *)swift_allocObject();
  *(void *)(v17 + 32) = v18;
  long long v19 = v73[3];
  v18[3] = v73[2];
  void v18[4] = v19;
  long long v20 = v73[5];
  v18[5] = v73[4];
  v18[6] = v20;
  long long v21 = v73[1];
  v18[1] = v73[0];
  void v18[2] = v21;
  sub_2411F8A48(3, 1, 0, 0, (uint64_t)v74);
  *(void *)(v17 + 96) = &type metadata for CategoryRow;
  *(void *)(v17 + 104) = &off_26F56F758;
  uint64_t v22 = (_OWORD *)swift_allocObject();
  *(void *)(v17 + 72) = v22;
  long long v23 = v74[3];
  v22[3] = v74[2];
  v22[4] = v23;
  long long v24 = v74[5];
  v22[5] = v74[4];
  v22[6] = v24;
  long long v25 = v74[1];
  v22[1] = v74[0];
  uint64_t v22[2] = v25;
  sub_2411F8A48(4, 1, 0, 0, (uint64_t)v75);
  *(void *)(v17 + 136) = &type metadata for CategoryRow;
  *(void *)(v17 + 144) = &off_26F56F758;
  uint64_t v26 = (_OWORD *)swift_allocObject();
  *(void *)(v17 + 112) = v26;
  long long v27 = v75[3];
  v26[3] = v75[2];
  v26[4] = v27;
  long long v28 = v75[5];
  v26[5] = v75[4];
  v26[6] = v28;
  long long v29 = v75[1];
  v26[1] = v75[0];
  void v26[2] = v29;
  sub_2411F8A48(5, 1, 0, 1, (uint64_t)v76);
  *(void *)(v17 + 176) = &type metadata for CategoryRow;
  *(void *)(v17 + 184) = &off_26F56F758;
  uint64_t v30 = (_OWORD *)swift_allocObject();
  *(void *)(v17 + 152) = v30;
  long long v31 = v76[3];
  v30[3] = v76[2];
  void v30[4] = v31;
  long long v32 = v76[5];
  v30[5] = v76[4];
  v30[6] = v32;
  long long v33 = v76[1];
  v30[1] = v76[0];
  uint64_t v30[2] = v33;
  sub_2411F8A48(2, 2, 1, 0, (uint64_t)v77);
  *(void *)(v17 + 216) = &type metadata for CategoryRow;
  *(void *)(v17 + 224) = &off_26F56F758;
  long long v34 = (_OWORD *)swift_allocObject();
  *(void *)(v17 + 192) = v34;
  long long v35 = v77[3];
  v34[3] = v77[2];
  v34[4] = v35;
  long long v36 = v77[5];
  v34[5] = v77[4];
  v34[6] = v36;
  long long v37 = v77[1];
  v34[1] = v77[0];
  v34[2] = v37;
  sub_2411F8A48(3, 2, 0, 0, (uint64_t)v78);
  *(void *)(v17 + 256) = &type metadata for CategoryRow;
  *(void *)(v17 + 264) = &off_26F56F758;
  long long v38 = (_OWORD *)swift_allocObject();
  *(void *)(v17 + 232) = v38;
  long long v39 = v78[3];
  v38[3] = v78[2];
  v38[4] = v39;
  long long v40 = v78[5];
  v38[5] = v78[4];
  v38[6] = v40;
  long long v41 = v78[1];
  v38[1] = v78[0];
  v38[2] = v41;
  sub_2411F8A48(4, 2, 0, 0, (uint64_t)v79);
  *(void *)(v17 + 296) = &type metadata for CategoryRow;
  *(void *)(v17 + 304) = &off_26F56F758;
  uint64_t v42 = (_OWORD *)swift_allocObject();
  *(void *)(v17 + 272) = v42;
  long long v43 = v79[3];
  v42[3] = v79[2];
  void v42[4] = v43;
  long long v44 = v79[5];
  v42[5] = v79[4];
  v42[6] = v44;
  long long v45 = v79[1];
  v42[1] = v79[0];
  v42[2] = v45;
  sub_2411F8A48(5, 2, 0, 1, (uint64_t)v80);
  *(void *)(v17 + 336) = &type metadata for CategoryRow;
  *(void *)(v17 + 344) = &off_26F56F758;
  uint64_t v46 = (_OWORD *)swift_allocObject();
  *(void *)(v17 + 312) = v46;
  long long v47 = v80[3];
  v46[3] = v80[2];
  v46[4] = v47;
  long long v48 = v80[5];
  v46[5] = v80[4];
  v46[6] = v48;
  long long v49 = v80[1];
  v46[1] = v80[0];
  v46[2] = v49;
  sub_241496C7C(v17);
  sub_2411F8FDC((uint64_t)v81);
  uint64_t v50 = v64;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v50 = sub_24158B988(0, v64[2] + 1, 1, v64);
  }
  unint64_t v52 = v50[2];
  unint64_t v51 = v50[3];
  if (v52 >= v51 >> 1) {
    uint64_t v50 = sub_24158B988((void *)(v51 > 1), v52 + 1, 1, v50);
  }
  id v67 = &type metadata for CategoryRow;
  uint64_t v68 = &off_26F56F758;
  uint64_t v53 = (_OWORD *)swift_allocObject();
  *(void *)&long long v66 = v53;
  long long v54 = v81[3];
  v53[3] = v81[2];
  v53[4] = v54;
  long long v55 = v81[5];
  v53[5] = v81[4];
  v53[6] = v55;
  long long v56 = v81[1];
  v53[1] = v81[0];
  v53[2] = v56;
  v50[2] = v52 + 1;
  sub_2411B6CD4(&v66, (uint64_t)&v50[5 * v52 + 4]);
  uint64_t v65 = v50;
  id v57 = (id)HKMCSymptomSampleTypes();
  sub_24122BFD4();
  unint64_t v58 = sub_241631F28();

  uint64_t v59 = sub_241228390(v58);
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v59 = (uint64_t)sub_2414AA8DC((void *)v59);
    uint64_t v60 = *(void *)(v59 + 16);
    if (v60) {
      goto LABEL_7;
    }
LABEL_9:
    __break(1u);
  }
  uint64_t v60 = *(void *)(v59 + 16);
  if (!v60) {
    goto LABEL_9;
  }
LABEL_7:
  *(unsigned char *)(v59 + 40) = 1;
  *(unsigned char *)(v59 + 16 * v60 + 25) = 1;
  uint64_t v61 = _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v62 = sub_2412284FC(v61);
  swift_bridgeObjectRelease_n();
  sub_241496C7C(v62);
  return v65;
}

uint64_t sub_24122BB00(void *a1, void *a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v40 = a5;
  uint64_t v41 = a6;
  uint64_t v39 = a4;
  id v42 = a1;
  unint64_t v43 = a3;
  uint64_t v9 = sub_24162BA08();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  long long v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v34 = v12;
  MEMORY[0x270FA5388](v13);
  long long v35 = (char *)&v33 - v14;
  uint64_t v15 = sub_241631AC8();
  uint64_t v38 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44[0] = v6;
  swift_getMetatypeMetadata();
  id v19 = a2;
  sub_241631D48();
  id v20 = sub_24155C498(v19);
  long long v37 = v21;
  int v36 = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a4, v15);
  long long v23 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v24 = (uint64_t)v35;
  uint64_t v25 = v40;
  v23(v35, v40, v9);
  uint64_t v26 = v12;
  uint64_t v27 = v41;
  v23(v26, v41, v9);
  id v28 = objc_msgSend(v42, sel_recentBasalBodyTemperature);
  id v29 = v20;
  sub_2415B6CA8(v28, (uint64_t)v29, (uint64_t)v44);
  type metadata accessor for CycleChartsPDFModelProvider();
  uint64_t v30 = swift_allocObject();
  sub_241228968(v43, v18, v24, (uint64_t)v34, (uint64_t)v44, v29, v37, v36 & 1);
  long long v31 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v31(v27, v9);
  v31(v25, v9);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v39, v38);
  return v30;
}

unint64_t sub_24122BDDC()
{
  unint64_t result = qword_26B0121C0;
  if (!qword_26B0121C0)
  {
    sub_241631AC8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0121C0);
  }
  return result;
}

uint64_t sub_24122BE34(uint64_t a1, uint64_t a2)
{
  sub_24122BEC8(0, (unint64_t *)&unk_268D04810, (uint64_t (*)(uint64_t))type metadata accessor for CycleChartsModel, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_24122BEC8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_24122BF2C()
{
  unint64_t result = qword_268D00EE0;
  if (!qword_268D00EE0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268D00EE0);
  }
  return result;
}

uint64_t sub_24122BF84()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 112, 7);
}

unint64_t sub_24122BFD4()
{
  unint64_t result = qword_26B0125F0;
  if (!qword_26B0125F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B0125F0);
  }
  return result;
}

uint64_t sub_24122C014()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_24122C024(uint64_t a1)
{
  return sub_2411F7B0C(a1, *(void *)(v1 + 16));
}

uint64_t sub_24122C02C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 144, 7);
}

uint64_t sub_24122C07C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_24122C08C(uint64_t a1)
{
  sub_2411F7BC8(a1, *(void **)(v1 + 16));
}

uint64_t sub_24122C094()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24122C0A4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24122C0B4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_24122C0C4(uint64_t a1)
{
  sub_2411F7ADC(a1, *(void **)(v1 + 16));
}

uint64_t sub_24122C0CC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24122C0DC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24122C0EC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24122C0FC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24122C10C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_24122C11C(uint64_t a1)
{
  sub_2411F7AE8(a1, *(void **)(v1 + 16));
}

uint64_t sub_24122C124()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24122C134()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24122C144()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24122C154()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_24122C164(uint64_t a1)
{
  sub_2411F7B00(a1, *(void **)(v1 + 16));
}

uint64_t sub_24122C16C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24122C17C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24122C18C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_24122C19C(uint64_t a1)
{
  sub_2411F7AF4(a1, *(void **)(v1 + 16));
}

uint64_t sub_24122C1A4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24122C1B4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24122C1C8(uint64_t a1)
{
  sub_24122BEC8(0, (unint64_t *)&unk_268D04810, (uint64_t (*)(uint64_t))type metadata accessor for CycleChartsModel, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24122C268()
{
  return sub_241631D48();
}

uint64_t sub_24122C29C()
{
  return sub_241631D48();
}

void sub_24122C2F4()
{
  if (!*(void *)(v0 + 88))
  {
    sub_241633328();
    uint64_t v1 = *(void **)(v0 + 96);
    if (v1) {
      goto LABEL_3;
    }
LABEL_7:
    sub_241633328();
    return;
  }
  sub_241633328();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631DC8();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + 96);
  if (!v1) {
    goto LABEL_7;
  }
LABEL_3:
  sub_241633328();
  id v2 = v1;
  sub_2416329C8();
}

uint64_t sub_24122C3C4()
{
  swift_bridgeObjectRelease();
  sub_2411CD138(v0 + 32);
  sub_2411CD138(v0 + 48);
  sub_2411CD138(v0 + 64);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TileHeaderItem()
{
  return self;
}

uint64_t sub_24122C448()
{
  return sub_24122C29C();
}

uint64_t sub_24122C46C()
{
  swift_getWitnessTable();

  return sub_2415B9B74();
}

void *sub_24122C4D0()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 96);
  id v2 = v1;
  return v1;
}

BOOL sub_24122C500(void **a1, void **a2)
{
  return sub_24122C8A4(*a1, *a2);
}

uint64_t sub_24122C50C()
{
  return sub_241633358();
}

void sub_24122C550()
{
}

uint64_t sub_24122C574()
{
  return sub_241633358();
}

uint64_t sub_24122C5B4()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 16);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return v2;
}

uint64_t sub_24122C604(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  swift_beginAccess();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_24122C65C())()
{
  return j__swift_endAccess;
}

uint64_t sub_24122C6B8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F326F8](a1, WitnessTable);
}

uint64_t sub_24122C724()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return v1;
}

uint64_t sub_24122C764(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  uint64_t result = MEMORY[0x245621790](*v2 + 32);
  if (result)
  {
    uint64_t v6 = *(void *)(v4 + 40);
    uint64_t ObjectType = swift_getObjectType();
    void v9[3] = type metadata accessor for TileHeaderItem();
    v9[4] = sub_24122C96C(&qword_268CFD2D0);
    v9[0] = v4;
    unint64_t v8 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(v6 + 8);
    swift_retain();
    v8(v9, a2, ObjectType, v6);
    swift_unknownObjectRelease();
    return _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v9);
  }
  return result;
}

uint64_t sub_24122C83C()
{
  return sub_24122C96C(&qword_268CFB2E8);
}

uint64_t sub_24122C870()
{
  return sub_24122C96C(&qword_268CFB2F0);
}

BOOL sub_24122C8A4(void *a1, void *a2)
{
  uint64_t v4 = a1[11];
  uint64_t v5 = a2[11];
  if (!v4)
  {
    if (!v5)
    {
LABEL_11:
      unint64_t v9 = a1[12];
      unint64_t v10 = a2[12];
      BOOL result = (v9 | v10) == 0;
      if (v9) {
        BOOL v11 = v10 == 0;
      }
      else {
        BOOL v11 = 1;
      }
      if (!v11)
      {
        sub_2411FA39C();
        id v12 = (id)v10;
        id v13 = (id)v9;
        char v14 = sub_2416329B8();

        return v14 & 1;
      }
      return result;
    }
    return 0;
  }
  if (!v5) {
    return 0;
  }
  if (a1[10] == a2[10] && v4 == v5) {
    goto LABEL_11;
  }
  char v7 = sub_241633218();
  BOOL result = 0;
  if (v7) {
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_24122C96C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for TileHeaderItem();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PregnancyFlowMetric.PregnancyFlowType()
{
  return &type metadata for PregnancyFlowMetric.PregnancyFlowType;
}

uint64_t getEnumTagSinglePayload for EditableDaySummarySection(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PregnancyFlowMetric.EntryPoint(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24122CB1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PregnancyFlowMetric.EntryPoint()
{
  return &type metadata for PregnancyFlowMetric.EntryPoint;
}

void *sub_24122CB54(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    void *v3 = *a2;
    int v3 = (void *)(v19 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v5;
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    *(_WORD *)(a1 + 25) = *(_WORD *)((char *)a2 + 25);
    uint64_t v6 = *(int *)(a3 + 36);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    *(void *)(a1 + v6) = *(uint64_t *)((char *)a2 + v6);
    unint64_t v9 = (int *)type metadata accessor for PregnancyAnalyticModel(0);
    uint64_t v10 = v9[5];
    uint64_t v11 = v7 + v10;
    uint64_t v25 = v8 + v10;
    uint64_t v12 = sub_24162B718();
    uint64_t v13 = *(void *)(v12 - 8);
    char v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    v14(v11, v25, v12);
    uint64_t v15 = v9[6];
    uint64_t v16 = (void *)(v7 + v15);
    uint64_t v17 = (const void *)(v8 + v15);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v8 + v15, 1, v12))
    {
      sub_24122FD68(0, &qword_26B0130C0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      v14((uint64_t)v16, (uint64_t)v17, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
    }
    uint64_t v20 = v9[7];
    long long v21 = (void *)(v7 + v20);
    int v22 = (void *)(v8 + v20);
    uint64_t v23 = v22[1];
    void *v21 = *v22;
    v21[1] = v23;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  }
  return v3;
}

uint64_t type metadata accessor for PregnancyAnalyticModel(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_268CFB308);
}

uint64_t sub_24122CD9C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = type metadata accessor for PregnancyAnalyticModel(0);
  uint64_t v6 = v4 + *(int *)(v5 + 20);
  uint64_t v7 = sub_24162B718();
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  uint64_t v10 = v4 + *(int *)(v5 + 24);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7)) {
    v9(v10, v7);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_24122CEA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(void *)(a1 + v5) = *(void *)(a2 + v5);
  uint64_t v8 = (int *)type metadata accessor for PregnancyAnalyticModel(0);
  uint64_t v9 = v8[5];
  uint64_t v10 = (void *)(v6 + v9);
  uint64_t v23 = (const void *)(v7 + v9);
  uint64_t v11 = sub_24162B718();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(void *, const void *, uint64_t))(v12 + 16);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  v13(v10, v23, v11);
  uint64_t v14 = v8[6];
  uint64_t v15 = (void *)(v6 + v14);
  uint64_t v16 = (const void *)(v7 + v14);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v7 + v14, 1, v11))
  {
    sub_24122FD68(0, &qword_26B0130C0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v13(v15, v16, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
  }
  uint64_t v18 = v8[7];
  uint64_t v19 = (void *)(v6 + v18);
  uint64_t v20 = (void *)(v7 + v18);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return a1;
}

uint64_t sub_24122D080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(void *)(a1 + v6) = *(void *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for PregnancyAnalyticModel(0);
  uint64_t v10 = v9[5];
  uint64_t v11 = (void *)(v7 + v10);
  uint64_t v12 = (const void *)(v8 + v10);
  uint64_t v13 = sub_24162B718();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(void *, const void *, uint64_t))(v14 + 24);
  v15(v11, v12, v13);
  uint64_t v27 = v7;
  uint64_t v16 = v9[6];
  uint64_t v17 = (void *)(v7 + v16);
  uint64_t v26 = v8;
  uint64_t v18 = (const void *)(v8 + v16);
  uint64_t v19 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v7) = v19((const void *)(v7 + v16), 1, v13);
  int v20 = v19(v18, 1, v13);
  if (!v7)
  {
    if (!v20)
    {
      v15(v17, v18, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v17, v13);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    sub_24122FD68(0, &qword_26B0130C0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v17, v18, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
LABEL_7:
  uint64_t v22 = v9[7];
  uint64_t v23 = (void *)(v27 + v22);
  uint64_t v24 = (void *)(v26 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24122D2FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  uint64_t v4 = *(int *)(a3 + 36);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  *(void *)(a1 + v4) = *(void *)(a2 + v4);
  uint64_t v7 = (int *)type metadata accessor for PregnancyAnalyticModel(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(v5 + v8);
  uint64_t v10 = (const void *)(v6 + v8);
  uint64_t v11 = sub_24162B718();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(void *, const void *, uint64_t))(v12 + 32);
  v13(v9, v10, v11);
  uint64_t v14 = v7[6];
  uint64_t v15 = (void *)(v5 + v14);
  uint64_t v16 = (const void *)(v6 + v14);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v6 + v14, 1, v11))
  {
    sub_24122FD68(0, &qword_26B0130C0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v13(v15, v16, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
  }
  *(_OWORD *)(v5 + v7[7]) = *(_OWORD *)(v6 + v7[7]);
  return a1;
}

uint64_t sub_24122D4B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for PregnancyAnalyticModel(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = (void *)(v8 + v11);
  uint64_t v13 = (const void *)(v9 + v11);
  uint64_t v14 = sub_24162B718();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void (**)(void *, const void *, uint64_t))(v15 + 40);
  v16(v12, v13, v14);
  uint64_t v30 = v8;
  uint64_t v17 = v10[6];
  uint64_t v18 = (void *)(v8 + v17);
  uint64_t v29 = v9;
  uint64_t v19 = (const void *)(v9 + v17);
  int v20 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v8) = v20((const void *)(v8 + v17), 1, v14);
  int v21 = v20(v19, 1, v14);
  if (!v8)
  {
    if (!v21)
    {
      v16(v18, v19, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v18, v14);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    sub_24122FD68(0, &qword_26B0130C0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v18, v19, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
LABEL_7:
  uint64_t v23 = v10[7];
  uint64_t v24 = (void *)(v30 + v23);
  uint64_t v25 = (uint64_t *)(v29 + v23);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  void *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24122D708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24122D71C);
}

uint64_t sub_24122D71C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for PregnancyAnalyticModel(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_24122D7CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24122D7E0);
}

uint64_t sub_24122D7E0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for PregnancyAnalyticModel(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for PregnancyFlowMetric(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_268CFB2F8);
}

uint64_t sub_24122D8A8()
{
  uint64_t result = type metadata accessor for PregnancyAnalyticModel(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_24122D960(void *a1, char *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *(void *)a2;
    *unint64_t v4 = *(void *)a2;
    unint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(void *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = &a2[v7];
    uint64_t v10 = sub_24162B718();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v12(v8, v9, v10);
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = &a2[v13];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(&a2[v13], 1, v10))
    {
      sub_24122FD68(0, &qword_26B0130C0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      v12(v14, v15, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
    }
    uint64_t v18 = a3[7];
    uint64_t v19 = (void *)((char *)v4 + v18);
    int v20 = &a2[v18];
    uint64_t v21 = *((void *)v20 + 1);
    *uint64_t v19 = *(void *)v20;
    v19[1] = v21;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  }
  return v4;
}

uint64_t sub_24122DB44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_24162B718();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  uint64_t v8 = a1 + *(int *)(a2 + 24);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5)) {
    v7(v8, v5);
  }

  return swift_bridgeObjectRelease();
}

void *sub_24122DC48(void *a1, char *a2, int *a3)
{
  *a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_24162B718();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v11(v7, v8, v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = &a2[v12];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a2[v12], 1, v9))
  {
    sub_24122FD68(0, &qword_26B0130C0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = &a2[v16];
  uint64_t v19 = *((void *)v18 + 1);
  void *v17 = *(void *)v18;
  v17[1] = v19;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return a1;
}

char *sub_24122DDDC(char *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  *(void *)a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24162B718();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  uint64_t v23 = v3;
  uint64_t v12 = *(int *)(v3 + 24);
  uint64_t v13 = &a1[v12];
  uint64_t v22 = a2;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v3) = v15(&a1[v12], 1, v9);
  int v16 = v15(v14, 1, v9);
  if (!v3)
  {
    if (!v16)
    {
      v11(v13, v14, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_24122FD68(0, &qword_26B0130C0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v14, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
LABEL_7:
  uint64_t v18 = *(int *)(v23 + 28);
  uint64_t v19 = &a1[v18];
  int v20 = (void *)((char *)v22 + v18);
  *(void *)uint64_t v19 = *v20;
  *((void *)v19 + 1) = v20[1];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_24122E000(void *a1, char *a2, int *a3)
{
  *a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_24162B718();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = &a2[v12];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a2[v12], 1, v9))
  {
    sub_24122FD68(0, &qword_26B0130C0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)&a2[a3[7]];
  return a1;
}

char *sub_24122E188(char *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  *(void *)a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24162B718();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  uint64_t v25 = v3;
  uint64_t v12 = *(int *)(v3 + 24);
  uint64_t v13 = &a1[v12];
  uint64_t v24 = a2;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v3) = v15(&a1[v12], 1, v9);
  int v16 = v15(v14, 1, v9);
  if (!v3)
  {
    if (!v16)
    {
      v11(v13, v14, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_24122FD68(0, &qword_26B0130C0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v14, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
LABEL_7:
  uint64_t v18 = *(int *)(v25 + 28);
  uint64_t v19 = &a1[v18];
  int v20 = (void *)((char *)v24 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *(void *)uint64_t v19 = v22;
  *((void *)v19 + 1) = v21;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24122E39C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24122E3B0);
}

uint64_t sub_24122E3B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24162B718();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  sub_24122FD68(0, &qword_26B0130C0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[7] + 8);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_24122E4F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24122E508);
}

void sub_24122E508(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_24162B718();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    sub_24122FD68(0, &qword_26B0130C0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    if (*(_DWORD *)(*(void *)(v12 - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[7] + 8) = (a2 - 1);
      return;
    }
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
  }
  unint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  v13(a1 + v11, a2, a2, v9);
}

void sub_24122E648()
{
  sub_24162B718();
  if (v0 <= 0x3F)
  {
    sub_24122FD68(319, &qword_26B0130C0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_24122E758()
{
  return sub_24122E840(&qword_268CFB318, &qword_268CFB320, (uint64_t)&type metadata for PregnancyFlowMetric.EntryPoint);
}

void sub_24122E788(void *a1@<X8>)
{
  *a1 = &unk_26F5668D8;
}

void sub_24122E798(void *a1@<X8>)
{
  *a1 = &unk_26F566900;
}

void sub_24122E7A8(void *a1@<X8>)
{
  *a1 = &unk_26F566928;
}

unint64_t sub_24122E7BC()
{
  unint64_t result = qword_268CFB328;
  if (!qword_268CFB328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB328);
  }
  return result;
}

uint64_t sub_24122E810()
{
  return sub_24122E840(&qword_268CFB330, &qword_268CFB338, (uint64_t)&type metadata for PregnancyFlowMetric.PregnancyFlowType);
}

uint64_t sub_24122E840(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24122FF00(255, a2, a3, MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24122E8A8()
{
  unint64_t result = qword_268CFB340;
  if (!qword_268CFB340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB340);
  }
  return result;
}

uint64_t sub_24122E8FC()
{
  unint64_t v1 = v0;
  int v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24122FD68(0, &qword_26B0130C0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v69 = (uint64_t)&v68 - v4;
  sub_24122FD68(0, &qword_268CFB348, MEMORY[0x263F063B0], v2);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v68 - v9;
  MEMORY[0x270FA5388](v11);
  unint64_t v13 = (char *)&v68 - v12;
  uint64_t v72 = sub_24162B718();
  uint64_t v14 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  MEMORY[0x270FA5388](v15);
  uint64_t v73 = (char *)&v68 - v17;
  int v18 = *v0;
  uint64_t v70 = v13;
  if (v18)
  {
    if (v18 == 1)
    {
      unint64_t v19 = 0xE400000000000000;
      uint64_t v20 = 1953064005;
    }
    else
    {
      unint64_t v19 = 0xEB00000000676E69;
      uint64_t v20 = 0x6472616F6266664FLL;
    }
  }
  else
  {
    uint64_t v20 = 0x696472616F626E4FLL;
    unint64_t v19 = 0xEA0000000000676ELL;
  }
  uint64_t v68 = v16;
  unint64_t v21 = MEMORY[0x263F8D310];
  unint64_t v77 = MEMORY[0x263F8D310];
  *(void *)&long long v76 = v20;
  *((void *)&v76 + 1) = v19;
  sub_241205EDC(&v76, v75);
  uint64_t v22 = MEMORY[0x263F8EE80];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v78 = v22;
  sub_24134906C(v75, 1701869940, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
  uint64_t v24 = v78;
  swift_bridgeObjectRelease();
  uint64_t v25 = *((void *)v1 + 1);
  uint64_t v26 = *((void *)v1 + 2);
  unint64_t v77 = v21;
  *(void *)&long long v76 = v25;
  *((void *)&v76 + 1) = v26;
  sub_241205EDC(&v76, v75);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  char v27 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v74 = v24;
  sub_24134906C(v75, 1885697139, 0xE400000000000000, v27);
  uint64_t v28 = v74;
  uint64_t v78 = v74;
  swift_bridgeObjectRelease();
  uint64_t v29 = sub_241631CC8();
  swift_bridgeObjectRelease();
  unint64_t v30 = sub_24122FBB4();
  unint64_t v77 = v30;
  *(void *)&long long v76 = v29;
  sub_241205EDC(&v76, v75);
  char v31 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v74 = v28;
  sub_24134906C(v75, 0x6E6F69746361, 0xE600000000000000, v31);
  uint64_t v32 = v74;
  swift_bridgeObjectRelease();
  uint64_t v33 = sub_241631CC8();
  swift_bridgeObjectRelease();
  unint64_t v77 = v30;
  *(void *)&long long v76 = v33;
  sub_241205EDC(&v76, v75);
  char v34 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v74 = v32;
  sub_24134906C(v75, 0x696F507972746E65, 0xEA0000000000746ELL, v34);
  uint64_t v35 = v74;
  uint64_t v78 = v74;
  swift_bridgeObjectRelease();
  uint64_t v36 = v1[26];
  uint64_t v71 = v14;
  switch(v36)
  {
    case 1:
      if (qword_268CF94D0 != -1) {
        swift_once();
      }
      long long v37 = &qword_268CFDFD0;
      goto LABEL_19;
    case 2:
      if (qword_268CF94E0 != -1) {
        swift_once();
      }
      long long v37 = &qword_268CFDFF0;
      goto LABEL_19;
    case 3:
      if (qword_268CF94F0 != -1) {
        swift_once();
      }
      long long v37 = &qword_268CFE010;
      goto LABEL_19;
    case 4:
      sub_2412B5ED4(0x7461447472617473, 0xEF646F6874654D65, &v76);
      sub_24122FC88((uint64_t)&v76, (uint64_t)&qword_268CFB470, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_24122FF00);
      goto LABEL_21;
    default:
      if (qword_268CF94C0 != -1) {
        swift_once();
      }
      long long v37 = &qword_268CFDFB0;
LABEL_19:
      uint64_t v38 = *v37;
      uint64_t v39 = _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      unint64_t v77 = v21;
      *(void *)&long long v76 = v38;
      *((void *)&v76 + 1) = v39;
      sub_241205EDC(&v76, v75);
      char v40 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v74 = v35;
      sub_24134906C(v75, 0x7461447472617473, 0xEF646F6874654D65, v40);
      uint64_t v78 = v74;
      swift_bridgeObjectRelease();
LABEL_21:
      sub_24162B708();
      uint64_t v41 = self;
      id v42 = (void *)sub_24162B668();
      unint64_t v43 = &v1[*(int *)(type metadata accessor for PregnancyFlowMetric(0) + 36)];
      uint64_t v44 = type metadata accessor for PregnancyAnalyticModel(0);
      long long v45 = (void *)sub_24162B668();
      uint64_t v46 = (void *)sub_241631CC8();
      id v47 = objc_msgSend(v41, sel_gestationalAgeInComponentsOnDate_pregnancyStartDate_startTimeZoneName_, v42, v45, v46);

      if (v47)
      {
        sub_24162B088();

        uint64_t v48 = sub_24162B138();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v10, 0, 1, v48);
      }
      else
      {
        uint64_t v48 = sub_24162B138();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v10, 1, 1, v48);
      }
      uint64_t v49 = (uint64_t)v70;
      sub_24122FBF4((uint64_t)v10, (uint64_t)v70);
      sub_24122FCE8(v49, (uint64_t)v7, &qword_268CFB348, MEMORY[0x263F063B0]);
      sub_24162B138();
      uint64_t v50 = *(void *)(v48 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v7, 1, v48) == 1)
      {
        sub_24122FC88((uint64_t)v7, (uint64_t)&qword_268CFB348, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_24122FD68);
        unint64_t v51 = v73;
      }
      else
      {
        uint64_t v52 = sub_24162B058();
        char v54 = v53;
        (*(void (**)(char *, uint64_t))(v50 + 8))(v7, v48);
        unint64_t v51 = v73;
        if ((v54 & 1) == 0)
        {
          unint64_t v77 = MEMORY[0x263F8D6C8];
          *(void *)&long long v76 = v52;
          sub_241205EDC(&v76, v75);
          uint64_t v55 = v78;
          char v56 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v74 = v55;
          sub_24134906C(v75, 0x6F69746174736567, 0xEE006567416C616ELL, v56);
          uint64_t v78 = v74;
          swift_bridgeObjectRelease();
        }
      }
      uint64_t v57 = v69;
      sub_24122FCE8((uint64_t)&v43[*(int *)(v44 + 24)], v69, &qword_26B0130C0, MEMORY[0x263F07490]);
      uint64_t v59 = v71;
      uint64_t v58 = v72;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v57, 1, v72) == 1)
      {
        uint64_t v60 = MEMORY[0x263F8D8F0];
        sub_24122FC88(v49, (uint64_t)&qword_268CFB348, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_24122FD68);
        (*(void (**)(char *, uint64_t))(v59 + 8))(v51, v58);
        sub_24122FC88(v57, (uint64_t)&qword_26B0130C0, MEMORY[0x263F07490], v60, (uint64_t (*)(void))sub_24122FD68);
      }
      else
      {
        uint64_t v61 = v68;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 32))(v68, v57, v58);
        uint64_t v62 = sub_24122F4F0(v61, v51);
        if ((v63 & 1) == 0)
        {
          unint64_t v77 = MEMORY[0x263F8D6C8];
          *(void *)&long long v76 = v62;
          sub_241205EDC(&v76, v75);
          uint64_t v64 = v78;
          char v65 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v74 = v64;
          sub_24134906C(v75, 0xD00000000000001ALL, 0x800000024165A970, v65);
          uint64_t v78 = v74;
          swift_bridgeObjectRelease();
        }
        long long v66 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
        v66(v61, v58);
        sub_24122FC88(v49, (uint64_t)&qword_268CFB348, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_24122FD68);
        v66((uint64_t)v51, v58);
      }
      return v78;
  }
}

uint64_t sub_24122F4F0(uint64_t a1, char *a2)
{
  uint64_t v48 = a2;
  uint64_t v2 = sub_24162EFA8();
  uint64_t v42 = *(void *)(v2 - 8);
  uint64_t v43 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v44 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_24162B138();
  uint64_t v4 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v6 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24162B718();
  uint64_t v45 = *(void *)(v7 - 8);
  uint64_t v46 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v41 - v11;
  uint64_t v13 = sub_24162B7F8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_24162BA08();
  uint64_t v17 = *(void *)(v47 - 8);
  __n128 v18 = MEMORY[0x270FA5388](v47);
  uint64_t v20 = (char *)v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v14 + 104))(v16, *MEMORY[0x263F07740], v13, v18);
  sub_24162B808();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_24162B828();
  sub_24162B828();
  sub_24122FD68(0, (unint64_t *)&unk_26B012600, MEMORY[0x263F07908], MEMORY[0x263F8E0F8]);
  uint64_t v21 = sub_24162B9E8();
  uint64_t v22 = *(void *)(v21 - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_241637EE0;
  (*(void (**)(unint64_t, void, uint64_t))(v22 + 104))(v24 + v23, *MEMORY[0x263F07848], v21);
  sub_2411C9AF4(v24);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_24162B868();
  swift_bridgeObjectRelease();
  uint64_t v25 = sub_24162B058();
  LOBYTE(v21) = v26;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v49);
  if (v21)
  {
    uint64_t v48 = v9;
    uint64_t v49 = (uint64_t)v12;
    uint64_t v29 = v17;
    unint64_t v30 = v44;
    uint64_t v31 = v45;
    uint64_t v32 = v46;
    if (HKShowSensitiveLogItems())
    {
      sub_24162EF48();
      uint64_t v33 = sub_24162EF98();
      os_log_type_t v34 = sub_2416322C8();
      uint64_t v35 = v29;
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v36 = (uint8_t *)swift_slowAlloc();
        uint64_t v37 = swift_slowAlloc();
        uint64_t v51 = v37;
        *(_DWORD *)uint64_t v36 = 136315138;
        v41[1] = v36 + 4;
        uint64_t v50 = sub_2411B6898(0xD000000000000013, 0x800000024163CD50, &v51);
        sub_241632C28();
        _os_log_impl(&dword_24118E000, v33, v34, "[%s] Could not get weekOfMonth to populate weeksSincePregnancyEndDate.", v36, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x245621640](v37, -1, -1);
        MEMORY[0x245621640](v36, -1, -1);

        (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v43);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v42 + 8))(v30, v43);
      }
      uint64_t v39 = *(void (**)(char *, uint64_t))(v31 + 8);
      v39(v48, v32);
      v39((char *)v49, v32);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v20, v47);
    }
    else
    {
      uint64_t v38 = *(void (**)(char *, uint64_t))(v31 + 8);
      v38(v48, v32);
      v38((char *)v49, v32);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v20, v47);
    }
    return 0;
  }
  else
  {
    uint64_t v27 = v46;
    uint64_t v28 = *(void (**)(char *, uint64_t))(v45 + 8);
    v28(v9, v46);
    v28(v12, v27);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v47);
  }
  return v25;
}

unint64_t sub_24122FBB4()
{
  unint64_t result = qword_26B012148;
  if (!qword_26B012148)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B012148);
  }
  return result;
}

uint64_t sub_24122FBF4(uint64_t a1, uint64_t a2)
{
  sub_24122FD68(0, &qword_268CFB348, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24122FC88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_24122FCE8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_24122FD68(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_24122FD68(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unsigned char *_s24MenstrualCyclesAppPlugin19PregnancyFlowMetricV17PregnancyFlowTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24122FE98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PregnancyFlowMetric.PregnancyFlowAction()
{
  return &type metadata for PregnancyFlowMetric.PregnancyFlowAction;
}

uint64_t sub_24122FED0()
{
  return sub_24122E840(&qword_268CFB350, &qword_268CFB358, (uint64_t)&type metadata for PregnancyFlowMetric.PregnancyFlowAction);
}

void sub_24122FF00(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_24122FF50()
{
  unint64_t result = qword_268CFB360;
  if (!qword_268CFB360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB360);
  }
  return result;
}

uint64_t sub_24123000C()
{
  sub_241632E78();
  sub_241631E08();
  objc_msgSend(v0, sel_invalidateEverything);
  sub_241631E08();
  swift_bridgeObjectRelease();
  sub_241631E08();
  objc_msgSend(v0, sel_invalidateDataSourceCounts);
  sub_241631E08();
  swift_bridgeObjectRelease();
  sub_241631E08();
  sub_241631E08();
  swift_bridgeObjectRelease();
  sub_241631E08();
  sub_241631E08();
  swift_bridgeObjectRelease();
  sub_241631E08();
  return 0;
}

id sub_241230244()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CycleTimelineCollectionViewLayoutInvalidationContext();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CycleTimelineCollectionViewLayoutInvalidationContext()
{
  return self;
}

id sub_24123029C()
{
  unint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23DatePickerTableViewCell_datePicker;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23DatePickerTableViewCell_datePicker], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(*(id *)&v0[v2], sel_setDatePickerMode_, 1);
  objc_msgSend(*(id *)&v0[v2], sel_setPreferredDatePickerStyle_, 3);
  id v3 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v3, sel_addSubview_, *(void *)&v1[v2]);

  unsigned int v4 = self;
  sub_2411BFC90();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24163B1D0;
  id v6 = objc_msgSend(*(id *)&v1[v2], sel_leadingAnchor);
  id v7 = objc_msgSend(v1, sel_contentView);
  id v8 = objc_msgSend(v7, sel_leadingAnchor);

  id v9 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v8);
  *(void *)(v5 + 32) = v9;
  id v10 = objc_msgSend(*(id *)&v1[v2], sel_topAnchor);
  id v11 = objc_msgSend(v1, sel_contentView);
  id v12 = objc_msgSend(v11, sel_topAnchor);

  id v13 = objc_msgSend(v10, sel_constraintEqualToAnchor_constant_, v12, 4.0);
  *(void *)(v5 + 40) = v13;
  id v14 = objc_msgSend(v1, sel_contentView);
  id v15 = objc_msgSend(v14, sel_bottomAnchor);

  id v16 = objc_msgSend(*(id *)&v1[v2], sel_bottomAnchor);
  id v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

  *(void *)(v5 + 48) = v17;
  id v18 = objc_msgSend(v1, sel_contentView);
  id v19 = objc_msgSend(v18, sel_trailingAnchor);

  id v20 = objc_msgSend(*(id *)&v1[v2], sel_trailingAnchor);
  id v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

  *(void *)(v5 + 56) = v21;
  sub_241631F48();
  sub_2411F1694();
  uint64_t v22 = (void *)sub_241631F18();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_activateConstraints_, v22);

  unint64_t v23 = *(void **)&v1[v2];

  return objc_msgSend(v23, sel_addTarget_action_forControlEvents_, v1, sel_datePickerChangedWithPicker_, 4096);
}

uint64_t type metadata accessor for DatePickerTableViewCell()
{
  return self;
}

uint64_t sub_241230898@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23DatePickerTableViewCell_item;
  swift_beginAccess();
  return sub_2411FA270(v3, a1);
}

uint64_t sub_2412308EC(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23DatePickerTableViewCell_item;
  swift_beginAccess();
  sub_2412309A4(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_241230948())()
{
  return j__swift_endAccess;
}

uint64_t sub_2412309A4(uint64_t a1, uint64_t a2)
{
  sub_2411BF934(0, (unint64_t *)&qword_268CFFE30, (unint64_t *)&qword_268CFF090);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id sub_241230A20(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v6 = &v3[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23DatePickerTableViewCell_item];
  *(_OWORD *)id v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((void *)v6 + 4) = 0;
  uint64_t v7 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23DatePickerTableViewCell_datePicker;
  id v8 = objc_allocWithZone(MEMORY[0x263F82650]);
  id v9 = v3;
  *(void *)&v3[v7] = objc_msgSend(v8, sel_init);
  *(void *)&v9[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23DatePickerTableViewCell_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  id v10 = &v9[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23DatePickerTableViewCell_selectedItemUniqueIdentifier];
  *(void *)id v10 = 0;
  *((void *)v10 + 1) = 0;

  if (a2)
  {
    id v11 = (void *)sub_241631CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v11 = 0;
  }
  v15.receiver = v9;
  v15.super_class = ObjectType;
  id v12 = objc_msgSendSuper2(&v15, sel_initWithStyle_reuseIdentifier_, 0, v11);

  id v13 = v12;
  sub_24123029C();

  return v13;
}

uint64_t sub_241230B48()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24162B718();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __n128 v7 = MEMORY[0x270FA5388](v6);
  id v9 = &v18[-v8];
  uint64_t v10 = v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23DatePickerTableViewCell_delegate;
  if (MEMORY[0x245621790](v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23DatePickerTableViewCell_delegate, v7))
  {
    uint64_t v11 = *(void *)(v10 + 8);
    uint64_t ObjectType = swift_getObjectType();
    id v13 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23DatePickerTableViewCell_datePicker), sel_date);
    sub_24162B6A8();

    (*(void (**)(uint64_t, unsigned char *, uint64_t, uint64_t))(v11 + 8))(v0, v9, ObjectType, v11);
    swift_unknownObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v9, v2);
  }
  uint64_t v14 = v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23DatePickerTableViewCell_item;
  swift_beginAccess();
  sub_2411FA270(v14, (uint64_t)v19);
  if (!v20)
  {
    sub_241230E38((uint64_t)v19, (unint64_t *)&qword_268CFFE30, (unint64_t *)&qword_268CFF090);
    long long v21 = 0u;
    long long v22 = 0u;
    uint64_t v23 = 0;
    return sub_241230E38((uint64_t)&v21, &qword_268CFB3A0, &qword_268CFB3A8);
  }
  sub_2411BF880(0, (unint64_t *)&qword_268CFF090);
  sub_2411BF880(0, &qword_268CFB3A8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v23 = 0;
    long long v21 = 0u;
    long long v22 = 0u;
    return sub_241230E38((uint64_t)&v21, &qword_268CFB3A0, &qword_268CFB3A8);
  }
  if (!*((void *)&v22 + 1)) {
    return sub_241230E38((uint64_t)&v21, &qword_268CFB3A0, &qword_268CFB3A8);
  }
  objc_super v15 = sub_2411B6854(&v21, *((uint64_t *)&v22 + 1));
  id v16 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23DatePickerTableViewCell_datePicker), sel_date);
  sub_24162B6A8();

  if (MEMORY[0x245621790](v15 + 7))
  {
    sub_2415E35CC((uint64_t)v15, (uint64_t)v5);
    swift_unknownObjectRelease();
  }
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  return _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v21);
}

uint64_t sub_241230E38(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  sub_2411BF934(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_241230E94(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_241232984(0, &qword_268CFAEC8, type metadata accessor for CycleChartCycle, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (id *)((char *)&v15 - v5);
  sub_241232830(a1, (uint64_t)&v15 - v5);
  uint64_t v7 = type metadata accessor for CycleChartCycle(0);
  uint64_t v8 = *(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48);
  if (v8(v6, 1, v7) == 1)
  {
    sub_241216F7C((uint64_t)v6);
    id v9 = 0;
  }
  else
  {
    id v9 = v6[1];
    sub_2412328C4((uint64_t)v6);
  }
  uint64_t v10 = (id *)&v2[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_cycle];
  swift_beginAccess();
  if (v8(v10, 1, v7))
  {
    if (!v9) {
      return;
    }
    goto LABEL_6;
  }
  id v12 = v10[1];
  uint64_t v11 = v12;
  if (!v9)
  {
    if (!v12) {
      return;
    }
    goto LABEL_7;
  }
  if (!v12)
  {
LABEL_6:
    uint64_t v11 = v9;
LABEL_7:

LABEL_8:
    objc_msgSend(v2, sel_setNeedsDisplay);
    return;
  }
  sub_2411B9D00(0, (unint64_t *)&qword_26B00E610);
  id v13 = v9;
  char v14 = sub_2416329B8();

  if ((v14 & 1) == 0) {
    goto LABEL_8;
  }
}

uint64_t sub_2412310DC()
{
  swift_getObjectType();
  uint64_t v4 = sub_2416333E8();
  sub_241631E08();
  uint64_t v1 = v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_cycle;
  swift_beginAccess();
  uint64_t v2 = type metadata accessor for CycleChartCycle(0);
  (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2);
  sub_2416331D8();
  sub_241631E08();
  swift_bridgeObjectRelease();
  return v4;
}

id sub_2412311C4(double a1, double a2, double a3, double a4)
{
  swift_getObjectType();
  v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_role] = 0;
  id v9 = &v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_header];
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  v9[32] = 1;
  uint64_t v10 = &v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_footer];
  *(void *)uint64_t v10 = 0;
  *((void *)v10 + 1) = 0;
  unsigned char v10[16] = 1;
  uint64_t v11 = &v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_cycle];
  uint64_t v12 = type metadata accessor for CycleChartCycle(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(void *)&v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_dayProvider] = 0;
  *(void *)&v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin10CycleChart_rows] = MEMORY[0x263F8EE78];
  v19.receiver = v4;
  v19.super_class = (Class)type metadata accessor for CycleChart();
  id v13 = objc_msgSendSuper2(&v19, sel_initWithFrame_, a1, a2, a3, a4);
  sub_2411B9D00(0, (unint64_t *)&qword_268CFDCF0);
  id v14 = v13;
  sub_2416325D8();
  sub_241632918();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v15 = self;
  id v16 = v14;
  id v17 = objc_msgSend(v15, sel_clearColor);
  objc_msgSend(v16, sel_setBackgroundColor_, v17);

  objc_msgSend(v16, sel_setUserInteractionEnabled_, 0);
  return v16;
}

void sub_241231418(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v150 = *MEMORY[0x263EF8340];
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = sub_24162EFA8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v13 = (char *)&v135 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CycleChartCycle(0);
  uint64_t v143 = *(CGContext **)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  id v16 = (char *)&v135 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_24162B718();
  uint64_t v141 = *(void *)(v17 - 8);
  uint64_t v142 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v140 = (char *)&v135 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241232984(0, &qword_268CFAEC8, type metadata accessor for CycleChartCycle, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v19 - 8);
  long long v21 = (char *)&v135 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v135 - v23;
  uint64_t v25 = sub_2416331F8();
  uint64_t v145 = *(void *)(v25 - 8);
  uint64_t v146 = v25;
  MEMORY[0x270FA5388](v25);
  uint64_t v144 = (char *)&v135 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147.receiver = v4;
  v147.super_class = ObjectType;
  objc_msgSendSuper2(&v147, sel_drawRect_, a1, a2, a3, a4);
  uint64_t v27 = UIGraphicsGetCurrentContext();
  if (v27)
  {
    uint64_t v28 = v4;
    if (v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_role])
    {
      if (v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_role] == 1)
      {
        uint64_t v29 = *(void *)&v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_dayProvider];
        if (v29)
        {
          unint64_t v30 = v27;
          uint64_t v31 = (uint64_t)&v28[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_cycle];
          swift_beginAccess();
          sub_241232830(v31, (uint64_t)v21);
          if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v143 + 6))(v21, 1, v14) == 1)
          {

            sub_241216F7C((uint64_t)v21);
          }
          else
          {
            sub_241232920((uint64_t)v21, (uint64_t)v16);
            uint64_t v132 = (double *)&v28[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_footer];
            swift_beginAccess();
            if ((_BYTE)v132[2])
            {
              swift_retain();
              sub_2412328C4((uint64_t)v16);
              swift_endAccess();

              swift_release();
            }
            else
            {
              CGFloat v133 = *v132;
              swift_endAccess();
              swift_retain();
              id v134 = objc_msgSend(v28, sel_traitCollection);
              sub_24128D29C(v30, (uint64_t)v16, v29, (uint64_t)v134, a1, a2, a3, a4, v133);

              swift_release();
              sub_2412328C4((uint64_t)v16);
            }
          }
        }
        else
        {
        }
      }
      else
      {
        id v88 = v27;
        uint64_t v89 = (double *)&v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_footer];
        swift_beginAccess();
        if ((_BYTE)v89[2])
        {
        }
        else
        {
          double v129 = *v89;
          uint64_t v130 = (uint64_t)&v28[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_cycle];
          swift_beginAccess();
          sub_241232830(v130, (uint64_t)v24);
          id v131 = objc_msgSend(v28, sel_traitCollection);
          sub_24128CC50(v88, (uint64_t)v24, v131, a1, a2, a3, a4, v129);

          sub_241216F7C((uint64_t)v24);
        }
      }
    }
    else
    {
      uint64_t v143 = v27;
      id v38 = objc_msgSend(v4, sel_traitCollection);
      objc_msgSend(v38, sel_displayScale);
      double v40 = v39;

      uint64_t v41 = &v28[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_header];
      uint64_t v42 = (uint64_t *)MEMORY[0x263F835B8];
      double v43 = 1.0 / v40;
      uint64_t v44 = (uint64_t)v24;
      if ((v28[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_header + 32] & 1) == 0)
      {
        uint64_t v45 = *((void *)v41 + 3);
        double v137 = *((double *)v41 + 2);
        uint64_t v138 = v45;
        CGFloat v47 = *(double *)v41;
        uint64_t v46 = *((void *)v41 + 1);
        v149[0].origin.CGFloat x = *(CGFloat *)v41;
        sub_2411DFE0C();
        sub_241632CD8();
        uint64_t v48 = (void *)sub_241631CC8();
        swift_bridgeObjectRelease();
        sub_241232984(0, (unint64_t *)&qword_268CFA900, (uint64_t (*)(uint64_t))sub_2411E0CA8, MEMORY[0x263F8E0F8]);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_24163A4F0;
        uint64_t v50 = (void *)*MEMORY[0x263F814F0];
        *(void *)(inited + 32) = *MEMORY[0x263F814F0];
        uint64_t v51 = *v42;
        uint64_t v52 = *MEMORY[0x263F81788];
        uint64_t v53 = *MEMORY[0x263F81840];
        id v54 = v50;
        id v55 = sub_2415D17B8(v51, 0, v52, v53, 0);
        uint64_t v56 = sub_2411B9D00(0, &qword_26B012140);
        *(void *)(inited + 40) = v55;
        uint64_t v57 = (void *)*MEMORY[0x263F81500];
        *(void *)(inited + 64) = v56;
        *(void *)(inited + 72) = v57;
        uint64_t v58 = self;
        id v59 = v57;
        id v60 = objc_msgSend(v58, sel_secondaryLabelColor);
        *(void *)(inited + 104) = sub_2411B9D00(0, (unint64_t *)&qword_268CFA910);
        *(void *)(inited + 80) = v60;
        sub_2414E42B8(inited);
        type metadata accessor for Key(0);
        sub_2411CCDB4();
        uint64_t v61 = (void *)sub_241631B18();
        swift_bridgeObjectRelease();
        objc_msgSend(v48, sel_sizeWithAttributes_, v61);
        double v63 = v62;

        uint64_t v64 = v46;
        double v65 = 7.0;
        if (v46 != 2) {
          double v65 = 1.0;
        }
        double v66 = 2.0;
        if (v46 == 2) {
          double v66 = 8.0;
        }
        double v67 = ceil(v66 + v65 + v63);
        uint64_t v69 = (uint64_t)v144;
        uint64_t v68 = v145;
        uint64_t v70 = v146;
        (*(void (**)(char *, void, uint64_t))(v145 + 104))(v144, *MEMORY[0x263F8E218], v146);
        v151.origin.CGFloat x = a1;
        v151.origin.CGFloat y = a2;
        v151.size.CGFloat width = a3;
        v151.size.CGFloat height = a4;
        double MinY = CGRectGetMinY(v151);
        double v139 = v43;
        CGFloat v72 = sub_24152E790(v69, v43, v67 + MinY) - MinY;
        memset(v149, 0, 32);
        memset(&v148, 0, sizeof(v148));
        v152.origin.CGFloat x = a1;
        v152.origin.CGFloat y = a2;
        v152.size.CGFloat width = a3;
        v152.size.CGFloat height = a4;
        CGRectDivide(v152, v149, &v148, v72, CGRectMinYEdge);
        CGFloat x = v149[0].origin.x;
        CGFloat y = v149[0].origin.y;
        CGFloat width = v149[0].size.width;
        CGFloat height = v149[0].size.height;
        (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v69, v70);
        id v77 = objc_msgSend(v58, sel_systemBackgroundColor);
        id v78 = objc_msgSend(v28, sel_traitCollection);
        id v79 = objc_msgSend(v77, sel_resolvedColorWithTraitCollection_, v78);

        uint64_t v80 = v143;
        CGContextSaveGState(v143);
        uint64_t v81 = (CGColor *)objc_msgSend(v79, sel_CGColor);
        CGContextSetFillColorWithColor(v80, v81);

        v153.origin.CGFloat x = x;
        v153.origin.CGFloat y = y;
        v153.size.CGFloat width = width;
        v153.size.CGFloat height = height;
        CGContextFillRect(v80, v153);
        CGContextRestoreGState(v80);

        CGContextSaveGState(v80);
        uint64_t v82 = (uint64_t)&v28[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_cycle];
        swift_beginAccess();
        sub_241232830(v82, v44);
        id v83 = objc_msgSend(v28, sel_traitCollection);
        sub_2414FE54C(v80, v44, v83, *(uint64_t *)&v47, v64, x, y, width, height, v137);

        sub_241216F7C(v44);
        CGContextRestoreGState(v80);
        v154.origin.CGFloat x = x;
        v154.origin.CGFloat y = y;
        v154.size.CGFloat width = width;
        v154.size.CGFloat height = height;
        CGContextClipToRect(v80, v154);
        uint64_t v84 = (double *)&v28[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_footer];
        swift_beginAccess();
        if (((_BYTE)v84[2] & 1) == 0)
        {
          double v85 = *v84;
          sub_241232830(v82, v44);
          id v86 = objc_msgSend(v28, sel_traitCollection);
          sub_24128CC50(v80, v44, v86, a1, a2, a3, a4, v85);

          sub_241216F7C(v44);
        }
        CGContextResetClip(v80);
        double v43 = v139;
        uint64_t v42 = (uint64_t *)MEMORY[0x263F835B8];
      }
      uint64_t v87 = (double *)&v28[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_footer];
      swift_beginAccess();
      if ((_BYTE)v87[2])
      {
      }
      else
      {
        CGFloat v90 = a4;
        double v91 = *v87;
        double v139 = v87[1];
        uint64_t v92 = v140;
        sub_24162B6B8();
        sub_24162B6E8();
        (*(void (**)(char *, uint64_t))(v141 + 8))(v92, v142);
        id v93 = objc_allocWithZone(NSString);
        uint64_t v94 = (void *)sub_241631CC8();
        swift_bridgeObjectRelease();
        id v95 = objc_msgSend(v93, sel_initWithString_, v94);

        sub_241232984(0, (unint64_t *)&qword_268CFA900, (uint64_t (*)(uint64_t))sub_2411E0CA8, MEMORY[0x263F8E0F8]);
        uint64_t v96 = swift_initStackObject();
        *(_OWORD *)(v96 + 16) = xmmword_24163A4F0;
        uint64_t v97 = (void *)*MEMORY[0x263F814F0];
        *(void *)(v96 + 32) = *MEMORY[0x263F814F0];
        uint64_t v98 = *v42;
        uint64_t v99 = *MEMORY[0x263F81788];
        uint64_t v100 = *MEMORY[0x263F81840];
        id v101 = v97;
        id v102 = sub_2415D17B8(v98, 0, v99, v100, 0);
        uint64_t v103 = sub_2411B9D00(0, &qword_26B012140);
        *(void *)(v96 + 40) = v102;
        uint64_t v104 = (void *)*MEMORY[0x263F81500];
        *(void *)(v96 + 64) = v103;
        *(void *)(v96 + 72) = v104;
        uint64_t v105 = self;
        id v106 = v104;
        id v107 = objc_msgSend(v105, sel_secondaryLabelColor);
        *(void *)(v96 + 104) = sub_2411B9D00(0, (unint64_t *)&qword_268CFA910);
        *(void *)(v96 + 80) = v107;
        sub_2414E42B8(v96);
        type metadata accessor for Key(0);
        sub_2411CCDB4();
        id v108 = (void *)sub_241631B18();
        swift_bridgeObjectRelease();
        objc_msgSend(v95, sel_sizeWithAttributes_, v108);
        double v110 = v109;

        double v111 = v110 + 4.0 + 4.0;
        uint64_t v113 = (uint64_t)v144;
        uint64_t v112 = v145;
        uint64_t v114 = v146;
        (*(void (**)(char *, void, uint64_t))(v145 + 104))(v144, *MEMORY[0x263F8E220], v146);
        v155.origin.CGFloat x = a1;
        v155.origin.CGFloat y = a2;
        double v135 = a3;
        double v136 = v90;
        v155.size.CGFloat width = a3;
        v155.size.CGFloat height = v90;
        double MaxY = CGRectGetMaxY(v155);
        CGFloat v116 = MaxY - sub_24152E790(v113, v43, MaxY - v111);
        memset(v149, 0, 32);
        memset(&v148, 0, sizeof(v148));
        v156.origin.CGFloat x = a1;
        v156.origin.CGFloat y = a2;
        v156.size.CGFloat width = a3;
        v156.size.CGFloat height = v90;
        CGRectDivide(v156, v149, &v148, v116, CGRectMaxYEdge);
        double v117 = v149[0].origin.x;
        double v118 = v149[0].origin.y;
        double v119 = v149[0].size.width;
        double v120 = v149[0].size.height;
        (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v113, v114);
        id v121 = objc_msgSend(v105, sel_systemBackgroundColor);
        id v122 = objc_msgSend(v28, (SEL)&selRef_hxui_addSecondaryFooterButtonWithTitle_bold_accessibilityIdentifier_);
        id v123 = objc_msgSend(v121, sel_resolvedColorWithTraitCollection_, v122);

        uint64_t v124 = v143;
        CGContextSaveGState(v143);
        uint64_t v125 = (CGColor *)objc_msgSend(v123, sel_CGColor);
        CGContextSetFillColorWithColor(v124, v125);

        v157.origin.CGFloat x = v117;
        v157.origin.CGFloat y = v118;
        v157.size.CGFloat width = v119;
        v157.size.CGFloat height = v120;
        CGContextFillRect(v124, v157);
        CGContextRestoreGState(v124);

        CGContextSaveGState(v124);
        uint64_t v126 = (uint64_t)&v28[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_cycle];
        swift_beginAccess();
        sub_241232830(v126, v44);
        id v127 = objc_msgSend(v28, (SEL)&selRef_hxui_addSecondaryFooterButtonWithTitle_bold_accessibilityIdentifier_);
        sub_24128E140(v124, v44, v127, v117, v118, v119, v120, v91);

        sub_241216F7C(v44);
        CGContextRestoreGState(v124);
        v158.origin.CGFloat x = v117;
        v158.origin.CGFloat y = v118;
        v158.size.CGFloat width = v119;
        v158.size.CGFloat height = v120;
        CGContextClipToRect(v124, v158);
        sub_241232830(v126, v44);
        id v128 = objc_msgSend(v28, (SEL)&selRef_hxui_addSecondaryFooterButtonWithTitle_bold_accessibilityIdentifier_);
        sub_24128CC50(v124, v44, v128, a1, a2, v135, v136, v91);

        sub_241216F7C(v44);
        CGContextResetClip(v124);
      }
    }
  }
  else
  {
    uint64_t v146 = v11;
    sub_24162EF48();
    uint64_t v32 = sub_24162EF98();
    os_log_type_t v33 = sub_2416322C8();
    if (os_log_type_enabled(v32, v33))
    {
      os_log_type_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      *(void *)&v149[0].origin.CGFloat x = v35;
      *(_DWORD *)os_log_type_t v34 = 136446210;
      uint64_t v36 = sub_2416333E8();
      *(void *)&v148.origin.CGFloat x = sub_2411B6898(v36, v37, (uint64_t *)v149);
      sub_241632C28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v32, v33, "[%{public}s] Skipping drawing with no current context", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245621640](v35, -1, -1);
      MEMORY[0x245621640](v34, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v146 + 8))(v13, v10);
  }
}

void sub_2412324DC()
{
}

uint64_t sub_24123250C()
{
  sub_241216F7C(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_cycle);

  return swift_release();
}

uint64_t sub_241232598()
{
  return type metadata accessor for CycleChartSectionView();
}

uint64_t type metadata accessor for CycleChartSectionView()
{
  uint64_t result = qword_268CFB3C8;
  if (!qword_268CFB3C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2412325EC()
{
  sub_241232984(319, &qword_268CFAEC8, type metadata accessor for CycleChartCycle, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

unsigned char *storeEnumTagSinglePayload for CycleChartSectionView.Role(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2412327A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CycleChartSectionView.Role()
{
  return &type metadata for CycleChartSectionView.Role;
}

unint64_t sub_2412327DC()
{
  unint64_t result = qword_268CFB3D8;
  if (!qword_268CFB3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB3D8);
  }
  return result;
}

uint64_t sub_241232830(uint64_t a1, uint64_t a2)
{
  sub_241232984(0, &qword_268CFAEC8, type metadata accessor for CycleChartCycle, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2412328C4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CycleChartCycle(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241232920(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CycleChartCycle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_241232984(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2412329E8()
{
  v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_role] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_header];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  v1[32] = 1;
  uint64_t v2 = &v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_footer];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  v2[16] = 1;
  int v3 = &v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_cycle];
  uint64_t v4 = type metadata accessor for CycleChartCycle(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(void *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_dayProvider] = 0;

  sub_241633038();
  __break(1u);
}

double sub_241232AE0@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(a1, sel_identifier);
  uint64_t v4 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  uint64_t v6 = v5;

  if (v4 == 0xD000000000000035 && v6 == 0x800000024165ACE0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v8 = type metadata accessor for SleepingWristTemperatureDataTypeDetailDebugActionProvider();
    uint64_t v9 = swift_allocObject();
    *(void *)(a2 + 24) = v8;
    *(void *)(a2 + 32) = sub_241232BEC();
    *(void *)a2 = v9;
    return result;
  }
  char v7 = sub_241633218();
  swift_bridgeObjectRelease();
  if (v7) {
    goto LABEL_5;
  }
  *(void *)(a2 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

double sub_241232BD4@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241232AE0(a1, a2);
}

unint64_t sub_241232BEC()
{
  unint64_t result = qword_268CFB3E0;
  if (!qword_268CFB3E0)
  {
    type metadata accessor for SleepingWristTemperatureDataTypeDetailDebugActionProvider();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB3E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for PregnancyWarningSignsArticleDataProvider()
{
  return &type metadata for PregnancyWarningSignsArticleDataProvider;
}

unint64_t sub_241232C58()
{
  return 0xD00000000000003FLL;
}

uint64_t sub_241232C74()
{
  return sub_241232DFC();
}

uint64_t sub_241232CA4()
{
  return sub_241232DFC();
}

uint64_t sub_241232CDC()
{
  return sub_241232DFC();
}

void sub_241232D0C()
{
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_26B0181A0;
  uint64_t v1 = (void *)sub_241631CC8();
  id v2 = objc_msgSend(self, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v1, v0, 0);

  if (!v2) {
    __break(1u);
  }
}

unint64_t sub_241232DD8()
{
  return 0xD000000000000016;
}

uint64_t sub_241232DFC()
{
  uint64_t v0 = sub_24162B7E8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_241631CA8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  char v7 = &v11[-v6];
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v9 = sub_241631D38();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

id sub_241232FEC()
{
  sub_2411BFDA0(0, (unint64_t *)&qword_26B0121F0);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24163B390;
  id result = objc_msgSend(self, sel_pregnancyType);
  if (result)
  {
    *(void *)(inited + 32) = result;
    sub_241631F48();
    if (inited >> 62)
    {
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v4 = sub_241633068();
      swift_bridgeObjectRelease();
      if (v4) {
        goto LABEL_4;
      }
    }
    else if (*(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_4:
      sub_2411C9E08(inited);
      uint64_t v3 = v2;
LABEL_7:
      swift_bridgeObjectRelease();
      return (id)v3;
    }
    uint64_t v3 = MEMORY[0x263F8EE88];
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

void sub_2412330E4()
{
  uint64_t v0 = sub_24162B7E8();
  MEMORY[0x270FA5388](v0 - 8);
  long long v288 = (char *)v269 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_241631CA8();
  uint64_t v287 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v269 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  char v7 = (char *)v269 - v6;
  sub_24123506C();
  uint64_t v280 = sub_24162C778();
  uint64_t v8 = *(void *)(v280 - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v282 = *(void *)(v8 + 72);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_24163D1F0;
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v11 = (id)qword_26B0181A0;
  uint64_t v12 = (void *)sub_241631CC8();
  id v13 = objc_msgSend(self, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v12, v11, 0);

  if (v13)
  {
    v269[1] = v10;
    unint64_t v14 = v10 + v9;
    *(void *)unint64_t v14 = v13;
    *(unsigned char *)(v14 + 8) = 0;
    uint64_t v15 = *MEMORY[0x263F42AB8];
    id v16 = *(void (**)(unint64_t))(v8 + 104);
    uint64_t v278 = v8 + 104;
    uint64_t v279 = v16;
    ((void (*)(unint64_t, uint64_t, uint64_t))v16)(v10 + v9, v15, v280);
    uint64_t v17 = (uint64_t *)(v10 + v9 + v282);
    unint64_t v276 = v10 + v9;
    sub_241631C38();
    uint64_t v18 = v287;
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v287 + 16);
    uint64_t v286 = v287 + 16;
    uint64_t v283 = v19;
    uint64_t v20 = v4;
    long long v21 = v4;
    uint64_t v22 = v2;
    v19(v21, v7, v2);
    id v23 = (id)qword_26B0181A0;
    sub_24162B7D8();
    unint64_t v285 = 0x800000024165AD40;
    uint64_t v24 = v20;
    uint64_t v25 = sub_241631D38();
    uint64_t v27 = v26;
    uint64_t v28 = *(void (**)(char *, uint64_t))(v18 + 8);
    uint64_t v287 = v18 + 8;
    uint64_t v284 = v28;
    v28(v7, v22);
    uint64_t *v17 = v25;
    v17[1] = v27;
    uint64_t v29 = v279;
    ((void (*)(uint64_t *, void, uint64_t))v279)(v17, *MEMORY[0x263F42AC0], v280);
    uint64_t v30 = v282;
    uint64_t v273 = 2 * v282;
    unint64_t v31 = v14 + 2 * v282;
    unint64_t v281 = 0xD000000000000013;
    sub_241631C38();
    uint64_t v277 = v24;
    uint64_t v32 = v22;
    uint64_t v33 = v22;
    os_log_type_t v34 = v283;
    v283(v24, v7, v32);
    id v35 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v36 = sub_241631D38();
    uint64_t v38 = v37;
    v284(v7, v33);
    *(void *)unint64_t v31 = v36;
    *(void *)(v31 + 8) = v38;
    *(unsigned char *)(v31 + 16) = 0;
    unsigned int v275 = *MEMORY[0x263F42AE0];
    v29(v31);
    double v39 = (uint64_t *)(v276 + v273 + v30);
    sub_241631C38();
    v34(v277, v7, v33);
    id v40 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v41 = sub_241631D38();
    uint64_t v43 = v42;
    uint64_t v44 = v33;
    v284(v7, v33);
    *double v39 = v41;
    v39[1] = v43;
    void v39[2] = 0;
    LODWORD(v273) = *MEMORY[0x263F42A80];
    uint64_t v46 = v279;
    uint64_t v45 = v280;
    v279((unint64_t)v39);
    uint64_t v272 = 4 * v282;
    unint64_t v47 = v276 + 4 * v282;
    sub_241631C38();
    uint64_t v274 = v44;
    v283(v277, v7, v44);
    id v48 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v49 = sub_241631D38();
    uint64_t v51 = v50;
    uint64_t v52 = v284;
    v284(v7, v44);
    *(void *)unint64_t v47 = v49;
    *(void *)(v47 + 8) = v51;
    *(unsigned char *)(v47 + 16) = 0;
    uint64_t v53 = v275;
    ((void (*)(unint64_t, void, uint64_t))v46)(v47, v275, v45);
    unint64_t v54 = v276;
    unint64_t v55 = v276 + v272 + v282;
    sub_241631C38();
    uint64_t v56 = v274;
    v283(v277, v7, v274);
    id v57 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v58 = sub_241631D38();
    uint64_t v60 = v59;
    uint64_t v61 = v56;
    v52(v7, v56);
    *(void *)unint64_t v55 = v58;
    *(void *)(v55 + 8) = v60;
    *(unsigned char *)(v55 + 16) = 0;
    uint64_t v62 = v53;
    uint64_t v63 = v280;
    ((void (*)(unint64_t, uint64_t, uint64_t))v279)(v55, v62, v280);
    unint64_t v64 = v54 + 6 * v282;
    sub_241631C38();
    double v65 = v277;
    uint64_t v66 = v61;
    v283(v277, v7, v61);
    id v67 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v68 = sub_241631D38();
    uint64_t v70 = v69;
    v284(v7, v61);
    *(void *)unint64_t v64 = v68;
    *(void *)(v64 + 8) = v70;
    *(unsigned char *)(v64 + 16) = 0;
    ((void (*)(unint64_t, void, uint64_t))v279)(v64, v275, v63);
    uint64_t v272 = 8 * v282;
    unint64_t v71 = v276;
    CGFloat v72 = (uint64_t *)(v276 + 7 * v282);
    sub_241631C38();
    v283(v65, v7, v61);
    id v73 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v74 = sub_241631D38();
    uint64_t v76 = v75;
    v284(v7, v61);
    *CGFloat v72 = v74;
    v72[1] = v76;
    v72[2] = 0;
    uint64_t v77 = v280;
    ((void (*)(uint64_t *, void, uint64_t))v279)(v72, v273, v280);
    uint64_t v78 = v272;
    unint64_t v79 = v71 + v272;
    sub_241631C38();
    v283(v277, v7, v61);
    id v80 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v81 = sub_241631D38();
    uint64_t v83 = v82;
    v284(v7, v61);
    *(void *)unint64_t v79 = v81;
    *(void *)(v79 + 8) = v83;
    *(unsigned char *)(v79 + 16) = 0;
    uint64_t v84 = v275;
    double v85 = (void (*)(unint64_t, uint64_t, uint64_t))v279;
    ((void (*)(unint64_t, void, uint64_t))v279)(v79, v275, v77);
    uint64_t v86 = v282;
    unint64_t v87 = v276;
    unint64_t v88 = v276 + v78 + v282;
    sub_241631C38();
    uint64_t v89 = v277;
    v283(v277, v7, v66);
    id v90 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v91 = sub_241631D38();
    uint64_t v93 = v92;
    v284(v7, v66);
    *(void *)unint64_t v88 = v91;
    *(void *)(v88 + 8) = v93;
    *(unsigned char *)(v88 + 16) = 0;
    v85(v88, v84, v280);
    *(void *)&long long v270 = v87 + 10 * v86;
    sub_2411BFDA0(0, (unint64_t *)&qword_26B013220);
    uint64_t v272 = v94;
    uint64_t v95 = swift_allocObject();
    *(_OWORD *)(v95 + 16) = xmmword_24163D200;
    sub_241631C38();
    uint64_t v96 = v89;
    uint64_t v97 = v89;
    uint64_t v98 = v283;
    v283(v97, v7, v66);
    id v99 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v100 = sub_241631D38();
    uint64_t v102 = v101;
    uint64_t v103 = v66;
    uint64_t v104 = v66;
    uint64_t v105 = v284;
    v284(v7, v103);
    *(void *)(v95 + 32) = v100;
    *(void *)(v95 + 40) = v102;
    sub_241631C38();
    v98(v96, v7, v104);
    id v106 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v107 = sub_241631D38();
    uint64_t v109 = v108;
    v105(v7, v104);
    *(void *)(v95 + 48) = v107;
    *(void *)(v95 + 56) = v109;
    sub_241631C38();
    v98(v277, v7, v104);
    id v110 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v111 = sub_241631D38();
    uint64_t v113 = v112;
    v105(v7, v104);
    *(void *)(v95 + 64) = v111;
    *(void *)(v95 + 72) = v113;
    sub_241631C38();
    uint64_t v114 = v283;
    v283(v277, v7, v104);
    id v115 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v116 = sub_241631D38();
    uint64_t v118 = v117;
    double v119 = v284;
    v284(v7, v104);
    *(void *)(v95 + 80) = v116;
    *(void *)(v95 + 88) = v118;
    sub_241631C38();
    v114(v277, v7, v104);
    id v120 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v121 = sub_241631D38();
    uint64_t v123 = v122;
    v119(v7, v104);
    *(void *)(v95 + 96) = v121;
    *(void *)(v95 + 104) = v123;
    *(void *)long long v270 = v95;
    int v271 = *MEMORY[0x263F42A88];
    uint64_t v124 = v280;
    ((void (*)(void))v279)();
    uint64_t v125 = v282;
    unint64_t v126 = v276;
    id v127 = (uint64_t *)(v276 + 11 * v282);
    sub_241631C38();
    id v128 = v277;
    uint64_t v129 = v274;
    v283(v277, v7, v274);
    id v130 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v131 = sub_241631D38();
    uint64_t v133 = v132;
    v284(v7, v129);
    *id v127 = v131;
    v127[1] = v133;
    v127[2] = 0;
    uint64_t v134 = v124;
    double v135 = v279;
    ((void (*)(unint64_t, void, uint64_t))v279)(v126 + 11 * v125, v273, v134);
    unint64_t v136 = v126 + 12 * v125;
    sub_241631C38();
    double v137 = v283;
    v283(v128, v7, v129);
    id v138 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v139 = sub_241631D38();
    uint64_t v141 = v140;
    v284(v7, v129);
    *(void *)unint64_t v136 = v139;
    *(void *)(v136 + 8) = v141;
    *(unsigned char *)(v136 + 16) = 0;
    uint64_t v142 = v275;
    ((void (*)(unint64_t, void, uint64_t))v135)(v136, v275, v280);
    unint64_t v143 = v276;
    unint64_t v144 = v276 + 13 * v282;
    sub_241631C38();
    v137(v128, v7, v129);
    id v145 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v146 = sub_241631D38();
    uint64_t v148 = v147;
    v284(v7, v129);
    *(void *)unint64_t v144 = v146;
    *(void *)(v144 + 8) = v148;
    *(unsigned char *)(v144 + 16) = 0;
    ((void (*)(unint64_t, uint64_t, uint64_t))v279)(v144, v142, v280);
    *(void *)&long long v270 = v143 + 14 * v282;
    uint64_t v149 = swift_allocObject();
    *(_OWORD *)(v149 + 16) = xmmword_24163CA90;
    sub_241631C38();
    uint64_t v150 = v128;
    CGRect v151 = v128;
    CGRect v152 = v283;
    v283(v150, v7, v129);
    id v153 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v154 = sub_241631D38();
    uint64_t v156 = v155;
    CGRect v157 = v284;
    v284(v7, v129);
    *(void *)(v149 + 32) = v154;
    *(void *)(v149 + 40) = v156;
    sub_241631C38();
    v152(v151, v7, v129);
    id v158 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v159 = sub_241631D38();
    uint64_t v161 = v160;
    v157(v7, v129);
    *(void *)(v149 + 48) = v159;
    *(void *)(v149 + 56) = v161;
    sub_241631C38();
    uint64_t v162 = v151;
    uint64_t v163 = v151;
    uint64_t v164 = v283;
    v283(v163, v7, v129);
    id v165 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v166 = sub_241631D38();
    uint64_t v168 = v167;
    uint64_t v169 = v284;
    v284(v7, v129);
    *(void *)(v149 + 64) = v166;
    *(void *)(v149 + 72) = v168;
    sub_241631C38();
    v164(v162, v7, v129);
    id v170 = (id)qword_26B0181A0;
    sub_24162B7D8();
    id v171 = v162;
    uint64_t v172 = sub_241631D38();
    uint64_t v174 = v173;
    v169(v7, v129);
    *(void *)(v149 + 80) = v172;
    *(void *)(v149 + 88) = v174;
    *(void *)long long v270 = v149;
    uint64_t v175 = v279;
    uint64_t v176 = v280;
    ((void (*)(void))v279)();
    *(void *)&long long v270 = 16 * v282;
    unint64_t v177 = v276;
    uint64_t v178 = (uint64_t *)(v276 + 15 * v282);
    sub_241631C38();
    v283(v171, v7, v129);
    id v179 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v180 = sub_241631D38();
    uint64_t v182 = v181;
    uint64_t v183 = v274;
    v284(v7, v274);
    uint64_t *v178 = v180;
    v178[1] = v182;
    v178[2] = 0;
    ((void (*)(uint64_t *, void, uint64_t))v175)(v178, v273, v176);
    uint64_t v184 = v177 + v270;
    sub_241631C38();
    uint64_t v185 = v277;
    v283(v277, v7, v183);
    id v186 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v187 = sub_241631D38();
    uint64_t v189 = v188;
    v284(v7, v183);
    *(void *)uint64_t v184 = v187;
    *(void *)(v184 + 8) = v189;
    *(unsigned char *)(v184 + 16) = 0;
    uint64_t v190 = v275;
    ((void (*)(uint64_t, void, uint64_t))v279)(v184, v275, v280);
    uint64_t v191 = v177 + v270 + v282;
    sub_241631C38();
    v283(v185, v7, v183);
    id v192 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v193 = sub_241631D38();
    uint64_t v195 = v194;
    v284(v7, v183);
    *(void *)uint64_t v191 = v193;
    *(void *)(v191 + 8) = v195;
    *(unsigned char *)(v191 + 16) = 0;
    ((void (*)(uint64_t, uint64_t, uint64_t))v279)(v191, v190, v280);
    v269[0] = v177 + 18 * v282;
    uint64_t v196 = swift_allocObject();
    long long v270 = xmmword_24163AC10;
    *(_OWORD *)(v196 + 16) = xmmword_24163AC10;
    sub_241631C38();
    uint64_t v197 = v283;
    v283(v185, v7, v183);
    id v198 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v199 = sub_241631D38();
    uint64_t v201 = v200;
    uint64_t v202 = v284;
    v284(v7, v183);
    *(void *)(v196 + 32) = v199;
    *(void *)(v196 + 40) = v201;
    sub_241631C38();
    v197(v277, v7, v183);
    id v203 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v204 = sub_241631D38();
    uint64_t v206 = v205;
    v202(v7, v183);
    *(void *)(v196 + 48) = v204;
    *(void *)(v196 + 56) = v206;
    sub_241631C38();
    uint64_t v207 = v283;
    v283(v277, v7, v183);
    id v208 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v209 = sub_241631D38();
    uint64_t v211 = v210;
    v202(v7, v183);
    *(void *)(v196 + 64) = v209;
    *(void *)(v196 + 72) = v211;
    *(void *)v269[0] = v196;
    uint64_t v212 = v279;
    uint64_t v213 = v280;
    ((void (*)(void))v279)();
    uint64_t v214 = v183;
    unint64_t v215 = v276;
    uint64_t v216 = (uint64_t *)(v276 + 19 * v282);
    sub_241631C38();
    id v217 = v277;
    v207(v277, v7, v214);
    id v218 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v219 = sub_241631D38();
    uint64_t v221 = v220;
    uint64_t v222 = v274;
    v284(v7, v274);
    uint64_t *v216 = v219;
    v216[1] = v221;
    v216[2] = 0;
    ((void (*)(uint64_t *, void, uint64_t))v212)(v216, v273, v213);
    unint64_t v223 = v215 + 20 * v282;
    sub_241631C38();
    v283(v217, v7, v222);
    id v224 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v225 = sub_241631D38();
    uint64_t v227 = v226;
    uint64_t v228 = v222;
    uint64_t v229 = v284;
    v284(v7, v222);
    *(void *)unint64_t v223 = v225;
    *(void *)(v223 + 8) = v227;
    *(unsigned char *)(v223 + 16) = 0;
    uint64_t v230 = v280;
    ((void (*)(unint64_t, void, uint64_t))v279)(v223, v275, v280);
    uint64_t v231 = v282;
    unint64_t v232 = v276 + 21 * v282;
    sub_241631C38();
    uint64_t v233 = v277;
    v283(v277, v7, v228);
    id v234 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v235 = sub_241631D38();
    uint64_t v237 = v236;
    v229(v7, v228);
    *(void *)unint64_t v232 = v235;
    *(void *)(v232 + 8) = v237;
    *(unsigned char *)(v232 + 16) = 0;
    ((void (*)(unint64_t, void, uint64_t))v279)(v232, v275, v230);
    v269[0] = v276 + 22 * v231;
    uint64_t v238 = swift_allocObject();
    *(_OWORD *)(v238 + 16) = v270;
    sub_241631C38();
    id v239 = v233;
    uint64_t v240 = v283;
    v283(v233, v7, v228);
    id v241 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v242 = sub_241631D38();
    uint64_t v244 = v243;
    v284(v7, v228);
    *(void *)(v238 + 32) = v242;
    *(void *)(v238 + 40) = v244;
    sub_241631C38();
    v240(v233, v7, v228);
    id v245 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v246 = sub_241631D38();
    uint64_t v248 = v247;
    uint64_t v249 = v274;
    uint64_t v250 = v284;
    v284(v7, v274);
    *(void *)(v238 + 48) = v246;
    *(void *)(v238 + 56) = v248;
    sub_241631C38();
    uint64_t v251 = v283;
    v283(v239, v7, v249);
    id v252 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v253 = sub_241631D38();
    uint64_t v255 = v254;
    uint64_t v256 = v274;
    v250(v7, v274);
    *(void *)(v238 + 64) = v253;
    *(void *)(v238 + 72) = v255;
    *(void *)v269[0] = v238;
    uint64_t v258 = v279;
    uint64_t v257 = v280;
    ((void (*)(void))v279)();
    uint64_t v259 = (uint64_t *)(v276 + 23 * v282);
    sub_241631C38();
    v251(v239, v7, v256);
    id v260 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v261 = sub_241631D38();
    uint64_t v263 = v262;
    v284(v7, v256);
    uint64_t *v259 = v261;
    v259[1] = v263;
    v259[2] = 0;
    ((void (*)(uint64_t *, void, uint64_t))v258)(v259, v273, v257);
    unint64_t v264 = v276 + 24 * v282;
    sub_241631C38();
    v283(v239, v7, v256);
    id v265 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v266 = sub_241631D38();
    uint64_t v268 = v267;
    v284(v7, v256);
    *(void *)unint64_t v264 = v266;
    *(void *)(v264 + 8) = v268;
    *(unsigned char *)(v264 + 16) = 0;
    ((void (*)(unint64_t, void, uint64_t))v258)(v264, v275, v257);
  }
  else
  {
    __break(1u);
  }
}

void sub_24123506C()
{
  if (!qword_268CFB3E8)
  {
    sub_24162C778();
    unint64_t v0 = sub_2416331E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFB3E8);
    }
  }
}

void sub_2412350C4(char a1, _OWORD *a2)
{
  sub_24123568C();
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v8 = swift_allocObject();
    *(unsigned char *)(v8 + 16) = a1;
    *(void *)(v8 + 24) = v2;
    long long v9 = a2[1];
    *(_OWORD *)(v8 + 32) = *a2;
    *(_OWORD *)(v8 + 48) = v9;
    *(_OWORD *)(v8 + 58) = *(_OWORD *)((char *)a2 + 26);
    *(void *)(v8 + 80) = sub_241236CF0;
    *(void *)(v8 + 88) = v7;
    id v10 = v2;
    sub_241236D68((uint64_t)a2);
    swift_retain();
    sub_241235AE8((uint64_t)sub_241236D54, v8, 2.0);

    swift_release();
    swift_release();
  }
  else
  {
    id v11 = (void *)sub_241631CC8();
    id v12 = (id)sub_241631CC8();
    objc_msgSend(v2, sel_failedTest_withFailure_, v11, v12);
  }
}

void sub_241235240(_OWORD *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24162DDE8();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24123568C();
  if (v7)
  {
    uint64_t v8 = v7;
    sub_241423D68();
    id v9 = objc_allocWithZone((Class)type metadata accessor for MenstrualCyclesRoomViewController());
    id v10 = sub_2413E9558((uint64_t)v6);
    objc_msgSend(v8, sel_pushViewController_animated_, v10, 1);
    uint64_t v11 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    sub_24155D0D0(v2, a1, (uint64_t)sub_241236CF0, v11);

    swift_release_n();
  }
  else
  {
    id v12 = (void *)sub_241631CC8();
    uint64_t v15 = sub_241631CC8();
    objc_msgSend(v2, sel_failedTest_withFailure_, v12, v15);

    id v13 = (void *)v15;
  }
}

uint64_t initializeWithCopy for TestOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return a1;
}

uint64_t assignWithCopy for TestOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  return a1;
}

__n128 initializeWithTake for TestOptions(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TestOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  return a1;
}

uint64_t getEnumTagSinglePayload for TestOptions(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 42)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TestOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 42) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 42) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TestOptions()
{
  return &type metadata for TestOptions;
}

void sub_24123568C()
{
  id v1 = objc_msgSend(v0, sel_connectedScenes);
  sub_2411B9D00(0, &qword_268CFB450);
  sub_241236F4C();
  uint64_t v2 = sub_2416320F8();

  long long v3 = (void *)sub_24127AEC4(v2);
  swift_bridgeObjectRelease();
  if (!v3) {
    return;
  }
  self;
  uint64_t v4 = (void *)swift_dynamicCastObjCClass();
  if (!v4)
  {
LABEL_20:

    return;
  }
  id v5 = objc_msgSend(v4, sel_windows);
  sub_2411B9D00(0, (unint64_t *)&unk_268CFB460);
  unint64_t v6 = sub_241631F28();

  if (v6 >> 62) {
    goto LABEL_33;
  }
  if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_34:

    swift_bridgeObjectRelease();
    return;
  }
LABEL_5:
  if ((v6 & 0xC000000000000001) != 0)
  {
    while (1)
    {
      id v7 = (id)MEMORY[0x245620370](0, v6);
LABEL_8:
      uint64_t v8 = v7;
      swift_bridgeObjectRelease();
      unint64_t v6 = (unint64_t)objc_msgSend(v8, sel_rootViewController);

      if (!v6) {
        goto LABEL_20;
      }
      self;
      id v9 = (void *)swift_dynamicCastObjCClass();
      if (!v9)
      {

        goto LABEL_20;
      }
      id v10 = objc_msgSend(v9, sel_viewControllers);
      if (v10)
      {
        uint64_t v11 = v10;
        sub_2411B9D00(0, (unint64_t *)&qword_268CFD4F0);
        unint64_t v12 = sub_241631F28();

        if (!(v12 >> 62)) {
          goto LABEL_12;
        }
      }
      else
      {
        unint64_t v12 = MEMORY[0x263F8EE78];
        if (!(MEMORY[0x263F8EE78] >> 62))
        {
LABEL_12:
          uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v13) {
            goto LABEL_31;
          }
          goto LABEL_13;
        }
      }
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v13 = sub_241633068();
      swift_bridgeObjectRelease();
      if (!v13)
      {
LABEL_31:

        swift_bridgeObjectRelease();
        return;
      }
LABEL_13:
      if ((v12 & 0xC000000000000001) != 0)
      {
        uint64_t v14 = 0;
        while (1)
        {
          MEMORY[0x245620370](v14, v12);
          uint64_t v15 = v14 + 1;
          if (__OFADD__(v14, 1)) {
            break;
          }
          self;
          if (!swift_dynamicCastObjCClass())
          {
            swift_unknownObjectRelease();
            ++v14;
            if (v15 != v13) {
              continue;
            }
          }
          goto LABEL_31;
        }
        __break(1u);
LABEL_33:
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        uint64_t v20 = sub_241633068();
        swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_5;
        }
        goto LABEL_34;
      }
      uint64_t v16 = 0;
      while (1)
      {
        uint64_t v17 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          break;
        }
        uint64_t v18 = *(void **)(v12 + 8 * v16 + 32);
        self;
        if (swift_dynamicCastObjCClass())
        {
          id v19 = v18;
          goto LABEL_31;
        }
        ++v16;
        if (v17 == v13) {
          goto LABEL_31;
        }
      }
      __break(1u);
    }
  }
  if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v7 = *(id *)(v6 + 32);
    goto LABEL_8;
  }
  __break(1u);
}

void sub_2412359E0(void *a1, char a2, void *a3, _OWORD *a4, uint64_t (*a5)(), uint64_t a6)
{
  if (a2)
  {
    if (a2 == 1) {
      sub_24155DA1C((uint64_t)a4, a5, a6);
    }
    else {
      sub_24155CBA8(a3, (uint64_t)a4, a5, a6);
    }
  }
  else
  {
    uint64_t v10 = swift_allocObject();
    long long v11 = a4[1];
    *(_OWORD *)(v10 + 16) = *a4;
    *(_OWORD *)(v10 + 32) = v11;
    *(_OWORD *)(v10 + 42) = *(_OWORD *)((char *)a4 + 26);
    *(void *)(v10 + 64) = a1;
    *(void *)(v10 + 72) = a5;
    *(void *)(v10 + 80) = a6;
    sub_241236D68((uint64_t)a4);
    id v12 = a1;
    swift_retain();

    swift_release();
  }
}

void sub_241235AE8(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_24162DDE8();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241423D68();
  id v11 = objc_allocWithZone((Class)type metadata accessor for MenstrualCyclesRoomViewController());
  id v12 = sub_2413E9558((uint64_t)v10);
  uint64_t v13 = self;
  objc_msgSend(v13, sel_begin);
  objc_msgSend(v4, sel_pushViewController_animated_, v12, 1);
  uint64_t v14 = swift_allocObject();
  *(double *)(v14 + 16) = a3;
  *(void *)(v14 + 24) = a1;
  *(void *)(v14 + 32) = a2;
  *(void *)(v14 + 40) = v12;
  aBlock[4] = sub_241236DD4;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2411987F4;
  aBlock[3] = &unk_26F56A9A0;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v16 = v12;
  swift_release();
  objc_msgSend(v13, sel_setCompletionBlock_, v15);
  _Block_release(v15);
  objc_msgSend(v13, sel_commit);
}

void sub_241235CAC(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x245621790](v1);
  if (v2)
  {
    long long v3 = (void *)v2;
    sub_24123568C();
    id v5 = v4;

    if (v5)
    {
    }
  }
}

uint64_t sub_241235D2C(uint64_t a1, uint64_t a2, void *a3, double a4)
{
  uint64_t v26 = a1;
  uint64_t v27 = a3;
  uint64_t v6 = sub_241631488();
  uint64_t v32 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2416314A8();
  uint64_t v30 = *(void *)(v9 - 8);
  uint64_t v31 = v9;
  MEMORY[0x270FA5388](v9);
  id v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2416314C8();
  uint64_t v29 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v25 - v17;
  sub_2411B9D00(0, (unint64_t *)&qword_26B0130B0);
  id v19 = (void *)sub_2416325A8();
  sub_2416314B8();
  MEMORY[0x24561E9C0](v15, a4);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v13 + 8);
  v28(v15, v12);
  uint64_t v20 = (void *)swift_allocObject();
  long long v21 = v27;
  void v20[2] = v26;
  v20[3] = a2;
  void v20[4] = v21;
  aBlock[4] = sub_241236E24;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2411987F4;
  aBlock[3] = &unk_26F56A9F0;
  uint64_t v22 = _Block_copy(aBlock);
  swift_retain();
  id v23 = v21;
  swift_release();
  sub_241631498();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_241236EAC((unint64_t *)&qword_26B013080, MEMORY[0x263F8F030]);
  sub_241236E54();
  sub_241236EAC((unint64_t *)&qword_26B0130A0, (void (*)(uint64_t))sub_241236E54);
  sub_241632D08();
  MEMORY[0x24561FA50](v18, v11, v8, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v31);
  return ((uint64_t (*)(char *, uint64_t))v28)(v18, v29);
}

uint64_t sub_241236118@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)&long long v46 = 0x656D614E74736574;
  *((void *)&v46 + 1) = 0xE800000000000000;
  sub_241632E18();
  if (!*(void *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_88;
  }
  unint64_t v6 = sub_24154560C((uint64_t)v45);
  if ((v7 & 1) == 0)
  {
LABEL_88:
    __break(1u);
LABEL_89:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  sub_2411B69BC(*(void *)(a1 + 56) + 32 * v6, (uint64_t)v44);
  sub_241236FB4((uint64_t)v45);
  sub_241205EDC(v44, &v46);
  swift_dynamicCast();
  uint64_t v2 = v42;
  uint64_t v3 = v43;
  *(void *)&v44[0] = 0x6F69746172657469;
  *((void *)&v44[0] + 1) = 0xEA0000000000736ELL;
  sub_241632E18();
  if (*(void *)(a1 + 16) && (unint64_t v8 = sub_24154560C((uint64_t)v45), (v9 & 1) != 0))
  {
    sub_2411B69BC(*(void *)(a1 + 56) + 32 * v8, (uint64_t)&v46);
  }
  else
  {
    long long v46 = 0u;
    long long v47 = 0u;
  }
  sub_241236FB4((uint64_t)v45);
  if (!*((void *)&v47 + 1))
  {
    sub_2411E0320((uint64_t)&v46);
    goto LABEL_19;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_19:
    uint64_t v18 = 0;
    char v19 = 1;
    goto LABEL_57;
  }
  uint64_t result = *(void *)&v44[0];
  uint64_t v11 = HIBYTE(*((void *)&v44[0] + 1)) & 0xFLL;
  uint64_t v12 = *(void *)&v44[0] & 0xFFFFFFFFFFFFLL;
  if ((*((void *)&v44[0] + 1) & 0x2000000000000000) != 0) {
    uint64_t v13 = HIBYTE(*((void *)&v44[0] + 1)) & 0xFLL;
  }
  else {
    uint64_t v13 = *(void *)&v44[0] & 0xFFFFFFFFFFFFLL;
  }
  if (!v13) {
    goto LABEL_89;
  }
  if ((*((void *)&v44[0] + 1) & 0x1000000000000000) != 0)
  {
    uint64_t v15 = (uint64_t)sub_24125AF8C(*(uint64_t *)&v44[0], *((uint64_t *)&v44[0] + 1), 10);
    char v17 = v41;
LABEL_54:
    swift_bridgeObjectRelease();
    char v19 = v17 & 1;
    if (v17) {
      uint64_t v18 = 0;
    }
    else {
      uint64_t v18 = v15;
    }
LABEL_57:
    *(void *)&v44[0] = 0x65446C6C6F726373;
    *((void *)&v44[0] + 1) = 0xEB0000000061746CLL;
    sub_241632E18();
    if (*(void *)(a1 + 16) && (unint64_t v29 = sub_24154560C((uint64_t)v45), (v30 & 1) != 0))
    {
      sub_2411B69BC(*(void *)(a1 + 56) + 32 * v29, (uint64_t)&v46);
    }
    else
    {
      long long v46 = 0u;
      long long v47 = 0u;
    }
    sub_241236FB4((uint64_t)v45);
    if (*((void *)&v47 + 1))
    {
      if (swift_dynamicCast())
      {
        uint64_t v31 = sub_241257394(*(uint64_t *)&v44[0], *((unint64_t *)&v44[0] + 1));
        if (v32) {
          double v33 = 0.0;
        }
        else {
          double v33 = (double)v31;
        }
        BOOL v34 = (v32 & 1) != 0;
        goto LABEL_69;
      }
    }
    else
    {
      sub_2411E0320((uint64_t)&v46);
    }
    BOOL v34 = 1;
    double v33 = 0.0;
LABEL_69:
    *(void *)&v44[0] = 0x545052657375;
    *((void *)&v44[0] + 1) = 0xE600000000000000;
    sub_241632E18();
    if (*(void *)(a1 + 16) && (unint64_t v35 = sub_24154560C((uint64_t)v45), (v36 & 1) != 0))
    {
      sub_2411B69BC(*(void *)(a1 + 56) + 32 * v35, (uint64_t)&v46);
    }
    else
    {
      long long v46 = 0u;
      long long v47 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_241236FB4((uint64_t)v45);
    if (*((void *)&v47 + 1))
    {
      uint64_t result = swift_dynamicCast();
      if (result)
      {
        if (v44[0] == __PAIR128__(0xE300000000000000, 5457241))
        {
          uint64_t result = swift_bridgeObjectRelease();
          char v37 = 1;
        }
        else
        {
          char v37 = sub_241633218();
          uint64_t result = swift_bridgeObjectRelease();
        }
        goto LABEL_79;
      }
    }
    else
    {
      uint64_t result = sub_2411E0320((uint64_t)&v46);
    }
    char v37 = 0;
LABEL_79:
    *(void *)a2 = v2;
    *(void *)(a2 + 8) = v3;
    *(void *)(a2 + 16) = v18;
    *(unsigned char *)(a2 + 24) = v19 & 1;
    *(double *)(a2 + 32) = v33;
    *(unsigned char *)(a2 + 40) = v34;
    *(unsigned char *)(a2 + 41) = v37 & 1;
    return result;
  }
  if ((*((void *)&v44[0] + 1) & 0x2000000000000000) == 0)
  {
    if ((*(void *)&v44[0] & 0x1000000000000000) != 0) {
      uint64_t v14 = (unsigned __int8 *)((*((void *)&v44[0] + 1) & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v14 = (unsigned __int8 *)sub_241632F08();
    }
    uint64_t v15 = (uint64_t)sub_24125AF74(v14, v12, 10);
    char v17 = v16 & 1;
    goto LABEL_54;
  }
  v45[0] = *(void *)&v44[0];
  v45[1] = *((void *)&v44[0] + 1) & 0xFFFFFFFFFFFFFFLL;
  if (LOBYTE(v44[0]) == 43)
  {
    if (!v11) {
      goto LABEL_93;
    }
    if (v11 == 1 || (BYTE1(v44[0]) - 48) > 9u) {
      goto LABEL_41;
    }
    uint64_t v15 = (BYTE1(v44[0]) - 48);
    if (v11 != 2)
    {
      if ((BYTE2(v44[0]) - 48) > 9u) {
        goto LABEL_41;
      }
      uint64_t v15 = 10 * (BYTE1(v44[0]) - 48) + (BYTE2(v44[0]) - 48);
      uint64_t v20 = v11 - 3;
      if (v20)
      {
        long long v21 = (unsigned __int8 *)v45 + 3;
        while (1)
        {
          unsigned int v22 = *v21 - 48;
          if (v22 > 9) {
            goto LABEL_41;
          }
          uint64_t v23 = 10 * v15;
          if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63) {
            goto LABEL_41;
          }
          uint64_t v15 = v23 + v22;
          if (__OFADD__(v23, v22)) {
            goto LABEL_41;
          }
          char v17 = 0;
          ++v21;
          if (!--v20) {
            goto LABEL_54;
          }
        }
      }
    }
LABEL_53:
    char v17 = 0;
    goto LABEL_54;
  }
  if (LOBYTE(v44[0]) != 45)
  {
    if (!v11 || (LOBYTE(v44[0]) - 48) > 9u) {
      goto LABEL_41;
    }
    uint64_t v15 = (LOBYTE(v44[0]) - 48);
    if (v11 != 1)
    {
      if ((BYTE1(v44[0]) - 48) > 9u) {
        goto LABEL_41;
      }
      uint64_t v15 = 10 * (LOBYTE(v44[0]) - 48) + (BYTE1(v44[0]) - 48);
      uint64_t v24 = v11 - 2;
      if (v24)
      {
        uint64_t v25 = (unsigned __int8 *)v45 + 2;
        while (1)
        {
          unsigned int v26 = *v25 - 48;
          if (v26 > 9) {
            goto LABEL_41;
          }
          uint64_t v27 = 10 * v15;
          if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63) {
            goto LABEL_41;
          }
          uint64_t v15 = v27 + v26;
          if (__OFADD__(v27, v26)) {
            goto LABEL_41;
          }
          char v17 = 0;
          ++v25;
          if (!--v24) {
            goto LABEL_54;
          }
        }
      }
    }
    goto LABEL_53;
  }
  if (v11)
  {
    if (v11 != 1 && (BYTE1(v44[0]) - 48) <= 9u)
    {
      if (v11 == 2)
      {
        char v17 = 0;
        uint64_t v15 = -(uint64_t)(BYTE1(v44[0]) - 48);
        goto LABEL_54;
      }
      if ((BYTE2(v44[0]) - 48) <= 9u)
      {
        uint64_t v15 = -10 * (BYTE1(v44[0]) - 48) - (BYTE2(v44[0]) - 48);
        uint64_t v28 = v11 - 3;
        if (!v28) {
          goto LABEL_53;
        }
        uint64_t v38 = (unsigned __int8 *)v45 + 3;
        while (1)
        {
          unsigned int v39 = *v38 - 48;
          if (v39 > 9) {
            break;
          }
          uint64_t v40 = 10 * v15;
          if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63) {
            break;
          }
          uint64_t v15 = v40 - v39;
          if (__OFSUB__(v40, v39)) {
            break;
          }
          char v17 = 0;
          ++v38;
          if (!--v28) {
            goto LABEL_54;
          }
        }
      }
    }
LABEL_41:
    uint64_t v15 = 0;
    char v17 = 1;
    goto LABEL_54;
  }
  __break(1u);
LABEL_93:
  __break(1u);
  return result;
}

uint64_t sub_241236738(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v37 = a1;
  uint64_t v7 = sub_24162EFA8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v31 - v12;
  sub_24162EF48();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v14 = sub_24162EF98();
  os_log_type_t v15 = sub_2416322E8();
  if (os_log_type_enabled(v14, v15))
  {
    char v36 = v10;
    uint64_t v34 = v7;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    *(void *)&v40[0] = v33;
    *(_DWORD *)uint64_t v16 = 136446466;
    if (!a3)
    {
LABEL_22:
      uint64_t result = swift_bridgeObjectRelease_n();
      __break(1u);
      goto LABEL_23;
    }
    uint64_t v35 = v8;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v32 = a2;
    uint64_t v39 = sub_2411B6898(a2, a3, (uint64_t *)v40);
    sub_241632C28();
    uint64_t result = swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 2082;
    if (!a4)
    {
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    v31[1] = v16 + 14;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v18 = sub_241631B48();
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    uint64_t v39 = sub_2411B6898(v18, v20, (uint64_t *)v40);
    sub_241632C28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v14, v15, "Executing test %{public}s with options %{public}s", (uint8_t *)v16, 0x16u);
    uint64_t v21 = v33;
    swift_arrayDestroy();
    MEMORY[0x245621640](v21, -1, -1);
    MEMORY[0x245621640](v16, -1, -1);

    uint64_t v7 = v34;
    uint64_t v8 = v35;
    unsigned int v22 = *(void (**)(char *, uint64_t))(v35 + 8);
    v22(v13, v34);
    uint64_t v10 = v36;
    a2 = v32;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    unsigned int v22 = *(void (**)(char *, uint64_t))(v8 + 8);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v22)(v13, v7);
    if (!a4)
    {
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
  }
  uint64_t v23 = _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241236118(v23, (uint64_t)v40);
  if (!a3)
  {
    __break(1u);
    goto LABEL_22;
  }
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  unint64_t v24 = sub_241633108();
  uint64_t result = swift_bridgeObjectRelease();
  if (v24 <= 2)
  {
    if (v37)
    {
      sub_2412350C4(v24, v40);
LABEL_15:
      sub_241236C8C((uint64_t)v40);
      return 1;
    }
    goto LABEL_25;
  }
  if (a2 == 0x64616F4C6D6F6F72 && a3 == 0xE800000000000000 || (uint64_t result = sub_241633218(), (result & 1) != 0))
  {
    if (v37)
    {
      sub_241235240(v40);
      goto LABEL_15;
    }
LABEL_26:
    __break(1u);
    return result;
  }
  uint64_t v25 = a2;
  sub_241236C8C((uint64_t)v40);
  sub_24162EF48();
  swift_bridgeObjectRetain_n();
  unsigned int v26 = sub_24162EF98();
  os_log_type_t v27 = sub_2416322C8();
  if (os_log_type_enabled(v26, v27))
  {
    char v36 = v10;
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v39 = v29;
    uint64_t v35 = v8;
    *(_DWORD *)uint64_t v28 = 136446210;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v38 = sub_2411B6898(v25, a3, &v39);
    sub_241632C28();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24118E000, v26, v27, "No test configured by name %{public}s", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v29, -1, -1);
    MEMORY[0x245621640](v28, -1, -1);

    char v30 = v36;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    char v30 = v10;
  }
  v22(v30, v7);
  return 0;
}

uint64_t sub_241236C8C(uint64_t a1)
{
  return a1;
}

uint64_t sub_241236CB8()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_241236CF0()
{
  sub_241235CAC(v0);
}

uint64_t sub_241236D0C()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 96, 7);
}

void sub_241236D54(void *a1)
{
  sub_2412359E0(a1, *(unsigned char *)(v1 + 16), *(void **)(v1 + 24), (_OWORD *)(v1 + 32), *(uint64_t (**)())(v1 + 80), *(void *)(v1 + 88));
}

uint64_t sub_241236D68(uint64_t a1)
{
  return a1;
}

uint64_t sub_241236D94()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_241236DD4()
{
  return sub_241235D2C(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(double *)(v0 + 16));
}

uint64_t sub_241236DE4()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_241236E24()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

void sub_241236E54()
{
  if (!qword_26B013090)
  {
    sub_241631488();
    unint64_t v0 = sub_241631FA8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B013090);
    }
  }
}

uint64_t sub_241236EAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241236EF4()
{
  swift_bridgeObjectRelease();

  swift_release();

  return MEMORY[0x270FA0238](v0, 88, 7);
}

void sub_241236F3C(void *a1)
{
  sub_24155D534(a1, (uint64_t)(v1 + 2), v1[8], v1[9], v1[10]);
}

unint64_t sub_241236F4C()
{
  unint64_t result = qword_268CFB458;
  if (!qword_268CFB458)
  {
    sub_2411B9D00(255, &qword_268CFB450);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB458);
  }
  return result;
}

uint64_t sub_241236FB4(uint64_t a1)
{
  return a1;
}

uint64_t sub_241237010()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24162EFA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162EF48();
  unint64_t v6 = sub_24162EF98();
  os_log_type_t v7 = sub_2416322E8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v17 = v2;
    uint64_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v19 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t v11 = sub_2416333E8();
    uint64_t v18 = sub_2411B6898(v11, v12, &v19);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v6, v7, "[%{public}s] Deallocated", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v10, -1, -1);
    MEMORY[0x245621640](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v17);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  swift_release();
  uint64_t v13 = v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin47SharedProjectionHighlightModelGeneratorPipeline_domain;
  uint64_t v14 = sub_24162C128();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  objc_release(*(id *)(v1
                     + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin47SharedProjectionHighlightModelGeneratorPipeline_analysisChangeDetector));
  swift_release();
  return v1;
}

uint64_t sub_241237298()
{
  sub_241237010();

  return swift_deallocClassInstance();
}

uint64_t sub_2412372F0()
{
  return type metadata accessor for SharedProjectionHighlightModelGeneratorPipeline();
}

uint64_t sub_2412372F8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241237308()
{
  uint64_t v1 = sub_24162C1C8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_241237398()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2412373D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return a1;
}

uint64_t _s23CycleLogSpacerComponentVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t _s23CycleLogSpacerComponentVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t _s23CycleLogSpacerComponentVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s23CycleLogSpacerComponentVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s23CycleLogSpacerComponentVMa()
{
  return &_s23CycleLogSpacerComponentVN;
}

__n128 _s17CycleLogComponentVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *_s17CycleLogComponentVMa()
{
  return &_s17CycleLogComponentVN;
}

uint64_t _s17CycleLogComponentVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t _s17CycleLogComponentVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t _s17CycleLogComponentVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t _s17CycleLogComponentVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationWhenNotAvailable(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NotificationWhenNotAvailable(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s23CycleLogHeaderComponentVMa()
{
  return &_s23CycleLogHeaderComponentVN;
}

uint64_t _s30PregnancyModeTimelineComponentVwxx()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t _s30PregnancyModeTimelineComponentVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_retain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t _s30PregnancyModeTimelineComponentVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t _s30PregnancyModeTimelineComponentVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MCSampleChangeSet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MCSampleChangeSet(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s30PregnancyModeTimelineComponentVMa()
{
  return &_s30PregnancyModeTimelineComponentVN;
}

ValueMetadata *_s29CycleLoggingHelpTileComponentVMa()
{
  return &_s29CycleLoggingHelpTileComponentVN;
}

uint64_t _s28InteractiveTimelineComponentVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_release();

  return swift_release();
}

uint64_t _s28InteractiveTimelineComponentVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  id v6 = v5;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t _s28InteractiveTimelineComponentVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a2 + 16);
  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v4;
  id v6 = v4;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithCopy for StaticPillConfiguration(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s28InteractiveTimelineComponentVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t _s28InteractiveTimelineComponentVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s28InteractiveTimelineComponentVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s28InteractiveTimelineComponentVMa()
{
  return &_s28InteractiveTimelineComponentVN;
}

uint64_t sub_241237C8C()
{
  uint64_t v1 = *v0;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return v1;
}

void *sub_241237CBC()
{
  uint64_t v1 = *(void *)(v0 + 24);
  char v2 = *(unsigned char *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  if (sub_24162DDD8() != 1) {
    return 0;
  }
  type metadata accessor for InteractiveTimelineDataSource();
  swift_allocObject();
  swift_retain();
  swift_retain();
  uint64_t v4 = sub_24124B750(v1, v2, v3);
  sub_241239044(&qword_268CFB4E0, (void (*)(uint64_t))type metadata accessor for InteractiveTimelineDataSource);
  return v4;
}

void *sub_241237D84()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  char v4 = *(unsigned char *)(v0 + 40);
  if (sub_24162DDD8() != 1) {
    return 0;
  }
  swift_retain();
  swift_retain();
  swift_retain();
  sub_24162DDC8();
  sub_24162DD98();
  type metadata accessor for CycleLogHeaderDataSource();
  swift_allocObject();
  uint64_t v5 = sub_2413E5558(v4, v2, v1, v3, (uint64_t)v8, (uint64_t)&v7);
  swift_release();
  swift_release();
  swift_release();
  sub_241239044(&qword_268CFB4F8, (void (*)(uint64_t))type metadata accessor for CycleLogHeaderDataSource);
  return v5;
}

void *sub_241237E9C(uint64_t a1)
{
  return sub_241238868(a1, *(unsigned char *)(v1 + 16));
}

void sub_241237EA4()
{
  if (sub_24162DDD8() == 1)
  {
    uint64_t v2 = *(void *)(v0 + 16);
    uint64_t v1 = *(void *)(v0 + 24);
    uint64_t v3 = *(void *)(v0 + 32);
    int v4 = *(unsigned __int8 *)(v0 + 40);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_24162DDC8();
    sub_24162DD98();
    type metadata accessor for CycleLogDataSource();
    swift_allocObject();
    uint64_t v5 = sub_241290F64(0, v2, v1, v3, v4, (uint64_t)v19, (uint64_t)v18);
    swift_release();
    swift_release();
    swift_release();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_24162DDC8();
    sub_24162DD98();
    swift_allocObject();
    id v6 = sub_241290F64(1, v2, v1, v3, v4, (uint64_t)v19, (uint64_t)v18);
    swift_release();
    swift_release();
    swift_release();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_24162DDC8();
    sub_24162DD98();
    swift_allocObject();
    uint64_t v7 = sub_241290F64(2, v2, v1, v3, v4, (uint64_t)v19, (uint64_t)v18);
    swift_release();
    swift_release();
    swift_release();
    id v8 = objc_msgSend(self, sel_sharedBehavior);
    if (v8)
    {
      uint64_t v9 = v8;
      id v10 = objc_msgSend(v8, sel_features);

      if (v10)
      {
        unsigned int v11 = objc_msgSend(v10, sel_stanley);

        if (v11)
        {
          uint64_t v12 = type metadata accessor for CycleLogLayoutEngine();
          uint64_t v13 = swift_allocObject();
          *(void *)(v13 + 16) = 0x4072C00000000000;
          *(void *)(v13 + 32) = 0;
          swift_unknownObjectWeakInit();
          uint64_t v14 = sub_241239044((unint64_t *)&unk_268CFB500, (void (*)(uint64_t))type metadata accessor for CycleLogDataSource);
          v19[3] = v12;
          unsigned char v19[4] = sub_241239044((unint64_t *)&qword_268CFA588, (void (*)(uint64_t))type metadata accessor for CycleLogLayoutEngine);
          v19[0] = v13;
          type metadata accessor for CycleTrackingMultiColumnDataSource(0);
          swift_allocObject();
          sub_241238D28(0, (unint64_t *)&qword_268CFB510, (void (*)(uint64_t))sub_241238CD4);
          uint64_t v15 = swift_allocObject();
          *(_OWORD *)(v15 + 16) = xmmword_24163A4F0;
          *(void *)(v15 + 32) = v6;
          *(void *)(v15 + 40) = v14;
          *(void *)(v15 + 48) = v7;
          *(void *)(v15 + 56) = v14;
          sub_2411A3DF4((uint64_t)v19, (uint64_t)v18);
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v16 = sub_24162D5B8();
          _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v19);
          *(void *)(v13 + 32) = MEMORY[0x263F44028];
          swift_unknownObjectWeakAssign();
          type metadata accessor for CycleTrackingSizeClassResponsiveDataSource(0);
          uint64_t v17 = swift_allocObject();
          swift_retain();
          swift_retain();
          sub_2412389E8((uint64_t)v5, v16, v17);
          swift_release();
          swift_release();
          swift_release();
          swift_release_n();
          swift_release_n();
        }
        else
        {
          swift_release();
          swift_release();
          sub_241239044((unint64_t *)&unk_268CFB500, (void (*)(uint64_t))type metadata accessor for CycleLogDataSource);
        }
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void *sub_24123833C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  int v2 = *(unsigned __int8 *)(v0 + 24);
  uint64_t v3 = *(void **)(v0 + 32);
  if (sub_24162DDD8() != 1) {
    return 0;
  }
  int v4 = (void *)sub_24162DDB8();
  type metadata accessor for PregnancyModeTimelineDataSource();
  uint64_t v5 = swift_allocObject();
  swift_retain();
  swift_unknownObjectRetain();
  id v6 = sub_241238420(v4, v1, v3, v2, v5);
  sub_241239044(&qword_268CFB4F0, (void (*)(uint64_t))type metadata accessor for PregnancyModeTimelineDataSource);
  return v6;
}

void *sub_241238420(void *a1, uint64_t a2, void *a3, int a4, uint64_t a5)
{
  int v30 = a4;
  uint64_t v28 = a1;
  uint64_t v29 = a3;
  uint64_t v7 = sub_24162B788();
  uint64_t v31 = *(void *)(v7 - 8);
  uint64_t v32 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_241631AC8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24162B7F8();
  uint64_t v15 = *(void *)(v14 - 8);
  __n128 v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(a5 + 65) = 0;
  *(void *)(a5 + 80) = 0;
  (*(void (**)(char *, void, uint64_t, __n128))(v15 + 104))(v18, *MEMORY[0x263F07740], v14, v16);
  swift_retain();
  sub_24162B808();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  uint64_t v19 = v28;
  *(void *)(a5 + 40) = v28;
  *(void *)(a5 + 48) = a2;
  *(void *)(a5 + 56) = &off_26F578698;
  uint64_t v20 = a2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleLoggingDataProvider_currentDay;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v20, v10);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a5 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin31PregnancyModeTimelineDataSource_currentDayIndex, v13, v10);
  uint64_t v21 = v29;
  *(void *)(a5 + 72) = v29;
  *(unsigned char *)(a5 + 64) = v30;
  id v22 = v19;
  swift_retain();
  swift_unknownObjectRetain();
  swift_release();
  sub_241238D28(0, (unint64_t *)&qword_268D00EC0, MEMORY[0x263F44068]);
  sub_24162D678();
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_241637EE0;
  sub_24162B778();
  sub_24162B738();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v32);
  sub_24162D668();
  unint64_t v24 = sub_241341D68(v23, 1);
  swift_retain();
  objc_msgSend(v21, sel_registerObserver_isUserInitiated_, v24, 1);
  uint64_t v25 = *(void *)(a2 + 16);
  sub_2411B7D14();
  swift_retain();
  unsigned int v26 = (void *)sub_2416325A8();
  objc_msgSend(*(id *)(v25 + 16), sel_registerObserver_queue_, v24, v26);
  swift_release_n();
  swift_release();

  swift_unknownObjectRelease();
  return v24;
}

void *sub_241238868(uint64_t a1, char a2)
{
  if (sub_24162DDD8() != 1) {
    return 0;
  }
  type metadata accessor for CycleLogSpacerDataSource();
  *(unsigned char *)(swift_allocObject() + 40) = a2 & 1;
  sub_241238D28(0, (unint64_t *)&qword_268D00EC0, MEMORY[0x263F44068]);
  sub_24162D678();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_241637EE0;
  sub_24162D668();
  int v4 = sub_241341D68(v3, 0);
  sub_241239044(&qword_268CFB540, (void (*)(uint64_t))type metadata accessor for CycleLogSpacerDataSource);
  return v4;
}

uint64_t sub_2412389E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_241239044(&qword_268CFB520, (void (*)(uint64_t))type metadata accessor for CycleLogDataSource);
  uint64_t v7 = sub_241239044((unint64_t *)&unk_268CFB500, (void (*)(uint64_t))type metadata accessor for CycleLogDataSource);
  uint64_t v8 = (void *)(a3 + qword_268D032F8);
  *uint64_t v8 = a1;
  v8[1] = v6;
  v8[2] = v7;
  uint64_t v9 = MEMORY[0x263F445B8];
  uint64_t v10 = (void *)(a3 + qword_268D032F0);
  *uint64_t v10 = a2;
  v10[1] = v9;
  uint64_t v11 = MEMORY[0x263F440A0];
  void v10[2] = MEMORY[0x263F440A0];
  sub_241238D28(0, (unint64_t *)&qword_268CFB510, (void (*)(uint64_t))sub_241238CD4);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_24163A4F0;
  *(void *)(v12 + 32) = a2;
  *(void *)(v12 + 40) = v11;
  *(void *)(v12 + 48) = a1;
  *(void *)(v12 + 56) = v7;
  *(void *)(a3 + qword_268D03300) = v12;
  sub_241238D28(0, &qword_268CFB528, (void (*)(uint64_t))sub_241238D7C);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24163A4F0;
  *(void *)(inited + 32) = 1;
  *(void *)(inited + 40) = a1;
  *(void *)(inited + 48) = v6;
  *(void *)(inited + 56) = v7;
  *(void *)(inited + 64) = 2;
  *(void *)(inited + 72) = a2;
  *(void *)(inited + 80) = v9;
  *(void *)(inited + 88) = v11;
  sub_2414E73C0(inited);
  swift_setDeallocating();
  sub_241238D7C();
  swift_retain_n();
  swift_retain_n();
  swift_arrayDestroy();
  swift_retain();
  return sub_24162DFB8();
}

uint64_t sub_241238BE4()
{
  if (sub_24162DDD8() != 1) {
    return 0;
  }
  sub_24162DD98();
  sub_2411B6854(v4, v4[3]);
  uint64_t v0 = (void *)sub_24162BCA8();
  id v1 = objc_allocWithZone((Class)type metadata accessor for CycleLoggingHelpTileDataSource(0));
  uint64_t v2 = sub_2413F7690(v0);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v4);
  sub_241239044(&qword_268CFB4E8, (void (*)(uint64_t))type metadata accessor for CycleLoggingHelpTileDataSource);
  return v2;
}

unint64_t sub_241238CD4()
{
  unint64_t result = qword_268D00FB0;
  if (!qword_268D00FB0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268D00FB0);
  }
  return result;
}

void sub_241238D28(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2416331E8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241238D7C()
{
  if (!qword_268CFB530)
  {
    type metadata accessor for UIUserInterfaceSizeClass(255);
    sub_241238DEC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CFB530);
    }
  }
}

unint64_t sub_241238DEC()
{
  unint64_t result = qword_268CFB538;
  if (!qword_268CFB538)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CFB538);
  }
  return result;
}

uint64_t sub_241238E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_241239044(&qword_268CFB548, (void (*)(uint64_t))type metadata accessor for HistoricalAnalysisDataSource);
  uint64_t v7 = sub_241239044((unint64_t *)&unk_268CFB550, (void (*)(uint64_t))type metadata accessor for HistoricalAnalysisDataSource);
  uint64_t v8 = (void *)(a3 + qword_268D032F8);
  *uint64_t v8 = a1;
  v8[1] = v6;
  v8[2] = v7;
  uint64_t v9 = MEMORY[0x263F44348];
  uint64_t v10 = (void *)(a3 + qword_268D032F0);
  *uint64_t v10 = a2;
  v10[1] = v9;
  uint64_t v11 = MEMORY[0x263F44340];
  void v10[2] = MEMORY[0x263F44340];
  sub_241238D28(0, (unint64_t *)&qword_268CFB510, (void (*)(uint64_t))sub_241238CD4);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_24163A4F0;
  *(void *)(v12 + 32) = a2;
  *(void *)(v12 + 40) = v11;
  *(void *)(v12 + 48) = a1;
  *(void *)(v12 + 56) = v7;
  *(void *)(a3 + qword_268D03300) = v12;
  sub_241238D28(0, &qword_268CFB528, (void (*)(uint64_t))sub_241238D7C);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24163A4F0;
  *(void *)(inited + 32) = 1;
  *(void *)(inited + 40) = a1;
  *(void *)(inited + 48) = v6;
  *(void *)(inited + 56) = v7;
  *(void *)(inited + 64) = 2;
  *(void *)(inited + 72) = a2;
  *(void *)(inited + 80) = v9;
  *(void *)(inited + 88) = v11;
  sub_2414E73C0(inited);
  swift_setDeallocating();
  sub_241238D7C();
  swift_retain_n();
  swift_retain_n();
  swift_arrayDestroy();
  swift_retain();
  return sub_24162DFB8();
}

uint64_t sub_241239044(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for OnboardingUserInputType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24123915CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnboardingUserInputType()
{
  return &type metadata for OnboardingUserInputType;
}

unint64_t destroy for DataInputType(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s24MenstrualCyclesAppPlugin13DataInputTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  }
  return a1;
}

void *assignWithCopy for DataInputType(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DataInputType(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DataInputType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DataInputType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_2412393B4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_2412393CC(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DataInputType()
{
  return &type metadata for DataInputType;
}

uint64_t sub_2412393FC()
{
  return sub_2416331D8();
}

uint64_t sub_2412394A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24162B7E8();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v5 = sub_241631CA8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = &v16[-v10];
  if (a2)
  {
    if (a2 == 1)
    {
      sub_241631C38();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 16))(v8, v11, v5);
      if (qword_26B0131F0 != -1) {
        swift_once();
      }
      id v12 = (id)qword_26B0181A0;
      sub_24162B7D8();
      a2 = sub_241631D38();
      (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v11, v5);
    }
    else
    {
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      sub_241631C38();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 16))(v8, v11, v5);
      if (qword_26B0131F0 != -1) {
        swift_once();
      }
      id v13 = (id)qword_26B0181A0;
      sub_24162B7D8();
      sub_241631D38();
      (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v11, v5);
      sub_2411BFCEC();
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_241637EE0;
      *(void *)(v14 + 56) = MEMORY[0x263F8D310];
      *(void *)(v14 + 64) = sub_2411C0A14();
      *(void *)(v14 + 32) = a1;
      *(void *)(v14 + 40) = a2;
      a2 = sub_241631D28();
      swift_bridgeObjectRelease();
    }
  }
  return a2;
}

uint64_t sub_2412397EC(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  unint64_t v4 = a2[1];
  if (!v3) {
    return !v4;
  }
  if (v3 == 1) {
    return v4 == 1;
  }
  if (v4 < 2) {
    return 0;
  }
  if (*a1 != *a2 || v3 != v4) {
    return sub_241633218();
  }
  return 1;
}

uint64_t sub_24123984C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return v1;
}

uint64_t sub_24123987C()
{
  id v1 = objc_msgSend(*(id *)(v0 + 32), sel_hkmc_cycleFactor);

  return sub_2413CCF18((uint64_t)v1);
}

uint64_t sub_2412398B0()
{
  return 0x43746C7561666564;
}

uint64_t sub_2412398D0()
{
  uint64_t v0 = sub_24162B7E8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_241631CA8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  unint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = &v11[-v6];
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v9 = sub_241631D38();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t sub_241239B30()
{
  uint64_t v0 = sub_24162B7E8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_241631CA8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  unint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = &v11[-v6];
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v9 = sub_241631D38();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t sub_241239D9C()
{
  if (HKShowSensitiveLogItems())
  {
    sub_241632E78();
    sub_241631E08();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_241631E08();
    swift_bridgeObjectRelease();
    sub_241631E08();
    sub_241632F68();
    sub_241631E08();
    sub_241631E08();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_241632E78();
    sub_241631E08();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_241631E08();
    swift_bridgeObjectRelease();
    sub_241631E08();
    sub_241632F68();
  }
  sub_241631E08();
  sub_241631E08();
  swift_bridgeObjectRelease();
  sub_241631E08();
  sub_241631E08();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24123A1D0(uint64_t a1, uint64_t a2)
{
  return sub_24123A3E8(a1, a2, (uint64_t (*)(void, void, void))sub_241239D9C);
}

uint64_t sub_24123A1E8()
{
  return sub_24123D9E4(v0[16], v0[17], v0[18]);
}

uint64_t sub_24123A1F8()
{
  return sub_241633358();
}

uint64_t sub_24123A294()
{
  return sub_241633328();
}

uint64_t sub_24123A318()
{
  return sub_241633358();
}

uint64_t sub_24123A3B0()
{
  return 0x43676E6967676F6CLL;
}

uint64_t sub_24123A3D0(uint64_t a1, uint64_t a2)
{
  return sub_24123A3E8(a1, a2, (uint64_t (*)(void, void, void))sub_2412393FC);
}

uint64_t sub_24123A3E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, void))
{
  if (*(unsigned char *)(v3 + 18)) {
    int v4 = 0x10000;
  }
  else {
    int v4 = 0;
  }
  return a3(*(void *)v3, *(void *)(v3 + 8), *(unsigned __int8 *)(v3 + 16) | (*(unsigned __int8 *)(v3 + 17) << 8) | v4);
}

uint64_t sub_24123A418(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 18)) {
    int v2 = 0x10000;
  }
  else {
    int v2 = 0;
  }
  if (*(unsigned char *)(a2 + 18)) {
    int v3 = 0x10000;
  }
  else {
    int v3 = 0;
  }
  return sub_24123D8A0(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16) | (*(unsigned __int8 *)(a1 + 17) << 8) | v2, *(void *)a2, *(void *)(a2 + 8), *(unsigned __int8 *)(a2 + 16) | (*(unsigned __int8 *)(a2 + 17) << 8) | v3);
}

uint64_t sub_24123A468(char a1)
{
  uint64_t v2 = sub_24162B7E8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_241631CA8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = &v13[-v8];
  uint64_t v10 = 0;
  switch(a1)
  {
    case 2:
    case 3:
    case 5:
    case 7:
    case 8:
      sub_241631C38();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v6, v9, v3);
      if (qword_26B0131F0 != -1) {
        swift_once();
      }
      id v11 = (id)qword_26B0181A0;
      sub_24162B7D8();
      uint64_t v10 = sub_241631D38();
      (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v9, v3);
      break;
    default:
      return v10;
  }
  return v10;
}

uint64_t sub_24123A718()
{
  return sub_241633328();
}

uint64_t sub_24123A7F8()
{
  return sub_241633358();
}

uint64_t sub_24123A8FC()
{
  return sub_241633358();
}

uint64_t sub_24123A9E4()
{
  return *v0;
}

uint64_t sub_24123A9EC(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_24123A9F8()
{
  uint64_t v1 = *(void *)(v0 + 8);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return v1;
}

uint64_t sub_24123AA28()
{
  return sub_24123ABDC();
}

uint64_t sub_24123AA58()
{
  return 1819043171;
}

uint64_t sub_24123AA68()
{
  return sub_2416331D8();
}

uint64_t sub_24123AAAC()
{
  return 0;
}

uint64_t sub_24123ABDC()
{
  uint64_t v0 = sub_24162B7E8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_241631CA8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = &v11[-v6];
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v9 = sub_241631D38();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t sub_24123ADBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 28);
  uint64_t v5 = sub_24162B718();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_24123AE2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 28);
  uint64_t v5 = sub_24162B718();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24);

  return v6(v4, a1, v5);
}

uint64_t sub_24123AE9C()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_24123AEA4(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t sub_24123AEAC()
{
  uint64_t v1 = *(void *)(v0 + 24);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return v1;
}

uint64_t sub_24123AEDC()
{
  return 3;
}

uint64_t sub_24123AEE4()
{
  return sub_24123ABDC();
}

unint64_t sub_24123AF10()
{
  return 0xD000000000000014;
}

uint64_t sub_24123AF30()
{
  return 6;
}

uint64_t sub_24123AF38()
{
  return sub_241633358();
}

uint64_t sub_24123AFC0()
{
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631DC8();
  swift_bridgeObjectRelease();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631DC8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24123B044()
{
  return sub_241633358();
}

uint64_t sub_24123B0C8()
{
  uint64_t v0 = qword_268D03CE0;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return v0;
}

uint64_t sub_24123B100()
{
  return sub_2416331D8();
}

uint64_t sub_24123B1A4(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_241633218(), uint64_t result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_241633218();
    }
  }
  return result;
}

uint64_t sub_24123B248()
{
  return 4;
}

uint64_t sub_24123B250()
{
  return 0x6B63695065746164;
}

unint64_t sub_24123B274()
{
  sub_2416331D8();
  sub_241631E08();
  swift_bridgeObjectRelease();
  sub_241631E08();
  sub_241631E08();
  swift_bridgeObjectRelease();
  sub_241631E08();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631E08();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 32);
  *(void *)(v1 + 32) = 0xD000000000000012;
  *(void *)(v1 + 40) = 0x800000024165B240;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  return 0xD000000000000012;
}

uint64_t sub_24123B3A0()
{
  return 5;
}

uint64_t sub_24123B3B0()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_24123B3B8()
{
  return sub_24123A468(*(unsigned char *)(v0 + 32));
}

uint64_t sub_24123B3C0(unsigned __int8 a1)
{
  uint64_t v2 = sub_24162B7E8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_241631CA8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  BOOL v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = &v14[-v8];
  int v10 = a1;
  if (a1 < 2u || (uint64_t v11 = 0, v10 == 2))
  {
    sub_241631C38();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v6, v9, v3);
    if (qword_26B0131F0 != -1) {
      swift_once();
    }
    id v12 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v11 = sub_241631D38();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v9, v3);
  }
  return v11;
}

void sub_24123B5E8(void *a1@<X8>)
{
  *a1 = &unk_26F566A28;
}

uint64_t sub_24123B5F8()
{
  uint64_t result = 0x636E616E67657270;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6F6974617463616CLL;
      break;
    case 2:
      uint64_t result = 0x65636172746E6F63;
      break;
    case 3:
      uint64_t result = 0x20666F20656E6F6ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24123B6AC()
{
  return sub_24123B7C4(&qword_268CFB560, (void (*)(uint64_t))sub_24123B6F4);
}

void sub_24123B6F4()
{
  if (!qword_268CFB568)
  {
    unint64_t v0 = sub_241631FA8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFB568);
    }
  }
}

unint64_t sub_24123B750()
{
  unint64_t result = qword_268CFB570;
  if (!qword_268CFB570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB570);
  }
  return result;
}

uint64_t type metadata accessor for OnboardingEndDateRow(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_268CFB588);
}

uint64_t sub_24123B7C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t initializeWithCopy for OnboardingStandardRow(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return a1;
}

uint64_t assignWithCopy for OnboardingStandardRow(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for OnboardingStandardRow(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for OnboardingStandardRow(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OnboardingStandardRow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnboardingStandardRow()
{
  return &type metadata for OnboardingStandardRow;
}

void destroy for OnboardingPrefillRow(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void **)(a1 + 32);
}

void *initializeWithCopy for OnboardingPrefillRow(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = (void *)a2[4];
  a1[4] = v5;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  id v6 = v5;
  return a1;
}

void *assignWithCopy for OnboardingPrefillRow(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[4];
  uint64_t v5 = (void *)a1[4];
  a1[4] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for OnboardingPrefillRow(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

ValueMetadata *type metadata accessor for OnboardingPrefillRow()
{
  return &type metadata for OnboardingPrefillRow;
}

uint64_t destroy for OnboardingDatePickerRow()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_unknownObjectWeakDestroy();
}

uint64_t initializeWithCopy for OnboardingDatePickerRow(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_unknownObjectWeakCopyInit();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t assignWithCopy for OnboardingDatePickerRow(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakCopyAssign();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t initializeWithTake for OnboardingDatePickerRow(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_unknownObjectWeakTakeInit();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t assignWithTake for OnboardingDatePickerRow(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakTakeAssign();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for OnboardingDatePickerRow(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OnboardingDatePickerRow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnboardingDatePickerRow()
{
  return &type metadata for OnboardingDatePickerRow;
}

uint64_t destroy for LoggingCardRowViewModel()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for OnboardingTypePicker(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return a1;
}

void *assignWithCopy for OnboardingTypePicker(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for OnboardingTypePicker(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for OnboardingTypePicker()
{
  return &type metadata for OnboardingTypePicker;
}

uint64_t destroy for OnboardingTypeRow(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for OnboardingTypeRow(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v6 = *(void **)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_retain();
  id v7 = v6;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return a1;
}

uint64_t assignWithCopy for OnboardingTypeRow(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void **)(a2 + 40);
  uint64_t v5 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v4;
  id v6 = v4;

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for OnboardingTypeRow(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for OnboardingTypeRow(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  uint64_t v5 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OnboardingTypeRow(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OnboardingTypeRow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnboardingTypeRow()
{
  return &type metadata for OnboardingTypeRow;
}

void *sub_24123C20C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    uint64_t v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (char *)a1 + v8;
    int v10 = (char *)a2 + v8;
    uint64_t v11 = sub_24162B718();
    id v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    v12(v9, v10, v11);
    *((unsigned char *)v4 + *(int *)(a3 + 32)) = *((unsigned char *)a2 + *(int *)(a3 + 32));
  }
  return v4;
}

uint64_t sub_24123C318(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_24162B718();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_24123C390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24162B718();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  v11(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 32)) = *(unsigned char *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_24123C44C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_24162B718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(unsigned char *)(a1 + *(int *)(a3 + 32)) = *(unsigned char *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_24123C50C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_24162B718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(unsigned char *)(a1 + *(int *)(a3 + 32)) = *(unsigned char *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_24123C5AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24162B718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 32)) = *(unsigned char *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_24123C65C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24123C670);
}

uint64_t sub_24123C670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24162B718();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_24123C720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24123C734);
}

uint64_t sub_24123C734(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24162B718();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for OnboardingStartDateRow(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_268CFB578);
}

uint64_t sub_24123C7FC()
{
  uint64_t result = sub_24162B718();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24123C8AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return a1;
}

uint64_t assignWithCopy for OnboardingSelectRow(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  return a1;
}

__n128 initializeWithTake for OnboardingSelectRow(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for OnboardingSelectRow(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  return a1;
}

uint64_t getEnumTagSinglePayload for OnboardingSelectRow(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 19)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OnboardingSelectRow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 19) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 19) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnboardingSelectRow()
{
  return &type metadata for OnboardingSelectRow;
}

uint64_t sub_24123CA54(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *(void *)a1 = *a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    swift_unknownObjectWeakCopyInit();
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v7 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v7;
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_24162B718();
    id v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    v12(v9, v10, v11);
    v12(a1 + *(int *)(a3 + 32), (uint64_t)a2 + *(int *)(a3 + 32), v11);
  }
  return a1;
}

uint64_t sub_24123CB84(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_24162B718();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 32);

  return v8(v6, v5);
}

uint64_t sub_24123CC38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_unknownObjectWeakCopyInit();
  *(void *)(v6 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(v6 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(v6 + 24) = *(void *)(a2 + 24);
  *(void *)(v6 + 32) = v7;
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = v6 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_24162B718();
  id v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  v12(v9, v10, v11);
  v12(a1 + *(int *)(a3 + 32), a2 + *(int *)(a3 + 32), v11);
  return a1;
}

uint64_t sub_24123CD10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_unknownObjectWeakCopyAssign();
  *(void *)(v6 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(v6 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(v6 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24162B718();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v11(a1 + *(int *)(a3 + 32), a2 + *(int *)(a3 + 32), v10);
  return a1;
}

uint64_t sub_24123CDF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_unknownObjectWeakTakeInit();
  *(void *)(v6 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(v6 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(v6 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = v6 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24162B718();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + *(int *)(a3 + 32), a2 + *(int *)(a3 + 32), v10);
  return a1;
}

uint64_t sub_24123CEB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_unknownObjectWeakTakeAssign();
  *(void *)(v6 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(v6 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_24162B718();
  id v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  v12(a1 + *(int *)(a3 + 32), a2 + *(int *)(a3 + 32), v11);
  return a1;
}

uint64_t sub_24123CF88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24123CF9C);
}

uint64_t sub_24123CF9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    if ((*(void *)(a1 + 8) & 0xF000000000000007) != 0) {
      return (*(_DWORD *)a1 & 0x7FFFFFFFu) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v7 = sub_24162B718();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48);
    uint64_t v9 = v7;
    uint64_t v10 = a1 + *(int *)(a3 + 28);
    return v8(v10, a2, v9);
  }
}

uint64_t sub_24123D04C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24123D060);
}

void *sub_24123D060(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *__n128 result = (a2 - 1);
    result[1] = 1;
  }
  else
  {
    uint64_t v7 = sub_24162B718();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24123D10C()
{
  uint64_t result = sub_24162B718();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24123D1B8(uint64_t a1)
{
  uint64_t result = sub_24123B7C4((unint64_t *)&unk_268D02F20, (void (*)(uint64_t))type metadata accessor for OnboardingEndDateRow);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_24123D210(uint64_t a1)
{
  uint64_t result = sub_24123B7C4(&qword_268CFB598, (void (*)(uint64_t))type metadata accessor for OnboardingEndDateRow);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24123D26C()
{
  unint64_t result = qword_268CFB5A0;
  if (!qword_268CFB5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB5A0);
  }
  return result;
}

uint64_t sub_24123D2C0(uint64_t a1)
{
  uint64_t result = sub_24123B7C4((unint64_t *)&qword_268CFB5A8, (void (*)(uint64_t))type metadata accessor for OnboardingStartDateRow);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_24123D318(uint64_t a1)
{
  uint64_t result = sub_24123B7C4(&qword_268CFB5B0, (void (*)(uint64_t))type metadata accessor for OnboardingStartDateRow);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_24123D370()
{
  return sub_24123B7C4(&qword_268CFB5B8, (void (*)(uint64_t))type metadata accessor for OnboardingStartDateRow);
}

uint64_t sub_24123D3B8(uint64_t a1)
{
  uint64_t result = sub_24123B7C4(&qword_268CFB5C0, (void (*)(uint64_t))type metadata accessor for OnboardingStartDateRow);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24123D410(uint64_t a1)
{
  unint64_t result = sub_24123D438();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24123D438()
{
  unint64_t result = qword_268CFB5C8;
  if (!qword_268CFB5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB5C8);
  }
  return result;
}

unint64_t sub_24123D490()
{
  unint64_t result = qword_268CFB5D0;
  if (!qword_268CFB5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB5D0);
  }
  return result;
}

unint64_t sub_24123D4E4(uint64_t a1)
{
  unint64_t result = sub_24123D50C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24123D50C()
{
  unint64_t result = qword_268D02F10;
  if (!qword_268D02F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D02F10);
  }
  return result;
}

unint64_t sub_24123D560(uint64_t a1)
{
  unint64_t result = sub_24123D588();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24123D588()
{
  unint64_t result = qword_268CFB5D8;
  if (!qword_268CFB5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB5D8);
  }
  return result;
}

unint64_t sub_24123D5DC(uint64_t a1)
{
  unint64_t result = sub_24123D604();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24123D604()
{
  unint64_t result = qword_268CFB5E0;
  if (!qword_268CFB5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB5E0);
  }
  return result;
}

unint64_t sub_24123D658(uint64_t a1)
{
  unint64_t result = sub_24123D680();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24123D680()
{
  unint64_t result = qword_268CFB5E8;
  if (!qword_268CFB5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB5E8);
  }
  return result;
}

unint64_t sub_24123D6D4(uint64_t a1)
{
  unint64_t result = sub_24123D6FC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24123D6FC()
{
  unint64_t result = qword_268CFB5F0;
  if (!qword_268CFB5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB5F0);
  }
  return result;
}

unint64_t sub_24123D750(uint64_t a1)
{
  unint64_t result = sub_24123D778();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24123D778()
{
  unint64_t result = qword_268CFB5F8;
  if (!qword_268CFB5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB5F8);
  }
  return result;
}

unint64_t sub_24123D7CC(uint64_t a1)
{
  unint64_t result = sub_24123D7F4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24123D7F4()
{
  unint64_t result = qword_268CFB600;
  if (!qword_268CFB600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB600);
  }
  return result;
}

uint64_t sub_24123D848(uint64_t a1)
{
  uint64_t result = sub_24123B7C4(&qword_268CFB608, (void (*)(uint64_t))type metadata accessor for OnboardingEndDateRow);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_24123D8A0(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  unsigned int v8 = a3 >> 8;
  unsigned int v9 = a6 >> 8;
  if (a1 == a4 && a2 == a5)
  {
    uint64_t result = 0;
  }
  else
  {
    char v11 = sub_241633218();
    uint64_t result = 0;
    if ((v11 & 1) == 0) {
      return result;
    }
  }
  if (((a3 ^ a6) & 1) == 0 && v9 == v8) {
    return ((a3 & 0x10000) == 0) ^ ((a6 & 0x10000) >> 16);
  }
  return result;
}

uint64_t sub_24123D92C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1]) {
    goto LABEL_10;
  }
  BOOL v4 = *((void *)a1 + 1) == *((void *)a2 + 1) && *((void *)a1 + 2) == *((void *)a2 + 2);
  if (v4 || (char v5 = sub_241633218(), v6 = 0, (v5 & 1) != 0))
  {
    uint64_t started = type metadata accessor for OnboardingStartDateRow(0);
    if (sub_24162B698())
    {
      char v6 = a1[*(int *)(started + 32)] ^ a2[*(int *)(started + 32)] ^ 1;
      return v6 & 1;
    }
LABEL_10:
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_24123D9E4(char a1, char a2, char a3)
{
  if (a2 == 2)
  {
    if (a1 & 1) != 0 || (a3) {
      return sub_2412398D0();
    }
  }
  else if (a3)
  {
    return sub_2412398D0();
  }
  return sub_241239B30();
}

uint64_t sub_24123DA30()
{
  uint64_t v0 = sub_24162B7E8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_241631CA8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  BOOL v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = &v11[-v6];
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v9 = sub_241631D38();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

unsigned char *storeEnumTagSinglePayload for OnboardingGeneralRow(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24123DCD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnboardingGeneralRow()
{
  return &type metadata for OnboardingGeneralRow;
}

unint64_t sub_24123DD0C()
{
  unint64_t result = qword_268CFB618;
  if (!qword_268CFB618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB618);
  }
  return result;
}

uint64_t type metadata accessor for LoggingCardHeaderView(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_268CFB628);
}

uint64_t sub_24123DD80()
{
  return sub_24123E53C();
}

void *sub_24123DD8C(char *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v10 = qword_268CFB620;
  id v11 = objc_allocWithZone(MEMORY[0x263F828E0]);
  id v12 = a1;
  *(void *)&a1[v10] = objc_msgSend(v11, sel_init);

  v17.receiver = v12;
  v17.super_class = (Class)type metadata accessor for LoggingCardHeaderView(0);
  uint64_t v13 = objc_msgSendSuper2(&v17, sel_initWithFrame_, a2, a3, a4, a5);
  uint64_t v14 = *(void (**)(void))(qword_268D23988 + (*MEMORY[0x263F8EED0] & *v13) + 8);
  uint64_t v15 = v13;
  v14();

  return v15;
}

void sub_24123DEA0(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = qword_268CFB620;
  id v6 = objc_allocWithZone(MEMORY[0x263F828E0]);
  id v7 = a3;
  *(void *)&a1[v5] = objc_msgSend(v6, sel_init);

  sub_241633038();
  __break(1u);
}

uint64_t sub_24123DF40()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)((char *)v0 + qword_268CFB620);
  id v3 = objc_msgSend(self, sel_whiteColor);
  objc_msgSend(v2, sel_setTextColor_, v3);

  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setAdjustsFontSizeToFitWidth_, 1);
  objc_msgSend(v1, sel_addSubview_, v2);
  unsigned int v4 = self;
  sub_2411BFC90();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24163ADC0;
  id v6 = objc_msgSend(v2, sel_topAnchor);
  id v7 = objc_msgSend(v1, sel_topAnchor);
  id v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v7, 12.0);

  *(void *)(v5 + 32) = v8;
  id v9 = objc_msgSend(v1, sel_bottomAnchor);
  id v10 = objc_msgSend(v2, sel_bottomAnchor);
  id v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v10, 12.0);

  *(void *)(v5 + 40) = v11;
  id v12 = objc_msgSend(v1, sel_heightAnchor);
  id v13 = objc_msgSend(v12, sel_constraintEqualToConstant_, 44.0);

  *(void *)(v5 + 48) = v13;
  sub_241631F48();
  sub_2411B9D00(0, (unint64_t *)&qword_26B012130);
  uint64_t v14 = (void *)sub_241631F18();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_activateConstraints_, v14);

  uint64_t v15 = *(uint64_t (**)(void))(qword_268D23988 + (*MEMORY[0x263F8EED0] & *v1) + 16);

  return v15();
}

void sub_24123E210()
{
  uint64_t v1 = *(void **)(v0 + qword_268CFB620);
  sub_2411B9D00(0, &qword_26B012140);
  id v2 = (id)sub_241632898();
  objc_msgSend(v1, sel_setFont_, v2);
}

uint64_t sub_24123E2B8(void *a1)
{
  v14.receiver = v1;
  v14.super_class = (Class)type metadata accessor for LoggingCardHeaderView(0);
  uint64_t result = (uint64_t)objc_msgSendSuper2(&v14, sel_traitCollectionDidChange_, a1);
  if (!a1) {
    return (*(uint64_t (**)(uint64_t))(qword_268D23988 + (*MEMORY[0x263F8EED0] & *v1) + 16))(result);
  }
  id v4 = a1;
  id v5 = objc_msgSend(v1, sel_traitCollection);
  id v6 = objc_msgSend(v5, sel_preferredContentSizeCategory);

  id v7 = objc_msgSend(v4, sel_preferredContentSizeCategory);
  uint64_t v8 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  uint64_t v10 = v9;
  if (v8 != _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0() || v10 != v11)
  {
    char v13 = sub_241633218();

    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v13) {
      return result;
    }
    return (*(uint64_t (**)(uint64_t))(qword_268D23988 + (*MEMORY[0x263F8EED0] & *v1) + 16))(result);
  }

  return swift_bridgeObjectRelease_n();
}

void sub_24123E444(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  sub_24123E2B8(a3);
}

void sub_24123E4B0()
{
}

id sub_24123E4C0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LoggingCardHeaderView(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_24123E4F8(uint64_t a1)
{
}

uint64_t sub_24123E508()
{
  return type metadata accessor for LoggingCardHeaderView(0);
}

uint64_t type metadata accessor for LoggingCardInfoButtonHeaderView(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_268CFB640);
}

uint64_t sub_24123E530()
{
  return sub_24123E53C();
}

uint64_t sub_24123E53C()
{
  return swift_initClassMetadata2();
}

id sub_24123E588()
{
  sub_24123DF40();
  uint64_t v1 = *(void **)&v0[qword_268CFB638];
  id v2 = objc_msgSend(self, sel_whiteColor);
  objc_msgSend(v1, sel_setTintColor_, v2);

  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_addSubview_, v1);
  id v3 = self;
  sub_2411BFC90();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_24163ADC0;
  id v5 = objc_msgSend(v1, sel_topAnchor);
  id v6 = objc_msgSend(v0, sel_topAnchor);
  id v7 = objc_msgSend(v5, sel_constraintEqualToAnchor_constant_, v6, 10.0);

  *(void *)(v4 + 32) = v7;
  id v8 = objc_msgSend(v0, sel_bottomAnchor);
  id v9 = objc_msgSend(v1, sel_bottomAnchor);
  id v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v9, 10.0);

  *(void *)(v4 + 40) = v10;
  id v11 = objc_msgSend(v1, sel_leadingAnchor);
  id v12 = *(void **)&v0[qword_268CFB620];
  id v13 = objc_msgSend(v12, sel_trailingAnchor);
  id v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_constant_, v13, 8.0);

  *(void *)(v4 + 48) = v14;
  sub_241631F48();
  sub_2411B9D00(0, (unint64_t *)&qword_26B012130);
  uint64_t v15 = (void *)sub_241631F18();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_activateConstraints_, v15);

  LODWORD(v16) = 1148846080;
  objc_msgSend(v1, sel_setContentCompressionResistancePriority_forAxis_, 0, v16);
  LODWORD(v17) = 1144750080;
  objc_msgSend(v12, sel_setContentCompressionResistancePriority_forAxis_, 0, v17);
  LODWORD(v18) = 1148846080;
  objc_msgSend(v1, sel_setContentHuggingPriority_forAxis_, 0, v18);
  LODWORD(v19) = 1132068864;

  return objc_msgSend(v12, sel_setContentHuggingPriority_forAxis_, 0, v19);
}

void sub_24123E880()
{
  uint64_t v1 = v0;
  id v2 = *(void **)(v0 + qword_268CFB620);
  sub_2411B9D00(0, &qword_26B012140);
  id v3 = (void *)sub_241632898();
  objc_msgSend(v2, sel_setFont_, v3);

  uint64_t v4 = self;
  id v5 = (void *)*MEMORY[0x263F83570];
  id v6 = objc_msgSend(v4, sel__preferredFontForTextStyle_maximumContentSizeCategory_, *MEMORY[0x263F83570], *MEMORY[0x263F83468]);
  if (v6)
  {
    id v7 = v6;
    objc_msgSend(v6, sel_pointSize);
    id v9 = objc_msgSend(self, sel_configurationWithPointSize_weight_scale_, 4, 3, v8);
    sub_2411B9D00(0, (unint64_t *)&qword_268CFB650);
    id v10 = v5;
    id v11 = (void *)sub_241632978();

    if (v11)
    {
      id v12 = objc_msgSend(v11, sel_imageWithConfiguration_, v9);
    }
    else
    {
      id v12 = 0;
    }
    objc_msgSend(*(id *)(v1 + qword_268CFB638), sel_setImage_forState_, v12, 0);
  }
}

id sub_24123EA98(char *a1, double a2, double a3, double a4, double a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = qword_268CFB638;
  id v12 = objc_allocWithZone(MEMORY[0x263F824E8]);
  id v13 = a1;
  *(void *)&a1[v11] = objc_msgSend(v12, sel_init);

  v15.receiver = v13;
  v15.super_class = ObjectType;
  return objc_msgSendSuper2(&v15, sel_initWithFrame_, a2, a3, a4, a5);
}

id sub_24123EB54(char *a1, uint64_t a2, void *a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = qword_268CFB638;
  id v7 = objc_allocWithZone(MEMORY[0x263F824E8]);
  id v8 = a3;
  id v9 = a1;
  *(void *)&a1[v6] = objc_msgSend(v7, sel_init);

  v12.receiver = v9;
  v12.super_class = ObjectType;
  id v10 = objc_msgSendSuper2(&v12, sel_initWithCoder_, v8);

  return v10;
}

void sub_24123EBFC()
{
}

void sub_24123EC0C(uint64_t a1)
{
}

uint64_t sub_24123EC1C()
{
  return type metadata accessor for LoggingCardInfoButtonHeaderView(0);
}

uint64_t type metadata accessor for DeviationsReviewCollectionViewWrapper()
{
  uint64_t result = qword_268CFB668;
  if (!qword_268CFB668) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24123EC70()
{
  return swift_initClassMetadata2();
}

id sub_24123ECC8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_24162E578();
  uint64_t v34 = *(void *)(v5 - 8);
  uint64_t v35 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v33 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24162B7E8();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = sub_241631CA8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  id v14 = (char *)v31 - v13;
  *(void *)&v2[qword_268CFB658 + 8] = 0;
  swift_unknownObjectWeakInit();
  objc_allocWithZone((Class)type metadata accessor for DeviationsCompactCalendarViewController());
  objc_super v15 = v2;
  swift_retain();
  swift_retain();
  uint64_t v36 = a1;
  uint64_t v37 = a2;
  id v16 = sub_241596AC8(a1, a2);
  *(void *)&v15[qword_268CFB660] = v16;
  id v17 = v16;
  void v31[2] = v15;

  uint64_t v32 = (char *)v17;
  sub_241631C38();
  double v18 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v18(v11, v14, v8);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v19 = (id)qword_26B0181A0;
  sub_24162B7D8();
  v31[1] = sub_241631D38();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v14, v8);
  sub_241631C38();
  v18(v11, v14, v8);
  id v21 = (id)qword_26B0181A0;
  sub_24162B7D8();
  sub_241631D38();
  v20(v14, v8);
  (*(void (**)(char *, void, uint64_t))(v34 + 104))(v33, *MEMORY[0x263F44828], v35);
  id v22 = v32;
  uint64_t v23 = (void *)sub_24162E338();
  *(void *)&v22[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin39DeviationsCompactCalendarViewController_delegate + 8] = &off_26F56B530;
  swift_unknownObjectWeakAssign();
  sub_24123FF84(0, (unint64_t *)&qword_268CFA920, (uint64_t (*)(uint64_t))sub_2411E590C, MEMORY[0x263F8E0F8]);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_241637EE0;
  uint64_t v25 = sub_24162F5B8();
  uint64_t v26 = MEMORY[0x263F82018];
  *(void *)(v24 + 32) = v25;
  *(void *)(v24 + 40) = v26;
  id v27 = v23;
  MEMORY[0x24561F9C0](v24, sel_contentSizeDidChange);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  id v28 = objc_msgSend(v27, sel_headerView);
  if (qword_26B00F370 != -1) {
    swift_once();
  }
  uint64_t v38 = qword_26B017FC8;
  uint64_t v39 = unk_26B017FD0;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631E08();
  uint64_t v29 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v28, sel_setAccessibilityIdentifier_, v29);

  swift_release();
  swift_release();
  return v27;
}

void sub_24123F238(char *a1)
{
  uint64_t v1 = *(void **)&a1[qword_268CFB660];
  id v2 = a1;
  id v3 = objc_msgSend(v1, sel_collectionViewLayout);
  objc_msgSend(v3, sel_invalidateLayout);
}

uint64_t sub_24123F2B0()
{
  uint64_t result = MEMORY[0x245621790](v0 + qword_268CFB658);
  if (result)
  {
    sub_24121EF44(6, 0);
    sub_24121E658();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_24123F314(void *a1)
{
  swift_unknownObjectRetain();
  id v2 = a1;
  sub_241632CE8();
  swift_unknownObjectRelease();
  if (MEMORY[0x245621790](&v2[qword_268CFB658]))
  {
    sub_24121EF44(6, 0);
    sub_24121E658();

    swift_unknownObjectRelease();
  }
  else
  {
  }
  return _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v4);
}

void sub_24123F3A8()
{
  sub_24123FF84(0, &qword_26B0130C0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  *(void *)&double v2 = MEMORY[0x270FA5388](v1 - 8).n128_u64[0];
  uint64_t v4 = (char *)&v9 - v3;
  id v10 = objc_msgSend(*(id *)(*(void *)(*(void *)&v0[qword_268CFB660]+ OBJC_IVAR____TtC24MenstrualCyclesAppPlugin39DeviationsCompactCalendarViewController_viewModel)+ OBJC_IVAR____TtC24MenstrualCyclesAppPlugin31DeviationsConfirmationViewModel_viewModelProvider), sel_copyWithMinimumBufferDuration_, 0, v2);
  if (MEMORY[0x245621790](&v0[qword_268CFB658]))
  {
    uint64_t v5 = sub_24162B718();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
    uint64_t v6 = (void *)sub_24121F6A4(v10, (uint64_t)v4);
    id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v6);
    objc_msgSend(v7, sel_setModalInPresentation_, 1);
    objc_msgSend(v7, sel_setModalPresentationStyle_, 2);
    objc_msgSend(v0, sel_presentViewController_animated_completion_, v7, 1, 0);

    swift_unknownObjectRelease();
    sub_2411E7908((uint64_t)v4);
  }
  else
  {
    uint64_t v8 = v10;
  }
}

void sub_24123F5A0(void *a1)
{
  id v1 = a1;
  sub_24123F3A8();
}

uint64_t sub_24123F5E8()
{
  id v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_24162EFA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162EF48();
  uint64_t v6 = sub_24162EF98();
  os_log_type_t v7 = sub_2416322E8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    v16[0] = v1;
    uint64_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    aBlock[0] = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t v11 = sub_2416333E8();
    v16[1] = sub_2411B6898(v11, v12, aBlock);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v6, v7, "[%{public}s] Exiting confirmation flow", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v10, -1, -1);
    uint64_t v13 = v9;
    id v1 = (char *)v16[0];
    MEMORY[0x245621640](v13, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t result = MEMORY[0x245621790](&v1[qword_268CFB658]);
  if (result)
  {
    aBlock[4] = (uint64_t)sub_2412400A4;
    aBlock[5] = result;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_2411987F4;
    aBlock[3] = (uint64_t)&unk_26F56B540;
    objc_super v15 = _Block_copy(aBlock);
    swift_unknownObjectRetain();
    swift_release();
    objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, v15);
    _Block_release(v15);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_24123F88C(void *a1)
{
  swift_unknownObjectRetain();
  id v2 = a1;
  sub_241632CE8();
  swift_unknownObjectRelease();
  sub_24123F5E8();

  return _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v4);
}

void sub_24123F8EC()
{
  uint64_t v1 = sub_24162B7E8();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v2 = sub_241631CA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v16 - v7;
  sub_24123FFE8();
  uint64_t v9 = (void (*)(void))sub_24162E3A8();
  v9(0);
  sub_241631C38();
  id v17 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v17(v5, v8, v2);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v10 = (id)qword_26B0181A0;
  sub_24162B7D8();
  v16[1] = 0x8000000241656B70;
  sub_241631D38();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  v11(v8, v2);
  sub_24162E398();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(self, sel_linkButton);
  objc_msgSend(v12, sel_addTarget_action_forControlEvents_, v0, sel_editDataTapped, 64);
  sub_241631C38();
  v17(v5, v8, v2);
  id v13 = (id)qword_26B0181A0;
  sub_24162B7D8();
  sub_241631D38();
  v11(v8, v2);
  id v14 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setTitle_forState_, v14, 0);

  id v15 = objc_msgSend(v0, sel_buttonTray);
  objc_msgSend(v15, sel_addButton_, v12);
}

void sub_24123FC78()
{
}

void sub_24123FCA8()
{
  sub_2411CD138(v0 + qword_268CFB658);
  uint64_t v1 = *(void **)(v0 + qword_268CFB660);
}

void sub_24123FCE8(uint64_t a1)
{
  sub_2411CD138(a1 + qword_268CFB658);
  uint64_t v2 = *(void **)(a1 + qword_268CFB660);
}

uint64_t sub_24123FD34()
{
  return type metadata accessor for DeviationsReviewCollectionViewWrapper();
}

void sub_24123FD3C(uint64_t a1)
{
  sub_24123FF84(0, &qword_26B0130C0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  *(void *)&double v4 = MEMORY[0x270FA5388](v3 - 8).n128_u64[0];
  uint64_t v6 = (char *)&v12 - v5;
  id v13 = objc_msgSend(*(id *)(*(void *)(*(void *)&v1[qword_268CFB660]+ OBJC_IVAR____TtC24MenstrualCyclesAppPlugin39DeviationsCompactCalendarViewController_viewModel)+ OBJC_IVAR____TtC24MenstrualCyclesAppPlugin31DeviationsConfirmationViewModel_viewModelProvider), sel_copyWithMinimumBufferDuration_, 0, v4);
  if (MEMORY[0x245621790](&v1[qword_268CFB658]))
  {
    uint64_t v7 = sub_24162B718();
    uint64_t v8 = *(void *)(v7 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    uint64_t v9 = (void *)sub_24121F6A4(v13, (uint64_t)v6);
    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v9);
    objc_msgSend(v10, sel_setModalInPresentation_, 1);
    objc_msgSend(v10, sel_setModalPresentationStyle_, 2);
    objc_msgSend(v1, sel_presentViewController_animated_completion_, v10, 1, 0);

    swift_unknownObjectRelease();
    sub_2411E7908((uint64_t)v6);
  }
  else
  {
    uint64_t v11 = v13;
  }
}

void sub_24123FF84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24123FFE8()
{
  if (!qword_268CFB678)
  {
    type metadata accessor for DeviationsCompactCalendarViewController();
    sub_24124004C();
    unint64_t v0 = sub_24162E348();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFB678);
    }
  }
}

unint64_t sub_24124004C()
{
  unint64_t result = qword_268CFB680;
  if (!qword_268CFB680)
  {
    type metadata accessor for DeviationsCompactCalendarViewController();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB680);
  }
  return result;
}

void sub_2412400A4()
{
  sub_2412210EC(v0);
}

uint64_t destroy for PDFCoverPageModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PDFCoverPageModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 40);
    uint64_t v7 = *(void *)(a2 + 48);
    *(void *)(a1 + 32) = v5;
    *(void *)(a1 + 40) = v6;
    uint64_t v8 = *(void *)(a2 + 56);
    uint64_t v9 = *(void *)(a2 + 64);
    *(void *)(a1 + 48) = v7;
    *(void *)(a1 + 56) = v8;
    uint64_t v10 = *(void *)(a2 + 72);
    uint64_t v11 = *(void *)(a2 + 80);
    *(void *)(a1 + 64) = v9;
    *(void *)(a1 + 72) = v10;
    uint64_t v12 = *(void *)(a2 + 88);
    uint64_t v13 = *(void *)(a2 + 96);
    *(void *)(a1 + 80) = v11;
    *(void *)(a1 + 88) = v12;
    uint64_t v14 = *(void *)(a2 + 104);
    uint64_t v15 = *(void *)(a2 + 112);
    *(void *)(a1 + 96) = v13;
    *(void *)(a1 + 104) = v14;
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(void *)(a1 + 112) = v15;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  }
  else
  {
    long long v16 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v16;
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    long long v17 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v17;
    long long v18 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v18;
  }
  uint64_t v19 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v19;
  uint64_t v21 = *(void *)(a2 + 136);
  uint64_t v20 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = v21;
  *(void *)(a1 + 144) = v20;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return a1;
}

void *assignWithCopy for PDFCoverPageModel(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + 2;
  uint64_t v5 = a2 + 2;
  uint64_t v6 = a2[4];
  if (a1[4])
  {
    if (v6)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      swift_bridgeObjectRelease();
      a1[5] = a2[5];
      a1[6] = a2[6];
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      swift_bridgeObjectRelease();
      a1[7] = a2[7];
      a1[8] = a2[8];
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      swift_bridgeObjectRelease();
      a1[9] = a2[9];
      a1[10] = a2[10];
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      swift_bridgeObjectRelease();
      a1[11] = a2[11];
      a1[12] = a2[12];
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      swift_bridgeObjectRelease();
      a1[13] = a2[13];
      a1[14] = a2[14];
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2412404DC((uint64_t)(a1 + 2));
      long long v8 = *((_OWORD *)a2 + 2);
      long long v7 = *((_OWORD *)a2 + 3);
      *uint64_t v4 = *v5;
      *((_OWORD *)a1 + 2) = v8;
      *((_OWORD *)a1 + 3) = v7;
      long long v10 = *((_OWORD *)a2 + 5);
      long long v9 = *((_OWORD *)a2 + 6);
      long long v11 = *((_OWORD *)a2 + 4);
      a1[14] = a2[14];
      *((_OWORD *)a1 + 5) = v10;
      *((_OWORD *)a1 + 6) = v9;
      *((_OWORD *)a1 + 4) = v11;
    }
  }
  else if (v6)
  {
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    a1[6] = a2[6];
    a1[7] = a2[7];
    a1[8] = a2[8];
    a1[9] = a2[9];
    a1[10] = a2[10];
    a1[11] = a2[11];
    a1[12] = a2[12];
    a1[13] = a2[13];
    a1[14] = a2[14];
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  }
  else
  {
    long long v12 = *v5;
    long long v13 = *((_OWORD *)a2 + 3);
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 3) = v13;
    *uint64_t v4 = v12;
    long long v14 = *((_OWORD *)a2 + 4);
    long long v15 = *((_OWORD *)a2 + 5);
    long long v16 = *((_OWORD *)a2 + 6);
    a1[14] = a2[14];
    *((_OWORD *)a1 + 5) = v15;
    *((_OWORD *)a1 + 6) = v16;
    *((_OWORD *)a1 + 4) = v14;
  }
  a1[15] = a2[15];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  a1[17] = a2[17];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2412404DC(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for PDFCoverPageModel(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for PDFCoverPageModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 32)) {
    goto LABEL_5;
  }
  uint64_t v5 = *(void *)(a2 + 32);
  if (!v5)
  {
    sub_2412404DC(a1 + 16);
LABEL_5:
    long long v11 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v11;
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    long long v12 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v12;
    long long v13 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v13;
    goto LABEL_6;
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PDFCoverPageModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 152)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PDFCoverPageModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 152) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 152) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PDFCoverPageDeviationsSection()
{
  return &type metadata for PDFCoverPageDeviationsSection;
}

uint64_t sub_241240744(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 144) + 16))
  {
    uint64_t v1 = sub_2412408A8();
    v8[3] = &type metadata for PDFHorizontallySequentialItems;
    v8[4] = sub_241242678();
    v8[0] = v1;
    v8[1] = 0x4010000000000000;
    uint64_t v2 = sub_24162D4D8();
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v8);
    sub_241242700(0, (unint64_t *)&qword_268D036C0, (uint64_t (*)(uint64_t))sub_2412426CC, MEMORY[0x263F8E0F8]);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_241637EE0;
    *(void *)(v3 + 32) = v2;
    MEMORY[0x24561A980]();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_24162D4C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = sub_24162D4C8();
  }
  sub_241242700(0, (unint64_t *)&qword_268D036C0, (uint64_t (*)(uint64_t))sub_2412426CC, MEMORY[0x263F8E0F8]);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_241637EE0;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = MEMORY[0x24561A980]();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_2412408A8()
{
  sub_241274888();
  uint64_t v6 = sub_24162E688();
  uint64_t v7 = MEMORY[0x263F44880];
  sub_2411B6C70(v5);
  sub_24162CC08();
  sub_24162E678();
  uint64_t v0 = sub_24162D4D8();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v5);
  uint64_t v6 = sub_24162E758();
  uint64_t v7 = MEMORY[0x263F448B8];
  sub_2411B6C70(v5);
  sub_24162E748();
  uint64_t v1 = sub_24162D4D8();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v5);
  sub_241242700(0, (unint64_t *)&qword_268D036C0, (uint64_t (*)(uint64_t))sub_2412426CC, MEMORY[0x263F8E0F8]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_24163A4F0;
  *(void *)(v2 + 32) = v0;
  *(void *)(v2 + 40) = v1;
  uint64_t v3 = MEMORY[0x24561A980]();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_241240A14(uint64_t a1, uint64_t a2)
{
  uint64_t v39 = a2;
  uint64_t v3 = sub_24162CEB8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24162B7E8();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = sub_241631CA8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  long long v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  long long v14 = (char *)&v38 - v13;
  sub_241631C38();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v15 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v16 = sub_241631D38();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  double v19 = *MEMORY[0x263F81800];
  id v20 = objc_msgSend(self, sel_darkTextColor);
  id v21 = objc_msgSend(self, sel_systemFontOfSize_weight_, 18.0, v19);
  sub_2411B9D00(0, (unint64_t *)&qword_268CFA590);
  id v22 = (void *)sub_241632718();
  unint64_t v23 = sub_241274778(v21, v22, v20);

  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F43D88], v3);
  uint64_t v41 = sub_24162E5B8();
  uint64_t v42 = MEMORY[0x263F44850];
  sub_2411B6C70(v40);
  MEMORY[0x24561BA90](v16, v18, v6, v23);
  uint64_t v24 = sub_24162D4D8();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v40);
  if (qword_268CF9388 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_24162CF58();
  uint64_t v26 = MEMORY[0x263F43E08];
  uint64_t v41 = v25;
  uint64_t v42 = MEMORY[0x263F43E08];
  sub_2411B6C70(v40);
  sub_24162CF68();
  uint64_t v27 = sub_24162D4D8();
  uint64_t v28 = _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v40);
  if (qword_268CF9378 != -1) {
    uint64_t v28 = swift_once();
  }
  if (qword_268CF9380 != -1) {
    uint64_t v28 = swift_once();
  }
  MEMORY[0x270FA5388](v28);
  *(&v38 - 2) = v39;
  *(&v38 - 1) = a1;
  uint64_t v29 = sub_24162E5A8();
  swift_allocObject();
  uint64_t v30 = sub_24162E598();
  uint64_t v41 = v29;
  uint64_t v42 = MEMORY[0x263F44848];
  v40[0] = v30;
  uint64_t v31 = sub_24162D4D8();
  uint64_t v32 = _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v40);
  if (qword_268CF93A8 != -1) {
    uint64_t v32 = swift_once();
  }
  MEMORY[0x270FA5388](v32);
  *(&v38 - 2) = a1;
  uint64_t v41 = sub_24162D918();
  uint64_t v42 = MEMORY[0x263F44130];
  sub_2411B6C70(v40);
  sub_24162D908();
  uint64_t v33 = sub_24162D4D8();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v40);
  if (qword_268CF92E0 != -1) {
    swift_once();
  }
  uint64_t v41 = v25;
  uint64_t v42 = v26;
  sub_2411B6C70(v40);
  sub_24162CF68();
  uint64_t v34 = sub_24162D4D8();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v40);
  sub_241242700(0, (unint64_t *)&qword_268D036C0, (uint64_t (*)(uint64_t))sub_2412426CC, MEMORY[0x263F8E0F8]);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_24163D200;
  *(void *)(v35 + 32) = v24;
  *(void *)(v35 + 40) = v27;
  *(void *)(v35 + 48) = v31;
  *(void *)(v35 + 56) = v33;
  *(void *)(v35 + 64) = v34;
  uint64_t v36 = MEMORY[0x24561A980]();
  swift_bridgeObjectRelease();
  return v36;
}

uint64_t sub_2412410D4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = &off_241637000;
  if (v1)
  {
    uint64_t v4 = sub_24162E758();
    uint64_t isUniquelyReferenced_nonNull_native = _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v6 = (uint64_t *)(a1 + 64);
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
    do
    {
      uint64_t v8 = *(v6 - 3);
      uint64_t v9 = *(v6 - 2);
      uint64_t v10 = *(v6 - 1);
      uint64_t v11 = *v6;
      v21[5] = *(v6 - 4);
      v21[6] = v8;
      v21[7] = v9;
      v21[8] = v10;
      v21[9] = v11;
      MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native);
      void v21[3] = v4;
      v21[4] = MEMORY[0x263F448B8];
      sub_2411B6C70(v21);
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      sub_24162E748();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = sub_24162D4D8();
      _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v21);
      sub_241242700(0, (unint64_t *)&qword_268D036C0, (uint64_t (*)(uint64_t))sub_2412426CC, MEMORY[0x263F8E0F8]);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_241637EE0;
      *(void *)(v13 + 32) = v12;
      uint64_t v14 = MEMORY[0x24561A980]();
      swift_bridgeObjectRelease();
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_24158BB64(0, v7[2] + 1, 1, v7);
        uint64_t v7 = (void *)isUniquelyReferenced_nonNull_native;
      }
      unint64_t v16 = v7[2];
      unint64_t v15 = v7[3];
      if (v16 >= v15 >> 1)
      {
        uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_24158BB64((void *)(v15 > 1), v16 + 1, 1, v7);
        uint64_t v7 = (void *)isUniquelyReferenced_nonNull_native;
      }
      v7[2] = v16 + 1;
      v7[v16 + 4] = v14;
      v6 += 5;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
    uint64_t v2 = &off_241637000;
  }
  else
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v17 = MEMORY[0x24561A970](v7);
  swift_bridgeObjectRelease();
  sub_241242700(0, (unint64_t *)&qword_268D036C0, (uint64_t (*)(uint64_t))sub_2412426CC, MEMORY[0x263F8E0F8]);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = *((_OWORD *)v2 + 238);
  *(void *)(v18 + 32) = v17;
  uint64_t v19 = MEMORY[0x24561A980]();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_24124139C(uint64_t *a1)
{
  uint64_t v2 = sub_24162CEB8();
  uint64_t v79 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = a1[1];
  uint64_t v83 = *a1;
  uint64_t v84 = a1;
  double v6 = *MEMORY[0x263F81800];
  uint64_t v7 = self;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  id v8 = objc_msgSend(v7, sel_darkTextColor);
  uint64_t v9 = self;
  id v10 = objc_msgSend(v9, sel_systemFontOfSize_weight_, 10.0, v6);
  uint64_t v11 = sub_2411B9D00(0, (unint64_t *)&qword_268CFA590);
  uint64_t v12 = (void *)sub_241632718();
  unint64_t v13 = sub_241274778(v10, v12, v8);

  uint64_t v14 = v79;
  uint64_t v15 = v2;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 104);
  uint64_t v17 = v14 + 104;
  unint64_t v16 = v18;
  unsigned int v77 = *MEMORY[0x263F43D88];
  ((void (*)(char *))v18)(v4);
  uint64_t v78 = sub_24162E5B8();
  uint64_t v86 = v78;
  uint64_t v87 = MEMORY[0x263F44850];
  sub_2411B6C70(&v85);
  MEMORY[0x24561BA90](v83, v5, v4, v13);
  uint64_t v67 = sub_24162D4D8();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v85);
  if (qword_268CF9390 != -1) {
    swift_once();
  }
  uint64_t v83 = sub_24162CF58();
  uint64_t v86 = v83;
  uint64_t v87 = MEMORY[0x263F43E08];
  sub_2411B6C70(&v85);
  sub_24162CF68();
  uint64_t v66 = sub_24162D4D8();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v85);
  uint64_t v19 = v84[3];
  uint64_t v82 = v84[2];
  double v20 = *MEMORY[0x263F81838];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v76 = v7;
  id v21 = objc_msgSend(v7, sel_darkTextColor);
  id v75 = v9;
  id v22 = objc_msgSend(v9, sel_systemFontOfSize_weight_, 10.0, v20);
  uint64_t v74 = v11;
  unint64_t v23 = (void *)sub_241632718();
  unint64_t v24 = sub_241274778(v22, v23, v21);

  v16(v4, v77, v15);
  uint64_t v86 = v78;
  uint64_t v87 = MEMORY[0x263F44850];
  sub_2411B6C70(&v85);
  MEMORY[0x24561BA90](v82, v19, v4, v24);
  uint64_t v25 = sub_24162D4D8();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v85);
  uint64_t v26 = v4;
  if (qword_268CF9398 != -1) {
    swift_once();
  }
  uint64_t v86 = v83;
  uint64_t v87 = MEMORY[0x263F43E08];
  sub_2411B6C70(&v85);
  sub_24162CF68();
  uint64_t v27 = sub_24162D4D8();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v85);
  uint64_t v88 = v84[4];
  if (*(void *)(v88 + 16))
  {
    uint64_t v84 = *(uint64_t **)(v88 + 16);
    uint64_t v64 = v27;
    uint64_t v65 = v25;
    id v73 = v16;
    uint64_t v79 = v17;
    CGFloat v72 = (void *)*MEMORY[0x263F814F0];
    unint64_t v71 = (void *)*MEMORY[0x263F81500];
    uint64_t v70 = (void *)*MEMORY[0x263F81540];
    uint64_t v28 = (uint64_t *)(_s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0()
                    + 40);
    uint64_t v29 = (void *)MEMORY[0x263F8EE78];
    long long v69 = xmmword_24163AC10;
    long long v68 = xmmword_241637EE0;
    uint64_t v30 = v76;
    uint64_t v31 = &selRef_numberOfComponentsInPickerView_;
    do
    {
      uint64_t v32 = *v28;
      uint64_t v82 = *(v28 - 1);
      uint64_t v83 = (uint64_t)v28;
      uint64_t v81 = v32;
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      id v33 = [v30 v31[433]];
      uint64_t v34 = v26;
      id v35 = objc_msgSend(v75, sel_systemFontOfSize_weight_, 10.0, v20);
      uint64_t v36 = v74;
      uint64_t v37 = sub_241632718();
      id v80 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
      sub_241242700(0, (unint64_t *)&qword_268CFA900, (uint64_t (*)(uint64_t))sub_2411E0CA8, MEMORY[0x263F8E0F8]);
      uint64_t v38 = v15;
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v69;
      uint64_t v40 = v72;
      *(void *)(inited + 32) = v72;
      uint64_t v41 = sub_2411B9D00(0, &qword_26B012140);
      *(void *)(inited + 40) = v35;
      uint64_t v42 = v36;
      uint64_t v43 = v71;
      *(void *)(inited + 64) = v41;
      *(void *)(inited + 72) = v43;
      uint64_t v44 = sub_2411B9D00(0, (unint64_t *)&qword_268CFA910);
      *(void *)(inited + 80) = v33;
      uint64_t v45 = v77;
      long long v46 = v70;
      *(void *)(inited + 104) = v44;
      *(void *)(inited + 112) = v46;
      *(void *)(inited + 144) = v42;
      *(void *)(inited + 120) = v37;
      id v47 = v40;
      id v48 = v43;
      uint64_t v26 = v34;
      id v49 = v46;
      uint64_t v50 = inited;
      uint64_t v15 = v38;
      unint64_t v51 = sub_2414E42B8(v50);
      v73(v34, v45, v38);
      uint64_t v86 = v78;
      uint64_t v87 = MEMORY[0x263F44850];
      sub_2411B6C70(&v85);
      MEMORY[0x24561BA90](v82, v81, v34, v51);
      uint64_t v52 = sub_24162D4D8();
      _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v85);
      sub_241242700(0, (unint64_t *)&qword_268D036C0, (uint64_t (*)(uint64_t))sub_2412426CC, v80);
      uint64_t v53 = swift_allocObject();
      *(_OWORD *)(v53 + 16) = v68;
      *(void *)(v53 + 32) = v52;
      uint64_t v54 = MEMORY[0x24561A980]();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v29 = sub_24158BB64(0, v29[2] + 1, 1, v29);
      }
      unint64_t v56 = v29[2];
      unint64_t v55 = v29[3];
      id v57 = v29;
      uint64_t v30 = v76;
      uint64_t v31 = &selRef_numberOfComponentsInPickerView_;
      uint64_t v58 = v83;
      if (v56 >= v55 >> 1) {
        id v57 = sub_24158BB64((void *)(v55 > 1), v56 + 1, 1, v29);
      }
      uint64_t v28 = (uint64_t *)(v58 + 16);
      uint64_t v29 = v57;
      v57[2] = v56 + 1;
      v57[v56 + 4] = v54;
      uint64_t v84 = (uint64_t *)((char *)v84 - 1);
    }
    while (v84);
    sub_2412427DC((uint64_t)&v88);
    uint64_t v25 = v65;
    uint64_t v27 = v64;
  }
  else
  {
    uint64_t v29 = (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v59 = MEMORY[0x24561A970](v29);
  swift_bridgeObjectRelease();
  sub_241242700(0, (unint64_t *)&qword_268D036C0, (uint64_t (*)(uint64_t))sub_2412426CC, MEMORY[0x263F8E0F8]);
  uint64_t v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = xmmword_24163D200;
  uint64_t v61 = v66;
  *(void *)(v60 + 32) = v67;
  *(void *)(v60 + 40) = v61;
  *(void *)(v60 + 48) = v25;
  *(void *)(v60 + 56) = v27;
  *(void *)(v60 + 64) = v59;
  uint64_t v62 = MEMORY[0x24561A980]();
  swift_bridgeObjectRelease();
  return v62;
}

uint64_t sub_241241C68()
{
  uint64_t v0 = sub_24162CEB8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v27[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24162B7E8();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v5 = sub_241631CA8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)&v27[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v27[-1] - v10;
  if (qword_268CF93A0 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_24162CF58();
  uint64_t v29 = MEMORY[0x263F43E08];
  sub_2411B6C70(v27);
  sub_24162CF68();
  uint64_t v12 = sub_24162D4D8();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v27);
  sub_241631C38();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v13 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v14 = sub_241631D38();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  double v17 = *MEMORY[0x263F81838];
  uint64_t v18 = (void *)sub_24162CC48();
  id v19 = objc_msgSend(self, sel_systemFontOfSize_weight_, 8.0, v17);
  sub_2411B9D00(0, (unint64_t *)&qword_268CFA590);
  double v20 = (void *)sub_241632718();
  unint64_t v21 = sub_241274778(v19, v20, v18);

  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F43D88], v0);
  uint64_t v28 = sub_24162E5B8();
  uint64_t v29 = MEMORY[0x263F44850];
  sub_2411B6C70(v27);
  MEMORY[0x24561BA90](v14, v16, v3, v21);
  uint64_t v22 = sub_24162D4D8();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v27);
  sub_241242700(0, (unint64_t *)&qword_268D036C0, (uint64_t (*)(uint64_t))sub_2412426CC, MEMORY[0x263F8E0F8]);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_24163A4F0;
  *(void *)(v23 + 32) = v12;
  *(void *)(v23 + 40) = v22;
  uint64_t v24 = MEMORY[0x24561A980]();
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_2412420CC()
{
  uint64_t v1 = sub_24162E758();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v5 = *(_OWORD *)(v0 + 112);
  v12[6] = *(_OWORD *)(v0 + 96);
  v12[7] = v5;
  v12[8] = *(_OWORD *)(v0 + 128);
  uint64_t v13 = *(void *)(v0 + 144);
  long long v6 = *(_OWORD *)(v0 + 48);
  v12[2] = *(_OWORD *)(v0 + 32);
  uint64_t v12[3] = v6;
  long long v7 = *(_OWORD *)(v0 + 80);
  v12[4] = *(_OWORD *)(v0 + 64);
  v12[5] = v7;
  long long v8 = *(_OWORD *)(v0 + 16);
  v12[0] = *(_OWORD *)v0;
  v12[1] = v8;
  uint64_t v11 = v12;
  sub_24162E748();
  sub_24162CD88();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
}

double sub_241242218()
{
  uint64_t v1 = sub_24162E758();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v5 = *(_OWORD *)(v0 + 112);
  v14[6] = *(_OWORD *)(v0 + 96);
  v14[7] = v5;
  v14[8] = *(_OWORD *)(v0 + 128);
  uint64_t v15 = *(void *)(v0 + 144);
  long long v6 = *(_OWORD *)(v0 + 48);
  void v14[2] = *(_OWORD *)(v0 + 32);
  v14[3] = v6;
  long long v7 = *(_OWORD *)(v0 + 80);
  void v14[4] = *(_OWORD *)(v0 + 64);
  v14[5] = v7;
  long long v8 = *(_OWORD *)(v0 + 16);
  v14[0] = *(_OWORD *)v0;
  v14[1] = v8;
  uint64_t v13 = v14;
  sub_24162E748();
  sub_24162CD78();
  double v10 = v9;
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  return v10;
}

double sub_241242384()
{
  uint64_t v1 = sub_24162E758();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v5 = *(_OWORD *)(v0 + 112);
  v14[6] = *(_OWORD *)(v0 + 96);
  v14[7] = v5;
  v14[8] = *(_OWORD *)(v0 + 128);
  uint64_t v15 = *(void *)(v0 + 144);
  long long v6 = *(_OWORD *)(v0 + 48);
  void v14[2] = *(_OWORD *)(v0 + 32);
  v14[3] = v6;
  long long v7 = *(_OWORD *)(v0 + 80);
  void v14[4] = *(_OWORD *)(v0 + 64);
  v14[5] = v7;
  long long v8 = *(_OWORD *)(v0 + 16);
  v14[0] = *(_OWORD *)v0;
  v14[1] = v8;
  uint64_t v13 = v14;
  sub_24162E748();
  sub_24162CD78();
  double v10 = v9;
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  return v10;
}

uint64_t sub_2412424F0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  unint64_t v4 = sub_2412425C4();
  void *v3 = v1;
  v3[1] = sub_2411D899C;
  return MEMORY[0x270F33478](a1, v4);
}

unint64_t sub_24124259C(uint64_t a1)
{
  unint64_t result = sub_2412425C4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2412425C4()
{
  unint64_t result = qword_268CFB690;
  if (!qword_268CFB690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB690);
  }
  return result;
}

unint64_t sub_24124261C()
{
  unint64_t result = qword_268CFB698;
  if (!qword_268CFB698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB698);
  }
  return result;
}

uint64_t sub_241242670()
{
  return sub_241240744(*(void *)(v0 + 16));
}

unint64_t sub_241242678()
{
  unint64_t result = qword_268CFB6A0;
  if (!qword_268CFB6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB6A0);
  }
  return result;
}

void sub_2412426CC(uint64_t a1)
{
}

void sub_241242700(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_241242764()
{
  unint64_t result = qword_268D03690;
  if (!qword_268D03690)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268D03690);
  }
  return result;
}

uint64_t sub_2412427BC()
{
  return sub_241240A14(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_2412427C4()
{
  return sub_2412410D4(*(void *)(v0 + 16));
}

uint64_t sub_2412427CC()
{
  return sub_241241C68();
}

uint64_t sub_2412427D4()
{
  return sub_24124139C(*(uint64_t **)(v0 + 16));
}

uint64_t sub_2412427DC(uint64_t a1)
{
  return a1;
}

uint64_t sub_24124280C()
{
  sub_2412441C0(0, (unint64_t *)&unk_26B00F1B0, MEMORY[0x263F090E8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v37 = (char *)&v32 - v2;
  sub_241244224(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v39 = (uint64_t)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v38 = (unint64_t)&v32 - v6;
  uint64_t v7 = sub_24162B718();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = sub_24162BA08();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v35 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v32 - v12;
  uint64_t v33 = sub_241631AC8();
  uint64_t v14 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = v16;
  __n128 v18 = MEMORY[0x270FA5388](v17);
  double v20 = (char *)&v32 - v19;
  uint64_t v36 = (char *)&v32 - v19;
  uint64_t v21 = v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider_gregorianCalendar;
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16);
  v22(v13, v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider_gregorianCalendar, v8, v18);
  sub_24162B708();
  sub_241631A68();
  unint64_t v23 = *(void *)(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider_cycles);
  uint64_t v24 = v16;
  uint64_t v25 = v33;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v24, v20, v33);
  ((void (*)(char *, uint64_t, uint64_t))v22)(v13, v21, v8);
  uint64_t v26 = (uint64_t)v35;
  ((void (*)(char *, uint64_t, uint64_t))v22)(v35, v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider_currentCalendar, v8);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v27 = sub_241244258();
  uint64_t v28 = (uint64_t)v37;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v37, 1, 1, v25);
  uint64_t v29 = v38;
  sub_2413F2768(v23, (uint64_t)v34, (uint64_t)v13, v26, v27, v28, 99, *(void *)(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider_horizontalSizeClass), v38, 0.0, 0.0, 0.0, 0.0, *(double *)(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider_preferredMaxLayoutWidth));
  uint64_t v30 = type metadata accessor for CycleChartsModel();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 0, 1, v30);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_241246F58(v29, v39, (uint64_t (*)(void))sub_241244224);
  swift_retain();
  sub_24162FC58();
  sub_241246EF0(v29, (uint64_t (*)(void))sub_241244224);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v36, v25);
}

uint64_t sub_241242CB8()
{
  return sub_241242CE0();
}

uint64_t sub_241242CCC()
{
  return sub_241242CE0();
}

uint64_t sub_241242CE0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24162FC48();
  swift_release();

  return swift_release();
}

void sub_241242D50(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider_basalBodyTemperatureRange;
  double v4 = *(double *)v3;
  double v5 = *(double *)(v3 + 8);
  char v6 = *(unsigned char *)(v3 + 16);
  double v7 = *(double *)(v3 + 24);
  uint64_t v8 = *(void **)(v3 + 32);
  long long v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v9;
  *(void *)(v3 + 32) = *(void *)(a1 + 32);
  id v17 = v8;
  sub_2411FEAA0(a1);

  int v10 = *(unsigned __int8 *)(v3 + 16);
  double v11 = *(double *)(v3 + 24);
  uint64_t v12 = *(void **)(v3 + 32);
  if (v6)
  {
    if (v7 != v11) {
      int v10 = 0;
    }
    if (v10 != 1) {
      goto LABEL_16;
    }
LABEL_15:
    sub_2411B9D00(0, (unint64_t *)&qword_26B012200);
    id v15 = v12;
    char v16 = sub_2416329B8();

    if (v16) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if ((v10 & 1) == 0)
  {
    BOOL v13 = v4 == *(double *)v3 && v5 == *(double *)(v3 + 8);
    if (v13 && v7 == v11) {
      goto LABEL_15;
    }
  }
LABEL_16:
  sub_24124280C();
LABEL_17:
  sub_2411FEADC(a1);
}

void *sub_241242E7C(void *a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v8 = v7;
  uint64_t v77 = a6;
  uint64_t v89 = a5;
  uint64_t v78 = a4;
  uint64_t v82 = a3;
  uint64_t v86 = a2;
  id v90 = a1;
  uint64_t v84 = *v7;
  uint64_t v10 = sub_24162BA08();
  uint64_t v87 = *(void *)(v10 - 8);
  uint64_t v88 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v85 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263EFDE58];
  sub_2412441C0(0, &qword_268CFB6E0, (uint64_t (*)(uint64_t))sub_241244224, MEMORY[0x263EFDE58]);
  uint64_t v83 = v13;
  uint64_t v81 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  id v80 = (char *)&v77 - v14;
  sub_241244224(0);
  uint64_t v79 = v15;
  MEMORY[0x270FA5388](v15);
  id v17 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  double v20 = (char *)&v77 - v19;
  sub_2412441C0(0, &qword_268CFB6D8, (uint64_t (*)(uint64_t))sub_24124418C, v12);
  uint64_t v22 = v21;
  uint64_t v23 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v77 - v24;
  sub_24124418C(0);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v77 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = (char *)&v77 - v30;
  uint64_t v32 = (char *)v8 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider__predominantCycle;
  uint64_t v33 = type metadata accessor for CycleChartCycle(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v31, 1, 1, v33);
  sub_241246F58((uint64_t)v31, (uint64_t)v28, (uint64_t (*)(void))sub_24124418C);
  sub_24162FC08();
  sub_241246EF0((uint64_t)v31, (uint64_t (*)(void))sub_24124418C);
  uint64_t v34 = v32;
  id v35 = v82;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v34, v25, v22);
  uint64_t v36 = (char *)v8 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider__model;
  uint64_t v37 = type metadata accessor for CycleChartsModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v20, 1, 1, v37);
  sub_241246F58((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(void))sub_241244224);
  unint64_t v38 = v80;
  sub_24162FC08();
  sub_241246EF0((uint64_t)v20, (uint64_t (*)(void))sub_241244224);
  (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v36, v38, v83);
  *(void *)((char *)v8 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider_subscriptions) = MEMORY[0x263F8EE88];
  id v39 = objc_msgSend(v35, sel_healthStore);
  *(void *)&v94[0] = v84;
  swift_getMetatypeMetadata();
  sub_241631D48();
  v8[9] = sub_24155C498(v39);
  v8[10] = v40;
  id v41 = v90;
  *((unsigned char *)v8 + 88) = v42 & 1;
  if (v41 && (id v43 = objc_msgSend(v41, sel_cycles)) != 0)
  {
    uint64_t v44 = v43;
    sub_2411B9D00(0, (unint64_t *)&qword_26B00E610);
    unint64_t v45 = sub_241631F28();

    uint64_t v46 = sub_2414CC398(v45);
  }
  else
  {
    uint64_t v46 = MEMORY[0x263F8EE78];
  }
  id v47 = v78;
  uint64_t v48 = v77;
  *(void *)((char *)v8 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider_cycles) = v46;
  v8[2] = v35;
  uint64_t v49 = v87;
  uint64_t v50 = v88;
  unint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 16);
  uint64_t v52 = v89;
  v51((char *)v8 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider_gregorianCalendar, v89, v88);
  *(void *)((char *)v8 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider_horizontalSizeClass) = v48;
  id v53 = v35;
  uint64_t v54 = (uint64_t)v85;
  sub_24162B9A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 32))((uint64_t)v8 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider_currentCalendar, v54, v50);
  id v55 = v47;
  id v56 = objc_msgSend(v53, sel_healthStore);
  v51((char *)v54, v52, v50);
  type metadata accessor for CycleChartDayProvider();
  swift_allocObject();
  id v57 = sub_241513F80(v55, v56, v54);

  v8[3] = v57;
  sub_2415B6CA8(objc_msgSend(v90, sel_recentBasalBodyTemperature), (uint64_t)(id)v8[9], (uint64_t)v92);
  uint64_t v58 = (char *)v8 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider_basalBodyTemperatureRange;
  long long v59 = v92[1];
  *(_OWORD *)uint64_t v58 = v92[0];
  *((_OWORD *)v58 + 1) = v59;
  *((void *)v58 + 4) = v93;
  id v60 = (id)v8[10];
  sub_2415B6B84(v60, (uint64_t)v94);
  long long v61 = v94[1];
  *((_OWORD *)v8 + 2) = v94[0];
  *((_OWORD *)v8 + 3) = v61;
  v8[8] = v95;
  uint64_t v62 = self;
  id v63 = objc_msgSend(v53, sel_healthStore);
  id v64 = objc_msgSend(v62, sel_hkmc_cycleChartsHiddenRowsDomainWithHealthStore_, v63);

  LOBYTE(v63) = *((unsigned char *)v8 + 88);
  type metadata accessor for CycleChartsSettings();
  swift_allocObject();
  *(void *)((char *)v8 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider_settings) = sub_24131C5DC(v64, (char)v63);
  *(double *)((char *)v8 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider_preferredMaxLayoutWidth) = a7;
  sub_24124280C();
  id v65 = v86;
  if (v86)
  {
    unint64_t v66 = *(void *)((char *)v8 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider_cycles);
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    id v65 = v65;
    sub_2413A3B90((uint64_t)v65, v66);
    uint64_t v68 = v67;
    char v70 = v69;
    swift_bridgeObjectRelease();

    char v71 = v70 & 1;
  }
  else
  {
    uint64_t v68 = 0;
    char v71 = 1;
  }
  sub_241243888(v68, v71);
  sub_2411B9D00(0, (unint64_t *)&qword_26B0130B0);
  swift_retain();
  CGFloat v72 = (void *)sub_2416325A8();
  objc_msgSend(v53, sel_addObserver_queue_, v8, v72);
  swift_release();

  id v73 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v73, sel_addObserver_selector_name_object_, v8, sel_significantTimeChangeDidOccur, *MEMORY[0x263F83390], 0);

  uint64_t v91 = *(void *)(*(void *)((char *)v8
                              + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider_settings)
                  + 32);
  uint64_t v74 = swift_allocObject();
  swift_weakInit();
  uint64_t v75 = swift_allocObject();
  *(void *)(v75 + 16) = sub_241247BD8;
  *(void *)(v75 + 24) = v74;
  sub_241247C18();
  sub_241247C84(&qword_268CFB700, (void (*)(uint64_t))sub_241247C18);
  swift_retain();
  sub_24162FDD8();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_24162FA78();
  swift_endAccess();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v89, v88);
  return v8;
}

void sub_241243888(uint64_t a1, char a2)
{
  sub_241244224(0);
  MEMORY[0x270FA5388](v5 - 8);
  double v7 = (uint64_t *)((char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for CycleChartCycle(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (uint64_t *)((char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24124418C(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  id v17 = (char *)&v25 - v16;
  MEMORY[0x270FA5388](v18);
  double v20 = (char *)&v25 - v19;
  if (a2)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24162FC48();
    swift_release();
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v20, 1, v8))
    {
      sub_241246EF0((uint64_t)v20, (uint64_t (*)(void))sub_24124418C);
      a1 = 0;
      goto LABEL_6;
    }
    sub_241246F58((uint64_t)v20, (uint64_t)v11, type metadata accessor for CycleChartCycle);
    sub_241246EF0((uint64_t)v20, (uint64_t (*)(void))sub_24124418C);
    a1 = *v11;
    sub_241246EF0((uint64_t)v11, type metadata accessor for CycleChartCycle);
  }
  if (a1 < 0) {
    return;
  }
LABEL_6:
  unint64_t v21 = *(void *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider_cycles);
  if (!(v21 >> 62))
  {
    if (a1 >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      return;
    }
LABEL_8:
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24162FC48();
    swift_release();
    swift_release();
    uint64_t v22 = type metadata accessor for CycleChartsModel();
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v7, 1, v22) != 1)
    {
      uint64_t v23 = *v7;
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      sub_241246EF0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for CycleChartsModel);
      if ((unint64_t)a1 < *(void *)(v23 + 16))
      {
        sub_241246F58(v23+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * a1, (uint64_t)v17, type metadata accessor for CycleChartCycle);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v17, 0, 1, v8);
        swift_getKeyPath();
        swift_getKeyPath();
        sub_241246F58((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(void))sub_24124418C);
        swift_retain();
        sub_24162FC58();
        sub_241246EF0((uint64_t)v17, (uint64_t (*)(void))sub_24124418C);
        return;
      }
      __break(1u);
    }
    __break(1u);
    return;
  }
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v24 = sub_241633068();
  swift_bridgeObjectRelease();
  if (a1 < v24) {
    goto LABEL_8;
  }
}

uint64_t sub_241243CF0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_24124280C();
    return swift_release();
  }
  return result;
}

uint64_t sub_241243D48()
{
  swift_release();
  uint64_t v1 = *(void **)(v0 + 72);

  uint64_t v2 = v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider_gregorianCalendar;
  uint64_t v3 = sub_24162BA08();
  double v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  v4(v2, v3);
  v4(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider_currentCalendar, v3);
  swift_release();
  uint64_t v5 = v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider__predominantCycle;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263EFDE58];
  sub_2412441C0(0, &qword_268CFB6D8, (uint64_t (*)(uint64_t))sub_24124418C, MEMORY[0x263EFDE58]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
  uint64_t v8 = v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider__model;
  sub_2412441C0(0, &qword_268CFB6E0, (uint64_t (*)(uint64_t))sub_241244224, v6);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider_basalBodyTemperatureRange
                     + 32));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_241243F20()
{
  sub_241243D48();

  return swift_deallocClassInstance();
}

uint64_t sub_241243F78()
{
  return type metadata accessor for CycleChartsModelProvider();
}

uint64_t type metadata accessor for CycleChartsModelProvider()
{
  uint64_t result = qword_268CFB6C8;
  if (!qword_268CFB6C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_241243FCC()
{
  sub_24162BA08();
  if (v0 <= 0x3F)
  {
    sub_2412441C0(319, &qword_268CFB6D8, (uint64_t (*)(uint64_t))sub_24124418C, MEMORY[0x263EFDE58]);
    if (v1 <= 0x3F)
    {
      sub_2412441C0(319, &qword_268CFB6E0, (uint64_t (*)(uint64_t))sub_241244224, MEMORY[0x263EFDE58]);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_24124418C(uint64_t a1)
{
}

void sub_2412441C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241244224(uint64_t a1)
{
}

uint64_t sub_241244258()
{
  unint64_t v1 = v0;
  unint64_t v2 = sub_24131E6E0();
  swift_retain();
  uint64_t v3 = sub_24124765C(v2);
  swift_bridgeObjectRelease();
  swift_release();
  v11[0] = 1;
  id v4 = (id)HKMCSymptomSampleTypes();
  sub_2411B9D00(0, (unint64_t *)&qword_26B0125F0);
  unint64_t v5 = sub_241631F28();

  if (v5 >> 62)
  {
    sub_2411B9D00(0, (unint64_t *)&qword_26B012368);
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    unint64_t v6 = sub_241633058();
    swift_bridgeObjectRelease();
  }
  else
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_241633228();
    sub_2411B9D00(0, (unint64_t *)&qword_26B012368);
    unint64_t v6 = v5;
  }
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v7 = sub_241246FC0(v6, v1, v11);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v8 = sub_241291FE4((uint64_t)v7);
  swift_bridgeObjectRelease();
  sub_241496C7C(v8);
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  sub_24124799C(0);
  sub_241247C84(&qword_268CFB6F0, sub_24124799C);
  sub_241631BE8();
  swift_release();
  return v3;
}

uint64_t sub_2412444B4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24162B7E8();
  MEMORY[0x270FA5388](v4 - 8);
  v307 = (char *)&v296 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v306 = sub_241631CA8();
  uint64_t v6 = *(void *)(v306 - 8);
  MEMORY[0x270FA5388](v306);
  v308 = (char *)&v296 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v9 = MEMORY[0x270FA5388](v8).n128_u64[0];
  uint64_t v11 = (char *)&v296 - v10;
  id v12 = objc_msgSend(a1, sel_identifier, v9);
  uint64_t v13 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  uint64_t v15 = v14;

  unsigned __int8 v16 = sub_24131D898(v13, v15);
  swift_bridgeObjectRelease();
  if ((v16 & 1) == 0) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v17 = (uint64_t)objc_msgSend(a1, sel_code);
  if (v17 <= 242)
  {
    switch(v17)
    {
      case 'Z':
        sub_2412441C0(0, (unint64_t *)&qword_268D03530, (uint64_t (*)(uint64_t))sub_24122BF2C, MEMORY[0x263F8E0F8]);
        uint64_t v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = xmmword_241637EE0;
        long long v19 = *(_OWORD *)(v2
                        + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider_basalBodyTemperatureRange
                        + 16);
        long long v321 = *(_OWORD *)(v2
                         + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider_basalBodyTemperatureRange);
        long long v322 = v19;
        *(void *)&long long v323 = *(void *)(v2
                                     + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider_basalBodyTemperatureRange
                                     + 32);
        sub_2411FEAA0((uint64_t)&v321);
        sub_2414D6560((uint64_t *)&v321, (uint64_t)&v327);
        sub_2411FEADC((uint64_t)&v321);
        goto LABEL_15;
      case '[':
        sub_2412441C0(0, (unint64_t *)&qword_268D03530, (uint64_t (*)(uint64_t))sub_24122BF2C, MEMORY[0x263F8E0F8]);
        uint64_t v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = xmmword_24163D200;
        uint64_t v301 = swift_allocObject();
        *(void *)(v301 + 16) = 5;
        uint64_t v82 = sub_2411F83BC(5);
        v299 = v83;
        uint64_t v300 = v82;
        uint64_t v84 = v11;
        sub_241631C38();
        uint64_t v85 = v6;
        uint64_t v86 = (void (*)(char *, char *, uint64_t))(v6 + 16);
        uint64_t v87 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
        uint64_t v88 = v308;
        uint64_t v89 = v306;
        v304 = v86;
        id v90 = v87;
        v87(v308, v84, v306);
        if (qword_26B0131F0 != -1) {
          swift_once();
        }
        id v91 = (id)qword_26B0181A0;
        sub_24162B7D8();
        uint64_t v92 = sub_241631D38();
        uint64_t v297 = v93;
        unint64_t v298 = v92;
        uint64_t v94 = *(void (**)(char *, uint64_t))(v85 + 8);
        v94(v84, v89);
        uint64_t v305 = v85 + 8;
        v303 = v94;
        sub_241631C38();
        uint64_t v302 = (uint64_t)v90;
        v90(v88, v84, v89);
        id v95 = (id)qword_26B0181A0;
        sub_24162B7D8();
        uint64_t v96 = sub_241631D38();
        uint64_t v98 = v97;
        v94(v84, v89);
        *(void *)(v18 + 56) = &type metadata for CategoryRow;
        *(void *)(v18 + 64) = &off_26F56F758;
        uint64_t v99 = swift_allocObject();
        *(void *)(v18 + 32) = v99;
        uint64_t v100 = v299;
        *(void *)(v99 + 16) = v300;
        *(void *)(v99 + 24) = v100;
        uint64_t v101 = v301;
        *(void *)(v99 + 32) = sub_24122C0C4;
        *(void *)(v99 + 40) = v101;
        uint64_t v102 = v297;
        *(void *)(v99 + 48) = v298;
        *(void *)(v99 + 56) = v102;
        *(void *)(v99 + 64) = v96;
        *(void *)(v99 + 72) = v98;
        *(unsigned char *)(v99 + 80) = 0;
        *(void *)(v99 + 88) = 0;
        *(void *)(v99 + 96) = 0;
        *(void *)(v99 + 104) = 0x3FF0000000000000;
        uint64_t v103 = swift_allocObject();
        *(void *)(v103 + 16) = 4;
        uint64_t v104 = sub_2411F83BC(4);
        uint64_t v300 = v105;
        uint64_t v301 = v104;
        sub_241631C38();
        id v106 = v88;
        uint64_t v107 = (void (*)(char *, char *, uint64_t))v302;
        ((void (*)(char *, char *, uint64_t))v302)(v106, v84, v89);
        id v108 = (id)qword_26B0181A0;
        sub_24162B7D8();
        uint64_t v109 = sub_241631D38();
        uint64_t v111 = v110;
        v303(v84, v89);
        *(void *)(v18 + 96) = &type metadata for CategoryRow;
        *(void *)(v18 + 104) = &off_26F56F758;
        uint64_t v112 = swift_allocObject();
        *(void *)(v18 + 72) = v112;
        uint64_t v113 = v300;
        *(void *)(v112 + 16) = v301;
        *(void *)(v112 + 24) = v113;
        *(void *)(v112 + 32) = sub_24122C258;
        *(void *)(v112 + 40) = v103;
        *(void *)(v112 + 48) = 0;
        *(void *)(v112 + 56) = 0;
        *(void *)(v112 + 64) = v109;
        *(void *)(v112 + 72) = v111;
        *(unsigned char *)(v112 + 80) = 0;
        *(void *)(v112 + 88) = 0;
        *(void *)(v112 + 96) = 0;
        *(void *)(v112 + 104) = 0x3FF0000000000000;
        uint64_t v301 = swift_allocObject();
        *(void *)(v301 + 16) = 2;
        uint64_t v114 = sub_2411F83BC(2);
        v299 = v115;
        uint64_t v300 = v114;
        sub_241631C38();
        v107(v308, v84, v89);
        id v116 = (id)qword_26B0181A0;
        sub_24162B7D8();
        uint64_t v117 = sub_241631D38();
        uint64_t v119 = v118;
        uint64_t v120 = v89;
        uint64_t v121 = v89;
        uint64_t v122 = v303;
        v303(v84, v120);
        *(void *)(v18 + 136) = &type metadata for CategoryRow;
        *(void *)(v18 + 144) = &off_26F56F758;
        uint64_t v123 = swift_allocObject();
        *(void *)(v18 + 112) = v123;
        uint64_t v124 = v299;
        *(void *)(v123 + 16) = v300;
        *(void *)(v123 + 24) = v124;
        uint64_t v125 = v301;
        *(void *)(v123 + 32) = sub_24122C258;
        *(void *)(v123 + 40) = v125;
        *(void *)(v123 + 48) = 0;
        *(void *)(v123 + 56) = 0;
        *(void *)(v123 + 64) = v117;
        *(void *)(v123 + 72) = v119;
        *(unsigned char *)(v123 + 80) = 0;
        *(void *)(v123 + 88) = 0;
        *(void *)(v123 + 96) = 0;
        *(void *)(v123 + 104) = 0x3FF0000000000000;
        uint64_t v301 = swift_allocObject();
        *(void *)(v301 + 16) = 3;
        uint64_t v126 = sub_2411F83BC(3);
        v299 = v127;
        uint64_t v300 = v126;
        sub_241631C38();
        id v128 = v308;
        v107(v308, v84, v121);
        id v129 = (id)qword_26B0181A0;
        sub_24162B7D8();
        uint64_t v130 = sub_241631D38();
        uint64_t v132 = v131;
        v122(v84, v121);
        *(void *)(v18 + 176) = &type metadata for CategoryRow;
        *(void *)(v18 + 184) = &off_26F56F758;
        uint64_t v133 = swift_allocObject();
        *(void *)(v18 + 152) = v133;
        uint64_t v134 = v299;
        *(void *)(v133 + 16) = v300;
        *(void *)(v133 + 24) = v134;
        uint64_t v135 = v301;
        *(void *)(v133 + 32) = sub_24122C258;
        *(void *)(v133 + 40) = v135;
        *(void *)(v133 + 48) = 0;
        *(void *)(v133 + 56) = 0;
        *(void *)(v133 + 64) = v130;
        *(void *)(v133 + 72) = v132;
        *(unsigned char *)(v133 + 80) = 0;
        *(void *)(v133 + 88) = 0;
        *(void *)(v133 + 96) = 0;
        *(void *)(v133 + 104) = 0x3FF0000000000000;
        uint64_t v65 = swift_allocObject();
        *(void *)(v65 + 16) = 1;
        uint64_t v136 = sub_2411F83BC(1);
        uint64_t v301 = v137;
        sub_241631C38();
        uint64_t v138 = v306;
        ((void (*)(char *, char *, uint64_t))v302)(v128, v84, v306);
        id v139 = (id)qword_26B0181A0;
        sub_24162B7D8();
        uint64_t v69 = sub_241631D38();
        uint64_t v140 = v138;
        uint64_t v72 = v141;
        v303(v84, v140);
        *(void *)(v18 + 216) = &type metadata for CategoryRow;
        *(void *)(v18 + 224) = &off_26F56F758;
        uint64_t v73 = swift_allocObject();
        *(void *)(v18 + 192) = v73;
        uint64_t v142 = v301;
        *(void *)(v73 + 16) = v136;
        *(void *)(v73 + 24) = v142;
        uint64_t v75 = sub_24122C258;
        goto LABEL_33;
      case '\\':
        sub_2412441C0(0, (unint64_t *)&qword_268D03530, (uint64_t (*)(uint64_t))sub_24122BF2C, MEMORY[0x263F8E0F8]);
        uint64_t v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = xmmword_24163CA90;
        uint64_t v301 = swift_allocObject();
        *(void *)(v301 + 16) = 4;
        uint64_t v207 = sub_2411F811C(4);
        v299 = v208;
        uint64_t v300 = v207;
        uint64_t v209 = v11;
        sub_241631C38();
        uint64_t v210 = *(void (**)(char *, uint64_t))(v6 + 16);
        uint64_t v211 = v308;
        uint64_t v212 = v11;
        uint64_t v213 = v306;
        v304 = (void (*)(char *, char *, uint64_t))(v6 + 16);
        uint64_t v214 = v210;
        ((void (*)(char *, char *, uint64_t))v210)(v308, v212, v306);
        if (qword_26B0131F0 != -1) {
          swift_once();
        }
        id v215 = (id)qword_26B0181A0;
        sub_24162B7D8();
        uint64_t v216 = sub_241631D38();
        uint64_t v297 = v217;
        unint64_t v298 = v216;
        id v218 = *(void (**)(char *, uint64_t))(v6 + 8);
        v218(v209, v213);
        uint64_t v305 = v6 + 8;
        uint64_t v302 = (uint64_t)v218;
        sub_241631C38();
        v303 = v214;
        ((void (*)(char *, char *, uint64_t))v214)(v211, v209, v213);
        id v219 = (id)qword_26B0181A0;
        sub_24162B7D8();
        uint64_t v220 = sub_241631D38();
        uint64_t v222 = v221;
        v218(v209, v213);
        *(void *)(v18 + 56) = &type metadata for CategoryRow;
        *(void *)(v18 + 64) = &off_26F56F758;
        uint64_t v223 = swift_allocObject();
        *(void *)(v18 + 32) = v223;
        id v224 = v299;
        *(void *)(v223 + 16) = v300;
        *(void *)(v223 + 24) = v224;
        uint64_t v225 = v301;
        *(void *)(v223 + 32) = sub_24122C11C;
        *(void *)(v223 + 40) = v225;
        uint64_t v226 = v297;
        *(void *)(v223 + 48) = v298;
        *(void *)(v223 + 56) = v226;
        *(void *)(v223 + 64) = v220;
        *(void *)(v223 + 72) = v222;
        *(unsigned char *)(v223 + 80) = 0;
        *(void *)(v223 + 88) = 0;
        *(void *)(v223 + 96) = 0;
        *(void *)(v223 + 104) = 0x3FF0000000000000;
        uint64_t v227 = swift_allocObject();
        *(void *)(v227 + 16) = 3;
        uint64_t v228 = sub_2411F811C(3);
        uint64_t v300 = v229;
        uint64_t v301 = v228;
        sub_241631C38();
        uint64_t v230 = (void (*)(char *, char *, uint64_t))v303;
        ((void (*)(char *, char *, uint64_t))v303)(v211, v209, v213);
        id v231 = (id)qword_26B0181A0;
        sub_24162B7D8();
        uint64_t v232 = sub_241631D38();
        uint64_t v234 = v233;
        uint64_t v235 = v213;
        uint64_t v236 = v213;
        uint64_t v237 = (void (*)(char *, uint64_t))v302;
        ((void (*)(char *, uint64_t))v302)(v209, v235);
        *(void *)(v18 + 96) = &type metadata for CategoryRow;
        *(void *)(v18 + 104) = &off_26F56F758;
        uint64_t v238 = swift_allocObject();
        *(void *)(v18 + 72) = v238;
        uint64_t v239 = v300;
        *(void *)(v238 + 16) = v301;
        *(void *)(v238 + 24) = v239;
        *(void *)(v238 + 32) = sub_24122C25C;
        *(void *)(v238 + 40) = v227;
        *(void *)(v238 + 48) = 0;
        *(void *)(v238 + 56) = 0;
        *(void *)(v238 + 64) = v232;
        *(void *)(v238 + 72) = v234;
        *(unsigned char *)(v238 + 80) = 0;
        *(void *)(v238 + 88) = 0;
        *(void *)(v238 + 96) = 0;
        *(void *)(v238 + 104) = 0x3FF0000000000000;
        uint64_t v240 = swift_allocObject();
        *(void *)(v240 + 16) = 2;
        uint64_t v241 = sub_2411F811C(2);
        uint64_t v300 = v242;
        uint64_t v301 = v241;
        sub_241631C38();
        v230(v308, v209, v236);
        id v243 = (id)qword_26B0181A0;
        sub_24162B7D8();
        uint64_t v244 = sub_241631D38();
        uint64_t v246 = v245;
        v237(v209, v236);
        *(void *)(v18 + 136) = &type metadata for CategoryRow;
        *(void *)(v18 + 144) = &off_26F56F758;
        uint64_t v247 = swift_allocObject();
        *(void *)(v18 + 112) = v247;
        uint64_t v248 = v300;
        *(void *)(v247 + 16) = v301;
        *(void *)(v247 + 24) = v248;
        *(void *)(v247 + 32) = sub_24122C25C;
        *(void *)(v247 + 40) = v240;
        *(void *)(v247 + 48) = 0;
        *(void *)(v247 + 56) = 0;
        *(void *)(v247 + 64) = v244;
        *(void *)(v247 + 72) = v246;
        *(unsigned char *)(v247 + 80) = 0;
        *(void *)(v247 + 88) = 0;
        *(void *)(v247 + 96) = 0;
        *(void *)(v247 + 104) = 0x3FF0000000000000;
        uint64_t v65 = swift_allocObject();
        *(void *)(v65 + 16) = 1;
        uint64_t v249 = sub_2411F811C(1);
        uint64_t v300 = v250;
        uint64_t v301 = v249;
        sub_241631C38();
        uint64_t v251 = v236;
        ((void (*)(char *, char *, uint64_t))v303)(v308, v209, v236);
        id v252 = (id)qword_26B0181A0;
        sub_24162B7D8();
        uint64_t v69 = sub_241631D38();
        uint64_t v72 = v253;
        ((void (*)(char *, uint64_t))v302)(v209, v251);
        *(void *)(v18 + 176) = &type metadata for CategoryRow;
        *(void *)(v18 + 184) = &off_26F56F758;
        uint64_t v73 = swift_allocObject();
        *(void *)(v18 + 152) = v73;
        uint64_t v254 = v300;
        *(void *)(v73 + 16) = v301;
        *(void *)(v73 + 24) = v254;
        uint64_t v75 = sub_24122C25C;
        goto LABEL_33;
      case '_':
        sub_2412441C0(0, (unint64_t *)&qword_268D03530, (uint64_t (*)(uint64_t))sub_24122BF2C, MEMORY[0x263F8E0F8]);
        uint64_t v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = xmmword_24163CA90;
        sub_2411F8A48(2, 0, 1, 0, (uint64_t)&v309);
        *(void *)(v18 + 56) = &type metadata for CategoryRow;
        *(void *)(v18 + 64) = &off_26F56F758;
        unint64_t v143 = (_OWORD *)swift_allocObject();
        *(void *)(v18 + 32) = v143;
        long long v144 = v312;
        v143[3] = v311;
        v143[4] = v144;
        long long v145 = v314;
        v143[5] = v313;
        v143[6] = v145;
        long long v146 = v310;
        v143[1] = v309;
        v143[2] = v146;
        sub_2411F8A48(3, 0, 0, 0, (uint64_t)&v315);
        *(void *)(v18 + 96) = &type metadata for CategoryRow;
        *(void *)(v18 + 104) = &off_26F56F758;
        uint64_t v147 = (_OWORD *)swift_allocObject();
        *(void *)(v18 + 72) = v147;
        long long v148 = v318;
        long long v149 = v319;
        long long v150 = v316;
        v147[3] = v317;
        v147[4] = v148;
        long long v151 = v320;
        v147[5] = v149;
        v147[6] = v151;
        v147[1] = v315;
        v147[2] = v150;
        sub_2411F8A48(4, 0, 0, 0, (uint64_t)&v321);
        *(void *)(v18 + 136) = &type metadata for CategoryRow;
        *(void *)(v18 + 144) = &off_26F56F758;
        CGRect v152 = (_OWORD *)swift_allocObject();
        *(void *)(v18 + 112) = v152;
        long long v153 = v324;
        v152[3] = v323;
        v152[4] = v153;
        long long v154 = v326;
        v152[5] = v325;
        v152[6] = v154;
        long long v155 = v322;
        v152[1] = v321;
        v152[2] = v155;
        uint64_t v33 = 0;
        goto LABEL_22;
        sub_2412441C0(0, (unint64_t *)&qword_268D03530, (uint64_t (*)(uint64_t))sub_24122BF2C, MEMORY[0x263F8E0F8]);
        uint64_t v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = xmmword_241637EE0;
        sub_2411F8FDC((uint64_t)&v327);
        *(void *)(v18 + 56) = &type metadata for CategoryRow;
        *(void *)(v18 + 64) = &off_26F56F758;
        uint64_t v169 = (_OWORD *)swift_allocObject();
        *(void *)(v18 + 32) = v169;
        goto LABEL_35;
      case 'a':
        sub_2412441C0(0, (unint64_t *)&qword_268D03530, (uint64_t (*)(uint64_t))sub_24122BF2C, MEMORY[0x263F8E0F8]);
        uint64_t v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = xmmword_24163AC10;
        uint64_t v302 = swift_allocObject();
        *(void *)(v302 + 16) = 2;
        uint64_t v255 = sub_2411F80E4(2);
        uint64_t v300 = v256;
        uint64_t v301 = v255;
        sub_241631C38();
        uint64_t v257 = v6;
        uint64_t v258 = (void (*)(char *, char *, uint64_t))(v6 + 16);
        uint64_t v259 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
        id v260 = v308;
        uint64_t v261 = v306;
        v304 = v258;
        uint64_t v262 = v259;
        v259(v308, v11, v306);
        if (qword_26B0131F0 != -1) {
          swift_once();
        }
        id v263 = (id)qword_26B0181A0;
        sub_24162B7D8();
        uint64_t v264 = sub_241631D38();
        uint64_t v297 = v265;
        unint64_t v298 = v264;
        uint64_t v266 = *(void (**)(char *, uint64_t))(v257 + 8);
        v266(v11, v261);
        v303 = v266;
        sub_241631C38();
        v262(v260, v11, v261);
        v299 = v262;
        id v267 = (id)qword_26B0181A0;
        sub_24162B7D8();
        uint64_t v268 = sub_241631D38();
        uint64_t v305 = v257 + 8;
        uint64_t v269 = v261;
        uint64_t v271 = v270;
        v266(v11, v269);
        *(void *)(v18 + 56) = &type metadata for CategoryRow;
        *(void *)(v18 + 64) = &off_26F56F758;
        uint64_t v272 = swift_allocObject();
        *(void *)(v18 + 32) = v272;
        uint64_t v273 = v300;
        *(void *)(v272 + 16) = v301;
        *(void *)(v272 + 24) = v273;
        uint64_t v274 = v302;
        *(void *)(v272 + 32) = sub_24122C08C;
        *(void *)(v272 + 40) = v274;
        uint64_t v275 = v297;
        *(void *)(v272 + 48) = v298;
        *(void *)(v272 + 56) = v275;
        *(void *)(v272 + 64) = v268;
        *(void *)(v272 + 72) = v271;
        *(unsigned char *)(v272 + 80) = 0;
        *(void *)(v272 + 88) = 0;
        *(void *)(v272 + 96) = 0;
        *(void *)(v272 + 104) = 0x3FF0000000000000;
        uint64_t v276 = swift_allocObject();
        *(void *)(v276 + 16) = 1;
        uint64_t v277 = sub_2411F80E4(1);
        uint64_t v301 = v278;
        uint64_t v302 = v277;
        sub_241631C38();
        uint64_t v279 = v306;
        v262(v260, v11, v306);
        id v280 = (id)qword_26B0181A0;
        sub_24162B7D8();
        uint64_t v281 = sub_241631D38();
        uint64_t v283 = v282;
        v303(v11, v279);
        *(void *)(v18 + 96) = &type metadata for CategoryRow;
        *(void *)(v18 + 104) = &off_26F56F758;
        uint64_t v284 = swift_allocObject();
        *(void *)(v18 + 72) = v284;
        uint64_t v285 = v301;
        *(void *)(v284 + 16) = v302;
        *(void *)(v284 + 24) = v285;
        *(void *)(v284 + 32) = sub_24122C254;
        *(void *)(v284 + 40) = v276;
        *(void *)(v284 + 48) = 0;
        *(void *)(v284 + 56) = 0;
        *(void *)(v284 + 64) = v281;
        *(void *)(v284 + 72) = v283;
        *(unsigned char *)(v284 + 80) = 0;
        *(void *)(v284 + 88) = 0;
        *(void *)(v284 + 96) = 0;
        *(void *)(v284 + 104) = 0x3FF0000000000000;
        uint64_t v65 = swift_allocObject();
        *(void *)(v65 + 16) = 3;
        uint64_t v302 = sub_2411F80E4(3);
        uint64_t v287 = v286;
        sub_241631C38();
        v299(v260, v11, v279);
        id v288 = (id)qword_26B0181A0;
        sub_24162B7D8();
        uint64_t v69 = sub_241631D38();
        uint64_t v289 = v279;
        uint64_t v72 = v290;
        v303(v11, v289);
        *(void *)(v18 + 136) = &type metadata for CategoryRow;
        *(void *)(v18 + 144) = &off_26F56F758;
        uint64_t v73 = swift_allocObject();
        *(void *)(v18 + 112) = v73;
        *(void *)(v73 + 16) = v302;
        *(void *)(v73 + 24) = v287;
        uint64_t v75 = sub_24122C254;
        goto LABEL_33;
      default:
        goto LABEL_37;
    }
  }
  if (v17 <= 255)
  {
    if (v17 == 243)
    {
      sub_2412441C0(0, (unint64_t *)&qword_268D03530, (uint64_t (*)(uint64_t))sub_24122BF2C, MEMORY[0x263F8E0F8]);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_24163AC10;
      uint64_t v301 = swift_allocObject();
      *(void *)(v301 + 16) = 3;
      uint64_t v34 = sub_2411F838C(3);
      v299 = v35;
      uint64_t v300 = v34;
      uint64_t v36 = v11;
      sub_241631C38();
      uint64_t v37 = v6;
      id v39 = (void (*)(char *, uint64_t))(v6 + 16);
      unint64_t v38 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
      uint64_t v40 = v308;
      uint64_t v41 = v306;
      v303 = v39;
      v304 = v38;
      v38(v308, v36, v306);
      if (qword_26B0131F0 != -1) {
        swift_once();
      }
      id v42 = (id)qword_26B0181A0;
      sub_24162B7D8();
      uint64_t v43 = sub_241631D38();
      uint64_t v296 = v44;
      uint64_t v297 = v43;
      unint64_t v45 = *(void (**)(char *, uint64_t))(v37 + 8);
      v45(v36, v41);
      uint64_t v305 = v37 + 8;
      uint64_t v302 = (uint64_t)v45;
      uint64_t v46 = v40;
      id v47 = v36;
      unint64_t v298 = 0xD00000000000001ELL;
      sub_241631C38();
      v304(v46, v36, v41);
      id v48 = (id)qword_26B0181A0;
      sub_24162B7D8();
      uint64_t v49 = sub_241631D38();
      uint64_t v51 = v50;
      v45(v47, v41);
      *(void *)(v18 + 56) = &type metadata for CategoryRow;
      *(void *)(v18 + 64) = &off_26F56F758;
      uint64_t v52 = swift_allocObject();
      *(void *)(v18 + 32) = v52;
      id v53 = v299;
      *(void *)(v52 + 16) = v300;
      *(void *)(v52 + 24) = v53;
      uint64_t v54 = v301;
      *(void *)(v52 + 32) = sub_24122C19C;
      *(void *)(v52 + 40) = v54;
      uint64_t v55 = v296;
      *(void *)(v52 + 48) = v297;
      *(void *)(v52 + 56) = v55;
      *(void *)(v52 + 64) = v49;
      *(void *)(v52 + 72) = v51;
      *(unsigned char *)(v52 + 80) = 0;
      *(void *)(v52 + 88) = 0;
      *(void *)(v52 + 96) = 0;
      *(void *)(v52 + 104) = 0x3FF0000000000000;
      uint64_t v56 = swift_allocObject();
      *(void *)(v56 + 16) = 2;
      uint64_t v57 = sub_2411F838C(2);
      uint64_t v300 = v58;
      uint64_t v301 = v57;
      sub_241631C38();
      v304(v46, v47, v41);
      id v59 = (id)qword_26B0181A0;
      sub_24162B7D8();
      uint64_t v60 = sub_241631D38();
      uint64_t v62 = v61;
      ((void (*)(char *, uint64_t))v302)(v47, v41);
      *(void *)(v18 + 96) = &type metadata for CategoryRow;
      *(void *)(v18 + 104) = &off_26F56F758;
      uint64_t v63 = swift_allocObject();
      *(void *)(v18 + 72) = v63;
      uint64_t v64 = v300;
      *(void *)(v63 + 16) = v301;
      *(void *)(v63 + 24) = v64;
      *(void *)(v63 + 32) = sub_24122C264;
      *(void *)(v63 + 40) = v56;
      *(void *)(v63 + 48) = 0;
      *(void *)(v63 + 56) = 0;
      *(void *)(v63 + 64) = v60;
      *(void *)(v63 + 72) = v62;
      *(unsigned char *)(v63 + 80) = 0;
      *(void *)(v63 + 88) = 0;
      *(void *)(v63 + 96) = 0;
      *(void *)(v63 + 104) = 0x3FF0000000000000;
      uint64_t v65 = swift_allocObject();
      *(void *)(v65 + 16) = 1;
      uint64_t v66 = sub_2411F838C(1);
      uint64_t v301 = v67;
      sub_241631C38();
      v304(v46, v47, v41);
      id v68 = (id)qword_26B0181A0;
      sub_24162B7D8();
      uint64_t v69 = sub_241631D38();
      uint64_t v70 = v41;
      uint64_t v72 = v71;
      ((void (*)(char *, uint64_t))v302)(v47, v70);
      *(void *)(v18 + 136) = &type metadata for CategoryRow;
      *(void *)(v18 + 144) = &off_26F56F758;
      uint64_t v73 = swift_allocObject();
      *(void *)(v18 + 112) = v73;
      uint64_t v74 = v301;
      *(void *)(v73 + 16) = v66;
      *(void *)(v73 + 24) = v74;
      uint64_t v75 = sub_24122C264;
    }
    else
    {
      if (v17 != 244) {
        goto LABEL_37;
      }
      sub_2412441C0(0, (unint64_t *)&qword_268D03530, (uint64_t (*)(uint64_t))sub_24122BF2C, MEMORY[0x263F8E0F8]);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_24163AC10;
      uint64_t v301 = swift_allocObject();
      *(void *)(v301 + 16) = 3;
      uint64_t v170 = sub_2411F83EC(3);
      v299 = v171;
      uint64_t v300 = v170;
      uint64_t v172 = v11;
      sub_241631C38();
      uint64_t v173 = v6;
      uint64_t v175 = (void (*)(char *, uint64_t))(v6 + 16);
      uint64_t v174 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
      uint64_t v176 = v308;
      uint64_t v177 = v306;
      v303 = v175;
      v304 = v174;
      v174(v308, v172, v306);
      if (qword_26B0131F0 != -1) {
        swift_once();
      }
      id v178 = (id)qword_26B0181A0;
      sub_24162B7D8();
      uint64_t v179 = sub_241631D38();
      uint64_t v296 = v180;
      uint64_t v297 = v179;
      uint64_t v181 = *(void (**)(char *, uint64_t))(v173 + 8);
      v181(v172, v177);
      uint64_t v305 = v173 + 8;
      uint64_t v302 = (uint64_t)v181;
      uint64_t v182 = v176;
      uint64_t v183 = v172;
      unint64_t v298 = 0xD000000000000021;
      sub_241631C38();
      v304(v182, v172, v177);
      id v184 = (id)qword_26B0181A0;
      sub_24162B7D8();
      uint64_t v185 = sub_241631D38();
      uint64_t v187 = v186;
      v181(v183, v177);
      *(void *)(v18 + 56) = &type metadata for CategoryRow;
      *(void *)(v18 + 64) = &off_26F56F758;
      uint64_t v188 = swift_allocObject();
      *(void *)(v18 + 32) = v188;
      uint64_t v189 = v299;
      *(void *)(v188 + 16) = v300;
      *(void *)(v188 + 24) = v189;
      uint64_t v190 = v301;
      *(void *)(v188 + 32) = sub_24122C164;
      *(void *)(v188 + 40) = v190;
      uint64_t v191 = v296;
      *(void *)(v188 + 48) = v297;
      *(void *)(v188 + 56) = v191;
      *(void *)(v188 + 64) = v185;
      *(void *)(v188 + 72) = v187;
      *(unsigned char *)(v188 + 80) = 0;
      *(void *)(v188 + 88) = 0;
      *(void *)(v188 + 96) = 0;
      *(void *)(v188 + 104) = 0x3FF0000000000000;
      uint64_t v192 = swift_allocObject();
      *(void *)(v192 + 16) = 2;
      uint64_t v193 = sub_2411F83EC(2);
      uint64_t v300 = v194;
      uint64_t v301 = v193;
      sub_241631C38();
      v304(v182, v183, v177);
      id v195 = (id)qword_26B0181A0;
      sub_24162B7D8();
      uint64_t v196 = sub_241631D38();
      uint64_t v198 = v197;
      ((void (*)(char *, uint64_t))v302)(v183, v177);
      *(void *)(v18 + 96) = &type metadata for CategoryRow;
      *(void *)(v18 + 104) = &off_26F56F758;
      uint64_t v199 = swift_allocObject();
      *(void *)(v18 + 72) = v199;
      uint64_t v200 = v300;
      *(void *)(v199 + 16) = v301;
      *(void *)(v199 + 24) = v200;
      *(void *)(v199 + 32) = sub_24122C260;
      *(void *)(v199 + 40) = v192;
      *(void *)(v199 + 48) = 0;
      *(void *)(v199 + 56) = 0;
      *(void *)(v199 + 64) = v196;
      *(void *)(v199 + 72) = v198;
      *(unsigned char *)(v199 + 80) = 0;
      *(void *)(v199 + 88) = 0;
      *(void *)(v199 + 96) = 0;
      *(void *)(v199 + 104) = 0x3FF0000000000000;
      uint64_t v65 = swift_allocObject();
      *(void *)(v65 + 16) = 1;
      uint64_t v201 = sub_2411F83EC(1);
      uint64_t v301 = v202;
      sub_241631C38();
      v304(v182, v183, v177);
      id v203 = (id)qword_26B0181A0;
      sub_24162B7D8();
      uint64_t v69 = sub_241631D38();
      uint64_t v204 = v177;
      uint64_t v72 = v205;
      ((void (*)(char *, uint64_t))v302)(v183, v204);
      *(void *)(v18 + 136) = &type metadata for CategoryRow;
      *(void *)(v18 + 144) = &off_26F56F758;
      uint64_t v73 = swift_allocObject();
      *(void *)(v18 + 112) = v73;
      uint64_t v206 = v301;
      *(void *)(v73 + 16) = v201;
      *(void *)(v73 + 24) = v206;
      uint64_t v75 = sub_24122C260;
    }
LABEL_33:
    *(void *)(v73 + 32) = v75;
    *(void *)(v73 + 40) = v65;
    *(void *)(v73 + 48) = 0;
    *(void *)(v73 + 56) = 0;
    *(void *)(v73 + 64) = v69;
    *(void *)(v73 + 72) = v72;
    *(unsigned char *)(v73 + 80) = 0;
    *(void *)(v73 + 88) = 0;
    *(void *)(v73 + 96) = 0;
    *(void *)(v73 + 104) = 0x3FF0000000000000;
    return v18;
  }
  if (v17 == 256)
  {
    sub_2412441C0(0, (unint64_t *)&qword_268D03530, (uint64_t (*)(uint64_t))sub_24122BF2C, MEMORY[0x263F8E0F8]);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_241637EE0;
    long long v76 = *(_OWORD *)(v2 + 48);
    long long v321 = *(_OWORD *)(v2 + 32);
    long long v322 = v76;
    *(void *)&long long v323 = *(void *)(v2 + 64);
    sub_2414D630C((uint64_t *)&v321, (uint64_t)&v327);
LABEL_15:
    *(void *)(v18 + 56) = &type metadata for QuantityRow;
    *(void *)(v18 + 64) = &off_26F5696C0;
    uint64_t v77 = (_OWORD *)swift_allocObject();
    *(void *)(v18 + 32) = v77;
    long long v78 = v332;
    v77[5] = v331;
    _OWORD v77[6] = v78;
    long long v79 = v334;
    v77[7] = v333;
    v77[8] = v79;
    long long v80 = v328;
    v77[1] = v327;
    v77[2] = v80;
    long long v81 = v330;
    v77[3] = v329;
    v77[4] = v81;
    return v18;
  }
  if (v17 == 313)
  {
    sub_2412441C0(0, (unint64_t *)&qword_268D03530, (uint64_t (*)(uint64_t))sub_24122BF2C, MEMORY[0x263F8E0F8]);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_24163CA90;
    sub_2411F8A48(2, 1, 1, 0, (uint64_t)&v309);
    *(void *)(v18 + 56) = &type metadata for CategoryRow;
    *(void *)(v18 + 64) = &off_26F56F758;
    double v20 = (_OWORD *)swift_allocObject();
    *(void *)(v18 + 32) = v20;
    long long v21 = v312;
    v20[3] = v311;
    void v20[4] = v21;
    long long v22 = v314;
    v20[5] = v313;
    v20[6] = v22;
    long long v23 = v310;
    v20[1] = v309;
    void v20[2] = v23;
    sub_2411F8A48(3, 1, 0, 0, (uint64_t)&v315);
    *(void *)(v18 + 96) = &type metadata for CategoryRow;
    *(void *)(v18 + 104) = &off_26F56F758;
    uint64_t v24 = (_OWORD *)swift_allocObject();
    *(void *)(v18 + 72) = v24;
    long long v25 = v318;
    long long v26 = v319;
    long long v27 = v316;
    void v24[3] = v317;
    void v24[4] = v25;
    long long v28 = v320;
    v24[5] = v26;
    v24[6] = v28;
    v24[1] = v315;
    void v24[2] = v27;
    sub_2411F8A48(4, 1, 0, 0, (uint64_t)&v321);
    *(void *)(v18 + 136) = &type metadata for CategoryRow;
    *(void *)(v18 + 144) = &off_26F56F758;
    uint64_t v29 = (_OWORD *)swift_allocObject();
    *(void *)(v18 + 112) = v29;
    long long v30 = v324;
    v29[3] = v323;
    void v29[4] = v30;
    long long v31 = v326;
    v29[5] = v325;
    v29[6] = v31;
    long long v32 = v322;
    v29[1] = v321;
    v29[2] = v32;
    uint64_t v33 = 1;
    goto LABEL_22;
  }
  if (v17 != 314)
  {
LABEL_37:
    *(void *)&long long v327 = 0;
    *((void *)&v327 + 1) = 0xE000000000000000;
    sub_241632E78();
    swift_bridgeObjectRelease();
    *(void *)&long long v327 = 0xD000000000000024;
    *((void *)&v327 + 1) = 0x800000024165B8E0;
    id v295 = objc_msgSend(a1, sel_identifier);
    _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();

    sub_241631E08();
    swift_bridgeObjectRelease();
    sub_241633038();
    __break(1u);
    JUMPOUT(0x241246920);
  }
  sub_2412441C0(0, (unint64_t *)&qword_268D03530, (uint64_t (*)(uint64_t))sub_24122BF2C, MEMORY[0x263F8E0F8]);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_24163CA90;
  sub_2411F8A48(2, 2, 1, 0, (uint64_t)&v309);
  *(void *)(v18 + 56) = &type metadata for CategoryRow;
  *(void *)(v18 + 64) = &off_26F56F758;
  uint64_t v156 = (_OWORD *)swift_allocObject();
  *(void *)(v18 + 32) = v156;
  long long v157 = v312;
  v156[3] = v311;
  v156[4] = v157;
  long long v158 = v314;
  v156[5] = v313;
  v156[6] = v158;
  long long v159 = v310;
  v156[1] = v309;
  v156[2] = v159;
  sub_2411F8A48(3, 2, 0, 0, (uint64_t)&v315);
  *(void *)(v18 + 96) = &type metadata for CategoryRow;
  *(void *)(v18 + 104) = &off_26F56F758;
  uint64_t v160 = (_OWORD *)swift_allocObject();
  *(void *)(v18 + 72) = v160;
  long long v161 = v318;
  long long v162 = v319;
  long long v163 = v316;
  v160[3] = v317;
  v160[4] = v161;
  long long v164 = v320;
  v160[5] = v162;
  v160[6] = v164;
  v160[1] = v315;
  v160[2] = v163;
  sub_2411F8A48(4, 2, 0, 0, (uint64_t)&v321);
  *(void *)(v18 + 136) = &type metadata for CategoryRow;
  *(void *)(v18 + 144) = &off_26F56F758;
  id v165 = (_OWORD *)swift_allocObject();
  *(void *)(v18 + 112) = v165;
  long long v166 = v324;
  v165[3] = v323;
  v165[4] = v166;
  long long v167 = v326;
  v165[5] = v325;
  v165[6] = v167;
  long long v168 = v322;
  v165[1] = v321;
  v165[2] = v168;
  uint64_t v33 = 2;
LABEL_22:
  sub_2411F8A48(5, v33, 0, 0, (uint64_t)&v327);
  *(void *)(v18 + 176) = &type metadata for CategoryRow;
  *(void *)(v18 + 184) = &off_26F56F758;
  uint64_t v169 = (_OWORD *)swift_allocObject();
  *(void *)(v18 + 152) = v169;
LABEL_35:
  long long v291 = v330;
  v169[3] = v329;
  v169[4] = v291;
  long long v292 = v332;
  v169[5] = v331;
  v169[6] = v292;
  long long v293 = v328;
  v169[1] = v327;
  v169[2] = v293;
  return v18;
}

void sub_241246940(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CycleChartCycle(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24124418C(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24162FC48();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2))
  {
    sub_241246EF0((uint64_t)v8, (uint64_t (*)(void))sub_24124418C);
    if (!a1) {
      return;
    }
  }
  else
  {
    sub_241246F58((uint64_t)v8, (uint64_t)v5, type metadata accessor for CycleChartCycle);
    sub_241246EF0((uint64_t)v8, (uint64_t (*)(void))sub_24124418C);
    uint64_t v9 = *v5;
    sub_241246EF0((uint64_t)v5, type metadata accessor for CycleChartCycle);
    if (v9 == a1) {
      return;
    }
  }
  sub_241243888(a1, 0);
}

uint64_t sub_241246B30()
{
  uint64_t v0 = sub_24162EFA8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_2416314D8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2411B9D00(0, (unint64_t *)&qword_26B0130B0);
  *uint64_t v7 = sub_2416325A8();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F0E0], v4);
  char v8 = sub_241631508();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    sub_24162EF48();
    uint64_t v10 = sub_24162EF98();
    os_log_type_t v11 = sub_2416322E8();
    if (os_log_type_enabled(v10, v11))
    {
      id v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v19 = v13;
      uint64_t v17 = v0;
      *(_DWORD *)id v12 = 136446210;
      uint64_t v14 = sub_2416333E8();
      uint64_t v18 = sub_2411B6898(v14, v15, &v19);
      sub_241632C28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v10, v11, "[%{public}s] Received significant time change notification", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245621640](v13, -1, -1);
      MEMORY[0x245621640](v12, -1, -1);

      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v17);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    }
    return sub_24124280C();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_241246EF0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241246F58(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void *sub_241246FC0(unint64_t a1, void *a2, unsigned __int8 *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_24162B7E8();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v73 = (char *)v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_241631CA8();
  uint64_t v10 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  uint64_t v71 = (char *)v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v61 - v13;
  if (a1 >> 62)
  {
LABEL_34:
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v15 = sub_241633068();
    if (v15) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    if (v15)
    {
LABEL_3:
      uint64_t v70 = v14;
      v61[1] = v4;
      unint64_t v67 = a1 & 0xC000000000000001;
      sub_2411B9D00(0, (unint64_t *)&qword_26B0125F0);
      id ObjCClassFromMetadata = (id)swift_getObjCClassFromMetadata();
      uint64_t v62 = *(void *)((char *)a2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider_settings)
          + 72;
      swift_beginAccess();
      id v68 = (void (**)(char *, uint64_t))(v10 + 8);
      uint64_t v69 = (void (**)(char *, char *, uint64_t))(v10 + 16);
      a2 = (void *)MEMORY[0x263F8EE78];
      uint64_t v4 = 4;
      uint64_t v16 = &selRef_numberOfComponentsInPickerView_;
      unint64_t v64 = a1;
      uint64_t v63 = a3;
      uint64_t v65 = v15;
      while (1)
      {
        uint64_t v10 = v4 - 4;
        if (v67)
        {
          id v17 = (id)MEMORY[0x245620370](v4 - 4, a1);
          uint64_t v18 = v4 - 3;
          if (__OFADD__(v10, 1)) {
            goto LABEL_33;
          }
        }
        else
        {
          id v17 = *(id *)(a1 + 8 * v4);
          uint64_t v18 = v4 - 3;
          if (__OFADD__(v10, 1))
          {
LABEL_33:
            __break(1u);
            goto LABEL_34;
          }
        }
        uint64_t v76 = v18;
        uint64_t v77 = v4;
        long long v78 = a2;
        id v79 = v17;
        id v19 = [v17 v16[363]];
        uint64_t v20 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
        uint64_t v22 = v21;

        uint64_t result = objc_msgSend(ObjCClassFromMetadata, sel_menstrualFlowType);
        if (!result)
        {
          __break(1u);
          return result;
        }
        uint64_t v24 = result;
        id v25 = [result v16[363]];

        uint64_t v26 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
        uint64_t v28 = v27;

        if (v20 == v26 && v22 == v28) {
          break;
        }
        char v30 = sub_241633218();
        swift_bridgeObjectRelease();
        if (v30) {
          goto LABEL_20;
        }
        uint64_t v14 = *(char **)v62;
        if (!*(void *)(*(void *)v62 + 16)) {
          goto LABEL_20;
        }
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        unint64_t v31 = sub_2411B8E04(v20, v22);
        if ((v32 & 1) == 0)
        {
          swift_bridgeObjectRelease_n();
LABEL_20:
          swift_bridgeObjectRelease();
LABEL_21:
          objc_msgSend(v79, sel_code);
          uint64_t v35 = HKMCMenstrualSymptomFromDataTypeCode();
          int v36 = *a3;
          uint64_t v75 = swift_allocObject();
          *(void *)(v75 + 16) = v35;
          uint64_t v37 = v70;
          sub_241631C38();
          unint64_t v38 = *v69;
          uint64_t v39 = v72;
          (*v69)(v71, v37, v72);
          if (qword_26B0131F0 != -1) {
            swift_once();
          }
          id v40 = (id)qword_26B0181A0;
          sub_24162B7D8();
          uint64_t v41 = sub_241631D38();
          uint64_t v43 = v42;
          uint64_t v44 = *v68;
          (*v68)(v37, v39);
          sub_2415990B4();
          uint64_t v80 = v41;
          uint64_t v81 = v43;
          _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
          sub_241631E08();
          sub_241631E08();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v45 = 0;
          uint64_t v46 = 0;
          uint64_t v47 = v80;
          uint64_t v74 = v81;
          if (v36)
          {
            id v48 = v70;
            sub_241631C38();
            uint64_t v49 = v72;
            v38(v71, v48, v72);
            id v50 = (id)qword_26B0181A0;
            sub_24162B7D8();
            uint64_t v45 = sub_241631D38();
            uint64_t v46 = v51;
            v44(v48, v49);
          }
          uint64_t v14 = (char *)sub_2415990B4();
          uint64_t v53 = v52;
          a3 = v63;
          *uint64_t v63 = 0;

          uint64_t v54 = v78;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v54 = sub_24158BDFC(0, v54[2] + 1, 1, v54);
          }
          uint64_t v34 = v65;
          unint64_t v56 = v54[2];
          unint64_t v55 = v54[3];
          uint64_t v57 = v54;
          if (v56 >= v55 >> 1) {
            uint64_t v57 = sub_24158BDFC((void *)(v55 > 1), v56 + 1, 1, v54);
          }
          v57[2] = v56 + 1;
          a2 = v57;
          uint64_t v58 = &v57[12 * v56];
          uint64_t v59 = v74;
          v58[4] = v47;
          v58[5] = v59;
          uint64_t v60 = v75;
          v58[6] = sub_24122C024;
          v58[7] = v60;
          v58[8] = v45;
          v58[9] = v46;
          v58[10] = v14;
          v58[11] = v53;
          *((unsigned char *)v58 + 96) = 0;
          v58[13] = 0;
          v58[14] = 0;
          v58[15] = 0x3FF0000000000000;
          a1 = v64;
          goto LABEL_30;
        }
        char v33 = *(unsigned char *)(*((void *)v14 + 7) + v31);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        if ((v33 & 1) == 0) {
          goto LABEL_21;
        }

        uint64_t v34 = v65;
        a2 = v78;
LABEL_30:
        uint64_t v4 = v77 + 1;
        uint64_t v16 = &selRef_numberOfComponentsInPickerView_;
        if (v76 == v34)
        {
          swift_bridgeObjectRelease();
          return a2;
        }
      }
      swift_bridgeObjectRelease_n();
      goto LABEL_21;
    }
  }
  swift_bridgeObjectRelease();
  return (void *)MEMORY[0x263F8EE78];
}

uint64_t sub_24124765C(unint64_t a1)
{
  uint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_33;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  for (; v2; uint64_t v2 = sub_241633068())
  {
    unint64_t v22 = v1 & 0xC000000000000001;
    uint64_t v3 = (void *)MEMORY[0x263F8EE78];
    uint64_t v4 = 4;
    uint64_t v5 = v1;
    while (1)
    {
      id v7 = v22 ? (id)MEMORY[0x245620370](v4 - 4, v1) : *(id *)(v1 + 8 * v4);
      uint64_t v8 = v7;
      uint64_t v1 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      uint64_t v9 = sub_2412444B4(v7);

      uint64_t v10 = *(void *)(v9 + 16);
      int64_t v11 = v3[2];
      int64_t v12 = v11 + v10;
      if (__OFADD__(v11, v10)) {
        goto LABEL_29;
      }
      uint64_t isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v12 <= v3[3] >> 1)
      {
        if (*(void *)(v9 + 16)) {
          goto LABEL_19;
        }
      }
      else
      {
        if (v11 <= v12) {
          int64_t v14 = v11 + v10;
        }
        else {
          int64_t v14 = v11;
        }
        uint64_t v3 = sub_24158B988(isUniquelyReferenced_nonNull_native, v14, 1, v3);
        if (*(void *)(v9 + 16))
        {
LABEL_19:
          uint64_t v15 = v3[2];
          if ((v3[3] >> 1) - v15 < v10) {
            goto LABEL_31;
          }
          unint64_t v16 = (unint64_t)&v3[5 * v15 + 4];
          if (v9 + 32 < v16 + 40 * v10 && v16 < v9 + 32 + 40 * v10)
          {
            swift_release();
            uint64_t result = sub_2416330E8();
            __break(1u);
            return result;
          }
          sub_24122BF2C();
          swift_arrayInitWithCopy();
          if (v10)
          {
            uint64_t v18 = v3[2];
            BOOL v19 = __OFADD__(v18, v10);
            uint64_t v20 = v18 + v10;
            if (v19) {
              goto LABEL_32;
            }
            v3[2] = v20;
          }
          goto LABEL_5;
        }
      }
      if (v10) {
        goto LABEL_30;
      }
LABEL_5:
      swift_bridgeObjectRelease();
      ++v4;
      BOOL v6 = v1 == v2;
      uint64_t v1 = v5;
      if (v6) {
        goto LABEL_35;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  }
  uint64_t v3 = (void *)MEMORY[0x263F8EE78];
LABEL_35:
  swift_bridgeObjectRelease();
  return (uint64_t)v3;
}

void sub_2412478B0(void *a1@<X0>, double *a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  sub_2411B6854(a1, v4);
  *a2 = (*(double (**)(uint64_t))(*(void *)(v3 + 8) + 48))(v4);
}

uint64_t sub_241247908(double *a1, uint64_t a2)
{
  double v2 = *a1;
  uint64_t v3 = *(void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 32);
  sub_241192BB0(a2, v3);
  return (*(uint64_t (**)(uint64_t, double))(*(void *)(v4 + 8) + 56))(v3, v2);
}

uint64_t sub_241247964()
{
  return swift_setAtWritableKeyPath();
}

void sub_24124799C(uint64_t a1)
{
}

uint64_t sub_2412479D0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2412479E0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2412479F0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 112, 7);
}

uint64_t sub_241247A40()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241247A50()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241247A60()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241247A70()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241247A80()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241247A90()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241247AA0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241247AB0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241247AC0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241247AD0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241247AE0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241247AF0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241247B00()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241247B10()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241247B20()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 144, 7);
}

uint64_t sub_241247B70()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241247B80()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241247B90()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241247BA0()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241247BD8()
{
  return sub_241243CF0();
}

uint64_t sub_241247BE0()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_241247C18()
{
  if (!qword_268CFB6F8)
  {
    unint64_t v0 = sub_24162FAF8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFB6F8);
    }
  }
}

uint64_t sub_241247C84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241247CCC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24162EFA8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2416314D8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  int64_t v11 = (uint64_t *)((char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2411B9D00(0, (unint64_t *)&qword_26B0130B0);
  *int64_t v11 = sub_2416325A8();
  (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F8F0E0], v8);
  char v12 = sub_241631508();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if (v12)
  {
    sub_24162EF48();
    id v14 = a1;
    uint64_t v15 = sub_24162EF98();
    os_log_type_t v16 = sub_2416322E8();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v32 = v4;
      uint64_t v19 = v18;
      v34[0] = v18;
      *(_DWORD *)uint64_t v17 = 136446466;
      uint64_t v31 = v5;
      uint64_t v20 = sub_2416333E8();
      uint64_t v33 = sub_2411B6898(v20, v21, v34);
      sub_241632C28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2082;
      uint64_t v33 = (uint64_t)v14;
      sub_2411B9D00(0, (unint64_t *)&qword_26B012340);
      id v22 = v14;
      uint64_t v23 = sub_241631D78();
      uint64_t v33 = sub_2411B6898(v23, v24, v34);
      sub_241632C28();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v15, v16, "[%{public}s] Received updated analysis: %{public}s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245621640](v19, -1, -1);
      MEMORY[0x245621640](v17, -1, -1);

      (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v32);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    sub_2415B6CA8(objc_msgSend(v14, sel_recentBasalBodyTemperature), (uint64_t)*(id *)(v2 + 72), (uint64_t)v34);
    sub_241242D50((uint64_t)v34);
    id v25 = objc_msgSend(v14, sel_cycles);
    if (v25)
    {
      uint64_t v26 = v25;
      sub_2411B9D00(0, (unint64_t *)&qword_26B00E610);
      unint64_t v27 = sub_241631F28();

      uint64_t v28 = sub_2414CC398(v27);
    }
    else
    {
      uint64_t v28 = MEMORY[0x263F8EE78];
    }
    unint64_t v29 = *(void *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider_cycles);
    *(void *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24CycleChartsModelProvider_cycles) = v28;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    unsigned __int8 v30 = sub_24149C774(v29, v28);
    swift_bridgeObjectRelease();
    if ((v30 & 1) == 0) {
      sub_24124280C();
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for MenstrualCyclesOnboardingTileActionHandler()
{
  uint64_t result = qword_268CFB708;
  if (!qword_268CFB708) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2412481A4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2412481E4(char *a1)
{
  uint64_t v3 = sub_24162DF98();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v15 - v8;
  uint64_t v10 = (char *)objc_allocWithZone(v1);
  int64_t v11 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v11(v9, a1, v3);
  *(void *)&v10[qword_268CFEE10] = 0;
  *(void *)&v10[qword_268CFEE18] = 1;
  v11(v6, v9, v3);
  uint64_t v12 = sub_24162E258();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v4 + 8);
  v13(v9, v3);
  v13(a1, v3);
  return v12;
}

id sub_241248354()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MenstrualCyclesOnboardingTileActionHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24124838C()
{
  return type metadata accessor for MenstrualCyclesOnboardingTileActionHandler();
}

void sub_241248394()
{
  uint64_t v1 = v0;
  void v59[5] = *(id *)MEMORY[0x263EF8340];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_24162B718();
  uint64_t v56 = *(void *)(v3 - 8);
  uint64_t v57 = v3;
  MEMORY[0x270FA5388](v3);
  unint64_t v55 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24162DF98();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24162EFA8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v54 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  id v14 = (char *)v49 - v13;
  sub_24162EF48();
  uint64_t v15 = sub_24162EF98();
  os_log_type_t v16 = sub_2416322E8();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v53 = ObjectType;
  if (v17)
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v50 = v6;
    uint64_t v19 = (uint8_t *)v18;
    uint64_t v20 = (void *)swift_slowAlloc();
    uint64_t v51 = v5;
    unint64_t v21 = v20;
    v59[0] = v20;
    uint64_t v52 = v1;
    *(_DWORD *)uint64_t v19 = 136446210;
    v49[1] = v19 + 4;
    uint64_t v22 = sub_2416333E8();
    uint64_t v58 = sub_2411B6898(v22, v23, (uint64_t *)v59);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v15, v16, "[%{public}s] Handling dismissal", v19, 0xCu);
    swift_arrayDestroy();
    unint64_t v24 = v21;
    uint64_t v5 = v51;
    MEMORY[0x245621640](v24, -1, -1);
    id v25 = v19;
    uint64_t v6 = v50;
    MEMORY[0x245621640](v25, -1, -1);
  }

  uint64_t v26 = *(void (**)(char *, uint64_t))(v10 + 8);
  v26(v14, v9);
  _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  sub_24162E248();
  sub_24162DF68();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_2411B6854(v59, (uint64_t)v59[3]);
  unint64_t v27 = (void *)sub_24162DF18();
  id v28 = objc_allocWithZone(MEMORY[0x263F0A470]);
  unint64_t v29 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  id v30 = objc_msgSend(v28, sel_initWithCategory_domainName_healthStore_, 4, v29, v27);

  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v59);
  uint64_t v31 = v55;
  sub_24162B6B8();
  uint64_t v32 = (void *)sub_24162B668();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v31, v57);
  v59[0] = 0;
  LODWORD(v31) = objc_msgSend(v30, sel_hkmc_setOnboardingTileLastDismissedDate_error_, v32, v59);

  id v33 = v59[0];
  if (v31)
  {
  }
  else
  {
    uint64_t v34 = v33;
    uint64_t v56 = v10;
    uint64_t v57 = v9;
    uint64_t v35 = (void *)sub_24162B348();

    swift_willThrow();
    int v36 = v54;
    sub_24162EF48();
    id v37 = v35;
    id v38 = v35;
    uint64_t v39 = sub_24162EF98();
    os_log_type_t v40 = sub_2416322C8();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v42 = (void *)swift_slowAlloc();
      v59[0] = v42;
      *(_DWORD *)uint64_t v41 = 136446466;
      uint64_t v43 = sub_2416333E8();
      uint64_t v58 = sub_2411B6898(v43, v44, (uint64_t *)v59);
      sub_241632C28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2080;
      uint64_t v58 = (uint64_t)v35;
      id v45 = v35;
      sub_2411CE834();
      uint64_t v46 = sub_241631D48();
      uint64_t v58 = sub_2411B6898(v46, v47, (uint64_t *)v59);
      sub_241632C28();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24118E000, v39, v40, "[%{public}s] Error setting dismissal date: %s", (uint8_t *)v41, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245621640](v42, -1, -1);
      MEMORY[0x245621640](v41, -1, -1);

      id v48 = v54;
    }
    else
    {

      id v48 = v36;
    }
    v26(v48, v57);
  }
}

uint64_t *sub_241248A18(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24162B718();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    uint64_t v10 = a3[5];
    uint64_t v11 = a3[6];
    uint64_t v12 = (uint64_t *)((char *)a1 + v10);
    uint64_t v13 = (uint64_t *)((char *)a2 + v10);
    uint64_t v14 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v14;
    __dst = (char *)a1 + v11;
    uint64_t v15 = (char *)a2 + v11;
    os_log_type_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    if (v16(v15, 1, v7))
    {
      sub_2411C85F4(0);
      memcpy(__dst, v15, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)__dst, (uint64_t *)v15, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(__dst, 0, 1, v7);
    }
    uint64_t v19 = a3[7];
    uint64_t v20 = *(void **)((char *)a2 + v19);
    *(uint64_t *)((char *)a1 + v19) = (uint64_t)v20;
    id v21 = v20;
  }
  return a1;
}

void sub_241248BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24162B718();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4)) {
    v6(v7, v4);
  }
  uint64_t v8 = *(void **)(a1 + *(int *)(a2 + 28));
}

char *sub_241248CF0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24162B718();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  uint64_t v13 = *((void *)v12 + 1);
  *(void *)uint64_t v11 = *(void *)v12;
  *((void *)v11 + 1) = v13;
  __dst = &a1[v10];
  uint64_t v14 = &a2[v10];
  uint64_t v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  if (v15(v14, 1, v6))
  {
    sub_2411C85F4(0);
    memcpy(__dst, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v8(__dst, v14, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(__dst, 0, 1, v6);
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = *(void **)&a2[v17];
  *(void *)&a1[v17] = v18;
  id v19 = v18;
  return a1;
}

char *sub_241248E70(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24162B718();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  *(void *)uint64_t v10 = *(void *)v11;
  *((void *)v10 + 1) = *((void *)v11 + 1);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  unint64_t v23 = a2;
  uint64_t v24 = a3;
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  LODWORD(a2) = v15(&a1[v12], 1, v6);
  int v16 = v15(v14, 1, v6);
  if (!a2)
  {
    if (!v16)
    {
      v8(v13, v14, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_2411C85F4(0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
LABEL_7:
  uint64_t v18 = *(int *)(v24 + 28);
  id v19 = *(void **)&v23[v18];
  uint64_t v20 = *(void **)&a1[v18];
  *(void *)&a1[v18] = v19;
  id v21 = v19;

  return a1;
}

char *sub_241249070(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24162B718();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    sub_2411C85F4(0);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

char *sub_2412491D0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24162B718();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = (uint64_t *)&a2[v9];
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  *(void *)uint64_t v10 = v13;
  *((void *)v10 + 1) = v12;
  swift_bridgeObjectRelease();
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = &a1[v14];
  int v16 = &a2[v14];
  uint64_t v17 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v18 = v17(&a1[v14], 1, v6);
  int v19 = v17(v16, 1, v6);
  if (!v18)
  {
    if (!v19)
    {
      v8(v15, v16, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    sub_2411C85F4(0);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v16, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
LABEL_7:
  uint64_t v21 = *(int *)(v25 + 28);
  uint64_t v22 = *(void **)&a1[v21];
  *(void *)&a1[v21] = *(void *)&v24[v21];

  return a1;
}

uint64_t sub_2412493BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2412493D0);
}

uint64_t sub_2412493D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24162B718();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    sub_2411C85F4(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_241249500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241249514);
}

uint64_t sub_241249514(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24162B718();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    sub_2411C85F4(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for CycleChartPDFPregnancyFactor()
{
  uint64_t result = qword_268CFB718;
  if (!qword_268CFB718) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_241249690()
{
  sub_24162B718();
  if (v0 <= 0x3F)
  {
    sub_2411C85F4(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_24124976C()
{
  uint64_t v1 = sub_24162B4B8();
  uint64_t v18 = *(void *)(v1 - 8);
  uint64_t v19 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24162B4E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24162B718();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C85F4(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CycleChartPDFPregnancyFactor();
  sub_2411ED2F0(v0 + *(int *)(v15 + 24), (uint64_t)v14);
  uint64_t v16 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    sub_24162B4D8();
    sub_24162B4A8();
    uint64_t v16 = sub_24162B6D8();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v3, v19);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return v16;
}

uint64_t sub_241249A38()
{
  uint64_t v0 = sub_24162B718();
  uint64_t v28 = *(void *)(v0 - 8);
  uint64_t v29 = v0;
  MEMORY[0x270FA5388](v0);
  unint64_t v27 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_24162B7E8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v34 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_241631CA8();
  uint64_t v32 = *(void *)(v4 - 8);
  uint64_t v33 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v31 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  id v30 = (char *)&v25 - v7;
  uint64_t v35 = sub_24162B4B8();
  uint64_t v8 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24162B4E8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_241631C88();
  MEMORY[0x270FA5388](v15 - 8);
  sub_24124976C();
  if (v16)
  {
    sub_241631C78();
    sub_241631C68();
    sub_24162B4D8();
    sub_24162B4A8();
    sub_24162B6D8();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v35);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    sub_241631C58();
    swift_bridgeObjectRelease();
    sub_241631C68();
  }
  else
  {
    sub_241631C78();
    sub_241631C68();
    sub_24162B4D8();
    sub_24162B4A8();
    sub_24162B6D8();
    uint64_t v26 = *(void (**)(char *, uint64_t))(v8 + 8);
    v26(v10, v35);
    uint64_t v17 = *(void (**)(char *, uint64_t))(v12 + 8);
    v17(v14, v11);
    sub_241631C58();
    swift_bridgeObjectRelease();
    sub_241631C68();
    sub_2411B9D00(0, (unint64_t *)&qword_268CFA790);
    type metadata accessor for CycleChartPDFPregnancyFactor();
    uint64_t v18 = v27;
    sub_241632778();
    sub_24162B4D8();
    sub_24162B4A8();
    sub_24162B6D8();
    v26(v10, v35);
    v17(v14, v11);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v18, v29);
  }
  sub_241631C58();
  swift_bridgeObjectRelease();
  sub_241631C68();
  uint64_t v19 = v30;
  sub_241631C98();
  uint64_t v20 = v32;
  uint64_t v21 = v33;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v31, v19, v33);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v22 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v23 = sub_241631D38();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v19, v21);
  return v23;
}

void sub_24124A074()
{
  uint64_t v1 = sub_24162B718();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C85F4(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24124ADE0(&qword_268CFB610, MEMORY[0x263F07490]);
  sub_241631B78();
  uint64_t v8 = type metadata accessor for CycleChartPDFPregnancyFactor();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631DC8();
  swift_bridgeObjectRelease();
  sub_2411ED2F0(v0 + *(int *)(v8 + 24), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_241633328();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_241633328();
    sub_241631B78();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  id v9 = *(id *)(v0 + *(int *)(v8 + 28));
  sub_2416329C8();
}

uint64_t sub_24124A2B4()
{
  return sub_241633358();
}

uint64_t sub_24124A2F8()
{
  return sub_241633358();
}

uint64_t sub_24124A338()
{
  return sub_24124ADE0(&qword_268CFB728, (void (*)(uint64_t))type metadata accessor for CycleChartPDFPregnancyFactor);
}

uint64_t sub_24124A380@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v3 = sub_24162B718();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v55 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v54 = (char *)&v51 - v7;
  sub_2411C85F4(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24162BA68();
  uint64_t v53 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v52 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (int *)type metadata accessor for CycleChartPDFPregnancyFactor();
  uint64_t v58 = *((void *)v13 - 1);
  *(void *)&double v14 = MEMORY[0x270FA5388](v13).n128_u64[0];
  uint64_t v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = objc_msgSend(a1, sel_categoryType, v14);
  sub_2411B9D00(0, (unint64_t *)&qword_26B0125F0);
  id v18 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_pregnancyType);
  uint64_t v19 = v18;
  if (!v17)
  {
    if (!v18) {
      goto LABEL_6;
    }
LABEL_9:

    a1 = v19;
LABEL_10:

    uint64_t v35 = v57;
    int v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v58 + 56);
    return v36(v35, 1, 1, v13);
  }
  if (!v18)
  {
    uint64_t v19 = v17;
    goto LABEL_9;
  }
  id v20 = v17;
  uint64_t v56 = v16;
  uint64_t v21 = v10;
  id v22 = v13;
  uint64_t v23 = v4;
  uint64_t v24 = v3;
  uint64_t v25 = v11;
  id v26 = v20;
  char v27 = sub_2416329B8();

  uint64_t v11 = v25;
  uint64_t v3 = v24;
  uint64_t v4 = v23;
  uint64_t v13 = v22;
  uint64_t v10 = v21;
  uint64_t v16 = v56;

  if ((v27 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_6:
  *(void *)&v16[v13[7]] = a1;
  id v28 = a1;
  id v29 = objc_msgSend(v28, sel_startDate);
  sub_24162B6A8();

  id v30 = objc_msgSend(v28, sel__timeZoneName);
  if (v30)
  {
    uint64_t v31 = v30;
    uint64_t v32 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
    uint64_t v34 = v33;
  }
  else
  {
    id v38 = v52;
    sub_24162BA58();
    uint64_t v32 = sub_24162BA38();
    uint64_t v34 = v39;
    (*(void (**)(char *, uint64_t))(v53 + 8))(v38, v11);
  }
  uint64_t v40 = v13[5];
  uint64_t v56 = v16;
  uint64_t v41 = (uint64_t *)&v16[v40];
  *uint64_t v41 = v32;
  v41[1] = v34;
  id v42 = objc_msgSend(v28, sel_endDate);
  uint64_t v43 = v54;
  sub_24162B6A8();

  unint64_t v44 = v55;
  sub_24162B5E8();
  LOBYTE(v42) = sub_24162B688();
  id v45 = *(void (**)(char *, uint64_t))(v4 + 8);
  v45(v44, v3);
  v45(v43, v3);
  if (v42)
  {
    id v46 = objc_msgSend(v28, sel_endDate);
    sub_24162B6A8();

    uint64_t v47 = 0;
  }
  else
  {
    uint64_t v47 = 1;
  }

  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v10, v47, 1, v3);
  uint64_t v48 = (uint64_t)v56;
  sub_24124AE28((uint64_t)v10, (uint64_t)&v56[v13[6]], (uint64_t (*)(void))sub_2411C85F4);
  uint64_t v49 = v48;
  uint64_t v50 = v57;
  sub_24124AE28(v49, v57, (uint64_t (*)(void))type metadata accessor for CycleChartPDFPregnancyFactor);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(v58 + 56))(v50, 0, 1, v13);
}

uint64_t sub_24124A8B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24162B718();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24124AD1C();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411C85F4(0);
  MEMORY[0x270FA5388](v12 - 8);
  double v14 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  id v17 = (char *)v36 - v16;
  MEMORY[0x270FA5388](v18);
  id v20 = (char *)v36 - v19;
  if ((sub_24162B698() & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v37 = type metadata accessor for CycleChartPDFPregnancyFactor();
  uint64_t v21 = *(int *)(v37 + 20);
  uint64_t v22 = *(void *)(a1 + v21);
  uint64_t v23 = *(void *)(a1 + v21 + 8);
  uint64_t v24 = (void *)(a2 + v21);
  BOOL v25 = v22 == *v24 && v23 == v24[1];
  if (v25 || (v26 = sub_241633218(), char v27 = 0, (v26 & 1) != 0))
  {
    v36[0] = v7;
    v36[1] = a1;
    uint64_t v28 = v37;
    sub_2411ED2F0(a1 + *(int *)(v37 + 24), (uint64_t)v20);
    uint64_t v29 = *(int *)(v28 + 24);
    void v36[2] = a2;
    sub_2411ED2F0(a2 + v29, (uint64_t)v17);
    uint64_t v30 = (uint64_t)&v11[*(int *)(v9 + 48)];
    sub_2411ED2F0((uint64_t)v20, (uint64_t)v11);
    sub_2411ED2F0((uint64_t)v17, v30);
    uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v31((uint64_t)v11, 1, v4) == 1)
    {
      sub_24124AD80((uint64_t)v17, (uint64_t (*)(void))sub_2411C85F4);
      sub_24124AD80((uint64_t)v20, (uint64_t (*)(void))sub_2411C85F4);
      if (v31(v30, 1, v4) == 1)
      {
        sub_24124AD80((uint64_t)v11, (uint64_t (*)(void))sub_2411C85F4);
LABEL_16:
        sub_2411B9D00(0, (unint64_t *)&qword_26B012200);
        char v27 = sub_2416329B8();
        return v27 & 1;
      }
    }
    else
    {
      sub_2411ED2F0((uint64_t)v11, (uint64_t)v14);
      if (v31(v30, 1, v4) != 1)
      {
        uint64_t v33 = v36[0];
        (*(void (**)(void, uint64_t, uint64_t))(v5 + 32))(v36[0], v30, v4);
        sub_24124ADE0((unint64_t *)&qword_268CFAD00, MEMORY[0x263F07490]);
        char v34 = sub_241631C28();
        uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
        v35(v33, v4);
        sub_24124AD80((uint64_t)v17, (uint64_t (*)(void))sub_2411C85F4);
        sub_24124AD80((uint64_t)v20, (uint64_t (*)(void))sub_2411C85F4);
        v35((uint64_t)v14, v4);
        sub_24124AD80((uint64_t)v11, (uint64_t (*)(void))sub_2411C85F4);
        if (v34) {
          goto LABEL_16;
        }
        goto LABEL_13;
      }
      sub_24124AD80((uint64_t)v17, (uint64_t (*)(void))sub_2411C85F4);
      sub_24124AD80((uint64_t)v20, (uint64_t (*)(void))sub_2411C85F4);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
    }
    sub_24124AD80((uint64_t)v11, (uint64_t (*)(void))sub_24124AD1C);
LABEL_13:
    char v27 = 0;
  }
  return v27 & 1;
}